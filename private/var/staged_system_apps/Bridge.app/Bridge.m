void sub_1000056E0(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t vars8;

  v5 = [a2 setByAddingObjectsFromSet:*(void *)(a1 + 32)];
  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) setNotificationCategories:v5];
  v3 = *(void *)(*(void *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = 0;
}

id sub_100005814()
{
  id result = sub_100008380();
  if (result)
  {
    v1 = +[NSUserDefaults standardUserDefaults];
    id v2 = [v1 BOOLForKey:@"SkipSetupFlow"];

    return v2;
  }
  return result;
}

void sub_100005994(id a1)
{
  uint64_t v4 = 0;
  uint64_t v6 = 0;
  v7 = &v6;
  uint64_t v8 = 0x2020000000;
  v1 = (void (*)(uint64_t *))off_10029AF88;
  v9 = off_10029AF88;
  if (!off_10029AF88)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_100005BB0;
    v5[3] = &unk_1002436A8;
    v5[4] = &v6;
    sub_100005BB0((uint64_t)v5);
    v1 = (void (*)(uint64_t *))v7[3];
  }
  _Block_object_dispose(&v6, 8);
  if (!v1)
  {
    v3 = (_Unwind_Exception *)sub_100171A7C();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v3);
  }
  id v2 = v1(&v4);
  byte_10029AF38 = [v2 isEqualToString:@"FactoryActivated"];
}

void *sub_100005BB0(uint64_t a1)
{
  v5[0] = 0;
  if (!qword_10029AF90)
  {
    v5[1] = _NSConcreteStackBlock;
    v5[2] = 3221225472;
    v5[3] = sub_100034318;
    v5[4] = &unk_1002436E0;
    void v5[5] = v5;
    long long v6 = off_100244278;
    uint64_t v7 = 0;
    qword_10029AF90 = _sl_dlopen();
    v3 = (void *)v5[0];
    id v2 = (void *)qword_10029AF90;
    if (qword_10029AF90)
    {
      if (!v5[0]) {
        goto LABEL_5;
      }
    }
    else
    {
      v3 = (void *)abort_report_np();
    }
    free(v3);
    goto LABEL_5;
  }
  id v2 = (void *)qword_10029AF90;
LABEL_5:
  id result = dlsym(v2, "MAEGetActivationStateWithError");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  off_10029AF88 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_100005D50(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 loadSystemAppSpecifiers:*(void *)(a1 + 40)];
}

void sub_100005DA4(id a1)
{
  id v1 = (id)PSBlankIconImage();
}

id sub_100005DC4()
{
  v0 = +[NRPairedDeviceRegistry sharedInstance];
  id v1 = [v0 getAllDevicesWithArchivedAltAccountDevicesMatching:&stru_1002440E8];

  return v1;
}

id sub_100005E20()
{
  v0 = -[COSTinkerHealthSharingSetupDelegate tinkerDevice]_0();
  if (v0)
  {
    id v1 = [objc_alloc((Class)NSUUID) initWithUUIDString:@"C5BAD2E8-BB79-4E9E-8A0D-757C60D31053"];
    id v2 = [v0 supportsCapability:v1];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

Class sub_100005E94(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_10029B1C0)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = sub_1000BB0BC;
    v4[4] = &unk_1002436E0;
    v4[5] = v4;
    long long v5 = off_1002464E8;
    uint64_t v6 = 0;
    qword_10029B1C0 = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!qword_10029B1C0)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("NBManager");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    id v2 = (void *)sub_100173D64();
LABEL_8:
    free(v2);
  }
  qword_10029B1B8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1000062B8(id a1, BOOL a2, NSError *a3)
{
  uint64_t v4 = a3;
  if (!a2)
  {
    long long v5 = pbb_bridge_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = 138412290;
      uint64_t v7 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Authorization for user notifications not granted: %@", (uint8_t *)&v6, 0xCu);
    }
  }
}

id sub_10000636C()
{
  uint64_t v4 = 0;
  long long v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)qword_10029B028;
  uint64_t v7 = qword_10029B028;
  if (!qword_10029B028)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100015B58;
    v3[3] = &unk_1002436A8;
    v3[4] = &v4;
    sub_100015B58((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_100006438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100006450()
{
  uint64_t v4 = 0;
  long long v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)qword_10029B0D0;
  uint64_t v7 = qword_10029B0D0;
  if (!qword_10029B0D0)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100015BB0;
    v3[3] = &unk_1002436A8;
    v3[4] = &v4;
    sub_100015BB0((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_10000651C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100006534()
{
  uint64_t v4 = 0;
  long long v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)qword_10029B130;
  uint64_t v7 = qword_10029B130;
  if (!qword_10029B130)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100015C08;
    v3[3] = &unk_1002436A8;
    v3[4] = &v4;
    sub_100015C08((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_100006600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100006618(uint64_t a1)
{
  v5[0] = &off_10025C130;
  v5[1] = &off_10025C160;
  v6[0] = &off_10025C148;
  v6[1] = &off_10025C178;
  v5[2] = &off_10025C190;
  v6[2] = &off_10025C1A8;
  uint64_t v2 = +[NSDictionary dictionaryWithObjects:v6 forKeys:v5 count:3];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(v3 + 88);
  *(void *)(v3 + 88) = v2;
}

void sub_1000067C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t start(int a1, char **a2)
{
  long long v5 = (objc_class *)objc_opt_class();
  NSStringFromClass(v5);
  uint64_t v6 = (NSString *)objc_claimAutoreleasedReturnValue();
  uint64_t v7 = UIApplicationMain(a1, a2, v6, v6);

  return v7;
}

void sub_10000707C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = pbb_bridge_log();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v5)
    {
      int v8 = 138543362;
      id v9 = v3;
      uint64_t v6 = "Failed to set badge with error: %{public}@";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, v6, (uint8_t *)&v8, 0xCu);
    }
  }
  else if (v5)
  {
    uint64_t v7 = *(void **)(a1 + 32);
    int v8 = 134217984;
    id v9 = v7;
    uint64_t v6 = "Did set badge count to %lu";
    goto LABEL_6;
  }
}

void sub_1000074F0(uint64_t a1)
{
  uint64_t v2 = +[COSCoreSpotlightIndexer sharedInstance];
  id v3 = +[NSURL URLWithString:@"/System/Library/BridgeManifests/"];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10007AB78;
  v4[3] = &unk_1002439E0;
  objc_copyWeak(&v5, (id *)(a1 + 32));
  [v2 indexManifestBundlesAtURL:v3 withCompletion:v4];

  objc_destroyWeak(&v5);
}

void sub_1000075C4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100007A70(uint64_t a1, unsigned int a2, void *a3)
{
  id v4 = a3;
  [v4 setIsNetworkReachable:(a2 >> 1) & 1];
  [v4 setIsConnectedOverWifi:(a2 & 0x40000) == 0];
  id v5 = pbb_bridge_log();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 67109376;
    v7[1] = [v4 isNetworkReachable];
    __int16 v8 = 1024;
    unsigned int v9 = [v4 isConnectedOverWifi];
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Reachability Updated ~ Network reachability: %{BOOL}d isWifi: %{BOOL}d", (uint8_t *)v7, 0xEu);
  }

  uint64_t v6 = +[NSNotificationCenter defaultCenter];
  [v6 postNotificationName:@"COSReachabilityMonitorChangedNotification" object:0];
}

void sub_100007E74(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(unsigned char *)(*(void *)(a1 + 32) + 12) = 1;
  id v4 = [v3 count];
  uint64_t v5 = *(void *)(a1 + 32);
  if (v4)
  {
    uint64_t v6 = [*(id *)(v5 + 64) arrayByAddingObjectsFromArray:v3];

    uint64_t v7 = *(void **)(a1 + 32);
    __int16 v8 = [v7 removeIncompatibleBackups:v6];
    uint64_t v9 = [v7 sortBackups:v8];
    uint64_t v10 = *(void *)(a1 + 32);
    v11 = *(void **)(v10 + 64);
    *(void *)(v10 + 64) = v9;

    uint64_t v5 = *(void *)(a1 + 32);
    if (*(void *)(v5 + 64))
    {
      *(unsigned char *)(v5 + 14) = 1;
      uint64_t v5 = *(void *)(a1 + 32);
    }
  }
  else
  {
    uint64_t v6 = v3;
  }
  id WeakRetained = objc_loadWeakRetained((id *)(v5 + 48));

  v13 = pbb_setupflow_log();
  BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);
  if (WeakRetained)
  {
    if (v14)
    {
      int v15 = *(unsigned __int8 *)(*(void *)(a1 + 32) + 14);
      v18[0] = 67109120;
      v18[1] = v15;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "iCloud Backups changed, calling delegate with found: %d", (uint8_t *)v18, 8u);
    }

    v16 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 48));
    v13 = v16;
    if (*(unsigned char *)(*(void *)(a1 + 32) + 14)) {
      uint64_t v17 = 1;
    }
    else {
      uint64_t v17 = 2;
    }
    [v16 backupsChanged:v17];
  }
  else if (v14)
  {
    LOWORD(v18[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "iCloud Backups changed but no delegate", (uint8_t *)v18, 2u);
  }
}

void sub_100008030(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = pbb_setupflow_log();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 138412290;
    id v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "got a transition, layout is: %@", (uint8_t *)&v7, 0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setIPhoneMirroringEnabled:v4 != 0];
}

void sub_100008284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100008380()
{
  v0 = +[UIDevice currentDevice];
  id v1 = [v0 sf_isInternalInstall];

  return v1;
}

void sub_100009740(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_100009EAC(id a1)
{
  uint64_t v1 = pbb_bridge_log();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "NRPairedDeviceRegistry retriggerUnpairInfoDialog started", buf, 2u);
  }

  uint64_t v2 = +[NRPairedDeviceRegistry sharedInstance];
  [v2 retriggerUnpairInfoDialog];

  id v3 = pbb_bridge_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "NRPairedDeviceRegistry retriggerUnpairInfoDialog completed", v4, 2u);
  }
}

uint64_t sub_10000A2A4(void *a1, const __CFString **a2)
{
  id v3 = a1;
  id v4 = +[NRPairedDeviceRegistry sharedInstance];
  unsigned int v5 = [v4 canPairAnotherClassic];

  uint64_t v6 = +[NRPairedDeviceRegistry sharedInstance];
  unsigned int v7 = [v6 canPairAnotherTinker];

  if (!PBShouldOfferBetterTogetherFlow())
  {
    int v10 = 0;
    int IsFrozen = 0;
    if (!v3) {
      goto LABEL_33;
    }
LABEL_7:
    if ([v3 BOOLValue]) {
      uint64_t v11 = v7;
    }
    else {
      uint64_t v11 = v5;
    }
    if (!a2) {
      goto LABEL_43;
    }
    goto LABEL_34;
  }
  int IsFrozen = PBStoreDemoContentIsFrozen();
  if (IsFrozen)
  {
    uint64_t v9 = pbb_setupflow_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Denying Pairing Flow because Retail Device has Content Frozen.", buf, 2u);
    }
    unsigned int v5 = 0;
    goto LABEL_27;
  }
  uint64_t v9 = sub_10003360C();
  if (![v9 count])
  {
LABEL_27:
    int v10 = 0;
    goto LABEL_32;
  }
  v31 = a2;
  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  uint64_t v9 = v9;
  id v12 = [v9 countByEnumeratingWithState:&v32 objects:v46 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v33;
    do
    {
      for (i = 0; i != v13; i = (char *)i + 1)
      {
        if (*(void *)v33 != v14) {
          objc_enumerationMutation(v9);
        }
        v16 = *(void **)(*((void *)&v32 + 1) + 8 * i);
        uint64_t v17 = pbb_setupflow_log();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          v18 = [v16 _bridgeConciseDebugDescription];
          *(_DWORD *)buf = 138412290;
          v37 = v18;
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "Found Device: %@", buf, 0xCu);
        }
      }
      id v13 = [v9 countByEnumeratingWithState:&v32 objects:v46 count:16];
    }
    while (v13);
  }

  if (sub_100008380()
    && (+[NSUserDefaults standardUserDefaults],
        v19 = objc_claimAutoreleasedReturnValue(),
        unsigned int v20 = [v19 BOOLForKey:@"IgnoreBetterTogetherDeviceLimit"],
        v19,
        v20))
  {
    v21 = pbb_setupflow_log();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      sub_100171BE0(v21);
    }
    int v10 = 0;
  }
  else
  {
    v21 = pbb_setupflow_log();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "Denying Pairing Flow because Retail Phone already has a Watch paired.", buf, 2u);
    }
    unsigned int v5 = 0;
    int v10 = 1;
  }
  a2 = v31;
  int IsFrozen = 0;

LABEL_32:
  unsigned int v7 = 0;
  if (v3) {
    goto LABEL_7;
  }
LABEL_33:
  uint64_t v11 = v5 | v7;
  if (!a2) {
    goto LABEL_43;
  }
LABEL_34:
  if (v11)
  {
    CFStringRef v22 = 0;
  }
  else
  {
    uint64_t v23 = 3;
    if (!v10) {
      uint64_t v23 = 1;
    }
    if (IsFrozen) {
      uint64_t v24 = 2;
    }
    else {
      uint64_t v24 = v23;
    }
    CFStringRef v22 = +[NSError errorWithDomain:@"com.apple.Bridge-QuickSwitchPairing" code:v24 userInfo:0];
  }
  *a2 = v22;
LABEL_43:
  v25 = pbb_bridge_log();
  if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
  {
    v26 = "NO";
    if (v5) {
      v27 = "YES";
    }
    else {
      v27 = "NO";
    }
    if (v7) {
      v28 = "YES";
    }
    else {
      v28 = "NO";
    }
    if (v11) {
      v26 = "YES";
    }
    if (a2) {
      CFStringRef v29 = *a2;
    }
    else {
      CFStringRef v29 = @"no errorPtr";
    }
    *(_DWORD *)buf = 136316162;
    v37 = v27;
    __int16 v38 = 2080;
    v39 = v28;
    __int16 v40 = 2112;
    id v41 = v3;
    __int16 v42 = 2080;
    v43 = v26;
    __int16 v44 = 2112;
    CFStringRef v45 = v29;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "Can pair standard: %s Can pair tinker: %s isTinker: %@ Can pair: %s Error: %@", buf, 0x34u);
  }

  return v11;
}

void sub_10000AA2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000ACF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000AE24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10000AFA8(void *a1)
{
  id v1 = a1;
  id v4 = (id)objc_opt_new();
  uint64_t v2 = +[UIColor _barStyleBlackHairlineShadowColor];
  [v4 setShadowColor:v2];

  [v1 setStandardAppearance:v4];
  [v1 _accessibilitySetInterfaceStyleIntent:1];
  id v3 = BPSBridgeTintColor();
  [v1 setTintColor:v3];
}

void sub_10000B058(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  id v8 = pbb_bridge_log();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412546;
    id v13 = v6;
    __int16 v14 = 2112;
    id v15 = v7;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "COSGlobalAlertPresentationCoordinator: currentSyncSession: %@ error: %@", buf, 0x16u);
  }

  if (!v7)
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_1000CDDF4;
    v9[3] = &unk_100243D28;
    objc_copyWeak(&v11, (id *)(a1 + 32));
    id v10 = v6;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v9);

    objc_destroyWeak(&v11);
  }
}

void sub_10000BA60(uint64_t a1)
{
  if ([*(id *)(a1 + 32) count])
  {
    uint64_t v2 = +[NSMutableDictionary dictionary];
    [v2 setObject:*(void *)(a1 + 32) forKey:@"items"];
    id v3 = [v2 objectForKey:@"title"];
    id v4 = [*(id *)(a1 + 40) bundle];
    unsigned int v5 = SpecifiersFromPlist();

    id v6 = [v5 sortedArrayUsingComparator:&stru_100244BF0];
    id v7 = [v6 mutableCopy];

    id v8 = v7;
    uint64_t v9 = *(void **)(a1 + 40);
    id v10 = [v9 systemAppSpecifiers];
    LOBYTE(v9) = [v9 _newSystemAppSpecifiers:v8 sameAs:v10];

    if (v9)
    {
      id v11 = pbb_bridge_log();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "System app specifier set is the same as the old, will not refresh", buf, 2u);
      }
    }
    else
    {
      id v11 = [*(id *)(a1 + 40) systemAppSpecifiers];
      [*(id *)(a1 + 40) setSystemAppSpecifiers:v8];
      id v12 = pbb_bridge_log();
      BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);
      if (v11)
      {
        if (v13)
        {
          *(_WORD *)v19 = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "System app settings rows added, reloading", v19, 2u);
        }

        [*(id *)(a1 + 40) reloadSpecifiers];
      }
      else
      {
        if (v13)
        {
          *(_WORD *)unsigned int v20 = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "System app settings rows loaded, inserting full set", v20, 2u);
        }

        __int16 v14 = *(void **)(a1 + 40);
        id v15 = [v14 systemAppSpecifiers];
        [v14 _decorateInsertAndReloadSystemAppSpecifiers:v15];

        v16 = *(void **)(a1 + 40);
        uint64_t v17 = [v16 systemAppSpecifiers];
        [v16 systemAppSpecifierProcessing:v17];
      }
    }
  }
  else
  {
    uint64_t v2 = pbb_bridge_log();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "No settings data is loaded! There is nothing to process", v21, 2u);
    }
  }
}

void sub_10000C008(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained settingsController];
    [v4 dismissViewControllerAnimated:0 completion:0];

    unsigned int v5 = [v3 settingsController];
    id v6 = [v5 rootListController];

    if ([*(id *)(a1 + 32) hasPrefix:@"ROOT"])
    {
      id v7 = [v3 settingsController];
      [v7 popRecursivelyToRootController];

      id v8 = [v6 navigationController];
      uint64_t v9 = [v8 topViewController];

      uint64_t v10 = *(void *)(a1 + 40);
      if (v9 == v6) {
        [v6 _scrollToSpecifierWithID:v10 animated:0];
      }
      else {
        [v6 setDesiredVerticalContentOffsetItemNamed:v10];
      }
    }
    else if (([*(id *)(a1 + 32) isEqualToString:@"ActiveWatch"] & 1) != 0 {
           || ([v3 isUpdatingInRevLock] & 1) != 0
    }
           || [v3 deviceIsBeingMigrated])
    {
      objc_msgSend(*(id *)(a1 + 48), "presentDevicePickerControllerWith:", objc_msgSend(*(id *)(a1 + 40), "isEqualToString:", @"TinkerWatchesOnly"));
    }
    id v11 = [v6 specifierForID:*(void *)(a1 + 32)];
    [v6 indexPathForIndex:[v6 indexOfSpecifier:v11]];
    v63 = (uint64_t (*)(uint64_t, uint64_t))objc_claimAutoreleasedReturnValue();
    id v12 = pbb_bridge_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v13 = [*(id *)(a1 + 56) description];
      uint64_t v14 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 136316162;
      *(void *)&uint8_t buf[4] = "-[COSPreferencesAppController navigateToRootObjectWithURLDictionary:animated:]_block_invoke";
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v11;
      *(_WORD *)&buf[22] = 2112;
      v73 = v63;
      *(_WORD *)v74 = 2112;
      *(void *)&v74[2] = v13;
      *(_WORD *)&v74[10] = 2112;
      *(void *)&v74[12] = v14;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "%s: specifier: %@ indexPath: %@ dict: %@ rootObject: %@", buf, 0x34u);
    }
    if (!v11)
    {
      id v11 = [v6 specifierForBundle:*(void *)(a1 + 32)];
      id v15 = pbb_bridge_log();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315394;
        *(void *)&uint8_t buf[4] = "-[COSPreferencesAppController navigateToRootObjectWithURLDictionary:animated:]_block_invoke";
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v11;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "%s: specifier from bundle: %@", buf, 0x16u);
      }

      if (!v11) {
        goto LABEL_57;
      }
    }
    uint64_t v16 = PSEnabledKey;
    uint64_t v17 = [v11 propertyForKey:PSEnabledKey];
    if (v17)
    {
      v18 = [v11 propertyForKey:v16];
      unsigned int v19 = [v18 BOOLValue];

      if (!v19)
      {
LABEL_57:
        if ([v6 shouldDeferPushForSpecifierID:*(void *)(a1 + 32) urlDictionary:*(void *)(a1 + 56)])
        {
          v28 = pbb_bridge_log();
          if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "preparing for deferred url handling", buf, 2u);
          }

          [v6 prepareHandlingURLForSpecifierID:*(void *)(a1 + 32) resourceDictionary:*(void *)(a1 + 56) animatePush:0 withCompletion:&stru_100246120];
        }
        goto LABEL_53;
      }
    }
    unsigned int v20 = [*(id *)(a1 + 56) objectForKeyedSubscript:@"path"];
    v61 = [v20 pathComponents];

    v62 = [*(id *)(a1 + 48) currentSpecifierIDPath];
    if ((unint64_t)[v62 count] >= 2)
    {
      uint64_t v21 = [v62 subarrayWithRange:1, (char *)[v62 count] - 1];

      v62 = (void *)v21;
    }
    v60 = +[NSMutableArray array];
    v59 = +[NSMutableArray arrayWithArray:v61];
    CFStringRef v22 = [v6 categoryController];
    if (objc_opt_respondsToSelector())
    {
      uint64_t v23 = [v6 categoryController];
      uint64_t v24 = [v23 specifier];
      BOOL v25 = v24 == v11;

      if (v25)
      {
        v26 = [v6 categoryController];
        v27 = [v11 identifier];
        [v60 addObject:v27];

        *(void *)buf = 0;
        *(void *)&buf[8] = buf;
        *(void *)&uint8_t buf[16] = 0x2020000000;
        v73 = 0;
        v67[0] = _NSConcreteStackBlock;
        v67[1] = 3221225472;
        v67[2] = sub_1000ADA90;
        v67[3] = &unk_1002460D8;
        id v68 = v62;
        id v69 = v60;
        id v70 = v59;
        v71 = buf;
        [v61 enumerateObjectsUsingBlock:v67];

        _Block_object_dispose(buf, 8);
        goto LABEL_31;
      }
    }
    else
    {
    }
    CFStringRef v29 = [v3 settingsController];
    v30 = [v29 rootListController];
    unsigned int v31 = [v30 wantsCustomControllerForRootSpecifierID:*(void *)(a1 + 32)];

    if (v31)
    {
      long long v32 = [v3 settingsController];
      long long v33 = [v32 rootListController];
      v26 = [v33 customControllerForRootSpecifierID:*(void *)(a1 + 32)];
    }
    else
    {
      v26 = [v6 selectSpecifier:v11];
    }
LABEL_31:
    unsigned int v34 = [v6 shouldDeferPushForSpecifierID:*(void *)(a1 + 32)];
    long long v35 = pbb_bridge_log();
    if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315394;
      *(void *)&uint8_t buf[4] = "-[COSPreferencesAppController navigateToRootObjectWithURLDictionary:animated:]_block_invoke_2";
      *(_WORD *)&buf[12] = 1024;
      *(_DWORD *)&buf[14] = v34;
      _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "%s: deferPush: %{BOOL}d", buf, 0x12u);
    }

    id v36 = [v60 count];
    unint64_t v37 = (unint64_t)v36;
    *(void *)buf = 0;
    *(void *)&buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x3032000000;
    v73 = sub_100015DBC;
    *(void *)v74 = sub_100015D5C;
    *(void *)&v74[8] = 0;
    if ((v34 & 1) == 0)
    {
      if ((unint64_t)v36 <= 1)
      {
        id v47 = [*(id *)(*(void *)(a1 + 48) + 104) popToRootViewControllerAnimated:0];
      }
      else
      {
        __int16 v38 = [v60 lastObject];
        v39 = [*(id *)(*(void *)(a1 + 48) + 104) viewControllers];
        v64[0] = _NSConcreteStackBlock;
        v64[1] = 3221225472;
        v64[2] = sub_1000ADB94;
        v64[3] = &unk_100246100;
        id v40 = v38;
        id v65 = v40;
        v66 = buf;
        [v39 enumerateObjectsWithOptions:2 usingBlock:v64];

        id v41 = *(void **)(*(void *)&buf[8] + 40);
        __int16 v42 = [*(id *)(*(void *)(a1 + 48) + 104) topViewController];
        LOBYTE(v41) = v41 == v42;

        if ((v41 & 1) == 0)
        {
          BOOL v43 = [v59 count] == 0;
          id v44 = [*(id *)(*(void *)(a1 + 48) + 104) popToViewController:*(void *)(*(void *)&buf[8] + 40) animated:v43];
        }
        id v45 = *(id *)(*(void *)&buf[8] + 40);

        uint64_t v46 = [*(id *)(*(void *)&buf[8] + 40) specifier];

        v26 = v45;
        id v11 = (void *)v46;
      }
    }
    [v11 setProperty:*(void *)(a1 + 56) forKey:@"URLDictionary"];
    id v48 = [v6 view];
    v49 = [v6 table];
    [v49 selectRowAtIndexPath:v63 animated:0 scrollPosition:0];

    v50 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 80)];
    [*(id *)(a1 + 56) setObject:v50 forKeyedSubscript:@"animate"];

    if (v34)
    {
      v51 = [v6 table];
      [v51 selectRowAtIndexPath:v63 animated:0 scrollPosition:0];

      [*(id *)(a1 + 48) popToRootOfSettingsSelectGeneral:0];
      id v52 = [v6 table];
      [v6 tableView:v52 didSelectRowAtIndexPath:v63];
    }
    else
    {
      if (v37 < 2)
      {
        if (v26)
        {
          [v26 setParentController:v6];
          [v26 setRootController:*(void *)(*(void *)(a1 + 48) + 104)];
          [v26 setSpecifier:v11];
          [*(id *)(a1 + 48) _setOffsetForController:v26 fromObjectPair:*(void *)(a1 + 64)];
          [*(id *)(a1 + 48) _performURLHandlingForRootListController:v6 controller:v26 dictionary:*(void *)(a1 + 56) items:v61 controllerNeedsPush:1];
        }
        goto LABEL_49;
      }
      if ([v59 count])
      {
        id v52 = [*(id *)(a1 + 56) mutableCopy];
        v53 = +[NSString pathWithComponents:v59];
        [v52 setObject:v53 forKeyedSubscript:@"path"];

        v54 = [v59 firstObject];
        v55 = SFObjectAndOffsetForURLPair();

        [*(id *)(a1 + 48) _setOffsetForController:v26 fromObjectPair:v55];
        [*(id *)(a1 + 48) _performURLHandlingForRootListController:v6 controller:*(void *)(*(void *)&buf[8] + 40) dictionary:v52 items:v59 controllerNeedsPush:0];
      }
      else
      {
        v56 = [v61 lastObject];
        SFObjectAndOffsetForURLPair();
        id v52 = (id)objc_claimAutoreleasedReturnValue();

        if (v52) {
          [*(id *)(a1 + 48) _setOffsetForController:*(void *)(*(void *)&buf[8] + 40) fromObjectPair:v52];
        }
      }
    }

LABEL_49:
    if ([v26 isMemberOfClass:objc_opt_class()])
    {
      v57 = [v61 firstObject];
      unsigned int v58 = [v57 isEqualToString:@"ActiveWatchSpecialCase"];

      if (v58) {
        [v26 pushActiveDeviceDetails];
      }
    }
    _Block_object_dispose(buf, 8);

LABEL_53:
  }
}

void sub_10000CABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

id sub_10000CF90()
{
  v0 = +[NRPairedDeviceRegistry sharedInstance];
  id v1 = [v0 getAllDevicesWithArchivedAltAccountDevicesMatching:&stru_100244128];

  return v1;
}

void sub_10000DC08(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

id sub_10000DCF4()
{
  v0 = +[NRPairedDeviceRegistry sharedInstance];
  id v1 = +[NRPairedDeviceRegistry activePairedDeviceSelectorBlock];
  uint64_t v2 = [v0 getAllDevicesWithArchivedAltAccountDevicesMatching:v1];
  id v3 = [v2 firstObject];

  id v4 = [v3 valueForProperty:NRDevicePropertyIsArchived];
  if ([v4 BOOLValue]) {
    unsigned int v5 = 0;
  }
  else {
    unsigned int v5 = v3;
  }
  id v6 = v5;

  return v6;
}

void sub_10000EEA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id *location, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
}

id sub_10000F634()
{
  v0 = +[NSUserDefaults standardUserDefaults];
  id v1 = [v0 BOOLForKey:@"SuppressInternalSettingsUI"];

  return v1;
}

uint64_t sub_10000F67C()
{
  if (sub_10000F764()) {
    return 1;
  }
  id v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 BOOLForKey:@"__SkipReachabilityChecks"];

  return (uint64_t)v2;
}

id sub_10000F6D4()
{
  v0 = +[NSUserDefaults standardUserDefaults];
  id v1 = [v0 BOOLForKey:@"COSDisableGalleryFeatures"];

  return v1;
}

id sub_10000F71C()
{
  v0 = +[NSUserDefaults standardUserDefaults];
  id v1 = [v0 BOOLForKey:@"SuppressUIForSim"];

  return v1;
}

uint64_t sub_10000F764()
{
  if (qword_10029AF40 != -1) {
    dispatch_once(&qword_10029AF40, &stru_100243FE0);
  }
  return byte_10029AF38;
}

void sub_10000F9E4(uint64_t a1, int a2)
{
  id v3 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = [WeakRetained specifierForID:@"com.apple.NanoPassbookBridgeSettings"];

  if (v8)
  {
    if (a2) {
      unsigned int v5 = @"NanoPassbookBridgeSettings";
    }
    else {
      unsigned int v5 = @"NanoPassbookBridgeSettings_NoStockholm";
    }
    id v6 = sub_100010E5C(v5);
    [v8 setName:v6];

    id v7 = objc_loadWeakRetained(v3);
    [v7 reloadSpecifier:v8];
  }
}

void sub_100010190(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
}

void sub_100010CA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100010E5C(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:v1 value:&stru_100249230 table:@"Settings"];

  return v3;
}

void sub_1000113E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10001265C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL sub_100012810()
{
  v0 = sub_10001284C();
  BOOL v1 = [v0 count] != 0;

  return v1;
}

id sub_10001284C()
{
  v0 = +[NRPairedDeviceRegistry sharedInstance];
  BOOL v1 = [v0 getAllDevicesWithArchivedAltAccountDevicesMatching:&stru_100244148];

  return v1;
}

void sub_100013834(uint64_t a1)
{
  BOOL v1 = +[NSFileManager defaultManager];
  id v2 = [v1 contentsOfDirectoryAtPath:@"/System/Library/NanoPreferenceBundles/Applications/" error:0];

  id v3 = objc_opt_new();
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  id v4 = v2;
  id v5 = [v4 countByEnumeratingWithState:&v27 objects:v33 count:16];
  if (v5)
  {
    id v6 = v5;
    CFStringRef v7 = @"dSYM";
    uint64_t v8 = *(void *)v28;
    uint64_t v26 = *(void *)v28;
    do
    {
      uint64_t v9 = 0;
      id v25 = v6;
      do
      {
        if (*(void *)v28 != v8) {
          objc_enumerationMutation(v4);
        }
        uint64_t v10 = *(void **)(*((void *)&v27 + 1) + 8 * (void)v9);
        id v11 = [v10 pathExtension];
        unsigned __int8 v12 = [v11 isEqualToString:v7];

        if ((v12 & 1) == 0)
        {
          BOOL v13 = [v10 stringByDeletingPathExtension];
          if ([v13 length])
          {
            uint64_t v14 = [@"/System/Library/NanoPreferenceBundles/Applications/" stringByAppendingPathComponent:v10];
            id v15 = [v14 stringByResolvingSymlinksInPath];

            id v16 = [objc_alloc((Class)NSBundle) initWithPath:v15];
            uint64_t v17 = [v16 bundleIdentifier];

            if (!v17)
            {
              v18 = +[NSString stringWithFormat:@"Bridge settings bundle at path '%@' is malformed", v15];
              CFStringRef v31 = @"BundleDescription";
              long long v32 = v13;
              +[NSDictionary dictionaryWithObjects:&v32 forKeys:&v31 count:1];
              CFStringRef v19 = v7;
              id v20 = v4;
              CFStringRef v22 = v21 = v3;
              uint64_t v23 = +[NSException exceptionWithName:@"NanoPreferenceBundleException" reason:v18 userInfo:v22];

              id v3 = v21;
              id v4 = v20;
              CFStringRef v7 = v19;
              id v6 = v25;
              [v23 raise];
            }
            [v3 setObject:v16 forKey:v13];

            uint64_t v8 = v26;
          }
        }
        uint64_t v9 = (char *)v9 + 1;
      }
      while (v6 != v9);
      id v6 = [v4 countByEnumeratingWithState:&v27 objects:v33 count:16];
    }
    while (v6);
  }

  [*(id *)(a1 + 32) _setUpBundleRows:v3];
  [*(id *)(a1 + 32) _buildSystemAppSpecifierDicts];
  [*(id *)(a1 + 32) _notifyThatFullSpecifierDictListIsLoaded];
}

int64_t sub_1000142A8(id a1, id a2, id a3)
{
  id v4 = a3;
  id v5 = [a2 name];
  id v6 = [v4 name];

  id v7 = [v5 localizedCaseInsensitiveCompare:v6];
  return (int64_t)v7;
}

id sub_100014784()
{
  v0 = +[NRPairedDeviceRegistry sharedInstance];
  BOOL v1 = [v0 getAllDevicesWithArchivedAltAccountDevicesMatching:&stru_1002440C8];

  return v1;
}

uint64_t sub_1000148A0(uint64_t a1, void *a2)
{
  uint64_t v3 = BPSRequiredWatchCapabilitiesKey;
  id v4 = a2;
  id v5 = [v4 objectForKey:v3];
  id v6 = [v4 objectForKey:BPSForbiddenWatchCapabilitiesKey];
  id v7 = [v4 objectForKey:BPSRequiredFeatureFlagsKey];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v9 = [WeakRetained displayDevice];
  uint64_t HasAllCapabilitiesForStrings = BPSDeviceHasAllCapabilitiesForStrings();

  return HasAllCapabilitiesForStrings;
}

void sub_100015A74(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v1 + 212))
  {
    *(unsigned char *)(v1 + 212) = 0;
    [*(id *)(a1 + 32) stopSpinner];
    uint64_t v3 = [*(id *)(a1 + 32) specifierForID:@"CELLULAR_ID"];
    id v4 = [*(id *)(a1 + 32) indexOfSpecifier:v3];
    if (v4 != (id)0x7FFFFFFFFFFFFFFFLL)
    {
      id v5 = *(char **)(a1 + 32);
      uint64_t v6 = *(void *)&v5[OBJC_IVAR___PSListController__table];
      id v7 = [v5 indexPathForIndex:v4];
      v8.receiver = v5;
      v8.super_class = (Class)COSSettingsListController;
      [super tableView:v6 didSelectRowAtIndexPath:v7];
    }
  }
}

Class sub_100015B58(uint64_t a1)
{
  sub_100016154();
  Class result = objc_getClass("NPHCellularBridgeUIManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029B028 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = sub_100172188();
    return sub_100015BB0(v3);
  }
  return result;
}

Class sub_100015BB0(uint64_t a1)
{
  sub_100016254();
  Class result = objc_getClass("NPHCellularBridgeUIManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029B0D0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = sub_100172188();
    return (Class)sub_100015C08(v3);
  }
  return result;
}

Class sub_100015C08(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_10029B138)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = sub_10009CF58;
    void v4[4] = &unk_1002436E0;
    v4[5] = v4;
    long long v5 = off_100245BE8;
    uint64_t v6 = 0;
    qword_10029B138 = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!qword_10029B138)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("NPHCellularBridgeUIManager");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    id v2 = (void *)sub_100172188();
LABEL_8:
    free(v2);
  }
  qword_10029B130 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_100015D4C(uint64_t a1)
{
}

void sub_100015D54(uint64_t a1)
{
}

void sub_100015D5C(uint64_t a1)
{
}

void sub_100015D64(uint64_t a1)
{
}

void sub_100015D6C(uint64_t a1)
{
}

void sub_100015D74(uint64_t a1)
{
}

void sub_100015D7C(uint64_t a1)
{
}

void sub_100015D84(uint64_t a1)
{
}

void sub_100015D8C(uint64_t a1)
{
}

void sub_100015D94(uint64_t a1)
{
}

uint64_t sub_100015D9C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100015DAC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100015DBC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100015DCC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100015DDC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100015DEC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100015DFC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100015E0C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100015E1C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100015E2C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

id sub_100015E3C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) prewarmiCloudBackups];
}

void sub_100015E44(id a1, BOOL a2)
{
  if (!a2)
  {
    id v2 = pbb_mobileasset_log();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
      sub_1001737E8();
    }
  }
}

void sub_100015E90(uint64_t a1)
{
  if (*(unsigned char *)(*(void *)(a1 + 32) + 84)) {
    [*(id *)(a1 + 40) setValue:@"ActiveWatch" forKey:@"root"];
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained navigateToRootObjectWithURLDictionary:*(void *)(a1 + 40) animated:*(unsigned __int8 *)(a1 + 56)];
}

void sub_100015F10(id a1)
{
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();

  CFNotificationCenterAddObserver(DarwinNotifyCenter, 0, (CFNotificationCallback)sub_1000A88F8, @"com.apple.Bridge.badgeUpdate", 0, (CFNotificationSuspensionBehavior)0);
}

void sub_100015F5C()
{
  uint64_t v0 = objc_opt_new();
  uint64_t v1 = (void *)qword_10029B200;
  qword_10029B200 = v0;
}

id sub_100015F94(uint64_t a1)
{
  [*(id *)(a1 + 32) registerAppDelegateNotifications];
  [*(id *)(a1 + 32) registerPairedSyncNotifications];
  id v2 = *(void **)(a1 + 32);

  return _[v2 registerNanoRegistryNotifications];
}

id sub_100015FD8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) indexSpecifiersIfNeeded];
}

uint64_t sub_100015FE0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100015FF4(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v2 = *(void *)(a1 + 40);
    uint64_t v3 = *(void **)(a1 + 32);
    [v3 processURL:v2 animated:0 fromSearch:0];
  }
  else
  {
    id v4 = pbb_bridge_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "NOT processingURL!", v5, 2u);
    }
  }
}

void sub_1000160A0(id a1)
{
  uint64_t v1 = objc_alloc_init(COSShortcutController);
  uint64_t v2 = (void *)qword_10029B210;
  qword_10029B210 = (uint64_t)v1;
}

void sub_1000160DC(id a1)
{
  uint64_t v1 = objc_alloc_init(COSReachabilityMonitor);
  uint64_t v2 = (void *)qword_10029B290;
  qword_10029B290 = (uint64_t)v1;
}

void sub_100016118(id a1)
{
  uint64_t v1 = objc_alloc_init(COSBackupManager);
  uint64_t v2 = (void *)qword_10029B1A8;
  qword_10029B1A8 = (uint64_t)v1;
}

uint64_t sub_100016154()
{
  v3[0] = 0;
  if (!qword_10029B020)
  {
    v3[1] = _NSConcreteStackBlock;
    v3[2] = 3221225472;
    v3[3] = sub_10005B8C8;
    v3[4] = &unk_1002436E0;
    void v3[5] = v3;
    long long v4 = off_100244B28;
    uint64_t v5 = 0;
    qword_10029B020 = _sl_dlopen();
  }
  uint64_t v0 = qword_10029B020;
  uint64_t v1 = (void *)v3[0];
  if (!qword_10029B020)
  {
    uint64_t v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t sub_100016254()
{
  v3[0] = 0;
  if (!qword_10029B0C8)
  {
    v3[1] = _NSConcreteStackBlock;
    v3[2] = 3221225472;
    v3[3] = sub_10007C9F0;
    v3[4] = &unk_1002436E0;
    void v3[5] = v3;
    long long v4 = off_100245330;
    uint64_t v5 = 0;
    qword_10029B0C8 = _sl_dlopen();
  }
  uint64_t v0 = qword_10029B0C8;
  uint64_t v1 = (void *)v3[0];
  if (!qword_10029B0C8)
  {
    uint64_t v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t sub_100016354(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_100017480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_100017700(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_10029AE88)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = sub_100017844;
    void v4[4] = &unk_1002436E0;
    v4[5] = v4;
    long long v5 = off_1002436C8;
    uint64_t v6 = 0;
    qword_10029AE88 = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!qword_10029AE88)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("SOSUtilities");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)sub_100171540();
LABEL_8:
    free(v2);
  }
  qword_10029AE80 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_100017844()
{
  uint64_t result = _sl_dlopen();
  qword_10029AE88 = result;
  return result;
}

id sub_100017DC0()
{
  uint64_t v4 = 0;
  long long v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)qword_10029AE90;
  uint64_t v7 = qword_10029AE90;
  if (!qword_10029AE90)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_1000198A8;
    v3[3] = &unk_1002436A8;
    v3[4] = &v4;
    sub_1000198A8((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_100017E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100018E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = pbb_setupflow_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 134217984;
    uint64_t v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "(COSSOSController) activating UI, newtonEligibility:%lu", (uint8_t *)&v8, 0xCu);
  }

  [*(id *)(a1 + 32) setFinishedLoadingNewton:1];
  [*(id *)(a1 + 32) setNewtonEligibility:a2];
  switch(a2)
  {
    case 0:
      id v5 = sub_100017DC0();
      uint64_t v6 = &__kCFBooleanTrue;
      goto LABEL_7;
    case 1:
    case 3:
      id v5 = sub_100017DC0();
      uint64_t v6 = &__kCFBooleanFalse;
      goto LABEL_7;
    case 2:
      id v5 = sub_100017DC0();
      uint64_t v6 = 0;
LABEL_7:
      [v5 setNewtonTriggersEmergencySOSNumber:v6];
      break;
    case 4:
      [sub_100017DC0() setNewtonTriggersEmergencySOSNumber:&__kCFBooleanTrue];
      [sub_100017DC0() setNewtonTriggersEmergencySOSWorkouts:1];
      break;
    default:
      return [*(id *)(a1 + 32) updateAvailableSafetyFeatures];
  }
  return [*(id *)(a1 + 32) updateAvailableSafetyFeatures];
}

void sub_100018FA8(uint64_t a1, uint64_t a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100019034;
  block[3] = &unk_100243730;
  uint64_t v2 = *(void **)(a1 + 40);
  block[4] = *(void *)(a1 + 32);
  uint64_t v5 = a2;
  id v4 = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_100019034(uint64_t a1)
{
  [*(id *)(a1 + 32) _stopLoading];
  uint64_t v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 48);
    int v5 = 134217984;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "(COSSOSController) newton not set, using newtonEligibility:%lu", (uint8_t *)&v5, 0xCu);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100019234(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = sub_10001937C();
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100019460;
    void v6[3] = &unk_100243780;
    id v7 = *(id *)(a1 + 32);
    [v4 newtonEligibilityWithHealthStore:v3 completion:v6];
  }
  else
  {
    int v5 = pbb_setupflow_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      uint64_t v9 = 1;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "(COSSOSController) no health store, newtonElibitiliy:%lu", buf, 0xCu);
    }

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

id sub_10001937C()
{
  uint64_t v4 = 0;
  int v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)qword_10029AEA0;
  uint64_t v7 = qword_10029AEA0;
  if (!qword_10029AEA0)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100019A70;
    v3[3] = &unk_1002436A8;
    v3[4] = &v4;
    sub_100019A70((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_100019448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100019460(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = pbb_setupflow_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 134217984;
    uint64_t v7 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "(COSSOSController) newtonEligibilityWithHealthStore:%lu", (uint8_t *)&v6, 0xCu);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100019524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = pbb_setupflow_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 134217984;
    uint64_t v7 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "(COSSOSController) newtonEligibilityWithCompletion:%lu", (uint8_t *)&v6, 0xCu);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100019678(uint64_t a1, uint64_t a2)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1000196F0;
  v2[3] = &unk_1002437D0;
  v2[4] = *(void *)(a1 + 32);
  v2[5] = a2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);
}

void sub_1000196F0(uint64_t a1)
{
  if (*(void *)(a1 + 40) == 1) {
    [sub_100017DC0() setNewtonTriggersEmergencySOSNumber:&__kCFBooleanFalse];
  }
  uint64_t v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 40);
    int v5 = 134217984;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "(COSSOSController) newtonEligibility:%lu", (uint8_t *)&v5, 0xCu);
  }

  uint64_t v4 = [*(id *)(a1 + 32) delegate];
  [v4 buddyControllerReleaseHold:*(void *)(a1 + 32)];
}

void sub_1000198A8(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("SOSUtilities");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029AE90 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_100171540();
    sub_100019900();
  }
}

void sub_100019900()
{
  v1[0] = 0;
  if (!qword_10029AE98)
  {
    v1[1] = _NSConcreteStackBlock;
    v1[2] = 3221225472;
    v1[3] = sub_1000199FC;
    v1[4] = &unk_1002436E0;
    v1[5] = v1;
    long long v2 = off_1002437F0;
    uint64_t v3 = 0;
    qword_10029AE98 = _sl_dlopen();
  }
  uint64_t v0 = (void *)v1[0];
  if (!qword_10029AE98)
  {
    uint64_t v0 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v1[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t sub_1000199FC()
{
  uint64_t result = _sl_dlopen();
  qword_10029AE98 = result;
  return result;
}

COSiCloudLoginViewController *sub_100019A70(uint64_t a1)
{
  sub_100019900();
  uint64_t result = (COSiCloudLoginViewController *)objc_getClass("SOSNewtonManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029AEA0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = (COSiCloudLoginViewController *)sub_100171568();
    return [(COSiCloudLoginViewController *)v3 init];
  }
  return result;
}

void sub_100019BD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100019BEC(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained stockholmSupportedInGizmoRegion:a2];
}

void sub_10001A07C(id a1, BOOL a2, NSError *a3)
{
  BOOL v3 = a2;
  SEL v4 = a3;
  int v5 = pbb_accountsignin_log();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = +[NSNumber numberWithBool:v3];
    int v7 = 138412546;
    int v8 = v6;
    __int16 v9 = 2112;
    uint64_t v10 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Success: %@ Error %@", (uint8_t *)&v7, 0x16u);
  }
}

void sub_10001A298(uint64_t a1)
{
  long long v2 = pbb_accountsignin_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 138412290;
    uint64_t v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Removed FollowUp for %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_10001A460(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 buddyControllerDone:*(void *)(a1 + 32)];
}

void sub_10001A7E8(uint64_t a1)
{
  id v2 = pbb_accountsignin_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = [*(id *)(a1 + 32) username];
    int v7 = 138412290;
    int v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Issuing primeBuysOnWatchCredentials... for %@", (uint8_t *)&v7, 0xCu);
  }
  int v4 = +[UIApplication sharedApplication];
  uint64_t v5 = [v4 bridgeController];
  uint64_t v6 = [*(id *)(a1 + 32) username];
  [v5 sendBuysOnWatchUsername:v6 andPassword:*(void *)(a1 + 40) withCompletion:&stru_1002438E0];
}

void sub_10001A8FC(id a1, BOOL a2, int64_t a3, NSString *a4)
{
  BOOL v5 = a2;
  uint64_t v6 = a4;
  int v7 = pbb_accountsignin_log();
  int v8 = v7;
  if (v5)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int16 v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "primeBuysOnWatchCredentials Success!", v9, 2u);
    }
  }
  else if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
  {
    sub_100171590(a3, (uint64_t)v6, v8);
  }
}

void sub_10001AC9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10001ACD0(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10001AD94;
  block[3] = &unk_100243930;
  objc_copyWeak(&v9, (id *)(a1 + 32));
  char v10 = a2;
  id v8 = v5;
  id v6 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v9);
}

void sub_10001AD94(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained updatedAppleAccountPropertiesWithAuthenticated:*(unsigned __int8 *)(a1 + 48) error:*(void *)(a1 + 32)];
}

void sub_10001AF8C(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = pbb_accountsignin_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v8 = 138412802;
    uint64_t v9 = v7;
    __int16 v10 = 1024;
    int v11 = a2;
    __int16 v12 = 2112;
    id v13 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Saved account: (%@) with success: (%{BOOL}d); error: (%@)",
      (uint8_t *)&v8,
      0x1Cu);
  }
}

id sub_10001B118()
{
  if (qword_10029AEB0 != -1) {
    dispatch_once(&qword_10029AEB0, &stru_1002439A0);
  }
  uint64_t v0 = (void *)qword_10029AEA8;

  return v0;
}

void sub_10001B16C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Bridge", "ScreenTimeSetup");
  id v2 = (void *)qword_10029AEA8;
  qword_10029AEA8 = (uint64_t)v1;
}

void sub_10001B8A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10001B904(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("STSetupClient");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029AEB8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_10017174C();
    sub_10001B95C();
  }
}

void sub_10001B95C()
{
  v1[0] = 0;
  if (!qword_10029AEC0)
  {
    v1[1] = _NSConcreteStackBlock;
    v1[2] = 3221225472;
    v1[3] = sub_10001BA58;
    v1[4] = &unk_1002436E0;
    v1[5] = v1;
    long long v2 = off_1002439C0;
    uint64_t v3 = 0;
    qword_10029AEC0 = _sl_dlopen();
  }
  uint64_t v0 = (void *)v1[0];
  if (!qword_10029AEC0)
  {
    uint64_t v0 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v1[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t sub_10001BA58()
{
  uint64_t result = _sl_dlopen();
  qword_10029AEC0 = result;
  return result;
}

void sub_10001BACC(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("STUserID");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029AEC8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_100171774();
    sub_10001BB24();
  }
}

void sub_10001BC1C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10001BC38(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _checkLocalPairingStorePathAndReleaseHold];
}

void sub_10001BFC4(uint64_t a1)
{
  os_log_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained delegate];
  id v3 = objc_loadWeakRetained(v1);
  [v2 buddyControllerReleaseHold:v3];
}

void sub_10001C7E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    int v4 = +[NSBundle mainBundle];
    id v5 = [v4 localizedStringForKey:@"RESTORE_FAILED" value:&stru_100249230 table:@"Localizable"];
    id v6 = +[NSBundle mainBundle];
    uint64_t v7 = [v6 localizedStringForKey:@"PAIRING_FAILED_ERR_%@" value:&stru_100249230 table:@"Localizable"];
    int v8 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v7, v3);
    uint64_t v9 = +[UIAlertController alertControllerWithTitle:v5 message:v8 preferredStyle:1];

    __int16 v10 = +[NSBundle mainBundle];
    int v11 = [v10 localizedStringForKey:@"OK" value:&stru_100249230 table:@"Localizable"];
    __int16 v12 = +[UIAlertAction actionWithTitle:v11 style:1 handler:0];
    [v9 addAction:v12];

    id v13 = pbb_setupflow_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Presenting 'restore failed' alert", buf, 2u);
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10001CB10;
    block[3] = &unk_100243908;
    void block[4] = *(void *)(a1 + 32);
    id v16 = v9;
    id v14 = v9;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
  else
  {
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    _DWORD v18[2] = sub_10001CA84;
    v18[3] = &unk_1002438A0;
    v18[4] = *(void *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v18);
  }
}

void sub_10001CA84(uint64_t a1)
{
  uint64_t v2 = [UIApp setupController];
  id v3 = [v2 linkUpgradeMonitor];
  [v3 indicateBackupRestoreStepCompleted];

  id v4 = [*(id *)(a1 + 32) delegate];
  [v4 buddyControllerDone:*(void *)(a1 + 32)];
}

id sub_10001CB10(uint64_t a1)
{
  return [*(id *)(a1 + 32) presentViewController:*(void *)(a1 + 40) animated:1 completion:0];
}

void sub_10001E0B4(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    id v3 = (void *)WeakRetained[7];
    id v12 = WeakRetained;
    id v4 = [a1[4] uniqueIdentifier];
    id v5 = [v3 objectForKey:v4];

    if (v5)
    {
      id v6 = (void *)*((void *)v12 + 5);
      id v7 = *((id *)v12 + 6);
      int v8 = [v6 sectionViewForSection:v7];
      uint64_t v9 = [v8 itemViewForItem:v5];
      __int16 v10 = [a1[5] passSnapshotForCredential:a1[4]];

      int v11 = [v9 imageView];
      [v11 setImage:v10];
    }
    id WeakRetained = v12;
  }
}

void sub_10001E468(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_10001E490(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_error_impl(a1, v4, OS_LOG_TYPE_ERROR, a4, v5, 0xCu);
}

uint64_t sub_10001E4B0(uint64_t a1, uint64_t a2)
{
  return a2;
}

id sub_10001EDAC(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 propertyForKey:@"COSSockPuppetAppTeamIDKey"];
  id v3 = [v1 propertyForKey:@"COSSockPuppetAppBundleIDKey"];

  id v4 = +[NSString stringWithFormat:@"%@.%@", v2, v3];

  return v4;
}

void sub_10001EE4C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = *(void **)(*(void *)(a1 + 40) + OBJC_IVAR___PSViewController__specifier);
  id v4 = a2;
  id v5 = [v3 propertyForKey:v4];
  [v2 setProperty:v5 forKey:v4];
}

void sub_10001F2EC(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (!v5)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6 == 1 && a2 != 0)
    {
      int v8 = block;
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      uint64_t v9 = sub_10001F3E0;
LABEL_10:
      v8[2] = v9;
      v8[3] = &unk_1002438A0;
      v8[4] = *(void *)(a1 + 32);
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v8);
      goto LABEL_11;
    }
    if (v6 == 4 && (a2 & 1) == 0)
    {
      int v8 = v10;
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      uint64_t v9 = sub_10001F460;
      goto LABEL_10;
    }
  }
LABEL_11:
}

id sub_10001F3E0(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + OBJC_IVAR___PSViewController__specifier);
  id v3 = +[NSNumber numberWithInt:2];
  [v2 setProperty:v3 forKey:@"COSSockPuppetInstallationState"];

  id v4 = *(void **)(a1 + 32);

  return [v4 reloadSpecifiers];
}

id sub_10001F460(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + OBJC_IVAR___PSViewController__specifier);
  id v3 = +[NSNumber numberWithInt:5];
  [v2 setProperty:v3 forKey:@"COSSockPuppetInstallationState"];

  id v4 = *(void **)(a1 + 32);

  return [v4 reloadSpecifiers];
}

id sub_10001F980(uint64_t a1)
{
  return _[*(id *)(a1 + 32) deleteAppOnGizmo:*(void *)(*(void *)(a1 + 32) + OBJC_IVAR___PSViewController__specifier)];
}

void sub_10001F998(id a1, UIAlertAction *a2)
{
}

id sub_10001FBEC(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3)
  {
    id v5 = a3;
    uint64_t v6 = pbb_bridge_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v11 = 136446466;
      id v12 = "-[COSSockPuppetAppListController deleteAppOnGizmo:]_block_invoke";
      __int16 v13 = 2112;
      uint64_t v14 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "error while calling %{public}s for app: %@", (uint8_t *)&v11, 0x16u);
    }

    [*(id *)(a1 + 40) presentACError:v5];
  }
  int v8 = *(void **)(*(void *)(a1 + 40) + OBJC_IVAR___PSViewController__specifier);
  uint64_t v9 = +[NSNumber numberWithInteger:a2];
  [v8 setProperty:v9 forKey:@"COSSockPuppetInstallationState"];

  return [*(id *)(a1 + 40) _resetAfterAppDeletionResponse:a2];
}

void sub_10001FD9C(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR___PSViewController__specifier;
  id v3 = *(void **)(*(void *)(a1 + 32) + OBJC_IVAR___PSViewController__specifier);
  id v4 = +[NSNumber numberWithInteger:*(void *)(a1 + 40)];
  [v3 setProperty:v4 forKey:@"COSSockPuppetInstallationState"];

  [*(id *)(*(void *)(a1 + 32) + v2) setProperty:&__kCFBooleanFalse forKey:@"COSSockPuppetStateChanging"];
  id v5 = [*(id *)(*(void *)(a1 + 32) + v2) propertyForKey:PSAppSettingsBundleIDKey];
  LODWORD(v4) = sub_100032CB0(v5);

  uint64_t v6 = *(void **)(a1 + 32);
  if (v4)
  {
    [v6 reloadSpecifiers];
  }
  else
  {
    [v6 reloadSpecifierID:@"SHOWS_ON_GIZMO" animated:1];
    id v7 = [*(id *)(a1 + 32) specifierForID:@"SHOW_ON_GIZMO_GROUP_ID"];
    [v7 removePropertyForKey:PSFooterTextGroupKey];
    [*(id *)(a1 + 32) reloadSpecifier:v7 animated:1];
  }
}

void sub_10001FF50(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  id v3 = pbb_bridge_log();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (v2 == 4)
  {
    if (v4)
    {
      LOWORD(v7) = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "App deleted", (uint8_t *)&v7, 2u);
    }

    id v5 = [*(id *)(a1 + 32) specifierForID:@"SHOW_ON_GIZMO_GROUP_ID"];
    [v5 removePropertyForKey:PSFooterTextGroupKey];
    [*(id *)(a1 + 32) reloadSpecifier:v5 animated:1];
    [UIApp popToTopLevelSettingsAnimated:1];
  }
  else
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a1 + 40);
      int v7 = 134217984;
      uint64_t v8 = v6;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Delete failed, install state: %ld", (uint8_t *)&v7, 0xCu);
    }

    [*(id *)(a1 + 32) reloadSpecifierID:@"DELETE_ON_GIZMO" animated:1];
    id v5 = [*(id *)(a1 + 32) specifierForID:@"SHOW_ON_GIZMO_GROUP_ID"];
    [v5 removePropertyForKey:PSFooterTextGroupKey];
    [*(id *)(a1 + 32) reloadSpecifier:v5 animated:1];
  }
}

void sub_100020648(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v6)
  {
    uint64_t v8 = [v5 deviceStatus];
    if ([v8 installStatus] == (id)2)
    {
      [*(id *)(*(void *)(a1 + 32) + OBJC_IVAR___PSViewController__specifier) setProperty:&off_10025BE48 forKey:@"COSSockPuppetInstallationState"];
      [*(id *)(a1 + 32) _resetAfterSockPuppetResponseWithState:2];
LABEL_29:

      goto LABEL_30;
    }
    id v9 = [v8 architectureCompatibility];
    __int16 v10 = [v5 companionAppBundleID];
    unsigned int v11 = [v5 isBetaApp];
    id v12 = pbb_bridge_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);
    if (v9 == (id)2 && (v11 & 1) == 0)
    {
      if (v13)
      {
        uint64_t v14 = [v5 applicationName];
        *(_DWORD *)buf = 138412546;
        id v33 = v14;
        __int16 v34 = 2112;
        long long v35 = v10;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "App (%@) requires update! Requesting update for companion app (%@)", buf, 0x16u);
      }
      CFStringRef v31 = v10;
      id v15 = +[NSArray arrayWithObjects:&v31 count:1];
      id v30 = 0;
      unsigned int v16 = +[ASDUpdateWatchApps updateBundleIDs:v15 userInitiated:1 error:&v30];
      id v17 = v30;

      if (!v16 || v17)
      {
        v18 = pbb_setup_log();
        if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR) || !os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_23;
        }
        *(_DWORD *)buf = 138412290;
        id v33 = v17;
        CFStringRef v19 = "Error forcing updates: %@";
      }
      else
      {
        v18 = pbb_bridge_log();
        if (!os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
LABEL_23:

LABEL_28:
          goto LABEL_29;
        }
        *(_DWORD *)buf = 138412290;
        id v33 = v10;
        CFStringRef v19 = "Companion app (%@) queued for update.";
      }
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, v19, buf, 0xCu);
      goto LABEL_23;
    }
    if (v11)
    {
      if (v13)
      {
        id v20 = [v5 applicationName];
        *(_DWORD *)buf = 138412290;
        id v33 = v20;
        uint64_t v21 = "Beta App (%@) doesn't get updated";
LABEL_26:
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v21, buf, 0xCu);
      }
    }
    else if (v13)
    {
      id v20 = [v5 applicationName];
      *(_DWORD *)buf = 138412290;
      id v33 = v20;
      uint64_t v21 = "App (%@) does not require update.";
      goto LABEL_26;
    }

    uint64_t v23 = *(void **)(a1 + 40);
    CFStringRef v22 = *(void **)(a1 + 48);
    uint64_t v24 = *(void *)(a1 + 56);
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 3221225472;
    v27[2] = sub_100020A40;
    v27[3] = &unk_100243B48;
    id v25 = v22;
    uint64_t v26 = *(void *)(a1 + 32);
    id v28 = v25;
    uint64_t v29 = v26;
    [v23 installApplication:v25 onPairedDevice:v24 completion:v27];
    id v17 = v28;
    goto LABEL_28;
  }
  int v7 = pbb_bridge_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v33 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "determineArchitectureCompatibility failed with error %@", buf, 0xCu);
  }

  [*(id *)(a1 + 32) presentACError:v6];
LABEL_30:
}

void sub_100020A40(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    id v6 = pbb_bridge_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v10 = 136446466;
      unsigned int v11 = "-[COSSockPuppetAppListController setPuppetAppShows:specifier:]_block_invoke";
      __int16 v12 = 2112;
      uint64_t v13 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "error while calling %{public}s for app: %@", (uint8_t *)&v10, 0x16u);
    }

    [*(id *)(a1 + 40) presentACError:v5];
  }
  uint64_t v8 = *(void **)(*(void *)(a1 + 40) + OBJC_IVAR___PSViewController__specifier);
  id v9 = +[NSNumber numberWithInteger:a2];
  [v8 setProperty:v9 forKey:@"COSSockPuppetInstallationState"];

  if ((unint64_t)(a2 - 3) <= 0xFFFFFFFFFFFFFFFDLL) {
    [*(id *)(a1 + 40) _resetAfterSockPuppetResponseWithState:a2];
  }
}

void sub_100020B88(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    id v6 = pbb_bridge_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v10 = 136446466;
      unsigned int v11 = "-[COSSockPuppetAppListController setPuppetAppShows:specifier:]_block_invoke";
      __int16 v12 = 2112;
      uint64_t v13 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "error while calling %{public}s for app: %@", (uint8_t *)&v10, 0x16u);
    }

    [*(id *)(a1 + 40) presentACError:v5];
  }
  uint64_t v8 = *(void **)(*(void *)(a1 + 40) + OBJC_IVAR___PSViewController__specifier);
  id v9 = +[NSNumber numberWithInteger:a2];
  [v8 setProperty:v9 forKey:@"COSSockPuppetInstallationState"];

  if ((unint64_t)(a2 - 3) <= 0xFFFFFFFFFFFFFFFDLL) {
    [*(id *)(a1 + 40) _resetAfterSockPuppetResponseWithState:a2];
  }
}

void sub_100020CD0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    id v6 = pbb_bridge_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v10 = 136446466;
      unsigned int v11 = "-[COSSockPuppetAppListController setPuppetAppShows:specifier:]_block_invoke";
      __int16 v12 = 2112;
      uint64_t v13 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "error while calling %{public}s for app: %@", (uint8_t *)&v10, 0x16u);
    }

    [*(id *)(a1 + 40) presentACError:v5];
  }
  uint64_t v8 = *(void **)(*(void *)(a1 + 40) + OBJC_IVAR___PSViewController__specifier);
  id v9 = +[NSNumber numberWithInteger:a2];
  [v8 setProperty:v9 forKey:@"COSSockPuppetInstallationState"];

  if ((unint64_t)(a2 - 6) <= 0xFFFFFFFFFFFFFFFDLL) {
    [*(id *)(a1 + 40) _resetAfterSockPuppetResponseWithState:a2];
  }
}

void sub_100021078(uint64_t a1)
{
  id v5 = +[UIAlertController alertControllerWithTitle:*(void *)(a1 + 32) message:*(void *)(a1 + 40) preferredStyle:1];
  unint64_t v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"OK" value:&stru_100249230 table:@"Localizable"];
  BOOL v4 = +[UIAlertAction actionWithTitle:v3 style:0 handler:0];
  [v5 addAction:v4];

  [*(id *)(a1 + 48) presentViewController:v5 animated:1 completion:0];
}

id sub_100021A94(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + OBJC_IVAR___PSViewController__specifier) setProperty:&__kCFBooleanTrue forKey:@"locallyAvailable"];
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)COSSockPuppetAppListController;
  return [super reloadSpecifiers];
}

id sub_100021CF0(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + OBJC_IVAR___PSViewController__specifier) setProperty:&__kCFBooleanFalse forKey:@"locallyAvailable"];
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)COSSockPuppetAppListController;
  return [super reloadSpecifiers];
}

id sub_100021DD8()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)qword_10029AED0;
  uint64_t v7 = qword_10029AED0;
  if (!qword_10029AED0)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100022378;
    v3[3] = &unk_1002436A8;
    v3[4] = &v4;
    sub_100022378((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_100021EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_100022378(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_10029AED8)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = sub_1000224BC;
    void v4[4] = &unk_1002436E0;
    v4[5] = v4;
    long long v5 = off_100243BB8;
    uint64_t v6 = 0;
    qword_10029AED8 = _sl_dlopen();
    unint64_t v2 = (void *)v4[0];
    if (!qword_10029AED8)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("CLLocationManager");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    unint64_t v2 = (void *)sub_1001719C0();
LABEL_8:
    free(v2);
  }
  qword_10029AED0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1000224BC()
{
  uint64_t result = _sl_dlopen();
  qword_10029AED8 = result;
  return result;
}

id *sub_1000232A4(id *a1)
{
  if (a1)
  {
    id v1 = a1;
    id WeakRetained = objc_loadWeakRetained(a1 + 19);

    if (!WeakRetained)
    {
      long long v12 = 0u;
      long long v13 = 0u;
      long long v10 = 0u;
      long long v11 = 0u;
      objc_super v3 = [v1 observers];
      id v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
      if (v4)
      {
        id v5 = v4;
        uint64_t v6 = *(void *)v11;
        do
        {
          uint64_t v7 = 0;
          do
          {
            if (*(void *)v11 != v6) {
              objc_enumerationMutation(v3);
            }
            uint64_t v8 = *(void **)(*((void *)&v10 + 1) + 8 * (void)v7);
            objc_opt_class();
            if (objc_opt_isKindOfClass()) {
              objc_storeWeak(v1 + 19, v8);
            }
            uint64_t v7 = (char *)v7 + 1;
          }
          while (v5 != v7);
          id v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
        }
        while (v5);
      }
    }
    a1 = (id *)objc_loadWeakRetained(v1 + 19);
  }

  return a1;
}

id sub_1000247EC()
{
  id v0 = objc_alloc_init((Class)UILabel);
  id v1 = +[UIColor clearColor];
  [v0 setBackgroundColor:v1];

  unint64_t v2 = +[UIFont preferredFontForTextStyle:UIFontTextStyleBody];
  [v0 setFont:v2];

  objc_super v3 = +[PSListController appearance];
  id v4 = [v3 textColor];
  [v0 setTextColor:v4];

  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  LODWORD(v5) = 1144750080;
  [v0 setContentCompressionResistancePriority:0 forAxis:v5];

  return v0;
}

id sub_1000248DC()
{
  id v0 = objc_alloc_init((Class)UILabel);
  id v1 = +[UIFont preferredFontForTextStyle:UIFontTextStyleBody];
  [v0 setFont:v1];

  unint64_t v2 = +[UIColor tableCellGrayTextColor];
  [v0 setTextColor:v2];

  objc_super v3 = +[UIColor clearColor];
  [v0 setBackgroundColor:v3];

  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  LODWORD(v4) = 1144750080;
  [v0 setContentCompressionResistancePriority:0 forAxis:v4];

  return v0;
}

id sub_100025C5C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) displayUpdatePane];
}

void sub_1000261D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100026200(id a1)
{
  id v1 = pbb_setupflow_log();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Watch will update in Setup while not revlocked", v2, 2u);
  }
}

void sub_100026268(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v22 = a3;
  id v7 = a4;
  uint64_t v8 = +[NRPairedDeviceRegistry sharedInstance];
  [v8 resumePairingClientCrashMonitoring];

  id v9 = +[UIApplication sharedApplication];
  long long v10 = [v9 setupController];
  long long v11 = [v10 linkUpgradeMonitor];
  [v11 requestLinkUpgrade];

  long long v12 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v12);
  uint64_t v14 = [WeakRetained updateController];
  [v14 dismissViewControllerAnimated:1 completion:0];

  id v15 = objc_loadWeakRetained(v12);
  [v15 setDisplayingUpdatePane:0];

  id v16 = objc_loadWeakRetained(v12);
  [v16 setUpdateController:0];

  if (!a2)
  {
    id v17 = objc_loadWeakRetained(v12);
    [v17 cleanupAfterRestoreSuccess];
  }
  id v18 = objc_loadWeakRetained(v12);
  CFStringRef v19 = [v18 finishCompletion];

  if (v19)
  {
    id v20 = objc_loadWeakRetained(v12);
    uint64_t v21 = [v20 finishCompletion];
    ((void (**)(void, uint64_t, id, id))v21)[2](v21, a2, v22, v7);
  }
}

void sub_1000269EC(id a1, UIAlertAction *a2)
{
  id v2 = [UIApp setupController];
  [v2 companionDidFinishHealthSharingOptIn:0];
}

void sub_1000276C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000276DC(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  long long v11 = WeakRetained;
  if (v9)
  {
    long long v12 = pbb_bridge_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v40 = v9;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Error returned when gathering diagnostic log list: %@", buf, 0xCu);
    }
  }
  else
  {
    if (!WeakRetained) {
      goto LABEL_21;
    }
    if (![v7 count])
    {
      if ([v8 count])
      {
        [v11 setContainsAbsolutePath:1];
        uint64_t v26 = [v8 objectForKeyedSubscript:NSSFilesCategoryTypeDiagnostics];
        [v11 setFilePaths:v26];

        long long v27 = [v8 objectForKeyedSubscript:NSSFilesCategoryTypeSysdiagnose];
        [v11 setSysdiagnosePaths:v27];

        id v28 = [v8 objectForKeyedSubscript:NSSFilesCategoryTypeScreenshots];
        [v11 setScreenshotPaths:v28];

        uint64_t v29 = [v8 objectForKeyedSubscript:NSSFilesCategoryTypeScreenCaptures];
        [v11 setScreencapturePaths:v29];
      }
      goto LABEL_20;
    }
    id v31 = v8;
    id v30 = v11;
    [v11 setContainsAbsolutePath:0];
    long long v12 = objc_opt_new();
    long long v13 = objc_opt_new();
    uint64_t v14 = objc_opt_new();
    id v15 = objc_opt_new();
    long long v34 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    id v32 = v7;
    id v16 = v7;
    id v17 = [v16 countByEnumeratingWithState:&v34 objects:v38 count:16];
    if (v17)
    {
      id v18 = v17;
      uint64_t v19 = *(void *)v35;
      do
      {
        for (i = 0; i != v18; i = (char *)i + 1)
        {
          if (*(void *)v35 != v19) {
            objc_enumerationMutation(v16);
          }
          uint64_t v21 = *(void **)(*((void *)&v34 + 1) + 8 * i);
          unsigned __int8 v22 = [v21 _containsSubstring:*(void *)(a1 + 32)];
          uint64_t v23 = v14;
          if ((v22 & 1) == 0)
          {
            unsigned __int8 v24 = [v21 _containsSubstring:*(void *)(a1 + 40)];
            uint64_t v23 = v15;
            if ((v24 & 1) == 0)
            {
              if (![v21 _containsSubstring:*(void *)(a1 + 48)]
                || (v25 = [v21 hasSuffix:@"tar.gz"], uint64_t v23 = v13, (v25 & 1) == 0))
              {
                uint64_t v23 = v12;
              }
            }
          }
          [v23 addObject:v21];
        }
        id v18 = [v16 countByEnumeratingWithState:&v34 objects:v38 count:16];
      }
      while (v18);
    }

    long long v11 = v30;
    [v30 setFilePaths:v12];
    [v30 setSysdiagnosePaths:v13];
    [v30 setScreenshotPaths:v14];
    [v30 setScreencapturePaths:v15];

    id v8 = v31;
    id v7 = v32;
    id v9 = 0;
  }

  if (v11)
  {
LABEL_20:
    [v11 setPathsLoaded:1];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100027AA8;
    block[3] = &unk_1002438A0;
    void block[4] = v11;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
LABEL_21:
}

id sub_100027AA8(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadSpecifiers];
}

void sub_10002815C(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) diagFileSpecifier:a2 isScreenshot:0];
  [*(id *)(a1 + 32) recheckFileDownload:v3];
  [*(id *)(a1 + 40) addObject:v3];
}

void sub_1000281C8(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) diagFileSpecifier:a2 isScreenshot:0];
  [*(id *)(a1 + 32) recheckFileDownload:v3];
  [*(id *)(a1 + 40) addObject:v3];
}

void sub_100028234(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) diagFileSpecifier:a2 isScreenshot:1];
  [*(id *)(a1 + 32) recheckFileDownload:v3];
  [*(id *)(a1 + 40) addObject:v3];
}

void sub_1000282A0(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) diagFileSpecifier:a2 isScreenshot:1];
  [*(id *)(a1 + 32) recheckFileDownload:v3];
  [*(id *)(a1 + 40) addObject:v3];
}

void sub_1000284BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000284E0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = pbb_bridge_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = 138412290;
      id v13 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "error transferring log file: %@", (uint8_t *)&v12, 0xCu);
    }
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v9 = *(void *)(a1 + 32);
    long long v10 = [v5 absoluteString];
    [WeakRetained updateSpecifier:v9 withDownloadPath:v10];

    id v11 = objc_loadWeakRetained((id *)(a1 + 40));
    [v11 cancelTransferProgress:*(void *)(a1 + 32)];
  }
}

void sub_100028A08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100028A24(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = v3;
  if (v3 && [v3 code] != (id)9)
  {
    id WeakRetained = pbb_bridge_log();
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v7 = 138412290;
      uint64_t v8 = v6;
      _os_log_impl((void *)&_mh_execute_header, WeakRetained, OS_LOG_TYPE_DEFAULT, "error while attempting to cancel log transfer %@", (uint8_t *)&v7, 0xCu);
    }
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    [WeakRetained cancelTransferProgress:*(void *)(a1 + 40)];
  }
}

void sub_100028E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100028E8C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) propertyForKey:PSIDKey];
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v3 = [*(id *)(a1 + 40) downloadedDiagnosticLogs];
  id v4 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v14;
    while (2)
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v14 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*((void *)&v13 + 1) + 8 * i);
        uint64_t v9 = [v8 lastPathComponent];
        unsigned int v10 = [v2 isEqualToString:v9];

        if (v10)
        {
          id v11 = [*(id *)(a1 + 40) transferredFilesPath];
          int v12 = [v11 stringByAppendingPathComponent:v8];

          [*(id *)(a1 + 40) updateSpecifier:*(void *)(a1 + 32) withDownloadPath:v12];
          *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;

          goto LABEL_11;
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)) {
    [*(id *)(a1 + 40) checkIfFileInTransit:*(void *)(a1 + 32)];
  }
}

void sub_100029134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100029150(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) <= 0x62)
  {
    v7[3] = v2;
    v7[4] = v3;
    [*(id *)(a1 + 32) setProperty:&__kCFBooleanTrue forKey:@"DiagnosticLogDownloadingKey"];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_100029220;
    void v5[3] = &unk_100243D28;
    objc_copyWeak(v7, (id *)(a1 + 40));
    id v6 = *(id *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

    objc_destroyWeak(v7);
  }
}

void sub_100029220(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained reloadSpecifier:*(void *)(a1 + 32) animated:1];
}

id sub_100029338(uint64_t a1)
{
  [*(id *)(a1 + 32) setProperty:*(void *)(a1 + 40) forKey:@"DiagnosticLogSharePathKey"];
  [*(id *)(a1 + 32) setProperty:&__kCFBooleanTrue forKey:@"FileDownloadedKey"];
  [*(id *)(a1 + 32) setButtonAction:"showDeleteOrShareAlert:"];
  id v2 = *(void **)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 32);

  return [v2 reloadSpecifier:v3 animated:1];
}

id sub_1000295B8(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadSpecifier:*(void *)(a1 + 40) animated:1];
}

void sub_1000297C0(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100029854;
  v2[3] = &unk_100243908;
  v2[4] = v1;
  id v3 = *(id *)(a1 + 40);
  [v1 dismissViewControllerAnimated:1 completion:v2];
}

id sub_100029854(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeSpecifier:*(void *)(a1 + 40) animated:1];
}

uint64_t sub_1000299A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100029AF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100029B0C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = pbb_bridge_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      uint64_t v10 = v5;
      __int16 v11 = 2112;
      id v12 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "failed to delete file on gizmo %@ and error %@", buf, 0x16u);
    }
  }
  else
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100029C5C;
    void v6[3] = &unk_100243D28;
    objc_copyWeak(&v8, (id *)(a1 + 48));
    id v7 = *(id *)(a1 + 40);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

    objc_destroyWeak(&v8);
  }
}

void sub_100029C5C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained removeSpecifier:*(void *)(a1 + 32) animated:1];
}

void sub_100029EF8(id a1)
{
  id v1 = objc_alloc_init(COSInternalUserStudyDataManager);
  id v2 = (void *)qword_10029AEE0;
  qword_10029AEE0 = (uint64_t)v1;
}

void sub_10002AAB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10002AAD4()
{
  uint64_t v5 = 0;
  id v6 = &v5;
  uint64_t v7 = 0x2020000000;
  id v0 = (void **)qword_10029AF00;
  uint64_t v8 = qword_10029AF00;
  if (!qword_10029AF00)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_10002B604;
    v4[3] = &unk_1002436A8;
    void v4[4] = &v5;
    sub_10002B604((uint64_t)v4);
    id v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    id v3 = (_Unwind_Exception *)sub_100171A7C();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v3);
  }
  id v1 = *v0;

  return v1;
}

void sub_10002ABB8(uint64_t a1, int a2, void *a3)
{
  uint64_t v5 = a3;
  id v6 = pbb_accountsignin_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    CFStringRef v7 = @"NO";
    if (a2) {
      CFStringRef v7 = @"YES";
    }
    int v14 = 138412546;
    CFStringRef v15 = v7;
    __int16 v16 = 2112;
    id v17 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "AAUISignInController: should continue with displaying auth:%@ and error:%@", (uint8_t *)&v14, 0x16u);
  }

  if (a2)
  {
    uint64_t v8 = +[PSListController appearance];
    *(unsigned char *)(*(void *)(a1 + 32) + 30) = [v8 usesDarkTheme];

    uint64_t v9 = +[PSListController appearance];
    uint64_t v10 = +[UIColor blackColor];
    [v9 setTextColor:v10];

    __int16 v11 = +[PSListController appearance];
    [v11 setUsesDarkTheme:0];

    [*(id *)(a1 + 40) setModalPresentationStyle:0];
    [*(id *)(a1 + 32) presentViewController:*(void *)(a1 + 40) animated:1 completion:0];
  }
  else
  {
    id v12 = pbb_accountsignin_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      int v14 = 138412290;
      CFStringRef v15 = v5;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "AAUISignInController: should NOT continue, also returned error: %@", (uint8_t *)&v14, 0xCu);
    }

    long long v13 = [*(id *)(a1 + 32) view];
    [v13 setUserInteractionEnabled:1];
  }
}

id sub_10002B050(uint64_t a1)
{
  id v2 = pbb_accountsignin_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 136315138;
    uint64_t v8 = "-[COSAppleIDSkippedBenefitsViewController signInController:didCompleteWithSuccess:error:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%s -> dismissViewControllerAnimated", (uint8_t *)&v7, 0xCu);
  }

  id v3 = +[PSListController appearance];
  id v4 = BPSTextColor();
  [v3 setTextColor:v4];

  uint64_t v5 = +[PSListController appearance];
  [v5 setUsesDarkTheme:*(unsigned __int8 *)(*(void *)(a1 + 32) + 30)];

  return [*(id *)(a1 + 32) updateUIFromLoginStatus];
}

void sub_10002B248(uint64_t a1)
{
  id v2 = pbb_accountsignin_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 136315138;
    uint64_t v5 = "-[COSAppleIDSkippedBenefitsViewController signInControllerDidCancel:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%s -> dismissViewControllerAnimated", (uint8_t *)&v4, 0xCu);
  }

  [*(id *)(a1 + 32) updateUIFromLoginStatus];
  id v3 = +[PSListController appearance];
  [v3 setUsesDarkTheme:*(unsigned __int8 *)(*(void *)(a1 + 32) + 30)];
}

void sub_10002B33C(id a1)
{
  id v1 = [UIApp setupController];
  [v1 updateNanoRegistryToNormalState];

  id v2 = [UIApp setupController];
  [v2 updateActivelyPairingWatchBuddyStage:2];
}

Class sub_10002B44C(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_10029AEF8)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = sub_10002B590;
    void v4[4] = &unk_1002436E0;
    void v4[5] = v4;
    long long v5 = off_100243E20;
    uint64_t v6 = 0;
    qword_10029AEF8 = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!qword_10029AEF8)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("AAUISignInController");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    id v2 = (void *)sub_100171AA0();
LABEL_8:
    free(v2);
  }
  qword_10029AEF0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_10002B590()
{
  uint64_t result = _sl_dlopen();
  qword_10029AEF8 = result;
  return result;
}

void *sub_10002B604(uint64_t a1)
{
  v5[0] = 0;
  if (!qword_10029AF08)
  {
    v5[1] = _NSConcreteStackBlock;
    v5[2] = 3221225472;
    void v5[3] = sub_10002B744;
    void v5[4] = &unk_1002436E0;
    void v5[5] = v5;
    long long v6 = off_100243E38;
    uint64_t v7 = 0;
    qword_10029AF08 = _sl_dlopen();
    id v3 = (void *)v5[0];
    id v2 = (void *)qword_10029AF08;
    if (qword_10029AF08)
    {
      if (!v5[0]) {
        goto LABEL_5;
      }
    }
    else
    {
      id v3 = (void *)abort_report_np();
    }
    free(v3);
    goto LABEL_5;
  }
  id v2 = (void *)qword_10029AF08;
LABEL_5:
  uint64_t result = dlsym(v2, "AIDAServiceTypeMessages");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_10029AF00 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_10002B744()
{
  uint64_t result = _sl_dlopen();
  qword_10029AF08 = result;
  return result;
}

void sub_10002BA3C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_class(), (objc_opt_isKindOfClass()))
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    uint64_t v7 = pbb_bridge_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 138412546;
      id v9 = v5;
      __int16 v10 = 2112;
      id v11 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Unexpected value in resume pairing state: %@ %@", (uint8_t *)&v8, 0x16u);
    }
  }
}

void sub_10002C540(id a1, NSString *a2, NSNumber *a3)
{
  int v4 = a2;
  id v5 = a3;
  Class v6 = NSClassFromString(v4);
  if (!v6)
  {
    id v9 = pbb_bridge_log();
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR) || !os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_12;
    }
    int v12 = 138412290;
    long long v13 = v4;
    id v11 = "%@ class is nil!";
    goto LABEL_11;
  }
  Class v7 = v6;
  char v8 = objc_opt_respondsToSelector();
  id v9 = pbb_bridge_log();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
  if ((v8 & 1) == 0)
  {
    if (!v10)
    {
LABEL_12:

      goto LABEL_13;
    }
    int v12 = 138412290;
    long long v13 = v4;
    id v11 = "%@ doesn't implement resumePairingWithSavedValue";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&v12, 0xCu);
    goto LABEL_12;
  }
  if (v10)
  {
    int v12 = 138412546;
    long long v13 = v4;
    __int16 v14 = 2112;
    CFStringRef v15 = v5;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%@: resuming pairing with %@", (uint8_t *)&v12, 0x16u);
  }

  [(objc_class *)v7 resumePairingWithSavedValue:v5];
LABEL_13:
}

void sub_10002C7D4(id a1, NSString *a2, NSNumber *a3)
{
  int v4 = a2;
  id v5 = a3;
  Class v6 = NSClassFromString(v4);
  if (!v6)
  {
    id v9 = pbb_bridge_log();
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR) || !os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_12;
    }
    int v12 = 138412290;
    long long v13 = v4;
    id v11 = "%@ class is nil!";
    goto LABEL_11;
  }
  Class v7 = v6;
  char v8 = objc_opt_respondsToSelector();
  id v9 = pbb_bridge_log();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
  if ((v8 & 1) == 0)
  {
    if (!v10)
    {
LABEL_12:

      goto LABEL_13;
    }
    int v12 = 138412290;
    long long v13 = v4;
    id v11 = "%@ doesn't implement resumePairingDidFinishIPEWithSavedValue";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&v12, 0xCu);
    goto LABEL_12;
  }
  if (v10)
  {
    int v12 = 138412546;
    long long v13 = v4;
    __int16 v14 = 2112;
    CFStringRef v15 = v5;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%@: resuming pairing post-IPE with %@", (uint8_t *)&v12, 0x16u);
  }

  [(objc_class *)v7 resumePairingDidFinishIPEWithSavedValue:v5];
LABEL_13:
}

void sub_10002DE58(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

id sub_10002E6F0(uint64_t a1, uint64_t a2)
{
  [*(id *)(*(void *)(a1 + 32) + 16) setProxiedDevice:a2];
  id v3 = *(void **)(a1 + 32);

  return [v3 startCreation];
}

id sub_10002EC88(uint64_t a1)
{
  return +[COSSatellitePairingHelper popToLoginControllerFromController:*(void *)(a1 + 32)];
}

id sub_10002EC9C(uint64_t a1)
{
  return [*(id *)(a1 + 32) presentViewController:*(void *)(a1 + 40) animated:1 completion:0];
}

id sub_10002ECB0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  [WeakRetained buddyControllerCancelAnyHold];

  id v3 = *(void **)(a1 + 40);
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 32);

  return [v3 setViewControllers:v4 animated:1];
}

id sub_10002EFB8(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) setBuddyControllerDelegate:*(void *)(a1 + 40)];
  *(unsigned char *)(*(void *)(a1 + 32) + 17) = 1;
  id v2 = *(void **)(a1 + 32);

  return [v2 setupSharingIfReady];
}

void sub_10002F184(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10002F1A0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained handleLegalDocuments:v6 error:v5];
}

id sub_100030B44(uint64_t a1)
{
  uint64_t v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"RF_URL_INFO" value:&stru_100249230 table:@"Localizable"];

  uint64_t v4 = [*(id *)(a1 + 32) valueForProperty:NRDevicePropertyProductType];
  id v5 = +[NSLocale preferredLanguages];
  id v6 = +[NSLocale systemLanguages];
  Class v7 = +[NSBundle preferredLocalizationsFromArray:v6 forPreferences:v5];
  if ([v7 count])
  {
    char v8 = [v7 objectAtIndexedSubscript:0];
    if ([v8 length])
    {
      id v9 = [v7 objectAtIndexedSubscript:0];
    }
    else
    {
      id v9 = @"en";
    }
  }
  else
  {
    id v9 = @"en";
  }
  uint64_t v10 = +[NSString stringWithFormat:@"www.apple.com/legal/rfexposure/%@/%@/", v4, v9];
  id v11 = +[NSString stringWithFormat:@"<a href=\"https://%@\">%@</a>", v10, v10];
  int v12 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v3, v11);

  return v12;
}

void sub_100031568(void *a1)
{
  id v1 = a1;
  id v5 = (id)objc_opt_new();
  [v5 configureWithTransparentBackground];
  uint64_t v2 = +[UIColor blackColor];
  id v3 = [v2 colorWithAlphaComponent:0.99];
  [v5 setBackgroundColor:v3];

  [v1 setStandardAppearance:v5];
  uint64_t v4 = BPSBridgeTintColor();
  [v1 setTintColor:v4];
}

id sub_100031630(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = objc_alloc_init((Class)UIView);
  id v5 = +[UIButton buttonWithType:0];
  [v5 addTarget:v3 action:a2 forControlEvents:64];

  id v6 = v5;
  [v4 addSubview:v5];
  id v7 = objc_alloc((Class)UIImageView);
  char v8 = +[UIImage kitImageNamed:@"UINavigationBarBackIndicatorDefault.png"];
  id v9 = [v8 imageWithRenderingMode:2];
  uint64_t v10 = [v9 imageFlippedForRightToLeftLayoutDirection];
  id v11 = [v7 initWithImage:v10];

  [v11 sizeToFit];
  id v12 = objc_alloc_init((Class)UILabel);
  long long v13 = +[NSBundle mainBundle];
  __int16 v14 = [v13 localizedStringForKey:@"BACK" value:&stru_100249230 table:@"Localizable"];
  [v12 setText:v14];

  CFStringRef v15 = BPSSetupTintColor();
  [v12 setTextColor:v15];

  [v12 _setWantsUnderlineForAccessibilityButtonShapesEnabled:1];
  [v12 sizeToFit];
  [v4 addSubview:v11];
  [v4 addSubview:v12];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  v57 = [v4 heightAnchor];
  v56 = [v57 constraintEqualToConstant:20.5];
  v58[0] = v56;
  v55 = [v6 topAnchor];
  v54 = [v4 topAnchor];
  id v52 = [v55 constraintEqualToAnchor:v54];
  v58[1] = v52;
  v51 = [v6 bottomAnchor];
  v50 = [v4 bottomAnchor];
  v49 = [v51 constraintEqualToAnchor:v50];
  v58[2] = v49;
  v53 = v6;
  id v48 = [v6 leadingAnchor];
  id v47 = [v4 leadingAnchor];
  uint64_t v46 = [v48 constraintEqualToAnchor:v47];
  v58[3] = v46;
  id v45 = [v6 trailingAnchor];
  id v44 = [v4 trailingAnchor];
  BOOL v43 = [v45 constraintEqualToAnchor:v44];
  v58[4] = v43;
  id v41 = [v12 topAnchor];
  id v40 = [v4 topAnchor];
  v39 = [v41 constraintEqualToAnchor:v40];
  v58[5] = v39;
  long long v37 = [v12 bottomAnchor];
  long long v36 = [v4 bottomAnchor];
  long long v35 = [v37 constraintEqualToAnchor:v36];
  v58[6] = v35;
  long long v34 = [v11 topAnchor];
  id v33 = [v4 topAnchor];
  id v32 = [v34 constraintEqualToAnchor:v33];
  v58[7] = v32;
  id v31 = [v11 bottomAnchor];
  id v30 = [v4 bottomAnchor];
  uint64_t v29 = [v31 constraintEqualToAnchor:v30];
  v58[8] = v29;
  __int16 v16 = v11;
  __int16 v42 = v11;
  id v28 = [v11 leadingAnchor];
  id v17 = [v4 leadingAnchor];
  id v18 = [v28 constraintEqualToAnchor:v17];
  v58[9] = v18;
  uint64_t v19 = [v16 trailingAnchor];
  __int16 v38 = v12;
  id v20 = [v12 leadingAnchor];
  uint64_t v21 = [v19 constraintEqualToAnchor:v20 constant:-6.0];
  v58[10] = v21;
  unsigned __int8 v22 = [v12 trailingAnchor];
  uint64_t v23 = [v4 trailingAnchor];
  unsigned __int8 v24 = [v22 constraintEqualToAnchor:v23];
  v58[11] = v24;
  unsigned __int8 v25 = +[NSArray arrayWithObjects:v58 count:12];
  +[NSLayoutConstraint activateConstraints:v25];

  id v26 = [objc_alloc((Class)UIBarButtonItem) initWithCustomView:v4];

  return v26;
}

id sub_100031C7C()
{
  if (qword_10029AF20 != -1) {
    dispatch_once(&qword_10029AF20, &stru_100243F78);
  }
  id v0 = (void *)qword_10029AF18;

  return v0;
}

void sub_100031CD0(id a1)
{
  id v1 = objc_alloc((Class)AIDAServiceOwnersManager);
  id v4 = objc_alloc_init((Class)ACAccountStore);
  id v2 = [v1 initWithAccountStore:v4];
  id v3 = (void *)qword_10029AF18;
  qword_10029AF18 = (uint64_t)v2;
}

id sub_100031D44()
{
  if (qword_10029AF30 != -1) {
    dispatch_once(&qword_10029AF30, &stru_100243F98);
  }
  id v0 = (void *)qword_10029AF28;

  return v0;
}

void sub_100031D98(id a1)
{
  id v3 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_USER_INITIATED, 0);
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.Bridge.NPSQueue", v3);
  id v2 = (void *)qword_10029AF28;
  qword_10029AF28 = (uint64_t)v1;
}

void sub_100031E00(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  char v8 = v7;
  if (v5 && v6 && v7)
  {
    id v9 = sub_100031D44();
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100031F94;
    block[3] = &unk_100243B98;
    id v12 = v5;
    id v13 = v8;
    id v14 = v6;
    dispatch_async(v9, block);

    uint64_t v10 = v12;
  }
  else
  {
    uint64_t v10 = pbb_bridge_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412802;
      id v16 = v5;
      __int16 v17 = 2112;
      id v18 = v6;
      __int16 v19 = 2112;
      id v20 = v8;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Domain=%@, key=%@, value=%@ must all be non-nil", buf, 0x20u);
    }
  }
}

void sub_100031F94(void *a1)
{
  id v2 = [objc_alloc((Class)NPSDomainAccessor) initWithDomain:a1[4]];
  id v3 = v2;
  if (v2)
  {
    [v2 setObject:a1[5] forKey:a1[6]];
    id v4 = [v3 synchronize];
    id v5 = objc_opt_new();
    uint64_t v6 = a1[4];
    uint64_t v10 = a1[6];
    id v7 = +[NSArray arrayWithObjects:&v10 count:1];
    char v8 = +[NSSet setWithArray:v7];
    [v5 synchronizeNanoDomain:v6 keys:v8];
  }
  else
  {
    id v5 = pbb_bridge_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = a1[4];
      *(_DWORD *)buf = 138412290;
      uint64_t v12 = v9;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Could not create accessor for: %@", buf, 0xCu);
    }
  }
}

void sub_100032108(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  char v8 = v7;
  if (v5 && v6 && v7)
  {
    uint64_t v9 = sub_100031D44();
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000322B4;
    block[3] = &unk_100243FC0;
    id v13 = v5;
    id v14 = v6;
    id v15 = v8;
    dispatch_async(v9, block);

    uint64_t v10 = v13;
  }
  else
  {
    uint64_t v10 = pbb_bridge_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      id v11 = objc_retainBlock(v8);
      *(_DWORD *)buf = 138412802;
      id v17 = v5;
      __int16 v18 = 2112;
      id v19 = v6;
      __int16 v20 = 2112;
      id v21 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Domain=%@, key=%@, completionHandler=%@ must all be non-nil", buf, 0x20u);
    }
  }
}

void sub_1000322B4(void *a1)
{
  id v2 = [objc_alloc((Class)NPSDomainAccessor) initWithDomain:a1[4]];
  id v3 = v2;
  if (v2)
  {
    id v4 = [v2 synchronize];
    id v5 = [v3 objectForKey:a1[5]];
    (*(void (**)(void))(a1[6] + 16))();
  }
  else
  {
    id v5 = pbb_bridge_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = a1[4];
      int v7 = 138412290;
      uint64_t v8 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Could not create accessor for: %@", (uint8_t *)&v7, 0xCu);
    }
  }
}

id sub_1000323D0()
{
  id result = sub_100008380();
  if (result)
  {
    dispatch_queue_t v1 = +[NSUserDefaults standardUserDefaults];
    id v2 = [v1 BOOLForKey:@"COSEnableInternalUI"];

    return v2;
  }
  return result;
}

uint64_t sub_100032420()
{
  uint64_t result = PBIsInternalInstall();
  if (result) {
    return CFPreferencesGetAppBooleanValue(@"_ShowInternalAutomationUI", @"com.apple.nanobuddy.automationhelper", 0) != 0;
  }
  return result;
}

id sub_10003245C()
{
  if (!PBIsInternalInstall() || (sub_100032420() & 1) != 0) {
    return 0;
  }
  dispatch_queue_t v1 = +[NSUserDefaults standardUserDefaults];
  id v0 = [v1 integerForKey:@"COSCameraUserTestingID"];

  return v0;
}

id sub_1000324BC()
{
  if (!PBIsInternalInstall() || (sub_100032420() & 1) != 0) {
    return 0;
  }
  dispatch_queue_t v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 BOOLForKey:@"COSWristOnlyUserStudy"];

  return v2;
}

uint64_t sub_10003251C()
{
  uint64_t result = PBIsInternalInstall();
  if (result) {
    return sub_100032420() ^ 1;
  }
  return result;
}

BOOL sub_100032540()
{
  return (int)sub_10003245C() > 0;
}

id sub_100032560(id result)
{
  if (result)
  {
    id v1 = result;
    id v2 = [objc_alloc((Class)NSUUID) initWithUUIDString:@"02168E84-5DD8-4B19-9204-A79F04B33A32"];
    id v3 = [v1 supportsCapability:v2];

    return v3;
  }
  return result;
}

id sub_1000325D0()
{
  id v0 = -[COSTinkerHealthSharingSetupDelegate tinkerDevice]_0();
  id v1 = sub_100032560(v0);

  return v1;
}

id sub_100032608(id result)
{
  if (result)
  {
    id v1 = result;
    id v2 = [objc_alloc((Class)NSUUID) initWithUUIDString:@"0054136F-C120-452A-93D8-9259272B812F"];
    id v3 = [v1 supportsCapability:v2];

    return v3;
  }
  return result;
}

id sub_100032678()
{
  id v0 = sub_1000327C0(@"https://www.apple.com/help/watch-app/learn-more");
  id v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 objectForKey:@"COSAppleWatchLinkURLOverride"];

  if ([v2 isMemberOfClass:objc_opt_class()])
  {
    id v3 = v2;

    id v0 = v3;
  }
  id v4 = pbb_bridge_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 138412290;
    uint64_t v8 = v0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "watchMarketing link %@", (uint8_t *)&v7, 0xCu);
  }

  id v5 = +[NSURL URLWithString:v0];

  return v5;
}

id sub_1000327C0(void *a1)
{
  id v1 = a1;
  id v2 = +[NSLocale currentLocale];
  id v3 = +[NSLocale deviceLanguageIdentifier];
  id v4 = [v2 objectForKey:NSLocaleCountryCode];
  if (v4) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (v5)
  {
    id v9 = v1;
  }
  else
  {
    uint64_t v6 = +[NSString stringWithFormat:@"country=%@&lang=%@", v4, v3];
    int v7 = +[NSCharacterSet URLHostAllowedCharacterSet];
    uint64_t v8 = [v6 stringByAddingPercentEncodingWithAllowedCharacters:v7];

    id v9 = +[NSString stringWithFormat:@"%@/?%@", v1, v8];
  }

  return v9;
}

CFStringRef sub_1000328F0()
{
  return @"DeviceAssets/";
}

NSString *sub_1000328FC(uint64_t a1)
{
  return +[NSString stringWithFormat:@"%@%@", @"DeviceAssets/", a1];
}

NSString *sub_10003293C()
{
  return +[NSString stringWithFormat:@"%@%@", @"DeviceAssets/", @"Screen-Diagnostics"];
}

id sub_100032A18()
{
  if (qword_10029AF50 != -1) {
    dispatch_once(&qword_10029AF50, &stru_100244040);
  }
  id v0 = (void *)qword_10029AF48;

  return v0;
}

void sub_100032A6C(id a1)
{
  BPSTextColor();
  id v4 = (id)objc_claimAutoreleasedReturnValue();
  id v1 = [v4 styleString];
  +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"        var spans = document.getElementsByTagName('SPAN');        for (var i = 0; i < spans.length; i += 1) {        spans[i].style.color='%1$@';        }        var paragraphs = document.getElementsByTagName('P');        for (var i = 0; i < paragraphs.length; i += 1) {        paragraphs[i].style.color='%1$@';        }",
  uint64_t v2 = v1);
  id v3 = (void *)qword_10029AF48;
  qword_10029AF48 = v2;
}

uint64_t sub_100032AF0()
{
  return _SFIsAppWithBundleIDInstalled(@"com.apple.TestFlight");
}

id sub_100032AFC(void *a1)
{
  id v1 = a1;
  id v11 = 0;
  id v2 = [objc_alloc((Class)LSApplicationRecord) initWithBundleIdentifier:v1 allowPlaceholder:0 error:&v11];
  id v3 = v11;
  if (v3)
  {
    id v4 = pbb_bridge_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      id v13 = v1;
      __int16 v14 = 2112;
      id v15 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Error while retrieving application record %@ with error %@", buf, 0x16u);
    }
  }
  BOOL v5 = [v2 iTunesMetadata];
  uint64_t v6 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", [v5 storeItemIdentifier]);

  if (v2) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7)
  {
    id v9 = 0;
  }
  else
  {
    uint64_t v8 = +[NSString stringWithFormat:@"itms-beta://beta.itunes.apple.com/v1/app/%@?action=installWatchApp", v6];
    id v9 = +[NSURL URLWithString:v8];
  }

  return v9;
}

NSURL *sub_100032C9C()
{
  return +[NSURL URLWithString:@"itms-apps://itunes.apple.com/app/id899247664"];
}

id sub_100032CB0(void *a1)
{
  id v1 = a1;
  id v7 = 0;
  id v2 = [objc_alloc((Class)LSApplicationRecord) initWithBundleIdentifier:v1 allowPlaceholder:0 error:&v7];
  id v3 = v7;
  if (v3)
  {
    id v4 = pbb_bridge_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      id v9 = v1;
      __int16 v10 = 2112;
      id v11 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Error while retrieving application record %@ with error %@", buf, 0x16u);
    }
  }
  id v5 = [v2 isBeta];

  return v5;
}

void sub_100032DBC(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v8 = +[ACXDeviceConnection sharedDeviceConnection];
  if (v5 && v6)
  {
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_100032FD8;
    v12[3] = &unk_100244068;
    id v13 = v6;
    id v14 = v5;
    id v15 = v7;
    [v8 applicationIsInstalledOnPairedDevice:v14 withBundleID:v13 completion:v12];

    id v9 = v13;
  }
  else
  {
    __int16 v10 = pbb_bridge_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v19 = v6;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "error checking (%@) install status: nil device or nil bundle ID", buf, 0xCu);
    }

    NSErrorUserInfoKey v16 = NSLocalizedDescriptionKey;
    CFStringRef v17 = @"nil device or nil bundle ID";
    id v11 = +[NSDictionary dictionaryWithObjects:&v17 forKeys:&v16 count:1];
    id v9 = +[NSError errorWithDomain:@"COSAppInstallationStatusErrorDomain" code:1 userInfo:v11];

    (*((void (**)(id, void, void *))v7 + 2))(v7, 0, v9);
  }
}

void sub_100032FD8(void *a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = pbb_bridge_log();
  id v7 = v6;
  if (v5)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = a1[4];
      uint64_t v9 = a1[5];
      __int16 v10 = [v5 localizedDescription];
      int v12 = 138412802;
      uint64_t v13 = v8;
      __int16 v14 = 2112;
      uint64_t v15 = v9;
      __int16 v16 = 2112;
      CFStringRef v17 = v10;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "error checking %@ install status for device %@: %@", (uint8_t *)&v12, 0x20u);
    }
  }
  else if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = a1[4];
    int v12 = 138412546;
    uint64_t v13 = v11;
    __int16 v14 = 1024;
    LODWORD(v15) = a2;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Install status for (%@): %i", (uint8_t *)&v12, 0x12u);
  }

  (*(void (**)(void))(a1[6] + 16))();
}

void sub_100033160(uint64_t a1)
{
  id v10 = (id)objc_opt_new();
  id v2 = objc_alloc((Class)NPSDomainAccessor);
  uint64_t v3 = kBridgeDomain;
  id v4 = +[UIApplication sharedApplication];
  id v5 = [v4 activeWatch];
  id v6 = [v2 initWithDomain:v3 pairedDevice:v5];

  [v6 setBool:a1 forKey:@"AutoUpdate"];
  id v7 = [v6 synchronize];
  uint64_t v8 = [v6 domain];
  uint64_t v9 = +[NSSet setWithObject:@"AutoUpdate"];
  [v10 synchronizeNanoDomain:v8 keys:v9];
}

id sub_100033280()
{
  id v0 = objc_alloc((Class)NPSDomainAccessor);
  uint64_t v1 = kBridgeDomain;
  id v2 = +[UIApplication sharedApplication];
  uint64_t v3 = [v2 activeWatch];
  id v4 = [v0 initWithDomain:v1 pairedDevice:v3];

  id v5 = [v4 synchronize];
  id v6 = [v4 objectForKey:@"AutoUpdate"];
  id v7 = [v6 BOOLValue];

  return v7;
}

uint64_t sub_100033338()
{
  if (qword_10029AF60 != -1) {
    dispatch_once(&qword_10029AF60, &stru_100244088);
  }
  return byte_10029AF58;
}

void sub_10003337C(id a1)
{
  byte_10029AF58 = MGGetBoolAnswer();
}

id sub_1000333A4()
{
  id v0 = +[NRPairedDeviceRegistry sharedInstance];
  uint64_t v1 = +[NRPairedDeviceRegistry activePairedDeviceSelectorBlock];
  id v2 = [v0 getAllDevicesWithArchivedDevicesMatching:v1];
  uint64_t v3 = [v2 firstObject];

  id v4 = [v3 valueForProperty:NRDevicePropertyIsArchived];
  if ([v4 BOOLValue]) {
    id v5 = 0;
  }
  else {
    id v5 = v3;
  }
  id v6 = v5;

  return v6;
}

BOOL sub_100033454(id a1, NRDevice *a2)
{
  uint64_t v2 = NRDevicePropertyIsArchived;
  uint64_t v3 = a2;
  id v4 = [(NRDevice *)v3 valueForProperty:v2];
  id v5 = [(NRDevice *)v3 valueForProperty:NRDevicePropertyIsPaired];
  id v6 = [(NRDevice *)v3 valueForProperty:NRDevicePropertyIsAltAccount];

  if ([v5 BOOLValue]
    && ([v6 BOOLValue] & 1) == 0
    && ![v4 BOOLValue]
    || [v5 BOOLValue] && (objc_msgSend(v6, "BOOLValue") & 1) != 0)
  {
    unsigned __int8 v7 = 1;
  }
  else if ([v4 BOOLValue])
  {
    unsigned __int8 v7 = [v6 BOOLValue];
  }
  else
  {
    unsigned __int8 v7 = 0;
  }

  return v7;
}

BOOL sub_10003354C(id a1, NRDevice *a2)
{
  uint64_t v2 = NRDevicePropertyIsArchived;
  uint64_t v3 = a2;
  id v4 = [(NRDevice *)v3 valueForProperty:v2];
  id v5 = [(NRDevice *)v3 valueForProperty:NRDevicePropertyIsPaired];
  id v6 = [(NRDevice *)v3 valueForProperty:NRDevicePropertyIsAltAccount];

  if ([v5 BOOLValue] && (objc_msgSend(v6, "BOOLValue") & 1) == 0) {
    unsigned int v7 = [v4 BOOLValue] ^ 1;
  }
  else {
    LOBYTE(v7) = 0;
  }

  return v7;
}

id sub_10003360C()
{
  id v0 = +[NRPairedDeviceRegistry sharedInstance];
  uint64_t v1 = [v0 getAllDevicesWithArchivedAltAccountDevicesMatching:&stru_100244108];

  return v1;
}

BOOL sub_100033668(id a1, NRDevice *a2)
{
  uint64_t v2 = NRDevicePropertyIsArchived;
  uint64_t v3 = a2;
  id v4 = [(NRDevice *)v3 valueForProperty:v2];
  id v5 = [(NRDevice *)v3 valueForProperty:NRDevicePropertyIsPaired];
  id v6 = [(NRDevice *)v3 valueForProperty:NRDevicePropertyIsAltAccount];

  if ([v5 BOOLValue] && (objc_msgSend(v6, "BOOLValue") & 1) == 0) {
    unsigned int v7 = [v4 BOOLValue] ^ 1;
  }
  else {
    LOBYTE(v7) = 0;
  }

  return v7;
}

BOOL sub_100033728(id a1, NRDevice *a2)
{
  return 1;
}

BOOL sub_100033730(id a1, NRDevice *a2)
{
  uint64_t v2 = [(NRDevice *)a2 valueForProperty:NRDevicePropertyIsAltAccount];
  unsigned __int8 v3 = [v2 BOOLValue];

  return v3;
}

id sub_100033778()
{
  id v0 = +[NRPairedDeviceRegistry sharedInstance];
  uint64_t v1 = [v0 getAllDevicesWithArchivedAltAccountDevicesMatching:&stru_100244168];

  return v1;
}

BOOL sub_1000337D4(id a1, NRDevice *a2)
{
  uint64_t v2 = a2;
  unsigned __int8 v3 = [(NRDevice *)v2 valueForProperty:NRDevicePropertyIsAltAccount];
  if ([v3 BOOLValue])
  {
    id v4 = [(NRDevice *)v2 valueForProperty:_NRDevicePropertyCompatibilityState];
    BOOL v5 = [v4 intValue] != 2;
  }
  else
  {
    BOOL v5 = 0;
  }

  return v5;
}

BOOL sub_100033860()
{
  Boolean keyExistsAndHasValidFormat = 0;
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(@"EnableMagicSwitch", @"com.apple.NanoRegistry", &keyExistsAndHasValidFormat);
  if (keyExistsAndHasValidFormat) {
    BOOL v1 = AppBooleanValue == 0;
  }
  else {
    BOOL v1 = 0;
  }
  return !v1;
}

void sub_1000338A8(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    id v2 = objc_alloc((Class)NPSDomainAccessor);
    id v4 = [v2 initWithDomain:kBridgeDomain pairedDevice:v1];

    [v4 removeObjectForKey:@"BuildWatchIsUpdatingFrom"];
    id v3 = [v4 synchronize];
  }
}

id sub_10003393C(void *a1, const char *a2)
{
  if (a2 == (const char *)2) {
    CFStringRef v2 = @"-victory";
  }
  else {
    CFStringRef v2 = &stru_100249230;
  }
  return [a1 stringByAppendingString:v2];
}

void sub_100033958(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v8 = v7;
  if (v7)
  {
    if (v5)
    {
      id v9 = objc_alloc_init((Class)HKHealthStore);
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      v10[2] = sub_100033A58;
      v10[3] = &unk_1002441D8;
      id v11 = v6;
      id v12 = v8;
      [v9 profileIdentifierForNRDeviceUUID:v5 completion:v10];
    }
    else
    {
      (*((void (**)(id, void))v7 + 2))(v7, 0);
    }
  }
}

void sub_100033A58(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(NSObject **)(a1 + 32);
  id v5 = v4;
  if (!v4)
  {
    id v5 = &_dispatch_main_q;
    id v6 = &_dispatch_main_q;
  }
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100033B34;
  v8[3] = &unk_1002441B0;
  id v9 = v3;
  id v10 = *(id *)(a1 + 40);
  id v7 = v3;
  dispatch_async(v5, v8);
  if (!v4) {
}
  }

void sub_100033B34(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = objc_alloc_init((Class)HKHealthStore);
    [v2 setProfileIdentifier:*(void *)(a1 + 32)];
    [v2 resume];
  }
  else
  {
    id v2 = 0;
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

BOOL sub_100033BB4()
{
  return CFPreferencesGetAppIntegerValue(@"lastUnpairReason", @"com.apple.NanoRegistry", 0) == 3;
}

uint64_t sub_100033EA4()
{
  if (qword_10029AF70 != -1) {
    dispatch_once(&qword_10029AF70, &stru_1002441F8);
  }
  id v0 = pbb_bridge_log();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
  {
    if (byte_10029AF68) {
      CFStringRef v1 = @"Skip SyncTrap";
    }
    else {
      CFStringRef v1 = @"SyncTrap Mode";
    }
    int v3 = 138412290;
    CFStringRef v4 = v1;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "%@", (uint8_t *)&v3, 0xCu);
  }

  return byte_10029AF68;
}

void sub_100033F90(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  byte_10029AF68 = [v1 BOOLForKey:@"SkipSyncTrap"];
}

id sub_100033FE8()
{
  id v0 = +[UIDevice currentDevice];
  id v1 = [v0 sf_isiPhone];

  return v1;
}

id sub_100034028()
{
  id v0 = +[UIDevice currentDevice];
  id v1 = [v0 sf_isiPad];

  return v1;
}

void sub_100034068()
{
  id v0 = +[NSUserDefaults standardUserDefaults];
  [v0 removeObjectForKey:@"DisplayGraduationUnpairInstructions"];

  id v1 = +[NRPairedDeviceRegistry sharedInstance];
  [v1 clearWatchNeedsGraduation:&stru_100244238];
}

void sub_1000340E4(id a1, NSError *a2)
{
  id v2 = a2;
  int v3 = pbb_bridge_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    id v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Cleared watch needs gradutation: %@\n", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100034190(id a1)
{
  qword_10029AF78 = ct_green_tea_logger_create();
}

void sub_1000341B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v9 = a1;
  if (qword_10029AF80 != -1) {
    dispatch_once(&qword_10029AF80, &stru_100244258);
  }
  if (qword_10029AF78)
  {
    id v10 = getCTGreenTeaOsLogHandle();
    id v11 = v10;
    if (v10 && os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      id v12 = [objc_alloc((Class)NSString) initWithFormat:v9 arguments:&a9];
      *(_DWORD *)buf = 138543618;
      CFStringRef v14 = @"com.apple.Bridge";
      __int16 v15 = 2114;
      id v16 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "[%{public}@] %{public}@", buf, 0x16u);
    }
  }
}

id sub_1000342E4()
{
  id v0 = (void *)MGCopyAnswer();

  return v0;
}

uint64_t sub_100034318()
{
  uint64_t result = _sl_dlopen();
  qword_10029AF90 = result;
  return result;
}

void sub_1000346A0(id a1)
{
  v7.width = 27.0;
  v7.height = 27.0;
  UIGraphicsBeginImageContextWithOptions(v7, 0, 0.0);
  CurrentContext = UIGraphicsGetCurrentContext();
  id v2 = +[UIColor systemOrangeColor];
  [v2 setStroke];

  CGContextSetLineWidth(CurrentContext, 1.0);
  v8.origin.x = 1.0;
  v8.origin.y = 1.0;
  v8.size.width = 25.0;
  v8.size.height = 25.0;
  CGContextStrokeEllipseInRect(CurrentContext, v8);
  int v3 = +[UIColor clearColor];
  [v3 setFill];

  v9.origin.x = 13.0;
  v9.origin.y = 10.0;
  v9.size.width = 14.0;
  v9.size.height = 5.5;
  UIRectFill(v9);
  uint64_t v4 = UIGraphicsGetImageFromCurrentImageContext();
  id v5 = (void *)qword_10029AF98;
  qword_10029AF98 = v4;

  UIGraphicsEndImageContext();
}

void sub_100034E48(id a1)
{
  id v1 = +[UIColor colorWithRed:0.992 green:0.51 blue:0.031 alpha:0.85];
  uint64_t v2 = BPSTintedSymbol();

  int v3 = (void *)qword_10029AFA8;
  qword_10029AFA8 = v2;
}

void sub_100035550(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = pbb_bridge_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412546;
    uint64_t v10 = v7;
    __int16 v11 = 2112;
    id v12 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "installApplication %@ error: (%@)", buf, 0x16u);
  }

  if (v5)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100035684;
    v8[3] = &unk_1002437D0;
    void v8[4] = *(void *)(a1 + 40);
    v8[5] = a2;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v8);
    sub_100035714(v5);
  }
}

id sub_100035684(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + OBJC_IVAR___PSTableCell__specifier));
  int v3 = +[NSNumber numberWithInteger:*(void *)(a1 + 40)];
  [WeakRetained setProperty:v3 forKey:@"COSSockPuppetInstallationState"];

  uint64_t v4 = *(void **)(a1 + 32);

  return [v4 setNeedsLayout];
}

void sub_100035714(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[NSNotificationCenter defaultCenter];
  CFStringRef v4 = @"COSAppInstallErrorKey";
  id v5 = v1;
  int v3 = +[NSDictionary dictionaryWithObjects:&v5 forKeys:&v4 count:1];

  [v2 postNotificationName:@"COSAppInstallErrorNotification" object:0 userInfo:v3];
}

void sub_100035BA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100035BD4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v6)
  {
    CGRect v8 = [v5 companionAppBundleID];
    CGRect v9 = [v5 deviceStatus];
    id v10 = [v9 architectureCompatibility];
    unsigned int v11 = [v5 isBetaApp];
    id v12 = pbb_bridge_log();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);
    if (v10 == (id)2 && (v11 & 1) == 0)
    {
      if (v13)
      {
        CFStringRef v14 = [v5 applicationName];
        *(_DWORD *)buf = 138412546;
        id v25 = v14;
        __int16 v26 = 2112;
        long long v27 = v8;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "App (%@) requires update! Requesting update for companion app (%@)", buf, 0x16u);
      }
      uint64_t v23 = v8;
      __int16 v15 = +[NSArray arrayWithObjects:&v23 count:1];
      id v22 = 0;
      unsigned int v16 = +[ASDUpdateWatchApps updateBundleIDs:v15 userInitiated:1 error:&v22];
      id WeakRetained = v22;

      if (!v16 || WeakRetained)
      {
        __int16 v18 = pbb_setup_log();
        if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR) || !os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_21;
        }
        *(_DWORD *)buf = 138412290;
        id v25 = WeakRetained;
        id v19 = "Error forcing updates: %@";
      }
      else
      {
        __int16 v18 = pbb_bridge_log();
        if (!os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
LABEL_21:

LABEL_26:
          goto LABEL_27;
        }
        *(_DWORD *)buf = 138412290;
        id v25 = v8;
        id v19 = "Companion app (%@) queued for update.";
      }
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, v19, buf, 0xCu);
      goto LABEL_21;
    }
    if (v11)
    {
      if (v13)
      {
        __int16 v20 = [v5 applicationName];
        *(_DWORD *)buf = 138412290;
        id v25 = v20;
        id v21 = "Beta App (%@) doesn't get updated";
LABEL_24:
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v21, buf, 0xCu);
      }
    }
    else if (v13)
    {
      __int16 v20 = [v5 applicationName];
      *(_DWORD *)buf = 138412290;
      id v25 = v20;
      id v21 = "App (%@) does not require update.";
      goto LABEL_24;
    }

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    [WeakRetained installNanoBundle:*(void *)(a1 + 32) forDevice:*(void *)(a1 + 40)];
    goto LABEL_26;
  }
  uint64_t v7 = pbb_bridge_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v25 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "determineArchitectureCompatibility failed with error %@", buf, 0xCu);
  }

  sub_100035714(v6);
LABEL_27:
}

void sub_10003608C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    id v5 = pbb_bridge_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v7 = 138412546;
      uint64_t v8 = v6;
      __int16 v9 = 2112;
      id v10 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Error while removing application: %@ with error: %@", (uint8_t *)&v7, 0x16u);
    }

    sub_100035714(v4);
  }
}

void sub_100036AE8(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_10029AFB8;
  qword_10029AFB8 = v1;
}

double sub_100038168()
{
  double x = CGRectZero.origin.x;
  uint64_t v1 = +[PBBridgeWatchAttributeController sharedDeviceController];
  id v2 = [v1 size];

  int v3 = +[UIScreen mainScreen];
  [v3 scale];
  double v5 = v4;

  unint64_t v6 = (unint64_t)v2 - 1;
  if (v5 <= 2.0)
  {
    if (v6 < 0x15 && ((0x1C30C3u >> v6) & 1) != 0)
    {
      int v7 = (double *)&unk_1001AAD88;
      return v7[v6];
    }
  }
  else if (v6 < 0x15 && ((0x1C30C3u >> v6) & 1) != 0)
  {
    int v7 = (double *)&unk_1001AAAE8;
    return v7[v6];
  }
  return x;
}

id sub_100038290()
{
  id v0 = sub_100038498();
  uint64_t v1 = +[PBBridgeWatchAttributeController resourceString:@"Outro1" material:v0 size:sub_1000384D8() forAttributes:4];
  id v2 = sub_100038518();
  int v3 = [v1 stringByAppendingString:v2];

  return v3;
}

id sub_100038328()
{
  id v0 = +[PBBridgeWatchAttributeController sharedDeviceController];
  id v1 = [v0 edition];

  if (v1 == (id)3) {
    uint64_t v2 = 6;
  }
  else {
    uint64_t v2 = 5;
  }
  id v3 = sub_100038498();
  double v4 = +[PBBridgeWatchAttributeController resourceString:@"Outro2" material:v3 size:sub_1000384D8() forAttributes:v2];
  double v5 = sub_100038518();
  unint64_t v6 = [v4 stringByAppendingString:v5];

  return v6;
}

id sub_1000383E8()
{
  id v0 = sub_1000384D8();
  id v1 = +[PBBridgeWatchAttributeController sharedDeviceController];
  uint64_t v2 = +[PBBridgeWatchAttributeController resourceString:material:size:forAttributes:](PBBridgeWatchAttributeController, "resourceString:material:size:forAttributes:", @"Outro2", [v1 fallbackMaterialForSize:v0], v0, 5);
  id v3 = sub_100038518();
  double v4 = [v2 stringByAppendingString:v3];

  return v4;
}

id sub_100038498()
{
  id v0 = +[PBBridgeWatchAttributeController sharedDeviceController];
  id v1 = [v0 material];

  return v1;
}

id sub_1000384D8()
{
  id v0 = +[PBBridgeWatchAttributeController sharedDeviceController];
  id v1 = [v0 size];

  return v1;
}

__CFString *sub_100038518()
{
  id v0 = +[UIScreen mainScreen];
  [v0 scale];
  if (v1 <= 2.0) {
    uint64_t v2 = @"@2x";
  }
  else {
    uint64_t v2 = @"@3x";
  }
  id v3 = v2;

  return v3;
}

void sub_10003A368(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *location, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
}

void sub_10003A3A4(uint64_t a1, void *a2, int a3)
{
  id v15 = a2;
  double v5 = @"HEADER_NO_APPLE_PAY";
  if (a3) {
    double v5 = @"HEADER";
  }
  unint64_t v6 = v5;
  int v7 = +[NSBundle mainBundle];
  uint64_t v8 = [v7 localizedStringForKey:v6 value:&stru_100249230 table:@"AppleID"];

  if (sub_100032560(*(id *)(*(void *)(a1 + 32) + 216))
    && +[COSFindMyController isDeviceLocatorEnabled])
  {
    __int16 v9 = sub_10000DCF4();
    int HasCapabilityForString = BPSDeviceHasCapabilityForString();

    if (HasCapabilityForString) {
      CFStringRef v11 = @"HEADER_ACTIVATION_LOCK_ADDITION_FMW";
    }
    else {
      CFStringRef v11 = @"HEADER_ACTIVATION_LOCK_ADDITION";
    }
    id v12 = +[NSBundle mainBundle];
    BOOL v13 = [v12 localizedStringForKey:v11 value:&stru_100249230 table:@"AppleID"];
    uint64_t v14 = [v8 stringByAppendingString:v13];

    uint64_t v8 = (void *)v14;
  }
  [v15 setProperty:v8 forKey:PSFooterTextGroupKey];
}

void sub_10003A538(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = [WeakRetained specifierForID:@"iCloudHeader"];

  if (v5)
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    id v4 = objc_loadWeakRetained(v2);
    [v4 reloadSpecifier:v5];
  }
}

void sub_10003ABA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003ABC4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v17 = a1;
  id v4 = a2;
  id v5 = a3;
  unint64_t v6 = pbb_accountsignin_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v24 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "queryWatchForAccountsInfo getAccountsInfo returned error %@- dump follows", buf, 0xCu);
  }
  __int16 v18 = v5;

  long long v21 = 0u;
  long long v22 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v7 = v4;
  id v8 = [v7 countByEnumeratingWithState:&v19 objects:v27 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v20;
    do
    {
      for (i = 0; i != v9; i = (char *)i + 1)
      {
        if (*(void *)v20 != v10) {
          objc_enumerationMutation(v7);
        }
        id v12 = *(void **)(*((void *)&v19 + 1) + 8 * i);
        BOOL v13 = [v7 objectForKeyedSubscript:v12, v17];
        uint64_t v14 = pbb_accountsignin_log();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412546;
          id v24 = v12;
          __int16 v25 = 2112;
          __int16 v26 = v13;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "key=%@ value=%@", buf, 0x16u);
        }
      }
      id v9 = [v7 countByEnumeratingWithState:&v19 objects:v27 count:16];
    }
    while (v9);
  }

  id v15 = pbb_accountsignin_log();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "queryWatchForAccountsInfo getAccountsInfo dump complete", buf, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(v17 + 32));
  [WeakRetained handleAccountsInfoReply:v7 error:v18];
}

void sub_10003B5FC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) navigationController];
  id v1 = [v2 popViewControllerAnimated:1];
}

void sub_10003B86C(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) specifierForID:a2];
  id v3 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 40)];
  [v4 setProperty:v3 forKey:PSEnabledKey];

  [*(id *)(a1 + 32) reloadSpecifier:v4];
}

void sub_10003C044(id a1, BOOL a2, NSError *a3)
{
  id v3 = pbb_accountsignin_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    CFStringRef v5 = @"iTunesAccount-FollowUp";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Removed %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_10003C110(id a1, BOOL a2, NSError *a3)
{
  id v3 = pbb_accountsignin_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    CFStringRef v5 = @"AppleID-FollowUp";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Removed %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_10003C530(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    [*(id *)(a1 + 32) _removeStoreFollowUp];
  }
  else
  {
    unint64_t v6 = pbb_accountsignin_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = +[NSNumber numberWithBool:0];
      int v8 = 138412546;
      id v9 = v7;
      __int16 v10 = 2112;
      id v11 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Not attempting to remove followup for result: %@ error: %@", (uint8_t *)&v8, 0x16u);
    }
  }
}

void sub_10003D494(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_10003D4E0(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _textFieldValueDidChange:v3];
}

void sub_10003D53C(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _textFieldValueDidChange:v3];
}

void sub_10003D598(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _textFieldValueDidChange:v3];
}

void sub_10003D5F4(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _textFieldValueDidChange:v3];
}

id sub_10003E470()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  id v0 = (void *)qword_10029AFC8;
  uint64_t v7 = qword_10029AFC8;
  if (!qword_10029AFC8)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_10003F9D0;
    v3[3] = &unk_1002436A8;
    v3[4] = &v4;
    sub_10003F9D0((uint64_t)v3);
    id v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_10003E53C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10003E7B0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = pbb_bridge_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = +[NSNumber numberWithBool:a2];
    int v8 = 138412546;
    id v9 = v7;
    __int16 v10 = 2112;
    id v11 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "markAsMissingSupportedForPairedDeviceWithUDID %@ Error: %@", (uint8_t *)&v8, 0x16u);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10003EE24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose((const void *)(v26 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_10003EE50(void *a1, void *a2, int a3)
{
  id v11 = a2;
  if (a3)
  {
    uint64_t v5 = a1[4];
    uint64_t v6 = *(void *)(*(void *)(a1[5] + 8) + 40);
    uint64_t v7 = *(void *)(*(void *)(a1[6] + 8) + 40);
    int v8 = +[NSError errorWithDomain:@"COSFindMyErrorDomain" code:0 userInfo:0];
    (*(void (**)(uint64_t, uint64_t, uint64_t, id, void *))(v5 + 16))(v5, v6, v7, v11, v8);
  }
  else
  {
    id v9 = [v11 fmipWipeToken];

    if (v9)
    {
      (*(void (**)(void))(a1[4] + 16))();
    }
    else
    {
      __int16 v10 = +[NSError errorWithDomain:@"COSFindMyErrorDomain" code:2 userInfo:0];
      (*(void (**)(void))(a1[4] + 16))();
    }
  }
}

uint64_t sub_10003EFA4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10003EFC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10003F0C8(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  BOOL v13 = [v11 fmipWipeToken];

  if (v13)
  {
    uint64_t v14 = [*(id *)(a1 + 32) device];
    id v15 = [v14 valueForProperty:NRDevicePropertyUDID];

    unsigned int v16 = objc_opt_class();
    uint64_t v17 = [*(id *)(a1 + 32) device];
    LODWORD(v16) = [v16 isTinkerDevice:v17];

    if (v16)
    {
      __int16 v18 = [v11 fmipUrl];

      if (v18)
      {
        long long v35 = v15;
        id v36 = v12;
        id v37 = v10;
        uint64_t v47 = 0;
        id v48 = &v47;
        uint64_t v49 = 0x2050000000;
        long long v19 = (void *)qword_10029AFD8;
        uint64_t v50 = qword_10029AFD8;
        if (!qword_10029AFD8)
        {
          *(void *)buf = _NSConcreteStackBlock;
          uint64_t v43 = 3221225472;
          id v44 = sub_10003FB98;
          id v45 = &unk_1002436A8;
          uint64_t v46 = &v47;
          sub_10003FB98((uint64_t)buf);
          long long v19 = (void *)v48[3];
        }
        long long v20 = v19;
        _Block_object_dispose(&v47, 8);
        id v21 = [v20 alloc];
        long long v22 = [v9 username];
        [*(id *)(a1 + 32) member];
        uint64_t v23 = v34 = v9;
        id v24 = [v23 dsid];
        __int16 v25 = [v24 stringValue];
        uint64_t v26 = [v11 fmipWipeToken];
        long long v27 = [v11 fmipUrl];
        id v28 = +[NSURL URLWithString:v27];
        id v29 = [v21 initWithUserName:v22 dsid:v25 oneTimeRemoveAuthToken:v26 serverURL:v28];

        id v9 = v34;
        id v30 = [sub_10003E470() sharedInstance];
        v40[0] = _NSConcreteStackBlock;
        v40[1] = 3221225472;
        v40[2] = sub_10003F4EC;
        v40[3] = &unk_100243D98;
        id v41 = *(id *)(a1 + 48);
        id v15 = v35;
        [v30 disableFMIPForAccount:v29 pairedDeviceWithUDID:v35 withCompletion:v40];

        id v12 = v36;
        id v10 = v37;
      }
      else
      {
        id v33 = pbb_bridge_log();
        if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "missing URL for FindMy", buf, 2u);
        }

        (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
      }
    }
    else
    {
      id v31 = [sub_10003E470() sharedInstance];
      id v32 = [v11 fmipWipeToken];
      v38[0] = _NSConcreteStackBlock;
      v38[1] = 3221225472;
      v38[2] = sub_10003F5AC;
      v38[3] = &unk_100243D98;
      id v39 = *(id *)(a1 + 48);
      [v31 disableFMIPUsingToken:v32 forPairedDeviceWithUDID:v15 withCompletion:v38];
    }
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

void sub_10003F4D4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 120), 8);
  _Unwind_Resume(a1);
}

void sub_10003F4EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10003F598;
  void v6[3] = &unk_1002444A8;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_10003F598(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_10003F5AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10003F658;
  void v6[3] = &unk_1002444A8;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_10003F658(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_10003F74C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v7 = a4;
  id v8 = a5;
  id v9 = [v7 fmipWipeToken];

  if (v9)
  {
    id v10 = [*(id *)(a1 + 32) device];
    id v11 = [v10 valueForProperty:NRDevicePropertyUDID];

    id v12 = [sub_10003E470() sharedInstance];
    BOOL v13 = [v7 fmipWipeToken];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_10003F894;
    v14[3] = &unk_100243D98;
    id v15 = *(id *)(a1 + 40);
    [v12 markPairedDeviceWithUDID:v11 asMissingUsingToken:v13 withCompletion:v14];
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_10003F894(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10003F940;
  void v6[3] = &unk_1002444A8;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_10003F940(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_10003F9D0(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("FMDFMIPManager");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029AFC8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_100171C24();
    sub_10003FA28();
  }
}

void sub_10003FA28()
{
  v1[0] = 0;
  if (!qword_10029AFD0)
  {
    v1[1] = _NSConcreteStackBlock;
    v1[2] = 3221225472;
    v1[3] = sub_10003FB24;
    v1[4] = &unk_1002436E0;
    v1[5] = v1;
    long long v2 = off_100244518;
    uint64_t v3 = 0;
    qword_10029AFD0 = _sl_dlopen();
  }
  id v0 = (void *)v1[0];
  if (!qword_10029AFD0)
  {
    id v0 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v1[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t sub_10003FB24()
{
  uint64_t result = _sl_dlopen();
  qword_10029AFD0 = result;
  return result;
}

Class sub_10003FB98(uint64_t a1)
{
  sub_10003FA28();
  Class result = objc_getClass("FMDFMIPAccountInfo");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029AFD8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = (COSRemoteManagementInformationViewController *)sub_100171C4C();
    return (Class)[(COSRemoteManagementInformationViewController *)v3 requiresActivationCheck];
  }
  return result;
}

void sub_100040140(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 48), a2);
  }
}

void sub_1000404C4(uint64_t a1)
{
  long long v2 = +[MCProfileConnection sharedConnection];
  uint64_t v3 = [v2 managingOrganizationInformation];

  objc_initWeak(&location, *(id *)(a1 + 32));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000405B4;
  void v6[3] = &unk_100243A30;
  objc_copyWeak(&v9, &location);
  uint64_t v4 = *(void *)(a1 + 32);
  id v7 = v3;
  uint64_t v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

  objc_destroyWeak(&v9);
  objc_destroyWeak(&location);
}

void sub_1000405B4(id *a1)
{
  self = objc_loadWeakRetained(a1 + 6);
  uint64_t v2 = kCCOrganizationNameKey;
  uint64_t v4 = [a1[4] objectForKeyedSubscript:kCCOrganizationNameKey];
  if (self) {
    objc_setProperty_nonatomic_copy(self, v3, v4, 40);
  }

  id v5 = sub_100040850(a1[5]);
  uint64_t v6 = [a1[4] objectForKeyedSubscript:v2];
  [v5 setOrganizationName:v6];

  id v7 = [a1[4] objectForKeyedSubscript:kCCOrganizationDepartmentKey];
  [v5 setOrganizationDepartment:v7];

  uint64_t v8 = [a1[4] objectForKeyedSubscript:kCCOrganizationAddressKey];
  [v5 setOrganizationAddress:v8];

  id v9 = [a1[4] objectForKeyedSubscript:kCCOrganizationAddressLine1Key];
  [v5 setOrganizationAddressLine1:v9];

  id v10 = [a1[4] objectForKeyedSubscript:kCCOrganizationAddressLine2Key];
  [v5 setOrganizationAddressLine2:v10];

  id v11 = [a1[4] objectForKeyedSubscript:kCCOrganizationCityKey];
  [v5 setOrganizationCity:v11];

  id v12 = [a1[4] objectForKeyedSubscript:kCCOrganizationRegionKey];
  [v5 setOrganizationRegion:v12];

  BOOL v13 = [a1[4] objectForKeyedSubscript:kCCOrganizationZipCodeKey];
  [v5 setOrganizationZipCode:v13];

  uint64_t v14 = [a1[4] objectForKeyedSubscript:kCCOrganizationCountryKey];
  [v5 setOrganizationCountry:v14];

  id v15 = [a1[4] objectForKeyedSubscript:kCCOrganizationSupportPhoneKey];
  [v5 setOrganizationSupportPhone:v15];

  unsigned int v16 = [a1[4] objectForKeyedSubscript:kCCOrganizationSupportEmailKey];
  [v5 setOrganizationSupportEmail:v16];

  uint64_t v17 = [a1[5] delegate];
  [v17 buddyControllerReleaseHold:a1[5]];
}

void *sub_100040850(void *a1)
{
  if (a1)
  {
    uint64_t v2 = a1;
    uint64_t v3 = (void *)a1[3];
    if (!v3)
    {
      uint64_t v4 = objc_alloc_init(COSRemoteManagementLearnMoreViewController);
      id v5 = (void *)v2[3];
      v2[3] = v4;

      uint64_t v3 = (void *)v2[3];
    }
    a1 = v3;
    uint64_t v1 = vars8;
  }
  return a1;
}

id sub_1000421BC(void *a1)
{
  [*(id *)(a1[4] + 24) overrideMaterial:a1[9] size:a1[10]];
  [*(id *)(a1[4] + 64) setText:a1[5]];
  uint64_t v2 = (void *)a1[4];
  uint64_t v3 = (void *)v2[3];
  uint64_t v4 = [v2 imagePath];
  [v3 setScreenImageName:v4];

  [*(id *)(a1[4] + 80) setText:a1[6]];
  [*(id *)(a1[4] + 96) setText:a1[7]];
  id v5 = *(void **)(a1[4] + 104);
  uint64_t v6 = a1[8];

  return [v5 setText:v6];
}

void sub_100042998(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) dashboardData];
  id v5 = [v2 updateEvent:*(void *)(a1 + 40)];

  [*(id *)(a1 + 32) _updateDashBoardRows:v5];
  uint64_t v3 = -[COSTinkerHealthSharingSetupDelegate tinkerDevice]_0();
  if (v3)
  {
    uint64_t v4 = [*(id *)(a1 + 32) watchHeader];
    [v4 refreshForWatchDetails:v3];
  }
}

void sub_100042AC0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) tableView];
  [v1 reloadData];
}

void sub_1000439A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000439C4(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    *(unsigned char *)(*(void *)(a1 + 32) + 184) = 0;
    id v9 = pbb_setup_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      id v15 = v6;
      __int16 v16 = 2112;
      id v17 = v7;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "getUsageData %@ %@", buf, 0x16u);
    }

    objc_storeStrong((id *)(*(void *)(a1 + 32) + 208), a2);
    if (v7)
    {
      *(unsigned char *)(*(void *)(a1 + 32) + 185) = 1;
      uint64_t v10 = objc_opt_new();
      uint64_t v11 = *(void *)(a1 + 32);
      id v12 = *(void **)(v11 + 208);
      *(void *)(v11 + 208) = v10;

      id v13 = *(id *)(a1 + 32);
      BPSPresentGizmoUnreachableServiceAlertWithDismissalHandler();
    }
    [WeakRetained reloadSpecifiers];
  }
}

void sub_100043B84(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) navigationController];
  id v1 = [v2 popViewControllerAnimated:1];
}

void sub_10004432C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id *location, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id a30)
{
}

void sub_100044350(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    [*(id *)(a1 + 32) setProperty:v4 forKey:PSIconImageKey];
    [WeakRetained reloadSpecifierID:*(void *)(a1 + 40)];
  }
}

int64_t sub_1000443CC(id a1, id a2, id a3)
{
  id v4 = a2;
  id v5 = [a3 propertyForKey:@"TOTAL_SIZE"];
  id v6 = [v4 propertyForKey:@"TOTAL_SIZE"];

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

int64_t sub_100044984(id a1, PSCapacityBarCategory *a2, PSCapacityBarCategory *a3)
{
  id v4 = a3;
  id v5 = [(PSCapacityBarCategory *)a2 bytes];
  id v6 = [(PSCapacityBarCategory *)v4 bytes];

  if (v5 < v6) {
    return 1;
  }
  else {
    return -1;
  }
}

void sub_100044FCC(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100045044;
  block[3] = &unk_1002438A0;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100045044(uint64_t a1)
{
  id v4 = [UIApp settingsController];
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + OBJC_IVAR___PSViewController__parentController));
  id v3 = [v4 popToViewController:WeakRetained animated:1];
}

id sub_100046594(uint64_t a1, void *a2)
{
  return [a2 updateUIState];
}

void sub_100046EE4(uint64_t a1)
{
  id v11 = [*(id *)(*(void *)(a1 + 32) + 64) stringByAppendingString:@"@3x.png"];
  id v2 = +[UIImage imageNamed:](UIImage, "imageNamed:");
  if (!v2)
  {
    uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 72);
    id v4 = +[NSBundle bundleForClass:objc_opt_class()];
    id v2 = +[UIImage imageNamed:v3 inBundle:v4];

    if (PBIsInternalInstall())
    {
      if (CFPreferencesGetAppBooleanValue(@"DebugMobileAssetLoading", @"com.apple.Bridge", 0))
      {
        [v2 size];
        UIGraphicsBeginImageContextWithOptions(v13, 0, 0.0);
        [v2 drawAtPoint:0.0, 0.0];
        id v5 = +[UIColor colorWithRed:1.0 green:0.0 blue:0.0 alpha:0.5];
        [v5 setFill];

        [v2 size];
        CGFloat v7 = v6;
        [v2 size];
        v14.size.height = v8;
        v14.origin.double x = 0.0;
        v14.origin.y = 0.0;
        v14.size.width = v7;
        UIRectFillUsingBlendMode(v14, kCGBlendModePlusLighter);
        uint64_t v9 = UIGraphicsGetImageFromCurrentImageContext();

        UIGraphicsEndImageContext();
        id v2 = (void *)v9;
      }
    }
  }
  uint64_t v10 = [*(id *)(a1 + 32) marketingBannerImage];
  [v10 setImage:v2];
}

void sub_100047098(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) marketingBannerImage];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100047160;
  v3[3] = &unk_100244668;
  id v4 = *(id *)(a1 + 40);
  +[UIView transitionWithView:v2 duration:5242880 options:v3 animations:&stru_1002446A8 completion:0.45];
}

uint64_t sub_100047160(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100048908(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100048980;
  block[3] = &unk_1002438A0;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100048980(uint64_t a1)
{
  id v2 = -[COSTinkerHealthSharingSetupDelegate tinkerDevice]_0();
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v8 = NRDevicePropertyIsPaired;
  id v4 = +[NSArray arrayWithObjects:&v8 count:1];
  [v2 removePropertyObserver:v3 forPropertyChanges:v4];

  uint64_t v5 = *(void *)(a1 + 32);
  double v6 = *(void **)(v5 + 24);
  *(void *)(v5 + 24) = 0;

  CGFloat v7 = [*(id *)(a1 + 32) collectionView];
  [v7 reloadData];
}

void sub_100048B28(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)BCDiscoverPluginManager);
  uint64_t v3 = [v2 discoverPlugins];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100048BDC;
  void v5[3] = &unk_100243908;
  void v5[4] = *(void *)(a1 + 32);
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
}

void sub_100048BDC(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSMutableArray);
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 24);
  *(void *)(v3 + 24) = v2;

  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  uint64_t v18 = a1;
  id obj = [*(id *)(a1 + 40) copy];
  id v19 = [obj countByEnumeratingWithState:&v25 objects:v32 count:16];
  if (v19)
  {
    uint64_t v17 = *(void *)v26;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v26 != v17) {
          objc_enumerationMutation(obj);
        }
        uint64_t v20 = v5;
        id v6 = *(void **)(*((void *)&v25 + 1) + 8 * v5);
        id v7 = objc_alloc_init((Class)NSMutableArray);
        long long v21 = 0u;
        long long v22 = 0u;
        long long v23 = 0u;
        long long v24 = 0u;
        id v8 = [v6 copy];
        id v9 = [v8 countByEnumeratingWithState:&v21 objects:v31 count:16];
        if (v9)
        {
          id v10 = v9;
          uint64_t v11 = *(void *)v22;
          do
          {
            id v12 = 0;
            do
            {
              if (*(void *)v22 != v11) {
                objc_enumerationMutation(v8);
              }
              CGSize v13 = *(void **)(*((void *)&v21 + 1) + 8 * (void)v12);
              if ((objc_opt_respondsToSelector() & 1) != 0
                && ([v13 isAvailableInCurrentConfiguration] & 1) == 0)
              {
                CGRect v14 = pbb_discover_log();
                if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
                  sub_100171E04(v29, v13, &v30, v14);
                }
              }
              else
              {
                [v7 addObject:v13];
              }
              id v12 = (char *)v12 + 1;
            }
            while (v10 != v12);
            id v10 = [v8 countByEnumeratingWithState:&v21 objects:v31 count:16];
          }
          while (v10);
        }

        [*(id *)(*(void *)(v18 + 32) + 24) addObject:v7];
        uint64_t v5 = v20 + 1;
      }
      while ((id)(v20 + 1) != v19);
      id v19 = [obj countByEnumeratingWithState:&v25 objects:v32 count:16];
    }
    while (v19);
  }

  *(unsigned char *)(*(void *)(v18 + 32) + 8) = 0;
  id v15 = [*(id *)(v18 + 32) collectionView];
  [v15 reloadData];
}

void sub_10004B8FC(uint64_t a1, void *a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10004D0F4;
  block[3] = &unk_1002438A0;
  id v4 = a2;
  id v2 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

int64_t sub_10004C2E4(id a1, _COSTCCItem *a2, _COSTCCItem *a3)
{
  id v4 = a3;
  uint64_t v5 = [(_COSTCCItem *)a2 displayName];
  id v6 = [(_COSTCCItem *)v4 displayName];

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

void sub_10004C548(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (v3)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    _DWORD v7[2] = sub_10004C604;
    v7[3] = &unk_100244710;
    v7[4] = *(void *)(a1 + 32);
    id v8 = v3;
    id v5 = *(id *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    id v9 = v5;
    uint64_t v10 = v6;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);
  }
}

void sub_10004C604(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) imageCache];
  [v2 setObject:*(void *)(a1 + 40) forKey:*(void *)(a1 + 48)];

  id v3 = [*(id *)(a1 + 32) tableView];
  id v4 = +[NSIndexPath indexPathForRow:*(void *)(a1 + 56) inSection:0];
  id v5 = [v3 cellForRowAtIndexPath:v4];

  [v5 setIcon:*(void *)(a1 + 40)];
}

void sub_10004D0F4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _generateTCCItems];
  [*(id *)(a1 + 32) setItems:v2];

  id v3 = [*(id *)(a1 + 32) tableView];
  [v3 reloadData];
}

id sub_10004D234(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifiers];
}

void sub_10004FC98(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10004FCB4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = pbb_bridge_log();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    int v18 = 136315906;
    id v19 = "-[COSRestoreSelectionViewController _triggerUpdate:]_block_invoke";
    __int16 v20 = 2048;
    uint64_t v21 = a2;
    __int16 v22 = 2112;
    id v23 = v8;
    __int16 v24 = 2112;
    id v25 = v7;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%s: Update completed with status: %ld and error: %@ for update: %@", (uint8_t *)&v18, 0x2Au);
  }

  if (a2 == 1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    CGSize v13 = [WeakRetained continueButton];
    [v13 setEnabled:1];

    id v14 = objc_loadWeakRetained((id *)(a1 + 32));
    id v15 = [v14 backupsTableView];
    [v15 setUserInteractionEnabled:1];

    [UIApp setIsUpdatingGizmoInSetupFlow:0];
    uint64_t v11 = pbb_bridge_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      int v18 = 136315138;
      id v19 = "-[COSRestoreSelectionViewController _triggerUpdate:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%s: Update dismissed, UI reenabled", (uint8_t *)&v18, 0xCu);
    }
    goto LABEL_10;
  }
  if (!a2)
  {
    uint64_t v10 = pbb_bridge_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      int v18 = 136315138;
      id v19 = "-[COSRestoreSelectionViewController _triggerUpdate:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "%s: triggering restore", (uint8_t *)&v18, 0xCu);
    }

    uint64_t v11 = objc_loadWeakRetained((id *)(a1 + 32));
    [v11 _triggerRestoreFromIndex:*(void *)(a1 + 40)];
LABEL_10:

    goto LABEL_15;
  }
  __int16 v16 = pbb_bridge_log();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v18) = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Update unsuccessful, aborting pairing", (uint8_t *)&v18, 2u);
  }

  [UIApp resetSetupFlowAnimated:1 forEvent:57];
LABEL_15:
  id v17 = objc_loadWeakRetained((id *)(a1 + 32));
  [v17 setSetupUpdateManager:0];
}

void sub_1000500CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = pbb_setupflow_log();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_100171F48((uint64_t)v3, v5);
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100050278;
    block[3] = &unk_100243908;
    void block[4] = *(void *)(a1 + 32);
    id v9 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 138412290;
      uint64_t v11 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Restore from Backup Complete (%@)", buf, 0xCu);
    }

    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    _DWORD v7[2] = sub_100050284;
    v7[3] = &unk_1002438A0;
    v7[4] = *(void *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);
  }
}

id sub_100050278(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _restoreFailedWithError:*(void *)(a1 + 40)];
}

id sub_100050284(uint64_t a1)
{
  return [*(id *)(a1 + 32) _restoreCompletedWithSuccess];
}

void sub_1000503F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = pbb_setupflow_log();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_100171FC0((uint64_t)v3, v5);
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000505C0;
    block[3] = &unk_100243908;
    void block[4] = *(void *)(a1 + 32);
    id v14 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    uint64_t v6 = v14;
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = [*(id *)(a1 + 40) _bridgeConciseDebugDescription];
      *(_DWORD *)buf = 138412290;
      __int16 v16 = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Restore from Other Paired Device Complete (%@)", buf, 0xCu);
    }
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1000505CC;
    v10[3] = &unk_100243908;
    id v8 = *(id *)(a1 + 40);
    uint64_t v9 = *(void *)(a1 + 32);
    id v11 = v8;
    uint64_t v12 = v9;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);
    uint64_t v6 = v11;
  }
}

id sub_1000505C0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _restoreFailedWithError:*(void *)(a1 + 40)];
}

void sub_1000505CC(uint64_t a1)
{
  uint64_t v2 = NRDevicePropertySerialNumber;
  id v4 = [*(id *)(a1 + 32) valueForProperty:NRDevicePropertySerialNumber];
  id v3 = [*(id *)(*(void *)(a1 + 40) + 40) valueForProperty:v2];
  [UIApp setIsRestoringToKnownDevice:[v4 isEqualToString:v3]];
  [*(id *)(a1 + 40) _restoreCompletedWithSuccess];
}

void sub_100050F20(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2 == 2)
  {
    uint64_t v6 = pbb_setupflow_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "no backups found, releasing hold and skipping setdelegate", v8, 2u);
    }

    [(id)objc_opt_class() tellLinkUpgradeMonitorAboutBackupStepCompletion];
    id v7 = +[COSBackupManager sharedBackupManager];
    [v7 setDelegate:0];

    id v5 = [*(id *)(a1 + 32) delegate];
    [v5 buddyControllerReleaseHoldAndSkip:*(void *)(a1 + 32)];
  }
  else
  {
    if (v2 != 1) {
      return;
    }
    id v3 = pbb_setupflow_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "backups found, releasing hold in setdelegate", buf, 2u);
    }

    id v4 = +[COSBackupManager sharedBackupManager];
    [v4 setDelegate:0];

    id v5 = [*(id *)(a1 + 32) delegate];
    [v5 buddyControllerReleaseHold:*(void *)(a1 + 32)];
  }
}

void sub_100051584(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1000515A8()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  id v0 = (void *)qword_10029AFE0;
  uint64_t v7 = qword_10029AFE0;
  if (!qword_10029AFE0)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_1000518DC;
    v3[3] = &unk_1002436A8;
    void v3[4] = &v4;
    sub_1000518DC((uint64_t)v3);
    id v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_100051674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10005168C(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained setSpecifiers:v3];
}

void sub_1000517CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000517F0(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = WeakRetained;
  if (a2)
  {
    id v5 = [WeakRetained navigationController];
    id v6 = [v5 popViewControllerAnimated:1];
  }
  else
  {
    id v5 = pbb_bridge_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "KappaThirdParty,COSSOSSettingsKappaSharingViewController,disableKappaThirdPartyAppForSpecifier,failed", v7, 2u);
    }
  }
}

Class sub_1000518DC(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_10029AFE8)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = sub_100051A20;
    void v4[4] = &unk_1002436E0;
    void v4[5] = v4;
    long long v5 = off_1002447E8;
    uint64_t v6 = 0;
    qword_10029AFE8 = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!qword_10029AFE8)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("SOSUtilities");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)sub_100171540();
LABEL_8:
    free(v2);
  }
  qword_10029AFE0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_100051A20()
{
  uint64_t result = _sl_dlopen();
  qword_10029AFE8 = result;
  return result;
}

void sub_1000525D4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 120));
  _Unwind_Resume(a1);
}

void sub_1000525F8(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained setUserCaptureSequence:v3];

  id v5 = objc_loadWeakRetained(v2);
  [v5 setAssetsLoaded:1];
}

void sub_100052808(id *a1)
{
  id v2 = a1[4];
  id v10 = 0;
  id v3 = [v2 statusOfValueForKey:@"duration" error:&v10];
  id v4 = v10;
  if (v3 == (id)3)
  {
    id v5 = pbb_setup_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = a1[4];
      *(_DWORD *)buf = 138412546;
      id v12 = v6;
      __int16 v13 = 2112;
      id v14 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Failed to load duration property for asset: %@ with error: %@", buf, 0x16u);
    }

    if ((int)sub_10003245C() >= 1) {
      [a1[5] abortAndRecaptureMovie];
    }
  }
  else if (v3 == (id)2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100052994;
    block[3] = &unk_1002441B0;
    id v8 = a1[4];
    id v9 = a1[6];
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_100052994(uint64_t a1)
{
  id v2 = +[AVPlayerItem playerItemWithAsset:*(void *)(a1 + 32)];
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3)
  {
    id v4 = v2;
    (*(void (**)(void))(v3 + 16))();
    id v2 = v4;
  }
}

void sub_100052A14(id a1)
{
  id v1 = pbb_setup_log();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = 136315138;
    id v4 = "-[COSInternalUserStudyViewController abortAndRecaptureMovie]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "%s", (uint8_t *)&v3, 0xCu);
  }

  id v2 = +[UIApplication sharedApplication];
  [v2 resetFlowForCameraExpiry];

  +[COSInternalUserStudyAssetManager clearVideoFile];
}

id sub_10005321C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _uploadAssetAndComplete];
}

id sub_100053224(uint64_t a1)
{
  +[COSInternalUserStudyAssetManager clearVideoFile];
  id v2 = *(void **)(a1 + 32);

  return [v2 completePane];
}

void sub_100053264(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 20000000000);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100053324;
  v3[3] = &unk_100243908;
  id v4 = *(id *)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, v3);
}

id sub_100053324(uint64_t a1)
{
  [*(id *)(a1 + 32) setEnabled:1];
  dispatch_time_t v2 = *(void **)(a1 + 40);

  return [v2 setEnabled:1];
}

void sub_100053754(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = pbb_setup_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "dataBlob %@", buf, 0xCu);
  }

  id v5 = dispatch_get_global_queue(33, 0);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  _DWORD v7[2] = sub_10005388C;
  v7[3] = &unk_100243908;
  v7[4] = *(void *)(a1 + 32);
  id v8 = v3;
  id v6 = v3;
  dispatch_async(v5, v7);
}

void sub_10005388C(uint64_t a1)
{
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  id v5 = *(void **)(v3 + 64);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000539D0;
  v10[3] = &unk_100243DE0;
  void v10[4] = v3;
  id v6 = v2;
  id v11 = v6;
  [v5 uploadData:v4 withCompletion:v10];
  dispatch_time_t v7 = dispatch_time(0, 180000000000);
  if (dispatch_semaphore_wait(v6, v7))
  {
    id v8 = pbb_bridge_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "[BeamBridge] Upload Timed Out!", v9, 2u);
    }

    +[COSInternalUserStudyAssetManager clearVideoFile];
    [*(id *)(a1 + 32) completePane];
  }
}

void sub_1000539D0(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_100053A90;
  v9[3] = &unk_100244878;
  char v13 = a2;
  uint64_t v6 = *(void *)(a1 + 32);
  dispatch_time_t v7 = *(void **)(a1 + 40);
  id v10 = v5;
  uint64_t v11 = v6;
  id v12 = v7;
  id v8 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v9);
}

intptr_t sub_100053A90(uint64_t a1)
{
  dispatch_semaphore_t v2 = pbb_setup_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 56)];
    uint64_t v4 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412546;
    __int16 v16 = v3;
    __int16 v17 = 2112;
    uint64_t v18 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Upload %@ (error %@)", buf, 0x16u);
  }
  if (*(void *)(a1 + 32))
  {
    id v5 = +[COSInternalUserStudyAssetManager detailBundle];
    uint64_t v6 = [v5 localizedStringForKey:@"USER_STUDY_UPLOAD_FAILED_TITLE" value:&stru_100249230 table:@"User_Study"];
    dispatch_time_t v7 = [*(id *)(a1 + 32) localizedDescription];
    id v8 = +[UIAlertController alertControllerWithTitle:v6 message:v7 preferredStyle:1];

    id v9 = +[COSInternalUserStudyAssetManager detailBundle];
    id v10 = [v9 localizedStringForKey:@"USER_STUDY_COMPLETE_OKAY" value:&stru_100249230 table:@"User_Study"];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_100053D3C;
    v14[3] = &unk_100243AE0;
    void v14[4] = *(void *)(a1 + 40);
    uint64_t v11 = +[UIAlertAction actionWithTitle:v10 style:0 handler:v14];

    [v8 addAction:v11];
    [v8 setPreferredAction:v11];
    id v12 = pbb_bridge_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Presenting 'User Study Complete' alert", buf, 2u);
    }

    [*(id *)(a1 + 40) presentViewController:v8 animated:1 completion:0];
  }
  else
  {
    +[COSInternalUserStudyAssetManager clearVideoFile];
    [*(id *)(a1 + 40) completePane];
  }
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_100053D3C(uint64_t a1)
{
  if (sub_100032540())
  {
    id v3 = +[UIApplication sharedApplication];
    [v3 resetFlowForCameraExpiry];
  }
  else
  {
    +[COSInternalUserStudyAssetManager clearVideoFile];
    dispatch_semaphore_t v2 = *(void **)(a1 + 32);
    [v2 completePane];
  }
}

void sub_100053DC8(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = pbb_bridge_log();
  dispatch_time_t v7 = v6;
  if (a2)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      id v8 = "Created BeamBridge TTR Report";
      id v9 = v7;
      uint32_t v10 = 2;
LABEL_7:
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, v8, buf, v10);
    }
  }
  else if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v14 = v5;
    id v8 = "Failed to Create BeamBuddy TTR (Error: %@)";
    id v9 = v7;
    uint32_t v10 = 12;
    goto LABEL_7;
  }

  dispatch_time_t v11 = dispatch_time(0, 5000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100053F3C;
  block[3] = &unk_1002438A0;
  void block[4] = *(void *)(a1 + 32);
  dispatch_after(v11, (dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_100053F3C(uint64_t a1)
{
  +[COSInternalUserStudyAssetManager clearVideoFile];
  dispatch_semaphore_t v2 = *(void **)(a1 + 32);

  return [v2 completePane];
}

id sub_1000540A8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) confirmDockUpload];
}

void sub_10005439C(uint64_t a1)
{
  if (!*(unsigned char *)(*(void *)(a1 + 32) + 26))
  {
    if (sub_100032540())
    {
      if ((int)sub_10003245C() >= 1)
      {
        dispatch_semaphore_t v2 = +[COSBeamBridgeUserStudyController sharedController];
        unsigned __int8 v3 = [v2 continueUserStudyPhase];

        dispatch_time_t v4 = dispatch_time(0, 800000000);
        v6[0] = _NSConcreteStackBlock;
        v6[1] = 3221225472;
        v6[2] = sub_1000544C8;
        void v6[3] = &unk_1002448E8;
        unsigned __int8 v7 = v3;
        void v6[4] = *(void *)(a1 + 32);
        dispatch_after(v4, (dispatch_queue_t)&_dispatch_main_q, v6);
      }
      id v5 = +[UIApplication sharedApplication];
      [v5 resetFlowForCameraExpiry];
    }
    else
    {
      id v5 = [*(id *)(a1 + 32) delegate];
      [v5 buddyControllerDone:*(void *)(a1 + 32)];
    }
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 26) = 1;
}

void sub_1000544C8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    id v11 = +[UIApplication sharedApplication];
    [v11 presentSetupFlowAnimated:1];
  }
  else
  {
    dispatch_semaphore_t v2 = +[COSInternalUserStudyAssetManager detailBundle];
    unsigned __int8 v3 = [v2 localizedStringForKey:@"USER_STUDY_COMPLETE_TITLE" value:&stru_100249230 table:@"User_Study"];
    dispatch_time_t v4 = +[COSInternalUserStudyAssetManager detailBundle];
    id v5 = [v4 localizedStringForKey:@"USER_STUDY_COMPLETE_BODY" value:&stru_100249230 table:@"User_Study"];
    uint64_t v6 = +[UIAlertController alertControllerWithTitle:v3 message:v5 preferredStyle:1];

    unsigned __int8 v7 = +[COSInternalUserStudyAssetManager detailBundle];
    id v8 = [v7 localizedStringForKey:@"USER_STUDY_COMPLETE_OKAY" value:&stru_100249230 table:@"User_Study"];
    id v9 = +[UIAlertAction actionWithTitle:v8 style:0 handler:&stru_1002448C0];

    [v6 addAction:v9];
    [v6 setPreferredAction:v9];
    uint32_t v10 = pbb_bridge_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Presenting 'User Study Complete' alert", buf, 2u);
    }

    [*(id *)(a1 + 32) presentViewController:v6 animated:1 completion:0];
  }
}

void sub_1000546DC(id a1, UIAlertAction *a2)
{
  id v2 = +[COSBeamBridgeUserStudyController sharedController];
  [v2 startNewUserStudy];
}

uint64_t sub_1000548B8()
{
  if ([sub_100054AC0() dictationIsEnabled]) {
    return 1;
  }
  if (!MGGetBoolAnswer()) {
    return 0;
  }
  id v1 = +[NSLocale currentLocale];
  uint64_t v8 = 0;
  id v9 = &v8;
  uint64_t v10 = 0x2020000000;
  id v2 = (uint64_t (*)(NSLocale *))off_10029B000;
  id v11 = off_10029B000;
  if (!off_10029B000)
  {
    *(void *)buf = _NSConcreteStackBlock;
    *(void *)&uint8_t buf[8] = 3221225472;
    *(void *)&uint8_t buf[16] = sub_100055600;
    *(void *)&unsigned char buf[24] = &unk_1002436A8;
    *(void *)&buf[32] = &v8;
    sub_100055600((uint64_t)buf);
    id v2 = (uint64_t (*)(NSLocale *))v9[3];
  }
  _Block_object_dispose(&v8, 8);
  if (!v2)
  {
    sub_100171A7C();
    __break(1u);
  }
  unsigned __int8 v3 = (void *)v2(v1);
  if (v3)
  {
    id v7 = 0;
    id v0 = [sub_100054AC0() dictationIsSupportedForLanguageCode:v3 error:&v7];
    id v4 = v7;
  }
  else
  {
    id v4 = 0;
    id v0 = 0;
  }
  id v5 = pbb_bridge_log();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138413058;
    *(void *)&uint8_t buf[4] = v3;
    *(_WORD *)&buf[12] = 1024;
    *(_DWORD *)&buf[14] = v0;
    *(_WORD *)&buf[18] = 2112;
    *(void *)&buf[20] = v4;
    *(_WORD *)&buf[28] = 2112;
    *(void *)&buf[30] = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Dictation: phoneLanguageCode: %@; needsToRun: %d, phoneError: %@; watchError: %@",
      buf,
      0x26u);
  }

  return (uint64_t)v0;
}

void sub_100054AA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100054AC0()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  id v0 = (void *)qword_10029AFF0;
  uint64_t v7 = qword_10029AFF0;
  if (!qword_10029AFF0)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100055438;
    v3[3] = &unk_1002436A8;
    void v3[4] = &v4;
    sub_100055438((uint64_t)v3);
    id v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_100054B8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100055020()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  id v0 = (void *)qword_10029B010;
  uint64_t v7 = qword_10029B010;
  if (!qword_10029B010)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_1000557B4;
    v3[3] = &unk_1002436A8;
    void v3[4] = &v4;
    sub_1000557B4((uint64_t)v3);
    id v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1000550EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100055438(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("AFDictationConnection");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029AFF0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_100172038();
    sub_100055490();
  }
}

void sub_100055490()
{
  v1[0] = 0;
  if (!qword_10029AFF8)
  {
    v1[1] = _NSConcreteStackBlock;
    v1[2] = 3221225472;
    v1[3] = sub_10005558C;
    v1[4] = &unk_1002436E0;
    v1[5] = v1;
    long long v2 = off_100244960;
    uint64_t v3 = 0;
    qword_10029AFF8 = _sl_dlopen();
  }
  id v0 = (void *)v1[0];
  if (!qword_10029AFF8)
  {
    id v0 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v1[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t sub_10005558C()
{
  uint64_t result = _sl_dlopen();
  qword_10029AFF8 = result;
  return result;
}

void *sub_100055600(uint64_t a1)
{
  v5[0] = 0;
  if (!qword_10029B008)
  {
    v5[1] = _NSConcreteStackBlock;
    v5[2] = 3221225472;
    void v5[3] = sub_100055740;
    void v5[4] = &unk_1002436E0;
    void v5[5] = v5;
    long long v6 = off_100244978;
    uint64_t v7 = 0;
    qword_10029B008 = _sl_dlopen();
    uint64_t v3 = (void *)v5[0];
    long long v2 = (void *)qword_10029B008;
    if (qword_10029B008)
    {
      if (!v5[0]) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v3 = (void *)abort_report_np();
    }
    free(v3);
    goto LABEL_5;
  }
  long long v2 = (void *)qword_10029B008;
LABEL_5:
  uint64_t result = dlsym(v2, "_VSCopyLanguageIdentifierForLocale");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  off_10029B000 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_100055740()
{
  uint64_t result = _sl_dlopen();
  qword_10029B008 = result;
  return result;
}

void sub_1000557B4(uint64_t a1)
{
  sub_100055490();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("AFPreferences");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029B010 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    long long v2 = (COSHeadphoneNotificationsController *)sub_100172060();
    [(COSHeadphoneNotificationsController *)v2 viewDidLoad];
  }
}

void sub_100056B6C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    a2;
    long long v6 = pbb_bridge_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = 138412290;
      id v8 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Error when presenting auth dialog task with error: %@", (uint8_t *)&v7, 0xCu);
    }

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    (*(void (**)(void, void *, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), a2, 0);
  }
}

void sub_100056D94(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    a2;
    long long v6 = pbb_bridge_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = 138412290;
      id v8 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Error when presenting auth dialog task with error: %@", (uint8_t *)&v7, 0xCu);
    }

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    (*(void (**)(void, void *, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), a2, 0);
  }
}

id sub_100057EC4(void *a1, unint64_t a2)
{
  id v3 = a1;
  id v4 = [v3 mutableCopy];
  if ((unint64_t)[v3 length] >= a2 && (unint64_t)objc_msgSend(v3, "length") > a2)
  {
    uint64_t v5 = 0;
    unint64_t v6 = a2;
    do
    {
      if ((unint64_t)[v3 length] > v6)
      {
        [v4 insertString:@" " atIndex:v5 + v6];
        ++v5;
      }
      v6 += a2;
    }
    while (v6 < (unint64_t)[v3 length]);
  }

  return v4;
}

id sub_100057F84(void *a1)
{
  id v1 = sub_100057EC4(a1, 5uLL);
  long long v2 = [v1 uppercaseString];

  return v2;
}

id sub_100057FD4(void *a1)
{
  id v1 = [a1 mutableCopy];
  if ((unint64_t)[v1 length] >= 3) {
    [v1 insertString:@" " atIndex:2];
  }
  if ((unint64_t)[v1 length] >= 0xA) {
    [v1 insertString:@" " atIndex:9];
  }
  if ((unint64_t)[v1 length] >= 0x11) {
    [v1 insertString:@" " atIndex:16];
  }

  return v1;
}

void sub_100058490(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained queryDevice];
}

void sub_1000594D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
}

void sub_100059534(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained handleAboutInfo:v6 error:v5];
}

void sub_1000595AC(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained handleUsageData:v6 error:v5];
}

void sub_1000596EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v22 = WeakRetained;
    [WeakRetained setHasReceivedCellularPlanUpdate:1];
    id v3 = [*(id *)(a1 + 32) userInfo];
    uint64_t v28 = 0;
    id v29 = &v28;
    uint64_t v30 = 0x2020000000;
    id v4 = (id *)qword_10029B048;
    uint64_t v31 = qword_10029B048;
    if (!qword_10029B048)
    {
      *(void *)buf = _NSConcreteStackBlock;
      *(void *)&uint8_t buf[8] = 3221225472;
      *(void *)&uint8_t buf[16] = sub_10005BB50;
      id v34 = &unk_1002436A8;
      long long v35 = &v28;
      id v5 = (void *)sub_100016154();
      id v6 = dlsym(v5, "NPHCellularPlanInfoError");
      *(void *)(v35[1] + 24) = v6;
      qword_10029B048 = *(void *)(v35[1] + 24);
      id v4 = (id *)v29[3];
    }
    _Block_object_dispose(&v28, 8);
    if (!v4)
    {
      sub_100171A7C();
      __break(1u);
    }
    id v7 = *v4;
    id v23 = [v3 objectForKeyedSubscript:v7];

    if (v23)
    {
      id v8 = pbb_bridge_log();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        id v9 = [*(id *)(a1 + 32) name];
        *(_DWORD *)buf = 138412546;
        *(void *)&uint8_t buf[4] = v9;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v23;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@ has error: %@", buf, 0x16u);
      }
    }
    uint64_t v10 = [sub_10000636C() sharedInstance];
    id v11 = [v10 cellularPlans];

    id v12 = pbb_bridge_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      id v13 = [v11 count];
      *(_DWORD *)buf = 134217984;
      *(void *)&uint8_t buf[4] = v13;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Retrieved %lu plan item(s)", buf, 0xCu);
    }

    id v14 = +[NSMutableArray array];
    long long v26 = 0u;
    long long v27 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    id v15 = v11;
    id v16 = [v15 countByEnumeratingWithState:&v24 objects:v32 count:16];
    if (v16)
    {
      uint64_t v17 = *(void *)v25;
      do
      {
        for (i = 0; i != v16; i = (char *)i + 1)
        {
          if (*(void *)v25 != v17) {
            objc_enumerationMutation(v15);
          }
          id v19 = *(void **)(*((void *)&v24 + 1) + 8 * i);
          __int16 v20 = pbb_bridge_log();
          if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412290;
            *(void *)&uint8_t buf[4] = v19;
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "Inspecting plan item: %@", buf, 0xCu);
          }

          uint64_t v21 = [v19 iccid];
          if (v21)
          {
            if ([v19 isSelected])
            {
              [v14 insertObject:v21 atIndex:0];
            }
            else if ([v19 isSelectable])
            {
              [v14 addObject:v21];
            }
          }
        }
        id v16 = [v15 countByEnumeratingWithState:&v24 objects:v32 count:16];
      }
      while (v16);
    }

    if ([v14 count]) {
      [v22 handleRetrievedICCIDs:v14];
    }

    id WeakRetained = v22;
  }
}

void sub_100059ADC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100059DF4(id a1, PSSpecifierUpdates *a2)
{
  long long v2 = a2;
  [(PSSpecifierUpdates *)v2 reloadSpecifierWithID:@"SONGS_CELL_ID"];
  [(PSSpecifierUpdates *)v2 reloadSpecifierWithID:@"PHOTOS_CELL_ID"];
  [(PSSpecifierUpdates *)v2 reloadSpecifierWithID:@"APPLICATIONS_CELL_ID"];
  [(PSSpecifierUpdates *)v2 reloadSpecifierWithID:@"STORAGE_AVAILABLE_CELL_ID"];
}

void sub_10005A004(id a1, PSSpecifierUpdates *a2)
{
  long long v2 = a2;
  [(PSSpecifierUpdates *)v2 reloadSpecifierWithID:@"STORAGE_AVAILABLE_CELL_ID"];
  [(PSSpecifierUpdates *)v2 reloadSpecifierWithID:@"STORAGE_CAPACITY_CELL_ID"];
}

void sub_10005A1FC(id a1, PSSpecifierUpdates *a2)
{
}

void sub_10005A260(id a1, PSSpecifierUpdates *a2)
{
}

void sub_10005A7BC(id a1, PSSpecifierUpdates *a2)
{
}

id sub_10005AAA8(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifier:*(void *)(a1 + 32)];
}

id sub_10005AFD8(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifier:*(void *)(a1 + 32)];
}

id sub_10005B2CC(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifier:*(void *)(a1 + 32)];
}

void *sub_10005B878(uint64_t a1)
{
  long long v2 = (void *)sub_100016154();
  uint64_t result = dlsym(v2, "NPHCellularPlanInfoDidChangeNotification");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_10029B018 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_10005B8C8()
{
  uint64_t result = _sl_dlopen();
  qword_10029B020 = result;
  return result;
}

void *sub_10005B93C(uint64_t a1)
{
  long long v2 = (void *)sub_10005B98C();
  uint64_t result = dlsym(v2, "_CTServerConnectionCreateOnTargetQueue");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  off_10029B030 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_10005B98C()
{
  v3[0] = 0;
  if (!qword_10029B038)
  {
    v3[1] = _NSConcreteStackBlock;
    v3[2] = 3221225472;
    v3[3] = sub_10005BA8C;
    void v3[4] = &unk_1002436E0;
    void v3[5] = v3;
    long long v4 = off_100244B40;
    uint64_t v5 = 0;
    qword_10029B038 = _sl_dlopen();
  }
  uint64_t v0 = qword_10029B038;
  id v1 = (void *)v3[0];
  if (!qword_10029B038)
  {
    id v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t sub_10005BA8C()
{
  uint64_t result = _sl_dlopen();
  qword_10029B038 = result;
  return result;
}

void *sub_10005BB00(uint64_t a1)
{
  long long v2 = (void *)sub_10005B98C();
  uint64_t result = dlsym(v2, "_CTServerConnectionGetRemoteBundleInfo");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  off_10029B040 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *sub_10005BB50(uint64_t a1)
{
  long long v2 = (void *)sub_100016154();
  uint64_t result = dlsym(v2, "NPHCellularPlanInfoError");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_10029B048 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_10005BD04(id a1)
{
  id v1 = pbb_bridge_log();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Dismissed internal settings.", v2, 2u);
  }
}

void sub_10005C4BC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = pbb_accountsignin_log();
  id v8 = v7;
  if (!v5 || v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1001721B0((uint64_t)v6, v8);
    }
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = 136315394;
      uint64_t v10 = "-[COSScreenTimeController _openScreenTimeForTinkerFamilyMember]_block_invoke";
      __int16 v11 = 2112;
      id v12 = v5;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%s Found: %@", (uint8_t *)&v9, 0x16u);
    }

    [*(id *)(a1 + 32) _openScreenTimeForFamilyMember:v5];
  }
}

void sub_10005C960(uint64_t a1)
{
  long long v2 = +[PPDiscoveryManager sharedDiscoveryManager];
  [v2 setSignalLimitOverride:PPDiscoveryLimitBridge];

  id v3 = +[PPDiscoveryManager sharedDiscoveryManager];
  [v3 begin];

  id v4 = +[NSNotificationCenter defaultCenter];
  [v4 addObserver:*(void *)(a1 + 32) selector:"discoveredAdvertisingWatch:" name:PPDeviceWasDiscoveredNotification object:0];
}

id sub_10005CE98()
{
  self;
  uint64_t v0 = [UIApp setupController];
  id v1 = [v0 activationManager];
  id v2 = [v1 hasStashedALFlow];

  return v2;
}

id sub_10005CFD4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) evaluateCanReleaseHold];
}

void sub_10005D5D0(uint64_t a1)
{
  if (a1)
  {
    *(unsigned char *)(a1 + 11) = 0;
    id v2 = +[NSNotificationCenter defaultCenter];
    [v2 removeObserver:a1 name:@"COSActivationResponseManagerStashedALFlowNotification" object:0];

    id v3 = +[NSNotificationCenter defaultCenter];
    [v3 removeObserver:a1 name:PBBridgeGizmoDidFinishActivatingNotification object:0];
  }
}

id sub_10005E0E4(uint64_t a1, uint64_t a2)
{
  id v4 = pbb_setupflow_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = +[NSNumber numberWithUnsignedShort:a2];
    int v7 = 138412290;
    id v8 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "watchDidSelectLanguageAndLocale %@", (uint8_t *)&v7, 0xCu);
  }
  return [*(id *)(a1 + 32) watchDidSelectLanguageAndLocale:a2];
}

id sub_10005EC00()
{
  if (qword_10029B060 != -1) {
    dispatch_once(&qword_10029B060, &stru_100244BC8);
  }
  uint64_t v0 = (void *)qword_10029B058;

  return v0;
}

void sub_10005EC54(id a1)
{
  id v1 = NSClassFromString(@"VTUISiriOptinViewController");
  id v2 = NSStringFromClass(v1);
  v11[0] = v2;
  id v3 = (objc_class *)objc_opt_class();
  id v4 = NSStringFromClass(v3);
  v11[1] = v4;
  id v5 = (objc_class *)objc_opt_class();
  id v6 = NSStringFromClass(v5);
  v11[2] = v6;
  int v7 = (objc_class *)objc_opt_class();
  id v8 = NSStringFromClass(v7);
  v11[3] = v8;
  uint64_t v9 = +[NSArray arrayWithObjects:v11 count:4];
  uint64_t v10 = (void *)qword_10029B058;
  qword_10029B058 = v9;
}

id sub_10005F39C(void *a1)
{
  id v1 = a1;
  id v2 = [@"Screen-Location" stringByAppendingString:@"-v10"];
  int HasCapabilityForString = BPSDeviceHasCapabilityForString();

  if (HasCapabilityForString)
  {
    uint64_t v4 = [v2 stringByAppendingString:@"-Compass"];

    id v2 = (void *)v4;
  }
  id v5 = sub_1000328FC((uint64_t)v2);

  return v5;
}

uint64_t COSBBUserStudyDataBlobReadFrom(void *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  uint64_t v4 = &selRef_initWithStyle_reuseIdentifier_specifier_updateIcon_showLearnMore_delegate_;
  id v5 = &selRef_initWithStyle_reuseIdentifier_specifier_updateIcon_showLearnMore_delegate_;
  id v6 = &selRef_initWithStyle_reuseIdentifier_specifier_updateIcon_showLearnMore_delegate_;
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    unint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v10);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v11;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      BOOL v13 = v8++ >= 9;
      if (v13)
      {
        unint64_t v9 = 0;
        int v14 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_12:
    int v14 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v9 = 0;
    }
LABEL_14:
    if (v14 || (v9 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v9 >> 3))
    {
      case 1u:
        char v16 = 0;
        unsigned int v17 = 0;
        uint64_t v18 = 0;
        *(_WORD *)((char *)a1 + *((int *)v4 + 500)) |= 0x40u;
        while (1)
        {
          uint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20;
          v18 |= (unint64_t)(v21 & 0x7F) << v16;
          if ((v21 & 0x80) == 0) {
            goto LABEL_87;
          }
          v16 += 7;
          BOOL v13 = v17++ >= 9;
          if (v13)
          {
            LODWORD(v18) = 0;
            goto LABEL_89;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_87:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v18) = 0;
        }
LABEL_89:
        uint64_t v67 = *((int *)v5 + 501);
        goto LABEL_118;
      case 2u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v18 = 0;
        *(_WORD *)((char *)a1 + *((int *)v4 + 500)) |= 0x10u;
        while (2)
        {
          uint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25;
            v18 |= (unint64_t)(v26 & 0x7F) << v22;
            if (v26 < 0)
            {
              v22 += 7;
              BOOL v13 = v23++ >= 9;
              if (v13)
              {
                LODWORD(v18) = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v18) = 0;
        }
LABEL_93:
        uint64_t v67 = *((int *)v6 + 502);
        goto LABEL_118;
      case 3u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v18 = 0;
        *(_WORD *)((char *)a1 + *((int *)v4 + 500)) |= 8u;
        while (2)
        {
          uint64_t v29 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v30 = v29 + 1;
          if (v29 == -1 || v30 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v29);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v30;
            v18 |= (unint64_t)(v31 & 0x7F) << v27;
            if (v31 < 0)
            {
              v27 += 7;
              BOOL v13 = v28++ >= 9;
              if (v13)
              {
                LODWORD(v18) = 0;
                goto LABEL_97;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v18) = 0;
        }
LABEL_97:
        uint64_t v67 = 32;
        goto LABEL_118;
      case 4u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v18 = 0;
        *(_WORD *)((char *)a1 + *((int *)v4 + 500)) |= 0x20u;
        while (2)
        {
          uint64_t v34 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v35 = v34 + 1;
          if (v34 == -1 || v35 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v36 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v34);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v35;
            v18 |= (unint64_t)(v36 & 0x7F) << v32;
            if (v36 < 0)
            {
              v32 += 7;
              BOOL v13 = v33++ >= 9;
              if (v13)
              {
                LODWORD(v18) = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v18) = 0;
        }
LABEL_101:
        uint64_t v67 = 48;
        goto LABEL_118;
      case 5u:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v18 = 0;
        *(_WORD *)((char *)a1 + *((int *)v4 + 500)) |= 0x100u;
        while (2)
        {
          uint64_t v39 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v41 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v39);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v40;
            v18 |= (unint64_t)(v41 & 0x7F) << v37;
            if (v41 < 0)
            {
              v37 += 7;
              BOOL v13 = v38++ >= 9;
              if (v13)
              {
                LODWORD(v18) = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v18) = 0;
        }
LABEL_105:
        uint64_t v67 = 72;
        goto LABEL_118;
      case 6u:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v18 = 0;
        *(_WORD *)((char *)a1 + *((int *)v4 + 500)) |= 0x80u;
        while (2)
        {
          uint64_t v44 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v44);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v45;
            v18 |= (unint64_t)(v46 & 0x7F) << v42;
            if (v46 < 0)
            {
              v42 += 7;
              BOOL v13 = v43++ >= 9;
              if (v13)
              {
                LODWORD(v18) = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v18) = 0;
        }
LABEL_109:
        uint64_t v67 = 56;
        goto LABEL_118;
      case 7u:
        uint64_t v47 = PBReaderReadString();
        uint64_t v48 = 8;
        goto LABEL_63;
      case 8u:
        uint64_t v47 = PBReaderReadString();
        uint64_t v48 = 3;
LABEL_63:
        uint64_t v49 = (void *)a1[v48];
        a1[v48] = v47;

        goto LABEL_119;
      case 9u:
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v18 = 0;
        *(_WORD *)((char *)a1 + *((int *)v4 + 500)) |= 4u;
        while (2)
        {
          uint64_t v52 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v52);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v53;
            v18 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              BOOL v13 = v51++ >= 9;
              if (v13)
              {
                LODWORD(v18) = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v18) = 0;
        }
LABEL_113:
        uint64_t v67 = 20;
        goto LABEL_118;
      case 0xAu:
        *(_WORD *)((char *)a1 + *((int *)v4 + 500)) |= 1u;
        unint64_t v55 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v55 <= 0xFFFFFFFFFFFFFFF7 && v55 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v56 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v55);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v55 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v56 = 0;
        }
        a1[1] = v56;
        goto LABEL_119;
      case 0xBu:
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v18 = 0;
        *(_WORD *)((char *)a1 + *((int *)v4 + 500)) |= 2u;
        while (2)
        {
          uint64_t v59 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v59);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v60;
            v18 |= (unint64_t)(v61 & 0x7F) << v57;
            if (v61 < 0)
            {
              v57 += 7;
              BOOL v13 = v58++ >= 9;
              if (v13)
              {
                LODWORD(v18) = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v18) = 0;
        }
LABEL_117:
        uint64_t v67 = 16;
LABEL_118:
        *(_DWORD *)((char *)a1 + v67) = v18;
        goto LABEL_119;
      case 0xDu:
        v63 = v4;
        v64 = v6;
        id v65 = v5;
        v66 = objc_alloc_init(COSBBScannedResults);
        [a1 addResults:v66];
        if (PBReaderPlaceMark() && COSBBScannedResultsReadFrom((uint64_t)v66, a2))
        {
          PBReaderRecallMark();

          id v5 = v65;
          id v6 = v64;
          uint64_t v4 = v63;
LABEL_119:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_119;
    }
  }
}

void sub_1000616E0(uint64_t a1)
{
  id v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    uint64_t v20 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "System app settings rows removed: %@", buf, 0xCu);
  }

  long long v16 = 0u;
  long long v17 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v15;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(void *)v15 != v7) {
          objc_enumerationMutation(v4);
        }
        unint64_t v9 = *(void **)(*((void *)&v14 + 1) + 8 * i);
        uint64_t v10 = *(void **)(a1 + 40);
        unint64_t v11 = [v9 identifier:v14];
        [v10 removeSpecifierID:v11 animated:1];

        char v12 = *(void **)(a1 + 40);
        BOOL v13 = [v9 identifier];
        [v12 _removeSystemAppSpecifierFromCache:v13];
      }
      id v6 = [v4 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v6);
  }
}

void sub_100062A48(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  unint64_t v9 = pbb_bridge_log();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    int v15 = 136315906;
    long long v16 = "-[COSUpdateWatchViewController suggestedButtonPressed:]_block_invoke";
    __int16 v17 = 2048;
    uint64_t v18 = a2;
    __int16 v19 = 2112;
    id v20 = v8;
    __int16 v21 = 2112;
    id v22 = v7;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%s: Update completed with status: %ld and error: %@ for update: %@", (uint8_t *)&v15, 0x2Au);
  }

  if (a2 == 1)
  {
    unint64_t v11 = pbb_bridge_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v15) = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Update dismissed, enabling UI", (uint8_t *)&v15, 2u);
    }

    char v12 = [*(id *)(a1 + 32) suggestedChoiceButton];
    [v12 setEnabled:1];

    BOOL v13 = [*(id *)(a1 + 32) alternateChoiceButton];
    [v13 setEnabled:1];
  }
  else if (a2)
  {
    long long v14 = pbb_bridge_log();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v15) = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Update unsuccessful, aborting pairing", (uint8_t *)&v15, 2u);
    }

    [*(id *)(a1 + 32) abortPairing];
  }
  else
  {
    uint64_t v10 = [*(id *)(a1 + 32) delegate];
    [v10 buddyControllerDone:*(void *)(a1 + 32)];
  }
}

void sub_100062DFC(id a1, BOOL a2)
{
  BOOL v2 = a2;
  uint64_t v3 = pbb_bridge_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    CFStringRef v4 = @"FAILED";
    if (v2) {
      CFStringRef v4 = @"SUCCEEDED";
    }
    int v5 = 138412290;
    CFStringRef v6 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "OpenURL for zero day learn more link %@", (uint8_t *)&v5, 0xCu);
  }
}

void sub_100063094(id a1, NSError *a2)
{
  BOOL v2 = a2;
  uint64_t v3 = pbb_bridge_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    int v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "User Reset Buddy! - Unpairing result: (%@)", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100063948(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 buddyControllerReleaseHold:*(void *)(a1 + 32)];
}

id sub_100063AC8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setupCameraSessionWithCompletion:*(void *)(a1 + 40) isAsync:1];
}

id sub_100063C78(uint64_t a1)
{
  return [*(id *)(a1 + 32) _scannerSetupComplete];
}

uint64_t sub_100063C80(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000658A0(uint64_t a1)
{
  id v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "_internalPairingController Dismissed", v5, 2u);
  }

  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = *(void **)(v3 + 72);
  *(void *)(v3 + 72) = 0;
}

void sub_100065E54(uint64_t a1)
{
  id v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "_internalPairingController Dismissed", v5, 2u);
  }

  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = *(void **)(v3 + 72);
  *(void *)(v3 + 72) = 0;
}

id sub_100066448(uint64_t a1)
{
  id v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "[Already Paired Detector] Detected Frames! Cancel Scanning.", v5, 2u);
  }

  *(unsigned char *)(*(void *)(a1 + 32) + 11) = 1;
  [*(id *)(*(void *)(a1 + 32) + 176) stopDiscoveringWatchNearby];
  uint64_t v3 = +[NRDeviceDiscoveryController sharedInstance];
  [v3 end];

  [*(id *)(a1 + 32) _cancelAlreadyPairedTimers];
  [*(id *)(a1 + 32) stopTrackingAccelerometer];
  return [*(id *)(a1 + 32) cancelEnqueuedAlreadyPairedDetectionStart];
}

id sub_100066AE4(uint64_t a1, uint64_t a2)
{
  int v4 = pbb_setupflow_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = +[NSNumber numberWithBool:a2];
    int v7 = 138412290;
    id v8 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[Already Paired Detector] Followed Learn More Link: %@.", (uint8_t *)&v7, 0xCu);
  }
  +[PBBridgeCAReporter recordAlreadyPairedAlertLearnedMore:a2];
  return [*(id *)(a1 + 32) enqueueAlreadyPairedDetectionStart];
}

void sub_100066FB4(id a1)
{
  id v1 = [UIApp setupController];
  id v2 = [v1 pairingReportManager];

  [v2 addPairingTimeEventToPairingReportPlist:71 withValue:&off_10025BF68 withError:0];
  [v2 completePairingMetricWithSuccess:0];
  [UIApp resetSetupFlowAnimated:1 forEvent:21];
  [UIApp dismissSetupFlowComplete:0 animated:1];
}

void sub_1000670A0(id a1)
{
  id v1 = [UIApp setupController];
  id v2 = [v1 pairingReportManager];

  [v2 addPairingTimeEventToPairingReportPlist:73 withValue:&off_10025BF68 withError:0];
  [v2 completePairingMetricWithSuccess:0];
  [UIApp resetSetupFlowAnimated:1 forEvent:59];
  [UIApp dismissSetupFlowComplete:0 animated:1];
}

void sub_10006718C(id a1, BOOL a2)
{
  BOOL v2 = a2;
  uint64_t v3 = [UIApp setupController];
  id v4 = [v3 pairingReportManager];

  [v4 addPairingTimeEventToPairingReportPlist:70 withValue:&off_10025BF68 withError:0];
  [v4 completePairingMetricWithSuccess:0];
  [UIApp resetSetupFlowAnimated:1 forEvent:13];
  [UIApp dismissSetupFlowComplete:0 animated:1];
  +[PBBridgeCAReporter recordEndOfLifePhoneAlertUserResponse:v2];
}

id sub_1000674F8(uint64_t a1)
{
  BOOL v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "(UHP) Finished pairing", v4, 2u);
  }

  [*(id *)(a1 + 32) finishedPairing];
  return [*(id *)(a1 + 32) setWrappingUpSuccessfulManualPairing:0];
}

id sub_100067CD4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 168);
  *(void *)(v2 + 168) = 0;

  id v4 = *(void **)(a1 + 32);

  return [v4 _beginConsideringFaceUpAdvice];
}

void sub_10006871C(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  byte_10029B068 = [v1 BOOLForKey:@"Verbose_MA_Logging"];
}

void sub_100068AD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100068B0C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (id *)(a1 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  char v42 = v3;
  [WeakRetained setMagicCodeOutro:v3];

  char v46 = +[NSFileManager defaultManager];
  uint64_t v44 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
  if ([v44 count])
  {
    CFStringRef v6 = [v44 firstObject];
    unsigned int v43 = +[NSString stringWithFormat:@"%@/%@/%@.mov", v6, PBAssetsCacheDirName, *(void *)(a1 + 32)];

    unint64_t v45 = [v46 destinationOfSymbolicLinkAtPath:v43 error:0];
    unsigned __int8 v7 = [v46 fileExistsAtPath:v45];
    id v8 = objc_loadWeakRetained((id *)(a1 + 56));
    unsigned int v9 = [v8 _verboseMALogging];

    if (v9)
    {
      uint64_t v10 = pbb_setupflow_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        CFStringRef v50 = v43;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "symLinkPath: %@", buf, 0xCu);
      }

      unint64_t v11 = pbb_setupflow_log();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        CFStringRef v50 = v45;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "destinationPath: %@", buf, 0xCu);
      }
    }
    if (v7)
    {
      char v12 = +[NSString stringWithFormat:@"file://%@", v45];
      BOOL v13 = +[NSURL URLWithString:v12];
      char v14 = 1;
      goto LABEL_12;
    }
  }
  else
  {
    unsigned int v43 = 0;
    unint64_t v45 = 0;
  }
  int v15 = *(void **)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  char v12 = sub_1000328F0();
  BOOL v13 = [v15 URLForResource:v16 withExtension:@"mov" subdirectory:v12];
  char v14 = 0;
LABEL_12:

  __int16 v17 = pbb_setupflow_log();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    CFStringRef v50 = v13;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "Will add magicCodeOutroPerMaterial url: %@", buf, 0xCu);
  }

  id v18 = objc_loadWeakRetained(v4);
  v47[0] = _NSConcreteStackBlock;
  v47[1] = 3221225472;
  v47[2] = sub_1000690B4;
  v47[3] = &unk_100244808;
  objc_copyWeak(&v48, v4);
  [v18 addItemWithURL:v13 completion:v47];

  __int16 v19 = +[PBBridgeWatchAttributeController sharedDeviceController];
  id v20 = v19;
  if ((v14 & 1) == 0 && [v19 size] != (id)19)
  {
    __int16 v21 = +[UIScreen mainScreen];
    [v21 scale];
    id v22 = @"@2x";
    if (v23 > 2.0) {
      id v22 = @"@3x";
    }
    char v41 = v22;

    id v24 = [v20 material];
    id v25 = [v20 size];
    id v26 = objc_alloc((Class)UIImageView);
    char v27 = +[PBBridgeWatchAttributeController resourceString:@"generic-mask" material:v24 size:v25 forAttributes:4];
    unsigned int v28 = [v27 stringByAppendingString:v41];
    uint64_t v29 = sub_1000328FC((uint64_t)v28);
    unint64_t v30 = +[UIImage imageNamed:v29];
    id v31 = [v26 initWithImage:v30];
    id v32 = objc_loadWeakRetained(v4);
    [v32 setGenericMask:v31];

    sub_100038168();
    double v34 = v33;
    double v36 = v35;
    char v37 = pbb_bridge_log();
    if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
    {
      CFStringRef v38 = @"nil";
      if (v45) {
        CFStringRef v38 = v45;
      }
      *(_DWORD *)buf = 138412290;
      CFStringRef v50 = v38;
      _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, "Asset at path: \"%@\" not found, using fallback outro video", buf, 0xCu);
    }

    id v39 = objc_loadWeakRetained(v4);
    unint64_t v40 = [v39 genericMask];
    [v40 setFrame:CGPointZero.x, CGPointZero.y, v34, v36];
  }
  objc_destroyWeak(&v48);
}

void sub_10006907C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000690B4(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained setMagicCodeOutroPerMaterial:v3];

  id v5 = objc_loadWeakRetained(v2);
  [v5 setAssetsLoaded:1];
}

void sub_100069260(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v9 = 0;
  id v3 = [v2 statusOfValueForKey:@"duration" error:&v9];
  id v4 = v9;
  id v5 = v4;
  if (v3 == (id)3)
  {
    NSLog(@"Failed to load duration property for asset: %@ with error: %@", *(void *)(a1 + 32), v4);
  }
  else if (v3 == (id)2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100069360;
    block[3] = &unk_1002441B0;
    id v7 = *(id *)(a1 + 32);
    id v8 = *(id *)(a1 + 40);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_100069360(uint64_t a1)
{
  uint64_t v2 = +[AVPlayerItem playerItemWithAsset:*(void *)(a1 + 32)];
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3)
  {
    id v4 = v2;
    (*(void (**)(void))(v3 + 16))();
    uint64_t v2 = v4;
  }
}

id sub_1000695A4(uint64_t a1)
{
  uint64_t v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Device insignia did reach end notification received", buf, 2u);
  }

  uint64_t v3 = [*(id *)(*(void *)(a1 + 32) + 64) currentItem];
  id v4 = *(void **)(*(void *)(a1 + 32) + 72);

  if (v3 != v4) {
    return [*(id *)(a1 + 32) moveOutroToInsignia];
  }
  CFStringRef v6 = pbb_setupflow_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Advancing to the outro2 phase...", buf, 2u);
  }

  id result = [*(id *)(*(void *)(a1 + 32) + 64) advanceToNextItem];
  uint64_t v7 = *(void *)(a1 + 32);
  if (*(void *)(v7 + 96))
  {
    id result = [*(id *)(v7 + 56) addSubview:];
    uint64_t v7 = *(void *)(a1 + 32);
  }
  if (*(void *)(v7 + 88))
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100069744;
    v8[3] = &unk_1002438A0;
    void v8[4] = v7;
    return +[UIView animateWithDuration:v8 animations:0 completion:1.5];
  }
  return result;
}

id sub_100069744(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 88) setAlpha:1.0];
}

void sub_100069E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100069E80(uint64_t a1, uint64_t a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10006BE18;
  block[3] = &unk_1002436E0;
  void block[4] = a2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_10006B3B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadSpecifiers];
}

id sub_10006BE18(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadSpecifiers];
}

Class sub_10006BE20(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_10029B080)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = sub_10006BF64;
    void v4[4] = &unk_1002436E0;
    void v4[5] = v4;
    long long v5 = off_100244DB0;
    uint64_t v6 = 0;
    qword_10029B080 = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!qword_10029B080)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("ADASManager");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)sub_10017233C();
LABEL_8:
    free(v2);
  }
  qword_10029B078 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_10006BF64()
{
  uint64_t result = _sl_dlopen();
  qword_10029B080 = result;
  return result;
}

void sub_10006D1DC(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;

  _Unwind_Resume(a1);
}

void sub_10006D2E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  uint64_t v10 = v9;

  a9.super_class = (Class)COSMagicCodeScanner;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_10006D31C(void *a1)
{
}

id sub_10006D394(unint64_t a1)
{
  if (a1 > 2) {
    CFStringRef v2 = @"Unknown Errror";
  }
  else {
    CFStringRef v2 = off_100244EE8[a1];
  }
  NSErrorUserInfoKey v6 = NSLocalizedDescriptionKey;
  CFStringRef v7 = v2;
  uint64_t v3 = +[NSDictionary dictionaryWithObjects:&v7 forKeys:&v6 count:1];
  id v4 = +[NSError errorWithDomain:@"com.apple.Bridge" code:a1 userInfo:v3];

  return v4;
}

void sub_10006D480(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10006D6AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10006DC44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10006DE78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10006DF4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10006EE64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39)
{
  _Unwind_Resume(a1);
}

id sub_10006EF6C(void *a1)
{
  [*(id *)(a1[4] + 216) updateWithConfidences:a1[5]];
  CFStringRef v2 = *(void **)(a1[4] + 216);
  uint64_t v3 = a1[6];

  return _[v2 updateWithSummary:v3];
}

id sub_10006EFBC(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 216) setAlpha:1.0];
}

id sub_10006EFD4(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 216) setAlpha:0.5];
  *(unsigned char *)(*(void *)(a1 + 32) + 161) = 1;
  return result;
}

void sub_10006F020(uint64_t a1)
{
  unsigned int NPayloadBytes = HCImagePerspectiveReader::GetNPayloadBytes(*(HCImagePerspectiveReader **)(*(void *)(a1 + 32) + 64));
  PayloadBytePtr = HCImagePerspectiveReader::GetPayloadBytePtr(*(HCImagePerspectiveReader **)(*(void *)(a1 + 32) + 64));
  uint64_t v4 = 0;
  if (NPayloadBytes)
  {
    do
    {
      if (!PayloadBytePtr[v4]) {
        goto LABEL_5;
      }
      ++v4;
    }
    while (NPayloadBytes != v4);
    uint64_t v4 = NPayloadBytes;
  }
LABEL_5:
  id v5 = [objc_alloc((Class)NSString) initWithBytes:PayloadBytePtr length:v4 encoding:4];
  NSErrorUserInfoKey v6 = pbb_setupflow_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    double v7 = (*(double *)(a1 + 40) - *(double *)(*(void *)(a1 + 32) + 136)) * 1000.0;
    *(_DWORD *)buf = 67109634;
    unsigned int v9 = NPayloadBytes;
    __int16 v10 = 2048;
    double v11 = v7;
    __int16 v12 = 2112;
    id v13 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Finished decoding payload of length %d bytes, elapsed %.2fms - Payload: %@", buf, 0x1Cu);
  }

  *(void *)(*(void *)(a1 + 32) + 136) = *(void *)(a1 + 40);
  *(_DWORD *)(*(void *)(a1 + 32) + 152) = 1065353216;
  HCImagePerspectiveReader::Reset(*(HCImagePerspectiveReader **)(*(void *)(a1 + 32) + 64));
}

void sub_10006F2E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_10006F318(uint64_t a1)
{
  id v7 = +[UIScreen mainScreen];
  [v7 bounds];
  double v3 = v2;

  uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 208);
  id v8 = +[NSString stringWithFormat:@"Read: %@", *(void *)(a1 + 40)];
  [v4 setText:];

  uint64_t v5 = *(void *)(a1 + 32);
  NSErrorUserInfoKey v6 = *(void **)(v5 + 208);
  [*(id *)(v5 + 200) frame];
  [v6 setFrame:CGRectMake(0.0, CGRectGetMinY(v12) + -25.0, v3, 25.0)];
  id v9 = [*(id *)(a1 + 32) delegate];
  LOBYTE(v6) = objc_opt_respondsToSelector();

  if (v6)
  {
    id v10 = [*(id *)(a1 + 32) delegate];
    [v10 updateScanningProgress:*(void *)(a1 + 40) key:1.0];
  }
}

void sub_10006F464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_10006F484(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 168));
  [WeakRetained receivedData:*(void *)(a1 + 40)];
}

void sub_10006F4E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10006F4F4(uint64_t a1)
{
  double v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Wrote Asset!", buf, 2u);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10006F5C8;
  block[3] = &unk_100244E78;
  id v4 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_10006F5C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10006F5D8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    id v15 = +[UIScreen mainScreen];
    [v15 bounds];
    CGFloat v3 = v2;
    CGFloat v5 = v4;
    CGFloat v7 = v6;
    CGFloat v9 = v8;

    id v10 = *(void **)(*(void *)(a1 + 32) + 200);
    v19.origin.double x = v3;
    v19.origin.y = v5;
    v19.size.width = v7;
    v19.size.height = v9;
    double Height = CGRectGetHeight(v19);
    [*(id *)(a1 + 32) safeAreaInsets];
    double v13 = Height - v12 + -5.0;
    v20.origin.double x = v3;
    v20.origin.y = v5;
    v20.size.width = v7;
    v20.size.height = v9;
    [v10 setFrame:0.0, v13, CGRectGetWidth(v20) * *(float *)(a1 + 40), 5.0];
  }
  id v16 = [*(id *)(a1 + 32) delegate];
  char v14 = objc_opt_respondsToSelector();

  if (v14)
  {
    id v17 = [*(id *)(a1 + 32) delegate];
    [v17 updateScanningProgress:0 key:fmin(*(float *)(a1 + 40), 1.0)];
  }
}

void sub_10006F744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_10006F9C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10006FC24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10006FECC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10006FFE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100070134(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100070160(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100070228;
  v3[3] = &unk_100244E00;
  uint64_t v4 = *(void *)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100070234;
  v2[3] = &unk_100244EC8;
  v2[4] = v4;
  return +[UIView animateWithDuration:v3 animations:v2 completion:0.25];
}

id sub_100070228(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

void sub_100070234(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  CGFloat v3 = *(void **)(v2 + 8);
  *(void *)(v2 + 8) = 0;

  [*(id *)(*(void *)(a1 + 32) + 24) removeFromSuperlayer];
  id v4 = +[NSNotificationCenter defaultCenter];
  [v4 postNotificationName:@"COSCameraHitRuntimeError" object:0];
}

void sub_1000702C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000705C0(__CFDictionary *a1, const void *a2, int a3)
{
  int valuePtr = a3;
  CFNumberRef v5 = CFNumberCreate(0, kCFNumberIntType, &valuePtr);
  CFDictionarySetValue(a1, a2, v5);
  CFRelease(v5);
}

void sub_100070958(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!v3)
  {
    CGFloat v7 = sub_10001B118();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = 136315138;
      double v13 = "-[COSScreenTimeSetPasscodeViewController suggestedButtonPressed:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%s: step complete", (uint8_t *)&v12, 0xCu);
    }

    double v6 = [*(id *)(a1 + 32) miniFlowDelegate];
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = objc_opt_class();
    id v10 = v6;
    uint64_t v11 = v8;
    goto LABEL_11;
  }
  unsigned __int8 v4 = [*(id *)(a1 + 32) _errorIsUserCanceledSettingPIN:v3];
  CFNumberRef v5 = sub_10001B118();
  double v6 = v5;
  if ((v4 & 1) == 0)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1001726C4();
    }

    id v10 = [*(id *)(a1 + 32) miniFlowDelegate];
    double v6 = v10;
    uint64_t v11 = *(void *)(a1 + 32);
    uint64_t v9 = 0;
LABEL_11:
    [v10 miniFlowStepComplete:v11 nextControllerClass:v9];
    goto LABEL_12;
  }
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v12 = 136315138;
    double v13 = "-[COSScreenTimeSetPasscodeViewController suggestedButtonPressed:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%s: user canceled setting Screen Time passcode", (uint8_t *)&v12, 0xCu);
  }
LABEL_12:
}

void sub_1000710A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000710C4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  CGFloat v7 = sub_10001B118();
  uint64_t v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_100172908();
    }
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315394;
      CGRect v20 = "-[COSScreenTimeSetPasscodeViewController _collectThenSetScreenTimePasscodeForFamilyMember:withCompletionHand"
            "ler:]_block_invoke";
      __int16 v21 = 2112;
      v22[0] = v5;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%s: setting collected passcode:%@", buf, 0x16u);
    }

    uint64_t v8 = [*(id *)(a1 + 32) configurationWithUpdatedPasscode:v5];
    uint64_t v9 = *(void **)(a1 + 40);
    id v18 = 0;
    unsigned int v10 = [v9 applyUpdatedConfiguration:v8 error:&v18];
    id v6 = v18;
    uint64_t v11 = sub_10001B118();
    int v12 = v11;
    if (v6)
    {
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_100172894();
      }
    }
    else if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315650;
      CGRect v20 = "-[COSScreenTimeSetPasscodeViewController _collectThenSetScreenTimePasscodeForFamilyMember:withCompletionHand"
            "ler:]_block_invoke";
      __int16 v21 = 1024;
      LODWORD(v22[0]) = v10;
      WORD2(v22[0]) = 2114;
      *(void *)((char *)v22 + 6) = v8;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "%s: success:%d updatedConfiguration:%{public}@", buf, 0x1Cu);
    }
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100071310;
  block[3] = &unk_1002444A8;
  id v13 = *(id *)(a1 + 48);
  id v16 = v6;
  id v17 = v13;
  id v14 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_100071310(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1000713E8(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("STSetupClient");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029B088 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_10017174C();
    sub_100071440();
  }
}

void sub_100071440()
{
  v1[0] = 0;
  if (!qword_10029B090)
  {
    v1[1] = _NSConcreteStackBlock;
    v1[2] = 3221225472;
    v1[3] = sub_10007153C;
    v1[4] = &unk_1002436E0;
    v1[5] = v1;
    long long v2 = off_100244F28;
    uint64_t v3 = 0;
    qword_10029B090 = _sl_dlopen();
  }
  uint64_t v0 = (void *)v1[0];
  if (!qword_10029B090)
  {
    uint64_t v0 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v1[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t sub_10007153C()
{
  uint64_t result = _sl_dlopen();
  qword_10029B090 = result;
  return result;
}

void sub_1000715B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  sub_100071440();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("STUserID");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029B098 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    unsigned int v10 = (void *)sub_100171774();
    sub_100071608(v10, v11, v12, v13, v14, v15, v16, v17, a9);
  }
}

void sub_100071608(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_100071640(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x20u);
}

id sub_100072914(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 24) startAnimating];
  [*(id *)(*(void *)(a1 + 32) + 24) setAlpha:1.0];
  long long v2 = *(void **)(*(void *)(a1 + 32) + 16);

  return [v2 setAlpha:0.0];
}

id sub_100072A6C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 24) setAlpha:0.0];
  long long v2 = *(void **)(*(void *)(a1 + 32) + 16);

  return [v2 setAlpha:1.0];
}

id sub_100072AC8(uint64_t a1)
{
  long long v2 = +[NSNotificationCenter defaultCenter];
  [v2 addObserver:*(void *)(a1 + 32) selector:"textDidChange:" name:UITextFieldTextDidChangeNotification object:*(void *)(*(void *)(a1 + 32) + 32)];

  [*(id *)(*(void *)(a1 + 32) + 24) stopAnimating];
  [*(id *)(*(void *)(a1 + 32) + 32) setEnabled:1];
  uint64_t v3 = *(void **)(*(void *)(a1 + 32) + 32);

  return [v3 becomeFirstResponder];
}

id sub_100073920(uint64_t a1, void *a2)
{
  return _[a2 checkForFileTransferProgress];
}

void sub_100073B18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100073B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = pbb_bridge_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    uint64_t v16 = a2;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "progress retrieved %lu", buf, 0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (a3)
  {
    uint64_t v8 = pbb_bridge_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      uint64_t v16 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Error when attempting to retrieve progress for %@", buf, 0xCu);
    }
  }
  else if (a2)
  {
    if (a2 == 100 && !*(unsigned char *)(*(void *)(a1 + 40) + 144))
    {
      unsigned int v10 = +[NSNotificationCenter defaultCenter];
      uint64_t v11 = *(void *)(a1 + 32);
      CFStringRef v13 = @"DiagnosticLogTransferComplete";
      uint64_t v14 = v11;
      uint64_t v12 = +[NSDictionary dictionaryWithObjects:&v14 forKeys:&v13 count:1];
      [v10 postNotificationName:@"DiagnosticLogTransferComplete" object:0 userInfo:v12];

      [*(id *)(a1 + 40) setNotifiedOwnerCompleteTransfer:1];
    }
    [WeakRetained updateProgress:a2];
  }
}

id sub_100073D88(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 152) setProgress:1 animated:(double)*(unint64_t *)(a1 + 40)];
}

id sub_100073F10(uint64_t a1, void *a2)
{
  return [a2 _kickOffWatchKitAppReload];
}

void sub_100074060(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadSpecifiers];
}

void sub_1000744A4(uint64_t a1, char a2)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100074554;
  void v5[3] = &unk_100244878;
  uint64_t v4 = *(void **)(a1 + 40);
  void v5[4] = *(void *)(a1 + 32);
  id v6 = v4;
  id v7 = *(id *)(a1 + 48);
  char v8 = a2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
}

void sub_100074554(uint64_t a1)
{
  [*(id *)(a1 + 32) _stopSpinnerInSpecifier:*(void *)(a1 + 40)];
  if (*(void *)(a1 + 48) && *(unsigned char *)(a1 + 56))
  {
    long long v2 = pbb_bridge_log();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 48);
      int v5 = 136315394;
      id v6 = "-[COSSettingsListController _appStoreSpecifierTapped:]_block_invoke_2";
      __int16 v7 = 2112;
      uint64_t v8 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%s launching app store controller %@", (uint8_t *)&v5, 0x16u);
    }

    uint64_t v4 = [*(id *)(a1 + 32) navigationController];
    [v4 pushViewController:*(void *)(a1 + 48) animated:1];
  }
}

void sub_10007464C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  unsigned int v10 = v9;
  if (!v8 || v9) {
    goto LABEL_8;
  }
  uint64_t v11 = [v7 altDSID];
  if (!v11)
  {
    uint64_t v11 = [v7 appleID];
    if (!v11)
    {
      CFStringRef v13 = [v7 dsid];

      if (v13) {
        goto LABEL_6;
      }
LABEL_8:
      (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
      goto LABEL_9;
    }
  }

LABEL_6:
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_100074778;
  v14[3] = &unk_100244FD0;
  uint64_t v12 = *(void **)(a1 + 32);
  id v15 = *(id *)(a1 + 40);
  [v12 _storeReauthStepForTinkerFamilyMember:v7 withWatchAKDevice:v8 completion:v14];

LABEL_9:
}

uint64_t sub_100074778(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100074788(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100074970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100074994(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = pbb_accountsignin_log();
  id v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_10017297C();
    }

    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315394;
      id v18 = "-[COSSettingsListController _storeReauthStepForTinkerFamilyMember:withWatchAKDevice:completion:]_block_invoke";
      __int16 v19 = 2112;
      id v20 = v5;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%s AMSDeviceMessenger Results (%@)", buf, 0x16u);
    }

    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_100074B68;
    v10[3] = &unk_100245048;
    objc_copyWeak(&v16, (id *)(a1 + 64));
    id v11 = v5;
    id v12 = *(id *)(a1 + 32);
    id v13 = *(id *)(a1 + 40);
    id v9 = *(id *)(a1 + 56);
    uint64_t v14 = *(void *)(a1 + 48);
    id v15 = v9;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);

    objc_destroyWeak(&v16);
  }
}

void sub_100074B68(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  uint64_t v3 = [WeakRetained specifierForID:@"com.apple.BridgeAppStoreDaemonSettings"];
  uint64_t v4 = pbb_accountsignin_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [*(id *)(a1 + 32) count]);
    int v10 = 136315650;
    id v11 = "-[COSSettingsListController _storeReauthStepForTinkerFamilyMember:withWatchAKDevice:completion:]_block_invoke";
    __int16 v12 = 2112;
    *(void *)id v13 = v3;
    *(_WORD *)&v13[8] = 2112;
    uint64_t v14 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s AMSDeviceMessenger storeCell (%@) count: %@", (uint8_t *)&v10, 0x20u);
  }
  if (![*(id *)(a1 + 32) count])
  {
    [v3 setProperty:0 forKey:PSBadgeNumberKey];
LABEL_11:
    (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
    goto LABEL_12;
  }
  id v6 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [*(id *)(a1 + 32) count]);
  [v3 setProperty:v6 forKey:PSBadgeNumberKey];

  if (!*(void *)(a1 + 40) || !*(void *)(a1 + 48))
  {
    id v7 = pbb_accountsignin_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = *(void *)(a1 + 40) != 0;
      BOOL v9 = *(void *)(a1 + 48) != 0;
      int v10 = 136315650;
      id v11 = "-[COSSettingsListController _storeReauthStepForTinkerFamilyMember:withWatchAKDevice:completion:]_block_invoke";
      __int16 v12 = 1024;
      *(_DWORD *)id v13 = v8;
      *(_WORD *)&v13[4] = 1024;
      *(_DWORD *)&v13[6] = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%s has storeAccount %{BOOL}d device: %{BOOL}d", (uint8_t *)&v10, 0x18u);
    }

    goto LABEL_11;
  }
  [WeakRetained proceedWithStoreRepairForAccount:withWatchAKDevice:completion:];
LABEL_12:
  [*(id *)(a1 + 56) reloadSpecifier:v3];
}

void sub_100074ED8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [v5 account];

  BOOL v8 = pbb_accountsignin_log();
  BOOL v9 = v8;
  if (v7)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = [v5 account];
      int v13 = 136315650;
      uint64_t v14 = "-[COSSettingsListController proceedWithStoreRepairForAccount:withWatchAKDevice:completion:]_block_invoke";
      __int16 v15 = 2112;
      id v16 = v5;
      __int16 v17 = 2112;
      id v18 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%s - result %@ (account: %@)", (uint8_t *)&v13, 0x20u);
    }
  }
  else if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    sub_1001729FC();
  }

  uint64_t v11 = *(void *)(a1 + 32);
  if (v6)
  {
    (*(void (**)(uint64_t, void))(v11 + 16))(v11, 0);
  }
  else
  {
    __int16 v12 = [v5 account];
    (*(void (**)(uint64_t, BOOL))(v11 + 16))(v11, v12 != 0);
  }
}

BOOL sub_100075654(id a1, NRDevice *a2)
{
  uint64_t v2 = NRDevicePropertyIsArchived;
  uint64_t v3 = a2;
  uint64_t v4 = [(NRDevice *)v3 valueForProperty:v2];
  id v5 = [(NRDevice *)v3 valueForProperty:NRDevicePropertyIsPaired];

  if ([v5 BOOLValue]) {
    unsigned __int8 v6 = 1;
  }
  else {
    unsigned __int8 v6 = [v4 BOOLValue];
  }

  return v6;
}

void sub_100075B20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100075B54(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (!v5 || v6)
    {
      BOOL v8 = pbb_bridge_log();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        int v11 = 138412546;
        id v12 = v5;
        __int16 v13 = 2112;
        id v14 = v6;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Failed fetching family member: %@ error: %@", (uint8_t *)&v11, 0x16u);
      }
    }
    BOOL v9 = pbb_bridge_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v11) = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Presenting skipped mini-flow", (uint8_t *)&v11, 2u);
    }

    int v10 = [WeakRetained skippedMiniFlowController];
    [WeakRetained presentViewController:v10 animated:1 completion:0];
  }
}

void sub_100075CB0(id *a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100075DB4;
  block[3] = &unk_1002450E0;
  objc_copyWeak(&v16, a1 + 6);
  id v12 = a1[4];
  id v8 = a1[5];
  id v14 = v7;
  id v15 = v8;
  id v13 = v6;
  id v9 = v7;
  id v10 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v16);
}

void sub_100075DB4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _stopSpinnerInSpecifier:*(void *)(a1 + 32)];
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    id WeakRetained = v3;
  }
}

void sub_100076984(uint64_t a1)
{
  uint64_t v2 = +[NSMutableArray array];
  id v3 = (void *)qword_10029B0B0;
  qword_10029B0B0 = v2;

  id v5 = +[PSSpecifier emptyGroupSpecifier];
  [(id)qword_10029B0B0 addObject:v5];
  uint64_t v4 = +[PSSpecifier preferenceSpecifierNamed:0 target:*(void *)(a1 + 32) set:0 get:0 detail:0 cell:15 edit:0];
  [(id)qword_10029B0B0 addObject:v4];
}

void sub_100076E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100076E1C(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 applicationName];
  CFStringRef v3 = (CFStringRef)_kCFBundleDisplayNameKey;
  v12[0] = kCFBundleNameKey;
  v12[1] = _kCFBundleDisplayNameKey;
  uint64_t v4 = +[NSArray arrayWithObjects:v12 count:2];
  id v5 = +[NSSet setWithArray:v4];

  id v6 = +[NSLocale preferredLanguages];
  id v7 = [v1 localizedInfoPlistStringsForKeys:v5 fetchingFirstMatchingLocalizationInList:v6];

  if (v7)
  {
    id v8 = [v7 objectForKey:v3];

    if (v8
      || ([v7 objectForKey:kCFBundleNameKey],
          id v9 = objc_claimAutoreleasedReturnValue(),
          v9,
          CFStringRef v3 = kCFBundleNameKey,
          v9))
    {
      uint64_t v10 = [v7 objectForKey:v3];

      uint64_t v2 = (void *)v10;
    }
  }

  return v2;
}

void sub_1000772D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000772FC(uint64_t a1, void *a2, void *a3)
{
  id v16 = a2;
  id v5 = a3;
  if (([&off_10025BCC8 containsObject:v16] & 1) == 0)
  {
    id v6 = [*(id *)(a1 + 32) specialCaseVictoryRow];
    unsigned int v7 = [v16 isEqualToString:v6];

    if (v7)
    {
      id v8 = [*(id *)(*(void *)(a1 + 32) + OBJC_IVAR___PSListController__specifiers) specifierForID:@"VICTORY_ROW_ID"];
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
      [WeakRetained decorateSpecifierWithWKDetails:v8 byIdentifier:v16 andApplication:v5];
    }
    else
    {
      if ([v5 applicationType] == (id)1) {
        goto LABEL_12;
      }
      id v8 = +[PSSpecifier preferenceSpecifierNamed:0 target:*(void *)(a1 + 32) set:0 get:"sockPuppetAppValue:" detail:0 cell:4 edit:0];
      id v10 = objc_loadWeakRetained((id *)(a1 + 72));
      [v10 decorateSpecifierWithWKDetails:v8 byIdentifier:v16 andApplication:v5];

      [*(id *)(*(void *)(a1 + 32) + 246) setObject:v8 forKey:v16];
      if (*(unsigned char *)(*(void *)(a1 + 32) + 208))
      {
        int v11 = [v8 propertyForKey:@"COSSockPuppetInstallationState"];
        id v12 = [v11 integerValue];

        if (v12 != (id)4 && v12 != (id)2)
        {
          id v15 = +[NSNumber numberWithInteger:3];
          [v8 setProperty:v15 forKey:@"COSSockPuppetAppSectionKey"];

          [v8 setProperty:*(void *)(a1 + 56) forKey:PSEnabledKey];
          [*(id *)(a1 + 64) addObject:v8];
          if (v12 == (id)1) {
            [*(id *)(a1 + 32) setHasRowsPendingInstallation:1];
          }
          goto LABEL_11;
        }
        [v8 setCellType:2];
        [v8 setDetailControllerClass:objc_opt_class()];
        id v13 = +[NSNumber numberWithInteger:2];
        [v8 setProperty:v13 forKey:@"COSSockPuppetAppSectionKey"];

        [v8 setProperty:&__kCFBooleanTrue forKey:PSEnabledKey];
        id v14 = *(void **)(a1 + 48);
      }
      else
      {
        id v14 = *(void **)(a1 + 40);
      }
      [v14 addObject:v8];
    }
LABEL_11:
  }
LABEL_12:
}

uint64_t sub_100077698(void *a1, void *a2, int a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = PSIDKey;
  id v8 = [v5 propertyForKey:PSIDKey];
  double v34 = [v6 propertyForKey:v7];
  unsigned int v9 = [v8 isEqualToString:];
  uint64_t v10 = PSCellClassKey;
  int v11 = [v5 propertyForKey:PSCellClassKey];
  uint64_t v12 = objc_opt_class();

  id v13 = [v6 propertyForKey:v10];
  uint64_t v14 = objc_opt_class();

  if ((v11 == (void *)v12) != (v13 == (void *)v14)
    || (v11 == (void *)v12 ? (BOOL v15 = v13 == (void *)v14) : (BOOL v15 = 0), v15 ? (v16 = 1) : (v16 = a3), (v16 ^ 1 | v9) != 1))
  {
    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v17 = PSEnabledKey;
    uint64_t v18 = [v5 propertyForKey:PSEnabledKey];
    uint64_t v19 = [v6 propertyForKey:v17];
    if (v18 | v19 && ![(id)v18 isEqual:v19]) {
      goto LABEL_15;
    }
    id v20 = [v5 propertyForKey:@"COSSockPuppetInstallationState"];
    id v21 = [v20 integerValue];

    id v22 = [v6 propertyForKey:@"COSSockPuppetInstallationState"];
    id v23 = [v22 integerValue];

    if (v21 == v23)
    {
      if ([v5 detailControllerClass]) {
        int isKindOfClass = 0;
      }
      else {
        int isKindOfClass = [v6 detailControllerClass] == 0;
      }
      if ([v5 detailControllerClass] && objc_msgSend(v6, "detailControllerClass"))
      {
        [v5 detailControllerClass];
        [v6 detailControllerClass];
        int isKindOfClass = objc_opt_isKindOfClass();
      }
      uint64_t v26 = PSDetailControllerClassKey;
      double v33 = [v5 propertyForKey:PSDetailControllerClassKey];
      char v27 = [v6 propertyForKey:v26];
      unsigned int v28 = [v33 isEqualToString:v27];
      uint64_t v29 = PSBundlePathKey;
      unint64_t v30 = [v5 propertyForKey:PSBundlePathKey];
      [v6 propertyForKey:v29];
      id v31 = LODWORD(v29) = isKindOfClass;
      uint64_t v25 = v29 & v28 & [v30 isEqualToString:v31];
    }
    else
    {
LABEL_15:
      uint64_t v25 = 0;
    }
  }
  return v25;
}

uint64_t sub_1000779A8(void *a1, void *a2, int a3)
{
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = v6;
  uint64_t v8 = 0;
  if (v5 && v6)
  {
    id v9 = [v5 count];
    if (v9 == [v7 count])
    {
      long long v21 = 0u;
      long long v22 = 0u;
      long long v19 = 0u;
      long long v20 = 0u;
      id v10 = v5;
      id v11 = [v10 countByEnumeratingWithState:&v19 objects:v23 count:16];
      if (v11)
      {
        id v12 = v11;
        uint64_t v13 = 0;
        uint64_t v14 = *(void *)v20;
        while (2)
        {
          BOOL v15 = 0;
          do
          {
            if (*(void *)v20 != v14) {
              objc_enumerationMutation(v10);
            }
            int v16 = *(void **)(*((void *)&v19 + 1) + 8 * (void)v15);
            uint64_t v17 = [v7 objectAtIndex:(char *)v15 + v13];
            LODWORD(v16) = sub_100077698(v16, v17, a3);

            if (!v16)
            {
              uint64_t v8 = 0;
              goto LABEL_15;
            }
            BOOL v15 = (char *)v15 + 1;
          }
          while (v12 != v15);
          id v12 = [v10 countByEnumeratingWithState:&v19 objects:v23 count:16];
          v13 += (uint64_t)v15;
          if (v12) {
            continue;
          }
          break;
        }
      }
      uint64_t v8 = 1;
LABEL_15:
    }
    else
    {
      uint64_t v8 = 0;
    }
  }

  return v8;
}

void sub_100077D38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100077D6C(id *a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  if (([&off_10025BCC8 containsObject:v10] & 1) == 0)
  {
    id v6 = [a1[4] specialCaseVictoryRow];
    unsigned int v7 = [v10 isEqualToString:v6];

    if (v7)
    {
      uint64_t v8 = [*(id *)((char *)a1[4] + OBJC_IVAR___PSListController__specifiers) specifierForID:@"VICTORY_ROW_ID"];
      id WeakRetained = objc_loadWeakRetained(a1 + 6);
      [WeakRetained decorateSpecifierWithWKDetails:v8 byIdentifier:v10 andApplication:v5];
    }
    else if ([v5 applicationType] != (id)1)
    {
      [a1[5] setObject:v5 forKey:v10];
    }
  }
}

void sub_100077F3C(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  id v6 = *(void **)(*(void *)(a1 + 32) + 334);
  unsigned int v7 = [v5 bundleIdentifier];
  uint64_t v8 = [v6 objectForKey:v7];
  id v9 = [v8 integerValue];

  if (v9 == (id)2) {
    [*(id *)(a1 + 40) setObject:v5 forKey:v10];
  }
}

void sub_100078318(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (v9)
  {
    id v10 = +[UIApplication sharedApplication];
    unsigned __int8 v11 = [v10 isInSetupFlow];

    if ((v11 & 1) == 0)
    {
      id v12 = pbb_bridge_log();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v19 = v9;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Error Reloading Apps: %@", buf, 0xCu);
      }
    }
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000784B0;
  block[3] = &unk_100243B98;
  void block[4] = *(void *)(a1 + 32);
  id v16 = v8;
  id v17 = v7;
  id v13 = v7;
  id v14 = v8;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1000784B0(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 214) = 0;
  uint64_t v2 = *(void **)(a1 + 40);
  if (v2)
  {
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 334), v2);
    uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 334);
    uint64_t v4 = +[BPSBridgeAppContext shared];
    [v4 setWatchAppInstallStates:v3];
  }
  id v5 = [*(id *)(a1 + 32) filterSockPuppetApps:*(void *)(a1 + 48)];
  uint64_t v6 = [*(id *)(a1 + 32) filterForWatchInstalledApps:v5];
  id v7 = (void *)qword_10029B0A0;
  qword_10029B0A0 = v6;

  uint64_t v8 = qword_10029B0A0;
  id v9 = +[BPSBridgeAppContext shared];
  [v9 setInstalledWatchkitApps:v8];

  id v10 = [*(id *)(a1 + 32) specifiersForWKApps:v5];
  if ((sub_1000779A8(v10, *(void **)(*(void *)(a1 + 32) + 262), 0) & 1) == 0)
  {
    unsigned __int8 v11 = *(void **)(*(void *)(a1 + 32) + 254);
    if (v11)
    {
      if (![v11 count])
      {
        id v17 = *(void **)(a1 + 32);
        uint64_t v18 = [v17 specifierForID:@"APPLE_APP_GROUP_ID"];
        id v19 = [v17 _groupIndexForGroup:v18];

        if (v19 == (id)0x7FFFFFFFFFFFFFFFLL) {
          goto LABEL_16;
        }
        [*(id *)(a1 + 32) insertContiguousSpecifiers:v10 atEndOfGroup:v19];
        long long v20 = *(void **)(a1 + 32);
        uint64_t v21 = 0;
LABEL_15:
        [v20 refreshAppleAppGroupFooterState:v21];
        goto LABEL_16;
      }
      id v12 = [v10 count];
      uint64_t v13 = *(void *)(a1 + 32);
      if (v12)
      {
        [(id)v13 insertAndDeleteSpecifiersForChanges:v10];
LABEL_16:
        long long v22 = +[NSMutableArray array];
        +[NSMutableArray array];
        v39[0] = _NSConcreteStackBlock;
        v39[1] = 3221225472;
        v39[2] = sub_100078898;
        v39[3] = &unk_1002451A8;
        id v23 = (id)objc_claimAutoreleasedReturnValue();
        id v40 = v23;
        id v24 = v22;
        id v41 = v24;
        uint64_t v25 = objc_retainBlock(v39);
        uint64_t v26 = +[PSSpecifierUpdates updatesByDiffingSpecifiers:*(void *)(*(void *)(a1 + 32) + 254) withSpecifiers:v10 changedBlock:v25];
        double v33 = _NSConcreteStackBlock;
        uint64_t v34 = 3221225472;
        double v35 = sub_100078978;
        double v36 = &unk_1002451D0;
        id v27 = v24;
        id v37 = v27;
        id v28 = v23;
        id v38 = v28;
        [v26 enumerateUpdatesUsingBlock:&v33];
        if (objc_msgSend(v28, "count", v33, v34, v35, v36)) {
          [*(id *)(a1 + 32) removeContiguousSpecifiersFromIndexing:v28];
        }
        if ([v27 count]) {
          [*(id *)(a1 + 32) insertContiguousSpecifiersForIndexing:v27];
        }
        objc_storeStrong((id *)(*(void *)(a1 + 32) + 254), v10);
        uint64_t v29 = [*(id *)(a1 + 32) freezeDryAppStates:v10];
        uint64_t v30 = *(void *)(a1 + 32);
        id v31 = *(void **)(v30 + 262);
        *(void *)(v30 + 262) = v29;

        [*(id *)(a1 + 32) addUnavailableAppsSectionIfNeeded];
        uint64_t v32 = *(void *)(a1 + 32);
        if (*(unsigned char *)(v32 + 215))
        {
          *(unsigned char *)(v32 + 215) = 0;
          [*(id *)(a1 + 32) _kickOffWatchKitAppReload];
        }

        goto LABEL_23;
      }
      [(id)v13 removeContiguousSpecifiers:*(void *)(v13 + 254)];
    }
    else
    {
      id v14 = [v10 count];
      BOOL v15 = *(void **)(a1 + 32);
      id v16 = [v15 wkAppSpinnerGroup];
      if (v14)
      {
        [v15 replaceContiguousSpecifiers:v16 withSpecifiers:v10];

        goto LABEL_16;
      }
      [v15 removeContiguousSpecifiers:v16];
    }
    long long v20 = *(void **)(a1 + 32);
    uint64_t v21 = 1;
    goto LABEL_15;
  }
LABEL_23:
}

uint64_t sub_100078898(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int v7 = sub_100077698(v5, v6, 1);
  if ((v7 & 1) == 0)
  {
    if (v5) {
      [*(id *)(a1 + 32) addObject:v5];
    }
    if (v6)
    {
      if ([v6 detailControllerClass])
      {
LABEL_9:
        [*(id *)(a1 + 40) addObject:v6];
        goto LABEL_10;
      }
      uint64_t v8 = [v6 propertyForKey:PSDetailControllerClassKey];
      if (v8)
      {

        goto LABEL_9;
      }
      id v9 = [v6 propertyForKey:PSBundlePathKey];

      if (v9) {
        goto LABEL_9;
      }
    }
  }
LABEL_10:

  return v7 ^ 1u;
}

void sub_100078978(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = [v3 specifier];
  id v4 = [v3 operation];

  if (v4 == (id)4)
  {
    id v5 = (id *)(a1 + 40);
  }
  else
  {
    if (v4 != (id)1) {
      goto LABEL_6;
    }
    id v5 = (id *)(a1 + 32);
  }
  [*v5 addObject:v6];
LABEL_6:
}

void *sub_100078A08(void *result)
{
  uint64_t v1 = result[4];
  if (*(unsigned char *)(v1 + 214))
  {
    *(unsigned char *)(v1 + 215) = 1;
  }
  else
  {
    uint64_t v2 = result;
    *(unsigned char *)(v1 + 214) = 1;
    id v3 = pbb_bridge_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Gathering all the watch apps from the watch and the phone", v4, 2u);
    }

    return [(id)v2[4] gatherAllWatchAppsWithCompletion:v2[5]];
  }
  return result;
}

uint64_t sub_100079190(void *a1, void *a2)
{
  unint64_t v3 = a1;
  unint64_t v4 = a2;
  if (v3 | v4)
  {
    int v7 = [(id)v3 identifier];
    uint64_t v8 = [(id)v4 identifier];
    id v9 = [(id)v3 propertyForKey:@"COSSockPuppetInstallationState"];
    id v10 = [v9 integerValue];

    unsigned __int8 v11 = [(id)v4 propertyForKey:@"COSSockPuppetInstallationState"];
    id v12 = [v11 integerValue];

    if (v10 == v12) {
      uint64_t v6 = (uint64_t)[v7 isEqualToString:v8];
    }
    else {
      uint64_t v6 = 0;
    }
  }
  else
  {
    id v5 = pbb_bridge_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "new specifier and old specifier are both nil during compare", v14, 2u);
    }

    uint64_t v6 = 1;
  }

  return v6;
}

uint64_t sub_1000795DC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    int v7 = pbb_bridge_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v15 = 138412546;
      id v16 = v6;
      __int16 v17 = 2112;
      id v18 = v5;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Failed enumeration in enumerateInstalledApplicationsOnPairedDevice! error=%@ app=%@", (uint8_t *)&v15, 0x16u);
    }
  }
  else
  {
    uint64_t v8 = [v5 bundleIdentifier];

    if (v8)
    {
      id v9 = *(void **)(a1 + 32);
      id v10 = +[NSNumber numberWithInteger:2];
      unsigned __int8 v11 = [v5 bundleIdentifier];
      [v9 setObject:v10 forKey:v11];

      id v12 = *(void **)(a1 + 40);
      uint64_t v13 = [v5 bundleIdentifier];
      [v12 setObject:v5 forKey:v13];
    }
  }
  if (!v5) {
    [*(id *)(a1 + 48) groupLocallyAvailableAppsWithWatchOnlyApps:*(void *)(a1 + 40) withStates:*(void *)(a1 + 32) withCompletion:*(void *)(a1 + 56)];
  }

  return 1;
}

uint64_t sub_100079880(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    int v7 = pbb_bridge_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v21 = 138412546;
      id v22 = v6;
      __int16 v23 = 2112;
      id v24 = v5;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Failed enumeration in enumerateLocallyAvailableApplicationsForPairedDevice! error=%@ app=%@", (uint8_t *)&v21, 0x16u);
    }
LABEL_12:

    goto LABEL_13;
  }
  uint64_t v8 = [v5 bundleIdentifier];
  if (v8)
  {
    id v9 = (void *)v8;
    unsigned int v10 = [v5 isEligibleForWatchAppInstall];

    if (v10)
    {
      unsigned __int8 v11 = [v5 deviceStatus];
      int v7 = sub_100079A94((unint64_t)[v11 installStatus]);

      id v12 = (void *)a1[4];
      uint64_t v13 = [v5 bundleIdentifier];
      id v14 = [v12 objectForKey:v13];

      if (!v14)
      {
        if ([v7 integerValue] == (id)4)
        {
          uint64_t v15 = +[NSNumber numberWithInteger:5];

          int v7 = v15;
        }
        id v16 = (void *)a1[4];
        __int16 v17 = [v5 bundleIdentifier];
        [v16 setObject:v5 forKey:v17];
      }
      id v18 = (void *)a1[5];
      id v19 = [v5 bundleIdentifier];
      [v18 setObject:v7 forKey:v19];

      goto LABEL_12;
    }
  }
LABEL_13:
  if (!v5) {
    (*(void (**)(void))(a1[6] + 16))();
  }

  return 1;
}

id sub_100079A94(unint64_t a1)
{
  if (a1 > 4)
  {
    unint64_t v3 = 0;
  }
  else
  {
    unint64_t v3 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", qword_1001AB050[a1], v1);
  }
  return v3;
}

void sub_100079E68(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) userInfo];
  unint64_t v3 = [v2 objectForKey:NSLocalizedFailureReasonErrorKey];
  unint64_t v4 = [v2 objectForKey:NSLocalizedDescriptionKey];
  id v5 = pbb_bridge_log();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = 138412546;
    id v12 = v3;
    __int16 v13 = 2112;
    id v14 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Presenting application installation error title: \"%@\" description: \"%@\"", (uint8_t *)&v11, 0x16u);
  }

  if (v3) {
    BOOL v6 = v4 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (v6)
  {
    int v7 = pbb_bridge_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 138412290;
      id v12 = v2;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "AppConduit app install error did not have a title and/or a description, userinfo: %@", (uint8_t *)&v11, 0xCu);
    }
  }
  else
  {
    int v7 = +[UIAlertController alertControllerWithTitle:v3 message:v4 preferredStyle:1];
    uint64_t v8 = +[NSBundle mainBundle];
    id v9 = [v8 localizedStringForKey:@"OK" value:&stru_100249230 table:@"Localizable"];
    unsigned int v10 = +[UIAlertAction actionWithTitle:v9 style:0 handler:0];
    [v7 addAction:v10];

    [*(id *)(a1 + 40) presentViewController:v7 animated:1 completion:0];
  }
}

id sub_10007A574(void *a1)
{
  uint64_t v2 = (void *)a1[4];
  unint64_t v3 = +[NSNumber numberWithInteger:a1[6]];
  [v2 setProperty:v3 forKey:@"COSSockPuppetInstallationState"];

  uint64_t v5 = a1[4];
  unint64_t v4 = (void *)a1[5];

  return [v4 reloadSpecifier:v5];
}

void sub_10007AA0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  int v7 = WeakRetained;
  if (!a3 && [WeakRetained isBreatheAppInstalled] != a2)
  {
    [v7 setIsBreatheAppInstalled:a2];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10007AAE0;
    block[3] = &unk_1002439E0;
    objc_copyWeak(&v9, v5);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    objc_destroyWeak(&v9);
  }
}

void sub_10007AAE0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadSpecifiers];
}

void sub_10007AB78(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10007AC08;
  block[3] = &unk_1002439E0;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v2);
}

void sub_10007AC08(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unint64_t v3 = [WeakRetained spotlightSearchController];
  unsigned int v4 = [v3 isActive];

  if (v4)
  {
    id v7 = objc_loadWeakRetained(v1);
    uint64_t v5 = [v7 spotlightResultsController];
    BOOL v6 = [v5 tableView];
    [v6 reloadData];
  }
}

void sub_10007AE28(uint64_t a1)
{
  id v2 = +[COSCoreSpotlightIndexer sharedInstance];
  uint64_t v3 = *(void *)(a1 + 32);
  unsigned int v4 = PSPreferencesUIFrameworkBundle();
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10007AF1C;
  void v5[3] = &unk_1002439E0;
  objc_copyWeak(&v6, (id *)(a1 + 40));
  [v2 deleteSpecifiers:v3 bundle:v4 withURLPrefix:@"bridge" waitForCompletion:0 completion:v5];

  objc_destroyWeak(&v6);
}

void sub_10007AF08(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10007AF1C(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v3 = [WeakRetained spotlightSearchController];
  unsigned int v4 = [v3 isActive];

  if (v4)
  {
    id v7 = objc_loadWeakRetained(v1);
    uint64_t v5 = [v7 spotlightResultsController];
    id v6 = [v5 tableView];
    [v6 reloadData];
  }
}

void sub_10007B13C(uint64_t a1)
{
  id v2 = +[COSCoreSpotlightIndexer sharedInstance];
  uint64_t v3 = *(void *)(a1 + 32);
  unsigned int v4 = PSPreferencesUIFrameworkBundle();
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10007B230;
  void v5[3] = &unk_1002439E0;
  objc_copyWeak(&v6, (id *)(a1 + 40));
  [v2 indexSpecifiers:v3 bundle:v4 withURLPrefix:@"bridge" waitForCompletion:0 completion:v5];

  objc_destroyWeak(&v6);
}

void sub_10007B21C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10007B230(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10007B2C0;
  block[3] = &unk_1002439E0;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v2);
}

void sub_10007B2C0(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v3 = [WeakRetained spotlightSearchController];
  unsigned int v4 = [v3 isActive];

  if (v4)
  {
    id v7 = objc_loadWeakRetained(v1);
    uint64_t v5 = [v7 spotlightResultsController];
    id v6 = [v5 tableView];
    [v6 reloadData];
  }
}

void sub_10007B4DC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) spotlightSearchController];
  [v1 setActive:0];
}

void sub_10007BA94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10007BABC(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10007BDC0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_10007BDE4(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10007BEA0;
  void v5[3] = &unk_100243D28;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_10007BEA0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = [WeakRetained spotlightResultsController];
  [v2 searchQueryFoundItems:*(void *)(a1 + 32)];
}

void sub_10007BF00(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10007BF90;
  block[3] = &unk_1002439E0;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v2);
}

void sub_10007BF90(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained spotlightResultsController];
  [v1 searchQueryCompleted];
}

void sub_10007BFE8(uint64_t a1)
{
  id v7 = +[COSCoreSpotlightIndexer sharedInstance];
  id v2 = [*(id *)(a1 + 32) searchBar];
  id v3 = [v2 text];
  id v4 = [*(id *)(a1 + 32) searchBar];
  uint64_t v5 = [v4 textInputMode];
  id v6 = [v5 primaryLanguage];
  [v7 topHitSearchForString:v3 keyboardLanguage:v6 foundItemsHandler:*(void *)(a1 + 40) completionHandler:*(void *)(a1 + 48)];
}

void sub_10007C218(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = +[MCProfileConnection sharedConnection];
    uint64_t v5 = [v4 managingOrganizationInformation];

    id v6 = [v5 objectForKeyedSubscript:kCCOrganizationNameKey];
    if ([v6 length]
      && objc_msgSend(v6, "characterAtIndex:", (char *)objc_msgSend(v6, "length") - 1) == 46)
    {
      uint64_t v7 = [v6 substringToIndex:[v6 length] - 1];

      id v6 = (void *)v7;
    }
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10007C37C;
    block[3] = &unk_100243A30;
    objc_copyWeak(&v13, v2);
    uint64_t v8 = *(void *)(a1 + 32);
    id v11 = v6;
    uint64_t v12 = v8;
    id v9 = v6;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    objc_destroyWeak(&v13);
  }
}

void sub_10007C37C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained setEnrolledOrganizationName:*(void *)(a1 + 32)];
    [*(id *)(a1 + 40) reloadSpecifiers];
    id WeakRetained = v3;
  }
}

void *sub_10007C9A0(uint64_t a1)
{
  id v2 = (void *)sub_100016254();
  uint64_t result = dlsym(v2, "NPHCellularPlanInfoDidChangeNotification");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_10029B0C0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_10007C9F0()
{
  uint64_t result = _sl_dlopen();
  qword_10029B0C8 = result;
  return result;
}

id sub_10007CA64()
{
  if (qword_10029B0E0 != -1) {
    dispatch_once(&qword_10029B0E0, &stru_100245348);
  }
  uint64_t v0 = (void *)qword_10029B0D8;

  return v0;
}

void sub_10007CAB8(id a1)
{
  v3[0] = @"NTK_CUSTOMIZATION_ID";
  v3[1] = @"APP_LAYOUT_ID";
  v4[0] = @"/System/Library/NanoPreferenceBundles/Customization/NTKCustomization.bundle";
  v4[1] = @"/System/Library/NanoPreferenceBundles/Customization/CarouselLayoutSettings.bundle";
  v3[2] = @"APP_VIEW_ID";
  v3[3] = @"PRIVACY_ID";
  v4[2] = @"/System/Library/NanoPreferenceBundles/Customization/CarouselAppViewSettings.bundle";
  v4[3] = @"/System/Library/NanoPreferenceBundles/PrivacySettings/HealthBridgePrivacySettings.bundle";
  uint64_t v1 = +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:4];
  id v2 = (void *)qword_10029B0D8;
  qword_10029B0D8 = v1;
}

Class sub_10007CB90(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_10029B0F0)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = sub_10007CCD4;
    void v4[4] = &unk_1002436E0;
    void v4[5] = v4;
    long long v5 = off_100245368;
    uint64_t v6 = 0;
    qword_10029B0F0 = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!qword_10029B0F0)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("BBSectionInfo");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    id v2 = (void *)sub_100172A88();
LABEL_8:
    free(v2);
  }
  qword_10029B0E8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_10007CCD4()
{
  uint64_t result = _sl_dlopen();
  qword_10029B0F0 = result;
  return result;
}

id sub_10007E5A0(void *a1, char a2)
{
  id v3 = a1;
  id v4 = +[UIFont boldSystemFontOfSize:14.0];
  id v5 = objc_alloc_init((Class)UILabel);
  uint64_t v6 = +[NSBundle mainBundle];
  uint64_t v7 = [v6 localizedStringForKey:v3 value:&stru_100249230 table:@"VancouverLocalizable-victory"];

  [v5 setText:v7];
  [v5 setNumberOfLines:1];
  [v5 setFont:v4];
  [v5 _setTextColorFollowsTintColor:1];
  if (a2) {
    +[UIColor darkGrayColor];
  }
  else {
  uint64_t v8 = BPSSetupTintColor();
  }
  [v5 setTintColor:v8];

  return v5;
}

void sub_10007E8C0(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double height = CGSizeZero.height;
  id v17 = a1;
  [v17 sizeThatFits:CGSizeZero.width, height];
  double v11 = v10;
  double v13 = v12;
  v19.origin.double x = a2;
  v19.origin.y = a3;
  v19.size.width = a4;
  v19.size.double height = a5;
  float v14 = (CGRectGetWidth(v19) - v11) * 0.5;
  double v15 = floorf(v14);
  v20.origin.double x = a2;
  v20.origin.y = a3;
  v20.size.width = a4;
  v20.size.double height = a5;
  float v16 = (CGRectGetHeight(v20) - v13) * 0.5;
  [v17 setFrame:v15, floorf(v16), v11, v13];
}

id sub_10007EC00(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = *(void **)(*(void *)(a1 + 32) + 32);
  if (v2 == 1) {
    double v4 = 1.0;
  }
  else {
    double v4 = 0.0;
  }
  [v3 setAlpha:v4];
  if (*(void *)(a1 + 40) == 2) {
    double v5 = 1.0;
  }
  else {
    double v5 = 0.0;
  }
  [*(id *)(*(void *)(a1 + 32) + 24) setAlpha:v5];
  if (*(void *)(a1 + 40) == 3) {
    double v6 = 1.0;
  }
  else {
    double v6 = 0.0;
  }
  [*(id *)(*(void *)(a1 + 32) + 40) setAlpha:v6];
  if (*(void *)(a1 + 40) == 4) {
    double v7 = 1.0;
  }
  else {
    double v7 = 0.0;
  }
  [*(id *)(*(void *)(a1 + 32) + 48) setAlpha:v7];
  uint64_t v8 = *(unsigned __int8 *)(a1 + 48);
  id v9 = *(void **)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);

  return _[v9 updateOutlineEnabled:v8 forMode:v10];
}

id sub_100081474(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:0.0];
  uint64_t v2 = *(void **)(a1 + 40);

  return [v2 setAlpha:1.0];
}

id sub_1000814B8(uint64_t a1)
{
  [*(id *)(a1 + 32) removeFromSuperview];
  uint64_t v2 = *(void **)(a1 + 40);

  return _[v2 completeTransition:1];
}

id sub_100081C78(uint64_t a1)
{
  return [*(id *)(a1 + 32) continuePairedSync];
}

void sub_100081F5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100081F88(uint64_t a1)
{
  uint64_t v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)double v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Watch reported being prepared for InitialSync.", v4, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained finishedInitialSyncPrep];
}

id sub_100082168(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 8) = 1;
  id result = [*(id *)(a1 + 32) checkHoldReleaseConditions];
  uint64_t v3 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v3 + 10))
  {
    *(unsigned char *)(v3 + 10) = 0;
    double v4 = *(void **)(a1 + 32);
    return [v4 setIsSyncComplete:1];
  }
  return result;
}

id sub_100082254(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 9) = 1;
  return [*(id *)(a1 + 32) checkHoldReleaseConditions];
}

void sub_100083048(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(v1 + 64);
  *(void *)(v1 + 64) = 0;
}

void sub_1000832E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10008331C(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    double v6 = pbb_setupflow_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_100172B5C((uint64_t)v5, v6, v7, v8, v9, v10, v11, v12);
    }
  }
  else
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a2;
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000836F4(uint64_t a1)
{
  uint64_t v2 = [UIApp activeWatch];
  uint64_t v3 = [v2 valueForProperty:NRDevicePropertyPairingID];

  double v4 = pbb_setupflow_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 138412546;
    uint64_t v7 = v5;
    __int16 v8 = 2112;
    uint64_t v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "pairingIdentifier (%@) / pairingID (%@)", (uint8_t *)&v6, 0x16u);
  }

  if ([*(id *)(a1 + 32) isEqual:v3]) {
    [*(id *)(a1 + 40) setIsSyncComplete:1];
  }
}

id sub_100083A9C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) determineArchitectureCompatibilityIfNeeded];
}

void sub_100083EF0(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = pbb_setupflow_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    sub_100172C30((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9);
  }
}

id sub_1000840D8(uint64_t a1)
{
  uint64_t v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = +[NSNumber numberWithDouble:*(double *)(a1 + 40)];
    int v10 = 138412290;
    double v11 = *(double *)&v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "(COSInitialSyncMonitor) syncProgressDidUpdate %@", (uint8_t *)&v10, 0xCu);
  }
  uint64_t v4 = *(void *)(a1 + 32);
  double v5 = *(double *)(v4 + 16);
  *(void *)(v4 + 16) = *(void *)(a1 + 40);
  uint64_t v6 = *(double **)(a1 + 32);
  if ((int)(v5 * 100.0) != (int)(v6[2] * 100.0))
  {
    uint64_t v7 = pbb_setupflow_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 16);
      int v10 = 134218240;
      double v11 = v5;
      __int16 v12 = 2048;
      uint64_t v13 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Sync Progress Changed: %f -> %f", (uint8_t *)&v10, 0x16u);
    }

    uint64_t v6 = *(double **)(a1 + 32);
  }
  [v6 _updateProgressUI];
  return [*(id *)(a1 + 32) setIsSyncComplete:[*(id *)(a1 + 32) _isSyncComplete]];
}

uint64_t sub_1000844D0(uint64_t a1)
{
  if (!*(void *)(a1 + 48))
  {
    uint64_t v2 = pbb_setupflow_log();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      int v5 = 138412290;
      uint64_t v6 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "(COSSetupFinishedViewController %@) Met Criteria for direct dismissal!", (uint8_t *)&v5, 0xCu);
    }

    *(unsigned char *)(*(void *)(a1 + 32) + 12) = 1;
    [*(id *)(a1 + 32) _updateProgressUI];
    [*(id *)(a1 + 32) setIsSyncComplete:*(unsigned char *)(*(void *)(a1 + 32) + 13) == 0];
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100084684(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v3 = [UIApp activeWatch];
    uint64_t v4 = pbb_setupflow_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "User selected install all apps during Setup; checking compatiblity...",
        buf,
        2u);
    }

    int HasCapabilityForString = BPSDeviceHasCapabilityForString();
    uint64_t v6 = pbb_setupflow_log();
    BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
    if (HasCapabilityForString)
    {
      if (v7)
      {
        *(_DWORD *)buf = 138412290;
        __int16 v12 = v3;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "determineArchitectureCompatibility for %@", buf, 0xCu);
      }

      objc_initWeak((id *)buf, *(id *)(a1 + 32));
      uint64_t v8 = +[ACXDeviceConnection sharedDeviceConnection];
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472;
      v9[2] = sub_1000848EC;
      v9[3] = &unk_100243F08;
      objc_copyWeak(&v10, (id *)buf);
      [v8 fetchInstalledApplicationsForPairedDevice:v3 completion:v9];

      objc_destroyWeak(&v10);
      objc_destroyWeak((id *)buf);
    }
    else
    {
      if (v7)
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "determineArchitectureCompatibility not needed", buf, 2u);
      }
    }
  }
  else
  {
    uint64_t v3 = pbb_setupflow_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "User skipped install all apps during Setup.", buf, 2u);
    }
  }
}

void sub_1000848C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000848EC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v27 = objc_alloc_init((Class)NSMutableArray);
  if (v6)
  {
    BOOL v7 = pbb_setupflow_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_100172C9C((uint64_t)v6, v7, v8, v9, v10, v11, v12, v13);
    }
LABEL_4:

    goto LABEL_5;
  }
  uint64_t v26 = a1;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  double v15 = [v5 allKeys];
  id v16 = [v15 countByEnumeratingWithState:&v31 objects:v37 count:16];
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = *(void *)v32;
    uint64_t v19 = ACXArchitectureCompatibilityKey;
    do
    {
      for (i = 0; i != v17; i = (char *)i + 1)
      {
        if (*(void *)v32 != v18) {
          objc_enumerationMutation(v15);
        }
        int v21 = *(void **)(*((void *)&v31 + 1) + 8 * i);
        id v22 = [v5 objectForKeyedSubscript:v21];
        __int16 v23 = [v22 objectForKeyedSubscript:v19];
        if ([v23 unsignedIntegerValue] == (id)2)
        {
          id v24 = pbb_setupflow_log();
          if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412290;
            double v36 = v21;
            _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "App (%@) requires update!", buf, 0xCu);
          }

          [v27 addObject:v22];
        }
      }
      id v17 = [v15 countByEnumeratingWithState:&v31 objects:v37 count:16];
    }
    while (v17);
  }

  a1 = v26;
  id v6 = 0;
  if ([v27 count])
  {
    BOOL v7 = pbb_setupflow_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v25 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v27 count]);
      *(_DWORD *)buf = 138412290;
      double v36 = v25;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "We require updates for %@ app(s)", buf, 0xCu);
    }
    goto LABEL_4;
  }
LABEL_5:
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100084C04;
  block[3] = &unk_100243D28;
  objc_copyWeak(&v30, (id *)(a1 + 32));
  id v29 = v27;
  id v14 = v27;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v30);
}

void sub_100084C04(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained updateAppsIfNeededWithArchitectureIncompatibleApps:*(void *)(a1 + 32)];
}

void sub_100085278(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_100085518(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10008553C(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100085604;
  v8[3] = &unk_100245440;
  objc_copyWeak(&v11, (id *)(a1 + 40));
  char v12 = a2;
  uint64_t v6 = *(void *)(a1 + 32);
  id v9 = v5;
  uint64_t v10 = v6;
  id v7 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v8);

  objc_destroyWeak(&v11);
}

void sub_100085604(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (!WeakRetained) {
    goto LABEL_12;
  }
  uint64_t v3 = *(void **)(a1 + 32);
  if (!v3 && *(unsigned char *)(a1 + 56))
  {
    id v9 = [UIApp setupController];
    id v10 = [v9 analyticsEnrollmentRetryCount];

    id v11 = [UIApp setupController];
    [v11 setAnalyticsEnrollmentFailed:0];

    +[PBBridgeCAReporter recordDeviceEnrollmentResult:1 retryCount:v10];
    char v12 = [UIApp setupController];
    uint64_t v13 = [v12 pairingReportManager];

    [v13 addPairingTimeEventToPairingReportPlist:75 withValue:&off_10025C058 withError:0];
    id v14 = [WeakRetained delegate];
    [v14 buddyControllerReleaseHoldAndSkip:*(void *)(a1 + 40)];

    goto LABEL_12;
  }
  uint64_t v4 = [v3 domain];
  if (![v4 isEqualToString:DMCHTTPTransactionErrorDomain])
  {

    goto LABEL_11;
  }
  id v5 = [*(id *)(a1 + 32) code];

  if (v5 != (id)23007)
  {
LABEL_11:
    [WeakRetained _handleEnrollmentError:*(void *)(a1 + 32)];
    goto LABEL_12;
  }
  uint64_t v6 = pbb_devicemanagement_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)double v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "received challenge for pairing token", v15, 2u);
  }

  id v7 = [*(id *)(a1 + 32) userInfo];
  uint64_t v8 = [v7 objectForKeyedSubscript:kDMCErrorDetailsPairingParametersKey];

  [WeakRetained _attemptEnrollmentAfterGeneratingPairingTokenWithSigningInfo:v8];
LABEL_12:
}

void sub_1000858B8(uint64_t a1)
{
  uint64_t v2 = +[MCProfileConnection sharedConnection];
  uint64_t v3 = *(void *)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100085984;
  v4[3] = &unk_100245490;
  objc_copyWeak(&v5, (id *)(a1 + 40));
  [v2 updateMDMEnrollmentInfoForPairingWatch:v3 completion:v4];

  objc_destroyWeak(&v5);
}

void sub_100085970(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100085984(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (!v5 || v6)
  {
    id v10 = pbb_devicemanagement_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_100172D4C((uint64_t)v7, v10);
    }

    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_100085AA0;
    v11[3] = &unk_100243D28;
    objc_copyWeak(&v13, (id *)(a1 + 32));
    id v12 = v7;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v11);

    objc_destroyWeak(&v13);
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    if (WeakRetained)
    {
      id v9 = WeakRetained;
      [WeakRetained _proceedToEnrollWithPairingToken:v5];
    }
  }
}

void sub_100085AA0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _handleEnrollmentError:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

void sub_100085BCC(uint64_t a1)
{
  uint64_t v2 = +[MCProfileConnection sharedConnection];
  uint64_t v3 = *(void *)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100085C98;
  v4[3] = &unk_100245490;
  objc_copyWeak(&v5, (id *)(a1 + 40));
  [v2 fetchStagedMDMEnrollmentDataForPairingWatchWithPairingToken:v3 completion:v4];

  objc_destroyWeak(&v5);
}

void sub_100085C84(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100085C98(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100085D74;
  block[3] = &unk_100243A30;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  id v10 = v6;
  id v11 = v5;
  id v7 = v5;
  id v8 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v12);
}

void sub_100085D74(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32) || !*(void *)(a1 + 40))
    {
      uint64_t v4 = pbb_devicemanagement_log();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
        sub_100172DC4(v4);
      }

      [v3 _handleEnrollmentError:*(void *)(a1 + 32)];
    }
    else
    {
      [WeakRetained informWatchToConfigureDeviceManagementWithData];
    }
  }
}

id sub_100086120(uint64_t a1)
{
  return [*(id *)(a1 + 32) popViewControllerAnimated:1];
}

void sub_100086A68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100086A8C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return _[a2 _checkAwaitingInstallsWithUserInfo:a5];
}

void sub_100086A98(uint64_t a1, void *a2, void *a3)
{
  id v33 = a2;
  id v34 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (!WeakRetained) {
    goto LABEL_38;
  }
  id v32 = WeakRetained;
  if (v34)
  {
    id v6 = pbb_bridge_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v56 = v34;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Lookup failed with no lookup item and error: %@", buf, 0xCu);
    }
    goto LABEL_37;
  }
  from = (id *)(a1 + 48);
  uint64_t v31 = a1;
  [v33 responseDataItems];
  long long v53 = 0u;
  long long v54 = 0u;
  long long v51 = 0u;
  long long v52 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue();
  id v38 = [obj countByEnumeratingWithState:&v51 objects:v60 count:16];
  if (!v38)
  {
    id v7 = 0;
    id v8 = 0;
    id v9 = 0;
    goto LABEL_30;
  }
  id v7 = 0;
  id v8 = 0;
  id v9 = 0;
  uint64_t v37 = *(void *)v52;
  do
  {
    uint64_t v10 = 0;
    do
    {
      if (*(void *)v52 != v37)
      {
        uint64_t v11 = v10;
        objc_enumerationMutation(obj);
        uint64_t v10 = v11;
      }
      uint64_t v40 = v10;
      id v12 = *(void **)(*((void *)&v51 + 1) + 8 * v10);
      unsigned int v43 = [v12 objectForKeyedSubscript:@"id"];
      if (v43)
      {
        id v13 = [v12 objectForKeyedSubscript:@"attributes"];
        id v14 = [v13 objectForKeyedSubscript:@"platformAttributes"];
        id v41 = [v14 objectForKeyedSubscript:@"ios"];

        double v15 = v41;
        if (v41)
        {
          id v39 = [v41 objectForKeyedSubscript:@"bundleId"];
          double v36 = [v41 objectForKeyedSubscript:@"offers"];
          if (!v39) {
            goto LABEL_23;
          }
          id v16 = v36;
          if (v36)
          {
            long long v49 = 0u;
            long long v50 = 0u;
            long long v47 = 0u;
            long long v48 = 0u;
            id v42 = v36;
            id v17 = [v42 countByEnumeratingWithState:&v47 objects:v59 count:16];
            if (v17)
            {
              uint64_t v18 = *(void *)v48;
LABEL_16:
              uint64_t v19 = 0;
              CGRect v20 = v7;
              int v21 = v8;
              id v22 = v9;
              while (1)
              {
                if (*(void *)v48 != v18) {
                  objc_enumerationMutation(v42);
                }
                id v9 = [*(id *)(*((void *)&v47 + 1) + 8 * (void)v19) objectForKeyedSubscript:@"buyParams"];

                __int16 v23 = [v12 objectForKeyedSubscript:@"attributes"];
                id v8 = [v23 objectForKeyedSubscript:@"artistName"];

                id v24 = [v12 objectForKeyedSubscript:@"attributes"];
                id v7 = [v24 objectForKeyedSubscript:@"name"];

                if ([v9 length]) {
                  break;
                }
                uint64_t v19 = (char *)v19 + 1;
                CGRect v20 = v7;
                int v21 = v8;
                id v22 = v9;
                if (v17 == v19)
                {
                  id v17 = [v42 countByEnumeratingWithState:&v47 objects:v59 count:16];
                  if (v17) {
                    goto LABEL_16;
                  }
                  break;
                }
              }
            }

LABEL_23:
            id v16 = v36;
          }

          double v15 = v41;
        }
      }
      uint64_t v10 = v40 + 1;
    }
    while ((id)(v40 + 1) != v38);
    id v38 = [obj countByEnumeratingWithState:&v51 objects:v60 count:16];
  }
  while (v38);
LABEL_30:

  if ([v9 length])
  {
    uint64_t v25 = objc_alloc_init((Class)ASDPurchase);
    [v25 setBundleID:*(void *)(v31 + 32)];
    [v25 setBuyParameters:v9];
    uint64_t v26 = [v32 storeIdentifier];
    [v25 setItemID:v26];

    [v25 setItemName:v7];
    [v25 setVendorName:v8];
    id v27 = pbb_bridge_log();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      id v28 = *(void **)(v31 + 40);
      *(_DWORD *)buf = 138412546;
      id v56 = v28;
      __int16 v57 = 2112;
      unsigned int v58 = v25;
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "Starting download request for adam ID '%@': %@", buf, 0x16u);
    }

    [v32 notifyObserversThatControllerDidInitiatePurchase];
    id v29 = +[ASDPurchaseManager sharedManager];
    v44[0] = _NSConcreteStackBlock;
    v44[1] = 3221225472;
    v44[2] = sub_10008707C;
    v44[3] = &unk_1002454B8;
    objc_copyWeak(&v46, from);
    id v45 = *(id *)(v31 + 40);
    [v29 processPurchase:v25 withResponseHandler:v44];

    objc_destroyWeak(&v46);
  }
  else
  {
    uint64_t v25 = pbb_bridge_log();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v56 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "Lookup failed with no buy params and error: %@", buf, 0xCu);
    }
  }

  id v6 = obj;
LABEL_37:

  id WeakRetained = v32;
LABEL_38:
}

void sub_100087060(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10008707C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v8 = [v5 items];
    id v9 = [v8 firstObject];

    uint64_t v10 = [v9 results];
    uint64_t v11 = [v10 firstObject];
    id v12 = [v11 status];

    if (v6)
    {
      id v13 = pbb_bridge_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v14 = *(void *)(a1 + 32);
        int v22 = 138412546;
        uint64_t v23 = v14;
        __int16 v24 = 2112;
        id v25 = v6;
        double v15 = "Purchase batch failed for adam ID '%@': %@";
        id v16 = v13;
        uint32_t v17 = 22;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, v15, (uint8_t *)&v22, v17);
      }
    }
    else
    {
      id v13 = pbb_bridge_log();
      BOOL v18 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);
      if (v12 == (id)2)
      {
        if (v18)
        {
          uint64_t v19 = *(void *)(a1 + 32);
          int v22 = 138412290;
          uint64_t v23 = v19;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Download completed for adam ID '%@'", (uint8_t *)&v22, 0xCu);
        }
        uint64_t v20 = 1;
        goto LABEL_13;
      }
      if (v18)
      {
        uint64_t v21 = *(void *)(a1 + 32);
        int v22 = 138412290;
        uint64_t v23 = v21;
        double v15 = "Download did not complete for adam ID '%@'";
        id v16 = v13;
        uint32_t v17 = 12;
        goto LABEL_11;
      }
    }
    uint64_t v20 = 0;
LABEL_13:

    [WeakRetained notifyObserversThatControllerDidBeginInstallationWithSuccess:v20];
  }
}

void sub_1000873B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1000873D4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = pbb_bridge_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v13 = 136315394;
    uint64_t v14 = "-[COSAppInstallationController _performAvailabilityCheck:]_block_invoke";
    __int16 v15 = 2112;
    id v16 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%s ~ Result: %@", (uint8_t *)&v13, 0x16u);
  }

  if (v6)
  {
    id v8 = pbb_bridge_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = 136315394;
      uint64_t v14 = "-[COSAppInstallationController _performAvailabilityCheck:]_block_invoke";
      __int16 v15 = 2112;
      id v16 = v6;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%s ~ Error: %@", (uint8_t *)&v13, 0x16u);
    }
  }
  if (v5)
  {
    id v9 = [v5 responseDataItems];
    BOOL v10 = [v9 count] == (id)1;
  }
  else
  {
    BOOL v10 = 0;
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _setAvailableInStoreResult:v10];

  uint64_t v12 = *(void *)(a1 + 32);
  if (v12) {
    (*(void (**)(uint64_t, BOOL))(v12 + 16))(v12, v10);
  }
}

void sub_100087734(id a1, BOOL a2)
{
  BOOL v2 = a2;
  uint64_t v3 = pbb_bridge_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = +[NSNumber numberWithBool:v2];
    int v5 = 138412290;
    id v6 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Availability was %@", (uint8_t *)&v5, 0xCu);
  }
}

uint64_t sub_1000878F4(uint64_t a1, int a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v2, v3);
}

void sub_100087988(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 16) copy];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v3 = v2;
  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v9;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        [*(id *)(*((void *)&v8 + 1) + 8 * (void)v7) didCompleteInstallationWithSuccess:*(unsigned __int8 *)(a1 + 40) v8];
        id v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v5);
  }
}

void sub_100087AFC(uint64_t a1)
{
  id v1 = [*(id *)(*(void *)(a1 + 32) + 16) copy];
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = v1;
  id v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v7 + 1) + 8 * (void)v6) didInitiatePurchase:v7];
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

void sub_100087C6C(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 16) copy];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v3 = v2;
  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v9;
    do
    {
      long long v7 = 0;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        [*(id *)(*((void *)&v8 + 1) + 8 * (void)v7) didBeginInstallationWithSuccess:*(unsigned __int8 *)(a1 + 40) v8];
        long long v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v5);
  }
}

void sub_100087DE4(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 16) copy];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v3 = v2;
  id v4 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v10;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v10 != v6) {
          objc_enumerationMutation(v3);
        }
        if (*(unsigned char *)(a1 + 40)) {
          uint64_t v8 = 1;
        }
        else {
          uint64_t v8 = 2;
        }
        [*(id *)(*((void *)&v9 + 1) + 8 * i) appIsAvailableStateDidChange:v8 v9];
      }
      id v5 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v5);
  }
}

void sub_10008864C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 104));
  _Unwind_Resume(a1);
}

void sub_100088680(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = 0;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100088724;
  block[3] = &unk_1002439E0;
  objc_copyWeak(&v5, (id *)(a1 + 40));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v5);
}

void sub_100088724(uint64_t a1)
{
  uint64_t v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 136315138;
    id v5 = "-[COSProfileInstallDeviceSwitchTracker connectToDevice]_block_invoke_2";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%s: Timed out.", (uint8_t *)&v4, 0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _connectionFinishedWithSuccess:0];
}

void sub_1000887E8(uint64_t a1)
{
  uint64_t v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 16);
    int v4 = 136446466;
    id v5 = "-[COSProfileInstallDeviceSwitchTracker connectToDevice]_block_invoke";
    __int16 v6 = 2112;
    uint64_t v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%{public}s: Started Connecting to %@", (uint8_t *)&v4, 0x16u);
  }
}

void sub_1000888A8(uint64_t a1, uint64_t a2)
{
  int v4 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  __int16 v6 = [WeakRetained switchToDevice];
  uint64_t v7 = [v6 valueForProperty:NRDevicePropertyIsAltAccount];

  if (([v7 BOOLValue] & 1) == 0)
  {
    uint64_t v8 = pbb_bridge_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 16);
      int v11 = 136446466;
      long long v12 = "-[COSProfileInstallDeviceSwitchTracker connectToDevice]_block_invoke";
      __int16 v13 = 2112;
      uint64_t v14 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%{public}s: Finished Connecting to %@", (uint8_t *)&v11, 0x16u);
    }

    id v10 = objc_loadWeakRetained(v4);
    [v10 _connectionFinishedWithSuccess:a2];
  }
}

void sub_100088A54(uint64_t a1)
{
  uint64_t v2 = pbb_setup_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 136446210;
    uint64_t v7 = "-[COSProfileInstallDeviceSwitchTracker _cancelConnectionTimeout]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%{public}s", (uint8_t *)&v6, 0xCu);
  }

  uint64_t v3 = *(NSObject **)(*(void *)(a1 + 32) + 40);
  if (v3)
  {
    dispatch_source_cancel(v3);
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = 0;
  }
}

void sub_100088C58(uint64_t a1)
{
  [*(id *)(a1 + 32) _cancelConnectionTimeout];
  uint64_t v2 = [*(id *)(a1 + 32) block];

  if (v2)
  {
    uint64_t v3 = pbb_bridge_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      CFStringRef v4 = @"YES";
      if (!*(unsigned char *)(a1 + 40)) {
        CFStringRef v4 = @"NO";
      }
      int v6 = 136446466;
      uint64_t v7 = "-[COSProfileInstallDeviceSwitchTracker _connectionFinishedWithSuccess:]_block_invoke";
      __int16 v8 = 2112;
      CFStringRef v9 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%{public}s: Executing callback (%@)", (uint8_t *)&v6, 0x16u);
    }

    id v5 = [*(id *)(a1 + 32) block];
    v5[2](v5, *(unsigned __int8 *)(a1 + 40));

    [*(id *)(a1 + 32) setBlock:0];
  }
}

void sub_10008B30C(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    NSErrorUserInfoKey v4 = NSLocalizedDescriptionKey;
    CFStringRef v5 = @"Error: Failed to complete passcode upgrade before COSPaymentSetupController was deallocated.";
    uint64_t v2 = +[NSDictionary dictionaryWithObjects:&v5 forKeys:&v4 count:1];
    uint64_t v3 = +[NSError errorWithDomain:@"COSPaymentSetupErrorDomain" code:0 userInfo:v2];

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    +[COSPaymentSetupController _updateGizmoForSuccess:*(unsigned __int8 *)(a1 + 40)];
  }
}

void sub_10008BA0C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_10008BA38(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10008BAF8;
  block[3] = &unk_1002455C8;
  uint64_t v4 = *(void *)(a1 + 32);
  id v7 = v3;
  uint64_t v8 = v4;
  id v5 = v3;
  objc_copyWeak(&v9, (id *)(a1 + 40));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v9);
}

void sub_10008BAF8(uint64_t a1)
{
  uint64_t v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v13 = 138412290;
    uint64_t v14 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Apple Pay setup assistant provided VC: %@", (uint8_t *)&v13, 0xCu);
  }

  if (PBLogPerformanceMetrics())
  {
    uint64_t v4 = [*(id *)(a1 + 40) holdActivityIdentifier];
    id v5 = +[PBBridgeResponsePerformanceMonitor shareMonitor];
    [v5 endMacroActivity:v4 beginTime:CFAbsoluteTimeGetCurrent()];
    double v7 = v6;

    +[PBBridgeCAReporter pushTimingForTypeNamed:v4 withValue:v7];
  }
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  id v9 = WeakRetained;
  id v10 = *(void **)(a1 + 32);
  if (v10)
  {
    objc_storeStrong(WeakRetained + 5, v10);
    int v11 = [v9 delegate];
    [v11 buddyControllerReleaseHold:v9];
  }
  else
  {
    long long v12 = pbb_bridge_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v13) = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Payment Setup Assistant did not provide a starting VC, skipping AP flow", (uint8_t *)&v13, 2u);
    }

    [(id)objc_opt_class() _markApplePayOfferingComplete];
    int v11 = [v9 delegate];
    [v11 buddyControllerReleaseHoldAndSkip:v9];
  }
}

id sub_10008BCC4(uint64_t a1)
{
  uint64_t v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Configuring payment setup controller for express setup", v4, 2u);
  }

  [*(id *)(a1 + 32) setDelegate:*(void *)(a1 + 40)];
  return [*(id *)(a1 + 32) expressSetupAssistantViewControllerWithCompletion:*(void *)(a1 + 48)];
}

void sub_10008BEE4(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v4 = +[NSNotificationCenter defaultCenter];
  uint64_t v5 = PBBridgeDidCompletePasscodeChangeNotification;
  [v4 removeObserver:WeakRetained name:PBBridgeDidCompletePasscodeChangeNotification object:0];

  double v6 = +[NSNotificationCenter defaultCenter];
  [v6 addObserver:WeakRetained selector:"_passcodeChangeComplete" name:v5 object:0];

  double v7 = [WeakRetained delegate];
  uint64_t v8 = objc_opt_class();
  id v15 = 0;
  id v9 = [*(id *)(a1 + 32) navigationController];
  [v7 buddyControllerWillPushNextControllerClass:v8 outNextController:&v15 ontoNavigationController:v9];
  id v10 = v15;

  [v10 setPasscodeChangeDelegate:WeakRetained];
  [WeakRetained setPasscodeViewController:v10];
  [WeakRetained setPasscodeUpgradeFlowController:*(void *)(a1 + 40)];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  void v12[2] = sub_10008C0B4;
  v12[3] = &unk_100245618;
  objc_copyWeak(&v14, v2);
  id v13 = *(id *)(a1 + 48);
  int v11 = objc_retainBlock(v12);
  [WeakRetained setPasscodeUpgradeCompletion:v11];

  objc_destroyWeak(&v14);
}

void sub_10008C0A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10008C0B4(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6) {
      (*(void (**)(uint64_t, uint64_t, id))(v6 + 16))(v6, a2, v7);
    }
    [WeakRetained setPasscodeViewController:0];
    [WeakRetained setPasscodeUpgradeFlowController:0];
  }
}

void sub_10008C538(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v3 = pbb_setupflow_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      if (*(unsigned char *)(a1 + 48)) {
        CFStringRef v5 = @"YES";
      }
      else {
        CFStringRef v5 = @"NO";
      }
      int v7 = 138412546;
      CFStringRef v8 = v5;
      __int16 v9 = 2112;
      uint64_t v10 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Passcode change finished with success: %@ error: %@.", (uint8_t *)&v7, 0x16u);
    }

    uint64_t v6 = +[NSNotificationCenter defaultCenter];
    [v6 removeObserver:WeakRetained name:PBBridgeDidCompletePasscodeChangeNotification object:0];

    [WeakRetained _invokePasscodeUpgradeCompletionWithSuccess:*(unsigned __int8 *)(a1 + 48) error:*(void *)(a1 + 32)];
    [(id)objc_opt_class() _updateGizmoForSuccess:*(unsigned __int8 *)(a1 + 48)];
  }
}

void sub_10008CDF0(uint64_t a1)
{
  _HKInitializeLogging();
  uint64_t v2 = (void *)HKLogSync;
  if (os_log_type_enabled(HKLogSync, OS_LOG_TYPE_ERROR)) {
    sub_100172EF8(a1, v2);
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 16) = 0;
  uint64_t v3 = [*(id *)(a1 + 32) delegate];
  [v3 buddyControllerReleaseHold:*(void *)(a1 + 32)];
}

void sub_10008CE6C(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  _HKInitializeLogging();
  uint64_t v6 = HKLogSync;
  if (os_log_type_enabled(HKLogSync, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138413058;
    uint64_t v16 = v7;
    __int16 v17 = 2114;
    uint64_t v18 = v8;
    __int16 v19 = 1026;
    int v20 = a2;
    __int16 v21 = 2114;
    id v22 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "[sharing-setup] %@ Fetched Tinker share status for current AppleID and %{public}@ with status %{public}id, error %{public}@ (#t0)", buf, 0x26u);
  }
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_10008CFD4;
  v11[3] = &unk_100244878;
  uint64_t v9 = *(void *)(a1 + 32);
  char v14 = a2;
  void v11[4] = v9;
  id v12 = v5;
  id v13 = *(id *)(a1 + 48);
  id v10 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v11);
}

void sub_10008CFD4(uint64_t a1)
{
  uint64_t v2 = *(unsigned char **)(a1 + 32);
  if (!v2[40])
  {
    [v2 _cancelTaskTimeout];
    *(unsigned char *)(*(void *)(a1 + 32) + 16) = 0;
    if (*(unsigned char *)(a1 + 56) && !*(void *)(a1 + 40))
    {
      uint64_t v3 = *(void **)(a1 + 48);
      [v3 gizmoDidFinishHealthSharingOptIn:1];
    }
    else
    {
      id v4 = [*(id *)(a1 + 32) delegate];
      [v4 buddyControllerReleaseHold:*(void *)(a1 + 32)];
    }
  }
}

void sub_10008D248(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _didTimeOutWithHandler:*(void *)(a1 + 32)];
}

void sub_10008E098(id a1)
{
  uint64_t v1 = (void *)qword_10029B0F8;
  qword_10029B0F8 = (uint64_t)&off_10025BCE0;
}

void sub_10008E148(uint64_t a1)
{
  if (!qword_10029B108)
  {
    uint64_t v2 = pbb_bridge_log();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Starting Brute Force Reachability Checks...", buf, 2u);
    }

    uint64_t v3 = [*(id *)(a1 + 40) checkDomains];
    id v4 = [*(id *)(a1 + 32) copy];
    id v5 = (void *)qword_10029B108;
    qword_10029B108 = (uint64_t)v4;

    id v6 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", objc_msgSend(v3, "count"));
    uint64_t v7 = (void *)qword_10029B110;
    qword_10029B110 = (uint64_t)v6;

    long long v23 = 0u;
    long long v24 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    id obj = v3;
    id v8 = [obj countByEnumeratingWithState:&v21 objects:v26 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v22;
      do
      {
        int v11 = 0;
        do
        {
          if (*(void *)v22 != v10) {
            objc_enumerationMutation(obj);
          }
          uint64_t v12 = *(void *)(*((void *)&v21 + 1) + 8 * (void)v11);
          id v13 = objc_alloc((Class)NSURLRequest);
          char v14 = +[NSURL URLWithString:v12];
          id v15 = [v13 initWithURL:v14 cachePolicy:1 timeoutInterval:10.0];

          uint64_t v16 = +[NSURLSessionConfiguration defaultSessionConfiguration];
          __int16 v17 = +[NSURLSession sessionWithConfiguration:v16];
          v20[0] = _NSConcreteStackBlock;
          v20[1] = 3221225472;
          v20[2] = sub_10008E3E8;
          v20[3] = &unk_1002456D0;
          v20[4] = *(void *)(a1 + 40);
          uint64_t v18 = [v17 dataTaskWithRequest:v15 completionHandler:v20];

          [v18 resume];
          int v11 = (char *)v11 + 1;
        }
        while (v9 != v11);
        id v9 = [obj countByEnumeratingWithState:&v21 objects:v26 count:16];
      }
      while (v9);
    }
  }
}

void sub_10008E3E8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10008E4B0;
  block[3] = &unk_100245270;
  uint64_t v8 = *(void *)(a1 + 32);
  id v13 = v7;
  uint64_t v14 = v8;
  id v12 = v6;
  id v9 = v7;
  id v10 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_10008E4B0(uint64_t a1)
{
  return _[*(id *)(a1 + 48) checkCompleteStateForResponse:*(void *)(a1 + 32) andError:*(void *)(a1 + 40)];
}

void sub_10008EA34(uint64_t a1)
{
  if (!qword_10029B118)
  {
    uint64_t v2 = pbb_bridge_log();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      uint64_t v15 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Starting Brute Force Reachability Check for %@...", buf, 0xCu);
    }

    id v4 = [*(id *)(a1 + 40) copy];
    id v5 = (void *)qword_10029B118;
    qword_10029B118 = (uint64_t)v4;

    id v6 = objc_alloc((Class)NSURLRequest);
    id v7 = +[NSURL URLWithString:*(void *)(a1 + 32)];
    id v8 = [v6 initWithURL:v7 cachePolicy:1 timeoutInterval:10.0];

    id v9 = +[NSURLSessionConfiguration defaultSessionConfiguration];
    id v10 = +[NSURLSession sessionWithConfiguration:v9];
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    void v12[2] = sub_10008EC00;
    v12[3] = &unk_100245720;
    id v13 = *(id *)(a1 + 32);
    int v11 = [v10 dataTaskWithRequest:v8 completionHandler:v12];

    [v11 resume];
  }
}

void sub_10008EC00(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10008ECD8;
  block[3] = &unk_100243B98;
  id v9 = a3;
  id v10 = a4;
  id v11 = *(id *)(a1 + 32);
  id v6 = v10;
  id v7 = v9;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_10008ECD8(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = *(void *)(a1 + 40);
    uint64_t v3 = pbb_bridge_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      id v4 = [*(id *)(a1 + 32) URL];
      id v5 = +[NSNumber numberWithBool:v2 == 0];
      id v6 = [*(id *)(a1 + 40) localizedDescription];
      int v10 = 138412802;
      id v11 = v4;
      __int16 v12 = 2112;
      id v13 = v5;
      __int16 v14 = 2112;
      uint64_t v15 = v6;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%@ did respond? %@ (Error: %@)", (uint8_t *)&v10, 0x20u);
    }
  }
  else
  {
    uint64_t v3 = pbb_bridge_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = *(void **)(a1 + 48);
      id v8 = [*(id *)(a1 + 40) localizedDescription];
      int v10 = 138412546;
      id v11 = v7;
      __int16 v12 = 2112;
      id v13 = v8;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%@ failed with error Error: %@", (uint8_t *)&v10, 0x16u);
    }
  }

  if (qword_10029B118)
  {
    (*(void (**)(void))(qword_10029B118 + 16))();
    id v9 = (void *)qword_10029B118;
    qword_10029B118 = 0;
  }
}

void sub_10008FD0C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = pbb_setupflow_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = (objc_class *)objc_opt_class();
    id v6 = NSStringFromClass(v5);
    *(_DWORD *)buf = 138412290;
    long long v21 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Pushing Controller %@", buf, 0xCu);
  }
  [v3 setDelegate:*(void *)(a1 + 32)];
  id v7 = [*(id *)(a1 + 32) _viewControllerForBuddyController:v3];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_10008FF3C;
  v17[3] = &unk_100243B98;
  v17[4] = *(void *)(a1 + 32);
  id v8 = v7;
  id v18 = v8;
  id v9 = v3;
  id v19 = v9;
  int v10 = objc_retainBlock(v17);
  id v11 = [*(id *)(*(void *)(a1 + 32) + 72) viewControllers];
  id v12 = [v11 count];

  if (v12)
  {
    id v13 = *(void **)(a1 + 32);
    __int16 v14 = [v13 navigationController];
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_10008FF88;
    v15[3] = &unk_100244668;
    uint64_t v16 = v10;
    [v13 checkSafeToTransitionOnNavigationController:v14 withCompletion:v15];
  }
  else
  {
    ((void (*)(void *))v10[2])(v10);
  }
}

id sub_10008FF3C(void *a1)
{
  [*(id *)(a1[4] + 72) pushViewController:a1[5] animated:0];
  uint64_t v2 = *(void **)(a1[4] + 80);
  uint64_t v3 = a1[6];

  return [v2 addObject:v3];
}

uint64_t sub_10008FF88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10008FF98(uint64_t a1)
{
  uint64_t v2 = PBPairedSyncComplete();
  uint64_t v3 = pbb_setupflow_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = +[NSNumber numberWithBool:v2];
    int v16 = 138412290;
    __int16 v17 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Already NR Paired... (Sync Complete: %@)", (uint8_t *)&v16, 0xCu);
  }
  id v5 = [*(id *)(a1 + 32) activeWatch];
  id v6 = +[PBBridgeWatchAttributeController sharedDeviceController];
  [v6 setDevice:v5];

  id v7 = objc_alloc_init(COSSetupFinishedViewController);
  id v8 = pbb_setupflow_log();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    id v9 = +[NSNumber numberWithBool:v2];
    int v16 = 138412290;
    __int16 v17 = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Continuing SyncTrap? %@", (uint8_t *)&v16, 0xCu);
  }
  [(COSSetupFinishedViewController *)v7 continuePairedSync];
  uint64_t v10 = -[COSTinkerHealthSharingSetupDelegate tinkerDevice]_0();
  uint64_t v11 = *(void *)(a1 + 40);
  id v12 = *(void **)(v11 + 240);
  *(void *)(v11 + 240) = v10;

  if ((v2 & 1) == 0)
  {
    id v13 = [(COSSetupFinishedViewController *)v7 navigationItem];
    __int16 v14 = sub_100031630(*(void **)(a1 + 40), (uint64_t)"promptWhetherToResetPairing:");
    [v13 setLeftBarButtonItem:v14];

    [v13 setLeftItemsSupplementBackButton:0];
  }
  id v15 = UIApp;
  [v15 setIsActivated:1];
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_1000901C4(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) isAlreadyPaired];
  unsigned int v3 = [*(id *)(a1 + 32) canPairAgain];
  id v4 = objc_alloc_init(COSPairingTypeSelectionViewController);
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = *(void **)(v5 + 112);
  *(void *)(v5 + 112) = v4;

  [*(id *)(*(void *)(a1 + 32) + 112) setDelegate:];
  if (v2) {
    BOOL v7 = v3 == 0;
  }
  else {
    BOOL v7 = 0;
  }
  if (!v7)
  {
    if ([*(id *)(*(void *)(a1 + 32) + 384) shouldPromptToResumePairing])
    {
      id v8 = pbb_setupflow_log();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Resume pairing state present, pushing resume prompt pane.", buf, 2u);
      }

      id v9 = objc_alloc_init(COSResumePairingViewController);
      [(COSResumePairingViewController *)v9 setDelegate:*(void *)(a1 + 32)];
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    }
    else
    {
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    }
    if (([*(id *)(a1 + 40) isUpdatingGizmoInSetupFlow] & 1) == 0)
    {
      id v13 = pbb_setupflow_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Fresh run of buddy.", buf, 2u);
      }
      goto LABEL_23;
    }
LABEL_15:
    uint64_t v11 = pbb_setupflow_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Already NR Paired...", buf, 2u);
    }

    if (v2)
    {
      id v12 = objc_alloc_init(COSSetupFinishedViewController);
      [(COSSetupFinishedViewController *)v12 continuePairedSync];
    }
    else
    {
      id v12 = objc_alloc_init(COSUpdateWatchViewController);
    }
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_10009046C;
    v14[3] = &unk_100243908;
    void v14[4] = *(void *)(a1 + 32);
    id v15 = v12;
    id v13 = v12;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v14);

LABEL_23:
    return;
  }
  if ([*(id *)(a1 + 40) isUpdatingGizmoInSetupFlow]) {
    goto LABEL_15;
  }
  *(void *)(*(void *)(a1 + 32) + 248) = 3;
  uint64_t v10 = *(void (**)(void))(*(void *)(a1 + 56) + 16);

  v10();
}

void sub_10009046C(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) setupSoftwareUpdateManager];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100090518;
  v4[3] = &unk_1002457E0;
  unsigned int v3 = *(void **)(a1 + 40);
  void v4[4] = *(void *)(a1 + 32);
  id v5 = v3;
  [v2 startUpdateInSetupWithController:v5 forcedUpdateOrUpdateInBackup:0 completion:v4];
}

void sub_100090518(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = pbb_bridge_log();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = 136315906;
    id v12 = "-[COSSetupController run]_block_invoke_2";
    __int16 v13 = 2048;
    uint64_t v14 = a2;
    __int16 v15 = 2112;
    id v16 = v8;
    __int16 v17 = 2112;
    id v18 = v7;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%s: Update completed with status: %ld and error: %@ for update: %@", (uint8_t *)&v11, 0x2Au);
  }

  if (a2)
  {
    uint64_t v10 = pbb_bridge_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v11) = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Update unsuccessful, aborting pairing", (uint8_t *)&v11, 2u);
    }

    [UIApp resetSetupFlowAnimated:1 forEvent:57];
  }
  else
  {
    [*(id *)(a1 + 32) buddyControllerDone:*(void *)(a1 + 40)];
  }
}

uint64_t sub_100090690(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10009071C(id a1)
{
  id v1 = objc_alloc_init((Class)NSMutableArray);
  unsigned int v2 = +[NSFileManager defaultManager];
  id v29 = 0;
  unsigned int v3 = [v2 contentsOfDirectoryAtPath:@"/System/Library/NanoPreferenceBundles/SetupBundles/" error:&v29];
  id v4 = v29;

  if (v4)
  {
    id v5 = pbb_setupflow_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_100172FA0((uint64_t)v4, v5, v6, v7, v8, v9, v10, v11);
    }
  }
  long long v24 = v4;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v12 = v3;
  id v13 = [v12 countByEnumeratingWithState:&v25 objects:v32 count:16];
  if (v13)
  {
    id v14 = v13;
    uint64_t v15 = *(void *)v26;
    do
    {
      for (i = 0; i != v14; i = (char *)i + 1)
      {
        if (*(void *)v26 != v15) {
          objc_enumerationMutation(v12);
        }
        uint64_t v17 = *(void *)(*((void *)&v25 + 1) + 8 * i);
        id v18 = [@"/System/Library/NanoPreferenceBundles/SetupBundles/" stringByAppendingString:v17];
        id v19 = +[NSBundle bundleWithPath:v18];

        id v20 = [v19 principalClass];
        if (v20)
        {
          [v1 addObject:v20];
        }
        else
        {
          long long v21 = pbb_setupflow_log();
          if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412290;
            uint64_t v31 = v17;
            _os_log_error_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "Error! Bundle %@ doesn't have a principal class!!", buf, 0xCu);
          }
        }
      }
      id v14 = [v12 countByEnumeratingWithState:&v25 objects:v32 count:16];
    }
    while (v14);
  }

  id v22 = [v1 copy];
  long long v23 = (void *)qword_10029B120;
  qword_10029B120 = (uint64_t)v22;
}

void sub_100090B60(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  if (v1)
  {
    id v3 = [v1 view];
    unsigned int v2 = [v3 superview];

    if (v2) {
      [v3 removeFromSuperview];
    }
  }
}

uint64_t sub_1000910C8(uint64_t a1)
{
  unsigned int v2 = +[LSApplicationWorkspace defaultWorkspace];
  id v3 = +[NSURL URLWithString:@"https://support.apple.com/HT209512"];
  [v2 openURL:v3 configuration:0 completionHandler:0];

  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    id v5 = *(uint64_t (**)(void))(result + 16);
    return v5();
  }
  return result;
}

uint64_t sub_100091170(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

uint64_t sub_100091450(uint64_t a1)
{
  unsigned int v2 = +[LSApplicationWorkspace defaultWorkspace];
  id v3 = +[NSURL URLWithString:@"https://support.apple.com/HT204505"];
  [v2 openURL:v3 configuration:0 completionHandler:0];

  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    id v5 = *(uint64_t (**)(void))(result + 16);
    return v5();
  }
  return result;
}

uint64_t sub_1000914F8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

uint64_t sub_100091710(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10009183C(id a1, NSError *a2)
{
  unsigned int v2 = a2;
  if (v2)
  {
    id v3 = pbb_accountsignin_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_100173074();
    }
  }
}

uint64_t sub_100091A90(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100091D60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100091D74(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100091F40(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100092628(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100092640(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    (*(void (**)(void))(v1 + 16))();
  }

  dispatch_async((dispatch_queue_t)&_dispatch_main_q, &stru_100245890);
}

void sub_100092688(id a1)
{
  id v2 = +[LSApplicationWorkspace defaultWorkspace];
  uint64_t v1 = +[NSURL URLWithString:@"https://support.apple.com/HT204505"];
  [v2 openURL:v1 configuration:0 completionHandler:0];
}

void sub_100092AD4(uint64_t a1, uint64_t a2)
{
  id v4 = pbb_setupflow_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = +[NSNumber numberWithBool:a2];
    uint64_t v6 = [*(id *)(*(void *)(a1 + 32) + 240) _bridgeConciseDebugDescription];
    uint64_t v7 = [*(id *)(a1 + 40) _bridgeConciseDebugDescription];
    *(_DWORD *)buf = 138412802;
    uint64_t v17 = v5;
    __int16 v18 = 2112;
    id v19 = v6;
    __int16 v20 = 2112;
    long long v21 = v7;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "This device is already paired to Companion. ShouldUnpair %@ _scannedDevice %@ / deviceFromNR %@", buf, 0x20u);
  }
  if (a2 && *(void *)(a1 + 40))
  {
    v14[0] = @"obliterate";
    v14[1] = @"BDE85C67-0FDD-4A95-A9B9-3CB5DD0C06A2";
    v15[0] = &__kCFBooleanFalse;
    v15[1] = &__kCFBooleanTrue;
    uint64_t v8 = +[NSDictionary dictionaryWithObjects:v15 forKeys:v14 count:2];
    uint64_t v9 = +[NRPairedDeviceRegistry sharedInstance];
    uint64_t v10 = *(void **)(a1 + 40);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_100092CF0;
    v11[3] = &unk_1002458B8;
    id v12 = v10;
    id v13 = *(id *)(a1 + 48);
    [v9 unpairWithDevice:v12 withOptions:v8 operationHasBegun:v11];
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

void sub_100092CF0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = pbb_setupflow_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = [*(id *)(a1 + 32) _bridgeConciseDebugDescription];
    int v6 = 138412546;
    uint64_t v7 = v5;
    __int16 v8 = 2112;
    id v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "User opted to unpair Watch which was already paired to this companion: %@ (Error: %@)", (uint8_t *)&v6, 0x16u);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

uint64_t sub_100092DD8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100092DEC(uint64_t a1)
{
  id v2 = [COSRegistryDispatcher alloc];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100092E9C;
  void v6[3] = &unk_100244FD0;
  id v7 = *(id *)(a1 + 40);
  id v3 = [(COSRegistryDispatcher *)v2 initWithBecameReadyCompletion:v6 andTimeout:25.0];
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v4 + 176);
  *(void *)(v4 + 176) = v3;
}

uint64_t sub_100092E9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

int64_t sub_100095E24(id a1, NRDevice *a2, NRDevice *a3)
{
  uint64_t v4 = NRDevicePropertyLastActiveDate;
  id v5 = a3;
  int v6 = [(NRDevice *)a2 valueForProperty:v4];
  id v7 = [(NRDevice *)v5 valueForProperty:v4];

  id v8 = [v6 compare:v7];
  return (int64_t)v8;
}

void sub_1000963A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000963C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v5 = [WeakRetained buddyControllers];
  id v6 = [v5 countByEnumeratingWithState:&v24 objects:v29 count:16];
  if (v6)
  {
    uint64_t v7 = *(void *)v25;
LABEL_3:
    uint64_t v8 = 0;
    while (1)
    {
      if (*(void *)v25 != v7) {
        objc_enumerationMutation(v5);
      }
      id v9 = *(void **)(*((void *)&v24 + 1) + 8 * v8);
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        break;
      }
      if (v6 == (id)++v8)
      {
        id v6 = [v5 countByEnumeratingWithState:&v24 objects:v29 count:16];
        if (v6) {
          goto LABEL_3;
        }
        goto LABEL_12;
      }
    }
    id v6 = v9;

    if (!v6) {
      goto LABEL_13;
    }
    id v5 = [WeakRetained buddyControllers];
    [v5 removeObject:v6];
  }
LABEL_12:

LABEL_13:
  uint64_t v10 = [WeakRetained buddyControllers];
  [v10 addObject:*(void *)(a1 + 32)];

  uint64_t v11 = [*(id *)(a1 + 40) viewControllers];
  id v12 = [v11 mutableCopy];

  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v13 = v12;
  id v14 = [v13 countByEnumeratingWithState:&v20 objects:v28 count:16];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v21;
LABEL_15:
    uint64_t v17 = 0;
    while (1)
    {
      if (*(void *)v21 != v16) {
        objc_enumerationMutation(v13);
      }
      __int16 v18 = *(void **)(*((void *)&v20 + 1) + 8 * v17);
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        break;
      }
      if (v15 == (id)++v17)
      {
        id v15 = [v13 countByEnumeratingWithState:&v20 objects:v28 count:16];
        if (v15) {
          goto LABEL_15;
        }
        goto LABEL_21;
      }
    }
    id v19 = v18;

    if (!v19) {
      goto LABEL_24;
    }
    [v13 removeObject:v19];
    [v13 addObject:v3];
    [*(id *)(a1 + 40) setViewControllers:v13 animated:1];
  }
  else
  {
LABEL_21:

LABEL_24:
    if (v3)
    {
      [*(id *)(a1 + 40) pushViewController:v3 animated:1 v20];
      [*(id *)(a1 + 48) updateLiveActivityWithViewController:v3];
    }
  }
}

void sub_100096B4C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) transitionCoordinator];
  if (v2)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_100096C4C;
    void v5[3] = &unk_100245998;
    id v6 = *(id *)(a1 + 40);
    [v2 animateAlongsideTransition:0 completion:v5];
    id v3 = pbb_setupflow_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "We are in mid transition. Waiting until transition is complete", v4, 2u);
    }
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

uint64_t sub_100096C4C(uint64_t a1)
{
  id v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Transition completed. Performing pending action", v4, 2u);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100096CC8(uint64_t a1)
{
  id v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Checking transition after alert dismissal", v4, 2u);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100096F44(uint64_t a1)
{
  if ([*(id *)(a1 + 32) buddyControllerIsBeingHeldOff:*(void *)(a1 + 40)])
  {
    id v2 = pbb_setupflow_log();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      id v3 = *(void **)(a1 + 40);
      int v15 = 138412290;
      id v16 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Releasing hold for controller %@ now that it's done.", (uint8_t *)&v15, 0xCu);
    }

    [*(id *)(a1 + 32) setNextControllerAfterHold:0];
    [*(id *)(a1 + 32) cleanupHoldWaitTimer];
    [*(id *)(a1 + 32) showBusyIndicator:0];
    uint64_t v4 = [*(id *)(a1 + 32) navigationController];
    id v5 = [v4 navigationBar];

    id v6 = [v5 topItem];
    [v6 setRightBarButtonItem:0 animated:1];
    uint64_t v7 = [*(id *)(a1 + 32) navigationController];
    uint64_t v8 = [v7 topViewController];
    id v9 = [v8 view];
    [v9 setUserInteractionEnabled:1];

    uint64_t v10 = [*(id *)(a1 + 32) navigationController];
    uint64_t v11 = [v10 navigationBar];
    [v11 setUserInteractionEnabled:1];
  }
  id v12 = *(id *)(a1 + 48);
  if (v12) {
    goto LABEL_6;
  }
  if (*(void *)(a1 + 56))
  {
    [*(id *)(a1 + 32) _controllerForClass:];
    id v12 = (id)objc_claimAutoreleasedReturnValue();
    if (v12) {
      goto LABEL_6;
    }
    id v12 = objc_alloc_init(*(Class *)(a1 + 56));
    if (objc_opt_respondsToSelector()) {
      [v12 setDelegate:*(void *)(a1 + 32)];
    }
  }
  else
  {
    id v12 = [*(id *)(a1 + 32) _controllerFollowingControllerClass:objc_opt_class()];
  }
  if (!v12)
  {
    [*(id *)(a1 + 32) _finishBuddy];
    return;
  }
LABEL_6:
  if ((objc_opt_respondsToSelector() & 1) != 0 && [v12 holdBeforeDisplaying])
  {
    id v13 = pbb_setupflow_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      int v15 = 138412290;
      id v16 = v12;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Holding: %@", (uint8_t *)&v15, 0xCu);
    }

    [*(id *)(a1 + 32) buddyControllerHold:*(void *)(a1 + 40) beforePresentingBuddyController:v12];
  }
  else
  {
    id v14 = pbb_setupflow_log();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      int v15 = 138412290;
      id v16 = v12;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Pushing: %@", (uint8_t *)&v15, 0xCu);
    }

    [*(id *)(a1 + 32) _transitionFromBuddyController:*(void *)(a1 + 40) toBuddyController:v12];
  }
  [*(id *)(a1 + 32) updateLiveActivityWithBuddyController:v12];
}

uint64_t sub_10009724C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100097784(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v10 - 152));
  _Unwind_Resume(a1);
}

void sub_1000977A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v4 = [WeakRetained navigationController];
    id v5 = [v4 transitionCoordinator];

    if (v5)
    {
      pbb_setupflow_log();
      id v6 = (COSSpinnerPageController *)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(&v6->super.super.super, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, &v6->super.super.super, OS_LOG_TYPE_DEFAULT, "We were mid-transition; skipping hold wait screen.",
          buf,
          2u);
      }
    }
    else
    {
      uint64_t v7 = *(void **)(a1 + 32);
      uint64_t v8 = [v3 navigationController];
      id v9 = [v8 topViewController];

      if (v7 == v9)
      {
        id v13 = [v3 navigationController];
        id v14 = [v13 topViewController];
        int v15 = [v14 view];
        [v15 setUserInteractionEnabled:1];

        id v16 = [v3 navigationController];
        uint64_t v17 = [v16 navigationBar];
        [v17 setUserInteractionEnabled:1];

        id v6 = [[COSSpinnerPageController alloc] initWithLabel:*(void *)(a1 + 40)];
        [(COSSpinnerPageController *)v6 setDelegate:v3];
        [(COSSpinnerPageController *)v6 setHeldPane:*(void *)(a1 + 48)];
        __int16 v18 = pbb_setupflow_log();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          id v19 = *(void **)(a1 + 40);
          *(_DWORD *)buf = 138412546;
          long long v24 = v6;
          __int16 v25 = 2112;
          long long v26 = v19;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Pushing hold wait screen (%@ %@)", buf, 0x16u);
        }

        [*(id *)(a1 + 56) stopAnimating];
        [v3 showButtonTrayBusyIndicator:0 forController:*(void *)(a1 + 64)];
        long long v20 = [v3 navigationController];
        [v20 pushViewController:v6 animated:1];

        [v3 blockGoingBackFromCurrentController];
        if (objc_opt_respondsToSelector())
        {
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472;
          block[2] = sub_100097AF4;
          block[3] = &unk_1002438A0;
          id v22 = *(id *)(a1 + 48);
          dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
        }
      }
      else
      {
        pbb_setupflow_log();
        id v6 = (COSSpinnerPageController *)objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(&v6->super.super.super, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v10 = *(COSSpinnerPageController **)(a1 + 32);
          uint64_t v11 = [v3 navigationController];
          id v12 = [v11 topViewController];
          *(_DWORD *)buf = 138412546;
          long long v24 = v10;
          __int16 v25 = 2112;
          long long v26 = v12;
          _os_log_impl((void *)&_mh_execute_header, &v6->super.super.super, OS_LOG_TYPE_DEFAULT, "Skipping pushing the hold wait screen as the top controller changed from %@ to %@", buf, 0x16u);
        }
      }
    }
  }
}

id sub_100097AF4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) didPushWaitScreen];
}

void sub_100097AFC(uint64_t a1)
{
  id v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Fired hold wait screen timer.", buf, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v5 = [WeakRetained holdWaitScreenBlock];
    id v6 = (void *)v5;
    if (v5)
    {
      (*(void (**)(uint64_t))(v5 + 16))(v5);
      [v4 setHoldWaitScreenBlock:0];
    }
    else
    {
      uint64_t v7 = pbb_setupflow_log();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "holdWaitScreenBlock is nil.  Not calling", v8, 2u);
      }
    }
  }
  dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
}

void sub_100097EEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100097F18(uint64_t a1)
{
  id v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained cleanupHoldWaitTimer];
    [v4 showBusyIndicator:0];
    uint64_t v5 = [v4 nextControllerAfterHold];

    if (v5)
    {
      id v6 = (void *)(a1 + 32);
      uint64_t v7 = *(void **)(a1 + 32);
      uint64_t v8 = [v4 nextControllerAfterHold];

      id v9 = pbb_setupflow_log();
      uint64_t v10 = v9;
      if (v7 == v8)
      {
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v17 = *(void **)(a1 + 32);
          unsigned int v18 = *(unsigned __int8 *)(a1 + 56);
          int v42 = 138412546;
          unsigned int v43 = v17;
          __int16 v44 = 1024;
          unsigned int v45 = v18;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Releasing hold for (%@) and skipping (%d).", (uint8_t *)&v42, 0x12u);
        }

        id v19 = +[UIApplication sharedApplication];
        id v20 = [v19 applicationState];

        if (v20 == (id)2)
        {
          long long v21 = pbb_setupflow_log();
          if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
          {
            LOWORD(v42) = 0;
            _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "Hold released while in background", (uint8_t *)&v42, 2u);
          }

          [*(id *)(a1 + 40) postUserNotificationForController:*(void *)(a1 + 32)];
        }
        [v4 setNextControllerAfterHold:0];
        id v22 = [v4 navigationController];
        uint64_t v10 = [v22 navigationBar];

        long long v23 = [v10 topItem];
        unsigned int v24 = 1;
        [v23 setRightBarButtonItem:0 animated:1];
        __int16 v25 = [v4 navigationController];
        long long v26 = [v25 topViewController];
        long long v27 = [v26 view];
        [v27 setUserInteractionEnabled:1];

        long long v28 = [v4 navigationController];
        id v29 = [v28 navigationBar];
        [v29 setUserInteractionEnabled:1];

        id v30 = [v4 controllerDisplayedWhileOnHold];
        if (objc_opt_respondsToSelector()) {
          unsigned int v24 = [v30 controllerAllowsNavigatingBackTo];
        }
        if (objc_opt_respondsToSelector())
        {
          uint64_t v31 = pbb_setupflow_log();
          if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
          {
            LOWORD(v42) = 0;
            _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "Responds to selector viewController, setting viewController", (uint8_t *)&v42, 2u);
          }

          uint64_t v32 = [v30 viewController];

          id v30 = (void *)v32;
        }
        id v33 = pbb_setupflow_log();
        if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
        {
          int v42 = 138412546;
          unsigned int v43 = v30;
          __int16 v44 = 1024;
          unsigned int v45 = v24;
          _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "viewControllerDisplayedWhileOnHold %@ canNavigateBack: %d", (uint8_t *)&v42, 0x12u);
        }

        if (v24)
        {
          id v34 = [v30 navigationItem];
          [v34 setBackBarButtonItem:0];
        }
        double v35 = [UIApp setupController];
        double v36 = [v35 activationManager];

        if ([v36 awaitingActivation]
          && [v36 didPresentFlow]
          && ([v36 hasStashedALFlow] & 1) == 0)
        {
          [v4 popRUIObject:0 animated:0];
          [v36 setAwaitingActivation:0];
        }
        if (*(unsigned char *)(a1 + 56)
          || [*(id *)(a1 + 40) _shouldSkipForBetterTogether:*(void *)(a1 + 32)])
        {
          if (PBShouldOfferBetterTogetherFlow())
          {
            id v37 = objc_loadWeakRetained(v2);
            unsigned int v38 = [v37 isDeKOTAFlow];

            if (v38)
            {
              id v39 = pbb_setupflow_log();
              if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v40 = (void *)*v6;
                int v42 = 138412290;
                unsigned int v43 = v40;
                _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "Better together, forcing skip of: %@", (uint8_t *)&v42, 0xCu);
              }
            }
          }
          [v4 buddyControllerDone:*v6];
          if ((v24 & 1) == 0) {
            [v4 blockGoingBackFromCurrentController];
          }
        }
        else
        {
          id v41 = [v4 controllerDisplayedWhileOnHold];
          [v4 _transitionFromBuddyController:v41 toBuddyController:*v6];

          [v4 setControllerDisplayedWhileOnHold:0];
        }
      }
      else if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        sub_100173318(a1 + 32, v4);
      }
    }
    else
    {
      uint64_t v10 = pbb_setupflow_log();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_1001732A8(a1, v10, v11, v12, v13, v14, v15, v16);
      }
    }
  }
}

void sub_100098608(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v4 = [v3 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (!v4) {
    goto LABEL_11;
  }
  id v5 = v4;
  char v6 = 0;
  uint64_t v7 = *(void *)v18;
  do
  {
    for (i = 0; i != v5; i = (char *)i + 1)
    {
      if (*(void *)v18 != v7) {
        objc_enumerationMutation(v3);
      }
      id v9 = [*(id *)(*((void *)&v17 + 1) + 8 * i) request];
      uint64_t v10 = [v9 identifier];
      unsigned __int8 v11 = [v10 isEqual:@"com.apple.Bridge.request"];

      v6 |= v11;
    }
    id v5 = [v3 countByEnumeratingWithState:&v17 objects:v21 count:16];
  }
  while (v5);
  if (v6)
  {
    uint64_t v12 = pbb_setupflow_log();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Already showing pairing reminder notification", v16, 2u);
    }
  }
  else
  {
LABEL_11:
    uint64_t v12 = objc_alloc_init((Class)UNMutableNotificationContent);
    [v12 setCategoryIdentifier:@"com.apple.Bridge.pairing"];
    [v12 setInterruptionLevel:2];
    uint64_t v13 = +[NSBundle mainBundle];
    uint64_t v14 = [v13 localizedStringForKey:@"RETURN_TO_PAIRING_NOTIFICATION_BODY" value:&stru_100249230 table:@"Localizable"];
    [v12 setBody:v14];

    uint64_t v15 = +[UNNotificationRequest requestWithIdentifier:@"com.apple.Bridge.request" content:v12 trigger:0];
    [*(id *)(a1 + 32) addNotificationRequest:v15 withCompletionHandler:&stru_100245A08];
  }
}

void sub_100098838(id a1, NSError *a2)
{
  id v2 = a2;
  id v3 = pbb_setupflow_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    id v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Added Notification request: %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100098C94(uint64_t a1)
{
  uint64_t v1 = (Class *)(a1 + 48);
  if (!*(void *)(a1 + 48)) {
    goto LABEL_7;
  }
  [*(id *)(a1 + 32) _controllerForClass];
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  if (v3) {
    goto LABEL_6;
  }
  id v3 = objc_alloc_init(*v1);
  if (objc_opt_respondsToSelector()) {
    [v3 setDelegate:*(void *)(a1 + 32)];
  }
  if (v3)
  {
LABEL_6:
    [*(id *)(a1 + 32) _pushGizmoBuddyController:v3];
    [*(id *)(a1 + 32) _pushBuddyController:v3 ontoNavigationController:*(void *)(a1 + 40)];
    int v4 = v3;
    **(void **)(a1 + 56) = v4;
  }
  else
  {
LABEL_7:
    int v4 = pbb_setupflow_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1001733E8((uint64_t)v1, v4, v5, v6, v7, v8, v9, v10);
    }
  }
}

uint64_t sub_100098D64(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100099358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100099384(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained navigationController];
  id v3 = [v2 viewControllers];
  int v4 = [v3 lastObject];

  if (objc_opt_respondsToSelector())
  {
    uint64_t v5 = pbb_setupflow_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      long long v18 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "View controller %@ has custom userAbortedPairing method, deferring to it", buf, 0xCu);
    }

    [v4 performSelector:"userAbortedPairing"];
  }
  else
  {
    uint64_t v6 = [UIApp activeWatch];
    uint64_t v7 = [v6 valueForProperty:NRDevicePropertyIsPaired];
    unsigned int v8 = [v7 BOOLValue];

    unsigned int v9 = v8 | [UIApp isActivated];
    uint64_t v10 = pbb_setupflow_log();
    BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);
    if (v6) {
      BOOL v12 = v9 == 0;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12)
    {
      if (v11)
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "User Reset Buddy!", buf, 2u);
      }

      [UIApp resetSetupFlowAnimated:1 forEvent:42];
    }
    else
    {
      if (v11)
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "User Reset Buddy! - Unpairing", buf, 2u);
      }

      v15[0] = @"obliterate";
      v15[1] = @"BDE85C67-0FDD-4A95-A9B9-3CB5DD0C06A2";
      v16[0] = &__kCFBooleanTrue;
      v16[1] = &__kCFBooleanTrue;
      uint64_t v13 = +[NSDictionary dictionaryWithObjects:v16 forKeys:v15 count:2];
      uint64_t v14 = +[NRPairedDeviceRegistry sharedInstance];
      [v14 unpairWithDevice:v6 withOptions:v13 operationHasBegun:&stru_100245A78];

      +[PBBridgeCAReporter incrementSuccessType:42];
    }
    [WeakRetained endLiveActivityWithEndStatus:2];
  }
}

void sub_100099608(id a1, NSError *a2)
{
  id v2 = a2;
  id v3 = pbb_setupflow_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    uint64_t v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "User Reset Buddy! - Unpairing result: (%@)", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1000996B4(id a1, UIAlertAction *a2)
{
  id v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "User Did Not Reset Buddy.", v3, 2u);
  }
}

void sub_100099AFC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100099B20(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = *(void **)(a1 + 32);
  int v4 = [WeakRetained navigationController];
  uint64_t v5 = *(unsigned __int8 *)(a1 + 56);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100099C04;
  void v6[3] = &unk_100243FC0;
  void v6[4] = WeakRetained;
  id v7 = *(id *)(a1 + 32);
  id v8 = *(id *)(a1 + 40);
  [v3 presentInParentViewController:v4 animated:v5 completion:v6];
}

void sub_100099C04(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) navigationController];
  id v3 = [v2 topViewController];

  int v4 = [*(id *)(a1 + 40) visiblePage];

  uint64_t v5 = pbb_setupflow_log();
  uint64_t v6 = v5;
  if (v3 == v4)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = [*(id *)(a1 + 40) visiblePage];
      int v14 = 138412546;
      uint64_t v15 = v7;
      __int16 v16 = 2112;
      long long v17 = v3;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "PUSH: %@ vs %@", (uint8_t *)&v14, 0x16u);
    }
  }
  else if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    sub_1001734C0((id *)(a1 + 40));
  }

  id v8 = [COSRemoteUIBuddyController alloc];
  unsigned int v9 = [*(id *)(a1 + 40) visiblePage];
  uint64_t v10 = [(COSRemoteUIBuddyController *)v8 initWithRUIViewController:v9];

  [(COSRemoteUIBuddyController *)v10 setDelegate:*(void *)(a1 + 32)];
  BOOL v11 = [*(id *)(a1 + 32) buddyControllers];
  [v11 addObject:v10];

  BOOL v12 = +[NRPairedDeviceRegistry sharedInstance];
  [v12 pairingClientDidEnterPhase:@"PBBuddyControllerActivationLockChallenge"];

  uint64_t v13 = *(void *)(a1 + 48);
  if (v13) {
    (*(void (**)(void))(v13 + 16))();
  }
}

void sub_10009A2AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    [*(id *)(a1 + 32) addObject:v3];
  }
}

uint64_t sub_10009A658(void *a1)
{
  id v1 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v2 = 3;
LABEL_3:
    kdebug_trace();
    goto LABEL_6;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v2 = 27;
  }
  else
  {
    NSClassFromString(@"VTUISiriOptinViewController");
    if (objc_opt_isKindOfClass())
    {
      uint64_t v2 = 5;
      goto LABEL_3;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v2 = 6;
      goto LABEL_3;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v2 = 7;
      goto LABEL_3;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v2 = 8;
    }
    else
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        uint64_t v2 = 14;
        goto LABEL_3;
      }
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        uint64_t v2 = 9;
        goto LABEL_3;
      }
      objc_opt_class();
      if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
      {
        uint64_t v2 = 10;
        goto LABEL_3;
      }
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        uint64_t v2 = 11;
        goto LABEL_3;
      }
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        uint64_t v2 = 13;
      }
      else
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          if (+[COSUnlockPlaceholderViewController isMandatory])
          {
            uint64_t v2 = 16;
          }
          else
          {
            uint64_t v2 = 15;
          }
          goto LABEL_3;
        }
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          uint64_t v2 = 4;
        }
        else
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            uint64_t v2 = 19;
          }
          else
          {
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              uint64_t v2 = 20;
            }
            else
            {
              objc_opt_class();
              if (objc_opt_isKindOfClass())
              {
                uint64_t v2 = 21;
              }
              else
              {
                objc_opt_class();
                if (objc_opt_isKindOfClass())
                {
                  uint64_t v2 = 22;
                }
                else
                {
                  NSClassFromString(@"CHASActivitySetupOnboardingViewController");
                  if ((objc_opt_isKindOfClass() & 1) != 0
                    || (NSClassFromString(@"CHASActivitySetupThreeRingsOnboardingViewController"),
                        (objc_opt_isKindOfClass() & 1) != 0))
                  {
                    uint64_t v2 = 23;
                  }
                  else
                  {
                    NSClassFromString(@"CHASActivitySetupMetricsCollectionViewController");
                    if (objc_opt_isKindOfClass())
                    {
                      uint64_t v2 = 24;
                    }
                    else
                    {
                      NSClassFromString(@"CHASActivitySetupViewController");
                      if (objc_opt_isKindOfClass())
                      {
                        uint64_t v2 = 25;
                      }
                      else
                      {
                        objc_opt_class();
                        if (objc_opt_isKindOfClass())
                        {
                          uint64_t v2 = 28;
                        }
                        else
                        {
                          objc_opt_class();
                          if (objc_opt_isKindOfClass())
                          {
                            uint64_t v2 = 26;
                          }
                          else
                          {
                            objc_opt_class();
                            if (objc_opt_isKindOfClass())
                            {
                              uint64_t v2 = 29;
                            }
                            else
                            {
                              objc_opt_class();
                              if (objc_opt_isKindOfClass())
                              {
                                uint64_t v2 = 30;
                              }
                              else
                              {
                                objc_opt_class();
                                if (objc_opt_isKindOfClass())
                                {
                                  uint64_t v2 = 31;
                                }
                                else
                                {
                                  NSClassFromString(@"TextSettingsMiniFlowController");
                                  if ((objc_opt_isKindOfClass() & 1) != 0
                                    || (NSClassFromString(@"TextSettingsViewController"),
                                        (objc_opt_isKindOfClass() & 1) != 0))
                                  {
                                    uint64_t v2 = 32;
                                  }
                                  else
                                  {
                                    NSClassFromString(@"AccessibilitySettingsMiniFlowController");
                                    if ((objc_opt_isKindOfClass() & 1) != 0
                                      || (NSClassFromString(@"AccessibilitySettingsViewController"),
                                          (objc_opt_isKindOfClass() & 1) != 0))
                                    {
                                      uint64_t v2 = 33;
                                    }
                                    else
                                    {
                                      NSClassFromString(@"CompanionAppViewSetup");
                                      if ((objc_opt_isKindOfClass() & 1) != 0
                                        || (NSClassFromString(@"CompanionAppViewSetupViewController"),
                                            (objc_opt_isKindOfClass() & 1) != 0))
                                      {
                                        uint64_t v2 = 34;
                                      }
                                      else
                                      {
                                        uint64_t v6 = pbb_setupflow_log();
                                        if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
                                          sub_1001735D4();
                                        }

                                        uint64_t v2 = 1;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_6:
  id v3 = pbb_setupflow_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = PBBuddyControllerDescription();
    int v7 = 138412290;
    id v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Controller %@", (uint8_t *)&v7, 0xCu);
  }
  return v2;
}

void sub_10009B070(id a1)
{
  id v1 = [UIApp activeWatch];
  v4[0] = @"obliterate";
  v4[1] = @"BDE85C67-0FDD-4A95-A9B9-3CB5DD0C06A2";
  v5[0] = &__kCFBooleanTrue;
  v5[1] = &__kCFBooleanTrue;
  uint64_t v2 = +[NSDictionary dictionaryWithObjects:v5 forKeys:v4 count:2];
  id v3 = +[NRPairedDeviceRegistry sharedInstance];
  [v3 unpairWithDevice:v1 withOptions:v2 operationHasBegun:&stru_100245B50];
}

void sub_10009B154(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  id v3 = pbb_setupflow_log();
  int v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1001736A4((uint64_t)v2, v4, v5, v6, v7, v8, v9, v10);
    }
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)BOOL v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "unpair operation began successfully for unsupported pairing configuration", v11, 2u);
  }
}

void sub_10009B744(uint64_t a1, int a2)
{
  int v4 = pbb_accountsignin_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 138412546;
    uint64_t v7 = v5;
    __int16 v8 = 1024;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Saved combined iTunesStore account (%@) with success: (%{BOOL}d)", (uint8_t *)&v6, 0x12u);
  }
}

void *sub_10009BE10(void *result)
{
  if (!*(void *)(result[4] + 208))
  {
    id v1 = result;
    uint64_t v2 = objc_alloc_init(COSWristAttributeVisualDetector);
    uint64_t v3 = v1[4];
    int v4 = *(void **)(v3 + 208);
    *(void *)(v3 + 208) = v2;

    uint64_t v5 = *(void **)(v1[4] + 208);
    return _[v5 ingestWarmupBuffer];
  }
  return result;
}

void sub_10009BF78(uint64_t a1)
{
  uint64_t v2 = pbb_devicemanagement_log();
  uint64_t v3 = (char *)os_signpost_id_generate(v2);

  int v4 = pbb_devicemanagement_log();
  uint64_t v5 = v4;
  if ((unint64_t)(v3 - 1) <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v4))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v5, OS_SIGNPOST_INTERVAL_BEGIN, (os_signpost_id_t)v3, "FetchEnrollmentData", "", buf, 2u);
  }

  int v6 = +[MCProfileConnection sharedConnection];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  _DWORD v7[2] = sub_10009C0C8;
  v7[3] = &unk_100245BA0;
  v9[1] = v3;
  objc_copyWeak(v9, (id *)(a1 + 40));
  id v8 = *(id *)(a1 + 32);
  [v6 fetchStagedMDMEnrollmentDataForPairingWatchWithCompletion:v7];

  objc_destroyWeak(v9);
}

void sub_10009C0B4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10009C0C8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = pbb_devicemanagement_log();
  id v8 = v7;
  os_signpost_id_t v9 = *(void *)(a1 + 48);
  if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v7))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v8, OS_SIGNPOST_EVENT, v9, "FetchEnrollmentData", "fetched enrollment data", buf, 2u);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10009C228;
  block[3] = &unk_100245B78;
  objc_copyWeak(v16, (id *)(a1 + 40));
  v16[1] = *(id *)(a1 + 48);
  id v13 = v6;
  id v14 = v5;
  id v15 = *(id *)(a1 + 32);
  id v10 = v5;
  id v11 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(v16);
}

void sub_10009C228(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (*(void *)(a1 + 32))
  {
    uint64_t v3 = pbb_devicemanagement_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_100173744(a1 + 32, v3, v4, v5, v6, v7, v8, v9);
    }
  }
  id v10 = pbb_devicemanagement_log();
  id v11 = v10;
  os_signpost_id_t v12 = *(void *)(a1 + 64);
  if (v12 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v10))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_EVENT, v12, "FetchEnrollmentData", "updated enrollment data", buf, 2u);
  }

  id v13 = pbb_devicemanagement_log();
  id v14 = v13;
  os_signpost_id_t v15 = *(void *)(a1 + 64);
  if (v15 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v13))
  {
    *(_WORD *)__int16 v16 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, OS_SIGNPOST_INTERVAL_END, v15, "FetchEnrollmentData", "", v16, 2u);
  }

  [WeakRetained setStagedEnrollmentDataForCurrentPairing:*(void *)(a1 + 40)];
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_10009C870(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = +[NRPairedDeviceRegistry sharedInstance];
  uint64_t v3 = *(unsigned int *)(a1 + 40);
  uint64_t v4 = [UIApp activeWatch];
  uint64_t v5 = [v4 pairingID];
  [v2 updateWatchBuddyStage:v3 forPairingID:v5];
}

uint64_t sub_10009CF58()
{
  uint64_t result = _sl_dlopen();
  qword_10029B138 = result;
  return result;
}

void sub_10009CFCC(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

id sub_10009D3AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)COSBridgeRootController;
  return [super pushViewController:v1 animated:0];
}

void sub_10009D510(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  uint64_t v9 = pbb_accountsignin_log();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = *(void **)(*(void *)(a1 + 32) + 32);
    *(_DWORD *)buf = 136315650;
    uint64_t v31 = "-[COSTinkerWaitForSignInResultsController didPushWaitScreen]_block_invoke";
    __int16 v32 = 2048;
    uint64_t v33 = a2;
    __int16 v34 = 2048;
    id v35 = v10;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%s Got progress update from watch: %ld, Current status: %ld", buf, 0x20u);
  }

  uint64_t v11 = *(void *)(a1 + 32);
  if (*(void *)(v11 + 32) != a2)
  {
    switch(a2)
    {
      case 1:
        [(id)v11 popToWaitForCDPCompletionController];
        [*(id *)(a1 + 40) addPairingTimeEventToPairingReportPlist:62 withValue:&__kCFBooleanTrue withError:0];
        [*(id *)(a1 + 40) checkInWithOpenPairingTimeEvent:64];
        break;
      case 2:
        id v13 = pbb_accountsignin_log();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136315394;
          uint64_t v31 = "-[COSTinkerWaitForSignInResultsController didPushWaitScreen]_block_invoke_2";
          __int16 v32 = 2048;
          uint64_t v33 = 2;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%s dropping: %ld", buf, 0x16u);
        }

        break;
      case 3:
        id WeakRetained = objc_loadWeakRetained((id *)(v11 + 24));
        [WeakRetained buddyControllerDone:*(void *)(a1 + 32)];

        [*(id *)(a1 + 40) addPairingTimeEventToPairingReportPlist:42 withValue:&__kCFBooleanTrue withError:0];
        break;
      default:
        id v14 = pbb_accountsignin_log();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136315906;
          uint64_t v31 = "-[COSTinkerWaitForSignInResultsController didPushWaitScreen]_block_invoke";
          __int16 v32 = 2048;
          uint64_t v33 = a2;
          __int16 v34 = 2112;
          id v35 = v7;
          __int16 v36 = 2112;
          id v37 = v8;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "%s Canceling pairing due to status %ld - Message: %@ error: %@", buf, 0x2Au);
        }

        if (v8)
        {
          os_signpost_id_t v15 = *(void **)(a1 + 40);
          __int16 v16 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v8 code]);
          [v15 addPairingTimeEventToPairingReportPlist:65 withValue:v16 withError:0];

          long long v17 = *(void **)(a1 + 40);
          long long v18 = [v8 domain];
          [v17 addPairingTimeEventStringToPairingReportPlist:66 withValue:v18 withError:0];
        }
        if ((sub_100008380() & 1) == 0)
        {
          long long v19 = +[NSBundle mainBundle];
          uint64_t v20 = [v19 localizedStringForKey:@"CANT_LOGIN_UNKNOWN_ERROR" value:&stru_100249230 table:@"Localizable"];

          id v7 = (id)v20;
        }
        long long v21 = +[NSBundle mainBundle];
        id v22 = [v21 localizedStringForKey:@"CANT_LOGIN_GENERIC_TITLE" value:&stru_100249230 table:@"Localizable"];
        long long v23 = +[UIAlertController alertControllerWithTitle:v22 message:v7 preferredStyle:1];

        unsigned int v24 = [UIApp setupController];
        __int16 v25 = [v24 navigationController];

        long long v26 = +[NSBundle mainBundle];
        long long v27 = [v26 localizedStringForKey:@"OK" value:&stru_100249230 table:@"Localizable"];
        v29[0] = _NSConcreteStackBlock;
        v29[1] = 3221225472;
        v29[2] = sub_10009D9B4;
        v29[3] = &unk_100243AE0;
        uint8_t v29[4] = *(void *)(a1 + 32);
        long long v28 = +[UIAlertAction actionWithTitle:v27 style:0 handler:v29];
        [v23 addAction:v28];

        [v25 presentViewController:v23 animated:1 completion:0];
        break;
    }
  }
}

id sub_10009D9B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
  [WeakRetained buddyControllerCancelAnyHold];

  uint64_t v3 = *(void *)(a1 + 32);

  return +[COSSatellitePairingHelper popToLoginControllerFromController:v3];
}

void sub_10009E6C8(uint64_t a1, void *a2)
{
  id v2 = a2;
  if ([v2 isLocalChange]) {
    [v2 setLocalChange:0];
  }
  else {
    [v2 reloadSpecifiers];
  }
}

id sub_10009E720()
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000;
  uint64_t v0 = (void **)qword_10029B140;
  uint64_t v8 = qword_10029B140;
  if (!qword_10029B140)
  {
    uint64_t v1 = (void *)sub_1000A199C();
    void v6[3] = (uint64_t)dlsym(v1, "ADAFDarwinNotificationKeyNano");
    qword_10029B140 = v6[3];
    uint64_t v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    uint64_t v4 = (_Unwind_Exception *)sub_100171A7C();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  id v2 = *v0;

  return v2;
}

void sub_10009EB64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10009EB7C()
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000;
  uint64_t v0 = (void **)qword_10029B158;
  uint64_t v8 = qword_10029B158;
  if (!qword_10029B158)
  {
    uint64_t v1 = (void *)sub_1000A199C();
    void v6[3] = (uint64_t)dlsym(v1, "ADAFPreferenceKeyVolumeLimitThreshold");
    qword_10029B158 = v6[3];
    uint64_t v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    uint64_t v4 = (_Unwind_Exception *)sub_100171A7C();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  id v2 = *v0;

  return v2;
}

id sub_10009EFE0()
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000;
  uint64_t v0 = (void **)qword_10029B160;
  uint64_t v8 = qword_10029B160;
  if (!qword_10029B160)
  {
    uint64_t v1 = (void *)sub_1000A199C();
    void v6[3] = (uint64_t)dlsym(v1, "ADAFPreferenceKeyHAENotificationIsMandatory");
    qword_10029B160 = v6[3];
    uint64_t v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    uint64_t v4 = (_Unwind_Exception *)sub_100171A7C();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  id v2 = *v0;

  return v2;
}

id sub_10009F0E8()
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000;
  uint64_t v0 = (void **)qword_10029B168;
  uint64_t v8 = qword_10029B168;
  if (!qword_10029B168)
  {
    uint64_t v1 = (void *)sub_1000A199C();
    void v6[3] = (uint64_t)dlsym(v1, "ADAFPreferenceKeyHAENotificationFeatureEnabled");
    qword_10029B168 = v6[3];
    uint64_t v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    uint64_t v4 = (_Unwind_Exception *)sub_100171A7C();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  id v2 = *v0;

  return v2;
}

id sub_10009F1F0()
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000;
  uint64_t v0 = (void **)qword_10029B170;
  uint64_t v8 = qword_10029B170;
  if (!qword_10029B170)
  {
    uint64_t v1 = (void *)sub_1000A199C();
    void v6[3] = (uint64_t)dlsym(v1, "ADAFPreferenceKeyVolumeLimitEnabled");
    qword_10029B170 = v6[3];
    uint64_t v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    uint64_t v4 = (_Unwind_Exception *)sub_100171A7C();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  id v2 = *v0;

  return v2;
}

id sub_10009F788()
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000;
  uint64_t v0 = (void **)qword_10029B178;
  uint64_t v8 = qword_10029B178;
  if (!qword_10029B178)
  {
    uint64_t v1 = (void *)sub_1000A199C();
    void v6[3] = (uint64_t)dlsym(v1, "ADAFPreferenceKeyHAEEnableHKWrite");
    qword_10029B178 = v6[3];
    uint64_t v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    uint64_t v4 = (_Unwind_Exception *)sub_100171A7C();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  id v2 = *v0;

  return v2;
}

void sub_1000A11FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000A1228(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if ([v4 count])
  {
    long long v27 = 0u;
    long long v28 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    id v20 = v4;
    id obj = v4;
    id v5 = [obj countByEnumeratingWithState:&v25 objects:v29 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v22 = *(void *)v26;
      do
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(void *)v26 != v22) {
            objc_enumerationMutation(obj);
          }
          uint64_t v8 = *(void **)(*((void *)&v25 + 1) + 8 * i);
          uint64_t v9 = [*(id *)(a1 + 32) objectAtIndex:0];
          id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
          uint64_t v11 = [WeakRetained monthFormatter];
          os_signpost_id_t v12 = [v8 endDate];
          id v13 = [v11 stringFromDate:v12];
          signed int v14 = [v9 indexOfObject:v13];

          if ([v8 value] == (id)1)
          {
            os_signpost_id_t v15 = [*(id *)(a1 + 32) objectAtIndex:1];
            __int16 v16 = [v15 objectAtIndexedSubscript:v14];
            long long v17 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", (char *)[v16 integerValue] + 1);
            long long v18 = [*(id *)(a1 + 32) objectAtIndex:1];
            [v18 setObject:v17 atIndexedSubscript:v14];
          }
        }
        id v6 = [obj countByEnumeratingWithState:&v25 objects:v29 count:16];
      }
      while (v6);
    }

    id v19 = objc_loadWeakRetained((id *)(a1 + 40));
    [v19 updateNotificationCountsForData:*(void *)(a1 + 32)];

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000A14D0;
    block[3] = &unk_1002439E0;
    objc_copyWeak(&v24, (id *)(a1 + 40));
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    objc_destroyWeak(&v24);
    id v4 = v20;
  }
}

void sub_1000A14D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadSpecifiers];
}

void *sub_1000A194C(uint64_t a1)
{
  id v2 = (void *)sub_1000A199C();
  uint64_t result = dlsym(v2, "ADAFDarwinNotificationKeyNano");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_10029B140 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1000A199C()
{
  v3[0] = 0;
  if (!qword_10029B148)
  {
    v3[1] = _NSConcreteStackBlock;
    v3[2] = 3221225472;
    v3[3] = sub_1000A1A9C;
    void v3[4] = &unk_1002436E0;
    void v3[5] = v3;
    long long v4 = off_100245C50;
    uint64_t v5 = 0;
    qword_10029B148 = _sl_dlopen();
  }
  uint64_t v0 = qword_10029B148;
  uint64_t v1 = (void *)v3[0];
  if (!qword_10029B148)
  {
    uint64_t v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t sub_1000A1A9C()
{
  uint64_t result = _sl_dlopen();
  qword_10029B148 = result;
  return result;
}

Class sub_1000A1B10(uint64_t a1)
{
  sub_1000A199C();
  Class result = objc_getClass("ADASManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029B150 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = sub_10017233C();
    return (Class)sub_1000A1B68(v3);
  }
  return result;
}

void *sub_1000A1B68(uint64_t a1)
{
  id v2 = (void *)sub_1000A199C();
  Class result = dlsym(v2, "ADAFPreferenceKeyVolumeLimitThreshold");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_10029B158 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *sub_1000A1BB8(uint64_t a1)
{
  id v2 = (void *)sub_1000A199C();
  Class result = dlsym(v2, "ADAFPreferenceKeyHAENotificationIsMandatory");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_10029B160 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *sub_1000A1C08(uint64_t a1)
{
  id v2 = (void *)sub_1000A199C();
  Class result = dlsym(v2, "ADAFPreferenceKeyHAENotificationFeatureEnabled");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_10029B168 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *sub_1000A1C58(uint64_t a1)
{
  id v2 = (void *)sub_1000A199C();
  Class result = dlsym(v2, "ADAFPreferenceKeyVolumeLimitEnabled");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_10029B170 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *sub_1000A1CA8(uint64_t a1)
{
  id v2 = (void *)sub_1000A199C();
  Class result = dlsym(v2, "ADAFPreferenceKeyHAEEnableHKWrite");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_10029B178 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1000A1F00(uint64_t a1, char a2)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1000A1F7C;
  v2[3] = &unk_1002448E8;
  char v3 = a2;
  v2[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);
}

void sub_1000A1F7C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    id v4 = [*(id *)(a1 + 32) delegate];
    [v4 buddyControllerReleaseHold:*(void *)(a1 + 32)];
  }
  else
  {
    id v2 = pbb_setup_log();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Application install not allowed.", buf, 2u);
    }

    [*(id *)(a1 + 32) selectedOptinChoice:0];
    char v3 = [*(id *)(a1 + 32) delegate];
    [v3 buddyControllerReleaseHoldAndSkip:*(void *)(a1 + 32)];
  }
}

void sub_1000A2F04(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) view];
  uint64_t v5 = [v4 window];
  [v5 setUserInteractionEnabled:1];

  id v6 = +[PSNavBarSpinnerManager sharedSpinnerManager];
  [v6 stopAnimatingForIdentifier:@"softwareUpdateDeletion"];

  if (v3)
  {
    uint64_t v7 = pbb_bridge_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 40);
      int v14 = 138412546;
      uint64_t v15 = v8;
      __int16 v16 = 2112;
      id v17 = v3;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Failed to purge usage bunde %@ with error: %@", (uint8_t *)&v14, 0x16u);
    }

    BPSPresentGizmoUnreachableServiceAlertWithDismissalHandler();
  }
  else
  {
    sub_1000338A8(*(void **)(a1 + 48));
    uint64_t v9 = [*(id *)(a1 + 56) bundleUsages];
    [v9 removeObject:*(void *)(a1 + 40)];

    uint64_t v10 = *(void **)(a1 + 56);
    uint64_t v11 = [*(id *)(a1 + 32) specifier];
    [v10 removeSpecifier:v11];

    os_signpost_id_t v12 = [*(id *)(a1 + 32) navigationController];
    id v13 = [v12 popViewControllerAnimated:1];
  }
}

void sub_1000A34CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000A3508(uint64_t a1, char a2)
{
  id v3 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = [WeakRetained presentFromController];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000A35E0;
  void v6[3] = &unk_100245C98;
  char v8 = a2;
  objc_copyWeak(&v7, v3);
  [v5 dismissViewControllerAnimated:1 completion:v6];

  objc_destroyWeak(&v7);
}

void sub_1000A35CC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000A35E0(uint64_t a1)
{
  id v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    if (*(unsigned char *)(a1 + 40)) {
      CFStringRef v3 = @"success";
    }
    else {
      CFStringRef v3 = @"failed";
    }
    int v9 = 138412290;
    CFStringRef v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Profile device selector completion block called: (%@)", (uint8_t *)&v9, 0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = [WeakRetained completionBlock];

  if (v5)
  {
    id v6 = objc_loadWeakRetained((id *)(a1 + 32));
    id v7 = [v6 completionBlock];
    v7[2](v7, *(unsigned __int8 *)(a1 + 40));
  }
  id v8 = objc_loadWeakRetained((id *)(a1 + 32));
  [v8 setDeviceSelectorController:0];
}

int64_t sub_1000A3780(id a1, NRDevice *a2, NRDevice *a3)
{
  uint64_t v4 = NRDevicePropertyLastActiveDate;
  uint64_t v5 = a3;
  id v6 = [(NRDevice *)a2 valueForProperty:v4];
  id v7 = [(NRDevice *)v5 valueForProperty:v4];

  id v8 = [v6 compare:v7];
  return (int64_t)v8;
}

id sub_1000A4CC0(uint64_t a1, void *a2)
{
  return [a2 _debug_forcePullAssets];
}

void sub_1000A5268(uint64_t a1, int a2)
{
  uint64_t v4 = pbb_mobileasset_log();
  uint64_t v5 = v4;
  if (a2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = [*(id *)(a1 + 32) _bridgeConciseDebugDescription];
      int v7 = 138412290;
      id v8 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Pulled Assets For %@!", (uint8_t *)&v7, 0xCu);
    }
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    sub_10017381C(a1, v5);
  }
}

void sub_1000A5824(id a1, BOOL a2)
{
  BOOL v2 = a2;
  CFStringRef v3 = pbb_setupflow_log();
  uint64_t v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Successfully took suspend assertion.", v5, 2u);
    }
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    sub_1001738B4();
  }
}

uint64_t sub_1000A6488(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

uint64_t sub_1000A64A4(uint64_t a1)
{
  +[PSBluetoothSettingsDetail setEnabled:1];
  +[PSWiFiSettingsDetail setEnabled:1];
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    CFStringRef v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_1000A6514(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = pbb_bridge_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Presenting 'get connected WiFi' alert using: %@", (uint8_t *)&v5, 0xCu);
  }

  [v3 presentViewController:*(void *)(a1 + 32) animated:1 completion:0];
}

void sub_1000A6858(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 transitionCoordinator];
  if (v4)
  {
    objc_initWeak(location, *(id *)(a1 + 32));
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1000A69F4;
    void v6[3] = &unk_100245DF8;
    objc_copyWeak(&v8, location);
    id v7 = *(id *)(a1 + 40);
    [v4 animateAlongsideTransition:0 completion:v6];

    objc_destroyWeak(&v8);
    objc_destroyWeak(location);
  }
  else
  {
    int v5 = pbb_bridge_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(location[0]) = 138412290;
      *(id *)((char *)location + 4) = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "returning presenting controller: %@", (uint8_t *)location, 0xCu);
    }

    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_1000A69D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000A69F4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = pbb_bridge_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "after transition, checking again for presenting controller", v4, 2u);
    }

    [WeakRetained presentingControllerForModalByDismissingTopAlertIfPresentWithCompletion:*(void *)(a1 + 32)];
  }
}

uint64_t sub_1000A6A88(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1000A7A20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,id location)
{
  objc_destroyWeak(v33);
  objc_destroyWeak((id *)(v34 - 240));
  _Unwind_Resume(a1);
}

void sub_1000A7A68(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    id v3 = pbb_bridge_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      uint64_t v5 = *(void *)(a1 + 40);
      int v6 = 138412546;
      uint64_t v7 = v4;
      __int16 v8 = 2112;
      uint64_t v9 = v5;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Setup and Unpair dismissed. Executing Prox Pairing: %@ (from sourceApplication %@).", (uint8_t *)&v6, 0x16u);
    }

    [WeakRetained application:*(void *)(a1 + 48) openURL:*(void *)(a1 + 32) options:*(void *)(a1 + 56)];
  }
}

void sub_1000A7B4C(uint64_t a1)
{
  BOOL v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v6 = 138412546;
    uint64_t v7 = v3;
    __int16 v8 = 2112;
    uint64_t v9 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Setup and Unpair dismissed. Executing: %@ (from sourceApplication %@).", (uint8_t *)&v6, 0x16u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  [WeakRetained application:*(void *)(a1 + 48) openURL:*(void *)(a1 + 32) options:*(void *)(a1 + 56)];
}

void sub_1000A7F38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000A7F54(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    int v6 = pbb_bridge_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v31 = v3;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "presenting controller for greenfield :  %@", buf, 0xCu);
    }

    if ([v3 isMemberOfClass:objc_opt_class()])
    {
      uint64_t v7 = [v3 topViewController];
      unsigned __int8 v8 = [v7 isMemberOfClass:objc_opt_class()];

      char v9 = v8 ^ 1;
    }
    else
    {
      char v9 = 1;
    }
    char v26 = v9;
    uint64_t v11 = [WeakRetained rootViewController];
    os_signpost_id_t v12 = [v11 viewControllers];
    id v13 = [WeakRetained myWatchViewController];
    unsigned __int8 v14 = [v12 containsObject:v13];

    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v15 = [v3 visibleViewController];
    }
    else
    {
      id v15 = v3;
    }
    __int16 v16 = v15;
    if (+[NTKGreenfieldUtilities shouldAutoDismissViewControllerForAddFaceFlow:](NTKGreenfieldUtilities, "shouldAutoDismissViewControllerForAddFaceFlow:", v15)&& ([v16 presentingViewController], id v17 = objc_claimAutoreleasedReturnValue(), v17, v17))
    {
      long long v18 = [v16 presentingViewController];
      [v18 dismissViewControllerAnimated:0 completion:0];

      CFStringRef v10 = [v16 presentingViewController];

      id v19 = pbb_bridge_log();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412546;
        id v31 = v16;
        __int16 v32 = 2112;
        uint64_t v33 = v10;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "dismissed exisintg greenfield controller: %@ updating presenting VC :  %@", buf, 0x16u);
      }
    }
    else
    {
      CFStringRef v10 = v3;
    }
    id v20 = [*(id *)(a1 + 32) absoluteString];
    long long v21 = [v20 componentsSeparatedByString:@"="];
    uint64_t v22 = [v21 lastObject];

    long long v23 = +[NSURL URLWithString:v22];
    if ([WeakRetained _isProductKitUrl:v23])
    {
      id v24 = [objc_alloc((Class)NTKGreenfieldB640ViewController) initWithUrl:*(void *)(a1 + 32) sourceApplicationBundleIdentifier:*(void *)(a1 + 40)];
      [v24 setDelegate:WeakRetained];
    }
    else
    {
      id v24 = [objc_alloc((Class)NTKGreenfieldViewController) initWithUrl:*(void *)(a1 + 32) sourceApplicationBundleIdentifier:*(void *)(a1 + 40)];
    }
    long long v25 = [[COSBuddyNavigationController alloc] initWithRootViewController:v24];
    [(COSBuddyNavigationController *)v25 setModalPresentationStyle:1];
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 3221225472;
    v27[2] = sub_1000A8344;
    v27[3] = &unk_100245C98;
    objc_copyWeak(&v28, v4);
    char v29 = v14 & v26;
    [v10 presentViewController:v25 animated:1 completion:v27];
    objc_destroyWeak(&v28);
  }
  else
  {
    CFStringRef v10 = v3;
  }
}

void sub_1000A8328(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000A8344(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && *(unsigned char *)(a1 + 40))
  {
    id v4 = WeakRetained;
    id v3 = [WeakRetained myWatchViewController];
    [v4 setSelectedTabBarViewController:v3];

    [v4 _popToTopLevelSettingsAnimated:0 dismissPresentedViewController:0];
    [v4 _scrollToTopOfSettingsAnimated:0];
    id WeakRetained = v4;
  }
}

id sub_1000A88F8()
{
  return [UIApp refreshUpdateBadge];
}

id sub_1000A8D54(uint64_t a1)
{
  [*(id *)(a1 + 32) refreshTabBar];
  BOOL v2 = +[UIApplication sharedApplication];
  [v2 setIdleTimerDisabled:0];

  id v3 = pbb_setupflow_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = *(unsigned __int8 *)(a1 + 40);
    v10[0] = 67109120;
    v10[1] = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "dismissSetupFlowComplete; complete: %d;",
      (uint8_t *)v10,
      8u);
  }

  *(unsigned char *)(*(void *)(a1 + 32) + 66) = 0;
  [*(id *)(*(void *)(a1 + 32) + 320) buddyControllerCancelAnyHold];
  uint64_t v5 = [*(id *)(*(void *)(a1 + 32) + 104) rootListController];
  [v5 reloadSpecifiers];

  int v6 = +[PSListController appearance];
  unsigned __int8 v7 = [v6 usesDarkTheme];

  if ((v7 & 1) == 0)
  {
    unsigned __int8 v8 = pbb_bridge_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v10[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Error: PSListController is using the wrong theme, resetting appearance!", (uint8_t *)v10, 2u);
    }

    [*(id *)(a1 + 32) reloadAppearance:0];
  }
  return [*(id *)(a1 + 32) dismissSetupFlowAnimated:*(unsigned __int8 *)(a1 + 41) refreshTabs:0 withCompletionHandler:0];
}

void sub_1000A92C0(id a1, NSError *a2)
{
  BOOL v2 = a2;
  id v3 = pbb_bridge_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    uint64_t v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Setup Background Assertion Expired! - Unpairing result: (%@)", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1000A936C(uint64_t a1)
{
  if (!*(unsigned char *)(*(void *)(a1 + 32) + 65))
  {
    BOOL v2 = +[NSBundle mainBundle];
    id v3 = [v2 localizedStringForKey:@"GENERIC_PAIRING_FAILURE_ALERT_TITLE" value:&stru_100249230 table:@"Localizable"];
    int v4 = +[NSBundle mainBundle];
    uint64_t v5 = [v4 localizedStringForKey:@"BACKGROUND_EXPIRY_PAIRING_FAILURE_ALERT_BODY" value:&stru_100249230 table:@"Localizable"];
    int v6 = +[UIAlertController alertControllerWithTitle:v3 message:v5 preferredStyle:1];

    unsigned __int8 v7 = +[NSBundle mainBundle];
    unsigned __int8 v8 = [v7 localizedStringForKey:@"GENERIC_PAIRING_FAILURE_ALERT_START_OVER" value:&stru_100249230 table:@"Localizable"];
    char v9 = +[UIAlertAction actionWithTitle:v8 style:0 handler:0];
    [v6 addAction:v9];

    CFStringRef v10 = *(void **)(a1 + 32);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    void v12[2] = sub_1000A953C;
    v12[3] = &unk_100245DD0;
    id v13 = v6;
    id v11 = v6;
    [v10 presentingControllerForModalByDismissingTopAlertIfPresentWithCompletion:v12];
  }
}

id sub_1000A953C(uint64_t a1, void *a2)
{
  return [a2 presentViewController:*(void *)(a1 + 32) animated:1 completion:0];
}

id sub_1000A968C(uint64_t a1)
{
  return [*(id *)(a1 + 32) popRecursivelyToRootController];
}

uint64_t sub_1000A9694(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000A9C3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000A9C70(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  BOOL v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = [WeakRetained setupController];
    [v3 invalidateState];

    [v2 setSetupController:0];
    [v2 setResetSetupInProgress:0];
    int v4 = [v2 settingsListController];
    [v4 notifyNTKAboutActiveWatch];

    if (![v2 pendingUnpairUIPresentation]) {
      goto LABEL_9;
    }
    uint64_t v5 = pbb_setupflow_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = 136315138;
      CFStringRef v10 = "-[COSPreferencesAppController resetSetupFlowAnimated:forEvent:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s: handling unpair after SetupController cleanup", (uint8_t *)&v9, 0xCu);
    }

    [v2 setPendingUnpairUIPresentation:0];
    int v6 = +[NRPairedDeviceRegistry sharedInstance];
    id v7 = [v6 status];

    if (v7 == (id)5)
    {
      unsigned __int8 v8 = pbb_setupflow_log();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        int v9 = 136315138;
        CFStringRef v10 = "-[COSPreferencesAppController resetSetupFlowAnimated:forEvent:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%s: presenting unpair after SetupController cleanup", (uint8_t *)&v9, 0xCu);
      }

      [v2 presentUnpairingViewControllerAnimated:1];
    }
    else
    {
LABEL_9:
      [v2 _schedulePendingAppDelegateIfPresent];
    }
  }
}

void sub_1000AA28C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 120));
  _Unwind_Resume(a1);
}

void sub_1000AA2E0(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = pbb_setupflow_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = +[NSNumber numberWithBool:v2];
    int v5 = 138412290;
    int v6 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Brute Force Network Reachability: %@", (uint8_t *)&v5, 0xCu);
  }
}

void sub_1000AA3A0(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setIsBeamBridgeReachable:a2];

  int v4 = pbb_setupflow_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = +[NSNumber numberWithBool:a2];
    int v6 = 138412290;
    id v7 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "BeamBridge Network Reachability: %@", (uint8_t *)&v6, 0xCu);
  }
}

void sub_1000AA478(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    int v4 = [WeakRetained setupController];
    int v5 = [v4 navigationController];

    [v5 setModalPresentationStyle:0];
    [v5 _setBuiltinTransitionStyle:1];
    int v6 = pbb_setupflow_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v9 = 138412290;
      uint64_t v10 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Presenting Setup controller using %@", (uint8_t *)&v9, 0xCu);
    }

    [*(id *)(a1 + 32) presentViewController:v5 animated:*(unsigned __int8 *)(a1 + 48) completion:0];
    unsigned __int8 v8 = [v3 setupController];
    [v8 run];
  }
}

id sub_1000AA5A4(uint64_t a1)
{
  BOOL v2 = [*(id *)(a1 + 32) presentedViewController];

  if (v2)
  {
    id v3 = pbb_bridge_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = [*(id *)(a1 + 32) presentedViewController];
      int v7 = 136315394;
      unsigned __int8 v8 = "-[COSPreferencesAppController presentSetupFlowWithMode:animated:]_block_invoke";
      __int16 v9 = 2112;
      uint64_t v10 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s: Dismissing: %@", (uint8_t *)&v7, 0x16u);
    }
    return [*(id *)(a1 + 32) dismissViewControllerAnimated:*(unsigned __int8 *)(a1 + 48) completion:*(void *)(a1 + 40)];
  }
  else
  {
    int v6 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
    return (id)v6();
  }
}

void sub_1000AA950(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_1000AA96C(uint64_t a1)
{
  uint64_t v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Completion: dismissSetup", buf, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    id v15 = _NSConcreteStackBlock;
    uint64_t v16 = 3221225472;
    id v17 = sub_1000AAC98;
    long long v18 = &unk_100245690;
    objc_copyWeak(&v20, (id *)(a1 + 56));
    id v19 = *(id *)(a1 + 48);
    int v4 = objc_retainBlock(&v15);
    int v5 = [*(id *)(a1 + 32) presentingViewController:v15, v16, v17, v18];
    int v6 = [WeakRetained setupController];
    unsigned int v7 = [v6 setupCompletedSuccessfully];

    if (v7 && [WeakRetained _devicePickerBeingPresented])
    {
      unsigned __int8 v8 = [WeakRetained rootViewController];

      __int16 v9 = pbb_setupflow_log();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        uint64_t v22 = v8;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "updating presentingController to root for setup dismissal: %@", buf, 0xCu);
      }

      if (v8) {
        goto LABEL_9;
      }
    }
    else
    {
      unsigned __int8 v8 = v5;
      if (v5)
      {
LABEL_9:
        uint64_t v10 = pbb_setupflow_log();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          uint64_t v22 = v8;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "setupNavigationController being dismissed by: %@.", buf, 0xCu);
        }

        [v8 dismissViewControllerAnimated:*(unsigned __int8 *)(a1 + 64) completion:v4];
LABEL_16:
        os_signpost_id_t v12 = +[UIApplication sharedApplication];
        id v13 = [v12 bridgeController];
        [v13 endSetupTransaction];

        unsigned __int8 v14 = +[COSBackupManager sharedBackupManager];
        [v14 reset];

        [*(id *)(a1 + 40) startScanningForNearbyDevices];
        objc_destroyWeak(&v20);
        goto LABEL_17;
      }
    }
    id v11 = pbb_setupflow_log();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "setupNavigationController: issuing dismissControllerCompletion() inline", buf, 2u);
    }

    ((void (*)(void ***))v4[2])(v4);
    goto LABEL_16;
  }
LABEL_17:
}

void sub_1000AAC6C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000AAC98(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = pbb_setupflow_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v13) = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Completion: dismissControllerCompletion.", (uint8_t *)&v13, 2u);
    }

    int v4 = [WeakRetained setupController];
    [v4 invalidateState];

    [WeakRetained setSetupController:0];
    int v5 = [WeakRetained settingsListController];
    [v5 notifyNTKAboutActiveWatch];

    int v6 = +[BPSBridgeAppContext shared];
    [v6 setInWatchSetupFlow:0];

    unsigned int v7 = -[COSTinkerHealthSharingSetupDelegate tinkerDevice]_0();
    [WeakRetained updateActiveWatch:v7];

    [WeakRetained _refreshShortCuts];
    [WeakRetained setDismissSetupInProgress:0];
    if (![WeakRetained pendingUnpairUIPresentation]) {
      goto LABEL_11;
    }
    unsigned __int8 v8 = pbb_setupflow_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = 136315138;
      unsigned __int8 v14 = "-[COSPreferencesAppController dismissSetupFlowAnimated:refreshTabs:withCompletionHandler:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%s: handling unpair after dismissSetup cleanup", (uint8_t *)&v13, 0xCu);
    }

    [WeakRetained setPendingUnpairUIPresentation:0];
    __int16 v9 = +[NRPairedDeviceRegistry sharedInstance];
    id v10 = [v9 status];

    if (v10 == (id)5)
    {
      id v11 = pbb_setupflow_log();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        int v13 = 136315138;
        unsigned __int8 v14 = "-[COSPreferencesAppController dismissSetupFlowAnimated:refreshTabs:withCompletionHandler:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%s: presenting unpair after dismissSetup cleanup", (uint8_t *)&v13, 0xCu);
      }

      [WeakRetained presentUnpairingViewControllerAnimated:1];
    }
    else
    {
LABEL_11:
      [WeakRetained _schedulePendingAppDelegateIfPresent];
    }
    if (*(void *)(a1 + 32))
    {
      os_signpost_id_t v12 = pbb_setupflow_log();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v13) = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Completion: completion", (uint8_t *)&v13, 2u);
      }

      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    }
  }
}

uint64_t sub_1000AAF3C(uint64_t a1)
{
  uint64_t v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Issuing dismissSetup() inline", v4, 2u);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000AB1A8(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  id v3 = pbb_bridge_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 136315394;
    int v5 = "-[COSPreferencesAppController unpairOrResetBuddyForEvent:]_block_invoke";
    __int16 v6 = 2112;
    unsigned int v7 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s - Unpairing result: (%@)", (uint8_t *)&v4, 0x16u);
  }
}

id sub_1000AB4AC(uint64_t a1)
{
  return [*(id *)(a1 + 32) unpairOrResetBuddyForEvent:51];
}

id sub_1000AB8C4(uint64_t a1)
{
  [*(id *)(a1 + 32) unpairOrResetBuddyForEvent:*(void *)(a1 + 40)];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 dismissSetupFlowComplete:0 animated:1];
}

id sub_1000ABD5C(uint64_t a1)
{
  return [*(id *)(a1 + 32) unpairOrResetBuddyForEvent:38];
}

id sub_1000AC148(uint64_t a1)
{
  [*(id *)(a1 + 32) resetSetupFlowAnimated:0 forEvent:39];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 dismissSetupFlowComplete:0 animated:1];
}

id sub_1000AC3A0(uint64_t a1)
{
  [*(id *)(a1 + 32) resetSetupFlowAnimated:1 forEvent:40];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 dismissSetupFlowComplete:0 animated:1];
}

void sub_1000ACA4C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v8 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    __int16 v6 = [v8 specifier];
    unsigned int v7 = [v6 identifier];

    if (v7) {
      [*(id *)(a1 + 32) addObject:v7];
    }
    else {
      *a4 = 1;
    }
  }
  else
  {
    *a4 = 1;
  }
}

void sub_1000AD3C0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 128));
  _Unwind_Resume(a1);
}

void sub_1000AD3F4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = pbb_bridge_log();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      int v3 = 136315138;
      uint64_t v4 = "-[COSPreferencesAppController presentDevicePickerControllerWith:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%s: scheduling pending URL action after device picker presentation", (uint8_t *)&v3, 0xCu);
    }

    [WeakRetained _schedulePendingAppDelegateIfPresent];
  }
}

void sub_1000AD4B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v5 = [objc_alloc((Class)UINavigationController) initWithRootViewController:*(void *)(a1 + 32)];
    [v5 setModalInPresentation:1];
    __int16 v6 = pbb_bridge_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = 136315650;
      id v8 = "-[COSPreferencesAppController presentDevicePickerControllerWith:]_block_invoke";
      __int16 v9 = 2112;
      id v10 = v5;
      __int16 v11 = 2112;
      id v12 = v3;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%s: presenting :%@ using: %@", (uint8_t *)&v7, 0x20u);
    }

    [v3 presentViewController:v5 animated:1 completion:*(void *)(a1 + 40)];
    [WeakRetained setDevicePickerNavigationController:v5];
    [WeakRetained setDevicePickerPresented:1];
  }
}

void sub_1000AD5F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v4 = [WeakRetained rootViewController];
    if ([v3 _devicePickerBeingPresented])
    {
      id v5 = pbb_bridge_log();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        char v29 = "-[COSPreferencesAppController presentDevicePickerControllerWith:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s: Already root controller is presenting device picker nav", buf, 0xCu);
      }

      __int16 v6 = [v3 devicePickerNavigationController];
      int v7 = [v6 viewControllers];
      id v8 = [v7 count];

      if (v8)
      {
        __int16 v9 = [v3 devicePickerNavigationController];
        id v10 = [v9 viewControllers];
        __int16 v11 = [v10 objectAtIndexedSubscript:0];

        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v12 = v11;
          int v13 = [v12 specifierDataSource];
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            unsigned int v14 = [*(id *)(a1 + 32) tinkerOnly];
            unsigned int v15 = [v13 tinkerOnly];
            uint64_t v16 = pbb_bridge_log();
            BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);
            if (v14 == v15)
            {
              if (v17)
              {
                *(_DWORD *)buf = 136315394;
                char v29 = "-[COSPreferencesAppController presentDevicePickerControllerWith:]_block_invoke";
                __int16 v30 = 2112;
                id v31 = v12;
                _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "%s: existing device list VC: %@ matches requested configutation. Skipping", buf, 0x16u);
              }

              [v12 setLaunchedByNanoRegistry:[v3 launchedByNanoRegistry]];
              [v3 setDevicePickerPresented:1];
              long long v21 = [v3 devicePickerNavigationController];
              uint64_t v22 = [v21 presentedViewController];

              if (v22)
              {
                long long v23 = pbb_bridge_log();
                if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)buf = 136315138;
                  char v29 = "-[COSPreferencesAppController presentDevicePickerControllerWith:]_block_invoke";
                  _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "%s: Dismissing presented controllers from device picker", buf, 0xCu);
                }

                id v24 = [v3 devicePickerNavigationController];
                [v24 dismissViewControllerAnimated:1 completion:*(void *)(a1 + 40)];
              }
              else
              {
                (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
              }

              goto LABEL_19;
            }
            if (v17)
            {
              *(_DWORD *)buf = 136315138;
              char v29 = "-[COSPreferencesAppController presentDevicePickerControllerWith:]_block_invoke";
              _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "%s: Existing device picker VC configuraiton different from requested.", buf, 0xCu);
            }
          }
        }
      }
    }
    long long v18 = [v4 presentedViewController];

    if (v18)
    {
      id v19 = pbb_bridge_log();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        id v20 = [v4 presentedViewController];
        *(_DWORD *)buf = 136315394;
        char v29 = "-[COSPreferencesAppController presentDevicePickerControllerWith:]_block_invoke";
        __int16 v30 = 2112;
        id v31 = v20;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "%s: Dismissing controller stack %@ on top of root VC.", buf, 0x16u);
      }
      v25[0] = _NSConcreteStackBlock;
      v25[1] = 3221225472;
      v25[2] = sub_1000ADA7C;
      v25[3] = &unk_1002444A8;
      id v27 = *(id *)(a1 + 48);
      id v26 = v4;
      [v26 dismissViewControllerAnimated:1 completion:v25];
    }
    else
    {
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    }
LABEL_19:
  }
}

uint64_t sub_1000ADA7C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1000ADA90(uint64_t a1, uint64_t a2, unint64_t a3, unsigned char *a4)
{
  int v7 = SFObjectAndOffsetForURLPair();
  id v15 = [v7 objectForKeyedSubscript:@"object"];

  id v8 = v15;
  if (v15 && (v9 = (unint64_t)[*(id *)(a1 + 32) count] > a3, id v8 = v15, v9))
  {
    id v10 = [*(id *)(a1 + 32) objectAtIndexedSubscript:a3];
    unsigned int v11 = [v15 isEqualToString:v10];

    if (v11)
    {
      [*(id *)(a1 + 40) addObject:v15];
      id v12 = *(void **)(a1 + 48);
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8);
      uint64_t v14 = *(void *)(v13 + 24);
      *(void *)(v13 + 24) = v14 + 1;
      [v12 removeObjectAtIndex:a3 - v14];
    }
    else
    {
      *a4 = 1;
    }
    id v8 = v15;
  }
  else
  {
    *a4 = 1;
  }
}

void sub_1000ADB94(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v11 = a2;
  unsigned int v7 = [v11 conformsToProtocol:&OBJC_PROTOCOL___PSController];
  id v8 = v11;
  if (v7)
  {
    BOOL v9 = [v11 specifier];
    id v10 = [v9 identifier];

    if (v10 && [v10 isEqualToString:*(void *)(a1 + 32)])
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
      *a4 = 1;
    }

    id v8 = v11;
  }
}

void sub_1000ADC58(id a1)
{
  uint64_t v1 = pbb_bridge_log();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "completed handling deferred url", v2, 2u);
  }
}

id sub_1000ADEA0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 valueForProperty:NRDevicePropertyCSN];
  if ([v4 isEqualToString:*(void *)(a1 + 32)])
  {
    id v5 = [v3 valueForProperty:NRDevicePropertyIsAltAccount];
    id v6 = [v5 BOOLValue];
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

void sub_1000ADF30(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = [WeakRetained profileInstallHelper];

    if (!v6)
    {
      unsigned int v7 = objc_alloc_init(COSProfileInstallHelper);
      [v5 setProfileInstallHelper:v7];
    }
    id v8 = [v5 profileInstallHelper];
    [v8 setPresentFromController:v3];

    v5[9] = 1;
    BOOL v9 = [v5 profileInstallHelper];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    _DWORD v10[2] = sub_1000AE094;
    v10[3] = &unk_100244378;
    objc_copyWeak(&v12, (id *)(a1 + 40));
    id v11 = *(id *)(a1 + 32);
    [v9 selectDeviceIfNecessaryWithCompletionBlock:v10];

    objc_destroyWeak(&v12);
  }
}

void sub_1000AE080(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000AE094(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    WeakRetained[9] = 0;
    if (!a2)
    {
LABEL_18:
      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
      goto LABEL_19;
    }
    id v6 = [WeakRetained profileInstallHelper];
    unsigned int v7 = [v6 presentFromController];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    BOOL v9 = [v5 profileInstallHelper];
    id v10 = [v9 presentFromController];
    id v11 = v10;
    if (isKindOfClass)
    {
      uint64_t v12 = [v10 topViewController];
    }
    else
    {
      objc_opt_class();
      char v13 = objc_opt_isKindOfClass();

      BOOL v9 = [v5 profileInstallHelper];
      uint64_t v14 = [v9 presentFromController];
      id v11 = v14;
      if ((v13 & 1) == 0)
      {
LABEL_8:

        if ([v11 isMemberOfClass:objc_opt_class()])
        {
          id v16 = [v11 currentBackButtonBehavior];
          BOOL v17 = pbb_bridge_log();
          long long v18 = v17;
          if (v16)
          {
            if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
            {
              int v20 = 134217984;
              id v21 = [v11 currentBackButtonBehavior];
              _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "COSPairedDeviceListViewController can not be dismissed : %lu", (uint8_t *)&v20, 0xCu);
            }
          }
          else
          {
            if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
            {
              LOWORD(v20) = 0;
              _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Found a list view and it's able to be dismissed, dismissing", (uint8_t *)&v20, 2u);
            }

            long long v18 = [v5 rootViewController];
            id v19 = [v18 presentedViewController];
            [v19 dismissViewControllerAnimated:1 completion:0];
          }
        }

        goto LABEL_18;
      }
      uint64_t v12 = [v14 selectedViewController];
    }
    id v15 = (void *)v12;

    id v11 = v15;
    goto LABEL_8;
  }
LABEL_19:
}

void sub_1000AE304(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  uint64_t v4 = [WeakRetained updateController];

  if (!v4)
  {
    id v5 = objc_opt_new();
    [WeakRetained setUpdateController:v5];
  }
  id v6 = [WeakRetained updateController];
  unsigned int v7 = -[COSTinkerHealthSharingSetupDelegate tinkerDevice]_0();
  [v6 presentModalForDevice:v7 userForcedUpdate:0 withController:v3 unpairOnExit:0 launchedForTerms:1 animated:1 completion:0];
}

void sub_1000AEA80(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) navigationController];
  id v1 = [v2 popToRootViewControllerAnimated:0];
}

void sub_1000AEF04(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v6 = [v7 popToRootViewControllerAnimated:*(unsigned __int8 *)(a1 + 32)];
    *a4 = 1;
  }
}

void sub_1000AF05C(void *a1, uint64_t a2, int a3, intptr_t a4)
{
  id v6 = a1;
  io_connect_t v7 = dword_10029B188;
  id v9 = v6;
  if (!dword_10029B188)
  {
    io_connect_t v7 = [v6 rootDomainConnect];
    id v6 = v9;
    dword_10029B188 = v7;
  }
  if (a3 != -536870288)
  {
    if (a3 == -536870144)
    {
      id v8 = +[NSNotificationCenter defaultCenter];
      [v8 postNotificationName:@"PreferencesSystemDidWake" object:0 userInfo:0];

      goto LABEL_8;
    }
    if (a3 != -536870272) {
      goto LABEL_9;
    }
  }
  IOAllowPowerChange(v7, a4);
LABEL_8:
  id v6 = v9;
LABEL_9:
}

id sub_1000AF94C(uint64_t a1)
{
  id v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Presented 'transport became unreachable' alert- user chose 'try again'", v4, 2u);
  }

  return [*(id *)(*(void *)(a1 + 32) + 328) resetTransportReachabilityTimer];
}

id sub_1000AF9CC(uint64_t a1)
{
  id v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Presented 'transport became unreachable' alert- user chose 'reset pairing'", v4, 2u);
  }

  return [*(id *)(a1 + 32) unpairOrResetBuddyForEvent:46];
}

void sub_1000AFE9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
    uint64_t v4 = +[UIApplication sharedApplication];
    [v4 setNetworkActivityIndicatorVisible:1];

    uint64_t v1 = *(void *)(a1 + 32);
    uint64_t v2 = *(void *)(v1 + 16);
  }
  *(void *)(v1 + 16) = v2 + 1;
}

void sub_1000AFF7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2 < 2)
  {
    if (v2 == 1)
    {
      dispatch_time_t v4 = dispatch_time(0, 500000000);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1000B003C;
      block[3] = &unk_1002438A0;
      void block[4] = *(void *)(a1 + 32);
      dispatch_after(v4, (dispatch_queue_t)&_dispatch_main_q, block);
    }
  }
  else
  {
    *(void *)(v1 + 16) = v2 - 1;
  }
}

void sub_1000B003C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2 < 2)
  {
    if (v2 == 1)
    {
      *(void *)(v1 + 16) = 0;
      id v3 = +[UIApplication sharedApplication];
      [v3 setNetworkActivityIndicatorVisible:0];
    }
  }
  else
  {
    *(void *)(v1 + 16) = v2 - 1;
  }
}

void sub_1000B06B0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_1000B06D4(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  dispatch_time_t v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = *(void **)(a1 + 32);
    id v6 = [WeakRetained unpairingVC];
    uint64_t v7 = *(unsigned __int8 *)(a1 + 48);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1000B07E0;
    v8[3] = &unk_100243D28;
    objc_copyWeak(&v10, v2);
    id v9 = *(id *)(a1 + 32);
    [v5 presentViewController:v6 animated:v7 completion:v8];

    objc_destroyWeak(&v10);
  }
}

void sub_1000B07CC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000B07E0(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    dispatch_time_t v4 = pbb_bridge_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      uint64_t v9 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Presented Unpairing UI using: %@", buf, 0xCu);
    }

    if ([WeakRetained dismissUnpairUIOnPresentation])
    {
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      v6[2] = sub_1000B093C;
      void v6[3] = &unk_1002439E0;
      objc_copyWeak(&v7, v2);
      [WeakRetained dismissUnpairingViewControllerAnimated:1 withCompletion:v6];
      objc_destroyWeak(&v7);
    }
  }
}

void sub_1000B0920(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000B093C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = pbb_bridge_log();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Dismissed Unpairing UI", v3, 2u);
    }

    [WeakRetained setDismissUnpairUIOnPresentation:0];
  }
}

id sub_1000B09C4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) presentedViewController];

  if (v2)
  {
    id v3 = pbb_bridge_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      dispatch_time_t v4 = [*(id *)(a1 + 32) presentedViewController];
      int v7 = 136315394;
      id v8 = "-[COSPreferencesAppController presentUnpairingViewControllerAnimated:]_block_invoke";
      __int16 v9 = 2112;
      id v10 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s: Dismissing: %@", (uint8_t *)&v7, 0x16u);
    }
    return [*(id *)(a1 + 32) dismissViewControllerAnimated:*(unsigned __int8 *)(a1 + 48) completion:*(void *)(a1 + 40)];
  }
  else
  {
    id v6 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
    return (id)v6();
  }
}

void sub_1000B0B04(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    dispatch_time_t v4 = pbb_bridge_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Completed dismissing Unpairing UI", buf, 2u);
    }

    [WeakRetained _refreshShortCuts];
    [WeakRetained setUnpairingVC:0];
    [WeakRetained setPendingUnpairUIPresentation:0];
    [WeakRetained setDismissUnpairUIOnPresentation:0];
    [WeakRetained setPendingUnpairingVCDismissal:0];
    if ([WeakRetained _devicePickerBeingPresented])
    {
      uint64_t v5 = [WeakRetained devicePickerNavigationController];
      id v6 = [v5 viewControllers];

      if ([v6 count])
      {
        int v7 = [WeakRetained devicePickerNavigationController];
        id v8 = [v6 objectAtIndexedSubscript:0];
        id v26 = v8;
        __int16 v9 = +[NSArray arrayWithObjects:&v26 count:1];
        [v7 setViewControllers:v9 animated:0];
      }
    }
    id v10 = -[COSTinkerHealthSharingSetupDelegate tinkerDevice]_0();
    BOOL v11 = v10 == 0;

    if (v11)
    {
      char v13 = sub_100014784();
      BOOL v14 = [v13 count] == 0;

      if (v14)
      {
        id v15 = [WeakRetained rootViewController];
        id v16 = [v15 presentedViewController];

        if ([WeakRetained _devicePickerBeingPresented])
        {
          BOOL v17 = pbb_bridge_log();
          if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136315138;
            long long v25 = "-[COSPreferencesAppController dismissUnpairingViewControllerAnimated:withCompletion:]_block_invoke";
            _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "%s. Dismissing empty device picker after unpairUI dismissal", buf, 0xCu);
          }

          long long v18 = [WeakRetained rootViewController];
          v21[0] = _NSConcreteStackBlock;
          v21[1] = 3221225472;
          v21[2] = sub_1000B0ED4;
          v21[3] = &unk_100245690;
          objc_copyWeak(&v23, v2);
          id v22 = *(id *)(a1 + 32);
          [v18 dismissViewControllerAnimated:v16 != 0 completion:v21];

          objc_destroyWeak(&v23);
        }
        else
        {
          [WeakRetained _schedulePendingAppDelegateIfPresent];
          uint64_t v20 = *(void *)(a1 + 32);
          if (v20) {
            (*(void (**)(void))(v20 + 16))();
          }
        }
      }
      else
      {
        if ([WeakRetained _devicePickerBeingPresented])
        {
          [WeakRetained _schedulePendingAppDelegateIfPresent];
          uint64_t v12 = *(void *)(a1 + 32);
          if (!v12) {
            goto LABEL_25;
          }
          goto LABEL_10;
        }
        id v19 = pbb_bridge_log();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Requesting device Picker UI after dismissing Unpairing UI", buf, 2u);
        }

        [WeakRetained presentDevicePicker];
      }
    }
    else
    {
      [WeakRetained _schedulePendingAppDelegateIfPresent];
      uint64_t v12 = *(void *)(a1 + 32);
      if (v12) {
LABEL_10:
      }
        (*(void (**)(void))(v12 + 16))();
    }
  }
LABEL_25:
}

void sub_1000B0EB8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000B0ED4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    [WeakRetained _schedulePendingAppDelegateIfPresent];
    id v3 = v5;
    uint64_t v4 = *(void *)(a1 + 32);
    if (v4)
    {
      (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);
      id v3 = v5;
    }
  }
}

id sub_1000B1398(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateActiveWatch:0];
}

uint64_t sub_1000B13A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1000B1458(uint64_t a1, void *a2)
{
  return [a2 presentViewController:*(void *)(a1 + 32) animated:1 completion:0];
}

void sub_1000B152C(uint64_t a1, int a2)
{
  if (a2)
  {
    if (*(unsigned char *)(a1 + 48))
    {
      id v3 = (void *)UIApp;
      uint64_t v4 = *(unsigned __int8 *)(a1 + 49);
      _[v3 tappedStartForMode:1 withAnimation:v4];
    }
    else
    {
      id v5 = (id *)(a1 + 32);
      id v6 = [*(id *)(a1 + 32) code];
      if ((unint64_t)v6 <= 3
        && (id v7 = v6,
            [*v5 domain],
            id v8 = objc_claimAutoreleasedReturnValue(),
            unsigned int v9 = [v8 isEqualToString:@"com.apple.Bridge-QuickSwitchPairing"],
            v8,
            v9))
      {
        switch((unint64_t)v7)
        {
          case 0uLL:
            id v10 = +[NSBundle mainBundle];
            BOOL v11 = v10;
            CFStringRef v12 = @"INCOMPATIBLE_WATCH_TITLE";
            goto LABEL_17;
          case 1uLL:
            id v10 = +[NSBundle mainBundle];
            BOOL v11 = v10;
            CFStringRef v12 = @"MAX_WATCH_TITLE";
            goto LABEL_17;
          case 2uLL:
            id v10 = +[NSBundle mainBundle];
            BOOL v11 = v10;
            CFStringRef v12 = @"FROZEN_FOR_RETAIL_DEMO_TITLE";
            goto LABEL_17;
          case 3uLL:
            id v10 = +[NSBundle mainBundle];
            BOOL v11 = v10;
            CFStringRef v12 = @"MAX_PAIRING_FOR_RETAIL_DEMO_TITLE";
LABEL_17:
            uint64_t v20 = [v10 localizedStringForKey:v12 value:&stru_100249230 table:@"Pairing"];

            break;
          default:
            uint64_t v20 = 0;
            break;
        }
        switch((unint64_t)v7)
        {
          case 0uLL:
            id v21 = +[NSBundle mainBundle];
            id v22 = v21;
            CFStringRef v23 = @"INCOMPATIBLE_WATCH_MESSAGE";
            goto LABEL_24;
          case 1uLL:
            id v22 = +[NSBundle mainBundle];
            id v41 = [v22 localizedStringForKey:@"MAX_WATCH_MESSAGE_TINKER" value:&stru_100249230 table:@"Localizable-tinker"];
            int v42 = +[NRPairedDeviceRegistry sharedInstance];
            uint64_t v40 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v42 maxPairedDeviceCount]);
            long long v25 = +[NSNumberFormatter localizedStringFromNumber:v40 numberStyle:0];
            id v26 = +[NRPairedDeviceRegistry sharedInstance];
            id v27 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v26 maxTinkerPairedDeviceCount]);
            id v28 = +[NSNumberFormatter localizedStringFromNumber:v27 numberStyle:0];
            id v24 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v41, v25, v28);

            goto LABEL_25;
          case 2uLL:
            id v21 = +[NSBundle mainBundle];
            id v22 = v21;
            CFStringRef v23 = @"FROZEN_FOR_RETAIL_DEMO";
            goto LABEL_24;
          case 3uLL:
            id v21 = +[NSBundle mainBundle];
            id v22 = v21;
            CFStringRef v23 = @"MAX_PAIRING_FOR_RETAIL_DEMO";
LABEL_24:
            id v24 = [v21 localizedStringForKey:v23 value:&stru_100249230 table:@"Pairing"];
LABEL_25:

            if (v20 && v24)
            {
              char v29 = +[UIAlertController alertControllerWithTitle:v20 message:v24 preferredStyle:1];
              __int16 v30 = +[NSBundle mainBundle];
              id v31 = v30;
              if (v7)
              {
                __int16 v32 = [v30 localizedStringForKey:@"OK" value:&stru_100249230 table:@"Localizable"];
                uint64_t v33 = +[UIAlertAction actionWithTitle:v32 style:1 handler:&stru_100246290];
                [v29 addAction:v33];
              }
              else
              {
                uint64_t v34 = [v30 localizedStringForKey:@"INCOMPATIBLE_WATCH_ACTION_UPDATE_NOW" value:&stru_100249230 table:@"Pairing"];
                uint64_t v35 = +[UIAlertAction actionWithTitle:v34 style:0 handler:&stru_100246250];

                [v29 addAction:v35];
                [v29 setPreferredAction:v35];
                __int16 v32 = +[NSBundle mainBundle];
                uint64_t v33 = [v32 localizedStringForKey:@"INCOMPATIBLE_WATCH_ACTION_UPDATE_LATER" value:&stru_100249230 table:@"Pairing"];
                __int16 v36 = +[UIAlertAction actionWithTitle:v33 style:1 handler:&stru_100246270];
                [v29 addAction:v36];

                id v31 = (void *)v35;
              }

              id v37 = pbb_setupflow_log();
              if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, "Presenting new pairing flow alert", buf, 2u);
              }

              unsigned int v38 = *(void **)(a1 + 40);
              v43[0] = _NSConcreteStackBlock;
              v43[1] = 3221225472;
              v43[2] = sub_1000B1C78;
              v43[3] = &unk_100245DD0;
              id v44 = v29;
              id v39 = v29;
              [v38 presentingControllerForModalByDismissingTopAlertIfPresentWithCompletion:v43];
            }
            break;
          default:
            id v24 = 0;
            break;
        }
      }
      else
      {
        char v13 = pbb_setupflow_log();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
          sub_100173BD8((uint64_t)v5, v13, v14, v15, v16, v17, v18, v19);
        }
      }
    }
  }
}

void sub_1000B1B3C(id a1, UIAlertAction *a2)
{
  uint64_t v2 = (void *)UIApp;
  +[NSURL URLWithString:@"root=GENERAL_LINK&path=SOFTWARE_UPDATE_LINK"];
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [v2 processURL:v3];
}

void sub_1000B1BA8(id a1, UIAlertAction *a2)
{
  uint64_t v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Dismissed 'Update Paired Watch First Before Can Pair Additional' Alert", v3, 2u);
  }
}

void sub_1000B1C10(id a1, UIAlertAction *a2)
{
  uint64_t v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Dismissed 'Max Device' Alert", v3, 2u);
  }
}

id sub_1000B1C78(uint64_t a1, void *a2)
{
  return [a2 presentViewController:*(void *)(a1 + 32) animated:1 completion:0];
}

void sub_1000B1D64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000B1D7C(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = pbb_bridge_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = +[NSNumber numberWithBool:v2];
    int v5 = 138412290;
    id v6 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "playSoundOnCompanionWithCompletion %@", (uint8_t *)&v5, 0xCu);
  }
}

void sub_1000B208C(uint64_t a1)
{
  v32[0] = NSForegroundColorAttributeName;
  BOOL v2 = +[UIColor whiteColor];
  v33[0] = v2;
  v32[1] = NSFontAttributeName;
  id v3 = +[UIFont monospacedSystemFontOfSize:11.0 weight:UIFontWeightRegular];
  v33[1] = v3;
  uint64_t v4 = +[NSDictionary dictionaryWithObjects:v33 forKeys:v32 count:2];

  [*(id *)(a1 + 32) sizeWithAttributes:v4];
  double v6 = v5;
  double v8 = v7;
  double y = CGPointZero.y;
  id v10 = (NSMutableData *)objc_opt_new();
  v34.origin.double x = CGPointZero.x;
  v34.origin.double y = y;
  v34.size.width = v6;
  v34.size.double height = v8;
  UIGraphicsBeginPDFContextToData(v10, v34, 0);
  v35.origin.double x = CGPointZero.x;
  v35.origin.double y = y;
  v35.size.width = v6;
  v35.size.double height = v8;
  UIGraphicsBeginPDFPageWithInfo(v35, 0);
  BOOL v11 = +[UIColor blackColor];
  [v11 setFill];

  CurrentContext = UIGraphicsGetCurrentContext();
  v36.origin.double x = CGPointZero.x;
  v36.origin.double y = y;
  v36.size.width = v6;
  v36.size.double height = v8;
  CGContextFillRect(CurrentContext, v36);
  id v24 = (void *)v4;
  [*(id *)(a1 + 32) drawInRect:v4 withAttributes:CGPointZero.x, y, v6, v8];
  UIGraphicsEndPDFContext();
  char v13 = pbb_bridge_log();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "BridgeLVH: Logging view hierarchy on screenshot ------------", buf, 2u);
  }

  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  uint64_t v14 = *(void **)(a1 + 32);
  uint64_t v15 = +[NSCharacterSet newlineCharacterSet];
  uint64_t v16 = [v14 componentsSeparatedByCharactersInSet:v15];

  id v17 = [v16 countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = *(void *)v26;
    do
    {
      for (i = 0; i != v18; i = (char *)i + 1)
      {
        if (*(void *)v26 != v19) {
          objc_enumerationMutation(v16);
        }
        uint64_t v21 = *(void *)(*((void *)&v25 + 1) + 8 * i);
        id v22 = pbb_bridge_log();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          uint64_t v30 = v21;
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "BridgeLVH: %@", buf, 0xCu);
        }
      }
      id v18 = [v16 countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v18);
  }

  CFStringRef v23 = pbb_bridge_log();
  if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "BridgeLVH: Done logging view hierarchy ---------------------", buf, 2u);
  }

  (*(void (**)(double, double, double, double))(*(void *)(a1 + 40) + 16))(CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height);
}

void sub_1000B2BE0(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isActivelyPairing]
    && ([*(id *)(a1 + 32) syncTrapUIEnabled] & 1) == 0
    && ([*(id *)(a1 + 32) syncTrapUICompleted] & 1) == 0)
  {
    id v3 = [*(id *)(a1 + 32) setupController];
    BOOL v2 = [v3 linkUpgradeMonitor];
    [v2 requestLinkUpgrade];
  }
}

void sub_1000B327C(uint64_t a1)
{
  BOOL v2 = [*(id *)(*(void *)(a1 + 32) + 104) topViewController];
  id v3 = pbb_bridge_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v19 = 138412290;
    *(void *)uint64_t v20 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "top controller: %@", (uint8_t *)&v19, 0xCu);
  }

  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  double v5 = sub_100014784();
  id v6 = [v5 count];

  BOOL v8 = v6
    && ([*(id *)(a1 + 32) launchedToTest] & 1) == 0
    && (sub_100005814() & 1) == 0
    && (uint64_t v7 = *(void *)(a1 + 32), !((*(unsigned char *)(v7 + 9) != 0) | isKindOfClass & 1))
    && *(void *)(v7 + 176) == 0;
  unsigned int v9 = pbb_bridge_log();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v10 = [*(id *)(a1 + 32) launchedToTest] ^ 1;
    unsigned int v11 = sub_100005814();
    uint64_t v12 = *(void *)(a1 + 32);
    BOOL v13 = *(unsigned char *)(v12 + 9) == 0;
    LODWORD(v12) = *(void *)(v12 + 176) == 0;
    int v19 = 67110656;
    *(_DWORD *)uint64_t v20 = v8;
    *(_WORD *)&v20[4] = 1024;
    *(_DWORD *)&v20[6] = v6 != 0;
    __int16 v21 = 1024;
    unsigned int v22 = v10;
    __int16 v23 = 1024;
    int v24 = v11 ^ 1;
    __int16 v25 = 1024;
    BOOL v26 = v13;
    __int16 v27 = 1024;
    BOOL v28 = (isKindOfClass & 1) == 0;
    __int16 v29 = 1024;
    int v30 = v12;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Device became inactive shouldShowDevicePicker: %i (hasDevices: %{BOOL}d  !launchedToTest: %{BOOL}d !COSSkipSetupFlow: %{BOOL}d !_processingProfileURL: %{BOOL}d !isShowingSWUController: %{BOOL}d !_unpairingVC: %{BOOL}d)", (uint8_t *)&v19, 0x2Cu);
  }

  if (v8)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v15 = +[NSURL URLWithString:@"root=ActiveWatch"];
    uint64_t v16 = sub_10000DCF4();
    if (v16) {
      BOOL v17 = 1;
    }
    else {
      BOOL v17 = !sub_100012810();
    }
    [WeakRetained processURL:v15 animated:v17 fromSearch:0];
  }
  id v18 = objc_loadWeakRetained((id *)(a1 + 40));
  [v18 _allowInteractionsWithSettingsControllers:1];
}

void sub_1000B3534(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _allowInteractionsWithSettingsControllers:1];
}

void sub_1000B3810(uint64_t a1)
{
  BOOL v2 = pbb_mobileasset_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Pulled Assets for %@!", (uint8_t *)&v5, 0xCu);
  }

  uint64_t v4 = [*(id *)(a1 + 40) discoveryAssetPullRequests];
  [v4 setObject:0 forKeyedSubscript:*(void *)(a1 + 32)];
}

void sub_1000B3D74(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) setupController];
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = [*(id *)(a1 + 32) setupController];
    if ([v4 mode] == (id)3)
    {

LABEL_5:
      uint64_t v7 = pbb_bridge_log();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        BOOL v8 = [*(id *)(a1 + 32) setupController];
        unsigned int v9 = [*(id *)(a1 + 32) setupController];
        id v10 = [v9 mode];
        unsigned int v11 = [*(id *)(a1 + 32) setupController];
        v13[0] = 67109632;
        v13[1] = v8 != 0;
        __int16 v14 = 2048;
        id v15 = v10;
        __int16 v16 = 1024;
        unsigned int v17 = [v11 hasStartedPairing];
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Skipping presentation of sync pane. setupController: %{BOOL}d mode: %lu hasStartedPairing: %{BOOL}d", (uint8_t *)v13, 0x18u);
      }
      return;
    }
    int v5 = [*(id *)(a1 + 32) setupController];
    unsigned __int8 v6 = [v5 hasStartedPairing];

    if (v6) {
      goto LABEL_5;
    }
  }
  uint64_t v12 = *(void **)(a1 + 32);

  _[v12 tappedStartForMode:3 withAnimation:1];
}

uint64_t sub_1000B3F40(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1000B40E0(uint64_t a1)
{
  uint64_t v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 56)];
    int v8 = 138412546;
    uint64_t v9 = v3;
    __int16 v10 = 2112;
    unsigned int v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "globalAlertPresentationCoordinator:presentAlert:withCompletion: (COSGlobalAlertPresentationCoordinator: %@ COSGlobalAlertType: %@)", (uint8_t *)&v8, 0x16u);
  }
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5 == 1)
  {
    [*(id *)(a1 + 40) presentUnpairingViewControllerAnimated:1];
  }
  else if (v5)
  {
    unsigned __int8 v6 = pbb_bridge_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v8) = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "ERROR: globalAlertPresentationCoordinator:presentAlert:withCompletion: Unhandled COSGlobalAlertType!", (uint8_t *)&v8, 2u);
    }
  }
  else
  {
    [*(id *)(a1 + 40) _showInitialSyncPaneIfNotAlreadyShowing];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1000B42EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2 == 1)
  {
    [*(id *)(a1 + 32) dismissUnpairingViewControllerAnimated:1];
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v3 = pbb_bridge_log();
    if (!os_log_type_enabled(v3, OS_LOG_TYPE_ERROR) || !os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_10;
    }
    LOWORD(v10) = 0;
    uint64_t v5 = "ERROR: globalAlertPresentationCoordinator:dismissAlert:withCompletion: Unhandled COSGlobalAlertType!";
    unsigned __int8 v6 = v3;
    uint32_t v7 = 2;
    goto LABEL_9;
  }
  uint64_t v3 = pbb_bridge_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 48);
    int v10 = 134217984;
    uint64_t v11 = v4;
    uint64_t v5 = "received dismissal for alertType: %lu";
    unsigned __int8 v6 = v3;
    uint32_t v7 = 12;
LABEL_9:
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v5, (uint8_t *)&v10, v7);
  }
LABEL_10:

LABEL_11:
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, v8);
  }
  return result;
}

void sub_1000B44F0(uint64_t a1)
{
  id v1 = +[RPTScrollViewTestParameters newWithTestName:*(void *)(a1 + 32) scrollView:*(void *)(a1 + 40) completionHandler:0];
  +[RPTTestRunner runTestWithParameters:v1];
}

void sub_1000B45D0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint32_t v7 = pbb_accountsignin_log();
  uint64_t v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_100173C48((uint64_t)v6, v8);
    }
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315394;
      uint64_t v12 = "-[COSPreferencesAppController _updateAppStoreRowForRepair]_block_invoke";
      __int16 v13 = 2112;
      id v14 = v5;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%s AMSDeviceMessenger Results (%@)", buf, 0x16u);
    }

    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    id v9[2] = sub_1000B4740;
    v9[3] = &unk_100243908;
    void v9[4] = *(void *)(a1 + 32);
    id v10 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v9);
  }
}

void sub_1000B4740(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) settingsListController];
  uint64_t v3 = [v2 specifierForID:@"com.apple.BridgeAppStoreDaemonSettings"];
  uint64_t v4 = pbb_accountsignin_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [*(id *)(a1 + 40) count]);
    int v7 = 136315650;
    uint64_t v8 = "-[COSPreferencesAppController _updateAppStoreRowForRepair]_block_invoke";
    __int16 v9 = 2112;
    id v10 = v3;
    __int16 v11 = 2112;
    uint64_t v12 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s AMSDeviceMessenger storeCell (%@) count: %@", (uint8_t *)&v7, 0x20u);
  }
  if ([*(id *)(a1 + 40) count])
  {
    id v6 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [*(id *)(a1 + 40) count]);
    [v3 setProperty:v6 forKey:PSBadgeNumberKey];
  }
  else
  {
    [v3 setProperty:0 forKey:PSBadgeNumberKey];
  }
  [v2 reloadSpecifier:v3];
}

void sub_1000B4AB4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v7 = a2;
  id v8 = a4;
  __int16 v9 = pbb_accountsignin_log();
  id v10 = v9;
  if (a3 && v7 && !v8)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 136315394;
      uint64_t v12 = "-[COSPreferencesAppController deviceSpecificRepairSteps:]_block_invoke";
      __int16 v13 = 2112;
      id v14 = v7;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "%s Found: %@", (uint8_t *)&v11, 0x16u);
    }

    [*(id *)(a1 + 32) _updateAppStoreRowForRepair];
  }
  else
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100173CD4();
    }
  }
}

void sub_1000B52C4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = [*(id *)(a1 + 40) activeWatchAssertion];
  uint64_t v4 = [v3 device];

  if (v2 == v4)
  {
    id v5 = *(void **)(a1 + 40);
    [v5 checkIDSReachability];
  }
}

id sub_1000B5498()
{
  uint64_t v0 = +[NSBundle mainBundle];
  id v1 = [v0 localizedStringForKey:@"GENERIC_QWS_FAILURE_TITLE" value:&stru_100249230 table:@"Pairing"];

  return v1;
}

id sub_1000B56F8(uint64_t a1, void *a2)
{
  return [a2 presentViewController:*(void *)(a1 + 32) animated:1 completion:0];
}

void sub_1000B591C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v5)
  {
    id v10 = pbb_bridge_log();
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
LABEL_15:

      goto LABEL_16;
    }
    int v11 = [*(id *)(a1 + 40) _bridgeConciseDebugDescription];
    *(_DWORD *)buf = 138412290;
    id v23 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Switched to Device -> %@", buf, 0xCu);
LABEL_14:

    goto LABEL_15;
  }
  int v7 = *(unsigned __int8 *)(a1 + 56);
  id v8 = pbb_bridge_log();
  __int16 v9 = v8;
  if (!v7)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v23 = v5;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Failed to Switch Devices! %@", buf, 0xCu);
    }

    id v10 = sub_1000B5498();
    uint64_t v12 = +[NSBundle mainBundle];
    int v11 = [v12 localizedStringForKey:@"GENERIC_QWS_FAILURE_MESSAGE" value:&stru_100249230 table:@"Pairing"];

    if (v10 && v11)
    {
      __int16 v13 = +[UIAlertController alertControllerWithTitle:v10 message:v11 preferredStyle:1];
      id v14 = +[NSBundle mainBundle];
      id v15 = [v14 localizedStringForKey:@"OK" value:&stru_100249230 table:@"Localizable"];
      __int16 v16 = +[UIAlertAction actionWithTitle:v15 style:1 handler:&stru_100246370];
      [v13 addAction:v16];

      unsigned int v17 = *(void **)(a1 + 32);
      v20[0] = _NSConcreteStackBlock;
      v20[1] = 3221225472;
      v20[2] = sub_1000B5CD0;
      v20[3] = &unk_100245DD0;
      id v21 = v13;
      id v18 = v13;
      [v17 presentingControllerForModalByDismissingTopAlertIfPresentWithCompletion:v20];
    }
    goto LABEL_14;
  }
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v23 = v5;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Failed to switch to an alt account device! %@", buf, 0xCu);
  }

  [*(id *)(a1 + 32) _showTinkerSwitchFailureModalForDevice:*(void *)(a1 + 40)];
LABEL_16:
  if (*(unsigned char *)(a1 + 56)) {
    [*(id *)(a1 + 32) setActiveWatchAssertion:v6];
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 74) = 0;
  uint64_t v19 = *(void *)(a1 + 48);
  if (v19) {
    (*(void (**)(uint64_t, id))(v19 + 16))(v19, [v6 isActive]);
  }
}

void sub_1000B5C68(id a1, UIAlertAction *a2)
{
  uint64_t v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Dismissed Quick Watch Switch Failure Alert", v3, 2u);
  }
}

id sub_1000B5CD0(uint64_t a1, void *a2)
{
  return [a2 presentViewController:*(void *)(a1 + 32) animated:1 completion:0];
}

Class sub_1000B6FD4(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_10029B198)
  {
    v4[1] = _NSConcreteStackBlock;
    void v4[2] = 3221225472;
    v4[3] = sub_1000B7118;
    void v4[4] = &unk_1002436E0;
    void v4[5] = v4;
    long long v5 = off_1002463B8;
    uint64_t v6 = 0;
    qword_10029B198 = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!qword_10029B198)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("NFMWhereIsMyCompanionConnection");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)sub_100173D3C();
LABEL_8:
    free(v2);
  }
  qword_10029B190 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1000B7118()
{
  uint64_t result = _sl_dlopen();
  qword_10029B198 = result;
  return result;
}

void sub_1000B82C0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000B836C;
  v8[3] = &unk_1002444A8;
  id v6 = *(id *)(a1 + 32);
  id v9 = v5;
  id v10 = v6;
  id v7 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v8);
}

uint64_t sub_1000B836C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(result + 16))(result, 1, *(void *)(a1 + 32));
  }
  return result;
}

uint64_t sub_1000B87C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, BOOL))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), a3 == 0);
}

void sub_1000B9834(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (PBLogPerformanceMetrics())
  {
    uint64_t v4 = +[PBBridgeResponsePerformanceMonitor shareMonitor];
    [v4 endMacroActivity:PBBridgeTinkerBackupActivityName beginTime:CFAbsoluteTimeGetCurrent()];
    double v6 = v5;

    +[PBBridgeCAReporter pushTimingType:10 withValue:v6];
  }
  if ([v3 count])
  {
    id v7 = *(void **)(a1 + 32);
    id v8 = [v7 removeIncompatibleBackups:v3];
    uint64_t v9 = [v7 sortBackups:v8];
    uint64_t v10 = *(void *)(a1 + 32);
    int v11 = *(void **)(v10 + 64);
    *(void *)(v10 + 64) = v9;

    *(unsigned char *)(*(void *)(a1 + 32) + 14) = 1;
  }
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 48));

  if (WeakRetained)
  {
    id v13 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 48));
    id v14 = v13;
    if (*(unsigned char *)(*(void *)(a1 + 32) + 14)) {
      uint64_t v15 = 1;
    }
    else {
      uint64_t v15 = 2;
    }
    [v13 backupsChanged:v15];
  }
  else
  {
    __int16 v16 = pbb_setupflow_log();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)unsigned int v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Tinker Backups changed but no delegate", v17, 2u);
    }
  }
}

void sub_1000B99AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(unsigned char *)(*(void *)(a1 + 32) + 11) = 1;
  id v4 = [v3 count];
  double v5 = *(id **)(a1 + 32);
  if (v4)
  {
    uint64_t v6 = [v5[8] arrayByAddingObjectsFromArray:v3];

    id v7 = *(void **)(a1 + 32);
    id v8 = [v7 removeIncompatibleBackups:v6];
    uint64_t v9 = [v7 sortBackups:v8];
    uint64_t v10 = *(void *)(a1 + 32);
    int v11 = *(void **)(v10 + 64);
    *(void *)(v10 + 64) = v9;

    id v3 = (id)v6;
  }
  else
  {
    uint64_t v12 = [v5 pairedDevices];
    id v13 = [v12 count];

    if (!v13) {
      goto LABEL_5;
    }
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 14) = 1;
LABEL_5:
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 48));

  uint64_t v15 = pbb_setupflow_log();
  BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);
  if (WeakRetained)
  {
    if (v16)
    {
      int v17 = *(unsigned __int8 *)(*(void *)(a1 + 32) + 14);
      v20[0] = 67109120;
      v20[1] = v17;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Local Backups changed, calling delegate with found: %d", (uint8_t *)v20, 8u);
    }

    id v18 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 48));
    uint64_t v15 = v18;
    if (*(unsigned char *)(*(void *)(a1 + 32) + 14)) {
      uint64_t v19 = 1;
    }
    else {
      uint64_t v19 = 2;
    }
    [v18 backupsChanged:v19];
  }
  else if (v16)
  {
    LOWORD(v20[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Local Backups changed but no delegate", (uint8_t *)v20, 2u);
  }
}

void sub_1000B9FF0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = v3;
  if (!v3)
  {
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 24), *(id *)(a1 + 40));
    id v4 = [UIApp setupController];
    [v4 setBackupRestoredFrom:*(void *)(a1 + 40)];
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 40), *(id *)(a1 + 48));

    id v3 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5)
  {
    (*(void (**)(uint64_t, id))(v5 + 16))(v5, v6);
    id v3 = v6;
  }
}

void sub_1000BA184(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = v3;
  if (!v3)
  {
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 32), *(id *)(a1 + 40));
    id v4 = [UIApp setupController];
    [v4 setDeviceRestoredFrom:*(void *)(*(void *)(a1 + 32) + 32)];
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 40), *(id *)(a1 + 48));

    id v3 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5)
  {
    (*(void (**)(uint64_t, id))(v5 + 16))(v5, v6);
    id v3 = v6;
  }
}

int64_t sub_1000BA938(id a1, NBBackup *a2, NBBackup *a3)
{
  id v4 = a3;
  uint64_t v5 = [(NBBackup *)a2 lastModificationDate];
  id v6 = [(NBBackup *)v4 lastModificationDate];

  id v7 = [v6 compare:v5];
  return (int64_t)v7;
}

int64_t sub_1000BA9F8(id a1, NRDevice *a2, NRDevice *a3)
{
  uint64_t v4 = NRDevicePropertyLastActiveDate;
  uint64_t v5 = a3;
  id v6 = [(NRDevice *)a2 valueForProperty:v4];
  id v7 = [(NRDevice *)v5 valueForProperty:v4];

  id v8 = [v7 compare:v6];
  return (int64_t)v8;
}

BOOL sub_1000BAE74(id a1, NRDevice *a2)
{
  uint64_t v2 = [(NRDevice *)a2 valueForProperty:NRDevicePropertyIsArchived];
  unsigned __int8 v3 = [v2 BOOLValue];

  return v3;
}

uint64_t sub_1000BB0BC()
{
  uint64_t result = _sl_dlopen();
  qword_10029B1C0 = result;
  return result;
}

id sub_1000BB89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _[*(id *)(a1 + 32) handleSignInResultWithStatus:a2 errorDescription:a3 detailedError:a4];
}

id sub_1000BBDF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 32));
  [WeakRetained buddyControllerCancelAnyHold];

  uint64_t v3 = *(void *)(a1 + 32);

  return +[COSSatellitePairingHelper popToLoginControllerFromController:v3];
}

id sub_1000BBF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _[*(id *)(a1 + 32) handleSignInResultWithStatus:a2 errorDescription:a3 detailedError:a4];
}

void sub_1000BC410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000BC430(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _showRadarUI];
}

void sub_1000BCA14(id a1, UIAlertAction *a2)
{
  uint64_t v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "User Reset Buddy from Spinner Page!", v12, 2u);
  }

  uint64_t v3 = [UIApp activeWatch];
  uint64_t v4 = [v3 valueForProperty:NRDevicePropertyIsPaired];
  unsigned int v5 = [v4 BOOLValue];

  unsigned int v6 = v5 | [UIApp isActivated];
  id v7 = pbb_bridge_log();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if (v3) {
    BOOL v9 = v6 == 0;
  }
  else {
    BOOL v9 = 1;
  }
  if (v9)
  {
    if (v8)
    {
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "User Reset Buddy!", v12, 2u);
    }

    [UIApp resetSetupFlowAnimated:1 forEvent:42];
  }
  else
  {
    if (v8)
    {
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "User Reset Buddy! - Unpairing", v12, 2u);
    }

    v13[0] = @"obliterate";
    v13[1] = @"BDE85C67-0FDD-4A95-A9B9-3CB5DD0C06A2";
    v14[0] = &__kCFBooleanTrue;
    v14[1] = &__kCFBooleanTrue;
    uint64_t v10 = +[NSDictionary dictionaryWithObjects:v14 forKeys:v13 count:2];
    int v11 = +[NRPairedDeviceRegistry sharedInstance];
    [v11 unpairWithDevice:v3 withOptions:v10 operationHasBegun:&stru_100246570];
  }
}

void sub_1000BCC00(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = pbb_bridge_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    unsigned int v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "User Reset Buddy! - Unpairing result: (%@)", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1000BCCAC(id a1, UIAlertAction *a2)
{
  uint64_t v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "User Did Not Reset Buddy (at Spinner Page).", v3, 2u);
  }
}

void sub_1000BED74(uint64_t a1)
{
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v2 = [*(id *)(a1 + 32) itemStackView];
  uint64_t v3 = [v2 arrangedSubviews];

  id v4 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v13;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v13 != v6) {
          objc_enumerationMutation(v3);
        }
        BOOL v8 = *(void **)(*((void *)&v12 + 1) + 8 * (void)v7);
        uint64_t v9 = *(unsigned __int8 *)(a1 + 48);
        if (*(unsigned char *)(a1 + 48)) {
          double v10 = 0.0;
        }
        else {
          double v10 = 1.0;
        }
        [*(id *)(*((void *)&v12 + 1) + 8 * (void)v7) setAlpha:v10];
        [v8 setHidden:v9];
        id v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v5);
  }

  int v11 = [*(id *)(a1 + 32) itemStackView];
  [v11 addArrangedSubview:*(void *)(a1 + 40)];
}

id sub_1000BEECC(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeFromSuperview];
}

id sub_1000BFCC4(uint64_t a1)
{
  return [*(id *)(a1 + 32) presentViewController:*(void *)(a1 + 40) animated:1 completion:0];
}

uint64_t sub_1000BFCD8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000BFF20(id a1)
{
  id v1 = pbb_bridge_log();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Dismissed Instructions controller", v2, 2u);
  }
}

id sub_1000C0074()
{
  if (qword_10029B1D0 != -1) {
    dispatch_once(&qword_10029B1D0, &stru_1002465F8);
  }
  uint64_t v0 = (void *)qword_10029B1C8;

  return v0;
}

void sub_1000C00C8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Bridge.DisplayAndBrightness", "utility");
  uint64_t v2 = (void *)qword_10029B1C8;
  qword_10029B1C8 = (uint64_t)v1;
}

id sub_1000C035C(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifiers];
}

void sub_1000C0364(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = [v2 specifierForID:@"BOLD_TEXT"];
  [v2 reloadSpecifier:v3];
}

id sub_1000C03C8(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifiers];
}

id sub_1000C03D0(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifiers];
}

id sub_1000C03D8(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifiers];
}

void sub_1000C0E54(id a1, COSDisplayAndBrightnessController *a2, NSError *a3)
{
}

void sub_1000C1204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C1228(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v5 = sub_1000C0074();
  uint64_t v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_100173D8C(a1, (uint64_t)v3, v6);
    }
  }
  else if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    id v7 = [*(id *)(a1 + 32) domain];
    uint64_t v8 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    BOOL v16 = v7;
    __int16 v17 = 2112;
    uint64_t v18 = v8;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "synchronized %@ %@", buf, 0x16u);
  }
  if (*(void *)(a1 + 40) && WeakRetained)
  {
    uint64_t v9 = (void *)WeakRetained[26];
    double v10 = [*(id *)(a1 + 32) domain];
    [v9 synchronizeNanoDomain:v10 keys:*(void *)(a1 + 40)];
  }
  if (*(void *)(a1 + 48))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000C1418;
    block[3] = &unk_100246660;
    objc_copyWeak(&v14, (id *)(a1 + 56));
    id v13 = *(id *)(a1 + 48);
    id v12 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    objc_destroyWeak(&v14);
  }
}

void sub_1000C1418(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

id sub_1000C1CD0(uint64_t a1)
{
  [*(id *)(a1 + 32) addSubview:*(void *)(*(void *)(a1 + 32) + 32)];
  [*(id *)(a1 + 32) addSubview:*(void *)(*(void *)(a1 + 32) + 40)];
  [*(id *)(*(void *)(a1 + 32) + 32) setAlpha:1.0];
  id v2 = *(void **)(*(void *)(a1 + 32) + 40);

  return [v2 setAlpha:1.0];
}

void sub_1000C1D4C(uint64_t a1)
{
  uint64_t v2 = +[NSTimer scheduledTimerWithTimeInterval:*(void *)(a1 + 32) target:"progressTimerFired:" selector:0 userInfo:1 repeats:1.0];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 48);
  *(void *)(v3 + 48) = v2;
}

id sub_1000C5100(uint64_t a1, void *a2)
{
  return [a2 autoDismissIfNeeded];
}

void sub_1000C567C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) customWatchView];
  [v1 startAnimation];
}

void sub_1000C5F5C(id a1)
{
  id v1 = objc_alloc_init((Class)NSCache);
  uint64_t v2 = (void *)qword_10029B1D8;
  qword_10029B1D8 = (uint64_t)v1;

  [(id)qword_10029B1D8 setEvictsObjectsWhenApplicationEntersBackground:0];
  id v5 = +[NRPairedDeviceRegistry sharedInstance];
  id v3 = [v5 maxPairedDeviceCount];
  id v4 = (char *)[v5 maxTinkerPairedDeviceCount];
  [(id)qword_10029B1D8 setCountLimit:&v4[(void)v3 + 1]];
}

void sub_1000C6E40(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1000C6E64(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (v3)
  {
    uint64_t v6 = [WeakRetained expressPassesQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000C6F7C;
    block[3] = &unk_100243FC0;
    id v10 = v3;
    int v11 = v5;
    id v12 = *(id *)(a1 + 32);
    dispatch_barrier_async(v6, block);
  }
  else
  {
    id v7 = pbb_setupflow_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_100173FC8(v7);
    }

    uint64_t v8 = *(void *)(a1 + 32);
    if (v8) {
      (*(void (**)(void))(v8 + 16))();
    }
  }
}

uint64_t sub_1000C6F7C(uint64_t a1)
{
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v2 = [*(id *)(a1 + 32) setupAssistantCredentials];
  id v3 = [v2 countByEnumeratingWithState:&v15 objects:v21 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v16;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v16 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = [*(id *)(a1 + 32) passSnapshotForCredential:*(void *)(*((void *)&v15 + 1) + 8 * i)];
      }
      id v4 = [v2 countByEnumeratingWithState:&v15 objects:v21 count:16];
    }
    while (v4);
  }

  [*(id *)(a1 + 40) setProvisioningContext:*(void *)(a1 + 32)];
  uint64_t v8 = *(void **)(a1 + 40);
  uint64_t v9 = [v8 provisioningContext];
  [v9 setDelegate:v8];

  id v10 = pbb_setupflow_log();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = [*(id *)(a1 + 40) provisioningContext];
    id v12 = [v11 setupAssistantCredentials];
    id v13 = [v12 count];
    *(_DWORD *)buf = 134217984;
    id v20 = v13;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Completed getting express wallet passes, number of passes = %lu", buf, 0xCu);
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000C7234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000C724C(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) provisioningContext];
  uint64_t v2 = [v5 setupAssistantCredentials];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000C7970(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 buddyControllerReleaseHold:*(void *)(a1 + 32)];
}

void sub_1000C8164(uint64_t a1)
{
  id v11 = +[NSString stringWithFormat:@"%@%@", *(void *)(*(void *)(a1 + 32) + 64), @"@3x.png"];
  id v2 = +[UIImage imageNamed:](UIImage, "imageNamed:");
  if (!v2)
  {
    uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 72);
    id v4 = +[NSBundle bundleForClass:objc_opt_class()];
    id v2 = +[UIImage imageNamed:v3 inBundle:v4];

    if (PBIsInternalInstall())
    {
      if (CFPreferencesGetAppBooleanValue(@"DebugMobileAssetLoading", @"com.apple.Bridge", 0))
      {
        [v2 size];
        UIGraphicsBeginImageContextWithOptions(v13, 0, 0.0);
        [v2 drawAtPoint:0.0, 0.0];
        id v5 = +[UIColor colorWithRed:1.0 green:0.0 blue:0.0 alpha:0.5];
        [v5 setFill];

        [v2 size];
        CGFloat v7 = v6;
        [v2 size];
        v14.size.double height = v8;
        v14.origin.double x = 0.0;
        v14.origin.double y = 0.0;
        v14.size.width = v7;
        UIRectFillUsingBlendMode(v14, kCGBlendModePlusLighter);
        uint64_t v9 = UIGraphicsGetImageFromCurrentImageContext();

        UIGraphicsEndImageContext();
        id v2 = (void *)v9;
      }
    }
  }
  id v10 = [*(id *)(a1 + 32) marketingBannerImage];
  [v10 setImage:v2];
}

void sub_1000C832C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) marketingBannerImage];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1000C83F4;
  v3[3] = &unk_100244668;
  id v4 = *(id *)(a1 + 40);
  +[UIView transitionWithView:v2 duration:5242880 options:v3 animations:&stru_100246720 completion:0.45];
}

uint64_t sub_1000C83F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000C8A04(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1000C8A28(uint64_t a1, int a2)
{
  uint64_t v3 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = [WeakRetained spinner];
  [v5 stopAnimating];

  id v6 = objc_loadWeakRetained(v3);
  CGFloat v7 = [v6 suggestedChoiceButton];
  [v7 setEnabled:1];

  id v8 = objc_loadWeakRetained(v3);
  uint64_t v9 = [v8 alternateChoiceButton];
  [v9 setEnabled:1];

  if (a2)
  {
    id v10 = [UIApp bridgeController];
    [v10 setTinkerPairing:1];

    LODWORD(v10) = _os_feature_enabled_impl();
    id v11 = objc_loadWeakRetained(v3);
    id v15 = v11;
    if (v10)
    {
      id v12 = [v11 buddyWatchDiscoveryMonitor];
      [v12 discoverWatchesOrShowSpinner];
    }
    else
    {
      CGSize v13 = [v11 delegate];
      id v14 = objc_loadWeakRetained(v3);
      [v13 buddyControllerDone:v14];
    }
  }
  else
  {
    id v15 = objc_loadWeakRetained(v3);
    [v15 setHandledButtonAction:0];
  }
}

void sub_1000C8EA0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  CGFloat v7 = pbb_setupflow_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315394;
    CGSize v13 = "-[COSPairingTypeSelectionViewController preflightPairingFlowAgainstDeviceTakeoverProtection:]_block_invoke";
    __int16 v14 = 2112;
    id v15 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%s ~ Result: %@", buf, 0x16u);
  }

  id v8 = pbb_setupflow_log();
  uint64_t v9 = v8;
  if (v6)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_10017400C((uint64_t)v6, v9);
    }
  }
  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      CGSize v13 = "-[COSPairingTypeSelectionViewController preflightPairingFlowAgainstDeviceTakeoverProtection:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%s ~ Success! Ungating operation.", buf, 0xCu);
    }

    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    _DWORD v10[2] = sub_1000C9060;
    v10[3] = &unk_1002448E8;
    void v10[4] = *(void *)(a1 + 32);
    char v11 = *(unsigned char *)(a1 + 40);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);
  }
}

id sub_1000C9060(uint64_t a1)
{
  return _[*(id *)(a1 + 32) applyConfirmedOptinAndCheckMaxDeviceCount:*(unsigned __int8 *)(a1 + 40)];
}

void sub_1000C9510(id a1, UIAlertAction *a2)
{
  uint64_t v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Dismissed 'Max Device' Alert", v3, 2u);
  }
}

void sub_1000CA314(uint64_t a1)
{
  uint64_t v2 = [UIApp setupController];
  uint64_t v3 = [v2 tinkerAuthenticationController];
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v4 + 32);
  *(void *)(v4 + 32) = v3;

  id v8 = [*(id *)(*(void *)(a1 + 32) + 32) tinkerFamilyMemberFromAuthenticationResultsForInternalUseByUpdatingtinkerSignInID];
  id v6 = [UIApp setupController];
  [v6 setTinkerFamilyMember:v8];

  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  [WeakRetained buddyControllerReleaseHoldAndSkip:*(void *)(a1 + 32)];
}

void sub_1000CA4D8(uint64_t a1)
{
  uint64_t v2 = [UIApp setupController];
  uint64_t v3 = [v2 tinkerFamilyMember];

  uint64_t v4 = *(id **)(a1 + 32);
  if (v3)
  {
    id WeakRetained = objc_loadWeakRetained(v4 + 1);
    [WeakRetained buddyControllerReleaseHoldAndSkip:*(void *)(a1 + 32)];
  }
  else
  {
    _[v4 startPostCheck];
  }
}

id sub_1000CA7A4(uint64_t a1)
{
  return +[COSSatellitePairingHelper popToLoginControllerFromController:*(void *)(a1 + 32)];
}

void sub_1000CA8D8(uint64_t a1, void *a2, void *a3)
{
  id v22 = a2;
  id v5 = a3;
  id v6 = pbb_accountsignin_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    CGFloat v7 = [v5 localizedDescription];
    LODWORD(buf) = 138412290;
    *(void *)((char *)&buf + 4) = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "FAFetchFamilyCircleRequest complete, error: %@", (uint8_t *)&buf, 0xCu);
  }
  if (v5)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000CADFC;
    block[3] = &unk_100243908;
    void block[4] = *(void *)(a1 + 32);
    id v41 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    goto LABEL_32;
  }
  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v46 = 0x3032000000;
  long long v47 = sub_100015DDC;
  long long v48 = sub_100015D6C;
  id v49 = 0;
  uint64_t v34 = 0;
  CGRect v35 = (id *)&v34;
  uint64_t v36 = 0x3032000000;
  id v37 = sub_100015DDC;
  unsigned int v38 = sub_100015D6C;
  id v39 = 0;
  uint64_t v28 = 0;
  __int16 v29 = (id *)&v28;
  uint64_t v30 = 0x3032000000;
  id v31 = sub_100015DDC;
  __int16 v32 = sub_100015D6C;
  id v33 = 0;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v8 = [v22 members];
  id v9 = [v8 countByEnumeratingWithState:&v24 objects:v44 count:16];
  if (!v9) {
    goto LABEL_31;
  }
  uint64_t v10 = *(void *)v25;
  while (2)
  {
    char v11 = 0;
    do
    {
      if (*(void *)v25 != v10) {
        objc_enumerationMutation(v8);
      }
      if (!*(void *)(a1 + 40))
      {
        id v21 = pbb_accountsignin_log();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)int v42 = 0;
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "This family member id could not be found, so we can't match it to a FAFamilyMember", v42, 2u);
        }

        goto LABEL_31;
      }
      id v12 = *(void **)(*((void *)&v24 + 1) + 8 * (void)v11);
      if ([v12 isOrganizer])
      {
        objc_storeStrong(v35 + 5, v12);
        if ([v12 isMe]) {
          objc_storeStrong(v29 + 5, v12);
        }
        CGSize v13 = pbb_accountsignin_log();
        if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_20;
        }
        *(_DWORD *)int v42 = 138412290;
        unsigned int v43 = v12;
        __int16 v14 = v13;
        id v15 = "Found family organizer: %@";
        goto LABEL_19;
      }
      long long v16 = [v12 appleID];
      unsigned int v17 = [v16 isEqualToString:*(void *)(a1 + 40)];

      if (v17)
      {
        objc_storeStrong((id *)(*((void *)&buf + 1) + 40), v12);
        CGSize v13 = pbb_accountsignin_log();
        if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
        {
LABEL_20:

          goto LABEL_21;
        }
        *(_DWORD *)int v42 = 138412290;
        unsigned int v43 = v12;
        __int16 v14 = v13;
        id v15 = "Found member matching %@!";
LABEL_19:
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, v15, v42, 0xCu);
        goto LABEL_20;
      }
      if ([v12 isMe] && objc_msgSend(v12, "isParent"))
      {
        long long v18 = v29;
        id v19 = v12;
        CGSize v13 = v18[5];
        void v18[5] = v19;
        goto LABEL_20;
      }
LABEL_21:
      char v11 = (char *)v11 + 1;
    }
    while (v9 != v11);
    id v20 = [v8 countByEnumeratingWithState:&v24 objects:v44 count:16];
    id v9 = v20;
    if (v20) {
      continue;
    }
    break;
  }
LABEL_31:

  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472;
  v23[2] = sub_1000CAE08;
  v23[3] = &unk_100246790;
  v23[6] = &v28;
  v23[7] = &buf;
  v23[4] = *(void *)(a1 + 32);
  v23[5] = &v34;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v23);
  _Block_object_dispose(&v28, 8);

  _Block_object_dispose(&v34, 8);
  _Block_object_dispose(&buf, 8);

LABEL_32:
}

void sub_1000CADB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a35, 8);
  _Block_object_dispose((const void *)(v35 - 160), 8);
  _Unwind_Resume(a1);
}

id sub_1000CADFC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) presentAlertAndFallbackToSignInForError:*(void *)(a1 + 40)];
}

void sub_1000CAE08(void *a1)
{
  uint64_t v2 = pbb_accountsignin_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(*(void *)(a1[5] + 8) + 40);
    int v13 = 138412290;
    uint64_t v14 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Setting organizer member: %@", (uint8_t *)&v13, 0xCu);
  }

  uint64_t v4 = [UIApp setupController];
  [v4 setOrganizerFamilyMember:*(void *)(*(void *)(a1[5] + 8) + 40)];

  id v5 = [UIApp setupController];
  [v5 setPairingParentFamilyMember:*(void *)(*(void *)(a1[6] + 8) + 40)];

  uint64_t v6 = *(void *)(*(void *)(a1[7] + 8) + 40);
  CGFloat v7 = pbb_accountsignin_log();
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if (v6)
  {
    if (v8)
    {
      uint64_t v9 = *(void *)(*(void *)(a1[7] + 8) + 40);
      int v13 = 138412290;
      uint64_t v14 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Setting Member %@!", (uint8_t *)&v13, 0xCu);
    }

    uint64_t v10 = [UIApp setupController];
    [v10 setTinkerFamilyMember:*(void *)(*(void *)(a1[7] + 8) + 40)];

    id WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 8));
    [WeakRetained buddyControllerReleaseHoldAndSkip:a1[4]];
  }
  else
  {
    if (v8)
    {
      LOWORD(v13) = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "No matching family member found!", (uint8_t *)&v13, 2u);
    }

    id v12 = [UIApp setupController];
    [v12 setTinkerFamilyMember:0];

    +[COSSatellitePairingHelper popToLoginControllerFromController:a1[4]];
  }
}

void sub_1000CB780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000CB7B4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  CGFloat v7 = pbb_accountsignin_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v8 = [v6 localizedDescription];
    LODWORD(buf) = 138412290;
    *(void *)((char *)&buf + 4) = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Satellite pairing helper FAFetchFamilyCircleRequest complete, error: %@", (uint8_t *)&buf, 0xCu);
  }
  if (v5)
  {
    uint64_t v9 = [v5 members];
    id v10 = [v9 count];
    BOOL v11 = v6 || v10 == 0;
    BOOL v12 = !v11;

    if (v12)
    {
      *(void *)&long long buf = 0;
      *((void *)&buf + 1) = &buf;
      uint64_t v55 = 0x3032000000;
      id v56 = sub_100015DEC;
      __int16 v57 = sub_100015D74;
      id v58 = 0;
      uint64_t v48 = 0;
      id v49 = &v48;
      uint64_t v50 = 0x3032000000;
      long long v51 = sub_100015DEC;
      long long v52 = sub_100015D74;
      id v53 = 0;
      int v13 = sub_10001284C();
      uint64_t v14 = +[NSMutableDictionary dictionary];
      id v15 = [v5 members];
      v42[0] = _NSConcreteStackBlock;
      v42[1] = 3221225472;
      v42[2] = sub_1000CBC94;
      v42[3] = &unk_1002467E0;
      p_long long buf = &buf;
      id v43 = *(id *)(a1 + 32);
      long long v47 = &v48;
      id v16 = v13;
      id v44 = v16;
      id v17 = v14;
      id v45 = v17;
      [v15 enumerateObjectsUsingBlock:v42];

      if (([*(id *)(*((void *)&buf + 1) + 40) isMe] & 1) == 0 && !v49[5])
      {
        id v33 = pbb_setupflow_log();
        if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR)) {
          sub_100174108(v33, v34, v35, v36, v37, v38, v39, v40);
        }

        id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
        [WeakRetained _finishedWithResult:4 completion:*(void *)(a1 + 40)];
        goto LABEL_34;
      }
      if ([*(id *)(*((void *)&buf + 1) + 40) isMe])
      {
        long long v18 = pbb_setupflow_log();
        if (!os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_26;
        }
        *(_WORD *)id v41 = 0;
        id v19 = "Satellite pairing helper: organizer isMe";
      }
      else
      {
        long long v18 = pbb_setupflow_log();
        if (!os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_26;
        }
        *(_WORD *)id v41 = 0;
        id v19 = "Satellite pairing helper: pairingParent isMe";
      }
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, v19, v41, 2u);
LABEL_26:

      if ((unint64_t)[v17 count] < 5)
      {
        id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
        [WeakRetained _finishedWithResult:0 completion:*(void *)(a1 + 40)];
      }
      else
      {
        long long v24 = pbb_setupflow_log();
        if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
          sub_1001740D0(v24, v25, v26, v27, v28, v29, v30, v31);
        }

        id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
        [WeakRetained _finishedWithResult:5 completion:*(void *)(a1 + 40)];
      }
LABEL_34:

      _Block_object_dispose(&v48, 8);
      _Block_object_dispose(&buf, 8);

      goto LABEL_35;
    }
  }
  id v20 = pbb_setupflow_log();
  BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);
  if (v6)
  {
    if (v21)
    {
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v6;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "Satellite pairing helper: Abort checks, Precondition Request failed %@", (uint8_t *)&buf, 0xCu);
    }

    id v22 = objc_loadWeakRetained((id *)(a1 + 48));
    [v22 _finishedWithResult:7 completion:*(void *)(a1 + 40)];
  }
  else
  {
    if (v21)
    {
      LOWORD(buf) = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "Satellite pairing helper: did not find family circle, checking for eligibility", (uint8_t *)&buf, 2u);
    }

    id v23 = objc_loadWeakRetained((id *)(a1 + 48));
    [v23 _checkFamilyEligibilityWithCompletion:*(void *)(a1 + 40)];
  }
LABEL_35:
}

void sub_1000CBC54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1000CBC94(uint64_t a1, void *a2)
{
  id v4 = a2;
  if ([v4 isOrganizer])
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), a2);
    [*(id *)(a1 + 32) setOrganizerFamilyMember:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)];
  }
  else if ([v4 isParent] && objc_msgSend(v4, "isMe"))
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), a2);
    [*(id *)(a1 + 32) setPairingParentFamilyMember:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40)];
  }
  else
  {
    id v14 = v4;
    id v5 = [v4 appleID];
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    id v6 = *(id *)(a1 + 40);
    id v7 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v16;
      do
      {
        for (i = 0; i != v8; i = (char *)i + 1)
        {
          if (*(void *)v16 != v9) {
            objc_enumerationMutation(v6);
          }
          BOOL v11 = *(void **)(*((void *)&v15 + 1) + 8 * i);
          uint64_t v12 = [v11 valueForProperty:@"_altAccountIdentifier"];
          unsigned int v13 = [v12 isEqualToString:v5];

          if (v13) {
            [*(id *)(a1 + 48) setObject:v11 forKey:v5];
          }
        }
        id v8 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }
      while (v8);
    }

    id v4 = v14;
  }
}

void sub_1000CBF54(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1000CBF78(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (!v5 || v6)
  {
    if ([v6 code] == (id)-2)
    {
      BOOL v11 = [v7 domain];
      unsigned int v12 = [v11 isEqualToString:@"com.apple.appleaccount"];

      if (v12)
      {
        uint64_t v9 = pbb_setupflow_log();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
          sub_100174140((uint64_t)v7, v9);
        }
        uint64_t v10 = 6;
        goto LABEL_22;
      }
    }
    uint64_t v9 = pbb_setupflow_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1001741B8((uint64_t)v7, (uint64_t)v5, v9);
    }
LABEL_16:
    uint64_t v10 = 2;
    goto LABEL_22;
  }
  id v8 = [v5 eligibilityStatus];
  if (!v8)
  {
    uint64_t v9 = pbb_setupflow_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long v15 = 0;
      uint64_t v10 = 2;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Family Eligibility: not eligible", v15, 2u);
      goto LABEL_22;
    }
    goto LABEL_16;
  }
  if (v8 == (id)2)
  {
    uint64_t v9 = pbb_setupflow_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Family Eligibility: only with adult (underage)", v14, 2u);
    }
    uint64_t v10 = 3;
  }
  else
  {
    if (v8 != (id)1)
    {
      uint64_t v10 = 2;
      goto LABEL_23;
    }
    uint64_t v9 = pbb_setupflow_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Family Eligibility: eligible", buf, 2u);
    }
    uint64_t v10 = 0;
  }
LABEL_22:

LABEL_23:
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _finishedWithResult:v10 completion:*(void *)(a1 + 32)];
}

uint64_t sub_1000CC56C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  }
  return result;
}

void sub_1000CC588(uint64_t a1)
{
  uint64_t v2 = +[UIAlertController alertControllerWithTitle:*(void *)(a1 + 32) message:*(void *)(a1 + 40) preferredStyle:1];
  uint64_t v3 = *(void *)(a1 + 72);
  id v4 = +[NSBundle mainBundle];
  id v5 = v4;
  if (v3 == 1)
  {
    id v6 = [v4 localizedStringForKey:@"OPEN_SETTINGS" value:&stru_100249230 table:@"Localizable"];
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_1000CC93C;
    v29[3] = &unk_100245850;
    id v30 = *(id *)(a1 + 64);
    id v7 = +[UIAlertAction actionWithTitle:v6 style:0 handler:v29];
    [v2 addAction:v7];

    id v8 = &v30;
    uint64_t v9 = +[NSBundle mainBundle];
    uint64_t v10 = [v9 localizedStringForKey:@"CANCEL_RESET_BUDDY_ACTION" value:&stru_100249230 table:@"Localizable"];
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 3221225472;
    v27[2] = sub_1000CC9A4;
    v27[3] = &unk_100245850;
    BOOL v11 = &v28;
    id v28 = *(id *)(a1 + 64);
    unsigned int v12 = +[UIAlertAction actionWithTitle:v10 style:0 handler:v27];
    [v2 addAction:v12];

LABEL_5:
    goto LABEL_6;
  }
  unsigned int v13 = [v4 localizedStringForKey:@"OK" value:&stru_100249230 table:@"Localizable"];
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 3221225472;
  v25[2] = sub_1000CC9C0;
  v25[3] = &unk_100245850;
  id v8 = &v26;
  id v26 = *(id *)(a1 + 64);
  id v14 = +[UIAlertAction actionWithTitle:v13 style:0 handler:v25];
  [v2 addAction:v14];

  if (*(void *)(a1 + 48))
  {
    long long v15 = +[NSBundle mainBundle];
    long long v16 = [v15 localizedStringForKey:@"LEARN_MORE" value:&stru_100249230 table:@"Localizable-tinker"];
    id v19 = _NSConcreteStackBlock;
    uint64_t v20 = 3221225472;
    BOOL v21 = sub_1000CC9DC;
    id v22 = &unk_100246858;
    BOOL v11 = &v24;
    id v24 = *(id *)(a1 + 64);
    id v23 = *(id *)(a1 + 48);
    long long v17 = +[UIAlertAction actionWithTitle:v16 style:0 handler:&v19];
    [v2 addAction:v17, v19, v20, v21, v22];

    uint64_t v9 = v23;
    goto LABEL_5;
  }
LABEL_6:

  long long v18 = [*(id *)(a1 + 56) alertPresentationViewController];
  [v18 presentViewController:v2 animated:1 completion:0];
}

void sub_1000CC93C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    (*(void (**)(uint64_t, void))(v1 + 16))(v1, 0);
  }
  +[NSURL URLWithString:@"prefs:root=APPLE_ACCOUNT"];
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  BPSOpenSensitiveURLAsync();
}

uint64_t sub_1000CC9A4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

uint64_t sub_1000CC9C0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

void sub_1000CC9DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(uint64_t, void))(v2 + 16))(v2, 0);
  }
  id v3 = +[NSURL URLWithString:*(void *)(a1 + 32)];
  BPSOpenSensitiveURLAsync();
}

void sub_1000CCBCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_1000CD17C(uint64_t a1)
{
  sub_1000CD1D4();
  Class result = objc_getClass("AIDAAccountManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029B1E8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_100174240();
    return (Class)sub_1000CD1D4();
  }
  return result;
}

uint64_t sub_1000CD1D4()
{
  v3[0] = 0;
  if (!qword_10029B1F0)
  {
    v3[1] = _NSConcreteStackBlock;
    v3[2] = 3221225472;
    v3[3] = sub_1000CD2D4;
    void v3[4] = &unk_1002436E0;
    void v3[5] = v3;
    long long v4 = off_1002468A0;
    uint64_t v5 = 0;
    qword_10029B1F0 = _sl_dlopen();
  }
  uint64_t v0 = qword_10029B1F0;
  uint64_t v1 = (void *)v3[0];
  if (!qword_10029B1F0)
  {
    uint64_t v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t sub_1000CD2D4()
{
  uint64_t result = _sl_dlopen();
  qword_10029B1F0 = result;
  return result;
}

void *sub_1000CD348(uint64_t a1)
{
  uint64_t v2 = (void *)sub_1000CD1D4();
  uint64_t result = dlsym(v2, "AIDAServiceTypeCloud");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_10029B1F8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1000CD5BC(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  id v3 = pbb_bridge_log();
  long long v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 138412290;
      uint64_t v9 = v2;
      uint64_t v5 = "(NEW UHP) Pair Failed %@";
      id v6 = v4;
      uint32_t v7 = 12;
LABEL_7:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v5, (uint8_t *)&v8, v7);
    }
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v8) = 0;
    uint64_t v5 = "(NEW UHP) Pair Began";
    id v6 = v4;
    uint32_t v7 = 2;
    goto LABEL_7;
  }
}

void sub_1000CD7A4(uint64_t a1)
{
  uint64_t v2 = +[NRPairedDeviceRegistry sharedInstance];
  id v3 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*(id *)(a1 + 32) integerValue]);
  long long v4 = [*(id *)(a1 + 40) device];
  [v2 notifyPasscode:v3 forDevice:v4];

  uint64_t v5 = [UIApp bridgeController];
  [v5 beginSetupTransaction];

  id v6 = [UIApp bridgeController];
  LODWORD(v2) = [v6 isTinkerPairing];

  if (v2)
  {
    uint32_t v7 = [UIApp setupController];
    int v8 = [v7 pairingReportManager];

    [v8 addPairingTimeEventToPairingReportPlist:54 withValue:&__kCFBooleanTrue withError:0];
  }
  if (PBLogPerformanceMetrics())
  {
    uint64_t v9 = +[PBBridgeResponsePerformanceMonitor shareMonitor];
    [v9 beginMacroActivity:PBBridgeGizmoPairingActivityName beginTime:CFAbsoluteTimeGetCurrent()];
  }
  dispatch_time_t v10 = dispatch_time(0, 250000000);

  dispatch_after(v10, (dispatch_queue_t)&_dispatch_main_q, &stru_1002468D8);
}

void sub_1000CD918(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"COSDeviceAlternatePathBeganConnectingNotification" object:0];
}

void sub_1000CDDF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    [*(id *)(a1 + 32) sessionProgress];
    [v5 setPairedSyncProgress:];
    [v5 setSessionType:[*(id *)(a1 + 32) syncSessionType]];
    id v3 = *(void **)(a1 + 32);
    if (v3 && [v3 syncSessionState] == (id)1 && !objc_msgSend(*(id *)(a1 + 32), "syncSessionType"))
    {
      long long v4 = +[NRPairedDeviceRegistry sharedInstance];
      objc_msgSend(v5, "setPairedSyncSaysSyncActive:", objc_msgSend(v4, "compatibilityState") == 4);
    }
    else
    {
      [v5 setPairedSyncSaysSyncActive:0];
    }
    id WeakRetained = v5;
  }
}

void sub_1000CE158(uint64_t a1)
{
  uint64_t v2 = [UIApp setupController];
  if ([v2 doesLiveActivityProviderRequiresPairSyncNotifications]
    && ([*(id *)(a1 + 32) isRegisteredForNotificationsRelevantToLiveActivities] & 1) == 0)
  {
    id v3 = pbb_bridge_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "COSGlobalAlertPresentationCoordinator: Live activities are active. Keep re-register for relevant notifications needed to receive sync progress updates", v5, 2u);
    }

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained reRegisterForNanoRegistryAndPairSyncNotifications];
  }
}

void sub_1000CE214(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000CE2B8;
  block[3] = &unk_1002465B8;
  char v11 = a2;
  uint64_t v6 = *(void *)(a1 + 32);
  id v9 = v5;
  uint64_t v10 = v6;
  id v7 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_1000CE2B8(uint64_t a1)
{
  uint64_t v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(unsigned __int8 *)(a1 + 48);
    v7[0] = 67109120;
    v7[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "COSGlobalAlertPresentationCoordinator: requestInitialNonMigrationSyncStateForPairingIdentifier: %{BOOL}d", (uint8_t *)v7, 8u);
  }

  if (*(void *)(a1 + 32)) {
    return [*(id *)(a1 + 40) setPairedSyncSaysSyncNeeded:0];
  }
  long long v4 = +[NRPairedDeviceRegistry sharedInstance];
  if ([v4 compatibilityState] != 4)
  {

    return [*(id *)(a1 + 40) setPairedSyncSaysSyncNeeded:0];
  }
  int v5 = *(unsigned __int8 *)(*(void *)(a1 + 40) + 9);

  if (v5) {
    return [*(id *)(a1 + 40) setPairedSyncSaysSyncNeeded:0];
  }
  id result = [*(id *)(a1 + 40) pairedSyncSaysSyncNeeded];
  if (result != (*(unsigned char *)(a1 + 48) == 0))
  {
    [*(id *)(a1 + 40) setPairedSyncSaysSyncNeeded:*(unsigned __int8 *)(a1 + 48) == 0];
    return [*(id *)(a1 + 40) update];
  }
  return result;
}

void sub_1000CEFCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000CEFF4(uint64_t a1)
{
  if (!--*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, *(dispatch_block_t *)(a1 + 32));
  }
}

void sub_1000CF07C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = a3;
  if (objc_opt_respondsToSelector())
  {
    id v7 = pbb_bridge_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [*(id *)(a1 + 32) stringForAlertType:*(void *)(a1 + 40)];
      id v9 = (objc_class *)objc_opt_class();
      uint64_t v10 = NSStringFromClass(v9);
      int v11 = 138412802;
      unsigned int v12 = v8;
      __int16 v13 = 2048;
      id v14 = v5;
      __int16 v15 = 2112;
      long long v16 = v10;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "COSGlobalAlertPresentationCoordinator: Requesting dismissal of VC %@ to %p %@", (uint8_t *)&v11, 0x20u);
    }
    [v5 globalAlertPresentationCoordinator:*(void *)(a1 + 32) dismissAlert:*(void *)(a1 + 48) withCompletion:v6];
  }
  else
  {
    v6[2](v6);
  }
}

id sub_1000CF1CC(uint64_t a1)
{
  uint64_t v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = [*(id *)(a1 + 32) stringForAlertType:*(void *)(a1 + 40)];
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "COSGlobalAlertPresentationCoordinator: VC %@ is now dismissed", (uint8_t *)&v5, 0xCu);
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 13) = 0;
  *(unsigned char *)(*(void *)(a1 + 32) + 12) = 0;
  return [*(id *)(a1 + 32) update];
}

void sub_1000CF2A4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = a3;
  if (objc_opt_respondsToSelector())
  {
    id v7 = pbb_bridge_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = [*(id *)(a1 + 32) stringForAlertType:*(void *)(a1 + 40)];
      id v9 = (objc_class *)objc_opt_class();
      uint64_t v10 = NSStringFromClass(v9);
      int v11 = 138412802;
      unsigned int v12 = v8;
      __int16 v13 = 2048;
      id v14 = v5;
      __int16 v15 = 2112;
      long long v16 = v10;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "COSGlobalAlertPresentationCoordinator: Requesting display of VC %@ to %p %@", (uint8_t *)&v11, 0x20u);
    }
    [v5 globalAlertPresentationCoordinator:*(void *)(a1 + 32) presentAlert:*(void *)(a1 + 40) withCompletion:v6];
  }
  else
  {
    v6[2](v6);
  }
}

id sub_1000CF3F0(uint64_t a1)
{
  uint64_t v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = [*(id *)(a1 + 32) stringForAlertType:*(void *)(a1 + 40)];
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "COSGlobalAlertPresentationCoordinator: VC %@ is now displayed", (uint8_t *)&v5, 0xCu);
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 13) = 0;
  *(unsigned char *)(*(void *)(a1 + 32) + 12) = 1;
  return [*(id *)(a1 + 32) update];
}

void sub_1000CF628(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = a3;
  id v7 = pbb_bridge_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v9 = 138412290;
    id v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "COSGlobalAlertPresentationCoordinator: Alert Observer %@", (uint8_t *)&v9, 0xCu);
  }

  if (objc_opt_respondsToSelector())
  {
    int v8 = *(void **)(a1 + 32);
    [v8 pairedSyncProgress];
    [v5 globalAlertPresentationCoordinator:v8 syncProgressDidUpdate:];
  }
  else
  {
    v6[2](v6);
  }
}

CFStringRef sub_1000D0A80(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:kPairingBeginsKey])
  {
    CFStringRef v2 = @"Pairing Mode";
  }
  else if ([v1 isEqualToString:kPairingBeginsTime])
  {
    CFStringRef v2 = @"Pairing Began";
  }
  else if ([v1 isEqualToString:kIPEComplete])
  {
    CFStringRef v2 = @"IPE";
  }
  else if ([v1 isEqualToString:kFireLockOn])
  {
    CFStringRef v2 = @"Locked-On";
  }
  else if ([v1 isEqualToString:kWatchActivated])
  {
    CFStringRef v2 = @"Activated";
  }
  else if ([v1 isEqualToString:BRStartedCDPEnrollment])
  {
    CFStringRef v2 = @"StartedCDPEnrollment";
  }
  else if ([v1 isEqualToString:BRCDPEnrollmentSuccess])
  {
    CFStringRef v2 = @"CDPEnrollmentSuccessful";
  }
  else if (([v1 isEqualToString:kSilentSignInSuccess] & 1) != 0 {
         || ([v1 isEqualToString:kSignInSuccessful] & 1) != 0)
  }
  {
    CFStringRef v2 = @"Signed-in";
  }
  else if ([v1 isEqualToString:kEndToEndPairingComplete])
  {
    CFStringRef v2 = @"Pairing Successful";
  }
  else if ([v1 isEqualToString:kInitialSyncBegan])
  {
    CFStringRef v2 = @"Initial Sync began";
  }
  else
  {
    CFStringRef v2 = 0;
  }

  return v2;
}

void sub_1000D0F30(uint64_t a1, char a2)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1000D0FAC;
  v2[3] = &unk_1002448E8;
  char v3 = a2;
  v2[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);
}

id sub_1000D0FAC(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  char v3 = pbb_setup_log();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v4)
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Defaulting to Install All Existing Apps. Yorktown offered.", buf, 2u);
    }

    [*(id *)(a1 + 32) informAppConduitToInstallAllApps];
  }
  else
  {
    if (v4)
    {
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Skipping app installation because restricted.", v6, 2u);
    }
  }
  return [(id)objc_opt_class() updateBuddyStageAboutPastAppInstallation];
}

id sub_1000D2018(uint64_t a1, void *a2)
{
  return _[a2 updateActiveWatchForFaceChange];
}

id sub_1000D41C8(uint64_t a1, void *a2)
{
  return _[a2 magicSwitchStateChanged];
}

int64_t sub_1000D568C(id a1, NRDevice *a2, NRDevice *a3)
{
  uint64_t v4 = NRDevicePropertyPairedDate;
  id v5 = a3;
  uint64_t v6 = [(NRDevice *)a2 valueForProperty:v4];
  id v7 = v6;
  if (v6)
  {
    id v8 = v6;
  }
  else
  {
    id v8 = +[NSDate dateWithTimeIntervalSinceReferenceDate:0.0];
  }
  int v9 = v8;

  id v10 = [(NRDevice *)v5 valueForProperty:v4];

  id v11 = [v10 compare:v9];
  return (int64_t)v11;
}

void sub_1000D6458(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1000D6478(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained displaySoftwareUpdatePane:v3];
}

void sub_1000D67C4(id a1, UIAlertAction *a2)
{
  +[NSURL URLWithString:@"prefs:root=APPLE_ACCOUNT"];
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  BPSOpenSensitiveURLAsync();
}

void sub_1000D6BCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000D6BF0(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v6 = [WeakRetained _specifierForActiveWatch];
    id v7 = [v6 propertyForKey:@"COSDeviceState"];
    id v8 = [v7 integerValue];

    if ((unint64_t)(a2 - 1) >= 3 && [v5 swuPaneDisplayed])
    {
      int v9 = +[NSNumber numberWithInt:7];
      [v6 setProperty:v9 forKey:@"COSDeviceState"];

      objc_initWeak(location, *(id *)(a1 + 32));
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1000D6E30;
      block[3] = &unk_100243D28;
      id v10 = &v17;
      objc_copyWeak(&v17, location);
      uint64_t v6 = v6;
      long long v16 = v6;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
      id v11 = v16;
LABEL_7:

      objc_destroyWeak(v10);
      objc_destroyWeak(location);
      goto LABEL_11;
    }
    if (v8 == (id)7)
    {
      objc_initWeak(location, *(id *)(a1 + 32));
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      void v12[2] = sub_1000D6E80;
      v12[3] = &unk_100243D28;
      id v10 = &v14;
      objc_copyWeak(&v14, location);
      uint64_t v6 = v6;
      __int16 v13 = v6;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v12);
      id v11 = v13;
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v6 = pbb_bridge_log();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(location[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "COSPairedDeviceListController is nil when trying to get software update state", (uint8_t *)location, 2u);
    }
  }
LABEL_11:
}

void sub_1000D6E30(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained reloadSpecifier:*(void *)(a1 + 32)];
}

void sub_1000D6E80(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained reloadSpecifier:*(void *)(a1 + 32)];
}

void sub_1000D74E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000D751C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained cancelTinkerSwitchAttempt:0];
}

void sub_1000D7C38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id location)
{
  objc_destroyWeak(v30);
  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000D7C6C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) valueForProperty:NRDevicePropertyName];
  [v2 presentTinkerConnectFailedAlert:v3];

  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v4 + 208);
  *(void *)(v4 + 208) = 0;

  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = *(void **)(v6 + 200);
  *(void *)(v6 + 200) = 0;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000D7D54;
  block[3] = &unk_1002438A0;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1000D7D54(uint64_t a1)
{
  [*(id *)(a1 + 32) setShowTinkerSwitchCancelOption:0];
  *(unsigned char *)(*(void *)(a1 + 32) + 184) = 0;
  id v2 = sub_1000333A4();
  if (v2)
  {
  }
  else if (sub_100012810())
  {
    id v3 = pbb_bridge_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = 136315138;
      id v5 = "-[COSPairedDeviceListViewController selectDeviceWithSpecifier:successCompletion:]_block_invoke_2";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s - We only have Satellite Paired watches. Block back button.", (uint8_t *)&v4, 0xCu);
    }

    [*(id *)(a1 + 32) _showBackButtonBehavior:2 animated:0];
  }
}

void sub_1000D7E78(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = pbb_bridge_log();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    CFStringRef v6 = @"NO";
    uint64_t v7 = *(void *)(a1 + 32);
    id v10 = "-[COSPairedDeviceListViewController selectDeviceWithSpecifier:successCompletion:]_block_invoke";
    int v9 = 136315650;
    if (a2) {
      CFStringRef v6 = @"YES";
    }
    __int16 v11 = 2112;
    uint64_t v12 = v7;
    __int16 v13 = 2112;
    CFStringRef v14 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s: Started connecting to device %@ (%@).", (uint8_t *)&v9, 0x20u);
  }

  if ((a2 & 1) == 0)
  {
    id v8 = [WeakRetained specifierDataSource];
    [v8 setLoadingDevice:*(void *)(a1 + 32)];

    [WeakRetained _showBackButtonBehavior:1 animated:0];
  }
}

void sub_1000D7FA0(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v5 = pbb_bridge_log();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = [*(id *)(a1 + 32) pairingID];
    uint64_t v7 = (void *)v6;
    CFStringRef v8 = @"failed";
    CFStringRef v14 = "-[COSPairedDeviceListViewController selectDeviceWithSpecifier:successCompletion:]_block_invoke";
    int v13 = 136315650;
    if (a2) {
      CFStringRef v8 = @"successful";
    }
    __int16 v15 = 2112;
    uint64_t v16 = v6;
    __int16 v17 = 2112;
    CFStringRef v18 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s: Connected to device %@ %@.", (uint8_t *)&v13, 0x20u);
  }
  if (a2)
  {
    int v9 = [WeakRetained tinkerConnectionTimeout];

    if (v9)
    {
      __int16 v11 = [WeakRetained tinkerConnectionTimeout];
      dispatch_source_cancel(v11);

      [WeakRetained setTinkerConnectionTimeout:0];
    }
    uint64_t v12 = *(void *)(a1 + 40);
    if (v12) {
      (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v12, v10);
    }
  }
}

id sub_1000D8690(uint64_t a1)
{
  return [*(id *)(a1 + 32) _startSpinnerInSpecifier:*(void *)(a1 + 40)];
}

void sub_1000D869C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = pbb_bridge_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    CFStringRef v8 = +[NSNumber numberWithUnsignedInteger:a2];
    int v12 = 138412802;
    uint64_t v13 = v7;
    __int16 v14 = 2112;
    __int16 v15 = v8;
    __int16 v16 = 2112;
    id v17 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "isPhoneReadyToMigrateDevice: %@ (%@) error: %@", (uint8_t *)&v12, 0x20u);
  }
  int v9 = *(void **)(a1 + 40);
  if (a2 == 4)
  {
    uint64_t v10 = [v9 specifierDataSource];
    __int16 v11 = [v10 finishPairing];
    [v11 setProperty:&__kCFBooleanFalse forKey:PSEnabledKey];

    [*(id *)(a1 + 40) beginMigrationWithAltDevice:*(void *)(a1 + 32)];
  }
  else
  {
    [v9 handleTinkerMigrationFailureCase:a2 forDevice:*(void *)(a1 + 48)];
  }
}

void sub_1000D8B94(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = pbb_accountsignin_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_100174344((uint64_t)v2, v3);
    }
  }
}

CFStringRef sub_1000D8F48(unint64_t a1)
{
  if (a1 < 6 && ((0x2Fu >> a1) & 1) != 0) {
    return *(&off_100246C38 + a1);
  }
  id v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 134217984;
    unint64_t v5 = a1;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Unhandled NRMigrationAvailability code %lu", (uint8_t *)&v4, 0xCu);
  }

  return @"Unhandled code";
}

void sub_1000D9170(id a1)
{
  id v1 = pbb_bridge_log();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Presented Tinker migration availability failure", v2, 2u);
  }
}

void sub_1000D960C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 80));
  objc_destroyWeak((id *)(v4 - 72));
  _Unwind_Resume(a1);
}

void sub_1000D9648(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = [WeakRetained migratingDeviceCell];

  if (!v2)
  {
    id v3 = [WeakRetained findMigratingDeviceCell:*(void *)(a1 + 32)];
    [WeakRetained setMigratingDeviceCell:v3];
  }
  uint64_t v4 = [WeakRetained migratingDeviceCell];
  [v4 updateCellState:1 percentageComplete:*(void *)(a1 + 32) migratingDevice:0.0];
}

void sub_1000D96EC(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    v9[10] = v2;
    v9[11] = v3;
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    id v6 = objc_loadWeakRetained((id *)(a1 + 56));
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    id v9[2] = sub_1000D97A0;
    v9[3] = &unk_1002447A0;
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = *(void *)(a1 + 40);
    void v9[4] = v6;
    void v9[5] = v8;
    [WeakRetained beginMigrationWithDevice:v7 withCompletion:v9];
  }
}

void sub_1000D97A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = pbb_bridge_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = 138543362;
      id v8 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Finished migration with error (%{public}@)", (uint8_t *)&v7, 0xCu);
    }

    [*(id *)(a1 + 32) presentGenericMigrationFailureMessage:v3];
  }
  else
  {
    [*(id *)(a1 + 32) _showBackButtonBehavior:0 animated:1];
  }
  unint64_t v5 = [*(id *)(a1 + 40) specifierDataSource];
  id v6 = [v5 finishPairing];
  [v6 setProperty:&__kCFBooleanTrue forKey:PSEnabledKey];

  [*(id *)(a1 + 32) reloadSpecifiers];
  [*(id *)(a1 + 32) setMigratingDeviceCell:0];
}

id sub_1000D9EE8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _showBackButtonBehavior:*(void *)(a1 + 40) animated:*(unsigned __int8 *)(a1 + 48)];
}

int64_t sub_1000D9EF8(id a1, NRDevice *a2, NRDevice *a3)
{
  uint64_t v4 = NRDevicePropertyLastActiveDate;
  unint64_t v5 = a3;
  id v6 = [(NRDevice *)a2 valueForProperty:v4];
  int v7 = [(NRDevice *)v5 valueForProperty:v4];

  id v8 = [v6 compare:v7];
  return (int64_t)v8;
}

void sub_1000DAD0C(uint64_t a1)
{
  uint64_t v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Timed out trying to discover, display instructions", v5, 2u);
  }

  id v3 = +[UIApplication sharedApplication];
  [v3 presentMigrationConnectionFailedAlert];

  uint64_t v4 = [*(id *)(a1 + 32) specifierDataSource];
  [v4 reloadSpecifiers];
}

id sub_1000DADAC(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadSpecifier:*(void *)(a1 + 40)];
}

id sub_1000DADB8(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadSpecifier:*(void *)(a1 + 40)];
}

void sub_1000DADC4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v2 = [WeakRetained migratingDeviceCell];

  if (!v2)
  {
    id v3 = [WeakRetained findMigratingDeviceCell:*(void *)(a1 + 32)];
    [WeakRetained setMigratingDeviceCell:v3];
  }
  uint64_t v4 = [WeakRetained migratingDeviceCell];
  [v4 updateCellState:*(void *)(a1 + 56) percentageComplete:*(void *)(a1 + 32) migratingDevice:*(double *)(a1 + 64)];

  if (!*(void *)(a1 + 56))
  {
    [WeakRetained setMigratingDeviceCell:0];
    [*(id *)(a1 + 40) reloadSpecifiers];
  }
}

id sub_1000DB008(uint64_t a1)
{
  uint64_t v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Switched to watch, launching SoftwareUpdate", v4, 2u);
  }

  return [*(id *)(a1 + 32) presentSoftwareUpdatePane];
}

void sub_1000DB1A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000DB1CC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setSwuPaneDisplayed:1];
}

void sub_1000DB33C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained specifierDataSource];
  [v1 reloadSpecifiers];
}

void sub_1000DB4C0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained specifierDataSource];
  [v1 reloadSpecifiers];
}

void sub_1000DB644(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained specifierDataSource];
  [v1 reloadSpecifiers];
}

void sub_1000DC734(uint64_t a1)
{
  uint64_t v1 = a1;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = pbb_setupflow_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 67109378;
    *(_DWORD *)unint64_t v60 = 73;
    *(_WORD *)&v60[4] = 2080;
    *(void *)&v60[6] = "-[COSScanningCoordinator startPairingWithScannedCode:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%d %s", buf, 0x12u);
  }

  uint64_t v4 = PBBridgeMagicCodeDecoder();
  kdebug_trace();
  unint64_t v5 = +[UIApplication sharedApplication];
  id v6 = [v5 bridgeController];
  int v7 = [v5 setupController];
  id v8 = [v7 activationManager];
  [v6 setRuiDelegate:v8];

  int v9 = [v5 bridgeController];
  [v9 startEstablishingPairing];

  id v10 = [objc_alloc((Class)BRRTCPairingReportManager) initWithPairingBeginsType:0];
  __int16 v11 = pbb_setupflow_log();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138412290;
    *(void *)unint64_t v60 = v10;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "prm: %@", buf, 0xCu);
  }

  int v12 = [UIApp setupController];
  [v12 setPairingReportManager:v10];

  uint64_t v13 = [UIApp bridgeController];
  unsigned int v14 = [v13 isTinkerPairing];

  if (v14) {
    [v10 addPairingTimeEventToPairingReportPlist:54 withValue:&__kCFBooleanTrue withError:0];
  }
  if ([v4 count] != (id)7)
  {
    pbb_setupflow_log();
    __int16 v16 = (COSIDComponentsContext *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(&v16->super, OS_LOG_TYPE_FAULT)) {
      sub_1001743D0((uint64_t *)(v1 + 32), (uint64_t)v4, &v16->super);
    }
    goto LABEL_25;
  }
  if (PBLogPerformanceMetrics())
  {
    __int16 v15 = +[PBBridgeResponsePerformanceMonitor shareMonitor];
    [v15 beginMacroActivity:PBBridgeGizmoPairingActivityName beginTime:CFAbsoluteTimeGetCurrent()];
  }
  id v56 = v10;
  __int16 v16 = objc_alloc_init(COSIDComponentsContext);
  id v17 = [v4 objectAtIndexedSubscript:1];
  id v18 = [v17 copy];
  [(COSIDComponentsContext *)v16 setPairingVersionString:v18];

  id v19 = [v4 objectAtIndexedSubscript:2];
  id v20 = [v19 copy];
  [WeakRetained setDeviceSetupName:v20];

  BOOL v21 = [v4 objectAtIndexedSubscript:3];
  id v22 = [v21 copy];
  [WeakRetained setOobIdentifier:v22];

  id v23 = [v4 objectAtIndexedSubscript:6];
  id v24 = [v23 copy];
  [(COSIDComponentsContext *)v16 setOsVersionString:v24];

  uint64_t v25 = [v4 objectAtIndexedSubscript:4];
  -[COSIDComponentsContext setMaterial:](v16, "setMaterial:", [v25 integerValue]);

  id v26 = [v4 objectAtIndexedSubscript:5];
  -[COSIDComponentsContext setSize:](v16, "setSize:", [v26 integerValue]);

  +[PBBridgeCAReporter recordMaterial:[(COSIDComponentsContext *)v16 material] andSize:[(COSIDComponentsContext *)v16 size]];
  uint64_t v27 = [WeakRetained deviceSetupName];

  if (v27)
  {
    id v28 = objc_alloc_init((Class)PBBridgeAssetsManager);
    uint64_t v29 = [WeakRetained deviceSetupName];
    id v30 = [WeakRetained deviceSetupName];
    v57[0] = _NSConcreteStackBlock;
    v57[1] = 3221225472;
    v57[2] = sub_1000DCF58;
    v57[3] = &unk_100244CE0;
    id v58 = v29;
    id v31 = v29;
    [v28 beginPullingAssetsForAdvertisingName:v30 completion:v57];
  }
  __int16 v32 = +[PBBridgeWatchAttributeController sharedDeviceController];
  [v32 setInternalSize:[v16 size]];
  [v32 setMaterial:[v16 material]];
  id v33 = [v4 objectAtIndexedSubscript:2];
  id v34 = [v33 copy];
  uint64_t v35 = PBAdvertisingInfoFromPayload();

  uint64_t v55 = v35;
  uint64_t v36 = [v35 objectForKeyedSubscript:PBBridgeAdvertisingVersionKey];
  if ([v36 integerValue] != (id)4)
  {

    goto LABEL_20;
  }
  char v37 = _os_feature_enabled_impl();

  if (v37)
  {
LABEL_20:
    id v41 = pbb_setupflow_log();
    if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v42 = *(void *)(v1 + 32);
      *(_DWORD *)long long buf = 138412290;
      *(void *)unint64_t v60 = v42;
      _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "Locked onto %@", buf, 0xCu);
    }

    id v43 = pbb_setupflow_log();
    if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
    {
      id v44 = [WeakRetained deviceSetupName];
      long long v51 = [WeakRetained oobIdentifier];
      +[PBBridgeWatchAttributeController materialDescription:[(COSIDComponentsContext *)v16 material]];
      id v45 = v53 = WeakRetained;
      +[PBBridgeWatchAttributeController sizeDescription:[(COSIDComponentsContext *)v16 size]];
      uint64_t v46 = v52 = v4;
      long long v47 = +[PBBridgeWatchAttributeController hwBehaviorDescription:](PBBridgeWatchAttributeController, "hwBehaviorDescription:", [v32 hardwareBehavior]);
      [(COSIDComponentsContext *)v16 pairingVersionString];
      uint64_t v48 = v54 = v1;
      id v49 = [(COSIDComponentsContext *)v16 osVersionString];
      *(_DWORD *)long long buf = 138413826;
      *(void *)unint64_t v60 = v44;
      *(_WORD *)&v60[8] = 2112;
      *(void *)&v60[10] = v51;
      __int16 v61 = 2112;
      v62 = v45;
      __int16 v63 = 2112;
      v64 = v46;
      __int16 v65 = 2112;
      v66 = v47;
      __int16 v67 = 2112;
      id v68 = v48;
      __int16 v69 = 2112;
      id v70 = v49;
      _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "Device Name: (%@) OOB ID: (%@) (Material: %@; Size: %@; HW: %@; Pairing Version: %@; OS Version: %@)",
        buf,
        0x48u);

      uint64_t v1 = v54;
      uint64_t v4 = v52;

      id WeakRetained = v53;
    }

    uint64_t v50 = [(COSIDComponentsContext *)v16 pairingVersionString];
    [WeakRetained setPairingVersionFromCode:[v50 integerValue]];

    [WeakRetained setRetryMetadataReadCounter:0];
    [*(id *)(v1 + 40) continueWithFetchingExtendedMetadataFromNanoRegistryWithIDContext:v16];

    id v10 = v56;
LABEL_25:

    __int16 v16 = [UIApp bridgeController];
    [(COSIDComponentsContext *)v16 beginSetupTransaction];
    goto LABEL_26;
  }
  uint64_t v38 = [*(id *)(v1 + 40) delegate];
  char v39 = objc_opt_respondsToSelector();

  if (v39)
  {
    uint64_t v40 = [*(id *)(v1 + 40) delegate];
    [v40 scanningCoordinatorDidDetectUnsupportedCompanionSoftware:*(void *)(v1 + 40)];
  }
  id v10 = v56;
LABEL_26:
}

void sub_1000DCF58(uint64_t a1, int a2)
{
  uint64_t v4 = pbb_setupflow_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    v6[0] = 67109378;
    v6[1] = a2;
    __int16 v7 = 2112;
    uint64_t v8 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Pulled (%d) Assets for %@!", (uint8_t *)v6, 0x12u);
  }
}

void sub_1000DD104(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1000DD128(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v6 = [UIApp bridgeController];
  unsigned int v7 = [v6 isTinkerPairing];

  uint64_t v8 = pbb_setupflow_log();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138412290;
    id v18 = v4;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Received Watch Pairing Extended Metadata: %@", buf, 0xCu);
  }

  if (v4) {
    unsigned int v9 = 0;
  }
  else {
    unsigned int v9 = v7;
  }
  if (v9 == 1)
  {
    [WeakRetained setRetryMetadataReadCounter:[WeakRetained retryMetadataReadCounter] + 1];
    id v10 = [WeakRetained retryMetadataReadCounter];
    __int16 v11 = pbb_setupflow_log();
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);
    if ((unint64_t)v10 > 1)
    {
      if (v12) {
        sub_1001744F8();
      }

      uint64_t v13 = +[NSNotificationCenter defaultCenter];
      CFStringRef v15 = @"error";
      CFStringRef v16 = @"Tinker Pairing failed to get metadata";
      unsigned int v14 = +[NSDictionary dictionaryWithObjects:&v16 forKeys:&v15 count:1];
      [v13 postNotificationName:@"COSDevicePairingFailed" object:0 userInfo:v14];
    }
    else
    {
      if (v12) {
        sub_10017445C(WeakRetained, v11);
      }

      [WeakRetained continueWithFetchingExtendedMetadataFromNanoRegistryWithIDContext:*(void *)(a1 + 32)];
    }
  }
  else
  {
    [WeakRetained receivedWatchPairingExtendedMetadata:v4 withIDContext:*(void *)(a1 + 32)];
  }
}

id sub_1000DD848(uint64_t a1)
{
  uint64_t v2 = pbb_setupflow_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Received com.apple.nanoregistry.isbeginningtopair darwin notification", v4, 2u);
  }

  return [*(id *)(a1 + 32) pairingRequestAttempted:0];
}

void sub_1000DDCD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000DDCFC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = pbb_setupflow_log();
  id v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_FAULT)) {
      sub_100174594(WeakRetained, (uint64_t)v3, v6);
    }

    id v6 = +[NSNotificationCenter defaultCenter];
    CFStringRef v10 = @"error";
    id v11 = v3;
    unsigned int v7 = +[NSDictionary dictionaryWithObjects:&v11 forKeys:&v10 count:1];
    [v6 postNotificationName:@"COSDevicePairingFailed" object:0 userInfo:v7];
    goto LABEL_7;
  }
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v7 = [WeakRetained deviceSetupName];
    int v8 = 138412290;
    unsigned int v9 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Began to discover and Pair: %@", (uint8_t *)&v8, 0xCu);
LABEL_7:
  }
}

void sub_1000DEBF4(id a1)
{
  uint64_t v1 = pbb_setupflow_log();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Watch is in ForceSU State...", v2, 2u);
  }
}

id sub_1000DF918()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)qword_10029B220;
  uint64_t v7 = qword_10029B220;
  if (!qword_10029B220)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_1000DFD94;
    v3[3] = &unk_1002436A8;
    void v3[4] = &v4;
    sub_1000DFD94((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1000DF9E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_1000DFD94(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_10029B228)
  {
    v4[1] = _NSConcreteStackBlock;
    void v4[2] = 3221225472;
    v4[3] = sub_1000DFED8;
    void v4[4] = &unk_1002436E0;
    void v4[5] = v4;
    long long v5 = off_100246CF8;
    uint64_t v6 = 0;
    qword_10029B228 = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!qword_10029B228)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("CLLocationManager");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)sub_1001719C0();
LABEL_8:
    free(v2);
  }
  qword_10029B220 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1000DFED8()
{
  uint64_t result = _sl_dlopen();
  qword_10029B228 = result;
  return result;
}

void sub_1000E0218(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000E0290;
  block[3] = &unk_1002438A0;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1000E0290(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) specifierIDPendingPush];
  if ([v6 length])
  {
    uint64_t v2 = *(void **)(a1 + 32);
    id v3 = [v2 specifierIDPendingPush];
    uint64_t v4 = [v2 specifierForID:v3];

    if (v4)
    {
      long long v5 = pbb_bridge_log();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 136315138;
        int v8 = "-[COSAboutController viewDidLoad]_block_invoke_2";
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s: handling deferred url after ndo specifiers did load", buf, 0xCu);
      }

      [*(id *)(a1 + 32) handlePendingURL];
    }
  }
  else
  {
  }
}

void sub_1000E0848(id a1, PSSpecifierUpdates *a2)
{
}

id sub_1000E13F4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) layoutForLiftedPhone];
}

unsigned char *sub_1000E13FC(uint64_t a1)
{
  uint64_t result = *(unsigned char **)(a1 + 32);
  if (result[8]) {
    return _[result layoutForOpticalPairing];
  }
  return result;
}

id sub_1000E1570(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 16) setFrame:*(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 40);
  double v3 = *(double *)(a1 + 72);
  double v4 = *(double *)(a1 + 80);
  double v5 = *(double *)(a1 + 88);
  double v6 = *(double *)(a1 + 96);

  return [v2 setFrame:v3, v4, v5, v6];
}

unsigned char *sub_1000E15D4(uint64_t a1)
{
  uint64_t result = *(unsigned char **)(a1 + 32);
  if (result[8]) {
    return _[result restDevicesAnimation];
  }
  return result;
}

id sub_1000E16B8(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutInRestingPosition];
}

unsigned char *sub_1000E16C0(uint64_t a1)
{
  uint64_t result = *(unsigned char **)(a1 + 32);
  if (result[8]) {
    return [result pickUpDevicesAnimation];
  }
  return result;
}

void *sub_1000E2104(void *result)
{
  id v1 = result;
  uint64_t v2 = result[5];
  if (v2 == 2)
  {
    uint64_t v8 = result[4];
    uint64_t v9 = 32;
  }
  else
  {
    if (v2 != 1) {
      return result;
    }
    double v3 = [*(id *)(result[4] + 32) view];
    double v4 = [v3 superview];

    if (v4)
    {
      [*(id *)(v1[4] + 32) willMoveToParentViewController:0];
      double v5 = [*(id *)(v1[4] + 32) view];
      [v5 removeFromSuperview];

      [*(id *)(v1[4] + 32) didMoveToParentViewController:0];
      [(id)v1[4] removeChildViewController:*(void *)(v1[4] + 32)];
      uint64_t v6 = v1[4];
      uint64_t v7 = *(void **)(v6 + 32);
      *(void *)(v6 + 32) = 0;
    }
    uint64_t v8 = v1[4];
    uint64_t v9 = 40;
  }
  [*(id *)(v8 + v9) willMoveToParentViewController:];
  [(id)v1[4] addChildViewController:*(void *)(v1[4] + v9)];
  CFStringRef v10 = [(id)v1[4] view];
  id v11 = [*(id *)(v1[4] + v9) view];
  [v10 addSubview:v11];

  BOOL v12 = *(void **)(v1[4] + v9);

  return [v12 didMoveToParentViewController:];
}

uint64_t sub_1000E2260(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1000E2570(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifierID:@"WORKOUT_DND_ID"];
}

id sub_1000E338C()
{
  uint64_t v0 = 387771637;
  if (PBIsInternalInstall())
  {
    id v1 = +[NSUserDefaults standardUserDefaults];
    id v2 = [v1 integerForKey:@"StoreID"];

    if (v2)
    {
      double v3 = pbb_bridge_log();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        int v5 = 134217984;
        id v6 = v2;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "(NRC) Overriding storeID %ld", (uint8_t *)&v5, 0xCu);
      }

      return v2;
    }
  }
  return (id)v0;
}

__CFString *sub_1000E3478()
{
  if (PBIsInternalInstall())
  {
    uint64_t v0 = +[NSUserDefaults standardUserDefaults];
    id v1 = [v0 stringForKey:@"BundleExtensionID"];

    if (v1)
    {
      id v2 = v1;
      double v3 = pbb_bridge_log();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        int v5 = 138412290;
        id v6 = v2;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "(NRC) Overriding bundleExtensionID %@", (uint8_t *)&v5, 0xCu);
      }
    }
    else
    {
      id v2 = @"com.nike.nikeplus-gps.watchkitapp";
    }
  }
  else
  {
    id v2 = @"com.nike.nikeplus-gps.watchkitapp";
  }

  return v2;
}

void sub_1000E45B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000E4968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000E4980()
{
  uint64_t v5 = 0;
  id v6 = &v5;
  uint64_t v7 = 0x2020000000;
  uint64_t v0 = (void **)qword_10029B248;
  uint64_t v8 = qword_10029B248;
  if (!qword_10029B248)
  {
    id v1 = (void *)sub_1000E775C();
    void v6[3] = (uint64_t)dlsym(v1, "SOSContactsChangedNotification");
    qword_10029B248 = v6[3];
    uint64_t v0 = (void **)v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (!v0)
  {
    double v4 = (_Unwind_Exception *)sub_100171A7C();
    _Block_object_dispose(&v5, 8);
    _Unwind_Resume(v4);
  }
  id v2 = *v0;

  return v2;
}

id sub_1000E4A88(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) setHealthStore:a2];
}

id sub_1000E4A94(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifiers];
}

id sub_1000E4C0C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateSOSContactsList];
}

void sub_1000E4CA4(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_1000E4D40;
  void v5[3] = &unk_100243908;
  void v5[4] = *(void *)(a1 + 32);
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
}

id sub_1000E4D40(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 200);
  *(void *)(v3 + 200) = v2;

  uint64_t v5 = *(void **)(a1 + 32);

  return [v5 reloadSpecifiers];
}

void sub_1000E4FF0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1000E500C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_1000E50A8;
  void v5[3] = &unk_100243908;
  void v5[4] = *(void *)(a1 + 32);
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
}

void sub_1000E50A8(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    id v2 = *(void **)(a1 + 32);
    [v2 setMedicalIDData:];
  }
  else
  {
    id v3 = objc_alloc_init((Class)_HKMedicalIDData);
    [*(id *)(a1 + 32) setMedicalIDData:v3];
  }
}

void sub_1000E512C(uint64_t a1, uint64_t a2)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_1000E526C;
  void v5[3] = &unk_1002437D0;
  void v5[4] = *(void *)(a1 + 32);
  void v5[5] = a2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
  if (a2 != 2)
  {
    id v3 = [sub_1000E5274() newtonTriggersEmergencySOSNumber];

    if (!v3)
    {
      id v4 = pbb_bridge_log();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 134217984;
        uint64_t v7 = a2;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Newton is hidden although the current user is eligible. SOSNewtonEligibility: %ld", buf, 0xCu);
      }

      [sub_1000E5274() setNewtonTriggersEmergencySOSNumber:&__kCFBooleanFalse];
    }
  }
}

id sub_1000E526C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setNewtonEligibility:*(void *)(a1 + 40)];
}

id sub_1000E5274()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)qword_10029B260;
  uint64_t v7 = qword_10029B260;
  if (!qword_10029B260)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_1000E7A28;
    v3[3] = &unk_1002436A8;
    void v3[4] = &v4;
    sub_1000E7A28((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1000E5340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000E568C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1000E56A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = WeakRetained;
  if (v3 && WeakRetained)
  {
    uint64_t v6 = +[PSSpecifier groupSpecifierWithID:@"SOS_KAPPA_THIRD_PARTY_TITLE"];
    uint64_t v7 = [sub_1000E5274() crashDetectionThirdPartyFooterDescriptionWatch];
    [v6 setProperty:v7 forKey:PSFooterTextGroupKey];

    uint64_t v8 = [sub_1000E5274() crashDetectionThirdPartyDescription];
    uint64_t v9 = +[PSSpecifier preferenceSpecifierNamed:v8 target:v5 set:0 get:"kappaThirdPartyName:" detail:objc_opt_class() cell:2 edit:0];

    [v9 setProperty:&__kCFBooleanTrue forKey:PSAllowMultilineTitleKey];
    [v9 setProperty:*(void *)(a1 + 32) forKey:PSValueKey];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000E588C;
    block[3] = &unk_100246DE0;
    objc_copyWeak(&v16, (id *)(a1 + 40));
    id v13 = v3;
    id v14 = v6;
    id v15 = v9;
    id v10 = v9;
    id v11 = v6;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    objc_destroyWeak(&v16);
  }
}

void sub_1000E588C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained setKappaApiAppName:*(void *)(a1 + 32)];
  uint64_t v3 = *(void *)(a1 + 48);
  v5[0] = *(void *)(a1 + 40);
  v5[1] = v3;
  uint64_t v4 = +[NSArray arrayWithObjects:v5 count:2];
  [WeakRetained setKappaAPISpecifiers:v4];

  [WeakRetained reloadSpecifiers];
}

id sub_1000E59FC(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadSpecifiers];
}

id sub_1000E6CA8(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadSpecifiers];
}

void sub_1000E70DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000E70F4()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)qword_10029B268;
  uint64_t v7 = qword_10029B268;
  if (!qword_10029B268)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_1000E7A80;
    v3[3] = &unk_1002436A8;
    void v3[4] = &v4;
    sub_1000E7A80((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1000E71C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000E72D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_1000E7704(uint64_t a1)
{
  sub_1000E775C();
  Class result = objc_getClass("SOSManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029B230 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_100174724();
    return (Class)sub_1000E775C();
  }
  return result;
}

uint64_t sub_1000E775C()
{
  v3[0] = 0;
  if (!qword_10029B238)
  {
    v3[1] = _NSConcreteStackBlock;
    v3[2] = 3221225472;
    v3[3] = sub_1000E785C;
    void v3[4] = &unk_1002436E0;
    void v3[5] = v3;
    long long v4 = off_100246E48;
    uint64_t v5 = 0;
    qword_10029B238 = _sl_dlopen();
  }
  uint64_t v0 = qword_10029B238;
  id v1 = (void *)v3[0];
  if (!qword_10029B238)
  {
    id v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t sub_1000E785C()
{
  uint64_t result = _sl_dlopen();
  qword_10029B238 = result;
  return result;
}

Class sub_1000E78D0(uint64_t a1)
{
  sub_1000E775C();
  Class result = objc_getClass("SOSLegacyContactsManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029B240 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = sub_10017474C();
    return (Class)sub_1000E7928(v3);
  }
  return result;
}

void *sub_1000E7928(uint64_t a1)
{
  uint64_t v2 = (void *)sub_1000E775C();
  Class result = dlsym(v2, "SOSContactsChangedNotification");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_10029B248 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class sub_1000E7978(uint64_t a1)
{
  sub_1000E775C();
  Class result = objc_getClass("SOSContactsManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029B250 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = sub_100174774();
    return (Class)sub_1000E79D0(v3);
  }
  return result;
}

Class sub_1000E79D0(uint64_t a1)
{
  sub_1000E775C();
  Class result = objc_getClass("SOSNewtonManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029B258 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = sub_100171568();
    return sub_1000E7A28(v3);
  }
  return result;
}

Class sub_1000E7A28(uint64_t a1)
{
  sub_1000E775C();
  Class result = objc_getClass("SOSUtilities");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029B260 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = sub_100171540();
    return (Class)sub_1000E7A80(v3);
  }
  return result;
}

void sub_1000E7A80(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("HKNavigationController");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029B268 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_10017479C();
    sub_1000E7AD8();
  }
}

void sub_1000E7AD8()
{
  v1[0] = 0;
  if (!qword_10029B270)
  {
    v1[1] = _NSConcreteStackBlock;
    v1[2] = 3221225472;
    v1[3] = sub_1000E7BD4;
    v1[4] = &unk_1002436E0;
    v1[5] = v1;
    long long v2 = off_100246E60;
    uint64_t v3 = 0;
    qword_10029B270 = _sl_dlopen();
  }
  uint64_t v0 = (void *)v1[0];
  if (!qword_10029B270)
  {
    uint64_t v0 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v1[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t sub_1000E7BD4()
{
  uint64_t result = _sl_dlopen();
  qword_10029B270 = result;
  return result;
}

Class sub_1000E7C48(uint64_t a1)
{
  sub_1000E7AD8();
  Class result = objc_getClass("HKMedicalIDViewController");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029B278 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = sub_1001747C4();
    return (Class)sub_1000E7CA0(v3);
  }
  return result;
}

Class sub_1000E7CA0(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_10029B288)
  {
    v4[1] = _NSConcreteStackBlock;
    void v4[2] = 3221225472;
    v4[3] = sub_1000E7DE4;
    void v4[4] = &unk_1002436E0;
    void v4[5] = v4;
    long long v5 = off_100246E78;
    uint64_t v6 = 0;
    qword_10029B288 = _sl_dlopen();
    long long v2 = (void *)v4[0];
    if (!qword_10029B288)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("OBPrivacyPresenter");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    long long v2 = (void *)sub_1001747EC();
LABEL_8:
    free(v2);
  }
  qword_10029B280 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1000E7DE4()
{
  uint64_t result = _sl_dlopen();
  qword_10029B288 = result;
  return result;
}

__CFString *sub_1000E7E58(unint64_t a1)
{
  if (a1 > 3)
  {
    long long v2 = @"Unknown";
  }
  else
  {
    long long v2 = (__CFString *)*(id *)*(&off_100246E90 + a1);
  }
  return v2;
}

BOOL sub_1000E7FF4()
{
  Boolean keyExistsAndHasValidFormat = 0;
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(@"AOTEnabled", @"com.apple.system.prefs", &keyExistsAndHasValidFormat);
  if (keyExistsAndHasValidFormat) {
    BOOL v1 = AppBooleanValue == 0;
  }
  else {
    BOOL v1 = 0;
  }
  return !v1;
}

void sub_1000E80B4(uint64_t a1, void *a2)
{
  id v2 = a2;
  [v2 reloadSpecifierID:@"TRITIUM_ID"];
  [v2 _updatePrivacyRowVisibility];
}

void sub_1000E9660(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  long long v4 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained refreshBackupStatus];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    _DWORD v7[2] = sub_1000E9794;
    v7[3] = &unk_1002438A0;
    void v7[4] = v4;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    void v5[2] = sub_1000E9840;
    void v5[3] = &unk_100245550;
    objc_copyWeak(&v6, v2);
    void v5[4] = *(void *)(a1 + 32);
    +[UIView animateWithDuration:0 delay:v7 options:v5 animations:0.5 completion:0.0];
    objc_destroyWeak(&v6);
  }
}

void sub_1000E9780(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000E9794(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) spinner];
  [v2 setAlpha:1.0];

  uint64_t v3 = [*(id *)(a1 + 32) setupController];
  unsigned __int8 v4 = [v3 expressMode];

  if ((v4 & 1) == 0)
  {
    id v5 = [*(id *)(a1 + 32) buttonTray];
    [v5 setAlpha:1.0];
  }
}

void sub_1000E9840(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained setCompletedIntroAnimation:1];
    unsigned __int8 v4 = [v3 successBehavior];
    [v4 deactivate];

    id v5 = pbb_setupflow_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = [v3 setupController];
      uint64_t v7 = [v3 setupController];
      int v11 = 138412546;
      BOOL v12 = v6;
      __int16 v13 = 1024;
      unsigned int v14 = [v7 expressMode];
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "setupController: %@, expressMode: %{BOOL}d", (uint8_t *)&v11, 0x12u);
    }
    uint64_t v8 = [v3 setupController];
    unsigned int v9 = [v8 expressMode];

    if (v9)
    {
      id v10 = +[NSNotificationCenter defaultCenter];
      [v10 addObserver:*(void *)(a1 + 32) selector:"outroAnimationFinished:" name:@"COSOutroAnimationFinishedNotification" object:0];
    }
  }
}

void sub_1000E9AA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000E9ABC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained setupController];
  unsigned int v3 = [v2 expressMode];

  if (v3)
  {
    unsigned __int8 v4 = pbb_setupflow_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Outro finished, express mode enabled, launching", v6, 2u);
    }

    id v5 = [WeakRetained delegate];
    [v5 buddyControllerDone:WeakRetained nextControllerClass:objc_opt_class()];
  }
}

id sub_1000EACF8(uint64_t a1)
{
  return [*(id *)(a1 + 32) refreshBackupStatus];
}

BOOL COSBBScannedResultsReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v8 = v7 + 1;
        if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
        v6 |= (unint64_t)(v9 & 0x7F) << v4;
        if ((v9 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v11 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      switch((v6 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 80) |= 0x100u;
          unint64_t v13 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v13 <= 0xFFFFFFFFFFFFFFF7 && v13 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v14 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v13);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v13 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v14 = 0;
          }
          id v23 = &OBJC_IVAR___COSBBScannedResults__time;
          goto LABEL_65;
        case 2u:
          *(_WORD *)(a1 + 80) |= 0x10u;
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 <= 0xFFFFFFFFFFFFFFF7 && v15 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v14 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v14 = 0;
          }
          id v23 = &OBJC_IVAR___COSBBScannedResults__none;
          goto LABEL_65;
        case 3u:
          *(_WORD *)(a1 + 80) |= 2u;
          unint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v16 <= 0xFFFFFFFFFFFFFFF7 && v16 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v14 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v14 = 0;
          }
          id v23 = &OBJC_IVAR___COSBBScannedResults__invalid;
          goto LABEL_65;
        case 4u:
          *(_WORD *)(a1 + 80) |= 8u;
          unint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v17 <= 0xFFFFFFFFFFFFFFF7 && v17 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v14 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v14 = 0;
          }
          id v23 = &OBJC_IVAR___COSBBScannedResults__leftWristRightCrown;
          goto LABEL_65;
        case 5u:
          *(_WORD *)(a1 + 80) |= 4u;
          unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v18 <= 0xFFFFFFFFFFFFFFF7 && v18 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v14 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v14 = 0;
          }
          id v23 = &OBJC_IVAR___COSBBScannedResults__leftWristLeftCrown;
          goto LABEL_65;
        case 6u:
          *(_WORD *)(a1 + 80) |= 0x80u;
          unint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v14 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v14 = 0;
          }
          id v23 = &OBJC_IVAR___COSBBScannedResults__rightWristRightCrown;
          goto LABEL_65;
        case 7u:
          *(_WORD *)(a1 + 80) |= 0x40u;
          unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v14 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v14 = 0;
          }
          id v23 = &OBJC_IVAR___COSBBScannedResults__rightWristLeftCrown;
          goto LABEL_65;
        case 8u:
          *(_WORD *)(a1 + 80) |= 0x20u;
          unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v14 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v14 = 0;
          }
          id v23 = &OBJC_IVAR___COSBBScannedResults__palm;
          goto LABEL_65;
        case 9u:
          *(_WORD *)(a1 + 80) |= 1u;
          unint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            uint64_t v14 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22 + 8;
          }
          else
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            uint64_t v14 = 0;
          }
          id v23 = &OBJC_IVAR___COSBBScannedResults__dock;
LABEL_65:
          *(void *)(a1 + *v23) = v14;
          goto LABEL_66;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_66:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          break;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

id sub_1000ED624(uint64_t a1, void *a2)
{
  return _[a2 _recheckAPMSettings];
}

void sub_1000EE0A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1000EE0C0(uint64_t a1, void *a2)
{
  id result = [a2 BOOLValue];
  *(unsigned char *)(*(void *)(a1 + 32) + 185) = (_BYTE)result;
  return result;
}

void sub_1000EE0F8(uint64_t a1, void *a2)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 186) = 1;
  *(unsigned char *)(*(void *)(a1 + 32) + 184) = [a2 isEqualToString:@"on"];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000EE1B0;
  block[3] = &unk_1002438A0;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_1000EE1B0(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadSpecifiers];
}

void sub_1000EE1B8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unint64_t v8 = WeakRetained;
  if (v6)
  {
    char v9 = pbb_bridge_log();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v15 = v6;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "error when attempting to retrieve airplane mode settings: %@", buf, 0xCu);
    }

    BPSPresentGizmoUnreachableServiceAlertWithDismissalHandler();
  }
  else if (WeakRetained)
  {
    id v10 = pbb_bridge_log();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v15 = v5;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "airplane mode settings returned from the watch %@", buf, 0xCu);
    }

    [v8 setAirplaneModeSettingsLoaded:1];
    int v11 = [v5 objectForKey:kNSSAirplaneModeBluetoothKey];
    [v8 setBluetoothWithAirplaneMode:[v11 BOOLValue]];

    BOOL v12 = [v5 objectForKey:kNSSAirplaneModeWifiKey];
    [v8 setWifiWithAirplaneMode:[v12 BOOLValue]];

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000EE3C0;
    block[3] = &unk_1002438A0;
    void block[4] = v8;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

id sub_1000EE3C0(uint64_t a1)
{
  [*(id *)(a1 + 32) setAirplaneModeSettingsLoaded:1];
  id v2 = *(void **)(a1 + 32);

  return [v2 reloadSpecifiers];
}

void sub_1000EE654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000EE680(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained updateSettingsSpecifiersForChanges:v3];
}

void sub_1000EEEA4(id a1, UIAlertAction *a2)
{
  id v2 = [UIApp activeWatch];
  id v3 = [v2 valueForProperty:NRDevicePropertyIsPaired];
  unsigned int v4 = [v3 BOOLValue];

  unsigned int v5 = v4 | [UIApp isActivated];
  id v6 = pbb_bridge_log();
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (v2) {
    BOOL v8 = v5 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  if (v8)
  {
    if (v7)
    {
      *(_WORD *)int v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "User Reset Buddy!", v11, 2u);
    }

    [UIApp resetSetupFlowAnimated:1 forEvent:42];
  }
  else
  {
    if (v7)
    {
      *(_WORD *)int v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "User Reset Buddy! - Unpairing", v11, 2u);
    }

    v12[0] = @"obliterate";
    v12[1] = @"BDE85C67-0FDD-4A95-A9B9-3CB5DD0C06A2";
    v13[0] = &__kCFBooleanTrue;
    v13[1] = &__kCFBooleanTrue;
    char v9 = +[NSDictionary dictionaryWithObjects:v13 forKeys:v12 count:2];
    id v10 = +[NRPairedDeviceRegistry sharedInstance];
    [v10 unpairWithDevice:v2 withOptions:v9 operationHasBegun:&stru_100246F08];
  }
}

void sub_1000EF04C(id a1, NSError *a2)
{
  id v2 = a2;
  id v3 = pbb_bridge_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    unsigned int v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "User Reset Buddy! - Unpairing result: (%@)", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1000EF0F8(id a1, UIAlertAction *a2)
{
  id v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "User Did Not Reset Buddy.", v3, 2u);
  }
}

void sub_1000EF334(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 removeObserver:*(void *)(a1 + 32) name:PBBridgeDidCompletePasscodeCreationNotification object:0];

  id v3 = [UIApp activeWatch];
  id v4 = [objc_alloc((Class)NSUUID) initWithUUIDString:@"CFD76F6A-B79A-475D-BCD7-7EB10AC33956"];
  unsigned int v5 = [v3 supportsCapability:v4];

  id v6 = pbb_bridge_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v12[0] = 67109378;
    v12[1] = 110;
    __int16 v13 = 2080;
    uint64_t v14 = "-[COSPasscodeCreateViewController passcodeCreationComplete]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%d %s", (uint8_t *)v12, 0x12u);
  }

  BOOL v7 = [UIApp bridgeController];
  if ([v7 isTinkerPairing])
  {
  }
  else
  {
    BOOL v8 = +[MCProfileConnection sharedConnection];
    unsigned int v9 = [v8 isPasscodeSet];

    if (((v9 ^ 1 | v5) & 1) == 0)
    {
      int v11 = [*(id *)(a1 + 32) navigationItem];
      [v11 setBackBarButtonItem:0];

      id v10 = [*(id *)(a1 + 32) delegate];
      [v10 buddyControllerDone:*(void *)(a1 + 32) nextControllerClass:objc_opt_class()];
      goto LABEL_8;
    }
  }
  id v10 = [*(id *)(a1 + 32) delegate];
  [v10 buddyControllerDone:*(void *)(a1 + 32)];
LABEL_8:
}

void sub_1000F1860(uint64_t a1)
{
  BOOL v1 = +[NRDeviceDiscoveryController sharedInstance];
  id v2 = [v1 devices];

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v3 = v2;
  id v4 = [v3 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v18;
    uint64_t v7 = NRDevicePropertyAdvertisedName;
    uint64_t v8 = PBBridgeAdvertisingSizeKey;
    while (2)
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v18 != v6) {
          objc_enumerationMutation(v3);
        }
        id v10 = [*(id *)(*((void *)&v17 + 1) + 8 * i) valueForProperty:v7];
        int v11 = PBAdvertisingInfoFromPayload();
        BOOL v12 = [v11 objectForKeyedSubscript:v8];
        id v13 = [v12 integerValue];

        if (v13 == (id)19)
        {
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472;
          block[2] = sub_1000F1A5C;
          block[3] = &unk_1002439E0;
          objc_copyWeak(&v16, (id *)(a1 + 32));
          dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
          objc_destroyWeak(&v16);

          goto LABEL_11;
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v17 objects:v21 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
LABEL_11:
}

void sub_1000F1A5C(uint64_t a1)
{
  BOOL v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setUsingAgaveReticuleMetrics:1];

  id v3 = objc_loadWeakRetained(v1);
  [v3 _updateSubviews];
}

void sub_1000F2450(uint64_t a1, int a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  if (a2)
  {
    [*(id *)(a1 + 32) eraseSettingsAndContent:a3];
  }
  else
  {
    uint64_t v8 = pbb_bridge_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 67109378;
      v9[1] = 0;
      __int16 v10 = 2112;
      id v11 = v7;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "skipping erase for proceedToUnpair: %d error: %@", (uint8_t *)v9, 0x12u);
    }
  }
}

void sub_1000F2634(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[UIApplication sharedApplication];
  [v4 setNetworkActivityIndicatorVisible:0];

  id v5 = pbb_bridge_log();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v6)
    {
      int v7 = 138412290;
      id v8 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Gizmo obliteration failed with error: %@", (uint8_t *)&v7, 0xCu);
    }

    BPSPresentGizmoUnreachableServiceAlertWithDismissalHandler();
    [*(id *)(a1 + 32) setProperty:&__kCFBooleanTrue forKey:PSEnabledKey];
    [*(id *)(a1 + 40) reloadSpecifier:*(void *)(a1 + 32)];
  }
  else
  {
    if (v6)
    {
      LOWORD(v7) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Gizmo obliteration succeeded!", (uint8_t *)&v7, 2u);
    }
  }
}

void sub_1000F2D18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000F2D30(id a1, BOOL a2, NSError *a3)
{
  BOOL v3 = a2;
  id v4 = a3;
  if (v4 || !v3)
  {
    id v5 = pbb_bridge_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6[0] = 67109378;
      v6[1] = v3;
      __int16 v7 = 2112;
      id v8 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Failed to erase all cellular plans (wasSuccessful:%d): (%@)", (uint8_t *)v6, 0x12u);
    }
  }
}

Class sub_1000F2F1C(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_10029B2A8)
  {
    v4[1] = _NSConcreteStackBlock;
    void v4[2] = 3221225472;
    v4[3] = sub_1000F3060;
    void v4[4] = &unk_1002436E0;
    void v4[5] = v4;
    long long v5 = off_100246FB0;
    uint64_t v6 = 0;
    qword_10029B2A8 = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!qword_10029B2A8)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("CTCellularPlanManager");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    id v2 = (void *)sub_1001748C0();
LABEL_8:
    free(v2);
  }
  qword_10029B2A0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1000F3060()
{
  uint64_t result = _sl_dlopen();
  qword_10029B2A8 = result;
  return result;
}

void sub_1000F370C(uint64_t a1, uint64_t a2)
{
  [*(id *)(*(void *)(a1 + 32) + 16) setProxiedDevice:a2];
  id v3 = [*(id *)(a1 + 32) delegate];
  [v3 buddyControllerReleaseHold:*(void *)(a1 + 32)];
}

void sub_1000F4CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000F4CEC(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
  id v3 = a2;
  [v3 setSecureTextEntry:1];
  [v3 setReturnKeyType:9];
  [v3 setAutocorrectionType:1];
  [v3 setAutocapitalizationType:0];
  [v3 setEnablesReturnKeyAutomatically:1];
  [v3 setKeyboardAppearance:1];
}

void sub_1000F4D84(uint64_t a1)
{
  BOOL v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) text];
  [v1 signInToAccountWithPassword:v2];
}

void sub_1000F5344(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1000F5360(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v11 = WeakRetained;
    uint64_t v2 = [WeakRetained buttonTray];
    [v2 setAlpha:0.0];

    id v3 = [v11 activityIndicator];
    [v3 startAnimating];

    id v4 = [v11 activityIndicator];
    [v4 setAlpha:1.0];

    long long v5 = [(id)objc_opt_class() appleIDServiceState];
    unsigned __int8 v6 = [v5 recoveringCredentials];

    __int16 v7 = [v11 headerView];
    id v8 = v7;
    if (v6)
    {
      [v7 setDetailText:&stru_100249230];
    }
    else
    {
      unsigned int v9 = +[NSBundle mainBundle];
      __int16 v10 = [v9 localizedStringForKey:@"VERIFYING_APPLEID" value:&stru_100249230 table:@"Localizable"];
      [v8 setDetailText:v10];
    }
    id WeakRetained = v11;
  }
}

void sub_1000F5550(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1000F556C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    uint64_t v2 = [WeakRetained buttonTray];
    [v2 setAlpha:1.0];

    id v3 = [v5 activityIndicator];
    [v3 stopAnimating];

    id v4 = [v5 activityIndicator];
    [v4 setAlpha:0.0];

    [v5 refreshViews];
    id WeakRetained = v5;
  }
}

void sub_1000F5A6C(id a1, UIAlertAction *a2)
{
  uint64_t v2 = pbb_accountsignin_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Not connected alert- user selected 'OK'", v3, 2u);
  }
}

void sub_1000F5AD4(id a1, UIAlertAction *a2)
{
  uint64_t v2 = pbb_accountsignin_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Not connected alert- user selected 'TURN OFF'", v3, 2u);
  }

  +[PSAirplaneModeSettingsDetail setEnabled:0];
}

void sub_1000F655C(uint64_t a1)
{
  BOOL v1 = [*(id *)(a1 + 32) objectForKeyedSubscript:kAAErrorDetailsActionButtonURLKey];
  uint64_t v2 = pbb_accountsignin_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 67109634;
    v5[1] = 424;
    __int16 v6 = 2080;
    __int16 v7 = "+[COSAppleIDLoginViewController showAlertForLoginFailureWithError:presentingViewController:]_block_invoke";
    __int16 v8 = 2112;
    unsigned int v9 = v1;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%d %s: Opening URL: (%@)", (uint8_t *)v5, 0x1Cu);
  }

  id v3 = (void *)UIApp;
  id v4 = +[NSURL URLWithString:v1];
  [v3 openURL:v4 withCompletionHandler:0];
}

void sub_1000F6680(id a1, AMSDialogResult *a2, NSError *a3)
{
  id v4 = a2;
  id v5 = a3;
  if (v4)
  {
    __int16 v6 = +[AMSURLRequestEncoder bagSubProfile];
    __int16 v7 = +[AMSURLRequestEncoder bagSubProfileVersion];
    __int16 v8 = +[AMSBag bagForProfile:v6 profileVersion:v7];

    id v9 = [objc_alloc((Class)AMSHandleDialogResultTask) initWithResult:v4 bag:v8];
    __int16 v10 = [v9 perform];
    [v10 resultWithCompletion:&stru_100247098];
  }
  else
  {
    __int16 v8 = pbb_accountsignin_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 138412290;
      BOOL v12 = v5;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "AMSUIAlertDialogTask error: %@", (uint8_t *)&v11, 0xCu);
    }
  }
}

void sub_1000F67DC(id a1, BOOL a2, NSError *a3)
{
  BOOL v3 = a2;
  id v4 = a3;
  id v5 = pbb_accountsignin_log();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 67109378;
    v6[1] = v3;
    __int16 v7 = 2112;
    __int16 v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "AMSHandleDialogResultTask handled: %{BOOL}d error: %@", (uint8_t *)v6, 0x12u);
  }
}

void sub_1000F7298(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000F72B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    [WeakRetained stopNetworkRequest];
    BOOL v3 = [v5 delegate];
    [v3 buddyControllerDone:*(void *)(a1 + 32)];

    id v4 = [v5 delegate];
    [v4 checkInWithPairingMetricForSignInState];

    [v5 _successfullySignedIn];
    id WeakRetained = v5;
  }
}

void sub_1000F7810(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000F7834(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    [WeakRetained stopNetworkRequest];
    BOOL v3 = [v5 delegate];
    [v3 buddyControllerDone:*(void *)(a1 + 32)];

    id v4 = [v5 delegate];
    [v4 checkInWithPairingMetricForSignInState];

    [v5 _successfullySignedIn];
    id WeakRetained = v5;
  }
}

id sub_1000F7AD8(uint64_t a1)
{
  return [*(id *)(a1 + 32) checkAndReleaseHold];
}

void sub_1000FA1A8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 120));
  _Unwind_Resume(a1);
}

void sub_1000FA22C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    BOOL v3 = [WeakRetained delegate];
    [v3 appleIDSilentSignInControllerSignedAccountType:0 withSuccess:*(unsigned __int8 *)(a1 + 40)];

    id v4 = [v5 iCloudAuthController];
    [v4 setDelegate:0];

    [v5 setICloudAuthController:0];
    id WeakRetained = v5;
  }
}

void sub_1000FA2BC(id a1, BOOL a2, NSError *a3)
{
  BOOL v3 = a2;
  id v4 = pbb_accountsignin_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 67109120;
    v5[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Silent combined sign in for iTunesStore (via iCloud) completed with success: (%d)", (uint8_t *)v5, 8u);
  }
}

void sub_1000FA360(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    BOOL v3 = [WeakRetained delegate];
    [v3 appleIDSilentSignInControllerSignedAccountType:1 withSuccess:*(unsigned __int8 *)(a1 + 40)];

    id v4 = [v5 iMessageAuthController];
    [v4 setDelegate:0];

    [v5 setIMessageAuthController:0];
    id WeakRetained = v5;
  }
}

void sub_1000FA3F0(id a1, BOOL a2, NSError *a3)
{
  BOOL v3 = a2;
  id v4 = pbb_accountsignin_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 67109120;
    v5[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Silent combined sign in for iTunesStore (via iMessage) completed with success: (%d)", (uint8_t *)v5, 8u);
  }
}

void sub_1000FA494(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    BOOL v3 = [WeakRetained delegate];
    [v3 appleIDSilentSignInControllerSignedAccountType:2 withSuccess:*(unsigned __int8 *)(a1 + 40)];

    id v4 = [v5 faceTimeAuthController];
    [v4 setDelegate:0];

    [v5 setFaceTimeAuthController:0];
    id WeakRetained = v5;
  }
}

void sub_1000FA524(id a1, BOOL a2, NSError *a3)
{
  BOOL v3 = a2;
  id v4 = pbb_accountsignin_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 67109120;
    v5[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Silent combined sign in for iTunesStore (via FaceTime) completed with success: (%d)", (uint8_t *)v5, 8u);
  }
}

void sub_1000FAD50(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  unsigned int v6 = +[COSAppleIDAuthController signInEndResultForValue:a2 error:v5];
  __int16 v7 = pbb_accountsignin_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    *(_DWORD *)long long buf = 134218498;
    uint64_t v16 = v8;
    __int16 v17 = 1024;
    unsigned int v18 = v6;
    __int16 v19 = 2112;
    id v20 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Saved account (%p) to paired device with success: (%d), error: (%@)", buf, 0x1Cu);
  }

  if (v6) {
    id v9 = 0;
  }
  else {
    id v9 = v5;
  }
  id v10 = v9;

  if (*(void *)(a1 + 40))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000FAED8;
    block[3] = &unk_100247128;
    id v13 = *(id *)(a1 + 40);
    char v14 = v6;
    id v12 = v10;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

uint64_t sub_1000FAED8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 48), *(void *)(a1 + 32));
}

void sub_1000FB628(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 56), a2);
  id v4 = a2;
  [*(id *)(a1 + 32) performProxiedAuthentication];
}

void sub_1000FB8E8(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 56), a2);
  id v4 = a2;
  [*(id *)(a1 + 32) performProxiedAuthentication];
}

void sub_1000FBA78(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained signInTimerFired];
}

id sub_1000FBBD8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (v3)
  {
    NSErrorUserInfoKey v8 = NSUnderlyingErrorKey;
    id v9 = v3;
    id v5 = +[NSDictionary dictionaryWithObjects:&v9 forKeys:&v8 count:1];
  }
  else
  {
    id v5 = 0;
  }
  unsigned int v6 = +[NSError errorWithDomain:@"com.apple.COSAppleIDAuthErrorDomain" code:a1 userInfo:v5];

  return v6;
}

void sub_1000FC080(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  unsigned int v6 = pbb_accountsignin_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v8 = 134218498;
    uint64_t v9 = v7;
    __int16 v10 = 1024;
    int v11 = a2;
    __int16 v12 = 2112;
    id v13 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Saved IDMS account (%p) with success: (%d), error: (%@)", (uint8_t *)&v8, 0x1Cu);
  }
}

void sub_1000FC53C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000FC568(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  unsigned int v6 = +[COSAppleIDAuthController signInEndResultForValue:a2 error:v5];
  uint64_t v7 = pbb_accountsignin_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    *(_DWORD *)long long buf = 134218498;
    uint64_t v17 = v8;
    __int16 v18 = 1024;
    unsigned int v19 = v6;
    __int16 v20 = 2112;
    id v21 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Saved account (%p) to paired device with success: (%d), error: (%@)", buf, 0x1Cu);
  }

  if (v6) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v5;
  }
  id v10 = v9;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000FC6F0;
  block[3] = &unk_100243930;
  objc_copyWeak(&v14, (id *)(a1 + 40));
  char v15 = v6;
  id v13 = v10;
  id v11 = v10;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v14);
}

void sub_1000FC6F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    if ([WeakRetained waitingForWatchSignInAfterInteractiveAuth])
    {
      [v4 setWaitingForWatchSignInAfterInteractiveAuth:0];
      if (*(unsigned char *)(a1 + 48)) {
        uint64_t v3 = 2;
      }
      else {
        uint64_t v3 = 1;
      }
      [v4 setWatchSignInResult:v3];
      [v4 setWatchSignInErrorResult:*(void *)(a1 + 32)];
    }
    [v4 savedAccountToPairedDeviceWithSuccess:*(unsigned __int8 *)(a1 + 48) error:*(void *)(a1 + 32)];
    id WeakRetained = v4;
  }
}

void sub_1000FCCF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000FCD24(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = pbb_accountsignin_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 134218242;
    id v15 = [v5 count];
    __int16 v16 = 2112;
    id v17 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "authenticationResults: (%lu objects), error: (%@)", buf, 0x16u);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000FCE90;
  block[3] = &unk_100243A30;
  objc_copyWeak(&v13, (id *)(a1 + 32));
  id v11 = v5;
  id v12 = v6;
  id v8 = v6;
  id v9 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v13);
}

void sub_1000FCE90(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained authenticatedWithResults:*(void *)(a1 + 32) error:*(void *)(a1 + 40)];
}

void sub_1000FD1C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000FD1EC(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1000FD294;
  v2[3] = &unk_100243D28;
  objc_copyWeak(&v4, (id *)(a1 + 40));
  id v3 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);

  objc_destroyWeak(&v4);
}

void sub_1000FD294(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained saveAccountToPairedDeviceWithRawPassword:*(void *)(a1 + 32)];
}

void sub_1000FD4E0(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = pbb_accountsignin_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v8[0] = 67109378;
    v8[1] = a2;
    __int16 v9 = 2112;
    id v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Saved verified account locally with success: (%d), error: (%@)", (uint8_t *)v8, 0x12u);
  }

  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(void))(v7 + 16))();
  }
}

void sub_1000FDB78(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = pbb_accountsignin_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v8 = 134218498;
    uint64_t v9 = v7;
    __int16 v10 = 1024;
    int v11 = a2;
    __int16 v12 = 2112;
    id v13 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Saved IDMS account (%p) with success: %{BOOL}d, error: (%@)", (uint8_t *)&v8, 0x1Cu);
  }
}

void sub_1000FE3A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000FE3CC(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  if (v2)
  {
    id v3 = pbb_accountsignin_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_100174D98((uint64_t)v2, v3);
    }
  }
}

void sub_1000FE424(uint64_t a1, char a2, void *a3, void *a4, void *a5)
{
  id v9 = a4;
  id v10 = a5;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_1000FE52C;
  v13[3] = &unk_1002471C0;
  objc_copyWeak(v17, (id *)(a1 + 40));
  char v18 = a2;
  id v14 = v9;
  id v15 = v10;
  id v16 = *(id *)(a1 + 32);
  v17[1] = a3;
  id v11 = v10;
  id v12 = v9;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v13);

  objc_destroyWeak(v17);
}

void sub_1000FE52C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = pbb_accountsignin_log();
  uint64_t v4 = (uint64_t)v3;
  if (WeakRetained)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      id v5 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 72)];
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = *(void *)(a1 + 40);
      int v11 = 138412802;
      id v12 = v5;
      __int16 v13 = 2114;
      uint64_t v14 = v6;
      __int16 v15 = 2114;
      uint64_t v16 = v7;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v4, OS_LOG_TYPE_DEFAULT, "sendTinkerAccountCredentialsWithContext:completion: (Success: %@ - Error: %{public}@ detailedError: %{public}@)", (uint8_t *)&v11, 0x20u);
    }
    [WeakRetained _resetTermsInformation];
    if (+[COSAppleIDAuthController isTermsUpdateNeededError:*(void *)(a1 + 40)])
    {
      int v8 = [*(id *)(a1 + 40) userInfo];
      uint64_t v4 = [v8 objectForKeyedSubscript:NSUnderlyingErrorKey];

      id v9 = *(id *)(a1 + 48);
      if (v9
        || ([(id)v4 userInfo],
            id v10 = objc_claimAutoreleasedReturnValue(),
            [v10 objectForKeyedSubscript:kAAAccountPersonIDKey],
            id v9 = (id)objc_claimAutoreleasedReturnValue(),
            v10,
            v9))
      {
        [WeakRetained presentTermsWithCachedAuthResultsForDSID:v9];
      }
      else
      {
        [WeakRetained setSatelliteSignInStatus:*(void *)(a1 + 64)];
        [WeakRetained setSatelliteSignInDetailedError:*(void *)(a1 + 40)];
        [WeakRetained setSatelliteSignInErrorDescription:*(void *)(a1 + 32)];
        id v9 = [WeakRetained satelliteSignInCompletion];
        (*((void (**)(id, void, void, void))v9 + 2))(v9, *(void *)(a1 + 64), *(void *)(a1 + 32), *(void *)(a1 + 40));
      }
    }
    else
    {
      [WeakRetained setSatelliteSignInStatus:*(void *)(a1 + 64)];
      [WeakRetained setSatelliteSignInDetailedError:*(void *)(a1 + 40)];
      [WeakRetained setSatelliteSignInErrorDescription:*(void *)(a1 + 32)];
      uint64_t v4 = [WeakRetained satelliteSignInCompletion];
      (*(void (**)(uint64_t, void, void, void))(v4 + 16))(v4, *(void *)(a1 + 64), *(void *)(a1 + 32), *(void *)(a1 + 40));
    }
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    sub_100174E24();
  }
}

void sub_1000FEBF4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = pbb_accountsignin_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = +[NSNumber numberWithBool:a2];
    *(_DWORD *)long long buf = 136315650;
    unsigned int v19 = "-[COSAppleIDAuthController repairGuardianAccount:]_block_invoke";
    __int16 v20 = 2112;
    id v21 = v7;
    __int16 v22 = 2112;
    id v23 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%s: success %@ (error: %@)", buf, 0x20u);
  }
  if (v5 || !a2)
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    int v8 = objc_alloc_init(COSPrimaryAccountAuthenticationHelper);
    uint64_t v9 = *(void *)(a1 + 32);
    id v10 = *(void **)(v9 + 216);
    *(void *)(v9 + 216) = v8;

    uint64_t v11 = *(void *)(a1 + 32);
    id v12 = *(void **)(v11 + 216);
    id WeakRetained = objc_loadWeakRetained((id *)(v11 + 48));
    uint64_t v14 = +[NSBundle mainBundle];
    __int16 v15 = [v14 localizedStringForKey:@"GUARDIAN_ACCOUNT_PASSWORD_PROMPT_MESSAGE" value:&stru_100249230 table:@"Localizable-tinker"];
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    id v16[2] = sub_1000FEDF4;
    v16[3] = &unk_100246400;
    id v17 = *(id *)(a1 + 40);
    [v12 authenticatePrimaryAccountWithController:WeakRetained withReason:v15 completion:v16];
  }
}

uint64_t sub_1000FEDF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, BOOL))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), a3 == 0);
}

uint64_t sub_1000FEE0C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000FEF9C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000FF068;
  block[3] = &unk_100243B98;
  uint64_t v7 = *(void *)(a1 + 32);
  id v11 = v6;
  uint64_t v12 = v7;
  id v13 = v5;
  id v8 = v5;
  id v9 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1000FF068(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 88));
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v3 = *(void *)(a1 + 40);
    id v6 = WeakRetained;
    uint64_t v5 = 0;
  }
  else
  {
    objc_storeStrong((id *)(*(void *)(a1 + 40) + 136), *(id *)(a1 + 48));
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 88));
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v3 = *(void *)(a1 + 40);
    id v6 = WeakRetained;
    uint64_t v5 = 1;
  }
  [WeakRetained appleIDAuthController:v3 didSignInWithSuccess:v5 error:v4];
}

void sub_1000FF60C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000FF630(uint64_t a1, void *a2)
{
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained setCircleStateController:0];
    [v4 setAuthenticationResults:*(void *)(a1 + 32)];
    uint64_t v5 = [UIApp setupController];
    [v5 setTinkerSignInId:*(void *)(a1 + 40)];

    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      uint64_t v7 = [v8 error];
      (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);
    }
  }
}

void sub_100100558(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_100100898(id a1, BOOL a2, NSError *a3)
{
  BOOL v3 = a2;
  uint64_t v4 = a3;
  uint64_t v5 = pbb_accountsignin_log();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = +[NSNumber numberWithBool:v3];
    int v7 = 138412546;
    id v8 = v6;
    __int16 v9 = 2112;
    id v10 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Success: %@ Error %@", (uint8_t *)&v7, 0x16u);
  }
}

void sub_100100B40(uint64_t a1)
{
  uint64_t v2 = pbb_accountsignin_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 138412290;
    uint64_t v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Removed FollowUp for %@", (uint8_t *)&v4, 0xCu);
  }
}

uint64_t sub_1001013EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100101824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100101848(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = WeakRetained;
  if (!WeakRetained)
  {
    id v8 = pbb_setupflow_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100174F6C(v8);
    }
    goto LABEL_9;
  }
  [WeakRetained setCurrentSession:v3];
  if ([v3 syncSessionType] == (id)2 && objc_msgSend(v3, "syncSessionState") == (id)1)
  {
    [v5 setCurrentState:2];
    uint64_t v6 = [v5 _syncingDevice];
    [v5 setMigratingDevice:v6];

    [v5 updateMigrationState];
  }
  int v7 = [v5 delegate];

  if (v7)
  {
    id v8 = [v5 delegate];
    id v9 = [v5 currentState];
    id v10 = [v5 currentSession];
    [v10 sessionProgress];
    double v12 = v11;
    id v13 = [v5 migratingDevice];
    [v8 migrationProgressUpdate:v9 percentageComplete:v13 migratingDevice:v12];

LABEL_9:
  }
}

void sub_1001022E4(uint64_t a1, void *a2)
{
  id v2 = a2;
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveObserver(DarwinNotifyCenter, v2, NRMigrationDevicesCannotBeDiscoveredDarwinNotification, 0);
  if ([v2 discoveredWatch])
  {
    int v4 = pbb_setupflow_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Got error after a watch was discovered, ignoring", v7, 2u);
    }
  }
  else
  {
    [v2 setCurrentState:4];
    int v4 = [v2 delegate];
    id v5 = [v2 currentState];
    uint64_t v6 = [v2 migratingDevice];
    [v4 migrationProgressUpdate:v5 percentageComplete:v6 migratingDevice:0.0];
  }
}

id sub_1001023DC(uint64_t a1, void *a2)
{
  return [a2 setDiscoveredWatch:1];
}

void sub_1001023E8(uint64_t a1)
{
  id v2 = +[NRMigrator sharedMigrator];
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472;
  uint64_t v6 = sub_100102480;
  int v7 = &unk_100243A08;
  uint64_t v8 = v3;
  [v2 setMigrationConsented:1 forDevice:[v2 device]];
}

void sub_100102480(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = pbb_setupflow_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = [*(id *)(a1 + 32) pairingID];
    int v6 = 138412546;
    int v7 = v5;
    __int16 v8 = 2112;
    id v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Granted Migration Consent %@? (error: %@)", (uint8_t *)&v6, 0x16u);
  }
}

void sub_100102A54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_100102A78(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  id v3 = pbb_bridge_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 56);
    *(_DWORD *)long long buf = 138413058;
    uint64_t v12 = v4;
    __int16 v13 = 2112;
    uint64_t v14 = v5;
    __int16 v15 = 2112;
    uint64_t v16 = v6;
    __int16 v17 = 2112;
    uint64_t v18 = v7;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Archived: %@ current: %@ from: %@ isActive: %@", buf, 0x2Au);
  }

  if ([*(id *)(a1 + 32) BOOLValue]
    && ([*(id *)(a1 + 40) integerValue] == (id)2
     || [*(id *)(a1 + 40) integerValue] == (id)3)
    && [*(id *)(a1 + 48) integerValue] == (id)4)
  {
    [*(id *)(a1 + 64) setDiscoveredWatch:0];
    if ([WeakRetained enableReportFailure])
    {
      [WeakRetained setEnableReportFailure:0];
      [WeakRetained setCurrentState:4];
      DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
      CFNotificationCenterRemoveObserver(DarwinNotifyCenter, *(const void **)(a1 + 64), NRMigrationDevicesCannotBeDiscoveredDarwinNotification, 0);
    }
  }
  dispatch_time_t v9 = dispatch_time(0, 500000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100102C48;
  block[3] = &unk_1002438A0;
  void block[4] = WeakRetained;
  dispatch_after(v9, (dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_100102C48(uint64_t a1)
{
  id v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Delayed UI update", v10, 2u);
  }

  id v3 = [*(id *)(a1 + 32) delegate];
  id v4 = [*(id *)(a1 + 32) currentState];
  uint64_t v5 = [*(id *)(a1 + 32) currentSession];
  [v5 sessionProgress];
  double v7 = v6;
  __int16 v8 = [*(id *)(a1 + 32) migratingDevice];
  [v3 migrationProgressUpdate:v4 percentageComplete:v8 migratingDevice:v7];

  return [*(id *)(a1 + 32) _configureCurrentState];
}

uint64_t sub_1001033F0(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  uint64_t v5 = [v3 objectForKey:v4];
  uint64_t v6 = [*(id *)(a1 + 40) objectForKey:v4];

  if (v5 | v6) {
    uint64_t v7 = (uint64_t)[(id)v5 isEqualToString:v6];
  }
  else {
    uint64_t v7 = 1;
  }

  return v7;
}

void sub_10010347C(uint64_t a1, CFStringRef key)
{
  CFPropertyListRef v4 = CFPreferencesCopyAppValue(key, kCFPreferencesAnyApplication);
  if (v4)
  {
    uint64_t v5 = v4;
    [*(id *)(a1 + 32) setObject:v4 forKey:key];
    CFRelease(v5);
  }
}

void sub_100103BE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100103C08(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v6 = (id *)(a1 + 32);
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  id WeakRetained = objc_loadWeakRetained(v6);
  [WeakRetained handleOnlineTermsAndConditionsResponse:v8 forRequest:v9 error:v7];
}

void sub_100103E64(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  id v3 = [WeakRetained delegate];
  id v4 = [v3 nextControllerAfterHold];

  if (v4 == WeakRetained)
  {
    if (*(void *)(a1 + 32)
      || ([*(id *)(a1 + 40) httpResponse],
          uint64_t v6 = objc_claimAutoreleasedReturnValue(),
          id v7 = [v6 statusCode],
          v6,
          v7 != (id)200))
    {
      __int16 v17 = pbb_setupflow_log();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_100174FB0((uint64_t *)(a1 + 32), a1, v17);
      }

      [WeakRetained retrieveOfflineTerms];
    }
    else
    {
      id v8 = [WeakRetained termsEventWithDocumentationID:@"COSTermsConditionsController.onlineTerms" data:*(void *)(a1 + 48)];
      [WeakRetained setOnlineTerms:v8];

      id v9 = [UIApp setupController];
      if ([v9 expressMode])
      {
        id v10 = objc_alloc_init((Class)NRTermsAcknowledgementRegistry);
        double v11 = +[UIApplication sharedApplication];
        uint64_t v12 = [v11 activeWatch];

        __int16 v13 = [v12 valueForProperty:NRDevicePropertyPairingID];
        uint64_t v14 = pbb_setupflow_log();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          __int16 v15 = [WeakRetained onlineTerms];
          *(_DWORD *)long long buf = 138412546;
          *(void *)id v21 = WeakRetained;
          *(_WORD *)&v21[8] = 2112;
          *(void *)&v21[10] = v15;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "checkForAcknowledgement for %@ - %@", buf, 0x16u);
        }
        uint64_t v16 = [WeakRetained onlineTerms];
        v18[0] = _NSConcreteStackBlock;
        v18[1] = 3221225472;
        _DWORD v18[2] = sub_100104198;
        v18[3] = &unk_100243DE0;
        v18[4] = WeakRetained;
        id v19 = *(id *)(a1 + 56);
        [v10 checkForAcknowledgement:v16 forDeviceID:v13 withCompletion:v18];
      }
      else
      {
        [WeakRetained _showTermsFromRequest:*(void *)(a1 + 56)];
        [WeakRetained endPerformancePhases];
      }
    }
  }
  else
  {
    uint64_t v5 = pbb_setupflow_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 67109378;
      *(_DWORD *)id v21 = 224;
      *(_WORD *)&void v21[4] = 2080;
      *(void *)&v21[6] = "-[COSTermsConditionsController handleOnlineTermsAndConditionsResponse:forRequest:error:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%d %s: Ignoring callback because no longer top controller", buf, 0x12u);
    }
  }
}

void sub_100104198(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = pbb_setupflow_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 67109378;
    int v12 = a2;
    __int16 v13 = 2112;
    id v14 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Terms have been agreed to: %{BOOL}d - Error: %@", buf, 0x12u);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001042D0;
  block[3] = &unk_1002465B8;
  id v7 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  char v10 = a2;
  id v9 = v7;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1001042D0(uint64_t a1)
{
  [*(id *)(a1 + 32) endPerformancePhases];
  id v2 = *(void **)(a1 + 32);
  if (*(unsigned char *)(a1 + 48))
  {
    id v4 = [v2 delegate];
    [v4 buddyControllerReleaseHoldAndSkip:*(void *)(a1 + 32)];
  }
  else
  {
    uint64_t v3 = *(void *)(a1 + 40);
    [v2 _showTermsFromRequest:v3];
  }
}

void sub_100104BB0(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100104C28;
  block[3] = &unk_1002438A0;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100104C28(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
  [WeakRetained buddyControllerDone:*(void *)(a1 + 32)];
}

id sub_100104E3C(uint64_t a1)
{
  return [*(id *)(a1 + 32) markTermsAsAcceptedWithTermsEvent:*(void *)(a1 + 40)];
}

void sub_100105DB8(id a1, UIAlertAction *a2)
{
  id v2 = +[UIApplication sharedApplication];
  [v2 disagreeToTerms];
}

void sub_10010738C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001073B4(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained setIcon:v5];
  }
}

void sub_100108FC8(id a1)
{
}

void sub_10010993C(id a1, UIAlertAction *a2)
{
  id v2 = pbb_activation_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "User Reset Buddy!", v3, 2u);
  }

  [UIApp resetSetupFlowAnimated:1 forEvent:42];
}

void sub_1001099BC(id a1, UIAlertAction *a2)
{
  id v2 = pbb_activation_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "User Did Not Reset Buddy.", v3, 2u);
  }
}

void sub_100109D3C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained checkActivationState];
}

void sub_10010B104(id a1)
{
  +[NSSet setWithObjects:](NSSet, "setWithObjects:", @"watch4,3", @"watch4,4", @"watch5,3", @"watch5,4", @"watch5,11", @"watch5,12", @"watch6,3", @"watch6,4", @"watch6,8", @"watch6,9", @"watch6,12", @"watch6,13", @"watch6,16", @"watch6,17", @"watch6,18", @"watch7,3", @"watch7,4",
    @"watch7,5",
    @"watch7,10",
    @"watch7,11",
  uint64_t v1 = 0);
  id v2 = (void *)qword_10029B2B0;
  qword_10029B2B0 = v1;
}

void sub_10010B29C(id a1)
{
  uint64_t v1 = +[NSSet setWithObjects:@"watch1,1", @"watch1,2", @"watch2,3", @"watch2,4", @"watch2,6", @"watch2,7", @"watch3,1", @"watch3,2", @"watch3,3", @"watch3,4", 0];
  id v2 = (void *)qword_10029B2C0;
  qword_10029B2C0 = v1;
}

int64_t sub_10010B9E4(id a1, NRDevice *a2, NRDevice *a3)
{
  uint64_t v4 = NRDevicePropertyLastActiveDate;
  id v5 = a3;
  uint64_t v6 = [(NRDevice *)a2 valueForProperty:v4];
  id v7 = [(NRDevice *)v5 valueForProperty:v4];

  id v8 = [v6 compare:v7];
  return (int64_t)v8;
}

void sub_10010C100(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10010C14C(uint64_t a1, char a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10010C204;
  block[3] = &unk_100243930;
  objc_copyWeak(&v6, (id *)(a1 + 40));
  char v7 = a2;
  id v5 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v6);
}

void sub_10010C204(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained removeSpinner];

  LODWORD(WeakRetained) = *(unsigned __int8 *)(a1 + 48);
  id v4 = objc_loadWeakRetained(v2);
  id v12 = v4;
  if (WeakRetained)
  {
    id v5 = [v4 completionBlock];

    if (v5)
    {
      id v6 = pbb_bridge_log();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v7 = *(void *)(a1 + 32);
        CFStringRef v8 = @"YES";
        if (!*(unsigned char *)(a1 + 48)) {
          CFStringRef v8 = @"NO";
        }
        *(_DWORD *)long long buf = 138412546;
        uint64_t v14 = v7;
        __int16 v15 = 2112;
        CFStringRef v16 = v8;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Switched to device (%@) : %@", buf, 0x16u);
      }

      id v9 = objc_loadWeakRetained(v2);
      char v10 = [v9 completionBlock];
      v10[2](v10, *(unsigned __int8 *)(a1 + 48));
    }
  }
  else
  {
    double v11 = [*(id *)(a1 + 32) valueForProperty:NRDevicePropertyName];
    [v12 presentConnectFailedAlert:v11];
  }
}

void sub_10010C704(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) completionBlock];

  if (v2)
  {
    uint64_t v3 = pbb_bridge_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 40);
      int v6 = 138412290;
      uint64_t v7 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Dismissing alert for connection failed and calling completion block for %@", (uint8_t *)&v6, 0xCu);
    }

    id v5 = [*(id *)(a1 + 32) completionBlock];
    v5[2](v5, 0);
  }
}

void sub_10010CC98(id a1)
{
  uint64_t v1 = pbb_activation_log();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Pushed Non-Root Controller.", v2, 2u);
  }
}

void sub_10010D66C(uint64_t a1)
{
  id v2 = [UIApp bridgeController];
  [v2 beganWaitingForUserResponseToActivationEvent];

  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 16));
  uint64_t v4 = [WeakRetained navigationController];
  id v5 = [v4 topViewController];
  int v6 = [v5 view];
  [v6 setUserInteractionEnabled:1];

  id v7 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 16));
  CFStringRef v8 = [v7 navigationController];
  id v9 = [v8 navigationBar];
  [v9 setUserInteractionEnabled:1];

  uint64_t v10 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v10 + 11))
  {
    id v11 = objc_loadWeakRetained((id *)(v10 + 16));
    [v11 blockGoingBackFromCurrentController];
  }
}

void sub_10010DDB8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_10010DDD4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_alloc_init(COSFindMyController);
  id v5 = [*(id *)(a1 + 32) valueForProperty:NRDevicePropertyUDID];
  int v6 = pbb_manualunpairing_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    CFStringRef v7 = @"Mark as Missing";
    uint64_t v8 = *(void *)(a1 + 32);
    if (!*(unsigned char *)(a1 + 72)) {
      CFStringRef v7 = @"Remove AL";
    }
    *(_DWORD *)long long buf = 138412802;
    CFStringRef v33 = v7;
    __int16 v34 = 2112;
    uint64_t v35 = v8;
    __int16 v36 = 2114;
    char v37 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Confirming %@ for Device: (%@) with UDID: (%{public}@)", buf, 0x20u);
  }

  id v9 = objc_alloc_init(COSFindMyControllerContext);
  [(COSFindMyControllerContext *)v9 setDevice:*(void *)(a1 + 32)];
  [(COSFindMyControllerContext *)v9 setMember:v3];

  uint64_t v10 = pbb_manualunpairing_log();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    id v11 = [(COSFindMyControllerContext *)v9 member];
    *(_DWORD *)long long buf = 138543362;
    CFStringRef v33 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "current device member: %{public}@ ", buf, 0xCu);
  }
  id v12 = +[COSFindMyController usernameForContext:v9];
  if (*(unsigned char *)(a1 + 72))
  {
    __int16 v13 = +[NSBundle mainBundle];
    uint64_t v14 = [v13 localizedStringForKey:@"MARK_AS_MISSING_%@" value:&stru_100249230 table:@"Pairing"];
    __int16 v15 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v14, v12);

    CFStringRef v16 = +[NSBundle mainBundle];
    __int16 v17 = [v16 localizedStringForKey:@"CONFIRM_MARK_AS_MISSING" value:&stru_100249230 table:@"Pairing"];
    uint64_t v18 = *(void *)(a1 + 40);
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472;
    v30[2] = sub_10010E1F4;
    v30[3] = &unk_100247520;
    id v19 = (id *)v31;
    id v20 = *(id *)(a1 + 56);
    uint64_t v21 = *(void *)(a1 + 64);
    v31[0] = v20;
    v31[1] = v21;
    [(COSFindMyController *)v4 markAsMissingForContext:v9 messageString:v15 buttonTitle:v17 presentingViewController:v18 completion:v30];
  }
  else
  {
    if (BPSDeviceHasCapabilityForString()) {
      CFStringRef v22 = @"ERASE_OR_REMOVE_ACTIVATION_LOCK_FMW_%@";
    }
    else {
      CFStringRef v22 = @"ERASE_OR_REMOVE_ACTIVATION_LOCK_%@";
    }
    id v23 = +[NSBundle mainBundle];
    id v24 = [v23 localizedStringForKey:v22 value:&stru_100249230 table:@"Pairing"];
    __int16 v15 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v24, v12);

    CFStringRef v16 = [*(id *)(a1 + 48) activationLockRemovalTitle];
    uint64_t v25 = *(void *)(a1 + 40);
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472;
    v28[2] = sub_10010E298;
    v28[3] = &unk_100247520;
    id v19 = (id *)v29;
    id v26 = *(id *)(a1 + 56);
    uint64_t v27 = *(void *)(a1 + 64);
    v29[0] = v26;
    v29[1] = v27;
    [(COSFindMyController *)v4 disableActivationLockForContext:v9 messageString:v15 buttonTitle:v16 presentingViewController:v25 completion:v28];
  }
}

void sub_10010E1F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = pbb_manualunpairing_log();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1001751AC((uint64_t)v3, v4, v5, v6, v7, v8, v9, v10);
    }

    id v11 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
  }
  else
  {
    id v11 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
  }
  v11();
}

void sub_10010E298(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!v3) {
    goto LABEL_5;
  }
  uint64_t v4 = pbb_manualunpairing_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_100175218((uint64_t)v3, v4, v5, v6, v7, v8, v9, v10);
  }

  if (!+[COSFindMyController canProceedToUnpairForError:v3])id v11 = *(void (**)(void))(*(void *)(a1 + 32) + 16); {
  else
  }
LABEL_5:
    id v11 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
  v11();
}

void sub_10010E34C(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 80);
  if (sub_100032560(*(id *)(a1 + 32))
    && (v2 || +[COSFindMyController isDeviceLocatorEnabled]))
  {
    if (*(unsigned char *)(a1 + 80))
    {
      id v3 = +[CDPAccount sharedInstance];
      uint64_t v4 = [v3 primaryAppleAccount];

      if (v4)
      {
        v18[0] = _NSConcreteStackBlock;
        v18[1] = 3221225472;
        _DWORD v18[2] = sub_10010E548;
        v18[3] = &unk_100247598;
        uint64_t v22 = *(void *)(a1 + 72);
        uint64_t v5 = *(void *)(a1 + 32);
        id v19 = *(id *)(a1 + 40);
        id v20 = *(id *)(a1 + 48);
        long long v17 = *(_OWORD *)(a1 + 56);
        id v6 = (id)v17;
        long long v21 = v17;
        +[BPSAppleIDDevices fetchFamilyMemberForDevice:v5 withCompletion:v18];
      }
      else
      {
        uint64_t v9 = pbb_manualunpairing_log();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
          sub_100175284(v9, v10, v11, v12, v13, v14, v15, v16);
        }

        (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
      }
    }
    else
    {
      uint64_t v8 = *(void (**)(void))(*(void *)(a1 + 56) + 16);
      v8();
    }
  }
  else
  {
    uint64_t v7 = *(void (**)(void))(*(void *)(a1 + 48) + 16);
    v7();
  }
}

void sub_10010E548(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v6)
  {
    if (v5)
    {
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
      goto LABEL_11;
    }
    uint64_t v13 = pbb_manualunpairing_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      sub_1001752BC(v13, v14, v15, v16, v17, v18, v19, v20);
    }

    uint64_t v12 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
LABEL_10:
    v12();
    goto LABEL_11;
  }
  if (!+[BPSAppleIDDevices isNetworkError:v6])
  {
    uint64_t v12 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
    goto LABEL_10;
  }
  uint64_t v7 = objc_opt_class();
  uint64_t v8 = [*(id *)(a1 + 32) failureMessage];
  uint64_t v9 = [*(id *)(a1 + 32) presentingViewController];
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_10010E6F8;
  v21[3] = &unk_100247570;
  id v10 = *(id *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 56);
  id v23 = v10;
  uint64_t v24 = v11;
  id v22 = v6;
  [v7 presentUnpairOrResetErrorMessage:v8 fromController:v9 withCompletion:v21];

LABEL_11:
}

uint64_t sub_10010E6F8(void *a1)
{
  return (*(uint64_t (**)(void, void, void, void))(a1[5] + 16))(a1[5], 0, *(unsigned __int8 *)(*(void *)(a1[6] + 8) + 24), a1[4]);
}

void sub_10010E71C(uint64_t a1)
{
  int v2 = *(void **)(a1 + 64);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_10010E7D0;
  void v6[3] = &unk_1002475E8;
  uint64_t v3 = *(void *)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  id v4 = *(id *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  id v8 = v4;
  uint64_t v9 = v5;
  [v2 presentApplePayLocallyStoredValueOfflineWarningIfNeededForContext:v3 completionHandler:v6];
}

uint64_t sub_10010E7D0(void *a1, uint64_t a2)
{
  if (a2) {
    return (*(uint64_t (**)(void))(a1[4] + 16))();
  }
  else {
    return (*(uint64_t (**)(void, uint64_t, void, void))(a1[5] + 16))(a1[5], a2, *(unsigned __int8 *)(*(void *)(a1[6] + 8) + 24), 0);
  }
}

uint64_t sub_10010E804(void *a1, int a2, int a3, int a4)
{
  id v8 = pbb_manualunpairing_log();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v10[0] = 67109632;
    v10[1] = a2;
    __int16 v11 = 1024;
    int v12 = a3;
    __int16 v13 = 1024;
    int v14 = a4;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "user choice: cancelled: %d, hasPlan: %d, preserve: %d", (uint8_t *)v10, 0x14u);
  }

  if (a2) {
    return (*(uint64_t (**)(void))(a1[4] + 16))();
  }
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = a3 & a4;
  return (*(uint64_t (**)(void))(a1[5] + 16))();
}

uint64_t sub_10010EDD8(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v3 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = 0;

  id v4 = pbb_manualunpairing_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
    sub_1001752F4(v4, v5, v6, v7, v8, v9, v10, v11);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10010EE4C(void *a1)
{
  uint64_t v2 = *(void *)(a1[5] + 8);
  uint64_t v3 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = 0;

  id v4 = pbb_manualunpairing_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int16 v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Received plan query response before timeout.", v13, 2u);
  }

  if (*(void *)(*(void *)(a1[6] + 8) + 40))
  {
    uint64_t v5 = pbb_manualunpairing_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_10017532C((uint64_t)(a1 + 6), v5, v6, v7, v8, v9, v10, v11);
    }

    return (*(uint64_t (**)(void))(a1[4] + 16))();
  }
  else
  {
    [*(id *)(*(void *)(a1[7] + 8) + 40) count];
    return (*(uint64_t (**)(void))(a1[4] + 16))();
  }
}

void sub_10010EF68(uint64_t a1)
{
  dispatch_resume(*(dispatch_object_t *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
  uint64_t v2 = [*(id *)(a1 + 32) valueForProperty:NRDevicePropertyCSN];
  uint64_t v3 = pbb_manualunpairing_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    LODWORD(buf) = 138543362;
    *(void *)((char *)&buf + 4) = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "CSN: %{public}@", (uint8_t *)&buf, 0xCu);
  }

  uint64_t v10 = 0;
  uint64_t v11 = &v10;
  uint64_t v12 = 0x2050000000;
  id v4 = (void *)qword_10029B2D0;
  uint64_t v13 = qword_10029B2D0;
  if (!qword_10029B2D0)
  {
    *(void *)&long long buf = _NSConcreteStackBlock;
    *((void *)&buf + 1) = 3221225472;
    uint64_t v15 = sub_1001100B0;
    uint64_t v16 = &unk_1002436A8;
    uint64_t v17 = &v10;
    sub_1001100B0((uint64_t)&buf);
    id v4 = (void *)v11[3];
  }
  id v5 = v4;
  _Block_object_dispose(&v10, 8);
  uint64_t v6 = [v5 sharedManager];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  _DWORD v7[2] = sub_10010F16C;
  v7[3] = &unk_1002476B0;
  long long v8 = *(_OWORD *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 56);
  [v6 remotePlanItemsWithUpdateFetch:0 withCSN:v2 completion:v7];
}

void sub_10010F14C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10010F16C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = pbb_manualunpairing_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    long long v8 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v5 count]);
    *(_DWORD *)long long buf = 138543618;
    id v31 = v6;
    __int16 v32 = 2114;
    CFStringRef v33 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Received plan query response with error %{public}@ and %{public}@ plans", buf, 0x16u);
  }
  if ([v5 count])
  {
    uint64_t v9 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [v5 count]);
    long long v25 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    id v10 = v5;
    id v11 = [v10 countByEnumeratingWithState:&v25 objects:v29 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v26;
      do
      {
        for (i = 0; i != v12; i = (char *)i + 1)
        {
          if (*(void *)v26 != v13) {
            objc_enumerationMutation(v10);
          }
          uint64_t v15 = *(void **)(*((void *)&v25 + 1) + 8 * i);
          if ([v15 shouldDisplay]) {
            [v9 addObject:v15];
          }
        }
        id v12 = [v10 countByEnumeratingWithState:&v25 objects:v29 count:16];
      }
      while (v12);
    }

    id v5 = [v9 copy];
    uint64_t v16 = pbb_manualunpairing_log();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v5 count]);
      *(_DWORD *)long long buf = 138543362;
      id v31 = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Filtered plan query response with %{public}@ plans", buf, 0xCu);
    }
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10010F464;
  block[3] = &unk_100247688;
  long long v23 = *(_OWORD *)(a1 + 32);
  uint64_t v24 = *(void *)(a1 + 48);
  id v21 = v5;
  id v22 = v6;
  id v18 = v6;
  id v19 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_10010F464(uint64_t a1)
{
  if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), *(id *)(a1 + 32));
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), *(id *)(a1 + 40));
    uint64_t v2 = *(NSObject **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    dispatch_source_cancel(v2);
  }
}

void sub_10010F7E4(id *a1)
{
  id v2 = objc_alloc_init((Class)UIAlertController);
  uint64_t v3 = [a1[4] valueForProperty:NRDevicePropertyName];
  id v4 = +[NSBundle mainBundle];
  id v5 = [v4 localizedStringForKey:@"AKASHI_UNPAIR_AMBIGUOUS_PLAN_MESSAGE" value:&stru_100249230 table:@"Pairing"];
  id v6 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v5, v3, v3);
  [v2 setMessage:v6];

  uint64_t v7 = +[NSBundle mainBundle];
  long long v8 = [v7 localizedStringForKey:@"AKASHI_UNPAIR_AMBIGUOUS_PLAN_CONFIRMATION_BUTTON" value:&stru_100249230 table:@"Pairing"];
  uint64_t v9 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v8, v3);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  id v16[2] = sub_10010FA88;
  v16[3] = &unk_100245850;
  id v17 = a1[6];
  id v10 = +[UIAlertAction actionWithTitle:v9 style:2 handler:v16];
  [v2 addAction:v10];

  id v11 = +[NSBundle mainBundle];
  id v12 = [v11 localizedStringForKey:@"AKASHI_UNPAIR_AMBIGUOUS_PLAN_CANCEL_BUTTON" value:&stru_100249230 table:@"Pairing"];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_10010FAA4;
  v14[3] = &unk_100245850;
  id v15 = a1[6];
  uint64_t v13 = +[UIAlertAction actionWithTitle:v12 style:1 handler:v14];
  [v2 addAction:v13];

  [a1[5] presentViewController:v2 animated:1 completion:0];
}

uint64_t sub_10010FA88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10010FAA4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10010FAC0(uint64_t a1, int a2, int a3)
{
  if (a3)
  {
    id v4 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
    v4();
  }
  else if (a2)
  {
    id v5 = objc_alloc_init((Class)UIAlertController);
    id v6 = +[NSBundle mainBundle];
    uint64_t v7 = [v6 localizedStringForKey:@"AKASHI_UNPAIR_PLAN_EXPLANATION" value:&stru_100249230 table:@"Pairing"];
    [v5 setMessage:v7];

    long long v8 = +[NSBundle mainBundle];
    uint64_t v9 = [v8 localizedStringForKey:@"AKASHI_UNPAIR_KEEP_CONFIRMATION_BUTTON" value:&stru_100249230 table:@"Pairing"];
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_10010FE34;
    void v22[3] = &unk_100245850;
    id v23 = *(id *)(a1 + 48);
    id v10 = +[UIAlertAction actionWithTitle:v9 style:0 handler:v22];
    [v5 addAction:v10];

    id v11 = +[NSBundle mainBundle];
    id v12 = [v11 localizedStringForKey:@"AKASHI_UNPAIR_DELETE_CONFIRMATION_BUTTON" value:&stru_100249230 table:@"Pairing"];
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    _DWORD v20[2] = sub_10010FE50;
    v20[3] = &unk_100245850;
    id v21 = *(id *)(a1 + 48);
    uint64_t v13 = +[UIAlertAction actionWithTitle:v12 style:2 handler:v20];
    [v5 addAction:v13];

    int v14 = +[NSBundle mainBundle];
    id v15 = [v14 localizedStringForKey:@"AKASHI_UNPAIR_CANCEL_UNPAIR" value:&stru_100249230 table:@"Pairing"];
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    _DWORD v18[2] = sub_10010FE6C;
    v18[3] = &unk_100245850;
    id v19 = *(id *)(a1 + 48);
    uint64_t v16 = +[UIAlertAction actionWithTitle:v15 style:1 handler:v18];
    [v5 addAction:v16];

    [*(id *)(a1 + 32) presentViewController:v5 animated:1 completion:0];
  }
  else
  {
    id v17 = *(void (**)(void))(*(void *)(a1 + 48) + 16);
    v17();
  }
}

uint64_t sub_10010FE34(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10010FE50(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10010FE6C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10010FF6C(uint64_t a1)
{
  id v2 = objc_opt_new();
  [v2 setMessage:*(void *)(a1 + 32)];
  uint64_t v3 = +[NSBundle mainBundle];
  id v4 = [v3 localizedStringForKey:@"ERASE_OR_UNPAIR_FAILURE_BUTTON_LABEL" value:&stru_100249230 table:@"Pairing"];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_1001100A0;
  void v6[3] = &unk_100245850;
  id v7 = *(id *)(a1 + 48);
  id v5 = +[UIAlertAction actionWithTitle:v4 style:1 handler:v6];
  [v2 addAction:v5];

  [*(id *)(a1 + 40) presentViewController:v2 animated:1 completion:0];
}

uint64_t sub_1001100A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

Class sub_1001100B0(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_10029B2D8)
  {
    v4[1] = _NSConcreteStackBlock;
    void v4[2] = 3221225472;
    v4[3] = sub_1001101F4;
    void v4[4] = &unk_1002436E0;
    void v4[5] = v4;
    long long v5 = off_100247720;
    uint64_t v6 = 0;
    qword_10029B2D8 = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!qword_10029B2D8)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("CTCellularPlanManager");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    id v2 = (void *)sub_1001748C0();
LABEL_8:
    free(v2);
  }
  qword_10029B2D0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1001101F4()
{
  uint64_t result = _sl_dlopen();
  qword_10029B2D8 = result;
  return result;
}

void sub_100110644(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_1001106E0;
  void v5[3] = &unk_100243908;
  void v5[4] = *(void *)(a1 + 32);
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
}

void sub_1001106E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) aboutDataSource];
  [v2 setDeviceUser:v1];
}

void sub_100110730(uint64_t a1, char a2)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1001107AC;
  v2[3] = &unk_1002448E8;
  void v2[4] = *(void *)(a1 + 32);
  char v3 = a2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);
}

void sub_1001107AC(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) aboutDataSource];
  [v2 setAllowsMarkAsMissing:v1];
}

void sub_100110DAC(id a1, NSDictionary *a2, NSError *a3)
{
  id v4 = a2;
  long long v5 = a3;
  id v6 = pbb_bridge_log();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 138412546;
    long long v8 = v4;
    __int16 v9 = 2112;
    id v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Tinker iForgot flow- authResults=%@ error=%@", (uint8_t *)&v7, 0x16u);
  }
}

void sub_10011123C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100111270(uint64_t a1, char a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100111328;
  block[3] = &unk_100243930;
  objc_copyWeak(&v6, (id *)(a1 + 40));
  char v7 = a2;
  id v5 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v6);
}

void sub_100111328(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = pbb_manualunpairing_log();
  id v5 = v4;
  if (WeakRetained)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Unpair Buttons Disabled", buf, 2u);
    }

    id v6 = +[UIDevice currentDevice];
    [v6 setOrientation:1];

    char v7 = pbb_manualunpairing_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      long long v8 = [WeakRetained device];
      *(_DWORD *)long long buf = 138412290;
      id v19 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Unpairing from device: %@", buf, 0xCu);
    }
    CFStringRef v16 = @"obliterate";
    id v17 = &__kCFBooleanTrue;
    __int16 v9 = +[NSDictionary dictionaryWithObjects:&v17 forKeys:&v16 count:1];
    id v5 = [v9 mutableCopy];

    id v10 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 48)];
    [v5 setObject:v10 forKeyedSubscript:@"BDE85C67-0FDD-4A95-A9B9-3CB5DD0C06A2"];

    id v11 = +[NRPairedDeviceRegistry sharedInstance];
    id v12 = [WeakRetained device];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    void v13[2] = sub_1001115D8;
    v13[3] = &unk_100247780;
    objc_copyWeak(&v15, v2);
    id v14 = *(id *)(a1 + 32);
    [v11 unpairWithDevice:v12 withOptions:v5 operationHasBegun:v13];

    objc_destroyWeak(&v15);
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    sub_1001753A4(v5);
  }
}

void sub_1001115BC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1001115D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = pbb_manualunpairing_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = +[NRPairedDeviceRegistry sharedInstance];
    *(_DWORD *)long long buf = 67109634;
    int v12 = 230;
    __int16 v13 = 2080;
    id v14 = "-[COSPairingController confirmedUnpairAndMarkAsMissing:]_block_invoke";
    __int16 v15 = 2048;
    id v16 = [v5 status];
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%d %s - NR Status: %lu", buf, 0x1Cu);
  }
  id v6 = pbb_manualunpairing_log();
  char v7 = v6;
  if (v3)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1001753E8((uint64_t)v3, v7);
    }
  }
  else if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Unpair succeeded!", buf, 2u);
  }

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  _DWORD v8[2] = sub_1001117B4;
  v8[3] = &unk_100243D28;
  objc_copyWeak(&v10, (id *)(a1 + 40));
  id v9 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v8);

  objc_destroyWeak(&v10);
}

void sub_1001117B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [WeakRetained aboutDataSource];
  if ([v3 migrationDevice])
  {
  }
  else
  {
    unsigned __int8 v4 = [*(id *)(a1 + 32) BOOLValue];

    if (v4)
    {
      [UIApp successfullyBeganUnpairingWatch];
      goto LABEL_8;
    }
  }
  id v5 = pbb_manualunpairing_log();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Migration device successfully removed", v6, 2u);
  }

LABEL_8:
}

void sub_10011187C(uint64_t a1, int a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  if (a2)
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    char v7 = pbb_manualunpairing_log();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412546;
      id v10 = v6;
      __int16 v11 = 1024;
      int v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "skipping unpair for error: %@ proceedToUnpair : %d", buf, 0x12u);
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001119C0;
    block[3] = &unk_1002438A0;
    void block[4] = *(void *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_1001119C0(uint64_t a1)
{
  [*(id *)(a1 + 32) _stopSpinnerInActiveSpecifier];
  id v2 = [*(id *)(a1 + 32) view];
  [v2 setUserInteractionEnabled:1];
}

void sub_100111B8C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _stopSpinnerInActiveSpecifier];
    id v3 = [v2 navigationController];
    id v4 = [v3 popViewControllerAnimated:1];
  }
  else
  {
    id v3 = pbb_manualunpairing_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_100175460(v3);
    }
  }
}

void sub_1001133AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001133C4(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }
}

void sub_100113B7C(id a1)
{
  id v1 = objc_alloc_init((Class)NSMutableParagraphStyle);
  [v1 setLineBreakMode:4];
  [v1 setAlignment:4];
  v5[0] = NSFontAttributeName;
  id v2 = +[UIFont preferredFontForTextStyle:UIFontTextStyleBody];
  v5[1] = NSParagraphStyleAttributeName;
  v6[0] = v2;
  v6[1] = v1;
  uint64_t v3 = +[NSDictionary dictionaryWithObjects:v6 forKeys:v5 count:2];
  id v4 = (void *)qword_10029B2E0;
  qword_10029B2E0 = v3;
}

void sub_1001154A8(id a1)
{
  id v1 = objc_alloc_init(COSBeamBridgeUserStudyController);
  id v2 = (void *)qword_10029B2F0;
  qword_10029B2F0 = (uint64_t)v1;
}

void sub_1001157E8(id a1, UIAlertAction *a2)
{
}

void sub_100115898(uint64_t a1)
{
  id v2 = pbb_accountsignin_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1001754A4(v2);
  }

  uint64_t v3 = [*(id *)(a1 + 32) localizedDescription];
  if (*(void *)(a1 + 32) && PBIsInternalInstall())
  {
    id v4 = [*(id *)(a1 + 32) code];
    id v5 = [*(id *)(a1 + 32) localizedDescription];
    uint64_t v6 = +[NSString stringWithFormat:@"Error %li: %@", v4, v5];

    uint64_t v3 = (void *)v6;
  }
  id v7 = [UIApp setupController];
  long long v8 = [v7 navigationController];

  id v9 = *(void **)(a1 + 40);
  id v10 = +[NSBundle mainBundle];
  __int16 v11 = [v10 localizedStringForKey:@"GUARDIAN_ACCOUNT_INIT_FAILED" value:&stru_100249230 table:@"Localizable-tinker"];
  [v9 failPrecheckWithTitle:v11 body:v3 withPresentingController:v8];
}

void sub_100115BA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100115BC8(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = [UIApp setupController];
  id v5 = [v4 navigationController];

  uint64_t v6 = [v5 topViewController];
  [a1[4] setPresentingController:v6];

  [a1[4] setProxiedDevice:v3];
  id v7 = a1[4];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  _DWORD v8[2] = sub_100115D0C;
  v8[3] = &unk_100247880;
  objc_copyWeak(&v11, a1 + 6);
  id v9 = a1[4];
  id v10 = a1[5];
  [v7 repairGuardianAccount:v8];

  objc_destroyWeak(&v11);
}

void sub_100115CF8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100115D0C(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v7 = WeakRetained;
  if (WeakRetained)
  {
    if (a2)
    {
      id v8 = objc_alloc((Class)FACircleStateController);
      id v9 = [*(id *)(a1 + 32) presentingController];
      id v10 = [v8 initWithPresenter:v9];
      [v7 setCircleStateController:v10];

      id v11 = [v7 circleStateController];
      int v12 = objc_opt_new();
      [v11 setCustomRUIStyle:v12];

      __int16 v13 = [v7 circleStateController];
      uint64_t v14 = *(void *)(a1 + 40);
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      void v15[2] = sub_100115E90;
      v15[3] = &unk_100247858;
      objc_copyWeak(&v16, (id *)(a1 + 48));
      [v13 performWithContext:v14 completion:v15];

      objc_destroyWeak(&v16);
    }
    else
    {
      [WeakRetained handleRepairFailureWithError:v5];
    }
  }
}

void sub_100115E7C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100115E90(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = [v3 error];
    if (v5)
    {
    }
    else if ([v3 loadSuccess])
    {
      uint64_t v6 = pbb_accountsignin_log();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "FamilyCircle pre-check success", v8, 2u);
      }

      [WeakRetained _fetchFamilyCircle];
      goto LABEL_9;
    }
    id v7 = [v3 error];
    [WeakRetained handleRepairFailureWithError:v7];

LABEL_9:
    [WeakRetained setCircleStateController:0];
  }
}

void sub_1001160E0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 buddyControllerDone:*(void *)(a1 + 32) nextControllerClass:objc_opt_class()];
}

void sub_10011614C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = pbb_accountsignin_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    id v8 = [v6 localizedDescription];
    LODWORD(buf) = 138412290;
    *(void *)((char *)&buf + 4) = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "FAFetchFamilyCircleRequest complete, error: %@", (uint8_t *)&buf, 0xCu);
  }
  id v9 = [UIApp setupController];
  [v9 setFamilyCircle:v5];

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v42 = 0x3032000000;
  id v43 = sub_100015E2C;
  id v44 = sub_100015D94;
  id v45 = 0;
  uint64_t v31 = 0;
  __int16 v32 = &v31;
  uint64_t v33 = 0x3032000000;
  __int16 v34 = sub_100015E2C;
  uint64_t v35 = sub_100015D94;
  id v36 = 0;
  uint64_t v27 = 0;
  long long v28 = &v27;
  uint64_t v29 = 0x2020000000;
  id v30 = 0;
  id v10 = [v5 members];
  id v11 = [v10 count];

  id v30 = v11;
  int v12 = [v5 members];
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472;
  v26[2] = sub_100116634;
  v26[3] = &unk_1002478D0;
  v26[4] = &buf;
  v26[5] = &v31;
  v26[6] = &v27;
  [v12 enumerateObjectsUsingBlock:v26];

  if (*(void *)(*((void *)&buf + 1) + 40) && v28[3])
  {
    __int16 v13 = pbb_accountsignin_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)char v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Found organizer and family members", v37, 2u);
    }

    uint64_t v14 = [UIApp setupController];
    [v14 setOrganizerFamilyMember:*(void *)(*((void *)&buf + 1) + 40)];

    __int16 v15 = [UIApp setupController];
    [v15 setPairingParentFamilyMember:v32[5]];

    id v16 = [objc_alloc((Class)FAProfilePictureStore) initWithFamilyCircle:v5];
    id v17 = [UIApp setupController];
    [v17 setProfilePictureStore:v16];

    id v18 = [UIApp setupController];
    id v19 = [v18 profilePictureStore];
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472;
    v25[2] = sub_1001166EC;
    v25[3] = &unk_100247210;
    void v25[4] = *(void *)(a1 + 32);
    [v19 fetchProfileImagesWithCompletion:v25];
  }
  else
  {
    uint64_t v20 = pbb_accountsignin_log();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      if (*(void *)(*((void *)&buf + 1) + 40)) {
        CFStringRef v21 = @"found";
      }
      else {
        CFStringRef v21 = @"not found";
      }
      id v22 = [v5 members];
      id v23 = [v22 count];
      *(_DWORD *)char v37 = 138412546;
      CFStringRef v38 = v21;
      __int16 v39 = 2048;
      id v40 = v23;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "Skipping family member selection. Organizer: %@, family members: %lu", v37, 0x16u);
    }
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100116870;
    block[3] = &unk_1002438A0;
    void block[4] = *(void *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
  _Block_object_dispose(&v27, 8);
  _Block_object_dispose(&v31, 8);

  _Block_object_dispose(&buf, 8);
}

void sub_1001165E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_100116634(void *a1, void *a2)
{
  id v5 = a2;
  unsigned int v4 = [v5 isOrganizer];
  if (v4) {
    objc_storeStrong((id *)(*(void *)(a1[4] + 8) + 40), a2);
  }
  if ([v5 isMe] && objc_msgSend(v5, "isParent"))
  {
    objc_storeStrong((id *)(*(void *)(a1[5] + 8) + 40), a2);
  }
  else if (!v4)
  {
    goto LABEL_8;
  }
  --*(void *)(*(void *)(a1[6] + 8) + 24);
LABEL_8:
}

void sub_1001166EC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    id v5 = pbb_accountsignin_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v8 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Error fetching profile images: %@", buf, 0xCu);
    }
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100116804;
  block[3] = &unk_1002438A0;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100116804(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 buddyControllerDone:*(void *)(a1 + 32) nextControllerClass:objc_opt_class()];
}

void sub_100116870(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  [WeakRetained buddyControllerReleaseHoldAndSkip:*(void *)(a1 + 32)];
}

id sub_100116D88(uint64_t a1, void *a2)
{
  return _[a2 updateWatchForFaceChange];
}

uint64_t sub_100117CDC(uint64_t a1)
{
  id v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "(COSRegistryBecameActiveDispatcher) NR is ready. Firing inline!", v4, 2u);
  }

  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a1 + 32) + 16) + 16))();
}

uint64_t sub_100117D60(uint64_t a1)
{
  id v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "(COSRegistryBecameActiveDispatcher) NR Timed Out!", v4, 2u);
  }

  uint64_t result = *(void *)(*(void *)(a1 + 32) + 16);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  }
  return result;
}

void sub_100117DE8(id a1)
{
  id v1 = pbb_bridge_log();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "(COSRegistryBecameActiveDispatcher) Cancel NR Timer!", v2, 2u);
  }
}

id sub_100118C9C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);
    return (id)v3();
  }
  else
  {
    id v5 = pbb_accountsignin_log();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136315138;
      id v10 = "-[COSTinkerAppleIDAuthenticationController authenticateWithContext:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s calling passed auth", buf, 0xCu);
    }

    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 48);
    v8.receiver = *(id *)(a1 + 40);
    v8.super_class = (Class)COSTinkerAppleIDAuthenticationController;
    return [super authenticateWithContext:v6 completion:v7];
  }
}

void sub_100118DBC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = pbb_accountsignin_log();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 136315650;
    id v9 = "-[COSTinkerAppleIDAuthenticationController authenticateWithContext:completion:]_block_invoke";
    __int16 v10 = 2112;
    id v11 = v5;
    __int16 v12 = 2112;
    id v13 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%s authenticationResults: %@ errr: %@", (uint8_t *)&v8, 0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100118FD8(uint64_t a1)
{
  [*(id *)(a1 + 32) _recheckInstallStateForAllBundleRows];
  [*(id *)(a1 + 32) _buildSystemAppSpecifierDicts];
  id v2 = *(void **)(a1 + 32);

  return [v2 _notifyThatFullSpecifierDictListIsLoaded];
}

void sub_1001191BC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 removeSystemAppSpecifiers:*(void *)(a1 + 40)];
}

void sub_1001192CC(uint64_t a1)
{
  id v2 = -[COSTinkerHealthSharingSetupDelegate tinkerDevice]_0();
  id v3 = objc_opt_new();
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v13;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void *)(*((void *)&v12 + 1) + 8 * i);
        if ([*(id *)(a1 + 40) _shouldReloadChangedRow:v9 installed:v2 activeDevice:v12])[v3 addObject:v9]; {
      }
        }
      id v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v6);
  }

  if ([v3 count])
  {
    int v10 = *(unsigned __int8 *)(a1 + 48);
    [*(id *)(a1 + 40) _buildSystemAppSpecifierDicts];
    id v11 = *(void **)(a1 + 40);
    if (v10) {
      [v11 _notifyThatFullSpecifierDictListIsLoaded];
    }
    else {
      [v11 _notifyThatSpecifiersShouldBeRemoved:v3];
    }
  }
}

void sub_10011A23C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10011A260(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10011A33C;
  block[3] = &unk_100247968;
  objc_copyWeak(&v11, (id *)(a1 + 48));
  id v8 = v3;
  id v4 = *(id *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  id v9 = v4;
  uint64_t v10 = v5;
  __int16 v12 = *(_WORD *)(a1 + 56);
  id v6 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v11);
}

void sub_10011A33C(uint64_t a1)
{
  id v2 = +[NSMutableArray arrayWithArray:*(void *)(a1 + 32)];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained setCloudDescriptors:v2];

  id v4 = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v5 = [v4 cloudDescriptors];
  if (![v5 count])
  {

    goto LABEL_7;
  }
  id v6 = objc_loadWeakRetained((id *)(a1 + 56));
  unsigned int v7 = [v6 launchedForTerms];

  if (!v7)
  {
LABEL_7:
    id v17 = [UIApp bridgeController];
    [v17 setShouldSuppressTransportReachabilityTimeout:1];

    id v18 = [UIApp setupController];
    id v36 = [v18 pairingReportManager];

    id v19 = (objc_class *)objc_opt_class();
    uint64_t v20 = NSStringFromClass(v19);
    [v36 checkInWithController:v20 action:0];

    CFStringRef v21 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 64)];
    [v36 addPairingTimeEventToPairingReportPlist:61 withValue:v21 withError:0];

    id v22 = [objc_alloc((Class)UINavigationController) initWithRootViewController:*(void *)(a1 + 48)];
    id v23 = objc_loadWeakRetained((id *)(a1 + 56));
    [v23 setModalController:v22];

    id v24 = objc_loadWeakRetained((id *)(a1 + 56));
    long long v25 = [v24 modalController];
    [v25 setModalPresentationStyle:0];

    id v26 = objc_loadWeakRetained((id *)(a1 + 56));
    uint64_t v27 = [v26 modalController];
    long long v28 = [v27 view];
    uint64_t v29 = +[UIColor clearColor];
    [v28 setBackgroundColor:v29];

    id v30 = *(void **)(a1 + 40);
    id v31 = objc_loadWeakRetained((id *)(a1 + 56));
    __int16 v32 = [v31 modalController];
    [v30 presentViewController:v32 animated:*(unsigned __int8 *)(a1 + 65) completion:0];

    id v33 = objc_loadWeakRetained((id *)(a1 + 56));
    __int16 v34 = [v33 modalController];
    uint64_t v35 = [v34 navigationBar];
    BPSApplyStyleToNavBar();

    goto LABEL_8;
  }
  uint64_t v8 = *(void *)(a1 + 40);
  id v9 = objc_loadWeakRetained((id *)(a1 + 56));
  [v9 setTermsDisplayController:v8];

  id v10 = objc_loadWeakRetained((id *)(a1 + 56));
  id v11 = [v10 cloudDescriptors];
  id v36 = [v11 lastObject];

  id v12 = objc_loadWeakRetained((id *)(a1 + 56));
  long long v13 = [v12 cloudDescriptors];
  [v13 removeLastObject];

  id v14 = objc_loadWeakRetained((id *)(a1 + 56));
  [v14 setUpdate:v36];

  id v15 = objc_loadWeakRetained((id *)(a1 + 56));
  LODWORD(v13) = [v15 launchedForTerms];

  if (v13)
  {
    id v16 = objc_loadWeakRetained((id *)(a1 + 56));
    [v16 setShowingTermsRequestedByWatch:1];
  }
  [*(id *)(a1 + 48) presentTermsRequiringPasscode:0 ifNecessaryWithAcceptanceAction:"downloadTermsAccepted" withDescriptor:v36];
LABEL_8:
}

void sub_10011AA00(id a1, NSError *a2)
{
  id v2 = a2;
  id v3 = pbb_bridge_log();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    uint64_t v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "User Reset Buddy! - Unpairing result: (%@)", (uint8_t *)&v4, 0xCu);
  }
}

void sub_10011AED8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10011AF14(uint64_t a1)
{
  [*(id *)(a1 + 32) reportRequiredUpdateAbort];
  id v2 = *(void **)(a1 + 32);

  return _[v2 unpairDevice];
}

void sub_10011AF50(uint64_t a1)
{
  id v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "User Did Not Reset Buddy.", v6, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ([WeakRetained subState] == (id)2)
  {
    id v4 = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v5 = [v4 update];

    if (!v5) {
      [*(id *)(a1 + 32) scanForUpdatesInBackgound:0];
    }
  }
  else
  {
  }
}

void sub_10011B1F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10011B210(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = v4;
  if (v4)
  {
    id v6 = [v4 humanReadableUpdateName];
    if (!sub_100008380()) {
      goto LABEL_15;
    }
    unsigned int v7 = [v5 productBuildVersion];
    goto LABEL_14;
  }
  uint64_t v8 = [v3 valueForProperty:NRDevicePropertyMarketingVersion];
  if (!v8)
  {
    uint64_t v8 = [v3 valueForProperty:NRDevicePropertySystemVersion];
  }
  id v9 = [v3 valueForProperty:NRDevicePropertySystemName];
  id v10 = v9;
  if (!v9
    || ([v9 isEqualToString:@"iPhone OS"] & 1) != 0
    || ([v10 isEqualToString:@"Watch OS"] & 1) != 0)
  {
    id v11 = +[NSBundle mainBundle];
    id v12 = [v11 localizedStringForKey:@"WATCH_OS_VERSION" value:&stru_100249230 table:@"Software Update"];
    +[NSString stringWithFormat:](NSString, "stringWithFormat:", v12, v8, v20);
  }
  else
  {
    id v11 = +[NSBundle mainBundle];
    id v12 = [v11 localizedStringForKey:@"WATCH_OS_VERSION_WITH_CUSTOM_OS_NAME" value:&stru_100249230 table:@"Software Update"];
    +[NSString stringWithFormat:](NSString, "stringWithFormat:", v12, v10, v8);
  id v6 = };

  if (sub_100008380())
  {
    uint64_t v13 = [v3 valueForProperty:NRDevicePropertySystemBuildVersion];
    id v14 = (void *)v13;
    id v15 = &stru_100249230;
    if (v13) {
      id v15 = (__CFString *)v13;
    }
    unsigned int v7 = v15;

LABEL_14:
    id v16 = +[NSBundle bundleForClass:objc_opt_class()];
    id v17 = [v16 localizedStringForKey:@"%@ (%@)" value:&stru_100249230 table:@"Software Update"];
    uint64_t v18 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v17, v6, v7);

    id v6 = (void *)v18;
  }
LABEL_15:

  return v6;
}

void sub_10011B4A4(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10011B564;
  block[3] = &unk_100243A30;
  objc_copyWeak(&v9, (id *)(a1 + 40));
  uint64_t v4 = *(void *)(a1 + 32);
  id v7 = v3;
  uint64_t v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v9);
}

void sub_10011B564(uint64_t a1)
{
  id v2 = +[NSMutableArray arrayWithArray:*(void *)(a1 + 32)];
  id v3 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained setCloudDescriptors:v2];

  id v5 = objc_loadWeakRetained((id *)(a1 + 48));
  id v6 = [v5 cloudDescriptors];
  if (![v6 count])
  {

    goto LABEL_6;
  }
  id v7 = objc_loadWeakRetained((id *)(a1 + 48));
  if ([v7 presentedModally])
  {
    id v8 = objc_loadWeakRetained((id *)(a1 + 48));
    unsigned int v9 = [v8 launchedForTerms];

    if (v9) {
      goto LABEL_8;
    }
LABEL_6:
    [*(id *)(a1 + 40) queryManagerState];
    id v10 = objc_loadWeakRetained((id *)(a1 + 48));
    id v11 = [v10 activeDevice];
    uint64_t v12 = *(void *)(a1 + 40);
    uint64_t v22 = NRDevicePropertySystemBuildVersion;
    uint64_t v13 = +[NSArray arrayWithObjects:&v22 count:1];
    [v11 addPropertyObserver:v12 forPropertyChanges:v13];

    id v14 = *(void **)(a1 + 40);
    id v15 = objc_loadWeakRetained(v3);
    id v16 = [v15 activeDevice];
    [v14 checkForUpdatedBuildVersionWithDevice:v16];

    return;
  }

LABEL_8:
  id v17 = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v18 = [v17 cloudDescriptors];
  id v21 = [v18 lastObject];

  id v19 = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v20 = [v19 cloudDescriptors];
  [v20 removeLastObject];

  [*(id *)(a1 + 40) presentTermsRequiringPasscode:0 ifNecessaryWithAcceptanceAction:"downloadTermsAccepted" withDescriptor:v21];
}

void sub_10011C040(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_10011C05C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_10011C148;
  v11[3] = &unk_100247A28;
  objc_copyWeak(v14, (id *)(a1 + 32));
  v14[1] = a2;
  id v12 = v7;
  id v13 = v8;
  id v9 = v8;
  id v10 = v7;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v11);

  objc_destroyWeak(v14);
}

void sub_10011C148(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained handleManagerState:*(void *)(a1 + 56) update:*(void *)(a1 + 32) error:*(void *)(a1 + 40)];
}

void sub_10011E2C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10011E304(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48) || *(unsigned char *)(a1 + 49))
  {
    unint64_t v2 = *(void *)(a1 + 40);
    if (v2 > 2) {
      uint64_t v3 = 2;
    }
    else {
      uint64_t v3 = dword_1001AB308[v2];
    }
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v5 = [WeakRetained table];
    [v5 setState:v3];
  }
  if (*(unsigned char *)(a1 + 50))
  {
    id v6 = (id *)(a1 + 32);
    id v7 = objc_loadWeakRetained(v6);
    id v8 = [v7 specifiers];
    [v7 removeContiguousSpecifiers:v8 animated:1];

    id v11 = objc_loadWeakRetained(v6);
    id v9 = objc_loadWeakRetained(v6);
    id v10 = [v11 specifiersForState:[v9 subState]];
    [v11 insertContiguousSpecifiers:v10 atIndex:0 animated:1];
  }
  else
  {
    if (*(unsigned char *)(a1 + 49)) {
      return;
    }
    id v11 = objc_loadWeakRetained((id *)(a1 + 32));
    id v9 = [v11 installButtonGroup];
    [v11 reloadSpecifier:v9 animated:1];
  }
}

void sub_10011E538(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long buf)
{
  if (a2 == 1)
  {
    id v11 = objc_begin_catch(a1);
    id v12 = +[UIApplication sharedApplication];
    id v13 = [v12 keyWindow];
    uint64_t v14 = [v13 firstResponder];

    id v15 = pbb_bridge_log();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v14;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "First responder: (%@)", (uint8_t *)&buf, 0xCu);
    }

    objc_exception_rethrow();
  }
  _Unwind_Resume(a1);
}

void sub_10011E71C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    unint64_t v2 = [WeakRetained titleCell];
    [v2 setProgressDisplayStyle:0];

    uint64_t v3 = [v4 hidingProgressBarSource];
    dispatch_source_cancel(v3);

    [v4 setHidingProgressBarSource:0];
    id WeakRetained = v4;
  }
}

void sub_10011ECA4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 112));
  _Unwind_Resume(a1);
}

id sub_10011ECD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = [WeakRetained installButtonSpecifier];
  id v8 = +[NSNumber numberWithBool:a2];
  [v7 setProperty:v8 forKey:PSEnabledKey];

  id v9 = *(void **)(a1 + 32);

  return [v9 displayInstallButtonSpinner:a3 reloadSpecifier:1];
}

id sub_10011ED78(void *a1)
{
  (*(void (**)(void))(a1[5] + 16))();
  unint64_t v2 = (void *)a1[4];
  uint64_t v3 = a1[6];

  return [v2 performSelector:v3];
}

void sub_10011EDC8(uint64_t a1, char a2)
{
  if (*(void *)(a1 + 32))
  {
    id v3 = objc_alloc((Class)NSString);
    id v4 = [*(id *)(a1 + 32) documentation];
    id v5 = [v4 licenseAgreement];
    id v6 = [v3 initWithData:v5 encoding:4];

    uint64_t v7 = *(void *)(a1 + 32);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    [WeakRetained setUpdateAgreedTo:v7];

    id v9 = *(id *)(a1 + 32);
    id v10 = objc_loadWeakRetained((id *)(a1 + 64));
    [v10 setTermsFromCloudDevice:1];
  }
  else
  {
    id v68 = objc_loadWeakRetained((id *)(a1 + 64));
    id v9 = [v68 update];

    id v69 = objc_loadWeakRetained((id *)(a1 + 64));
    id v70 = [v69 update];
    id v71 = objc_loadWeakRetained((id *)(a1 + 64));
    [v71 setUpdateAgreedTo:v70];

    if ((a2 & 1) == 0)
    {
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
      goto LABEL_19;
    }
    id v72 = objc_loadWeakRetained((id *)(a1 + 64));
    v73 = [v72 update];
    unsigned int v74 = [v73 userDidAcceptTermsAndConditions];

    if (v74)
    {
      (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
      goto LABEL_19;
    }
    id v78 = objc_alloc((Class)NSString);
    id v10 = objc_loadWeakRetained((id *)(a1 + 64));
    v79 = [v10 update];
    v80 = [v79 documentation];
    v81 = [v80 licenseAgreement];
    id v6 = [v78 initWithData:v81 encoding:4];
  }
  if ([v6 length])
  {
    uint64_t v11 = *(void *)(a1 + 72);
    id v12 = objc_loadWeakRetained((id *)(a1 + 64));
    [v12 setTermsAcceptanceAction:v11];

    id v13 = objc_loadWeakRetained((id *)(a1 + 64));
    uint64_t v14 = [v13 activeDevice];
    id v15 = [v14 valueForProperty:NRDevicePropertyPairingID];
    id v16 = objc_loadWeakRetained((id *)(a1 + 64));
    [v16 setTermsDeviceID:v15];

    id v17 = objc_alloc((Class)NRTermsEvent);
    id v18 = objc_loadWeakRetained((id *)(a1 + 64));
    id v19 = [v18 termsDeviceID];
    id v20 = [v17 initWithDeviceID:v19];
    id v21 = objc_loadWeakRetained((id *)(a1 + 64));
    [v21 setTerms:v20];

    id v22 = objc_loadWeakRetained((id *)(a1 + 64));
    id v23 = [v22 terms];
    id v24 = [v9 documentationID];
    long long v25 = [v24 stringByAppendingString:@".licenseAgreement"];
    [v23 setDocumentationID:v25];

    id v26 = objc_loadWeakRetained((id *)(a1 + 64));
    uint64_t v27 = [v26 terms];
    long long v28 = [v9 documentation];
    uint64_t v29 = [v28 licenseAgreement];
    [v27 setTermsText:v29];

    id location = (id *)(a1 + 64);
    id v30 = objc_loadWeakRetained((id *)(a1 + 64));
    id v31 = [v30 terms];
    [v31 setPresentationReason:@"Requested by Install Tonight"];

    __int16 v32 = +[NSBundle mainBundle];
    id v33 = [v32 preferredLocalizations];
    __int16 v34 = [v33 firstObject];

    uint64_t v35 = [[COSSoftwareUpdateLicenseController alloc] initWithNibName:0 bundle:0];
    id v36 = +[NSBundle bundleForClass:objc_opt_class()];
    char v37 = [v36 localizedStringForKey:@"TERMS_AND_CONDITIONS" value:&stru_100249230 table:@"Software Update"];
    [(COSSoftwareUpdateLicenseController *)v35 setTitle:v37];

    id v38 = [objc_alloc((Class)UITextView) initWithFrame:CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height];
    __int16 v39 = +[UIFont systemFontOfSize:13.0];
    [v38 setFont:v39];

    [v38 setAutoresizingMask:18];
    if ([v34 isEqualToString:@"ar"])
    {
      id v40 = pbb_bridge_log();
      if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, ">>>>>>> Disabling AllowsNonContiguousLayout for selected language.", buf, 2u);
      }

      id v41 = [v38 layoutManager];
      [v41 setAllowsNonContiguousLayout:0];
    }
    v82 = v34;
    v84 = v6;
    id v85 = v9;
    [v38 setContentToHTMLString:v6];
    [v38 setEditable:0];
    uint64_t v42 = BPSTextColor();
    [v38 setTextColor:v42];

    id v43 = BPSBridgeTintColor();
    [v38 setTintColor:v43];

    id v44 = BPSBackgroundColor();
    [v38 setBackgroundColor:v44];

    [v38 setIndicatorStyle:2];
    [(COSSoftwareUpdateLicenseController *)v35 setView:v38];
    id v45 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v35];
    uint64_t v46 = [v45 navigationBar];
    BPSApplyStyleToNavBar();

    id v47 = objc_alloc((Class)UIBarButtonItem);
    uint64_t v48 = +[NSBundle bundleForClass:objc_opt_class()];
    id v49 = [v48 localizedStringForKey:@"DISAGREE" value:&stru_100249230 table:@"Software Update"];
    id v50 = [v47 initWithTitle:v49 style:0 target:*(void *)(a1 + 40) action:"_termsDisagree"];

    id v51 = objc_alloc((Class)UIBarButtonItem);
    long long v52 = +[NSBundle bundleForClass:objc_opt_class()];
    id v53 = [v52 localizedStringForKey:@"AGREE" value:&stru_100249230 table:@"Software Update"];
    id v54 = [v51 initWithTitle:v53 style:2 target:*(void *)(a1 + 40) action:"_termsAgree"];

    uint64_t v55 = BPSBridgeTintColor();
    [v50 setTintColor:v55];

    id v56 = BPSBridgeTintColor();
    [v54 setTintColor:v56];

    [v45 setModalPresentationStyle:2];
    id v57 = [objc_alloc((Class)UIBarButtonItem) initWithBarButtonSystemItem:5 target:0 action:0];
    id v58 = +[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", v50, v57, v54, 0);
    [(COSSoftwareUpdateLicenseController *)v35 setToolbarItems:v58 animated:0];

    [v45 setToolbarHidden:0];
    uint64_t v59 = [v45 toolbar];
    [v59 setBarStyle:1];

    unint64_t v60 = [v45 toolbar];
    [v60 setTranslucent:1];

    __int16 v61 = [v45 toolbar];
    v62 = BPSBridgeTintColor();
    [v61 setTintColor:v62];

    [v45 setModalPresentationStyle:0];
    id v63 = objc_loadWeakRetained(location);
    v64 = [v63 termsDisplayController];

    if (v64)
    {
      id v65 = objc_loadWeakRetained(location);
      v66 = [v65 termsDisplayController];
      [v66 presentViewController:v45 animated:1 completion:0];
    }
    else
    {
      [*(id *)(a1 + 40) presentViewController:v45 animated:1 completion:0];
    }

    id v9 = v85;
  }
  else
  {
    v75 = pbb_bridge_log();
    if (os_log_type_enabled(v75, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v75, OS_LOG_TYPE_DEFAULT, "Terms and Conditions are empty!", buf, 2u);
    }

    id v76 = objc_loadWeakRetained((id *)(a1 + 64));
    v77 = [v76 subManager];
    [v77 removeCloudDescriptor:*(void *)(a1 + 32)];

    BPSPresentGizmoUnreachableServiceAlertWithDismissalHandler();
  }
LABEL_19:
}

void sub_10011F738(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) navigationController];
  id v1 = [v2 popViewControllerAnimated:1];
}

void sub_10011F900(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  _DWORD v10[2] = sub_10011F9E0;
  v10[3] = &unk_100247AF0;
  id v11 = a3;
  id v6 = *(id *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 32);
  id v12 = v5;
  uint64_t v13 = v7;
  id v14 = v6;
  id v8 = v5;
  id v9 = v11;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);
}

void sub_10011F9E0(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = pbb_bridge_log();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      v11[0] = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "SFUnlockManager error: (%@)", buf, 0xCu);
    }

    id v9 = *(id *)(a1 + 56);
    BPSPresentGizmoUnreachableServiceAlertWithDismissalHandler();
  }
  else
  {
    id v4 = [*(id *)(a1 + 40) unlockEnabled];
    unsigned int v5 = [v4 BOOLValue];

    id v6 = [*(id *)(a1 + 40) remotePasscodeEnabled];
    unsigned int v7 = [v6 BOOLValue];

    id v8 = pbb_bridge_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 67109376;
      LODWORD(v11[0]) = v5;
      WORD2(v11[0]) = 1024;
      *(_DWORD *)((char *)v11 + 6) = v7;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "SFUnlockManager - isAutoUnlockEnabled: (%d); watchHasPasscode: (%d)",
        buf,
        0xEu);
    }

    if (v5 || !v7) {
      [*(id *)(a1 + 48) presentPasscodePromptWithCompletionHandler:*(void *)(a1 + 56)];
    }
    else {
      (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    }
  }
}

uint64_t sub_10011FBC0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10011FDFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_10011FE24(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained resetInstallButtonEnabledStateAndReloadSpecifier:1];
  }
  id v4 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16);

  return v4();
}

void sub_10011FF90(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    uint64_t v3 = pbb_bridge_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = 138412290;
      unsigned int v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Failed to add terms: %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_100120040(uint64_t a1)
{
  id v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "User chose: Agree", v13, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = [WeakRetained termsAcceptanceAction];

  if (v4)
  {
    id v5 = objc_loadWeakRetained((id *)(a1 + 40));
    id v6 = [v5 termsAcceptanceAction];

    id v7 = objc_loadWeakRetained((id *)(a1 + 40));
    [v7 setTermsAcceptanceAction:0];

    id v8 = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v9 = [v8 modalController];
    if (v9)
    {
      id v10 = (void *)v9;
      id v11 = objc_loadWeakRetained((id *)(a1 + 40));
      unsigned __int8 v12 = [v11 showingTermsRequestedByWatch];

      if (v12) {
        goto LABEL_9;
      }
    }
    else
    {
    }
    [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
LABEL_9:
    [*(id *)(a1 + 32) performSelector:v6];
  }
}

id sub_100121764(uint64_t a1)
{
  return [*(id *)(a1 + 32) presentTermsForInstallTonightIfNeeded];
}

id sub_1001217E0(uint64_t a1)
{
  return [*(id *)(a1 + 32) presentTermsForInstallTonightIfNeeded];
}

void sub_1001218FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained _manager:*(void *)(a1 + 32) scanRequestDidLocateUpdate:*(void *)(a1 + 40) error:*(void *)(a1 + 48)];
}

void sub_100121F9C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _manager:*(void *)(a1 + 32) didChangeProgressOnDownload:*(void *)(a1 + 40)];
}

void sub_100122BE0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained _manager:*(void *)(a1 + 32) didFailDownload:*(void *)(a1 + 40) withError:*(void *)(a1 + 48)];
}

void sub_100122FF0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _manager:*(void *)(a1 + 32) didFinishDownload:*(void *)(a1 + 40) willProceedWithInstallation:*(unsigned __int8 *)(a1 + 56) waitingForAdmissionControl:*(unsigned __int8 *)(a1 + 57)];
}

void sub_1001233D4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _manager:*(void *)(a1 + 32) willProceedWithInstallation:*(void *)(a1 + 40)];
}

void sub_100123720(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _manager:*(void *)(a1 + 32) installationOfUpdate:*(void *)(a1 + 40) canProceed:*(unsigned __int8 *)(a1 + 56)];
}

void sub_100123AA8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained _manager:*(void *)(a1 + 32) didFailInstallation:*(void *)(a1 + 40) withError:*(void *)(a1 + 48)];
}

void sub_100123E04(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _manager:*(void *)(a1 + 32) didFinishInstallation:*(void *)(a1 + 40)];
}

void sub_100125168(id a1, UIAlertAction *a2)
{
  +[NSURL URLWithString:@"prefs:root=General&path=SOFTWARE_UPDATE_LINK&ShowDefaultAudiencePane=YES"];
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  BPSOpenSensitiveURLAsync();
}

void sub_1001251B8(uint64_t a1)
{
  id v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Unenrolling from any enrolled beta programs", v7, 2u);
  }

  [*(id *)(a1 + 32) unenrollFromBetaUpdatesWithCompletion:&stru_100247BA0];
  [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
  uint64_t v3 = [*(id *)(a1 + 32) navigationController];
  id v4 = [v3 popViewControllerAnimated:1];

  id v5 = [*(id *)(a1 + 32) navigationController];
  id v6 = [v5 popViewControllerAnimated:1];
}

void sub_10012528C(id a1, BOOL a2, NSError *a3)
{
  BOOL v3 = a2;
  id v4 = a3;
  id v5 = pbb_bridge_log();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 67240450;
    v6[1] = v3;
    __int16 v7 = 2114;
    id v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Unenroll result: %{public}d error: %{public}@", (uint8_t *)v6, 0x12u);
  }
}

void sub_100125648(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) navigationController];
  id v1 = [v2 popViewControllerAnimated:1];
}

id sub_100125C78(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (sub_100008380())
  {
    id v5 = [v4 domain];
    unsigned int v6 = [v5 isEqualToString:SUBErrorDomain];

    if (v6)
    {
      __int16 v7 = (char *)[v4 code];
      if ((unint64_t)(v7 - 3) > 9) {
        CFStringRef v8 = &stru_100249230;
      }
      else {
        CFStringRef v8 = *(&off_100247CA0 + (void)(v7 - 3));
      }
    }
    else
    {
      CFStringRef v8 = 0;
    }
    id v10 = [v4 localizedDescription];
    id v9 = +[NSString stringWithFormat:@"%@\n\n[Internal Only]\n%@%@", v3, v8, v10];
  }
  else
  {
    id v9 = v3;
  }

  return v9;
}

id sub_100125D8C(uint64_t a1)
{
  [*(id *)(a1 + 32) reportRequiredUpdateAbort];
  id v2 = *(void **)(a1 + 32);

  return _[v2 unpairDevice];
}

void sub_100125DC8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) navigationController];
  id v1 = [v2 popViewControllerAnimated:1];
}

id sub_100125E18(uint64_t a1)
{
  return [*(id *)(a1 + 32) scanForUpdatesInBackgound:0];
}

void sub_100125F44(id a1, NSError *a2)
{
  id v2 = pbb_bridge_log();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Completed space failure recording", v3, 2u);
  }
}

id *sub_1001260B4(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] reloadSpecifiers];
  }
  return result;
}

void sub_10012619C(uint64_t a1)
{
  id v2 = +[SDBetaManager sharedManager];
  id v3 = [v2 seedingAppleIDUsernameForCurrentDevice];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100126338;
  block[3] = &unk_100243D28;
  objc_copyWeak(&v11, (id *)(a1 + 40));
  id v4 = v3;
  id v10 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  id v5 = +[SDBetaManager sharedManager];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_100126398;
  void v6[3] = &unk_100247C58;
  objc_copyWeak(&v8, (id *)(a1 + 40));
  id v7 = *(id *)(a1 + 32);
  [v5 queryProgramsForSystemAccountsWithPlatforms:8 completion:v6];

  objc_destroyWeak(&v8);
  objc_destroyWeak(&v11);
}

void sub_100126314(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100126338(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    objc_storeStrong(WeakRetained + 53, *(id *)(a1 + 32));
    id WeakRetained = v3;
  }
}

void sub_100126398(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  _DWORD v8[2] = sub_10012646C;
  v8[3] = &unk_100247C30;
  objc_copyWeak(v11, (id *)(a1 + 40));
  id v6 = *(id *)(a1 + 32);
  v11[1] = a3;
  id v9 = v5;
  id v10 = v6;
  id v7 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v8);

  objc_destroyWeak(v11);
}

void sub_10012646C(uint64_t a1)
{
  id v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    if (*(void *)(a1 + 56))
    {
      id v5 = pbb_bridge_log();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v6 = *(void *)(a1 + 56);
        *(_DWORD *)long long buf = 134217984;
        uint64_t v14 = v6;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Unable to load beta programs: %ld", buf, 0xCu);
      }

      uint64_t v7 = *(void *)(a1 + 40);
      if (v7) {
        (*(void (**)(uint64_t, void))(v7 + 16))(v7, 0);
      }
    }
    else
    {
      [WeakRetained setBetaPrograms:*(void *)(a1 + 32)];
      id v9 = [v4 nssManager];
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      _DWORD v10[2] = sub_100126644;
      v10[3] = &unk_100247C08;
      objc_copyWeak(&v12, v2);
      id v11 = *(id *)(a1 + 40);
      [v9 fetchBetaEnrollmentStatus:v10];

      objc_destroyWeak(&v12);
    }
  }
  else
  {
    uint64_t v8 = *(void *)(a1 + 40);
    if (v8) {
      (*(void (**)(uint64_t, void))(v8 + 16))(v8, 0);
    }
  }
}

void sub_100126628(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100126644(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (!WeakRetained)
  {
LABEL_7:
    uint64_t v9 = *(void *)(a1 + 32);
    if (v9) {
      (*(void (**)(uint64_t, void))(v9 + 16))(v9, 0);
    }
    goto LABEL_20;
  }
  if (v6)
  {
    uint64_t v8 = pbb_bridge_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      id v17 = v6;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Unable to load Beta updates: %@", buf, 0xCu);
    }

    goto LABEL_7;
  }
  if (v5)
  {
    id v10 = +[NSSet setWithObject:objc_opt_class()];
    id v15 = 0;
    id v11 = +[NSKeyedUnarchiver unarchivedObjectOfClasses:v10 fromData:v5 error:&v15];
    id v12 = v15;

    if (v12)
    {
      uint64_t v13 = pbb_bridge_log();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR) && os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        id v17 = v12;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Unable to unarchive beta program: %@", buf, 0xCu);
      }
    }
  }
  else
  {
    id v11 = 0;
  }
  [WeakRetained setSelectedBetaProgram:v11];
  uint64_t v14 = *(void *)(a1 + 32);
  if (v14) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v14, 1);
  }

LABEL_20:
}

id sub_100126AD0(uint64_t a1, char a2)
{
  id result = (id)(*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  if ((a2 & 1) == 0)
  {
    id v5 = *(void **)(a1 + 32);
    return [v5 loadBetaUpdates];
  }
  return result;
}

id sub_100126BEC(uint64_t a1, char a2)
{
  id result = (id)(*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  if ((a2 & 1) == 0)
  {
    id v5 = *(void **)(a1 + 32);
    return [v5 loadBetaUpdates];
  }
  return result;
}

id sub_100127CC4(uint64_t a1, void *a2)
{
  uint64_t v3 = NRDevicePropertyIsPaired;
  id v4 = a2;
  id v5 = [v4 valueForProperty:v3];
  id v6 = [v4 valueForProperty:NRDevicePropertyAdvertisedName];

  if ([v5 BOOLValue]) {
    id v7 = 0;
  }
  else {
    id v7 = [*(id *)(a1 + 32) isEqual:v6];
  }

  return v7;
}

void sub_1001282E8(id a1)
{
  id v1 = objc_alloc_init((Class)NSPersonNameComponentsFormatter);
  id v2 = (void *)qword_10029B300;
  qword_10029B300 = (uint64_t)v1;
}

void sub_100128B08(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 16), a2);
  }
}

void sub_100128B20(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 24), a2);
  }
}

void sub_100128B38(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 32), a2);
  }
}

void sub_100128B50(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 40), a2);
  }
}

void sub_100128C38(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  if (a1)
  {
    id v22 = v5;
    id v6 = objc_alloc_init((Class)NSPersonNameComponents);
    id v7 = [v22 firstName];
    [v6 setGivenName:v7];

    uint64_t v8 = [v22 lastName];
    [v6 setFamilyName:v8];

    uint64_t v9 = [(id)objc_opt_class() nameFormatter];
    id v10 = [v9 stringFromPersonNameComponents:v6];
    [*(id *)(a1 + 16) setText:v10];

    *(unsigned char *)(a1 + 8) = a3;
    id v11 = *(void **)(a1 + 16);
    if (a3)
    {
      [v11 setAlpha:0.5];
      [*(id *)(a1 + 24) setAlpha:0.5];
      id v12 = [(id)a1 imageView];
      [v12 setAlpha:0.5];
      uint64_t v13 = 0;
      uint64_t v14 = 0;
    }
    else
    {
      [v11 setAlpha:1.0];
      [*(id *)(a1 + 24) setAlpha:1.0];
      id v12 = [(id)a1 imageView];
      [v12 setAlpha:1.0];
      uint64_t v13 = 1;
      uint64_t v14 = 1;
    }

    [*(id *)(a1 + 40) setHidden:v13];
    [(id)a1 setAccessoryType:v14];
    id v15 = [v22 memberTypeDisplayString];
    [*(id *)(a1 + 24) setText:v15];

    id v16 = [UIApp setupController];
    id v17 = [v16 profilePictureStore];
    id v18 = [v22 altDSID];
    id v19 = [v17 profilePictureForFamilyMemberWithAltDSID:v18 pictureDiameter:40.0];

    if (v19)
    {
      id v20 = +[UIScreen mainScreen];
      [v20 scale];
      id v21 = +[UIImage imageWithData:scale:](UIImage, "imageWithData:scale:", v19);
      [*(id *)(a1 + 32) setImage:v21];
    }
    else
    {
      [*(id *)(a1 + 32) setImage:0];
    }

    id v5 = v22;
  }
}

void sub_100129630(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 56), a2);
  }
}

void sub_100129648(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 48), a2);
  }
}

void sub_100129660(id *a1, void *a2)
{
  id v3 = a2;
  if (([v3 isOrganizer] & 1) == 0
    && (![v3 isMe] || (objc_msgSend(v3, "isParent") & 1) == 0))
  {
    [a1[4] addObject:v3];
    id v13 = v3;
    id v4 = [v3 appleID];
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v5 = a1[5];
    id v6 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v15;
      do
      {
        for (i = 0; i != v7; i = (char *)i + 1)
        {
          if (*(void *)v15 != v8) {
            objc_enumerationMutation(v5);
          }
          id v10 = *(void **)(*((void *)&v14 + 1) + 8 * i);
          id v11 = [v10 valueForProperty:@"_altAccountIdentifier"];
          unsigned int v12 = [v11 isEqualToString:v4];

          if (v12) {
            [a1[6] setObject:v10 forKey:v4];
          }
        }
        id v7 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
      }
      while (v7);
    }

    id v3 = v13;
  }
}

void sub_1001297F0(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 32), a2);
  }
}

void sub_100129808(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 40), a2);
  }
}

id sub_100129C5C(uint64_t a1, uint64_t a2, int a3)
{
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v4 = *(void **)(a1 + 32);
  if (v4) {
    id v4 = (void *)v4[4];
  }
  id obj = v4;
  id v5 = [obj countByEnumeratingWithState:&v25 objects:v29 count:16];
  if (v5)
  {
    id v6 = v5;
    int v7 = 0;
    uint64_t v8 = *(void *)v26;
    uint64_t v9 = NRDevicePropertySerialNumber;
LABEL_5:
    uint64_t v10 = 0;
    while (1)
    {
      if (*(void *)v26 != v8) {
        objc_enumerationMutation(obj);
      }
      id v11 = *(void **)(*((void *)&v25 + 1) + 8 * v10);
      unsigned int v12 = *(void **)(a1 + 32);
      if (v12) {
        unsigned int v12 = (void *)v12[5];
      }
      id v13 = v12;
      long long v14 = [v11 appleID];
      long long v15 = [v13 objectForKey:v14];

      long long v16 = [v15 valueForProperty:v9];
      unsigned int v17 = [*(id *)(a1 + 40) isEqualToString:v16];
      if (v15) {
        int v18 = v17;
      }
      else {
        int v18 = 1;
      }
      if (a3)
      {
        if (v18)
        {
          uint64_t v19 = v7;
LABEL_18:
          if (v19 == a2)
          {
            id v20 = v11;

            goto LABEL_24;
          }
          ++v7;
        }
      }
      else if ((v18 & 1) == 0)
      {
        uint64_t v19 = v7;
        goto LABEL_18;
      }

      if (v6 == (id)++v10)
      {
        id v6 = [obj countByEnumeratingWithState:&v25 objects:v29 count:16];
        if (v6) {
          goto LABEL_5;
        }
        break;
      }
    }
  }
  id v20 = 0;
LABEL_24:

  return v20;
}

void sub_10012ADF4(id a1)
{
  id v1 = pbb_bridge_log();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Internal settings displayed.", v2, 2u);
  }
}

void sub_10012B310(uint64_t a1, int a2)
{
  id v4 = pbb_setup_log();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 136315394;
    id v6 = "-[COSSoftwareUpdateBetaUpdateContoller willEnterForeground:]_block_invoke";
    __int16 v7 = 1024;
    int v8 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s load result: %d", (uint8_t *)&v5, 0x12u);
  }

  if (a2) {
    [*(id *)(a1 + 32) reloadSpecifiers];
  }
}

void sub_10012BD70(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 192), a2);
  }
}

void sub_10012C1E4(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  id v6 = v5;
  if (a2)
  {
    if (v5)
    {
      __int16 v7 = pbb_setup_log();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        int v9 = 138412290;
        uint64_t v10 = v6;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Non-fatal error from beta unenroll %@", (uint8_t *)&v9, 0xCu);
      }
    }
  }
  else
  {
    int v8 = pbb_setup_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = 138412290;
      uint64_t v10 = v6;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Failed to unenroll from beta program: %@", (uint8_t *)&v9, 0xCu);
    }

    [*(id *)(a1 + 32) postFailedToSetBetaUpdateAlert];
  }
}

void sub_10012C304(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  id v6 = v5;
  if (a2)
  {
    if (v5)
    {
      __int16 v7 = pbb_setup_log();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        int v9 = 138412290;
        uint64_t v10 = v6;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Non-fatal error from beta enroll %@", (uint8_t *)&v9, 0xCu);
      }
    }
  }
  else
  {
    int v8 = pbb_setup_log();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = 138412290;
      uint64_t v10 = v6;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Failed to enroll in beta program: %@", (uint8_t *)&v9, 0xCu);
    }

    [*(id *)(a1 + 32) postFailedToSetBetaUpdateAlert];
  }
}

void sub_10012C618(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) navigationController];
  id v1 = [v2 popViewControllerAnimated:1];
}

id sub_10012CAA4(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifierID:@"NIGHTSTAND_CELL_ID"];
}

id sub_10012CAB4(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifierID:@"BUTTON_CHORD_CELL_ID"];
}

id sub_10012CAC4(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifierID:@"BACKGROUND_APP_UPDATING_CELL_ID"];
}

id sub_10012CAD4(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifierID:@"WORKOUT_SPORT_WATCH_MODE"];
}

id sub_10012CAE4(uint64_t a1, void *a2)
{
  return [a2 reloadSpecifierID:@"CONTINUITY"];
}

void sub_10012CAF4(uint64_t a1, char a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10012CB8C;
  v3[3] = &unk_100245C98;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  char v5 = a2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
  objc_destroyWeak(&v4);
}

void sub_10012CB8C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _gotAutomaticAppInstallState:*(unsigned __int8 *)(a1 + 40)];
}

id sub_10012D2EC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    id v3 = +[NSBundle mainBundle];
    CFStringRef v4 = (const __CFString *)[v3 localizedStringForKey:@"LOGS_FAIL_HEADER" value:&stru_100249230 table:@"General"];
    char v5 = +[NSBundle mainBundle];
    CFStringRef v6 = (const __CFString *)[v5 localizedStringForKey:@"LOGS_FAIL_MESSAGE" value:&stru_100249230 table:@"General"];
    __int16 v7 = +[NSBundle mainBundle];
    CFUserNotificationDisplayNotice(0.0, 0, 0, 0, 0, v4, v6, (CFStringRef)[v7 localizedStringForKey:@"LOGS_FAIL_BUTTON" value:&stru_100249230 table:@"General"]);
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 192) = 0;
  int v8 = *(void **)(a1 + 32);

  return [v8 reloadSpecifiers];
}

void sub_10012D404(id a1)
{
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.Bridge.sysdiagnose", (dispatch_queue_attr_t)&_dispatch_queue_attr_concurrent);
  id v2 = (void *)qword_10029B310;
  qword_10029B310 = (uint64_t)v1;
}

void sub_10012D448(id a1)
{
  NSLog(@"Calling into Libsysdiagnose to retrieve the recent sysdiagnose IDs from the Watch");
  id v15 = 0;
  dispatch_queue_t v1 = +[Libsysdiagnose fetchDiagnosticIDFromDeviceSource:2 WithMaxCount:3 withError:&v15];
  id v2 = v15;
  id v3 = v2;
  if (v2)
  {
    NSLog(@"Libsysdiagnose failed to retrieve the recent sysdiagnose IDs from the Watch with error: (%@)", v2);
  }
  else
  {
    NSLog(@"Libsysdiagnose successfully retrieved the list of recent sysdiagnoses from Watch: (%@)", v1);
    long long v13 = 0u;
    long long v14 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    id v4 = v1;
    id v5 = [v4 countByEnumeratingWithState:&v11 objects:v16 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v12;
      do
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(void *)v12 != v7) {
            objc_enumerationMutation(v4);
          }
          uint64_t v9 = *(void *)(*((void *)&v11 + 1) + 8 * i);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472;
          block[2] = sub_10012D608;
          block[3] = &unk_1002438A0;
          void block[4] = v9;
          dispatch_barrier_async((dispatch_queue_t)qword_10029B310, block);
        }
        id v6 = [v4 countByEnumeratingWithState:&v11 objects:v16 count:16];
      }
      while (v6);
    }
  }
}

void sub_10012D608(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  CFStringRef v7 = @"diagnosticID";
  uint64_t v8 = v2;
  id v3 = +[NSDictionary dictionaryWithObjects:&v8 forKeys:&v7 count:1];
  id v6 = 0;
  id v4 = +[Libsysdiagnose sysdiagnoseWithMetadata:v3 withError:&v6];
  id v5 = v6;

  if (v5) {
    NSLog(@"Libsysdiagnose failed to retrieve sysdiagnose with ID (%@) from the Watch with error: (%@)", *(void *)(a1 + 32), v5);
  }
  else {
    NSLog(@"Libsysdiagnose successfully retrieved sysdiagnose with ID (%@) from Watch at path: (%@)", *(void *)(a1 + 32), v4);
  }
}

id sub_10012D89C()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)qword_10029B330;
  uint64_t v7 = qword_10029B330;
  if (!qword_10029B330)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_10012F7D0;
    v3[3] = &unk_1002436A8;
    void v3[4] = &v4;
    sub_10012F7D0((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_10012D968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10012DCC4(uint64_t a1)
{
  id v2 = [sub_10012D89C() sharedPreferences];
  [v2 setNanoDictationEnabled:*(unsigned __int8 *)(a1 + 32)];
}

id sub_10012DD18(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadSpecifierID:@"DICTATION_CELL_ID"];
}

void sub_10012E290(id *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 stringByReplacingOccurrencesOfString:@"_" withString:@"-"];
  id v5 = [a1[4] objectForKeyedSubscript:v4];
  if (!v5)
  {
    id v6 = v4;
    uint64_t v24 = 0;
    long long v25 = &v24;
    uint64_t v26 = 0x2020000000;
    uint64_t v7 = (void (*)(id))off_10029B338;
    long long v27 = off_10029B338;
    if (!off_10029B338)
    {
      uint64_t v8 = (void *)sub_10012F65C();
      v25[3] = (uint64_t)dlsym(v8, "_AFPreferencesReplacementLanguageForLocalRecognizerLanguageCode");
      off_10029B338 = (_UNKNOWN *)v25[3];
      uint64_t v7 = (void (*)(id))v25[3];
    }
    _Block_object_dispose(&v24, 8);
    if (!v7) {
      goto LABEL_28;
    }
    uint64_t v9 = v7(v6);

    if (v9)
    {
      id v5 = [a1[4] objectForKeyedSubscript:v9];
    }
    else
    {
      id v5 = 0;
    }
  }
  id v10 = v5;
  uint64_t v24 = 0;
  long long v25 = &v24;
  uint64_t v26 = 0x2020000000;
  long long v11 = (uint64_t (*)(id))off_10029B340;
  long long v27 = off_10029B340;
  if (!off_10029B340)
  {
    long long v12 = (void *)sub_10012F65C();
    v25[3] = (uint64_t)dlsym(v12, "AFOfflineDictationStatusStringIsHighQualityModelSupported");
    off_10029B340 = (_UNKNOWN *)v25[3];
    long long v11 = (uint64_t (*)(id))v25[3];
  }
  _Block_object_dispose(&v24, 8);
  if (!v11)
  {
    sub_100171A7C();
LABEL_27:
    sub_100171A7C();
LABEL_28:
    sub_100171A7C();
    goto LABEL_29;
  }
  char v13 = v11(v10);

  if ((v13 & 1) == 0)
  {
    int v18 = a1 + 5;
    goto LABEL_19;
  }
  id v14 = v10;
  uint64_t v24 = 0;
  long long v25 = &v24;
  uint64_t v26 = 0x2020000000;
  id v15 = (uint64_t (*)(id))off_10029B348;
  long long v27 = off_10029B348;
  if (!off_10029B348)
  {
    long long v16 = (void *)sub_10012F65C();
    v25[3] = (uint64_t)dlsym(v16, "AFOfflineDictationStatusStringIsInstalled");
    off_10029B348 = (_UNKNOWN *)v25[3];
    id v15 = (uint64_t (*)(id))v25[3];
  }
  _Block_object_dispose(&v24, 8);
  if (!v15) {
    goto LABEL_27;
  }
  int v17 = v15(v14);

  if (v17)
  {
    int v18 = a1 + 6;
    goto LABEL_19;
  }
  id v19 = v14;
  uint64_t v24 = 0;
  long long v25 = &v24;
  uint64_t v26 = 0x2020000000;
  id v20 = (uint64_t (*)(id))off_10029B350;
  long long v27 = off_10029B350;
  if (!off_10029B350)
  {
    id v21 = (void *)sub_10012F65C();
    v25[3] = (uint64_t)dlsym(v21, "AFOfflineDictationStatusStringIsInstalling");
    off_10029B350 = (_UNKNOWN *)v25[3];
    id v20 = (uint64_t (*)(id))v25[3];
  }
  _Block_object_dispose(&v24, 8);
  if (!v20)
  {
LABEL_29:
    id v23 = (_Unwind_Exception *)sub_100171A7C();
    _Block_object_dispose(&v24, 8);
    _Unwind_Resume(v23);
  }
  int v22 = v20(v19);

  if (v22) {
    int v18 = a1 + 7;
  }
  else {
    int v18 = a1 + 8;
  }
LABEL_19:
  [*v18 addObject:v3];
}

BOOL sub_10012E7C8(id a1, NSString *a2, NSNumber *a3, BOOL *a4)
{
  return [(NSNumber *)a3 BOOLValue];
}

void *sub_10012F60C(uint64_t a1)
{
  id v2 = (void *)sub_10012F65C();
  id result = dlsym(v2, "AFNanoPreferencesDidChangeNotification");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_10029B320 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_10012F65C()
{
  v3[0] = 0;
  if (!qword_10029B328)
  {
    v3[1] = _NSConcreteStackBlock;
    v3[2] = 3221225472;
    v3[3] = sub_10012F75C;
    void v3[4] = &unk_1002436E0;
    void v3[5] = v3;
    long long v4 = off_100247E48;
    uint64_t v5 = 0;
    qword_10029B328 = _sl_dlopen();
  }
  uint64_t v0 = qword_10029B328;
  id v1 = (void *)v3[0];
  if (!qword_10029B328)
  {
    id v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t sub_10012F75C()
{
  uint64_t result = _sl_dlopen();
  qword_10029B328 = result;
  return result;
}

Class sub_10012F7D0(uint64_t a1)
{
  sub_10012F65C();
  Class result = objc_getClass("AFPreferences");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_10029B330 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = sub_100172060();
    return (Class)sub_10012F828(v3);
  }
  return result;
}

void *sub_10012F828(uint64_t a1)
{
  id v2 = (void *)sub_10012F65C();
  Class result = dlsym(v2, "_AFPreferencesReplacementLanguageForLocalRecognizerLanguageCode");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  off_10029B338 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *sub_10012F878(uint64_t a1)
{
  id v2 = (void *)sub_10012F65C();
  Class result = dlsym(v2, "AFOfflineDictationStatusStringIsHighQualityModelSupported");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  off_10029B340 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *sub_10012F8C8(uint64_t a1)
{
  id v2 = (void *)sub_10012F65C();
  Class result = dlsym(v2, "AFOfflineDictationStatusStringIsInstalled");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  off_10029B348 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *sub_10012F918(uint64_t a1)
{
  id v2 = (void *)sub_10012F65C();
  Class result = dlsym(v2, "AFOfflineDictationStatusStringIsInstalling");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  off_10029B350 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_10012FF74(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (!v5 || v6)
  {
    id v15 = pbb_accountsignin_log();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Error authenticating the account", buf, 2u);
    }

    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else
  {
    uint64_t v8 = [v5 objectForKeyedSubscript:AKAuthenticationUsernameKey];
    uint64_t v9 = [v5 objectForKeyedSubscript:AKAuthenticationRawPasswordKey];
    id v10 = [v5 objectForKeyedSubscript:AKAuthenticationAlternateDSIDKey];
    if (v8) {
      [*(id *)(*(void *)(a1 + 32) + 16) setUsername:v8];
    }
    if (v10) {
      [*(id *)(*(void *)(a1 + 32) + 16) ams_setAltDSID:v10];
    }
    if (v9) {
      [*(id *)(*(void *)(a1 + 32) + 16) ams_setRawPassword:v9];
    }
    id v11 = [objc_alloc((Class)AMSAuthenticateRequest) initWithAccount:*(void *)(*(void *)(a1 + 32) + 16) options:*(void *)(a1 + 40)];
    id v12 = [objc_alloc((Class)AMSAuthenticateTask) initWithRequest:v11];
    char v13 = pbb_accountsignin_log();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Performing ams authentication", buf, 2u);
    }

    id v14 = [v12 performAuthentication];
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    id v16[2] = sub_1001301D4;
    v16[3] = &unk_100244998;
    id v17 = *(id *)(a1 + 48);
    [v14 addFinishBlock:v16];
  }
}

uint64_t sub_1001301D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10013156C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v3 = pbb_setupflow_log();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = *(unsigned __int8 *)(a1 + 48);
      int v7 = 136315394;
      uint64_t v8 = "-[COSLinkUpgradeMonitor wirelessCredentialUpdateCompletedWithResult:]_block_invoke";
      __int16 v9 = 1024;
      int v10 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s: wireless credentials exchange complete: %d", (uint8_t *)&v7, 0x12u);
    }

    if (*(unsigned char *)(a1 + 48))
    {
      [WeakRetained setWirelessCredentialsExchangeComplete:1];
      if (![WeakRetained currentLinkSubType]
        && ([WeakRetained waitingForAWDLupgradeTimeout] & 1) == 0)
      {
        id v5 = [WeakRetained networkRelayDeviceMonitor];
        if ([v5 isConnected])
        {
          int v6 = *(unsigned __int8 *)(*(void *)(a1 + 32) + 17);

          if (!v6) {
            [WeakRetained _performLinkUpgradeToInfraWiFi];
          }
        }
        else
        {
        }
      }
    }
  }
}

void sub_100131ACC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained requestLinkUpgrade];
}

void sub_100132D34(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (v4)
  {
    uint64_t v3 = [[beam_bridge_2022_v2_1 alloc] initWithMLModel:v4];
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_100133034(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  if (v14)
  {
    id v5 = a3;
    int v6 = [beam_bridge_2022_v2_1Output alloc];
    int v7 = [v14 featureValueForName:@"cell_leaf_fully_connected_BiasAdd"];
    uint64_t v8 = [v7 multiArrayValue];
    __int16 v9 = [v14 featureValueForName:@"leaf_leaf_predictions_probabilities"];
    int v10 = [v9 multiArrayValue];
    id v11 = [(beam_bridge_2022_v2_1Output *)v6 initWithCell_leaf_fully_connected_BiasAdd:v8 leaf_leaf_predictions_probabilities:v10];

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    uint64_t v12 = *(void *)(a1 + 32);
    char v13 = *(void (**)(uint64_t, void, beam_bridge_2022_v2_1Output *))(v12 + 16);
    id v11 = a3;
    v13(v12, 0, v11);
  }
}

void sub_100133244(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  if (v14)
  {
    id v5 = a3;
    int v6 = [beam_bridge_2022_v2_1Output alloc];
    int v7 = [v14 featureValueForName:@"cell_leaf_fully_connected_BiasAdd"];
    uint64_t v8 = [v7 multiArrayValue];
    __int16 v9 = [v14 featureValueForName:@"leaf_leaf_predictions_probabilities"];
    int v10 = [v9 multiArrayValue];
    id v11 = [(beam_bridge_2022_v2_1Output *)v6 initWithCell_leaf_fully_connected_BiasAdd:v8 leaf_leaf_predictions_probabilities:v10];

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    uint64_t v12 = *(void *)(a1 + 32);
    char v13 = *(void (**)(uint64_t, void, beam_bridge_2022_v2_1Output *))(v12 + 16);
    id v11 = a3;
    v13(v12, 0, v11);
  }
}

__n128 sub_1001335DC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10013385C((uint64_t *)&unk_10029A320);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [v1 imageResource];
  if (v6)
  {
    int v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    id v11 = [v1 imageResourceBundleIdentifier];
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v15 = 0;
    }
    uint64_t v58 = v8;
    uint64_t v59 = v10;
    uint64_t v60 = v13;
    uint64_t v61 = v15;
    char v62 = 1;
    int v16 = sub_10014EF98();
    sub_10014EFA0(v16, 0, 0, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = type metadata accessor for URL();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v5, 1, v17) != 1)
    {
      URL.path(percentEncoded:)(1);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v17);
      LiveActivityImageMap.init(imagePath:)();
      goto LABEL_9;
    }
    sub_1001338A0((uint64_t)v5);
  }
  sub_100150D2C((uint64_t)v35);
LABEL_9:
  uint64_t v19 = v56;
  char v20 = v57;
  char v21 = v48;
  char v22 = v51;
  uint64_t v23 = v44;
  char v24 = v45;
  char v25 = v36;
  char v26 = v39;
  long long v27 = v35[1];
  *(_OWORD *)a1 = v35[0];
  *(_OWORD *)(a1 + 16) = v27;
  *(unsigned char *)(a1 + 32) = v25;
  *(_OWORD *)(a1 + 40) = v37;
  *(_OWORD *)(a1 + 56) = v38;
  *(unsigned char *)(a1 + 72) = v26;
  long long v28 = v41;
  *(_OWORD *)(a1 + 80) = v40;
  *(_OWORD *)(a1 + 96) = v28;
  long long v29 = v43;
  *(_OWORD *)(a1 + 112) = v42;
  *(_OWORD *)(a1 + 128) = v29;
  *(void *)(a1 + 144) = v23;
  *(unsigned char *)(a1 + 152) = v24;
  long long v30 = v47;
  *(_OWORD *)(a1 + 160) = v46;
  *(_OWORD *)(a1 + 176) = v30;
  *(unsigned char *)(a1 + 192) = v21;
  *(_OWORD *)(a1 + 200) = v49;
  *(_OWORD *)(a1 + 216) = v50;
  *(unsigned char *)(a1 + 232) = v22;
  long long v31 = v53;
  *(_OWORD *)(a1 + 240) = v52;
  *(_OWORD *)(a1 + 256) = v31;
  __n128 result = v54;
  long long v33 = v55;
  *(__n128 *)(a1 + 272) = v54;
  *(_OWORD *)(a1 + 288) = v33;
  *(void *)(a1 + 304) = v19;
  *(unsigned char *)(a1 + 312) = v20;
  return result;
}

uint64_t sub_10013385C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1001338A0(uint64_t a1)
{
  uint64_t v2 = sub_10013385C((uint64_t *)&unk_10029A320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double LiveActivitySetupStateProvider<>.textMap.getter@<D0>(_OWORD *a1@<X8>)
{
  sub_1001399C0(0xD00000000000001BLL, (void *)0x80000001002237B0);
  id v3 = [v1 titleString];
  if (v3)
  {
    uint64_t v4 = v3;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  LiveActivityText.init(title:subtitle:)();
  sub_1001399C0(0xD00000000000001BLL, (void *)0x80000001002237B0);
  id v5 = [v1 detailString];
  if (v5)
  {
    id v6 = v5;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  LiveActivityText.init(title:subtitle:)();
  LiveActivityTextMap.init(dynamicIslandExpanded:lockScreen:)();
  *a1 = v8;
  a1[1] = v9;
  double result = *(double *)&v10;
  a1[2] = v10;
  a1[3] = v11;
  return result;
}

{
  double result;
  long long v3;
  long long v4;
  long long v5;
  long long v6;

  sub_1001399C0(0xD00000000000001BLL, (void *)0x80000001002237B0);
  LiveActivityText.init(title:subtitle:)();
  sub_1001399C0(0xD00000000000001BLL, (void *)0x80000001002237B0);
  LiveActivityText.init(title:subtitle:)();
  LiveActivityTextMap.init(dynamicIslandExpanded:lockScreen:)();
  *a1 = v3;
  a1[1] = v4;
  double result = *(double *)&v5;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

void *LiveActivitySetupStateProvider<>.imageMap.getter@<X0>(void *a1@<X8>)
{
  sub_1001335DC((uint64_t)__src);
  return memcpy(a1, __src, 0x139uLL);
}

double COSExpressModeOptInViewController.textMap.getter@<D0>(_OWORD *a1@<X8>)
{
  return sub_100134604(0xD00000000000001BLL, (void *)0x80000001002237B0, 0xD00000000000002BLL, (void *)0x80000001002237D0, a1);
}

void *sub_100133BB0@<X0>(void *a1@<X8>)
{
  LiveActivitySetupStateProvider<>.imageMap.getter(v3);
  return memcpy(a1, v3, 0x139uLL);
}

double sub_100133BFC@<D0>(_OWORD *a1@<X8>)
{
  return sub_100134710(0xD00000000000001BLL, (void *)0x80000001002237B0, 0xD00000000000002BLL, (void *)0x80000001002237D0, a1);
}

double COSSpinnerPageController.textMap.getter@<D0>(_OWORD *a1@<X8>)
{
  sub_1001399C0(0xD00000000000001BLL, (void *)0x80000001002237B0);
  sub_1001399C0(0xD000000000000020, (void *)0x8000000100223800);
  LiveActivityText.init(title:subtitle:)();
  sub_1001399C0(0xD00000000000001BLL, (void *)0x80000001002237B0);
  id v3 = [v1 message];
  if (v3)
  {
    uint64_t v4 = v3;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    sub_1001399C0(0xD00000000000001FLL, (void *)0x8000000100223830);
  }
  LiveActivityText.init(title:subtitle:)();
  LiveActivityTextMap.init(dynamicIslandExpanded:lockScreen:)();
  *a1 = v6;
  a1[1] = v7;
  double result = *(double *)&v8;
  a1[2] = v8;
  a1[3] = v9;
  return result;
}

void *COSSpinnerPageController.imageMap.getter@<X0>(void *a1@<X8>)
{
  sub_100150D2C((uint64_t)v3);
  return memcpy(a1, v3, 0x139uLL);
}

void *sub_100133DE4@<X0>(void *a1@<X8>)
{
  LiveActivitySetupStateProvider.state.getter();
  return memcpy(a1, __src, 0x1AAuLL);
}

double sub_100133E24@<D0>(_OWORD *a1@<X8>)
{
  COSSpinnerPageController.textMap.getter(v5);
  long long v2 = v5[1];
  *a1 = v5[0];
  a1[1] = v2;
  double result = *(double *)&v6;
  long long v4 = v7;
  a1[2] = v6;
  a1[3] = v4;
  return result;
}

double COSInitialPropertyExchangeViewController.textMap.getter@<D0>(_OWORD *a1@<X8>)
{
  sub_100134878(v5);
  long long v2 = v5[1];
  *a1 = v5[0];
  a1[1] = v2;
  double result = *(double *)&v6;
  long long v4 = v7;
  a1[2] = v6;
  a1[3] = v4;
  return result;
}

void *COSWristSelectionViewController.state.getter@<X0>(void *a1@<X8>)
{
  sub_1001349A0(v3);
  return memcpy(a1, v3, 0x1AAuLL);
}

double sub_100133EE8@<D0>(_OWORD *a1@<X8>)
{
  LiveActivitySetupStateProvider<>.textMap.getter(v5);
  long long v2 = v5[1];
  *a1 = v5[0];
  a1[1] = v2;
  double result = *(double *)&v6;
  long long v4 = v7;
  a1[2] = v6;
  a1[3] = v4;
  return result;
}

double COSPasscodeAdvancedViewController.textMap.getter@<D0>(_OWORD *a1@<X8>)
{
  return sub_100134604(0xD00000000000001BLL, (void *)0x80000001002237B0, 0xD000000000000016, (void *)0x8000000100223850, a1);
}

double sub_100133F64@<D0>(_OWORD *a1@<X8>)
{
  return sub_100134710(0xD00000000000001BLL, (void *)0x80000001002237B0, 0xD000000000000016, (void *)0x8000000100223850, a1);
}

void *COSSetupFinishedViewController.state.getter@<X0>(void *a1@<X8>)
{
  long long v14 = 0u;
  long long v15 = 0u;
  char v16 = 2;
  sub_100150820();
  sub_1001399C0(0xD00000000000001ELL, (void *)0x8000000100223870);
  sub_1001399C0(0xD00000000000001FLL, (void *)0x8000000100223890);
  LiveActivityText.init(title:subtitle:)();
  LiveActivityTextMap.init(dynamicIslandExpanded:lockScreen:)();
  [v1 totalProgress:sub_100134ADC((uint64_t)v4).n128_f64[0]];
  sub_1001507D4();
  LiveActivityMetadata.ProgressMetadata.init(progress:positionFactor:sizeFactor:watchAssetType:)();
  long long v10 = v5;
  long long v11 = v6;
  uint64_t v12 = v7;
  char v13 = v8 | 0x40;
  LiveActivitySetupState.init(textMap:imageMap:metadata:shouldSuppressAlert:)();
  return memcpy(a1, __src, 0x1AAuLL);
}

double COSSetupFinishedViewController.textMap.getter@<D0>(_OWORD *a1@<X8>)
{
  return sub_100134604(0xD00000000000001ELL, (void *)0x8000000100223870, 0xD00000000000001FLL, (void *)0x8000000100223890, a1);
}

void *COSSetupFinishedViewController.imageMap.getter@<X0>(void *a1@<X8>)
{
  sub_100134ADC((uint64_t)v3);
  return memcpy(a1, v3, 0x139uLL);
}

void sub_100134184()
{
  id v4 = [self sharedApplication];
  self;
  id v1 = (void *)swift_dynamicCastObjCClass();
  if (v1)
  {
    id v3 = [v1 setupController];

    if (!v3) {
      return;
    }
    if ([v3 areLiveActivitiesAllowed])
    {
      long long v25 = 0u;
      long long v26 = 0u;
      char v27 = 2;
      sub_100150820();
      sub_1001399C0(0xD00000000000001ELL, (void *)0x8000000100223870);
      sub_1001399C0(0xD00000000000001FLL, (void *)0x8000000100223890);
      LiveActivityText.init(title:subtitle:)();
      LiveActivityTextMap.init(dynamicIslandExpanded:lockScreen:)();
      [v0 totalProgress:sub_100134ADC((uint64_t)v6).n128_f64[0]];
      sub_1001507D4();
      LiveActivityMetadata.ProgressMetadata.init(progress:positionFactor:sizeFactor:watchAssetType:)();
      long long v21 = v7;
      long long v22 = v8;
      uint64_t v23 = v9;
      char v24 = v10 | 0x40;
      LiveActivitySetupState.init(textMap:imageMap:metadata:shouldSuppressAlert:)();
      memcpy(&__src[4], v15, 0x139uLL);
      __src[0] = v11;
      __src[1] = v12;
      __src[2] = v13;
      __src[3] = v14;
      __src[24] = v16;
      __src[25] = v17;
      *(void *)&__src[26] = v18;
      BYTE8(__src[26]) = v19;
      BYTE9(__src[26]) = 1;
      memcpy(__dst, __src, 0x1AAuLL);
      sub_1001398A4(__dst);

      sub_100134E24((uint64_t)__src);
      return;
    }
    long long v2 = v3;
  }
  else
  {
    long long v2 = v4;
  }
}

void *sub_100134468@<X0>(void *a1@<X8>)
{
  COSSetupFinishedViewController.state.getter(v3);
  return memcpy(a1, v3, 0x1AAuLL);
}

double sub_1001344B4@<D0>(_OWORD *a1@<X8>)
{
  return sub_100134710(0xD00000000000001ELL, (void *)0x8000000100223870, 0xD00000000000001FLL, (void *)0x8000000100223890, a1);
}

double COSCrownOrientationChoiceViewController.textMap.getter@<D0>(_OWORD *a1@<X8>)
{
  return sub_100134604(0xD00000000000001BLL, (void *)0x80000001002237B0, 0xD000000000000021, (void *)0x80000001002238B0, a1);
}

double sub_100134524@<D0>(_OWORD *a1@<X8>)
{
  return sub_100134710(0xD00000000000001BLL, (void *)0x80000001002237B0, 0xD000000000000021, (void *)0x80000001002238B0, a1);
}

double COSTermsConditionsController.textMap.getter@<D0>(_OWORD *a1@<X8>)
{
  return sub_100134604(0xD00000000000001BLL, (void *)0x80000001002237B0, 0xD000000000000022, (void *)0x80000001002238E0, a1);
}

double sub_100134594@<D0>(_OWORD *a1@<X8>)
{
  return sub_100134710(0xD00000000000001BLL, (void *)0x80000001002237B0, 0xD000000000000022, (void *)0x80000001002238E0, a1);
}

double COSHelloAppleWatchViewController.textMap.getter@<D0>(_OWORD *a1@<X8>)
{
  return sub_100134604(0xD000000000000019, (void *)0x8000000100223910, 0xD00000000000001CLL, (void *)0x8000000100223930, a1);
}

double sub_100134604@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, _OWORD *a5@<X8>)
{
  sub_1001399C0(a1, a2);
  sub_1001399C0(a3, a4);
  LiveActivityText.init(title:subtitle:)();
  LiveActivityTextMap.init(dynamicIslandExpanded:lockScreen:)();
  *a5 = v9;
  a5[1] = v10;
  double result = *(double *)&v11;
  a5[2] = v11;
  a5[3] = v12;
  return result;
}

void *COSHelloAppleWatchViewController.imageMap.getter@<X0>(void *a1@<X8>)
{
  sub_1001351D4((uint64_t)v3);
  return memcpy(a1, v3, 0x139uLL);
}

double sub_1001346D8@<D0>(_OWORD *a1@<X8>)
{
  return sub_100134710(0xD000000000000019, (void *)0x8000000100223910, 0xD00000000000001CLL, (void *)0x8000000100223930, a1);
}

double sub_100134710@<D0>(uint64_t a1@<X2>, void *a2@<X3>, uint64_t a3@<X4>, void *a4@<X5>, _OWORD *a5@<X8>)
{
  sub_1001399C0(a1, a2);
  sub_1001399C0(a3, a4);
  LiveActivityText.init(title:subtitle:)();
  LiveActivityTextMap.init(dynamicIslandExpanded:lockScreen:)();
  *a5 = v9;
  a5[1] = v10;
  double result = *(double *)&v11;
  a5[2] = v11;
  a5[3] = v12;
  return result;
}

uint64_t sub_1001347AC()
{
  uint64_t v0 = sub_10013385C((uint64_t *)&unk_10029A320);
  __chkstk_darwin(v0 - 8);
  long long v2 = (char *)v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[1] = 1;
  memset(&v4[2], 0, 24);
  char v5 = 2;
  sub_10014EFA0(3, 0x6F6C6C65685FLL, (void *)0xE600000000000000, v2);
  sub_1001338A0((uint64_t)v2);
  sub_10014EFA0(2, 0x6F6C6C65685FLL, (void *)0xE600000000000000, v2);
  return sub_1001338A0((uint64_t)v2);
}

double sub_100134878@<D0>(_OWORD *a1@<X8>)
{
  sub_1001399C0(0xD00000000000001BLL, (void *)0x80000001002237B0);
  sub_1001399C0(0xD000000000000020, (void *)0x8000000100223800);
  LiveActivityText.init(title:subtitle:)();
  sub_1001399C0(0xD00000000000001BLL, (void *)0x80000001002237B0);
  sub_1001399C0(0xD00000000000001FLL, (void *)0x8000000100223830);
  LiveActivityText.init(title:subtitle:)();
  LiveActivityTextMap.init(dynamicIslandExpanded:lockScreen:)();
  *a1 = v3;
  a1[1] = v4;
  double result = *(double *)&v5;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

void *sub_1001349A0@<X0>(void *a1@<X8>)
{
  sub_1001399C0(0xD00000000000001ALL, (void *)0x8000000100223950);
  LiveActivityText.init(title:subtitle:)();
  sub_1001399C0(0xD00000000000001BLL, (void *)0x80000001002237B0);
  sub_1001399C0(0xD00000000000001ALL, (void *)0x8000000100223950);
  LiveActivityText.init(title:subtitle:)();
  LiveActivityTextMap.init(dynamicIslandExpanded:lockScreen:)();
  sub_100150D2C((uint64_t)v3);
  uint64_t v7 = 0;
  long long v5 = 0u;
  long long v6 = 0u;
  char v8 = 0x80;
  LiveActivitySetupState.init(textMap:imageMap:metadata:shouldSuppressAlert:)();
  return memcpy(a1, __src, 0x1AAuLL);
}

__n128 sub_100134ADC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10013385C((uint64_t *)&unk_10029A320);
  __chkstk_darwin(v2 - 8);
  long long v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v75 = 0u;
  long long v76 = 0u;
  char v77 = 2;
  int v5 = sub_10014EF98();
  sub_10014EFA0(v5, 0, 0, v4);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_1001338A0((uint64_t)v4);
    long long v65 = 0u;
    long long v66 = 0u;
    uint64_t v67 = 255;
    long long v68 = 0u;
    long long v69 = 0u;
    char v70 = 0;
    uint64_t v8 = LiveActivityImageSource.systemAppleWatchSFSymbol.unsafeMutableAddressor();
    sub_100135674(v8, (uint64_t)v32);
    long long v26 = 0u;
    long long v27 = 0u;
    unsigned __int8 v28 = -1;
    sub_1001356D0((uint64_t)v32);
    LiveActivityImages.init(leadingImageSource:trailingImageSource:)();
    sub_100135674(v8, (uint64_t)&v71);
    sub_1001356D0((uint64_t)&v71);
  }
  else
  {
    Swift::String v9 = URL.path(percentEncoded:)(1);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
    long long v55 = 0u;
    long long v56 = 0u;
    uint64_t v57 = 255;
    long long v58 = 0u;
    long long v59 = 0u;
    char v60 = 0;
    Swift::String v71 = v9;
    uint64_t v72 = 0;
    uint64_t v73 = 0;
    char v74 = 1;
    *(_OWORD *)&v61[40] = 0u;
    long long v62 = 0u;
    char v63 = -1;
    LiveActivityImages.init(leadingImageSource:trailingImageSource:)();
    long long v65 = v26;
    long long v66 = v27;
    uint64_t v67 = v28;
    long long v68 = v29;
    long long v69 = v30;
    char v70 = v31;
    uint64_t v10 = LiveActivityImageSource.systemAppleWatchSFSymbol.unsafeMutableAddressor();
    sub_100135674(v10, (uint64_t)v64);
    sub_1001356D0((uint64_t)v64);
    LiveActivityImages.init(leadingImageSource:trailingImageSource:)();
    sub_100135674(v10, (uint64_t)v61);
    sub_1001356D0((uint64_t)v61);
  }
  LiveActivityImages.init(leadingImageSource:trailingImageSource:)();
  LiveActivityImageMap.init(dynamicIslandCompact:dynamicIslandMinimal:dynamicIslandExpanded:lockScreen:)();
  uint64_t v11 = v53;
  char v12 = v54;
  char v13 = v45;
  char v14 = v48;
  uint64_t v15 = v41;
  char v16 = v42;
  char v17 = v33;
  char v18 = v36;
  long long v19 = v32[11];
  *(_OWORD *)a1 = v32[10];
  *(_OWORD *)(a1 + 16) = v19;
  *(unsigned char *)(a1 + 32) = v17;
  *(_OWORD *)(a1 + 40) = v34;
  *(_OWORD *)(a1 + 56) = v35;
  *(unsigned char *)(a1 + 72) = v18;
  long long v20 = v38;
  *(_OWORD *)(a1 + 80) = v37;
  *(_OWORD *)(a1 + 96) = v20;
  long long v21 = v40;
  *(_OWORD *)(a1 + 112) = v39;
  *(_OWORD *)(a1 + 128) = v21;
  *(void *)(a1 + 144) = v15;
  *(unsigned char *)(a1 + 152) = v16;
  long long v22 = v44;
  *(_OWORD *)(a1 + 160) = v43;
  *(_OWORD *)(a1 + 176) = v22;
  *(unsigned char *)(a1 + 192) = v13;
  *(_OWORD *)(a1 + 200) = v46;
  *(_OWORD *)(a1 + 216) = v47;
  *(unsigned char *)(a1 + 232) = v14;
  long long v23 = v50;
  *(_OWORD *)(a1 + 240) = v49;
  *(_OWORD *)(a1 + 256) = v23;
  __n128 result = v51;
  long long v25 = v52;
  *(__n128 *)(a1 + 272) = v51;
  *(_OWORD *)(a1 + 288) = v25;
  *(void *)(a1 + 304) = v11;
  *(unsigned char *)(a1 + 312) = v12;
  return result;
}

uint64_t sub_100134E24(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 72);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v10 = *(void *)(a1 + 88);
  uint64_t v11 = *(void *)(a1 + 80);
  uint64_t v17 = *(void *)(a1 + 112);
  uint64_t v18 = *(void *)(a1 + 104);
  uint64_t v15 = *(void *)(a1 + 128);
  uint64_t v16 = *(void *)(a1 + 120);
  uint64_t v25 = *(void *)(a1 + 152);
  uint64_t v26 = *(void *)(a1 + 144);
  uint64_t v23 = *(void *)(a1 + 168);
  uint64_t v24 = *(void *)(a1 + 160);
  uint64_t v21 = *(void *)(a1 + 184);
  uint64_t v22 = *(void *)(a1 + 176);
  uint64_t v19 = *(void *)(a1 + 200);
  uint64_t v20 = *(void *)(a1 + 192);
  uint64_t v14 = *(void *)(a1 + 208);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 216);
  uint64_t v30 = *(void *)(a1 + 232);
  uint64_t v31 = *(void *)(a1 + 224);
  uint64_t v28 = *(void *)(a1 + 248);
  uint64_t v29 = *(void *)(a1 + 240);
  uint64_t v36 = *(void *)(a1 + 264);
  uint64_t v34 = *(void *)(a1 + 280);
  uint64_t v35 = *(void *)(a1 + 272);
  uint64_t v33 = *(void *)(a1 + 288);
  uint64_t v44 = *(void *)(a1 + 312);
  uint64_t v45 = *(void *)(a1 + 304);
  uint64_t v42 = *(void *)(a1 + 328);
  uint64_t v43 = *(void *)(a1 + 320);
  uint64_t v40 = *(void *)(a1 + 344);
  uint64_t v41 = *(void *)(a1 + 336);
  uint64_t v38 = *(void *)(a1 + 360);
  uint64_t v39 = *(void *)(a1 + 352);
  uint64_t v32 = *(void *)(a1 + 368);
  unsigned __int8 v27 = *(unsigned char *)(a1 + 376);
  uint64_t v49 = *(void *)(a1 + 392);
  uint64_t v50 = *(void *)(a1 + 384);
  uint64_t v47 = *(void *)(a1 + 408);
  uint64_t v48 = *(void *)(a1 + 400);
  uint64_t v46 = *(void *)(a1 + 416);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 96);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 136);
  unsigned __int8 v6 = *(unsigned char *)(a1 + 256);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 296);
  unsigned __int8 v37 = *(unsigned char *)(a1 + 424);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100135058(v2, v3);
  sub_10013509C(v13, v12, v11, v10, v4);
  sub_1001350FC(v18, v17, v16, v15, v5);
  sub_100135110(v26, v25, v24, v23, v22, v21, v20, v19, v14, v9);
  sub_10013509C(v31, v30, v29, v28, v6);
  sub_1001350FC(v36, v35, v34, v33, v7);
  sub_100135110(v45, v44, v43, v42, v41, v40, v39, v38, v32, v27);
  sub_100135188(v50, v49, v48, v47, v46, v37);
  return a1;
}

uint64_t sub_100135058(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10013509C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 >= 2u)
  {
    if (a5 != 2) {
      return result;
    }
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001350FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 0xFF) {
    return sub_10013509C(a1, a2, a3, a4, a5);
  }
  return a1;
}

uint64_t sub_100135110(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  if (a5 != 0xFF)
  {
    sub_10013509C(result, a2, a3, a4, a5);
    return sub_1001350FC(a6, a7, a8, a9, a10);
  }
  return result;
}

uint64_t sub_100135188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 <= 0x3Fu)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

__n128 sub_1001351D4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10013385C((uint64_t *)&unk_10029A320);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v38 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  unsigned __int8 v7 = (char *)&v35 - v6;
  __chkstk_darwin(v5);
  unsigned __int8 v9 = (char *)&v35 - v8;
  uint64_t v85 = 1;
  uint64_t v86 = 0;
  uint64_t v88 = 0;
  uint64_t v87 = 0;
  char v89 = 2;
  sub_10014E4A4(3, 0x6F6C6C65685FLL, (void *)0xE600000000000000, (uint64_t)&v35 - v8);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10) == 1)
  {
    unsigned __int8 v7 = v9;
LABEL_5:
    sub_1001338A0((uint64_t)v7);
    long long v90 = 0u;
    long long v91 = 0u;
    uint64_t v92 = 255;
    long long v93 = 0u;
    long long v94 = 0u;
    char v95 = 0;
    uint64_t v14 = LiveActivityImageSource.systemAppleWatchSFSymbol.unsafeMutableAddressor();
    sub_100135674(v14, (uint64_t)v42);
    long long v39 = 0u;
    long long v40 = 0u;
    char v41 = -1;
    sub_1001356D0((uint64_t)v42);
    LiveActivityImages.init(leadingImageSource:trailingImageSource:)();
    sub_100135674(v14, (uint64_t)v96);
    sub_1001356D0((uint64_t)v96);
    LiveActivityImages.init(leadingImageSource:trailingImageSource:)();
    goto LABEL_9;
  }
  Swift::String v37 = URL.path(percentEncoded:)(1);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v11 + 8);
  v13(v9, v10);
  sub_10014E4A4(2, 0x6F6C6C65685FLL, (void *)0xE600000000000000, (uint64_t)v7);
  if (v12(v7, 1, v10) == 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  object = v37._object;
  Swift::String v16 = URL.path(percentEncoded:)(1);
  uint64_t v35 = v16._object;
  uint64_t countAndFlagsBits = v16._countAndFlagsBits;
  v13(v7, v10);
  uint64_t v17 = sub_100151384();
  swift_beginAccess();
  if ((*v17 & 1) == 0)
  {
    uint64_t v18 = v38;
    sub_10014EFA0(3, 0x6F6C6C65685FLL, (void *)0xE600000000000000, v38);
    sub_1001338A0((uint64_t)v18);
    sub_10014EFA0(2, 0x6F6C6C65685FLL, (void *)0xE600000000000000, v18);
    sub_1001338A0((uint64_t)v18);
  }
  long long v71 = 0u;
  long long v72 = 0u;
  uint64_t v73 = 255;
  long long v74 = 0u;
  long long v75 = 0u;
  char v76 = 0;
  v96[0] = countAndFlagsBits;
  v96[1] = v35;
  v96[2] = 0;
  v96[3] = 0;
  char v97 = 1;
  *(_OWORD *)&v77[40] = 0u;
  long long v78 = 0u;
  char v79 = -1;
  LiveActivityImages.init(leadingImageSource:trailingImageSource:)();
  uint64_t v80 = v37._countAndFlagsBits;
  v81 = object;
  uint64_t v83 = 0;
  uint64_t v82 = 0;
  char v84 = 1;
  LiveActivityImages.init(leadingImageSource:trailingImageSource:)();
  long long v90 = v42[0];
  long long v91 = v42[1];
  uint64_t v92 = v43;
  long long v93 = v44;
  long long v94 = v45;
  char v95 = v46;
  uint64_t v19 = LiveActivityImageSource.systemAppleWatchSFSymbol.unsafeMutableAddressor();
  sub_100135674(v19, (uint64_t)v77);
  sub_1001356D0((uint64_t)v77);
  LiveActivityImages.init(leadingImageSource:trailingImageSource:)();
LABEL_9:
  LiveActivityImageMap.init(dynamicIslandCompact:dynamicIslandMinimal:dynamicIslandExpanded:lockScreen:)();
  uint64_t v20 = v69;
  char v21 = v70;
  char v22 = v61;
  char v23 = v64;
  uint64_t v24 = v57;
  char v25 = v58;
  char v26 = v49;
  char v27 = v52;
  long long v28 = v48;
  *(_OWORD *)a1 = v47;
  *(_OWORD *)(a1 + 16) = v28;
  *(unsigned char *)(a1 + 32) = v26;
  *(_OWORD *)(a1 + 40) = v50;
  *(_OWORD *)(a1 + 56) = v51;
  *(unsigned char *)(a1 + 72) = v27;
  long long v29 = v54;
  *(_OWORD *)(a1 + 80) = v53;
  *(_OWORD *)(a1 + 96) = v29;
  long long v30 = v56;
  *(_OWORD *)(a1 + 112) = v55;
  *(_OWORD *)(a1 + 128) = v30;
  *(void *)(a1 + 144) = v24;
  *(unsigned char *)(a1 + 152) = v25;
  long long v31 = v60;
  *(_OWORD *)(a1 + 160) = v59;
  *(_OWORD *)(a1 + 176) = v31;
  *(unsigned char *)(a1 + 192) = v22;
  *(_OWORD *)(a1 + 200) = v62;
  *(_OWORD *)(a1 + 216) = v63;
  *(unsigned char *)(a1 + 232) = v23;
  long long v32 = v66;
  *(_OWORD *)(a1 + 240) = v65;
  *(_OWORD *)(a1 + 256) = v32;
  __n128 result = v67;
  long long v34 = v68;
  *(__n128 *)(a1 + 272) = v67;
  *(_OWORD *)(a1 + 288) = v34;
  *(void *)(a1 + 304) = v20;
  *(unsigned char *)(a1 + 312) = v21;
  return result;
}

uint64_t sub_100135674(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001356D0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100135708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 >= 2u)
  {
    if (a5 != 2) {
      return result;
    }
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRetain();
}

void sub_100135774(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = self;
  unsigned __int8 v7 = v3;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v6 proxyVolumeControllerWithAudioCategory:v8];

  if (v9)
  {
    *(void *)&v7[OBJC_IVAR___COSHapticsViewController_volumeController] = v9;

    if (a2)
    {
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v10 = 0;
    }
    v13.receiver = v7;
    v13.super_class = (Class)type metadata accessor for HapticsViewController();
    [super initWithNibName:v10 bundle:a3];

    id v12 = v11;
    [(id)swift_unknownObjectRetain() setDelegate:v12];
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for HapticsViewController()
{
  return self;
}

void sub_100135994()
{
  uint64_t v1 = v0;
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 valueForKey:v2];

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_100135CAC((uint64_t)v18, (uint64_t)v19);
  if (v20)
  {
LABEL_13:
    v17.receiver = v1;
    v17.super_class = (Class)type metadata accessor for HapticsViewController();
    [super specifiers];
    if (v15)
    {
      Swift::String v16 = v15;
      static Array._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1001363C4((uint64_t)v19);
      return;
    }
    __break(1u);
    goto LABEL_16;
  }
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v1 loadSpecifiersFromPlistName:v4 target:v1];

  if (!v5)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  *(void *)&v18[0] = 0;
  static Array._forceBridgeFromObjectiveC(_:result:)();
  if (!*(void *)&v18[0])
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v7 = String._bridgeToObjectiveC()();
  [v1 setValue:isa forKey:v7];

  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v1 specifierForID:v8];

  if (v9)
  {
    unint64_t v10 = sub_1001362B4(&off_100248168);
    sub_10013385C(&qword_10029A340);
    swift_arrayDestroy();
    id v11 = [*(id *)&v1[OBJC_IVAR___COSHapticsViewController_volumeController] hapticState];
    if (*(void *)(v10 + 16) && (sub_1001361AC((Swift::UInt)v11), (v12 & 1) != 0))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      NSString v13 = 0;
    }
    id v14 = [v1 specifierForID:v13];

    [v9 setProperty:v14 forKey:PSRadioGroupCheckedSpecifierKey];
    goto LABEL_13;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_100135CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10013385C(&qword_10029A4E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100135DA0(void *a1, uint64_t a2, uint64_t a3, const char **a4, SEL *a5)
{
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for HapticsViewController();
  NSString v8 = *a4;
  id v9 = (char *)v10.receiver;
  [super v8:a3];
  [*(id *)&v9[OBJC_IVAR___COSHapticsViewController_volumeController] *a5 v10.receiver, v10.super_class];
}

void sub_100135E18(uint64_t a1)
{
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for HapticsViewController();
  [super tableView:a1 didSelectRowAtIndexPath:isa];

  uint64_t v4 = *(void **)&v1[OBJC_IVAR___COSHapticsViewController_volumeController];
  Class v5 = IndexPath._bridgeToObjectiveC()().super.isa;
  id v6 = [v1 specifierAtIndexPath:v5];

  if (v6)
  {
    id v7 = [v6 propertyForKey:PSValueKey];

    if (v7)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_100136424(&v10, &v11);
      sub_100136434();
      swift_dynamicCast();
      id v8 = [v9 integerValue];

      [v4 setHapticState:v8];
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_100136064()
{
  return [v0 reloadSpecifiers];
}

id sub_100136080()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HapticsViewController();
  return [super dealloc];
}

Swift::Int sub_1001360C4()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10013610C()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100136138()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

BOOL sub_10013617C(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_100136190@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1001361A0(void *a1@<X8>)
{
  *a1 = *v1;
}

unint64_t sub_1001361AC(Swift::UInt a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v2 = Hasher._finalize()();

  return sub_100136218(a1, v2);
}

unint64_t sub_100136218(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1001362B4(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_10013385C(&qword_10029A3E8);
  id v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  Swift::UInt v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  unint64_t result = sub_1001361AC(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  id v9 = a1 + 9;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    long long v10 = (void *)(v3[7] + 16 * result);
    *long long v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    id v14 = v9 + 3;
    Swift::UInt v4 = *(v9 - 2);
    uint64_t v5 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1001361AC(v4);
    id v9 = v14;
    uint64_t v6 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1001363C4(uint64_t a1)
{
  uint64_t v2 = sub_10013385C(&qword_10029A4E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_100136424(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_100136434()
{
  unint64_t result = qword_10029A348;
  if (!qword_10029A348)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10029A348);
  }
  return result;
}

void type metadata accessor for NACHapticState()
{
  if (!qword_10029A3D8)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_10029A3D8);
    }
  }
}

unint64_t sub_1001364D0()
{
  unint64_t result = qword_10029A3E0;
  if (!qword_10029A3E0)
  {
    type metadata accessor for NACHapticState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A3E0);
  }
  return result;
}

id sub_100136528()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for HeadphoneAudioNotificationModel()) init];
  static HeadphoneAudioNotificationModel.shared = (uint64_t)result;
  return result;
}

uint64_t *HeadphoneAudioNotificationModel.shared.unsafeMutableAddressor()
{
  if (qword_10029B4E0 != -1) {
    swift_once();
  }
  return &static HeadphoneAudioNotificationModel.shared;
}

id static HeadphoneAudioNotificationModel.shared.getter()
{
  if (qword_10029B4E0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static HeadphoneAudioNotificationModel.shared;

  return v0;
}

uint64_t property wrapper backing initializer of HeadphoneAudioNotificationModel.data()
{
  return Published.init(initialValue:)();
}

uint64_t sub_1001366A8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return static Published.subscript.setter();
}

Swift::Void __swiftcall HeadphoneAudioNotificationModel.setData(_:)(Swift::OpaquePointer a1)
{
  uint64_t v3 = sub_10013385C(&qword_10029A458);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for Date.FormatStyle.Symbol.Month();
  uint64_t v7 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  char v61 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for Date.FormatStyle();
  uint64_t v9 = *(void *)(v65 - 8);
  uint64_t v10 = __chkstk_darwin(v65);
  long long v60 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v64 = (char *)&v47 - v12;
  uint64_t v13 = sub_10013385C(&qword_10029A460);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Date();
  __chkstk_darwin(v16);
  char v70 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *((void *)a1._rawValue + 2);
  if (!v19)
  {
    char v46 = &_swiftEmptyArrayStorage;
    goto LABEL_29;
  }
  long long v59 = v6;
  uint64_t v56 = v4;
  uint64_t v57 = (int *)v3;
  long long v63 = v1;
  uint64_t v20 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  char v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  long long v68 = (void (**)(char *, char *, uint64_t))(v17 + 32);
  long long v55 = (void (**)(char *, uint64_t))(v7 + 8);
  char v58 = (void (**)(char *, uint64_t))(v9 + 8);
  long long v54 = (void (**)(uint64_t, char *, uint64_t))(v17 + 16);
  __n128 v67 = (void (**)(char *, uint64_t))(v17 + 8);
  swift_bridgeObjectRetain();
  uint64_t v22 = 0;
  long long v66 = &_swiftEmptyArrayStorage;
  uint64_t v69 = (char *)&type metadata for Any + 8;
  do
  {
    uint64_t v23 = *((void *)a1._rawValue + v22 + 4);
    uint64_t v24 = *(void *)(v23 + 16);
    swift_bridgeObjectRetain();
    if (!v24 || (unint64_t v25 = sub_100137788(1702125924, 0xE400000000000000), (v26 & 1) == 0))
    {
      (*v20)(v15, 1, 1, v16);
LABEL_4:
      swift_bridgeObjectRelease();
      sub_1001378A8((uint64_t)v15, &qword_10029A460);
      goto LABEL_5;
    }
    sub_10013784C(*(void *)(v23 + 56) + 32 * v25, (uint64_t)&v72);
    int v27 = swift_dynamicCast();
    (*v20)(v15, v27 ^ 1u, 1, v16);
    if ((*v21)(v15, 1, v16) == 1) {
      goto LABEL_4;
    }
    (*v68)(v70, v15, v16);
    if (*(void *)(v23 + 16)
      && (unint64_t v28 = sub_100137788(0x746E756F63, 0xE500000000000000), (v29 & 1) != 0)
      && (sub_10013784C(*(void *)(v23 + 56) + 32 * v28, (uint64_t)&v72), (swift_dynamicCast() & 1) != 0))
    {
      uint64_t v30 = v71;
      if (*(void *)(v23 + 16) && (unint64_t v31 = sub_100137788(1668506980, 0xE400000000000000), (v32 & 1) != 0))
      {
        sub_10013784C(*(void *)(v23 + 56) + 32 * v31, (uint64_t)&v72);
      }
      else
      {
        long long v72 = 0u;
        long long v73 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v73 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v52 = *((void *)&v71 + 1);
          uint64_t v53 = v71;
          uint64_t v33 = v60;
          static FormatStyle<>.dateTime.getter();
          uint64_t v51 = v30;
          long long v34 = v61;
          static Date.FormatStyle.Symbol.Month.wide.getter();
          Date.FormatStyle.month(_:)();
          (*v55)(v34, v62);
          long long v50 = *v58;
          v50(v33, v65);
          sub_100137904(&qword_10029A470, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
          uint64_t v35 = v64;
          Date.formatted<A>(_:)();
          v50(v35, v65);
          long long v71 = v72;
          swift_bridgeObjectRetain();
          v36._uint64_t countAndFlagsBits = 58;
          v36._object = (void *)0xE100000000000000;
          String.append(_:)(v36);
          swift_bridgeObjectRelease();
          uint64_t v49 = *((void *)&v71 + 1);
          long long v50 = (void (*)(char *, uint64_t))v71;
          uint64_t v48 = v57[12];
          uint64_t v37 = (uint64_t)v59;
          uint64_t v38 = &v59[v57[16]];
          long long v47 = &v59[v57[20]];
          (*v54)((uint64_t)v59, v70, v16);
          *(void *)(v37 + v48) = v51;
          uint64_t v39 = v49;
          *(void *)uint64_t v38 = v50;
          *((void *)v38 + 1) = v39;
          long long v40 = v47;
          uint64_t v41 = v52;
          *(void *)long long v47 = v53;
          *((void *)v40 + 1) = v41;
          if (swift_isUniquelyReferenced_nonNull_native()) {
            uint64_t v42 = v66;
          }
          else {
            uint64_t v42 = (void *)sub_10013794C(0, v66[2] + 1, 1, v66);
          }
          unint64_t v44 = v42[2];
          unint64_t v43 = v42[3];
          if (v44 >= v43 >> 1) {
            uint64_t v42 = (void *)sub_10013794C(v43 > 1, v44 + 1, 1, v42);
          }
          _OWORD v42[2] = v44 + 1;
          unint64_t v45 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
          long long v66 = v42;
          sub_100137B28((uint64_t)v59, (uint64_t)v42 + v45 + *(void *)(v56 + 72) * v44);
        }
      }
      else
      {
        sub_1001378A8((uint64_t)&v72, &qword_10029A4E0);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    (*v67)(v70, v16);
LABEL_5:
    ++v22;
  }
  while (v19 != v22);
  swift_bridgeObjectRelease();
  id v1 = v63;
  char v46 = v66;
LABEL_29:
  (*(void (**)(void *))((swift_isaMask & *v1) + 0x68))(v46);
  type metadata accessor for HeadphoneAudioNotificationModel();
  sub_100137904(&qword_10029A468, (void (*)(uint64_t))type metadata accessor for HeadphoneAudioNotificationModel);
  ObservableObject<>.objectWillChange.getter();
  ObservableObjectPublisher.send()();
  swift_release();
}

uint64_t sub_100137068()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1001370DC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x60))();
  *a2 = result;
  return result;
}

uint64_t sub_100137138(uint64_t a1, void **a2)
{
  long long v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x68);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

void (*sub_10013719C(void *a1))(void *a1)
{
  long long v2 = malloc(0x38uLL);
  *a1 = v2;
  void v2[4] = swift_getKeyPath();
  void v2[5] = swift_getKeyPath();
  void v2[6] = static Published.subscript.modify();
  return sub_100137228;
}

void sub_100137228(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

uint64_t sub_100137290()
{
  return swift_endAccess();
}

uint64_t sub_1001372F4(uint64_t a1)
{
  uint64_t v2 = sub_10013385C(&qword_10029A480);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  swift_beginAccess();
  sub_10013385C(&qword_10029A478);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_100137420(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_10013385C(&qword_10029A480);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC6Bridge31HeadphoneAudioNotificationModel__data;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  uint8_t v3[16] = sub_10013385C(&qword_10029A478);
  Published.projectedValue.getter();
  swift_endAccess();
  return sub_100137530;
}

void sub_100137530(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  uint64_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    Published.projectedValue.setter();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    Published.projectedValue.setter();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);

  free(v3);
}

id HeadphoneAudioNotificationModel.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeadphoneAudioNotificationModel();
  return [super dealloc];
}

uint64_t sub_100137748@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for HeadphoneAudioNotificationModel();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

unint64_t sub_100137788(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_100137CDC(a1, a2, v4);
}

uint64_t type metadata accessor for HeadphoneAudioNotificationModel()
{
  uint64_t result = qword_10029B580;
  if (!qword_10029B580) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10013784C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1001378A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10013385C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100137904(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

size_t sub_10013794C(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10013385C((uint64_t *)&unk_10029A4C0);
  uint64_t v10 = *(void *)(sub_10013385C(&qword_10029A458) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(sub_10013385C(&qword_10029A458) - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

uint64_t sub_100137B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10013385C(&qword_10029A458);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_100137B90()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_100137B9C()
{
  return type metadata accessor for HeadphoneAudioNotificationModel();
}

void sub_100137BA4()
{
  sub_100137C34();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100137C34()
{
  if (!qword_10029A4B0)
  {
    sub_100137C90(&qword_10029A450);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10029A4B0);
    }
  }
}

uint64_t sub_100137C90(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_100137CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

void sub_100137DC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10013385C(&qword_10029A4D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10013385C(&qword_10029A4D8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (objc_class *)type metadata accessor for ToneViewController();
  v60.receiver = v0;
  v60.super_class = v13;
  [super viewDidLoad];
  id v14 = [v0 specifier];
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v15 = v14;
  uint64_t v56 = v6;
  uint64_t v57 = v10;
  id v16 = [v14 name];

  [v1 setTitle:v16];
  id v17 = [v1 specifier];
  if (!v17)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v18 = v17;
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [v18 propertyForKey:v19];

  if (v20)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v58, 0, sizeof(v58));
  }
  sub_100135CAC((uint64_t)v58, (uint64_t)v59);
  uint64_t v55 = v9;
  if (v59[3])
  {
    if (swift_dynamicCast())
    {
      NSString v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
  }
  else
  {
    sub_1001378A8((uint64_t)v59, &qword_10029A4E0);
  }
  NSString v21 = 0;
LABEL_11:
  uint64_t v22 = TLAlertTypeFromString();

  id v23 = [objc_allocWithZone((Class)TKTonePickerViewController) initWithAlertType:v22 tableViewStyle:2];
  [v23 setTargetDevice:1];
  [v23 setShowsToneStore:0];
  [v23 setShowsNone:v22 != 1];
  uint64_t v24 = self;
  id v25 = [v24 sharedToneManager];
  if (!v25)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char v26 = v25;
  id v27 = [v25 defaultWatchToneIdentifierForAlertType:v22];

  [v23 setDefaultToneIdentifier:v27];
  id v28 = [self defaultCenter];
  NSNotificationCenter.publisher(for:object:)();

  sub_10013882C();
  v59[0] = (id)static OS_dispatch_queue.main.getter();
  uint64_t v29 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v4, 1, 1, v29);
  sub_10013886C(&qword_10029A4F0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  sub_10013886C(&qword_10029A4F8, (void (*)(uint64_t))sub_10013882C);
  Publisher.receive<A>(on:options:)();
  sub_1001378A8((uint64_t)v4, &qword_10029A4D0);

  (*(void (**)(char *, uint64_t))(v56 + 8))(v8, v5);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v23;
  *(void *)(v30 + 24) = v22;
  sub_100138990(&qword_10029A500, &qword_10029A4D8);
  id v31 = v23;
  uint64_t v32 = v55;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v12, v32);
  swift_beginAccess();
  sub_10013385C(&qword_10029A510);
  sub_100138990(&qword_10029A518, &qword_10029A510);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  id v33 = [v24 sharedToneManager];
  if (!v33)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  long long v34 = v33;
  id v35 = [v33 currentWatchToneIdentifierForAlertType:v22];

  [v31 setSelectedToneIdentifier:v35];
  [v31 setDelegate:v1];
  [v1 addChildViewController:v31];
  id v36 = [v31 view];
  if (!v36)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v37 = v36;
  [v36 setAutoresizingMask:18];

  id v38 = [v31 view];
  if (!v38)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v39 = v38;
  id v40 = [v1 view];
  if (!v40)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v41 = v40;
  [v40 bounds];
  double v43 = v42;
  double v45 = v44;
  double v47 = v46;
  double v49 = v48;

  [v39 setFrame:v43, v45, v47, v49];
  id v50 = [v1 view];
  if (!v50)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v51 = v50;
  id v52 = [v31 view];
  if (v52)
  {
    uint64_t v53 = v52;
    [v51 addSubview:v52];

    [v31 didMoveToParentViewController:v1];
    return;
  }
LABEL_27:
  __break(1u);
}

id sub_1001387C4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ToneViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for ToneViewController()
{
  return self;
}

unint64_t sub_10013882C()
{
  unint64_t result = qword_10029A4E8;
  if (!qword_10029A4E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10029A4E8);
  }
  return result;
}

uint64_t sub_10013886C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001388B4()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001388EC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  id v3 = [self sharedToneManager];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 currentWatchToneIdentifierForAlertType:v2];

    [v1 setSelectedToneIdentifier:v5];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100138990(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100137C90(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1001389D4(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = [self sharedToneManager];
  if (!v5) {
    goto LABEL_9;
  }
  uint64_t v6 = v5;
  if (!a3)
  {
    id v7 = 0;
    if (a1) {
      goto LABEL_4;
    }
    goto LABEL_8;
  }
  id v7 = String._bridgeToObjectiveC()();
  if (!a1)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
LABEL_4:
  [v6 setCurrentWatchToneIdentifier:v7 forAlertType:[a1 alertType]];
}

void type metadata accessor for TLAlertType()
{
  if (!qword_10029A5A8)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_10029A5A8);
    }
  }
}

unint64_t sub_100138AF4()
{
  unint64_t result = qword_10029A5B0;
  if (!qword_10029A5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A5B0);
  }
  return result;
}

id sub_100138C68(unint64_t *a1)
{
  id result = [v1 buddyControllers];
  if (result)
  {
    uint64_t v4 = result;
    id v5 = [result lastObject];

    if (v5)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v9, 0, sizeof(v9));
    }
    sub_10013EEB0((uint64_t)v9, (uint64_t)v10, &qword_10029A4E0);
    if (v11)
    {
      sub_100141844(0, a1);
      if (swift_dynamicCast())
      {
        uint64_t v6 = v8;
LABEL_10:
        BOOL v7 = v6 != 0;

        return (id)v7;
      }
    }
    else
    {
      sub_1001378A8((uint64_t)v10, &qword_10029A4E0);
    }
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

id sub_100138D7C()
{
  id result = [v0 areLiveActivitiesAllowed];
  if (result)
  {
    sub_10014DE08();
    id v2 = [self defaultCenter];
    [v2 addObserver:v0 selector:"updateActivityAndRegenerateImages" name:PBBridgeMobileAssetsChangedNotification object:0];

    if (qword_10029B690 != -1) {
      swift_once();
    }
    swift_retain();
    sub_10013A1F0();
    return (id)swift_release();
  }
  return result;
}

void sub_100138EAC(id a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  char v64 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v57 - v8;
  if ([v2 areLiveActivitiesAllowed])
  {
    id v10 = [v2 lastLiveActivityProvider];
    if (!v10 || (id v11 = v10, swift_unknownObjectRelease(), v11 != a1))
    {
      uint64_t v12 = LiveActivitySetupLogger.unsafeMutableAddressor();
      uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      uint64_t v62 = v12;
      long long v63 = (uint8_t *)(v5 + 16);
      char v61 = v13;
      ((void (*)(char *))v13)(v9);
      swift_unknownObjectRetain_n();
      id v14 = v2;
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = swift_slowAlloc();
        uint64_t v59 = v5;
        uint64_t v18 = v17;
        id v58 = (id)swift_slowAlloc();
        *(void *)&v69[0] = v58;
        *(_DWORD *)uint64_t v18 = 136315650;
        uint64_t v60 = v4;
        v66[0] = sub_10013E7DC(0xD00000000000001DLL, 0x8000000100223B40, (uint64_t *)v69);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v18 + 12) = 2080;
        v66[0] = a1;
        swift_unknownObjectRetain();
        uint64_t v19 = String.init<A>(describing:)();
        v66[0] = sub_10013E7DC(v19, v20, (uint64_t *)v69);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v18 + 22) = 2080;
        v66[0] = [v14 lastLiveActivityProvider];
        sub_10013385C(&qword_10029A5E0);
        uint64_t v21 = String.init<A>(describing:)();
        v66[0] = sub_10013E7DC(v21, v22, (uint64_t *)v69);
        uint64_t v4 = v60;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s (provider): %s, lastLiveActivityProvider: %s", (uint8_t *)v18, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v5 = v59;
        swift_slowDealloc();
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      id v23 = *(void (**)(char *, uint64_t))(v5 + 8);
      v23(v9, v4);
      if (qword_10029B690 != -1) {
        swift_once();
      }
      if (!*(void *)(qword_10029B698 + 16))
      {
        self;
        if (swift_dynamicCastObjCClass()) {
          [v14 startLiveActivity];
        }
      }
      if (*(void *)(qword_10029B698 + 16))
      {
        uint64_t v24 = v4;
        [v14 setLastLiveActivityProvider:a1];
        id v25 = self;
        id v26 = [v25 sharedApplication];
        id v27 = [v26 applicationState];

        if (!v27)
        {
          id v28 = [v14 activePairingDevice];

          if (v28) {
            sub_100151390();
          }
        }
        id v65 = a1;
        swift_unknownObjectRetain();
        sub_10013385C(&qword_10029A5D0);
        if (swift_dynamicCast())
        {
          sub_10013EE34(v69, (uint64_t)v66);
          uint64_t v29 = v14;
          uint64_t v30 = v67;
          uint64_t v31 = v68;
          sub_10013EE4C(v66, v67);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v31 + 8))(v69, v30, v31);
          if ([v29 areLiveActivitiesAllowed])
          {
            swift_retain();
            unsigned __int8 v32 = sub_100138C68(&qword_10029A5C8);
            sub_10013B09C(v69, v32 & 1);
            swift_release();
            id v33 = [v25 sharedApplication];
            id v34 = [v33 applicationState];

            if (v34 != (id)2) {
              [v29 endLiveActivityIfNeeded];
            }
          }
          sub_100134E24((uint64_t)v69);
          sub_1001417F4((uint64_t)v66);
        }
        else
        {
          uint64_t v70 = 0;
          memset(v69, 0, sizeof(v69));
          sub_1001378A8((uint64_t)v69, &qword_10029A5D8);
          if (qword_10029B6A0 != -1) {
            swift_once();
          }
          uint64_t v35 = *(void *)(qword_10029B6A8 + 16);
          if (v35)
          {
            id v36 = (void *)(qword_10029B6A8 + 32);
            uint64_t ObjectType = swift_getObjectType();
            while (*v36 != ObjectType)
            {
              ++v36;
              if (!--v35) {
                goto LABEL_27;
              }
            }
          }
          else
          {
LABEL_27:
            id v58 = v14;
            id v38 = v64;
            v61(v64, v62, v24);
            swift_unknownObjectRetain_n();
            uint64_t v39 = Logger.logObject.getter();
            os_log_type_t v40 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v39, v40))
            {
              uint64_t v41 = (uint8_t *)swift_slowAlloc();
              *(void *)&v69[0] = swift_slowAlloc();
              uint64_t v60 = v24;
              *(_DWORD *)uint64_t v41 = 136315138;
              long long v63 = v41 + 4;
              v66[0] = a1;
              swift_unknownObjectRetain();
              uint64_t v42 = String.init<A>(describing:)();
              uint64_t v59 = v5;
              v66[0] = sub_10013E7DC(v42, v43, (uint64_t *)v69);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_unknownObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v39, v40, "%s does not provide activity updates but a generic update will be done", v41, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              uint64_t v44 = v60;
              double v45 = v64;
            }
            else
            {

              swift_unknownObjectRelease_n();
              double v45 = v38;
              uint64_t v44 = v24;
            }
            v23(v45, v44);
            double v46 = self;
            id v47 = [v46 mainBundle];
            v71._object = (void *)0xE000000000000000;
            v48._object = (void *)0x80000001002237B0;
            v48._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
            v49.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
            v49.value._object = (void *)0xEB00000000656C62;
            v50._uint64_t countAndFlagsBits = 0;
            v50._object = (void *)0xE000000000000000;
            v71._uint64_t countAndFlagsBits = 0;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v48, v49, (NSBundle)v47, v50, v71);

            NSString v51 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v52 = [v46 mainBundle];
            v53._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
            v72._object = (void *)0xE000000000000000;
            v53._object = (void *)0x80000001002237D0;
            v54.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
            v54.value._object = (void *)0xEB00000000656C62;
            v55._uint64_t countAndFlagsBits = 0;
            v55._object = (void *)0xE000000000000000;
            v72._uint64_t countAndFlagsBits = 0;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v53, v54, (NSBundle)v52, v55, v72);

            NSString v56 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v58 updateLiveActivityWithTitle:v51 subtitle:v56];
          }
        }
      }
    }
  }
}

void sub_1001398A4(const void *a1)
{
  id v2 = v1;
  if ([v1 areLiveActivitiesAllowed])
  {
    if (qword_10029B690 != -1) {
      swift_once();
    }
    swift_retain();
    unsigned __int8 v4 = sub_100138C68(&qword_10029A5C8);
    sub_10013B09C(a1, v4 & 1);
    swift_release();
    id v5 = [self sharedApplication];
    id v6 = [v5 applicationState];

    if (v6 != (id)2)
    {
      [v2 endLiveActivityIfNeeded];
    }
  }
}

uint64_t sub_1001399C0(uint64_t a1, void *a2)
{
  id v4 = [self mainBundle];
  v10._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = a1;
  v5._object = a2;
  v6.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v6.value._object = (void *)0xEB00000000656C62;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v10._uint64_t countAndFlagsBits = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v10)._countAndFlagsBits;

  return countAndFlagsBits;
}

id sub_100139A6C()
{
  uint64_t v1 = v0;
  id result = [v0 areLiveActivitiesAllowed];
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LiveActivityText.init(title:subtitle:)();
    LiveActivityTextMap.init(dynamicIslandExpanded:lockScreen:)();
    sub_100150D2C((uint64_t)v6);
    uint64_t v10 = 0;
    long long v8 = 0u;
    long long v9 = 0u;
    char v11 = 0x80;
    LiveActivitySetupState.init(textMap:imageMap:metadata:shouldSuppressAlert:)();
    if ([v0 areLiveActivitiesAllowed])
    {
      if (qword_10029B690 != -1) {
        swift_once();
      }
      swift_retain();
      unsigned __int8 v3 = sub_100138C68(&qword_10029A5C8);
      sub_10013B09C(v7, v3 & 1);
      swift_release();
      id v4 = [self sharedApplication];
      id v5 = [v4 applicationState];

      if (v5 != (id)2) {
        [v1 endLiveActivityIfNeeded];
      }
    }
    return (id)sub_100134E24((uint64_t)v7);
  }
  return result;
}

uint64_t sub_100139CA8(uint64_t a1)
{
  uint64_t v2 = v1;
  long long v8 = &type metadata for FeatureFlags;
  unint64_t v9 = sub_100138AF4();
  v7[0] = 0;
  char v4 = isFeatureEnabled(_:)();
  uint64_t result = sub_1001417F4((uint64_t)v7);
  if (v4)
  {
    if (qword_10029B690 != -1) {
      swift_once();
    }
    swift_retain();
    sub_10013DB94(a1);
    swift_release();
    id v6 = [self defaultCenter];
    [v6 removeObserver:v2];

    return sub_10014DE08();
  }
  return result;
}

uint64_t sub_100139E64(uint64_t a1)
{
  sub_10013784C(a1, (uint64_t)v3);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    memcpy(__dst, v2, 0x1AAuLL);
    if (qword_10029B690 != -1) {
      swift_once();
    }
    if (!*(void *)(qword_10029B698 + 16))
    {
      swift_retain();
      sub_10013A1F0();
      swift_release();
    }
    swift_retain();
    sub_10013B09C(__dst, 0);
    swift_release();
    return sub_100134E24((uint64_t)__dst);
  }
  return result;
}

uint64_t sub_100139F4C()
{
  uint64_t v1 = sub_100151384();
  swift_beginAccess();
  char *v1 = 0;
  uint64_t result = (uint64_t)[v0 buddyControllers];
  if (result)
  {
    unsigned __int8 v3 = (void *)result;
    id v4 = [(id)result lastObject];

    if (v4)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v6, 0, sizeof(v6));
    }
    sub_10013EEB0((uint64_t)v6, (uint64_t)v7, &qword_10029A4E0);
    if (v8)
    {
      sub_10013385C(&qword_10029A5E8);
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        [v0 updateLiveActivityWithBuddyController:v5];
        return swift_unknownObjectRelease();
      }
    }
    else
    {
      return sub_1001378A8((uint64_t)v7, &qword_10029A4E0);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10013A0C0()
{
  type metadata accessor for LiveActivity(0);
  uint64_t v0 = (void *)swift_allocObject();
  type metadata accessor for LiveActivityProcessAssertion();
  v0[2] = 0;
  v0[3] = 0;
  sub_1001465D4();
  v0[4] = v1;
  uint64_t v2 = (char *)v0 + OBJC_IVAR____TtC6BridgeP33_9C0BFB6E6F5347CD940ADB033E1E86B112LiveActivity_lastUpdateInfo;
  sub_10013EF14(v5);
  static Date.distantPast.getter();
  uint64_t updated = type metadata accessor for LiveActivityUpdateInfo(0);
  uint64_t result = sub_10013EEB0((uint64_t)v5, (uint64_t)&v2[*(int *)(updated + 20)], &qword_10029A5F0);
  v2[*(int *)(updated + 24)] = 0;
  qword_10029B698 = (uint64_t)v0;
  return result;
}

uint64_t sub_10013A16C()
{
  sub_10013385C(&qword_10029A830);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1001AB800;
  *(void *)(v0 + 32) = sub_100141844(0, &qword_10029A838);
  uint64_t result = sub_100141844(0, &qword_10029A840);
  *(void *)(v0 + 40) = result;
  qword_10029B6A8 = v0;
  return result;
}

uint64_t sub_10013A1F0()
{
  uint64_t v1 = v0;
  type metadata accessor for Date();
  __chkstk_darwin();
  uint64_t v2 = type metadata accessor for LiveActivitySetupAttributes();
  __chkstk_darwin();
  id v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20[3] = &type metadata for FeatureFlags;
  void v20[4] = sub_100138AF4();
  LOBYTE(v20[0]) = 0;
  char v5 = isFeatureEnabled(_:)();
  uint64_t result = sub_1001417F4((uint64_t)v20);
  if ((v5 & 1) != 0 && !*(void *)(v1 + 16))
  {
    uint64_t v7 = *(void *)LiveActivityService.shared.unsafeMutableAddressor();
    swift_retain();
    Date.init()();
    LiveActivitySetupAttributes.init(startTime:)();
    id v8 = [self mainBundle];
    v36._object = (void *)0xE000000000000000;
    v9._object = (void *)0x80000001002237B0;
    v9._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    v10.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v10.value._object = (void *)0xEB00000000656C62;
    v11._uint64_t countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v36._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v36);

    LiveActivityText.init(title:subtitle:)();
    LiveActivityTextMap.init(dynamicIslandExpanded:lockScreen:)();
    long long v26 = 0u;
    long long v25 = 0u;
    uint64_t v27 = 255;
    long long v28 = 0u;
    long long v29 = 0u;
    char v30 = 0;
    uint64_t v12 = LiveActivityImageSource.systemAppleWatchSFSymbol.unsafeMutableAddressor();
    sub_100135674(v12, (uint64_t)v35);
    long long v32 = 0u;
    long long v33 = 0u;
    char v34 = -1;
    sub_1001356D0((uint64_t)v35);
    LiveActivityImages.init(leadingImageSource:trailingImageSource:)();
    sub_100135674(v12, (uint64_t)v31);
    sub_1001356D0((uint64_t)v31);
    LiveActivityImages.init(leadingImageSource:trailingImageSource:)();
    LiveActivityImageMap.init(dynamicIslandCompact:dynamicIslandMinimal:dynamicIslandExpanded:lockScreen:)();
    uint64_t v23 = 0;
    long long v22 = 0u;
    long long v21 = 0u;
    char v24 = 0x80;
    LiveActivitySetupState.init(textMap:imageMap:metadata:shouldSuppressAlert:)();
    memcpy(v19, v20, 0x1AAuLL);
    uint64_t v13 = *(uint64_t (**)(unsigned char *, unsigned char *, uint64_t, uint64_t))(*(void *)v7 + 80);
    uint64_t v14 = sub_100141880(&qword_10029A848, (void (*)(uint64_t))&type metadata accessor for LiveActivitySetupAttributes);
    uint64_t v15 = v13(v4, v19, v2, v14);
    swift_release();
    sub_100134E24((uint64_t)v20);
    sub_1001418C8((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for LiveActivitySetupAttributes);
    *(void *)(v1 + 16) = v15;
    swift_retain();
    swift_release();
    BOOL v16 = *(void *)(v1 + 16) != 0;
    uint64_t v17 = *(void (**)(BOOL))(**(void **)(v1 + 32) + 128);
    swift_retain();
    v17(v16);
    swift_release();
    uint64_t result = swift_release();
    if (*(void *)(v1 + 16))
    {
      uint64_t v18 = sub_100151384();
      uint64_t result = swift_beginAccess();
      char *v18 = 0;
    }
  }
  return result;
}

uint64_t sub_10013A5D4()
{
  uint64_t v73 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v3 = &v67[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for ActivityState();
  char v5 = *(void **)(v4 - 8);
  __chkstk_darwin(v4);
  long long v74 = &v67[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_10013385C(&qword_10029A7D8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v80 = &v67[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  Swift::String v11 = &v67[-v10];
  uint64_t v12 = sub_10013385C(&qword_10029A7E0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v70 = &v67[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = __chkstk_darwin(v13);
  long long v78 = &v67[-v16];
  uint64_t v17 = __chkstk_darwin(v15);
  char v79 = &v67[-v18];
  uint64_t v19 = __chkstk_darwin(v17);
  v81 = &v67[-v20];
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = &v67[-v22];
  __chkstk_darwin(v21);
  long long v25 = &v67[-v24];
  uint64_t v83 = v0;
  uint64_t v26 = *(void *)(v0 + 16);
  Swift::String v71 = v3;
  uint64_t v72 = v1;
  if (v26)
  {
    swift_retain();
    dispatch thunk of Activity.activityState.getter();
    swift_release();
    uint64_t v27 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v5[7];
    v27((uint64_t)v25, 0, 1, v4);
  }
  else
  {
    uint64_t v27 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v5[7];
    v27((uint64_t)&v67[-v24], 1, 1, v4);
  }
  long long v75 = (void (*)(unsigned char *, void, uint64_t))v5[13];
  v75(v23, enum case for ActivityState.ended(_:), v4);
  char v76 = v27;
  v27((uint64_t)v23, 0, 1, v4);
  uint64_t v77 = v7;
  uint64_t v28 = (uint64_t)&v11[*(int *)(v7 + 48)];
  sub_1001410E8((uint64_t)v25, (uint64_t)v11, &qword_10029A7E0);
  sub_1001410E8((uint64_t)v23, v28, &qword_10029A7E0);
  uint64_t v82 = v5;
  long long v29 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v5[6];
  if (v29((uint64_t)v11, 1, v4) == 1)
  {
    sub_1001378A8((uint64_t)v23, &qword_10029A7E0);
    sub_1001378A8((uint64_t)v25, &qword_10029A7E0);
    if (v29(v28, 1, v4) == 1) {
      goto LABEL_17;
    }
    goto LABEL_9;
  }
  char v30 = v81;
  sub_1001410E8((uint64_t)v11, (uint64_t)v81, &qword_10029A7E0);
  if (v29(v28, 1, v4) == 1)
  {
    sub_1001378A8((uint64_t)v23, &qword_10029A7E0);
    sub_1001378A8((uint64_t)v25, &qword_10029A7E0);
    ((void (*)(unsigned char *, uint64_t))v82[1])(v30, v4);
LABEL_9:
    sub_1001378A8((uint64_t)v11, &qword_10029A7D8);
    uint64_t v31 = v83;
    goto LABEL_10;
  }
  uint64_t v35 = (void (*)(unsigned char *, uint64_t, uint64_t))v82[4];
  uint64_t v69 = v29;
  Swift::String v36 = v74;
  v35(v74, v28, v4);
  sub_100141880(&qword_10029A7F0, (void (*)(uint64_t))&type metadata accessor for ActivityState);
  int v68 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v37 = (void (*)(unsigned char *, uint64_t))v82[1];
  id v38 = v36;
  long long v29 = v69;
  v37(v38, v4);
  sub_1001378A8((uint64_t)v23, &qword_10029A7E0);
  sub_1001378A8((uint64_t)v25, &qword_10029A7E0);
  v37(v81, v4);
  sub_1001378A8((uint64_t)v11, &qword_10029A7E0);
  uint64_t v31 = v83;
  if (v68) {
    goto LABEL_18;
  }
LABEL_10:
  long long v32 = v29;
  if (*(void *)(v31 + 16))
  {
    swift_retain();
    uint64_t v33 = (uint64_t)v79;
    dispatch thunk of Activity.activityState.getter();
    swift_release();
    uint64_t v34 = 0;
  }
  else
  {
    uint64_t v34 = 1;
    uint64_t v33 = (uint64_t)v79;
  }
  Swift::String v11 = v80;
  uint64_t v39 = (uint64_t)v78;
  os_log_type_t v40 = v76;
  v76(v33, v34, 1, v4);
  v75((unsigned char *)v39, enum case for ActivityState.dismissed(_:), v4);
  v40(v39, 0, 1, v4);
  uint64_t v41 = (uint64_t)&v11[*(int *)(v77 + 48)];
  sub_1001410E8(v33, (uint64_t)v11, &qword_10029A7E0);
  sub_1001410E8(v39, v41, &qword_10029A7E0);
  if (v32((uint64_t)v11, 1, v4) != 1)
  {
    id v58 = v70;
    sub_1001410E8((uint64_t)v11, (uint64_t)v70, &qword_10029A7E0);
    if (v32(v41, 1, v4) != 1)
    {
      uint64_t v62 = v82;
      uint64_t v63 = v39;
      char v64 = v74;
      ((void (*)(unsigned char *, uint64_t, uint64_t))v82[4])(v74, v41, v4);
      sub_100141880(&qword_10029A7F0, (void (*)(uint64_t))&type metadata accessor for ActivityState);
      char v65 = dispatch thunk of static Equatable.== infix(_:_:)();
      long long v66 = (void (*)(unsigned char *, uint64_t))v62[1];
      v66(v64, v4);
      sub_1001378A8(v63, &qword_10029A7E0);
      sub_1001378A8(v33, &qword_10029A7E0);
      v66(v58, v4);
      uint64_t result = sub_1001378A8((uint64_t)v11, &qword_10029A7E0);
      uint64_t v31 = v83;
      if ((v65 & 1) == 0) {
        return result;
      }
      goto LABEL_18;
    }
    sub_1001378A8(v39, &qword_10029A7E0);
    sub_1001378A8(v33, &qword_10029A7E0);
    ((void (*)(unsigned char *, uint64_t))v82[1])(v58, v4);
    return sub_1001378A8((uint64_t)v11, &qword_10029A7D8);
  }
  sub_1001378A8(v39, &qword_10029A7E0);
  sub_1001378A8(v33, &qword_10029A7E0);
  if (v32(v41, 1, v4) != 1) {
    return sub_1001378A8((uint64_t)v11, &qword_10029A7D8);
  }
LABEL_17:
  sub_1001378A8((uint64_t)v11, &qword_10029A7E0);
  uint64_t v31 = v83;
LABEL_18:
  if (*(void *)(v31 + 16))
  {
    swift_retain();
    uint64_t v42 = LiveActivitySetupLogger.unsafeMutableAddressor();
    unint64_t v43 = v71;
    uint64_t v44 = v72;
    uint64_t v45 = v73;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v72 + 16))(v71, v42, v73);
    swift_retain_n();
    double v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.default.getter();
    int v48 = v47;
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v49 = swift_slowAlloc();
      v81 = (unsigned char *)swift_slowAlloc();
      uint64_t v85 = v81;
      *(_DWORD *)uint64_t v49 = 136315394;
      LODWORD(v80) = v48;
      uint64_t v50 = Activity.id.getter();
      uint64_t v84 = sub_10013E7DC(v50, v51, (uint64_t *)&v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2080;
      char v79 = (unsigned char *)(v49 + 14);
      id v52 = v74;
      dispatch thunk of Activity.activityState.getter();
      sub_100141880(&qword_10029A7E8, (void (*)(uint64_t))&type metadata accessor for ActivityState);
      uint64_t v53 = Encodable.stringValue.getter();
      uint64_t v54 = v44;
      unint64_t v56 = v55;
      ((void (*)(unsigned char *, uint64_t))v82[1])(v52, v4);
      uint64_t v84 = sub_10013E7DC(v53, v56, (uint64_t *)&v85);
      uint64_t v57 = v83;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v80, "Starting a new activity is required. Previous activity: %s,  %s", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v54 + 8))(v43, v73);
      uint64_t v31 = v57;
    }
    else
    {

      swift_release_n();
      (*(void (**)(unsigned char *, uint64_t))(v44 + 8))(v43, v45);
    }
    *(void *)(v31 + 16) = 0;
    swift_release();
    BOOL v60 = *(void *)(v31 + 16) != 0;
    char v61 = *(void (**)(BOOL))(**(void **)(v31 + 32) + 128);
    swift_retain();
    v61(v60);
    swift_release();
    swift_release();
  }
  return sub_10013A1F0();
}

uint64_t sub_10013B09C(const void *a1, int a2)
{
  uint64_t v3 = v2;
  LODWORD(v43) = a2;
  sub_10013385C(&qword_10029A7F8);
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v42 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v39 - v11;
  v44[3] = &type metadata for FeatureFlags;
  unint64_t v13 = sub_100138AF4();
  void v44[4] = v13;
  LOBYTE(v44[0]) = 0;
  char v14 = isFeatureEnabled(_:)();
  sub_1001417F4((uint64_t)v44);
  if ((v14 & 1) != 0 && *(void *)(v3 + 16))
  {
    uint64_t v41 = v3;
    uint64_t v15 = LiveActivitySetupLogger.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, v15, v6);
    sub_100140D88((uint64_t)a1);
    sub_100140D88((uint64_t)a1);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v45 = v40;
      *(_DWORD *)uint64_t v18 = 136315138;
      v39[1] = v18 + 4;
      memcpy(v44, a1, 0x1AAuLL);
      sub_100141458();
      uint64_t v19 = Encodable.stringValue.getter();
      v44[0] = sub_10013E7DC(v19, v20, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100134E24((uint64_t)a1);
      sub_100134E24((uint64_t)a1);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Queueing activity state update: %s", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100134E24((uint64_t)a1);
      sub_100134E24((uint64_t)a1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    char v29 = v43;
    uint64_t v30 = (uint64_t)v42;
    static TaskPriority.userInitiated.getter();
    uint64_t v31 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
    uint64_t v32 = v41;
    uint64_t v33 = *(void *)(v41 + 24);
    uint64_t v34 = swift_allocObject();
    swift_weakInit();
    type metadata accessor for MainActor();
    sub_100140D88((uint64_t)a1);
    swift_retain();
    swift_retain();
    uint64_t v35 = static MainActor.shared.getter();
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = v35;
    *(void *)(v36 + 24) = &protocol witness table for MainActor;
    *(void *)(v36 + 32) = v33;
    *(void *)(v36 + 40) = v34;
    memcpy((void *)(v36 + 48), a1, 0x1AAuLL);
    *(unsigned char *)(v36 + 474) = v29 & 1;
    swift_release();
    uint64_t v37 = sub_10013DA0C(v30, (uint64_t)&unk_10029A808, v36);
    uint64_t v38 = *(void *)(v32 + 24);
    *(void *)(v32 + 24) = v37;
    swift_retain();
    if (v38)
    {
      sub_10013385C(&qword_10029A810);
      Task.cancel()();
      swift_release();
    }
    return swift_release();
  }
  else
  {
    uint64_t v21 = LiveActivitySetupLogger.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v21, v6);
    swift_retain();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (_DWORD *)swift_slowAlloc();
      uint64_t v43 = v6;
      uint64_t v25 = v3;
      uint64_t v26 = v24;
      *uint64_t v24 = 67109376;
      v44[3] = &type metadata for FeatureFlags;
      void v44[4] = v13;
      LOBYTE(v44[0]) = 0;
      char v27 = isFeatureEnabled(_:)();
      sub_1001417F4((uint64_t)v44);
      LODWORD(v44[0]) = v27 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *((_WORD *)v26 + 4) = 1024;
      LODWORD(v44[0]) = *(void *)(v25 + 16) == 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v6 = v43;
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Attempted to update activity but isEnabled: %{BOOL}d,  activityIsNil: %{BOOL}d", (uint8_t *)v26, 0xEu);
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

uint64_t sub_10013B650(int a1, int a2, int a3, uint64_t a4, uint64_t a5, void *__src, char a7)
{
  *(unsigned char *)(v7 + 442) = a7;
  *(void *)(v7 + 3192) = __src;
  *(void *)(v7 + 3184) = a5;
  *(void *)(v7 + 3176) = a4;
  memcpy((void *)(v7 + 16), __src, 0x1AAuLL);
  uint64_t v8 = type metadata accessor for Date();
  *(void *)(v7 + 3200) = v8;
  *(void *)(v7 + 3208) = *(void *)(v8 - 8);
  *(void *)(v7 + 3216) = swift_task_alloc();
  sub_10013385C(&qword_10029A820);
  *(void *)(v7 + 3224) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Logger();
  *(void *)(v7 + 3232) = v9;
  *(void *)(v7 + 3240) = *(void *)(v9 - 8);
  *(void *)(v7 + 3248) = swift_task_alloc();
  *(void *)(v7 + 3256) = swift_task_alloc();
  *(void *)(v7 + 3264) = swift_task_alloc();
  *(void *)(v7 + 3272) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v7 + 3280) = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v7 + 3288) = v11;
  *(void *)(v7 + 3296) = v10;
  return _swift_task_switch(sub_10013B818, v11, v10);
}

uint64_t sub_10013B818()
{
  uint64_t v73 = v0;
  uint64_t v1 = *(void *)(v0 + 3176);
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 3304) = v2;
    uint64_t v3 = sub_10013385C(&qword_10029A810);
    *uint64_t v2 = v0;
    v2[1] = sub_10013C1BC;
    return Task.value.getter(v3, v1, (char *)&type metadata for () + 8, v3, &protocol self-conformance witness table for Error);
  }
  char v4 = static Task<>.isCancelled.getter();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 3312) = Strong;
  if (!Strong) {
    goto LABEL_12;
  }
  uint64_t v6 = Strong;
  if ((v4 & 1) != 0 || !*(void *)(Strong + 16))
  {
    swift_release();
LABEL_12:
    uint64_t v31 = *(void *)(v0 + 3248);
    uint64_t v32 = *(void *)(v0 + 3240);
    uint64_t v33 = *(void *)(v0 + 3232);
    uint64_t v34 = *(void *)(v0 + 3192);
    swift_release();
    uint64_t v35 = LiveActivitySetupLogger.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v31, v35, v33);
    sub_100140D88(v34);
    swift_retain();
    sub_100140D88(v34);
    swift_retain();
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 67109634;
      *(_DWORD *)(v0 + 876) = v4 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v38 + 8) = 1024;
      swift_beginAccess();
      uint64_t v39 = swift_weakLoadStrong();
      if (v39)
      {
        uint64_t v40 = *(void *)(v39 + 16);
        swift_release();
        swift_release();
        BOOL v41 = v40 == 0;
      }
      else
      {
        swift_release();
        BOOL v41 = 1;
      }
      uint64_t v69 = *(void *)(v0 + 3248);
      uint64_t v46 = *(void *)(v0 + 3240);
      uint64_t v47 = *(void *)(v0 + 3232);
      int v48 = *(const void **)(v0 + 3192);
      *(_DWORD *)(v0 + 444) = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      *(_WORD *)(v38 + 14) = 2080;
      memcpy((void *)(v0 + 2176), v48, 0x1AAuLL);
      sub_100141458();
      uint64_t v49 = Encodable.stringValue.getter();
      *(void *)(v0 + 3136) = sub_10013E7DC(v49, v50, &v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100134E24((uint64_t)v48);
      sub_100134E24((uint64_t)v48);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Activity state update CANCELED: isTaskCanceled: %{BOOL}d, isActivityNil: %{BOOL}d, state: %s", (uint8_t *)v38, 0x18u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v69, v47);
    }
    else
    {
      uint64_t v42 = *(void *)(v0 + 3248);
      uint64_t v43 = *(void *)(v0 + 3240);
      uint64_t v44 = *(void *)(v0 + 3232);
      uint64_t v45 = *(void *)(v0 + 3192);
      swift_release_n();
      sub_100134E24(v45);
      sub_100134E24(v45);

      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
    }
    goto LABEL_19;
  }
  sub_10013A5D4();
  uint64_t v7 = *(void *)(v6 + 16);
  *(void *)(v0 + 3320) = v7;
  if (v7)
  {
    uint64_t v68 = *(void *)(v0 + 3264);
    uint64_t v8 = *(void *)(v0 + 3240);
    uint64_t v70 = *(void *)(v0 + 3232);
    uint64_t v9 = *(void *)(v0 + 3224);
    uint64_t v10 = *(void *)(v0 + 3192);
    swift_retain();
    sub_10013DF2C(v10, v9);
    uint64_t v11 = type metadata accessor for AlertConfiguration();
    LOBYTE(v9) = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11) != 1;
    uint64_t v12 = OBJC_IVAR____TtC6BridgeP33_9C0BFB6E6F5347CD940ADB033E1E86B112LiveActivity_lastUpdateInfo;
    *(void *)(v0 + 3328) = OBJC_IVAR____TtC6BridgeP33_9C0BFB6E6F5347CD940ADB033E1E86B112LiveActivity_lastUpdateInfo;
    uint64_t v13 = v6 + v12;
    swift_beginAccess();
    uint64_t updated = type metadata accessor for LiveActivityUpdateInfo(0);
    *(void *)(v0 + 3336) = updated;
    *(unsigned char *)(v13 + *(int *)(updated + 24)) = v9;
    memcpy((void *)(v0 + 1744), (const void *)(v0 + 16), 0x1AAuLL);
    LiveActivityEndStatus.rawValue.getter(v0 + 1744);
    uint64_t v15 = v13 + *(int *)(updated + 20);
    sub_10013EEB0(v15, v0 + 2608, &qword_10029A5F0);
    sub_10013EEB0(v0 + 1744, v15, &qword_10029A5F0);
    sub_100140D88(v10);
    sub_1001414AC(v0 + 2608);
    uint64_t v16 = LiveActivitySetupLogger.unsafeMutableAddressor();
    *(void *)(v0 + 3344) = v16;
    os_log_type_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    *(void *)(v0 + 3352) = v17;
    *(void *)(v0 + 3360) = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v17(v68, v16, v70);
    swift_retain();
    sub_100140D88(v10);
    swift_retain();
    sub_100140D88(v10);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v21 = *(void *)(v0 + 3264);
    uint64_t v22 = *(void *)(v0 + 3240);
    uint64_t v23 = *(void *)(v0 + 3232);
    uint64_t v24 = *(const void **)(v0 + 3192);
    if (v20)
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136315394;
      uint64_t v26 = Activity.id.getter();
      *(void *)(v0 + 3168) = sub_10013E7DC(v26, v27, &v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v25 + 12) = 2080;
      memcpy((void *)(v0 + 448), v24, 0x1AAuLL);
      sub_100141458();
      uint64_t v28 = Encodable.stringValue.getter();
      *(void *)(v0 + 3152) = sub_10013E7DC(v28, v29, &v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100134E24((uint64_t)v24);
      sub_100134E24((uint64_t)v24);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Requesting activity: %s, state update with state: %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v30(v21, v23);
    }
    else
    {
      swift_release_n();
      sub_100134E24((uint64_t)v24);
      sub_100134E24((uint64_t)v24);

      uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v30(v21, v23);
    }
    *(void *)(v0 + 3368) = v30;
    uint64_t v62 = *(const void **)(v0 + 3192);
    uint64_t v63 = (uint64_t *)LiveActivityService.shared.unsafeMutableAddressor();
    uint64_t v64 = *v63;
    *(void *)(v0 + 3376) = *v63;
    memcpy((void *)(v0 + 1312), v62, 0x1AAuLL);
    Swift::String v71 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v64 + 96)
                                                            + **(int **)(*(void *)v64 + 96));
    swift_retain();
    char v65 = (void *)swift_task_alloc();
    *(void *)(v0 + 3384) = v65;
    *char v65 = v0;
    v65[1] = sub_10013CBD8;
    uint64_t v66 = *(void *)(v0 + 3224);
    return v71(v7, v0 + 1312, v66);
  }
  uint64_t v52 = *(void *)(v0 + 3272);
  uint64_t v53 = *(void *)(v0 + 3240);
  uint64_t v54 = *(void *)(v0 + 3232);
  swift_release();
  uint64_t v55 = LiveActivitySetupLogger.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v52, v55, v54);
  unint64_t v56 = Logger.logObject.getter();
  os_log_type_t v57 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v56, v57))
  {
    id v58 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v58 = 0;
    _os_log_impl((void *)&_mh_execute_header, v56, v57, "Received call to update live activity but there is no active live activity and we are unable to create one", v58, 2u);
    swift_slowDealloc();
  }
  uint64_t v59 = *(void *)(v0 + 3272);
  uint64_t v60 = *(void *)(v0 + 3240);
  uint64_t v61 = *(void *)(v0 + 3232);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v51 = *(uint64_t (**)(void))(v0 + 8);
  return v51();
}

uint64_t sub_10013C1BC()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v2 + 3296);
    uint64_t v4 = *(void *)(v2 + 3288);
    uint64_t v5 = sub_10013D11C;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 3296);
    uint64_t v4 = *(void *)(v2 + 3288);
    uint64_t v5 = sub_10013C2E8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10013C2E8()
{
  uint64_t v70 = v0;
  char v1 = static Task<>.isCancelled.getter();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 3312) = Strong;
  if (!Strong)
  {
LABEL_8:
    uint64_t v28 = *(void *)(v0 + 3248);
    uint64_t v29 = *(void *)(v0 + 3240);
    uint64_t v30 = *(void *)(v0 + 3232);
    uint64_t v31 = *(void *)(v0 + 3192);
    swift_release();
    uint64_t v32 = LiveActivitySetupLogger.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v28, v32, v30);
    sub_100140D88(v31);
    swift_retain();
    sub_100140D88(v31);
    swift_retain();
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 67109634;
      *(_DWORD *)(v0 + 876) = v1 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v35 + 8) = 1024;
      swift_beginAccess();
      uint64_t v36 = swift_weakLoadStrong();
      if (v36)
      {
        uint64_t v37 = *(void *)(v36 + 16);
        swift_release();
        swift_release();
        BOOL v38 = v37 == 0;
      }
      else
      {
        swift_release();
        BOOL v38 = 1;
      }
      uint64_t v66 = *(void *)(v0 + 3248);
      uint64_t v43 = *(void *)(v0 + 3240);
      uint64_t v44 = *(void *)(v0 + 3232);
      uint64_t v45 = *(const void **)(v0 + 3192);
      *(_DWORD *)(v0 + 444) = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      *(_WORD *)(v35 + 14) = 2080;
      memcpy((void *)(v0 + 2176), v45, 0x1AAuLL);
      sub_100141458();
      uint64_t v46 = Encodable.stringValue.getter();
      *(void *)(v0 + 3136) = sub_10013E7DC(v46, v47, &v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100134E24((uint64_t)v45);
      sub_100134E24((uint64_t)v45);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Activity state update CANCELED: isTaskCanceled: %{BOOL}d, isActivityNil: %{BOOL}d, state: %s", (uint8_t *)v35, 0x18u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v66, v44);
    }
    else
    {
      uint64_t v39 = *(void *)(v0 + 3248);
      uint64_t v40 = *(void *)(v0 + 3240);
      uint64_t v41 = *(void *)(v0 + 3232);
      uint64_t v42 = *(void *)(v0 + 3192);
      swift_release_n();
      sub_100134E24(v42);
      sub_100134E24(v42);

      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
    }
    goto LABEL_15;
  }
  uint64_t v3 = Strong;
  if ((v1 & 1) != 0 || !*(void *)(Strong + 16))
  {
    swift_release();
    goto LABEL_8;
  }
  sub_10013A5D4();
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)(v0 + 3320) = v4;
  if (v4)
  {
    uint64_t v65 = *(void *)(v0 + 3264);
    uint64_t v5 = *(void *)(v0 + 3240);
    uint64_t v67 = *(void *)(v0 + 3232);
    uint64_t v6 = *(void *)(v0 + 3224);
    uint64_t v7 = *(void *)(v0 + 3192);
    swift_retain();
    sub_10013DF2C(v7, v6);
    uint64_t v8 = type metadata accessor for AlertConfiguration();
    LOBYTE(v6) = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1;
    uint64_t v9 = OBJC_IVAR____TtC6BridgeP33_9C0BFB6E6F5347CD940ADB033E1E86B112LiveActivity_lastUpdateInfo;
    *(void *)(v0 + 3328) = OBJC_IVAR____TtC6BridgeP33_9C0BFB6E6F5347CD940ADB033E1E86B112LiveActivity_lastUpdateInfo;
    uint64_t v10 = v3 + v9;
    swift_beginAccess();
    uint64_t updated = type metadata accessor for LiveActivityUpdateInfo(0);
    *(void *)(v0 + 3336) = updated;
    *(unsigned char *)(v10 + *(int *)(updated + 24)) = v6;
    memcpy((void *)(v0 + 1744), (const void *)(v0 + 16), 0x1AAuLL);
    LiveActivityEndStatus.rawValue.getter(v0 + 1744);
    uint64_t v12 = v10 + *(int *)(updated + 20);
    sub_10013EEB0(v12, v0 + 2608, &qword_10029A5F0);
    sub_10013EEB0(v0 + 1744, v12, &qword_10029A5F0);
    sub_100140D88(v7);
    sub_1001414AC(v0 + 2608);
    uint64_t v13 = LiveActivitySetupLogger.unsafeMutableAddressor();
    *(void *)(v0 + 3344) = v13;
    char v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    *(void *)(v0 + 3352) = v14;
    *(void *)(v0 + 3360) = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v14(v65, v13, v67);
    swift_retain();
    sub_100140D88(v7);
    swift_retain();
    sub_100140D88(v7);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v18 = *(void *)(v0 + 3264);
    uint64_t v19 = *(void *)(v0 + 3240);
    uint64_t v20 = *(void *)(v0 + 3232);
    uint64_t v21 = *(const void **)(v0 + 3192);
    if (v17)
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v23 = Activity.id.getter();
      *(void *)(v0 + 3168) = sub_10013E7DC(v23, v24, &v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v22 + 12) = 2080;
      memcpy((void *)(v0 + 448), v21, 0x1AAuLL);
      sub_100141458();
      uint64_t v25 = Encodable.stringValue.getter();
      *(void *)(v0 + 3152) = sub_10013E7DC(v25, v26, &v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100134E24((uint64_t)v21);
      sub_100134E24((uint64_t)v21);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Requesting activity: %s, state update with state: %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v27(v18, v20);
    }
    else
    {
      swift_release_n();
      sub_100134E24((uint64_t)v21);
      sub_100134E24((uint64_t)v21);

      unint64_t v27 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v27(v18, v20);
    }
    *(void *)(v0 + 3368) = v27;
    uint64_t v60 = *(const void **)(v0 + 3192);
    uint64_t v61 = (uint64_t *)LiveActivityService.shared.unsafeMutableAddressor();
    uint64_t v62 = *v61;
    *(void *)(v0 + 3376) = *v61;
    memcpy((void *)(v0 + 1312), v60, 0x1AAuLL);
    uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v62 + 96)
                                                            + **(int **)(*(void *)v62 + 96));
    swift_retain();
    uint64_t v63 = (void *)swift_task_alloc();
    *(void *)(v0 + 3384) = v63;
    *uint64_t v63 = v0;
    v63[1] = sub_10013CBD8;
    uint64_t v64 = *(void *)(v0 + 3224);
    return v68(v4, v0 + 1312, v64);
  }
  uint64_t v50 = *(void *)(v0 + 3272);
  uint64_t v51 = *(void *)(v0 + 3240);
  uint64_t v52 = *(void *)(v0 + 3232);
  swift_release();
  uint64_t v53 = LiveActivitySetupLogger.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v50, v53, v52);
  uint64_t v54 = Logger.logObject.getter();
  os_log_type_t v55 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v54, v55))
  {
    unint64_t v56 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v56 = 0;
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "Received call to update live activity but there is no active live activity and we are unable to create one", v56, 2u);
    swift_slowDealloc();
  }
  uint64_t v57 = *(void *)(v0 + 3272);
  uint64_t v58 = *(void *)(v0 + 3240);
  uint64_t v59 = *(void *)(v0 + 3232);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v59);
LABEL_15:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v48 = *(uint64_t (**)(void))(v0 + 8);
  return v48();
}

uint64_t sub_10013CBD8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 3296);
  uint64_t v3 = *(void *)(v1 + 3288);
  return _swift_task_switch(sub_10013CD1C, v3, v2);
}

uint64_t sub_10013CD1C()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 3352);
  uint64_t v2 = *(void *)(v0 + 3344);
  uint64_t v3 = *(void *)(v0 + 3256);
  uint64_t v4 = *(void *)(v0 + 3232);
  uint64_t v5 = *(void *)(v0 + 3192);
  swift_release();
  v1(v3, v2, v4);
  swift_retain();
  sub_100140D88(v5);
  swift_retain();
  sub_100140D88(v5);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v28 = *(void *)(v0 + 3256);
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v0 + 3368);
    uint64_t v27 = *(void *)(v0 + 3232);
    uint64_t v8 = *(const void **)(v0 + 3192);
    uint64_t v9 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v10 = Activity.id.getter();
    *(void *)(v0 + 3144) = sub_10013E7DC(v10, v11, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2080;
    memcpy((void *)(v0 + 880), v8, 0x1AAuLL);
    sub_100141458();
    uint64_t v12 = Encodable.stringValue.getter();
    *(void *)(v0 + 3160) = sub_10013E7DC(v12, v13, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100134E24((uint64_t)v8);
    sub_100134E24((uint64_t)v8);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Updated state for activity: %s, state: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v29(v28, v27);
  }
  else
  {
    char v14 = *(void (**)(uint64_t, uint64_t))(v0 + 3368);
    uint64_t v15 = *(void *)(v0 + 3256);
    uint64_t v16 = *(void *)(v0 + 3232);
    uint64_t v17 = *(void *)(v0 + 3192);
    swift_release_n();
    sub_100134E24(v17);
    sub_100134E24(v17);

    v14(v15, v16);
  }
  uint64_t v18 = *(void *)(v0 + 3336);
  uint64_t v19 = *(void *)(v0 + 3312) + *(void *)(v0 + 3328);
  if (*(unsigned char *)(v19 + *(int *)(v18 + 24)) == 1)
  {
    uint64_t v20 = *(void *)(v0 + 3216);
    uint64_t v21 = *(void *)(v0 + 3208);
    uint64_t v22 = *(void *)(v0 + 3200);
    Date.init()();
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 40))(v19, v20, v22);
    *(unsigned char *)(v19 + *(int *)(v18 + 24)) = 0;
    swift_endAccess();
  }
  if (*(unsigned char *)(v0 + 442) == 1)
  {
    uint64_t v23 = *(void (**)(void))(**(void **)(*(void *)(v0 + 3312) + 32) + 128);
    swift_retain();
    v23(0);
    swift_release();
  }
  uint64_t v24 = *(void *)(v0 + 3224);
  swift_release();
  swift_release();
  sub_1001378A8(v24, &qword_10029A820);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_10013D11C()
{
  uint64_t v70 = v0;
  char v1 = static Task<>.isCancelled.getter();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 3312) = Strong;
  if (!Strong)
  {
LABEL_8:
    uint64_t v28 = *(void *)(v0 + 3248);
    uint64_t v29 = *(void *)(v0 + 3240);
    uint64_t v30 = *(void *)(v0 + 3232);
    uint64_t v31 = *(void *)(v0 + 3192);
    swift_release();
    uint64_t v32 = LiveActivitySetupLogger.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v28, v32, v30);
    sub_100140D88(v31);
    swift_retain();
    sub_100140D88(v31);
    swift_retain();
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 67109634;
      *(_DWORD *)(v0 + 876) = v1 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v35 + 8) = 1024;
      swift_beginAccess();
      uint64_t v36 = swift_weakLoadStrong();
      if (v36)
      {
        uint64_t v37 = *(void *)(v36 + 16);
        swift_release();
        swift_release();
        BOOL v38 = v37 == 0;
      }
      else
      {
        swift_release();
        BOOL v38 = 1;
      }
      uint64_t v66 = *(void *)(v0 + 3248);
      uint64_t v43 = *(void *)(v0 + 3240);
      uint64_t v44 = *(void *)(v0 + 3232);
      uint64_t v45 = *(const void **)(v0 + 3192);
      *(_DWORD *)(v0 + 444) = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      *(_WORD *)(v35 + 14) = 2080;
      memcpy((void *)(v0 + 2176), v45, 0x1AAuLL);
      sub_100141458();
      uint64_t v46 = Encodable.stringValue.getter();
      *(void *)(v0 + 3136) = sub_10013E7DC(v46, v47, &v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100134E24((uint64_t)v45);
      sub_100134E24((uint64_t)v45);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Activity state update CANCELED: isTaskCanceled: %{BOOL}d, isActivityNil: %{BOOL}d, state: %s", (uint8_t *)v35, 0x18u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v66, v44);
    }
    else
    {
      uint64_t v39 = *(void *)(v0 + 3248);
      uint64_t v40 = *(void *)(v0 + 3240);
      uint64_t v41 = *(void *)(v0 + 3232);
      uint64_t v42 = *(void *)(v0 + 3192);
      swift_release_n();
      sub_100134E24(v42);
      sub_100134E24(v42);

      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
    }
    goto LABEL_15;
  }
  uint64_t v3 = Strong;
  if ((v1 & 1) != 0 || !*(void *)(Strong + 16))
  {
    swift_release();
    goto LABEL_8;
  }
  sub_10013A5D4();
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)(v0 + 3320) = v4;
  if (v4)
  {
    uint64_t v65 = *(void *)(v0 + 3264);
    uint64_t v5 = *(void *)(v0 + 3240);
    uint64_t v67 = *(void *)(v0 + 3232);
    uint64_t v6 = *(void *)(v0 + 3224);
    uint64_t v7 = *(void *)(v0 + 3192);
    swift_retain();
    sub_10013DF2C(v7, v6);
    uint64_t v8 = type metadata accessor for AlertConfiguration();
    LOBYTE(v6) = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1;
    uint64_t v9 = OBJC_IVAR____TtC6BridgeP33_9C0BFB6E6F5347CD940ADB033E1E86B112LiveActivity_lastUpdateInfo;
    *(void *)(v0 + 3328) = OBJC_IVAR____TtC6BridgeP33_9C0BFB6E6F5347CD940ADB033E1E86B112LiveActivity_lastUpdateInfo;
    uint64_t v10 = v3 + v9;
    swift_beginAccess();
    uint64_t updated = type metadata accessor for LiveActivityUpdateInfo(0);
    *(void *)(v0 + 3336) = updated;
    *(unsigned char *)(v10 + *(int *)(updated + 24)) = v6;
    memcpy((void *)(v0 + 1744), (const void *)(v0 + 16), 0x1AAuLL);
    LiveActivityEndStatus.rawValue.getter(v0 + 1744);
    uint64_t v12 = v10 + *(int *)(updated + 20);
    sub_10013EEB0(v12, v0 + 2608, &qword_10029A5F0);
    sub_10013EEB0(v0 + 1744, v12, &qword_10029A5F0);
    sub_100140D88(v7);
    sub_1001414AC(v0 + 2608);
    uint64_t v13 = LiveActivitySetupLogger.unsafeMutableAddressor();
    *(void *)(v0 + 3344) = v13;
    char v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    *(void *)(v0 + 3352) = v14;
    *(void *)(v0 + 3360) = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v14(v65, v13, v67);
    swift_retain();
    sub_100140D88(v7);
    swift_retain();
    sub_100140D88(v7);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v18 = *(void *)(v0 + 3264);
    uint64_t v19 = *(void *)(v0 + 3240);
    uint64_t v20 = *(void *)(v0 + 3232);
    uint64_t v21 = *(const void **)(v0 + 3192);
    if (v17)
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v23 = Activity.id.getter();
      *(void *)(v0 + 3168) = sub_10013E7DC(v23, v24, &v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      memcpy((void *)(v0 + 448), v21, 0x1AAuLL);
      sub_100141458();
      uint64_t v25 = Encodable.stringValue.getter();
      *(void *)(v0 + 3152) = sub_10013E7DC(v25, v26, &v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100134E24((uint64_t)v21);
      sub_100134E24((uint64_t)v21);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Requesting activity: %s, state update with state: %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v27(v18, v20);
    }
    else
    {
      swift_release_n();
      sub_100134E24((uint64_t)v21);
      sub_100134E24((uint64_t)v21);

      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v27(v18, v20);
    }
    *(void *)(v0 + 3368) = v27;
    uint64_t v60 = *(const void **)(v0 + 3192);
    uint64_t v61 = (uint64_t *)LiveActivityService.shared.unsafeMutableAddressor();
    uint64_t v62 = *v61;
    *(void *)(v0 + 3376) = *v61;
    memcpy((void *)(v0 + 1312), v60, 0x1AAuLL);
    uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v62 + 96)
                                                            + **(int **)(*(void *)v62 + 96));
    swift_retain();
    uint64_t v63 = (void *)swift_task_alloc();
    *(void *)(v0 + 3384) = v63;
    *uint64_t v63 = v0;
    v63[1] = sub_10013CBD8;
    uint64_t v64 = *(void *)(v0 + 3224);
    return v68(v4, v0 + 1312, v64);
  }
  uint64_t v50 = *(void *)(v0 + 3272);
  uint64_t v51 = *(void *)(v0 + 3240);
  uint64_t v52 = *(void *)(v0 + 3232);
  swift_release();
  uint64_t v53 = LiveActivitySetupLogger.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v50, v53, v52);
  uint64_t v54 = Logger.logObject.getter();
  os_log_type_t v55 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v54, v55))
  {
    unint64_t v56 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v56 = 0;
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "Received call to update live activity but there is no active live activity and we are unable to create one", v56, 2u);
    swift_slowDealloc();
  }
  uint64_t v57 = *(void *)(v0 + 3272);
  uint64_t v58 = *(void *)(v0 + 3240);
  uint64_t v59 = *(void *)(v0 + 3232);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v59);
LABEL_15:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v48 = *(uint64_t (**)(void))(v0 + 8);
  return v48();
}

uint64_t sub_10013DA0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1001378A8(a1, &qword_10029A7F8);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_10013DB94(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ActivityUIDismissalPolicy();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[3] = &type metadata for FeatureFlags;
  void v28[4] = sub_100138AF4();
  LOBYTE(v28[0]) = 0;
  char v8 = isFeatureEnabled(_:)();
  uint64_t result = sub_1001417F4((uint64_t)v28);
  if (v8)
  {
    uint64_t v10 = *(void *)(v2 + 16);
    if (v10)
    {
      uint64_t v25 = v5;
      swift_retain();
      static ActivityUIDismissalPolicy.immediate.getter();
      if (a1 && a1 != 2)
      {
        if (a1 != 1)
        {
          v28[0] = a1;
          uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
          __break(1u);
          return result;
        }
        unint64_t v11 = self;
        id v12 = [v11 mainBundle];
        v33._object = (void *)0xE000000000000000;
        v13._object = (void *)0x8000000100223910;
        v13._uint64_t countAndFlagsBits = 0xD000000000000019;
        v14.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
        v14.value._object = (void *)0xEB00000000656C62;
        v15._uint64_t countAndFlagsBits = 0;
        v15._object = (void *)0xE000000000000000;
        v33._uint64_t countAndFlagsBits = 0;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v33);

        id v16 = [v11 mainBundle];
        v17._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
        v34._object = (void *)0xE000000000000000;
        v17._object = (void *)0x8000000100223930;
        v18.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
        v18.value._object = (void *)0xEB00000000656C62;
        v19._uint64_t countAndFlagsBits = 0;
        v19._object = (void *)0xE000000000000000;
        v34._uint64_t countAndFlagsBits = 0;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v34);
      }
      uint64_t v20 = *(void *)LiveActivityService.shared.unsafeMutableAddressor();
      swift_retain();
      LiveActivityText.init(title:subtitle:)();
      LiveActivityTextMap.init(dynamicIslandExpanded:lockScreen:)();
      sub_100150D2C((uint64_t)&v27);
      uint64_t v31 = 0;
      long long v29 = 0u;
      long long v30 = 0u;
      char v32 = 0x80;
      LiveActivitySetupState.init(textMap:imageMap:metadata:shouldSuppressAlert:)();
      memcpy(v26, v28, 0x1AAuLL);
      (*(void (**)(uint64_t, unsigned char *, char *))(*(void *)v20 + 88))(v10, v26, v7);
      swift_release();
      sub_100134E24((uint64_t)v28);
      *(void *)(v2 + 16) = 0;
      swift_release();
      uint64_t v21 = *(void *)(v2 + 32);
      BOOL v22 = *(void *)(v2 + 16) != 0;
      uint64_t v23 = *(void (**)(BOOL))(*(void *)v21 + 128);
      swift_retain();
      v23(v22);
      swift_release();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v7, v4);
    }
  }
  return result;
}

uint64_t sub_10013DF2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v57 = a2;
  uint64_t v58 = type metadata accessor for Logger();
  uint64_t v56 = *(void *)(v58 - 8);
  uint64_t v5 = __chkstk_darwin(v58);
  uint64_t v59 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v53 = (char *)&v49 - v7;
  uint64_t v8 = type metadata accessor for AlertConfiguration.AlertSound();
  __chkstk_darwin(v8 - 8);
  uint64_t v51 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource();
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v50 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = type metadata accessor for AlertConfiguration();
  uint64_t v54 = *(void *)(v13 - 8);
  uint64_t v55 = v13;
  __chkstk_darwin(v13);
  os_log_t v52 = (os_log_t)((char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  Swift::String_optional v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = [self sharedApplication];
  id v20 = [v19 applicationState];

  char v21 = *(unsigned char *)(a1 + 425);
  if ((v21 & 1) != 0
    || v20 != (id)2
    || (uint64_t v22 = v3 + OBJC_IVAR____TtC6BridgeP33_9C0BFB6E6F5347CD940ADB033E1E86B112LiveActivity_lastUpdateInfo,
        swift_beginAccess(),
        (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v22, v15),
        Date.timeIntervalSinceNow.getter(),
        double v24 = v23,
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15),
        v24 > -2.0)
    || (*(unsigned char *)(v22 + *(int *)(type metadata accessor for LiveActivityUpdateInfo(0) + 24)) & 1) != 0)
  {
    uint64_t v25 = LiveActivitySetupLogger.unsafeMutableAddressor();
    uint64_t v26 = v56;
    uint64_t v27 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v59, v25, v58);
    swift_retain_n();
    sub_100140D88(a1);
    swift_retain();
    sub_100140D88(a1);
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.default.getter();
    LODWORD(v53) = v29;
    if (os_log_type_enabled(v28, v29))
    {
      LODWORD(v50) = v21 & 1;
      os_log_t v52 = v28;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v51 = (char *)swift_slowAlloc();
      uint64_t v62 = v51;
      *(_DWORD *)uint64_t v30 = 67109890;
      BOOL v61 = v20 == (id)2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v30 + 8) = 2080;
      uint64_t v49 = v30 + 10;
      uint64_t v31 = v3 + OBJC_IVAR____TtC6BridgeP33_9C0BFB6E6F5347CD940ADB033E1E86B112LiveActivity_lastUpdateInfo;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v31, v15);
      sub_100141880(&qword_10029A7D0, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v34 = v33;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      uint64_t v60 = sub_10013E7DC(v32, v34, (uint64_t *)&v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 18) = 1024;
      sub_100134E24(a1);
      LODWORD(v60) = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100134E24(a1);
      *(_WORD *)(v30 + 24) = 1024;
      LODWORD(v32) = *(unsigned __int8 *)(v31 + *(int *)(type metadata accessor for LiveActivityUpdateInfo(0) + 24));
      swift_release();
      LODWORD(v60) = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      os_log_t v35 = v52;
      _os_log_impl((void *)&_mh_execute_header, v52, (os_log_type_t)v53, "Live Activity will not alert. applicationStateInBackground: %{BOOL}d, lastAlertPostedDate: %s, shouldSuppressAlert: %{BOOL}d isPreviousUpdateBlocking: %{BOOL}d", (uint8_t *)v30, 0x1Eu);
      uint64_t v36 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v26 + 8))(v59, v58);
    }
    else
    {
      swift_release();
      sub_100134E24(a1);
      swift_release_n();
      sub_100134E24(a1);

      swift_release();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v59, v27);
      uint64_t v36 = 1;
    }
    uint64_t v37 = v57;
    uint64_t v39 = v54;
    uint64_t v38 = v55;
  }
  else
  {
    swift_bridgeObjectRetain();
    LocalizedStringResource.init(stringLiteral:)();
    swift_bridgeObjectRetain();
    LocalizedStringResource.init(stringLiteral:)();
    static AlertConfiguration.AlertSound.default.getter();
    os_log_t v41 = v52;
    AlertConfiguration.init(title:body:sound:)();
    uint64_t v42 = LiveActivitySetupLogger.unsafeMutableAddressor();
    uint64_t v43 = v56;
    uint64_t v44 = v53;
    uint64_t v45 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v53, v42, v58);
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v46, v47))
    {
      int v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v48 = 0;
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "Live activity will alert when presented", v48, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
    uint64_t v39 = v54;
    uint64_t v38 = v55;
    uint64_t v37 = v57;
    (*(void (**)(uint64_t, os_log_t, uint64_t))(v54 + 32))(v57, v41, v55);
    uint64_t v36 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v37, v36, 1, v38);
}

uint64_t sub_10013E71C()
{
  swift_release();
  swift_release();
  swift_release();
  sub_1001418C8(v0 + OBJC_IVAR____TtC6BridgeP33_9C0BFB6E6F5347CD940ADB033E1E86B112LiveActivity_lastUpdateInfo, type metadata accessor for LiveActivityUpdateInfo);
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

unint64_t LiveActivityEndStatus.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

uint64_t *sub_10013E7C0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  BOOL v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

uint64_t sub_10013E7DC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_10013E8B0(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10013784C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10013784C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_1001417F4((uint64_t)v12);
  return v7;
}

uint64_t sub_10013E8B0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_10013EA6C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_10013EA6C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10013EB04(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10013ECE4(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10013ECE4(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10013EB04(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_10013EC7C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_10013EC7C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_10013385C(&qword_10029A828);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  void v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10013ECE4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10013385C(&qword_10029A828);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10013EE34(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void *sub_10013EE4C(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t type metadata accessor for LiveActivityUpdateInfo(uint64_t a1)
{
  return sub_10013EFD8(a1, qword_10029B848);
}

uint64_t sub_10013EEB0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10013385C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double sub_10013EF14(_OWORD *a1)
{
  double result = 0.0;
  a1[24] = 0u;
  a1[25] = 0u;
  a1[22] = 0u;
  a1[23] = 0u;
  a1[20] = 0u;
  a1[21] = 0u;
  a1[18] = 0u;
  a1[19] = 0u;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  *(_OWORD *)((char *)a1 + 410) = 0u;
  return result;
}

unint64_t sub_10013EF5C()
{
  unint64_t result = qword_10029A5F8;
  if (!qword_10029A5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A5F8);
  }
  return result;
}

uint64_t sub_10013EFB0()
{
  return type metadata accessor for LiveActivity(0);
}

uint64_t type metadata accessor for LiveActivity(uint64_t a1)
{
  return sub_10013EFD8(a1, (uint64_t *)&unk_10029B838);
}

uint64_t sub_10013EFD8(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10013F010()
{
  uint64_t result = type metadata accessor for LiveActivityUpdateInfo(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *sub_10013F0BC(void *a1, void *a2, uint64_t a3)
{
  long long v3 = a2;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v3, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    int64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)v3 + v8;
    uint64_t v11 = *(void *)((char *)v3 + v8 + 8);
    if (v11)
    {
      *(void *)int64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = v11;
      uint64_t v12 = *((void *)v10 + 3);
      *((void *)v9 + 2) = *((void *)v10 + 2);
      *((void *)v9 + 3) = v12;
      uint64_t v13 = *((void *)v10 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13)
      {
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *((void *)v9 + 5) = v13;
        uint64_t v14 = *((void *)v10 + 7);
        *((void *)v9 + 6) = *((void *)v10 + 6);
        *((void *)v9 + 7) = v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v16 = *((_OWORD *)v10 + 3);
        *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
        *((_OWORD *)v9 + 3) = v16;
      }
      uint64_t v17 = *((void *)v10 + 8);
      uint64_t v18 = *((void *)v10 + 9);
      uint64_t v19 = *((void *)v10 + 10);
      uint64_t v20 = *((void *)v10 + 11);
      unsigned __int8 v21 = v10[96];
      sub_100135708(v17, v18, v19, v20, v21);
      *((void *)v9 + 8) = v17;
      *((void *)v9 + 9) = v18;
      *((void *)v9 + 10) = v19;
      *((void *)v9 + 11) = v20;
      v9[96] = v21;
      int v22 = v10[136];
      if (v22 == 255)
      {
        long long v27 = *(_OWORD *)(v10 + 120);
        *(_OWORD *)(v9 + 104) = *(_OWORD *)(v10 + 104);
        *(_OWORD *)(v9 + 120) = v27;
        v9[136] = v10[136];
      }
      else
      {
        uint64_t v23 = *((void *)v10 + 13);
        uint64_t v24 = *((void *)v10 + 14);
        uint64_t v25 = *((void *)v10 + 15);
        uint64_t v26 = *((void *)v10 + 16);
        sub_100135708(v23, v24, v25, v26, v10[136]);
        *((void *)v9 + 13) = v23;
        *((void *)v9 + 14) = v24;
        *((void *)v9 + 15) = v25;
        *((void *)v9 + 16) = v26;
        v9[136] = v22;
      }
      uint64_t v28 = v10[176];
      if (v28 == 255)
      {
        long long v29 = *((_OWORD *)v10 + 12);
        *((_OWORD *)v9 + 11) = *((_OWORD *)v10 + 11);
        *((_OWORD *)v9 + 12) = v29;
        *(_OWORD *)(v9 + 201) = *(_OWORD *)(v10 + 201);
        long long v30 = *((_OWORD *)v10 + 10);
        *((_OWORD *)v9 + 9) = *((_OWORD *)v10 + 9);
        *((_OWORD *)v9 + 10) = v30;
      }
      else
      {
        uint64_t v31 = *((void *)v10 + 18);
        uint64_t v32 = *((void *)v10 + 19);
        uint64_t v33 = *((void *)v10 + 20);
        uint64_t v34 = *((void *)v10 + 21);
        sub_100135708(v31, v32, v33, v34, v10[176]);
        *((void *)v9 + 18) = v31;
        *((void *)v9 + 19) = v32;
        *((void *)v9 + 20) = v33;
        *((void *)v9 + 21) = v34;
        v9[176] = v28;
        int v35 = v10[216];
        if (v35 == 255)
        {
          long long v40 = *(_OWORD *)(v10 + 200);
          *(_OWORD *)(v9 + 184) = *(_OWORD *)(v10 + 184);
          *(_OWORD *)(v9 + 200) = v40;
          v9[216] = v10[216];
        }
        else
        {
          uint64_t v36 = *((void *)v10 + 23);
          uint64_t v37 = *((void *)v10 + 24);
          uint64_t v38 = *((void *)v10 + 25);
          uint64_t v39 = *((void *)v10 + 26);
          sub_100135708(v36, v37, v38, v39, v10[216]);
          *((void *)v9 + 23) = v36;
          *((void *)v9 + 24) = v37;
          *((void *)v9 + 25) = v38;
          *((void *)v9 + 26) = v39;
          v9[216] = v35;
        }
      }
      uint64_t v41 = *((void *)v10 + 28);
      uint64_t v42 = *((void *)v10 + 29);
      uint64_t v43 = *((void *)v10 + 30);
      uint64_t v44 = *((void *)v10 + 31);
      unsigned __int8 v45 = v10[256];
      sub_100135708(v41, v42, v43, v44, v45);
      *((void *)v9 + 28) = v41;
      *((void *)v9 + 29) = v42;
      *((void *)v9 + 30) = v43;
      *((void *)v9 + 31) = v44;
      v9[256] = v45;
      int v46 = v10[296];
      if (v46 == 255)
      {
        long long v51 = *(_OWORD *)(v10 + 280);
        *(_OWORD *)(v9 + 264) = *(_OWORD *)(v10 + 264);
        *(_OWORD *)(v9 + 280) = v51;
        v9[296] = v10[296];
      }
      else
      {
        uint64_t v47 = *((void *)v10 + 33);
        uint64_t v48 = *((void *)v10 + 34);
        uint64_t v49 = *((void *)v10 + 35);
        uint64_t v50 = *((void *)v10 + 36);
        sub_100135708(v47, v48, v49, v50, v10[296]);
        *((void *)v9 + 33) = v47;
        *((void *)v9 + 34) = v48;
        *((void *)v9 + 35) = v49;
        *((void *)v9 + 36) = v50;
        v9[296] = v46;
      }
      uint64_t v52 = v10[336];
      uint64_t v72 = v3;
      if (v52 == 255)
      {
        long long v53 = *((_OWORD *)v10 + 22);
        *((_OWORD *)v9 + 21) = *((_OWORD *)v10 + 21);
        *((_OWORD *)v9 + 22) = v53;
        *(_OWORD *)(v9 + 361) = *(_OWORD *)(v10 + 361);
        long long v54 = *((_OWORD *)v10 + 20);
        *((_OWORD *)v9 + 19) = *((_OWORD *)v10 + 19);
        *((_OWORD *)v9 + 20) = v54;
      }
      else
      {
        uint64_t v55 = *((void *)v10 + 38);
        uint64_t v56 = *((void *)v10 + 39);
        uint64_t v57 = *((void *)v10 + 40);
        uint64_t v58 = *((void *)v10 + 41);
        sub_100135708(v55, v56, v57, v58, v52);
        *((void *)v9 + 38) = v55;
        *((void *)v9 + 39) = v56;
        *((void *)v9 + 40) = v57;
        *((void *)v9 + 41) = v58;
        v9[336] = v52;
        int v59 = v10[376];
        if (v59 == 255)
        {
          long long v64 = *(_OWORD *)(v10 + 360);
          *(_OWORD *)(v9 + 344) = *(_OWORD *)(v10 + 344);
          *(_OWORD *)(v9 + 360) = v64;
          v9[376] = v10[376];
        }
        else
        {
          uint64_t v60 = *((void *)v10 + 43);
          uint64_t v61 = *((void *)v10 + 44);
          uint64_t v62 = *((void *)v10 + 45);
          uint64_t v63 = *((void *)v10 + 46);
          sub_100135708(v60, v61, v62, v63, v10[376]);
          *((void *)v9 + 43) = v60;
          *((void *)v9 + 44) = v61;
          *((void *)v9 + 45) = v62;
          *((void *)v9 + 46) = v63;
          v9[376] = v59;
        }
      }
      uint64_t v65 = *((void *)v10 + 48);
      uint64_t v66 = *((void *)v10 + 49);
      uint64_t v67 = *((void *)v10 + 50);
      uint64_t v68 = *((void *)v10 + 51);
      uint64_t v69 = *((void *)v10 + 52);
      unsigned __int8 v70 = v10[424];
      sub_10013F4DC(v65, v66, v67, v68, v69, v70);
      *((void *)v9 + 48) = v65;
      *((void *)v9 + 49) = v66;
      *((void *)v9 + 50) = v67;
      *((void *)v9 + 51) = v68;
      *((void *)v9 + 52) = v69;
      v9[424] = v70;
      v9[425] = v10[425];
      long long v3 = v72;
    }
    else
    {
      memcpy((char *)a1 + v8, (char *)v3 + v8, 0x1AAuLL);
    }
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)v3 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_10013F4DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 <= 0x3Fu)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10013F528(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t result = *(void *)(v5 + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v5 + 40))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_10013509C(*(void *)(v5 + 64), *(void *)(v5 + 72), *(void *)(v5 + 80), *(void *)(v5 + 88), *(unsigned char *)(v5 + 96));
    int v7 = *(unsigned __int8 *)(v5 + 136);
    if (v7 != 255) {
      sub_10013509C(*(void *)(v5 + 104), *(void *)(v5 + 112), *(void *)(v5 + 120), *(void *)(v5 + 128), v7);
    }
    uint64_t v8 = *(unsigned __int8 *)(v5 + 176);
    if (v8 != 255)
    {
      sub_10013509C(*(void *)(v5 + 144), *(void *)(v5 + 152), *(void *)(v5 + 160), *(void *)(v5 + 168), v8);
      int v9 = *(unsigned __int8 *)(v5 + 216);
      if (v9 != 255) {
        sub_10013509C(*(void *)(v5 + 184), *(void *)(v5 + 192), *(void *)(v5 + 200), *(void *)(v5 + 208), v9);
      }
    }
    sub_10013509C(*(void *)(v5 + 224), *(void *)(v5 + 232), *(void *)(v5 + 240), *(void *)(v5 + 248), *(unsigned char *)(v5 + 256));
    int v10 = *(unsigned __int8 *)(v5 + 296);
    if (v10 != 255) {
      sub_10013509C(*(void *)(v5 + 264), *(void *)(v5 + 272), *(void *)(v5 + 280), *(void *)(v5 + 288), v10);
    }
    uint64_t v11 = *(unsigned __int8 *)(v5 + 336);
    if (v11 != 255)
    {
      sub_10013509C(*(void *)(v5 + 304), *(void *)(v5 + 312), *(void *)(v5 + 320), *(void *)(v5 + 328), v11);
      int v12 = *(unsigned __int8 *)(v5 + 376);
      if (v12 != 255) {
        sub_10013509C(*(void *)(v5 + 344), *(void *)(v5 + 352), *(void *)(v5 + 360), *(void *)(v5 + 368), v12);
      }
    }
    uint64_t v13 = *(void *)(v5 + 384);
    uint64_t v14 = *(void *)(v5 + 392);
    uint64_t v15 = *(void *)(v5 + 400);
    uint64_t v16 = *(void *)(v5 + 408);
    uint64_t v17 = *(void *)(v5 + 416);
    unsigned __int8 v18 = *(unsigned char *)(v5 + 424);
    return sub_100135188(v13, v14, v15, v16, v17, v18);
  }
  return result;
}

uint64_t sub_10013F690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  if (v10)
  {
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = v10;
    uint64_t v11 = *(void *)(v9 + 24);
    *(void *)(v8 + 16) = *(void *)(v9 + 16);
    *(void *)(v8 + 24) = v11;
    uint64_t v12 = *(void *)(v9 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v70 = a3;
    if (v12)
    {
      *(void *)(v8 + 32) = *(void *)(v9 + 32);
      *(void *)(v8 + 40) = v12;
      uint64_t v13 = *(void *)(v9 + 56);
      *(void *)(v8 + 48) = *(void *)(v9 + 48);
      *(void *)(v8 + 56) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v14 = *(_OWORD *)(v9 + 48);
      *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
      *(_OWORD *)(v8 + 48) = v14;
    }
    uint64_t v15 = *(void *)(v9 + 64);
    uint64_t v16 = *(void *)(v9 + 72);
    uint64_t v17 = *(void *)(v9 + 80);
    uint64_t v18 = *(void *)(v9 + 88);
    unsigned __int8 v19 = *(unsigned char *)(v9 + 96);
    sub_100135708(v15, v16, v17, v18, v19);
    *(void *)(v8 + 64) = v15;
    *(void *)(v8 + 72) = v16;
    *(void *)(v8 + 80) = v17;
    *(void *)(v8 + 88) = v18;
    *(unsigned char *)(v8 + 96) = v19;
    int v20 = *(unsigned __int8 *)(v9 + 136);
    if (v20 == 255)
    {
      long long v25 = *(_OWORD *)(v9 + 120);
      *(_OWORD *)(v8 + 104) = *(_OWORD *)(v9 + 104);
      *(_OWORD *)(v8 + 120) = v25;
      *(unsigned char *)(v8 + 136) = *(unsigned char *)(v9 + 136);
    }
    else
    {
      uint64_t v21 = *(void *)(v9 + 104);
      uint64_t v22 = *(void *)(v9 + 112);
      uint64_t v23 = *(void *)(v9 + 120);
      uint64_t v24 = *(void *)(v9 + 128);
      sub_100135708(v21, v22, v23, v24, *(unsigned char *)(v9 + 136));
      *(void *)(v8 + 104) = v21;
      *(void *)(v8 + 112) = v22;
      *(void *)(v8 + 120) = v23;
      *(void *)(v8 + 128) = v24;
      *(unsigned char *)(v8 + 136) = v20;
    }
    uint64_t v26 = *(unsigned __int8 *)(v9 + 176);
    if (v26 == 255)
    {
      long long v27 = *(_OWORD *)(v9 + 192);
      *(_OWORD *)(v8 + 176) = *(_OWORD *)(v9 + 176);
      *(_OWORD *)(v8 + 192) = v27;
      *(_OWORD *)(v8 + 201) = *(_OWORD *)(v9 + 201);
      long long v28 = *(_OWORD *)(v9 + 160);
      *(_OWORD *)(v8 + 144) = *(_OWORD *)(v9 + 144);
      *(_OWORD *)(v8 + 160) = v28;
    }
    else
    {
      uint64_t v29 = *(void *)(v9 + 144);
      uint64_t v30 = *(void *)(v9 + 152);
      uint64_t v31 = *(void *)(v9 + 160);
      uint64_t v32 = *(void *)(v9 + 168);
      sub_100135708(v29, v30, v31, v32, *(unsigned char *)(v9 + 176));
      *(void *)(v8 + 144) = v29;
      *(void *)(v8 + 152) = v30;
      *(void *)(v8 + 160) = v31;
      *(void *)(v8 + 168) = v32;
      *(unsigned char *)(v8 + 176) = v26;
      int v33 = *(unsigned __int8 *)(v9 + 216);
      if (v33 == 255)
      {
        long long v38 = *(_OWORD *)(v9 + 200);
        *(_OWORD *)(v8 + 184) = *(_OWORD *)(v9 + 184);
        *(_OWORD *)(v8 + 200) = v38;
        *(unsigned char *)(v8 + 216) = *(unsigned char *)(v9 + 216);
      }
      else
      {
        uint64_t v34 = *(void *)(v9 + 184);
        uint64_t v35 = *(void *)(v9 + 192);
        uint64_t v36 = *(void *)(v9 + 200);
        uint64_t v37 = *(void *)(v9 + 208);
        sub_100135708(v34, v35, v36, v37, *(unsigned char *)(v9 + 216));
        *(void *)(v8 + 184) = v34;
        *(void *)(v8 + 192) = v35;
        *(void *)(v8 + 200) = v36;
        *(void *)(v8 + 208) = v37;
        *(unsigned char *)(v8 + 216) = v33;
      }
    }
    uint64_t v39 = *(void *)(v9 + 224);
    uint64_t v40 = *(void *)(v9 + 232);
    uint64_t v41 = *(void *)(v9 + 240);
    uint64_t v42 = *(void *)(v9 + 248);
    unsigned __int8 v43 = *(unsigned char *)(v9 + 256);
    sub_100135708(v39, v40, v41, v42, v43);
    *(void *)(v8 + 224) = v39;
    *(void *)(v8 + 232) = v40;
    *(void *)(v8 + 240) = v41;
    *(void *)(v8 + 248) = v42;
    *(unsigned char *)(v8 + 256) = v43;
    int v44 = *(unsigned __int8 *)(v9 + 296);
    if (v44 == 255)
    {
      long long v49 = *(_OWORD *)(v9 + 280);
      *(_OWORD *)(v8 + 264) = *(_OWORD *)(v9 + 264);
      *(_OWORD *)(v8 + 280) = v49;
      *(unsigned char *)(v8 + 296) = *(unsigned char *)(v9 + 296);
    }
    else
    {
      uint64_t v45 = *(void *)(v9 + 264);
      uint64_t v46 = *(void *)(v9 + 272);
      uint64_t v47 = *(void *)(v9 + 280);
      uint64_t v48 = *(void *)(v9 + 288);
      sub_100135708(v45, v46, v47, v48, *(unsigned char *)(v9 + 296));
      *(void *)(v8 + 264) = v45;
      *(void *)(v8 + 272) = v46;
      *(void *)(v8 + 280) = v47;
      *(void *)(v8 + 288) = v48;
      *(unsigned char *)(v8 + 296) = v44;
    }
    uint64_t v50 = *(unsigned __int8 *)(v9 + 336);
    if (v50 == 255)
    {
      long long v51 = *(_OWORD *)(v9 + 352);
      *(_OWORD *)(v8 + 336) = *(_OWORD *)(v9 + 336);
      *(_OWORD *)(v8 + 352) = v51;
      *(_OWORD *)(v8 + 361) = *(_OWORD *)(v9 + 361);
      long long v52 = *(_OWORD *)(v9 + 320);
      *(_OWORD *)(v8 + 304) = *(_OWORD *)(v9 + 304);
      *(_OWORD *)(v8 + 320) = v52;
    }
    else
    {
      uint64_t v53 = *(void *)(v9 + 304);
      uint64_t v54 = *(void *)(v9 + 312);
      uint64_t v55 = *(void *)(v9 + 320);
      uint64_t v56 = *(void *)(v9 + 328);
      sub_100135708(v53, v54, v55, v56, *(unsigned char *)(v9 + 336));
      *(void *)(v8 + 304) = v53;
      *(void *)(v8 + 312) = v54;
      *(void *)(v8 + 320) = v55;
      *(void *)(v8 + 328) = v56;
      *(unsigned char *)(v8 + 336) = v50;
      int v57 = *(unsigned __int8 *)(v9 + 376);
      if (v57 == 255)
      {
        long long v62 = *(_OWORD *)(v9 + 360);
        *(_OWORD *)(v8 + 344) = *(_OWORD *)(v9 + 344);
        *(_OWORD *)(v8 + 360) = v62;
        *(unsigned char *)(v8 + 376) = *(unsigned char *)(v9 + 376);
      }
      else
      {
        uint64_t v58 = *(void *)(v9 + 344);
        uint64_t v59 = *(void *)(v9 + 352);
        uint64_t v60 = *(void *)(v9 + 360);
        uint64_t v61 = *(void *)(v9 + 368);
        sub_100135708(v58, v59, v60, v61, *(unsigned char *)(v9 + 376));
        *(void *)(v8 + 344) = v58;
        *(void *)(v8 + 352) = v59;
        *(void *)(v8 + 360) = v60;
        *(void *)(v8 + 368) = v61;
        *(unsigned char *)(v8 + 376) = v57;
      }
    }
    uint64_t v63 = *(void *)(v9 + 384);
    uint64_t v64 = *(void *)(v9 + 392);
    uint64_t v65 = *(void *)(v9 + 400);
    uint64_t v66 = *(void *)(v9 + 408);
    uint64_t v67 = *(void *)(v9 + 416);
    unsigned __int8 v68 = *(unsigned char *)(v9 + 424);
    sub_10013F4DC(v63, v64, v65, v66, v67, v68);
    *(void *)(v8 + 384) = v63;
    *(void *)(v8 + 392) = v64;
    *(void *)(v8 + 400) = v65;
    *(void *)(v8 + 408) = v66;
    *(void *)(v8 + 416) = v67;
    *(unsigned char *)(v8 + 424) = v68;
    *(unsigned char *)(v8 + 425) = *(unsigned char *)(v9 + 425);
    a3 = v70;
  }
  else
  {
    memcpy((void *)(a1 + v7), (const void *)(a2 + v7), 0x1AAuLL);
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10013FA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a1 + v7 + 8);
  uint64_t v11 = *(void *)(a2 + v7 + 8);
  if (v10)
  {
    if (v11)
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *(void *)(v8 + 8) = *(void *)(v9 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v8 + 16) = *(void *)(v9 + 16);
      *(void *)(v8 + 24) = *(void *)(v9 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v12 = (_OWORD *)(v8 + 32);
      uint64_t v13 = (_OWORD *)(v9 + 32);
      uint64_t v14 = *(void *)(v9 + 40);
      uint64_t v242 = a3;
      if (*(void *)(v8 + 40))
      {
        if (v14)
        {
          *(void *)(v8 + 32) = *(void *)(v9 + 32);
          *(void *)(v8 + 40) = *(void *)(v9 + 40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v8 + 48) = *(void *)(v9 + 48);
          *(void *)(v8 + 56) = *(void *)(v9 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_10014056C(v8 + 32);
          long long v16 = *(_OWORD *)(v9 + 48);
          *uint64_t v12 = *v13;
          *(_OWORD *)(v8 + 48) = v16;
        }
      }
      else if (v14)
      {
        *(void *)(v8 + 32) = *(void *)(v9 + 32);
        *(void *)(v8 + 40) = *(void *)(v9 + 40);
        *(void *)(v8 + 48) = *(void *)(v9 + 48);
        *(void *)(v8 + 56) = *(void *)(v9 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v43 = *(_OWORD *)(v9 + 48);
        *uint64_t v12 = *v13;
        *(_OWORD *)(v8 + 48) = v43;
      }
      uint64_t v44 = *(void *)(v9 + 64);
      uint64_t v45 = *(void *)(v9 + 72);
      uint64_t v46 = *(void *)(v9 + 80);
      uint64_t v47 = *(void *)(v9 + 88);
      unsigned __int8 v48 = *(unsigned char *)(v9 + 96);
      sub_100135708(v44, v45, v46, v47, v48);
      uint64_t v49 = *(void *)(v8 + 64);
      uint64_t v50 = *(void *)(v8 + 72);
      uint64_t v51 = *(void *)(v8 + 80);
      uint64_t v52 = *(void *)(v8 + 88);
      *(void *)(v8 + 64) = v44;
      *(void *)(v8 + 72) = v45;
      *(void *)(v8 + 80) = v46;
      *(void *)(v8 + 88) = v47;
      unsigned __int8 v53 = *(unsigned char *)(v8 + 96);
      *(unsigned char *)(v8 + 96) = v48;
      sub_10013509C(v49, v50, v51, v52, v53);
      uint64_t v54 = (long long *)(v8 + 104);
      uint64_t v55 = (long long *)(v9 + 104);
      int v56 = *(unsigned __int8 *)(v9 + 136);
      if (*(unsigned __int8 *)(v8 + 136) == 255)
      {
        if (v56 == 255)
        {
          long long v72 = *v55;
          long long v73 = *(_OWORD *)(v9 + 120);
          *(unsigned char *)(v8 + 136) = *(unsigned char *)(v9 + 136);
          long long *v54 = v72;
          *(_OWORD *)(v8 + 120) = v73;
        }
        else
        {
          uint64_t v66 = *(void *)(v9 + 104);
          uint64_t v67 = *(void *)(v9 + 112);
          uint64_t v68 = *(void *)(v9 + 120);
          uint64_t v69 = *(void *)(v9 + 128);
          sub_100135708(v66, v67, v68, v69, *(unsigned char *)(v9 + 136));
          *(void *)(v8 + 104) = v66;
          *(void *)(v8 + 112) = v67;
          *(void *)(v8 + 120) = v68;
          *(void *)(v8 + 128) = v69;
          *(unsigned char *)(v8 + 136) = v56;
        }
      }
      else if (v56 == 255)
      {
        sub_1001405C0(v8 + 104);
        char v70 = *(unsigned char *)(v9 + 136);
        long long v71 = *(_OWORD *)(v9 + 120);
        long long *v54 = *v55;
        *(_OWORD *)(v8 + 120) = v71;
        *(unsigned char *)(v8 + 136) = v70;
      }
      else
      {
        uint64_t v57 = *(void *)(v9 + 104);
        uint64_t v58 = *(void *)(v9 + 112);
        uint64_t v59 = *(void *)(v9 + 120);
        uint64_t v60 = *(void *)(v9 + 128);
        sub_100135708(v57, v58, v59, v60, *(unsigned char *)(v9 + 136));
        uint64_t v61 = *(void *)(v8 + 104);
        uint64_t v62 = *(void *)(v8 + 112);
        uint64_t v63 = *(void *)(v8 + 120);
        uint64_t v64 = *(void *)(v8 + 128);
        *(void *)(v8 + 104) = v57;
        *(void *)(v8 + 112) = v58;
        *(void *)(v8 + 120) = v59;
        *(void *)(v8 + 128) = v60;
        unsigned __int8 v65 = *(unsigned char *)(v8 + 136);
        *(unsigned char *)(v8 + 136) = v56;
        sub_10013509C(v61, v62, v63, v64, v65);
      }
      uint64_t v74 = (_OWORD *)(v8 + 144);
      long long v75 = (_OWORD *)(v9 + 144);
      uint64_t v76 = *(unsigned __int8 *)(v9 + 176);
      if (*(unsigned char *)(v8 + 176) == 0xFF)
      {
        if (v76 == 255)
        {
          *uint64_t v74 = *v75;
          long long v77 = *(_OWORD *)(v9 + 160);
          long long v78 = *(_OWORD *)(v9 + 176);
          long long v79 = *(_OWORD *)(v9 + 192);
          *(_OWORD *)(v8 + 201) = *(_OWORD *)(v9 + 201);
          *(_OWORD *)(v8 + 176) = v78;
          *(_OWORD *)(v8 + 192) = v79;
          *(_OWORD *)(v8 + 160) = v77;
          goto LABEL_54;
        }
        uint64_t v83 = *(void *)(v9 + 144);
        uint64_t v84 = *(void *)(v9 + 152);
        uint64_t v85 = *(void *)(v9 + 160);
        uint64_t v86 = *(void *)(v9 + 168);
        sub_100135708(v83, v84, v85, v86, *(unsigned char *)(v9 + 176));
        *(void *)(v8 + 144) = v83;
        *(void *)(v8 + 152) = v84;
        *(void *)(v8 + 160) = v85;
        *(void *)(v8 + 168) = v86;
        *(unsigned char *)(v8 + 176) = v76;
        int v87 = *(unsigned __int8 *)(v9 + 216);
        if (v87 == 255)
        {
          long long v88 = *(_OWORD *)(v9 + 184);
          long long v89 = *(_OWORD *)(v9 + 200);
          *(unsigned char *)(v8 + 216) = *(unsigned char *)(v9 + 216);
          *(_OWORD *)(v8 + 184) = v88;
          *(_OWORD *)(v8 + 200) = v89;
          goto LABEL_54;
        }
      }
      else
      {
        if (v76 == 255)
        {
          sub_100140614(v8 + 144);
          *uint64_t v74 = *v75;
          long long v81 = *(_OWORD *)(v9 + 176);
          long long v80 = *(_OWORD *)(v9 + 192);
          long long v82 = *(_OWORD *)(v9 + 160);
          *(_OWORD *)(v8 + 201) = *(_OWORD *)(v9 + 201);
          *(_OWORD *)(v8 + 176) = v81;
          *(_OWORD *)(v8 + 192) = v80;
          *(_OWORD *)(v8 + 160) = v82;
          goto LABEL_54;
        }
        uint64_t v90 = *(void *)(v9 + 144);
        uint64_t v91 = *(void *)(v9 + 152);
        uint64_t v92 = *(void *)(v9 + 160);
        uint64_t v93 = *(void *)(v9 + 168);
        sub_100135708(v90, v91, v92, v93, *(unsigned char *)(v9 + 176));
        uint64_t v94 = *(void *)(v8 + 144);
        uint64_t v95 = *(void *)(v8 + 152);
        uint64_t v96 = *(void *)(v8 + 160);
        uint64_t v97 = *(void *)(v8 + 168);
        *(void *)(v8 + 144) = v90;
        *(void *)(v8 + 152) = v91;
        *(void *)(v8 + 160) = v92;
        *(void *)(v8 + 168) = v93;
        unsigned __int8 v98 = *(unsigned char *)(v8 + 176);
        *(unsigned char *)(v8 + 176) = v76;
        sub_10013509C(v94, v95, v96, v97, v98);
        v99 = (_OWORD *)(v8 + 184);
        v100 = (_OWORD *)(v9 + 184);
        int v87 = *(unsigned __int8 *)(v9 + 216);
        if (*(unsigned __int8 *)(v8 + 216) != 255)
        {
          if (v87 == 255)
          {
            sub_1001405C0(v8 + 184);
            char v150 = *(unsigned char *)(v9 + 216);
            long long v151 = *(_OWORD *)(v9 + 200);
            _OWORD *v99 = *v100;
            *(_OWORD *)(v8 + 200) = v151;
            *(unsigned char *)(v8 + 216) = v150;
          }
          else
          {
            uint64_t v101 = *(void *)(v9 + 184);
            uint64_t v102 = *(void *)(v9 + 192);
            uint64_t v103 = *(void *)(v9 + 200);
            uint64_t v104 = *(void *)(v9 + 208);
            sub_100135708(v101, v102, v103, v104, *(unsigned char *)(v9 + 216));
            uint64_t v105 = *(void *)(v8 + 184);
            uint64_t v106 = *(void *)(v8 + 192);
            uint64_t v107 = *(void *)(v8 + 200);
            uint64_t v108 = *(void *)(v8 + 208);
            *(void *)(v8 + 184) = v101;
            *(void *)(v8 + 192) = v102;
            *(void *)(v8 + 200) = v103;
            *(void *)(v8 + 208) = v104;
            unsigned __int8 v109 = *(unsigned char *)(v8 + 216);
            *(unsigned char *)(v8 + 216) = v87;
            sub_10013509C(v105, v106, v107, v108, v109);
          }
          goto LABEL_54;
        }
        if (v87 == 255)
        {
          long long v152 = *v100;
          long long v153 = *(_OWORD *)(v9 + 200);
          *(unsigned char *)(v8 + 216) = *(unsigned char *)(v9 + 216);
          _OWORD *v99 = v152;
          *(_OWORD *)(v8 + 200) = v153;
LABEL_54:
          uint64_t v154 = *(void *)(v9 + 224);
          uint64_t v155 = *(void *)(v9 + 232);
          uint64_t v156 = *(void *)(v9 + 240);
          uint64_t v157 = *(void *)(v9 + 248);
          unsigned __int8 v158 = *(unsigned char *)(v9 + 256);
          sub_100135708(v154, v155, v156, v157, v158);
          uint64_t v159 = *(void *)(v8 + 224);
          uint64_t v160 = *(void *)(v8 + 232);
          uint64_t v161 = *(void *)(v8 + 240);
          uint64_t v162 = *(void *)(v8 + 248);
          *(void *)(v8 + 224) = v154;
          *(void *)(v8 + 232) = v155;
          *(void *)(v8 + 240) = v156;
          *(void *)(v8 + 248) = v157;
          unsigned __int8 v163 = *(unsigned char *)(v8 + 256);
          *(unsigned char *)(v8 + 256) = v158;
          sub_10013509C(v159, v160, v161, v162, v163);
          v164 = (long long *)(v8 + 264);
          v165 = (long long *)(v9 + 264);
          int v166 = *(unsigned __int8 *)(v9 + 296);
          if (*(unsigned __int8 *)(v8 + 296) == 255)
          {
            if (v166 == 255)
            {
              long long v182 = *v165;
              long long v183 = *(_OWORD *)(v9 + 280);
              *(unsigned char *)(v8 + 296) = *(unsigned char *)(v9 + 296);
              long long *v164 = v182;
              *(_OWORD *)(v8 + 280) = v183;
            }
            else
            {
              uint64_t v176 = *(void *)(v9 + 264);
              uint64_t v177 = *(void *)(v9 + 272);
              uint64_t v178 = *(void *)(v9 + 280);
              uint64_t v179 = *(void *)(v9 + 288);
              sub_100135708(v176, v177, v178, v179, *(unsigned char *)(v9 + 296));
              *(void *)(v8 + 264) = v176;
              *(void *)(v8 + 272) = v177;
              *(void *)(v8 + 280) = v178;
              *(void *)(v8 + 288) = v179;
              *(unsigned char *)(v8 + 296) = v166;
            }
          }
          else if (v166 == 255)
          {
            sub_1001405C0(v8 + 264);
            char v180 = *(unsigned char *)(v9 + 296);
            long long v181 = *(_OWORD *)(v9 + 280);
            long long *v164 = *v165;
            *(_OWORD *)(v8 + 280) = v181;
            *(unsigned char *)(v8 + 296) = v180;
          }
          else
          {
            uint64_t v167 = *(void *)(v9 + 264);
            uint64_t v168 = *(void *)(v9 + 272);
            uint64_t v169 = *(void *)(v9 + 280);
            uint64_t v170 = *(void *)(v9 + 288);
            sub_100135708(v167, v168, v169, v170, *(unsigned char *)(v9 + 296));
            uint64_t v171 = *(void *)(v8 + 264);
            uint64_t v172 = *(void *)(v8 + 272);
            uint64_t v173 = *(void *)(v8 + 280);
            uint64_t v174 = *(void *)(v8 + 288);
            *(void *)(v8 + 264) = v167;
            *(void *)(v8 + 272) = v168;
            *(void *)(v8 + 280) = v169;
            *(void *)(v8 + 288) = v170;
            unsigned __int8 v175 = *(unsigned char *)(v8 + 296);
            *(unsigned char *)(v8 + 296) = v166;
            sub_10013509C(v171, v172, v173, v174, v175);
          }
          v184 = (_OWORD *)(v8 + 304);
          v185 = (_OWORD *)(v9 + 304);
          uint64_t v186 = *(unsigned __int8 *)(v9 + 336);
          if (*(unsigned char *)(v8 + 336) == 0xFF)
          {
            if (v186 == 255)
            {
              _OWORD *v184 = *v185;
              long long v187 = *(_OWORD *)(v9 + 320);
              long long v188 = *(_OWORD *)(v9 + 336);
              long long v189 = *(_OWORD *)(v9 + 352);
              *(_OWORD *)(v8 + 361) = *(_OWORD *)(v9 + 361);
              *(_OWORD *)(v8 + 336) = v188;
              *(_OWORD *)(v8 + 352) = v189;
              *(_OWORD *)(v8 + 320) = v187;
LABEL_75:
              uint64_t v228 = *(void *)(v9 + 384);
              uint64_t v229 = *(void *)(v9 + 392);
              uint64_t v230 = *(void *)(v9 + 400);
              uint64_t v231 = *(void *)(v9 + 408);
              uint64_t v232 = *(void *)(v9 + 416);
              unsigned __int8 v233 = *(unsigned char *)(v9 + 424);
              sub_10013F4DC(v228, v229, v230, v231, v232, v233);
              uint64_t v234 = *(void *)(v8 + 384);
              uint64_t v235 = *(void *)(v8 + 392);
              uint64_t v236 = *(void *)(v8 + 400);
              uint64_t v237 = *(void *)(v8 + 408);
              uint64_t v238 = *(void *)(v8 + 416);
              *(void *)(v8 + 384) = v228;
              *(void *)(v8 + 392) = v229;
              *(void *)(v8 + 400) = v230;
              *(void *)(v8 + 408) = v231;
              *(void *)(v8 + 416) = v232;
              unsigned __int8 v239 = *(unsigned char *)(v8 + 424);
              *(unsigned char *)(v8 + 424) = v233;
              sub_100135188(v234, v235, v236, v237, v238, v239);
              *(unsigned char *)(v8 + 425) = *(unsigned char *)(v9 + 425);
              a3 = v242;
              goto LABEL_76;
            }
            uint64_t v193 = *(void *)(v9 + 304);
            uint64_t v194 = *(void *)(v9 + 312);
            uint64_t v195 = *(void *)(v9 + 320);
            uint64_t v196 = *(void *)(v9 + 328);
            sub_100135708(v193, v194, v195, v196, *(unsigned char *)(v9 + 336));
            *(void *)(v8 + 304) = v193;
            *(void *)(v8 + 312) = v194;
            *(void *)(v8 + 320) = v195;
            *(void *)(v8 + 328) = v196;
            *(unsigned char *)(v8 + 336) = v186;
            int v197 = *(unsigned __int8 *)(v9 + 376);
            if (v197 == 255)
            {
              long long v198 = *(_OWORD *)(v9 + 344);
              long long v199 = *(_OWORD *)(v9 + 360);
              *(unsigned char *)(v8 + 376) = *(unsigned char *)(v9 + 376);
              *(_OWORD *)(v8 + 344) = v198;
              *(_OWORD *)(v8 + 360) = v199;
              goto LABEL_75;
            }
          }
          else
          {
            if (v186 == 255)
            {
              sub_100140614(v8 + 304);
              _OWORD *v184 = *v185;
              long long v191 = *(_OWORD *)(v9 + 336);
              long long v190 = *(_OWORD *)(v9 + 352);
              long long v192 = *(_OWORD *)(v9 + 320);
              *(_OWORD *)(v8 + 361) = *(_OWORD *)(v9 + 361);
              *(_OWORD *)(v8 + 336) = v191;
              *(_OWORD *)(v8 + 352) = v190;
              *(_OWORD *)(v8 + 320) = v192;
              goto LABEL_75;
            }
            uint64_t v200 = *(void *)(v9 + 304);
            uint64_t v201 = *(void *)(v9 + 312);
            uint64_t v202 = *(void *)(v9 + 320);
            uint64_t v203 = *(void *)(v9 + 328);
            sub_100135708(v200, v201, v202, v203, *(unsigned char *)(v9 + 336));
            uint64_t v204 = *(void *)(v8 + 304);
            uint64_t v205 = *(void *)(v8 + 312);
            uint64_t v206 = *(void *)(v8 + 320);
            uint64_t v207 = *(void *)(v8 + 328);
            *(void *)(v8 + 304) = v200;
            *(void *)(v8 + 312) = v201;
            *(void *)(v8 + 320) = v202;
            *(void *)(v8 + 328) = v203;
            unsigned __int8 v208 = *(unsigned char *)(v8 + 336);
            *(unsigned char *)(v8 + 336) = v186;
            sub_10013509C(v204, v205, v206, v207, v208);
            v209 = (_OWORD *)(v8 + 344);
            v210 = (_OWORD *)(v9 + 344);
            int v197 = *(unsigned __int8 *)(v9 + 376);
            if (*(unsigned __int8 *)(v8 + 376) != 255)
            {
              if (v197 == 255)
              {
                sub_1001405C0(v8 + 344);
                char v224 = *(unsigned char *)(v9 + 376);
                long long v225 = *(_OWORD *)(v9 + 360);
                _OWORD *v209 = *v210;
                *(_OWORD *)(v8 + 360) = v225;
                *(unsigned char *)(v8 + 376) = v224;
              }
              else
              {
                uint64_t v211 = *(void *)(v9 + 344);
                uint64_t v212 = *(void *)(v9 + 352);
                uint64_t v213 = *(void *)(v9 + 360);
                uint64_t v214 = *(void *)(v9 + 368);
                sub_100135708(v211, v212, v213, v214, *(unsigned char *)(v9 + 376));
                uint64_t v215 = *(void *)(v8 + 344);
                uint64_t v216 = *(void *)(v8 + 352);
                uint64_t v217 = *(void *)(v8 + 360);
                uint64_t v218 = *(void *)(v8 + 368);
                *(void *)(v8 + 344) = v211;
                *(void *)(v8 + 352) = v212;
                *(void *)(v8 + 360) = v213;
                *(void *)(v8 + 368) = v214;
                unsigned __int8 v219 = *(unsigned char *)(v8 + 376);
                *(unsigned char *)(v8 + 376) = v197;
                sub_10013509C(v215, v216, v217, v218, v219);
              }
              goto LABEL_75;
            }
            if (v197 == 255)
            {
              long long v226 = *v210;
              long long v227 = *(_OWORD *)(v9 + 360);
              *(unsigned char *)(v8 + 376) = *(unsigned char *)(v9 + 376);
              _OWORD *v209 = v226;
              *(_OWORD *)(v8 + 360) = v227;
              goto LABEL_75;
            }
          }
          uint64_t v220 = *(void *)(v9 + 344);
          uint64_t v221 = *(void *)(v9 + 352);
          uint64_t v222 = *(void *)(v9 + 360);
          uint64_t v223 = *(void *)(v9 + 368);
          sub_100135708(v220, v221, v222, v223, v197);
          *(void *)(v8 + 344) = v220;
          *(void *)(v8 + 352) = v221;
          *(void *)(v8 + 360) = v222;
          *(void *)(v8 + 368) = v223;
          *(unsigned char *)(v8 + 376) = v197;
          goto LABEL_75;
        }
      }
      uint64_t v146 = *(void *)(v9 + 184);
      uint64_t v147 = *(void *)(v9 + 192);
      uint64_t v148 = *(void *)(v9 + 200);
      uint64_t v149 = *(void *)(v9 + 208);
      sub_100135708(v146, v147, v148, v149, v87);
      *(void *)(v8 + 184) = v146;
      *(void *)(v8 + 192) = v147;
      *(void *)(v8 + 200) = v148;
      *(void *)(v8 + 208) = v149;
      *(unsigned char *)(v8 + 216) = v87;
      goto LABEL_54;
    }
    sub_100140668(v8);
    goto LABEL_10;
  }
  if (!v11)
  {
LABEL_10:
    memcpy((void *)v8, (const void *)v9, 0x1AAuLL);
    goto LABEL_76;
  }
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  uint64_t v15 = *(void *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15)
  {
    *(void *)(v8 + 32) = *(void *)(v9 + 32);
    *(void *)(v8 + 40) = *(void *)(v9 + 40);
    *(void *)(v8 + 48) = *(void *)(v9 + 48);
    *(void *)(v8 + 56) = *(void *)(v9 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v17;
  }
  uint64_t v18 = *(void *)(v9 + 64);
  uint64_t v19 = *(void *)(v9 + 72);
  uint64_t v20 = *(void *)(v9 + 80);
  uint64_t v21 = *(void *)(v9 + 88);
  unsigned __int8 v22 = *(unsigned char *)(v9 + 96);
  sub_100135708(v18, v19, v20, v21, v22);
  *(void *)(v8 + 64) = v18;
  *(void *)(v8 + 72) = v19;
  *(void *)(v8 + 80) = v20;
  *(void *)(v8 + 88) = v21;
  *(unsigned char *)(v8 + 96) = v22;
  int v23 = *(unsigned __int8 *)(v9 + 136);
  if (v23 == 255)
  {
    long long v28 = *(_OWORD *)(v9 + 104);
    long long v29 = *(_OWORD *)(v9 + 120);
    *(unsigned char *)(v8 + 136) = *(unsigned char *)(v9 + 136);
    *(_OWORD *)(v8 + 104) = v28;
    *(_OWORD *)(v8 + 120) = v29;
  }
  else
  {
    uint64_t v24 = *(void *)(v9 + 104);
    uint64_t v25 = *(void *)(v9 + 112);
    uint64_t v26 = *(void *)(v9 + 120);
    uint64_t v27 = *(void *)(v9 + 128);
    sub_100135708(v24, v25, v26, v27, *(unsigned char *)(v9 + 136));
    *(void *)(v8 + 104) = v24;
    *(void *)(v8 + 112) = v25;
    *(void *)(v8 + 120) = v26;
    *(void *)(v8 + 128) = v27;
    *(unsigned char *)(v8 + 136) = v23;
  }
  uint64_t v30 = *(unsigned __int8 *)(v9 + 176);
  if (v30 == 255)
  {
    *(_OWORD *)(v8 + 144) = *(_OWORD *)(v9 + 144);
    long long v31 = *(_OWORD *)(v9 + 160);
    long long v32 = *(_OWORD *)(v9 + 176);
    long long v33 = *(_OWORD *)(v9 + 192);
    *(_OWORD *)(v8 + 201) = *(_OWORD *)(v9 + 201);
    *(_OWORD *)(v8 + 176) = v32;
    *(_OWORD *)(v8 + 192) = v33;
    *(_OWORD *)(v8 + 160) = v31;
  }
  else
  {
    uint64_t v34 = *(void *)(v9 + 144);
    uint64_t v35 = *(void *)(v9 + 152);
    uint64_t v36 = *(void *)(v9 + 160);
    uint64_t v37 = *(void *)(v9 + 168);
    sub_100135708(v34, v35, v36, v37, *(unsigned char *)(v9 + 176));
    *(void *)(v8 + 144) = v34;
    *(void *)(v8 + 152) = v35;
    *(void *)(v8 + 160) = v36;
    *(void *)(v8 + 168) = v37;
    *(unsigned char *)(v8 + 176) = v30;
    int v38 = *(unsigned __int8 *)(v9 + 216);
    if (v38 == 255)
    {
      long long v110 = *(_OWORD *)(v9 + 184);
      long long v111 = *(_OWORD *)(v9 + 200);
      *(unsigned char *)(v8 + 216) = *(unsigned char *)(v9 + 216);
      *(_OWORD *)(v8 + 184) = v110;
      *(_OWORD *)(v8 + 200) = v111;
    }
    else
    {
      uint64_t v39 = *(void *)(v9 + 184);
      uint64_t v40 = *(void *)(v9 + 192);
      uint64_t v41 = *(void *)(v9 + 200);
      uint64_t v42 = *(void *)(v9 + 208);
      sub_100135708(v39, v40, v41, v42, *(unsigned char *)(v9 + 216));
      *(void *)(v8 + 184) = v39;
      *(void *)(v8 + 192) = v40;
      *(void *)(v8 + 200) = v41;
      *(void *)(v8 + 208) = v42;
      *(unsigned char *)(v8 + 216) = v38;
    }
  }
  uint64_t v112 = *(void *)(v9 + 224);
  uint64_t v113 = *(void *)(v9 + 232);
  uint64_t v114 = *(void *)(v9 + 240);
  uint64_t v115 = *(void *)(v9 + 248);
  unsigned __int8 v116 = *(unsigned char *)(v9 + 256);
  sub_100135708(v112, v113, v114, v115, v116);
  *(void *)(v8 + 224) = v112;
  *(void *)(v8 + 232) = v113;
  *(void *)(v8 + 240) = v114;
  *(void *)(v8 + 248) = v115;
  *(unsigned char *)(v8 + 256) = v116;
  int v117 = *(unsigned __int8 *)(v9 + 296);
  if (v117 == 255)
  {
    long long v122 = *(_OWORD *)(v9 + 264);
    long long v123 = *(_OWORD *)(v9 + 280);
    *(unsigned char *)(v8 + 296) = *(unsigned char *)(v9 + 296);
    *(_OWORD *)(v8 + 264) = v122;
    *(_OWORD *)(v8 + 280) = v123;
  }
  else
  {
    uint64_t v118 = *(void *)(v9 + 264);
    uint64_t v119 = *(void *)(v9 + 272);
    uint64_t v120 = *(void *)(v9 + 280);
    uint64_t v121 = *(void *)(v9 + 288);
    sub_100135708(v118, v119, v120, v121, *(unsigned char *)(v9 + 296));
    *(void *)(v8 + 264) = v118;
    *(void *)(v8 + 272) = v119;
    *(void *)(v8 + 280) = v120;
    *(void *)(v8 + 288) = v121;
    *(unsigned char *)(v8 + 296) = v117;
  }
  uint64_t v124 = *(unsigned __int8 *)(v9 + 336);
  uint64_t v241 = a2;
  if (v124 == 255)
  {
    uint64_t v125 = a3;
    *(_OWORD *)(v8 + 304) = *(_OWORD *)(v9 + 304);
    long long v126 = *(_OWORD *)(v9 + 320);
    long long v127 = *(_OWORD *)(v9 + 336);
    long long v128 = *(_OWORD *)(v9 + 352);
    *(_OWORD *)(v8 + 361) = *(_OWORD *)(v9 + 361);
    *(_OWORD *)(v8 + 336) = v127;
    *(_OWORD *)(v8 + 352) = v128;
    *(_OWORD *)(v8 + 320) = v126;
  }
  else
  {
    uint64_t v129 = *(void *)(v9 + 304);
    uint64_t v130 = *(void *)(v9 + 312);
    uint64_t v131 = *(void *)(v9 + 320);
    uint64_t v132 = *(void *)(v9 + 328);
    sub_100135708(v129, v130, v131, v132, v124);
    *(void *)(v8 + 304) = v129;
    *(void *)(v8 + 312) = v130;
    *(void *)(v8 + 320) = v131;
    *(void *)(v8 + 328) = v132;
    *(unsigned char *)(v8 + 336) = v124;
    int v133 = *(unsigned __int8 *)(v9 + 376);
    uint64_t v125 = a3;
    if (v133 == 255)
    {
      long long v138 = *(_OWORD *)(v9 + 344);
      long long v139 = *(_OWORD *)(v9 + 360);
      *(unsigned char *)(v8 + 376) = *(unsigned char *)(v9 + 376);
      *(_OWORD *)(v8 + 344) = v138;
      *(_OWORD *)(v8 + 360) = v139;
    }
    else
    {
      uint64_t v134 = *(void *)(v9 + 344);
      uint64_t v135 = *(void *)(v9 + 352);
      uint64_t v136 = *(void *)(v9 + 360);
      uint64_t v137 = *(void *)(v9 + 368);
      sub_100135708(v134, v135, v136, v137, *(unsigned char *)(v9 + 376));
      *(void *)(v8 + 344) = v134;
      *(void *)(v8 + 352) = v135;
      *(void *)(v8 + 360) = v136;
      *(void *)(v8 + 368) = v137;
      *(unsigned char *)(v8 + 376) = v133;
    }
  }
  uint64_t v140 = *(void *)(v9 + 384);
  uint64_t v141 = *(void *)(v9 + 392);
  uint64_t v142 = *(void *)(v9 + 400);
  uint64_t v143 = *(void *)(v9 + 408);
  uint64_t v144 = *(void *)(v9 + 416);
  unsigned __int8 v145 = *(unsigned char *)(v9 + 424);
  sub_10013F4DC(v140, v141, v142, v143, v144, v145);
  *(void *)(v8 + 384) = v140;
  *(void *)(v8 + 392) = v141;
  *(void *)(v8 + 400) = v142;
  *(void *)(v8 + 408) = v143;
  *(void *)(v8 + 416) = v144;
  *(unsigned char *)(v8 + 424) = v145;
  *(unsigned char *)(v8 + 425) = *(unsigned char *)(v9 + 425);
  a3 = v125;
  a2 = v241;
LABEL_76:
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10014056C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001405C0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100140614(uint64_t a1)
{
  return a1;
}

uint64_t sub_100140668(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001406BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  memcpy((void *)(a1 + *(int *)(a3 + 20)), (const void *)(a2 + *(int *)(a3 + 20)), 0x1AAuLL);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10014074C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (unsigned __int8 *)(a1 + v7);
  uint64_t v9 = (unsigned __int8 *)(a2 + v7);
  if (*(void *)(a1 + v7 + 8))
  {
    uint64_t v10 = *((void *)v9 + 1);
    if (v10)
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *((void *)v8 + 1) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *((void *)v9 + 3);
      *((void *)v8 + 2) = *((void *)v9 + 2);
      *((void *)v8 + 3) = v11;
      swift_bridgeObjectRelease();
      if (*((void *)v8 + 5))
      {
        uint64_t v12 = *((void *)v9 + 5);
        if (v12)
        {
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *((void *)v8 + 5) = v12;
          swift_bridgeObjectRelease();
          uint64_t v13 = *((void *)v9 + 7);
          *((void *)v8 + 6) = *((void *)v9 + 6);
          *((void *)v8 + 7) = v13;
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
        sub_10014056C((uint64_t)(v8 + 32));
      }
      long long v14 = *((_OWORD *)v9 + 3);
      *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
      *((_OWORD *)v8 + 3) = v14;
LABEL_10:
      unsigned __int8 v15 = v9[96];
      uint64_t v16 = *((void *)v8 + 8);
      uint64_t v17 = *((void *)v8 + 9);
      uint64_t v18 = *((void *)v8 + 10);
      uint64_t v19 = *((void *)v8 + 11);
      long long v20 = *((_OWORD *)v9 + 5);
      *((_OWORD *)v8 + 4) = *((_OWORD *)v9 + 4);
      *((_OWORD *)v8 + 5) = v20;
      unsigned __int8 v21 = v8[96];
      v8[96] = v15;
      sub_10013509C(v16, v17, v18, v19, v21);
      int v22 = v8[136];
      if (v22 != 255)
      {
        int v23 = v9[136];
        if (v23 != 255)
        {
          uint64_t v24 = *((void *)v8 + 13);
          uint64_t v25 = *((void *)v8 + 14);
          uint64_t v26 = *((void *)v8 + 15);
          uint64_t v27 = *((void *)v8 + 16);
          *(_OWORD *)(v8 + 104) = *(_OWORD *)(v9 + 104);
          *(_OWORD *)(v8 + 120) = *(_OWORD *)(v9 + 120);
          v8[136] = v23;
          sub_10013509C(v24, v25, v26, v27, v22);
          goto LABEL_15;
        }
        sub_1001405C0((uint64_t)(v8 + 104));
      }
      long long v28 = *(_OWORD *)(v9 + 120);
      *(_OWORD *)(v8 + 104) = *(_OWORD *)(v9 + 104);
      *(_OWORD *)(v8 + 120) = v28;
      v8[136] = v9[136];
LABEL_15:
      uint64_t v29 = v8[176];
      if (v29 == 255)
      {
LABEL_18:
        long long v31 = *((_OWORD *)v9 + 12);
        *((_OWORD *)v8 + 11) = *((_OWORD *)v9 + 11);
        *((_OWORD *)v8 + 12) = v31;
        *(_OWORD *)(v8 + 201) = *(_OWORD *)(v9 + 201);
        long long v32 = *((_OWORD *)v9 + 10);
        *((_OWORD *)v8 + 9) = *((_OWORD *)v9 + 9);
        *((_OWORD *)v8 + 10) = v32;
        goto LABEL_19;
      }
      uint64_t v30 = v9[176];
      if (v30 == 255)
      {
        sub_100140614((uint64_t)(v8 + 144));
        goto LABEL_18;
      }
      uint64_t v48 = *((void *)v8 + 18);
      uint64_t v49 = *((void *)v8 + 19);
      uint64_t v50 = *((void *)v8 + 20);
      uint64_t v51 = *((void *)v8 + 21);
      long long v52 = *((_OWORD *)v9 + 10);
      *((_OWORD *)v8 + 9) = *((_OWORD *)v9 + 9);
      *((_OWORD *)v8 + 10) = v52;
      v8[176] = v30;
      sub_10013509C(v48, v49, v50, v51, v29);
      int v53 = v8[216];
      if (v53 != 255)
      {
        int v54 = v9[216];
        if (v54 != 255)
        {
          uint64_t v55 = *((void *)v8 + 23);
          uint64_t v56 = *((void *)v8 + 24);
          uint64_t v57 = *((void *)v8 + 25);
          uint64_t v58 = *((void *)v8 + 26);
          *(_OWORD *)(v8 + 184) = *(_OWORD *)(v9 + 184);
          *(_OWORD *)(v8 + 200) = *(_OWORD *)(v9 + 200);
          v8[216] = v54;
          sub_10013509C(v55, v56, v57, v58, v53);
          goto LABEL_19;
        }
        sub_1001405C0((uint64_t)(v8 + 184));
      }
      long long v87 = *(_OWORD *)(v9 + 200);
      *(_OWORD *)(v8 + 184) = *(_OWORD *)(v9 + 184);
      *(_OWORD *)(v8 + 200) = v87;
      v8[216] = v9[216];
LABEL_19:
      unsigned __int8 v33 = v9[256];
      uint64_t v34 = *((void *)v8 + 28);
      uint64_t v35 = *((void *)v8 + 29);
      uint64_t v36 = *((void *)v8 + 30);
      uint64_t v37 = *((void *)v8 + 31);
      long long v38 = *((_OWORD *)v9 + 15);
      *((_OWORD *)v8 + 14) = *((_OWORD *)v9 + 14);
      *((_OWORD *)v8 + 15) = v38;
      unsigned __int8 v39 = v8[256];
      v8[256] = v33;
      sub_10013509C(v34, v35, v36, v37, v39);
      uint64_t v40 = v8 + 264;
      uint64_t v41 = v9 + 264;
      int v42 = v8[296];
      if (v42 != 255)
      {
        int v43 = v9[296];
        if (v43 != 255)
        {
          uint64_t v44 = *((void *)v8 + 33);
          uint64_t v45 = *((void *)v8 + 34);
          uint64_t v46 = *((void *)v8 + 35);
          uint64_t v47 = *((void *)v8 + 36);
          *uint64_t v40 = *v41;
          *(_OWORD *)(v8 + 280) = *(_OWORD *)(v9 + 280);
          v8[296] = v43;
          sub_10013509C(v44, v45, v46, v47, v42);
          goto LABEL_27;
        }
        sub_1001405C0((uint64_t)(v8 + 264));
      }
      long long v59 = *(_OWORD *)(v9 + 280);
      *uint64_t v40 = *v41;
      *(_OWORD *)(v8 + 280) = v59;
      v8[296] = v9[296];
LABEL_27:
      uint64_t v60 = v8[336];
      if (v60 != 255)
      {
        uint64_t v61 = v9[336];
        if (v61 != 255)
        {
          uint64_t v74 = *((void *)v8 + 38);
          uint64_t v75 = *((void *)v8 + 39);
          uint64_t v76 = *((void *)v8 + 40);
          uint64_t v77 = *((void *)v8 + 41);
          long long v78 = *((_OWORD *)v9 + 20);
          *((_OWORD *)v8 + 19) = *((_OWORD *)v9 + 19);
          *((_OWORD *)v8 + 20) = v78;
          v8[336] = v61;
          sub_10013509C(v74, v75, v76, v77, v60);
          long long v79 = v8 + 344;
          long long v80 = v9 + 344;
          int v81 = v8[376];
          if (v81 != 255)
          {
            int v82 = v9[376];
            if (v82 != 255)
            {
              uint64_t v83 = *((void *)v8 + 43);
              uint64_t v84 = *((void *)v8 + 44);
              uint64_t v85 = *((void *)v8 + 45);
              uint64_t v86 = *((void *)v8 + 46);
              _OWORD *v79 = *v80;
              *(_OWORD *)(v8 + 360) = *(_OWORD *)(v9 + 360);
              v8[376] = v82;
              sub_10013509C(v83, v84, v85, v86, v81);
              goto LABEL_31;
            }
            sub_1001405C0((uint64_t)(v8 + 344));
          }
          long long v88 = *(_OWORD *)(v9 + 360);
          _OWORD *v79 = *v80;
          *(_OWORD *)(v8 + 360) = v88;
          v8[376] = v9[376];
          goto LABEL_31;
        }
        sub_100140614((uint64_t)(v8 + 304));
      }
      long long v62 = *((_OWORD *)v9 + 22);
      *((_OWORD *)v8 + 21) = *((_OWORD *)v9 + 21);
      *((_OWORD *)v8 + 22) = v62;
      *(_OWORD *)(v8 + 361) = *(_OWORD *)(v9 + 361);
      long long v63 = *((_OWORD *)v9 + 20);
      *((_OWORD *)v8 + 19) = *((_OWORD *)v9 + 19);
      *((_OWORD *)v8 + 20) = v63;
LABEL_31:
      uint64_t v64 = *((void *)v9 + 52);
      unsigned __int8 v65 = v9[424];
      uint64_t v66 = *((void *)v8 + 48);
      uint64_t v67 = *((void *)v8 + 49);
      uint64_t v68 = *((void *)v8 + 50);
      uint64_t v69 = *((void *)v8 + 51);
      uint64_t v70 = *((void *)v8 + 52);
      long long v71 = *((_OWORD *)v9 + 25);
      *((_OWORD *)v8 + 24) = *((_OWORD *)v9 + 24);
      *((_OWORD *)v8 + 25) = v71;
      *((void *)v8 + 52) = v64;
      unsigned __int8 v72 = v8[424];
      v8[424] = v65;
      sub_100135188(v66, v67, v68, v69, v70, v72);
      v8[425] = v9[425];
      goto LABEL_32;
    }
    sub_100140668((uint64_t)v8);
  }
  memcpy(v8, v9, 0x1AAuLL);
LABEL_32:
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100140B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100140B34);
}

uint64_t sub_100140B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100140C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100140C18);
}

uint64_t sub_100140C18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Date();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_100140CD8()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityEndStatus()
{
  return &type metadata for LiveActivityEndStatus;
}

uint64_t sub_100140D88(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 72);
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v9 = *(void *)(a1 + 80);
  uint64_t v15 = *(void *)(a1 + 112);
  uint64_t v16 = *(void *)(a1 + 104);
  uint64_t v13 = *(void *)(a1 + 128);
  uint64_t v14 = *(void *)(a1 + 120);
  uint64_t v25 = *(void *)(a1 + 152);
  uint64_t v26 = *(void *)(a1 + 144);
  uint64_t v23 = *(void *)(a1 + 168);
  uint64_t v24 = *(void *)(a1 + 160);
  uint64_t v21 = *(void *)(a1 + 184);
  uint64_t v22 = *(void *)(a1 + 176);
  uint64_t v19 = *(void *)(a1 + 200);
  uint64_t v20 = *(void *)(a1 + 192);
  uint64_t v18 = *(void *)(a1 + 208);
  unsigned __int8 v17 = *(unsigned char *)(a1 + 216);
  uint64_t v29 = *(void *)(a1 + 232);
  uint64_t v30 = *(void *)(a1 + 224);
  uint64_t v27 = *(void *)(a1 + 248);
  uint64_t v28 = *(void *)(a1 + 240);
  uint64_t v35 = *(void *)(a1 + 272);
  uint64_t v36 = *(void *)(a1 + 264);
  uint64_t v34 = *(void *)(a1 + 280);
  uint64_t v33 = *(void *)(a1 + 288);
  uint64_t v44 = *(void *)(a1 + 312);
  uint64_t v45 = *(void *)(a1 + 304);
  uint64_t v42 = *(void *)(a1 + 328);
  uint64_t v43 = *(void *)(a1 + 320);
  uint64_t v40 = *(void *)(a1 + 344);
  uint64_t v41 = *(void *)(a1 + 336);
  uint64_t v38 = *(void *)(a1 + 360);
  uint64_t v39 = *(void *)(a1 + 352);
  uint64_t v32 = *(void *)(a1 + 368);
  unsigned __int8 v31 = *(unsigned char *)(a1 + 376);
  uint64_t v49 = *(void *)(a1 + 392);
  uint64_t v50 = *(void *)(a1 + 384);
  uint64_t v47 = *(void *)(a1 + 408);
  uint64_t v48 = *(void *)(a1 + 400);
  uint64_t v46 = *(void *)(a1 + 416);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 96);
  unsigned __int8 v6 = *(unsigned char *)(a1 + 136);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 256);
  unsigned __int8 v12 = *(unsigned char *)(a1 + 296);
  unsigned __int8 v37 = *(unsigned char *)(a1 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100140FF8(v2, v3);
  sub_100135708(v11, v10, v9, v4, v5);
  sub_10014103C(v16, v15, v14, v13, v6);
  sub_100141050(v26, v25, v24, v23, v22, v21, v20, v19, v18, v17, (void (*)(void))sub_100135708, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_10014103C);
  sub_100135708(v30, v29, v28, v27, v7);
  sub_10014103C(v36, v35, v34, v33, v12);
  sub_100141050(v45, v44, v43, v42, v41, v40, v39, v38, v32, v31, (void (*)(void))sub_100135708, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_10014103C);
  sub_10013F4DC(v50, v49, v48, v47, v46, v37);
  return a1;
}

uint64_t sub_100140FF8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10014103C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 0xFF) {
    return sub_100135708(a1, a2, a3, a4, a5);
  }
  return a1;
}

void sub_100141050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, void (*a11)(void), void (*a12)(uint64_t, uint64_t, uint64_t, uint64_t, void))
{
  if (a5 != -1)
  {
    a11();
    a12(a6, a7, a8, a9, a10);
  }
}

uint64_t sub_1001410E8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10013385C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10014114C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100141184()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 88))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_10013509C(*(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(unsigned char *)(v0 + 144));
  int v1 = *(unsigned __int8 *)(v0 + 184);
  if (v1 != 255) {
    sub_10013509C(*(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), v1);
  }
  uint64_t v2 = *(unsigned __int8 *)(v0 + 224);
  if (v2 != 255)
  {
    sub_10013509C(*(void *)(v0 + 192), *(void *)(v0 + 200), *(void *)(v0 + 208), *(void *)(v0 + 216), v2);
    int v3 = *(unsigned __int8 *)(v0 + 264);
    if (v3 != 255) {
      sub_10013509C(*(void *)(v0 + 232), *(void *)(v0 + 240), *(void *)(v0 + 248), *(void *)(v0 + 256), v3);
    }
  }
  sub_10013509C(*(void *)(v0 + 272), *(void *)(v0 + 280), *(void *)(v0 + 288), *(void *)(v0 + 296), *(unsigned char *)(v0 + 304));
  int v4 = *(unsigned __int8 *)(v0 + 344);
  if (v4 != 255) {
    sub_10013509C(*(void *)(v0 + 312), *(void *)(v0 + 320), *(void *)(v0 + 328), *(void *)(v0 + 336), v4);
  }
  uint64_t v5 = *(unsigned __int8 *)(v0 + 384);
  if (v5 != 255)
  {
    sub_10013509C(*(void *)(v0 + 352), *(void *)(v0 + 360), *(void *)(v0 + 368), *(void *)(v0 + 376), v5);
    int v6 = *(unsigned __int8 *)(v0 + 424);
    if (v6 != 255) {
      sub_10013509C(*(void *)(v0 + 392), *(void *)(v0 + 400), *(void *)(v0 + 408), *(void *)(v0 + 416), v6);
    }
  }
  sub_100135188(*(void *)(v0 + 432), *(void *)(v0 + 440), *(void *)(v0 + 448), *(void *)(v0 + 456), *(void *)(v0 + 464), *(unsigned char *)(v0 + 472));

  return _swift_deallocObject(v0, 475, 7);
}

uint64_t sub_1001412B4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  int v4 = (void *)(v0 + 48);
  char v5 = *(unsigned char *)(v0 + 474);
  int v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *int v6 = v1;
  v6[1] = sub_100141364;
  return sub_10013B650((int)v6, v7, v8, v2, v3, v4, v5);
}

uint64_t sub_100141364()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unint64_t sub_100141458()
{
  unint64_t result = qword_10029A818;
  if (!qword_10029A818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A818);
  }
  return result;
}

uint64_t sub_1001414AC(uint64_t a1)
{
  long long v13 = *(_OWORD *)(a1 + 384);
  long long v14 = *(_OWORD *)(a1 + 400);
  long long v11 = *(_OWORD *)(a1 + 352);
  long long v12 = *(_OWORD *)(a1 + 368);
  long long v9 = *(_OWORD *)(a1 + 320);
  long long v10 = *(_OWORD *)(a1 + 336);
  long long v7 = *(_OWORD *)(a1 + 288);
  long long v8 = *(_OWORD *)(a1 + 304);
  long long v5 = *(_OWORD *)(a1 + 256);
  long long v6 = *(_OWORD *)(a1 + 272);
  long long v3 = *(_OWORD *)(a1 + 224);
  long long v4 = *(_OWORD *)(a1 + 240);
  sub_100141558(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(_OWORD *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(_OWORD *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    BYTE8(v7),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    BYTE8(v12),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    *(void *)(a1 + 416),
    *(_WORD *)(a1 + 424));
  return a1;
}

void sub_100141558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned __int8 a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unsigned __int8 a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unsigned __int8 a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,unsigned __int8 a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,unsigned __int8 a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,unsigned __int8 a54)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100135058(a5, a6);
    sub_10013509C(a9, a10, a11, a12, a13);
    sub_1001350FC(a14, a15, a16, a17, a18);
    sub_100141050(a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, (void (*)(void))sub_10013509C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001350FC);
    sub_10013509C(a29, a30, a31, a32, a33);
    sub_1001350FC(a34, a35, a36, a37, a38);
    sub_100141050(a39, a40, a41, a42, a43, a44, a45, a46, a47, a48, (void (*)(void))sub_10013509C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1001350FC);
    sub_100135188(a49, a50, a51, a52, a53, a54);
  }
}

uint64_t sub_1001417F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100141844(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_100141880(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001418C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_100141928()
{
  if (!UIApp) {
    return 0;
  }
  self;
  uint64_t v1 = (void *)swift_dynamicCastObjCClass();
  if (!v1) {
    return 0;
  }
  id result = [v1 setupController];
  if (result)
  {
    uint64_t v3 = result;
    id v4 = [result appleIDSignInModel];

    if (v4)
    {
      if ([v4 benefitsControllerPresented]
        && ([v4 cdpRepairRequiredOnBenefitsController] & 1) != 0)
      {
        v6.receiver = v0;
        v6.super_class = (Class)&OBJC_METACLASS___COSCDPPostUpsellRepairController;
        [super controllerNeedsToRun];

        return v5;
      }
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CDPPostUpsellRepairController()
{
  return self;
}

id sub_100141AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    NSString v12 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    NSString v13 = 0;
    goto LABEL_6;
  }
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_6:
  v16.receiver = v7;
  v16.super_class = (Class)type metadata accessor for CDPPostUpsellRepairController();
  id v14 = [super initWithTitle:v11 detailText:v12 symbolName:v13 contentLayout:a7];

  return v14;
}

id sub_100141D34()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CDPPostUpsellRepairController();
  return [super dealloc];
}

uint64_t static HeadphoneNotificationChartFactory.create()()
{
  uint64_t v0 = (void *)*HeadphoneAudioNotificationModel.shared.unsafeMutableAddressor();
  type metadata accessor for HeadphoneAudioNotificationModel();
  sub_100144628(&qword_10029A468, (void (*)(uint64_t))type metadata accessor for HeadphoneAudioNotificationModel);
  id v1 = v0;
  ObservedObject.init(wrappedValue:)();
  id v2 = objc_allocWithZone((Class)sub_10013385C(&qword_10029A8D8));
  return UIHostingController.init(rootView:)();
}

id HeadphoneNotificationChartFactory.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

id HeadphoneNotificationChartFactory.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeadphoneNotificationChartFactory();
  return [super init];
}

id HeadphoneNotificationChartFactory.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeadphoneNotificationChartFactory();
  return [super dealloc];
}

uint64_t type metadata accessor for HeadphoneNotificationChartFactory()
{
  return self;
}

uint64_t sub_100141FC8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v65 = a1;
  uint64_t v81 = a3;
  uint64_t v71 = sub_10013385C(&qword_10029A8E0);
  uint64_t v69 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v66 = (char *)v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_10013385C(&qword_10029A8E8);
  __chkstk_darwin(v68);
  long long v7 = (char *)v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10013385C(&qword_10029A8F0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v74 = v8;
  uint64_t v75 = v9;
  __chkstk_darwin(v8);
  uint64_t v67 = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10013385C(&qword_10029A8F8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v78 = v11;
  uint64_t v79 = v12;
  __chkstk_darwin(v11);
  uint64_t v70 = (char *)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_10013385C(&qword_10029A900);
  uint64_t v77 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  unsigned __int8 v72 = (char *)v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_10013385C(&qword_10029A908) - 8;
  __chkstk_darwin(v76);
  long long v73 = (char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_super v16 = *(uint64_t (**)(void))((swift_isaMask & *a2) + 0x60);
  unsigned __int8 v17 = a2;
  uint64_t v18 = v16();

  uint64_t v88 = v18;
  v63[3] = swift_getKeyPath();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = v17;
  uint64_t v64 = v17;
  v63[2] = sub_10013385C(&qword_10029A450);
  v63[1] = sub_10013385C(&qword_10029A910);
  sub_100138990(&qword_10029A918, &qword_10029A450);
  sub_100144628(&qword_10029A920, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v20 = sub_100137C90(&qword_10029A928);
  uint64_t v21 = sub_100137C90(&qword_10029A930);
  uint64_t v22 = sub_100137C90(&qword_10029A938);
  uint64_t v84 = type metadata accessor for BarMark();
  uint64_t v85 = &protocol witness table for BarMark;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v24 = sub_10014445C();
  uint64_t v84 = v22;
  uint64_t v85 = &type metadata for String;
  uint64_t v86 = OpaqueTypeConformance2;
  long long v87 = (void *)v24;
  uint64_t v25 = swift_getOpaqueTypeConformance2();
  uint64_t v84 = v21;
  uint64_t v85 = &type metadata for String;
  uint64_t v86 = v25;
  long long v87 = (void *)v24;
  uint64_t v26 = swift_getOpaqueTypeConformance2();
  uint64_t v84 = v20;
  uint64_t v85 = &type metadata for Text;
  uint64_t v86 = v26;
  long long v87 = &protocol witness table for Text;
  swift_getOpaqueTypeConformance2();
  uint64_t v27 = v66;
  Chart.init<A, B, C>(_:id:content:)();
  LOBYTE(v21) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v36 = v69;
  uint64_t v37 = v71;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v7, v27, v71);
  uint64_t v38 = v68;
  uint64_t v39 = &v7[*(int *)(v68 + 36)];
  char *v39 = v21;
  *((void *)v39 + 1) = v29;
  *((void *)v39 + 2) = v31;
  *((void *)v39 + 3) = v33;
  *((void *)v39 + 4) = v35;
  v39[40] = 0;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v37);
  unint64_t v40 = sub_1001444B0();
  uint64_t v41 = v67;
  View.chartYAxis(_:)();
  sub_1001378A8((uint64_t)v7, &qword_10029A8E8);
  uint64_t v82 = v65;
  id v83 = v64;
  uint64_t v42 = sub_10013385C(&qword_10029A958);
  uint64_t v84 = v38;
  uint64_t v85 = (void *)v40;
  uint64_t v43 = swift_getOpaqueTypeConformance2();
  uint64_t v44 = sub_100138990(&qword_10029A960, &qword_10029A958);
  uint64_t v45 = v70;
  uint64_t v46 = v74;
  View.chartXAxis<A>(content:)();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v41, v46);
  sub_10013385C(&qword_10029A968);
  uint64_t v84 = v46;
  uint64_t v85 = (void *)v42;
  uint64_t v86 = v43;
  long long v87 = (void *)v44;
  swift_getOpaqueTypeConformance2();
  sub_100144558();
  uint64_t v47 = v72;
  uint64_t v48 = v78;
  View.chartPlotStyle<A>(content:)();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v45, v48);
  uint64_t v49 = static Color.accentColor.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v51 = v77;
  uint64_t v52 = (uint64_t)v73;
  uint64_t v53 = v80;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v73, v47, v80);
  int v54 = (uint64_t *)(v52 + *(int *)(v76 + 44));
  uint64_t *v54 = KeyPath;
  v54[1] = v49;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v47, v53);
  LOBYTE(v49) = static Edge.Set.all.getter();
  uint64_t v55 = v81;
  sub_1001410E8(v52, v81, &qword_10029A908);
  uint64_t v56 = v55 + *(int *)(sub_10013385C(&qword_10029A990) + 36);
  *(unsigned char *)uint64_t v56 = v49;
  *(_OWORD *)(v56 + 8) = xmmword_1001AB9A0;
  __asm { FMOV            V0.2D, #9.0 }
  *(_OWORD *)(v56 + 24) = _Q0;
  *(unsigned char *)(v56 + 40) = 0;
  return sub_1001378A8(v52, &qword_10029A908);
}

uint64_t sub_100142858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v74 = a2;
  uint64_t v75 = a3;
  uint64_t v80 = a1;
  uint64_t v78 = a4;
  uint64_t v4 = sub_10013385C(&qword_10029A458) - 8;
  __chkstk_darwin(v4);
  long long v73 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AnnotationPosition();
  uint64_t v76 = *(void *)(v6 - 8);
  uint64_t v77 = v6;
  __chkstk_darwin(v6);
  unsigned __int8 v72 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for RoundedCornerStyle();
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v67 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10013385C(&qword_10029AA48);
  __chkstk_darwin(v9 - 8);
  long long v63 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10013385C(&qword_10029AA20);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Calendar.Component();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unsigned __int8 v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10013385C(&qword_10029AA50);
  __chkstk_darwin(v18 - 8);
  uint64_t v61 = type metadata accessor for BarMark();
  uint64_t v62 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v58 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_10013385C(&qword_10029A938);
  uint64_t v65 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  long long v59 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_10013385C(&qword_10029A930);
  uint64_t v66 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v60 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_10013385C(&qword_10029A928);
  uint64_t v71 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v81 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for Calendar.Component.month(_:), v14);
  uint64_t v23 = type metadata accessor for Calendar();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v13, 1, 1, v23);
  uint64_t v24 = v80;
  static PlottableValue.value<>(_:_:unit:calendar:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001378A8((uint64_t)v13, &qword_10029AA20);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v25 = (int *)v4;
  uint64_t v57 = *(int *)(v4 + 56);
  uint64_t v26 = v24;
  uint64_t v85 = *(void *)(v24 + v57);
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v56 = type metadata accessor for Date();
  uint64_t v27 = v58;
  BarMark.init<A, B>(x:y:width:height:stacking:)();
  uint64_t v28 = v68;
  uint64_t v29 = v67;
  uint64_t v30 = v69;
  (*(void (**)(char *, void, uint64_t))(v68 + 104))(v67, enum case for RoundedCornerStyle.continuous(_:), v69);
  uint64_t v31 = v59;
  uint64_t v32 = v61;
  ChartContent.cornerRadius(_:style:)();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v27, v32);
  uint64_t v33 = (uint64_t *)(v26 + v25[22]);
  uint64_t v34 = (void *)v33[1];
  uint64_t v85 = *v33;
  uint64_t v86 = v34;
  uint64_t v89 = v32;
  uint64_t v90 = &protocol witness table for BarMark;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v36 = sub_10014445C();
  uint64_t v37 = v60;
  uint64_t v38 = v64;
  ChartContent.accessibilityValue<A>(_:)();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v31, v38);
  uint64_t v39 = (uint64_t *)(v26 + v25[18]);
  unint64_t v40 = (void *)v39[1];
  uint64_t v89 = *v39;
  uint64_t v90 = v40;
  uint64_t v85 = v38;
  uint64_t v86 = &type metadata for String;
  uint64_t v87 = OpaqueTypeConformance2;
  unint64_t v88 = v36;
  uint64_t v41 = swift_getOpaqueTypeConformance2();
  uint64_t v42 = v79;
  ChartContent.accessibilityLabel<A>(_:)();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v37, v42);
  uint64_t v43 = v72;
  static AnnotationPosition.top.getter();
  uint64_t v44 = v25[14];
  uint64_t v45 = v25[18];
  uint64_t v46 = v25;
  uint64_t v47 = (uint64_t)v73;
  uint64_t v48 = &v73[v45];
  uint64_t v49 = &v73[v46[22]];
  uint64_t v50 = v80;
  (*(void (**)(char *, uint64_t))(*(void *)(v56 - 8) + 16))(v73, v80);
  *(void *)(v47 + v44) = *(void *)(v50 + v57);
  uint64_t v51 = v39[1];
  *(void *)uint64_t v48 = *v39;
  *((void *)v48 + 1) = v51;
  uint64_t v52 = v33[1];
  *(void *)uint64_t v49 = *v33;
  *((void *)v49 + 1) = v52;
  uint64_t v82 = v47;
  uint64_t v83 = v74;
  uint64_t v84 = v75;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static Alignment.center.getter();
  uint64_t v85 = v79;
  uint64_t v86 = &type metadata for String;
  uint64_t v87 = v41;
  unint64_t v88 = v36;
  swift_getOpaqueTypeConformance2();
  uint64_t v53 = v70;
  int v54 = v81;
  ChartContent.annotation<A>(position:alignment:spacing:content:)();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v43, v77);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v54, v53);
  return sub_1001378A8(v47, &qword_10029A458);
}

uint64_t sub_100143288@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = type metadata accessor for Locale();
  __chkstk_darwin(v3 - 8);
  unint64_t v40 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_10013385C(&qword_10029AA58);
  __chkstk_darwin(v41);
  uint64_t v5 = sub_10013385C(&qword_10029A458);
  uint64_t v6 = (int *)__chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v6[14];
  uint64_t v10 = v6[18];
  uint64_t v11 = &v8[v10];
  uint64_t v12 = v6[22];
  uint64_t v13 = &v8[v12];
  uint64_t v14 = (void *)(a1 + v10);
  uint64_t v15 = (void *)(a1 + v12);
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v8, a1, v16);
  uint64_t v18 = *(void *)(a1 + v9);
  *(void *)&v8[v9] = v18;
  uint64_t v19 = v14[1];
  *(void *)uint64_t v11 = *v14;
  *((void *)v11 + 1) = v19;
  uint64_t v20 = v15[1];
  *(void *)uint64_t v13 = *v15;
  *((void *)v13 + 1) = v20;
  uint64_t v43 = v18;
  static Locale.autoupdatingCurrent.getter();
  sub_100144C18();
  IntegerFormatStyle.init(locale:)();
  sub_100138990(&qword_10029AA68, &qword_10029AA58);
  uint64_t v21 = Text.init<A>(_:format:)();
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v16);
  id v26 = [self tertiaryLabelColor];
  Color.init(_:)();
  uint64_t v27 = Text.foregroundColor(_:)();
  uint64_t v29 = v28;
  LOBYTE(v17) = v30;
  swift_release();
  LOBYTE(a1) = v17 & 1;
  sub_100144C6C(v21, v23, v25);
  swift_bridgeObjectRelease();
  static Font.footnote.getter();
  uint64_t v31 = Text.font(_:)();
  uint64_t v33 = v32;
  char v35 = v34;
  uint64_t v37 = v36;
  swift_release();
  sub_100144C6C(v27, v29, a1);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v39 = v42;
  *uint64_t v42 = v31;
  v39[1] = v33;
  *((unsigned char *)v39 + 16) = v35 & 1;
  v39[3] = v37;
  return result;
}

uint64_t sub_1001435A8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  v21[1] = a3;
  uint64_t v5 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10013385C(&qword_10029AA20);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Calendar.Component();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AxisMarkValues();
  __chkstk_darwin(v14 - 8);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for Calendar.Component.month(_:), v10);
  uint64_t v15 = type metadata accessor for Calendar();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
  static AxisMarkValues.stride(by:count:roundLowerBound:roundUpperBound:calendar:)();
  sub_1001378A8((uint64_t)v9, &qword_10029AA20);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  id v17 = a2;
  static AxisMarkPreset.automatic.getter();
  static AxisMarkPosition.automatic.getter();
  sub_10013385C(&qword_10029AA28);
  uint64_t v18 = sub_100137C90(&qword_10029AA30);
  uint64_t v19 = sub_100138990(&qword_10029AA38, &qword_10029AA30);
  v21[2] = v18;
  v21[3] = v19;
  swift_getOpaqueTypeConformance2();
  return AxisMarks.init(preset:position:values:content:)();
}

uint64_t sub_100143900()
{
  uint64_t v0 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_10013385C(&qword_10029AA30);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = sub_100144224();
  static AxisValueLabelCollisionResolution.automatic.getter();
  static AxisValueLabelOrientation.automatic.getter();
  sub_100144BBC();
  AxisValueLabel.init<A>(format:centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:)();
  static Font.footnote.getter();
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  swift_release();
  sub_100138990(&qword_10029AA38, &qword_10029AA30);
  AxisMark.font(_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100143B44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = static Alignment.bottom.getter();
  uint64_t v6 = v5;
  uint64_t v7 = a2 + *(int *)(sub_10013385C(&qword_10029A968) + 36);
  sub_100143C00(v7);
  uint64_t v8 = (uint64_t *)(v7 + *(int *)(sub_10013385C(&qword_10029A988) + 36));
  *uint64_t v8 = v4;
  v8[1] = v6;
  uint64_t v9 = type metadata accessor for ChartPlotContent();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);

  return v10(a2, a1, v9);
}

uint64_t sub_100143C00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = type metadata accessor for EnvironmentValues();
  uint64_t v25 = *(void *)(v1 - 8);
  uint64_t v26 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Divider();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10013385C(&qword_10029AA08);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10013385C(&qword_10029AA10);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  Divider.init()();
  id v16 = [self separatorColor];
  uint64_t v17 = Color.init(_:)();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v11, v7, v4);
  uint64_t v19 = (uint64_t *)&v11[*(int *)(v9 + 44)];
  uint64_t *v19 = KeyPath;
  v19[1] = v17;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  EnvironmentValues.init()();
  EnvironmentValues.pixelLength.getter();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v3, v26);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1001410E8((uint64_t)v11, (uint64_t)v15, &qword_10029AA08);
  uint64_t v20 = &v15[*(int *)(v13 + 44)];
  long long v21 = v29;
  *(_OWORD *)uint64_t v20 = v28;
  *((_OWORD *)v20 + 1) = v21;
  *((_OWORD *)v20 + 2) = v30;
  sub_1001378A8((uint64_t)v11, &qword_10029AA08);
  uint64_t v22 = v27;
  sub_1001410E8((uint64_t)v15, v27, &qword_10029AA10);
  *(_OWORD *)(v22 + *(int *)(sub_10013385C(&qword_10029AA18) + 36)) = xmmword_1001AB9B0;
  return sub_1001378A8((uint64_t)v15, &qword_10029AA10);
}

uint64_t sub_100143F30()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100143F4C@<X0>(uint64_t a1@<X8>)
{
  return sub_100141FC8(*(void *)v1, *(void **)(v1 + 8), a1);
}

void sub_100143F54(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v5 = [v3 stringFromDate:isa];

  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  *a1 = v6;
  a1[1] = v8;
}

void sub_100143FCC()
{
}

void sub_100144030()
{
}

Swift::Int sub_100144094()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  id v2 = v1;
  NSObject.hash(into:)();

  return Hasher._finalize()();
}

void sub_1001440E4()
{
  id v1 = *v0;
  NSObject.hash(into:)();
}

Swift::Int sub_10014413C()
{
  id v1 = *v0;
  Hasher.init(_seed:)();
  id v2 = v1;
  NSObject.hash(into:)();

  return Hasher._finalize()();
}

uint64_t sub_100144188()
{
  return static NSObject.== infix(_:_:)() & 1;
}

uint64_t sub_1001441CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001441F8()
{
  return EnvironmentValues.foregroundColor.setter();
}

id sub_100144224()
{
  uint64_t v0 = type metadata accessor for Calendar();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [objc_allocWithZone((Class)NSDateFormatter) init];
  static Locale.autoupdatingCurrent.getter();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  [v8 setLocale:isa];

  static Calendar.autoupdatingCurrent.getter();
  Class v10 = Calendar._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  [v8 setCalendar:v10];

  NSString v11 = String._bridgeToObjectiveC()();
  [v8 setLocalizedDateFormatFromTemplate:v11];

  return v8;
}

uint64_t sub_10014441C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100144454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100142858(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_10014445C()
{
  unint64_t result = qword_10029A940;
  if (!qword_10029A940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A940);
  }
  return result;
}

unint64_t sub_1001444B0()
{
  unint64_t result = qword_10029A948;
  if (!qword_10029A948)
  {
    sub_100137C90(&qword_10029A8E8);
    sub_100138990(&qword_10029A950, &qword_10029A8E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A948);
  }
  return result;
}

uint64_t sub_100144550@<X0>(uint64_t a1@<X8>)
{
  return sub_1001435A8(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

unint64_t sub_100144558()
{
  unint64_t result = qword_10029A970;
  if (!qword_10029A970)
  {
    sub_100137C90(&qword_10029A968);
    sub_100144628(&qword_10029A978, (void (*)(uint64_t))&type metadata accessor for ChartPlotContent);
    sub_100138990(&qword_10029A980, &qword_10029A988);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A970);
  }
  return result;
}

uint64_t sub_100144628(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100144670()
{
  unint64_t result = qword_10029A998;
  if (!qword_10029A998)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10029A998);
  }
  return result;
}

uint64_t sub_1001446B0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1001446D0()
{
  unint64_t result = qword_10029A9A0;
  if (!qword_10029A9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A9A0);
  }
  return result;
}

unint64_t sub_100144728()
{
  unint64_t result = qword_10029A9A8;
  if (!qword_10029A9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A9A8);
  }
  return result;
}

unint64_t sub_100144780()
{
  unint64_t result = qword_10029A9B0;
  if (!qword_10029A9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A9B0);
  }
  return result;
}

unint64_t sub_1001447D8()
{
  unint64_t result = qword_10029A9B8;
  if (!qword_10029A9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A9B8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for HeadphoneNotificationChart(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  id v4 = v3;
  return a1;
}

void destroy for HeadphoneNotificationChart(uint64_t a1)
{
}

void *assignWithCopy for HeadphoneNotificationChart(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = (void *)a2[1];
  id v4 = (void *)a1[1];
  a1[1] = v3;
  id v5 = v3;

  return a1;
}

__n128 initializeWithTake for HeadphoneNotificationChart(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for HeadphoneNotificationChart(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  id v4 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for HeadphoneNotificationChart(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneNotificationChart(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneNotificationChart()
{
  return &type metadata for HeadphoneNotificationChart;
}

ValueMetadata *type metadata accessor for DateFormatterFormatStyle()
{
  return &type metadata for DateFormatterFormatStyle;
}

unint64_t sub_10014498C()
{
  unint64_t result = qword_10029A9E8;
  if (!qword_10029A9E8)
  {
    sub_100137C90(&qword_10029A990);
    sub_100144A08();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A9E8);
  }
  return result;
}

unint64_t sub_100144A08()
{
  unint64_t result = qword_10029A9F0;
  if (!qword_10029A9F0)
  {
    sub_100137C90(&qword_10029A908);
    sub_100137C90(&qword_10029A8F8);
    sub_100137C90(&qword_10029A968);
    sub_100137C90(&qword_10029A8F0);
    sub_100137C90(&qword_10029A958);
    sub_100137C90(&qword_10029A8E8);
    sub_1001444B0();
    swift_getOpaqueTypeConformance2();
    sub_100138990(&qword_10029A960, &qword_10029A958);
    swift_getOpaqueTypeConformance2();
    sub_100144558();
    swift_getOpaqueTypeConformance2();
    sub_100138990(&qword_10029A9F8, &qword_10029AA00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029A9F0);
  }
  return result;
}

unint64_t sub_100144BBC()
{
  unint64_t result = qword_10029AA40;
  if (!qword_10029AA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029AA40);
  }
  return result;
}

uint64_t sub_100144C10@<X0>(uint64_t *a1@<X8>)
{
  return sub_100143288(*(void *)(v1 + 16), a1);
}

unint64_t sub_100144C18()
{
  unint64_t result = qword_10029AA60;
  if (!qword_10029AA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029AA60);
  }
  return result;
}

uint64_t sub_100144C6C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100144C84()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

void sub_100144CB8(char a1)
{
  int v3 = a1 & 1;
  swift_beginAccess();
  int v4 = *(unsigned __int8 *)(v1 + 16);
  *(unsigned char *)(v1 + 16) = a1;
  if (v4 != v3)
  {
    if (a1)
    {
      sub_1001461F4();
    }
    else
    {
      sub_10014537C();
      uint64_t v5 = *(void *)(v1 + 32);
      if (v5)
      {
        uint64_t v6 = self;
        swift_unknownObjectRetain();
        id v7 = [v6 defaultCenter];
        [v7 removeObserver:v5];
        swift_unknownObjectRelease();
      }
      uint64_t v8 = *(void *)(v1 + 24);
      if (v8)
      {
        uint64_t v9 = self;
        swift_unknownObjectRetain();
        id v10 = [v9 defaultCenter];
        [v10 removeObserver:v8];
        swift_unknownObjectRelease();
      }
    }
  }
}

void (*sub_100144DCC(void *a1))(uint64_t a1)
{
  int v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  swift_beginAccess();
  *((unsigned char *)v3 + 32) = *(unsigned char *)(v1 + 16);
  return sub_100144E40;
}

void sub_100144E40(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  sub_100144CB8(*(unsigned char *)(*(void *)a1 + 32));

  free(v1);
}

double sub_100144E80()
{
  double v0 = 10.0;
  if (UIApp)
  {
    self;
    uint64_t v1 = (void *)swift_dynamicCastObjCClass();
    if (v1)
    {
      if ([v1 shouldConsiderHoldingSuspendAssertion]) {
        return 600.0;
      }
      else {
        return 10.0;
      }
    }
  }
  return v0;
}

void sub_100144EFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(uint64_t (**)(uint64_t))(*v0 + 120))(v4))
  {
    if (v0[5])
    {
      uint64_t v7 = LiveActivitySetupLogger.unsafeMutableAddressor();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v7, v2);
      uint64_t v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        id v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "There is an existing suspend assertion!", v10, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
    else
    {
      uint64_t v11 = getpid();
      id v12 = objc_allocWithZone((Class)BKSProcessAssertion);
      NSString v13 = String._bridgeToObjectiveC()();
      aBlock[4] = sub_100145180;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100146714;
      aBlock[3] = &unk_100248440;
      uint64_t v14 = _Block_copy(aBlock);
      swift_release();
      id v15 = [v12 initWithPID:v11 flags:1 reason:10004 name:v13 withHandler:v14];
      _Block_release(v14);

      id v16 = (void *)v1[5];
      v1[5] = v15;
    }
    sub_100145600();
  }
}

uint64_t sub_100145180(char a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = LiveActivitySetupLogger.unsafeMutableAddressor();
  id v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  if (a1)
  {
    v10(v8, v9, v2);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v11, v12))
    {
      uint64_t v6 = v8;
      goto LABEL_8;
    }
    NSString v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Successfully took suspend assertion.", v13, 2u);
    uint64_t v6 = v8;
    goto LABEL_6;
  }
  v10(v6, v9, v2);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v14))
  {
    id v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v14, "Unable to take suspend assertion.", v15, 2u);
LABEL_6:
    swift_slowDealloc();
  }
LABEL_8:

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

void sub_10014537C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v20 - v7;
  if (*(void *)(v1 + 40))
  {
    uint64_t v9 = LiveActivitySetupLogger.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v9, v2);
    id v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Invalidating suspend assertion", v12, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    NSString v13 = *(void **)(v1 + 40);
    if (v13)
    {
      [v13 invalidate];
      os_log_type_t v14 = *(void **)(v1 + 40);
    }
    else
    {
      os_log_type_t v14 = 0;
    }
    *(void *)(v1 + 40) = 0;
  }
  if (*(void *)(v1 + 48))
  {
    uint64_t v15 = LiveActivitySetupLogger.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v15, v2);
    id v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Invalidating assertion expiration timer", v18, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    [*(id *)(v1 + 48) invalidate];
    uint64_t v19 = *(void **)(v1 + 48);
    *(void *)(v1 + 48) = 0;
  }
}

void sub_100145600()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[5])
  {
    sub_100145B00();
    uint64_t v6 = LiveActivitySetupLogger.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
    swift_retain();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 134217984;
      aBlock[0] = (*(double (**)(void))(*v0 + 144))();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Creating assertion timer with interval of: %f", v9, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    id v10 = self;
    double v11 = (*(double (**)(void))(*v0 + 144))();
    uint64_t v12 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_100146768;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100145A98;
    aBlock[3] = &unk_100248418;
    NSString v13 = _Block_copy(aBlock);
    swift_release();
    id v14 = [v10 scheduledTimerWithTimeInterval:0 repeats:v13 block:v11];
    _Block_release(v13);
    uint64_t v15 = (void *)v1[6];
    void v1[6] = v14;
  }
}

uint64_t sub_100145904()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = LiveActivitySetupLogger.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Suspend assertion invalidation time reached", v7, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10014537C();
    return swift_release();
  }
  return result;
}

void sub_100145A98(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_100145B00()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + 48))
  {
    uint64_t v6 = LiveActivitySetupLogger.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Invalidating assertion expiration timer", v9, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    [*(id *)(v1 + 48) invalidate];
    id v10 = *(void **)(v1 + 48);
    *(void *)(v1 + 48) = 0;
  }
}

uint64_t sub_100145C80()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = LiveActivitySetupLogger.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  os_log_type_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)id v10 = 136315138;
    uint64_t v22 = v10 + 4;
    uint64_t v23 = v11;
    aBlock[0] = v2;
    swift_getMetatypeMetadata();
    uint64_t v12 = sub_100146010((uint64_t)aBlock, 0xD000000000000022, (void *)0x8000000100224070);
    aBlock[0] = sub_10013E7DC(v12, v13, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  id v14 = [self defaultCenter];
  id v15 = [self mainQueue];
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = v14;
  aBlock[4] = sub_100146668;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100146100;
  aBlock[3] = &unk_1002483F0;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = v14;
  swift_release();
  id v20 = [v19 addObserverForName:UIApplicationWillEnterForegroundNotification object:0 queue:v15 usingBlock:v18];

  _Block_release(v18);
  v1[3] = v20;
  return swift_unknownObjectRelease();
}

uint64_t sub_100146010(uint64_t a1, uint64_t a2, void *a3)
{
  __chkstk_darwin(a1);
  (*(void (**)(char *))(v6 + 16))((char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11[0] = String.init<A>(describing:)();
  v11[1] = v7;
  v8._uint64_t countAndFlagsBits = 46;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  v9._uint64_t countAndFlagsBits = a2;
  v9._object = a3;
  String.append(_:)(v9);
  return v11[0];
}

uint64_t sub_100146100(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1001461F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = LiveActivitySetupLogger.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)id v10 = 136315138;
    uint64_t v22 = v10 + 4;
    uint64_t v23 = v11;
    aBlock[0] = v2;
    swift_getMetatypeMetadata();
    uint64_t v12 = sub_100146010((uint64_t)aBlock, 0xD000000000000022, (void *)0x80000001002240F0);
    aBlock[0] = sub_10013E7DC(v12, v13, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  id v14 = [self defaultCenter];
  id v15 = [self mainQueue];
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = v14;
  aBlock[4] = sub_1001467B4;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100146100;
  aBlock[3] = &unk_100248490;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = v14;
  swift_release();
  id v20 = [v19 addObserverForName:UIApplicationDidEnterBackgroundNotification object:0 queue:v15 usingBlock:v18];

  _Block_release(v18);
  v1[4] = v20;
  return swift_unknownObjectRelease();
}

uint64_t sub_100146584()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocClassInstance(v0, 56, 7);
}

double sub_1001465D4()
{
  uint64_t v0 = swift_allocObject();
  *(unsigned char *)(v0 + 16) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  return result;
}

uint64_t type metadata accessor for LiveActivityProcessAssertion()
{
  return self;
}

uint64_t sub_10014662C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100146668()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(result + 24);
    if (v3)
    {
      swift_unknownObjectRetain();
      [v1 removeObserver:v3];
      sub_10014537C();
      sub_1001461F4();
      swift_unknownObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1001466FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10014670C()
{
  return swift_release();
}

uint64_t sub_100146714(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_100146768()
{
  return sub_100145904();
}

uint64_t sub_100146774()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001467B4()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(result + 32);
    if (v3)
    {
      swift_unknownObjectRetain();
      [v1 removeObserver:v3];
      sub_100144EFC();
      sub_100145C80();
      swift_unknownObjectRelease();
    }
    return swift_release();
  }
  return result;
}

BOOL sub_100146860(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_100146878()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1001468C0()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1001468EC()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

unint64_t sub_100146934()
{
  unint64_t result = qword_10029ABE0;
  if (!qword_10029ABE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029ABE0);
  }
  return result;
}

const char *sub_100146988()
{
  return "Bridge";
}

const char *sub_10014699C()
{
  if (*v0) {
    return "OfferCDPRepair";
  }
  else {
    return "SetupLiveActivity";
  }
}

unsigned char *initializeBufferWithCopyOfBuffer for FeatureFlags(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FeatureFlags(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FeatureFlags(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100146B38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_100146B60(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100146B68(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlags()
{
  return &type metadata for FeatureFlags;
}

uint64_t sub_100146B84()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10014A77C(v0, qword_10029BEE0);
  sub_100146C00(v0, (uint64_t)qword_10029BEE0);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100146C00(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void *sub_100146C38()
{
  Swift::UInt v1 = (void **)(v0 + OBJC_IVAR___COSCDPRepairController_cdpEncryptionHelper);
  swift_beginAccess();
  int v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_100146C88(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR___COSCDPRepairController_cdpEncryptionHelper);
  swift_beginAccess();
  unsigned int v4 = *v3;
  char *v3 = a1;
}

uint64_t (*sub_100146CDC())()
{
  return j__swift_endAccess;
}

uint64_t sub_100146D5C()
{
  v1[34] = v0;
  sub_10013385C(&qword_10029A7F8);
  v1[35] = swift_task_alloc();
  v1[36] = type metadata accessor for MainActor();
  v1[37] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[38] = v3;
  v1[39] = v2;
  return _swift_task_switch(sub_100146E28, v3, v2);
}

uint64_t sub_100146E28()
{
  uint64_t v1 = (uint64_t (*)())[self contextForPrimaryAccount];
  if (v1)
  {
    unsigned int v4 = v1;
    id v5 = [objc_allocWithZone((Class)CDPUIDeviceToDeviceEncryptionFlowContext) initWithCDPContext:v1];
    v0[40] = v5;

    sub_1001399C0(0xD000000000000017, (void *)0x8000000100224250);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v5 setFeatureName:v6];

    [v5 setDeviceToDeviceEncryptionUpgradeUIStyle:0];
    [v5 setDeviceToDeviceEncryptionUpgradeType:0];
    v0[41] = static MainActor.shared.getter();
    uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v3 = v8;
    v0[42] = v7;
    v0[43] = v8;
    uint64_t v1 = sub_100146F80;
    uint64_t v2 = v7;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_100146F80()
{
  uint64_t v1 = (void *)UIApp;
  v0[44] = UIApp;
  if (v1 && (self, (uint64_t v2 = swift_dynamicCastObjCClass()) != 0))
  {
    uint64_t v3 = (void *)v2;
    v0[2] = v0;
    v0[7] = v0 + 33;
    v0[3] = sub_1001470F4;
    uint64_t v4 = swift_continuation_init();
    v0[18] = _NSConcreteStackBlock;
    v0[19] = 0x40000000;
    v0[20] = sub_100149758;
    v0[21] = &unk_1002486B8;
    v0[22] = v4;
    id v5 = v1;
    [v3 presentingControllerForModalByDismissingTopAlertIfPresentWithCompletion:v0 + 18];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    swift_release();
    v0[45] = 0;
    uint64_t v6 = v0[38];
    uint64_t v7 = v0[39];
    return _swift_task_switch(sub_100147270, v6, v7);
  }
}

uint64_t sub_1001470F4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 344);
  uint64_t v2 = *(void *)(*(void *)v0 + 336);
  return _swift_task_switch(sub_1001471FC, v2, v1);
}

uint64_t sub_1001471FC()
{
  uint64_t v1 = (void *)v0[44];
  swift_release();
  uint64_t v2 = v0[33];

  v0[45] = v2;
  uint64_t v3 = v0[38];
  uint64_t v4 = v0[39];
  return _swift_task_switch(sub_100147270, v3, v4);
}

uint64_t sub_100147270()
{
  uint64_t v1 = (void *)v0[45];
  uint64_t v2 = (void *)v0[40];
  uint64_t v3 = (void *)v0[34];
  [v2 setPresentingViewController:v1];

  [v2 setSecurityUpgradeContext:AKSecurityUpgradeContextKeychainSync];
  id v4 = [objc_allocWithZone((Class)CDPUIDeviceToDeviceEncryptionHelper) initWithContext:v2];
  uint64_t v5 = (*(uint64_t (**)(id))((swift_isaMask & *v3) + 0x60))(v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x58))(v5);
  v0[46] = v6;
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    v0[10] = v0;
    v0[15] = (char *)v0 + 396;
    v0[11] = sub_10014755C;
    uint64_t v8 = swift_continuation_init();
    v0[23] = _NSConcreteStackBlock;
    v0[24] = 0x40000000;
    v0[25] = sub_100147DD0;
    v0[26] = &unk_100248650;
    v0[27] = v8;
    [v7 performDeviceToDeviceEncryptionStateRepairWithCompletion:v0 + 23];
    return _swift_continuation_await(v0 + 10);
  }
  else if (sub_100149EB0())
  {
    uint64_t v9 = (void *)v0[40];
    uint64_t v11 = (void *)v0[34];
    uint64_t v10 = v0[35];
    swift_release();
    uint64_t v12 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
    id v13 = v11;
    uint64_t v14 = static MainActor.shared.getter();
    id v15 = (void *)swift_allocObject();
    void v15[2] = v14;
    v15[3] = &protocol witness table for MainActor;
    void v15[4] = v13;
    sub_10014806C(v10, (uint64_t)&unk_10029AC80, (uint64_t)v15);
    swift_release();

    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
  else
  {
    return _swift_task_switch(sub_1001478E8, 0, 0);
  }
}

uint64_t sub_10014755C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 376) = v2;
  uint64_t v3 = *(void *)(v1 + 312);
  uint64_t v4 = *(void *)(v1 + 304);
  if (v2) {
    uint64_t v5 = sub_100147AE4;
  }
  else {
    uint64_t v5 = sub_10014768C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10014768C()
{
  int v1 = *(unsigned __int8 *)(v0 + 396);

  if (qword_10029BCF0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100146C00(v2, (uint64_t)qword_10029BEE0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67109120;
    *(_DWORD *)(v0 + 392) = v1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "CDP repair result: %{BOOL}d", v5, 8u);
    swift_slowDealloc();
  }

  if (sub_100149EB0())
  {
    uint64_t v6 = *(void **)(v0 + 320);
    uint64_t v8 = *(void **)(v0 + 272);
    uint64_t v7 = *(void *)(v0 + 280);
    swift_release();
    uint64_t v9 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
    id v10 = v8;
    uint64_t v11 = static MainActor.shared.getter();
    uint64_t v12 = (void *)swift_allocObject();
    _DWORD v12[2] = v11;
    uint64_t v12[3] = &protocol witness table for MainActor;
    void v12[4] = v10;
    sub_10014806C(v7, (uint64_t)&unk_10029AC80, (uint64_t)v12);
    swift_release();

    swift_task_dealloc();
    id v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
  else
  {
    return _swift_task_switch(sub_1001478E8, 0, 0);
  }
}

uint64_t sub_1001478E8()
{
  *(void *)(v0 + 384) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100147974, v2, v1);
}

uint64_t sub_100147974()
{
  swift_release();
  if (UIApp)
  {
    self;
    uint64_t v1 = (void *)swift_dynamicCastObjCClass();
    if (v1)
    {
      uint64_t v2 = (uint64_t (*)())[v1 setupController];
      if (!v2)
      {
LABEL_10:
        __break(1u);
        return _swift_task_switch(v2, v3, v4);
      }
      uint64_t v5 = v2;
      [v2 startSilentAppleIDSignIn];
    }
  }
  uint64_t v2 = (uint64_t (*)())[*(id *)(v0 + 272) delegate];
  if (!v2)
  {
    __break(1u);
    goto LABEL_10;
  }
  [v2 buddyControllerReleaseHoldAndSkip:*(void *)(v0 + 272)];
  swift_unknownObjectRelease();
  uint64_t v3 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 312);
  uint64_t v2 = sub_100147A70;
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_100147A70()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100147AE4()
{
  uint64_t v18 = v0;
  uint64_t v1 = (void *)v0[46];
  swift_release();
  swift_willThrow();

  if (qword_10029BCF0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100146C00(v2, (uint64_t)qword_10029BEE0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    swift_getErrorValue();
    uint64_t v6 = Error.localizedDescription.getter();
    v0[32] = sub_10013E7DC(v6, v7, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "CDP repair error: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v8 = (void *)v0[40];
  uint64_t v9 = v0[35];
  id v10 = (void *)v0[34];
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
  id v12 = v10;
  uint64_t v13 = static MainActor.shared.getter();
  uint64_t v14 = (void *)swift_allocObject();
  id v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  void v14[4] = v12;
  sub_10014806C(v9, (uint64_t)&unk_10029AC70, (uint64_t)v14);

  swift_errorRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_100147DD0(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_10013385C(&qword_10029A810);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    **(unsigned char **)(*(void *)(v3 + 64) + 40) = a2;
    return _swift_continuation_throwingResume(v3);
  }
}

uint64_t sub_100147E84()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_100147F30;
  return sub_100148A58();
}

uint64_t sub_100147F30()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10014A804, v1, v0);
}

uint64_t sub_10014806C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10014A400(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_100148210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10014A400(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_10013385C(&qword_10029AC60);
  return swift_task_create();
}

uint64_t sub_1001483BC()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_100148468;
  return sub_100148A58();
}

uint64_t sub_100148468()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001485A4, v1, v0);
}

uint64_t sub_1001485A4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001486A4()
{
  uint64_t v1 = sub_10013385C(&qword_10029A7F8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  type metadata accessor for MainActor();
  id v5 = v0;
  uint64_t v6 = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = v6;
  v7[3] = &protocol witness table for MainActor;
  void v7[4] = v5;
  sub_10014806C((uint64_t)v3, (uint64_t)&unk_10029ABF8, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_1001487BC()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_100147F30;
  return sub_100146D5C();
}

uint64_t sub_100148994()
{
  return 1;
}

double sub_1001489A4()
{
  return 0.0;
}

uint64_t sub_1001489B4()
{
  return sub_1001399C0(0xD000000000000017, (void *)0x8000000100224150);
}

uint64_t sub_100148A58()
{
  v1[17] = v0;
  v1[18] = type metadata accessor for MainActor();
  v1[19] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[20] = v3;
  v1[21] = v2;
  return _swift_task_switch(sub_100148AF4, v3, v2);
}

uint64_t sub_100148AF4()
{
  sub_1001399C0(0xD000000000000026, (void *)0x80000001002241B0);
  sub_1001399C0(0xD000000000000028, (void *)0x80000001002241E0);
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = [self alertControllerWithTitle:v1 message:v2 preferredStyle:1];
  v0[22] = v3;

  sub_1001399C0(0x505F4C45434E4143, (void *)0xEE00474E49524941);
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v0[14] = sub_10014927C;
  v0[15] = 0;
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 1107296256;
  v0[12] = sub_100145A98;
  v0[13] = &unk_100248570;
  uint64_t v5 = _Block_copy(v0 + 10);
  swift_release();
  uint64_t v6 = self;
  id v7 = [v6 actionWithTitle:v4 style:1 handler:v5];
  v0[23] = v7;
  _Block_release(v5);

  sub_1001399C0(0x494147415F595254, (void *)0xE90000000000004ELL);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v0[14] = sub_10014A2B0;
  v0[15] = v8;
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 1107296256;
  v0[12] = sub_100145A98;
  v0[13] = &unk_1002485C0;
  id v10 = _Block_copy(v0 + 10);
  swift_release();
  id v11 = [v6 actionWithTitle:v9 style:0 handler:v10];
  v0[24] = v11;
  _Block_release(v10);
  swift_release();

  [v3 addAction:v7];
  [v3 addAction:v11];
  v0[25] = static MainActor.shared.getter();
  uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[26] = v13;
  v0[27] = v12;
  return _swift_task_switch(sub_100148E64, v13, v12);
}

uint64_t sub_100148E64()
{
  NSString v1 = (void *)UIApp;
  v0[28] = UIApp;
  if (v1 && (self, (uint64_t v2 = swift_dynamicCastObjCClass()) != 0))
  {
    id v3 = (void *)v2;
    v0[2] = v0;
    v0[7] = v0 + 16;
    v0[3] = sub_100148FD4;
    uint64_t v4 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_100149758;
    v0[13] = &unk_1002485E8;
    v0[14] = v4;
    id v5 = v1;
    [v3 presentingControllerForModalByDismissingTopAlertIfPresentWithCompletion:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    swift_release();
    uint64_t v6 = v0[20];
    uint64_t v7 = v0[21];
    return _swift_task_switch(sub_100149208, v6, v7);
  }
}

uint64_t sub_100148FD4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 216);
  uint64_t v2 = *(void *)(*(void *)v0 + 208);
  return _swift_task_switch(sub_1001490DC, v2, v1);
}

uint64_t sub_1001490DC()
{
  uint64_t v1 = (void *)v0[28];
  swift_release();
  v0[29] = v0[16];

  uint64_t v2 = v0[20];
  uint64_t v3 = v0[21];
  return _swift_task_switch(sub_100149150, v2, v3);
}

uint64_t sub_100149150()
{
  uint64_t v1 = v0[29];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (void *)v0[29];
    uint64_t v3 = (void *)v0[22];
    uint64_t v4 = (void *)v0[23];
    [v2 presentViewController:v3 animated:1 completion:0];

    uint64_t v5 = 24;
  }
  else
  {
    uint64_t v2 = (void *)v0[23];
    uint64_t v3 = (void *)v0[24];
    uint64_t v5 = 22;
  }

  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100149208()
{
  uint64_t v1 = *(void **)(v0 + 184);
  uint64_t v2 = *(void **)(v0 + 192);
  swift_release();

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_10014927C()
{
  if (UIApp)
  {
    self;
    uint64_t v0 = (void *)swift_dynamicCastObjCClass();
    if (v0)
    {
      [v0 unpairOrResetBuddyForEvent:58];
    }
  }
}

uint64_t sub_1001492EC(uint64_t a1)
{
  uint64_t v2 = sub_10013385C(&qword_10029A7F8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v6 = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = v6;
  v7[3] = &protocol witness table for MainActor;
  void v7[4] = a1;
  sub_100148210((uint64_t)v4, (uint64_t)&unk_10029AC48, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_100149404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[5] = a1;
  void v4[6] = a4;
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  uint8_t v4[8] = v6;
  v4[9] = v5;
  return _swift_task_switch(sub_10014949C, v6, v5);
}

uint64_t sub_10014949C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 80) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1001495A4;
    return sub_100146D5C();
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 40) = *(void *)(v0 + 80) == 0;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_1001495A4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 80);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_1001496E4, v4, v3);
}

uint64_t sub_1001496E4()
{
  swift_release();
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 80) == 0;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100149758(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v6 = a2;
  uint64_t v3 = *(void *)(*(void *)(v2 + 64) + 40);
  id v4 = a2;
  sub_10014A2B8((uint64_t)&v6, v3);
  return swift_continuation_resume();
}

id sub_100149800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)&v7[OBJC_IVAR___COSCDPRepairController_cdpEncryptionHelper] = 0;
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    NSString v12 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    NSString v13 = 0;
    goto LABEL_6;
  }
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_6:
  v16.receiver = v7;
  v16.super_class = (Class)type metadata accessor for CDPRepairController();
  id v14 = [super initWithTitle:v11 detailText:v12 symbolName:v13 contentLayout:a7];

  return v14;
}

id sub_100149AA4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CDPRepairController();
  return [super dealloc];
}

uint64_t sub_100149AE8(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[1] = sub_100149BC4;
  return v6(a1);
}

uint64_t sub_100149BC4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100149CBC(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  void *v3 = v2;
  v3[1] = sub_100149D9C;
  return v5(v2 + 32);
}

uint64_t sub_100149D9C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_100149EB0()
{
  v15[3] = &type metadata for FeatureFlags;
  void v15[4] = (id)sub_100138AF4();
  LOBYTE(v15[0]) = 1;
  char v0 = isFeatureEnabled(_:)();
  sub_1001417F4((uint64_t)v15);
  if ((v0 & 1) == 0) {
    return 0;
  }
  id v1 = [self contextForPrimaryAccount];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = [objc_allocWithZone((Class)CDPStateController) initWithContext:v1];
  if (!v3)
  {
LABEL_6:

    return 0;
  }
  uint64_t v4 = v3;
  v15[0] = 0;
  if ([v3 isManateeAvailable:v15])
  {
    id v5 = v15[0];

    goto LABEL_6;
  }
  id v8 = v15[0];
  _convertNSErrorToError(_:)();

  swift_willThrow();
  if (qword_10029BCF0 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_100146C00(v9, (uint64_t)qword_10029BEE0);
  swift_errorRetain();
  swift_errorRetain();
  id v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    NSString v12 = (uint8_t *)swift_slowAlloc();
    v15[0] = (id)swift_slowAlloc();
    *(_DWORD *)NSString v12 = 136315138;
    swift_getErrorValue();
    uint64_t v13 = Error.localizedDescription.getter();
    sub_10013E7DC(v13, v14, (uint64_t *)v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "offering CDP repair. CDP state Error: %s", v12, 0xCu);
    uint64_t v6 = 1;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    return 1;
  }
  return v6;
}

uint64_t sub_10014A1A8()
{
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10014A7F4;
  return sub_1001487BC();
}

uint64_t type metadata accessor for CDPRepairController()
{
  return self;
}

uint64_t sub_10014A260(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10014A270()
{
  return swift_release();
}

uint64_t sub_10014A278()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10014A2B0()
{
  return sub_1001492EC(v0);
}

uint64_t sub_10014A2B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10013385C(&qword_10029AC38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10014A320()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10014A360(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10014A7F4;
  return sub_100149404(a1, v5, v6, v4);
}

uint64_t sub_10014A400(uint64_t a1)
{
  uint64_t v2 = sub_10013385C(&qword_10029A7F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10014A460()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014A498(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100141364;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10029AC50 + dword_10029AC50);
  return v6(a1, v4);
}

uint64_t sub_10014A554()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100141364;
  return sub_1001483BC();
}

uint64_t sub_10014A5EC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10014A7F4;
  return sub_100147E84();
}

uint64_t sub_10014A684()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10014A6C4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10014A7F4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10029AC90 + dword_10029AC90);
  return v6(a1, v4);
}

uint64_t *sub_10014A77C(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_10014A7E0()
{
}

void *sub_10014A808(void *a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return sub_10014A864(a1, a2, a3, a4);
}

void *sub_10014A864(void *a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_10013385C((uint64_t *)&unk_10029A320);
  __chkstk_darwin(v9 - 8);
  os_log_type_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_animationTimer] = 0;
  uint64_t v12 = OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_animationStartTime;
  uint64_t v13 = v4;
  *(CFAbsoluteTime *)&v4[v12] = CFAbsoluteTimeGetCurrent();
  sub_100141844(0, &qword_10029ACA8);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v15 = [self bundleForClass:ObjCClassFromMetadata];
  NSString v16 = String._bridgeToObjectiveC()();
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v15 URLForResource:v16 withExtension:v17];

  if (v18)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v19 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v11, 0, 1, v19);
  }
  else
  {
    uint64_t v20 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 1, 1, v20);
  }
  sub_10014ABA8((uint64_t)v11, (uint64_t)&v13[OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_languageURL]);
  id v21 = [objc_allocWithZone((Class)PBBridgeCursiveTextView) initWithFrame:0.0, 0.0, a3, a4];
  *(void *)&v13[OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_cursiveTextView] = v21;
  type metadata accessor for COSWatchCursiveTextBlurredView();
  *(void *)&v13[OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_visualEffectView] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v22 = [objc_allocWithZone((Class)UIImageView) initWithImage:a1];
  *(void *)&v13[OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_backgroundImageView] = v22;
  id v23 = [objc_allocWithZone((Class)UIImageView) initWithImage:a1];
  *(void *)&v13[OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_screenMaskView] = v23;
  *(double *)&v13[OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_pointSize] = a2;

  double y = CGPointZero.y;
  uint64_t v25 = (objc_class *)type metadata accessor for COSWatchCursiveTextView();
  v30.receiver = v13;
  v30.super_class = v25;
  uint64_t v26 = [super initWithFrame:CGPointZero.x, y, a3, a4];
  uint64_t v27 = *(void (**)(void))((swift_isaMask & *v26) + 0xE0);
  long long v28 = v26;
  v27();

  return v28;
}

uint64_t sub_10014ABA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10013385C((uint64_t *)&unk_10029A320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for COSWatchCursiveTextBlurredView()
{
  return self;
}

uint64_t type metadata accessor for COSWatchCursiveTextView()
{
  uint64_t result = qword_10029BEC0;
  if (!qword_10029BEC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10014AD08()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_cursiveTextView);
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = [v2 layer];
  sub_10013385C(&qword_10029ACB0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001ABD70;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v5 = objc_allocWithZone((Class)CAFilter);
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = [v5 initWithType:v6];

  v52[0] = xmmword_1001ABD20;
  v52[1] = xmmword_1001ABD30;
  v52[2] = xmmword_1001ABD40;
  v52[3] = xmmword_1001ABD50;
  v52[4] = xmmword_1001ABD60;
  id v8 = [self valueWithCAColorMatrix:v52];
  NSString v9 = String._bridgeToObjectiveC()();
  [v7 setValue:v8 forKey:v9];

  *(void *)(v4 + 56) = sub_100141844(0, &qword_10029ACB8);
  *(void *)(v4 + 32) = v7;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v3 setFilters:isa];

  (*(void (**)(void))((swift_isaMask & *v1) + 0xF0))();
  os_log_type_t v11 = *(void **)((char *)v1 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_backgroundImageView);
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 addSubview:v11];
  uint64_t v12 = *(void **)((char *)v1 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_visualEffectView);
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v12 addSubview:v2];
  [v1 addSubview:v12];
  id v51 = self;
  sub_10013385C(&qword_10029ACC0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1001ABD80;
  id v14 = [v12 centerXAnchor];
  id v15 = [v1 centerXAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  *(void *)(v13 + 32) = v16;
  id v17 = [v12 centerYAnchor];
  id v18 = [v1 centerYAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  *(void *)(v13 + 40) = v19;
  id v20 = [v12 widthAnchor];
  id v21 = [v1 widthAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(v13 + 48) = v22;
  id v23 = [v12 heightAnchor];
  id v24 = [v1 heightAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  *(void *)(v13 + 56) = v25;
  id v26 = [v11 centerXAnchor];
  id v27 = [v12 centerXAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  *(void *)(v13 + 64) = v28;
  id v29 = [v11 centerYAnchor];
  id v30 = [v12 centerYAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  *(void *)(v13 + 72) = v31;
  id v32 = [v11 widthAnchor];
  id v33 = [v12 widthAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  *(void *)(v13 + 80) = v34;
  id v35 = [v11 heightAnchor];
  id v36 = [v12 heightAnchor];
  id v37 = [v35 constraintEqualToAnchor:v36];

  *(void *)(v13 + 88) = v37;
  id v38 = [v2 centerXAnchor];
  id v39 = [v12 centerXAnchor];
  id v40 = [v38 constraintEqualToAnchor:v39];

  *(void *)(v13 + 96) = v40;
  id v41 = [v2 centerYAnchor];
  id v42 = [v12 centerYAnchor];
  id v43 = [v41 constraintEqualToAnchor:v42];

  *(void *)(v13 + 104) = v43;
  id v44 = [v2 widthAnchor];
  id v45 = [v12 widthAnchor];
  id v46 = [v44 constraintEqualToAnchor:v45];

  *(void *)(v13 + 112) = v46;
  id v47 = [v2 heightAnchor];
  id v48 = [v12 heightAnchor];
  id v49 = [v47 constraintEqualToAnchor:v48];

  *(void *)(v13 + 120) = v49;
  *(void *)&v52[0] = v13;
  specialized Array._endMutation()();
  sub_100141844(0, &qword_10029ACC8);
  Class v50 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v51 activateConstraints:v50];
}

void sub_10014B4D0()
{
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for COSWatchCursiveTextView();
  [super layoutSubviews];
  (*(void (**)(id))((swift_isaMask & *v0) + 0xE8))(v1);
  uint64_t v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_screenMaskView);
  id v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_backgroundImageView);
  [v3 frame];
  double v5 = v4 + -0.5;
  [v3 frame];
  double v7 = v6 + -0.5;
  [v3 frame];
  double v9 = v8 + 1.0;
  [v3 frame];
  [v2 setFrame:v5, v7, v9, CGRectGetHeight(v14) + 1.0];
  uint64_t v10 = *(void **)((char *)v0 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_visualEffectView);
  id v11 = [v2 image];

  if (v11) {
    id v12 = v2;
  }
  else {
    id v12 = 0;
  }
  [v10 setMaskView:v12];
}

BOOL sub_10014B680()
{
  id v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_cursiveTextView);
  [v1 boundingBoxOfTextPath];
  double v3 = v2;
  [v1 textPathScalePerc];
  double v5 = v3 * v4;
  id v6 = [v0 frame];
  double v8 = v7 + v7 * -0.16;
  double v9 = v5 - v8;
  if (v5 - v8 > 0.0)
  {
    *(double *)((char *)v0 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_pointSize) = v8
                                                                                         / v5
                                                                                         * *(double *)((char *)v0 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_pointSize);
    (*(void (**)(id))((swift_isaMask & *v0) + 0xF0))(v6);
  }
  return v9 > 0.0;
}

id sub_10014B75C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10013385C((uint64_t *)&unk_10029A320);
  __chkstk_darwin(v2 - 8);
  float v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_animationTimer;
  [*(id *)(v1 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_animationTimer) invalidate];
  id v6 = *(void **)(v1 + v5);
  *(void *)(v1 + v5) = 0;

  double v7 = *(void **)(v1 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_cursiveTextView);
  sub_1001410E8(v1 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_languageURL, (uint64_t)v4, (uint64_t *)&unk_10029A320);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  id v11 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) != 1)
  {
    URL._bridgeToObjectiveC()(v10);
    id v11 = v12;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v4, v8);
  }
  double v13 = *(double *)(v1 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_pointSize);
  sub_10014B940((uint64_t)&_swiftEmptyArrayStorage);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v7 loadText:v11 pointSize:isa options:v13];

  [v7 duration];
  return [v7 setTime:v15];
}

unint64_t sub_10014B940(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10013385C(&qword_10029AD90);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1001410E8(v6, (uint64_t)v15, &qword_10029AD98);
    unint64_t result = sub_10014D6CC((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_100136424(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_10014BA84(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10013385C((uint64_t *)&unk_10029A320);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_animationTimer;
  [*(id *)(v1 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_animationTimer) invalidate];
  char v8 = *(void **)(v1 + v7);
  *(void *)(v1 + v7) = 0;

  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_cursiveTextView);
  sub_1001410E8(v1 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_languageURL, (uint64_t)v6, (uint64_t *)&unk_10029A320);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  BOOL v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) != 1)
  {
    URL._bridgeToObjectiveC()(v12);
    BOOL v13 = v14;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v10);
  }
  double v15 = *(double *)(v2 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_pointSize);
  sub_10013385C(&qword_10029ACD0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001ABD70;
  v19[1] = 0x7245656C62616E65;
  v19[2] = 0xEB00000000657361;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 96) = &type metadata for Bool;
  char v17 = a1 & 1;
  *(unsigned char *)(inited + 72) = v17;
  sub_10014B940(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v9 loadText:v13 pointSize:isa options:v15];

  *(CFAbsoluteTime *)(v2 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_animationStartTime) = CFAbsoluteTimeGetCurrent();
  sub_10014BD18(v17);
}

uint64_t sub_10014BCE4()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xF0))();
}

void sub_10014BD18(char a1)
{
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(unsigned char *)(v4 + 24) = a1;
  void v13[4] = sub_10014DCC8;
  v13[5] = v4;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  void v13[2] = sub_100145A98;
  v13[3] = &unk_100248920;
  uint64_t v5 = _Block_copy(v13);
  uint64_t v6 = self;
  swift_retain();
  id v7 = [v6 timerWithTimeInterval:1 repeats:v5 block:0.0166666667];
  _Block_release(v5);
  swift_release();
  swift_release();
  uint64_t v8 = OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_animationTimer;
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_animationTimer);
  *(void *)(v1 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_animationTimer) = v7;

  id v10 = [self currentRunLoop];
  uint64_t v11 = *(void *)(v1 + v8);
  if (v11)
  {
    uint64_t v12 = v10;
    [v10 addTimer:v11 forMode:NSRunLoopCommonModes];
  }
  else
  {
    __break(1u);
  }
}

id sub_10014BEB0(char a1)
{
  double v3 = CFAbsoluteTimeGetCurrent()
     - *(double *)((char *)v1 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_animationStartTime);
  float v4 = 4.0;
  if (a1)
  {
    [*(id *)((char *)v1 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_cursiveTextView) duration];
    double v3 = v3 + (float)(v5 * 0.5);
    float v4 = 1.0;
  }
  uint64_t v6 = *(void **)((char *)v1 + OBJC_IVAR____TtC6Bridge23COSWatchCursiveTextView_cursiveTextView);
  [v6 setTime:v3];
  id result = [v6 duration];
  if (v3 > (float)(v4 + v8))
  {
    uint64_t v9 = *(uint64_t (**)(BOOL))((swift_isaMask & *v1) + 0xF8);
    return (id)v9((a1 & 1) == 0);
  }
  return result;
}

id sub_10014BFD8()
{
  return sub_10014D648(0, type metadata accessor for COSWatchCursiveTextView);
}

unint64_t sub_10014C080(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7261487475706E69;
      break;
    case 2:
      unint64_t result = 0x7469447475706E69;
      break;
    case 3:
      unint64_t result = 0x6461527475706E69;
      break;
    case 4:
      unint64_t result = 0x6F6D417475706E69;
      break;
    case 5:
      unint64_t result = 0x6465527475706E69;
      break;
    case 6:
      unint64_t result = 0x756C427475706E69;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10014C1CC(char *a1, char *a2)
{
  return sub_10014C1D8(*a1, *a2);
}

uint64_t sub_10014C1D8(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000013;
  unint64_t v4 = 0x80000001002242B0;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0x7261487475706E69;
      unsigned int v5 = 1734624612;
      goto LABEL_7;
    case 2:
      unint64_t v3 = 0x7469447475706E69;
      unint64_t v4 = 0xEB00000000726568;
      break;
    case 3:
      unint64_t v3 = 0x6461527475706E69;
      unint64_t v4 = 0xEB00000000737569;
      break;
    case 4:
      unint64_t v3 = 0x6F6D417475706E69;
      unint64_t v4 = 0xEB00000000746E75;
      break;
    case 5:
      unint64_t v3 = 0x6465527475706E69;
      unsigned int v5 = 1970037078;
LABEL_7:
      unint64_t v4 = v5 | 0xEE00736500000000;
      break;
    case 6:
      unint64_t v3 = 0x756C427475706E69;
      unint64_t v4 = 0xEF7365756C615665;
      break;
    case 7:
      unint64_t v4 = 0x8000000100224320;
      unint64_t v3 = 0xD000000000000010;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xD000000000000013;
  unint64_t v7 = 0x80000001002242B0;
  switch(a2)
  {
    case 1:
      uint64_t v8 = 0x7261487475706E69;
      unsigned int v9 = 1734624612;
      goto LABEL_18;
    case 2:
      uint64_t v10 = 0x7469447475706E69;
      uint64_t v11 = 7497064;
      goto LABEL_15;
    case 3:
      uint64_t v10 = 0x6461527475706E69;
      uint64_t v11 = 7566697;
      goto LABEL_15;
    case 4:
      uint64_t v10 = 0x6F6D417475706E69;
      uint64_t v11 = 7630453;
LABEL_15:
      unint64_t v7 = v11 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      if (v3 != v10) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      uint64_t v8 = 0x6465527475706E69;
      unsigned int v9 = 1970037078;
LABEL_18:
      unint64_t v7 = v9 | 0xEE00736500000000;
      if (v3 != v8) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      unint64_t v6 = 0x756C427475706E69;
      unint64_t v7 = 0xEF7365756C615665;
      goto LABEL_21;
    case 7:
      unint64_t v7 = 0x8000000100224320;
      if (v3 != 0xD000000000000010) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v3 != v6) {
        goto LABEL_25;
      }
LABEL_22:
      if (v4 == v7) {
        char v12 = 1;
      }
      else {
LABEL_25:
      }
        char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
  }
}

Swift::Int sub_10014C4B4()
{
  return sub_10014C650();
}

uint64_t sub_10014C4C0()
{
  return sub_10014C4C8();
}

uint64_t sub_10014C4C8()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10014C648()
{
  return sub_10014C650();
}

Swift::Int sub_10014C650()
{
  return Hasher._finalize()();
}

unint64_t sub_10014C7E0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10014D7D8(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_10014C810@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10014C080(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

id sub_10014C878()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v0 = objc_allocWithZone((Class)CAFilter);
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithType:v1];

  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v4 = String._bridgeToObjectiveC()();
  [v2 setValue:isa forKey:v4];

  Class v5 = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v6 = String._bridgeToObjectiveC()();
  [v2 setValue:v5 forKey:v6];

  Class v7 = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v8 = String._bridgeToObjectiveC()();
  [v2 setValue:v7 forKey:v8];

  return v2;
}

id sub_10014C9E4()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v0 = objc_allocWithZone((Class)CAFilter);
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithType:v1];

  Class isa = Array._bridgeToObjectiveC()().super.isa;
  NSString v4 = String._bridgeToObjectiveC()();
  [v2 setValue:isa forKey:v4];

  Class v5 = Array._bridgeToObjectiveC()().super.isa;
  NSString v6 = String._bridgeToObjectiveC()();
  [v2 setValue:v5 forKey:v6];

  Class v7 = Array._bridgeToObjectiveC()().super.isa;
  NSString v8 = String._bridgeToObjectiveC()();
  [v2 setValue:v7 forKey:v8];

  return v2;
}

id sub_10014CB78(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC6Bridge30COSWatchCursiveTextBlurredView_blurFilter;
  NSString v4 = v1;
  *(void *)&v1[v3] = sub_10014C878();
  uint64_t v5 = OBJC_IVAR____TtC6Bridge30COSWatchCursiveTextBlurredView_saturationFilter;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v6 = objc_allocWithZone((Class)CAFilter);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [v6 initWithType:v7];

  *(void *)&v4[v5] = v8;
  uint64_t v9 = OBJC_IVAR____TtC6Bridge30COSWatchCursiveTextBlurredView_curvesFilter;
  *(void *)&v4[v9] = sub_10014C9E4();

  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for COSWatchCursiveTextBlurredView();
  id v10 = [super initWithCoder:a1];

  return v10;
}

void *sub_10014CC94(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC6Bridge30COSWatchCursiveTextBlurredView_blurFilter;
  id v10 = v4;
  *(void *)&v4[v9] = sub_10014C878();
  uint64_t v11 = OBJC_IVAR____TtC6Bridge30COSWatchCursiveTextBlurredView_saturationFilter;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = objc_allocWithZone((Class)CAFilter);
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [v12 initWithType:v13];

  *(void *)&v10[v11] = v14;
  uint64_t v15 = OBJC_IVAR____TtC6Bridge30COSWatchCursiveTextBlurredView_curvesFilter;
  *(void *)&v10[v15] = sub_10014C9E4();

  v28.receiver = v10;
  v28.super_class = (Class)type metadata accessor for COSWatchCursiveTextBlurredView();
  uint64_t v16 = [super initWithFrame:a1, a2, a3, a4];
  [v16 _setOverrideVibrancyTrait:1];
  id v17 = [v16 layer];
  sub_10013385C(&qword_10029ACB0);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1001ABD90;
  id v19 = *(void **)((char *)v16 + OBJC_IVAR____TtC6Bridge30COSWatchCursiveTextBlurredView_blurFilter);
  uint64_t v20 = sub_100141844(0, &qword_10029ACB8);
  *(void *)(v18 + 56) = v20;
  *(void *)(v18 + 32) = v19;
  id v21 = *(void **)((char *)v16 + OBJC_IVAR____TtC6Bridge30COSWatchCursiveTextBlurredView_saturationFilter);
  *(void *)(v18 + 88) = v20;
  *(void *)(v18 + 64) = v21;
  id v22 = *(void **)((char *)v16 + OBJC_IVAR____TtC6Bridge30COSWatchCursiveTextBlurredView_curvesFilter);
  *(void *)(v18 + 120) = v20;
  *(void *)(v18 + 96) = v22;
  id v23 = v19;
  id v24 = v21;
  id v25 = v22;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v17 setFilters:isa];

  (*(void (**)(void))((swift_isaMask & *v16) + 0x68))();
  return v16;
}

id sub_10014CEFC(uint64_t a1)
{
  return sub_10014D648(a1, type metadata accessor for COSWatchCursiveTextBlurredView);
}

id sub_10014CF70(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return sub_10014CFB4(a1, a2);
}

id sub_10014CFB4(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC6Bridge34COSIllustratedWatchCursiveTextView_helloView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC6Bridge34COSIllustratedWatchCursiveTextView_backgroundImage] = 0;
  double y = CGRectZero.origin.y;
  double width = CGRectZero.size.width;
  double height = CGRectZero.size.height;
  v17.receiver = v2;
  v17.super_class = (Class)type metadata accessor for COSIllustratedWatchCursiveTextView();
  id v7 = [super initWithFrame:CGRectZero.origin.x, y, width, height];
  id v8 = v7;
  if (!a2)
  {
    id v16 = v7;
    goto LABEL_6;
  }
  uint64_t v9 = (char *)v7;
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 setScreenImageName:v10];

  id result = [v9 watchScreenImageView];
  if (result)
  {
    id v12 = result;
    id v13 = [result image];

    id v14 = *(void **)&v9[OBJC_IVAR____TtC6Bridge34COSIllustratedWatchCursiveTextView_backgroundImage];
    *(void *)&v9[OBJC_IVAR____TtC6Bridge34COSIllustratedWatchCursiveTextView_backgroundImage] = v13;

    id result = [v9 watchScreenImageView];
    if (result)
    {
      uint64_t v15 = result;
      [result setImage:0];

LABEL_6:
      sub_10014D1F0();

      return v8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10014D1F0()
{
  NSString v1 = v0;
  [v0 watchScreenInsetGuide];
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  uint64_t v10 = OBJC_IVAR____TtC6Bridge34COSIllustratedWatchCursiveTextView_helloView;
  uint64_t v11 = *(void **)&v0[OBJC_IVAR____TtC6Bridge34COSIllustratedWatchCursiveTextView_helloView];
  if (v11) {
    [v11 removeFromSuperview];
  }
  id v12 = *(void **)&v0[OBJC_IVAR____TtC6Bridge34COSIllustratedWatchCursiveTextView_backgroundImage];
  objc_allocWithZone((Class)type metadata accessor for COSWatchCursiveTextView());
  id v13 = v12;
  id v14 = sub_10014A864(v12, v7 * 0.5, v7, v9);
  uint64_t v15 = *(void **)&v1[v10];
  *(void *)&v1[v10] = v14;

  if (!*(void *)&v1[v10])
  {
    __break(1u);
    goto LABEL_9;
  }
  [v1 addSubview:];
  id v16 = *(void **)&v1[v10];
  if (!v16)
  {
LABEL_9:
    __break(1u);
    return;
  }

  [v16 setFrame:v3, v5, v7, v9];
}

void sub_10014D308()
{
  NSString v1 = *(void **)(v0 + OBJC_IVAR____TtC6Bridge34COSIllustratedWatchCursiveTextView_helloView);
  if (v1)
  {
    double v2 = *(void (**)(uint64_t))((swift_isaMask & *v1) + 0xF8);
    double v3 = v1;
    v2(1);
  }
  else
  {
    __break(1u);
  }
}

void sub_10014D44C()
{
  NSString v1 = *(void **)(v0 + OBJC_IVAR____TtC6Bridge34COSIllustratedWatchCursiveTextView_helloView);
  if (v1)
  {
    double v2 = *(void (**)(void))((swift_isaMask & *v1) + 0x100);
    double v3 = v1;
    v2();
  }
  else
  {
    __break(1u);
  }
}

void sub_10014D604()
{
}

id sub_10014D630(uint64_t a1)
{
  return sub_10014D648(a1, type metadata accessor for COSIllustratedWatchCursiveTextView);
}

id sub_10014D648(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

unint64_t sub_10014D6CC(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_10014D710(a1, v4);
}

unint64_t sub_10014D710(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_10014DD40(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_10014DD9C((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10014D7D8(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100248720, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 8) {
    return 8;
  }
  else {
    return v3;
  }
}

void sub_10014D824()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC6Bridge30COSWatchCursiveTextBlurredView_blurFilter);
  Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  NSString v3 = String._bridgeToObjectiveC()();
  [v1 setValue:isa forKey:v3];

  unint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC6Bridge30COSWatchCursiveTextBlurredView_saturationFilter);
  Class v5 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  id v6 = String._bridgeToObjectiveC()();
  [v4 setValue:v5 forKey:v6];
}

uint64_t type metadata accessor for COSIllustratedWatchCursiveTextView()
{
  return self;
}

unint64_t sub_10014D94C()
{
  unint64_t result = qword_10029AD08;
  if (!qword_10029AD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029AD08);
  }
  return result;
}

uint64_t sub_10014D9A0()
{
  return type metadata accessor for COSWatchCursiveTextView();
}

void sub_10014D9A8()
{
  sub_10014DA64();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10014DA64()
{
  if (!qword_10029AD38)
  {
    type metadata accessor for URL();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10029AD38);
    }
  }
}

uint64_t getEnumTagSinglePayload for COSWatchCursiveTextBlurredView.FilterKey(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for COSWatchCursiveTextBlurredView.FilterKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10014DC18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

unsigned char *sub_10014DC40(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for COSWatchCursiveTextBlurredView.FilterKey()
{
  return &type metadata for COSWatchCursiveTextBlurredView.FilterKey;
}

uint64_t sub_10014DC58()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10014DC90()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void sub_10014DCC8()
{
  char v1 = *(unsigned char *)(v0 + 24);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int v3 = (void *)Strong;
    sub_10014BEB0(v1);
  }
}

uint64_t sub_10014DD28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10014DD38()
{
  return swift_release();
}

uint64_t sub_10014DD40(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10014DD9C(uint64_t a1)
{
  return a1;
}

void sub_10014DDF4()
{
  qword_10029BEF8 = (uint64_t)&_swiftEmptySetSingleton;
}

uint64_t sub_10014DE08()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  id v45 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v40 - v4;
  uint64_t v6 = sub_10013385C((uint64_t *)&unk_10029A320);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  double v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v40 - v10;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v46 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v49 = 0u;
  long long v50 = 0u;
  char v51 = 2;
  sub_10014E4A4(3, 0, 0, (uint64_t)v9);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v15(v9, 1, v12) == 1)
  {
    sub_1001338A0((uint64_t)v9);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
LABEL_4:
    sub_1001338A0((uint64_t)v11);
    goto LABEL_14;
  }
  URL.deletingLastPathComponent()();
  id v44 = *(void (**)(char *, uint64_t))(v13 + 8);
  v44(v9, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  if (v15(v11, 1, v12) == 1) {
    goto LABEL_4;
  }
  uint64_t v43 = v13 + 8;
  id v16 = v46;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v46, v11, v12);
  uint64_t v17 = LiveActivitySetupLogger.unsafeMutableAddressor();
  uint64_t v18 = *(void (**)(void))(v1 + 16);
  id v42 = (void (*)(char *, uint64_t))v17;
  uint64_t v19 = v0;
  id v41 = (void (*)(char *, void (*)(void, void), uint64_t))v18;
  v18(v5);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    id v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Clearing cache", v22, 2u);
    id v16 = v46;
    swift_slowDealloc();
  }

  id v23 = (void (*)(char *, void (*)(void, void), uint64_t))(v1 + 8);
  id v24 = *(void (**)(char *, uint64_t))(v1 + 8);
  v24(v5, v19);
  id v25 = [self defaultManager];
  URL._bridgeToObjectiveC()(v26);
  objc_super v28 = v27;
  v48[0] = 0;
  unsigned int v29 = [v25 removeItemAtURL:v27 error:v48];

  id v30 = v45;
  if (v29)
  {
    id v31 = v48[0];
    id v32 = v16;
  }
  else
  {
    id v33 = v48[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    v41(v30, (void (*)(void, void))v42, v19);
    swift_errorRetain();
    swift_errorRetain();
    id v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      id v42 = v24;
      id v41 = v23;
      id v36 = (uint8_t *)swift_slowAlloc();
      v48[0] = (id)swift_slowAlloc();
      *(_DWORD *)id v36 = 136315138;
      id v40 = v36 + 4;
      swift_getErrorValue();
      uint64_t v37 = Error.localizedDescription.getter();
      uint64_t v47 = sub_10013E7DC(v37, v38, (uint64_t *)v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Failed to remove cached files: %s", v36, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      v42(v30, v19);
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      v24(v30, v19);
    }
    id v32 = v46;
  }
  v44(v32, v12);
LABEL_14:
  if (qword_10029BED0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_10029BEF8 = (uint64_t)&_swiftEmptySetSingleton;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10014E4A4@<X0>(int a1@<W0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  long long v59 = a3;
  uint64_t v58 = a2;
  int v57 = a1;
  uint64_t v66 = a4;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v61 = *(void *)(v4 - 8);
  uint64_t v62 = v4;
  __chkstk_darwin(v4);
  uint64_t v69 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for URL.DirectoryHint();
  uint64_t v64 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10013385C((uint64_t *)&unk_10029A320);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v53 - v13;
  __chkstk_darwin(v12);
  id v16 = (char *)&v53 - v15;
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v56 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = [self defaultManager];
  uint64_t v60 = (uint64_t *)LiveActivitySharedAppGroupName.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v22 = [v20 containerURLForSecurityApplicationGroupIdentifier:v21];

  if (v22)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    id v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    id v24 = v11;
    uint64_t v25 = 0;
  }
  else
  {
    id v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    id v24 = v11;
    uint64_t v25 = 1;
  }
  uint64_t v68 = v23;
  v23((uint64_t)v24, v25, 1, v17);
  uint64_t v26 = v18;
  sub_10013EEB0((uint64_t)v11, (uint64_t)v14, (uint64_t *)&unk_10029A320);
  id v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  int v28 = v27(v14, 1, v17);
  uint64_t v29 = v67;
  uint64_t v30 = v64;
  uint64_t v65 = (void (**)(char *, char *, uint64_t))v26;
  uint64_t v63 = v17;
  if (v28 == 1)
  {
    sub_1001338A0((uint64_t)v14);
    uint64_t v31 = (uint64_t)v16;
    id v32 = v68;
    v68((uint64_t)v16, 1, 1, v17);
  }
  else
  {
    strcpy((char *)v70, "LiveActivity");
    BYTE5(v70[1]) = 0;
    HIWORD(v70[1]) = -5120;
    int v54 = *(void (**)(char *, void, uint64_t))(v64 + 104);
    uint64_t v55 = v64 + 104;
    v54(v7, enum case for URL.DirectoryHint.isDirectory(_:), v67);
    unint64_t v53 = sub_10014445C();
    URL.appending<A>(path:directoryHint:)();
    uint64_t v64 = *(void *)(v30 + 8);
    ((void (*)(char *, uint64_t))v64)(v7, v29);
    swift_bridgeObjectRelease();
    uint64_t v33 = v26 + 8;
    id v34 = *(void (***)(char *, char *, uint64_t))(v26 + 8);
    os_log_type_t v35 = v14;
    uint64_t v31 = (uint64_t)v16;
    ((void (*)(char *, uint64_t))v34)(v35, v17);
    id v32 = v68;
    v68((uint64_t)v16, 0, 1, v17);
    if (v27(v16, 1, v17) != 1)
    {
      uint64_t v47 = v56;
      uint64_t v48 = v63;
      v65[4](v56, v16, v63);
      v70[0] = sub_10014EBAC(v57, v58, v59);
      v70[1] = v49;
      uint64_t v65 = v34;
      uint64_t v50 = v67;
      v54(v7, enum case for URL.DirectoryHint.notDirectory(_:), v67);
      uint64_t v69 = (char *)(v33 + 48);
      uint64_t v51 = v66;
      URL.appending<A>(path:directoryHint:)();
      ((void (*)(char *, uint64_t))v64)(v7, v50);
      ((void (*)(char *, uint64_t))v65)(v47, v48);
      swift_bridgeObjectRelease();
      uint64_t v44 = v51;
      uint64_t v45 = 0;
      uint64_t v46 = v48;
      return v32(v44, v45, 1, v46);
    }
  }
  sub_1001338A0(v31);
  uint64_t v36 = LiveActivitySetupLogger.unsafeMutableAddressor();
  uint64_t v38 = v61;
  uint64_t v37 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v69, v36, v62);
  id v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v39, v40))
  {
    id v41 = (uint8_t *)swift_slowAlloc();
    v70[0] = swift_slowAlloc();
    *(_DWORD *)id v41 = 136315138;
    uint64_t v42 = *v60;
    unint64_t v43 = v60[1];
    swift_bridgeObjectRetain();
    v70[2] = sub_10013E7DC(v42, v43, v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "No container URL for %s", v41, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v38 + 8))(v69, v37);
    id v32 = v68;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v38 + 8))(v69, v37);
  }
  uint64_t v44 = v66;
  uint64_t v45 = 1;
  uint64_t v46 = v63;
  return v32(v44, v45, 1, v46);
}

unint64_t sub_10014EBAC(char a1, uint64_t a2, void *a3)
{
  unint64_t v4 = 0xD000000000000022;
  uint64_t v5 = (uint64_t)v3;
  switch(a1)
  {
    case 2:
      unint64_t v4 = 0xD000000000000023;
      break;
    case 3:
      unint64_t v4 = 0xD000000000000017;
      break;
    default:
      break;
  }
  unint64_t v27 = v4;
  sub_100151424(v3, (uint64_t)&v28);
  uint64_t v8 = (void *)v28;
  if (v32)
  {
    if (v32 != 1)
    {
      if (v30 | v31 | v29 | v28) {
        uint64_t v16 = 0x6F4370757465735FLL;
      }
      else {
        uint64_t v16 = 0x68637461775FLL;
      }
      if (v30 | v31 | v29 | v28) {
        unint64_t v17 = 0xEE006574656C706DLL;
      }
      else {
        unint64_t v17 = 0xE600000000000000;
      }
      goto LABEL_20;
    }
    uint64_t v9 = v30;
    unint64_t v10 = v31;
    sub_10014445C();
    swift_bridgeObjectRetain();
    StringProtocol.hash.getter();
    v11._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v11);
    swift_bridgeObjectRelease();
    v12._uint64_t countAndFlagsBits = 95;
    v12._object = (void *)0xE100000000000000;
    String.append(_:)(v12);
    if (v10) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = 0x7542656764697242;
    }
    if (!v10) {
      unint64_t v10 = 0xEC000000656C646ELL;
    }
    unint64_t v14 = v10;
    String.append(_:)(*(Swift::String *)&v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100152894(v5, (void (*)(void, void, void, void, void))sub_10015143C);
    [v8 hash];
    v15._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    sub_100152894(v5, (void (*)(void, void, void, void, void))sub_10015149C);
  }
  uint64_t v16 = 95;
  unint64_t v17 = 0xE100000000000000;
LABEL_20:
  unint64_t v18 = v17;
  String.append(_:)(*(Swift::String *)&v16);
  swift_bridgeObjectRelease();
  if (a3)
  {
    swift_bridgeObjectRetain();
    v19._uint64_t countAndFlagsBits = a2;
    v19._object = a3;
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
  }
  LiveActivityPlacement.imageHeight.getter();
  if ((~*(void *)&v20 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v20 <= -9.22337204e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v20 >= 9.22337204e18)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v21._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = 120;
  v22._object = (void *)0xE100000000000000;
  String.append(_:)(v22);
  LiveActivityPlacement.imageHeight.getter();
  if ((~*(void *)&v23 & 0x7FF0000000000000) == 0)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v23 >= 9.22337204e18)
  {
LABEL_34:
    __break(1u);
    JUMPOUT(0x10014EF88);
  }
  v24._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  v25._uint64_t countAndFlagsBits = 95;
  v25._object = (void *)0xE100000000000000;
  String.append(_:)(v25);
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_10014EF98()
{
  return 3;
}

uint64_t sub_10014EFA0@<X0>(int a1@<W0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  uint64_t v8 = sub_10013385C((uint64_t *)&unk_10029A320);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10014E4A4(a1, a2, a3, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1001338A0((uint64_t)v10);
LABEL_6:
    uint64_t v19 = 1;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(a4, v19, 1, v11);
  }
  Swift::String v15 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v15(v14, v10, v11);
  LiveActivityPlacement.imageHeight.getter();
  double v17 = v16;
  LiveActivityPlacement.imageHeight.getter();
  if ((sub_10014F1A4((unint64_t)v14, v17, v18) & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    goto LABEL_6;
  }
  v15(a4, v14, v11);
  uint64_t v19 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(a4, v19, 1, v11);
}

uint64_t sub_10014F1A4(unint64_t a1, double a2, double a3)
{
  uint64_t v6 = (void *)type metadata accessor for URL();
  uint64_t v84 = *(v6 - 1);
  id v85 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v83 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  Swift::String v15 = (char *)&v76 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  double v18 = (char *)&v76 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v82 = (char *)&v76 - v20;
  __chkstk_darwin(v19);
  Swift::String v22 = (char *)&v76 - v21;
  unint64_t v86 = a1;
  Swift::String v23 = URL.path(percentEncoded:)(1);
  if (qword_10029BED0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v24 = qword_10029BEF8;
  swift_bridgeObjectRetain();
  Swift::Int countAndFlagsBits = v23._countAndFlagsBits;
  char v25 = sub_10014FD74(v23._countAndFlagsBits, (uint64_t)v23._object, v24);
  swift_bridgeObjectRelease();
  uint64_t v26 = LiveActivitySetupLogger.unsafeMutableAddressor();
  unint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  if ((v25 & 1) == 0)
  {
    object = v23._object;
    uint64_t v78 = v26;
    uint64_t v79 = v27;
    ((void (*)(char *))v27)(v22);
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = v9;
      uint64_t v36 = v10;
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 67109120;
      LODWORD(v90[0]) = [self isMainThread];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Is creating image path from main thread? %{BOOL}d", v37, 8u);
      uint64_t v10 = v36;
      uint64_t v9 = v35;
      swift_slowDealloc();
    }

    uint64_t v38 = *(void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v81 = v10 + 8;
    uint64_t v77 = v38;
    v38(v22, v9);
    id v39 = sub_10014FEAC();
    id v40 = v39;
    if (v39)
    {
      id v41 = v39;
      uint64_t v42 = (UIImage *)sub_1001505EC(a2, a3);

      unint64_t v43 = UIImagePNGRepresentation(v42);
      if (v43)
      {
        uint64_t v44 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v46 = v45;

        id v47 = [self defaultManager];
        URL.deletingLastPathComponent()();
        URL._bridgeToObjectiveC()(v48);
        uint64_t v50 = v49;
        (*(void (**)(char *, id))(v84 + 8))(v8, v85);
        v90[0] = 0;
        unsigned int v51 = [v47 createDirectoryAtURL:v50 withIntermediateDirectories:1 attributes:0 error:v90];

        id v52 = v90[0];
        uint64_t v76 = v44;
        if (v51)
        {
          Data.write(to:options:)();
          id v85 = v41;
          swift_beginAccess();
          unint64_t v53 = (unint64_t)object;
          swift_bridgeObjectRetain();
          uint64_t v54 = countAndFlagsBits;
          sub_100151554(&v89, countAndFlagsBits, v53);
          swift_endAccess();
          swift_bridgeObjectRelease();
          uint64_t v55 = v82;
          v79(v82, v78, v9);
          swift_bridgeObjectRetain();
          uint64_t v56 = Logger.logObject.getter();
          uint64_t v57 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v56, (os_log_type_t)v57))
          {
            uint64_t v58 = (uint8_t *)swift_slowAlloc();
            v90[0] = (id)swift_slowAlloc();
            *(_DWORD *)uint64_t v58 = 136315138;
            uint64_t v88 = v9;
            swift_bridgeObjectRetain();
            Swift::Int v89 = sub_10013E7DC(v54, v53, (uint64_t *)v90);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v56, (os_log_type_t)v57, "Created image at: %s", v58, 0xCu);
            uint64_t v32 = 1;
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
            sub_1001514FC(v76, v46);

            v77(v82, v88);
            return v32;
          }
          swift_bridgeObjectRelease_n();

          sub_1001514FC(v76, v46);
          v77(v55, v9);
          return 1;
        }
        uint64_t v65 = v52;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        unint64_t v86 = v46;
        uint64_t v66 = v83;
        v79(v83, v78, v9);
        swift_errorRetain();
        unint64_t v67 = (unint64_t)object;
        swift_bridgeObjectRetain();
        swift_errorRetain();
        uint64_t v68 = Logger.logObject.getter();
        os_log_type_t v69 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v68, v69))
        {
          uint64_t v70 = swift_slowAlloc();
          uint64_t v71 = (void *)swift_slowAlloc();
          uint64_t v88 = v9;
          v90[0] = v71;
          *(_DWORD *)uint64_t v70 = 136315394;
          id v85 = v41;
          swift_getErrorValue();
          uint64_t v72 = Error.localizedDescription.getter();
          Swift::Int v89 = sub_10013E7DC(v72, v73, (uint64_t *)v90);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          *(_WORD *)(v70 + 12) = 2080;
          swift_bridgeObjectRetain();
          Swift::Int v89 = sub_10013E7DC(countAndFlagsBits, v67, (uint64_t *)v90);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v68, v69, "Unable to generate live activity image: %s \n %s", (uint8_t *)v70, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          sub_1001514FC(v76, v86);

          swift_errorRelease();
          uint64_t v64 = v66;
          uint64_t v74 = v88;
LABEL_24:
          v77(v64, v74);
          return 0;
        }

        sub_1001514FC(v76, v86);
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();

        swift_bridgeObjectRelease_n();
        uint64_t v64 = v66;
LABEL_23:
        uint64_t v74 = v9;
        goto LABEL_24;
      }
    }
    else
    {
      id v41 = 0;
    }
    swift_bridgeObjectRelease();
    v79(v18, v78, v9);
    long long v59 = v41;
    uint64_t v60 = Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v60, v61))
    {
      BOOL v62 = v40 == 0;
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v63 = 67109120;
      LODWORD(v90[0]) = v62;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v60, v61, "Unable to generate live activity image data. Was image nil? - %{BOOL}d", v63, 8u);
      swift_slowDealloc();
    }
    else
    {

      uint64_t v60 = v59;
    }

    uint64_t v64 = v18;
    goto LABEL_23;
  }
  uint64_t v28 = v10;
  v27(v15, v26, v9);
  swift_bridgeObjectRetain();
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v29, v30))
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v9);
    return 1;
  }
  unint64_t v31 = (uint8_t *)swift_slowAlloc();
  v90[0] = (id)swift_slowAlloc();
  uint64_t v88 = v9;
  *(_DWORD *)unint64_t v31 = 136315138;
  swift_bridgeObjectRetain();
  Swift::Int v89 = sub_10013E7DC(countAndFlagsBits, (unint64_t)v23._object, (uint64_t *)v90);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease_n();
  _os_log_impl((void *)&_mh_execute_header, v29, v30, "Using existing cache for: %s", v31, 0xCu);
  uint64_t v32 = 1;
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v88);
  return v32;
}

uint64_t sub_10014FD74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

id sub_10014FEAC()
{
  sub_100151424(v0, (uint64_t)&v55);
  uint64_t v1 = v55;
  sub_100151424(v0, (uint64_t)&v60);
  if (!v61)
  {
    id v6 = v60;
    id v7 = v1;
    return v6;
  }
  id v2 = [objc_allocWithZone((Class)BPSIllustratedWatchView) initWithFrame:CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v2 setUsingCompactWatchAsset:1];
  sub_100151424(v0, (uint64_t)v58);
  if (v59 == 1)
  {
    uint64_t v3 = v58[3];
    NSString v4 = String._bridgeToObjectiveC()();
    [v2 setScreenImageName:v4];

    if (v3) {
      NSString v5 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v5 = 0;
    }
    [v2 setScreenImageSearchBundleIdentifier:v5];

    id result = [v2 watchScreenImageView];
    if (!result)
    {
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    uint64_t v10 = result;
    id v8 = [result image];
  }
  else
  {
    sub_100151424(v0, (uint64_t)v56);
    if (v57 == 2)
    {
      id v8 = 0;
      if (v56[0] == 1 && !(v56[2] | v56[3] | v56[1])) {
        id v8 = sub_100152400();
      }
    }
    else
    {
      id v8 = 0;
    }
  }
  id v11 = [self standardUserDefaults];
  NSString v12 = String._bridgeToObjectiveC()();
  unsigned __int8 v13 = [v11 BOOLForKey:v12];

  if ((v13 & 1) == 0)
  {
    id v25 = [v2 watchView];
    id v26 = [v25 image];

    if (!v26)
    {

      return 0;
    }
    id v27 = v8;
    id v28 = sub_100152630();
    double v29 = 0.0;
    if (sub_100152630() != (id)20)
    {
      id v30 = sub_100152630();
      double v31 = -20.0;
      if (v28 == (id)19) {
        double v31 = 0.0;
      }
      if (v30 == (id)21) {
        double v29 = 0.0;
      }
      else {
        double v29 = v31;
      }
    }
    id v32 = sub_100152630();
    if (sub_100152630() == (id)20)
    {
      double v33 = 10.5;
      double v34 = 17.0;
      double v35 = 10.5;
    }
    else
    {
      id v44 = sub_100152630();
      double v45 = 50.0;
      if (v32 == (id)19) {
        double v45 = 30.0;
      }
      double v46 = 35.0;
      if (v32 == (id)19) {
        double v46 = 17.5;
      }
      if (v44 == (id)21) {
        double v34 = 17.0;
      }
      else {
        double v34 = v45;
      }
      if (v44 == (id)21) {
        double v33 = 10.5;
      }
      else {
        double v33 = v46;
      }
      if (v44 == (id)21) {
        double v35 = 10.5;
      }
      else {
        double v35 = v45;
      }
    }
    [v26 size];
    id v49 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:v47, v48];
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = v26;
    *(double *)(v50 + 24) = v29;
    *(double *)(v50 + 32) = v29;
    *(void *)(v50 + 40) = v8;
    *(double *)(v50 + 48) = v33;
    *(double *)(v50 + 56) = v35;
    *(double *)(v50 + 64) = v33;
    *(double *)(v50 + 72) = v34;
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = sub_100152C6C;
    *(void *)(v51 + 24) = v50;
    uint64_t v66 = sub_100152F54;
    uint64_t v67 = v51;
    aBlock = _NSConcreteStackBlock;
    uint64_t v63 = 1107296256;
    uint64_t v64 = sub_100151178;
    uint64_t v65 = &unk_100248C38;
    id v52 = _Block_copy(&aBlock);
    id v53 = v27;
    swift_retain();
    id v54 = v26;
    swift_release();
    id v6 = [v49 imageWithActions:v52];

    _Block_release(v52);
    LODWORD(v49) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    id result = (id)swift_release();
    if (!v49)
    {

      goto LABEL_50;
    }
    __break(1u);
    goto LABEL_53;
  }
  id result = [objc_allocWithZone((Class)COSWatchView) initWithStyle:3];
  if (result)
  {
    uint64_t v14 = result;
    [result setTranslatesAutoresizingMaskIntoConstraints:0];
    [v14 watchScreenInsetGuide];
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    if (v8)
    {
      double v21 = v15;
      double v22 = v16;
      id v23 = v8;
      uint64_t v24 = (void *)sub_1001505EC(v21, v22);
    }
    else
    {
      uint64_t v24 = 0;
    }
    id v6 = [v14 image];
    if (!v6) {
      goto LABEL_33;
    }
    if (v24)
    {
      uint64_t v36 = v24;
      [v6 size];
      id v39 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:v37];
      uint64_t v24 = (void *)swift_allocObject();
      v24[2] = v6;
      v24[3] = v36;
      v24[4] = v18;
      v24[5] = v20;
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = sub_100152790;
      *(void *)(v40 + 24) = v24;
      uint64_t v66 = sub_100152838;
      uint64_t v67 = v40;
      aBlock = _NSConcreteStackBlock;
      uint64_t v63 = 1107296256;
      uint64_t v64 = sub_100151178;
      uint64_t v65 = &unk_100248998;
      id v41 = _Block_copy(&aBlock);
      uint64_t v42 = v36;
      id v43 = v6;
      swift_retain();
      swift_release();
      id v6 = [v39 imageWithActions:v41];

      _Block_release(v41);
      LOBYTE(v39) = swift_isEscapingClosureAtFileLocation();

      swift_release();
      swift_release();
      if (v39)
      {
        __break(1u);
LABEL_33:
      }
      return v6;
    }

LABEL_50:
    return v6;
  }
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_1001505EC(double a1, double a2)
{
  [v2 size];
  double v6 = a1 / v5;
  [v2 size];
  if (a2 / v7 < v6) {
    double v6 = a2 / v7;
  }
  [v2 size];
  double v9 = v8 * v6;
  [v2 size];
  double v11 = v6 * v10;
  id v12 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:v9, v11];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v2;
  *(double *)(v13 + 24) = v9;
  *(double *)(v13 + 32) = v11;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_100152DF4;
  *(void *)(v14 + 24) = v13;
  v19[4] = sub_100152F54;
  v19[5] = v14;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_100151178;
  void v19[3] = &unk_100248CB0;
  double v15 = _Block_copy(v19);
  id v16 = v2;
  swift_retain();
  swift_release();
  id v17 = [v12 imageWithActions:v15];

  _Block_release(v15);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v12 & 1) == 0) {
    return (uint64_t)v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001507D4()
{
  id v0 = sub_100152630();
  if (sub_100152630() == (id)20) {
    return 2;
  }
  BOOL v1 = v0 == (id)19;
  if (sub_100152630() == (id)21) {
    return 2;
  }
  return v1;
}

double sub_100150820()
{
  id v0 = sub_10014FEAC();
  if (!v0) {
    return 0.0;
  }
  BOOL v1 = v0;
  id v2 = sub_100152630();
  double v3 = 0.0;
  if (sub_100152630() != (id)20)
  {
    id v4 = sub_100152630();
    double v5 = -20.0;
    if (v2 == (id)19) {
      double v5 = 0.0;
    }
    if (v4 == (id)21) {
      double v3 = 0.0;
    }
    else {
      double v3 = v5;
    }
  }
  [v1 size];
  v23.size.double width = v6;
  v23.size.double height = v7;
  v23.origin.CGFloat x = 0.0;
  v23.origin.CGFloat y = 0.0;
  CGRect v24 = CGRectInset(v23, v3, v3);
  double width = v24.size.width;
  double height = v24.size.height;
  id v10 = sub_100152630();
  if (sub_100152630() == (id)20)
  {
    double v11 = 10.5;
    double v12 = 10.5;
  }
  else
  {
    id v14 = sub_100152630();
    double v15 = 50.0;
    if (v10 == (id)19) {
      double v15 = 30.0;
    }
    double v16 = 35.0;
    if (v10 == (id)19) {
      double v16 = 17.5;
    }
    if (v14 == (id)21) {
      double v11 = 10.5;
    }
    else {
      double v11 = v16;
    }
    if (v14 == (id)21) {
      double v12 = 10.5;
    }
    else {
      double v12 = v15;
    }
  }
  v25.origin.CGFloat x = sub_100152878(0.0, 0.0, width, height, v11, v12);
  CGFloat x = v25.origin.x;
  CGFloat y = v25.origin.y;
  CGFloat v19 = v25.size.width;
  CGFloat v20 = v25.size.height;
  double MidX = CGRectGetMidX(v25);
  v26.origin.CGFloat x = x;
  v26.origin.CGFloat y = y;
  v26.size.double width = v19;
  v26.size.double height = v20;
  CGRectGetMidY(v26);
  v27.origin.CGFloat x = 0.0;
  v27.origin.CGFloat y = 0.0;
  v27.size.double width = width;
  v27.size.double height = height;
  double v13 = 0.5;
  if (CGRectGetWidth(v27) != 0.0)
  {
    v28.origin.CGFloat x = 0.0;
    v28.origin.CGFloat y = 0.0;
    v28.size.double width = width;
    v28.size.double height = height;
    double v13 = MidX / CGRectGetWidth(v28);
  }
  v29.origin.CGFloat x = 0.0;
  v29.origin.CGFloat y = 0.0;
  v29.size.double width = width;
  v29.size.double height = height;
  if (CGRectGetHeight(v29) != 0.0)
  {
    v30.origin.CGFloat x = 0.0;
    v30.origin.CGFloat y = 0.0;
    v30.size.double width = width;
    v30.size.double height = height;
    CGRectGetHeight(v30);
  }
  v31.origin.CGFloat x = 0.0;
  v31.origin.CGFloat y = 0.0;
  v31.size.double width = width;
  v31.size.double height = height;
  if (CGRectGetWidth(v31) != 0.0)
  {
    v32.origin.CGFloat x = x;
    v32.origin.CGFloat y = y;
    v32.size.double width = v19;
    v32.size.double height = v20;
    CGRectGetWidth(v32);
    v33.origin.CGFloat x = 0.0;
    v33.origin.CGFloat y = 0.0;
    v33.size.double width = width;
    v33.size.double height = height;
    CGRectGetWidth(v33);
  }
  v34.origin.CGFloat x = 0.0;
  v34.origin.CGFloat y = 0.0;
  v34.size.double width = width;
  v34.size.double height = height;
  if (CGRectGetHeight(v34) != 0.0)
  {
    v35.origin.CGFloat x = x;
    v35.origin.CGFloat y = y;
    v35.size.double width = v19;
    v35.size.double height = v20;
    CGRectGetHeight(v35);
    v36.origin.CGFloat x = 0.0;
    v36.origin.CGFloat y = 0.0;
    v36.size.double width = width;
    v36.size.double height = height;
    CGRectGetHeight(v36);
  }

  return v13;
}

uint64_t sub_100150ADC(uint64_t (*a1)(id))
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  CGFloat v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100151FE4();
  if (v8)
  {
    double v9 = v8;
    [v8 insertSubview:v1 atIndex:0];
    id v10 = [v1 topAnchor];
    id v11 = [v9 bottomAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];

    [v12 setActive:1];
    id v13 = [v1 layoutIfNeeded];
    if (!a1 || (uint64_t v14 = a1(v13)) == 0) {
      uint64_t v14 = sub_1001511C4();
    }
    [v2 removeFromSuperview];
  }
  else
  {
    uint64_t v15 = LiveActivitySetupLogger.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v15, v4);
    double v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "No active window. Screenshot can't be taken", v18, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 0;
  }
  return v14;
}

id sub_100150D2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10013385C((uint64_t *)&unk_10029A320);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = -[COSTinkerDiagnosticsOptinViewController imageResource]_0();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    uint64_t v61 = v7;
    uint64_t v62 = v9;
    uint64_t v63 = 0;
    uint64_t v64 = 0;
    char v65 = 1;
    sub_10014EFA0(3, 0, 0, v4);
    swift_bridgeObjectRelease();
    uint64_t v10 = type metadata accessor for URL();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v4, 1, v10) == 1)
    {
      sub_1001338A0((uint64_t)v4);
      long long v50 = 0u;
      long long v51 = 0u;
      uint64_t v52 = 255;
      long long v53 = 0u;
      long long v54 = 0u;
      char v55 = 0;
      uint64_t v12 = LiveActivityImageSource.systemAppleWatchSFSymbol.unsafeMutableAddressor();
      sub_100135674(v12, (uint64_t)v60);
      long long v57 = 0u;
      long long v58 = 0u;
      char v59 = -1;
      sub_100152894((uint64_t)v60, (void (*)(void, void, void, void, void))sub_100135708);
      LiveActivityImages.init(leadingImageSource:trailingImageSource:)();
      sub_100135674(v12, (uint64_t)v56);
      sub_100152894((uint64_t)v56, (void (*)(void, void, void, void, void))sub_100135708);
      LiveActivityImages.init(leadingImageSource:trailingImageSource:)();
      id result = (id)LiveActivityImageMap.init(dynamicIslandCompact:dynamicIslandMinimal:dynamicIslandExpanded:lockScreen:)();
    }
    else
    {
      URL.path(percentEncoded:)(1);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v4, v10);
      id result = (id)LiveActivityImageMap.init(imagePath:)();
    }
    uint64_t v13 = v48;
    char v14 = v49;
    char v15 = v40;
    char v16 = v43;
    uint64_t v17 = v36;
    char v18 = v37;
    char v19 = v28;
    char v20 = v31;
    long long v21 = v27[11];
    *(_OWORD *)a1 = v27[10];
    *(_OWORD *)(a1 + 16) = v21;
    *(unsigned char *)(a1 + 32) = v19;
    *(_OWORD *)(a1 + 40) = v29;
    *(_OWORD *)(a1 + 56) = v30;
    *(unsigned char *)(a1 + 72) = v20;
    long long v22 = v33;
    *(_OWORD *)(a1 + 80) = v32;
    *(_OWORD *)(a1 + 96) = v22;
    long long v23 = v35;
    *(_OWORD *)(a1 + 112) = v34;
    *(_OWORD *)(a1 + 128) = v23;
    *(void *)(a1 + 144) = v17;
    *(unsigned char *)(a1 + 152) = v18;
    long long v24 = v39;
    *(_OWORD *)(a1 + 160) = v38;
    *(_OWORD *)(a1 + 176) = v24;
    *(unsigned char *)(a1 + 192) = v15;
    *(_OWORD *)(a1 + 200) = v41;
    *(_OWORD *)(a1 + 216) = v42;
    *(unsigned char *)(a1 + 232) = v16;
    long long v25 = v45;
    *(_OWORD *)(a1 + 240) = v44;
    *(_OWORD *)(a1 + 256) = v25;
    long long v26 = v47;
    *(_OWORD *)(a1 + 272) = v46;
    *(_OWORD *)(a1 + 288) = v26;
    *(void *)(a1 + 304) = v13;
    *(unsigned char *)(a1 + 312) = v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100150FFC(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  [a1 bounds];
  uint64_t result = [a1 drawViewHierarchyInRect:1];
  if ((result & 1) == 0)
  {
    uint64_t v7 = LiveActivitySetupLogger.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to take view screenshot", v10, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

void sub_100151178(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t sub_1001511C4()
{
  [v0 bounds];
  id v5 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithBounds:v1, v2, v3, v4];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v0;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_100152F34;
  *(void *)(v7 + 24) = v6;
  void v12[4] = sub_100152F54;
  v12[5] = v7;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  _DWORD v12[2] = sub_100151178;
  uint64_t v12[3] = &unk_100248A10;
  uint64_t v8 = _Block_copy(v12);
  id v9 = v0;
  swift_retain();
  swift_release();
  id v10 = [v5 imageWithActions:v8];

  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v5 & 1) == 0) {
    return (uint64_t)v10;
  }
  __break(1u);
  return result;
}

char *sub_100151384()
{
  return &byte_10029BF00;
}

uint64_t sub_100151390()
{
  uint64_t result = swift_beginAccess();
  if ((byte_10029BF00 & 1) == 0)
  {
    sub_100141844(0, &qword_10029A5C8);
    uint64_t result = sub_1001347AC();
    byte_10029BF00 = 1;
  }
  return result;
}

uint64_t sub_100151424(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

id sub_10015143C(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 1)
  {
    swift_bridgeObjectRetain();
    return (id)swift_bridgeObjectRetain();
  }
  else if (!a5)
  {
    return result;
  }
  return result;
}

void sub_10015149C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (!a5)
  {
  }
}

uint64_t sub_1001514FC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100151554(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      char v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1001519E4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_100151704()
{
  double v1 = v0;
  uint64_t v2 = *v0;
  sub_10013385C(&qword_10029ADC8);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    long long v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                double v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

Swift::Int sub_1001519E4(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_100151704();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_100151B80();
      goto LABEL_22;
    }
    sub_100151D34();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  uint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  Swift::Int *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_100151B80()
{
  double v1 = v0;
  sub_10013385C(&qword_10029ADC8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    BOOL v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100151D34()
{
  double v1 = v0;
  uint64_t v2 = *v0;
  sub_10013385C(&qword_10029ADC8);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    double v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_100151FE4()
{
  id v0 = [self sharedApplication];
  id v1 = [v0 connectedScenes];

  sub_100141844(0, &qword_10029ADB0);
  sub_100152BBC();
  uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v2 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v30;
    uint64_t v28 = v31;
    uint64_t v3 = v32;
    uint64_t v4 = v33;
    unint64_t v5 = v34;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v28 = v2 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(v2 + 56);
  }
  int64_t v26 = (unint64_t)(v3 + 64) >> 6;
  uint64_t v27 = v2;
  while (1)
  {
    if (v2 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_45;
      }
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v12 = v29;
      swift_unknownObjectRelease();
      uint64_t v11 = v4;
      uint64_t v9 = v5;
      if (!v29) {
        goto LABEL_45;
      }
    }
    else
    {
      if (v5)
      {
        uint64_t v9 = (v5 - 1) & v5;
        unint64_t v10 = __clz(__rbit64(v5)) | (v4 << 6);
        uint64_t v11 = v4;
      }
      else
      {
        int64_t v13 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_47;
        }
        if (v13 >= v26) {
          goto LABEL_45;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v13);
        uint64_t v11 = v4 + 1;
        if (!v14)
        {
          uint64_t v11 = v4 + 2;
          if (v4 + 2 >= v26) {
            goto LABEL_45;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v11);
          if (!v14)
          {
            uint64_t v11 = v4 + 3;
            if (v4 + 3 >= v26) {
              goto LABEL_45;
            }
            unint64_t v14 = *(void *)(v28 + 8 * v11);
            if (!v14)
            {
              uint64_t v11 = v4 + 4;
              if (v4 + 4 >= v26) {
                goto LABEL_45;
              }
              unint64_t v14 = *(void *)(v28 + 8 * v11);
              if (!v14)
              {
                uint64_t v15 = v4 + 5;
                while (v26 != v15)
                {
                  unint64_t v14 = *(void *)(v28 + 8 * v15++);
                  if (v14)
                  {
                    uint64_t v11 = v15 - 1;
                    goto LABEL_29;
                  }
                }
LABEL_45:
                sub_100152C24();
                return;
              }
            }
          }
        }
LABEL_29:
        uint64_t v9 = (v14 - 1) & v14;
        unint64_t v10 = __clz(__rbit64(v14)) + (v11 << 6);
      }
      id v12 = *(id *)(*(void *)(v2 + 48) + 8 * v10);
      if (!v12) {
        goto LABEL_45;
      }
    }
    self;
    uint64_t v16 = swift_dynamicCastObjCClass();
    if (v16) {
      break;
    }
LABEL_9:

    uint64_t v4 = v11;
    unint64_t v5 = v9;
  }
  unint64_t v17 = (void *)v16;
  id v18 = v12;
  id v19 = [v17 windows];
  sub_100141844(0, &qword_10029ADC0);
  unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v20 >> 62))
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v21) {
      goto LABEL_34;
    }
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v21)
  {
LABEL_8:

    swift_bridgeObjectRelease();
    uint64_t v2 = v27;
    goto LABEL_9;
  }
LABEL_34:
  uint64_t v22 = 4;
  while (1)
  {
    id v23 = (v20 & 0xC000000000000001) != 0
        ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
        : *(id *)(v20 + 8 * v22);
    unint64_t v24 = v23;
    uint64_t v25 = v22 - 3;
    if (__OFADD__(v22 - 4, 1)) {
      break;
    }
    if ([v23 isKeyWindow])
    {
      swift_bridgeObjectRelease();

      goto LABEL_45;
    }

    ++v22;
    if (v25 == v21) {
      goto LABEL_8;
    }
  }
  __break(1u);
LABEL_47:
  __break(1u);
}

id sub_100152400()
{
  id v0 = [objc_allocWithZone((Class)BPSIllustratedWatchView) initWithFrame:CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setUsingCompactWatchAsset:1];
  id result = -[COSTinkerDiagnosticsOptinViewController imageResource]_0();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v2 = result;
  [v0 setScreenImageName:result];

  id result = [v0 watchScreenImageView];
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v3 = result;
  id v4 = [result image];

  id result = [objc_allocWithZone((Class)COSWatchView) initWithStyle:3];
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  unint64_t v5 = result;
  [result setTranslatesAutoresizingMaskIntoConstraints:0];
  [v5 watchScreenInsetGuide];
  double v7 = v6;
  double v9 = v8;

  id v10 = [self standardUserDefaults];
  NSString v11 = String._bridgeToObjectiveC()();
  unsigned __int8 v12 = [v10 BOOLForKey:v11];

  if ((v12 & 1) == 0)
  {
    if (v4)
    {
      [v4 size];
      double v7 = v13;
      double v9 = v14;
    }
  }
  type metadata accessor for COSWatchCursiveTextView();
  id v15 = v4;
  uint64_t v16 = sub_10014A808(v4, 30.0, v7, v9);
  uint64_t v17 = sub_100150ADC(0);

  return (id)v17;
}

id sub_100152630()
{
  id v0 = [self sharedApplication];
  self;
  id v1 = (void *)swift_dynamicCastObjCClass();
  if (v1)
  {
    id v2 = [v1 setupController];

    if (v2)
    {
      id v3 = [v2 activePairingDevice];

      if (v3) {
        goto LABEL_7;
      }
    }
  }
  else
  {
  }
  id v3 = (id)BPSGetActiveSetupCompletedDevice();
  if (v3)
  {
LABEL_7:
    id v4 = [self sizeFromDevice:v3];
LABEL_10:
    id v6 = v4;

    return v6;
  }
  id result = [self sharedDeviceController];
  if (result)
  {
    id v3 = result;
    id v4 = [result size];
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100152750()
{
  return _swift_deallocObject(v0, 48, 7);
}

id sub_100152790()
{
  id v1 = (void *)*((void *)v0 + 2);
  id v2 = (void *)*((void *)v0 + 3);
  double v3 = v0[4];
  double v4 = v0[5];
  [v1 size];
  [v1 drawInRect:CGRectMake(0.0, 0.0, v5, v6)];
  [v2 size];

  return [v2 drawInRect:v3, v4, v7, v8];
}

uint64_t sub_100152828()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100152838()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100152860(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100152870()
{
  return swift_release();
}

double sub_100152878(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

uint64_t sub_100152894(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1001528D4()
{
  return sub_100150FFC(*(void **)(v0 + 16));
}

uint64_t sub_1001528DC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100152914()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t initializeBufferWithCopyOfBuffer for LiveActivityImageProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for LiveActivityImageProvider(uint64_t a1)
{
}

uint64_t initializeWithCopy for LiveActivityImageProvider(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_10015143C(*(id *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for LiveActivityImageProvider(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_10015143C(*(id *)a2, v4, v5, v6, v7);
  double v8 = *(void **)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_10015149C(v8, v9, v10, v11, v12);
  return a1;
}

__n128 initializeWithTake for LiveActivityImageProvider(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for LiveActivityImageProvider(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_10015149C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveActivityImageProvider(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LiveActivityImageProvider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100152B34(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_100152B4C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityImageProvider()
{
  return &type metadata for LiveActivityImageProvider;
}

ValueMetadata *type metadata accessor for LiveActivityImageGeneratorManager()
{
  return &type metadata for LiveActivityImageGeneratorManager;
}

__n128 sub_100152B88(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

unint64_t sub_100152BBC()
{
  unint64_t result = qword_10029ADB8;
  if (!qword_10029ADB8)
  {
    sub_100141844(255, &qword_10029ADB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10029ADB8);
  }
  return result;
}

uint64_t sub_100152C24()
{
  return swift_release();
}

uint64_t sub_100152C2C()
{
  return _swift_deallocObject(v0, 80, 7);
}

void sub_100152C6C()
{
  id v1 = (void *)*((void *)v0 + 2);
  CGFloat v2 = v0[3];
  CGFloat v3 = v0[4];
  int v4 = (void *)*((void *)v0 + 5);
  double v5 = v0[6];
  double v6 = v0[7];
  [v1 size];
  v22.size.double width = v7;
  v22.size.double height = v8;
  v22.origin.double x = 0.0;
  v22.origin.double y = 0.0;
  CGRect v23 = CGRectInset(v22, v2, v3);
  double x = v23.origin.x;
  double y = v23.origin.y;
  double width = v23.size.width;
  double height = v23.size.height;
  [v1 drawInRect:];
  if (v4)
  {
    double v13 = sub_100152878(x, y, width, height, v5, v6);
    double v15 = v14;
    double v17 = v16;
    double v19 = v18;
    id v20 = v4;
    [v20 drawInRect:v13, v15, v17, v19];
  }
}

uint64_t sub_100152DAC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100152DBC()
{
  return _swift_deallocObject(v0, 40, 7);
}

id sub_100152DF4()
{
  return [*(id *)(v0 + 16) drawInRect:0.0, 0.0, *(double *)(v0 + 24), *(double *)(v0 + 32)];
}

uint64_t sub_100152E10()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100152E20(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100152E40(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

uint64_t sub_100152E80(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100152EA0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void sub_100152EDC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_100152F58()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t downsample_2x2_2Hx32W_N64()
{
  return sub_100152F94();
}

uint64_t sub_100152F98(const char *a1, uint64_t a2, uint8x16_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, const char *a7)
{
  do
  {
    int8x16x2_t v11 = vld2q_s8(a1);
    a1 += 32;
    int8x16x2_t v12 = vld2q_s8(a7);
    a7 += 32;
    *a3++ = vhaddq_u8(vhaddq_u8((uint8x16_t)v11.val[0], (uint8x16_t)v12.val[0]), vhaddq_u8((uint8x16_t)v11.val[1], (uint8x16_t)v12.val[1]));
  }
  while (v8-- > 1);
  uint64_t result = (uint64_t)&a1[2 * a2 + -32 * a6];
  if (v7 > 1) {
    return sub_100152F94(result);
  }
  return result;
}

uint64_t downsample_3x3_3Hx24W_N64()
{
  return sub_100153004();
}

uint64_t sub_100153008@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, int8x8_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, const char *a7@<X6>, const char *a8@<X7>, uint64_t a9@<X8>)
{
  do
  {
    int8x8x3_t v18 = vld3_s8(a1);
    a1 += 24;
    int8x8x3_t v19 = vld3_s8(a7);
    a7 += 24;
    int8x8x3_t v20 = vld3_s8(a8);
    a8 += 24;
    *a3++ = vmovn_s16(vqdmulhq_s16((int16x8_t)vaddw_u8(vaddw_u8(vaddw_u8(vaddw_u8(vaddw_u8(vaddw_u8(vaddw_u8(vaddl_u8((uint8x8_t)v18.val[0], (uint8x8_t)v18.val[1]), (uint8x8_t)v18.val[2]), (uint8x8_t)v19.val[0]), (uint8x8_t)v19.val[1]), (uint8x8_t)v19.val[2]), (uint8x8_t)v20.val[0]), (uint8x8_t)v20.val[1]), (uint8x8_t)v20.val[2]), v12));
  }
  while (v11-- > 1);
  uint64_t result = (uint64_t)&a1[a9];
  double v15 = &a7[a9];
  double v16 = &a8[a9];
  double v17 = (char *)a3 + v9;
  if (v10 > 1) {
    return sub_100153004(result, a2, v17, a4, a5, a6, v15, v16);
  }
  return result;
}

uint64_t downsample_4x4_4Hx32W_N64()
{
  return sub_100153084();
}

uint64_t sub_100153088@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, int8x8_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, const char *a7@<X6>, const char *a8@<X7>, const char *a9@<X8>)
{
  do
  {
    int8x16x2_t v18 = vld2q_s8(a1);
    a1 += 32;
    int8x16x2_t v19 = vld2q_s8(a7);
    a7 += 32;
    int8x16x2_t v20 = vld2q_s8(a8);
    a8 += 32;
    int8x16x2_t v21 = vld2q_s8(a9);
    a9 += 32;
    *a3++ = vrshrn_n_s16((int16x8_t)vpadalq_u8(vpadalq_u8(vpadalq_u8(vpadalq_u8(vpadalq_u8(vpadalq_u8(vpadalq_u8(vpaddlq_u8((uint8x16_t)v18.val[0]), (uint8x16_t)v18.val[1]), (uint8x16_t)v19.val[0]), (uint8x16_t)v19.val[1]), (uint8x16_t)v20.val[0]), (uint8x16_t)v20.val[1]), (uint8x16_t)v21.val[0]), (uint8x16_t)v21.val[1]), 4uLL);
  }
  while (v12-- > 1);
  uint64_t result = (uint64_t)&a1[v9];
  double v15 = &a7[v9];
  double v16 = &a8[v9];
  double v17 = (char *)a3 + v10;
  if (v11 > 1) {
    return sub_100153084(result, a2, v17, a4, a5, a6, v15, v16);
  }
  return result;
}

uint64_t downsample_5x5_5Hx15W_N64()
{
  return sub_100153124();
}

uint64_t sub_100153128@<X0>(uint8x16_t *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  do
  {
    uint8x16_t v10 = *a1;
    uint64_t v9 = (uint8x16_t *)((char *)a1 + a2);
    uint8x16_t v12 = *v9;
    uint64_t v11 = (uint8x16_t *)((char *)v9 + a2);
    uint8x16_t v14 = *v11;
    double v13 = (uint8x16_t *)((char *)v11 + a2);
    uint8x16_t v16 = *v13;
    double v15 = (uint8x16_t *)((char *)v13 + a2);
    uint8x16_t v17 = *v15;
    a1 = (uint8x16_t *)((char *)v15 + a4);
    int8x16_t v18 = (int8x16_t)vaddw_u8(vaddw_u8(vaddw_u8(vaddl_u8(*(uint8x8_t *)v10.i8, *(uint8x8_t *)v12.i8), *(uint8x8_t *)v14.i8), *(uint8x8_t *)v16.i8), *(uint8x8_t *)v17.i8);
    int8x16_t v19 = (int8x16_t)vaddw_high_u8(vaddw_high_u8(vaddw_high_u8(vaddl_high_u8(v10, v12), v14), v16), v17);
    int16x8_t v20 = (int16x8_t)vandq_s8(v18, v8);
    v20.i16[0] = vaddvq_s16(v20);
    *a3 = vmovn_s16(vqdmulhq_s16(v20, v7)).u8[0];
    int8x16x2_t v21 = a3 + 1;
    int16x8_t v22 = (int16x8_t)vandq_s8(vextq_s8(v18, v19, 0xAuLL), v8);
    v22.i16[0] = vaddvq_s16(v22);
    *v21++ = vmovn_s16(vqdmulhq_s16(v22, v7)).u8[0];
    int16x8_t v23 = (int16x8_t)vandq_s8(vextq_s8(v19, v19, 4uLL), v8);
    v23.i16[0] = vaddvq_s16(v23);
    unsigned char *v21 = vmovn_s16(vqdmulhq_s16(v23, v7)).u8[0];
    a3 = v21 + 1;
  }
  while (v6-- > 1);
  uint64_t result = (uint64_t)a1->i64 + a5;
  if (v5 > 1) {
    return sub_100153124(result);
  }
  return result;
}

uint64_t downsample_6x6_6Hx48W_N64(__n128 a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7)
{
  return sub_1001531C8(a1, a2, a3, a4, a5, a6, a7, (__n128)vdupq_lane_s16((int16x4_t)910, 0));
}

uint64_t sub_1001531C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001531E0(a1 + 4 * a2 + 2 * a2, a2, a3 + a4);
}

uint64_t sub_1001531E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, const char *a6@<X6>, int8x8_t *a7@<X8>, int16x8_t a8@<Q7>)
{
  do
  {
    uint64_t v9 = a6;
    int8x16x3_t v18 = vld3q_s8(v9);
    uint8x16_t v10 = &v9[a2];
    int8x16x3_t v21 = vld3q_s8(v10);
    uint64_t v11 = &v10[a2];
    uint16x8_t v12 = vpadalq_u8(vpadalq_u8(vpadalq_u8(vpadalq_u8(vpadalq_u8(vpaddlq_u8((uint8x16_t)v18.val[0]), (uint8x16_t)v18.val[1]), (uint8x16_t)v18.val[2]), (uint8x16_t)v21.val[0]), (uint8x16_t)v21.val[1]), (uint8x16_t)v21.val[2]);
    int8x16x3_t v19 = vld3q_s8(v11);
    double v13 = &v11[a2];
    int8x16x3_t v22 = vld3q_s8(v13);
    uint8x16_t v14 = &v13[a2];
    uint16x8_t v15 = vpadalq_u8(vpadalq_u8(vpadalq_u8(vpadalq_u8(vpadalq_u8(vpadalq_u8(v12, (uint8x16_t)v19.val[0]), (uint8x16_t)v19.val[1]), (uint8x16_t)v19.val[2]), (uint8x16_t)v22.val[0]), (uint8x16_t)v22.val[1]), (uint8x16_t)v22.val[2]);
    int8x16x3_t v20 = vld3q_s8(v14);
    uint8x16_t v16 = &v14[a2];
    int8x16x3_t v23 = vld3q_s8(v16);
    *a7++ = vmovn_s16(vqdmulhq_s16((int16x8_t)vpadalq_u8(vpadalq_u8(vpadalq_u8(vpadalq_u8(vpadalq_u8(vpadalq_u8(v15, (uint8x16_t)v20.val[0]), (uint8x16_t)v20.val[1]), (uint8x16_t)v20.val[2]), (uint8x16_t)v23.val[0]), (uint8x16_t)v23.val[1]), (uint8x16_t)v23.val[2]), a8));
    a6 += 48;
  }
  while (v8-- > 1);
  if (a5 > 1) {
    return sub_1001531C8(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t convertUV2SignalSpace_Hx16W_N64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  return sub_10015328C((__n128)vdupq_lane_s16((int16x4_t)(a7 >> 16), 0), (__n128)vdupq_lane_s16((int16x4_t)a7, 0), (__n128)vdupq_lane_s16((int16x4_t)((a8 << 6) + 32), 0));
}

uint64_t sub_10015328C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001532A0(a1 + a2, a2, a3 + a4);
}

uint64_t sub_1001532A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, const char *a6@<X6>, int8x16_t *a7@<X7>, uint64_t a8@<X8>, int16x8_t a9@<Q0>, int16x8_t a10@<Q1>, int16x8_t a11@<Q2>)
{
  do
  {
    int8x16x2_t v12 = vld2q_s8(a6);
    a6 += 32;
    *a7++ = vqshrun_high_n_s16(vqshrun_n_s16(vqaddq_s16(vqaddq_s16(vqdmulhq_s16((int16x8_t)vshll_n_u8(*(uint8x8_t *)v12.val[0].i8, 6uLL), a9), a11), vqdmulhq_s16((int16x8_t)vshll_n_u8(*(uint8x8_t *)v12.val[1].i8, 6uLL), a10)), 6uLL), vqaddq_s16(vqaddq_s16(vqdmulhq_s16((int16x8_t)vshll_high_n_u8((uint8x16_t)v12.val[0], 6uLL), a9), a11), vqdmulhq_s16((int16x8_t)vshll_high_n_u8((uint8x16_t)v12.val[1], 6uLL), a10)), 6uLL);
  }
  while (a8-- > 1);
  if (a5 > 1) {
    return sub_10015328C(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t convertUVDownsample_2x2_2Hx16W_N64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  return sub_100153318((__n128)vdupq_lane_s16((int16x4_t)(a7 >> 16), 0), (__n128)vdupq_lane_s16((int16x4_t)a7, 0), (__n128)vdupq_lane_s16((int16x4_t)(8 * a8 + 4), 0));
}

uint64_t sub_100153318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100153330(a1 + 2 * a2, a2, a3 + a4);
}

uint64_t sub_100153330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int16x8_t a6, int16x8_t a7, int16x8_t a8, uint64_t a9, const char *a10, const char *a11)
{
  do
  {
    int8x16x2_t v14 = vld2q_s8(a10);
    a10 += 32;
    int8x16x2_t v15 = vld2q_s8(a11);
    a11 += 32;
    *v11++ = vqshrun_n_s16(vqaddq_s16(vqaddq_s16(vqdmulhq_s16((int16x8_t)vqshlq_n_u16(vpadalq_u8(vpaddlq_u8((uint8x16_t)v14.val[1]), (uint8x16_t)v15.val[1]), 3uLL), a7), a8), vqdmulhq_s16((int16x8_t)vqshlq_n_u16(vpadalq_u8(vpaddlq_u8((uint8x16_t)v14.val[0]), (uint8x16_t)v15.val[0]), 3uLL), a6)), 3uLL);
  }
  while (v12-- > 1);
  if (a5 > 1) {
    return sub_100153318(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t convertUVDownsample_3x3_3Hx24W_N64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  return sub_1001533A0((__n128)vdupq_lane_s16((int16x4_t)(a7 >> 16), 0), (__n128)vdupq_lane_s16((int16x4_t)a7, 0), (__n128)vdupq_lane_s16((int16x4_t)(8 * a8 + 4), 0));
}

uint64_t sub_1001533A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001533C4(a1 + a2 + a2 + a2, a2, a3 + a4);
}

uint64_t sub_1001533C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, const __int16 *a6@<X6>, const __int16 *a7@<X7>, const __int16 *a8@<X8>, int16x8_t a9@<Q0>, int16x8_t a10@<Q1>, int16x8_t a11@<Q2>)
{
  do
  {
    int16x8x3_t v16 = vld3q_s16(a6);
    a6 += 24;
    int16x8x3_t v17 = vld3q_s16(a7);
    a7 += 24;
    int16x8x3_t v18 = vld3q_s16(a8);
    a8 += 24;
    int16x8_t v13 = (int16x8_t)vaddw_u8(vaddw_u8(vaddw_u8(vaddw_u8(vaddw_u8(vaddw_u8(vaddw_u8(vaddl_u8(*(uint8x8_t *)v16.val[0].i8, *(uint8x8_t *)v16.val[1].i8), *(uint8x8_t *)v16.val[2].i8), *(uint8x8_t *)v17.val[0].i8), *(uint8x8_t *)v17.val[1].i8), *(uint8x8_t *)v17.val[2].i8), *(uint8x8_t *)v18.val[0].i8), *(uint8x8_t *)v18.val[1].i8), *(uint8x8_t *)v18.val[2].i8);
    int16x8_t v14 = (int16x8_t)vaddw_high_u8(vaddw_high_u8(vaddw_high_u8(vaddw_high_u8(vaddw_high_u8(vaddw_high_u8(vaddw_high_u8(vaddl_high_u8((uint8x16_t)v16.val[0], (uint8x16_t)v16.val[1]), (uint8x16_t)v16.val[2]), (uint8x16_t)v17.val[0]), (uint8x16_t)v17.val[1]), (uint8x16_t)v17.val[2]), (uint8x16_t)v18.val[0]), (uint8x16_t)v18.val[1]), (uint8x16_t)v18.val[2]);
    *v11++ = vqshrun_n_s16(vqaddq_s16(vqaddq_s16(vqdmulhq_s16((int16x8_t)vqshlq_n_u16((uint16x8_t)vuzp2q_s16(v13, v14), 3uLL), a10), a11), vqdmulhq_s16((int16x8_t)vqshlq_n_u16((uint16x8_t)vuzp1q_s16(v13, v14), 3uLL), a9)), 3uLL);
  }
  while (v12-- > 1);
  if (a5 > 1) {
    return sub_1001533A0(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t convertUVDownsample_4x4_4Hx32W_N64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  return sub_100153470((__n128)vdupq_lane_s16((int16x4_t)(a7 >> 16), 0), (__n128)vdupq_lane_s16((int16x4_t)a7, 0), (__n128)vdupq_lane_s16((int16x4_t)((a8 << 6) + 32), 0));
}

uint64_t sub_100153470(uint64_t a1, uint64_t a2)
{
  return sub_100153494(a1 + 4 * a2);
}

uint64_t sub_100153494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, const char *a4@<X6>, const char *a5@<X7>, const char *a6@<X8>, int16x8_t a7@<Q0>, int16x8_t a8@<Q1>, int16x8_t a9@<Q2>)
{
  do
  {
    int8x16x4_t v19 = vld4q_s8(a4);
    a4 += 64;
    uint16x8_t v12 = vpadalq_u8(vpaddlq_u8((uint8x16_t)v19.val[0]), (uint8x16_t)v19.val[2]);
    uint16x8_t v13 = vpadalq_u8(vpaddlq_u8((uint8x16_t)v19.val[1]), (uint8x16_t)v19.val[3]);
    int8x16x4_t v20 = vld4q_s8(a5);
    a5 += 64;
    uint16x8_t v14 = vpadalq_u8(vpadalq_u8(v12, (uint8x16_t)v20.val[0]), (uint8x16_t)v20.val[2]);
    uint16x8_t v15 = vpadalq_u8(vpadalq_u8(v13, (uint8x16_t)v20.val[1]), (uint8x16_t)v20.val[3]);
    int8x16x4_t v21 = vld4q_s8(a6);
    a6 += 64;
    uint16x8_t v16 = vpadalq_u8(vpadalq_u8(v14, (uint8x16_t)v21.val[0]), (uint8x16_t)v21.val[2]);
    uint16x8_t v17 = vpadalq_u8(vpadalq_u8(v15, (uint8x16_t)v21.val[1]), (uint8x16_t)v21.val[3]);
    int8x16x4_t v22 = vld4q_s8(v9);
    v9 += 64;
    *v10++ = vqshrun_n_s16(vqaddq_s16(vqaddq_s16(vqdmulhq_s16((int16x8_t)vqshlq_n_u16(vpadalq_u8(vpadalq_u8(v17, (uint8x16_t)v22.val[1]), (uint8x16_t)v22.val[3]), 2uLL), a8), a9), vqdmulhq_s16((int16x8_t)vqshlq_n_u16(vpadalq_u8(vpadalq_u8(v16, (uint8x16_t)v22.val[0]), (uint8x16_t)v22.val[2]), 2uLL), a7)), 6uLL);
  }
  while (v11-- > 1);
  if (a3 > 1) {
    return sub_100153470(a1, a2);
  }
  return a1;
}

void sub_100153518(void *a1)
{
  sub_100153550(a1);

  operator delete();
}

void *sub_100153550(void *result)
{
  *uint64_t result = off_100248DF0;
  if (result[3]) {
    operator delete[]();
  }
  if (result[4]) {
    operator delete[]();
  }
  if (result[5]) {
    operator delete[]();
  }
  if (result[6]) {
    operator delete[]();
  }
  if (result[7]) {
    operator delete[]();
  }
  return result;
}

void sub_100153628()
{
}

void HCImagePerspectiveReader::HCImagePerspectiveReader(HCImagePerspectiveReader *this, unsigned int a2, unsigned int a3, unsigned int a4, int a5, unsigned int a6)
{
  this->var0 = 0;
  this->var1 = a2;
  this->var2 = a3;
  this->var5 = 0;
  this->var6 = 0;
  if (a6) {
    unsigned int v6 = a6;
  }
  else {
    unsigned int v6 = 110;
  }
  this->var8 = v6;
  if ((a5 - 1) >= 4) {
    int v7 = 1;
  }
  else {
    int v7 = a5;
  }
  this->var3 = a4;
  this->var4 = v7;
}

void HCImagePerspectiveReader::~HCImagePerspectiveReader(HCImagePerspectiveReader *this)
{
  if (this->var0)
  {
    var5 = this->var5;
    if (var5)
    {
      uint64_t v3 = *((void *)var5 + 1);
      if (v3)
      {
        if (*(void *)(v3 + 16)) {
          operator delete[]();
        }
        if (*(void *)(v3 + 24)) {
          operator delete[]();
        }
        operator delete();
      }
      *((void *)var5 + 1) = 0;
      if (*(void *)var5)
      {
        (*(void (**)(void))(**(void **)var5 + 8))(*(void *)var5);
        var5 = this->var5;
      }
      *(void *)var5 = 0;
      uint64_t v4 = *((void *)var5 + 2);
      if (v4)
      {
        (*(void (**)(void))(*(void *)v4 + 24))(*((void *)var5 + 2));
        var5 = this->var5;
      }
      *((void *)var5 + 2) = 0;
      operator delete();
    }
  }
}

void HCImagePerspectiveReader::Initialize(HCImagePerspectiveReader *this)
{
}

void HCImagePerspectiveReader::Reset(HCImagePerspectiveReader *this)
{
  this->var0 = 0;
  var5 = this->var5;
  if (var5)
  {
    uint64_t v3 = *((void *)var5 + 1);
    if (v3)
    {
      if (*(void *)(v3 + 16)) {
        operator delete[]();
      }
      if (*(void *)(v3 + 24)) {
        operator delete[]();
      }
      operator delete();
    }
    if (*(void *)var5)
    {
      (*(void (**)(void))(**(void **)var5 + 8))(*(void *)var5);
      var5 = this->var5;
    }
    uint64_t v4 = *((void *)var5 + 2);
    if (v4)
    {
      (*(void (**)(void))(*(void *)v4 + 24))(*((void *)var5 + 2));
      var5 = this->var5;
    }
    unsigned int var8 = this->var8;
    *((_DWORD *)var5 + 6) = 8 * var8;
    *((_DWORD *)var5 + 7) = var8;
    unsigned int v6 = 8 * var8 + 32;
    *((_DWORD *)var5 + 9) = v6;
    *((_DWORD *)var5 + 10) = v6 >> 3;
    *((_DWORD *)var5 + 8) = vcvtps_u32_f32((float)(v6 >> 3) / 15.0);
    *((void *)var5 + 1) = 0;
    *((void *)var5 + 2) = 0;
    *(void *)var5 = 0;
    operator new();
  }
  operator new();
}

void sub_100154984(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100154A08((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100154998()
{
  if (*(void *)(v0 + 296)) {
    operator delete[]();
  }
  if (*(void *)(v0 + 272)) {
    operator delete[]();
  }
  sub_10016F8D4(v0);
  operator delete();
}

uint64_t sub_100154A08(uint64_t result)
{
  *(void *)uint64_t result = off_1002490B8;
  if (*(void *)(result + 16)) {
    operator delete[]();
  }
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  return result;
}

void sub_100154A6C(uint64_t a1)
{
  *(void *)a1 = off_1002490B8;
  if (*(void *)(a1 + 16)) {
    operator delete[]();
  }
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 8) = 0;

  operator delete();
}

float HCImagePerspectiveReader::GetDecoderProgress(HCImagePerspectiveReader *this)
{
  return (float)*(unsigned int *)(*((void *)this->var5 + 1) + 4) / (float)**((unsigned int **)this->var5 + 1);
}

BOOL HCImagePerspectiveReader::IsPayloadReady(HCImagePerspectiveReader *this)
{
  return this->var6 != 0;
}

char *HCImagePerspectiveReader::GetPayloadBytePtr(HCImagePerspectiveReader *this)
{
  return this->var6;
}

uint64_t HCImagePerspectiveReader::GetNPayloadBytes(HCImagePerspectiveReader *this)
{
  return *((unsigned int *)this->var5 + 7);
}

uint64_t HCImagePerspectiveReader::ProcessUVFrame(uint64_t a1, uint64_t a2, int a3, int a4, unsigned int a5, uint64_t a6)
{
  if (!*(unsigned char *)a1) {
    return 4;
  }
  if (!a2) {
    return 3;
  }
  if (a5 < 2 * a4) {
    return 2;
  }
  if (*(_DWORD *)(a1 + 4) != a3 || *(_DWORD *)(a1 + 8) != a4 || *(_DWORD *)(a1 + 12) != a5) {
    return 5;
  }
  if ((*(unsigned int (**)(void))(***(void ***)(a1 + 24) + 56))(**(void **)(a1 + 24))) {
    return 7;
  }
  if (a6)
  {
    *(_DWORD *)(a6 + 4) = 0;
    *(unsigned char *)a6 = 0;
  }
  if (sub_100168D20(*(void *)(*(void *)(a1 + 24) + 16))) {
    return 7;
  }
  uint64_t v10 = *(void *)(*(void *)(a1 + 24) + 16);
  uint64_t v11 = *(unsigned int *)(v10 + 40);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = 0;
  uint64_t v13 = *(void *)(v10 + 24);
  uint16x8_t v14 = (_DWORD *)(v13 + 40);
  do
  {
    if (*(v14 - 6) == 3 && *v14 == 10)
    {
      if (a6)
      {
        *(float *)(a6 + 4) = (float)*(int *)(v13 + 136 * v12 + 12) * 0.00012207;
        *(unsigned char *)a6 = 1;
      }
      operator new[]();
    }
    uint64_t v6 = 0;
    ++v12;
    v14 += 34;
  }
  while (v11 != v12);
  return v6;
}

void sub_100154E58()
{
}

uint64_t sub_100154E9C(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = 0;
  uint64_t v4 = *(void *)(*(void *)(result + 8 * a3 + 16) + 16) + 8;
  uint64_t v5 = (_WORD *)(a2 + 8);
  do
  {
    int v6 = *(char *)(v4 + v3);
    if (v6 < 0)
    {
      *(v5 - 4) = -*(v5 - 4);
      if ((v6 & 0x40) == 0)
      {
LABEL_5:
        if ((v6 & 0x20) == 0) {
          goto LABEL_6;
        }
        goto LABEL_14;
      }
    }
    else if ((v6 & 0x40) == 0)
    {
      goto LABEL_5;
    }
    *(v5 - 3) = -*(v5 - 3);
    if ((v6 & 0x20) == 0)
    {
LABEL_6:
      if ((v6 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_15;
    }
LABEL_14:
    *(v5 - 2) = -*(v5 - 2);
    if ((v6 & 0x10) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }
LABEL_15:
    *(v5 - 1) = -*(v5 - 1);
    if ((v6 & 8) == 0)
    {
LABEL_8:
      if ((v6 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_17;
    }
LABEL_16:
    *uint64_t v5 = -*v5;
    if ((v6 & 4) == 0)
    {
LABEL_9:
      if ((v6 & 2) != 0) {
        goto LABEL_18;
      }
      goto LABEL_10;
    }
LABEL_17:
    v5[1] = -v5[1];
    if ((v6 & 2) != 0)
    {
LABEL_18:
      _OWORD v5[2] = -v5[2];
      if ((v6 & 1) == 0) {
        goto LABEL_2;
      }
      goto LABEL_19;
    }
LABEL_10:
    if ((v6 & 1) == 0) {
      goto LABEL_2;
    }
LABEL_19:
    void v5[3] = -v5[3];
LABEL_2:
    ++v3;
    v5 += 8;
  }
  while (v3 != 128);
  return result;
}

uint64_t sub_100154F7C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  *a3 = 0;
  *(void *)(a1 + 72) = a2;
  uint64_t result = *(void *)(a1 + 112);
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      int v6 = *(unsigned __int8 **)(*(void *)(result + 8 * v5 + 16) + 16);
      uint64_t result = *v6;
      if ((char)*v6 < 0)
      {
        uint64_t result = __maskrune(result, 0x40000uLL);
        if (!result) {
          return result;
        }
      }
      else if ((_DefaultRuneLocale.__runetype[result] & 0x40000) == 0)
      {
        return result;
      }
      uint64_t v7 = v6[1];
      if ((char)v6[1] < 0)
      {
        uint64_t result = __maskrune(v7, 0x40000uLL);
        if (!result) {
          return result;
        }
      }
      else
      {
        uint64_t result = _DefaultRuneLocale.__runetype[v7] & 0x40000;
        if (!result) {
          return result;
        }
      }
      uint64_t v8 = v6[2];
      if ((char)v6[2] < 0)
      {
        uint64_t result = __maskrune(v8, 0x40000uLL);
        if (!result) {
          return result;
        }
      }
      else
      {
        uint64_t result = _DefaultRuneLocale.__runetype[v8] & 0x40000;
        if (!result) {
          return result;
        }
      }
      uint64_t v9 = v6[3];
      if ((char)v6[3] < 0)
      {
        uint64_t result = __maskrune(v9, 0x40000uLL);
        if (!result) {
          return result;
        }
      }
      else
      {
        uint64_t result = _DefaultRuneLocale.__runetype[v9] & 0x40000;
        if (!result) {
          return result;
        }
      }
      ++v5;
      uint64_t result = *(void *)(a1 + 112);
      uint64_t v10 = *(int *)(result + 8);
    }
    while (v5 < v10);
    if ((int)v10 >= 1)
    {
      sub_100154E9C(result, *(void *)(a1 + 72), 0);
      operator new[]();
    }
  }
  return result;
}

unint64_t sub_1001564C8(unint64_t result, unsigned int a2, int a3, unsigned int a4, uint64_t a5)
{
  uint64_t v5 = 0;
  uint64_t v6 = a2 - 1;
  uint64_t v7 = a4;
  uint64_t v8 = (unsigned __int8 *)(result + a4);
  unsigned int v9 = *(unsigned __int8 *)result;
  unsigned int v10 = *v8;
  BOOL v11 = v9 >= v10;
  BOOL v12 = v9 != v10;
  if (v11) {
    int v13 = v12;
  }
  else {
    int v13 = -1;
  }
  int v14 = -v13;
  v56[0] = -(char)v13;
  uint64_t v15 = result + 1 + a4;
  do
  {
    uint16x8_t v16 = (unsigned __int8 *)(v15 + v5);
    unsigned int v17 = *(unsigned __int8 *)(v15 + v5);
    BOOL v11 = v17 >= v9;
    char v18 = v17 != v9;
    if (!v11) {
      char v18 = -1;
    }
    int8x16x4_t v19 = &v56[v5];
    unsigned int v20 = *(unsigned __int8 *)(result + 1 + v5);
    BOOL v11 = v20 >= v9;
    char v21 = v20 != v9;
    if (!v11) {
      char v21 = -1;
    }
    *(unsigned char *)(a5 + v5) = v13 - (v18 + v21);
    uint64_t v22 = v5 + 1;
    unsigned int v23 = *(v16 - 1);
    BOOL v11 = v20 >= v23;
    char v24 = v20 != v23;
    if (!v11) {
      char v24 = -1;
    }
    char v25 = v24 + v21;
    unsigned char *v19 = v14 - v24;
    unsigned int v26 = *v16;
    BOOL v11 = v20 >= v26;
    char v27 = v20 != v26;
    if (!v11) {
      char v27 = -1;
    }
    LOBYTE(v13) = v25 + v27;
    LOBYTE(v14) = v18 - v27;
    v19[1] = v18 - v27;
    uint64_t v5 = v22;
    unsigned int v9 = v20;
  }
  while (v6 != v22);
  *(unsigned char *)(a5 + v6) = v13;
  uint64_t v28 = a2;
  int v29 = a3 - 2;
  uint64_t v30 = result + 2 * v7 + 1;
  uint64_t v31 = a5 + a2;
  LODWORD(result) = 1;
  do
  {
    uint64_t v32 = 0;
    a5 += v28;
    uint64_t v33 = &v8[v7];
    unsigned int v34 = *v8;
    unsigned int v35 = v8[v7];
    BOOL v11 = v35 >= v34;
    char v36 = v35 != v34;
    if (!v11) {
      char v36 = -1;
    }
    char v37 = v56[0] - v36;
    v56[0] = v36;
    do
    {
      long long v38 = (unsigned __int8 *)(v30 + v32);
      unsigned int v39 = *(unsigned __int8 *)(v30 + v32);
      BOOL v11 = v39 >= v34;
      char v40 = v39 != v34;
      if (!v11) {
        char v40 = -1;
      }
      unsigned int v41 = v8[v32 + 1];
      BOOL v11 = v41 >= v34;
      char v42 = v41 != v34;
      if (!v11) {
        char v42 = -1;
      }
      *(unsigned char *)(v31 + v32) = v37 - (v40 + v42);
      char v43 = v56[v32 + 1];
      unsigned int v44 = *(v38 - 1);
      BOOL v11 = v41 >= v44;
      char v45 = v41 != v44;
      if (!v11) {
        char v45 = -1;
      }
      v56[v32] = v36 - v45;
      unsigned int v46 = *v38;
      BOOL v11 = v41 >= v46;
      BOOL v47 = v41 != v46;
      if (v11) {
        char v48 = v47;
      }
      else {
        char v48 = -1;
      }
      char v36 = v40 - v48;
      v56[v32 + 1] = v40 - v48;
      char v37 = v42 + v43 + v45 + v48;
      ++v32;
      unsigned int v34 = v41;
    }
    while (v6 != v32);
    *(unsigned char *)(a5 + v6) = v37;
    v30 += v7;
    v31 += v28;
    v8 += v7;
    BOOL v49 = result == v29;
    uint64_t result = (result + 1);
  }
  while (!v49);
  uint64_t v50 = 0;
  uint64_t v51 = a5 + v28;
  char v52 = v56[0];
  unsigned int v53 = *v33;
  do
  {
    unsigned int v54 = v33[v50 + 1];
    BOOL v11 = v54 >= v53;
    char v55 = v54 != v53;
    if (!v11) {
      char v55 = -1;
    }
    *(unsigned char *)(v51 + v50) = v52 - v55;
    char v52 = v55 + v56[++v50];
    unsigned int v53 = v54;
  }
  while (v6 != v50);
  *(unsigned char *)(v51 + v6) = v52;
  return result;
}

uint64_t sub_10015671C(uint64_t result, unsigned int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, unsigned __int16 a9, uint64_t a10)
{
  if (!*(_DWORD *)(a7 + 28))
  {
    uint64_t v12 = result;
    uint64_t v13 = 0;
    uint64_t v31 = a7;
    int v14 = a3 << 20;
    int v15 = a4 << 20;
    uint64_t v16 = a8;
    int v17 = 16 * (a8 - 1) * a6;
    int v30 = 16 * a6;
    do
    {
      uint64_t v32 = v13;
      (*(void (**)(int *, uint64_t, void))a10)(&v34, a7, (unsigned __int16)v13);
      int v18 = 0;
      uint64_t v19 = 0;
      do
      {
        int v20 = v35 + v34 * v18;
        if (v20 >= v15) {
          goto LABEL_6;
        }
        if (v20 < 0) {
          goto LABEL_6;
        }
        int v21 = v37 + v36 * v18;
        if (v21 < 0) {
          goto LABEL_6;
        }
        int v22 = v39 + v38 * v18;
        BOOL v23 = v21 < v14 && v22 < v15;
        if (!v23
          || v22 < 0
          || (int v24 = v41 + v40 * v18, v24 < 0)
          || v24 >= v14
          || (int v25 = v18 + 15, v26 = v35 + v34 * (v18 + 15), v26 >= v15)
          || v26 < 0
          || (int v27 = v37 + v36 * v25, v27 < 0)
          || v27 >= v14
          || (int v28 = v39 + v38 * v25, v28 >= v15)
          || v28 < 0
          || (int v29 = v41 + v40 * v25, v29 < 0)
          || v29 >= v14)
        {
LABEL_6:
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a10 + 32))(a5 + v17 + v18, a6);
        }
        else
        {
          uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, void, int *))(a10 + 16))(v12, a2, a5 + v17 + v18, a6, (unsigned __int16)v19, &v34);
        }
        ++v19;
        v18 += 16;
      }
      while (v16 != v19);
      a7 = v31;
      uint64_t v13 = v32 + 1;
      v17 -= v30;
    }
    while (v32 + 1 != a9);
  }
  return result;
}

uint64_t sub_1001568F8(uint64_t result, unsigned int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, unsigned __int16 a9, uint64_t a10)
{
  if (!*(_DWORD *)(a7 + 24))
  {
    uint64_t v12 = result;
    int v13 = 0;
    uint64_t v14 = 0;
    int v15 = a3 << 20;
    int v16 = a4 << 20;
    uint64_t v29 = a8;
    int v30 = 16 * a6;
    uint64_t v31 = a7;
    do
    {
      uint64_t v32 = v14;
      (*(void (**)(int *, uint64_t, void))(a10 + 8))(&v34, a7, (unsigned __int16)v14);
      int v17 = 0;
      uint64_t v18 = 0;
      do
      {
        int v19 = v35 + v34 * v17;
        if (v19 >= v16) {
          goto LABEL_6;
        }
        if (v19 < 0) {
          goto LABEL_6;
        }
        int v20 = v37 + v36 * v17;
        if (v20 < 0) {
          goto LABEL_6;
        }
        int v21 = v17 + 15;
        int v22 = v35 + v34 * (v17 + 15);
        BOOL v23 = v20 < v15 && v22 < v16;
        if (!v23
          || v22 < 0
          || (int v24 = v37 + v36 * v21, v24 < 0)
          || v24 >= v15
          || (int v25 = v39 + v38 * v17, v25 >= v16)
          || v25 < 0
          || (int v26 = v41 + v40 * v17, v26 < 0)
          || v26 >= v15
          || (int v27 = v39 + v38 * v21, v27 >= v16)
          || v27 < 0
          || (int v28 = v41 + v40 * v21, v28 < 0)
          || v28 >= v15)
        {
LABEL_6:
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a10 + 32))(a5 + ((v13 + v17) & 0xFFFFFFF0), a6);
        }
        else
        {
          uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, void, int *))(a10 + 24))(v12, a2, a5 + ((v13 + v17) & 0xFFFFFFF0), a6, (unsigned __int16)v18, &v34);
        }
        ++v18;
        v17 += 16;
      }
      while (a9 != v18);
      a7 = v31;
      uint64_t v14 = v32 + 1;
      v13 += v30;
    }
    while (v32 + 1 != v29);
  }
  return result;
}

void *sub_100156AD0(void *result, unsigned int a2)
{
  *uint64_t result = 0;
  result[1] = 0;
  CGFloat v2 = (void *)((char *)result + a2);
  *CGFloat v2 = 0;
  v2[1] = 0;
  uint64_t v3 = (void *)((char *)result + 2 * a2);
  void *v3 = 0;
  v3[1] = 0;
  uint64_t v4 = (void *)((char *)v3 + a2);
  *uint64_t v4 = 0;
  v4[1] = 0;
  uint64_t v5 = (void *)((char *)result + 4 * a2);
  *uint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = (void *)((char *)v5 + a2);
  *uint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = (void *)((char *)result + 6 * a2);
  void *v7 = 0;
  v7[1] = 0;
  uint64_t v8 = (void *)((char *)result + 7 * a2);
  *uint64_t v8 = 0;
  v8[1] = 0;
  unsigned int v9 = &result[a2];
  void *v9 = 0;
  v9[1] = 0;
  unsigned int v10 = (void *)((char *)v9 + a2);
  *unsigned int v10 = 0;
  v10[1] = 0;
  BOOL v11 = (void *)((char *)result + 10 * a2);
  void *v11 = 0;
  v11[1] = 0;
  uint64_t v12 = (void *)((char *)result + 11 * a2);
  *uint64_t v12 = 0;
  v12[1] = 0;
  int v13 = (void *)((char *)result + 12 * a2);
  void *v13 = 0;
  v13[1] = 0;
  uint64_t v14 = (void *)((char *)result + 13 * a2);
  void *v14 = 0;
  v14[1] = 0;
  int v15 = (void *)((char *)result + 14 * a2);
  *int v15 = 0;
  v15[1] = 0;
  int v16 = (void *)((char *)&result[2 * a2] - a2);
  void *v16 = 0;
  v16[1] = 0;
  return result;
}

int64x2_t sub_100156B80(unint64_t a1, int *a2, int a3)
{
  unsigned int v3 = 16 * a3;
  if ((unint64_t)(a2 + 8) <= a1 || a1 + 256 <= (unint64_t)a2)
  {
    unsigned int v9 = (const float *)(a2 + 7);
    int32x4_t v10 = (int32x4_t)vld1q_dup_f32(v9);
    int8x16_t v11 = (int8x16_t)vdupq_n_s32(v3);
    int32x4_t v12 = (int32x4_t)vorrq_s8(v11, (int8x16_t)xmmword_1001AC130);
    v13.i64[0] = 0x10000000100000;
    v13.i64[1] = 0x10000000100000;
    int32x4_t v14 = vmlaq_s32(v13, v10, v12);
    int8x16_t v15 = (int8x16_t)vceqzq_s32(v14);
    float32x4_t v16 = (float32x4_t)vdupq_n_s32(0x35800000u);
    float32x4_t v17 = vmulq_f32(vcvtq_f32_s32(v14), v16);
    __asm { FMOV            V2.4S, #1.0 }
    int32x4_t v23 = (int32x4_t)vbicq_s8((int8x16_t)vcvtq_n_s32_f32(vdivq_f32(_Q2, v17), 0x14uLL), v15);
    v53.val[0] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_lane_s32(*(int32x2_t *)v23.i8, *(int32x2_t *)a2, 0), 0x14uLL), vmull_high_lane_s32(v23, *(int32x2_t *)a2, 0), 0x14uLL);
    int v24 = (const float *)(a2 + 2);
    int32x4_t v25 = (int32x4_t)vld1q_dup_f32(v24);
    int32x4_t v26 = vmlaq_lane_s32(v25, v12, *(int32x2_t *)(a2 + 1), 0);
    v53.val[1] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_s32(*(int32x2_t *)v26.i8, *(int32x2_t *)v23.i8), 0x14uLL), vmull_high_s32(v26, v23), 0x14uLL);
    v53.val[2] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_lane_s32(*(int32x2_t *)v23.i8, *(int32x2_t *)(a2 + 3), 0), 0x14uLL), vmull_high_lane_s32(v23, *(int32x2_t *)(a2 + 3), 0), 0x14uLL);
    int32x4_t v27 = vmlaq_lane_s32(vdupq_lane_s32(*(int32x2_t *)(a2 + 4), 1), v12, *(int32x2_t *)(a2 + 4), 0);
    v53.val[3] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_s32(*(int32x2_t *)v27.i8, *(int32x2_t *)v23.i8), 0x14uLL), vmull_high_s32(v27, v23), 0x14uLL);
    int v28 = (float *)a1;
    vst4q_f32(v28, v53);
    v28 += 16;
    int32x4_t v29 = (int32x4_t)vld1q_dup_f32(v9);
    int32x4_t v30 = (int32x4_t)vorrq_s8(v11, (int8x16_t)xmmword_1001AC140);
    v17.i64[0] = 0x10000000100000;
    v17.i64[1] = 0x10000000100000;
    int32x4_t v31 = vmlaq_s32((int32x4_t)v17, v29, v30);
    int32x4_t v32 = (int32x4_t)vbicq_s8((int8x16_t)vcvtq_n_s32_f32(vdivq_f32(_Q2, vmulq_f32(vcvtq_f32_s32(v31), v16)), 0x14uLL), (int8x16_t)vceqzq_s32(v31));
    v53.val[0] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_lane_s32(*(int32x2_t *)v32.i8, *(int32x2_t *)a2, 0), 0x14uLL), vmull_high_lane_s32(v32, *(int32x2_t *)a2, 0), 0x14uLL);
    int32x4_t v33 = (int32x4_t)vld1q_dup_f32(v24);
    int32x4_t v34 = vmlaq_lane_s32(v33, v30, *(int32x2_t *)(a2 + 1), 0);
    v53.val[1] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_s32(*(int32x2_t *)v34.i8, *(int32x2_t *)v32.i8), 0x14uLL), vmull_high_s32(v34, v32), 0x14uLL);
    v53.val[2] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_lane_s32(*(int32x2_t *)v32.i8, *(int32x2_t *)(a2 + 3), 0), 0x14uLL), vmull_high_lane_s32(v32, *(int32x2_t *)(a2 + 3), 0), 0x14uLL);
    int32x4_t v35 = vmlaq_lane_s32(vdupq_lane_s32(*(int32x2_t *)(a2 + 4), 1), v30, *(int32x2_t *)(a2 + 4), 0);
    v53.val[3] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_s32(*(int32x2_t *)v35.i8, *(int32x2_t *)v32.i8), 0x14uLL), vmull_high_s32(v35, v32), 0x14uLL);
    vst4q_f32(v28, v53);
    int32x4_t v36 = (int32x4_t)vld1q_dup_f32(v9);
    int32x4_t v37 = (int32x4_t)vorrq_s8(v11, (int8x16_t)xmmword_1001AC150);
    v31.i64[0] = 0x10000000100000;
    v31.i64[1] = 0x10000000100000;
    int32x4_t v38 = vmlaq_s32(v31, v36, v37);
    int32x4_t v39 = (int32x4_t)vbicq_s8((int8x16_t)vcvtq_n_s32_f32(vdivq_f32(_Q2, vmulq_f32(vcvtq_f32_s32(v38), v16)), 0x14uLL), (int8x16_t)vceqzq_s32(v38));
    v53.val[0] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_lane_s32(*(int32x2_t *)v39.i8, *(int32x2_t *)a2, 0), 0x14uLL), vmull_high_lane_s32(v39, *(int32x2_t *)a2, 0), 0x14uLL);
    int32x4_t v40 = (int32x4_t)vld1q_dup_f32(v24);
    int32x4_t v41 = vmlaq_lane_s32(v40, v37, *(int32x2_t *)(a2 + 1), 0);
    v53.val[1] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_s32(*(int32x2_t *)v41.i8, *(int32x2_t *)v39.i8), 0x14uLL), vmull_high_s32(v41, v39), 0x14uLL);
    v53.val[2] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_lane_s32(*(int32x2_t *)v39.i8, *(int32x2_t *)(a2 + 3), 0), 0x14uLL), vmull_high_lane_s32(v39, *(int32x2_t *)(a2 + 3), 0), 0x14uLL);
    int32x4_t v42 = vmlaq_lane_s32(vdupq_lane_s32(*(int32x2_t *)(a2 + 4), 1), v37, *(int32x2_t *)(a2 + 4), 0);
    v53.val[3] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_s32(*(int32x2_t *)v42.i8, *(int32x2_t *)v39.i8), 0x14uLL), vmull_high_s32(v42, v39), 0x14uLL);
    char v43 = (float *)(a1 + 128);
    vst4q_f32(v43, v53);
    v39.i64[0] = 0x10000000100000;
    v39.i64[1] = 0x10000000100000;
    int32x4_t v44 = (int32x4_t)vld1q_dup_f32(v9);
    int32x4_t v45 = (int32x4_t)vorrq_s8(v11, (int8x16_t)xmmword_1001AC160);
    int32x4_t v46 = vmlaq_s32(v39, v44, v45);
    int32x4_t v47 = (int32x4_t)vbicq_s8((int8x16_t)vcvtq_n_s32_f32(vdivq_f32(_Q2, vmulq_f32(vcvtq_f32_s32(v46), v16)), 0x14uLL), (int8x16_t)vceqzq_s32(v46));
    v52.val[0] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_lane_s32(*(int32x2_t *)v47.i8, *(int32x2_t *)a2, 0), 0x14uLL), vmull_high_lane_s32(v47, *(int32x2_t *)a2, 0), 0x14uLL);
    int32x4_t v48 = (int32x4_t)vld1q_dup_f32(v24);
    int32x4_t v49 = vmlaq_lane_s32(v48, v45, *(int32x2_t *)(a2 + 1), 0);
    v52.val[1] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_s32(*(int32x2_t *)v49.i8, *(int32x2_t *)v47.i8), 0x14uLL), vmull_high_s32(v49, v47), 0x14uLL);
    v52.val[2] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_lane_s32(*(int32x2_t *)v47.i8, *(int32x2_t *)(a2 + 3), 0), 0x14uLL), vmull_high_lane_s32(v47, *(int32x2_t *)(a2 + 3), 0), 0x14uLL);
    int32x4_t v50 = vmlaq_lane_s32(vdupq_lane_s32(*(int32x2_t *)(a2 + 4), 1), v45, *(int32x2_t *)(a2 + 4), 0);
    int64x2_t result = vmull_high_s32(v50, v47);
    v52.val[3] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_s32(*(int32x2_t *)v50.i8, *(int32x2_t *)v47.i8), 0x14uLL), result, 0x14uLL);
    uint64_t v51 = (float *)(a1 + 192);
    vst4q_f32(v51, v52);
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = (_DWORD *)(a1 + 8);
    result.i32[0] = 1.0;
    do
    {
      int v7 = v3 + v4;
      int v8 = a2[7] * (16 * a3 + v4) + 0x100000;
      if (a2[7] * (16 * a3 + v4) != -1048576) {
        int v8 = vcvts_n_s32_f32(1.0 / (float)((float)v8 * 0.00000095367), 0x14uLL);
      }
      *(v5 - 2) = (unint64_t)(*a2 * (uint64_t)v8 + 0x80000) >> 20;
      *(v5 - 1) = (unint64_t)((a2[2] + a2[1] * (uint64_t)v7) * v8 + 0x80000) >> 20;
      *uint64_t v5 = (unint64_t)(a2[3] * (uint64_t)v8 + 0x80000) >> 20;
      v5[1] = (unint64_t)((a2[5] + a2[4] * (uint64_t)v7) * v8 + 0x80000) >> 20;
      ++v4;
      v5 += 4;
    }
    while (v4 != 16);
  }
  return result;
}

int64x2_t sub_100156EC0(unint64_t a1, int *a2, int a3)
{
  unsigned int v3 = 16 * a3;
  if ((unint64_t)(a2 + 7) <= a1 || a1 + 256 <= (unint64_t)a2)
  {
    int8x16_t v9 = (int8x16_t)vdupq_n_s32(v3);
    int32x4_t v10 = (int32x4_t)vorrq_s8(v9, (int8x16_t)xmmword_1001AC130);
    v11.i64[0] = 0x10000000100000;
    v11.i64[1] = 0x10000000100000;
    int32x4_t v12 = vmlaq_lane_s32(v11, v10, *(int32x2_t *)(a2 + 6), 0);
    int8x16_t v13 = (int8x16_t)vceqzq_s32(v12);
    float32x4_t v14 = (float32x4_t)vdupq_n_s32(0x35800000u);
    float32x4_t v15 = vmulq_f32(vcvtq_f32_s32(v12), v14);
    __asm { FMOV            V2.4S, #1.0 }
    int32x4_t v21 = (int32x4_t)vbicq_s8((int8x16_t)vcvtq_n_s32_f32(vdivq_f32(_Q2, v15), 0x14uLL), v13);
    v48.val[0] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_lane_s32(*(int32x2_t *)v21.i8, *(int32x2_t *)(a2 + 1), 0), 0x14uLL), vmull_high_lane_s32(v21, *(int32x2_t *)(a2 + 1), 0), 0x14uLL);
    int v22 = (const float *)(a2 + 2);
    int32x4_t v23 = (int32x4_t)vld1q_dup_f32(v22);
    int32x4_t v24 = vmlaq_lane_s32(v23, v10, *(int32x2_t *)a2, 0);
    v48.val[1] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_s32(*(int32x2_t *)v24.i8, *(int32x2_t *)v21.i8), 0x14uLL), vmull_high_s32(v24, v21), 0x14uLL);
    v48.val[2] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_lane_s32(*(int32x2_t *)v21.i8, *(int32x2_t *)(a2 + 4), 0), 0x14uLL), vmull_high_lane_s32(v21, *(int32x2_t *)(a2 + 4), 0), 0x14uLL);
    int32x4_t v25 = vmlaq_lane_s32(vdupq_laneq_s32(*(int32x4_t *)(a2 + 3), 2), v10, *(int32x2_t *)(a2 + 3), 0);
    v48.val[3] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_s32(*(int32x2_t *)v25.i8, *(int32x2_t *)v21.i8), 0x14uLL), vmull_high_s32(v25, v21), 0x14uLL);
    int32x4_t v26 = (float *)a1;
    vst4q_f32(v26, v48);
    v26 += 16;
    int32x4_t v27 = (int32x4_t)vorrq_s8(v9, (int8x16_t)xmmword_1001AC140);
    v15.i64[0] = 0x10000000100000;
    v15.i64[1] = 0x10000000100000;
    int32x4_t v28 = vmlaq_lane_s32((int32x4_t)v15, v27, *(int32x2_t *)(a2 + 6), 0);
    int32x4_t v29 = (int32x4_t)vbicq_s8((int8x16_t)vcvtq_n_s32_f32(vdivq_f32(_Q2, vmulq_f32(vcvtq_f32_s32(v28), v14)), 0x14uLL), (int8x16_t)vceqzq_s32(v28));
    v48.val[0] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_lane_s32(*(int32x2_t *)v29.i8, *(int32x2_t *)(a2 + 1), 0), 0x14uLL), vmull_high_lane_s32(v29, *(int32x2_t *)(a2 + 1), 0), 0x14uLL);
    int32x4_t v30 = (int32x4_t)vld1q_dup_f32(v22);
    int32x4_t v31 = vmlaq_lane_s32(v30, v27, *(int32x2_t *)a2, 0);
    v48.val[1] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_s32(*(int32x2_t *)v31.i8, *(int32x2_t *)v29.i8), 0x14uLL), vmull_high_s32(v31, v29), 0x14uLL);
    v48.val[2] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_lane_s32(*(int32x2_t *)v29.i8, *(int32x2_t *)(a2 + 4), 0), 0x14uLL), vmull_high_lane_s32(v29, *(int32x2_t *)(a2 + 4), 0), 0x14uLL);
    int32x4_t v32 = vmlaq_lane_s32(vdupq_laneq_s32(*(int32x4_t *)(a2 + 3), 2), v27, *(int32x2_t *)(a2 + 3), 0);
    v48.val[3] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_s32(*(int32x2_t *)v32.i8, *(int32x2_t *)v29.i8), 0x14uLL), vmull_high_s32(v32, v29), 0x14uLL);
    vst4q_f32(v26, v48);
    int32x4_t v33 = (int32x4_t)vorrq_s8(v9, (int8x16_t)xmmword_1001AC150);
    v28.i64[0] = 0x10000000100000;
    v28.i64[1] = 0x10000000100000;
    int32x4_t v34 = vmlaq_lane_s32(v28, v33, *(int32x2_t *)(a2 + 6), 0);
    int32x4_t v35 = (int32x4_t)vbicq_s8((int8x16_t)vcvtq_n_s32_f32(vdivq_f32(_Q2, vmulq_f32(vcvtq_f32_s32(v34), v14)), 0x14uLL), (int8x16_t)vceqzq_s32(v34));
    v48.val[0] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_lane_s32(*(int32x2_t *)v35.i8, *(int32x2_t *)(a2 + 1), 0), 0x14uLL), vmull_high_lane_s32(v35, *(int32x2_t *)(a2 + 1), 0), 0x14uLL);
    int32x4_t v36 = (int32x4_t)vld1q_dup_f32(v22);
    int32x4_t v37 = vmlaq_lane_s32(v36, v33, *(int32x2_t *)a2, 0);
    v48.val[1] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_s32(*(int32x2_t *)v37.i8, *(int32x2_t *)v35.i8), 0x14uLL), vmull_high_s32(v37, v35), 0x14uLL);
    v48.val[2] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_lane_s32(*(int32x2_t *)v35.i8, *(int32x2_t *)(a2 + 4), 0), 0x14uLL), vmull_high_lane_s32(v35, *(int32x2_t *)(a2 + 4), 0), 0x14uLL);
    int32x4_t v38 = vmlaq_lane_s32(vdupq_laneq_s32(*(int32x4_t *)(a2 + 3), 2), v33, *(int32x2_t *)(a2 + 3), 0);
    v48.val[3] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_s32(*(int32x2_t *)v38.i8, *(int32x2_t *)v35.i8), 0x14uLL), vmull_high_s32(v38, v35), 0x14uLL);
    int32x4_t v39 = (float *)(a1 + 128);
    vst4q_f32(v39, v48);
    v35.i64[0] = 0x10000000100000;
    v35.i64[1] = 0x10000000100000;
    int32x4_t v40 = (int32x4_t)vorrq_s8(v9, (int8x16_t)xmmword_1001AC160);
    int32x4_t v41 = vmlaq_lane_s32(v35, v40, *(int32x2_t *)(a2 + 6), 0);
    int32x4_t v42 = (int32x4_t)vbicq_s8((int8x16_t)vcvtq_n_s32_f32(vdivq_f32(_Q2, vmulq_f32(vcvtq_f32_s32(v41), v14)), 0x14uLL), (int8x16_t)vceqzq_s32(v41));
    v47.val[0] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_lane_s32(*(int32x2_t *)v42.i8, *(int32x2_t *)(a2 + 1), 0), 0x14uLL), vmull_high_lane_s32(v42, *(int32x2_t *)(a2 + 1), 0), 0x14uLL);
    int32x4_t v43 = (int32x4_t)vld1q_dup_f32(v22);
    int32x4_t v44 = vmlaq_lane_s32(v43, v40, *(int32x2_t *)a2, 0);
    v47.val[1] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_s32(*(int32x2_t *)v44.i8, *(int32x2_t *)v42.i8), 0x14uLL), vmull_high_s32(v44, v42), 0x14uLL);
    v47.val[2] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_lane_s32(*(int32x2_t *)v42.i8, *(int32x2_t *)(a2 + 4), 0), 0x14uLL), vmull_high_lane_s32(v42, *(int32x2_t *)(a2 + 4), 0), 0x14uLL);
    int32x4_t v45 = vmlaq_lane_s32(vdupq_laneq_s32(*(int32x4_t *)(a2 + 3), 2), v40, *(int32x2_t *)(a2 + 3), 0);
    int64x2_t result = vmull_high_s32(v45, v42);
    v47.val[3] = (float32x4_t)vrshrn_high_n_s64(vrshrn_n_s64(vmull_s32(*(int32x2_t *)v45.i8, *(int32x2_t *)v42.i8), 0x14uLL), result, 0x14uLL);
    int32x4_t v46 = (float *)(a1 + 192);
    vst4q_f32(v46, v47);
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = (_DWORD *)(a1 + 8);
    result.i32[0] = 1.0;
    do
    {
      int v7 = v3 + v4;
      int v8 = a2[6] * (16 * a3 + v4) + 0x100000;
      if (a2[6] * (16 * a3 + v4) != -1048576) {
        int v8 = vcvts_n_s32_f32(1.0 / (float)((float)v8 * 0.00000095367), 0x14uLL);
      }
      *(v5 - 2) = (unint64_t)(a2[1] * (uint64_t)v8 + 0x80000) >> 20;
      *(v5 - 1) = (unint64_t)((a2[2] + *a2 * (uint64_t)v7) * v8 + 0x80000) >> 20;
      *uint64_t v5 = (unint64_t)(a2[4] * (uint64_t)v8 + 0x80000) >> 20;
      v5[1] = (unint64_t)((a2[5] + a2[3] * (uint64_t)v7) * v8 + 0x80000) >> 20;
      ++v4;
      v5 += 4;
    }
    while (v4 != 16);
  }
  return result;
}

uint64_t sub_100157204(uint64_t result, unsigned int a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6)
{
  uint64_t v6 = 0;
  int v7 = 16 * a5;
  uint64_t v8 = a3 - a4 + 16 * a4;
  uint64_t v9 = -(uint64_t)a4;
  do
  {
    uint64_t v10 = 0;
    int32x4_t v11 = (int *)(a6 + 16 * v6);
    int v12 = *v11;
    int v13 = v11[2];
    int v14 = v11[3];
    int v15 = v11[1] + v7 * *v11;
    int v16 = v14 + v7 * v13;
    do
    {
      int v17 = (v15 >> 10) & 0x3FF;
      uint64_t v18 = (int)((v16 >> 20) * a2) + (uint64_t)(v15 >> 20);
      int v19 = *(unsigned __int8 *)(result + v18);
      int v20 = (*(unsigned __int8 *)(result + v18 + 1) - v19) * v17;
      LODWORD(v18) = (((*(unsigned __int8 *)(result + v18 + a2 + 1) - *(unsigned __int8 *)(result + v18 + a2)) * v17
                     - (v20
                      + (v19 << 10))
                     + (*(unsigned __int8 *)(result + v18 + a2) << 10)) >> 5)
                   * ((v16 >> 10) & 0x3FF)
                   + 32 * (v20 + (v19 << 10));
      *(unsigned char *)(v8 + v10) = (v18 >> 15) & ~((int)v18 >> 31);
      v15 += v12;
      v16 += v13;
      ++v10;
    }
    while (v10 != 16);
    ++v6;
    v8 += v9;
  }
  while (v6 != 16);
  return result;
}

uint64_t sub_1001572C8(uint64_t result, unsigned int a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6)
{
  uint64_t v6 = 0;
  int v7 = 16 * a5;
  uint64_t v8 = a4;
  do
  {
    uint64_t v9 = 0;
    uint64_t v10 = (int *)(a6 + 16 * v6);
    int v11 = *v10;
    int v12 = v10[2];
    int v13 = v10[3];
    int v14 = v10[1] + v7 * *v10;
    int v15 = v13 + v7 * v12;
    do
    {
      int v16 = (v14 >> 10) & 0x3FF;
      uint64_t v17 = (int)((v15 >> 20) * a2) + (uint64_t)(v14 >> 20);
      int v18 = *(unsigned __int8 *)(result + v17);
      int v19 = (*(unsigned __int8 *)(result + v17 + 1) - v18) * v16;
      LODWORD(v17) = (((*(unsigned __int8 *)(result + v17 + a2 + 1) - *(unsigned __int8 *)(result + v17 + a2)) * v16
                     - (v19
                      + (v18 << 10))
                     + (*(unsigned __int8 *)(result + v17 + a2) << 10)) >> 5)
                   * ((v15 >> 10) & 0x3FF)
                   + 32 * (v19 + (v18 << 10));
      *(unsigned char *)(a3 + v9) = (v17 >> 15) & ~((int)v17 >> 31);
      v14 += v11;
      v15 += v12;
      ++v9;
    }
    while (v9 != 16);
    ++v6;
    a3 += v8;
  }
  while (v6 != 16);
  return result;
}

uint64_t sub_100157380(uint64_t result, uint64_t a2, double a3, uint8x8_t a4)
{
  if (result && a2)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (char *)(result + 7);
    do
    {
      a4.i32[0] = *(_DWORD *)(v5 - 7);
      a4 = (uint8x8_t)vshl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(a4), (uint16x4_t)0x4000500060007);
      char v6 = *(v5 - 3);
      char v7 = 4 * *(v5 - 2);
      char v8 = *(v5 - 1);
      char v9 = *v5;
      v5 += 8;
      *(unsigned char *)(a2 + v4++) = a4.i8[0] | a4.i8[4] | ((a4.i32[0] | a4.i32[1]) >> 16) | (8 * v6) | v7 | (2 * v8) | v9;
    }
    while (v4 != 15);
  }
  return result;
}

unsigned __int8 *sub_1001573EC(unsigned __int8 *result, unsigned int a2, uint64_t a3, double a4, int16x8_t a5)
{
  if (result && a3 && a2)
  {
    uint64_t v5 = 0;
    do
    {
      unsigned int v6 = *result++;
      uint64_t v7 = a3 + (v5 & 0xFFFFFFF8);
      *(unsigned char *)uint64_t v7 = v6 >> 7;
      *(uint16x4_t *)a5.i8 = vshl_u16((uint16x4_t)vdup_n_s16(v6), (uint16x4_t)0xFFFDFFFCFFFBFFFALL);
      a5.i32[0] &= 0xFF01FF01;
      a5.i16[2] &= 0xFF01u;
      a5.i16[3] &= 0xFF01u;
      *(_DWORD *)(v7 + 1) = vmovn_s16(a5).u32[0];
      *(unsigned char *)(v7 + 5) = (v6 & 4) != 0;
      *(unsigned char *)(v7 + 6) = (v6 & 2) != 0;
      *(unsigned char *)(v7 + 7) = v6 & 1;
      v5 += 8;
    }
    while (8 * a2 != v5);
  }
  return result;
}

uint64_t sub_100157458(unsigned int *a1, int a2, uint64_t a3)
{
  unsigned int v3 = (unsigned char *)*((void *)a1 + 2);
  if (!v3 || !*((void *)a1 + 3)) {
    return 6;
  }
  if (!a3) {
    return 7;
  }
  if (a1[1] + 15 > a1[2]) {
    return 2;
  }
  for (uint64_t i = 0; i != 15; ++i)
  {
    int v6 = *a1;
    if (*a1)
    {
      unsigned int v7 = 0;
      do
      {
        a2 = 214013 * a2 + 2531011;
        v3[v7 + v6 * (i + a1[1])] = BYTE2(a2);
        ++v7;
        int v6 = *a1;
      }
      while (v7 < *a1);
    }
    *(unsigned char *)(*((void *)a1 + 3) + a1[1] + i) = *(unsigned char *)(a3 + i);
  }
  unsigned int v8 = a1[1];
  unint64_t v9 = v8 + 15;
  a1[1] = v9;
  if (v8 == -15) {
    return 1;
  }
  unint64_t v10 = 0;
  unint64_t v11 = *a1;
  int v12 = v11 + 1;
  int v13 = &v3[v11];
  uint64_t v14 = *((void *)a1 + 3);
  uint64_t v15 = 1;
  int v16 = *a1;
  do
  {
    int v18 = v11 * v10;
    uint64_t v19 = (v11 * v10 + v10);
    unsigned int v20 = v3[v19];
    if (v3[v19])
    {
LABEL_57:
      unint64_t v17 = v10 + 1;
      if (v10 + 1 < v9)
      {
        int v51 = v16 + v10;
        uint64_t v52 = v15;
        do
        {
          if (v3[(v10 + v11 * v52)])
          {
            unint64_t v53 = v3[(v10 + v11 * v52)];
            unsigned __int8 v54 = byte_1001C6706[(16 * byte_1001C5606[v20]) & 0xF00 | v53] ^ byte_1001C5706[((byte_1001C5606[v20] & 0xF) << 8) | v53];
            if (v11 > v10)
            {
              int v55 = v12 * v10;
              int v56 = v51;
              unint64_t v57 = v11 - v10;
              do
              {
                v3[v56++] ^= byte_1001C6706[v54 | (v3[v55] >> 4 << 8)] ^ byte_1001C5706[v54 | ((v3[v55] & 0xF) << 8)];
                ++v55;
                --v57;
              }
              while (v57);
            }
            if (v14) {
              *(unsigned char *)(v14 + v52) ^= byte_1001C6706[(16 * *(unsigned __int8 *)(v14 + v10)) & 0xF00 | v54] ^ byte_1001C5706[((*(unsigned char *)(v14 + v10) & 0xF) << 8) & 0xFFFFFFFFFFFFFF00 | v54];
            }
          }
          ++v52;
          v51 += v11;
        }
        while (v9 != v52);
      }
      goto LABEL_17;
    }
    uint64_t v21 = (v12 * v10);
    LODWORD(v22) = -1;
    int v23 = v12 * v10;
    unint64_t v24 = v10;
    do
    {
      if (v3[v23]) {
        uint64_t v22 = v24;
      }
      else {
        uint64_t v22 = v22;
      }
      ++v24;
      v23 += v11;
    }
    while (v9 != v24);
    if ((v22 & 0x80000000) != 0) {
      break;
    }
    unint64_t v25 = v11 - v10;
    if (v11 <= v10) {
      goto LABEL_54;
    }
    int v26 = v22 * v11;
    unint64_t v27 = v10;
    if (v25 <= 7) {
      goto LABEL_52;
    }
    unint64_t v28 = ~v10 + v11;
    BOOL v29 = __CFADD__(v21, v28);
    uint64_t v30 = (v26 + v10);
    BOOL v31 = __CFADD__(v30, v28);
    unint64_t v27 = v10;
    if (v29) {
      goto LABEL_52;
    }
    unint64_t v27 = v10;
    if (v31) {
      goto LABEL_52;
    }
    unint64_t v27 = v10;
    if (HIDWORD(v28)) {
      goto LABEL_52;
    }
    BOOL v32 = &v3[v21] >= &v13[v30 - v10] || &v3[v30] >= &v13[v21 - v10];
    unint64_t v27 = v10;
    if (!v32) {
      goto LABEL_52;
    }
    if (v25 >= 0x20)
    {
      unint64_t v33 = v25 & 0xFFFFFFFFFFFFFFE0;
      unint64_t v34 = v25 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        int32x4_t v35 = (long long *)&v3[v21];
        long long v36 = *v35;
        long long v37 = v35[1];
        int32x4_t v38 = (long long *)&v3[v30];
        long long v39 = v38[1];
        *int32x4_t v35 = *v38;
        v35[1] = v39;
        *int32x4_t v38 = v36;
        v38[1] = v37;
        LODWORD(v30) = v30 + 32;
        LODWORD(v21) = v21 + 32;
        v34 -= 32;
      }
      while (v34);
      if (v25 == v33) {
        goto LABEL_54;
      }
      if ((v25 & 0x18) == 0)
      {
        unint64_t v27 = v10 + v33;
LABEL_52:
        unint64_t v46 = v11 - v27;
        int v47 = v27 + v26;
        int v48 = v18 + v27;
        do
        {
          char v49 = v3[v48];
          v3[v48] = v3[v47];
          v3[v47++] = v49;
          ++v48;
          --v46;
        }
        while (v46);
        goto LABEL_54;
      }
    }
    else
    {
      unint64_t v33 = 0;
    }
    unint64_t v40 = v25 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v41 = v33 - (v25 & 0xFFFFFFFFFFFFFFF8);
    int v42 = v33 + v10;
    int v43 = v33 + v10 + v26;
    int v44 = v18 + v42;
    do
    {
      uint64_t v45 = *(void *)&v3[v44];
      *(void *)&v3[v44] = *(void *)&v3[v43];
      *(void *)&v3[v43] = v45;
      v43 += 8;
      v44 += 8;
      v41 += 8;
    }
    while (v41);
    if (v25 != v40)
    {
      unint64_t v27 = v10 + v40;
      goto LABEL_52;
    }
LABEL_54:
    if (v14)
    {
      char v50 = *(unsigned char *)(v14 + v10);
      *(unsigned char *)(v14 + v10) = *(unsigned char *)(v14 + v22);
      *(unsigned char *)(v14 + v22) = v50;
    }
    unsigned int v20 = v3[v19];
    if (v3[v19]) {
      goto LABEL_57;
    }
    unint64_t v17 = v10 + 1;
LABEL_17:
    ++v15;
    v16 += v11;
    unint64_t v10 = v17;
  }
  while (v17 != v9);
  uint64_t v58 = *a1;
  unsigned int v59 = a1[1];
  if (!v59) {
    goto LABEL_106;
  }
  if (v58)
  {
    if (v58 < 8)
    {
      int v60 = v58 * (v59 - 1) + 6;
      unsigned int v61 = v59 - 1;
      do
      {
        int v62 = v3[v60 - 6];
        if (v58 != 1)
        {
          v62 |= v3[v60 - 5];
          if (v58 != 2)
          {
            v62 |= v3[v60 - 4];
            if (v58 != 3)
            {
              v62 |= v3[v60 - 3];
              if (v58 != 4)
              {
                v62 |= v3[v60 - 2];
                if (v58 != 5)
                {
                  v62 |= v3[v60 - 1];
                  if (v58 != 6) {
                    v62 |= v3[v60];
                  }
                }
              }
            }
          }
        }
        if (v62) {
          break;
        }
        if (*(unsigned char *)(*((void *)a1 + 3) + v61)) {
          return 3;
        }
        v60 -= v58;
        --v61;
        a1[1] = --v59;
      }
      while (v59);
LABEL_106:
      int v81 = v58 + 1;
      unint64_t v82 = v59;
      if (v58 != 1)
      {
        uint64_t v85 = 0;
        unsigned int v86 = v59 - 1;
        int v87 = v58;
        while (v85 != v58)
        {
          char v88 = 1;
          if (v85 + 1 < (unint64_t)v59)
          {
            int v89 = v87;
            unsigned int v90 = v86;
            do
            {
              v88 &= v3[v89] == 0;
              v89 += v58;
              --v90;
            }
            while (v90);
          }
          if (v85 == v59)
          {
            int v91 = v59;
            goto LABEL_138;
          }
          int v91 = v85;
          if (!v3[(v81 * v85)]) {
            char v88 = 0;
          }
          --v86;
          v87 += v81;
          ++v85;
          if ((v88 & 1) == 0) {
            goto LABEL_138;
          }
        }
        goto LABEL_139;
      }
      if (v59 < 2)
      {
        unsigned __int8 v84 = 1;
      }
      else if (v59 > 8)
      {
        uint64_t v92 = v59 - 2;
        uint64_t v93 = v92 + 1;
        if (v92 >= 0x1F)
        {
          uint64_t v95 = 0;
          uint64_t v94 = v93 & 0x1FFFFFFE0;
          v96.i64[0] = 0x101010101010101;
          v96.i64[1] = 0x101010101010101;
          v97.i64[0] = 0x101010101010101;
          v97.i64[1] = 0x101010101010101;
          do
          {
            unsigned __int8 v98 = &v3[v95 & 0xFFFFFFE0];
            int8x16_t v96 = vandq_s8(v96, vceqzq_s8(*(int8x16_t *)(v98 + 1)));
            int8x16_t v97 = vandq_s8(v97, vceqzq_s8(*(int8x16_t *)(v98 + 17)));
            v95 += 32;
          }
          while (v94 != v95);
          unsigned __int8 v84 = vminvq_u8((uint8x16_t)vcltzq_s8(vshlq_n_s8(vandq_s8(v97, v96), 7uLL)));
          if (v93 == v94) {
            goto LABEL_135;
          }
          if ((v93 & 0x18) == 0)
          {
            uint64_t v83 = v94 | 1;
            goto LABEL_133;
          }
        }
        else
        {
          uint64_t v94 = 0;
          unsigned __int8 v84 = 1;
        }
        uint64_t v99 = v93 & 0x1FFFFFFF8;
        int8x8_t v100 = (int8x8_t)-1;
        v100.i8[0] = v84;
        do
        {
          int8x8_t v100 = vand_s8(v100, vceqz_s8(*(int8x8_t *)&v3[(v94 & 0xFFFFFFF8) + 1]));
          v94 += 8;
        }
        while (v99 != v94);
        unsigned __int8 v84 = vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(v100, 7uLL)));
        if (v93 != v99)
        {
          uint64_t v83 = v99 | 1;
          goto LABEL_133;
        }
      }
      else
      {
        uint64_t v83 = 1;
        unsigned __int8 v84 = 1;
LABEL_133:
        int v101 = v59 - v83;
        do
        {
          v84 &= v3[v83++] == 0;
          --v101;
        }
        while (v101);
      }
LABEL_135:
      if (v59) {
        int v91 = v84 & (*v3 != 0);
      }
      else {
        int v91 = 0;
      }
LABEL_138:
      if (v91 == v58)
      {
LABEL_139:
        BOOL v102 = __OFSUB__(v59, 1);
        uint64_t v103 = v59 - 1;
        if ((int)v103 < 0 == v102)
        {
          uint64_t v104 = *((void *)a1 + 3);
          while (1)
          {
            unint64_t v105 = v82--;
            uint64_t v106 = (v81 * v82);
            int v107 = byte_1001C5606[v3[v106]];
            *(unsigned char *)(v104 + v82) = byte_1001C6706[(16 * v107) & 0xF00 | (unint64_t)*(unsigned __int8 *)(v104 + v82)] ^ byte_1001C5706[((v107 & 0xF) << 8) | (unint64_t)*(unsigned __int8 *)(v104 + v82)];
            v3[v106] = 1;
            if (v105 < 2) {
              break;
            }
            uint64_t v108 = 0;
            uint64_t v109 = 0;
            do
            {
              uint64_t v110 = (v103 + v108);
              *(unsigned char *)(v104 + v109) ^= byte_1001C6706[(16 * *(unsigned __int8 *)(v104 + v82)) & 0xF00 | (unint64_t)v3[v110]] ^ byte_1001C5706[((*(unsigned char *)(v104 + v82) & 0xF) << 8) | (unint64_t)v3[v110]];
              v3[v110] = 0;
              ++v109;
              v108 += v58;
            }
            while (v103 != v109);
            --v103;
          }
        }
        return 0;
      }
      return 1;
    }
    int v65 = 0;
    int v66 = v58 * (v59 - 1);
    unsigned int v67 = a1[1];
    while (2)
    {
      if (__CFADD__(v58 * (v59 + ~v65), v58 - 1))
      {
        uint64_t v68 = 0;
        unsigned __int8 v69 = 1;
        goto LABEL_98;
      }
      if (v58 >= 0x20)
      {
        v71.i64[0] = 0x101010101010101;
        v71.i64[1] = 0x101010101010101;
        int v72 = v66;
        uint64_t v73 = v58 & 0xFFFFFFE0;
        v74.i64[0] = 0x101010101010101;
        v74.i64[1] = 0x101010101010101;
        do
        {
          uint64_t v75 = (int8x16_t *)&v3[v72];
          int8x16_t v71 = vandq_s8(v71, vceqzq_s8(*v75));
          int8x16_t v74 = vandq_s8(v74, vceqzq_s8(v75[1]));
          v72 += 32;
          v73 -= 32;
        }
        while (v73);
        unsigned __int8 v69 = vminvq_u8((uint8x16_t)vcltzq_s8(vshlq_n_s8(vandq_s8(v74, v71), 7uLL)));
        if ((v58 & 0xFFFFFFE0) != v58)
        {
          uint64_t v68 = v58 & 0xFFFFFFE0;
          uint64_t v70 = v68;
          if ((v58 & 0x18) != 0) {
            goto LABEL_95;
          }
          goto LABEL_98;
        }
      }
      else
      {
        uint64_t v70 = 0;
        unsigned __int8 v69 = 1;
LABEL_95:
        int8x8_t v76 = (int8x8_t)-1;
        v76.i8[0] = v69;
        uint64_t v77 = v70 - (v58 & 0xFFFFFFF8);
        int v78 = v66 + v70;
        do
        {
          int8x8_t v76 = vand_s8(v76, vceqz_s8(*(int8x8_t *)&v3[v78]));
          v78 += 8;
          v77 += 8;
        }
        while (v77);
        unsigned __int8 v69 = vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(v76, 7uLL)));
        uint64_t v68 = v58 & 0xFFFFFFF8;
        if (v68 != v58)
        {
LABEL_98:
          uint64_t v79 = v58 - v68;
          int v80 = v66 + v68;
          do
          {
            v69 &= v3[v80++] == 0;
            --v79;
          }
          while (v79);
        }
      }
      if ((v69 & 1) == 0)
      {
        unsigned int v59 = v67;
        goto LABEL_106;
      }
      if (*(unsigned char *)(*((void *)a1 + 3) + --v67)) {
        return 3;
      }
      a1[1] = v67;
      ++v65;
      v66 -= v58;
      if (v65 == v59) {
        goto LABEL_103;
      }
      continue;
    }
  }
  uint64_t v63 = *((void *)a1 + 3);
  unsigned int v64 = v59 - 1;
  while (!*(unsigned char *)(v63 + v64))
  {
    a1[1] = v64--;
    if (v64 == -1)
    {
LABEL_103:
      unsigned int v59 = 0;
      goto LABEL_106;
    }
  }
  return 3;
}

uint64_t sub_100157D0C(int *a1, unsigned int a2, uint64_t a3)
{
  if (!a3) {
    return 3;
  }
  uint64_t v3 = *((void *)a1 + 5);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *((void *)a1 + 8);
  if (!v4) {
    return 4;
  }
  uint64_t v5 = *((void *)a1 + 9);
  if (!v5) {
    return 4;
  }
  if (!a2) {
    return 0;
  }
  int v6 = 0;
  do
  {
    uint64_t v7 = v5;
    uint64_t v5 = v4;
    if (a1[2])
    {
      unsigned int v8 = 0;
      char v9 = 0;
      unint64_t v10 = (int *)(v3 + 4 * (a1[13] * v6));
      while (2)
      {
        int v11 = 0;
        while (1)
        {
          if (*a1 < 1)
          {
            signed int v13 = 0;
          }
          else
          {
            unsigned __int16 v12 = 0;
            signed int v13 = 0;
            do
            {
              unsigned int v14 = *(_WORD *)(*((void *)a1 + 3) + 2 * v12) & (v8 >> 1);
              unsigned int v15 = v14 ^ (v14 >> 8) ^ ((v14 ^ (v14 >> 8)) >> 4);
              unsigned int v16 = v15 ^ (v15 >> 2) ^ ((v15 ^ (v15 >> 2)) >> 1);
              int v17 = *(_DWORD *)(a3 + 4 * v12);
              unsigned int v18 = v13 + v17;
              if (__OFADD__(v13, v17)) {
                unsigned int v18 = ((v13 + v17) >> 31) ^ 0x80000000;
              }
              BOOL v19 = __OFSUB__(v13, v17);
              v13 -= v17;
              if (v19) {
                signed int v13 = (v13 >> 31) ^ 0x80000000;
              }
              if ((v16 & 1) == 0) {
                signed int v13 = v18;
              }
              ++v12;
            }
            while (*a1 > v12);
          }
          unsigned int v20 = v8 >> 1;
          int v21 = a1[3];
          int v22 = 2 * v11;
          int v23 = *(_DWORD *)(v5 + 4 * v8);
          int v24 = *(_DWORD *)(v5 + 4 * (v8 + 1));
          if (v23 <= v24)
          {
            unsigned int v27 = v24 + v13;
            if (__OFADD__(v24, v13)) {
              unsigned int v27 = ((v24 + v13) >> 31) ^ 0x80000000;
            }
            *(_DWORD *)(v7 + 4 * v20) = v27;
            BOOL v19 = __OFSUB__(v24, v13);
            signed int v26 = v24 - v13;
            unsigned int v28 = ((v24 - v13) >> 31) ^ 0x80000000;
            if (v19) {
              signed int v26 = v28;
            }
            v22 |= 1u;
          }
          else
          {
            unsigned int v25 = v23 + v13;
            if (__OFADD__(v23, v13)) {
              unsigned int v25 = ((v23 + v13) >> 31) ^ 0x80000000;
            }
            *(_DWORD *)(v7 + 4 * v20) = v25;
            BOOL v19 = __OFSUB__(v23, v13);
            signed int v26 = v23 - v13;
            if (v19) {
              signed int v26 = (v26 >> 31) ^ 0x80000000;
            }
          }
          uint64_t v29 = (unsigned __int16)(v21 + v20);
          *(_DWORD *)(v7 + 4 * v29) = v26;
          int v30 = *(_DWORD *)(v5 + 4 * (v8 + 2));
          int v31 = *(_DWORD *)(v5 + 4 * (v8 + 3));
          int v11 = 2 * v22;
          uint64_t v32 = v20 + 1;
          uint64_t v33 = (v29 + 1);
          unsigned int v34 = v31 - v13;
          if (__OFSUB__(v31, v13)) {
            unsigned int v34 = ((v31 - v13) >> 31) ^ 0x80000000;
          }
          unsigned int v35 = v31 + v13;
          if (__OFADD__(v31, v13)) {
            unsigned int v35 = ((v31 + v13) >> 31) ^ 0x80000000;
          }
          unsigned int v36 = v30 - v13;
          if (__OFSUB__(v30, v13)) {
            unsigned int v36 = ((v30 - v13) >> 31) ^ 0x80000000;
          }
          BOOL v19 = __OFADD__(v30, v13);
          signed int v37 = v30 + v13;
          if (v19) {
            signed int v37 = (v37 >> 31) ^ 0x80000000;
          }
          BOOL v38 = v30 <= v31;
          unsigned int v39 = v30 > v31 ? v36 : v34;
          if (v38)
          {
            signed int v37 = v35;
            v11 |= 1u;
          }
          *(_DWORD *)(v7 + 4 * v32) = v39;
          *(_DWORD *)(v7 + 4 * v33) = v37;
          if ((v9 & 0x3F) == 0x3C) {
            break;
          }
          char v9 = v8 + 4;
          unsigned int v8 = (unsigned __int16)(v8 + 4);
          if (v8 >= a1[2])
          {
            a3 += 4 * *a1;
            if (v11) {
              *unint64_t v10 = v11 << -*((unsigned char *)a1 + 12);
            }
            goto LABEL_8;
          }
        }
        *v10++ = v11;
        char v9 = v8 + 4;
        unsigned int v8 = (unsigned __int16)(v8 + 4);
        if (v8 < a1[2]) {
          continue;
        }
        break;
      }
    }
    a3 += 4 * *a1;
LABEL_8:
    ++v6;
    uint64_t v4 = v7;
  }
  while (a2 > (unsigned __int16)v6);
  uint64_t v40 = 0;
  *((void *)a1 + 8) = v7;
  *((void *)a1 + 9) = v5;
  return v40;
}

uint64_t sub_100157F78(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v68 = *(void *)(a1 + 40);
  if (!v68) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v5 = *(unsigned __int16 *)(a1 + 18);
  long long v149 = 0u;
  long long v148 = 0u;
  long long v147 = 0u;
  long long v146 = 0u;
  long long v144 = 0u;
  long long v145 = 0u;
  long long v142 = 0u;
  long long v143 = 0u;
  long long v140 = 0u;
  long long v141 = 0u;
  long long v139 = 0u;
  uint64_t v67 = v5;
  if (v5)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v125 = v3;
      uint64_t v126 = v6;
      unint64_t v7 = 0;
      int v9 = *a3;
      int v8 = a3[1];
      int v10 = v8 + *a3;
      int v11 = a3[2];
      int v12 = a3[3];
      int v13 = v10 + v11 + v12;
      int v14 = a3[4];
      int v15 = a3[5];
      int v109 = v13;
      int v129 = v13 + v14;
      int v113 = v13 + v14 + v15;
      int v16 = a3[6];
      int v17 = a3[7];
      int v19 = a3[8];
      int v18 = a3[9];
      int v114 = v11 - v10 + v12;
      int v111 = v114 - v14 + v15;
      int v21 = a3[10];
      int v20 = a3[11];
      int v131 = v21 + v19 + v17;
      long long v127 = a3;
      int v22 = a3[12];
      int v123 = v22 + v20 + v18;
      int v23 = v19 + v17 + v18;
      int v132 = v23 + v21 + v20;
      v138[0] = v132 + v22 + v113 + v16;
      v138[1] = v123 + v111 - v16 - v131;
      int v112 = v10 + v11 - v12;
      int v108 = v112 - (v15 + v14);
      int v135 = v19 + v17 + v20;
      int v107 = v11 - v10 - v12;
      int v106 = v107 + v14 - v15;
      v138[2] = v21 + v18 + v108 + v16 - v135 + v22;
      v138[3] = v23 + v106 - v16 - (v20 + v21) + v22;
      int v104 = v12 - (v10 + v11);
      int v93 = v104 - v14 + v15;
      int v24 = v10 - v11;
      int v90 = v15 + v14 + v24 + v12;
      int v124 = v90 + v16;
      int v130 = v21 + v18 + v20;
      v138[4] = v22 + v21 + v93 - v16 - (v20 + v23);
      v138[5] = v19 + v17 + v90 + v16 - v130 + v22;
      int v88 = v14 - v15 - v13;
      int v120 = v21 + v20 + v22;
      int v87 = v24 - v12 - (v15 + v14);
      v138[6] = v19 + v17 + v88 - v16 - v18 + v120;
      v138[7] = v22 + v20 + v87 + v16 - (v23 + v21);
      int v25 = v8 - v9 - v11;
      int v100 = v15 + v14 + v25 - v12;
      int v119 = v22 + v21 + v19;
      int v118 = v18 + v17 + v20;
      int v26 = v9 - v8 - v11;
      int v96 = v26 - v12 - v14 + v15;
      int v92 = v18 + v19 - v17;
      int v136 = v92 + v21 + v20;
      v138[8] = v118 + v100 + v16 - v119;
      v138[9] = v136 + v96 - v16 - v22;
      int v95 = v25 + v12 - (v15 + v14);
      int v94 = v26 + v12 + v14 - v15;
      int v116 = v19 + v22 + v20;
      v138[10] = v18 + v19 + v95 + v16 - (v17 + v120);
      v138[11] = v21 + v18 + v17 + v94 - v16 - v116;
      int v27 = v9 - v8 + v11;
      int v28 = v8 - v9 + v11;
      int v29 = v27 - v12;
      int v82 = v27 - v12 - v14 + v15;
      int v133 = v18 + v17 + v21;
      int v30 = v28 - v12;
      int v81 = v15 + v14 + v28 - v12;
      int v137 = v20 + v18 + v19;
      v138[12] = v19 + v82 - v16 - (v133 + v20 + v22);
      v138[13] = v21 + v17 + v81 + v16 - (v137 + v22);
      int v31 = v27 + v12;
      int v32 = v28 + v12;
      int v122 = v31 + v14 - v15 - v16;
      int v102 = v22 + v18 + v19 + v21;
      int v121 = v32 - (v15 + v14) + v16;
      int v134 = v20 + v21 + v19;
      v138[14] = v20 + v17 + v122 - v102;
      v138[15] = v134 + v121 - (v18 + v17 + v22);
      int v97 = v25 - v12 - (v15 + v14);
      int v117 = v97 - v16;
      int v89 = v26 - v12 + v14 - v15;
      v138[16] = v135 + v97 - v16 - (v22 + v21 + v18);
      v138[17] = v20 + v21 + v89 + v16 - (v23 + v22);
      int v84 = v15 + v14 + v25 + v12;
      int v85 = v26 + v12 - v14 + v15;
      int v86 = v20 + v18 + v22;
      v138[18] = v84 - v16 - (v132 + v22);
      v138[19] = v131 + v85 + v16 - v86;
      int v33 = v29 + v14 - v15;
      int v115 = v33 + v16;
      int v78 = v30 - (v15 + v14);
      int v110 = v78 - v16;
      v138[20] = v18 + v33 + v16 - (v131 + v20 + v22);
      v138[21] = v23 + v21 + v78 - v16 - (v22 + v20);
      int v34 = v31 - v14 + v15;
      int v35 = v15 + v14 + v32;
      v138[22] = v23 + v20 + v34 + v16 - (v22 + v21);
      v138[23] = v130 + v35 - v16 - (v19 + v17 + v22);
      int v83 = v109 - (v15 + v14);
      int v69 = v20 + v21 + v17;
      int v75 = v114 + v14 - v15;
      int v105 = v75 + v16;
      v138[24] = v69 + v83 - v16 - (v18 + v19) + v22;
      v138[25] = v116 + v75 + v16 - v133;
      int v103 = v15 + v14 + v112 - v16;
      int v70 = v107 - v14 + v15;
      int v101 = v70 + v16;
      int v72 = v18 + v19 + v21 + v20;
      v138[26] = v21 + v19 + v103 - v118 + v22;
      v138[27] = v22 + v17 + v70 + v16 - v72;
      int v36 = v104 + v14 - v15;
      int v37 = v24 + v12 - (v15 + v14);
      v138[28] = v92 + v21 + v36 + v16 - v20 + v22;
      v138[29] = v18 + v17 + v37 - v16 - (v21 + v19 + v20) + v22;
      int v38 = v15 + v14 + v24 - v12;
      int v99 = v15 - v129 + v16;
      v138[30] = v21 + v18 + v17 + v99 - v19 + v20 + v22;
      v138[31] = v18 + v19 + v38 - v16 - (v21 + v17) + v20 + v22;
      int v80 = v33 - v16;
      int v77 = v78 + v16;
      v138[32] = v21 + v33 - v16 - (v20 + v23 + v22);
      v138[33] = v19 + v17 + v78 + v16 - (v130 + v22);
      v138[34] = v19 + v17 + v34 - v16 - v18 + v21 + v20 - v22;
      v138[35] = v20 + v35 + v16 - (v22 + v23 + v21);
      int v79 = v97 + v16;
      v138[36] = v132 + v97 + v16 - v22;
      v138[37] = v20 + v18 + v89 - v16 - (v22 + v131);
      int v98 = v19 + v17 + v22 + v20;
      v138[38] = v21 + v18 + v84 + v16 - v98;
      v138[39] = v23 + v85 - v16 - v120;
      v138[40] = v22 + v19 + v36 - v16 - (v133 + v20);
      v138[41] = v22 + v21 + v17 + v37 + v16 - v137;
      int v74 = v15 - v129 - v16;
      int v39 = v22 + v20 + v17;
      v138[42] = v39 + v74 - (v18 + v19 + v21);
      v138[43] = v134 + v38 + v16 - (v18 + v17) + v22;
      int v76 = v75 - v16;
      v138[44] = v39 + v18 + v83 + v16 - (v21 + v19);
      v138[45] = v136 + v22 + v76;
      int v73 = v15 + v14 + v112 + v16;
      int v71 = v70 - v16;
      int v128 = v21 + v18 + v17;
      v138[46] = v18 + v19 + v73 - v69 + v22;
      v138[47] = v128 + v71 - (v19 + v20) + v22;
      int v91 = v90 - v16;
      v138[48] = v22 + v18 + v93 + v16 - (v131 + v20);
      v138[49] = v23 + v21 + v91 - v20 + v22;
      v138[50] = v23 + v88 + v16 - v21 + v20 + v22;
      v138[51] = v21 + v18 + v87 - v16 - (v19 + v17) + v20 + v22;
      v138[52] = v19 + v17 + v113 - v16 - (v21 + v18) + v20 + v22;
      v138[53] = v20 + v21 + v111 + v16 - v23 + v22;
      v138[54] = v108 - v16 - v132 + v22;
      v138[55] = v131 + v106 + v16 - (v20 + v18) + v22;
      v138[56] = v92 + v21 + v82 + v16 - (v22 + v20);
      v138[57] = v18 + v17 + v81 - v16 - (v21 + v19 + v20 + v22);
      int v40 = v31 + v14 - v15 + v16;
      int v41 = v32 - (v15 + v14) - v16;
      v138[58] = v128 + v20 + v40 - (v22 + v19);
      v138[59] = v92 + v20 + v41 - (v22 + v21);
      v138[60] = v69 + v100 - v16 - (v18 + v19 + v22);
      v138[61] = v19 + v20 + v96 + v16 - (v22 + v133);
      v138[62] = v21 + v19 + v95 - v16 - (v118 + v22);
      v138[63] = v94 + v16 + v17 - (v72 + v22);
      v138[64] = v128 + v87 - v16 - v19 + v20 + v22;
      v138[65] = v18 + v19 + v88 + v16 - (v21 + v17) + v20 + v22;
      v138[66] = v92 + v21 + v91 - v20 + v22;
      v138[67] = v18 + v17 + v93 + v16 - (v21 + v19 + v20) + v22;
      v138[68] = v21 + v19 + v106 + v16 - v118 + v22;
      v138[69] = v22 + v17 + v108 - v16 - v72;
      v138[70] = v69 + v111 + v16 - (v18 + v19) + v22;
      v138[71] = v116 + v113 - v16 - v133;
      v138[72] = v23 + v20 + v41 - (v22 + v21);
      v138[73] = v130 + v40 - (v19 + v17 + v22);
      v138[74] = v18 + v81 - v16 - (v131 + v20 + v22);
      v138[75] = v23 + v21 + v82 + v16 - (v22 + v20);
      v138[76] = v94 + v16 - (v132 + v22);
      v138[77] = v131 + v95 - v16 - v86;
      v138[78] = v135 + v96 + v16 - (v22 + v21 + v18);
      v138[79] = v20 + v21 + v100 - v16 - (v23 + v22);
      v138[80] = v20 + v17 + v35 + v16 - v102;
      v138[81] = v134 + v34 - v16 - (v18 + v17 + v22);
      v138[82] = v77 + v19 - (v133 + v20 + v22);
      v138[83] = v21 + v17 + v80 - (v137 + v22);
      LODWORD(v139) = v18 + v19 + v85 - v16 - (v17 + v120);
      DWORD1(v139) = v128 + v84 + v16 - v116;
      DWORD2(v139) = v118 + v89 - v16 - v119;
      HIDWORD(v139) = v136 + v79 - v22;
      LODWORD(v140) = v19 + v17 + v38 + v16 - v18 + v120;
      DWORD1(v140) = v22 + v20 + v74 - (v23 + v21);
      DWORD2(v140) = v22 + v21 + v37 + v16 - (v20 + v23);
      HIDWORD(v140) = v19 + v17 + v36 - v16 - v130 + v22;
      LODWORD(v141) = v21 + v18 + v71 - v135 + v22;
      DWORD1(v141) = v23 + v73 - (v20 + v21) + v22;
      DWORD2(v141) = v132 + v22 + v76;
      HIDWORD(v141) = v123 + v83 + v16 - v131;
      LODWORD(v142) = v21 + v19 + v85 + v16 - (v118 + v22);
      DWORD1(v142) = v84 - v16 + v17 - (v72 + v22);
      DWORD2(v142) = v69 + v89 + v16 - (v18 + v19 + v22);
      HIDWORD(v142) = v19 + v20 + v117 - (v22 + v133);
      LODWORD(v143) = v128 + v20 + v35 - v16 - (v22 + v19);
      DWORD1(v143) = v92 + v20 + v34 + v16 - (v22 + v21);
      DWORD2(v143) = v92 + v21 + v110 - (v22 + v20);
      HIDWORD(v143) = v18 + v17 + v115 - (v21 + v19 + v20 + v22);
      LODWORD(v144) = v101 - v132 + v22;
      DWORD1(v144) = v131 + v103 - (v20 + v18) + v22;
      DWORD2(v144) = v19 + v17 + v105 - (v21 + v18) + v20 + v22;
      HIDWORD(v144) = v20 + v21 + v83 - v16 - v23 + v22;
      LODWORD(v145) = v23 + v38 - v16 - v21 + v20 + v22;
      DWORD1(v145) = v21 + v18 + v99 - (v19 + v17) + v20 + v22;
      DWORD2(v145) = v22 + v18 + v37 - v16 - (v131 + v20);
      HIDWORD(v145) = v23 + v21 + v36 + v16 - v20 + v22;
      LODWORD(v146) = v18 + v19 + v106 - v16 - v69 + v22;
      DWORD1(v146) = v128 + v108 + v16 - (v19 + v20) + v22;
      DWORD2(v146) = v39 + v18 + v111 - v16 - (v21 + v19);
      HIDWORD(v146) = v136 + v22 + v113 + v16;
      LODWORD(v147) = v39 + v87 + v16 - (v18 + v19 + v21);
      DWORD1(v147) = v134 + v88 - v16 - (v18 + v17) + v22;
      DWORD2(v147) = v22 + v19 + v124 - (v133 + v20);
      HIDWORD(v147) = v22 + v21 + v17 + v93 - v16 - v137;
      LODWORD(v148) = v21 + v18 + v94 - v16 - v98;
      DWORD1(v148) = v23 + v95 + v16 - v120;
      DWORD2(v148) = v132 + v96 - v16 - v22;
      HIDWORD(v148) = v20 + v18 + v100 + v16 - (v22 + v131);
      LODWORD(v149) = v19 + v17 + v121 - v18 + v21 + v20 - v22;
      DWORD1(v149) = v20 + v122 - (v22 + v23 + v21);
      DWORD2(v149) = v21 + v81 + v16 - (v20 + v23 + v22);
      HIDWORD(v149) = v19 + v17 + v82 - v16 - (v130 + v22);
      uint64_t v42 = v4;
      uint64_t v4 = v125;
      int v43 = (int *)(v68 + 32 * v126);
LABEL_9:
      int v44 = 0;
      unint64_t v45 = v7 >> 1;
      unint64_t v46 = (unsigned int *)(v42 + 4 * (v7 >> 1));
      int v47 = (_DWORD *)((char *)v138 + (v7 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v49 = *v47++;
        int v48 = v49;
        uint64_t v50 = 4 * v7;
        int v51 = *(_DWORD *)(v125 + 4 * v7);
        int v52 = *(_DWORD *)(v125 + ((4 * v7) | 4));
        BOOL v53 = v51 <= v52;
        if (v51 <= v52) {
          int v51 = *(_DWORD *)(v125 + ((4 * v7) | 4));
        }
        unsigned int v54 = v51 + v48;
        if (__OFADD__(v51, v48)) {
          unsigned int v54 = ((v51 + v48) >> 31) ^ 0x80000000;
        }
        *unint64_t v46 = v54;
        BOOL v55 = __OFSUB__(v51, v48);
        signed int v56 = v51 - v48;
        if (v55) {
          signed int v56 = (v56 >> 31) ^ 0x80000000;
        }
        v46[256] = v56;
        int v57 = (4 * v44) | (2 * v53);
        int v58 = *(_DWORD *)(v125 + (v50 | 8));
        int v59 = *(_DWORD *)(v125 + (v50 | 0xC));
        BOOL v60 = v58 <= v59;
        if (v58 > v59) {
          int v59 = v58;
        }
        int v44 = v57 | v60;
        unsigned int v61 = v59 - v48;
        if (__OFSUB__(v59, v48)) {
          unsigned int v61 = ((v59 - v48) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v42 + ((4 * v45) | 4)) = v61;
        BOOL v55 = __OFADD__(v59, v48);
        signed int v62 = v59 + v48;
        if (v55) {
          signed int v62 = (v62 >> 31) ^ 0x80000000;
        }
        v46[257] = v62;
        if ((~(_BYTE)v7 & 0x3C) == 0)
        {
          *v43++ = v44;
          BOOL v63 = v7 >= 0x1FC;
          v7 += 4;
          if (v63) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v45 += 2;
        v46 += 2;
        BOOL v63 = v7 >= 0x1FC;
        v7 += 4;
      }
      while (!v63);
      if (v44) {
        int *v43 = v44;
      }
LABEL_7:
      a3 = v127 + 13;
      uint64_t v6 = v126 + 1;
      uint64_t v3 = v42;
    }
    while (v126 + 1 != v67);
  }
  else
  {
    uint64_t v42 = v3;
  }
  uint64_t v64 = 0;
  *(void *)(a1 + 64) = v42;
  *(void *)(a1 + 72) = v4;
  return v64;
}

uint64_t sub_1001591BC(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v78 = *(void *)(a1 + 40);
  if (!v78) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v77 = *(unsigned __int16 *)(a1 + 18);
  if (*(_WORD *)(a1 + 18))
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v122 = v3;
      uint64_t v123 = v5;
      unint64_t v6 = 0;
      int v7 = *a3;
      int v8 = a3[1];
      int v9 = v8 + *a3;
      int v11 = a3[2];
      int v10 = a3[3];
      int v89 = v9 + v11 + v10;
      int v107 = v9 + v11;
      int v12 = a3[4];
      int v13 = a3[5];
      int v117 = v89 + v12;
      int v101 = v89 + v12 + v13;
      int v15 = a3[10];
      int v14 = a3[11];
      int v16 = a3[12];
      int v17 = a3[6];
      int v18 = a3[7];
      int v19 = a3[8];
      int v20 = a3[9];
      int v105 = a3;
      int v102 = *a3 - v8 - v11;
      int v100 = v102 + v10;
      int v120 = v102 + v10 - v12;
      int v125 = v16 + v14 + v13;
      v126[0] = v16 + v14 + v17 + v18 + v19 + v20 + v101 + v15;
      v126[1] = v125 + v17 + v120 - (v19 + v18) + v20 + v15;
      int v124 = v9 - v11;
      int v99 = v9 - v11 - v10;
      int v121 = v99 - v12;
      int v96 = v19 + v17 + v13 + v15 + v20;
      int v21 = v7 - v8 + v11;
      int v116 = v21 - v10 + v12;
      int v22 = v17 + v13 + v18 + v15 + v20;
      v126[2] = v16 + v14 + v18 + v99 - v12 - v96;
      v126[3] = v16 + v14 + v19 + v116 - v22;
      int v23 = v11 - v9;
      int v119 = v23 - v10 + v12;
      int v24 = v18 + v13 + v19 + v15 + v20;
      int v25 = v8 - v7;
      int v26 = v19 + v18 - v13 + v17;
      int v27 = v25 - v11;
      int v95 = v25 - v11 - v10;
      int v114 = v95 - v12;
      int v118 = v26;
      v126[4] = v14 + v17 + v119 - (v24 + v16);
      v126[5] = v26 + v14 + v95 - v12 - (v15 + v20 + v16);
      int v86 = v10 - v107;
      int v115 = v10 - v107 - v12;
      int v28 = v15 + v20 + v13;
      int v29 = v25 + v11;
      int v110 = v29 + v10 + v12;
      v126[6] = v28 + v115 - (v18 + v17) + v19 + v14 - v16;
      v126[7] = v28 + v18 + v14 + v110 - (v19 + v17 + v16);
      int v109 = v29 - v10 - v12;
      int v111 = v12 - v89;
      v126[8] = v26 + v12 - v89 - (v15 + v20 + v14) + v16;
      v126[9] = v17 + v109 - (v14 + v24) + v16;
      int v113 = v23 + v10 - v12;
      int v106 = v27 + v10 + v12;
      v126[10] = v28 + v18 + v113 - (v19 + v17 + v14) + v16;
      v126[11] = v28 + v19 + v106 - (v18 + v17 + v14) + v16;
      int v97 = v124 + v10;
      int v112 = v124 + v10 + v12;
      int v104 = v21 + v10 - v12;
      v126[12] = v28 + v17 + v112 - (v19 + v18 + v16 + v14);
      v126[13] = v28 + v17 + v18 + v104 + v19 - (v16 + v14);
      int v83 = v107 - v10;
      int v108 = v107 - v10 - v12;
      int v30 = v102 - v10;
      int v103 = v30 + v12;
      v126[14] = v19 + v108 - (v14 + v16 + v22);
      v126[15] = v18 + v30 + v12 - (v14 + v16 + v96);
      int v91 = v21 - v10 - v12;
      int v79 = v17 + v13 + v18 + v19 + v20;
      int v88 = v99 + v12;
      v126[16] = v16 + v14 + v91 - v79 + v15;
      v126[17] = v16 + v14 + v99 + v12 - (v17 + v13) + v18 + v19 - v20 + v15;
      int v92 = v100 + v12;
      int v82 = v89 - v12;
      v126[18] = v125 + v17 + v100 + v12 - v18 + v19 + v20 - v15;
      v126[19] = v18 + v20 + v125 + v17 + v89 - v12 - (v15 + v19);
      int v90 = v29 + v10 - v12;
      int v80 = v86 + v12;
      int v31 = v18 + v17 + v19;
      v126[20] = v19 + v18 + v13 + v90 - v17 + v20 + v14 - (v16 + v15);
      v126[21] = v14 + v20 + v13 + v86 + v12 - (v15 + v31 + v16);
      int v87 = v95 + v12;
      int v32 = v23 - v10 - v12;
      int v33 = v20 + v18 + v13;
      v126[22] = v14 + v15 - v13 + v17 + v18 + v95 + v12 - (v20 + v19 + v16);
      v126[23] = v14 + v15 + v17 + v19 + v32 - (v33 + v16);
      int v81 = v27 + v10 - v12;
      int v34 = v23 + v10 + v12;
      v126[24] = v20 + v13 + v81 - (v14 + v15 + v31) + v16;
      v126[25] = v19 + v18 + v13 + v20 + v34 - (v17 + v14 + v15) + v16;
      int v94 = v29 - v10 + v12;
      v126[26] = v15 + v19 + v17 + v94 - (v33 + v14) + v16;
      v126[27] = v18 + v17 + v15 - (v20 + v19 + v14) - v101 + v16;
      int v85 = v30 - v12;
      int v84 = v83 + v12;
      v126[28] = v19 + v18 + v15 + v30 - v12 - (v17 + v13 + v16 + v14 + v20);
      v126[29] = v15 + v84 - (v79 + v14 + v16);
      int v93 = v21 + v10 + v12;
      int v35 = v18 + v17 + v13;
      int v98 = v97 - v12;
      v126[30] = v35 + v20 + v93 - (v14 + v16 + v15 + v19);
      v126[31] = v20 + v19 + v13 + v17 + v98 - (v18 + v14 + v15 + v16);
      int v36 = v31 + v15 + v20;
      v126[32] = v125 + v88 - v36;
      v126[33] = v125 + v91 - v17 + v18 + v19 - (v15 + v20);
      int v37 = v16 + v14 + v17;
      int v38 = v16 + v14 - v13 + v17 + v18;
      v126[34] = v37 + v82 - (v18 + v13) + v19 + v20 + v15;
      v126[35] = v38 + v92 - v19 + v20 + v15;
      int v39 = v15 + v20 + v14;
      int v40 = v17 + v13 + v18 + v19;
      v126[36] = v15 + v20 + v80 - (v17 + v13) + v18 + v19 + v14 - v16;
      v126[37] = v39 + v90 - (v40 + v16);
      int v41 = v20 + v19 + v15;
      int v42 = v18 + v20;
      v126[38] = v35 + v14 + v32 - (v41 + v16);
      v126[39] = v17 + v13 + v19 + v14 + v87 - (v18 + v20 + v15 + v16);
      v126[40] = v15 + v20 + v34 - (v40 + v14) + v16;
      v126[41] = v15 + v20 + v81 - (v17 + v13) + v18 + v19 - v14 + v16;
      int v43 = v19 + v17 + v13;
      v126[42] = v43 - (v18 + v20 + v15 + v14) - v117 + v16;
      v126[43] = v35 + v94 - (v14 + v41) + v16;
      int v44 = v19 + v18 + v13;
      v126[44] = v44 + v84 - (v17 + v16 + v39);
      v126[45] = v85 + v13 - (v14 + v16 + v36);
      int v45 = v18 + v13;
      v126[46] = v15 + v20 - v13 + v17 + v18 + v98 - (v19 + v16 + v14);
      v126[47] = v15 + v20 + v17 + v19 + v93 - (v18 + v13 + v16 + v14);
      int v46 = v15 + v18 + v13 + v19;
      v126[48] = v38 + v120 + v19 + v20 - v15;
      v126[49] = v37 + v20 + v117 - v46;
      int v47 = v19 + v17 + v20;
      int v48 = v20 + v18 + v17;
      v126[50] = v125 + v18 + v116 - v47 + v15;
      v126[51] = v125 + v19 + v121 - v48 + v15;
      int v49 = v19 + v18 + v20;
      int v50 = v14 + v15 + v13 + v17;
      v126[52] = v50 + v114 - (v49 + v16);
      v126[53] = v50 + v18 + v119 + v19 - (v20 + v16);
      int v51 = v17 + v13 + v18;
      v126[54] = v20 + v19 + v14 + v110 - (v51 + v16 + v15);
      v126[55] = v42 + v14 + v115 - (v15 + v43 + v16);
      v126[56] = v44 + v17 + v15 + v109 - (v14 + v20) + v16;
      v126[57] = v17 + v13 + v15 + v111 - (v49 + v14) + v16;
      v126[58] = v42 + v106 - (v14 + v15 + v43) + v16;
      v126[59] = v20 + v19 + v113 - (v51 + v14 + v15) + v16;
      v126[60] = v20 + v17 + v104 - (v14 + v16 + v46);
      v126[61] = v118 + v20 + v112 - (v14 + v15 + v16);
      v126[62] = v15 + v19 + v13 + v103 - (v48 + v14 + v16);
      v126[63] = v45 + v15 + v108 - (v47 + v14 + v16);
      uint64_t v52 = v4;
      uint64_t v4 = v122;
      BOOL v53 = (int *)(v78 + 16 * v123);
LABEL_9:
      int v54 = 0;
      unint64_t v55 = v6 >> 1;
      signed int v56 = (unsigned int *)(v52 + 4 * (v6 >> 1));
      int v57 = (_DWORD *)((char *)v126 + (v6 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v59 = *v57++;
        int v58 = v59;
        uint64_t v60 = 4 * v6;
        int v61 = *(_DWORD *)(v122 + 4 * v6);
        int v62 = *(_DWORD *)(v122 + ((4 * v6) | 4));
        BOOL v63 = v61 <= v62;
        if (v61 <= v62) {
          int v61 = *(_DWORD *)(v122 + ((4 * v6) | 4));
        }
        unsigned int v64 = v61 + v58;
        if (__OFADD__(v61, v58)) {
          unsigned int v64 = ((v61 + v58) >> 31) ^ 0x80000000;
        }
        unsigned int *v56 = v64;
        BOOL v65 = __OFSUB__(v61, v58);
        signed int v66 = v61 - v58;
        if (v65) {
          signed int v66 = (v66 >> 31) ^ 0x80000000;
        }
        unsigned char v56[128] = v66;
        int v67 = (4 * v54) | (2 * v63);
        int v68 = *(_DWORD *)(v122 + (v60 | 8));
        int v69 = *(_DWORD *)(v122 + (v60 | 0xC));
        BOOL v70 = v68 <= v69;
        if (v68 > v69) {
          int v69 = v68;
        }
        int v54 = v67 | v70;
        unsigned int v71 = v69 - v58;
        if (__OFSUB__(v69, v58)) {
          unsigned int v71 = ((v69 - v58) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v52 + ((4 * v55) | 4)) = v71;
        BOOL v65 = __OFADD__(v69, v58);
        signed int v72 = v69 + v58;
        if (v65) {
          signed int v72 = (v72 >> 31) ^ 0x80000000;
        }
        v56[129] = v72;
        if ((~(_BYTE)v6 & 0x3C) == 0)
        {
          *v53++ = v54;
          BOOL v73 = v6 >= 0xFC;
          v6 += 4;
          if (v73) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v55 += 2;
        v56 += 2;
        BOOL v73 = v6 >= 0xFC;
        v6 += 4;
      }
      while (!v73);
      if (v54) {
        int *v53 = v54;
      }
LABEL_7:
      a3 = v105 + 13;
      uint64_t v5 = v123 + 1;
      uint64_t v3 = v52;
    }
    while (v123 + 1 != v77);
  }
  else
  {
    uint64_t v52 = *(void *)(a1 + 64);
  }
  uint64_t v74 = 0;
  *(void *)(a1 + 64) = v52;
  *(void *)(a1 + 72) = v4;
  return v74;
}

uint64_t sub_100159D3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v71 = *(void *)(a1 + 40);
  if (!v71) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v70 = *(unsigned __int16 *)(a1 + 18);
  if (*(_WORD *)(a1 + 18))
  {
    uint64_t v69 = a1;
    uint64_t v5 = 0;
    do
    {
      uint64_t v98 = v3;
      uint64_t v99 = v5;
      unint64_t v6 = 0;
      int v7 = *a3;
      int v8 = a3[1];
      int v9 = v8 + *a3;
      int v10 = a3[2];
      int v11 = a3[3];
      int v91 = v9 + v10 + v11;
      int v92 = v9 + v10;
      int v13 = a3[4];
      int v12 = a3[5];
      int v97 = v91 + v13;
      int v14 = a3[8];
      int v15 = a3[9];
      int v16 = a3[10];
      int v17 = a3[11];
      int v18 = a3[6];
      int v19 = a3[7];
      int v20 = a3[12];
      int v94 = v10 - v9;
      int v85 = v10 - v9 + v11;
      int v95 = v19 + v12 + v15 + v14;
      int v96 = v18 + v13;
      v101[0] = v16 + v15 + v12 + v18 + v19 + v91 + v13 + v14 + v17 + v20;
      v101[1] = v18 + v13 + v16 + v85 - (v95 + v17 + v20);
      int v76 = v11 - (v9 + v10);
      int v84 = v9 - v10;
      int v74 = v9 - v10 + v11;
      int v78 = v12 + v13 + v18;
      int v100 = v14 + v16 + v15;
      v101[2] = v15 + v14 + v12 + v76 - (v19 + v18 + v13 + v20 + v17 + v16);
      v101[3] = v20 + v17 + v19 + v74 - (v100 + v78);
      int v21 = v8 - v7;
      int v93 = v8 - v7 - v10;
      int v89 = v19 + v12 + v13;
      int v82 = v16 + v15 + v18;
      int v22 = v7 - v8;
      int v23 = v19 + v18 - v13 + v12;
      int v88 = v22 - v10;
      int v24 = v22 - v10 - v11;
      int v72 = v23;
      int v73 = v12 + v13;
      v101[4] = v82 + v93 - v11 - (v89 + v14 + v17) + v20;
      v101[5] = v23 + v24 + v14 - v15 + v16 + v17 - v20;
      int v80 = v22 + v10;
      int v25 = v15 + v19 + v13;
      int v26 = v22 + v10 - v11;
      int v27 = v18 + v12 + v16 + v14;
      int v79 = v18 + v12;
      int v75 = v21 + v10;
      int v28 = v21 + v10 - v11;
      int v87 = v19 + v18;
      v101[6] = v25 + v17 + v26 - (v27 + v20);
      v101[7] = v12 + v13 + v14 + v28 - (v19 + v18 + v15 + v16 + v17) + v20;
      int v90 = v15 + v14 + v18;
      v101[8] = v90 + v17 + v26 - (v89 + v16 + v20);
      v101[9] = v23 + v28 - (v17 + v100) + v20;
      int v83 = v19 + v18 + v15 + v14;
      int v29 = v16 + v15 + v13;
      v101[10] = v29 + v93 - v11 - (v18 + v12) + v19 + v14 - v17 + v20;
      v101[11] = v17 + v16 + v13 + v12 + v24 - (v83 + v20);
      int v30 = v19 + v18 + v13;
      int v31 = v30 + v12 + v76 + v15 - (v17 + v20 + v16 + v14);
      int v81 = v19 + v12 + v16 + v15;
      int v77 = v20 + v17 + v13;
      int v32 = v77 + v18;
      v101[12] = v31;
      v101[13] = v77 + v18 + v74 + v14 - v81;
      int v33 = v30 + v14;
      int v34 = v30;
      int v35 = v16 + v15 + v12;
      v101[14] = v35 + v91 - v33 + v17 + v20;
      v101[15] = v16 + v14 + v19 + v85 - (v78 + v20 + v17 + v15);
      int v86 = v84 - v11;
      int v36 = v18 + v19;
      int v37 = v18 + v19 + v15;
      v101[16] = v25 + v84 - v11 - (v27 + v17) + v20;
      v101[17] = v17 + v14 + v73 - v20 - (v91 + v37 + v16);
      int v38 = v94 - v11;
      int v39 = v92 - v11;
      v101[18] = v82 + v17 + v94 - v11 - (v89 + v14 + v20);
      v101[19] = v72 + v92 - v11 + v14 + v16 - (v17 + v15) + v20;
      int v40 = v75 + v11;
      int v41 = v80 + v11;
      v101[20] = v20 + v17 + v12 + v75 + v11 - v34 + v14 + v15 - v16;
      v101[21] = v19 + v80 + v11 - (v17 + v20 + v100 + v78);
      int v42 = v88 + v11;
      int v43 = v29 + v12 + v88 + v11 + v36 + v14;
      int v44 = v93 + v11;
      v101[22] = v43 - (v20 + v17);
      v101[23] = v32 + v44 - v95 + v16;
      v101[24] = v35 + v42 - (v33 + v20 + v17);
      v101[25] = v20 + v17 + v44 - v78 + v19 + v14 - v15 + v16;
      v101[26] = v77 + v12 + v40 + v37 - (v16 + v14);
      v101[27] = v96 + v14 + v41 - (v17 + v20 + v81);
      v101[28] = v29 + v38 - v79 + v19 + v14 + v17 - v20;
      v101[29] = v73 + v16 + v39 - (v83 + v17) + v20;
      v101[30] = v90 + v86 - (v89 + v17 + v16) + v20;
      v101[31] = v87 - v97 + v12 + v17 - (v100 + v20);
      uint64_t v45 = v4;
      uint64_t v4 = v98;
      int v46 = (int *)(v71 + 8 * v99);
LABEL_9:
      int v47 = 0;
      unint64_t v48 = v6 >> 1;
      int v49 = (signed int *)(v45 + 256 + 4 * (v6 >> 1));
      int v50 = (_DWORD *)((char *)v101 + (v6 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v52 = *v50++;
        int v51 = v52;
        uint64_t v53 = 4 * v6;
        int v54 = *(_DWORD *)(v98 + 4 * v6);
        int v55 = *(_DWORD *)(v98 + ((4 * v6) | 4));
        BOOL v56 = v54 <= v55;
        if (v54 <= v55) {
          int v54 = *(_DWORD *)(v98 + ((4 * v6) | 4));
        }
        unsigned int v57 = v54 + v51;
        if (__OFADD__(v54, v51)) {
          unsigned int v57 = ((v54 + v51) >> 31) ^ 0x80000000;
        }
        *(v49 - 64) = v57;
        BOOL v58 = __OFSUB__(v54, v51);
        signed int v59 = v54 - v51;
        if (v58) {
          signed int v59 = (v59 >> 31) ^ 0x80000000;
        }
        signed int *v49 = v59;
        int v60 = (4 * v47) | (2 * v56);
        int v61 = *(_DWORD *)(v98 + (v53 | 8));
        int v62 = *(_DWORD *)(v98 + (v53 | 0xC));
        BOOL v63 = v61 <= v62;
        if (v61 > v62) {
          int v62 = v61;
        }
        int v47 = v60 | v63;
        unsigned int v64 = v62 - v51;
        if (__OFSUB__(v62, v51)) {
          unsigned int v64 = ((v62 - v51) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v45 + ((4 * v48) | 4)) = v64;
        BOOL v58 = __OFADD__(v62, v51);
        signed int v65 = v62 + v51;
        if (v58) {
          signed int v65 = (v65 >> 31) ^ 0x80000000;
        }
        v49[1] = v65;
        if ((~(_BYTE)v6 & 0x3C) == 0)
        {
          *v46++ = v47;
          BOOL v66 = v6 >= 0x7C;
          v6 += 4;
          if (v66) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v48 += 2;
        v49 += 2;
        BOOL v66 = v6 >= 0x7C;
        v6 += 4;
      }
      while (!v66);
      if (v47) {
        *int v46 = v47;
      }
LABEL_7:
      a3 += 13;
      uint64_t v5 = v99 + 1;
      uint64_t v3 = v45;
    }
    while (v99 + 1 != v70);
    uint64_t v3 = v45;
    a1 = v69;
  }
  uint64_t v67 = 0;
  *(void *)(a1 + 64) = v3;
  *(void *)(a1 + 72) = v4;
  return v67;
}

uint64_t sub_10015A41C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v68 = *(void *)(a1 + 40);
  if (!v68) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v5 = *(unsigned __int16 *)(a1 + 18);
  long long v154 = 0u;
  long long v155 = 0u;
  long long v152 = 0u;
  long long v153 = 0u;
  long long v150 = 0u;
  long long v151 = 0u;
  long long v148 = 0u;
  long long v149 = 0u;
  long long v146 = 0u;
  long long v147 = 0u;
  long long v145 = 0u;
  uint64_t v67 = v5;
  if (v5)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v116 = v3;
      unint64_t v7 = 0;
      int v9 = *a3;
      int v8 = a3[1];
      int v10 = v8 + *a3;
      int v12 = a3[2];
      int v11 = a3[3];
      int v13 = a3[4];
      int v14 = a3[5];
      int v15 = v10 + v12 + v11;
      int v99 = v15 + v13;
      int v107 = v15;
      int v108 = v15 + v13 + v14;
      int v16 = a3[6];
      int v17 = a3[7];
      int v115 = v108 + v16;
      int v18 = a3[9];
      int v19 = a3[8] + v17;
      int v20 = a3[8];
      int v21 = a3[10];
      int v22 = a3[11];
      int v117 = a3;
      int v125 = v12 - v10 + v11;
      int v106 = v125 - v13 + v14;
      int v128 = v21 + v19;
      int v137 = v22 + v18;
      int v138 = v19 + v18 + v21 + v22;
      int v119 = v19 + v18 + v21;
      v144[0] = v138 + v115;
      v144[1] = v22 + v18 + v106 - v16 - (v21 + v19);
      int v123 = v10 + v12 - v11;
      int v105 = v123 - (v14 + v13);
      int v120 = v12 - v10 - v11;
      int v102 = v120 + v13 - v14;
      int v135 = v22 + v21;
      int v134 = v19 + v18;
      v144[2] = v21 + v18 + v105 + v16 - (v19 + v22);
      v144[3] = v19 + v18 + v102 - v16 - (v22 + v21);
      int v103 = v11 - (v10 + v12);
      int v92 = v103 - v13 + v14;
      int v114 = v92 - v16;
      int v132 = v22 + v19 + v18;
      int v23 = v10 - v12;
      int v101 = v23 + v11;
      int v90 = v14 + v13 + v23 + v11;
      int v113 = v90 + v16;
      int v133 = v21 + v18;
      int v143 = v21 + v18 + v22;
      v144[4] = v21 + v92 - v16 - v132;
      v144[5] = v19 + v90 + v16 - v143;
      int v89 = v13 - v14 - v15;
      int v131 = v21 + v22;
      int v97 = v23 - v11;
      int v88 = v23 - v11 - (v14 + v13);
      v144[6] = v19 + v89 - v16 - v18 + v21 + v22;
      v144[7] = v88 + v16 - v119 + v22;
      int v24 = v8 - v9 - v12;
      int v98 = v14 + v13 + v24 - v11;
      int v121 = v21 + v20;
      int v118 = v18;
      int v25 = v9 - v8 - v12;
      int v136 = v25 - v11;
      int v140 = v18 + v20 - v17 + v21;
      int v112 = v25 - v11 - v13 + v14 - v16;
      v144[8] = v18 + v17 + v98 + v16 - (v21 + v20) + v22;
      v144[9] = v140 + v22 + v112;
      int v95 = v24 + v11 - (v14 + v13);
      int v96 = v25 - v11 - v13 + v14;
      int v127 = v17 + v22 + v21;
      int v26 = v25 + v11;
      int v94 = v25 + v11 + v13 - v14;
      int v122 = v21 + v18 + v17;
      v144[10] = v18 + v20 + v95 + v16 - v127;
      v144[11] = v122 + v94 - v16 - (v20 + v22);
      int v27 = v9 - v8 + v12;
      int v28 = v8 - v9 + v12;
      int v29 = v27 - v11;
      int v87 = v27 - v11 - v13 + v14;
      int v70 = v20;
      int v139 = v18 + v17 + v21;
      int v86 = v14 + v13 + v28 - v11;
      int v142 = v22 + v18 + v20;
      int v72 = v21 + v17;
      v144[12] = v20 + v87 - v16 - (v139 + v22);
      v144[13] = v21 + v17 + v86 + v16 - v142;
      int v30 = v27 + v11;
      int v85 = v30 + v13 - v14;
      int v84 = v28 + v11 - (v14 + v13);
      int v141 = v22 + v21 + v20;
      v144[14] = v22 + v17 + v85 - v16 - (v18 + v20 + v21);
      v144[15] = v141 + v84 + v16 - (v18 + v17);
      int v81 = v24 - v11 - (v14 + v13);
      int v79 = v136 + v13 - v14;
      int v111 = v79 + v16;
      v144[16] = v19 + v81 - v16 - (v21 + v18) + v22;
      v144[17] = v22 + v21 + v79 + v16 - (v19 + v18);
      int v77 = v14 + v13 + v24 + v11;
      int v78 = v26 - v13 + v14;
      int v129 = v19 + v21;
      v144[18] = v77 - v16 - v138;
      v144[19] = v19 + v21 + v78 + v16 - (v22 + v18);
      int v82 = v29 + v13 - v14;
      int v110 = v82 + v16;
      int v31 = v28 - v11 - (v14 + v13);
      v144[20] = v18 + v82 + v16 - (v21 + v19 + v22);
      v144[21] = v119 + v31 - v16 - v22;
      int v32 = v30 - v13 + v14;
      int v33 = v21;
      int v34 = v14 + v13 + v28 + v11;
      v144[22] = v19 + v18 + v32 + v16 - v21 + v22;
      v144[23] = v21 + v18 + v34 - v16 - v19 + v22;
      int v74 = v107 - (v14 + v13);
      int v75 = v125 + v13 - v14;
      int v104 = v75 + v16;
      v144[24] = v127 + v74 - v16 - (v18 + v20);
      v144[25] = v20 + v22 + v75 + v16 - v139;
      int v73 = v14 + v13 + v123;
      int v69 = v18 + v17;
      int v126 = v22 + v18 + v17;
      int v71 = v120 - v13 + v14;
      int v124 = v18 + v20 + v21 + v22;
      int v130 = v18 + v20 + v21;
      v144[26] = v21 + v20 + v73 - v16 - v126;
      v144[27] = v71 + v16 + v17 - v124;
      int v35 = v103 + v13 - v14;
      int v36 = v101 - (v14 + v13);
      v144[28] = v140 + v35 + v16 - v22;
      v144[29] = v18 + v17 + v36 - v16 - (v121 + v22);
      int v37 = v14 - v99;
      int v38 = v14 + v13 + v97;
      int v100 = v14 - v99 + v16;
      int v39 = v18 + v20 + v38 - v16;
      int v40 = v18 + v20;
      v144[30] = v122 + v100 - v20 + v22;
      v144[31] = v39 - v72 + v22;
      int v83 = v82 - v16;
      v144[32] = v33 + v83 - v132;
      v144[33] = v19 + v31 + v16 - v143;
      v144[34] = v19 + v32 - v16 - v118 + v131;
      v144[35] = v34 + v16 - v119 + v22;
      int v80 = v79 - v16;
      v144[36] = v138 + v81 + v16;
      v144[37] = v137 + v80 - v128;
      v144[38] = v133 + v77 + v16 - (v19 + v22);
      v144[39] = v134 + v78 - v16 - v135;
      v144[40] = v20 + v35 - v16 - (v139 + v22);
      v144[41] = v72 + v36 + v16 - v142;
      v144[42] = v22 + v17 + v37 - v16 - v130;
      v144[43] = v141 + v38 + v16 - v69;
      int v76 = v75 - v16;
      v144[44] = v69 + v74 + v16 - v121 + v22;
      v144[45] = v140 + v22 + v76;
      int v41 = v20 + v22;
      v144[46] = v40 + v73 + v16 - v127;
      v144[47] = v122 + v71 - v16 - v41;
      int v93 = v92 + v16;
      int v91 = v90 - v16;
      v144[48] = v118 + v93 - (v128 + v22);
      v144[49] = v119 + v91 - v22;
      v144[50] = v134 + v89 + v16 - v33 + v22;
      v144[51] = v133 + v88 - v16 - v19 + v22;
      int v109 = v108 - v16;
      v144[52] = v19 + v109 - v133 + v22;
      v144[53] = v135 + v106 + v16 - v134;
      v144[54] = v105 - v16 - v138;
      v144[55] = v129 + v102 + v16 - v137;
      v144[56] = v140 + v87 + v16 - v22;
      v144[57] = v69 + v86 - v16 - (v121 + v22);
      v144[58] = v122 + v85 + v16 - v70 + v22;
      v144[59] = v40 + v84 - v16 - v72 + v22;
      v144[60] = v127 + v98 - v16 - v40;
      v144[61] = v41 + v96 + v16 - v139;
      v144[62] = v121 + v95 - v16 - v126;
      v144[63] = v94 + v16 + v17 - v124;
      v144[64] = v122 + v88 - v16 - v70 + v22;
      v144[65] = v40 + v89 + v16 - v72 + v22;
      v144[66] = v140 + v91 - v22;
      v144[67] = v69 + v93 - (v121 + v22);
      v144[68] = v121 + v102 + v16 - v126;
      v144[69] = v105 - v16 + v17 - v124;
      v144[70] = v127 + v106 + v16 - v40;
      v144[71] = v41 + v109 - v139;
      v144[72] = v134 + v84 - v16 - v33 + v22;
      v144[73] = v133 + v85 + v16 - v19 + v22;
      v144[74] = v118 + v86 - v16 - (v128 + v22);
      v144[75] = v119 + v87 + v16 - v22;
      v144[76] = v94 + v16 - v138;
      v144[77] = v129 + v95 - v16 - v137;
      v144[78] = v19 + v96 + v16 - v133 + v22;
      v144[79] = v135 + v98 - v16 - v134;
      v144[80] = v22 + v17 + v34 + v16 - v130;
      v144[81] = v141 + v32 - v16 - v69;
      v144[82] = v31 + v16 + v70 - (v139 + v22);
      v144[83] = v72 + v83 - v142;
      LODWORD(v145) = v40 + v78 - v16 - v127;
      DWORD1(v145) = v122 + v77 + v16 - v41;
      DWORD2(v145) = v69 + v80 - v121 + v22;
      HIDWORD(v145) = v140 + v22 + v81 + v16;
      LODWORD(v146) = v19 + v38 + v16 - v118 + v131;
      DWORD1(v146) = v37 - v16 - v119 + v22;
      DWORD2(v146) = v33 + v36 + v16 - v132;
      HIDWORD(v146) = v19 + v35 - v16 - v143;
      LODWORD(v147) = v133 + v71 - v16 - (v19 + v22);
      DWORD1(v147) = v134 + v73 + v16 - v135;
      DWORD2(v147) = v138 + v76;
      HIDWORD(v147) = v137 + v74 + v16 - v128;
      LODWORD(v148) = v121 + v78 + v16 - v126;
      DWORD1(v148) = v77 - v16 + v17 - v124;
      DWORD2(v148) = v127 + v111 - v40;
      HIDWORD(v148) = v41 + v81 - v16 - v139;
      LODWORD(v149) = v122 + v34 - v16 - v70 + v22;
      DWORD1(v149) = v40 + v32 + v16 - v72 + v22;
      DWORD2(v149) = v140 + v31 - v16 - v22;
      HIDWORD(v149) = v69 + v110 - (v121 + v22);
      LODWORD(v150) = v71 + v16 - v138;
      DWORD1(v150) = v129 + v73 - v16 - v137;
      DWORD2(v150) = v19 + v104 - v133 + v22;
      HIDWORD(v150) = v135 + v74 - v16 - v134;
      LODWORD(v151) = v134 + v38 - v16 - v33 + v22;
      DWORD1(v151) = v133 + v100 - v19 + v22;
      DWORD2(v151) = v118 + v36 - v16 - (v128 + v22);
      HIDWORD(v151) = v119 + v35 + v16 - v22;
      LODWORD(v152) = v40 + v102 - v16 - v127;
      DWORD1(v152) = v122 + v105 + v16 - v41;
      DWORD2(v152) = v69 + v106 - v16 - v121 + v22;
      HIDWORD(v152) = v140 + v22 + v115;
      LODWORD(v153) = v22 + v17 + v88 + v16 - v130;
      DWORD1(v153) = v141 + v89 - v16 - v69;
      DWORD2(v153) = v70 + v113 - (v139 + v22);
      HIDWORD(v153) = v72 + v114 - v142;
      LODWORD(v154) = v133 + v94 - v16 - (v19 + v22);
      DWORD1(v154) = v134 + v95 + v16 - v135;
      DWORD2(v154) = v138 + v112;
      HIDWORD(v154) = v137 + v98 + v16 - v128;
      LODWORD(v155) = v19 + v84 + v16 - v118 + v131;
      DWORD1(v155) = v85 - v16 - v119 + v22;
      DWORD2(v155) = v33 + v86 + v16 - v132;
      HIDWORD(v155) = v19 + v87 - v16 - v143;
      uint64_t v42 = v4;
      uint64_t v4 = v116;
      int v43 = (int *)(v68 + 32 * v6);
LABEL_9:
      int v44 = 0;
      unint64_t v45 = v7 >> 1;
      int v46 = (unsigned int *)(v42 + 4 * (v7 >> 1));
      int v47 = (_DWORD *)((char *)v144 + (v7 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v49 = *v47++;
        int v48 = v49;
        uint64_t v50 = 4 * v7;
        int v51 = *(_DWORD *)(v116 + 4 * v7);
        int v52 = *(_DWORD *)(v116 + ((4 * v7) | 4));
        BOOL v53 = v51 <= v52;
        if (v51 <= v52) {
          int v51 = *(_DWORD *)(v116 + ((4 * v7) | 4));
        }
        unsigned int v54 = v51 + v48;
        if (__OFADD__(v51, v48)) {
          unsigned int v54 = ((v51 + v48) >> 31) ^ 0x80000000;
        }
        *int v46 = v54;
        BOOL v55 = __OFSUB__(v51, v48);
        signed int v56 = v51 - v48;
        if (v55) {
          signed int v56 = (v56 >> 31) ^ 0x80000000;
        }
        v46[256] = v56;
        int v57 = (4 * v44) | (2 * v53);
        int v58 = *(_DWORD *)(v116 + (v50 | 8));
        int v59 = *(_DWORD *)(v116 + (v50 | 0xC));
        BOOL v60 = v58 <= v59;
        if (v58 > v59) {
          int v59 = v58;
        }
        int v44 = v57 | v60;
        unsigned int v61 = v59 - v48;
        if (__OFSUB__(v59, v48)) {
          unsigned int v61 = ((v59 - v48) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v42 + ((4 * v45) | 4)) = v61;
        BOOL v55 = __OFADD__(v59, v48);
        signed int v62 = v59 + v48;
        if (v55) {
          signed int v62 = (v62 >> 31) ^ 0x80000000;
        }
        v46[257] = v62;
        if ((~(_BYTE)v7 & 0x3C) == 0)
        {
          *v43++ = v44;
          BOOL v63 = v7 >= 0x1FC;
          v7 += 4;
          if (v63) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v45 += 2;
        v46 += 2;
        BOOL v63 = v7 >= 0x1FC;
        v7 += 4;
      }
      while (!v63);
      if (v44) {
        int *v43 = v44;
      }
LABEL_7:
      a3 = v117 + 12;
      ++v6;
      uint64_t v3 = v42;
    }
    while (v6 != v67);
  }
  else
  {
    uint64_t v42 = v3;
  }
  uint64_t v64 = 0;
  *(void *)(a1 + 64) = v42;
  *(void *)(a1 + 72) = v4;
  return v64;
}

uint64_t sub_10015B454(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v74 = *(void *)(a1 + 40);
  if (!v74) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v73 = *(unsigned __int16 *)(a1 + 18);
  if (*(_WORD *)(a1 + 18))
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v119 = v3;
      uint64_t v120 = v5;
      unint64_t v6 = 0;
      int v7 = *a3;
      int v8 = a3[1];
      int v9 = v8 + *a3;
      int v11 = a3[2];
      int v10 = a3[3];
      int v88 = v9 + v11 + v10;
      int v12 = v9 + v11;
      int v14 = a3[4];
      int v13 = a3[5];
      int v116 = v88 + v14;
      int v96 = v88 + v14 + v13;
      int v15 = a3[8];
      int v90 = a3[9];
      int v16 = a3[10];
      int v17 = a3[11];
      int v18 = a3[6];
      int v19 = a3[7];
      int v101 = a3;
      int v98 = *a3 - v8 - v11;
      int v95 = v98 + v10;
      int v118 = v98 + v10 - v14;
      int v20 = v16 + v90 + v13 + v18;
      v122[0] = v16 + v90 + v18 + v19 + v15 + v17 + v96;
      int v21 = v9 - v11;
      v122[1] = v20 + v118 - (v15 + v19) + v17;
      int v93 = v9 - v11 - v10;
      int v117 = v93 - v14;
      int v104 = v15 + v18 + v13;
      int v22 = v7 - v8 + v11;
      int v121 = v18 + v13 + v19;
      v122[2] = v17 + v19 + v93 - v14 - (v104 + v16 + v90);
      v122[3] = v17 + v15 + v22 - v10 + v14 - (v121 + v16 + v90);
      int v23 = v8 - v7;
      int v24 = v11 - v9;
      int v91 = v24 - v10;
      int v114 = v24 - v10 + v14;
      int v115 = v22 - v10 + v14;
      int v107 = v19 + v13 + v15;
      int v25 = v15 + v19 - v13 + v18;
      int v26 = v23 - v11;
      int v86 = v23 - v11 - v10;
      int v112 = v86 - v14;
      int v100 = v25;
      v122[4] = v18 + v114 - (v107 + v16 + v90) + v17;
      v122[5] = v25 + v86 - v14 - (v16 + v90) + v17;
      int v27 = v23 + v11;
      int v113 = v10 - v12 - v14;
      int v108 = v27 + v10 + v14;
      int v28 = v16 + v90 + v13 + v19;
      v122[6] = v16 + v90 + v13 + v113 - (v19 + v18) + v15 + v17;
      v122[7] = v28 + v108 - (v15 + v18) + v17;
      int v106 = v27 - v10 - v14;
      int v109 = v14 - v88;
      v122[8] = v25 + v14 - v88 - (v16 + v90 + v17);
      v122[9] = v18 + v106 - (v17 + v107 + v16 + v90);
      int v82 = v24 + v10;
      int v111 = v24 + v10 - v14;
      int v103 = v26 + v10 + v14;
      v122[10] = v28 + v111 - (v15 + v18 + v17);
      v122[11] = v16 + v90 + v13 + v15 + v103 - (v19 + v18 + v17);
      int v110 = v21 + v10 + v14;
      int v102 = v22 + v10 - v14;
      v122[12] = v20 + v110 - (v15 + v19 + v17);
      v122[13] = v20 + v19 + v102 + v15 - v17;
      int v105 = v12 - v10 - v14;
      int v78 = v98 - v10;
      int v99 = v98 - v10 + v14;
      v122[14] = v15 + v105 - (v17 + v121 + v16 + v90);
      v122[15] = v19 + v99 - (v17 + v104 + v16 + v90);
      int v85 = v22 - v10 - v14;
      int v83 = v93 + v14;
      v122[16] = v17 + v16 + v85 - (v121 + v15 + v90);
      v122[17] = v17 + v16 + v93 + v14 - (v18 + v13) + v19 + v15 - v90;
      int v84 = v95 + v14;
      int v29 = v90 + v15 + v13 + v18;
      int v79 = v88 - v14;
      int v89 = v19 + v18 + v13;
      v122[18] = v29 + v95 + v14 - (v19 + v16) + v17;
      v122[19] = v89 + v90 + v79 - (v16 + v15) + v17;
      int v81 = v27 + v10 - v14;
      int v77 = v15 + v19 + v13;
      int v30 = v13;
      int v76 = v10 - v12 + v14;
      int v31 = v19 + v18 + v15;
      v122[20] = v77 + v90 + v81 - (v18 + v16) + v17;
      v122[21] = v17 + v90 + v13 + v76 - (v16 + v31);
      int v80 = v86 + v14;
      int v32 = v91 - v14;
      v122[22] = v17 + v16 - v13 + v18 + v19 + v86 + v14 - (v90 + v15);
      v122[23] = v17 + v16 + v18 + v15 + v91 - v14 - (v90 + v19 + v13);
      int v92 = v26 + v10 - v14;
      int v33 = v82 + v14;
      v122[24] = v90 + v13 + v92 - (v17 + v16 + v31);
      v122[25] = v77 + v90 + v82 + v14 - (v18 + v17 + v16);
      int v87 = v27 - v10 + v14;
      int v94 = v16 + v15;
      int v75 = v90 + v15;
      v122[26] = v16 + v15 + v18 + v87 - (v90 + v19 + v13 + v17);
      v122[27] = v19 + v18 + v16 - (v90 + v15 + v17) - v96;
      int v97 = v78 - v14;
      int v34 = v18 + v13;
      int v35 = v12 - v10 + v14;
      v122[28] = v15 + v19 + v16 + v78 - v14 - (v18 + v13 + v17 + v90);
      v122[29] = v16 + v35 - (v121 + v15 + v90 + v17);
      int v36 = v22 + v10 + v14;
      int v37 = v21 + v10 - v14;
      v122[30] = v89 + v90 + v36 - (v17 + v16 + v15);
      v122[31] = v29 + v37 - (v19 + v17 + v16);
      v122[32] = v83 + v13 - (v31 + v16 + v90) + v17;
      v122[33] = v77 + v85 - (v16 + v90 + v18) + v17;
      int v38 = v19 + v13;
      int v39 = v16 + v90 - v30 + v18 + v19;
      v122[34] = v16 + v90 + v18 + v79 - v38 + v15 + v17;
      v122[35] = v39 + v84 - v15 + v17;
      v122[36] = v16 + v90 + v76 - v34 + v19 + v15 + v17;
      v122[37] = v16 + v90 + v81 - (v121 + v15) + v17;
      int v40 = v90 + v15 + v16;
      int v41 = v19 + v90 + v16;
      v122[38] = v89 + v32 - v40 + v17;
      v122[39] = v34 + v15 + v80 - v41 + v17;
      v122[40] = v16 + v90 + v33 - (v121 + v15 + v17);
      v122[41] = v16 + v90 + v92 - v34 + v19 + v15 - v17;
      v122[42] = v104 - (v41 + v17) - v116;
      v122[43] = v89 + v87 - (v17 + v40);
      v122[44] = v77 + v35 - (v18 + v16 + v90 + v17);
      v122[45] = v97 + v30 - (v17 + v31 + v16 + v90);
      v122[46] = v39 + v37 - (v17 + v15);
      v122[47] = v16 + v90 + v18 + v15 + v36 - (v38 + v17);
      v122[48] = v100 + v90 + v118 - v16 + v17;
      v122[49] = v17 + v90 + v18 + v116 - (v16 + v107);
      int v42 = v15 + v18 + v90;
      int v43 = v90 + v19 + v18;
      v122[50] = v17 + v16 + v30 + v19 + v115 - v42;
      v122[51] = v17 + v16 + v30 + v15 + v117 - v43;
      int v44 = v17 + v16 + v30 + v18;
      int v45 = v44 + v112;
      int v46 = v44 + v19 + v114 + v15;
      int v47 = v15 + v19 + v90;
      v122[52] = v45 - v47;
      v122[53] = v46 - v90;
      v122[54] = v75 + v108 - (v121 + v16) + v17;
      v122[55] = v19 + v90 + v113 - (v16 + v104) + v17;
      v122[56] = v18 + v16 + v77 + v106 - (v17 + v90);
      v122[57] = v34 + v16 + v109 - (v47 + v17);
      v122[58] = v19 + v90 + v103 - (v17 + v16 + v104);
      v122[59] = v75 + v111 - (v121 + v17 + v16);
      v122[60] = v90 + v18 + v102 - (v17 + v16 + v107);
      v122[61] = v100 + v90 + v110 - (v17 + v16);
      v122[62] = v94 + v30 + v99 - (v43 + v17);
      v122[63] = v38 + v16 + v105 - (v42 + v17);
      uint64_t v48 = v4;
      uint64_t v4 = v119;
      int v49 = (int *)(v74 + 16 * v120);
LABEL_9:
      int v50 = 0;
      unint64_t v51 = v6 >> 1;
      int v52 = (unsigned int *)(v48 + 4 * (v6 >> 1));
      BOOL v53 = (_DWORD *)((char *)v122 + (v6 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v55 = *v53++;
        int v54 = v55;
        uint64_t v56 = 4 * v6;
        int v57 = *(_DWORD *)(v119 + 4 * v6);
        int v58 = *(_DWORD *)(v119 + ((4 * v6) | 4));
        BOOL v59 = v57 <= v58;
        if (v57 <= v58) {
          int v57 = *(_DWORD *)(v119 + ((4 * v6) | 4));
        }
        unsigned int v60 = v57 + v54;
        if (__OFADD__(v57, v54)) {
          unsigned int v60 = ((v57 + v54) >> 31) ^ 0x80000000;
        }
        *int v52 = v60;
        BOOL v61 = __OFSUB__(v57, v54);
        signed int v62 = v57 - v54;
        if (v61) {
          signed int v62 = (v62 >> 31) ^ 0x80000000;
        }
        v52[128] = v62;
        int v63 = (4 * v50) | (2 * v59);
        int v64 = *(_DWORD *)(v119 + (v56 | 8));
        int v65 = *(_DWORD *)(v119 + (v56 | 0xC));
        BOOL v66 = v64 <= v65;
        if (v64 > v65) {
          int v65 = v64;
        }
        int v50 = v63 | v66;
        unsigned int v67 = v65 - v54;
        if (__OFSUB__(v65, v54)) {
          unsigned int v67 = ((v65 - v54) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v48 + ((4 * v51) | 4)) = v67;
        BOOL v61 = __OFADD__(v65, v54);
        signed int v68 = v65 + v54;
        if (v61) {
          signed int v68 = (v68 >> 31) ^ 0x80000000;
        }
        v52[129] = v68;
        if ((~(_BYTE)v6 & 0x3C) == 0)
        {
          *v49++ = v50;
          BOOL v69 = v6 >= 0xFC;
          v6 += 4;
          if (v69) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v51 += 2;
        v52 += 2;
        BOOL v69 = v6 >= 0xFC;
        v6 += 4;
      }
      while (!v69);
      if (v50) {
        int *v49 = v50;
      }
LABEL_7:
      a3 = v101 + 12;
      uint64_t v5 = v120 + 1;
      uint64_t v3 = v48;
    }
    while (v120 + 1 != v73);
  }
  else
  {
    uint64_t v48 = *(void *)(a1 + 64);
  }
  uint64_t v70 = 0;
  *(void *)(a1 + 64) = v48;
  *(void *)(a1 + 72) = v4;
  return v70;
}

uint64_t sub_10015BEA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v68 = *(void *)(a1 + 40);
  if (!v68) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v67 = *(unsigned __int16 *)(a1 + 18);
  if (*(_WORD *)(a1 + 18))
  {
    uint64_t v66 = a1;
    uint64_t v5 = 0;
    do
    {
      uint64_t v96 = v3;
      unint64_t v6 = 0;
      int v7 = *a3;
      int v8 = a3[1];
      int v9 = v8 + *a3;
      int v11 = a3[2];
      int v10 = a3[3];
      int v90 = v9 + v11;
      int v91 = v9 + v11 + v10;
      int v13 = a3[4];
      int v12 = a3[5];
      int v95 = v91 + v13;
      int v15 = a3[8];
      int v14 = a3[9];
      int v16 = a3[10];
      int v17 = a3[11];
      int v18 = a3[6];
      int v19 = a3[7];
      int v93 = v11 - v9;
      int v83 = v11 - v9 + v10;
      int v94 = v19 + v12 + v14 + v15;
      int v78 = v18 + v13;
      v97[0] = v16 + v14 + v12 + v18 + v19 + v91 + v13 + v15 + v17;
      v97[1] = v18 + v13 + v16 + v83 - (v94 + v17);
      int v74 = v19 + v18 + v13;
      int v75 = v10 - (v9 + v11);
      int v82 = v9 - v11;
      int v71 = v9 - v11 + v10;
      int v76 = v12 + v13 + v18;
      int v20 = v15 + v16 + v14;
      int v88 = v20;
      int v89 = v20 + v76;
      v97[2] = v14 + v15 + v12 + v75 - (v74 + v17 + v16);
      v97[3] = v17 + v19 + v71 - (v20 + v76);
      int v21 = v8 - v7;
      int v92 = v8 - v7 - v11;
      int v22 = v19 + v12 + v13;
      int v69 = v12 + v13;
      int v87 = v22;
      int v23 = v7 - v8;
      int v24 = v19 + v18 - v13 + v12;
      int v85 = v23 - v11;
      int v25 = v23 - v11 - v10;
      v97[4] = v16 + v14 + v18 + v92 - v10 - (v22 + v15 + v17);
      v97[5] = v24 + v25 + v15 - v14 + v16 + v17;
      int v72 = v23 + v11;
      int v73 = v21 + v11;
      int v26 = v21 + v11 - v10;
      int v27 = v14 + v19 + v13;
      int v28 = v16 + v15;
      int v29 = v18 + v12 + v16 + v15;
      v97[6] = v27 + v72 - v10 - v29 + v17;
      v97[7] = v12 + v13 + v15 + v26 - (v19 + v18 + v14 + v16 + v17);
      int v86 = v14 + v15 + v18;
      v97[8] = v86 + v72 - v10 - (v22 + v16) + v17;
      v97[9] = v24 + v26 - (v17 + v20);
      int v70 = v17 + v16 + v13;
      int v30 = v16 + v14 + v13;
      int v77 = v19 + v15;
      int v80 = v19 + v18 + v14 + v15;
      v97[10] = v30 + v92 - v10 - (v18 + v12) + v19 + v15 - v17;
      v97[11] = v70 + v12 + v25 - v80;
      int v81 = v19 + v12 + v16 + v14;
      int v79 = v78 + v15;
      v97[12] = v74 + v12 + v75 + v14 - (v17 + v16 + v15);
      v97[13] = v79 + v71 - v81 + v17;
      int v31 = v16 + v15 + v19;
      int v32 = v74 + v15;
      int v33 = v16 + v14 + v12;
      v97[14] = v33 + v91 - (v74 + v15) + v17;
      v97[15] = v31 + v83 - (v76 + v17 + v14);
      int v84 = v82 - v10;
      v97[16] = v27 + v82 - v10 - (v29 + v17);
      v97[17] = v17 + v15 + v69 - (v91 + v18 + v19 + v14 + v16);
      int v34 = v93 - v10;
      int v35 = v90 - v10;
      v97[18] = v16 + v14 + v18 + v93 - v10 - (v22 + v15) + v17;
      v97[19] = v24 + v90 - v10 + v15 + v16 - (v17 + v14);
      int v36 = v73 + v10;
      int v37 = v72 + v10;
      v97[20] = v14 + v15 + v12 + v73 + v10 - (v74 + v16) + v17;
      v97[21] = v19 + v72 + v10 - (v17 + v89);
      int v38 = v18 + v19 + v15;
      int v39 = v85 + v10;
      int v40 = v30 + v12 + v85 + v10;
      int v41 = v92 + v10;
      v97[22] = v40 + v38 - v17;
      v97[23] = v70 + v18 + v41 - v94;
      v97[24] = v33 + v39 - (v32 + v17);
      v97[25] = v31 + v41 - (v76 + v14) + v17;
      v97[26] = v74 + v12 + v36 + v14 - v28 + v17;
      v97[27] = v79 + v37 - (v17 + v81);
      v97[28] = v30 + v34 - (v18 + v12) + v77 + v17;
      v97[29] = v69 + v16 + v35 - (v80 + v17);
      v97[30] = v86 + v84 - (v87 + v17 + v16);
      v97[31] = v19 + v18 + v12 - v88 - v95 + v17;
      uint64_t v42 = v4;
      uint64_t v4 = v96;
      int v43 = (int *)(v68 + 8 * v5);
LABEL_9:
      int v44 = 0;
      unint64_t v45 = v6 >> 1;
      int v46 = (signed int *)(v42 + 256 + 4 * (v6 >> 1));
      int v47 = (_DWORD *)((char *)v97 + (v6 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v49 = *v47++;
        int v48 = v49;
        uint64_t v50 = 4 * v6;
        int v51 = *(_DWORD *)(v96 + 4 * v6);
        int v52 = *(_DWORD *)(v96 + ((4 * v6) | 4));
        BOOL v53 = v51 <= v52;
        if (v51 <= v52) {
          int v51 = *(_DWORD *)(v96 + ((4 * v6) | 4));
        }
        unsigned int v54 = v51 + v48;
        if (__OFADD__(v51, v48)) {
          unsigned int v54 = ((v51 + v48) >> 31) ^ 0x80000000;
        }
        *(v46 - 64) = v54;
        BOOL v55 = __OFSUB__(v51, v48);
        signed int v56 = v51 - v48;
        if (v55) {
          signed int v56 = (v56 >> 31) ^ 0x80000000;
        }
        *int v46 = v56;
        int v57 = (4 * v44) | (2 * v53);
        int v58 = *(_DWORD *)(v96 + (v50 | 8));
        int v59 = *(_DWORD *)(v96 + (v50 | 0xC));
        BOOL v60 = v58 <= v59;
        if (v58 > v59) {
          int v59 = v58;
        }
        int v44 = v57 | v60;
        unsigned int v61 = v59 - v48;
        if (__OFSUB__(v59, v48)) {
          unsigned int v61 = ((v59 - v48) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v42 + ((4 * v45) | 4)) = v61;
        BOOL v55 = __OFADD__(v59, v48);
        signed int v62 = v59 + v48;
        if (v55) {
          signed int v62 = (v62 >> 31) ^ 0x80000000;
        }
        v46[1] = v62;
        if ((~(_BYTE)v6 & 0x3C) == 0)
        {
          *v43++ = v44;
          BOOL v63 = v6 >= 0x7C;
          v6 += 4;
          if (v63) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v45 += 2;
        v46 += 2;
        BOOL v63 = v6 >= 0x7C;
        v6 += 4;
      }
      while (!v63);
      if (v44) {
        int *v43 = v44;
      }
LABEL_7:
      a3 += 12;
      ++v5;
      uint64_t v3 = v42;
    }
    while (v5 != v67);
    uint64_t v3 = v42;
    a1 = v66;
  }
  uint64_t v64 = 0;
  *(void *)(a1 + 64) = v3;
  *(void *)(a1 + 72) = v4;
  return v64;
}

uint64_t sub_10015C4FC(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v71 = *(void *)(a1 + 40);
  if (!v71) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v5 = *(unsigned __int16 *)(a1 + 18);
  long long v129 = 0u;
  long long v130 = 0u;
  long long v127 = 0u;
  long long v128 = 0u;
  long long v125 = 0u;
  long long v126 = 0u;
  long long v123 = 0u;
  long long v124 = 0u;
  long long v121 = 0u;
  long long v122 = 0u;
  long long v120 = 0u;
  uint64_t v70 = v5;
  if (v5)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v116 = v3;
      uint64_t v117 = v6;
      unint64_t v7 = 0;
      int v8 = *a3;
      int v9 = a3[1];
      int v10 = v9 + *a3;
      int v11 = a3[2];
      int v12 = a3[3];
      int v13 = a3[4];
      int v14 = a3[5];
      int v15 = v10 + v11 + v12;
      int v101 = v15 + v13;
      int v109 = v15 + v13 + v14;
      int v111 = v15;
      int v17 = a3[6];
      int v16 = a3[7];
      int v115 = v109 + v17;
      int v19 = a3[8];
      int v18 = a3[9];
      int v20 = v19 + v16;
      int v118 = a3;
      int v21 = a3[10];
      int v108 = v11 - v10 + v12;
      int v107 = v108 - v13 + v14;
      int v105 = v10 + v11 - v12;
      v119[0] = v19 + v16 + v18 + v21 + v115;
      v119[1] = v18 + v107 - v17 - (v21 + v19 + v16);
      int v106 = v105 - (v14 + v13);
      int v104 = v11 - v10 - v12;
      int v103 = v104 + v13 - v14;
      v119[2] = v21 + v18 + v106 + v17 - (v19 + v16);
      v119[3] = v19 + v16 + v18 + v103 - v17 - v21;
      int v100 = v12 - (v10 + v11);
      int v94 = v100 - v13 + v14;
      int v114 = v94 - v17;
      int v22 = v10 - v11;
      int v85 = v22 + v12;
      int v92 = v14 + v13 + v22 + v12;
      int v113 = v92 + v17;
      v119[4] = v94 - v17 - (v19 + v16 + v18) + v21;
      v119[5] = v19 + v16 + v92 + v17 - (v21 + v18);
      int v91 = v13 - v14 - v15;
      int v84 = v22 - v12;
      int v90 = v22 - v12 - (v14 + v13);
      v119[6] = v19 + v16 + v91 - v17 - v18 + v21;
      v119[7] = v90 + v17 - (v19 + v16 + v18 + v21);
      int v23 = v9 - v8 - v11;
      int v99 = v14 + v13 + v23 - v12;
      int v24 = v19;
      int v25 = v21 + v19;
      int v26 = v18 + v16;
      int v27 = v8 - v9 - v11 - v12;
      int v98 = v27 - v13 + v14;
      int v28 = v18 + v19;
      int v75 = v18 + v19 - v16 + v21;
      v119[8] = v18 + v16 + v99 + v17 - (v21 + v19);
      v119[9] = v75 + v98 - v17;
      int v97 = v23 + v12 - (v14 + v13);
      int v72 = v16 + v21;
      int v29 = v8 - v9 - v11 + v12;
      int v96 = v29 + v13 - v14;
      int v74 = v21 + v18 + v16;
      v119[10] = v28 + v97 + v17 - (v16 + v21);
      v119[11] = v74 + v96 - v17 - v24;
      int v30 = v8 - v9 + v11;
      int v31 = v9 - v8 + v11;
      int v32 = v30 - v12;
      int v89 = v30 - v12 - v13 + v14;
      int v88 = v14 + v13 + v31 - v12;
      v119[12] = v24 + v89 - v17 - (v18 + v16 + v21);
      v119[13] = v16 + v21 + v88 + v17 - v28;
      int v33 = v30 + v12;
      int v34 = v31 + v12;
      int v86 = v33 + v13 - v14;
      int v87 = v31 + v12 - (v14 + v13);
      v119[14] = v86 - v17 + v16 - (v28 + v21);
      v119[15] = v25 + v87 + v17 - (v18 + v16);
      int v82 = v23 - v12 - (v14 + v13);
      int v112 = v82 - v17;
      int v81 = v27 + v13 - v14;
      v119[16] = v20 + v82 - v17 - (v21 + v18);
      v119[17] = v81 + v17 - (v20 + v18) + v21;
      int v79 = v14 + v13 + v23 + v12;
      int v80 = v29 - v13 + v14;
      int v35 = v20 + v18 + v21;
      v119[18] = v79 - v17 - v35;
      v119[19] = v20 + v80 + v17 - v18 + v21;
      int v36 = v32 + v13 - v14;
      int v37 = v31 - v12 - (v14 + v13);
      v119[20] = v18 + v36 + v17 - (v21 + v20);
      v119[21] = v35 + v37 - v17;
      int v38 = v33 - v13 + v14;
      int v39 = v14 + v13 + v34;
      v119[22] = v20 + v18 + v38 + v17 - v21;
      v119[23] = v21 + v18 + v39 - v17 - v20;
      int v78 = v111 - (v14 + v13);
      int v77 = v108 + v13 - v14;
      v119[24] = v16 + v21 + v78 - v17 - v28;
      v119[25] = v24 + v77 + v17 - (v18 + v16 + v21);
      int v76 = v14 + v13 + v105;
      int v40 = v104 - v13 + v14;
      int v73 = v16;
      v119[26] = v25 + v76 - v17 - (v18 + v16);
      v119[27] = v40 + v17 + v16 - (v28 + v21);
      int v41 = v100 + v13 - v14;
      int v42 = v85 - (v14 + v13);
      v119[28] = v75 + v41 + v17;
      v119[29] = v18 + v16 + v42 - v17 - v25;
      int v43 = v14 - v101;
      int v44 = v14 + v13 + v84;
      int v102 = v14 - v101 + v17;
      v119[30] = v74 + v102 - v24;
      v119[31] = v28 + v44 - v17 - v72;
      v119[32] = v36 - v17 - (v20 + v18) + v21;
      v119[33] = v20 + v37 + v17 - (v21 + v18);
      v119[34] = v20 + v38 - v17 - v18 + v21;
      v119[35] = v39 + v17 - v35;
      int v83 = v82 + v17;
      v119[36] = v35 + v83;
      v119[37] = v18 + v81 - v17 - (v21 + v20);
      v119[38] = v21 + v18 + v79 + v17 - v20;
      v119[39] = v20 + v18 + v80 - v17 - v21;
      v119[40] = v24 + v41 - v17 - (v26 + v21);
      v119[41] = v72 + v42 + v17 - v28;
      v119[42] = v43 - v17 + v73 - (v28 + v21);
      v119[43] = v25 + v44 + v17 - v26;
      v119[44] = v26 + v78 + v17 - v25;
      v119[45] = v75 + v77 - v17;
      v119[46] = v28 + v76 + v17 - v72;
      v119[47] = v74 + v40 - v17 - v24;
      int v95 = v94 + v17;
      int v93 = v92 - v17;
      v119[48] = v18 + v95 - (v21 + v20);
      v119[49] = v35 + v93;
      v119[50] = v20 + v18 + v91 + v17 - v21;
      v119[51] = v21 + v18 + v90 - v17 - v20;
      int v110 = v109 - v17;
      v119[52] = v20 + v110 - (v21 + v18);
      v119[53] = v107 + v17 - (v20 + v18) + v21;
      v119[54] = v106 - v17 - v35;
      v119[55] = v20 + v103 + v17 - v18 + v21;
      v119[56] = v75 + v89 + v17;
      v119[57] = v26 + v88 - v17 - v25;
      v119[58] = v74 + v86 + v17 - v24;
      v119[59] = v28 + v87 - v17 - v72;
      v119[60] = v72 + v99 - v17 - v28;
      v119[61] = v24 + v98 + v17 - (v26 + v21);
      v119[62] = v25 + v97 - v17 - v26;
      v119[63] = v96 + v17 + v73 - (v28 + v21);
      v119[64] = v74 + v90 - v17 - v24;
      v119[65] = v28 + v91 + v17 - v72;
      v119[66] = v75 + v93;
      v119[67] = v26 + v95 - v25;
      v119[68] = v25 + v103 + v17 - v26;
      v119[69] = v106 - v17 + v73 - (v28 + v21);
      v119[70] = v72 + v107 + v17 - v28;
      v119[71] = v24 + v110 - (v26 + v21);
      v119[72] = v20 + v18 + v87 - v17 - v21;
      v119[73] = v21 + v18 + v86 + v17 - v20;
      v119[74] = v18 + v88 - v17 - (v21 + v20);
      v119[75] = v35 + v89 + v17;
      v119[76] = v96 + v17 - v35;
      v119[77] = v20 + v97 - v17 - v18 + v21;
      v119[78] = v20 + v98 + v17 - (v21 + v18);
      v119[79] = v99 - v17 - (v20 + v18) + v21;
      v119[80] = v39 + v17 + v73 - (v28 + v21);
      v119[81] = v25 + v38 - v17 - v26;
      v119[82] = v37 + v17 + v24 - (v26 + v21);
      v119[83] = v72 + v36 - v17 - v28;
      LODWORD(v120) = v28 + v80 - v17 - v72;
      DWORD1(v120) = v74 + v79 + v17 - v24;
      DWORD2(v120) = v26 + v81 - v17 - v25;
      HIDWORD(v120) = v75 + v83;
      LODWORD(v121) = v20 + v44 + v17 - v18 + v21;
      DWORD1(v121) = v43 - v17 - v35;
      DWORD2(v121) = v42 + v17 - (v20 + v18) + v21;
      HIDWORD(v121) = v20 + v41 - v17 - (v21 + v18);
      LODWORD(v122) = v21 + v18 + v40 - v17 - v20;
      DWORD1(v122) = v20 + v18 + v76 + v17 - v21;
      DWORD2(v122) = v35 + v77 - v17;
      HIDWORD(v122) = v18 + v78 + v17 - (v21 + v20);
      LODWORD(v123) = v25 + v80 + v17 - v26;
      DWORD1(v123) = v79 - v17 + v73 - (v28 + v21);
      DWORD2(v123) = v72 + v81 + v17 - v28;
      HIDWORD(v123) = v112 + v24 - (v26 + v21);
      LODWORD(v124) = v74 + v39 - v17 - v24;
      DWORD1(v124) = v28 + v38 + v17 - v72;
      DWORD2(v124) = v75 + v37 - v17;
      HIDWORD(v124) = v26 + v36 + v17 - v25;
      LODWORD(v125) = v40 + v17 - v35;
      DWORD1(v125) = v20 + v76 - v17 - v18 + v21;
      DWORD2(v125) = v20 + v77 + v17 - (v21 + v18);
      HIDWORD(v125) = v78 - v17 - (v20 + v18) + v21;
      LODWORD(v126) = v20 + v18 + v44 - v17 - v21;
      DWORD1(v126) = v21 + v18 + v102 - v20;
      DWORD2(v126) = v18 + v42 - v17 - (v21 + v20);
      HIDWORD(v126) = v35 + v41 + v17;
      LODWORD(v127) = v28 + v103 - v17 - v72;
      DWORD1(v127) = v74 + v106 + v17 - v24;
      DWORD2(v127) = v26 + v107 - v17 - v25;
      HIDWORD(v127) = v75 + v115;
      LODWORD(v128) = v90 + v17 + v73 - (v28 + v21);
      DWORD1(v128) = v25 + v91 - v17 - v26;
      DWORD2(v128) = v24 + v113 - (v26 + v21);
      HIDWORD(v128) = v72 + v114 - v28;
      LODWORD(v129) = v21 + v18 + v96 - v17 - v20;
      DWORD1(v129) = v20 + v18 + v97 + v17 - v21;
      DWORD2(v129) = v35 + v98 - v17;
      HIDWORD(v129) = v18 + v99 + v17 - (v21 + v20);
      LODWORD(v130) = v20 + v87 + v17 - v18 + v21;
      DWORD1(v130) = v86 - v17 - v35;
      DWORD2(v130) = v88 + v17 - (v20 + v18) + v21;
      HIDWORD(v130) = v20 + v89 - v17 - (v21 + v18);
      uint64_t v45 = v4;
      uint64_t v4 = v116;
      int v46 = (int *)(v71 + 32 * v117);
LABEL_9:
      int v47 = 0;
      unint64_t v48 = v7 >> 1;
      int v49 = (unsigned int *)(v45 + 4 * (v7 >> 1));
      uint64_t v50 = (_DWORD *)((char *)v119 + (v7 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v52 = *v50++;
        int v51 = v52;
        uint64_t v53 = 4 * v7;
        int v54 = *(_DWORD *)(v116 + 4 * v7);
        int v55 = *(_DWORD *)(v116 + ((4 * v7) | 4));
        BOOL v56 = v54 <= v55;
        if (v54 <= v55) {
          int v54 = *(_DWORD *)(v116 + ((4 * v7) | 4));
        }
        unsigned int v57 = v54 + v51;
        if (__OFADD__(v54, v51)) {
          unsigned int v57 = ((v54 + v51) >> 31) ^ 0x80000000;
        }
        unsigned int *v49 = v57;
        BOOL v58 = __OFSUB__(v54, v51);
        signed int v59 = v54 - v51;
        if (v58) {
          signed int v59 = (v59 >> 31) ^ 0x80000000;
        }
        v49[256] = v59;
        int v60 = (4 * v47) | (2 * v56);
        int v61 = *(_DWORD *)(v116 + (v53 | 8));
        int v62 = *(_DWORD *)(v116 + (v53 | 0xC));
        BOOL v63 = v61 <= v62;
        if (v61 > v62) {
          int v62 = v61;
        }
        int v47 = v60 | v63;
        unsigned int v64 = v62 - v51;
        if (__OFSUB__(v62, v51)) {
          unsigned int v64 = ((v62 - v51) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v45 + ((4 * v48) | 4)) = v64;
        BOOL v58 = __OFADD__(v62, v51);
        signed int v65 = v62 + v51;
        if (v58) {
          signed int v65 = (v65 >> 31) ^ 0x80000000;
        }
        v49[257] = v65;
        if ((~(_BYTE)v7 & 0x3C) == 0)
        {
          *v46++ = v47;
          BOOL v66 = v7 >= 0x1FC;
          v7 += 4;
          if (v66) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v48 += 2;
        v49 += 2;
        BOOL v66 = v7 >= 0x1FC;
        v7 += 4;
      }
      while (!v66);
      if (v47) {
        *int v46 = v47;
      }
LABEL_7:
      a3 = v118 + 11;
      uint64_t v6 = v117 + 1;
      uint64_t v3 = v45;
    }
    while (v117 + 1 != v70);
  }
  else
  {
    uint64_t v45 = v3;
  }
  uint64_t v67 = 0;
  *(void *)(a1 + 64) = v45;
  *(void *)(a1 + 72) = v4;
  return v67;
}

uint64_t sub_10015D2CC(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v73 = *(void *)(a1 + 40);
  if (!v73) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v72 = *(unsigned __int16 *)(a1 + 18);
  if (*(_WORD *)(a1 + 18))
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v115 = v3;
      uint64_t v116 = v5;
      unint64_t v6 = 0;
      int v8 = *a3;
      int v7 = a3[1];
      int v9 = v7 + *a3;
      int v10 = a3[2];
      int v11 = a3[3];
      int v12 = v9 + v10;
      int v78 = v9 + v10 + v11;
      int v14 = a3[4];
      int v13 = a3[5];
      int v112 = v78 + v14;
      int v93 = v78 + v14 + v13;
      int v16 = a3[8];
      int v15 = a3[9];
      int v17 = a3[10];
      int v19 = a3[6];
      int v18 = a3[7];
      int v106 = a3;
      int v95 = *a3 - v7 - v10;
      int v89 = v95 + v11;
      int v113 = v95 + v11 - v14;
      int v20 = v17 + v15 + v13 + v19;
      int v21 = v9 - v10;
      v118[0] = v17 + v15 + v19 + v18 + v16 + v93;
      v118[1] = v20 + v113 - (v16 + v18);
      int v83 = v9 - v10 - v11;
      int v114 = v83 - v14;
      int v102 = v16 + v19 + v13;
      int v22 = v8 - v7 + v10;
      int v117 = v19 + v13 + v18;
      v118[2] = v18 + v83 - v14 - (v102 + v17 + v15);
      v118[3] = v16 + v22 - v11 + v14 - (v117 + v17 + v15);
      int v23 = v7 - v8;
      int v24 = v10 - v9;
      int v91 = v10 - v9 - v11;
      int v110 = v91 + v14;
      int v111 = v22 - v11 + v14;
      int v99 = v18 + v13 + v16;
      int v25 = v16 + v18 - v13 + v19;
      int v26 = v23 - v10;
      int v85 = v23 - v10 - v11;
      int v94 = v25;
      v118[4] = v19 + v91 + v14 - (v99 + v17 + v15);
      v118[5] = v25 + v85 - v14 - (v17 + v15);
      int v27 = v23 + v10;
      int v108 = v85 - v14;
      int v109 = v11 - v12 - v14;
      int v28 = v18 + v19;
      int v104 = v27 + v11 + v14;
      int v29 = v17 + v15 + v13 + v18;
      v118[6] = v17 + v15 + v13 + v109 - (v18 + v19) + v16;
      v118[7] = v29 + v104 - (v16 + v19);
      int v103 = v27 - v11 - v14;
      int v105 = v14 - v78;
      v118[8] = v25 + v14 - v78 - (v17 + v15);
      v118[9] = v19 + v103 - (v99 + v17 + v15);
      int v107 = v24 + v11 - v14;
      int v77 = v26 + v11;
      int v101 = v26 + v11 + v14;
      v118[10] = v29 + v107 - (v16 + v19);
      v118[11] = v17 + v15 + v13 + v101 - (v18 + v19) + v16;
      int v87 = v21 + v11;
      int v100 = v21 + v11 + v14;
      int v82 = v22 + v11;
      v118[12] = v20 + v100 - (v16 + v18);
      v118[13] = v20 + v18 + v22 + v11 - v14 + v16;
      int v97 = v12 - v11 - v14;
      int v98 = v22 + v11 - v14;
      int v75 = v95 - v11;
      int v96 = v95 - v11 + v14;
      v118[14] = v16 + v97 - (v117 + v17 + v15);
      v118[15] = v18 + v96 - (v102 + v17 + v15);
      int v81 = v22 - v11 - v14;
      int v80 = v83 + v14;
      v118[16] = v81 - (v117 + v16 + v15) + v17;
      v118[17] = v16 + v18 + v83 + v14 - (v19 + v13 + v15) + v17;
      int v84 = v89 + v14;
      int v30 = v15 + v16 + v13;
      int v31 = v30 + v19;
      int v32 = v30 + v19 + v89 + v14 - (v18 + v17);
      int v74 = v78 - v14;
      int v90 = v18 + v19 + v13;
      v118[18] = v32;
      v118[19] = v90 + v15 + v78 - v14 - (v17 + v16);
      int v79 = v27 + v11 - v14;
      int v76 = v16 + v18 + v13;
      int v33 = v11 - v12 + v14;
      int v34 = v18 + v19 + v16;
      v118[20] = v76 + v15 + v79 - (v19 + v17);
      v118[21] = v15 + v13 + v33 - (v17 + v34);
      int v86 = v85 + v14;
      int v35 = v91 - v14;
      int v88 = v16 + v19;
      v118[22] = v18 + v19 + v86 - v30 + v17;
      v118[23] = v16 + v19 + v91 - v14 - (v15 + v18 + v13) + v17;
      int v36 = v24 + v11 + v14;
      v118[24] = v15 + v13 + v77 - v14 - (v17 + v34);
      v118[25] = v76 + v15 + v36 - (v19 + v17);
      int v92 = v27 - v11 + v14;
      v118[26] = v16 + v19 + v92 - (v15 + v18 + v13) + v17;
      v118[27] = v18 + v19 - (v15 + v16) - v93 + v17;
      int v37 = v12 - v11 + v14;
      v118[28] = v16 + v18 + v75 - v14 - (v19 + v13 + v15) + v17;
      v118[29] = v37 - (v117 + v16 + v15) + v17;
      v118[30] = v90 + v15 + v82 + v14 - (v17 + v16);
      v118[31] = v31 + v87 - v14 - (v18 + v17);
      int v38 = v34 + v17 + v15;
      int v39 = v19;
      v118[32] = v80 + v13 - v38;
      v118[33] = v76 + v81 - (v17 + v15 + v19);
      int v40 = v17 + v15 + v19;
      int v41 = v17 + v15 - v13 + v19 + v18;
      v118[34] = v40 + v74 - (v18 + v13) + v16;
      v118[35] = v41 + v84 - v16;
      int v42 = v19 + v13;
      v118[36] = v17 + v15 + v33 - (v19 + v13) + v18 + v16;
      v118[37] = v17 + v15 + v79 - (v117 + v16);
      int v43 = v90 + v35;
      int v44 = v15 + v16 + v17;
      int v45 = v18 + v15 + v17;
      v118[38] = v43 - v44;
      v118[39] = v42 + v16 + v86 - v45;
      v118[40] = v17 + v15 + v36 - (v117 + v16);
      v118[41] = v17 + v15 + v77 - v14 - v42 + v18 + v16;
      v118[42] = v102 - v45 - v112;
      v118[43] = v90 + v92 - v44;
      v118[44] = v76 + v37 - v40;
      v118[45] = v75 - v14 + v13 - v38;
      v118[46] = v41 + v87 - v14 - v16;
      v118[47] = v40 + v82 + v14 - (v18 + v13) + v16;
      v118[48] = v94 + v15 + v113 - v17;
      v118[49] = v15 + v39 + v112 - (v17 + v99);
      int v46 = v17 + v16 + v13;
      v118[50] = v18 + v13 + v111 - (v88 + v15) + v17;
      v118[51] = v46 + v114 - (v15 + v28);
      v118[52] = v42 + v108 - (v16 + v18 + v15) + v17;
      v118[53] = v76 + v39 + v110 - v15 + v17;
      v118[54] = v15 + v16 + v104 - (v117 + v17);
      v118[55] = v18 + v15 + v109 - (v17 + v102);
      v118[56] = v76 + v39 + v103 - v15 + v17;
      v118[57] = v42 + v105 - (v16 + v18 + v15) + v17;
      v118[58] = v18 + v15 + v101 - (v17 + v102);
      v118[59] = v15 + v16 + v107 - (v117 + v17);
      v118[60] = v15 + v39 + v98 - (v17 + v99);
      v118[61] = v94 + v15 + v100 - v17;
      v118[62] = v46 + v96 - (v15 + v28);
      v118[63] = v18 + v13 + v97 - (v88 + v15) + v17;
      uint64_t v47 = v4;
      uint64_t v4 = v115;
      unint64_t v48 = (int *)(v73 + 16 * v116);
LABEL_9:
      int v49 = 0;
      unint64_t v50 = v6 >> 1;
      int v51 = (unsigned int *)(v47 + 4 * (v6 >> 1));
      int v52 = (_DWORD *)((char *)v118 + (v6 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v54 = *v52++;
        int v53 = v54;
        uint64_t v55 = 4 * v6;
        int v56 = *(_DWORD *)(v115 + 4 * v6);
        int v57 = *(_DWORD *)(v115 + ((4 * v6) | 4));
        BOOL v58 = v56 <= v57;
        if (v56 <= v57) {
          int v56 = *(_DWORD *)(v115 + ((4 * v6) | 4));
        }
        unsigned int v59 = v56 + v53;
        if (__OFADD__(v56, v53)) {
          unsigned int v59 = ((v56 + v53) >> 31) ^ 0x80000000;
        }
        unsigned int *v51 = v59;
        BOOL v60 = __OFSUB__(v56, v53);
        signed int v61 = v56 - v53;
        if (v60) {
          signed int v61 = (v61 >> 31) ^ 0x80000000;
        }
        v51[128] = v61;
        int v62 = (4 * v49) | (2 * v58);
        int v63 = *(_DWORD *)(v115 + (v55 | 8));
        int v64 = *(_DWORD *)(v115 + (v55 | 0xC));
        BOOL v65 = v63 <= v64;
        if (v63 > v64) {
          int v64 = v63;
        }
        int v49 = v62 | v65;
        unsigned int v66 = v64 - v53;
        if (__OFSUB__(v64, v53)) {
          unsigned int v66 = ((v64 - v53) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v47 + ((4 * v50) | 4)) = v66;
        BOOL v60 = __OFADD__(v64, v53);
        signed int v67 = v64 + v53;
        if (v60) {
          signed int v67 = (v67 >> 31) ^ 0x80000000;
        }
        v51[129] = v67;
        if ((~(_BYTE)v6 & 0x3C) == 0)
        {
          *v48++ = v49;
          BOOL v68 = v6 >= 0xFC;
          v6 += 4;
          if (v68) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v50 += 2;
        v51 += 2;
        BOOL v68 = v6 >= 0xFC;
        v6 += 4;
      }
      while (!v68);
      if (v49) {
        *unint64_t v48 = v49;
      }
LABEL_7:
      a3 = v106 + 11;
      uint64_t v5 = v116 + 1;
      uint64_t v3 = v47;
    }
    while (v116 + 1 != v72);
  }
  else
  {
    uint64_t v47 = *(void *)(a1 + 64);
  }
  uint64_t v69 = 0;
  *(void *)(a1 + 64) = v47;
  *(void *)(a1 + 72) = v4;
  return v69;
}

uint64_t sub_10015DBC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v67 = *(void *)(a1 + 40);
  if (!v67) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  uint64_t v5 = a3;
  if (!a3) {
    return 3;
  }
  uint64_t v66 = *(unsigned __int16 *)(a1 + 18);
  if (*(_WORD *)(a1 + 18))
  {
    uint64_t v65 = a1;
    uint64_t v6 = 0;
    do
    {
      uint64_t v87 = v3;
      uint64_t v88 = v6;
      unint64_t v7 = 0;
      int v8 = *v5;
      int v9 = v5[1];
      int v10 = v9 + *v5;
      int v12 = v5[2];
      int v11 = v5[3];
      int v81 = v10 + v12 + v11;
      int v83 = v10 + v12;
      int v14 = v5[4];
      int v13 = v5[5];
      int v86 = v81 + v14;
      int v16 = v5[8];
      int v15 = v5[9];
      int v17 = v5[10];
      int v19 = v5[6];
      int v18 = v5[7];
      int v84 = v12 - v10;
      int v78 = v12 - v10 + v11;
      int v85 = v18 + v13 + v15 + v16;
      int v76 = v19 + v14;
      int v70 = v18 + v19 + v14;
      v89[0] = v17 + v15 + v13 + v19 + v18 + v81 + v14 + v16;
      v89[1] = v19 + v14 + v78 - v85 + v17;
      int v75 = v10 - v12;
      int v69 = v10 - v12 + v11;
      int v72 = v13 + v14 + v19;
      int v20 = v16 + v17 + v15;
      int v82 = v20 + v72;
      v89[2] = v15 + v16 + v13 + v11 - (v10 + v12) - (v70 + v17);
      v89[3] = v18 + v69 - (v20 + v72);
      int v21 = v9 - v8;
      int v22 = v8 - v9;
      int v23 = v21 - v12 - v11;
      int v24 = v18 + v13 + v14;
      int v25 = v18 + v19 - v14 + v13;
      int v79 = v22 - v12;
      int v26 = v22 - v12 - v11;
      v89[4] = v17 + v15 + v19 + v23 - (v24 + v16);
      v89[5] = v25 + v26 + v16 - v15 + v17;
      int v68 = v22 + v12;
      int v77 = v18 + v19;
      int v27 = v13 + v14 + v16;
      int v73 = v13 + v14;
      int v28 = v15 + v18 + v14;
      int v74 = v19 + v13;
      int v29 = v19 + v13 + v17 + v16;
      v89[6] = v28 + v68 - v11 - v29;
      v89[7] = v27 + v21 + v12 - v11 - (v18 + v19 + v15 + v17);
      int v80 = v15 + v16 + v19;
      v89[8] = v80 + v68 - v11 - (v24 + v17);
      v89[9] = v25 + v21 + v12 - v11 - v20;
      int v30 = v17 + v15 + v14;
      int v71 = v18 + v19 + v15 + v16;
      v89[10] = v30 + v23 - (v19 + v13) + v18 + v16;
      v89[11] = v13 + v14 + v26 - v71 + v17;
      int v31 = v18 + v13 + v17 + v15;
      v89[12] = v70 + v13 + v11 - (v10 + v12) + v15 - (v17 + v16);
      v89[13] = v19 + v14 + v16 + v69 - v31;
      int v32 = v17 + v15 + v13;
      v89[14] = v32 + v81 - (v70 + v16);
      v89[15] = v16 + v18 + v78 - (v72 + v15) + v17;
      int v33 = v10 - v12 - v11;
      int v34 = v19 + v18;
      v89[16] = v28 + v75 - v11 - v29;
      v89[17] = v27 - (v81 + v19 + v18 + v15 + v17);
      int v35 = v84 - v11;
      int v36 = v83 - v11;
      v89[18] = v17 + v15 + v19 + v84 - v11 - (v24 + v16);
      v89[19] = v25 + v83 - v11 + v16 - v15 + v17;
      int v37 = v21 + v12 + v11;
      int v38 = v68 + v11;
      v89[20] = v15 + v16 + v13 + v37 - (v70 + v17);
      v89[21] = v18 + v68 + v11 - v82;
      int v39 = v79 + v11;
      int v40 = v21 - v12 + v11;
      v89[22] = v30 + v13 + v39 + v34 + v16;
      v89[23] = v76 + v40 - v85 + v17;
      v89[24] = v32 + v39 - (v70 + v16);
      v89[25] = v16 + v18 + v40 - (v72 + v15) + v17;
      v89[26] = v70 + v13 + v37 + v15 - (v17 + v16);
      v89[27] = v76 + v16 + v38 - v31;
      v89[28] = v30 + v35 - v74 + v18 + v16;
      v89[29] = v73 + v36 - v71 + v17;
      v89[30] = v80 + v33 - (v24 + v17);
      v89[31] = v77 + v13 - (v16 + v17 + v15) - v86;
      uint64_t v41 = v4;
      uint64_t v4 = v87;
      int v42 = (int *)(v67 + 8 * v88);
LABEL_9:
      int v43 = 0;
      unint64_t v44 = v7 >> 1;
      int v45 = (signed int *)(v41 + 256 + 4 * (v7 >> 1));
      int v46 = (_DWORD *)((char *)v89 + (v7 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v48 = *v46++;
        int v47 = v48;
        uint64_t v49 = 4 * v7;
        int v50 = *(_DWORD *)(v87 + 4 * v7);
        int v51 = *(_DWORD *)(v87 + ((4 * v7) | 4));
        BOOL v52 = v50 <= v51;
        if (v50 <= v51) {
          int v50 = *(_DWORD *)(v87 + ((4 * v7) | 4));
        }
        unsigned int v53 = v50 + v47;
        if (__OFADD__(v50, v47)) {
          unsigned int v53 = ((v50 + v47) >> 31) ^ 0x80000000;
        }
        *(v45 - 64) = v53;
        BOOL v54 = __OFSUB__(v50, v47);
        signed int v55 = v50 - v47;
        if (v54) {
          signed int v55 = (v55 >> 31) ^ 0x80000000;
        }
        *int v45 = v55;
        int v56 = (4 * v43) | (2 * v52);
        int v57 = *(_DWORD *)(v87 + (v49 | 8));
        int v58 = *(_DWORD *)(v87 + (v49 | 0xC));
        BOOL v59 = v57 <= v58;
        if (v57 > v58) {
          int v58 = v57;
        }
        int v43 = v56 | v59;
        unsigned int v60 = v58 - v47;
        if (__OFSUB__(v58, v47)) {
          unsigned int v60 = ((v58 - v47) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v41 + ((4 * v44) | 4)) = v60;
        BOOL v54 = __OFADD__(v58, v47);
        signed int v61 = v58 + v47;
        if (v54) {
          signed int v61 = (v61 >> 31) ^ 0x80000000;
        }
        v45[1] = v61;
        if ((~(_BYTE)v7 & 0x3C) == 0)
        {
          *v42++ = v43;
          BOOL v62 = v7 >= 0x7C;
          v7 += 4;
          if (v62) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v44 += 2;
        v45 += 2;
        BOOL v62 = v7 >= 0x7C;
        v7 += 4;
      }
      while (!v62);
      if (v43) {
        *int v42 = v43;
      }
LABEL_7:
      v5 += 11;
      uint64_t v6 = v88 + 1;
      uint64_t v3 = v41;
    }
    while (v88 + 1 != v66);
    uint64_t v3 = v41;
    a1 = v65;
  }
  uint64_t v63 = 0;
  *(void *)(a1 + 64) = v3;
  *(void *)(a1 + 72) = v4;
  return v63;
}

uint64_t sub_10015E17C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v99 = *(void *)(a1 + 40);
  if (!v99) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v5 = *(unsigned __int16 *)(a1 + 18);
  long long v183 = 0u;
  long long v184 = 0u;
  long long v181 = 0u;
  long long v182 = 0u;
  long long v179 = 0u;
  long long v180 = 0u;
  long long v177 = 0u;
  long long v178 = 0u;
  long long v175 = 0u;
  long long v176 = 0u;
  long long v174 = 0u;
  uint64_t v98 = v5;
  if (v5)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v170 = v3;
      uint64_t v171 = v6;
      unint64_t v7 = 0;
      int v8 = *a3;
      int v9 = a3[1];
      int v10 = v9 + *a3;
      int v12 = a3[2];
      int v11 = a3[3];
      int v14 = a3[4];
      int v13 = a3[5];
      int v15 = v10 + v12 + v11;
      int v130 = v15 + v14;
      int v146 = v15 + v14 + v13;
      int v17 = a3[6];
      int v16 = a3[7];
      int v169 = v146 + v17;
      int v18 = a3[8];
      int v19 = a3[9];
      uint64_t v172 = a3;
      int v20 = v18 + v16;
      int v21 = v18 + v16 + v19;
      int v144 = v12 - v10 + v11;
      int v142 = v144 - v14 + v13;
      int v168 = v142 - v17;
      int v138 = v10 + v12 - v11;
      int v22 = v13 + v14;
      int v140 = v138 - (v13 + v14);
      int v167 = v140 + v17;
      v173[0] = v21 + v146 + v17;
      int v133 = v12 - v10 - v11;
      v173[1] = v142 - v17 - (v18 + v16) + v19;
      int v135 = v133 + v14 - v13;
      int v164 = v135 - v17;
      v173[2] = v140 + v17 - (v18 + v16) + v19;
      v173[3] = v21 + v135 - v17;
      int v136 = v11 - (v10 + v12);
      int v120 = v136 - v14 + v13;
      int v23 = v10 - v12;
      int v24 = v23 + v11;
      int v123 = v13 + v14 + v23 + v11;
      int v165 = v123 + v17;
      int v166 = v120 - v17;
      v173[4] = v120 - v17 - v21;
      v173[5] = v18 + v16 + v123 + v17 - v19;
      int v122 = v14 - v13 - v15;
      int v128 = v23 - v11;
      int v121 = v23 - v11 - (v13 + v14);
      int v161 = v121 + v17;
      v173[6] = v18 + v16 + v122 - v17 - v19;
      v173[7] = v121 + v17 - v21;
      int v25 = v9 - v8;
      int v26 = v8 - v9;
      int v27 = v25 - v12 - v11;
      int v127 = v13 + v14 + v27;
      int v162 = v127 + v17;
      int v163 = v122 - v17;
      int v28 = v19 + v16;
      int v29 = v26 - v12 - v11;
      int v126 = v29 - v14 + v13;
      int v160 = v126 - v17;
      int v30 = v19 + v18 - v16;
      v173[8] = v19 + v16 + v127 + v17 - v18;
      v173[9] = v30 + v126 - v17;
      int v31 = v25 - v12 + v11;
      int v32 = v26 - v12 + v11;
      int v125 = v32 + v14 - v13;
      int v157 = v125 - v17;
      int v124 = v31 - (v13 + v14);
      int v158 = v124 + v17;
      v173[10] = v30 + v124 + v17;
      v173[11] = v19 + v16 + v125 - v17 - v18;
      int v33 = v26 + v12;
      int v34 = v25 + v12;
      int v35 = v33 - v11;
      int v118 = v33 - v11 - v14 + v13;
      int v159 = v118 - v17;
      int v36 = v34 - v11;
      int v119 = v13 + v14 + v34 - v11;
      int v156 = v119 + v17;
      v173[12] = v18 + v118 - v17 - (v19 + v16);
      v173[13] = v119 + v17 + v16 - (v19 + v18);
      int v37 = v33 + v11;
      int v38 = v34 + v11;
      int v116 = v37 + v14 - v13;
      int v155 = v116 - v17;
      int v117 = v34 + v11 - (v13 + v14);
      int v154 = v117 + v17;
      v173[14] = v116 - v17 + v16 - (v19 + v18);
      v173[15] = v117 + v17 + v18 - (v19 + v16);
      int v112 = v27 - (v13 + v14);
      int v153 = v112 - v17;
      int v39 = v29 + v14 - v13;
      int v152 = v39 + v17;
      v173[16] = v18 + v16 + v112 - v17 - v19;
      v173[17] = v39 + v17 - v21;
      int v40 = v13 + v14 + v31;
      int v41 = v32 - v14 + v13;
      int v147 = v41 + v17;
      int v148 = v40 - v17;
      v173[18] = v40 - v17 - v21;
      v173[19] = v18 + v16 + v41 + v17 - v19;
      int v42 = v35 + v14 - v13;
      int v151 = v42 + v17;
      int v43 = v36 - (v13 + v14);
      int v150 = v43 - v17;
      v173[20] = v42 + v17 - (v18 + v16) + v19;
      v173[21] = v21 + v43 - v17;
      int v44 = v37 - v14 + v13;
      int v45 = v13 + v14 + v38;
      int v141 = v45 - v17;
      int v143 = v44 + v17;
      v173[22] = v21 + v44 + v17;
      v173[23] = v45 - v17 - (v18 + v16) + v19;
      int v46 = v15 - (v13 + v14);
      int v149 = v46 - v17;
      int v47 = v144 + v14 - v13;
      int v145 = v47 + v17;
      v173[24] = v46 - v17 + v16 - (v19 + v18);
      v173[25] = v18 + v47 + v17 - (v19 + v16);
      int v48 = v13 + v14 + v138;
      int v139 = v48 - v17;
      int v49 = v133 - v14 + v13;
      int v132 = v49 + v17;
      v173[26] = v18 + v48 - v17 - (v19 + v16);
      v173[27] = v49 + v17 + v16 - (v19 + v18);
      int v50 = v136 + v14 - v13;
      int v51 = v24 - (v13 + v14);
      int v134 = v51 - v17;
      int v137 = v50 + v17;
      v173[28] = v30 + v50 + v17;
      v173[29] = v19 + v16 + v51 - v17 - v18;
      int v52 = v13 - v130;
      int v53 = v22 + v128;
      int v131 = v52 + v17;
      int v129 = v53 - v17;
      v173[30] = v19 + v16 + v52 + v17 - v18;
      v173[31] = v30 + v53 - v17;
      int v114 = v43 + v17;
      int v115 = v42 - v17;
      v173[32] = v42 - v17 - v21;
      v173[33] = v18 + v16 + v43 + v17 - v19;
      int v109 = v44 - v17;
      int v105 = v45 + v17;
      v173[34] = v18 + v16 + v44 - v17 - v19;
      v173[35] = v45 + v17 - v21;
      int v113 = v112 + v17;
      int v110 = v39 - v17;
      v173[36] = v21 + v113;
      v173[37] = v39 - v17 - (v18 + v16) + v19;
      int v106 = v40 + v17;
      int v102 = v41 - v17;
      v173[38] = v40 + v17 - (v18 + v16) + v19;
      v173[39] = v21 + v41 - v17;
      int v111 = v50 - v17;
      int v108 = v51 + v17;
      v173[40] = v18 + v50 - v17 - (v19 + v16);
      v173[41] = v51 + v17 + v16 - (v19 + v18);
      int v104 = v52 - v17;
      int v54 = v52 - v17 + v16;
      int v55 = v16;
      int v101 = v53 + v17;
      v173[42] = v54 - (v19 + v18);
      v173[43] = v18 + v53 + v17 - (v19 + v16);
      int v107 = v46 + v17;
      int v103 = v47 - v17;
      v173[44] = v19 + v16 + v46 + v17 - v18;
      v173[45] = v30 + v47 - v17;
      int v100 = v48 + v17;
      int v56 = v49 - v17;
      v173[46] = v30 + v48 + v17;
      v173[47] = v19 + v16 + v49 - v17 - v18;
      int v57 = v120 + v17;
      int v58 = v123 - v17;
      v173[48] = v120 + v17 - (v18 + v16) + v19;
      v173[49] = v21 + v123 - v17;
      int v59 = v122 + v17;
      int v60 = v121 - v17;
      v173[50] = v21 + v122 + v17;
      v173[51] = v121 - v17 - (v18 + v16) + v19;
      int v61 = v146 - v17;
      int v62 = v142 + v17;
      v173[52] = v18 + v16 + v146 - v17 - v19;
      v173[53] = v142 + v17 - v21;
      int v63 = v140 - v17;
      int v64 = v135 + v17;
      v173[54] = v140 - v17 - v21;
      v173[55] = v18 + v16 + v135 + v17 - v19;
      int v65 = v118 + v17;
      int v66 = v119 - v17;
      v173[56] = v30 + v118 + v17;
      v173[57] = v19 + v16 + v119 - v17 - v18;
      int v67 = v116 + v17;
      int v68 = v117 - v17;
      v173[58] = v19 + v16 + v116 + v17 - v18;
      v173[59] = v30 + v117 - v17;
      int v69 = v127 - v17;
      int v70 = v126 + v17;
      v173[60] = v127 - v17 + v55 - (v19 + v18);
      v173[61] = v18 + v126 + v17 - v28;
      int v71 = v124 - v17;
      int v72 = v125 + v17;
      v173[62] = v71 + v18 - v28;
      v173[63] = v72 + v55 - (v19 + v18);
      v173[64] = v28 + v60 - v18;
      v173[65] = v30 + v59;
      v173[66] = v30 + v58;
      v173[67] = v28 + v57 - v18;
      v173[68] = v18 + v64 - v28;
      v173[69] = v63 + v55 - (v19 + v18);
      v173[70] = v62 + v55 - (v19 + v18);
      v173[71] = v18 + v61 - v28;
      v173[72] = v21 + v68;
      v173[73] = v67 - v20 + v19;
      v173[74] = v66 - v20 + v19;
      v173[75] = v21 + v65;
      v173[76] = v72 - v21;
      v173[77] = v20 + v71 - v19;
      v173[78] = v20 + v70 - v19;
      v173[79] = v69 - v21;
      v173[80] = v105 + v55 - (v19 + v18);
      v173[81] = v18 + v109 - v28;
      v173[82] = v114 + v18 - v28;
      v173[83] = v115 + v55 - (v19 + v18);
      LODWORD(v174) = v30 + v102;
      DWORD1(v174) = v28 + v106 - v18;
      DWORD2(v174) = v28 + v110 - v18;
      HIDWORD(v174) = v30 + v113;
      LODWORD(v175) = v20 + v101 - v19;
      DWORD1(v175) = v104 - v21;
      DWORD2(v175) = v108 - v21;
      HIDWORD(v175) = v20 + v111 - v19;
      LODWORD(v176) = v56 - v20 + v19;
      DWORD1(v176) = v21 + v100;
      DWORD2(v176) = v21 + v103;
      HIDWORD(v176) = v107 - v20 + v19;
      LODWORD(v177) = v18 + v147 - v28;
      DWORD1(v177) = v148 + v55 - (v19 + v18);
      DWORD2(v177) = v152 + v55 - (v19 + v18);
      HIDWORD(v177) = v153 + v18 - v28;
      LODWORD(v178) = v28 + v141 - v18;
      DWORD1(v178) = v30 + v143;
      DWORD2(v178) = v30 + v150;
      HIDWORD(v178) = v28 + v151 - v18;
      LODWORD(v179) = v132 - v21;
      DWORD1(v179) = v20 + v139 - v19;
      DWORD2(v179) = v20 + v145 - v19;
      HIDWORD(v179) = v149 - v21;
      LODWORD(v180) = v21 + v129;
      DWORD1(v180) = v131 - v20 + v19;
      DWORD2(v180) = v134 - v20 + v19;
      HIDWORD(v180) = v21 + v137;
      LODWORD(v181) = v30 + v164;
      DWORD1(v181) = v28 + v167 - v18;
      DWORD2(v181) = v28 + v168 - v18;
      HIDWORD(v181) = v30 + v169;
      LODWORD(v182) = v161 + v55 - (v19 + v18);
      DWORD1(v182) = v18 + v163 - v28;
      DWORD2(v182) = v18 + v165 - v28;
      HIDWORD(v182) = v166 + v55 - (v19 + v18);
      LODWORD(v183) = v157 - v20 + v19;
      DWORD1(v183) = v21 + v158;
      DWORD2(v183) = v21 + v160;
      HIDWORD(v183) = v162 - v20 + v19;
      LODWORD(v184) = v20 + v154 - v19;
      DWORD1(v184) = v155 - v21;
      DWORD2(v184) = v156 - v21;
      HIDWORD(v184) = v20 + v159 - v19;
      uint64_t v73 = v4;
      uint64_t v4 = v170;
      int v74 = (int *)(v99 + 32 * v171);
LABEL_9:
      int v75 = 0;
      unint64_t v76 = v7 >> 1;
      int v77 = (unsigned int *)(v73 + 4 * (v7 >> 1));
      int v78 = (_DWORD *)((char *)v173 + (v7 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v80 = *v78++;
        int v79 = v80;
        uint64_t v81 = 4 * v7;
        int v82 = *(_DWORD *)(v170 + 4 * v7);
        int v83 = *(_DWORD *)(v170 + ((4 * v7) | 4));
        BOOL v84 = v82 <= v83;
        if (v82 <= v83) {
          int v82 = *(_DWORD *)(v170 + ((4 * v7) | 4));
        }
        unsigned int v85 = v82 + v79;
        if (__OFADD__(v82, v79)) {
          unsigned int v85 = ((v82 + v79) >> 31) ^ 0x80000000;
        }
        unsigned int *v77 = v85;
        BOOL v86 = __OFSUB__(v82, v79);
        signed int v87 = v82 - v79;
        if (v86) {
          signed int v87 = (v87 >> 31) ^ 0x80000000;
        }
        v77[256] = v87;
        int v88 = (4 * v75) | (2 * v84);
        int v89 = *(_DWORD *)(v170 + (v81 | 8));
        int v90 = *(_DWORD *)(v170 + (v81 | 0xC));
        BOOL v91 = v89 <= v90;
        if (v89 > v90) {
          int v90 = v89;
        }
        int v75 = v88 | v91;
        unsigned int v92 = v90 - v79;
        if (__OFSUB__(v90, v79)) {
          unsigned int v92 = ((v90 - v79) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v73 + ((4 * v76) | 4)) = v92;
        BOOL v86 = __OFADD__(v90, v79);
        signed int v93 = v90 + v79;
        if (v86) {
          signed int v93 = (v93 >> 31) ^ 0x80000000;
        }
        v77[257] = v93;
        if ((~(_BYTE)v7 & 0x3C) == 0)
        {
          *v74++ = v75;
          BOOL v94 = v7 >= 0x1FC;
          v7 += 4;
          if (v94) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v76 += 2;
        v77 += 2;
        BOOL v94 = v7 >= 0x1FC;
        v7 += 4;
      }
      while (!v94);
      if (v75) {
        *int v74 = v75;
      }
LABEL_7:
      a3 = v172 + 10;
      uint64_t v6 = v171 + 1;
      uint64_t v3 = v73;
    }
    while (v171 + 1 != v98);
  }
  else
  {
    uint64_t v73 = v3;
  }
  uint64_t v95 = 0;
  *(void *)(a1 + 64) = v73;
  *(void *)(a1 + 72) = v4;
  return v95;
}

uint64_t sub_10015ED60(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v65 = *(void *)(a1 + 40);
  if (!v65) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v64 = *(unsigned __int16 *)(a1 + 18);
  if (*(_WORD *)(a1 + 18))
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v94 = v3;
      unint64_t v6 = 0;
      int v8 = *a3;
      int v7 = a3[1];
      int v9 = v7 + *a3;
      int v10 = a3[2];
      int v11 = a3[3];
      int v12 = v9 + v10;
      int v68 = v9 + v10 + v11;
      int v13 = a3[4];
      int v14 = a3[5];
      int v15 = a3[6];
      int v16 = a3[7];
      int v18 = a3[8];
      int v17 = a3[9];
      uint64_t v95 = a3;
      int v79 = *a3 - v7 - v10;
      int v77 = v79 + v11;
      int v92 = v79 + v11 - v13;
      int v19 = v9 - v10;
      int v73 = v9 - v10 - v11;
      int v93 = v73 - v13;
      v96[0] = v18 + v16 + v15 + v17 + v68 + v13 + v14;
      v96[1] = v15 + v14 + v92 - (v18 + v16) + v17;
      int v20 = v8 - v7 + v10;
      int v91 = v20 - v11 + v13;
      int v21 = v17 + v15 + v14 + v16;
      v96[2] = v16 + v73 - v13 - (v18 + v15 + v14 + v17);
      v96[3] = v18 + v91 - v21;
      int v22 = v7 - v8;
      int v23 = v10 - v9;
      int v75 = v10 - v9 - v11;
      int v90 = v75 + v13;
      int v87 = v16 + v14 + v18;
      int v24 = v22 - v10;
      int v71 = v22 - v10 - v11;
      int v25 = v18 + v16 - v14 + v15;
      void v96[4] = v15 + v75 + v13 - (v87 + v17);
      v96[5] = v25 + v71 - v13 - v17;
      int v26 = v22 + v10;
      int v69 = v11 - (v9 + v10);
      int v89 = v71 - v13;
      int v27 = v17 + v18 + v14;
      int v86 = v26 + v11 + v13;
      v96[6] = v27 + v69 - v13 - (v16 + v15);
      v96[7] = v16 + v14 + v86 - (v18 + v15) + v17;
      int v85 = v26 - v11 - v13;
      v96[8] = v25 + v13 - v68 - v17;
      v96[9] = v15 + v85 - (v87 + v17);
      int v88 = v23 + v11 - v13;
      int v83 = v24 + v11 + v13;
      v96[10] = v16 + v14 + v88 - (v18 + v15) + v17;
      v96[11] = v27 + v83 - (v16 + v15);
      int v84 = v19 + v11 + v13;
      int v81 = v20 + v11 - v13;
      int v28 = v18 + v16 + v14;
      v96[12] = v15 + v14 + v84 - (v18 + v16) + v17;
      v96[13] = v15 + v17 + v28 + v81;
      int v82 = v12 - v11 - v13;
      int v29 = v79 - v11;
      int v80 = v79 - v11 + v13;
      v96[14] = v18 + v82 - v21;
      v96[15] = v16 + v80 - (v18 + v15 + v14 + v17);
      int v66 = v20 - v11 - v13;
      int v67 = v73 + v13;
      int v30 = v18 + v16 + v73 + v13 - (v15 + v14 + v17);
      int v74 = v15 + v14 + v16 + v18;
      v96[16] = v66 - (v74 + v17);
      v96[17] = v30;
      int v78 = v77 + v13;
      v96[18] = v27 + v15 + v78 - v16;
      v96[19] = v16 + v15 + v14 + v68 - v13 - v18 + v17;
      int v70 = v26 + v11 - v13;
      v96[20] = v28 + v70 - v15 + v17;
      v96[21] = v69 + v13 + v14 - (v16 + v15 + v18) + v17;
      int v72 = v71 + v13;
      int v31 = v75 - v13;
      int v32 = v17 + v16 + v14;
      v96[22] = v16 + v15 + v72 - v27;
      v96[23] = v18 + v15 + v75 - v13 - v32;
      int v76 = v24 + v11 - v13;
      v96[24] = v76 + v14 - (v16 + v15 + v18) + v17;
      v96[25] = v28 + v23 + v11 + v13 - v15 + v17;
      v96[26] = v18 + v15 + v26 - v11 + v13 - v32;
      v96[27] = v16 + v15 - (v17 + v18) - (v68 + v13 + v14);
      v96[28] = v18 + v16 + v29 - v13 - (v15 + v14 + v17);
      v96[29] = v12 - v11 + v13 - (v74 + v17);
      v96[30] = v16 + v15 + v14 + v20 + v11 + v13 - v18 + v17;
      v96[31] = v27 + v15 + v19 + v11 - v13 - v16;
      int v33 = v16 + v15 + v18 + v17;
      v96[32] = v67 + v14 - v33;
      v96[33] = v28 + v66 - (v15 + v17);
      v96[34] = v17 + v18 + v15 + v68 - v13 - (v16 + v14);
      v96[35] = v16 + v15 + v78 - (v14 + v18) + v17;
      v96[36] = v18 + v16 + v69 + v13 - (v15 + v14) + v17;
      v96[37] = v70 - v74 + v17;
      v96[38] = v16 + v15 + v14 + v31 - (v17 + v18);
      v96[39] = v15 + v14 + v18 + v72 - (v16 + v17);
      v96[40] = v23 + v11 + v13 - v74 + v17;
      v96[41] = v18 + v16 + v76 - (v15 + v14) + v17;
      int v34 = v18 + v15 + v14;
      v96[42] = v34 - (v16 + v17) - (v68 + v13);
      v96[43] = v16 + v15 + v14 + v26 - v11 + v13 - (v17 + v18);
      v96[44] = v28 + v12 - v11 + v13 - (v15 + v17);
      v96[45] = v29 - v13 + v14 - v33;
      v96[46] = v16 + v15 + v19 + v11 - v13 - (v14 + v18) + v17;
      v96[47] = v17 + v18 + v15 + v20 + v11 + v13 - (v16 + v14);
      int v35 = v18 + v16 - v14;
      v96[48] = v15 + v17 + v35 + v92;
      v96[49] = v15 + v17 + v68 + v13 - v87;
      int v36 = v18 + v15 + v17;
      int v37 = v17 + v16 + v15;
      v96[50] = v16 + v14 + v91 - v36;
      v96[51] = v14 + v18 + v93 - v37;
      v96[52] = v15 + v14 + v89 - (v18 + v16 + v17);
      v96[53] = v28 + v15 + v90 - v17;
      int v38 = v15 + v14 + v16;
      v96[54] = v17 + v18 + v86 - v38;
      v96[55] = v16 + v17 + v69 - v13 - v34;
      v96[56] = v28 + v15 + v85 - v17;
      v96[57] = v15 + v14 + v13 - v68 - (v18 + v16 + v17);
      v96[58] = v16 + v17 + v83 - v34;
      v96[59] = v17 + v18 + v88 - v38;
      v96[60] = v15 + v17 + v81 - v87;
      v96[61] = v15 + v17 + v35 + v84;
      v96[62] = v14 + v18 + v80 - v37;
      v96[63] = v16 + v14 + v82 - v36;
      uint64_t v39 = v4;
      uint64_t v4 = v94;
      int v40 = (int *)(v65 + 16 * v5);
LABEL_9:
      int v41 = 0;
      unint64_t v42 = v6 >> 1;
      int v43 = (unsigned int *)(v39 + 4 * (v6 >> 1));
      int v44 = (_DWORD *)((char *)v96 + (v6 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v46 = *v44++;
        int v45 = v46;
        uint64_t v47 = 4 * v6;
        int v48 = *(_DWORD *)(v94 + 4 * v6);
        int v49 = *(_DWORD *)(v94 + ((4 * v6) | 4));
        BOOL v50 = v48 <= v49;
        if (v48 <= v49) {
          int v48 = *(_DWORD *)(v94 + ((4 * v6) | 4));
        }
        unsigned int v51 = v48 + v45;
        if (__OFADD__(v48, v45)) {
          unsigned int v51 = ((v48 + v45) >> 31) ^ 0x80000000;
        }
        unsigned int *v43 = v51;
        BOOL v52 = __OFSUB__(v48, v45);
        signed int v53 = v48 - v45;
        if (v52) {
          signed int v53 = (v53 >> 31) ^ 0x80000000;
        }
        v43[128] = v53;
        int v54 = (4 * v41) | (2 * v50);
        int v55 = *(_DWORD *)(v94 + (v47 | 8));
        int v56 = *(_DWORD *)(v94 + (v47 | 0xC));
        BOOL v57 = v55 <= v56;
        if (v55 > v56) {
          int v56 = v55;
        }
        int v41 = v54 | v57;
        unsigned int v58 = v56 - v45;
        if (__OFSUB__(v56, v45)) {
          unsigned int v58 = ((v56 - v45) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v39 + ((4 * v42) | 4)) = v58;
        BOOL v52 = __OFADD__(v56, v45);
        signed int v59 = v56 + v45;
        if (v52) {
          signed int v59 = (v59 >> 31) ^ 0x80000000;
        }
        v43[129] = v59;
        if ((~(_BYTE)v6 & 0x3C) == 0)
        {
          *v40++ = v41;
          BOOL v60 = v6 >= 0xFC;
          v6 += 4;
          if (v60) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v42 += 2;
        v43 += 2;
        BOOL v60 = v6 >= 0xFC;
        v6 += 4;
      }
      while (!v60);
      if (v41) {
        *int v40 = v41;
      }
LABEL_7:
      a3 = v95 + 10;
      ++v5;
      uint64_t v3 = v39;
    }
    while (v5 != v64);
  }
  else
  {
    uint64_t v39 = *(void *)(a1 + 64);
  }
  uint64_t v61 = 0;
  *(void *)(a1 + 64) = v39;
  *(void *)(a1 + 72) = v4;
  return v61;
}

uint64_t sub_10015F568(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v71 = *(void *)(a1 + 40);
  if (!v71) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v70 = *(unsigned __int16 *)(a1 + 18);
  if (*(_WORD *)(a1 + 18))
  {
    uint64_t v69 = a1;
    uint64_t v5 = 0;
    do
    {
      uint64_t v88 = v3;
      uint64_t v89 = v5;
      unint64_t v6 = 0;
      int v7 = *a3;
      int v8 = a3[1];
      int v9 = v8 + *a3;
      int v11 = a3[2];
      int v10 = a3[3];
      int v81 = v9 + v11 + v10;
      int v85 = v9 + v11;
      int v12 = a3[4];
      int v13 = a3[5];
      int v87 = v81 + v12;
      int v15 = a3[8];
      int v14 = a3[9];
      int v17 = a3[6];
      int v16 = a3[7];
      int v80 = a3;
      int v86 = v11 - v9;
      int v79 = v11 - v9 + v10;
      int v18 = v10 - (v9 + v11);
      int v19 = v16 + v17 + v12;
      int v74 = v9 - v11;
      int v20 = v9 - v11 + v10;
      v90[0] = v14 + v15 + v13 + v17 + v16 + v81 + v12;
      v90[1] = v17 + v12 + v79 - (v16 + v13 + v14 + v15);
      int v73 = v13 + v12 + v17;
      v90[2] = v14 + v15 + v13 + v18 - v19;
      id v90[3] = v16 + v20 - (v73 + v14 + v15);
      int v21 = v8 - v7;
      int v22 = v7 - v8;
      int v84 = v21 - v11;
      int v23 = v21 - v11 - v10;
      int v83 = v16 + v13 + v12;
      int v24 = v16 + v17 - v12 + v13;
      int v77 = v16 + v17;
      int v78 = v22 - v11;
      int v25 = v22 - v11 - v10;
      v90[4] = v14 + v17 + v23 - (v83 + v15);
      v90[5] = v24 + v25 + v15 - v14;
      int v72 = v22 + v11;
      int v26 = v21 + v11;
      int v27 = v21 + v11 - v10;
      int v28 = v13 + v12 + v15;
      int v29 = v15 + v17 + v13;
      int v75 = v13 + v12;
      int v76 = v17 + v13;
      int v30 = v16 + v12;
      v90[6] = v16 + v12 + v72 - v10 - v29 + v14;
      v90[7] = v28 + v27 - (v16 + v17 + v14);
      int v82 = v14 + v15 + v17;
      v90[8] = v82 + v72 - v10 - v83;
      v90[9] = v24 + v27 - (v14 + v15);
      int v31 = v14 + v15 + v12;
      int v32 = v16 + v17 + v14 + v15;
      v90[10] = v31 + v23 - (v17 + v13) + v16;
      v90[11] = v13 + v12 + v25 - v32;
      int v33 = v17 + v12;
      int v34 = v14 + v16 + v13;
      v90[12] = v19 + v13 + v18 - v15 + v14;
      v90[13] = v33 + v15 + v20 - v34;
      v90[14] = v14 + v13 + v81 - (v19 + v15);
      v90[15] = v15 + v16 + v79 - (v73 + v14);
      int v35 = v74 - v10;
      int v36 = v30 + v74 - v10 - v29;
      int v37 = v17 + v16;
      v90[16] = v36 + v14;
      v90[17] = v28 - (v17 + v16 + v14) - v81;
      int v38 = v86 - v10;
      int v39 = v14 + v17 + v86 - v10 - (v83 + v15);
      int v40 = v85 - v10;
      v90[18] = v39;
      v90[19] = v24 + v85 - v10 + v15 - v14;
      int v41 = v26 + v10;
      int v42 = v72 + v10;
      v90[20] = v14 + v15 + v13 + v26 + v10 - v19;
      v90[21] = v16 + v72 + v10 - (v73 + v14 + v15);
      int v43 = v78 + v10;
      int v44 = v84 + v10;
      v90[22] = v31 + v13 + v43 + v37;
      v90[23] = v33 + v44 - (v16 + v13 + v14 + v15);
      v90[24] = v13 + v43 - (v19 + v15) + v14;
      v90[25] = v15 + v16 + v44 - (v73 + v14);
      v90[26] = v19 + v13 + v41 - v15 + v14;
      v90[27] = v33 + v15 + v42 - v34;
      v90[28] = v31 + v38 - v76 + v16;
      v90[29] = v75 + v40 - v32;
      v90[30] = v82 + v35 - v83;
      v90[31] = v77 + v13 - (v14 + v15) - v87;
      uint64_t v45 = v4;
      uint64_t v4 = v88;
      int v46 = (int *)(v71 + 8 * v89);
LABEL_9:
      int v47 = 0;
      unint64_t v48 = v6 >> 1;
      int v49 = (signed int *)(v45 + 256 + 4 * (v6 >> 1));
      BOOL v50 = (_DWORD *)((char *)v90 + (v6 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v52 = *v50++;
        int v51 = v52;
        uint64_t v53 = 4 * v6;
        int v54 = *(_DWORD *)(v88 + 4 * v6);
        int v55 = *(_DWORD *)(v88 + ((4 * v6) | 4));
        BOOL v56 = v54 <= v55;
        if (v54 <= v55) {
          int v54 = *(_DWORD *)(v88 + ((4 * v6) | 4));
        }
        unsigned int v57 = v54 + v51;
        if (__OFADD__(v54, v51)) {
          unsigned int v57 = ((v54 + v51) >> 31) ^ 0x80000000;
        }
        *(v49 - 64) = v57;
        BOOL v58 = __OFSUB__(v54, v51);
        signed int v59 = v54 - v51;
        if (v58) {
          signed int v59 = (v59 >> 31) ^ 0x80000000;
        }
        signed int *v49 = v59;
        int v60 = (4 * v47) | (2 * v56);
        int v61 = *(_DWORD *)(v88 + (v53 | 8));
        int v62 = *(_DWORD *)(v88 + (v53 | 0xC));
        BOOL v63 = v61 <= v62;
        if (v61 > v62) {
          int v62 = v61;
        }
        int v47 = v60 | v63;
        unsigned int v64 = v62 - v51;
        if (__OFSUB__(v62, v51)) {
          unsigned int v64 = ((v62 - v51) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v45 + ((4 * v48) | 4)) = v64;
        BOOL v58 = __OFADD__(v62, v51);
        signed int v65 = v62 + v51;
        if (v58) {
          signed int v65 = (v65 >> 31) ^ 0x80000000;
        }
        v49[1] = v65;
        if ((~(_BYTE)v6 & 0x3C) == 0)
        {
          *v46++ = v47;
          BOOL v66 = v6 >= 0x7C;
          v6 += 4;
          if (v66) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v48 += 2;
        v49 += 2;
        BOOL v66 = v6 >= 0x7C;
        v6 += 4;
      }
      while (!v66);
      if (v47) {
        *int v46 = v47;
      }
LABEL_7:
      a3 = v80 + 10;
      uint64_t v5 = v89 + 1;
      uint64_t v3 = v45;
    }
    while (v89 + 1 != v70);
    uint64_t v3 = v45;
    a1 = v69;
  }
  uint64_t v67 = 0;
  *(void *)(a1 + 64) = v3;
  *(void *)(a1 + 72) = v4;
  return v67;
}

uint64_t sub_10015FA90(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v81 = *(void *)(a1 + 40);
  if (!v81) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v5 = *(unsigned __int16 *)(a1 + 18);
  long long v112 = 0u;
  long long v113 = 0u;
  long long v110 = 0u;
  long long v111 = 0u;
  long long v108 = 0u;
  long long v109 = 0u;
  long long v106 = 0u;
  long long v107 = 0u;
  long long v104 = 0u;
  long long v105 = 0u;
  long long v103 = 0u;
  uint64_t v80 = v5;
  if (v5)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v99 = v3;
      uint64_t v100 = v6;
      unint64_t v7 = 0;
      int v9 = *a3;
      int v8 = a3[1];
      int v10 = v8 + *a3;
      int v12 = a3[2];
      int v11 = a3[3];
      int v13 = v10 + v12 + v11;
      int v14 = a3[4];
      int v15 = a3[5];
      int v93 = v13 + v14;
      int v98 = v13 + v14 + v15;
      int v17 = a3[6];
      int v16 = a3[7];
      int v101 = a3;
      int v18 = a3[8];
      int v19 = v12 - v10 + v11;
      int v97 = v19 - v14 + v15;
      int v20 = v10 + v12 - v11;
      int v96 = v20 - (v15 + v14);
      int v21 = v12 - v10 - v11;
      v102[0] = v18 + v16 + v98 + v17;
      v102[1] = v97 - v17 - (v18 + v16);
      int v95 = v21 + v14 - v15;
      int v22 = v11 - (v10 + v12);
      v102[2] = v96 + v17 - (v18 + v16);
      v102[3] = v18 + v16 + v95 - v17;
      int v88 = v22 - v14 + v15;
      int v23 = v10 - v12;
      int v24 = v23 + v11;
      int v87 = v15 + v14 + v23 + v11;
      v102[4] = v88 - v17 - (v18 + v16);
      v102[5] = v18 + v16 + v87 + v17;
      int v85 = v14 - v15 - v13;
      int v25 = v23 - v11;
      int v86 = v25 - (v15 + v14);
      v102[6] = v18 + v16 + v85 - v17;
      v102[7] = v86 + v17 - (v18 + v16);
      int v26 = v8 - v9;
      int v27 = v9 - v8;
      int v28 = v26 - v12 - v11;
      int v91 = v15 + v14 + v28;
      int v29 = v27 - v12 - v11;
      int v92 = v29 - v14 + v15;
      v102[8] = v91 + v17 + v16 - v18;
      v102[9] = v92 - v17 - v16 + v18;
      int v30 = v26 - v12 + v11;
      int v90 = v30 - (v15 + v14);
      int v31 = v27 - v12 + v11;
      int v89 = v31 + v14 - v15;
      v102[10] = v90 + v17 - v16 + v18;
      v102[11] = v89 - v17 + v16 - v18;
      int v32 = v27 + v12;
      int v33 = v26 + v12;
      int v34 = v32 - v11;
      int v84 = v32 - v11 - v14 + v15;
      int v35 = v33 - v11;
      int v36 = v15 + v14 + v33 - v11;
      v102[12] = v84 - v17 - v16 + v18;
      v102[13] = v36 + v17 + v16 - v18;
      int v37 = v32 + v11;
      int v38 = v33 + v11;
      int v82 = v37 + v14 - v15;
      int v83 = v33 + v11 - (v15 + v14);
      v102[14] = v82 - v17 + v16 - v18;
      v102[15] = v83 + v17 - v16 + v18;
      int v39 = v28 - (v15 + v14);
      int v40 = v29 + v14 - v15;
      v102[16] = v18 + v16 + v39 - v17;
      v102[17] = v40 + v17 - (v18 + v16);
      int v41 = v15 + v14 + v30;
      int v42 = v31 - v14 + v15;
      v102[18] = v41 - v17 - (v18 + v16);
      v102[19] = v18 + v16 + v42 + v17;
      int v43 = v34 + v14 - v15;
      int v44 = v35 - (v15 + v14);
      v102[20] = v43 + v17 - (v18 + v16);
      v102[21] = v18 + v16 + v44 - v17;
      int v45 = v37 - v14 + v15;
      int v46 = v15 + v14 + v38;
      v102[22] = v18 + v16 + v45 + v17;
      v102[23] = v46 - v17 - (v18 + v16);
      int v47 = v13 - (v15 + v14);
      int v48 = v19 + v14 - v15;
      v102[24] = v47 - v17 + v16 - v18;
      v102[25] = v48 + v17 - v16 + v18;
      int v49 = v15 + v14 + v20;
      int v50 = v21 - v14 + v15;
      v102[26] = v49 - v17 - v16 + v18;
      v102[27] = v50 + v17 + v16 - v18;
      int v51 = v22 + v14 - v15;
      int v52 = v24 - (v15 + v14);
      v102[28] = v51 + v17 - v16 + v18;
      v102[29] = v52 - v17 + v16 - v18;
      int v53 = v15 - v93;
      int v54 = v15 + v14 + v25;
      int v94 = v15 - v93 + v17;
      v102[30] = v94 + v16 - v18;
      v102[31] = v54 - v17 - v16 + v18;
      v102[32] = v43 - v17 - (v18 + v16);
      v102[33] = v18 + v16 + v44 + v17;
      v102[34] = v18 + v16 + v45 - v17;
      v102[35] = v46 + v17 - (v18 + v16);
      v102[36] = v18 + v16 + v39 + v17;
      v102[37] = v40 - v17 - (v18 + v16);
      v102[38] = v41 + v17 - (v18 + v16);
      v102[39] = v18 + v16 + v42 - v17;
      v102[40] = v51 - v17 - v16 + v18;
      v102[41] = v52 + v17 + v16 - v18;
      v102[42] = v53 - v17 + v16 - v18;
      v102[43] = v54 + v17 - v16 + v18;
      v102[44] = v47 + v17 + v16 - v18;
      v102[45] = v48 - v17 - v16 + v18;
      v102[46] = v49 + v17 - v16 + v18;
      v102[47] = v50 - v17 + v16 - v18;
      v102[48] = v88 + v17 - (v18 + v16);
      v102[49] = v18 + v16 + v87 - v17;
      v102[50] = v18 + v16 + v85 + v17;
      v102[51] = v86 - v17 - (v18 + v16);
      v102[52] = v18 + v16 + v98 - v17;
      v102[53] = v97 + v17 - (v18 + v16);
      v102[54] = v96 - v17 - (v18 + v16);
      v102[55] = v18 + v16 + v95 + v17;
      v102[56] = v84 + v17 - v16 + v18;
      v102[57] = v36 - v17 + v16 - v18;
      v102[58] = v82 + v17 + v16 - v18;
      v102[59] = v83 - v17 - v16 + v18;
      v102[60] = v91 - v17 + v16 - v18;
      v102[61] = v92 + v17 - v16 + v18;
      v102[62] = v90 - v17 - v16 + v18;
      v102[63] = v89 + v17 + v16 - v18;
      v102[64] = v86 - v17 + v16 - v18;
      v102[65] = v85 + v17 - v16 + v18;
      v102[66] = v87 - v17 - v16 + v18;
      v102[67] = v88 + v17 + v16 - v18;
      v102[68] = v95 + v17 - v16 + v18;
      v102[69] = v96 - v17 + v16 - v18;
      v102[70] = v97 + v17 + v16 - v18;
      v102[71] = v98 - v17 - v16 + v18;
      v102[72] = v18 + v16 + v83 - v17;
      v102[73] = v82 + v17 - (v18 + v16);
      v102[74] = v36 - v17 - (v18 + v16);
      v102[75] = v18 + v16 + v84 + v17;
      v102[76] = v89 + v17 - (v18 + v16);
      v102[77] = v18 + v16 + v90 - v17;
      v102[78] = v18 + v16 + v92 + v17;
      v102[79] = v91 - v17 - (v18 + v16);
      v102[80] = v46 + v17 + v16 - v18;
      v102[81] = v45 - v17 - v16 + v18;
      v102[82] = v44 + v17 - v16 + v18;
      v102[83] = v43 - v17 + v16 - v18;
      LODWORD(v103) = v42 - v17 - v16 + v18;
      DWORD1(v103) = v41 + v17 + v16 - v18;
      DWORD2(v103) = v40 - v17 + v16 - v18;
      HIDWORD(v103) = v39 + v17 - v16 + v18;
      LODWORD(v104) = v18 + v16 + v54 + v17;
      DWORD1(v104) = v53 - v17 - (v18 + v16);
      DWORD2(v104) = v52 + v17 - (v18 + v16);
      HIDWORD(v104) = v18 + v16 + v51 - v17;
      LODWORD(v105) = v50 - v17 - (v18 + v16);
      DWORD1(v105) = v18 + v16 + v49 + v17;
      DWORD2(v105) = v18 + v16 + v48 - v17;
      HIDWORD(v105) = v47 + v17 - (v18 + v16);
      LODWORD(v106) = v42 + v17 - v16 + v18;
      DWORD1(v106) = v41 - v17 + v16 - v18;
      DWORD2(v106) = v40 + v17 + v16 - v18;
      HIDWORD(v106) = v39 - v17 - v16 + v18;
      LODWORD(v107) = v46 - v17 + v16 - v18;
      DWORD1(v107) = v45 + v17 - v16 + v18;
      DWORD2(v107) = v44 - v17 - v16 + v18;
      HIDWORD(v107) = v43 + v17 + v16 - v18;
      LODWORD(v108) = v50 + v17 - (v18 + v16);
      DWORD1(v108) = v18 + v16 + v49 - v17;
      DWORD2(v108) = v18 + v16 + v48 + v17;
      HIDWORD(v108) = v47 - v17 - (v18 + v16);
      LODWORD(v109) = v18 + v16 + v54 - v17;
      DWORD1(v109) = v94 - (v18 + v16);
      DWORD2(v109) = v52 - v17 - (v18 + v16);
      HIDWORD(v109) = v18 + v16 + v51 + v17;
      LODWORD(v110) = v95 - v17 - v16 + v18;
      DWORD1(v110) = v96 + v17 + v16 - v18;
      DWORD2(v110) = v97 - v17 + v16 - v18;
      HIDWORD(v110) = v98 + v17 - v16 + v18;
      LODWORD(v111) = v86 + v17 + v16 - v18;
      DWORD1(v111) = v85 - v17 - v16 + v18;
      DWORD2(v111) = v87 + v17 - v16 + v18;
      HIDWORD(v111) = v88 - v17 + v16 - v18;
      LODWORD(v112) = v89 - v17 - (v18 + v16);
      DWORD1(v112) = v18 + v16 + v90 + v17;
      DWORD2(v112) = v18 + v16 + v92 - v17;
      HIDWORD(v112) = v91 + v17 - (v18 + v16);
      LODWORD(v113) = v18 + v16 + v83 + v17;
      DWORD1(v113) = v82 - v17 - (v18 + v16);
      DWORD2(v113) = v36 + v17 - (v18 + v16);
      HIDWORD(v113) = v18 + v16 + v84 - v17;
      uint64_t v55 = v4;
      uint64_t v4 = v99;
      BOOL v56 = (int *)(v81 + 32 * v100);
LABEL_9:
      int v57 = 0;
      unint64_t v58 = v7 >> 1;
      signed int v59 = (unsigned int *)(v55 + 4 * (v7 >> 1));
      int v60 = (_DWORD *)((char *)v102 + (v7 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v62 = *v60++;
        int v61 = v62;
        uint64_t v63 = 4 * v7;
        int v64 = *(_DWORD *)(v99 + 4 * v7);
        int v65 = *(_DWORD *)(v99 + ((4 * v7) | 4));
        BOOL v66 = v64 <= v65;
        if (v64 <= v65) {
          int v64 = *(_DWORD *)(v99 + ((4 * v7) | 4));
        }
        unsigned int v67 = v64 + v61;
        if (__OFADD__(v64, v61)) {
          unsigned int v67 = ((v64 + v61) >> 31) ^ 0x80000000;
        }
        unsigned int *v59 = v67;
        BOOL v68 = __OFSUB__(v64, v61);
        signed int v69 = v64 - v61;
        if (v68) {
          signed int v69 = (v69 >> 31) ^ 0x80000000;
        }
        v59[256] = v69;
        int v70 = (4 * v57) | (2 * v66);
        int v71 = *(_DWORD *)(v99 + (v63 | 8));
        int v72 = *(_DWORD *)(v99 + (v63 | 0xC));
        BOOL v73 = v71 <= v72;
        if (v71 > v72) {
          int v72 = v71;
        }
        int v57 = v70 | v73;
        unsigned int v74 = v72 - v61;
        if (__OFSUB__(v72, v61)) {
          unsigned int v74 = ((v72 - v61) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v55 + ((4 * v58) | 4)) = v74;
        BOOL v68 = __OFADD__(v72, v61);
        signed int v75 = v72 + v61;
        if (v68) {
          signed int v75 = (v75 >> 31) ^ 0x80000000;
        }
        v59[257] = v75;
        if ((~(_BYTE)v7 & 0x3C) == 0)
        {
          *v56++ = v57;
          BOOL v76 = v7 >= 0x1FC;
          v7 += 4;
          if (v76) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v58 += 2;
        v59 += 2;
        BOOL v76 = v7 >= 0x1FC;
        v7 += 4;
      }
      while (!v76);
      if (v57) {
        int *v56 = v57;
      }
LABEL_7:
      a3 = v101 + 9;
      uint64_t v6 = v100 + 1;
      uint64_t v3 = v55;
    }
    while (v100 + 1 != v80);
  }
  else
  {
    uint64_t v55 = v3;
  }
  uint64_t v77 = 0;
  *(void *)(a1 + 64) = v55;
  *(void *)(a1 + 72) = v4;
  return v77;
}

uint64_t sub_1001605B8(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v68 = *(void *)(a1 + 40);
  if (!v68) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v67 = *(unsigned __int16 *)(a1 + 18);
  if (*(_WORD *)(a1 + 18))
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v103 = v3;
      uint64_t v104 = v5;
      unint64_t v6 = 0;
      int v7 = *a3;
      int v8 = a3[1];
      int v9 = v8 + *a3;
      int v10 = a3[2];
      int v11 = a3[3];
      int v12 = v9 + v10;
      int v72 = v9 + v10 + v11;
      int v13 = a3[4];
      int v14 = a3[5];
      int v100 = v72 + v13;
      int v15 = a3[6];
      int v16 = a3[7];
      long long v105 = a3;
      int v17 = a3[8];
      int v87 = *a3 - v8 - v10;
      int v81 = v87 + v11;
      int v101 = v87 + v11 - v13;
      int v18 = v9 - v10;
      int v78 = v9 - v10 - v11;
      int v102 = v78 - v13;
      v106[0] = v17 + v16 + v15 + v72 + v13 + v14;
      v106[1] = v15 + v14 + v101 - (v17 + v16);
      int v19 = v7 - v8 + v10;
      v106[2] = v16 + v78 - v13 - (v17 + v15 + v14);
      v106[3] = v19 - v11 + v13 - (v15 + v14 + v16) + v17;
      int v80 = v10 - v9 - v11;
      int v20 = v8 - v7;
      int v98 = v80 + v13;
      int v99 = v19 - v11 + v13;
      int v85 = v16 + v14 + v17;
      int v21 = v17 + v16 - v14 + v15;
      int v75 = v20 - v10 - v11;
      int v84 = v21;
      v106[4] = v15 + v80 + v13 - v85;
      v106[5] = v21 + v75 - v13;
      int v96 = v11 - (v9 + v10) - v13;
      int v97 = v75 - v13;
      int v22 = v20 + v10 + v11;
      int v94 = v22 + v13;
      v106[6] = v17 + v14 + v96 - (v16 + v15);
      v106[7] = v16 + v14 + v22 + v13 - (v17 + v15);
      int v77 = v20 + v10 - v11;
      int v92 = v77 - v13;
      int v93 = v13 - v72;
      v106[8] = v21 + v13 - v72;
      v106[9] = v15 + v77 - v13 - v85;
      int v73 = v10 - v9 + v11;
      int v95 = v73 - v13;
      int v23 = v20 - v10 + v11;
      int v90 = v23 + v13;
      v106[10] = v16 + v14 + v73 - v13 - (v17 + v15);
      v106[11] = v17 + v14 + v23 + v13 - (v16 + v15);
      int v76 = v18 + v11;
      int v91 = v18 + v11 + v13;
      int v74 = v19 + v11;
      int v89 = v19 + v11 - v13;
      int v83 = v17 + v16 + v14 + v15;
      v106[12] = v15 + v14 + v91 - (v17 + v16);
      v106[13] = v83 + v89;
      int v69 = v12 - v11;
      int v24 = v87 - v11;
      int v88 = v12 - v11 - v13;
      int v86 = v24 + v13;
      v106[14] = v88 - (v15 + v14 + v16) + v17;
      v106[15] = v16 + v24 + v13 - (v17 + v15 + v14);
      int v70 = v78 + v13;
      int v71 = v19 - v11 - v13;
      int v25 = v15 + v14 + v16 + v17;
      v106[16] = v71 - v25;
      v106[17] = v17 + v16 + v78 + v13 - (v15 + v14);
      int v82 = v81 + v13;
      int v26 = v72 - v13;
      int v27 = v16 + v15 + v14;
      v106[18] = v15 + v14 + v82 - v16 + v17;
      v106[19] = v27 + v72 - v13 - v17;
      int v79 = v22 - v13;
      int v28 = v17 + v16 + v14 + v22 - v13 - v15;
      int v29 = v11 - v12 + v13;
      int v30 = v16 + v15 + v17;
      v106[20] = v28;
      v106[21] = v29 + v14 - v30;
      int v31 = v75 + v13;
      int v32 = v80 - v13;
      v106[22] = v16 + v15 + v75 + v13 - (v17 + v14);
      v106[23] = v17 + v15 + v80 - v13 - (v16 + v14);
      int v33 = v23 - v13;
      int v34 = v73 + v13;
      v106[24] = v23 - v13 + v14 - v30;
      v106[25] = v17 + v16 + v14 + v73 + v13 - v15;
      int v35 = v77 + v13;
      v106[26] = v17 + v15 + v77 + v13 - (v16 + v14);
      v106[27] = v16 + v15 - v17 - (v72 + v13 + v14);
      int v36 = v24 - v13;
      int v37 = v69 + v13;
      v106[28] = v17 + v16 + v36 - (v15 + v14);
      v106[29] = v69 + v13 - v25;
      int v38 = v74 + v13;
      int v39 = v76 - v13;
      v106[30] = v27 + v38 - v17;
      v106[31] = v15 + v14 + v39 - v16 + v17;
      v106[32] = v70 + v14 - v30;
      v106[33] = v17 + v16 + v14 + v71 - v15;
      v106[34] = v17 + v15 + v26 - (v16 + v14);
      v106[35] = v16 + v15 + v82 - (v17 + v14);
      v106[36] = v17 + v16 + v29 - (v15 + v14);
      v106[37] = v79 - v25;
      v106[38] = v27 + v32 - v17;
      v106[39] = v15 + v14 + v31 - v16 + v17;
      v106[40] = v34 - v25;
      v106[41] = v17 + v16 + v33 - (v15 + v14);
      v106[42] = v15 + v14 - v16 - v100 + v17;
      v106[43] = v27 + v35 - v17;
      v106[44] = v17 + v16 + v14 + v37 - v15;
      v106[45] = v36 + v14 - v30;
      v106[46] = v16 + v15 + v39 - (v17 + v14);
      v106[47] = v17 + v15 + v38 - (v16 + v14);
      v106[48] = v84 + v101;
      v106[49] = v15 + v100 - v85;
      v106[50] = v16 + v14 + v99 - (v17 + v15);
      v106[51] = v17 + v14 + v102 - (v16 + v15);
      int v40 = v17 + v15 + v14;
      v106[52] = v15 + v14 + v97 - (v17 + v16);
      v106[53] = v83 + v98;
      int v41 = v15 + v14 + v16;
      v106[54] = v94 - v41 + v17;
      v106[55] = v16 + v96 - v40;
      v106[56] = v83 + v92;
      v106[57] = v15 + v14 + v93 - (v17 + v16);
      v106[58] = v16 + v90 - v40;
      v106[59] = v95 - v41 + v17;
      v106[60] = v15 + v89 - v85;
      v106[61] = v84 + v91;
      v106[62] = v17 + v14 + v86 - (v16 + v15);
      v106[63] = v16 + v14 + v88 - (v17 + v15);
      uint64_t v42 = v4;
      uint64_t v4 = v103;
      int v43 = (int *)(v68 + 16 * v104);
LABEL_9:
      int v44 = 0;
      unint64_t v45 = v6 >> 1;
      int v46 = (unsigned int *)(v42 + 4 * (v6 >> 1));
      int v47 = (_DWORD *)((char *)v106 + (v6 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v49 = *v47++;
        int v48 = v49;
        uint64_t v50 = 4 * v6;
        int v51 = *(_DWORD *)(v103 + 4 * v6);
        int v52 = *(_DWORD *)(v103 + ((4 * v6) | 4));
        BOOL v53 = v51 <= v52;
        if (v51 <= v52) {
          int v51 = *(_DWORD *)(v103 + ((4 * v6) | 4));
        }
        unsigned int v54 = v51 + v48;
        if (__OFADD__(v51, v48)) {
          unsigned int v54 = ((v51 + v48) >> 31) ^ 0x80000000;
        }
        *int v46 = v54;
        BOOL v55 = __OFSUB__(v51, v48);
        signed int v56 = v51 - v48;
        if (v55) {
          signed int v56 = (v56 >> 31) ^ 0x80000000;
        }
        unsigned char v46[128] = v56;
        int v57 = (4 * v44) | (2 * v53);
        int v58 = *(_DWORD *)(v103 + (v50 | 8));
        int v59 = *(_DWORD *)(v103 + (v50 | 0xC));
        BOOL v60 = v58 <= v59;
        if (v58 > v59) {
          int v59 = v58;
        }
        int v44 = v57 | v60;
        unsigned int v61 = v59 - v48;
        if (__OFSUB__(v59, v48)) {
          unsigned int v61 = ((v59 - v48) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v42 + ((4 * v45) | 4)) = v61;
        BOOL v55 = __OFADD__(v59, v48);
        signed int v62 = v59 + v48;
        if (v55) {
          signed int v62 = (v62 >> 31) ^ 0x80000000;
        }
        v46[129] = v62;
        if ((~(_BYTE)v6 & 0x3C) == 0)
        {
          *v43++ = v44;
          BOOL v63 = v6 >= 0xFC;
          v6 += 4;
          if (v63) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v45 += 2;
        v46 += 2;
        BOOL v63 = v6 >= 0xFC;
        v6 += 4;
      }
      while (!v63);
      if (v44) {
        int *v43 = v44;
      }
LABEL_7:
      a3 = v105 + 9;
      uint64_t v5 = v104 + 1;
      uint64_t v3 = v42;
    }
    while (v104 + 1 != v67);
  }
  else
  {
    uint64_t v42 = *(void *)(a1 + 64);
  }
  uint64_t v64 = 0;
  *(void *)(a1 + 64) = v42;
  *(void *)(a1 + 72) = v4;
  return v64;
}

uint64_t sub_100160CC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v67 = *(void *)(a1 + 40);
  if (!v67) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v66 = *(unsigned __int16 *)(a1 + 18);
  if (*(_WORD *)(a1 + 18))
  {
    uint64_t v65 = a1;
    uint64_t v5 = 0;
    do
    {
      uint64_t v78 = v3;
      uint64_t v79 = v5;
      unint64_t v6 = 0;
      int v7 = *a3;
      int v8 = a3[1];
      int v9 = v8 + *a3;
      int v11 = a3[2];
      int v10 = a3[3];
      int v71 = v9 + v11 + v10;
      int v74 = v9 + v11;
      int v13 = a3[6];
      int v12 = a3[7];
      int v15 = a3[4];
      int v14 = a3[5];
      int v16 = a3[8];
      int v76 = v12 + v13 + v14;
      int v77 = v71 + v15 + v16;
      int v75 = v11 - v9;
      int v70 = v11 - v9 + v10;
      int v17 = v13 + v15;
      int v18 = v10 - (v9 + v11);
      int v19 = v12 + v13 + v15;
      int v68 = v9 - v11;
      v80[0] = v77 + v76;
      v80[1] = v13 + v15 + v70 - (v12 + v14 + v16);
      int v20 = v9 - v11 + v10;
      int v21 = v14 + v15;
      v80[2] = v16 + v14 + v18 - v19;
      v80[3] = v12 + v20 - (v16 + v14 + v15 + v13);
      int v22 = v8 - v7;
      int v23 = v7 - v8;
      int v72 = v22 - v11;
      int v24 = v22 - v11 - v10;
      int v25 = v12 + v14 + v15 + v16;
      int v73 = v12 + v14 + v15;
      int v26 = v12 + v13 - v15 + v14;
      int v69 = v23 - v11;
      int v27 = v23 - v11 - v10;
      v80[4] = v13 + v24 - v25;
      v80[5] = v26 + v27 + v16;
      int v28 = v23 + v11;
      int v29 = v22 + v11;
      int v30 = v23 + v11 - v10;
      int v31 = v12 + v15;
      v80[6] = v12 + v15 + v30 - (v16 + v13 + v14);
      v80[7] = v14 + v15 + v22 + v11 - v10 - (v12 + v13) + v16;
      v80[8] = v16 + v13 + v30 - v73;
      v80[9] = v26 + v22 + v11 - v10 - v16;
      int v32 = v16 + v12 + v15;
      int v33 = v12 + v13 + v16;
      v80[10] = v32 + v24 - (v13 + v14);
      v80[11] = v21 + v27 - v33;
      v80[12] = v19 + v14 + v18 - v16;
      v80[13] = v17 + v20 - (v12 + v14) + v16;
      v80[14] = v14 + v71 - (v19 + v16);
      v80[15] = v16 + v12 + v70 - (v21 + v13);
      int v34 = v68 - v10;
      v80[16] = v31 + v68 - v10 - (v16 + v13 + v14);
      v80[17] = v21 - (v13 + v12) - v71 + v16;
      int v35 = v75 - v10;
      int v36 = v74 - v10;
      v80[18] = v13 + v75 - v10 - v25;
      v80[19] = v26 + v74 - v10 + v16;
      int v37 = v29 + v10;
      int v38 = v28 + v10;
      v80[20] = v16 + v14 + v29 + v10 - v19;
      v80[21] = v12 + v38 - (v16 + v21 + v13);
      int v39 = v69 + v10;
      int v40 = v72 + v10;
      v80[22] = v19 + v14 + v39 + v16;
      v80[23] = v17 + v40 - (v12 + v14 + v16);
      v80[24] = v14 + v39 - (v19 + v16);
      v80[25] = v16 + v12 + v40 - (v21 + v13);
      v80[26] = v19 + v14 + v37 - v16;
      v80[27] = v17 + v38 - (v12 + v14) + v16;
      v80[28] = v32 + v35 - (v13 + v14);
      v80[29] = v21 + v36 - v33;
      v80[30] = v16 + v13 + v34 - v73;
      v80[31] = v76 - v77;
      uint64_t v41 = v4;
      uint64_t v4 = v78;
      uint64_t v42 = (int *)(v67 + 8 * v79);
LABEL_9:
      int v43 = 0;
      unint64_t v44 = v6 >> 1;
      unint64_t v45 = (signed int *)(v41 + 256 + 4 * (v6 >> 1));
      int v46 = (_DWORD *)((char *)v80 + (v6 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v48 = *v46++;
        int v47 = v48;
        uint64_t v49 = 4 * v6;
        int v50 = *(_DWORD *)(v78 + 4 * v6);
        int v51 = *(_DWORD *)(v78 + ((4 * v6) | 4));
        BOOL v52 = v50 <= v51;
        if (v50 <= v51) {
          int v50 = *(_DWORD *)(v78 + ((4 * v6) | 4));
        }
        unsigned int v53 = v50 + v47;
        if (__OFADD__(v50, v47)) {
          unsigned int v53 = ((v50 + v47) >> 31) ^ 0x80000000;
        }
        *(v45 - 64) = v53;
        BOOL v54 = __OFSUB__(v50, v47);
        signed int v55 = v50 - v47;
        if (v54) {
          signed int v55 = (v55 >> 31) ^ 0x80000000;
        }
        *unint64_t v45 = v55;
        int v56 = (4 * v43) | (2 * v52);
        int v57 = *(_DWORD *)(v78 + (v49 | 8));
        int v58 = *(_DWORD *)(v78 + (v49 | 0xC));
        BOOL v59 = v57 <= v58;
        if (v57 > v58) {
          int v58 = v57;
        }
        int v43 = v56 | v59;
        unsigned int v60 = v58 - v47;
        if (__OFSUB__(v58, v47)) {
          unsigned int v60 = ((v58 - v47) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v41 + ((4 * v44) | 4)) = v60;
        BOOL v54 = __OFADD__(v58, v47);
        signed int v61 = v58 + v47;
        if (v54) {
          signed int v61 = (v61 >> 31) ^ 0x80000000;
        }
        v45[1] = v61;
        if ((~(_BYTE)v6 & 0x3C) == 0)
        {
          *v42++ = v43;
          BOOL v62 = v6 >= 0x7C;
          v6 += 4;
          if (v62) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v44 += 2;
        v45 += 2;
        BOOL v62 = v6 >= 0x7C;
        v6 += 4;
      }
      while (!v62);
      if (v43) {
        *uint64_t v42 = v43;
      }
LABEL_7:
      a3 += 9;
      uint64_t v5 = v79 + 1;
      uint64_t v3 = v41;
    }
    while (v79 + 1 != v66);
    uint64_t v3 = v41;
    a1 = v65;
  }
  uint64_t v63 = 0;
  *(void *)(a1 + 64) = v3;
  *(void *)(a1 + 72) = v4;
  return v63;
}

uint64_t sub_100161160(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v82 = *(void *)(a1 + 40);
  if (!v82) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v5 = *(unsigned __int16 *)(a1 + 18);
  long long v113 = 0u;
  long long v114 = 0u;
  long long v111 = 0u;
  long long v112 = 0u;
  long long v109 = 0u;
  long long v110 = 0u;
  long long v107 = 0u;
  long long v108 = 0u;
  long long v105 = 0u;
  long long v106 = 0u;
  long long v104 = 0u;
  uint64_t v81 = v5;
  if (v5)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v100 = v3;
      uint64_t v101 = v6;
      unint64_t v7 = 0;
      int v8 = *a3;
      int v9 = a3[1];
      int v10 = v9 + *a3;
      int v12 = a3[2];
      int v11 = a3[3];
      int v13 = a3[4];
      int v14 = a3[5];
      int v15 = v10 + v12 + v11;
      int v16 = v15 + v13 + v14;
      int v18 = a3[6];
      int v17 = a3[7];
      int v102 = a3;
      int v19 = v12 - v10 + v11;
      int v99 = v19 - v13 + v14;
      int v20 = v10 + v12 - v11;
      v103[0] = v16 + v18 + v17;
      v103[1] = v99 - v18 - v17;
      int v21 = v14 + v13;
      int v98 = v20 - (v14 + v13);
      int v22 = v12 - v10 - v11;
      int v97 = v22 + v13 - v14;
      v103[2] = v98 + v18 - v17;
      v103[3] = v97 - v18 + v17;
      int v23 = v11 - (v10 + v12);
      int v92 = v23 - v13 + v14;
      int v24 = v10 - v12;
      int v25 = v24 + v11;
      int v89 = v14 + v13 + v24 + v11;
      v103[4] = v92 - v18 - v17;
      v103[5] = v89 + v18 + v17;
      int v87 = v13 - v14 - v15;
      int v26 = v24 - v11;
      int v88 = v24 - v11 - (v14 + v13);
      v103[6] = v87 - v18 + v17;
      v103[7] = v88 + v18 - v17;
      int v27 = v9 - v8;
      int v28 = v8 - v9;
      int v29 = v28 - v12 - v11;
      int v30 = v27 - v12 - v11;
      int v94 = v14 + v13 + v30;
      int v95 = v29 - v13 + v14;
      v103[8] = v94 + v18 + v17;
      v103[9] = v95 - v18 - v17;
      int v31 = v27 - v12 + v11;
      int v32 = v28 - v12 + v11;
      int v93 = v32 + v13 - v14;
      int v91 = v31 - (v14 + v13);
      v103[10] = v91 + v18 - v17;
      v103[11] = v93 - v18 + v17;
      int v33 = v28 + v12;
      int v34 = v27 + v12;
      int v35 = v33 - v11;
      int v85 = v33 - v11 - v13 + v14;
      int v36 = v34 - v11;
      int v86 = v14 + v13 + v34 - v11;
      v103[12] = v85 - v18 - v17;
      v103[13] = v86 + v18 + v17;
      int v37 = v33 + v11;
      int v38 = v34 + v11;
      int v83 = v37 + v13 - v14;
      int v84 = v38 - (v14 + v13);
      v103[14] = v83 - v18 + v17;
      v103[15] = v84 + v18 - v17;
      int v39 = v30 - (v14 + v13);
      int v40 = v29 + v13 - v14;
      v103[16] = v39 - v18 + v17;
      v103[17] = v40 + v18 - v17;
      int v41 = v14 + v13 + v31;
      int v42 = v32 - v13 + v14;
      v103[18] = v41 - v18 - v17;
      v103[19] = v42 + v18 + v17;
      int v43 = v35 + v13 - v14;
      int v44 = v36 - (v14 + v13);
      v103[20] = v43 + v18 - v17;
      v103[21] = v44 - v18 + v17;
      int v45 = v37 - v13 + v14;
      int v46 = v14 + v13 + v38;
      v103[22] = v45 + v18 + v17;
      v103[23] = v46 - v18 - v17;
      int v47 = v15 - (v14 + v13);
      int v48 = v19 + v13 - v14;
      int v96 = v48 + v18;
      v103[24] = v47 - v18 + v17;
      v103[25] = v48 + v18 - v17;
      int v49 = v14 + v13 + v20;
      int v50 = v22 - v13 + v14;
      v103[26] = v49 - v18 - v17;
      v103[27] = v50 + v18 + v17;
      int v51 = v23 + v13 - v14;
      int v52 = v25 - (v14 + v13);
      v103[28] = v51 + v18 - v17;
      v103[29] = v52 - v18 + v17;
      int v53 = v14 - (v15 + v13);
      int v90 = v21 + v26 - v18;
      v103[30] = v53 + v18 + v17;
      v103[31] = v90 - v17;
      v103[32] = v43 - v18 - v17;
      v103[33] = v44 + v18 + v17;
      v103[34] = v45 - v18 + v17;
      v103[35] = v46 + v18 - v17;
      v103[36] = v39 + v18 + v17;
      v103[37] = v40 - v18 - v17;
      v103[38] = v41 + v18 - v17;
      v103[39] = v42 - v18 + v17;
      v103[40] = v51 - v18 - v17;
      v103[41] = v52 + v18 + v17;
      int v54 = v21 + v26 + v18;
      v103[42] = v53 - v18 + v17;
      v103[43] = v54 - v17;
      int v55 = v48 - v18;
      v103[44] = v47 + v18 + v17;
      v103[45] = v55 - v17;
      v103[46] = v49 + v18 - v17;
      v103[47] = v50 - v18 + v17;
      v103[48] = v92 + v18 - v17;
      v103[49] = v89 - v18 + v17;
      v103[50] = v87 + v18 + v17;
      v103[51] = v88 - v18 - v17;
      v103[52] = v16 - v18 + v17;
      v103[53] = v99 + v18 - v17;
      v103[54] = v98 - v18 - v17;
      v103[55] = v97 + v18 + v17;
      v103[56] = v85 + v18 - v17;
      v103[57] = v86 - v18 + v17;
      v103[58] = v83 + v18 + v17;
      v103[59] = v84 - v18 - v17;
      v103[60] = v94 - v18 + v17;
      v103[61] = v95 + v18 - v17;
      v103[62] = v91 - v18 - v17;
      v103[63] = v93 + v18 + v17;
      v103[64] = v88 - v18 + v17;
      v103[65] = v87 + v18 - v17;
      v103[66] = v89 - v18 - v17;
      v103[67] = v92 + v18 + v17;
      v103[68] = v97 + v18 - v17;
      v103[69] = v98 - v18 + v17;
      v103[70] = v99 + v18 + v17;
      v103[71] = v16 - v18 - v17;
      v103[72] = v84 - v18 + v17;
      v103[73] = v83 + v18 - v17;
      v103[74] = v86 - v18 - v17;
      v103[75] = v85 + v18 + v17;
      v103[76] = v93 + v18 - v17;
      v103[77] = v91 - v18 + v17;
      v103[78] = v95 + v18 + v17;
      v103[79] = v94 - v18 - v17;
      v103[80] = v46 + v18 + v17;
      v103[81] = v45 - v18 - v17;
      v103[82] = v44 + v18 - v17;
      v103[83] = v43 - v18 + v17;
      LODWORD(v104) = v42 - v18 - v17;
      DWORD1(v104) = v41 + v18 + v17;
      DWORD2(v104) = v40 - v18 + v17;
      HIDWORD(v104) = v39 + v18 - v17;
      LODWORD(v105) = v54 + v17;
      DWORD1(v105) = v53 - v18 - v17;
      DWORD2(v105) = v52 + v18 - v17;
      HIDWORD(v105) = v51 - v18 + v17;
      LODWORD(v106) = v50 - v18 - v17;
      DWORD1(v106) = v49 + v18 + v17;
      DWORD2(v106) = v55 + v17;
      HIDWORD(v106) = v47 + v18 - v17;
      LODWORD(v107) = v42 + v18 - v17;
      DWORD1(v107) = v41 - v18 + v17;
      DWORD2(v107) = v40 + v18 + v17;
      HIDWORD(v107) = v39 - v18 - v17;
      LODWORD(v108) = v46 - v18 + v17;
      DWORD1(v108) = v45 + v18 - v17;
      DWORD2(v108) = v44 - v18 - v17;
      HIDWORD(v108) = v43 + v18 + v17;
      LODWORD(v109) = v50 + v18 - v17;
      DWORD1(v109) = v49 - v18 + v17;
      DWORD2(v109) = v96 + v17;
      HIDWORD(v109) = v47 - v18 - v17;
      LODWORD(v110) = v90 + v17;
      DWORD1(v110) = v53 + v18 - v17;
      DWORD2(v110) = v52 - v18 - v17;
      HIDWORD(v110) = v51 + v18 + v17;
      LODWORD(v111) = v97 - v18 - v17;
      DWORD1(v111) = v98 + v18 + v17;
      DWORD2(v111) = v99 - v18 + v17;
      HIDWORD(v111) = v16 + v18 - v17;
      LODWORD(v112) = v88 + v18 + v17;
      DWORD1(v112) = v87 - v18 - v17;
      DWORD2(v112) = v89 + v18 - v17;
      HIDWORD(v112) = v92 - v18 + v17;
      LODWORD(v113) = v93 - v18 - v17;
      DWORD1(v113) = v91 + v18 + v17;
      DWORD2(v113) = v95 - v18 + v17;
      HIDWORD(v113) = v94 + v18 - v17;
      LODWORD(v114) = v84 + v18 + v17;
      DWORD1(v114) = v83 - v18 - v17;
      DWORD2(v114) = v86 + v18 - v17;
      uint64_t v56 = v4;
      uint64_t v4 = v100;
      HIDWORD(v114) = v85 - v18 + v17;
      int v57 = (int *)(v82 + 32 * v101);
LABEL_9:
      int v58 = 0;
      unint64_t v59 = v7 >> 1;
      unsigned int v60 = (unsigned int *)(v56 + 4 * (v7 >> 1));
      signed int v61 = (_DWORD *)((char *)v103 + (v7 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v63 = *v61++;
        int v62 = v63;
        uint64_t v64 = 4 * v7;
        int v65 = *(_DWORD *)(v100 + 4 * v7);
        int v66 = *(_DWORD *)(v100 + ((4 * v7) | 4));
        BOOL v67 = v65 <= v66;
        if (v65 <= v66) {
          int v65 = *(_DWORD *)(v100 + ((4 * v7) | 4));
        }
        unsigned int v68 = v65 + v62;
        if (__OFADD__(v65, v62)) {
          unsigned int v68 = ((v65 + v62) >> 31) ^ 0x80000000;
        }
        unsigned int *v60 = v68;
        BOOL v69 = __OFSUB__(v65, v62);
        signed int v70 = v65 - v62;
        if (v69) {
          signed int v70 = (v70 >> 31) ^ 0x80000000;
        }
        v60[256] = v70;
        int v71 = (4 * v58) | (2 * v67);
        int v72 = *(_DWORD *)(v100 + (v64 | 8));
        int v73 = *(_DWORD *)(v100 + (v64 | 0xC));
        BOOL v74 = v72 <= v73;
        if (v72 > v73) {
          int v73 = v72;
        }
        int v58 = v71 | v74;
        unsigned int v75 = v73 - v62;
        if (__OFSUB__(v73, v62)) {
          unsigned int v75 = ((v73 - v62) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v56 + ((4 * v59) | 4)) = v75;
        BOOL v69 = __OFADD__(v73, v62);
        signed int v76 = v73 + v62;
        if (v69) {
          signed int v76 = (v76 >> 31) ^ 0x80000000;
        }
        v60[257] = v76;
        if ((~(_BYTE)v7 & 0x3C) == 0)
        {
          *v57++ = v58;
          BOOL v77 = v7 >= 0x1FC;
          v7 += 4;
          if (v77) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v59 += 2;
        v60 += 2;
        BOOL v77 = v7 >= 0x1FC;
        v7 += 4;
      }
      while (!v77);
      if (v58) {
        int *v57 = v58;
      }
LABEL_7:
      a3 = v102 + 8;
      uint64_t v6 = v101 + 1;
      uint64_t v3 = v56;
    }
    while (v101 + 1 != v81);
  }
  else
  {
    uint64_t v56 = v3;
  }
  uint64_t v78 = 0;
  *(void *)(a1 + 64) = v56;
  *(void *)(a1 + 72) = v4;
  return v78;
}

uint64_t sub_100161B58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v77 = *(void *)(a1 + 40);
  if (!v77) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v76 = *(unsigned __int16 *)(a1 + 18);
  if (*(_WORD *)(a1 + 18))
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v99 = v3;
      uint64_t v100 = v5;
      unint64_t v6 = 0;
      int v7 = *a3;
      int v8 = a3[1];
      int v9 = v8 + *a3;
      int v11 = a3[2];
      int v10 = a3[3];
      int v12 = v9 + v11;
      int v13 = v9 + v11 + v10;
      int v14 = a3[4];
      int v15 = a3[5];
      int v95 = v13 + v14;
      int v82 = v13 + v14 + v15;
      int v17 = a3[6];
      int v16 = a3[7];
      int v18 = *a3 - v8 - v11;
      int v81 = v18 + v10;
      int v97 = v18 + v10 - v14;
      int v19 = v9 - v11;
      int v79 = v9 - v11 - v10;
      int v98 = v79 - v14;
      v101[0] = v16 + v17 + v82;
      v101[1] = v17 + v15 + v97 - v16;
      int v20 = v7 - v8 + v11;
      int v21 = v20 - v10;
      int v94 = v20 - v10 + v14;
      int v22 = v17 + v15 + v16;
      v101[2] = v79 - v14 - (v17 + v15) + v16;
      v101[3] = v94 - v22;
      int v23 = v11 - v9;
      int v80 = v11 - v9 - v10;
      int v96 = v80 + v14;
      int v24 = v8 - v7 - v11;
      int v25 = v24 - v10;
      int v93 = v24 - v10 - v14;
      v101[4] = v17 + v80 + v14 - (v16 + v15);
      v101[5] = v16 + v17 - v15 + v93;
      int v26 = v8 - v7 + v11;
      int v27 = v10 - v12;
      int v92 = v10 - v12 - v14;
      int v28 = v26 + v10;
      int v90 = v26 + v10 + v14;
      v101[6] = v92 + v15 - (v16 + v17);
      v101[7] = v16 + v15 + v90 - v17;
      int v29 = v26 - v10;
      int v88 = v26 - v10 - v14;
      int v89 = v14 - v13;
      v101[8] = v16 + v17 - v15 + v14 - v13;
      v101[9] = v17 + v88 - (v16 + v15);
      int v30 = v23 + v10;
      int v91 = v30 - v14;
      int v31 = v24 + v10;
      int v86 = v31 + v14;
      v101[10] = v16 + v15 + v30 - v14 - v17;
      v101[11] = v31 + v14 + v15 - (v16 + v17);
      int v78 = v19 + v10;
      int v87 = v19 + v10 + v14;
      int v32 = v20 + v10;
      int v85 = v32 - v14;
      int v33 = v16 + v17 + v15;
      v101[12] = v17 + v15 + v87 - v16;
      v101[13] = v33 + v32 - v14;
      int v34 = v12 - v10;
      int v35 = v18 - v10;
      int v83 = v35 + v14;
      int v84 = v12 - v10 - v14;
      v101[14] = v84 - v22;
      v101[15] = v35 + v14 - (v17 + v15) + v16;
      int v36 = v21 - v14;
      int v37 = v79 + v14;
      v101[16] = v36 - v22;
      v101[17] = v79 + v14 - (v17 + v15) + v16;
      int v38 = v81 + v14;
      int v39 = v13 - v14;
      v101[18] = v17 + v15 + v81 + v14 - v16;
      v101[19] = v33 + v39;
      int v40 = v28 - v14;
      int v41 = v27 + v14;
      v101[20] = v16 + v15 + v28 - v14 - v17;
      v101[21] = v41 + v15 - (v16 + v17);
      int v42 = v25 + v14;
      int v43 = v80 - v14;
      v101[22] = v16 + v17 - v15 + v42;
      v101[23] = v17 + v80 - v14 - (v16 + v15);
      int v44 = v31 - v14;
      int v45 = v30 + v14;
      v101[24] = v44 + v15 - (v16 + v17);
      v101[25] = v16 + v15 + v45 - v17;
      int v46 = v29 + v14;
      v101[26] = v17 + v46 - (v16 + v15);
      v101[27] = v16 + v17 - v82;
      int v47 = v35 - v14;
      int v48 = v34 + v14;
      v101[28] = v47 - (v17 + v15) + v16;
      v101[29] = v48 - v22;
      int v49 = v32 + v14;
      int v50 = v78 - v14;
      v101[30] = v33 + v49;
      v101[31] = v17 + v15 + v50 - v16;
      _DWORD v101[32] = v37 + v15 - (v16 + v17);
      v101[33] = v16 + v15 + v36 - v17;
      v101[34] = v17 + v39 - (v16 + v15);
      v101[35] = v16 + v17 - v15 + v38;
      v101[36] = v41 - (v17 + v15) + v16;
      v101[37] = v40 - v22;
      v101[38] = v33 + v43;
      v101[39] = v17 + v15 + v42 - v16;
      v101[40] = v45 - v22;
      v101[41] = v44 - (v17 + v15) + v16;
      v101[42] = v17 + v15 - v16 - v95;
      v101[43] = v33 + v46;
      v101[44] = v16 + v15 + v48 - v17;
      v101[45] = v47 + v15 - (v16 + v17);
      v101[46] = v16 + v17 - v15 + v50;
      v101[47] = v17 + v49 - (v16 + v15);
      v101[48] = v16 + v17 - v15 + v97;
      v101[49] = v17 + v95 - (v16 + v15);
      v101[50] = v16 + v15 + v94 - v17;
      v101[51] = v98 + v15 - (v16 + v17);
      v101[52] = v17 + v15 + v93 - v16;
      v101[53] = v33 + v96;
      v101[54] = v90 - v22;
      v101[55] = v92 - (v17 + v15) + v16;
      v101[56] = v33 + v88;
      v101[57] = v17 + v15 + v89 - v16;
      v101[58] = v86 - (v17 + v15) + v16;
      v101[59] = v91 - v22;
      v101[60] = v17 + v85 - (v16 + v15);
      v101[61] = v16 + v17 - v15 + v87;
      v101[62] = v83 + v15 - (v16 + v17);
      v101[63] = v16 + v15 + v84 - v17;
      uint64_t v51 = v4;
      uint64_t v4 = v99;
      int v52 = (int *)(v77 + 16 * v100);
LABEL_9:
      int v53 = 0;
      unint64_t v54 = v6 >> 1;
      int v55 = (unsigned int *)(v51 + 4 * (v6 >> 1));
      uint64_t v56 = (_DWORD *)((char *)v101 + (v6 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v58 = *v56++;
        int v57 = v58;
        uint64_t v59 = 4 * v6;
        int v60 = *(_DWORD *)(v99 + 4 * v6);
        int v61 = *(_DWORD *)(v99 + ((4 * v6) | 4));
        BOOL v62 = v60 <= v61;
        if (v60 <= v61) {
          int v60 = *(_DWORD *)(v99 + ((4 * v6) | 4));
        }
        unsigned int v63 = v60 + v57;
        if (__OFADD__(v60, v57)) {
          unsigned int v63 = ((v60 + v57) >> 31) ^ 0x80000000;
        }
        unsigned int *v55 = v63;
        BOOL v64 = __OFSUB__(v60, v57);
        signed int v65 = v60 - v57;
        if (v64) {
          signed int v65 = (v65 >> 31) ^ 0x80000000;
        }
        v55[128] = v65;
        int v66 = (4 * v53) | (2 * v62);
        int v67 = *(_DWORD *)(v99 + (v59 | 8));
        int v68 = *(_DWORD *)(v99 + (v59 | 0xC));
        BOOL v69 = v67 <= v68;
        if (v67 > v68) {
          int v68 = v67;
        }
        int v53 = v66 | v69;
        unsigned int v70 = v68 - v57;
        if (__OFSUB__(v68, v57)) {
          unsigned int v70 = ((v68 - v57) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v51 + ((4 * v54) | 4)) = v70;
        BOOL v64 = __OFADD__(v68, v57);
        signed int v71 = v68 + v57;
        if (v64) {
          signed int v71 = (v71 >> 31) ^ 0x80000000;
        }
        v55[129] = v71;
        if ((~(_BYTE)v6 & 0x3C) == 0)
        {
          *v52++ = v53;
          BOOL v72 = v6 >= 0xFC;
          v6 += 4;
          if (v72) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v54 += 2;
        v55 += 2;
        BOOL v72 = v6 >= 0xFC;
        v6 += 4;
      }
      while (!v72);
      if (v53) {
        *int v52 = v53;
      }
LABEL_7:
      a3 += 8;
      uint64_t v5 = v100 + 1;
      uint64_t v3 = v51;
    }
    while (v100 + 1 != v76);
  }
  else
  {
    uint64_t v51 = *(void *)(a1 + 64);
  }
  uint64_t v73 = 0;
  *(void *)(a1 + 64) = v51;
  *(void *)(a1 + 72) = v4;
  return v73;
}

uint64_t sub_100162164(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v65 = *(void *)(a1 + 40);
  if (!v65) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v64 = *(unsigned __int16 *)(a1 + 18);
  if (*(_WORD *)(a1 + 18))
  {
    uint64_t v63 = a1;
    uint64_t v5 = 0;
    do
    {
      uint64_t v72 = v3;
      uint64_t v73 = v5;
      unint64_t v6 = 0;
      int v7 = *a3;
      int v8 = a3[1];
      int v9 = v8 + *a3;
      int v11 = a3[2];
      int v10 = a3[3];
      int v12 = v9 + v11 + v10;
      int v69 = v9 + v11;
      int v13 = a3[4];
      int v14 = a3[5];
      int v71 = v12 + v13;
      int v15 = a3[6];
      int v16 = a3[7];
      int v70 = v11 - v9;
      int v66 = v11 - v9 + v10;
      int v17 = v15 + v13;
      int v18 = v10 - (v9 + v11);
      int v19 = v13 + v16 + v15;
      int v20 = v9 - v11;
      v74[0] = v16 + v15 + v14 + v12 + v13;
      v74[1] = v15 + v13 + v66 - (v16 + v14);
      int v21 = v14 + v13;
      int v22 = v14 + v13 + v15;
      v74[2] = v14 + v18 - v19;
      v74[3] = v20 + v10 - v22 + v16;
      int v23 = v8 - v7;
      int v68 = v8 - v7 - v11;
      int v24 = v16 + v14 + v13;
      int v25 = v7 - v8;
      int v67 = v25 - v11;
      int v26 = v16 + v15 - v13 + v14;
      int v27 = v25 - v11 - v10;
      v74[4] = v15 + v68 - v10 - v24;
      v74[5] = v26 + v27;
      int v28 = v25 + v11;
      int v29 = v23 + v11;
      int v30 = v16 + v13;
      v74[6] = v16 + v13 + v28 - v10 - (v15 + v14);
      v74[7] = v14 + v13 + v29 - v10 - (v16 + v15);
      v74[8] = v15 + v28 - v10 - v24;
      v74[9] = v26 + v29 - v10;
      v74[10] = v16 + v13 + v68 - v10 - (v15 + v14);
      v74[11] = v14 + v13 + v27 - (v16 + v15);
      v74[12] = v19 + v14 + v18;
      v74[13] = v15 + v13 + v20 + v10 - (v16 + v14);
      v74[14] = v14 + v12 - v19;
      v74[15] = v66 - v22 + v16;
      int v31 = v20 - v10;
      v74[16] = v30 + v20 - v10 - (v15 + v14);
      v74[17] = v21 - (v15 + v16) - v12;
      int v32 = v70 - v10;
      int v33 = v69 - v10;
      v74[18] = v15 + v70 - v10 - v24;
      v74[19] = v26 + v69 - v10;
      int v34 = v29 + v10;
      int v35 = v28 + v10;
      unsigned char v74[20] = v14 + v34 - v19;
      v74[21] = v28 + v10 - v22 + v16;
      int v36 = v67 + v10;
      int v37 = v19 + v14 + v67 + v10;
      int v38 = v68 + v10;
      v74[22] = v37;
      v74[23] = v17 + v38 - (v16 + v14);
      v74[24] = v14 + v36 - v19;
      v74[25] = v38 - v22 + v16;
      v74[26] = v19 + v14 + v34;
      v74[27] = v17 + v35 - (v16 + v14);
      v74[28] = v30 + v32 - (v15 + v14);
      v74[29] = v21 + v33 - (v16 + v15);
      v74[30] = v15 + v31 - v24;
      v74[31] = v16 + v15 - v71 + v14;
      uint64_t v39 = v4;
      uint64_t v4 = v72;
      int v40 = (int *)(v65 + 8 * v73);
LABEL_9:
      int v41 = 0;
      unint64_t v42 = v6 >> 1;
      int v43 = (signed int *)(v39 + 256 + 4 * (v6 >> 1));
      int v44 = (_DWORD *)((char *)v74 + (v6 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v46 = *v44++;
        int v45 = v46;
        uint64_t v47 = 4 * v6;
        int v48 = *(_DWORD *)(v72 + 4 * v6);
        int v49 = *(_DWORD *)(v72 + ((4 * v6) | 4));
        BOOL v50 = v48 <= v49;
        if (v48 <= v49) {
          int v48 = *(_DWORD *)(v72 + ((4 * v6) | 4));
        }
        unsigned int v51 = v48 + v45;
        if (__OFADD__(v48, v45)) {
          unsigned int v51 = ((v48 + v45) >> 31) ^ 0x80000000;
        }
        *(v43 - 64) = v51;
        BOOL v52 = __OFSUB__(v48, v45);
        signed int v53 = v48 - v45;
        if (v52) {
          signed int v53 = (v53 >> 31) ^ 0x80000000;
        }
        signed int *v43 = v53;
        int v54 = (4 * v41) | (2 * v50);
        int v55 = *(_DWORD *)(v72 + (v47 | 8));
        int v56 = *(_DWORD *)(v72 + (v47 | 0xC));
        BOOL v57 = v55 <= v56;
        if (v55 > v56) {
          int v56 = v55;
        }
        int v41 = v54 | v57;
        unsigned int v58 = v56 - v45;
        if (__OFSUB__(v56, v45)) {
          unsigned int v58 = ((v56 - v45) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v39 + ((4 * v42) | 4)) = v58;
        BOOL v52 = __OFADD__(v56, v45);
        signed int v59 = v56 + v45;
        if (v52) {
          signed int v59 = (v59 >> 31) ^ 0x80000000;
        }
        v43[1] = v59;
        if ((~(_BYTE)v6 & 0x3C) == 0)
        {
          *v40++ = v41;
          BOOL v60 = v6 >= 0x7C;
          v6 += 4;
          if (v60) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v42 += 2;
        v43 += 2;
        BOOL v60 = v6 >= 0x7C;
        v6 += 4;
      }
      while (!v60);
      if (v41) {
        *int v40 = v41;
      }
LABEL_7:
      a3 += 8;
      uint64_t v5 = v73 + 1;
      uint64_t v3 = v39;
    }
    while (v73 + 1 != v64);
    uint64_t v3 = v39;
    a1 = v63;
  }
  uint64_t v61 = 0;
  *(void *)(a1 + 64) = v3;
  *(void *)(a1 + 72) = v4;
  return v61;
}

uint64_t sub_100162568(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v85 = *(void *)(a1 + 40);
  if (!v85) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v5 = *(unsigned __int16 *)(a1 + 18);
  long long v191 = 0u;
  long long v192 = 0u;
  long long v189 = 0u;
  long long v190 = 0u;
  long long v187 = 0u;
  long long v188 = 0u;
  long long v185 = 0u;
  long long v186 = 0u;
  long long v183 = 0u;
  long long v184 = 0u;
  long long v182 = 0u;
  uint64_t v84 = v5;
  if (v5)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v102 = v3;
      uint64_t v104 = v6;
      long long v105 = a3;
      unint64_t v7 = 0;
      int v8 = *a3;
      int v9 = a3[1];
      int v11 = a3[2];
      int v10 = a3[3];
      int v12 = a3[4];
      int v13 = a3[5];
      int v14 = a3[6];
      int v15 = v9 + *a3;
      int v16 = v13 + v12;
      int v17 = v10 - (v15 + v11);
      int v103 = v15 - v11 + v10;
      int v99 = v13 + v12 + v103;
      int v100 = v17 - v12 + v13;
      int v101 = v12 - v13 - (v15 + v11 + v10);
      int v146 = v100 + v14;
      int v147 = v99 - v14;
      int v94 = v15 + v11 - v10;
      int v95 = v15 - v11 - v10;
      int v98 = v95 - (v13 + v12);
      int v148 = v101 + v14;
      int v149 = v98 - v14;
      int v18 = v11 - v15 - v10;
      int v96 = v18 + v12 - v13;
      int v97 = v94 - (v13 + v12);
      int v152 = v97 - v14;
      int v153 = v96 + v14;
      int v162 = v98 - v14;
      int v19 = v15 + v11 + v10;
      int v20 = v19 + v12;
      int v21 = v19 + v12 + v13;
      int v163 = v101 + v14;
      int v22 = v11 - v15 + v10;
      int v164 = v99 - v14;
      int v23 = v22 - v12 + v13;
      int v24 = v9 - v8;
      int v165 = v100 + v14;
      int v25 = v9 - v8 - v11;
      int v26 = v8 - v9;
      int v166 = v96 + v14;
      int v27 = v26 - v11;
      int v28 = v26 + v11;
      int v167 = v97 - v14;
      int v29 = v24 + v11;
      int v30 = v24 + v11 + v10;
      int v150 = v21 - v14;
      int v151 = v23 + v14;
      int v168 = v23 + v14;
      int v93 = v30 - (v13 + v12);
      int v169 = v21 - v14;
      int v157 = v93 - v14;
      int v170 = v93 - v14;
      int v31 = v25 - v10;
      int v32 = v25 + v10;
      int v33 = v27 - v10;
      int v34 = v27 + v10;
      int v35 = v29 - v10;
      int v36 = v28 - v10;
      int v37 = v28 + v10;
      int v92 = v37 + v12 - v13;
      int v156 = v92 + v14;
      int v171 = v92 + v14;
      int v91 = v13 + v12 + v35;
      int v155 = v91 - v14;
      int v172 = v91 - v14;
      int v90 = v36 - v12 + v13;
      int v154 = v90 + v14;
      int v173 = v90 + v14;
      int v89 = v34 + v12 - v13;
      int v161 = v89 + v14;
      int v174 = v89 + v14;
      int v88 = v32 - (v13 + v12);
      int v160 = v88 - v14;
      int v175 = v88 - v14;
      int v38 = v33 - v12;
      int v39 = v33 + v12;
      int v40 = v34 - v12;
      int v41 = v36 + v12;
      int v42 = v37 - v12;
      int v43 = v22 + v12;
      int v44 = v18 - v12;
      int v45 = v17 + v12;
      int v159 = v38 + v13 + v14;
      int v176 = v159;
      int v46 = v16 + v31;
      int v158 = v16 + v31 - v14;
      int v177 = v158;
      int v87 = v16 + v30;
      int v133 = v16 + v30 + v14;
      int v178 = v133;
      int v86 = v42 + v13;
      int v132 = v42 + v13 - v14;
      int v179 = v132;
      int v47 = v39 - v13;
      int v48 = v40 + v13;
      int v49 = v41 - v13;
      int v50 = v43 - v13;
      int v51 = v13 - v20;
      int v52 = v35 - v16;
      int v131 = v35 - v16 + v14;
      int v180 = v131;
      int v130 = v41 - v13 - v14;
      int v181 = v130;
      int v53 = v31 - v16;
      int v54 = v16 + v32;
      int v55 = v19 - v16;
      int v56 = v16 + v94;
      int v57 = v103 - v16;
      int v58 = v16 + v95;
      int v137 = v48 - v14;
      LODWORD(v182) = v48 - v14;
      int v136 = v54 + v14;
      DWORD1(v182) = v54 + v14;
      int v135 = v47 - v14;
      DWORD2(v182) = v47 - v14;
      int v134 = v53 + v14;
      HIDWORD(v182) = v53 + v14;
      int v141 = v58 + v14;
      LODWORD(v183) = v58 + v14;
      int v140 = v51 - v14;
      DWORD1(v183) = v51 - v14;
      int v139 = v57 + v14;
      DWORD2(v183) = v57 + v14;
      int v138 = v45 - v13 - v14;
      HIDWORD(v183) = v138;
      int v145 = v44 + v13 - v14;
      LODWORD(v184) = v145;
      int v144 = v56 + v14;
      DWORD1(v184) = v56 + v14;
      int v143 = v50 - v14;
      DWORD2(v184) = v50 - v14;
      int v142 = v55 + v14;
      HIDWORD(v184) = v55 + v14;
      int v116 = v54 - v14;
      int v117 = v48 + v14;
      LODWORD(v185) = v48 + v14;
      DWORD1(v185) = v54 - v14;
      int v114 = v53 - v14;
      int v115 = v47 + v14;
      DWORD2(v185) = v47 + v14;
      HIDWORD(v185) = v53 - v14;
      int v120 = v86 + v14;
      int v121 = v87 - v14;
      LODWORD(v186) = v87 - v14;
      DWORD1(v186) = v86 + v14;
      int v118 = v49 + v14;
      int v119 = v52 - v14;
      DWORD2(v186) = v52 - v14;
      HIDWORD(v186) = v49 + v14;
      int v124 = v56 - v14;
      int v125 = v44 + v13 + v14;
      LODWORD(v187) = v125;
      DWORD1(v187) = v56 - v14;
      int v122 = v55 - v14;
      int v123 = v50 + v14;
      DWORD2(v187) = v50 + v14;
      HIDWORD(v187) = v55 - v14;
      int v128 = v51 + v14;
      int v129 = v58 - v14;
      LODWORD(v188) = v58 - v14;
      DWORD1(v188) = v51 + v14;
      int v126 = v45 - v13 + v14;
      int v127 = v57 - v14;
      DWORD2(v188) = v57 - v14;
      HIDWORD(v188) = v126;
      v106[2] = v97 + v14;
      v106[3] = v96 - v14;
      LODWORD(v189) = v96 - v14;
      DWORD1(v189) = v97 + v14;
      v106[0] = v21 + v14;
      v106[1] = v23 - v14;
      DWORD2(v189) = v23 - v14;
      HIDWORD(v189) = v21 + v14;
      v106[6] = v101 - v14;
      v106[7] = v98 + v14;
      LODWORD(v190) = v98 + v14;
      DWORD1(v190) = v101 - v14;
      DWORD2(v190) = v99 + v14;
      v106[4] = v100 - v14;
      v106[5] = v99 + v14;
      HIDWORD(v190) = v100 - v14;
      int v108 = v88 + v14;
      int v109 = v89 - v14;
      LODWORD(v191) = v89 - v14;
      DWORD1(v191) = v88 + v14;
      int v107 = v38 + v13 - v14;
      DWORD2(v191) = v107;
      v106[8] = v46 + v14;
      HIDWORD(v191) = v46 + v14;
      int v113 = v93 + v14;
      LODWORD(v192) = v93 + v14;
      int v112 = v92 - v14;
      DWORD1(v192) = v92 - v14;
      int v111 = v91 + v14;
      DWORD2(v192) = v91 + v14;
      int v110 = v90 - v14;
      uint64_t v59 = v4;
      uint64_t v4 = v102;
      HIDWORD(v192) = v110;
      BOOL v60 = (int *)(v85 + 32 * v104);
LABEL_9:
      int v61 = 0;
      unint64_t v62 = v7 >> 1;
      uint64_t v63 = (unsigned int *)(v59 + 4 * (v7 >> 1));
      uint64_t v64 = (_DWORD *)((char *)v106 + (v7 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v66 = *v64++;
        int v65 = v66;
        uint64_t v67 = 4 * v7;
        int v68 = *(_DWORD *)(v102 + 4 * v7);
        int v69 = *(_DWORD *)(v102 + ((4 * v7) | 4));
        BOOL v70 = v68 <= v69;
        if (v68 <= v69) {
          int v68 = *(_DWORD *)(v102 + ((4 * v7) | 4));
        }
        unsigned int v71 = v68 + v65;
        if (__OFADD__(v68, v65)) {
          unsigned int v71 = ((v68 + v65) >> 31) ^ 0x80000000;
        }
        *uint64_t v63 = v71;
        BOOL v72 = __OFSUB__(v68, v65);
        signed int v73 = v68 - v65;
        if (v72) {
          signed int v73 = (v73 >> 31) ^ 0x80000000;
        }
        v63[256] = v73;
        int v74 = (4 * v61) | (2 * v70);
        int v75 = *(_DWORD *)(v102 + (v67 | 8));
        int v76 = *(_DWORD *)(v102 + (v67 | 0xC));
        BOOL v77 = v75 <= v76;
        if (v75 > v76) {
          int v76 = v75;
        }
        int v61 = v74 | v77;
        unsigned int v78 = v76 - v65;
        if (__OFSUB__(v76, v65)) {
          unsigned int v78 = ((v76 - v65) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v59 + ((4 * v62) | 4)) = v78;
        BOOL v72 = __OFADD__(v76, v65);
        signed int v79 = v76 + v65;
        if (v72) {
          signed int v79 = (v79 >> 31) ^ 0x80000000;
        }
        v63[257] = v79;
        if ((~(_BYTE)v7 & 0x3C) == 0)
        {
          *v60++ = v61;
          BOOL v80 = v7 >= 0x1FC;
          v7 += 4;
          if (v80) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v62 += 2;
        v63 += 2;
        BOOL v80 = v7 >= 0x1FC;
        v7 += 4;
      }
      while (!v80);
      if (v61) {
        int *v60 = v61;
      }
LABEL_7:
      a3 = v105 + 7;
      uint64_t v6 = v104 + 1;
      uint64_t v3 = v59;
    }
    while (v104 + 1 != v84);
  }
  else
  {
    uint64_t v59 = v3;
  }
  uint64_t v81 = 0;
  *(void *)(a1 + 64) = v59;
  *(void *)(a1 + 72) = v4;
  return v81;
}

uint64_t sub_100162C4C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v76 = *(void *)(a1 + 40);
  if (!v76) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v75 = *(unsigned __int16 *)(a1 + 18);
  if (*(_WORD *)(a1 + 18))
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v81 = v3;
      uint64_t v90 = v5;
      unint64_t v6 = 0;
      int v8 = *a3;
      int v7 = a3[1];
      int v9 = v7 + *a3;
      int v10 = a3[2];
      int v11 = a3[3];
      int v12 = v9 + v10;
      int v13 = v9 + v10 + v11;
      int v15 = a3[4];
      int v14 = a3[5];
      int v87 = v13 + v15;
      int v79 = v13 + v15 + v14;
      int v16 = a3[6];
      int v17 = *a3 - v7 - v10;
      int v77 = v17 + v11;
      int v89 = v17 + v11 - v15;
      int v18 = v9 - v10;
      int v19 = v9 - v10 - v11;
      int v20 = *a3 - v7 + v10;
      v91[0] = v79 + v16;
      v91[1] = v16 + v14 + v89;
      int v21 = v20 - v11;
      int v88 = v20 - v11 + v15;
      int v22 = v10 - v9;
      v91[2] = v19 - v15 - (v16 + v14);
      v91[3] = v88 - (v16 + v14);
      int v78 = v10 - v9 - v11;
      int v23 = v7 - v8;
      int v24 = v23 - v10;
      int v25 = v23 - v10 - v11;
      int v86 = v25 - v15;
      v91[4] = v78 + v15 - v14 + v16;
      v91[5] = v25 - v15 - v14 + v16;
      int v26 = v11 - (v9 + v10);
      int v85 = v26 - v15;
      int v27 = v23 + v10;
      int v28 = v27 + v11;
      int v83 = v27 + v11 + v15;
      v91[6] = v26 - v15 + v14 - v16;
      v91[7] = v83 + v14 - v16;
      int v84 = v15 - v13;
      int v29 = v27 - v11;
      int v80 = v27 - v11 - v15;
      v91[8] = v15 - v13 - v14 + v16;
      v91[9] = v80 - v14 + v16;
      int v30 = v22 + v11;
      int v82 = v22 + v11 - v15;
      int v31 = v24 + v11;
      int v32 = v24 + v11 + v15;
      v91[10] = v82 + v14 - v16;
      v91[11] = v32 + v14 - v16;
      int v33 = v18 + v11;
      int v34 = v20 + v11;
      int v35 = v18 + v11 + v15;
      int v36 = v20 + v11 - v15;
      v91[12] = v16 + v14 + v35;
      v91[13] = v16 + v14 + v36;
      int v37 = v12 - v11;
      int v38 = v17 - v11;
      int v39 = v12 - v11 - v15;
      int v40 = v38 + v15;
      v91[14] = v39 - (v16 + v14);
      v91[15] = v38 + v15 - (v16 + v14);
      v91[16] = v21 - v15 - (v16 + v14);
      v91[17] = v19 + v15 - (v16 + v14);
      int v41 = v13 - v15;
      v91[18] = v16 + v14 + v77 + v15;
      v91[19] = v16 + v14 + v41;
      int v42 = v26 + v15;
      v91[20] = v28 - v15 + v14 - v16;
      v91[21] = v42 + v14 - v16;
      int v43 = v25 + v15;
      v91[22] = v43 - v14 + v16;
      v91[23] = v78 - v15 - v14 + v16;
      int v44 = v30 + v15;
      v91[24] = v31 - v15 + v14 - v16;
      v91[25] = v44 + v14 - v16;
      int v45 = v29 + v15;
      v91[26] = v45 - v14 + v16;
      v91[27] = v16 - v79;
      int v46 = v38 - v15;
      int v47 = v37 + v15;
      v91[28] = v46 - (v16 + v14);
      v91[29] = v47 - (v16 + v14);
      int v48 = v34 + v15;
      int v49 = v33 - v15;
      v91[30] = v16 + v14 + v48;
      v91[31] = v16 + v14 + v49;
      v91[32] = v19 + v15 + v14 - v16;
      v91[33] = v21 - v15 + v14 - v16;
      v91[34] = v41 - v14 + v16;
      v91[35] = v77 + v15 - v14 + v16;
      v91[36] = v42 - (v16 + v14);
      v91[37] = v28 - v15 - (v16 + v14);
      v91[38] = v16 + v14 + v78 - v15;
      v91[39] = v16 + v14 + v43;
      v91[40] = v44 - (v16 + v14);
      v91[41] = v31 - v15 - (v16 + v14);
      v91[42] = v16 + v14 - v87;
      v91[43] = v16 + v14 + v45;
      v91[44] = v47 + v14 - v16;
      v91[45] = v46 + v14 - v16;
      v91[46] = v49 - v14 + v16;
      v91[47] = v48 - v14 + v16;
      v91[48] = v89 - v14 + v16;
      v91[49] = v87 - v14 + v16;
      v91[50] = v88 + v14 - v16;
      v91[51] = v19 - v15 + v14 - v16;
      v91[52] = v16 + v14 + v86;
      v91[53] = v16 + v14 + v78 + v15;
      v91[54] = v83 - (v16 + v14);
      v91[55] = v85 - (v16 + v14);
      v91[56] = v16 + v14 + v80;
      v91[57] = v16 + v14 + v84;
      v91[58] = v32 - (v16 + v14);
      v91[59] = v82 - (v16 + v14);
      v91[60] = v36 - v14 + v16;
      v91[61] = v35 - v14 + v16;
      v91[62] = v40 + v14 - v16;
      v91[63] = v39 + v14 - v16;
      uint64_t v50 = v4;
      uint64_t v4 = v81;
      int v51 = (int *)(v76 + 16 * v90);
LABEL_9:
      int v52 = 0;
      unint64_t v53 = v6 >> 1;
      int v54 = (unsigned int *)(v50 + 4 * (v6 >> 1));
      int v55 = (_DWORD *)((char *)v91 + (v6 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v57 = *v55++;
        int v56 = v57;
        uint64_t v58 = 4 * v6;
        int v59 = *(_DWORD *)(v81 + 4 * v6);
        int v60 = *(_DWORD *)(v81 + ((4 * v6) | 4));
        BOOL v61 = v59 <= v60;
        if (v59 <= v60) {
          int v59 = *(_DWORD *)(v81 + ((4 * v6) | 4));
        }
        unsigned int v62 = v59 + v56;
        if (__OFADD__(v59, v56)) {
          unsigned int v62 = ((v59 + v56) >> 31) ^ 0x80000000;
        }
        unsigned int *v54 = v62;
        BOOL v63 = __OFSUB__(v59, v56);
        signed int v64 = v59 - v56;
        if (v63) {
          signed int v64 = (v64 >> 31) ^ 0x80000000;
        }
        v54[128] = v64;
        int v65 = (4 * v52) | (2 * v61);
        int v66 = *(_DWORD *)(v81 + (v58 | 8));
        int v67 = *(_DWORD *)(v81 + (v58 | 0xC));
        BOOL v68 = v66 <= v67;
        if (v66 > v67) {
          int v67 = v66;
        }
        int v52 = v65 | v68;
        unsigned int v69 = v67 - v56;
        if (__OFSUB__(v67, v56)) {
          unsigned int v69 = ((v67 - v56) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v50 + ((4 * v53) | 4)) = v69;
        BOOL v63 = __OFADD__(v67, v56);
        signed int v70 = v67 + v56;
        if (v63) {
          signed int v70 = (v70 >> 31) ^ 0x80000000;
        }
        v54[129] = v70;
        if ((~(_BYTE)v6 & 0x3C) == 0)
        {
          *v51++ = v52;
          BOOL v71 = v6 >= 0xFC;
          v6 += 4;
          if (v71) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v53 += 2;
        v54 += 2;
        BOOL v71 = v6 >= 0xFC;
        v6 += 4;
      }
      while (!v71);
      if (v52) {
        int *v51 = v52;
      }
LABEL_7:
      a3 += 7;
      uint64_t v5 = v90 + 1;
      uint64_t v3 = v50;
    }
    while (v90 + 1 != v75);
  }
  else
  {
    uint64_t v50 = *(void *)(a1 + 64);
  }
  uint64_t v72 = 0;
  *(void *)(a1 + 64) = v50;
  *(void *)(a1 + 72) = v4;
  return v72;
}

uint64_t sub_1001631E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v61 = *(void *)(a1 + 40);
  if (!v61) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v60 = *(unsigned __int16 *)(a1 + 18);
  if (*(_WORD *)(a1 + 18))
  {
    uint64_t v59 = a1;
    uint64_t v5 = 0;
    do
    {
      uint64_t v62 = v3;
      unint64_t v6 = 0;
      int v7 = *a3;
      int v8 = a3[1];
      int v9 = v8 + *a3;
      int v11 = a3[2];
      int v10 = a3[3];
      int v12 = v9 + v11 + v10;
      int v13 = a3[4];
      int v14 = a3[5];
      int v15 = a3[6];
      int v16 = v11 - v9 + v10;
      int v17 = v10 - (v9 + v11);
      v63[0] = v15 + v14 + v12 + v13;
      v63[1] = v15 + v13 + v16 - v14;
      int v18 = v8 - v7;
      int v19 = v8 - v7 - v11;
      v63[2] = v14 + v17 - (v15 + v13);
      v63[3] = v9 - v11 + v10 - (v14 + v13 + v15);
      int v20 = v7 - v8;
      int v21 = v20 - v11;
      int v22 = v15 + v14 - v13;
      void v63[4] = v19 - v10 - (v14 + v13) + v15;
      v63[5] = v22 + v20 - v11 - v10;
      int v23 = v20 + v11;
      int v24 = v20 + v11 - v10;
      int v25 = v18 + v11;
      v63[6] = v24 + v13 - (v15 + v14);
      v63[7] = v14 + v13 + v25 - v10 - v15;
      v63[8] = v24 - (v14 + v13) + v15;
      v63[9] = v22 + v25 - v10;
      v63[10] = v19 - v10 + v13 - (v15 + v14);
      v63[11] = v14 + v13 + v21 - v10 - v15;
      int v26 = v15 + v14 + v13;
      v63[12] = v26 + v17;
      v63[13] = v15 + v13 + v9 - v11 + v10 - v14;
      v63[14] = v14 + v12 - (v15 + v13);
      v63[15] = v16 - (v14 + v13 + v15);
      int v27 = v9 - v11 - v10;
      v63[16] = v27 + v13 - (v15 + v14);
      v63[17] = v14 + v13 - v15 - v12;
      int v28 = v11 - v9 - v10;
      int v29 = v9 + v11 - v10;
      v63[18] = v28 - (v14 + v13) + v15;
      v63[19] = v22 + v29;
      int v30 = v25 + v10;
      int v31 = v23 + v10;
      v63[20] = v14 + v25 + v10 - (v15 + v13);
      v63[21] = v31 - (v14 + v13 + v15);
      int v32 = v21 + v10;
      int v33 = v26 + v21 + v10;
      int v34 = v19 + v10;
      v63[22] = v33;
      v63[23] = v15 + v13 + v34 - v14;
      v63[24] = v14 + v32 - (v15 + v13);
      v63[25] = v34 - (v14 + v13 + v15);
      v63[26] = v26 + v30;
      v63[27] = v15 + v13 + v31 - v14;
      v63[28] = v28 + v13 - (v15 + v14);
      v63[29] = v14 + v13 + v29 - v15;
      v63[30] = v27 - (v14 + v13) + v15;
      v63[31] = v15 + v14 - (v12 + v13);
      uint64_t v35 = v4;
      uint64_t v4 = v62;
      int v36 = (int *)(v61 + 8 * v5);
LABEL_9:
      int v37 = 0;
      unint64_t v38 = v6 >> 1;
      int v39 = (signed int *)(v35 + 256 + 4 * (v6 >> 1));
      int v40 = (_DWORD *)((char *)v63 + (v6 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v42 = *v40++;
        int v41 = v42;
        uint64_t v43 = 4 * v6;
        int v44 = *(_DWORD *)(v62 + 4 * v6);
        int v45 = *(_DWORD *)(v62 + ((4 * v6) | 4));
        BOOL v46 = v44 <= v45;
        if (v44 <= v45) {
          int v44 = *(_DWORD *)(v62 + ((4 * v6) | 4));
        }
        unsigned int v47 = v44 + v41;
        if (__OFADD__(v44, v41)) {
          unsigned int v47 = ((v44 + v41) >> 31) ^ 0x80000000;
        }
        *(v39 - 64) = v47;
        BOOL v48 = __OFSUB__(v44, v41);
        signed int v49 = v44 - v41;
        if (v48) {
          signed int v49 = (v49 >> 31) ^ 0x80000000;
        }
        signed int *v39 = v49;
        int v50 = (4 * v37) | (2 * v46);
        int v51 = *(_DWORD *)(v62 + (v43 | 8));
        int v52 = *(_DWORD *)(v62 + (v43 | 0xC));
        BOOL v53 = v51 <= v52;
        if (v51 > v52) {
          int v52 = v51;
        }
        int v37 = v50 | v53;
        unsigned int v54 = v52 - v41;
        if (__OFSUB__(v52, v41)) {
          unsigned int v54 = ((v52 - v41) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v35 + ((4 * v38) | 4)) = v54;
        BOOL v48 = __OFADD__(v52, v41);
        signed int v55 = v52 + v41;
        if (v48) {
          signed int v55 = (v55 >> 31) ^ 0x80000000;
        }
        v39[1] = v55;
        if ((~(_BYTE)v6 & 0x3C) == 0)
        {
          *v36++ = v37;
          BOOL v56 = v6 >= 0x7C;
          v6 += 4;
          if (v56) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v38 += 2;
        v39 += 2;
        BOOL v56 = v6 >= 0x7C;
        v6 += 4;
      }
      while (!v56);
      if (v37) {
        *int v36 = v37;
      }
LABEL_7:
      a3 += 7;
      ++v5;
      uint64_t v3 = v35;
    }
    while (v5 != v60);
    uint64_t v3 = v35;
    a1 = v59;
  }
  uint64_t v57 = 0;
  *(void *)(a1 + 64) = v3;
  *(void *)(a1 + 72) = v4;
  return v57;
}

uint64_t sub_100163594(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v59 = *(void *)(a1 + 40);
  if (!v59) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v5 = *(unsigned __int16 *)(a1 + 18);
  long long v155 = 0u;
  long long v156 = 0u;
  long long v153 = 0u;
  long long v154 = 0u;
  long long v151 = 0u;
  long long v152 = 0u;
  long long v149 = 0u;
  long long v150 = 0u;
  long long v147 = 0u;
  long long v148 = 0u;
  long long v146 = 0u;
  uint64_t v58 = v5;
  if (v5)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v61 = v6;
      unint64_t v7 = 0;
      int v8 = a3[1];
      int v10 = a3[2];
      int v9 = a3[3];
      int v12 = a3[4];
      int v11 = a3[5];
      int v13 = v8 + *a3;
      int v14 = v13 + v10 + v9;
      int v15 = v8 - *a3;
      int v16 = v15 - v10 - v9;
      int v17 = *a3 - v8;
      int v18 = v17 - v10 - v9;
      int v60 = v15 - v10 + v9;
      unsigned int v78 = v16 - (v11 + v12);
      unsigned int v79 = v18 + v12 - v11;
      int v19 = v17 - v10 + v9;
      unsigned int v80 = v11 + v12 + v60;
      unsigned int v81 = v19 - v12 + v11;
      int v20 = v10 - v13 + v9;
      unsigned int v100 = v80;
      unsigned int v101 = v81;
      *(void *)&long long v146 = __PAIR64__(v80, v81);
      int v21 = v13 + v10 - v9;
      int v22 = v10 - v13 - v9;
      *(void *)&long long v149 = __PAIR64__(v80, v81);
      int v23 = v9 - (v13 + v10);
      int v24 = v13 - v10;
      int v25 = v13 - v10 + v9;
      unsigned int v98 = v78;
      unsigned int v99 = v79;
      int v26 = v24 - v9;
      *((void *)&v146 + 1) = __PAIR64__(v78, v79);
      int v27 = v17 + v10;
      int v28 = v15 + v10;
      int v29 = v27 - v9;
      *((void *)&v149 + 1) = __PAIR64__(v78, v79);
      int v30 = v28 - v9;
      int v31 = v27 + v9;
      int v32 = v28 + v9;
      unsigned int v84 = v31 - v12 + v11;
      unsigned int v85 = v11 + v12 + v32;
      unsigned int v96 = v84;
      unsigned int v97 = v85;
      unsigned int v142 = v85;
      *(void *)&long long v150 = __PAIR64__(v84, v85);
      unsigned int v143 = v84;
      unsigned int v83 = v30 - (v11 + v12);
      unsigned int v94 = v29 + v12 - v11;
      unsigned int v95 = v83;
      unsigned int v144 = v83;
      *((void *)&v150 + 1) = __PAIR64__(v94, v83);
      unsigned int v82 = v94;
      unsigned int v145 = v94;
      unsigned int v88 = v11 + v12 + v21;
      unsigned int v89 = v22 - v12 + v11;
      unsigned int v108 = v88;
      unsigned int v109 = v89;
      *(void *)&long long v148 = __PAIR64__(v88, v89);
      *(void *)&long long v151 = __PAIR64__(v88, v89);
      unsigned int v86 = v14 - (v11 + v12);
      unsigned int v87 = v20 + v12 - v11;
      unsigned int v106 = v86;
      unsigned int v107 = v87;
      *((void *)&v148 + 1) = __PAIR64__(v86, v87);
      *((void *)&v151 + 1) = __PAIR64__(v86, v87);
      unsigned int v92 = v11 - (v14 + v12);
      unsigned int v93 = v11 + v12 + v26;
      unsigned int v104 = v92;
      unsigned int v105 = v93;
      *(void *)&long long v147 = __PAIR64__(v92, v93);
      *(void *)&long long v152 = __PAIR64__(v92, v93);
      unsigned int v90 = v23 + v12 - v11;
      unsigned int v91 = v25 - (v11 + v12);
      unsigned int v102 = v90;
      unsigned int v103 = v91;
      *((void *)&v147 + 1) = __PAIR64__(v90, v91);
      *((void *)&v152 + 1) = __PAIR64__(v90, v91);
      unsigned int v64 = v21 - (v11 + v12);
      unsigned int v65 = v22 + v12 - v11;
      unsigned int v117 = v65;
      unsigned int v130 = v65;
      *(void *)&long long v153 = __PAIR64__(v64, v65);
      unsigned int v116 = v64;
      unsigned int v131 = v64;
      unsigned int v62 = v14 + v12 + v11;
      unsigned int v63 = v20 - v12 + v11;
      unsigned int v115 = v63;
      unsigned int v132 = v63;
      *((void *)&v153 + 1) = __PAIR64__(v62, v63);
      unsigned int v113 = v26 - (v11 + v12);
      unsigned int v114 = v62;
      unsigned int v133 = v62;
      unsigned int v68 = v12 - v11 - v14;
      unsigned int v69 = v113;
      unsigned int v126 = v113;
      *(void *)&long long v154 = __PAIR64__(v68, v113);
      unsigned int v111 = v11 + v12 + v25;
      unsigned int v112 = v68;
      unsigned int v127 = v68;
      unsigned int v66 = v23 - v12 + v11;
      unsigned int v67 = v111;
      unsigned int v128 = v111;
      *((void *)&v154 + 1) = __PAIR64__(v66, v111);
      unsigned int v110 = v66;
      unsigned int v129 = v66;
      unsigned int v72 = v60 - (v11 + v12);
      unsigned int v73 = v19 + v12 - v11;
      unsigned int v125 = v73;
      unsigned int v138 = v73;
      *(void *)&long long v155 = __PAIR64__(v72, v73);
      unsigned int v124 = v72;
      unsigned int v139 = v72;
      unsigned int v70 = v11 + v12 + v16;
      unsigned int v71 = v18 - v12 + v11;
      unsigned int v123 = v71;
      unsigned int v140 = v71;
      *((void *)&v155 + 1) = __PAIR64__(v70, v71);
      unsigned int v122 = v70;
      unsigned int v141 = v70;
      unsigned int v76 = v31 + v12 - v11;
      unsigned int v77 = v32 - (v11 + v12);
      unsigned int v121 = v77;
      unsigned int v134 = v77;
      *(void *)&long long v156 = __PAIR64__(v76, v77);
      unsigned int v120 = v76;
      unsigned int v135 = v76;
      unsigned int v74 = v29 - v12 + v11;
      unsigned int v75 = v11 + v12 + v30;
      unsigned int v119 = v75;
      unsigned int v136 = v75;
      *((void *)&v156 + 1) = __PAIR64__(v74, v75);
      unsigned int v118 = v74;
      uint64_t v33 = v4;
      uint64_t v4 = v3;
      unsigned int v137 = v74;
      int v34 = (int *)(v59 + 32 * v61);
LABEL_9:
      int v35 = 0;
      unint64_t v36 = v7 >> 1;
      int v37 = (unsigned int *)(v33 + 4 * (v7 >> 1));
      unint64_t v38 = (int *)((char *)&v62 + (v7 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        uint64_t v41 = 4 * v7;
        int v42 = *(_DWORD *)(v4 + 4 * v7);
        int v43 = *(_DWORD *)(v4 + ((4 * v7) | 4));
        BOOL v44 = v42 <= v43;
        if (v42 <= v43) {
          int v42 = *(_DWORD *)(v4 + ((4 * v7) | 4));
        }
        unsigned int v45 = v42 + v39;
        if (__OFADD__(v42, v39)) {
          unsigned int v45 = ((v42 + v39) >> 31) ^ 0x80000000;
        }
        unsigned int *v37 = v45;
        BOOL v46 = __OFSUB__(v42, v39);
        signed int v47 = v42 - v39;
        if (v46) {
          signed int v47 = (v47 >> 31) ^ 0x80000000;
        }
        v37[256] = v47;
        int v48 = (4 * v35) | (2 * v44);
        int v49 = *(_DWORD *)(v4 + (v41 | 8));
        int v50 = *(_DWORD *)(v4 + (v41 | 0xC));
        BOOL v51 = v49 <= v50;
        if (v49 > v50) {
          int v50 = v49;
        }
        int v35 = v48 | v51;
        unsigned int v52 = v50 - v39;
        if (__OFSUB__(v50, v39)) {
          unsigned int v52 = ((v50 - v39) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v33 + ((4 * v36) | 4)) = v52;
        BOOL v46 = __OFADD__(v50, v39);
        signed int v53 = v50 + v39;
        if (v46) {
          signed int v53 = (v53 >> 31) ^ 0x80000000;
        }
        v37[257] = v53;
        if ((~(_BYTE)v7 & 0x3C) == 0)
        {
          *v34++ = v35;
          BOOL v54 = v7 >= 0x1FC;
          v7 += 4;
          if (v54) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v36 += 2;
        v37 += 2;
        BOOL v54 = v7 >= 0x1FC;
        v7 += 4;
      }
      while (!v54);
      if (v35) {
        *int v34 = v35;
      }
LABEL_7:
      a3 += 6;
      uint64_t v6 = v61 + 1;
      uint64_t v3 = v33;
    }
    while (v61 + 1 != v58);
  }
  else
  {
    uint64_t v33 = v3;
  }
  uint64_t v55 = 0;
  *(void *)(a1 + 64) = v33;
  *(void *)(a1 + 72) = v4;
  return v55;
}

uint64_t sub_100163A88(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v83 = *(void *)(a1 + 40);
  if (!v83) {
    return 4;
  }
  uint64_t v3 = *(void *)(a1 + 64);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (!v4) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v82 = *(unsigned __int16 *)(a1 + 18);
  if (*(_WORD *)(a1 + 18))
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v93 = v3;
      uint64_t v94 = v5;
      unint64_t v6 = 0;
      int v7 = *a3;
      int v8 = a3[1];
      int v9 = a3[2];
      int v10 = a3[3];
      int v12 = a3[4];
      int v11 = a3[5];
      unsigned int v95 = a3;
      int v13 = v8 + *a3;
      int v14 = *a3 - v8 - v9;
      int v15 = v14 + v10;
      int v91 = v14 + v10 - v12;
      int v16 = v13 - v9;
      int v17 = v13 - v9 - v10;
      int v92 = v17 - v12;
      int v18 = *a3 - v8 + v9;
      int v19 = v18 - v10;
      int v89 = v18 - v10 + v12;
      v96[1] = v91 + v11;
      v96[2] = v17 - v12 - v11;
      int v20 = v9 - (v8 + v7);
      int v84 = v20 - v10;
      int v90 = v20 - v10 + v12;
      int v21 = v8 - v7;
      int v22 = v21 - v9;
      int v23 = v21 - v9 - v10;
      int v87 = v23 - v12;
      v96[3] = v89 - v11;
      void v96[4] = v90 - v11;
      v96[5] = v23 - v12 - v11;
      int v24 = v13 + v9;
      int v25 = v10 - (v13 + v9);
      int v88 = v25 - v12;
      int v26 = v21 + v9;
      int v27 = v26 + v10;
      int v85 = v26 + v10 + v12;
      v96[6] = v25 - v12 + v11;
      v96[7] = v85 + v11;
      int v28 = v13 + v9 + v10;
      int v86 = v12 - v28;
      int v29 = v26 - v10;
      int v30 = v26 - v10 - v12;
      v96[8] = v12 - v28 - v11;
      v96[9] = v30 - v11;
      int v31 = v20 + v10;
      int v32 = v20 + v10 - v12;
      int v33 = v22 + v10;
      int v34 = v22 + v10 + v12;
      v96[10] = v32 + v11;
      v96[11] = v34 + v11;
      int v35 = v13 - v9 + v10;
      int v36 = v18 + v10;
      int v37 = v16 + v10 + v12;
      int v38 = v18 + v10 - v12;
      v96[12] = v37 + v11;
      v96[13] = v38 + v11;
      int v39 = v24 - v10;
      int v40 = v14 - v10;
      int v41 = v24 - v10 - v12;
      int v42 = v40 + v12;
      v96[14] = v41 - v11;
      v96[15] = v40 + v12 - v11;
      int v43 = v19 - v12;
      int v44 = v17 + v12;
      v96[16] = v43 - v11;
      v96[17] = v17 + v12 - v11;
      int v45 = v15 + v12;
      int v46 = v28 - v12;
      v96[18] = v45 + v11;
      v96[19] = v28 - v12 + v11;
      int v47 = v27 - v12;
      int v48 = v25 + v12;
      v96[20] = v47 + v11;
      v96[21] = v48 + v11;
      int v49 = v23 + v12;
      v96[22] = v49 - v11;
      v96[23] = v84 - v12 - v11;
      v96[24] = v33 - v12 + v11;
      v96[25] = v31 + v12 + v11;
      int v50 = v28 + v12;
      v96[0] = v50 + v11;
      int v51 = v29 + v12;
      v96[26] = v51 - v11;
      v96[27] = -(v50 + v11);
      int v52 = v40 - v12;
      int v53 = v39 + v12;
      v96[28] = v52 - v11;
      v96[29] = v53 - v11;
      int v54 = v36 + v12;
      int v55 = v35 - v12;
      v96[30] = v54 + v11;
      v96[31] = v55 + v11;
      v96[32] = v44 + v11;
      v96[33] = v43 + v11;
      v96[34] = v46 - v11;
      v96[35] = v45 - v11;
      v96[36] = v48 - v11;
      v96[37] = v47 - v11;
      v96[38] = v84 - v12 + v11;
      v96[39] = v49 + v11;
      v96[40] = v31 + v12 - v11;
      v96[41] = v33 - v12 - v11;
      v96[42] = v11 - v50;
      v96[43] = v51 + v11;
      v96[44] = v53 + v11;
      v96[45] = v52 + v11;
      v96[46] = v55 - v11;
      v96[47] = v54 - v11;
      v96[48] = v91 - v11;
      v96[49] = v50 - v11;
      v96[50] = v89 + v11;
      v96[51] = v92 + v11;
      v96[52] = v87 + v11;
      v96[53] = v90 + v11;
      v96[54] = v85 - v11;
      v96[55] = v88 - v11;
      v96[56] = v30 + v11;
      v96[57] = v86 + v11;
      v96[58] = v34 - v11;
      v96[59] = v32 - v11;
      int v56 = v41 + v11;
      v96[60] = v38 - v11;
      v96[61] = v37 - v11;
      v96[62] = v42 + v11;
      uint64_t v57 = v4;
      uint64_t v4 = v93;
      v96[63] = v56;
      uint64_t v58 = (int *)(v83 + 16 * v94);
LABEL_9:
      int v59 = 0;
      unint64_t v60 = v6 >> 1;
      uint64_t v61 = (unsigned int *)(v57 + 4 * (v6 >> 1));
      unsigned int v62 = (_DWORD *)((char *)v96 + (v6 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v64 = *v62++;
        int v63 = v64;
        uint64_t v65 = 4 * v6;
        int v66 = *(_DWORD *)(v93 + 4 * v6);
        int v67 = *(_DWORD *)(v93 + ((4 * v6) | 4));
        BOOL v68 = v66 <= v67;
        if (v66 <= v67) {
          int v66 = *(_DWORD *)(v93 + ((4 * v6) | 4));
        }
        unsigned int v69 = v66 + v63;
        if (__OFADD__(v66, v63)) {
          unsigned int v69 = ((v66 + v63) >> 31) ^ 0x80000000;
        }
        unsigned int *v61 = v69;
        BOOL v70 = __OFSUB__(v66, v63);
        signed int v71 = v66 - v63;
        if (v70) {
          signed int v71 = (v71 >> 31) ^ 0x80000000;
        }
        v61[128] = v71;
        int v72 = (4 * v59) | (2 * v68);
        int v73 = *(_DWORD *)(v93 + (v65 | 8));
        int v74 = *(_DWORD *)(v93 + (v65 | 0xC));
        BOOL v75 = v73 <= v74;
        if (v73 > v74) {
          int v74 = v73;
        }
        int v59 = v72 | v75;
        unsigned int v76 = v74 - v63;
        if (__OFSUB__(v74, v63)) {
          unsigned int v76 = ((v74 - v63) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v57 + ((4 * v60) | 4)) = v76;
        BOOL v70 = __OFADD__(v74, v63);
        signed int v77 = v74 + v63;
        if (v70) {
          signed int v77 = (v77 >> 31) ^ 0x80000000;
        }
        v61[129] = v77;
        if ((~(_BYTE)v6 & 0x3C) == 0)
        {
          *v58++ = v59;
          BOOL v78 = v6 >= 0xFC;
          v6 += 4;
          if (v78) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v60 += 2;
        v61 += 2;
        BOOL v78 = v6 >= 0xFC;
        v6 += 4;
      }
      while (!v78);
      if (v59) {
        *uint64_t v58 = v59;
      }
LABEL_7:
      a3 = v95 + 6;
      uint64_t v5 = v94 + 1;
      uint64_t v3 = v57;
    }
    while (v94 + 1 != v82);
  }
  else
  {
    uint64_t v57 = *(void *)(a1 + 64);
  }
  uint64_t v79 = 0;
  *(void *)(a1 + 64) = v57;
  *(void *)(a1 + 72) = v4;
  return v79;
}

uint64_t sub_100163F78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = *(void *)(a1 + 40);
  if (!v3) {
    return 4;
  }
  uint64_t v4 = *(void *)(a1 + 64);
  if (!v4) {
    return 4;
  }
  uint64_t v5 = *(void *)(a1 + 72);
  if (!v5) {
    return 4;
  }
  if (!a3) {
    return 3;
  }
  uint64_t v62 = *(unsigned __int16 *)(a1 + 18);
  if (*(_WORD *)(a1 + 18))
  {
    uint64_t v6 = 0;
    do
    {
      unint64_t v7 = 0;
      int v8 = *a3;
      int v9 = a3[1];
      int v10 = v9 + *a3;
      int v12 = a3[2];
      int v11 = a3[3];
      int v13 = v10 + v12;
      int v14 = v10 + v12 + v11;
      int v15 = a3[4];
      int v16 = a3[5];
      int v17 = v14 + v15;
      int v18 = v12 - v10;
      int v19 = v12 - v10 + v11;
      int v20 = v11 - (v10 + v12);
      int v21 = v10 - v12;
      int v22 = v10 - v12 + v11;
      v63[0] = v14 + v15 + v16;
      v63[1] = v19 + v15 - v16;
      int v23 = v9 - v8;
      int v24 = v9 - v8 - v12;
      v63[2] = v20 - v15 + v16;
      v63[3] = v22 - (v16 + v15);
      int v25 = v8 - v9;
      int v26 = v25 - v12;
      int v27 = v25 - v12 - v11;
      void v63[4] = v24 - v11 - (v16 + v15);
      v63[5] = v27 - v15 + v16;
      int v28 = v25 + v12;
      int v29 = v25 + v12 - v11;
      int v30 = v23 + v12;
      v63[6] = v29 + v15 - v16;
      v63[7] = v16 + v15 + v30 - v11;
      v63[8] = v29 - (v16 + v15);
      v63[9] = v30 - v11 - v15 + v16;
      v63[10] = v24 - v11 + v15 - v16;
      v63[11] = v16 + v15 + v27;
      v63[12] = v16 + v15 + v20;
      v63[13] = v22 + v15 - v16;
      v63[14] = v14 - v15 + v16;
      v63[15] = v19 - (v16 + v15);
      int v31 = v21 - v11;
      v63[16] = v21 - v11 + v15 - v16;
      v63[17] = v16 + v15 - v14;
      int v32 = v18 - v11;
      int v33 = v13 - v11;
      v63[18] = v18 - v11 - (v16 + v15);
      v63[19] = v33 - v15 + v16;
      int v34 = v30 + v11;
      int v35 = v28 + v11;
      v63[20] = v30 + v11 - v15 + v16;
      v63[21] = v35 - (v16 + v15);
      int v36 = v26 + v11;
      int v37 = v24 + v11;
      v63[22] = v16 + v15 + v36;
      v63[23] = v37 + v15 - v16;
      v63[24] = v36 - v15 + v16;
      v63[25] = v37 - (v16 + v15);
      uint64_t v38 = v5;
      v63[26] = v16 + v15 + v34;
      v63[27] = v35 + v15 - v16;
      v63[28] = v32 + v15 - v16;
      v63[29] = v16 + v15 + v33;
      v63[30] = v31 - (v16 + v15);
      v63[31] = v16 - v17;
      uint64_t v5 = v4;
      int v39 = (int *)(v3 + 8 * v6);
LABEL_9:
      int v40 = 0;
      unint64_t v41 = v7 >> 1;
      int v42 = (signed int *)(v38 + 256 + 4 * (v7 >> 1));
      int v43 = (_DWORD *)((char *)v63 + (v7 & 0xFFFFFFFFFFFFFFFCLL));
      do
      {
        int v45 = *v43++;
        int v44 = v45;
        uint64_t v46 = 4 * v7;
        int v47 = *(_DWORD *)(v5 + 4 * v7);
        int v48 = *(_DWORD *)(v5 + ((4 * v7) | 4));
        BOOL v49 = v47 <= v48;
        if (v47 <= v48) {
          int v47 = *(_DWORD *)(v5 + ((4 * v7) | 4));
        }
        unsigned int v50 = v47 + v44;
        if (__OFADD__(v47, v44)) {
          unsigned int v50 = ((v47 + v44) >> 31) ^ 0x80000000;
        }
        *(v42 - 64) = v50;
        BOOL v51 = __OFSUB__(v47, v44);
        signed int v52 = v47 - v44;
        if (v51) {
          signed int v52 = (v52 >> 31) ^ 0x80000000;
        }
        *int v42 = v52;
        int v53 = (4 * v40) | (2 * v49);
        int v54 = *(_DWORD *)(v5 + (v46 | 8));
        int v55 = *(_DWORD *)(v5 + (v46 | 0xC));
        BOOL v56 = v54 <= v55;
        if (v54 > v55) {
          int v55 = v54;
        }
        int v40 = v53 | v56;
        unsigned int v57 = v55 - v44;
        if (__OFSUB__(v55, v44)) {
          unsigned int v57 = ((v55 - v44) >> 31) ^ 0x80000000;
        }
        *(_DWORD *)(v38 + ((4 * v41) | 4)) = v57;
        BOOL v51 = __OFADD__(v55, v44);
        signed int v58 = v55 + v44;
        if (v51) {
          signed int v58 = (v58 >> 31) ^ 0x80000000;
        }
        v42[1] = v58;
        if ((~(_BYTE)v7 & 0x3C) == 0)
        {
          *v39++ = v40;
          BOOL v59 = v7 >= 0x7C;
          v7 += 4;
          if (v59) {
            goto LABEL_7;
          }
          goto LABEL_9;
        }
        v41 += 2;
        v42 += 2;
        BOOL v59 = v7 >= 0x7C;
        v7 += 4;
      }
      while (!v59);
      if (v40) {
        int *v39 = v40;
      }
LABEL_7:
      a3 += 6;
      ++v6;
      uint64_t v4 = v38;
    }
    while (v6 != v62);
    uint64_t v4 = v38;
  }
  uint64_t v60 = 0;
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 72) = v5;
  return v60;
}

uint64_t sub_1001642DC(int a1, int a2)
{
  if (!a1) {
    return 0;
  }
  while (a1 > 0x8000 || a1 < -32768 || a2 > 0x8000 || a2 < -32768)
  {
    a1 >>= 1;
    a2 >>= 1;
  }
  if (a1 < 0x4000)
  {
    while (a1 >= -16383 && a2 < 0x4000 && a2 >= -16383)
    {
      int v3 = 2 * a1;
      a2 *= 2;
      BOOL v4 = a1 < 0x2000;
      a1 *= 2;
      if (!v4) {
        goto LABEL_15;
      }
    }
  }
  int v3 = a1;
LABEL_15:
  int v5 = (5215 * ((v3 * a2 + 0x4000) >> 15) + 0x4000) >> 15;
  unsigned int v6 = ((a2 * a2) >> 5) + ((a2 * a2) >> 2) + v3 * v3 + 0x4000;
  int v7 = v6 >> 15;
  unsigned int v8 = v6 >> 29;
  if (v8)
  {
    LOBYTE(v8) = 0;
  }
  else
  {
    do
    {
      v7 *= 2;
      LOBYTE(v8) = v8 + 1;
    }
    while (v7 < 0x4000);
  }
  int v9 = ((0x10000 - (((92521 - ((1928 * v7 + 512) >> 10)) * v7 + 0x4000) >> 15)) * (92521 - ((1928 * v7 + 512) >> 10))
      + 0x4000) >> 15;
  return (unsigned __int16)(2
                          * (((1 << (14 - v8))
                            + (((0x10000
                               - (((((0x10000 - ((v9 * v7 + 0x4000) >> 15)) * v9 + 0x4000) >> 15) * v7 + 0x4000) >> 15))
                              * (((0x10000 - ((v9 * v7 + 0x4000) >> 15)) * v9 + 0x4000) >> 15)
                              + 0x4000) >> 15)
                            * v5) >> (15 - v8)));
}

void sub_10016441C(uint64_t a1, int8x16_t *a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v7 = *(unsigned int *)(a1 + 16);
  if ((int)v7 > 0)
  {
    uint64_t v8 = 0;
    int v9 = *(int8x16_t **)(a1 + 120);
    int v10 = *(int8x16_t **)(a1 + 128);
    v11.i64[0] = 0xFF000000FFLL;
    v11.i64[1] = 0xFF000000FFLL;
    while (1)
    {
      unsigned int v13 = *(unsigned __int8 *)(a3 + v8);
      unsigned int v14 = (v13 ^ 0x7F) + 1;
      unsigned int v15 = *(unsigned __int8 *)(a4 + v8);
      unsigned int v16 = (v15 ^ 0x7F) + 1;
      if (v7 < 8)
      {
        uint64_t v17 = 0;
        unsigned __int16 v18 = 0;
        unsigned __int16 v19 = 0;
        unsigned __int16 v20 = 0;
        unsigned __int16 v21 = 0;
LABEL_16:
        uint64_t v133 = v7 - v17;
        unsigned int v134 = &a2->i8[v17];
        unsigned int v135 = &v10->i8[v17];
        unsigned int v136 = &v9->i8[v17];
        do
        {
          char v138 = *v136++;
          char v137 = v138;
          char v139 = *v135++;
          char v140 = v15 * v139;
          char v141 = v16 * v139;
          char v143 = *v134++;
          char v142 = v143;
          char v144 = v143 - v13 * v137;
          unsigned int v145 = (v144 - v140);
          if (v145 >= (v140 - v144)) {
            int v146 = -v145;
          }
          else {
            LOBYTE(v146) = v144 - v140;
          }
          v21 += v146;
          char v147 = v142 + v14 * v137;
          LOBYTE(v148) = v147 - v140;
          if ((v147 - v140) >= (v140 - v147)) {
            int v148 = -(v142 + v14 * v137 - v140);
          }
          v20 += v148;
          LOBYTE(v148) = v144 + v141;
          unsigned int v149 = (v144 + v141);
          if (v149 >= -(char)v149) {
            int v148 = -v149;
          }
          v19 += v148;
          LOBYTE(v150) = v147 + v141;
          if (v150 >= -(char)v150) {
            int v150 = -v150;
          }
          v18 += v150;
          --v133;
        }
        while (v133);
        goto LABEL_3;
      }
      if (v7 >= 0x10)
      {
        int8x16_t v152 = vdupq_n_s8(v13);
        int8x16_t v60 = vdupq_n_s8(v14);
        int16x8_t v61 = 0uLL;
        int8x16_t v62 = vdupq_n_s8(v15);
        int16x8_t v63 = 0uLL;
        int8x16_t v64 = vdupq_n_s8(v16);
        uint64_t v65 = v9;
        int v66 = v10;
        int v67 = a2;
        uint64_t v17 = v7 & 0xFFFFFFF0;
        uint64_t v68 = v17;
        int16x8_t v69 = 0uLL;
        int16x8_t v70 = 0uLL;
        int16x8_t v71 = 0uLL;
        unsigned long long v5 = 0uLL;
        int16x8_t v72 = 0uLL;
        int16x8_t v73 = 0uLL;
        do
        {
          int8x16_t v74 = *v66++;
          int8x16_t v75 = vmulq_s8(v62, v74);
          int8x16_t v76 = vmulq_s8(v64, v74);
          int8x16_t v77 = *v65++;
          int8x16_t v78 = v77;
          int8x16_t v79 = *v67++;
          int8x16_t v80 = vmlsq_s8(v79, v152, v78);
          int8x16_t v81 = vsubq_s8(v80, v75);
          int32x4_t v82 = (int32x4_t)vqtbl1q_s8(v81, (int8x16_t)xmmword_1001AC170);
          int32x4_t v83 = (int32x4_t)vqtbl1q_s8(v81, (int8x16_t)xmmword_1001AC180);
          int32x4_t v84 = (int32x4_t)vqtbl1q_s8(v81, (int8x16_t)xmmword_1001AC190);
          int32x4_t v85 = (int32x4_t)vqtbl1q_s8(v81, (int8x16_t)xmmword_1001AC1A0);
          int8x16_t v86 = (int8x16_t)vnegq_s32(v85);
          int8x16_t v87 = (int8x16_t)vnegq_s32(v84);
          int8x16_t v88 = (int8x16_t)vnegq_s32(v83);
          int8x16_t v89 = (int8x16_t)vnegq_s32(v82);
          int16x8_t v90 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v89, v11), (uint32x4_t)v82), (int8x16_t)v82, v89);
          int16x8_t v91 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v88, v11), (uint32x4_t)v83), (int8x16_t)v83, v88);
          int16x8_t v92 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v87, v11), (uint32x4_t)v84), (int8x16_t)v84, v87);
          int16x8_t v93 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v86, v11), (uint32x4_t)v85), (int8x16_t)v85, v86);
          int8x16_t v94 = vmlaq_s8(v79, v60, v78);
          int8x16_t v95 = vsubq_s8(v94, v75);
          int32x4_t v96 = (int32x4_t)vqtbl1q_s8(v95, (int8x16_t)xmmword_1001AC170);
          int32x4_t v97 = (int32x4_t)vqtbl1q_s8(v95, (int8x16_t)xmmword_1001AC180);
          int32x4_t v98 = (int32x4_t)vqtbl1q_s8(v95, (int8x16_t)xmmword_1001AC190);
          int32x4_t v99 = (int32x4_t)vqtbl1q_s8(v95, (int8x16_t)xmmword_1001AC1A0);
          int8x16_t v100 = (int8x16_t)vnegq_s32(v99);
          int8x16_t v101 = (int8x16_t)vnegq_s32(v98);
          int8x16_t v102 = (int8x16_t)vnegq_s32(v97);
          int8x16_t v103 = (int8x16_t)vnegq_s32(v96);
          int16x8_t v104 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v103, v11), (uint32x4_t)v96), (int8x16_t)v96, v103);
          int16x8_t v105 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v102, v11), (uint32x4_t)v97), (int8x16_t)v97, v102);
          int16x8_t v106 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v101, v11), (uint32x4_t)v98), (int8x16_t)v98, v101);
          int16x8_t v107 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v100, v11), (uint32x4_t)v99), (int8x16_t)v99, v100);
          int8x16_t v108 = vaddq_s8(v80, v76);
          int32x4_t v109 = (int32x4_t)vqtbl1q_s8(v108, (int8x16_t)xmmword_1001AC170);
          int32x4_t v110 = (int32x4_t)vqtbl1q_s8(v108, (int8x16_t)xmmword_1001AC180);
          int32x4_t v111 = (int32x4_t)vqtbl1q_s8(v108, (int8x16_t)xmmword_1001AC190);
          int32x4_t v112 = (int32x4_t)vqtbl1q_s8(v108, (int8x16_t)xmmword_1001AC1A0);
          int8x16_t v113 = (int8x16_t)vnegq_s32(v109);
          int16x8_t v114 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v113, v11), (uint32x4_t)v109), (int8x16_t)v109, v113);
          int8x16_t v115 = (int8x16_t)vnegq_s32(v110);
          int16x8_t v116 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v115, v11), (uint32x4_t)v110), (int8x16_t)v110, v115);
          int8x16_t v117 = (int8x16_t)vnegq_s32(v111);
          int16x8_t v118 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v117, v11), (uint32x4_t)v111), (int8x16_t)v111, v117);
          int8x16_t v119 = (int8x16_t)vnegq_s32(v112);
          int16x8_t v120 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v119, v11), (uint32x4_t)v112), (int8x16_t)v112, v119);
          int8x16_t v121 = vaddq_s8(v94, v76);
          int32x4_t v122 = (int32x4_t)vqtbl1q_s8(v121, (int8x16_t)xmmword_1001AC170);
          int32x4_t v123 = (int32x4_t)vqtbl1q_s8(v121, (int8x16_t)xmmword_1001AC180);
          int32x4_t v124 = (int32x4_t)vqtbl1q_s8(v121, (int8x16_t)xmmword_1001AC190);
          int32x4_t v125 = (int32x4_t)vqtbl1q_s8(v121, (int8x16_t)xmmword_1001AC1A0);
          int8x16_t v126 = (int8x16_t)vnegq_s32(v122);
          int16x8_t v127 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v126, v11), (uint32x4_t)v122), (int8x16_t)v122, v126);
          int8x16_t v128 = (int8x16_t)vnegq_s32(v123);
          int16x8_t v129 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v128, v11), (uint32x4_t)v123), (int8x16_t)v123, v128);
          int8x16_t v130 = (int8x16_t)vnegq_s32(v124);
          int16x8_t v131 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v130, v11), (uint32x4_t)v124), (int8x16_t)v124, v130);
          int8x16_t v132 = (int8x16_t)vnegq_s32(v125);
          int16x8_t v73 = vaddq_s16((int16x8_t)(*(_OWORD *)&vuzp1q_s16(v93, v92) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)), v73);
          int16x8_t v72 = vaddq_s16((int16x8_t)(*(_OWORD *)&vuzp1q_s16(v91, v90) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)), v72);
          unsigned long long v5 = (unsigned __int128)vaddq_s16((int16x8_t)(*(_OWORD *)&vuzp1q_s16(v107, v106) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)), (int16x8_t)v5);
          int16x8_t v71 = vaddq_s16((int16x8_t)(*(_OWORD *)&vuzp1q_s16(v105, v104) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)), v71);
          int16x8_t v70 = vaddq_s16((int16x8_t)(*(_OWORD *)&vuzp1q_s16(v120, v118) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)), v70);
          unsigned long long v6 = *(_OWORD *)&vuzp1q_s16(v116, v114) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
          int16x8_t v69 = vaddq_s16((int16x8_t)v6, v69);
          int16x8_t v63 = vaddq_s16((int16x8_t)(*(_OWORD *)&vuzp1q_s16((int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v132, v11), (uint32x4_t)v125), (int8x16_t)v125, v132), v131) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)), v63);
          int16x8_t v61 = vaddq_s16((int16x8_t)(*(_OWORD *)&vuzp1q_s16(v129, v127) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)), v61);
          v68 -= 16;
        }
        while (v68);
        unsigned __int16 v21 = vaddvq_s16(vaddq_s16(v72, v73));
        unsigned __int16 v20 = vaddvq_s16(vaddq_s16(v71, (int16x8_t)v5));
        unsigned __int16 v19 = vaddvq_s16(vaddq_s16(v69, v70));
        unsigned __int16 v18 = vaddvq_s16(vaddq_s16(v61, v63));
        if ((v7 & 0xFFFFFFF0) == v7) {
          goto LABEL_3;
        }
        uint64_t v22 = v7 & 0xFFFFFFF0;
        if ((v7 & 8) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        unsigned __int16 v18 = 0;
        unsigned __int16 v19 = 0;
        unsigned __int16 v20 = 0;
        unsigned __int16 v21 = 0;
        uint64_t v22 = 0;
      }
      int16x8_t v23 = (int16x8_t)v18;
      int16x8_t v24 = (int16x8_t)v19;
      int16x8_t v25 = (int16x8_t)v20;
      int16x8_t v26 = (int16x8_t)v21;
      int8x8_t v27 = vdup_n_s8(v13);
      uint64_t v28 = v22 - (v7 & 0xFFFFFFF8);
      int v29 = (int8x8_t *)&a2->i8[v22];
      int8x8_t v30 = vdup_n_s8(v14);
      int v31 = (int8x8_t *)&v10->i8[v22];
      int8x8_t v32 = vdup_n_s8(v15);
      int8x8_t v33 = vdup_n_s8(v16);
      int v34 = (uint64_t *)((char *)v9->i64 + v22);
      do
      {
        uint64_t v35 = *v34++;
        *(void *)&unsigned long long v5 = v35;
        int8x8_t v36 = *v31++;
        int8x8_t v37 = vmul_s8(v32, v36);
        int8x8_t v38 = vmul_s8(v33, v36);
        int8x8_t v39 = *v29++;
        int8x8_t v40 = vmls_s8(v39, v27, *(int8x8_t *)&v5);
        *(int8x8_t *)&unsigned long long v6 = vsub_s8(v40, v37);
        int32x4_t v41 = (int32x4_t)vqtbl1q_s8((int8x16_t)v6, (int8x16_t)xmmword_1001AC170);
        int32x4_t v42 = (int32x4_t)vqtbl1q_s8((int8x16_t)v6, (int8x16_t)xmmword_1001AC180);
        int8x16_t v43 = (int8x16_t)vnegq_s32(v42);
        int8x16_t v44 = (int8x16_t)vnegq_s32(v41);
        int16x8_t v26 = vaddq_s16((int16x8_t)(*(_OWORD *)&vuzp1q_s16((int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v43, v11), (uint32x4_t)v42), (int8x16_t)v42, v43), (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v44, v11), (uint32x4_t)v41), (int8x16_t)v41, v44)) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)), v26);
        int8x8_t v45 = vmla_s8(v39, v30, *(int8x8_t *)&v5);
        *(int8x8_t *)&unsigned long long v5 = vsub_s8(v45, v37);
        int32x4_t v46 = (int32x4_t)vqtbl1q_s8((int8x16_t)v5, (int8x16_t)xmmword_1001AC170);
        int32x4_t v47 = (int32x4_t)vqtbl1q_s8((int8x16_t)v5, (int8x16_t)xmmword_1001AC180);
        int8x16_t v48 = (int8x16_t)vnegq_s32(v47);
        int8x16_t v49 = (int8x16_t)vnegq_s32(v46);
        unsigned long long v50 = *(_OWORD *)&vuzp1q_s16((int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v48, v11), (uint32x4_t)v47), (int8x16_t)v47, v48), (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v49, v11), (uint32x4_t)v46), (int8x16_t)v46, v49)) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
        int16x8_t v25 = vaddq_s16((int16x8_t)v50, v25);
        *(int8x8_t *)&unsigned long long v50 = vadd_s8(v40, v38);
        int32x4_t v51 = (int32x4_t)vqtbl1q_s8((int8x16_t)v50, (int8x16_t)xmmword_1001AC170);
        int32x4_t v52 = (int32x4_t)vqtbl1q_s8((int8x16_t)v50, (int8x16_t)xmmword_1001AC180);
        int8x16_t v53 = (int8x16_t)vnegq_s32(v52);
        int8x16_t v54 = (int8x16_t)vnegq_s32(v51);
        unsigned long long v55 = *(_OWORD *)&vuzp1q_s16((int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v53, v11), (uint32x4_t)v52), (int8x16_t)v52, v53), (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v54, v11), (uint32x4_t)v51), (int8x16_t)v51, v54)) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
        int16x8_t v24 = vaddq_s16((int16x8_t)v55, v24);
        *(int8x8_t *)&unsigned long long v55 = vadd_s8(v45, v38);
        int32x4_t v56 = (int32x4_t)vqtbl1q_s8((int8x16_t)v55, (int8x16_t)xmmword_1001AC170);
        int32x4_t v57 = (int32x4_t)vqtbl1q_s8((int8x16_t)v55, (int8x16_t)xmmword_1001AC180);
        int8x16_t v58 = (int8x16_t)vnegq_s32(v57);
        int8x16_t v59 = (int8x16_t)vnegq_s32(v56);
        unsigned long long v6 = (unsigned __int128)vcgtq_u32((uint32x4_t)vandq_s8(v58, v11), (uint32x4_t)v57);
        unsigned long long v5 = *(_OWORD *)&vuzp1q_s16((int16x8_t)vbslq_s8((int8x16_t)v6, (int8x16_t)v57, v58), (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v59, v11), (uint32x4_t)v56), (int8x16_t)v56, v59)) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
        int16x8_t v23 = vaddq_s16((int16x8_t)v5, v23);
        v28 += 8;
      }
      while (v28);
      unsigned __int16 v21 = vaddvq_s16(v26);
      unsigned __int16 v20 = vaddvq_s16(v25);
      unsigned __int16 v19 = vaddvq_s16(v24);
      unsigned __int16 v18 = vaddvq_s16(v23);
      uint64_t v17 = v7 & 0xFFFFFFF8;
      if (v17 != v7) {
        goto LABEL_16;
      }
LABEL_3:
      int v12 = (unsigned __int16 *)&a5[8 * v8];
      *int v12 = v21;
      v12[1] = v20;
      _DWORD v12[2] = v19;
      uint64_t v12[3] = v18;
      if (++v8 == 112) {
        return;
      }
    }
  }
  bzero(a5, 0x380uLL);
}

uint64_t sub_100164A18(unsigned int a1, int a2, unsigned int a3)
{
  int v3 = (a1 >> 1) - (a3 >> 1);
  if (a1 >> 1 == a3 >> 1) {
    return 0;
  }
  int v5 = a3 - a2 + a1 - a2;
  if (v3 >= 0) {
    unsigned int v6 = (a1 >> 1) - (a3 >> 1);
  }
  else {
    unsigned int v6 = (a3 >> 1) - (a1 >> 1);
  }
  if (v5 >= 0) {
    unsigned int v7 = a3 - a2 + a1 - a2;
  }
  else {
    unsigned int v7 = -v5;
  }
  if (v7 < 0x8000)
  {
    char v8 = 0;
    if (v7 >> 14) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  char v8 = 0;
  unsigned int v9 = v7;
  do
  {
    unsigned int v7 = v9 >> 1;
    --v8;
    unsigned int v10 = HIWORD(v9);
    v9 >>= 1;
  }
  while (v10);
  if (!(v7 >> 14))
  {
    do
    {
LABEL_13:
      v7 *= 2;
      ++v8;
    }
    while ((int)v7 < 0x4000);
  }
LABEL_14:
  int v11 = v3 ^ v5;
  int v12 = ((0x10000 - ((int)((92521 - ((int)(1928 * v7 + 512) >> 10)) * v7 + 0x4000) >> 15))
       * (92521 - ((int)(1928 * v7 + 512) >> 10))
       + 0x4000) >> 15;
  int v13 = ((0x10000 - ((int)(v12 * v7 + 0x4000) >> 15)) * v12 + 0x4000) >> 15;
  int v14 = ((0x10000 - ((int)(v13 * v7 + 0x4000) >> 15)) * v13 + 0x4000) >> 15;
  if (v6 < 0x8000)
  {
    char v15 = 0;
  }
  else
  {
    char v15 = 0;
    do
    {
      unsigned int v16 = HIWORD(v6);
      v6 >>= 1;
      --v15;
    }
    while (v16);
  }
  unsigned int v17 = (int)((1 << (v15 - v8 + 14)) + v6 * v14) >> (v15 - v8 + 15);
  if (v11 >= 0) {
    return v17;
  }
  else {
    return -v17;
  }
}

void sub_100164B3C(void *a1)
{
  sub_100164B74(a1);

  operator delete();
}

void *sub_100164B74(void *a1)
{
  *a1 = off_100248EF8;
  if (a1[32]) {
    operator delete[]();
  }
  if (a1[37]) {
    operator delete[]();
  }
  if (a1[7]) {
    operator delete[]();
  }
  if (a1[31]) {
    operator delete[]();
  }
  if (a1[30]) {
    operator delete[]();
  }
  if (a1[21]) {
    operator delete[]();
  }
  if (a1[26]) {
    operator delete[]();
  }
  if (a1[28]) {
    operator delete[]();
  }
  CGFloat v2 = (void *)a1[16];
  if (v2)
  {
    sub_100166838(v2);
    operator delete();
  }
  int v3 = (void *)a1[17];
  if (v3)
  {
    sub_100166838(v3);
    operator delete();
  }
  BOOL v4 = (void *)a1[18];
  if (v4)
  {
    sub_100166838(v4);
    operator delete();
  }
  int v5 = (void *)a1[19];
  if (v5)
  {
    sub_100166838(v5);
    operator delete();
  }
  if (a1[13]) {
    operator delete();
  }
  if (a1[14]) {
    operator delete();
  }
  a1[9] = off_1002491F0;
  if (a1[10]) {
    operator delete[]();
  }
  return a1;
}

void sub_100164D88(void *a1)
{
  *a1 = off_1002491F0;
  if (a1[1]) {
    operator delete[]();
  }

  operator delete();
}

void *sub_100164E04(void *result)
{
  *int64x2_t result = off_1002491F0;
  if (result[1]) {
    operator delete[]();
  }
  return result;
}

uint64_t sub_100164E64(uint64_t a1, uint32x2_t *a2, unsigned int a3, unsigned int a4, int a5)
{
  uint64_t result = 0;
  int64_t v251 = 0;
  uint64_t v252 = 0;
  int v253 = 0;
  v255 = &v245;
  unsigned int v256 = 0;
  if (a3 - 5 < 0xFFFFFFF7 || a4 - 5 < 0xFFFFFFF7) {
    return result;
  }
  int v11 = 32 * a4;
  int v12 = 32 * a3;
  int v243 = v12;
  int v244 = 32 * a4;
  if (!a5)
  {
    v11 += 16 * *(_DWORD *)(a1 + 48);
    v12 += 16 * *(_DWORD *)(a1 + 52);
    int v243 = v12;
    int v244 = v11;
    int32x2_t v15 = *(int32x2_t *)(a1 + 16);
LABEL_12:
    int v246 = v15.i32[0];
    goto LABEL_13;
  }
  if (!(a4 | a3))
  {
    int32x2_t v15 = vneg_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(a2[5], (uint32x2_t)vdup_n_s32(8 - a2[6].i32[0])), (int8x8_t)0xFF000000FFLL));
    goto LABEL_12;
  }
  int v13 = *(_DWORD *)(a1 + 32);
  int v14 = *(_DWORD *)(a1 + 36);
  int v245 = v14;
  int v246 = v13;
  if (a4 == -1)
  {
    int32x2_t v15 = *(int32x2_t *)(a1 + 24);
    int v246 = v15.i32[0];
    int v11 = -32;
    goto LABEL_13;
  }
  if (a4) {
    goto LABEL_14;
  }
  if (a3 == -1)
  {
    int v11 = 0;
    int32x2_t v15 = *(int32x2_t *)(a1 + 16);
    int v246 = v15.i32[0];
    int v12 = -32;
    goto LABEL_13;
  }
  if (a3)
  {
    int v11 = 0;
    int32x2_t v15 = *(int32x2_t *)(a1 + 24);
    goto LABEL_12;
  }
  int v12 = 0;
  int v11 = 0;
  int v246 = 0;
  int32x2_t v15 = 0;
LABEL_13:
  int v14 = v15.i32[1];
  int v245 = v15.i32[1];
  int v13 = v15.i32[0];
LABEL_14:
  uint64_t result = sub_100165FCC(a1, v11, v12, (int *)a2, v13, v14, 1);
  if (!result) {
    return result;
  }
  int v233 = a5;
  unsigned int v234 = a3;
  unsigned int v235 = a4;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  __int32 v18 = a2[6].i32[0];
  uint64_t v232 = (int *)a2;
  __int32 v19 = (a2[5].i32[1] >> v18) + v243;
  __int32 v20 = (a2[5].i32[0] >> v18) + v244;
  __int32 v247 = v19;
  __int32 v248 = v20;
  unsigned int v241 = v19 - 16 + ((((v19 - 16) & ~((v19 - 16) >> 31)) - v19 + 143) & 0xFFFFFF80);
  unsigned int v21 = ((v20 + 112) >> 4) & 7;
  unint64_t v22 = ~(2 * v20) & 0x1E;
  uint64_t v23 = ((~(2 * v20) >> 1) & 0xF) + 1;
  char v239 = ((v20 + 112) >> 4) & 7;
  if (v21 == 7) {
    unsigned int v24 = 0;
  }
  else {
    unsigned int v24 = v21 + 1;
  }
  if (v24 == 7) {
    unsigned int v25 = 0;
  }
  else {
    unsigned int v25 = v24 + 1;
  }
  unsigned int v237 = v25;
  if (v25 == 7) {
    unsigned int v26 = 0;
  }
  else {
    unsigned int v26 = v25 + 1;
  }
  unsigned int v236 = v26;
  int v27 = 2 * (v23 + 16);
  if (v27 <= 32) {
    int v27 = 32;
  }
  unsigned int v28 = v27 - 32;
  int v29 = v22;
  uint64_t v30 = (v22 >> 1) + 18;
  do
  {
    if ((int)(v241 + v17) <= 0) {
      int v31 = -(-(v241 + v17) & 0x7F);
    }
    else {
      int v31 = (v241 + v17) & 0x7F;
    }
    int v32 = 8 * v31;
    uint64_t v33 = 32 * v17;
    int v34 = dword_1001C7714[v239 & 7 | (8 * v31)];
    uint64_t v35 = v23;
    uint64_t v36 = v16;
    int v37 = v29;
    do
    {
      *(unsigned char *)(*(void *)(a1 + 256) + v36) = 16 * ((v34 >> v37) & 3) - 16;
      v37 -= 2;
      ++v36;
      --v35;
    }
    while (v35);
    unsigned int v38 = dword_1001C7714[v24 + v32];
    *(unsigned char *)(*(void *)(a1 + 256) + (v33 | v23)) = ((v38 >> 26) & 0x30) - 16;
    *(unsigned char *)(*(void *)(a1 + 256) + v23 + 1 + v33) = (HIBYTE(v38) & 0x30) - 16;
    *(unsigned char *)(*(void *)(a1 + 256) + v23 + 2 + v33) = ((v38 >> 22) & 0x30) - 16;
    *(unsigned char *)(*(void *)(a1 + 256) + v23 + 3 + v33) = ((v38 >> 20) & 0x30) - 16;
    *(unsigned char *)(*(void *)(a1 + 256) + v23 + 4 + v33) = ((v38 >> 18) & 0x30) - 16;
    *(unsigned char *)(*(void *)(a1 + 256) + v23 + 5 + v33) = (BYTE2(v38) & 0x30) - 16;
    *(unsigned char *)(*(void *)(a1 + 256) + v23 + 6 + v33) = ((v38 >> 14) & 0x30) - 16;
    *(unsigned char *)(*(void *)(a1 + 256) + v23 + 7 + v33) = ((v38 >> 12) & 0x30) - 16;
    *(unsigned char *)(*(void *)(a1 + 256) + v23 + 8 + v33) = ((v38 >> 10) & 0x30) - 16;
    *(unsigned char *)(*(void *)(a1 + 256) + v23 + 9 + v33) = (BYTE1(v38) & 0x30) - 16;
    *(unsigned char *)(*(void *)(a1 + 256) + v23 + 10 + v33) = ((v38 >> 6) & 0x30) - 16;
    *(unsigned char *)(*(void *)(a1 + 256) + v23 + 11 + v33) = ((v38 >> 4) & 0x30) - 16;
    *(unsigned char *)(*(void *)(a1 + 256) + v23 + 12 + v33) = ((v38 >> 2) & 0x30) - 16;
    *(unsigned char *)(*(void *)(a1 + 256) + v23 + 13 + v33) = (v38 & 0x30) - 16;
    *(unsigned char *)(*(void *)(a1 + 256) + v23 + 14 + v33) = ((4 * v38) & 0x30) - 16;
    *(unsigned char *)(*(void *)(a1 + 256) + v23 + 15 + v33) = 16 * (v38 & 3) - 16;
    if (v28 <= 0x1E)
    {
      int v39 = dword_1001C7714[v237 + v32];
      unsigned int v40 = 30;
      uint64_t v41 = v30;
      uint64_t v42 = v23 + 16;
      do
      {
        uint64_t v43 = v41;
        *(unsigned char *)(*(void *)(a1 + 256) + v16 + v42++) = 16 * ((v39 >> v40) & 3) - 16;
        v40 -= 2;
        ++v41;
      }
      while (v40 >= v28);
      unsigned int v44 = (2 * v42 - 32) & ~((2 * (int)v42 - 32) >> 31);
      if (v44 <= 0x1E)
      {
        int v45 = dword_1001C7714[v236 + v32];
        for (unsigned int i = 30; i >= v44; i -= 2)
          *(unsigned char *)(*(void *)(a1 + 256) + v43++) = 16 * ((v45 >> i) & 3) - 16;
      }
    }
    ++v17;
    v16 += 32;
    v30 += 32;
  }
  while (v17 != 32);
  sub_1001564C8(*(void *)(a1 + 240), 0x30u, 36, 0x30u, *(void *)(a1 + 248));
  int v47 = 0;
  int v48 = 0;
  int v49 = 0;
  int v50 = 0;
  unsigned int v51 = 0;
  int v52 = 0;
  int v53 = 0;
  int v54 = 0;
  int v55 = 0;
  int v56 = 0;
  unsigned int v57 = 0;
  uint64_t v58 = 0;
  uint64_t v60 = *(void *)(a1 + 248);
  uint64_t v59 = *(void *)(a1 + 256);
  memset(v249, 0, sizeof(v249));
  uint64_t v61 = v60 + 97;
  uint64_t v62 = v59;
  do
  {
    for (uint64_t j = 0; j != 32; ++j)
    {
      int v64 = *(char *)(v62 + j);
      v55 += *(char *)(v61 + j - 48) * v64;
      *(_DWORD *)v249 = v55;
      v54 += *(char *)(v61 + j - 47) * v64;
      *(_DWORD *)&v249[12] = v54;
      v53 += *(char *)(v61 + j - 46) * v64;
      *(_DWORD *)&v249[24] = v53;
      v52 += *(char *)(v61 + j) * v64;
      *(_DWORD *)&v249[4] = v52;
      v51 += *(char *)(v61 + j + 1) * v64;
      *(_DWORD *)&v249[16] = v51;
      v50 += *(char *)(v61 + j + 2) * v64;
      *(_DWORD *)&v249[28] = v50;
      v49 += *(char *)(v61 + j + 48) * v64;
      *(_DWORD *)&v249[8] = v49;
      v48 += *(char *)(v61 + j + 49) * v64;
      *(_DWORD *)&v249[20] = v48;
      v47 += *(char *)(v61 + j + 50) * v64;
      *(_DWORD *)&v249[32] = v47;
      v56 += v64 * v64;
      v57 += *(char *)(v61 + j + 1) * *(char *)(v61 + j + 1);
    }
    ++v58;
    v62 += 32;
    v61 += 48;
  }
  while (v58 != 32);
  unsigned int v65 = 0;
  int v66 = 0;
  if (v56 && v57)
  {
    unsigned int v238 = v51 / ((v56 + 512) >> 10);
    uint64_t v240 = v60;
    uint64_t v242 = v59;
    int v67 = sub_10016FA14(v57);
    unsigned int v65 = v238;
    uint64_t v60 = v240;
    uint64_t v59 = v242;
    int v66 = (21 * v55 / v67) >> 3;
    int v52 = (21 * v52 / v67) >> 3;
    int v49 = (21 * v49 / v67) >> 3;
    *(_DWORD *)&v249[4] = v52;
    *(_DWORD *)&v249[8] = v49;
    *(_DWORD *)&v249[12] = (21 * v54 / v67) >> 3;
    *(_DWORD *)&v249[16] = ((int)(21 * v51) / v67) >> 3;
    *(_DWORD *)&v249[20] = (21 * v48 / v67) >> 3;
    *(_DWORD *)&v249[24] = (21 * v53 / v67) >> 3;
    *(_DWORD *)&v249[28] = (21 * v50 / v67) >> 3;
    *(_DWORD *)&v249[32] = (21 * v47 / v67) >> 3;
  }
  *(_DWORD *)(a1 + 8) = v65;
  v68.i64[0] = __PAIR64__(v49, v66);
  long long v69 = *(_OWORD *)&v249[20];
  v68.i64[1] = *(void *)&v249[12];
  int v70 = vmaxvq_s32(vmaxq_s32(v68, *(int32x4_t *)&v249[20]));
  if (v70 <= v52) {
    int v70 = v52;
  }
  unsigned int v71 = v70 & ~(v70 >> 31);
  *(_DWORD *)v249 = v66;
  unsigned int v250 = v71;
  if (v71 < 0x4E)
  {
    int v80 = v245;
    int v79 = v246;
    *(_DWORD *)(a1 + 32) = v246;
    *(_DWORD *)(a1 + 36) = v80;
    if (v235) {
      return 1;
    }
    *(_DWORD *)(a1 + 24) = v79;
    *(_DWORD *)(a1 + 28) = v80;
    if (v234) {
      return 1;
    }
    goto LABEL_165;
  }
  if (v66 < 0)
  {
    int v66 = 0;
    *(_DWORD *)v249 = 0;
  }
  if (v52 < 0)
  {
    int v52 = 0;
    *(_DWORD *)&v249[4] = 0;
    unsigned int v72 = v66;
    if ((v49 & 0x80000000) == 0)
    {
LABEL_54:
      v72 += v49;
      int v73 = *(_DWORD *)&v249[12];
      if ((*(_DWORD *)&v249[12] & 0x80000000) == 0) {
        goto LABEL_55;
      }
      goto LABEL_67;
    }
  }
  else
  {
    unsigned int v72 = v52 + v66;
    if ((v49 & 0x80000000) == 0) {
      goto LABEL_54;
    }
  }
  int v49 = 0;
  *(_DWORD *)&v249[8] = 0;
  int v73 = *(_DWORD *)&v249[12];
  if ((*(_DWORD *)&v249[12] & 0x80000000) == 0)
  {
LABEL_55:
    v72 += v73;
    int v74 = *(_DWORD *)&v249[16];
    if ((*(_DWORD *)&v249[16] & 0x80000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_68;
  }
LABEL_67:
  int v73 = 0;
  *(_DWORD *)&v249[12] = 0;
  int v74 = *(_DWORD *)&v249[16];
  if ((*(_DWORD *)&v249[16] & 0x80000000) == 0)
  {
LABEL_56:
    v72 += v74;
    int v75 = *(_DWORD *)&v249[20];
    if ((*(_DWORD *)&v249[20] & 0x80000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_69;
  }
LABEL_68:
  *(_DWORD *)&v249[16] = 0;
  int v75 = *(_DWORD *)&v249[20];
  if ((*(_DWORD *)&v249[20] & 0x80000000) == 0)
  {
LABEL_57:
    v72 += v75;
    int v76 = *(_DWORD *)&v249[24];
    if ((*(_DWORD *)&v249[24] & 0x80000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_70;
  }
LABEL_69:
  int v75 = 0;
  *(_DWORD *)&v249[20] = 0;
  int v76 = DWORD1(v69);
  if ((DWORD1(v69) & 0x80000000) == 0)
  {
LABEL_58:
    v72 += v76;
    int v77 = DWORD2(v69);
    if ((DWORD2(v69) & 0x80000000) == 0) {
      goto LABEL_59;
    }
LABEL_71:
    int v77 = 0;
    *(_DWORD *)&v249[28] = 0;
    int v78 = HIDWORD(v69);
    if ((HIDWORD(v69) & 0x80000000) == 0) {
      goto LABEL_60;
    }
LABEL_72:
    int v78 = 0;
    *(_DWORD *)&v249[32] = 0;
    goto LABEL_73;
  }
LABEL_70:
  int v76 = 0;
  *(_DWORD *)&v249[24] = 0;
  int v77 = DWORD2(v69);
  if ((DWORD2(v69) & 0x80000000) != 0) {
    goto LABEL_71;
  }
LABEL_59:
  v72 += v77;
  int v78 = HIDWORD(v69);
  if ((HIDWORD(v69) & 0x80000000) != 0) {
    goto LABEL_72;
  }
LABEL_60:
  v72 += v78;
LABEL_73:
  signed int v81 = (v72 + 128) >> 8;
  if (!(v72 >> 23)) {
    signed int v81 = v72;
  }
  if (v81)
  {
    char v82 = 8 * (v72 >> 23 == 0);
    int v83 = ((v76 - v49 - (v52 + v66) + v77 + v78) << v82) / v81;
    int v84 = ((v75 + v49 + v78 - (v66 + v73 + v76)) << v82) / v81;
  }
  else
  {
    int v84 = 0;
    int v83 = 0;
  }
  int64_t v251 = __PAIR64__(v83, v84);
  int v85 = v84 + v245;
  int v86 = v83 + v246;
  LODWORD(v252) = v84 + v245;
  HIDWORD(v252) = v83 + v246;
  if (v233)
  {
    int v87 = *(_DWORD *)(a1 + 64);
    if (v87 <= 199)
    {
      int8x16_t v88 = (unsigned int *)(*(void *)(a1 + 56) + 20 * v87);
      *int8x16_t v88 = v71;
      v88[3] = HIDWORD(v252);
      v88[4] = v252;
      v88[1] = v235;
      v88[2] = v234;
      *(_DWORD *)(a1 + 64) = v87 + 1;
      int v85 = v252;
      int v86 = HIDWORD(v252);
    }
  }
  *(_DWORD *)(a1 + 32) = v86;
  *(_DWORD *)(a1 + 36) = v85;
  if (!v235)
  {
    *(_DWORD *)(a1 + 24) = v86;
    *(_DWORD *)(a1 + 28) = v85;
    if (!v234)
    {
      *(_DWORD *)(a1 + 16) = v86;
      *(_DWORD *)(a1 + 20) = v85;
    }
  }
  unsigned int v89 = HIDWORD(v251);
  if (v251 < 0) {
    unsigned int v89 = -HIDWORD(v251);
  }
  if (v89 <= 0x19)
  {
    unsigned int v90 = v251;
    if ((int)v251 < 0) {
      unsigned int v90 = -(int)v251;
    }
    if (v90 < 0x1A)
    {
      uint64_t v121 = 0;
      unsigned int v122 = (*(_DWORD *)&v249[16] + 8) >> 4;
      unsigned int v256 = v122;
      uint64_t v123 = *(void *)(a1 + 264);
      int32x4_t v124 = vdupq_n_s32(v122);
      int32x4_t v125 = vdupq_n_s32(v122 * v65);
      uint64_t v126 = v60 + 98;
      uint64_t v127 = v59;
      uint64_t v128 = v123;
      do
      {
        uint64_t v150 = 48 * v121 + v60;
        unint64_t v151 = v59 + 32 * v121;
        int8x16_t v152 = (int8x16_t *)(v150 + 98);
        unint64_t v153 = v123 + (v121 << 6);
        unint64_t v154 = v153 + 64;
        BOOL v156 = v153 < v151 + 32 && v151 < v154;
        if (((unint64_t)v152 >= v154 || v153 >= v150 + 130) && !v156)
        {
          uint16x8_t v129 = (uint16x8_t)vmovl_high_s8(*v152);
          uint16x8_t v130 = (uint16x8_t)vmovl_s8(*(int8x8_t *)v152->i8);
          int8x16_t v131 = *(int8x16_t *)(v59 + 32 * v121);
          int16x8_t v132 = vmovl_high_s8(v131);
          int16x8_t v133 = vmovl_s8(*(int8x8_t *)v131.i8);
          v134.i64[0] = 0x20000000200;
          v134.i64[1] = 0x20000000200;
          int32x4_t v135 = vmlaq_s32(v134, v125, vmovl_high_s16(v132));
          v136.i64[0] = 0x20000000200;
          v136.i64[1] = 0x20000000200;
          int32x4_t v137 = vmlaq_s32(v136, v125, vmovl_s16(*(int16x4_t *)v132.i8));
          v132.i64[0] = 0x20000000200;
          v132.i64[1] = 0x20000000200;
          v138.i64[0] = 0x20000000200;
          v138.i64[1] = 0x20000000200;
          char v139 = (int16x8_t *)(v123 + (v121 << 6));
          *char v139 = vuzp1q_s16((int16x8_t)vmlaq_s32(vnegq_s32((int32x4_t)vshrq_n_u32((uint32x4_t)vmlaq_s32(v138, v125, vmovl_s16(*(int16x4_t *)v133.i8)), 0xAuLL)), v124, (int32x4_t)vmovl_u16(*(uint16x4_t *)v130.i8)), (int16x8_t)vmlaq_s32(vnegq_s32((int32x4_t)vshrq_n_u32((uint32x4_t)vmlaq_s32((int32x4_t)v132, v125, vmovl_high_s16(v133)), 0xAuLL)), v124, (int32x4_t)vmovl_high_u16(v130)));
          v139[1] = vuzp1q_s16((int16x8_t)vmlaq_s32(vnegq_s32((int32x4_t)vshrq_n_u32((uint32x4_t)v137, 0xAuLL)), v124, (int32x4_t)vmovl_u16(*(uint16x4_t *)v129.i8)), (int16x8_t)vmlaq_s32(vnegq_s32((int32x4_t)vshrq_n_u32((uint32x4_t)v135, 0xAuLL)), v124, (int32x4_t)vmovl_high_u16(v129)));
          int8x16_t v140 = *(int8x16_t *)(v150 + 114);
          uint16x8_t v141 = (uint16x8_t)vmovl_high_s8(v140);
          uint16x8_t v142 = (uint16x8_t)vmovl_s8(*(int8x8_t *)v140.i8);
          uint64_t v143 = (32 * v121) | 0x10;
          int8x16_t v144 = *(int8x16_t *)(v59 + v143);
          int16x8_t v145 = vmovl_high_s8(v144);
          int16x8_t v146 = vmovl_s8(*(int8x8_t *)v144.i8);
          v135.i64[0] = 0x20000000200;
          v135.i64[1] = 0x20000000200;
          uint32x4_t v147 = (uint32x4_t)vmlaq_s32(v135, v125, vmovl_high_s16(v145));
          v137.i64[0] = 0x20000000200;
          v137.i64[1] = 0x20000000200;
          uint32x4_t v148 = (uint32x4_t)vmlaq_s32(v137, v125, vmovl_s16(*(int16x4_t *)v145.i8));
          v145.i64[0] = 0x20000000200;
          v145.i64[1] = 0x20000000200;
          v138.i64[0] = 0x20000000200;
          v138.i64[1] = 0x20000000200;
          unsigned int v149 = (int16x8_t *)(v123 + 2 * v143);
          *unsigned int v149 = vuzp1q_s16((int16x8_t)vmlaq_s32(vnegq_s32((int32x4_t)vshrq_n_u32((uint32x4_t)vmlaq_s32(v138, v125, vmovl_s16(*(int16x4_t *)v146.i8)), 0xAuLL)), v124, (int32x4_t)vmovl_u16(*(uint16x4_t *)v142.i8)), (int16x8_t)vmlaq_s32(vnegq_s32((int32x4_t)vshrq_n_u32((uint32x4_t)vmlaq_s32((int32x4_t)v145, v125, vmovl_high_s16(v146)), 0xAuLL)), v124, (int32x4_t)vmovl_high_u16(v142)));
          v149[1] = vuzp1q_s16((int16x8_t)vmlaq_s32(vnegq_s32((int32x4_t)vshrq_n_u32(v148, 0xAuLL)), v124, (int32x4_t)vmovl_u16(*(uint16x4_t *)v141.i8)), (int16x8_t)vmlaq_s32(vnegq_s32((int32x4_t)vshrq_n_u32(v147, 0xAuLL)), v124, (int32x4_t)vmovl_high_u16(v141)));
        }
        else
        {
          for (uint64_t k = 0; k != 32; ++k)
            *(_WORD *)(v128 + 2 * k) = v122 * *(char *)(v126 + k) - ((v122 * v65 * *(char *)(v127 + k) + 512) >> 10);
        }
        ++v121;
        v128 += 64;
        v127 += 32;
        v126 += 48;
      }
      while (v121 != 32);
      goto LABEL_156;
    }
  }
  if (sub_100165FCC(a1, v244, v243, v232, v86, v85, 0))
  {
    sub_1001564C8(*(void *)(a1 + 240), 0x30u, 36, 0x30u, *(void *)(a1 + 248));
    uint64_t v91 = 0;
    unsigned int v92 = 0;
    int v93 = 0;
    int v94 = 0;
    int v253 = 0;
    uint64_t v96 = *(void *)(a1 + 248);
    uint64_t v95 = *(void *)(a1 + 256);
    uint64_t v97 = v96 + 49;
    uint64_t v98 = v95;
    do
    {
      uint64_t v110 = 48 * v91 + v96;
      unint64_t v111 = v110 + 81;
      int32x4_t v112 = (int8x16_t *)(v110 + 49);
      unint64_t v113 = v95 + 32 * v91;
      BOOL v115 = (unint64_t)&v253 < v111 && v112 < (int8x16_t *)v254;
      BOOL v116 = v113 >= (unint64_t)v254 || (unint64_t)&v253 >= v113 + 32;
      if (v116 && !v115)
      {
        int8x16_t v99 = *(int8x16_t *)(v95 + 32 * v91);
        int16x8_t v100 = vmovl_high_s8(v99);
        int16x8_t v101 = vmovl_s8(*(int8x8_t *)v99.i8);
        int16x8_t v102 = vmovl_high_s8(*v112);
        int16x8_t v103 = vmovl_s8(*(int8x8_t *)v112->i8);
        int8x16_t v104 = *(int8x16_t *)(v95 + ((32 * v91) | 0x10));
        int8x16_t v105 = *(int8x16_t *)(48 * v91 + v96 + 65);
        int16x8_t v106 = vmovl_s8(*(int8x8_t *)v104.i8);
        int16x8_t v107 = vmovl_high_s8(v104);
        int16x8_t v108 = vmovl_s8(*(int8x8_t *)v105.i8);
        int16x8_t v109 = vmovl_high_s8(v105);
        int v93 = vaddvq_s32(vaddq_s32(vaddq_s32(vmlal_s16(vmlal_s16((int32x4_t)v93, *(int16x4_t *)v101.i8, *(int16x4_t *)v101.i8), *(int16x4_t *)v106.i8, *(int16x4_t *)v106.i8), vmlal_s16(vmull_s16(*(int16x4_t *)v107.i8, *(int16x4_t *)v107.i8), *(int16x4_t *)v100.i8, *(int16x4_t *)v100.i8)), vaddq_s32(vmlal_high_s16(vmull_high_s16(v106, v106), v101, v101), vmlal_high_s16(vmull_high_s16(v107, v107), v100, v100))));
        unsigned int v92 = vaddvq_s32(vaddq_s32(vaddq_s32(vmlal_s16(vmlal_s16((int32x4_t)v92, *(int16x4_t *)v103.i8, *(int16x4_t *)v103.i8), *(int16x4_t *)v108.i8, *(int16x4_t *)v108.i8), vmlal_s16(vmull_s16(*(int16x4_t *)v109.i8, *(int16x4_t *)v109.i8), *(int16x4_t *)v102.i8, *(int16x4_t *)v102.i8)), vaddq_s32(vmlal_high_s16(vmull_high_s16(v108, v108), v103, v103), vmlal_high_s16(vmull_high_s16(v109, v109), v102, v102))));
        int v253 = vaddvq_s32(vaddq_s32(vaddq_s32(vmlal_s16(vmlal_s16((int32x4_t)v94, *(int16x4_t *)v103.i8, *(int16x4_t *)v101.i8), *(int16x4_t *)v108.i8, *(int16x4_t *)v106.i8), vmlal_s16(vmull_s16(*(int16x4_t *)v109.i8, *(int16x4_t *)v107.i8), *(int16x4_t *)v102.i8, *(int16x4_t *)v100.i8)), vaddq_s32(vmlal_high_s16(vmull_high_s16(v108, v106), v103, v101), vmlal_high_s16(vmull_high_s16(v109, v107), v102, v100))));
        int v94 = v253;
      }
      else
      {
        for (uint64_t m = 0; m != 32; ++m)
        {
          int v118 = *(char *)(v98 + m);
          int v119 = *(char *)(v97 + m);
          v93 += v118 * v118;
          v92 += v119 * v119;
          v94 += v119 * v118;
          int v253 = v94;
        }
      }
      ++v91;
      v97 += 48;
      v98 += 32;
    }
    while (v91 != 32);
    BOOL v120 = v93 < 1 || (int)v92 <= 0;
    if (v120)
    {
      *(_DWORD *)(a1 + 8) = 0;
    }
    else
    {
      int v160 = v94 / (int)((v93 + 512) >> 10);
      *(_DWORD *)(a1 + 8) = v160;
      int v161 = sub_10016FA14(v92);
      int v162 = 21 * v94 / v161;
      int v163 = v162 >> 3;
      int v253 = v162 >> 3;
      if (v162 >= 576)
      {
        uint64_t v164 = 0;
        v255 = (int *)&v252;
        unsigned int v165 = (v163 + 8) >> 4;
        unsigned int v256 = v165;
        uint64_t v123 = *(void *)(a1 + 264);
        int32x4_t v166 = vdupq_n_s32(v165);
        int32x4_t v167 = vdupq_n_s32(v160 * v165);
        uint64_t v168 = v96 + 49;
        uint64_t v169 = v95;
        uint64_t v170 = v123;
        do
        {
          uint64_t v194 = 48 * v164;
          unint64_t v195 = v95 + 32 * v164;
          uint64_t v196 = 48 * v164 + v96;
          unint64_t v197 = v196 + 81;
          unint64_t v198 = v196 + 49;
          unint64_t v199 = v123 + (v164 << 6);
          unint64_t v200 = v199 + 64;
          BOOL v202 = v199 < v195 + 32 && v195 < v200;
          if ((v198 >= v200 || v199 >= v197) && !v202)
          {
            uint64_t v171 = v194 + 48;
            int8x16_t v172 = *(int8x16_t *)(v96 + v194 + 49);
            uint16x8_t v173 = (uint16x8_t)vmovl_high_s8(v172);
            uint16x8_t v174 = (uint16x8_t)vmovl_s8(*(int8x8_t *)v172.i8);
            int8x16_t v175 = *(int8x16_t *)(v95 + 32 * v164);
            int16x8_t v176 = vmovl_high_s8(v175);
            int16x8_t v177 = vmovl_s8(*(int8x8_t *)v175.i8);
            v178.i64[0] = 0x20000000200;
            v178.i64[1] = 0x20000000200;
            int32x4_t v179 = vmlaq_s32(v178, v167, vmovl_high_s16(v176));
            v180.i64[0] = 0x20000000200;
            v180.i64[1] = 0x20000000200;
            int32x4_t v181 = vmlaq_s32(v180, v167, vmovl_s16(*(int16x4_t *)v176.i8));
            v176.i64[0] = 0x20000000200;
            v176.i64[1] = 0x20000000200;
            v182.i64[0] = 0x20000000200;
            v182.i64[1] = 0x20000000200;
            long long v183 = (int16x8_t *)(v123 + (v164 << 6));
            *long long v183 = vuzp1q_s16((int16x8_t)vmlaq_s32(vnegq_s32((int32x4_t)vshrq_n_u32((uint32x4_t)vmlaq_s32(v182, v167, vmovl_s16(*(int16x4_t *)v177.i8)), 0xAuLL)), v166, (int32x4_t)vmovl_u16(*(uint16x4_t *)v174.i8)), (int16x8_t)vmlaq_s32(vnegq_s32((int32x4_t)vshrq_n_u32((uint32x4_t)vmlaq_s32((int32x4_t)v176, v167, vmovl_high_s16(v177)), 0xAuLL)), v166, (int32x4_t)vmovl_high_u16(v174)));
            v183[1] = vuzp1q_s16((int16x8_t)vmlaq_s32(vnegq_s32((int32x4_t)vshrq_n_u32((uint32x4_t)v181, 0xAuLL)), v166, (int32x4_t)vmovl_u16(*(uint16x4_t *)v173.i8)), (int16x8_t)vmlaq_s32(vnegq_s32((int32x4_t)vshrq_n_u32((uint32x4_t)v179, 0xAuLL)), v166, (int32x4_t)vmovl_high_u16(v173)));
            int8x16_t v184 = *(int8x16_t *)(v171 + v96 + 17);
            uint16x8_t v185 = (uint16x8_t)vmovl_high_s8(v184);
            uint16x8_t v186 = (uint16x8_t)vmovl_s8(*(int8x8_t *)v184.i8);
            uint64_t v187 = (32 * v164) | 0x10;
            int8x16_t v188 = *(int8x16_t *)(v95 + v187);
            int16x8_t v189 = vmovl_high_s8(v188);
            int16x8_t v190 = vmovl_s8(*(int8x8_t *)v188.i8);
            v179.i64[0] = 0x20000000200;
            v179.i64[1] = 0x20000000200;
            uint32x4_t v191 = (uint32x4_t)vmlaq_s32(v179, v167, vmovl_high_s16(v189));
            v181.i64[0] = 0x20000000200;
            v181.i64[1] = 0x20000000200;
            uint32x4_t v192 = (uint32x4_t)vmlaq_s32(v181, v167, vmovl_s16(*(int16x4_t *)v189.i8));
            v189.i64[0] = 0x20000000200;
            v189.i64[1] = 0x20000000200;
            v182.i64[0] = 0x20000000200;
            v182.i64[1] = 0x20000000200;
            uint64_t v193 = (int16x8_t *)(v123 + 2 * v187);
            *uint64_t v193 = vuzp1q_s16((int16x8_t)vmlaq_s32(vnegq_s32((int32x4_t)vshrq_n_u32((uint32x4_t)vmlaq_s32(v182, v167, vmovl_s16(*(int16x4_t *)v190.i8)), 0xAuLL)), v166, (int32x4_t)vmovl_u16(*(uint16x4_t *)v186.i8)), (int16x8_t)vmlaq_s32(vnegq_s32((int32x4_t)vshrq_n_u32((uint32x4_t)vmlaq_s32((int32x4_t)v189, v167, vmovl_high_s16(v190)), 0xAuLL)), v166, (int32x4_t)vmovl_high_u16(v186)));
            v193[1] = vuzp1q_s16((int16x8_t)vmlaq_s32(vnegq_s32((int32x4_t)vshrq_n_u32(v192, 0xAuLL)), v166, (int32x4_t)vmovl_u16(*(uint16x4_t *)v185.i8)), (int16x8_t)vmlaq_s32(vnegq_s32((int32x4_t)vshrq_n_u32(v191, 0xAuLL)), v166, (int32x4_t)vmovl_high_u16(v185)));
          }
          else
          {
            for (uint64_t n = 0; n != 32; ++n)
              *(_WORD *)(v170 + 2 * n) = v165 * *(char *)(v168 + n) - ((v160 * v165 * *(char *)(v169 + n) + 512) >> 10);
          }
          ++v164;
          v170 += 64;
          v169 += 32;
          v168 += 48;
        }
        while (v164 != 32);
LABEL_156:
        uint64_t v206 = *(void *)(a1 + 296);
        int v208 = v247;
        __int32 v207 = v248;
        uint64_t v209 = *(void *)(a1 + 80);
        if (!*(unsigned char *)(a1 + 88))
        {
          if (!v209) {
            operator new[]();
          }
          uint64_t v257 = 0x124095809200FFFLL;
          *(_WORD *)uint64_t v209 = 0;
          for (iunsigned int i = 1; ii != 0x1FFF; ++ii)
          {
            uint64_t v211 = (ii >> 6) & 1;
            __int16 v212 = *(_WORD *)((unint64_t)&v257 & 0xFFFFFFFFFFFFFFFDLL | (2 * v211));
            *(_WORD *)(v209 + 2 * ii) = v212 >> 1;
            __int16 v213 = 2 * v212;
            if ((v212 & 0x800) != 0) {
              v213 ^= word_1001AC0A0[v211];
            }
            *(_WORD *)((unint64_t)&v257 | (2 * v211)) = v213;
          }
          *(_DWORD *)(v209 + 16382) = 0;
          unint64_t v214 = 8193;
          uint64_t v215 = 8190;
          do
          {
            uint64_t v216 = (v214 >> 6) & 1 | 2;
            uint64_t v217 = (__int16 *)((unint64_t)&v257 | (2 * v216));
            __int16 v218 = *v217;
            *(_WORD *)(v209 + 2 * v214) = *v217 >> 1;
            __int16 v219 = 2 * v218;
            if ((v218 & 0x800) != 0) {
              v219 ^= word_1001AC0A0[v216];
            }
            *uint64_t v217 = v219;
            ++v214;
            --v215;
          }
          while (v215);
          *(_WORD *)(v209 + 32766) = 0;
          *(unsigned char *)(a1 + 88) = 1;
        }
        uint64_t v220 = 0;
        unsigned int v221 = v208 - 16 + ((((v208 - 16) & ~((v208 - 16) >> 31)) - v208 + 143) & 0xFFFFFF80);
        unsigned int v222 = v207 - 16 + ((((v207 - 16) & ~((v207 - 16) >> 31)) - v207 + 143) & 0xFFFFFF80);
        int v223 = *(_DWORD *)(a1 + 92);
        int v224 = *(_DWORD *)(a1 + 96);
        do
        {
          uint64_t v225 = 0;
          if ((int)(v221 + v220) <= 0) {
            int v226 = -(-(v221 + v220) & 0x7F);
          }
          else {
            int v226 = (v221 + v220) & 0x7F;
          }
          int v227 = v226 << 7;
          do
          {
            if ((int)(v222 + v225) <= 0) {
              int v228 = -(-(v222 + v225) & 0x7F);
            }
            else {
              int v228 = (v222 + v225) & 0x7F;
            }
            unsigned int v229 = *(unsigned __int16 *)(v209 + 2 * (v228 + v227));
            int v230 = *(unsigned __int16 *)(v123 + 2 * v225);
            BOOL v120 = v223 <= (int)v229;
            uint64_t v231 = 2 * (v224 & v229);
            if (!v120) {
              int v230 = -v230;
            }
            *(_WORD *)(v206 + v231) += v230;
            ++v225;
          }
          while (v225 != 32);
          ++v220;
          v123 += 64;
        }
        while (v220 != 32);
        *(int32x2_t *)(a1 + 40) = vadd_s32(*(int32x2_t *)(a1 + 40), (int32x2_t)(v250 | 0x100000000));
        return 1;
      }
    }
    int v80 = v245;
    int v79 = v246;
    *(_DWORD *)(a1 + 32) = v246;
    *(_DWORD *)(a1 + 36) = v80;
    if (v235) {
      return 1;
    }
    *(_DWORD *)(a1 + 24) = v79;
    *(_DWORD *)(a1 + 28) = v80;
    if (v234) {
      return 1;
    }
LABEL_165:
    *(_DWORD *)(a1 + 16) = v79;
    *(_DWORD *)(a1 + 20) = v80;
    return 1;
  }
  uint64_t result = 0;
  if (v233) {
    --*(_DWORD *)(a1 + 64);
  }
  return result;
}

uint64_t sub_100165FCC(uint64_t a1, int a2, int a3, int *a4, int a5, int a6, int a7)
{
  if (a7) {
    int v7 = 18;
  }
  else {
    int v7 = 17;
  }
  int v8 = a2 - v7;
  int v9 = a3 - v7;
  int v10 = a4[1];
  int v11 = a4[3];
  int v12 = v10 * v9 + (*(_DWORD *)(a1 + 280) << 20) + v11 * v8 + ((v10 * a6 + v11 * a5) >> 8);
  int v13 = v12 + 36 * (v11 + v10);
  if (v11 < 0) {
    int v14 = v12 + 36 * v11;
  }
  else {
    int v14 = v10 * v9 + (*(_DWORD *)(a1 + 280) << 20) + v11 * v8 + ((v10 * a6 + v11 * a5) >> 8);
  }
  if (v11 < 0) {
    int v15 = v12 + 36 * v10;
  }
  else {
    int v15 = v12 + 36 * (v11 + v10);
  }
  if (v11 < 0)
  {
    int v16 = v10 * v9 + (*(_DWORD *)(a1 + 280) << 20) + v11 * v8 + ((v10 * a6 + v11 * a5) >> 8);
  }
  else
  {
    int v13 = v12 + 36 * v10;
    int v16 = v12 + 36 * v11;
  }
  if (v10 >= 0)
  {
    int v13 = v14;
    int v16 = v15;
  }
  if (v13 < 0) {
    return 0;
  }
  int v17 = *(_DWORD *)(a1 + 272);
  if (v16 < v13 || v16 >> 20 >= v17 - 1) {
    return 0;
  }
  int v19 = *a4;
  int v20 = a4[2];
  int v21 = v19 * v9 + (*(_DWORD *)(a1 + 284) << 20) + v20 * v8 + ((v19 * a6 + v20 * a5) >> 8);
  int v22 = v21 + 36 * (v20 + *a4);
  if (v20 < 0) {
    int v23 = v21 + 36 * v20;
  }
  else {
    int v23 = v21;
  }
  if (v20 < 0) {
    int v24 = v21 + 36 * *a4;
  }
  else {
    int v24 = v21 + 36 * (v20 + *a4);
  }
  if (v20 < 0)
  {
    int v25 = v21;
  }
  else
  {
    int v22 = v21 + 36 * *a4;
    int v25 = v21 + 36 * v20;
  }
  if (v19 >= 0)
  {
    int v22 = v23;
    int v25 = v24;
  }
  if (v22 < 0) {
    return 0;
  }
  if (v25 < v22 || v25 >> 20 >= *(_DWORD *)(a1 + 276) - 1) {
    return 0;
  }
  uint64_t v28 = *(void *)(a1 + 288);
  if (*(_DWORD *)(a1 + 12) == 1)
  {
    uint64_t v29 = 0;
    uint64_t v30 = *(void *)(a1 + 240);
    int v31 = v12 + 512;
    int v32 = v21 + 512;
    uint64_t v33 = (unsigned __int16)*(_DWORD *)(a1 + 272);
    do
    {
      uint64_t v34 = 0;
      int v35 = v32;
      int v36 = v31;
      do
      {
        int v37 = (v36 >> 10) & 0x3FF;
        uint64_t v38 = (v35 >> 20) * (int)v33 + (uint64_t)(v36 >> 20);
        int v39 = (*(unsigned __int8 *)(v28 + v38 + 1) - *(unsigned __int8 *)(v28 + v38)) * v37
            + (*(unsigned __int8 *)(v28 + v38) << 10);
        *(unsigned char *)(v30 + v34) = ((((*(unsigned __int8 *)(v28 + v33 + v38 + 1)
                                                - *(unsigned __int8 *)(v28 + v33 + v38))
                                               * v37
                                               - v39
                                               + (*(unsigned __int8 *)(v28 + v33 + v38) << 10)) >> 5)
                               * ((v35 >> 10) & 0x3FF)
                               + 32 * v39) >> 15;
        v36 += v11;
        v35 += v20;
        ++v34;
      }
      while (v34 != 36);
      v31 += v10;
      v32 += v19;
      ++v29;
      v30 += 48;
    }
    while (v29 != 36);
  }
  else
  {
    uint64_t v40 = 0;
    uint64_t v41 = *(void *)(a1 + 240);
    int v42 = v12 + 512;
    int v43 = v21 + 512;
    uint64_t v44 = 2 * (v17 & 0x7FFF);
    do
    {
      uint64_t v45 = 0;
      int v46 = v43;
      int v47 = v42;
      do
      {
        int v48 = (v47 >> 10) & 0x3FF;
        unint64_t v49 = (((uint64_t)v47 >> 19) & 0xFFFFFFFFFFFFFFFELL) + (v46 >> 20) * (int)v44;
        int v50 = (*(unsigned __int8 *)(v49 + v28 + 3) - *(unsigned __int8 *)(v28 + (v49 | 1))) * v48
            + (*(unsigned __int8 *)(v28 + (v49 | 1)) << 10);
        *(unsigned char *)(v41 + v45) = ((((*(unsigned __int8 *)(v49 + v44 + v28 + 3)
                                                - *(unsigned __int8 *)(v28 + ((v49 + v44) | 1)))
                                               * v48
                                               - v50
                                               + (*(unsigned __int8 *)(v28 + ((v49 + v44) | 1)) << 10)) >> 5)
                               * ((v46 >> 10) & 0x3FF)
                               + 32 * v50) >> 15;
        v47 += v11;
        v46 += v20;
        ++v45;
      }
      while (v45 != 36);
      v42 += v10;
      v43 += v19;
      ++v40;
      v41 += 48;
    }
    while (v40 != 36);
  }
  return 1;
}

uint64_t sub_100166270(uint64_t a1, unsigned int a2)
{
  if (!*(unsigned char *)(a1 + 16)) {
    return 5;
  }
  uint64_t v3 = *(void *)(a1 + 240);
  if (!v3) {
    return 3;
  }
  if (a2 > 3) {
    return 2;
  }
  switch(a2)
  {
    case 0u:
      if (!*(void *)(a1 + 48 * a2 + 64))
      {
        int v30 = *(unsigned __int16 *)(a1 + 248);
        int v31 = (_DWORD *)(a1 + 48 * a2);
        int v32 = *(unsigned __int16 *)(a1 + 250);
        v31[20] = v32;
        v31[21] = v30;
        int v33 = 2 * *(unsigned __int16 *)(a1 + 42);
        int v34 = v33 + v30;
        *(unsigned char *)(a1 + 40) = 1;
        v31[18] = v33 + v32;
        v31[19] = v34;
        v31[22] = v34;
        v31[23] = 1;
        operator new[]();
      }
      int v35 = *(_DWORD *)(a1 + 268);
      BOOL v36 = v35 == 1;
      if (v35 == 1) {
        unsigned __int16 v37 = HIWORD(*(_DWORD *)(a1 + 260));
      }
      else {
        unsigned __int16 v37 = *(_DWORD *)(a1 + 260);
      }
      if (v36) {
        unsigned __int16 v38 = *(_DWORD *)(a1 + 260);
      }
      else {
        unsigned __int16 v38 = HIWORD(*(_DWORD *)(a1 + 260));
      }
      convertUV2SignalSpace_Hx16W_N64(v3, *(unsigned __int16 *)(a1 + 252), *(void *)(a1 + 48 * a2 + 56), *(unsigned __int16 *)(a1 + 48 * a2 + 88), *(unsigned __int16 *)(a1 + 250), *(unsigned __int16 *)(a1 + 248) >> 4, v38 | (v37 << 16), *(__int16 *)(a1 + 264));
      break;
    case 1u:
      if (!*(void *)(a1 + 48 * a2 + 64))
      {
        int v39 = *(unsigned __int16 *)(a1 + 250) >> 1;
        uint64_t v40 = (_DWORD *)(a1 + 48 * a2);
        int v41 = (*(unsigned __int16 *)(a1 + 248) >> 1) & 0x7FF8;
        v40[20] = v39;
        v40[21] = v41;
        int v42 = 2 * *(unsigned __int16 *)(a1 + 42);
        v40[18] = v42 + v39;
        v40[19] = v42 + v41;
        operator new[]();
      }
      uint64_t v5 = a1 + 48 * a2;
      uint64_t v6 = *(void *)(v5 + 56);
      int v7 = *(_DWORD *)(v5 + 88);
      uint64_t v43 = a1 + 48 * a2;
      uint64_t v44 = *(unsigned __int16 *)(v43 + 80);
      unsigned int v45 = *(_DWORD *)(v43 + 84);
      uint64_t v46 = *(unsigned __int16 *)(a1 + 264);
      uint64_t v47 = *(unsigned int *)(a1 + 260);
      int v48 = *(_DWORD *)(a1 + 268);
      BOOL v49 = v48 == 1;
      if (v48 == 1) {
        __int16 v50 = *(_DWORD *)(a1 + 260);
      }
      else {
        __int16 v50 = HIWORD(*(_DWORD *)(a1 + 260));
      }
      if (v49) {
        LODWORD(v47) = (v47 | (unint64_t)(v46 << 32)) >> 16;
      }
      convertUVDownsample_2x2_2Hx16W_N64(v3, *(unsigned __int16 *)(a1 + 252), v6, (unsigned __int16)v7, v44, (unsigned __int16)(v45 >> 3), ((int)((v47 + (((__int16)v47 >> 29) & 3)) << 16) >> 2) & 0xFFFF0000 | (unsigned __int16)((__int16)(v50 + ((v50 >> 29) & 3)) >> 2), (__int16)v46);
      break;
    case 2u:
      if (!*(void *)(a1 + 48 * a2 + 64))
      {
        unsigned int v11 = *(unsigned __int16 *)(a1 + 250) / 3u;
        int v12 = (_DWORD *)(a1 + 48 * a2);
        unsigned int v13 = (*(unsigned __int16 *)(a1 + 248) / 3u) & 0x7FF8;
        v12[20] = v11;
        v12[21] = v13;
        int v14 = 2 * *(unsigned __int16 *)(a1 + 42);
        v12[18] = v14 + v11;
        v12[19] = v14 + v13;
        operator new[]();
      }
      uint64_t v8 = a1 + 48 * a2;
      uint64_t v9 = *(void *)(v8 + 56);
      int v10 = *(_DWORD *)(v8 + 88);
      uint64_t v15 = a1 + 48 * a2;
      uint64_t v16 = *(unsigned __int16 *)(v15 + 80);
      unsigned int v17 = *(_DWORD *)(v15 + 84);
      int v18 = *(_DWORD *)(a1 + 260);
      int v19 = *(_DWORD *)(a1 + 268);
      BOOL v20 = v19 == 1;
      if (v19 == 1) {
        __int16 v21 = *(_DWORD *)(a1 + 260);
      }
      else {
        __int16 v21 = HIWORD(*(_DWORD *)(a1 + 260));
      }
      if (v20) {
        LOWORD(v18) = HIWORD(*(_DWORD *)(a1 + 260));
      }
      convertUVDownsample_3x3_3Hx24W_N64(v3, *(unsigned __int16 *)(a1 + 252), v9, (unsigned __int16)v10, v16, (unsigned __int16)(v17 >> 3), (unsigned __int16)(v21 / 9) | ((unsigned __int16)((__int16)v18 / 9) << 16), *(__int16 *)(a1 + 264));
      break;
    case 3u:
      if (!*(void *)(a1 + 48 * a2 + 64))
      {
        int v22 = *(unsigned __int16 *)(a1 + 250) >> 2;
        int v23 = (_DWORD *)(a1 + 48 * a2);
        int v24 = (*(unsigned __int16 *)(a1 + 248) >> 2) & 0x3FF8;
        v23[20] = v22;
        v23[21] = v24;
        int v25 = 2 * *(unsigned __int16 *)(a1 + 42);
        v23[18] = v25 + v22;
        v23[19] = v25 + v24;
        operator new[]();
      }
      int v26 = *(_DWORD *)(a1 + 268);
      BOOL v27 = v26 == 1;
      if (v26 == 1) {
        unsigned __int16 v28 = HIWORD(*(_DWORD *)(a1 + 260));
      }
      else {
        unsigned __int16 v28 = *(_DWORD *)(a1 + 260);
      }
      if (v27) {
        unsigned __int16 v29 = *(_DWORD *)(a1 + 260);
      }
      else {
        unsigned __int16 v29 = HIWORD(*(_DWORD *)(a1 + 260));
      }
      convertUVDownsample_4x4_4Hx32W_N64(v3, *(unsigned __int16 *)(a1 + 252), *(void *)(a1 + 48 * a2 + 56), (unsigned __int16)*(_DWORD *)(a1 + 48 * a2 + 88), *(unsigned __int16 *)(a1 + 48 * a2 + 80), (unsigned __int16)(*(_DWORD *)(a1 + 48 * a2 + 84) >> 3), v29 | (v28 << 16), *(__int16 *)(a1 + 264));
      break;
    default:
      return 0;
  }
  return 0;
}

uint64_t sub_10016672C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_100166734(uint64_t a1, unsigned int a2)
{
  if (*(_DWORD *)(a1 + 32) <= a2) {
    return 0;
  }
  else {
    return *(void *)(*(void *)(a1 + 24) + 8 * a2);
  }
}

uint64_t sub_100166754(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 36) <= 9u) {
    operator new[]();
  }
  *(unsigned char *)(a1 + 16) = 1;
  return 0;
}

void sub_1001667FC(uint64_t a1)
{
  sub_10016F8D4(a1);

  operator delete();
}

void *sub_100166838(void *result)
{
  id v1 = (void *)*result;
  if (*result)
  {
    if (v1[3]) {
      operator delete[]();
    }
    if (v1[4]) {
      operator delete[]();
    }
    if (v1[5]) {
      operator delete[]();
    }
    if (v1[10]) {
      operator delete[]();
    }
    if (v1[7]) {
      operator delete[]();
    }
    operator delete();
  }
  if (result[1]) {
    operator delete[]();
  }
  return result;
}

void sub_100166924(uint64_t a1, unsigned int a2, char a3)
{
  *(unsigned char *)(a1 + 20) = a3;
  *(_WORD *)(a1 + 18) = a2;
  *(unsigned char *)(a1 + 21) = 0x39C / a2;
  *(_WORD *)(a1 + 16) = (0x39C / a2) * (_WORD)a2;
  operator new[]();
}

uint64_t sub_100166D9C(uint64_t a1, uint64_t a2, int a3, int a4, float a5, float a6, float a7)
{
  unsigned int v10 = a2;
  uint64_t v12 = sub_10016F2EC(a1, a2, a3, a4);
  if (!v12)
  {
    unsigned int v16 = *(_DWORD *)(a1 + 284);
    if (v16 == *(_DWORD *)(a1 + 280)) {
      operator new[]();
    }
    unsigned int v17 = (float *)(*(void *)(a1 + 272) + 12 * v16);
    *unsigned int v17 = a5;
    v17[1] = a6;
    id v17[2] = a7;
    *(_DWORD *)(a1 + 284) = v16 + 1;
    unsigned int v18 = *(unsigned __int16 *)(a1 + 250) / v10;
    unsigned int v19 = *(unsigned __int16 *)(a1 + 248) / v10;
    sub_1001670C4(&v29, a1, (*(unsigned char *)(a1 + 32) - 1), 0x80u, 0x80u, v18, v19, v13, v14, v15);
    unsigned int v21 = *(_DWORD *)(a1 + 308);
    if (v21 == *(_DWORD *)(a1 + 304)) {
      operator new[]();
    }
    int v22 = (_OWORD *)(*(void *)(a1 + 296) + 32 * v21);
    double v23 = *(double *)&v29;
    long long v24 = v30;
    *int v22 = v29;
    v22[1] = v24;
    ++*(_DWORD *)(a1 + 308);
    sub_1001670C4(&v29, a1, (*(unsigned char *)(a1 + 32) - 1), 0x1E0u, 0x1E0u, v18, v19, v23, *(float *)&v24, v20);
    unsigned int v25 = *(_DWORD *)(a1 + 332);
    if (v25 == *(_DWORD *)(a1 + 328)) {
      operator new[]();
    }
    int v26 = (_OWORD *)(*(void *)(a1 + 320) + 32 * v25);
    long long v27 = v30;
    _OWORD *v26 = v29;
    v26[1] = v27;
    ++*(_DWORD *)(a1 + 332);
  }
  return v12;
}

void sub_1001670C4(_OWORD *a1, uint64_t a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6, unsigned int a7, double a8, float a9, float a10)
{
  if (*(_DWORD *)(a2 + 284) <= a3) {
    unsigned int v11 = 0;
  }
  else {
    unsigned int v11 = a3;
  }
  uint64_t v12 = (float *)(*(void *)(a2 + 272) + 12 * v11);
  if (v12[1] == 0.0 || (float v13 = *v12, *v12 == 0.0))
  {
    *a1 = xmmword_1001AC1B0;
    a1[1] = xmmword_1001AC1B0;
  }
  else
  {
    float v100 = v12[1];
    float v14 = v12[2];
    uint64_t v15 = *(void *)(*(void *)(a2 + 24) + 8 * a3);
    LOWORD(a9) = *(_WORD *)(v15 + 2);
    *(float *)&unsigned int v16 = (float)LODWORD(a9);
    LOBYTE(a10) = *(unsigned char *)v15;
    float v17 = (float)LODWORD(a10);
    float v18 = *(float *)&v16 * (float)LODWORD(a10);
    LOWORD(v16) = *(_WORD *)(v15 + 4);
    float v112 = (float)LODWORD(a10) * (float)v16;
    float v19 = 1.0
        / (float)((float)((float)((float)((float)(v13 * v13) + (float)((float)(v18 * 0.0) * 0.0)) + (float)(v112 * 0.0))
                        + 0.0)
                - (float)((float)((float)((float)(v13 * v112) * 0.0) + 0.0) + (float)((float)(v13 * v18) * 0.0)));
    float v105 = v19 * (float)(v18 * 0.0);
    float v106 = (float)(v13 + (float)(v112 * -0.0)) * v19;
    float v111 = v18;
    float v107 = v19 * (float)(v112 * 0.0);
    float v103 = v19 * (float)((float)(v112 * 0.0) - (float)(v18 * v13));
    float v104 = v19 * (float)(v13 + (float)(v18 * -0.0));
    float v108 = v19 * (float)((float)(v18 * 0.0) - (float)(v13 * v112));
    float v109 = v19 * (float)((float)(v13 * -0.0) + 0.0);
    float v110 = v19 * (float)(v13 * v13);
    float v20 = 1.0 / (float)(v17 * v17);
    float v21 = v20 * 0.0;
    float v113 = v20 * v17;
    float v114 = v20 * (float)(v17 * v17);
    float v101 = (float)((float)a6 - (float)a4) * 0.5;
    float v102 = (float)((float)a7 - (float)a5) * 0.5;
    __float2 v22 = __sincosf_stret((float)(v14 * 3.1415) / 180.0);
    __float2 v23 = __sincosf_stret((float)(v100 * 3.1415) / 180.0);
    float v24 = (float)(v22.__cosval + (float)(v22.__sinval * -0.0)) + 0.0;
    float v25 = (float)(v22.__sinval + (float)(v22.__cosval * 0.0)) + 0.0;
    float v26 = (float)((float)(v22.__cosval * 0.0) - (float)(v22.__sinval * v23.__cosval)) + (float)(v23.__sinval * -0.0);
    float v27 = (float)((float)(v23.__cosval * v22.__cosval) + (float)(v22.__sinval * 0.0)) + (float)(v23.__sinval * -0.0);
    float v28 = (float)((float)(v22.__cosval * 0.0) - (float)(v22.__sinval * v23.__sinval)) + (float)(v23.__cosval * 0.0);
    float v29 = (float)((float)(v23.__sinval * v22.__cosval) + (float)(v22.__sinval * 0.0)) + (float)(v23.__cosval * 0.0);
    float v30 = (float)((float)(v22.__cosval * v24) - (float)(v22.__sinval * v26)) + (float)(v28 * 0.0);
    float v31 = (float)((float)(v22.__cosval * v25) - (float)(v22.__sinval * v27)) + (float)(v29 * 0.0);
    float v32 = (float)((float)(v22.__cosval * v26) + (float)(v22.__sinval * v24)) + (float)(v28 * 0.0);
    float v33 = (float)((float)(v22.__cosval * v27) + (float)(v22.__sinval * v25)) + (float)(v29 * 0.0);
    float v34 = v28 + (float)((float)(v26 * 0.0) + (float)(v24 * 0.0));
    float v35 = v29 + (float)((float)(v27 * 0.0) + (float)(v25 * 0.0));
    float v36 = (float)((float)((float)((float)(v30 * v33) + (float)((float)(v32 * 0.0) * v35))
                        + (float)((float)(v34 * v31) * 0.0))
                + 0.0)
        - (float)((float)((float)(v32 * v31) + (float)((float)(v30 * 0.0) * v35)) + (float)((float)(v33 * 0.0) * v34));
    float v37 = v35 * -0.0;
    float v38 = -(float)(v31 - (float)(v35 * 0.0));
    float v39 = (float)(v33 * -0.0) + (float)(v31 * 0.0);
    float v40 = (float)(v32 * v35) - (float)(v33 * v34);
    float v41 = (float)(v31 * v34) - (float)(v30 * v35);
    float v42 = (float)(v30 * -0.0) + (float)(v32 * 0.0);
    float v43 = -(float)(v31 * v32);
    float v44 = 1.0 / v36;
    float v45 = (float)(v33 + v37) * v44;
    float v46 = v44 * v38;
    float v47 = v44 * v39;
    float v48 = v44 * (float)-(float)(v32 - (float)(v34 * 0.0));
    float v49 = v44 * (float)(v30 + (float)(v34 * -0.0));
    float v50 = v44 * v42;
    float v51 = v44 * v40;
    float v52 = v44 * v41;
    float v53 = v44 * (float)(v43 + (float)(v30 * v33));
    float v54 = (float)((float)(v101 * 0.0) + (float)(v17 * v102)) + 0.0;
    float v55 = (float)((float)(v101 * v17) + (float)(v102 * 0.0)) + 0.0;
    float v56 = (float)((float)(v101 * 0.0) + (float)(v102 * 0.0)) + 1.0;
    float v57 = (float)((float)(v105 * 0.0) + (float)(v106 * v17)) + (float)(v103 * 0.0);
    float v58 = (float)((float)(v105 * v17) + (float)(v106 * 0.0)) + (float)(v103 * 0.0);
    float v59 = (float)((float)(v105 * v55) + (float)(v106 * v54)) + (float)(v103 * v56);
    float v60 = (float)((float)(v104 * 0.0) + (float)(v107 * v17)) + (float)(v108 * 0.0);
    float v61 = (float)((float)(v104 * v17) + (float)(v107 * 0.0)) + (float)(v108 * 0.0);
    float v62 = (float)((float)(v104 * v55) + (float)(v107 * v54)) + (float)(v108 * v56);
    float v63 = (float)(v109 * v55) + (float)(v109 * v54);
    float v64 = (float)((float)(v109 * 0.0) + (float)(v109 * v17)) + (float)(v110 * 0.0);
    float v65 = (float)((float)(v109 * v17) + (float)(v109 * 0.0)) + (float)(v110 * 0.0);
    float v66 = v63 + (float)(v110 * v56);
    float v67 = (float)((float)(v46 * v60) + (float)(v45 * v57)) + (float)(v47 * v64);
    float v68 = (float)((float)(v46 * v61) + (float)(v45 * v58)) + (float)(v47 * v65);
    float v69 = (float)((float)(v46 * v62) + (float)(v45 * v59)) + (float)(v47 * v66);
    float v70 = (float)((float)(v49 * v60) + (float)(v48 * v57)) + (float)(v50 * v64);
    float v71 = (float)((float)(v49 * v61) + (float)(v48 * v58)) + (float)(v50 * v65);
    float v72 = (float)((float)(v49 * v62) + (float)(v48 * v59)) + (float)(v50 * v66);
    float v73 = (float)((float)(v52 * v60) + (float)(v51 * v57)) + (float)(v53 * v64);
    float v74 = (float)((float)(v52 * v61) + (float)(v51 * v58)) + (float)(v53 * v65);
    float v75 = (float)((float)(v52 * v62) + (float)(v51 * v59)) + (float)(v53 * v66);
    float v76 = v70 * 0.0;
    float v77 = (float)((float)(v70 * 0.0) + (float)(v13 * v67)) + (float)(v111 * v73);
    float v78 = v71 * 0.0;
    float v79 = (float)((float)(v71 * 0.0) + (float)(v13 * v68)) + (float)(v111 * v74);
    float v80 = v72 * 0.0;
    float v81 = (float)((float)(v72 * 0.0) + (float)(v13 * v69)) + (float)(v111 * v75);
    float v82 = (float)((float)(v13 * v70) + (float)(v67 * 0.0)) + (float)(v112 * v73);
    float v83 = (float)((float)(v13 * v71) + (float)(v68 * 0.0)) + (float)(v112 * v74);
    float v84 = (float)((float)(v13 * v72) + (float)(v69 * 0.0)) + (float)(v112 * v75);
    float v85 = v73 + (float)(v76 + (float)(v67 * 0.0));
    float v86 = v74 + (float)(v78 + (float)(v68 * 0.0));
    float v87 = v75 + (float)(v80 + (float)(v69 * 0.0));
    float v88 = v21 * v82;
    float v89 = (float)(v21 * v82) + (float)(v113 * v77);
    float v90 = v21 * v83;
    float v91 = (float)(v113 * v82) + (float)(v21 * v77);
    float v92 = v88 + (float)(v21 * v77);
    float v93 = (float)(v21 * v83) + (float)(v113 * v79);
    v94.f32[0] = v89 + (float)(v21 * v85);
    v95.f32[0] = (float)((float)(v113 * v83) + (float)(v21 * v79)) + (float)(v21 * v86);
    v94.f32[1] = v93 + (float)(v21 * v86);
    v94.i64[1] = __PAIR64__(v91 + (float)(v21 * v85), (float)((float)(v21 * v84) + (float)(v113 * v81)) + (float)(v21 * v87));
    v95.f32[1] = (float)((float)(v113 * v84) + (float)(v21 * v81)) + (float)(v21 * v87);
    v95.f32[2] = v92 + (float)(v114 * v85);
    v95.f32[3] = (float)(v90 + (float)(v21 * v79)) + (float)(v114 * v86);
    float v96 = 1.0 / (float)((float)((float)(v21 * v84) + (float)(v21 * v81)) + (float)(v114 * v87));
    float32x4_t v97 = (float32x4_t)vdupq_n_s32(0x49800000u);
    v98.i64[0] = 0x3F0000003F000000;
    v98.i64[1] = 0x3F0000003F000000;
    v99.i64[0] = 0x3F0000003F000000;
    v99.i64[1] = 0x3F0000003F000000;
    *a1 = vcvtq_s32_f32(vrndmq_f32(vmlaq_f32(v98, v97, vmulq_n_f32(v94, v96))));
    a1[1] = vcvtq_s32_f32(vrndmq_f32(vmlaq_f32(v99, v97, vmulq_n_f32(v95, v96))));
  }
}

uint64_t sub_10016761C(uint64_t a1, unsigned int a2, uint64_t *a3, _DWORD *a4, _DWORD *a5, _DWORD *a6, _DWORD *a7, int *a8)
{
  if (!*(unsigned char *)(a1 + 16)) {
    return 5;
  }
  if (!a3) {
    return 3;
  }
  if (*(_DWORD *)(a1 + 32) <= a2) {
    return 2;
  }
  if (*(_DWORD *)(a1 + 284) <= a2) {
    unsigned int v16 = 0;
  }
  else {
    unsigned int v16 = a2;
  }
  uint64_t v17 = *(void *)(a1 + 272) + 12 * v16;
  float v18 = *(unsigned __int8 ***)(a1 + 24);
  if (*(float *)(v17 + 4) == 0.0 && *(float *)(v17 + 8) == 0.0)
  {
    uint64_t v19 = (uint64_t)*v18;
    uint64_t v20 = a1 + 48 * (*(int (**)(uint64_t, void))(*(void *)a1 + 72))(a1, **v18);
    *a3 = *(void *)(v20 + 64);
    *a4 = *(_DWORD *)(v20 + 72);
    *a5 = *(_DWORD *)(v20 + 76);
    *a6 = *(unsigned __int16 *)(v19 + 2) + ((*(_DWORD *)(v20 + 76) - *(_DWORD *)(v20 + 84)) >> 1);
    *a7 = *(unsigned __int16 *)(v19 + 4) + ((*(_DWORD *)(v20 + 72) - *(_DWORD *)(v20 + 80)) >> 1);
    int v21 = *(_DWORD *)(v20 + 92);
  }
  else
  {
    int v23 = (*(uint64_t (**)(uint64_t, void))(*(void *)a1 + 72))(a1, *v18[a2]);
    if (*(_DWORD *)(a1 + 332) <= a2) {
      uint64_t v24 = 0;
    }
    else {
      uint64_t v24 = a2;
    }
    uint64_t v25 = *(void *)(a1 + 320) + 32 * v24;
    long long v35 = *(_OWORD *)v25;
    uint64_t v36 = *(void *)(v25 + 16);
    uint64_t v26 = a1 + 48 * v23;
    uint64_t v27 = *(void *)(v26 + 64);
    uint64_t v28 = *(void *)(a1 + 344);
    if (v27) {
      BOOL v29 = v28 == 0;
    }
    else {
      BOOL v29 = 1;
    }
    if (!v29)
    {
      int v30 = *(_DWORD *)(v26 + 88);
      int v31 = *(_DWORD *)(v26 + 76);
      if ((unsigned __int16)v31 <= (unsigned __int16)v30)
      {
        int v32 = *(_DWORD *)(v25 + 24);
        int v33 = *(_DWORD *)(v25 + 28);
        int v34 = *(_DWORD *)(v26 + 72);
        v41[4] = sub_100156AD0;
        v41[1] = sub_100156B80;
        v41[0] = sub_100156EC0;
        v41[2] = sub_100157204;
        v41[3] = sub_1001572C8;
        if (v32)
        {
          if (!v33)
          {
            long long v37 = v35;
            uint64_t v38 = v36;
            int v39 = v32;
            int v40 = 0;
            sub_10015671C(v27, (unsigned __int16)v30, (unsigned __int16)v34, (unsigned __int16)v31, v28, 480, (uint64_t)&v37, 0x1Eu, 0x1Eu, (uint64_t)v41);
          }
        }
        else
        {
          long long v37 = v35;
          uint64_t v38 = v36;
          int v39 = 0;
          int v40 = v33;
          sub_1001568F8(v27, (unsigned __int16)v30, (unsigned __int16)v34, (unsigned __int16)v31, v28, 480, (uint64_t)&v37, 0x1Eu, 0x1Eu, (uint64_t)v41);
        }
        uint64_t v28 = *(void *)(a1 + 344);
      }
    }
    *a3 = v28;
    *a4 = 480;
    *a5 = 480;
    *a6 = 240;
    int v21 = 1;
    *a7 = 240;
  }
  uint64_t result = 0;
  *a8 = v21;
  return result;
}

uint64_t sub_1001678F8(uint64_t a1, unsigned int a2, uint64_t *a3, _WORD *a4, int *a5)
{
  if (!a3) {
    return 3;
  }
  if (*(_DWORD *)(a1 + 32) <= a2) {
    return 2;
  }
  if (!*(unsigned char *)(a1 + 16) || !*(void *)(a1 + 344)) {
    return 5;
  }
  if (*(_DWORD *)(a1 + 284) <= a2) {
    unsigned int v10 = 0;
  }
  else {
    unsigned int v10 = a2;
  }
  uint64_t v11 = *(void *)(a1 + 272) + 12 * v10;
  uint64_t v12 = *(unsigned __int8 ***)(a1 + 24);
  if (*(float *)(v11 + 4) == 0.0 && *(float *)(v11 + 8) == 0.0)
  {
    uint64_t v13 = (uint64_t)*v12;
    int v14 = (*(uint64_t (**)(uint64_t, void))(*(void *)a1 + 72))(a1, **v12);
    v15.i32[0] = *(unsigned __int16 *)(v13 + 2);
    v15.i32[1] = *(unsigned __int16 *)(v13 + 4);
    unsigned int v16 = (int32x2_t *)(a1 + 48 * v14);
    int32x2_t v17 = vsra_n_s32(vrev64_s32(vadd_s32(v15, (int32x2_t)0x3F0000003FLL)), vsub_s32(v16[9], v16[10]), 1uLL);
    int32x2_t v18 = v16[8];
    int v21 = v16 + 11;
    __int32 v20 = v16[11].i32[0];
    int v19 = v21->i32[1];
    *a3 = *(void *)&v18 + ((v17.i32[1] + v17.i32[0] * v20) * v19);
  }
  else
  {
    int v23 = (*(uint64_t (**)(uint64_t, void))(*(void *)a1 + 72))(a1, *v12[a2]);
    if (*(_DWORD *)(a1 + 308) <= a2) {
      uint64_t v24 = 0;
    }
    else {
      uint64_t v24 = a2;
    }
    uint64_t v25 = *(void *)(a1 + 296) + 32 * v24;
    long long v35 = *(_OWORD *)v25;
    uint64_t v36 = *(void *)(v25 + 16);
    uint64_t v26 = a1 + 48 * v23;
    uint64_t v27 = *(void *)(v26 + 64);
    uint64_t v28 = *(void *)(a1 + 344);
    if (v27) {
      BOOL v29 = v28 == 0;
    }
    else {
      BOOL v29 = 1;
    }
    if (!v29)
    {
      int v30 = *(_DWORD *)(v26 + 88);
      int v31 = *(_DWORD *)(v26 + 76);
      if ((unsigned __int16)v31 <= (unsigned __int16)v30)
      {
        int v32 = *(_DWORD *)(v25 + 24);
        int v33 = *(_DWORD *)(v25 + 28);
        int v34 = *(_DWORD *)(v26 + 72);
        v41[4] = sub_100156AD0;
        v41[1] = sub_100156B80;
        v41[0] = sub_100156EC0;
        v41[2] = sub_100157204;
        v41[3] = sub_1001572C8;
        if (v32)
        {
          if (!v33)
          {
            long long v37 = v35;
            uint64_t v38 = v36;
            int v39 = v32;
            int v40 = 0;
            sub_10015671C(v27, (unsigned __int16)v30, (unsigned __int16)v34, (unsigned __int16)v31, v28, 128, (uint64_t)&v37, 8u, 8u, (uint64_t)v41);
          }
        }
        else
        {
          long long v37 = v35;
          uint64_t v38 = v36;
          int v39 = 0;
          int v40 = v33;
          sub_1001568F8(v27, (unsigned __int16)v30, (unsigned __int16)v34, (unsigned __int16)v31, v28, 128, (uint64_t)&v37, 8u, 8u, (uint64_t)v41);
        }
        uint64_t v28 = *(void *)(a1 + 344);
      }
    }
    *a3 = v28;
    int v19 = 1;
    LOWORD(v20) = 128;
  }
  uint64_t result = 0;
  *a4 = v20;
  *a5 = v19;
  return result;
}

void sub_100167BB8(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 36) <= 9u) {
    operator new[]();
  }
  *(unsigned char *)(a1 + 16) = 1;
  operator new[]();
}

void sub_100167C80(void *a1)
{
  *a1 = off_100248F90;
  if (a1[43]) {
    operator delete[]();
  }
  if (a1[40]) {
    operator delete[]();
  }
  if (a1[37]) {
    operator delete[]();
  }
  if (a1[34]) {
    operator delete[]();
  }
  sub_10016F8D4((uint64_t)a1);

  operator delete();
}

uint64_t sub_100167D54(void *a1)
{
  *a1 = off_100248F90;
  if (a1[43]) {
    operator delete[]();
  }
  if (a1[40]) {
    operator delete[]();
  }
  if (a1[37]) {
    operator delete[]();
  }
  if (a1[34]) {
    operator delete[]();
  }

  return sub_10016F8D4((uint64_t)a1);
}

uint64_t sub_100167E14(uint64_t result, unsigned int a2, uint64_t a3, unsigned int a4, unsigned int a5, unsigned int a6)
{
  if (a5 && a6)
  {
    uint64_t v6 = a2;
    uint64_t v7 = a4;
    uint64_t v8 = a5;
    if (a6 >= 2)
    {
      int v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = a6;
      uint64_t v52 = 2 * a2;
      unint64_t v17 = (unint64_t)a6 << 6;
      unint64_t v18 = v17 + a2;
      uint64_t v51 = 32 * a6;
      uint64_t v19 = 16 * a6 - 16;
      unsigned int v20 = 32 * a6 - 2;
      int v21 = (const char *)(result + 1);
      uint64_t v22 = 2 * v6;
      uint64_t v23 = result + v6;
      uint64_t v24 = 1;
      uint64_t v49 = v8;
      unint64_t v50 = result + v17;
      unint64_t v25 = result + v18;
      uint64_t v26 = result + v6 + 1;
      uint64_t v27 = result;
      uint64_t v28 = -16 * v16;
      uint64_t v48 = result;
      unsigned int v47 = v20;
      unint64_t v46 = v25;
      uint64_t v44 = v28;
      uint64_t v45 = v26;
      do
      {
        uint64_t v29 = v15 * v7;
        if (-2 - (int)v15 * (int)v7 >= v20)
        {
          uint64_t v30 = 0;
          unint64_t v31 = a3 + v51 + v29;
          unint64_t v32 = a3 + v29 + 1;
          BOOL v33 = result + ((v52 * v15) | 1uLL) >= v31 || v32 >= v50 + v52 * v15;
          char v34 = !v33;
          BOOL v35 = v32 >= v25 + v52 * v15 || v26 + v52 * v15 >= v31;
          if (v35 && (v34 & 1) == 0)
          {
            uint64_t v36 = 0;
            long long v37 = v21;
            do
            {
              uint64_t v38 = &v37[v6];
              int8x16x4_t v53 = vld4q_s8(v37);
              v37 += 64;
              int8x16x4_t v54 = vld4q_s8(v38);
              v53.val[0] = (int8x16_t)vhaddq_u8(vhaddq_u8((uint8x16_t)v54.val[2], (uint8x16_t)v53.val[2]), vhaddq_u8((uint8x16_t)v54.val[0], (uint8x16_t)v53.val[0]));
              *(unsigned char *)(a3 + (v14 + v36 + 1)) = v53.val[0].i8[0];
              *(unsigned char *)(a3 + (v14 + v36 + 3)) = v53.val[0].i8[1];
              *(unsigned char *)(a3 + (v14 + v36 + 5)) = v53.val[0].i8[2];
              *(unsigned char *)(a3 + (v14 + v36 + 7)) = v53.val[0].i8[3];
              *(unsigned char *)(a3 + (v14 + v36 + 9)) = v53.val[0].i8[4];
              *(unsigned char *)(a3 + (v14 + v36 + 11)) = v53.val[0].i8[5];
              *(unsigned char *)(a3 + (v14 + v36 + 13)) = v53.val[0].i8[6];
              *(unsigned char *)(a3 + (v14 + v36 + 15)) = v53.val[0].i8[7];
              *(unsigned char *)(a3 + (v14 + v36 + 17)) = v53.val[0].i8[8];
              *(unsigned char *)(a3 + (v14 + v36 + 19)) = v53.val[0].i8[9];
              *(unsigned char *)(a3 + (v14 + v36 + 21)) = v53.val[0].i8[10];
              *(unsigned char *)(a3 + (v14 + v36 + 23)) = v53.val[0].i8[11];
              *(unsigned char *)(a3 + (v14 + v36 + 25)) = v53.val[0].i8[12];
              *(unsigned char *)(a3 + (v14 + v36 + 27)) = v53.val[0].i8[13];
              *(unsigned char *)(a3 + (v14 + v36 + 29)) = v53.val[0].i8[14];
              *(unsigned char *)(a3 + (v14 + v36 + 31)) = v53.val[0].i8[15];
              v36 += 32;
            }
            while (v51 - 32 != v36);
            unint64_t v25 = v46;
            uint64_t v30 = v19;
            uint64_t result = v48;
            uint64_t v8 = v49;
            unsigned int v20 = v47;
            uint64_t v28 = v44;
            uint64_t v26 = v45;
          }
        }
        else
        {
          uint64_t v30 = 0;
        }
        uint64_t v39 = v28 + v30;
        uint64_t v40 = 4 * v30;
        uint64_t v41 = v27;
        uint64_t v42 = v23;
        uint64_t v43 = v24 + 2 * v30;
        do
        {
          *(unsigned char *)(a3 + v43) = (((*(unsigned __int8 *)(v42 + v40 + 3)
                                                + *(unsigned __int8 *)(v41 + v40 + 3)) >> 1)
                                              + ((*(unsigned __int8 *)(v42 + v40 + 1)
                                                + *(unsigned __int8 *)(v41 + v40 + 1)) >> 1)) >> 1;
          v43 += 2;
          v42 += 4;
          v41 += 4;
          BOOL v33 = __CFADD__(v39++, 1);
        }
        while (!v33);
        ++v15;
        v14 += v7;
        v21 += v22;
        v24 += v7;
        v23 += v22;
        v27 += v22;
      }
      while (v15 != v8);
    }
    else
    {
      uint64_t v9 = 0;
      unsigned int v10 = (unsigned char *)(a3 + 1);
      uint64_t v11 = (unsigned __int8 *)(result + 1);
      do
      {
        uint64_t v12 = v11;
        uint64_t v13 = v10;
        uint64_t result = 16 * a6;
        do
        {
          unsigned char *v13 = (((v12[a2 + 2] + v12[2]) >> 1) + ((v12[a2] + *v12) >> 1)) >> 1;
          v13 += 2;
          v12 += 4;
          --result;
        }
        while (result);
        ++v9;
        v10 += a4;
        v11 += 2 * a2;
      }
      while (v9 != a5);
    }
  }
  return result;
}

uint64_t sub_100168148(uint64_t result, unsigned int a2, uint64_t a3, unsigned int a4, unsigned int a5, unsigned int a6)
{
  if (a5 && a6)
  {
    uint64_t v6 = 0;
    uint64_t v7 = a2;
    uint64_t v8 = 8 * a6;
    uint64_t v9 = a4;
    unsigned int v10 = (unsigned __int8 *)(result + 5);
    uint64_t v11 = result + 3;
    unsigned int v12 = 2 * a2;
    uint64_t v13 = a5;
    int v14 = 3 * a2;
    uint64_t v15 = 1;
    uint64_t result = 7282;
    uint64_t v16 = 3 * a2;
    do
    {
      unint64_t v17 = v10;
      uint64_t v18 = v15;
      uint64_t v19 = v8;
      unsigned int v20 = (unsigned __int8 *)(v11 + v12);
      do
      {
        *(unsigned char *)(a3 + v18) = (7282
                                            * (*(v17 - 2)
                                             + *(v17 - 4)
                                             + *v17
                                             + v17[v7 - 4]
                                             + v17[v7 - 2]
                                             + v17[v7]
                                             + *(v20 - 2)
                                             + *v20
                                             + v20[2])) >> 16;
        v18 += 2;
        v17 += 6;
        v20 += 6;
        --v19;
      }
      while (v19);
      ++v6;
      v15 += v9;
      v10 += v16;
      v12 += v14;
    }
    while (v6 != v13);
  }
  return result;
}

void sub_100168224(void *a1)
{
  sub_10016825C(a1);

  operator delete();
}

void *sub_10016825C(void *a1)
{
  *a1 = off_100249030;
  uint64_t v2 = a1[21];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  uint64_t v3 = (void *)a1[22];
  if (v3)
  {
    BOOL v4 = (void *)*v3;
    if (*v3)
    {
      if (v4[4]) {
        operator delete[]();
      }
      if (v4[3]) {
        operator delete[]();
      }
      if (v4[5]) {
        operator delete[]();
      }
      if (v4[9]) {
        operator delete[]();
      }
      operator delete();
    }
    operator delete();
  }
  uint64_t v5 = a1[23];
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  if (a1[6]) {
    operator delete[]();
  }
  if (a1[3]) {
    operator delete[]();
  }
  sub_1001683F0(a1 + 9);
  return a1;
}

void *sub_1001683F0(void *a1)
{
  *a1 = off_100249088;
  uint64_t v2 = a1[2];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = a1[3];
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = a1[4];
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  uint64_t v5 = a1[5];
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  uint64_t v6 = a1[6];
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  uint64_t v7 = a1[7];
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  uint64_t v8 = a1[8];
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  uint64_t v9 = a1[9];
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  uint64_t v10 = a1[10];
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  uint64_t v11 = a1[11];
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
  }
  return a1;
}

void sub_1001685E8(void *a1)
{
  sub_1001683F0(a1);

  operator delete();
}

uint64_t sub_100168628(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 16) = a2;
  uint64_t result = *(void *)(a1 + 168);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t (***sub_10016865C(uint64_t a1, uint64_t a2))(void)
{
  *(void *)(a1 + 8) = a2;
  uint64_t result = *(uint64_t (****)(void))(a1 + 168);
  if (result) {
    return (uint64_t (***)(void))(**result)(result);
  }
  return result;
}

uint64_t sub_100168690(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    *(void *)(a1 + 64) = a2;
    operator new();
  }
  return 2;
}

uint64_t sub_100168C24(uint64_t a1, uint64_t a2)
{
  if (a2 && *(_DWORD *)(a1 + 80) != 10) {
    operator new();
  }
  return 0;
}

void sub_100168CFC()
{
}

uint64_t sub_100168D20(uint64_t a1)
{
  if (!*(_DWORD *)(a1 + 80)) {
    return 6;
  }
  int v2 = *(_DWORD *)(a1 + 40);
  if (v2 != (*(unsigned int (**)(void))(**(void **)(a1 + 64) + 48))(*(void *)(a1 + 64)))
  {
    if (*(void *)(a1 + 24)) {
      operator delete[]();
    }
    uint64_t v3 = a1;
    if (*(void *)(a1 + 48)) {
      operator delete[]();
    }
    *(_DWORD *)(v3 + 40) = (*(uint64_t (**)(void))(**(void **)(a1 + 64) + 48))(*(void *)(a1 + 64));
    operator new[]();
  }
  uint64_t v4 = a1;
  if (!*(_DWORD *)(a1 + 40)) {
    goto LABEL_921;
  }
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  do
  {
    *(_DWORD *)(*(void *)(a1 + 48) + 4 * v6) = v6;
    uint64_t v7 = *(void *)(a1 + 24) + v5;
    *(void *)uint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    *(_DWORD *)(v7 + 16) = -1;
    *(_OWORD *)(v7 + 24) = 0uLL;
    *(_OWORD *)(v7 + 40) = 0uLL;
    *(_OWORD *)(v7 + 56) = 0uLL;
    *(_OWORD *)(v7 + 72) = 0uLL;
    *(_OWORD *)(v7 + 88) = 0uLL;
    *(_OWORD *)(v7 + 104) = 0uLL;
    *(_OWORD *)(v7 + 120) = 0uLL;
    ++v6;
    unint64_t v8 = *(unsigned int *)(a1 + 40);
    v5 += 136;
  }
  while (v6 < v8);
  if (!v8)
  {
LABEL_921:
    if ((*(unsigned int (**)(void))(**(void **)(v4 + 64) + 48))(*(void *)(v4 + 64)) >= 2)
    {
      unint64_t v1166 = 1;
      do
      {
        while (1)
        {
          uint64_t v1167 = *(void *)(a1 + 48);
          unsigned int v1168 = *(_DWORD *)(v1167 + 4 * (v1166 - 1));
          unsigned int v1169 = *(_DWORD *)(v1167 + 4 * v1166);
          if (*(_DWORD *)(*(void *)(a1 + 24) + 136 * v1168 + 4) <= *(_DWORD *)(*(void *)(a1 + 24)
                                                                                  + 136 * v1169
                                                                                  + 4))
            break;
          *(_DWORD *)(v1167 + 4 * (v1166 - 1)) = v1169;
          *(_DWORD *)(v1167 + 4 * v1166) = v1168;
          unint64_t v1166 = 1;
          if ((*(unsigned int (**)(void))(**(void **)(a1 + 64) + 48))(*(void *)(a1 + 64)) <= 1) {
            goto LABEL_927;
          }
        }
        ++v1166;
      }
      while (v1166 < (*(unsigned int (**)(void))(**(void **)(a1 + 64) + 48))(*(void *)(a1 + 64)));
    }
LABEL_927:
    uint64_t v1170 = *(unsigned int *)(a1 + 56);
    if (!v1170) {
      return 0;
    }
    uint64_t v1171 = 0;
    uint64_t v1172 = *(void *)(a1 + 24);
    uint64_t v1321 = *(unsigned int *)(a1 + 56);
    while (1)
    {
      uint64_t v1173 = *(unsigned int *)(*(void *)(a1 + 48) + 4 * v1171);
      if (*(_DWORD *)(v1172 + 136 * v1173 + 16) != 2) {
        goto LABEL_929;
      }
      uint64_t v1325 = v1171;
      v1471[0] = 0;
      v1468.i32[0] = 0;
      int v1458 = 0;
      v1457[0] = 0;
      LODWORD(v1437) = 0;
      int v1340 = 0;
      (*(void (**)(void, uint64_t, void *, int *, _DWORD *, uint64_t *, int *, int32x4_t *))(**(void **)(a1 + 64) + 32))(*(void *)(a1 + 64), v1173, v1471, &v1458, v1457, &v1437, &v1340, &v1468);
      uint64_t v1174 = *(void *)(a1 + 184);
      uint64_t v1175 = v1471[0];
      int v1176 = v1457[0];
      int v1177 = v1458;
      int v1178 = v1437;
      int v1179 = v1340;
      uint64_t v1180 = *(void *)(a1 + 24);
      *(_DWORD *)(v1174 + 12) = v1468.i32[0];
      *(void *)(v1174 + 288) = v1175;
      *(_DWORD *)(v1174 + 276) = v1177;
      *(_DWORD *)(v1174 + 272) = v1176;
      *(_DWORD *)(v1174 + 280) = v1178;
      *(_DWORD *)(v1174 + 284) = v1179;
      *(void *)(v1174 + 40) = 0;
      *(_DWORD *)(v1174 + 64) = 0;
      bzero(*(void **)(v1174 + 296), 0x800uLL);
      for (unsigned int i = 0; ; ++i)
      {
        unsigned int v1182 = -1;
        do
          ++v1182;
        while ((sub_100164E64(v1174, (uint32x2_t *)(v1180 + 136 * v1173 + 72), i, v1182, 1) & 1) != 0);
        if (!v1182) {
          break;
        }
        unsigned int v1183 = -1;
        do
          char v1184 = sub_100164E64(v1174, (uint32x2_t *)(v1180 + 136 * v1173 + 72), i, v1183--, 1);
        while ((v1184 & 1) != 0);
      }
      for (unsigned int j = -1; ; --j)
      {
        unsigned int v1186 = -1;
        do
          ++v1186;
        while ((sub_100164E64(v1174, (uint32x2_t *)(v1180 + 136 * v1173 + 72), j, v1186, 1) & 1) != 0);
        if (!v1186) {
          break;
        }
        unsigned int v1187 = -1;
        do
          char v1188 = sub_100164E64(v1174, (uint32x2_t *)(v1180 + 136 * v1173 + 72), j, v1187--, 1);
        while ((v1188 & 1) != 0);
      }
      char v1337 = 0;
      sub_100154F7C(v1174 + 104, *(void *)(v1174 + 296), &v1337);
      uint64_t v1189 = v1180 + 136 * v1173;
      int v1191 = *(_DWORD *)(v1189 + 32);
      v1190 = (_DWORD *)(v1189 + 32);
      _DWORD *v1190 = v1191 + 1;
      if (v1337)
      {
        uint64_t v1192 = v1180 + 136 * v1173;
        *(unsigned char *)(v1192 + 36) = 1;
        *(_DWORD *)(v1192 + 40) = *(_DWORD *)(v1174 + 196);
        int v1193 = *(_DWORD *)(v1174 + 204);
        *(_DWORD *)(v1192 + 44) = v1193;
        v1194.i64[0] = 0x100000001;
        v1194.i64[1] = 0x100000001;
        v1195.i64[0] = 0x800000008;
        v1195.i64[1] = 0x800000008;
        if (v1193 >= 1)
        {
          int v1196 = 0;
          __int16 v1197 = 0;
          int v1198 = *(_DWORD *)(v1174 + 200);
          while (1)
          {
            if (v1198 << 16 >= 0x200000) {
              int v1200 = 32;
            }
            else {
              int v1200 = (__int16)v1198;
            }
            if (v1200 < 1)
            {
              unsigned int v1199 = 0;
            }
            else
            {
              uint64_t v1201 = *(void *)(v1174 + 208);
              if (v1200 <= 7)
              {
                unsigned int v1202 = 0;
                unsigned int v1203 = 0;
                unsigned int v1199 = 0;
                goto LABEL_968;
              }
              if (v1200 >= 0x20)
              {
                unsigned int v1202 = v1200 & 0xFFFFFFE0;
                v1204 = (int8x16_t *)(v1201 + 32 * v1197 + 16);
                int32x4_t v1205 = (int32x4_t)xmmword_1001AC160;
                int32x4_t v1206 = (int32x4_t)xmmword_1001AC150;
                int32x4_t v1207 = (int32x4_t)xmmword_1001AC140;
                int32x4_t v1208 = 0uLL;
                int32x4_t v1209 = 0uLL;
                v1210.i64[0] = 0x100000001;
                v1210.i64[1] = 0x100000001;
                int32x4_t v1211 = (int32x4_t)xmmword_1001AC130;
                uint64_t v1212 = v1200 & 0xFFFFFFE0;
                int32x4_t v1213 = 0uLL;
                int32x4_t v1214 = 0uLL;
                int32x4_t v1215 = 0uLL;
                int32x4_t v1216 = 0uLL;
                int32x4_t v1217 = 0uLL;
                int32x4_t v1218 = 0uLL;
                v1219.i64[0] = 0x1000000010;
                v1219.i64[1] = 0x1000000010;
                v1220.i64[0] = 0x2000000020;
                v1220.i64[1] = 0x2000000020;
                do
                {
                  int8x16_t v1221 = vceqzq_s8(v1204[-1]);
                  int16x8_t v1222 = vmovl_high_s8(v1221);
                  int16x8_t v1223 = vmovl_s8(*(int8x8_t *)v1221.i8);
                  int8x16_t v1224 = vceqzq_s8(*v1204);
                  int16x8_t v1225 = vmovl_high_s8(v1224);
                  int16x8_t v1226 = vmovl_s8(*(int8x8_t *)v1224.i8);
                  int32x4_t v1214 = vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vshlq_u32(v1210, (uint32x4_t)v1205), (int8x16_t)vmovl_high_s16(v1222)), v1214);
                  int32x4_t v1213 = vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vshlq_u32(v1210, (uint32x4_t)v1206), (int8x16_t)vmovl_s16(*(int16x4_t *)v1222.i8)), v1213);
                  int32x4_t v1209 = vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vshlq_u32(v1210, (uint32x4_t)v1207), (int8x16_t)vmovl_high_s16(v1223)), v1209);
                  int32x4_t v1208 = vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vshlq_u32(v1210, (uint32x4_t)v1211), (int8x16_t)vmovl_s16(*(int16x4_t *)v1223.i8)), v1208);
                  int32x4_t v1218 = vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vshlq_u32(v1210, (uint32x4_t)vaddq_s32(v1205, v1219)), (int8x16_t)vmovl_high_s16(v1225)), v1218);
                  int32x4_t v1217 = vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vshlq_u32(v1210, (uint32x4_t)vaddq_s32(v1206, v1219)), (int8x16_t)vmovl_s16(*(int16x4_t *)v1225.i8)), v1217);
                  int32x4_t v1216 = vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vshlq_u32(v1210, (uint32x4_t)vaddq_s32(v1207, v1219)), (int8x16_t)vmovl_high_s16(v1226)), v1216);
                  int32x4_t v1215 = vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vshlq_u32(v1210, (uint32x4_t)vaddq_s32(v1211, v1219)), (int8x16_t)vmovl_s16(*(int16x4_t *)v1226.i8)), v1215);
                  int32x4_t v1211 = vaddq_s32(v1211, v1220);
                  int32x4_t v1207 = vaddq_s32(v1207, v1220);
                  int32x4_t v1206 = vaddq_s32(v1206, v1220);
                  v1204 += 2;
                  int32x4_t v1205 = vaddq_s32(v1205, v1220);
                  v1212 -= 32;
                }
                while (v1212);
                unsigned int v1199 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v1215, v1208), vaddq_s32(v1217, v1213)), vaddq_s32(vaddq_s32(v1216, v1209), vaddq_s32(v1218, v1214))));
                if (v1200 == v1202)
                {
                  v1194.i64[0] = 0x100000001;
                  v1194.i64[1] = 0x100000001;
                  v1195.i64[0] = 0x800000008;
                  v1195.i64[1] = 0x800000008;
                  goto LABEL_949;
                }
                v1194.i64[0] = 0x100000001;
                v1194.i64[1] = 0x100000001;
                v1195.i64[0] = 0x800000008;
                v1195.i64[1] = 0x800000008;
                if ((v1200 & 0x18) == 0)
                {
                  unsigned int v1203 = v1200 & 0xFFFFFFE0;
LABEL_968:
                  int v1236 = 32 * v1196;
                  do
                  {
                    int v1237 = *(unsigned __int8 *)(v1201 + (int)(v1202 + v1236));
                    int v1238 = 1 << v1202;
                    if (!v1237) {
                      int v1238 = 0;
                    }
                    v1199 += v1238;
                    unsigned int v1202 = (__int16)++v1203;
                  }
                  while (v1200 > (__int16)v1203);
                  goto LABEL_949;
                }
              }
              else
              {
                unsigned int v1199 = 0;
                unsigned int v1202 = 0;
              }
              unsigned int v1227 = v1202;
              unsigned int v1202 = v1200 & 0xFFFFFFF8;
              int8x16_t v1228 = (int8x16_t)vdupq_n_s32(v1227);
              int32x4_t v1229 = (int32x4_t)vorrq_s8(v1228, (int8x16_t)xmmword_1001AC140);
              int32x4_t v1230 = (int32x4_t)vorrq_s8(v1228, (int8x16_t)xmmword_1001AC130);
              int32x4_t v1231 = 0uLL;
              int32x4_t v1232 = (int32x4_t)v1199;
              unsigned int v1233 = v1227 - (v1200 & 0xFFFFFFF8);
              signed int v1234 = v1227 + 32 * v1197;
              do
              {
                int16x8_t v1235 = vceqzq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)(v1201 + v1234)));
                int32x4_t v1231 = vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vshlq_u32(v1194, (uint32x4_t)v1229), (int8x16_t)vmovl_high_s16(v1235)), v1231);
                int32x4_t v1232 = vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vshlq_u32(v1194, (uint32x4_t)v1230), (int8x16_t)vmovl_s16(*(int16x4_t *)v1235.i8)), v1232);
                int32x4_t v1230 = vaddq_s32(v1230, v1195);
                int32x4_t v1229 = vaddq_s32(v1229, v1195);
                v1234 += 8;
                v1233 += 8;
              }
              while (v1233);
              unsigned int v1199 = vaddvq_s32(vaddq_s32(v1232, v1231));
              unsigned int v1203 = v1200 & 0xFFFFFFF8;
              if (v1200 != v1202) {
                goto LABEL_968;
              }
            }
LABEL_949:
            int v1198 = (__int16)v1198 - 32;
            *(_DWORD *)(v1180 + 136 * v1173 + 4 * v1197++ + 48) = v1199;
            int v1196 = v1197;
            if (*(_DWORD *)(v1174 + 204) <= v1197) {
              goto LABEL_1019;
            }
          }
        }
        goto LABEL_1019;
      }
      v1320 = v1190;
      int v1239 = *(_DWORD *)(v1174 + 64);
      if (v1239 > 1)
      {
        uint64_t v1240 = 0;
        for (unint64_t k = 1; (uint64_t)k < v1239; ++k)
        {
          v1242 = *(int **)(v1174 + 56);
          v1243 = &v1242[5 * k];
          unint64_t v1244 = -1;
          do
          {
            ++v1244;
            int v1246 = *v1242;
            v1242 += 5;
            int v1245 = v1246;
          }
          while (v1244 < k && *v1243 < v1245);
          if (v1244 < k)
          {
            uint64_t v1248 = 0;
            long long v1338 = *(_OWORD *)v1243;
            int v1339 = v1243[4];
            uint64_t v1249 = v1240;
            do
            {
              uint64_t v1250 = *(void *)(v1174 + 56) + v1249;
              *(_OWORD *)(v1250 + 20) = *(_OWORD *)v1250;
              *(_DWORD *)(v1250 + 36) = *(_DWORD *)(v1250 + 16);
              ++v1248;
              v1249 -= 20;
            }
            while (k > v1244 + v1248);
            unint64_t v1251 = *(void *)(v1174 + 56) + 20 * (k - (int)v1248);
            *(_OWORD *)unint64_t v1251 = v1338;
            *(_DWORD *)(v1251 + 16) = v1339;
            int v1239 = *(_DWORD *)(v1174 + 64);
          }
          v1240 += 20;
        }
      }
      if (v1239 >= 1)
      {
        uint64_t v1252 = 0;
        if (v1239 >= 5) {
          unsigned int v1253 = 5;
        }
        else {
          unsigned int v1253 = v1239;
        }
        uint64_t v1254 = 20 * v1253;
        do
        {
          uint64_t v1255 = *(void *)(v1174 + 56) + v1252;
          unsigned int v1257 = *(_DWORD *)(v1255 + 4);
          unsigned int v1256 = *(_DWORD *)(v1255 + 8);
          *(void *)(v1174 + 16) = *(void *)(v1255 + 12);
          *(void *)(v1174 + 48) = -1;
          sub_100164E64(v1174, (uint32x2_t *)(v1180 + 136 * v1173 + 72), v1256, v1257, 0);
          *(void *)(v1174 + 48) = 0xFFFFFFFF00000000;
          sub_100164E64(v1174, (uint32x2_t *)(v1180 + 136 * v1173 + 72), v1256, v1257, 0);
          *(void *)(v1174 + 48) = 0xFFFFFFFF00000001;
          sub_100164E64(v1174, (uint32x2_t *)(v1180 + 136 * v1173 + 72), v1256, v1257, 0);
          *(void *)(v1174 + 48) = 0xFFFFFFFFLL;
          sub_100164E64(v1174, (uint32x2_t *)(v1180 + 136 * v1173 + 72), v1256, v1257, 0);
          *(void *)(v1174 + 48) = 1;
          sub_100164E64(v1174, (uint32x2_t *)(v1180 + 136 * v1173 + 72), v1256, v1257, 0);
          *(void *)(v1174 + 48) = 0x1FFFFFFFFLL;
          sub_100164E64(v1174, (uint32x2_t *)(v1180 + 136 * v1173 + 72), v1256, v1257, 0);
          *(void *)(v1174 + 48) = &_mh_execute_header;
          sub_100164E64(v1174, (uint32x2_t *)(v1180 + 136 * v1173 + 72), v1256, v1257, 0);
          *(void *)(v1174 + 48) = 0x100000001;
          sub_100164E64(v1174, (uint32x2_t *)(v1180 + 136 * v1173 + 72), v1256, v1257, 0);
          v1252 += 20;
        }
        while (v1254 != v1252);
      }
      sub_100154F7C(v1174 + 104, *(void *)(v1174 + 296), &v1337);
      ++*v1320;
      v1258.i64[0] = 0x100000001;
      v1258.i64[1] = 0x100000001;
      v1259.i64[0] = 0x800000008;
      v1259.i64[1] = 0x800000008;
      if (v1337)
      {
        uint64_t v1260 = v1180 + 136 * v1173;
        *(unsigned char *)(v1260 + 36) = 1;
        *(_DWORD *)(v1260 + 40) = *(_DWORD *)(v1174 + 196);
        int v1261 = *(_DWORD *)(v1174 + 204);
        *(_DWORD *)(v1260 + 44) = v1261;
        if (v1261 >= 1) {
          break;
        }
      }
LABEL_1019:
      uint64_t v1172 = *(void *)(a1 + 24);
      if (*(unsigned char *)(v1172 + 136 * v1173 + 36))
      {
        uint64_t result = 0;
        *(_DWORD *)(v1172 + 136 * v1173 + 16) = 3;
        return result;
      }
      uint64_t v1170 = v1321;
      uint64_t v1171 = v1325;
LABEL_929:
      if (++v1171 == v1170) {
        return 0;
      }
    }
    int v1262 = 0;
    __int16 v1263 = 0;
    int v1264 = *(_DWORD *)(v1174 + 200);
    while (1)
    {
      if (v1264 << 16 >= 0x200000) {
        int v1266 = 32;
      }
      else {
        int v1266 = (__int16)v1264;
      }
      if (v1266 < 1)
      {
        unsigned int v1265 = 0;
      }
      else
      {
        uint64_t v1267 = *(void *)(v1174 + 208);
        if (v1266 <= 7)
        {
          unsigned int v1268 = 0;
          unsigned int v1269 = 0;
          unsigned int v1265 = 0;
          goto LABEL_1014;
        }
        if (v1266 >= 0x20)
        {
          unsigned int v1268 = v1266 & 0xFFFFFFE0;
          int32x4_t v1270 = 0uLL;
          int32x4_t v1271 = 0uLL;
          v1272 = (int8x16_t *)(v1267 + 32 * v1263 + 16);
          uint64_t v1273 = v1266 & 0xFFFFFFE0;
          int32x4_t v1274 = (int32x4_t)xmmword_1001AC130;
          int32x4_t v1275 = (int32x4_t)xmmword_1001AC140;
          v1276.i64[0] = 0x100000001;
          v1276.i64[1] = 0x100000001;
          int32x4_t v1277 = (int32x4_t)xmmword_1001AC150;
          int32x4_t v1278 = (int32x4_t)xmmword_1001AC160;
          int32x4_t v1279 = 0uLL;
          int32x4_t v1280 = 0uLL;
          int32x4_t v1281 = 0uLL;
          int32x4_t v1282 = 0uLL;
          int32x4_t v1283 = 0uLL;
          int32x4_t v1284 = 0uLL;
          v1285.i64[0] = 0x1000000010;
          v1285.i64[1] = 0x1000000010;
          v1286.i64[0] = 0x2000000020;
          v1286.i64[1] = 0x2000000020;
          do
          {
            int8x16_t v1287 = vceqzq_s8(v1272[-1]);
            int16x8_t v1288 = vmovl_high_s8(v1287);
            int16x8_t v1289 = vmovl_s8(*(int8x8_t *)v1287.i8);
            int8x16_t v1290 = vceqzq_s8(*v1272);
            int16x8_t v1291 = vmovl_high_s8(v1290);
            int16x8_t v1292 = vmovl_s8(*(int8x8_t *)v1290.i8);
            int32x4_t v1280 = vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vshlq_u32(v1276, (uint32x4_t)v1278), (int8x16_t)vmovl_high_s16(v1288)), v1280);
            int32x4_t v1279 = vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vshlq_u32(v1276, (uint32x4_t)v1277), (int8x16_t)vmovl_s16(*(int16x4_t *)v1288.i8)), v1279);
            int32x4_t v1271 = vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vshlq_u32(v1276, (uint32x4_t)v1275), (int8x16_t)vmovl_high_s16(v1289)), v1271);
            int32x4_t v1270 = vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vshlq_u32(v1276, (uint32x4_t)v1274), (int8x16_t)vmovl_s16(*(int16x4_t *)v1289.i8)), v1270);
            int32x4_t v1284 = vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vshlq_u32(v1276, (uint32x4_t)vaddq_s32(v1278, v1285)), (int8x16_t)vmovl_high_s16(v1291)), v1284);
            int32x4_t v1283 = vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vshlq_u32(v1276, (uint32x4_t)vaddq_s32(v1277, v1285)), (int8x16_t)vmovl_s16(*(int16x4_t *)v1291.i8)), v1283);
            int32x4_t v1282 = vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vshlq_u32(v1276, (uint32x4_t)vaddq_s32(v1275, v1285)), (int8x16_t)vmovl_high_s16(v1292)), v1282);
            int32x4_t v1281 = vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vshlq_u32(v1276, (uint32x4_t)vaddq_s32(v1274, v1285)), (int8x16_t)vmovl_s16(*(int16x4_t *)v1292.i8)), v1281);
            int32x4_t v1274 = vaddq_s32(v1274, v1286);
            int32x4_t v1275 = vaddq_s32(v1275, v1286);
            int32x4_t v1277 = vaddq_s32(v1277, v1286);
            v1272 += 2;
            int32x4_t v1278 = vaddq_s32(v1278, v1286);
            v1273 -= 32;
          }
          while (v1273);
          unsigned int v1265 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32(v1281, v1270), vaddq_s32(v1283, v1279)), vaddq_s32(vaddq_s32(v1282, v1271), vaddq_s32(v1284, v1280))));
          if (v1266 == v1268)
          {
            v1258.i64[0] = 0x100000001;
            v1258.i64[1] = 0x100000001;
            v1259.i64[0] = 0x800000008;
            v1259.i64[1] = 0x800000008;
            goto LABEL_995;
          }
          v1258.i64[0] = 0x100000001;
          v1258.i64[1] = 0x100000001;
          v1259.i64[0] = 0x800000008;
          v1259.i64[1] = 0x800000008;
          if ((v1266 & 0x18) == 0)
          {
            unsigned int v1269 = v1266 & 0xFFFFFFE0;
LABEL_1014:
            int v1302 = 32 * v1262;
            do
            {
              int v1303 = *(unsigned __int8 *)(v1267 + (int)(v1268 + v1302));
              int v1304 = 1 << v1268;
              if (!v1303) {
                int v1304 = 0;
              }
              v1265 += v1304;
              unsigned int v1268 = (__int16)++v1269;
            }
            while (v1266 > (__int16)v1269);
            goto LABEL_995;
          }
        }
        else
        {
          unsigned int v1265 = 0;
          unsigned int v1268 = 0;
        }
        unsigned int v1293 = v1268;
        unsigned int v1268 = v1266 & 0xFFFFFFF8;
        int8x16_t v1294 = (int8x16_t)vdupq_n_s32(v1293);
        int32x4_t v1295 = (int32x4_t)vorrq_s8(v1294, (int8x16_t)xmmword_1001AC140);
        int32x4_t v1296 = (int32x4_t)vorrq_s8(v1294, (int8x16_t)xmmword_1001AC130);
        int32x4_t v1297 = 0uLL;
        int32x4_t v1298 = (int32x4_t)v1265;
        unsigned int v1299 = v1293 - (v1266 & 0xFFFFFFF8);
        signed int v1300 = v1293 + 32 * v1263;
        do
        {
          int16x8_t v1301 = vceqzq_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)(v1267 + v1300)));
          int32x4_t v1297 = vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vshlq_u32(v1258, (uint32x4_t)v1295), (int8x16_t)vmovl_high_s16(v1301)), v1297);
          int32x4_t v1298 = vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vshlq_u32(v1258, (uint32x4_t)v1296), (int8x16_t)vmovl_s16(*(int16x4_t *)v1301.i8)), v1298);
          int32x4_t v1296 = vaddq_s32(v1296, v1259);
          int32x4_t v1295 = vaddq_s32(v1295, v1259);
          v1300 += 8;
          v1299 += 8;
        }
        while (v1299);
        unsigned int v1265 = vaddvq_s32(vaddq_s32(v1298, v1297));
        unsigned int v1269 = v1266 & 0xFFFFFFF8;
        if (v1266 != v1268) {
          goto LABEL_1014;
        }
      }
LABEL_995:
      int v1264 = (__int16)v1264 - 32;
      *(_DWORD *)(v1180 + 136 * v1173 + 4 * v1263++ + 48) = v1265;
      int v1262 = v1263;
      if (*(_DWORD *)(v1174 + 204) <= v1263) {
        goto LABEL_1019;
      }
    }
  }
  unint64_t v9 = 0;
  while (2)
  {
    uint64_t v1308 = *(void *)(v4 + 24);
    unint64_t v1307 = v9;
    if (!(*(uint64_t (**)(void))(**(void **)(v4 + 64) + 40))(*(void *)(v4 + 64))) {
      return 4;
    }
    uint64_t v10 = v1308 + 136 * v1307;
    *(_DWORD *)(v10 + 16) = 0;
    v1306 = (_DWORD *)(v10 + 16);
    (*(void (**)(void))(**(void **)(a1 + 64) + 24))(*(void *)(a1 + 64));
    uint64_t v11 = *(void *)(a1 + 168);
    uint64_t v1309 = v11;
    if (!*(void *)(v11 + 32)) {
      operator new[]();
    }
    if (!*(void *)(v11 + 40)) {
      operator new[]();
    }
    if (!*(void *)(v11 + 24)) {
      operator new[]();
    }
    uint64_t v12 = *(void *)(v11 + 56);
    if (!v12) {
      operator new[]();
    }
    if (!*(void *)(v11 + 48)) {
      operator new[]();
    }
    *(void *)(v11 + 64) = v12;
    *(void *)(v11 + 72) = v12;
    *(void *)(v11 + 80) = v12;
    *(_DWORD *)(v11 + 20) = 0;
    uint64_t v24 = 0;
    uint64_t v25 = v12;
    do
    {
      uint64_t v27 = v24 + 1;
      if ((__int16)v24 > 127)
      {
        uint64_t v26 = (_OWORD *)(v12 + (v24 << 7));
        v26[6] = 0uLL;
        void v26[7] = 0uLL;
        v26[4] = 0uLL;
        v26[5] = 0uLL;
        v26[2] = 0uLL;
        v26[3] = 0uLL;
        _OWORD *v26 = 0uLL;
        v26[1] = 0uLL;
      }
      else
      {
        unint64_t v28 = 0;
        int v29 = (__int16)(v24 - 1);
        uint64_t v30 = 0;
        do
        {
          char v31 = 0;
          if (v29 <= 127 && ((__int16)(v29 | v28) & 0x80000000) == 0)
          {
            unsigned int v32 = *(unsigned __int8 *)(v30 + 1);
            unsigned int v33 = *(unsigned __int8 *)(v30 + 1);
            BOOL v34 = v32 >= v33;
            char v31 = v32 != v33;
            if (!v34) {
              char v31 = -1;
            }
          }
          char v35 = 0;
          int v36 = v28 + 1;
          if (v28 <= 0x7E && ((v36 | v24) & 0x8000) == 0)
          {
            unsigned int v37 = *(unsigned __int8 *)(v30 + 1);
            unsigned int v38 = *(unsigned __int8 *)(v30 + 3);
            BOOL v34 = v37 >= v38;
            char v35 = v37 != v38;
            if (!v34) {
              char v35 = -1;
            }
          }
          int v39 = v28 - 1;
          if ((((v28 - 1) | v24) & 0x8000) != 0)
          {
            char v42 = 0;
          }
          else
          {
            unsigned int v40 = *(unsigned __int8 *)(v30 + 1);
            unsigned int v41 = *(unsigned __int8 *)(v30 - 1);
            BOOL v34 = v40 >= v41;
            char v42 = v40 != v41;
            if (!v34) {
              char v42 = -1;
            }
          }
          char v43 = 0;
          if (v28 <= 0x7E && v29 <= 127 && ((__int16)(v29 | v36) & 0x80000000) == 0)
          {
            unsigned int v44 = *(unsigned __int8 *)(v30 + 1);
            unsigned int v45 = *(unsigned __int8 *)(v30 + 3);
            BOOL v34 = v44 >= v45;
            char v43 = v44 != v45;
            if (!v34) {
              char v43 = -1;
            }
          }
          char v46 = 0;
          if ((__int16)v27 <= 127 && ((v39 | v27) & 0x8000) == 0)
          {
            unsigned int v47 = *(unsigned __int8 *)(v30 + 1);
            unsigned int v48 = *(unsigned __int8 *)(v30 - 1);
            BOOL v34 = v47 >= v48;
            char v46 = v47 != v48;
            if (!v34) {
              char v46 = -1;
            }
          }
          char v49 = 0;
          if (v29 <= 127 && ((__int16)(v29 | v39) & 0x80000000) == 0)
          {
            unsigned int v50 = *(unsigned __int8 *)(v30 + 1);
            unsigned int v51 = *(unsigned __int8 *)(v30 - 1);
            BOOL v34 = v50 >= v51;
            char v49 = v50 != v51;
            if (!v34) {
              char v49 = -1;
            }
          }
          char v52 = 0;
          unint64_t v53 = v28 + 1;
          if (v28 <= 0x7E && (__int16)v27 <= 127 && ((v53 | v27) & 0x8000) == 0)
          {
            unsigned int v54 = *(unsigned __int8 *)(v30 + 1);
            unsigned int v55 = *(unsigned __int8 *)(v30 + 3);
            BOOL v34 = v54 >= v55;
            char v52 = v54 != v55;
            if (!v34) {
              char v52 = -1;
            }
          }
          *(unsigned char *)(v25 + v28) = v52 + v31 + v35 + v42 + v43 + v46 + v49;
          v30 += 2;
          ++v28;
        }
        while (v53 != 128);
      }
      v25 += 128;
      uint64_t v24 = v27;
    }
    while (v27 != 128);
    uint64_t v13 = v11;
    uint64_t v14 = *(void *)(v11 + 64);
    uint64_t v15 = *(void *)(v11 + 40);
    if (!v14)
    {
      unint64_t v17 = v1307;
LABEL_35:
      uint64_t v18 = v1308;
      goto LABEL_72;
    }
    uint64_t v16 = *(void *)(v11 + 32);
    unint64_t v17 = v1307;
    uint64_t v18 = v1308;
    if (v16)
    {
      uint64_t v19 = *(_WORD **)(v1309 + 24);
      if (v19 && v15)
      {
        uint64_t v20 = 0;
        int v21 = *(_WORD **)(v1309 + 32);
        do
        {
          sub_10016FFD0((unsigned char *)(v14 + v20), v19);
          sub_10016FFD0((unsigned char *)(v14 + v20 + 128), v19 + 16);
          sub_10016FFD0((unsigned char *)(v14 + v20 + 256), v19 + 32);
          sub_10016FFD0((unsigned char *)(v14 + v20 + 384), v19 + 48);
          sub_10016FFD0((unsigned char *)(v14 + v20 + 512), v19 + 64);
          sub_10016FFD0((unsigned char *)(v14 + v20 + 640), v19 + 80);
          sub_10016FFD0((unsigned char *)(v14 + v20 + 768), v19 + 96);
          sub_10016FFD0((unsigned char *)(v14 + v20 + 896), v19 + 112);
          sub_10016FFD0((unsigned char *)(v14 + v20 + 1024), v19 + 128);
          sub_10016FFD0((unsigned char *)(v14 + v20 + 1152), v19 + 144);
          sub_10016FFD0((unsigned char *)(v14 + v20 + 1280), v19 + 160);
          sub_10016FFD0((unsigned char *)(v14 + v20 + 1408), v19 + 176);
          sub_10016FFD0((unsigned char *)(v14 + v20 + 1536), v19 + 192);
          sub_10016FFD0((unsigned char *)(v14 + v20 + 1664), v19 + 208);
          sub_10016FFD0((unsigned char *)(v14 + v20 + 1792), v19 + 224);
          sub_10016FFD0((unsigned char *)(v14 + v20 + 1920), v19 + 240);
          sub_100170248((uint64_t)v19, 0, v21);
          sub_100170248((uint64_t)v19, 1, v21);
          sub_100170248((uint64_t)v19, 2, v21);
          sub_100170248((uint64_t)v19, 3, v21);
          sub_100170248((uint64_t)v19, 4, v21);
          v20 += 2;
          v21 += 4;
        }
        while (v20 != 128);
        uint64_t v22 = 0;
        uint64_t v23 = v16;
        do
        {
          sub_100171170(v16, v22, 0, (uint64_t)v19);
          sub_100171170(v16, v22, 1, (uint64_t)v19);
          sub_100171170(v16, v22, 2, (uint64_t)v19);
          sub_100171170(v16, v22, 3, (uint64_t)v19);
          sub_100171170(v16, v22, 4, (uint64_t)v19);
          sub_100171170(v16, v22, 5, (uint64_t)v19);
          sub_100171170(v16, v22, 6, (uint64_t)v19);
          sub_100171170(v16, v22, 7, (uint64_t)v19);
          sub_100171170(v16, v22, 8, (uint64_t)v19);
          sub_100171170(v16, v22, 9, (uint64_t)v19);
          sub_100171170(v16, v22, 10, (uint64_t)v19);
          sub_100171170(v16, v22, 11, (uint64_t)v19);
          sub_100171170(v16, v22, 12, (uint64_t)v19);
          sub_100171170(v16, v22, 13, (uint64_t)v19);
          sub_100171170(v16, v22, 14, (uint64_t)v19);
          sub_100171170(v16, v22, 15, (uint64_t)v19);
          sub_1001713A8((uint64_t)v19, 0, v23, v15);
          sub_1001713A8((uint64_t)v19, 1u, v23, v15);
          sub_1001713A8((uint64_t)v19, 2u, v23, v15);
          sub_1001713A8((uint64_t)v19, 3u, v23, v15);
          sub_1001713A8((uint64_t)v19, 4u, v23, v15);
          sub_1001713A8((uint64_t)v19, 5u, v23, v15);
          sub_1001713A8((uint64_t)v19, 6u, v23, v15);
          sub_1001713A8((uint64_t)v19, 7u, v23, v15);
          ++v22;
          v15 += 256;
          v23 += 512;
        }
        while (v22 != 65);
        uint64_t v13 = v1309;
        uint64_t v15 = *(void *)(v1309 + 40);
        unint64_t v17 = v1307;
        goto LABEL_35;
      }
      uint64_t v13 = v1309;
    }
LABEL_72:
    uint64_t v56 = 0;
    v1311 = (_DWORD *)(v18 + 136 * v17);
    v1313 = (int32x4_t *)(v1311 + 18);
    uint64_t v57 = *(void *)(v13 + 72);
    do
    {
      uint64_t v58 = 0;
      uint64_t v59 = v56 << 7;
      uint64_t v60 = (v56 << 7) - 128;
      uint64_t v61 = (v56 << 7) + 128;
      do
      {
        if (v56)
        {
          if ((int)v58 >= 126) {
            int v63 = 126;
          }
          else {
            int v63 = v58;
          }
          uint64_t v64 = (v56 << 7) - 127 + v63;
          uint64_t v65 = v58 + v60;
          if ((int)v58 <= 1) {
            __int16 v66 = 1;
          }
          else {
            __int16 v66 = v58;
          }
          uint64_t v67 = (unsigned __int16)(v66 - 1);
          uint64_t v68 = v60 + v67;
        }
        else
        {
          unsigned __int16 v69 = 129 - v58;
          if (129 - (int)v58 >= 127) {
            unsigned __int16 v69 = 127;
          }
          uint64_t v64 = v69 + 128;
          unsigned __int16 v70 = 128 - v58;
          if (128 - (int)v58 >= 127) {
            unsigned __int16 v70 = 127;
          }
          uint64_t v65 = v70 + 128;
          uint64_t v68 = 255 - v58;
          if ((int)v58 <= 1) {
            __int16 v71 = 1;
          }
          else {
            __int16 v71 = v58;
          }
          uint64_t v67 = (unsigned __int16)(v71 - 1);
        }
        __int16 v72 = *(_WORD *)(v15 + 2 * v65);
        __int16 v73 = *(_WORD *)(v15 + 2 * v64);
        __int16 v74 = *(_WORD *)(v15 + 2 * v68);
        uint64_t v75 = v58 + 1;
        if ((int)v58 + 1 >= 127) {
          int v76 = 127;
        }
        else {
          int v76 = v58 + 1;
        }
        __int16 v77 = *(_WORD *)(v15 + 2 * (v76 | v59));
        uint64_t v78 = v58 + v59;
        __int16 v79 = *(_WORD *)(v15 + 2 * (v59 + v67));
        uint64_t v80 = (int)(v76 | v61);
        uint64_t v81 = v58 + v61;
        uint64_t v82 = v61 + v67;
        uint64_t v83 = v76 | 0x2000u;
        uint64_t v84 = v58 + 0x2000;
        uint64_t v85 = v67 + 0x2000;
        if (v56 != 64)
        {
          uint64_t v83 = v80;
          uint64_t v84 = v81;
          uint64_t v85 = v82;
        }
        unsigned __int16 v86 = v73
            + v72
            + v77
            + v74
            + v79
            + *(_WORD *)(v15 + 2 * v84)
            + *(_WORD *)(v15 + 2 * v83)
            + *(_WORD *)(v15 + 2 * v85);
        if (v86)
        {
          if ((__int16)v86 < 0)
          {
            __int16 v89 = -6;
          }
          else
          {
            int v87 = 0;
            do
            {
              __int16 v88 = v87;
              v86 *= 2;
              ++v87;
            }
            while ((v86 & 0x8000) == 0);
            __int16 v89 = v88 - 5;
          }
          unsigned int v90 = *(unsigned __int16 *)(v15 + 2 * v78);
          unsigned int v91 = (v86 + 32) >> 6;
          BOOL v92 = (unsigned __int16)(v86 >> 5) > 0x55Au;
          if (v92) {
            unsigned int v91 = (v91 + 1) >> 1;
          }
          __int16 v93 = v89 - v92;
          unsigned int v94 = 2048 - (((v91 << 16) + 1040187392) >> 14);
          unsigned int v95 = v90 >> (-6 - v93);
          unsigned int v96 = v90 << (v93 + 6);
          if (v93 >= -6) {
            unsigned int v97 = v96;
          }
          else {
            unsigned int v97 = v95;
          }
          if (v97 >= 0xFFFF) {
            unsigned int v97 = 0xFFFF;
          }
          unsigned int v62 = ((v94 & 0xFFFC) * v97) >> 16;
          if (v62 >= 0xFF) {
            LOBYTE(v62) = -1;
          }
        }
        else
        {
          LOBYTE(v62) = 0;
        }
        *(unsigned char *)(v57 + v78) = v62;
        uint64_t v58 = v75;
      }
      while (v75 != 128);
      ++v56;
    }
    while (v56 != 65);
    bzero(*(void **)(v1309 + 48), 0x8340uLL);
    uint64_t v99 = *(void *)(v1309 + 48);
    uint64_t v100 = *(unsigned __int16 *)(v1309 + 102);
    if (*(_WORD *)(v1309 + 102))
    {
      int v101 = 0;
      uint64_t v102 = 0;
      uint64_t v103 = *(void *)(v1309 + 72);
      uint64_t v104 = 320 * *(unsigned __int16 *)(v1309 + 100);
      float v105 = (char *)&unk_1001BC851;
      float v106 = (char *)&unk_1001AC1D0;
      float v107 = (char *)&unk_1001B4511;
      int8x16_t v109 = (int8x16_t)xmmword_1001AC180;
      int8x16_t v108 = (int8x16_t)xmmword_1001AC170;
      int8x16_t v111 = (int8x16_t)xmmword_1001AC1A0;
      int8x16_t v110 = (int8x16_t)xmmword_1001AC190;
      v112.i64[0] = 0xFF000000FFLL;
      v112.i64[1] = 0xFF000000FFLL;
      do
      {
        float v113 = v105;
        float v114 = v106;
        uint64_t v115 = v99;
        BOOL v116 = v107;
        uint64_t v117 = 160;
        do
        {
          int v118 = (unsigned __int8 *)(v103 + *(unsigned __int16 *)&v114[v104]);
          unsigned int v119 = (v116[v104 - 1] * *v118
                + v116[v104] * v118[1]
                + v113[v104 - 1] * v118[128]
                + v113[v104] * v118[129]) >> 8;
          if (v119 >= 0xFF) {
            unsigned int v119 = 255;
          }
          BOOL v120 = (unsigned char *)(v115 + v104);
          v101 += v119;
          v116 += 2;
          *BOOL v120 = v119;
          v120[160] = v119;
          ++v115;
          v114 += 2;
          v113 += 2;
          --v117;
        }
        while (v117);
        ++v102;
        v107 += 320;
        v99 += 320;
        v106 += 320;
        v105 += 320;
      }
      while (v102 != v100);
      uint64_t v121 = v1309;
      uint64_t v99 = *(void *)(v1309 + 48);
    }
    else
    {
      int v101 = 0;
      int8x16_t v109 = (int8x16_t)xmmword_1001AC180;
      int8x16_t v108 = (int8x16_t)xmmword_1001AC170;
      int8x16_t v111 = (int8x16_t)xmmword_1001AC1A0;
      int8x16_t v110 = (int8x16_t)xmmword_1001AC190;
      v112.i64[0] = 0xFF000000FFLL;
      v112.i64[1] = 0xFF000000FFLL;
      uint64_t v121 = v1309;
    }
    uint64_t v122 = *(unsigned __int16 *)(v121 + 96);
    uint64_t v123 = *(unsigned __int16 *)(v121 + 98);
    uint64_t v124 = *(void *)(v121 + 80);
    if (v123 > 0x68
      || (bzero((void *)(v124 + 2 * (160 * v123)), 2 * (160 * (105 - v123))),
          v112.i64[0] = 0xFF000000FFLL,
          v112.i64[1] = 0xFF000000FFLL,
          int8x16_t v111 = (int8x16_t)xmmword_1001AC1A0,
          int8x16_t v110 = (int8x16_t)xmmword_1001AC190,
          int8x16_t v109 = (int8x16_t)xmmword_1001AC180,
          int8x16_t v108 = (int8x16_t)xmmword_1001AC170,
          v123))
    {
      uint64_t v125 = 0;
      uint64_t v126 = v99 + 320 * v122;
      uint64_t v127 = (char *)&unk_1001C4C10 + 2 * v122;
      uint64_t v128 = (char *)&unk_1001C4CE2 + 4 * v122;
      int v129 = (unsigned __int16)(((4 * v101) | 2u) / (160 * (int)v100));
      while (1)
      {
        uint64_t v132 = v127[2 * v125];
        uint64_t v133 = (2 * v125) | 1;
        unint64_t v134 = v127[v133];
        unsigned int v135 = v129 * *(unsigned __int16 *)&v128[2 * v133] + 2;
        unsigned int v136 = v135 >> 2;
        uint64_t v137 = 320 * v125;
        unint64_t v138 = v134 & 0xFC;
        int v139 = 2 * *(unsigned __int16 *)&v128[4 * v125];
        uint64_t v140 = 160 * v125;
        if ((v134 & 0xFC) > v132)
        {
          uint64_t v141 = 0;
          uint64_t v142 = ((~v132 + v138) & 0xFFFFFFFFFFFFFFFCLL) + v132;
          unint64_t v143 = v142 + 4;
          if (v142 + 4 <= v134) {
            unint64_t v143 = v134;
          }
          unint64_t v144 = v143 - v142 - 3;
          unint64_t v145 = v144 & 0xFFFFFFFFFFFFFFFELL;
          while (1)
          {
            unsigned __int16 v146 = 0;
            int v147 = v141 + v137;
            int32x4_t v98 = (int32x4_t)vdupq_n_s64(v141 + v137);
            uint32x4_t v148 = (int16x4_t *)((char *)&unk_1001C4B90 + 2 * v132);
            unint64_t v149 = v132;
            do
            {
              int16x4_t v150 = *v148++;
              uint32x4_t v151 = (uint32x4_t)vmovl_s16(v150);
              int64x2_t v152 = (int64x2_t)vaddw_u32((uint64x2_t)v98, *(uint32x2_t *)v151.i8);
              int64x2_t v153 = vshrq_n_s64(vshlq_n_s64((int64x2_t)vaddw_high_u32((uint64x2_t)v98, v151), 0x20uLL), 0x20uLL);
              int64x2_t v154 = vshrq_n_s64(vshlq_n_s64(v152, 0x20uLL), 0x20uLL);
              v149 += 4;
              v146 += *(unsigned __int8 *)(v126 + v154.i64[0])
                    + *(unsigned __int8 *)(v126 + v153.i64[0])
                    + *(unsigned __int8 *)(v126 + v154.i64[1])
                    + *(unsigned __int8 *)(v126 + v153.i64[1]);
            }
            while (v149 < v138);
            if (v149 <= v134)
            {
              if (v144 < 2) {
                goto LABEL_140;
              }
              uint64_t v155 = 0;
              __int16 v156 = 0;
              do
              {
                int v157 = (__int16 *)v148 + v155;
                v146 += *(unsigned __int8 *)(v126 + v147 + *v157);
                v156 += *(unsigned __int8 *)(v126 + v147 + v157[1]);
                v155 += 2;
              }
              while (v145 != v155);
              v146 += v156;
              if (v144 != v145) {
                break;
              }
            }
LABEL_131:
            *(_WORD *)(v124 + 2 * (v141 + v140)) = (v136 + v139 * v146) >> 10;
            if (++v141 == 160) {
              goto LABEL_126;
            }
          }
          v149 += v145;
LABEL_140:
          unint64_t v158 = v134 - v149;
          if (v134 < v149) {
            unint64_t v158 = 0;
          }
          unint64_t v159 = v158 + 1;
          int v160 = (__int16 *)((char *)&unk_1001C4B90 + 2 * v149);
          do
          {
            int v161 = *v160++;
            v146 += *(unsigned __int8 *)(v126 + v147 + v161);
            --v159;
          }
          while (v159);
          goto LABEL_131;
        }
        if (v132 <= v134) {
          break;
        }
        int32x4_t v98 = (int32x4_t)vdupq_n_s16(v135 >> 12);
        uint16x8_t v130 = (int32x4_t *)(v124 + 320 * v125);
        *uint16x8_t v130 = v98;
        v130[1] = v98;
        int8x16_t v131 = (int32x4_t *)(v124 + ((320 * v125) | 0x20));
        *int8x16_t v131 = v98;
        v131[1] = v98;
        v130[4] = v98;
        v130[5] = v98;
        v130[6] = v98;
        v130[7] = v98;
        v130[8] = v98;
        v130[9] = v98;
        v130[10] = v98;
        v130[11] = v98;
        v130[12] = v98;
        v130[13] = v98;
        v130[14] = v98;
        v130[15] = v98;
        v130[16] = v98;
        v130[17] = v98;
        v130[18] = v98;
        v130[19] = v98;
LABEL_126:
        if (++v125 == v123) {
          goto LABEL_156;
        }
      }
      uint64_t v162 = 0;
      unint64_t v163 = v134 + 1;
      unint64_t v164 = v163 - v132;
      unint64_t v165 = (v163 - v132) & 0xFFFFFFFFFFFFFFFELL;
      while (1)
      {
        int v166 = v162 + v137;
        if (v164 >= 2)
        {
          __int16 v169 = 0;
          __int16 v170 = 0;
          uint64_t v171 = (__int16 *)((char *)&unk_1001C4B90 + 2 * v132 + 2);
          unint64_t v172 = (v163 - v132) & 0xFFFFFFFFFFFFFFFELL;
          do
          {
            v169 += *(unsigned __int8 *)(v126 + v166 + *(v171 - 1));
            v170 += *(unsigned __int8 *)(v126 + v166 + *v171);
            v171 += 2;
            v172 -= 2;
          }
          while (v172);
          unsigned __int16 v167 = v170 + v169;
          uint64_t v168 = v165 + v132;
          if (v164 == v165) {
            goto LABEL_147;
          }
        }
        else
        {
          unsigned __int16 v167 = 0;
          uint64_t v168 = v132;
        }
        uint64_t v173 = v163 - v168;
        uint16x8_t v174 = (__int16 *)((char *)&unk_1001C4B90 + 2 * v168);
        do
        {
          int v175 = *v174++;
          v167 += *(unsigned __int8 *)(v126 + v166 + v175);
          --v173;
        }
        while (v173);
LABEL_147:
        *(_WORD *)(v124 + 2 * (v162 + v140)) = (v136 + v139 * v167) >> 10;
        if (++v162 == 160) {
          goto LABEL_126;
        }
      }
    }
LABEL_156:
    uint64_t v176 = v1309;
    unint64_t v177 = *(unsigned __int16 *)(v1309 + 98) + 6;
    unint64_t v178 = v177 >> 3;
    if (!(v177 >> 3)) {
      goto LABEL_369;
    }
    uint64_t v179 = *(void *)(v1309 + 80);
    int32x4_t v180 = *(_WORD **)(v1309 + 24);
    if (((10 * v178) & 0xE) != 0) {
      unsigned int v181 = ((20 * v178) & 0x7FFE0) + 32;
    }
    else {
      unsigned int v181 = 20 * (v177 >> 3);
    }
    if ((v181 & 0xFFFC) != 0) {
      bzero(*(void **)(v1309 + 24), (unsigned __int16)v181);
    }
    uint64_t v182 = 0;
    long long v183 = v180;
    do
    {
      *long long v183 = sub_10016E99C(v179, 8 * (unsigned __int16)v182, 0);
      v183 += 10;
      ++v182;
    }
    while (v178 != v182);
    uint64_t v184 = 0;
    uint16x8_t v185 = v180 + 1;
    do
    {
      _WORD *v185 = sub_10016E99C(v179, 8 * (unsigned __int16)v184, 16);
      v185 += 10;
      ++v184;
    }
    while (v178 != v184);
    uint64_t v186 = 0;
    uint64_t v187 = v180 + 2;
    do
    {
      *uint64_t v187 = sub_10016E99C(v179, 8 * (unsigned __int16)v186, 32);
      v187 += 10;
      ++v186;
    }
    while (v178 != v186);
    uint64_t v188 = 0;
    int16x8_t v189 = v180 + 3;
    do
    {
      *int16x8_t v189 = sub_10016E99C(v179, 8 * (unsigned __int16)v188, 48);
      v189 += 10;
      ++v188;
    }
    while (v178 != v188);
    uint64_t v190 = 0;
    uint32x4_t v191 = v180 + 4;
    do
    {
      *uint32x4_t v191 = sub_10016E99C(v179, 8 * (unsigned __int16)v190, 64);
      v191 += 10;
      ++v190;
    }
    while (v178 != v190);
    uint64_t v192 = 0;
    uint64_t v193 = v180 + 5;
    do
    {
      *uint64_t v193 = sub_10016E99C(v179, 8 * (unsigned __int16)v192, 80);
      v193 += 10;
      ++v192;
    }
    while (v178 != v192);
    uint64_t v194 = 0;
    unint64_t v195 = v180 + 6;
    do
    {
      *unint64_t v195 = sub_10016E99C(v179, 8 * (unsigned __int16)v194, 96);
      v195 += 10;
      ++v194;
    }
    while (v178 != v194);
    uint64_t v196 = 0;
    unint64_t v197 = v180 + 7;
    do
    {
      *unint64_t v197 = sub_10016E99C(v179, 8 * (unsigned __int16)v196, 112);
      v197 += 10;
      ++v196;
    }
    while (v178 != v196);
    uint64_t v198 = 0;
    unint64_t v199 = v180 + 8;
    do
    {
      *unint64_t v199 = sub_10016E99C(v179, 8 * (unsigned __int16)v198, 128);
      v199 += 10;
      ++v198;
    }
    while (v178 != v198);
    uint64_t v200 = 0;
    uint64_t v201 = v180 + 9;
    do
    {
      *uint64_t v201 = sub_10016E99C(v179, 8 * (unsigned __int16)v200, 144);
      v201 += 10;
      ++v200;
    }
    while (v178 != v200);
    *(void *)v1328 = 0;
    memset(v1471, 0, 40);
    int32x4_t v1468 = 0u;
    int32x4_t v1469 = 0u;
    uint64_t v202 = (v181 >> 1) & 0x7FF0;
    int v1326 = v177 & 0x1FFF8;
    int v1314 = v178 - 1;
    int32x2_t v1470 = 0;
    uint64_t v1316 = v202;
    __int16 v1318 = v181;
    while (2)
    {
      int8x16_t v109 = (int8x16_t)xmmword_1001AC180;
      int8x16_t v108 = (int8x16_t)xmmword_1001AC170;
      int8x16_t v111 = (int8x16_t)xmmword_1001AC1A0;
      int8x16_t v110 = (int8x16_t)xmmword_1001AC190;
      v112.i64[0] = 0xFF000000FFLL;
      v112.i64[1] = 0xFF000000FFLL;
      if ((unsigned __int16)v181 >= 0x20u)
      {
        uint64_t v207 = 0;
        unsigned __int16 v206 = 0;
        do
        {
          if ((unsigned __int16)v180[v207] > (unsigned __int16)v180[v206]) {
            unsigned __int16 v206 = v207;
          }
          ++v207;
        }
        while (v202 != v207);
      }
      else
      {
        unsigned __int16 v206 = 0;
      }
      int v208 = 0;
      unsigned int v209 = 10 * (v206 / 0xAu);
      unint64_t v210 = (1717986919 * (unint64_t)v209) >> 34;
      unsigned int v1322 = v209;
      unsigned int v1330 = v206 - v209;
      __int16 v211 = 16 * (v206 % 0xAu);
      uint64_t v1324 = v206;
      int v212 = (unsigned __int16)v180[v206];
      __int16 v1332 = 8 * (v210 & 0x1FFF);
      uint64_t v213 = 1280 * (v210 & 0x1FFF);
      int v214 = ((unsigned __int16)(5 * (v210 & 0x1FFF)) << 8) | 0xA0;
      uint64_t v215 = 160 * ((unsigned __int16)(8 * v210) | 1u);
      uint64_t v216 = 160 * ((unsigned __int16)(8 * v210) | 2u);
      int v217 = v216 | 0xA0;
      uint64_t v218 = 160 * ((unsigned __int16)(8 * v210) | 3u);
      uint64_t v219 = 160 * ((unsigned __int16)(8 * v210) | 4u);
      uint64_t v220 = 160 * ((unsigned __int16)(8 * v210) | 5u);
      uint64_t v221 = 160 * ((unsigned __int16)(8 * v210) | 6u);
      int v1334 = v210;
      uint64_t v222 = 160 * ((unsigned __int16)(8 * v210) | 7u);
      while (1)
      {
        int v223 = (unsigned __int16)(v211 + v208);
        __int16 v224 = *(_WORD *)(v179 + 2 * (v213 + v223));
        if (v223 != 159) {
          break;
        }
        unsigned int v225 = *(unsigned __int16 *)(v179 + 2 * v213);
        if (v225 <= *(unsigned __int16 *)(v179 + 2 * (v214 + 159))) {
          LOWORD(v225) = *(_WORD *)(v179 + 2 * (v214 + 159));
        }
        if (v212 == (unsigned __int16)(v225 + v224)) {
          __int16 v226 = 0;
        }
        else {
          __int16 v226 = 255;
        }
        unsigned int v227 = *(unsigned __int16 *)(v179 + 2 * v215);
        if (v227 <= *(unsigned __int16 *)(v179 + 2 * (v215 + 319))) {
          LOWORD(v227) = *(_WORD *)(v179 + 2 * (v215 + 319));
        }
        if (v212 == (unsigned __int16)(v227 + *(_WORD *)(v179 + 2 * (v215 + 159)))) {
          __int16 v226 = 1;
        }
        unsigned int v228 = *(unsigned __int16 *)(v179 + 2 * v216);
        if (v228 <= *(unsigned __int16 *)(v179 + 2 * (v217 + 159))) {
          LOWORD(v228) = *(_WORD *)(v179 + 2 * (v217 + 159));
        }
        BOOL v229 = v212 == (unsigned __int16)(v228 + *(_WORD *)(v179 + 2 * (v216 + 159)));
        unsigned int v230 = *(unsigned __int16 *)(v179 + 2 * v218);
        if (v229) {
          __int16 v226 = 2;
        }
        if (v230 <= *(unsigned __int16 *)(v179 + 2 * (v218 + 319))) {
          LOWORD(v230) = *(_WORD *)(v179 + 2 * (v218 + 319));
        }
        if (v212 == (unsigned __int16)(v230 + *(_WORD *)(v179 + 2 * (v218 + 159)))) {
          __int16 v226 = 3;
        }
        unsigned int v231 = *(unsigned __int16 *)(v179 + 2 * v219);
        if (v231 <= *(unsigned __int16 *)(v179 + 2 * (v219 + 319))) {
          LOWORD(v231) = *(_WORD *)(v179 + 2 * (v219 + 319));
        }
        if (v212 == (unsigned __int16)(v231 + *(_WORD *)(v179 + 2 * (v219 + 159)))) {
          __int16 v226 = 4;
        }
        unsigned int v232 = *(unsigned __int16 *)(v179 + 2 * v220);
        if (v232 <= *(unsigned __int16 *)(v179 + 2 * (v220 + 319))) {
          LOWORD(v232) = *(_WORD *)(v179 + 2 * (v220 + 319));
        }
        unsigned int v233 = *(unsigned __int16 *)(v179 + 2 * v221);
        if (v212 == (unsigned __int16)(v232 + *(_WORD *)(v179 + 2 * (v220 + 159)))) {
          __int16 v226 = 5;
        }
        if (v233 <= *(unsigned __int16 *)(v179 + 2 * (v221 + 319))) {
          LOWORD(v233) = *(_WORD *)(v179 + 2 * (v221 + 319));
        }
        if (v212 == (unsigned __int16)(v233 + *(_WORD *)(v179 + 2 * (v221 + 159)))) {
          __int16 v226 = 6;
        }
        unsigned int v234 = *(unsigned __int16 *)(v179 + 2 * (v222 + 319));
        if (*(unsigned __int16 *)(v179 + 2 * v222) > v234) {
          LOWORD(v234) = *(_WORD *)(v179 + 2 * v222);
        }
        if (v212 == (unsigned __int16)(v234 + *(_WORD *)(v179 + 2 * (v222 + 159)))) {
          goto LABEL_266;
        }
LABEL_263:
        if (v226 != 255) {
          goto LABEL_267;
        }
        if (++v208 == 16)
        {
          unsigned int v245 = 0;
          goto LABEL_268;
        }
      }
      unsigned int v235 = *(unsigned __int16 *)(v179 + 2 * (v213 + v223 + 1));
      if (v235 <= *(unsigned __int16 *)(v179 + 2 * (v214 + v223))) {
        LOWORD(v235) = *(_WORD *)(v179 + 2 * (v214 + v223));
      }
      if (v212 == (unsigned __int16)(v235 + v224)) {
        __int16 v226 = 0;
      }
      else {
        __int16 v226 = 255;
      }
      unsigned int v236 = *(unsigned __int16 *)(v179 + 2 * (v215 + v223 + 1));
      if (v236 <= *(unsigned __int16 *)(v179 + 2 * (v215 + 160 + v223))) {
        LOWORD(v236) = *(_WORD *)(v179 + 2 * (v215 + 160 + v223));
      }
      BOOL v229 = v212 == (unsigned __int16)(v236 + *(_WORD *)(v179 + 2 * (v215 + v223)));
      unsigned int v237 = *(unsigned __int16 *)(v179 + 2 * (v216 + v223 + 1));
      if (v229) {
        __int16 v226 = 1;
      }
      if (v237 <= *(unsigned __int16 *)(v179 + 2 * (v217 + v223))) {
        LOWORD(v237) = *(_WORD *)(v179 + 2 * (v217 + v223));
      }
      if (v212 == (unsigned __int16)(v237 + *(_WORD *)(v179 + 2 * (v216 + v223)))) {
        __int16 v226 = 2;
      }
      unsigned int v238 = *(unsigned __int16 *)(v179 + 2 * (v218 + v223 + 1));
      if (v238 <= *(unsigned __int16 *)(v179 + 2 * (v218 + 160 + v223))) {
        LOWORD(v238) = *(_WORD *)(v179 + 2 * (v218 + 160 + v223));
      }
      if (v212 == (unsigned __int16)(v238 + *(_WORD *)(v179 + 2 * (v218 + v223)))) {
        __int16 v226 = 3;
      }
      unsigned int v239 = *(unsigned __int16 *)(v179 + 2 * (v219 + v223 + 1));
      if (v239 <= *(unsigned __int16 *)(v179 + 2 * (v219 + 160 + v223))) {
        LOWORD(v239) = *(_WORD *)(v179 + 2 * (v219 + 160 + v223));
      }
      BOOL v229 = v212 == (unsigned __int16)(v239 + *(_WORD *)(v179 + 2 * (v219 + v223)));
      unsigned int v240 = *(unsigned __int16 *)(v179 + 2 * (v220 + v223 + 1));
      if (v229) {
        __int16 v226 = 4;
      }
      if (v240 <= *(unsigned __int16 *)(v179 + 2 * (v220 + 160 + v223))) {
        LOWORD(v240) = *(_WORD *)(v179 + 2 * (v220 + 160 + v223));
      }
      if (v212 == (unsigned __int16)(v240 + *(_WORD *)(v179 + 2 * (v220 + v223)))) {
        __int16 v226 = 5;
      }
      unsigned int v241 = *(unsigned __int16 *)(v179 + 2 * (v221 + v223 + 1));
      if (v241 <= *(unsigned __int16 *)(v179 + 2 * (v221 + 160 + v223))) {
        LOWORD(v241) = *(_WORD *)(v179 + 2 * (v221 + 160 + v223));
      }
      if (v212 == (unsigned __int16)(v241 + *(_WORD *)(v179 + 2 * (v221 + v223)))) {
        __int16 v226 = 6;
      }
      __int16 v242 = *(_WORD *)(v179 + 2 * (v222 + v223));
      unsigned int v243 = *(unsigned __int16 *)(v179 + 2 * (v222 + v223 + 1));
      unsigned int v244 = *(unsigned __int16 *)(v179 + 2 * (v222 + 160 + v223));
      if (v243 > v244) {
        LOWORD(v244) = v243;
      }
      if (v212 != (unsigned __int16)(v244 + v242)) {
        goto LABEL_263;
      }
LABEL_266:
      __int16 v226 = 7;
LABEL_267:
      unsigned int v245 = (unsigned __int16)(v208 + v211 + 160 * (v226 + v1332));
LABEL_268:
      unsigned int v246 = 160 * ((26843546 * (unint64_t)v245) >> 32);
      unsigned int v247 = v245 - v246;
      unint64_t v248 = (1717986919 * (unint64_t)v246) >> 38;
      int v249 = 160 * v248;
      unsigned int v250 = 160 * v248 + v247;
      unsigned int v251 = *(unsigned __int16 *)(v179 + 2 * v250);
      unsigned int v252 = *(unsigned __int16 *)(v179 + 2 * (v250 + 160));
      if (v247 == 159) {
        unsigned int v253 = 160 * v248;
      }
      else {
        unsigned int v253 = v250 + 1;
      }
      unsigned int v254 = *(unsigned __int16 *)(v179 + 2 * v253);
      if (v252 >= v254)
      {
        if (v251 < v252) {
          LODWORD(v248) = v248 + 1;
        }
        int v249 = 160 * v248;
      }
      else if (v251 < v254)
      {
        if (v247 == 159) {
          unsigned int v247 = 0;
        }
        else {
          ++v247;
        }
      }
      int v255 = v247 - 1;
      if (!v247) {
        int v255 = 159;
      }
      if (v247 == 159) {
        unsigned int v256 = 0;
      }
      else {
        unsigned int v256 = v247 + 1;
      }
      if (v248) {
        int v257 = v248 - 1;
      }
      else {
        int v257 = v1326;
      }
      int v258 = v249 + 160;
      unsigned int v259 = *(unsigned __int16 *)(v179 + 2 * (v249 + v255));
      int v260 = *(unsigned __int16 *)(v179 + 2 * (int)(v249 + v247));
      unsigned int v261 = *(unsigned __int16 *)(v179 + 2 * (int)(v249 + v256));
      unsigned int v262 = *(unsigned __int16 *)(v179 + 2 * (int)(v247 + 160 * v257));
      if (v1326 == v248) {
        int v263 = 0;
      }
      else {
        int v263 = v258;
      }
      unsigned int v264 = *(unsigned __int16 *)(v179 + 2 * (int)(v263 + v247));
      int v265 = (v261 - v259) << 16;
      if (v261 >= v259)
      {
        int v266 = v261 + v260 - 2 * v259;
        if (!v266) {
          int v266 = 1;
        }
        int v267 = v265 + (v266 >> 1);
      }
      else
      {
        int v266 = v260 + v259 - 2 * v261;
        if (!v266) {
          int v266 = 1;
        }
        int v267 = v265 - (v266 >> 1);
      }
      int v268 = v267 / v266;
      int v269 = (v264 - v262) << 16;
      if (v264 >= v262)
      {
        int v270 = v264 + v260 - 2 * v262;
        if (!v270) {
          int v270 = 1;
        }
        int v271 = v269 + (v270 >> 1);
      }
      else
      {
        int v270 = v262 + v260 - 2 * v264;
        if (!v270) {
          int v270 = 1;
        }
        int v271 = v269 - (v270 >> 1);
      }
      int v272 = v271 / v270;
      int v273 = v268 + (v247 << 16);
      int v274 = v272 + (v248 << 16);
      int v275 = v273 + 4096;
      if (v273 >= -4096) {
        int v276 = 0;
      }
      else {
        int v276 = 1280;
      }
      int v277 = v276 + (v275 >> 13);
      if (v274 >= -4096) {
        int v278 = (v274 + 4096) >> 13;
      }
      else {
        int v278 = 0;
      }
      uint64_t v279 = *(void *)v1328;
      *(_DWORD *)((char *)v1471 + v279 * 4) = v277;
      v1468.i32[v279] = v278;
      if (*(void *)v1328 != 9)
      {
        int v280 = (__int16)v1326;
        if ((__int16)(v248 + 6) < (__int16)v1326) {
          int v280 = (__int16)(v248 + 6);
        }
        if (v247 > 8)
        {
          unsigned int v281 = v247 - 9;
          if (v247 >= 0x97) {
            int v283 = 159;
          }
          else {
            int v283 = v247 + 9;
          }
          if (v247 < 0x97) {
            int v282 = -1;
          }
          else {
            int v282 = v247 - 151;
          }
        }
        else
        {
          unsigned int v281 = v247 + 151;
          int v282 = v247 + 9;
          int v283 = 159;
        }
        int v284 = (__int16)(v248 - 6) & ~((__int16)(v248 - 6) >> 31);
        if (v284 <= (__int16)v280)
        {
          BOOL v285 = __OFSUB__(v283, v281);
          int v286 = v283 - v281;
          if (v286 < 0 != v285)
          {
            if ((v282 & 0x80000000) == 0)
            {
              size_t v287 = 2 * (v282 + 1);
              if (v280 <= v284) {
                int v280 = (__int16)(v248 - 6) & ~((__int16)(v248 - 6) >> 31);
              }
              uint64_t v288 = -(uint64_t)(v280 - v284 + 1);
              v289 = (char *)(v179 + (320 * v284));
              do
              {
                bzero(v289, v287);
                v289 += 320;
                BOOL v34 = __CFADD__(v288++, 1);
              }
              while (!v34);
            }
          }
          else
          {
            uint64_t v290 = 2 * (int)(v281 + 160 * v284);
            size_t v291 = 2 * v286 + 2;
            if (v282 < 0)
            {
              if (v280 <= v284) {
                int v280 = (__int16)(v248 - 6) & ~((__int16)(v248 - 6) >> 31);
              }
              uint64_t v296 = -(uint64_t)(v280 - v284 + 1);
              v297 = (char *)(v179 + v290);
              do
              {
                bzero(v297, v291);
                v297 += 320;
                BOOL v34 = __CFADD__(v296++, 1);
              }
              while (!v34);
            }
            else
            {
              size_t v292 = 2 * (v282 + 1);
              if (v280 <= v284) {
                int v280 = (__int16)(v248 - 6) & ~((__int16)(v248 - 6) >> 31);
              }
              uint64_t v293 = -(uint64_t)(v280 - v284 + 1);
              v294 = (char *)(v179 + v290);
              v295 = (char *)(v179 + (320 * v284));
              do
              {
                bzero(v294, v291);
                bzero(v295, v292);
                v294 += 320;
                v295 += 320;
                BOOL v34 = __CFADD__(v293++, 1);
              }
              while (!v34);
            }
          }
        }
        unsigned int v298 = v247 & 0xF;
        if (v1322 - 10 > 0xFFFFFFEC || (v248 & 7) > 5)
        {
LABEL_352:
          if (v298 < 9) {
            goto LABEL_353;
          }
          char v304 = 0;
          v180[v1324] = sub_10016E99C(v179, v1332, v211);
          int v303 = 10 * v1334;
LABEL_356:
          __int16 v305 = sub_10016E99C(v179, v1332, (__int16)(v211 + 16));
          if (v1330 == 9) {
            unsigned int v306 = 0;
          }
          else {
            unsigned int v306 = v1330 + 1;
          }
          v180[v306 + v303] = v305;
          if ((v248 & 7) < 3 || v1334 >= v1314) {
            goto LABEL_188;
          }
          __int16 v307 = v1332 + 8;
          if (v304)
          {
            int v308 = 1;
            goto LABEL_366;
          }
          int v203 = 10 * v1334 + 10;
          v180[v1330 + v203] = sub_10016E99C(v179, v307, v211);
        }
        else
        {
          __int16 v299 = v1332 - 8;
          int v300 = 10 * v1334 - 10;
          if (v298 < 9) {
            v180[(v1330 + 9) % 0xA + v300] = sub_10016E99C(v179, v1332 - 8, (__int16)(v211 - 16));
          }
          v180[v1330 + v300] = sub_10016E99C(v179, v299, v211);
          if (v298 >= 8)
          {
            __int16 v301 = sub_10016E99C(v179, v299, (__int16)(v211 + 16));
            if (v1330 == 9) {
              unsigned int v302 = 0;
            }
            else {
              unsigned int v302 = v1330 + 1;
            }
            v180[v302 + v300] = v301;
            goto LABEL_352;
          }
LABEL_353:
          int v303 = 10 * v1334;
          v180[10 * v1334 + (v1330 + 9) % 0xA] = sub_10016E99C(v179, v1332, (__int16)(v211 - 16));
          v180[v1324] = sub_10016E99C(v179, v1332, v211);
          if (v298 >= 7)
          {
            char v304 = 1;
            goto LABEL_356;
          }
          if ((v248 & 7) < 3 || v1334 >= v1314) {
            goto LABEL_188;
          }
          int v308 = 0;
          __int16 v307 = v1332 + 8;
LABEL_366:
          int v203 = 10 * v1334 + 10;
          v180[(v1330 + 9) % 0xA + v203] = sub_10016E99C(v179, v307, (__int16)(v211 - 16));
          v180[v1330 + v203] = sub_10016E99C(v179, v307, v211);
          if (!v308)
          {
LABEL_188:
            ++*(void *)v1328;
            uint64_t v202 = v1316;
            LOWORD(v181) = v1318;
            continue;
          }
        }
        __int16 v204 = sub_10016E99C(v179, v307, (__int16)(v211 + 16));
        if (v1330 == 9) {
          unsigned int v205 = 0;
        }
        else {
          unsigned int v205 = v1330 + 1;
        }
        v180[v205 + v203] = v204;
        goto LABEL_188;
      }
      break;
    }
    int32x4_t v98 = v1468;
    uint64_t v176 = v1309;
LABEL_369:
    uint64_t v309 = 0;
    int32x4_t v310 = vdupq_n_s32(8 * *(unsigned __int16 *)(v176 + 96));
    int32x4_t v1468 = vaddq_s32(v310, v98);
    int32x4_t v1469 = vaddq_s32(v310, v1469);
    int32x2_t v1470 = vadd_s32(*(int32x2_t *)v310.i8, v1470);
    v311 = (_DWORD *)&v1338 + 2;
    uint64_t v312 = v176;
    do
    {
      uint64_t v313 = v1468.u32[v309];
      uint64_t v314 = *(unsigned int *)((char *)v1471 + v309 * 4);
      uint64_t v315 = v313 & 7;
      LODWORD(v313) = word_1001C4E86[(v313 << 45 >> 48) + 1];
      unint64_t v316 = (v314 << 45 >> 47) & 0xFFFFFFFFFFFFFFFELL;
      int v317 = *(__int16 *)((char *)&unk_1001C4F6A + v316);
      LOWORD(v316) = *(_WORD *)((char *)&unk_1001C50AA + v316);
      uint64_t v318 = 2 * (v314 & 7);
      int v319 = *(__int16 *)((char *)&unk_1001C51EA + v318);
      LODWORD(v318) = *(__int16 *)((char *)&unk_1001C51FA + v318);
      int v320 = (__int16)-(__int16)v316;
      int v321 = v319 * v317 - v318 * v320 + 0x8000;
      LOWORD(v318) = ((v318 * v317 + v319 * v320 + 0x8000) >> 16) - v316;
      LOWORD(v316) = v317 + HIWORD(v321);
      int v322 = (__int16)(v313 + ((word_1001C4F5A[v315] * v313 + 0x8000) >> 16));
      LODWORD(v316) = ((__int16)v316 * v322 + 64) >> 7;
      LODWORD(v318) = ((__int16)v318 * v322 + 64) >> 7;
      *(v311 - 2) = v316;
      *(v311 - 1) = -(int)v318;
      _DWORD *v311 = v318;
      v311[1] = v316;
      v311 += 4;
      ++v309;
    }
    while (v309 != 10);
    uint64_t v323 = 0;
    uint64_t v324 = *(void *)(v312 + 40);
    do
    {
      int v325 = 0;
      uint64_t v326 = 0;
      v327 = &v1338 + v323;
      int v328 = *(_DWORD *)v327;
      int v329 = *((_DWORD *)v327 + 1);
      int v330 = *((_DWORD *)v327 + 2);
      int v331 = *((_DWORD *)v327 + 3);
      do
      {
        int v341 = byte_1001C5546[v326];
        int v342 = byte_1001C5506[v326];
        int v343 = v328 * v341 + v330 * v342;
        int v344 = (v331 * v342 + v329 * v341 + 16) >> 5;
        BOOL v345 = v343 < -16;
        if (v343 >= -16) {
          unsigned int v346 = (v343 + 16) >> 5;
        }
        else {
          unsigned int v346 = -((v343 + 16) >> 5);
        }
        if (v345) {
          int v347 = -v344;
        }
        else {
          int v347 = v344;
        }
        if (v346 - 1998849 >= 0xFFE27FFF && v347 <= 1998848 && v347 >= -2031616)
        {
          uint64_t v350 = 0;
          unsigned int v340 = 0;
          int v351 = v347 + 0x200000;
          int v352 = v347 & 0x7FFF;
          unsigned int v353 = ((v346 >> 8) & 0xFFFF80) + ((v347 + 0x200000) >> 15);
          unsigned int v354 = (((v346 & 0x7FFF ^ 0x7FFF) * (v352 ^ 0x7FFF)) >> 15) * *(unsigned __int16 *)(v324 + 2 * v353);
          unsigned int v355 = (((v346 & 0x7FFF ^ 0x7FFF) * v352) >> 15) * *(unsigned __int16 *)(v324 + 2 * (v353 + 1));
          int v356 = *(unsigned __int16 *)(v324 + 2 * (v353 + 129));
          unsigned int v357 = (((v352 ^ 0x7FFF) * (v346 & 0x7FFF)) >> 15) * *(unsigned __int16 *)(v324 + 2 * (v353 + 128));
          unsigned int v358 = (((v346 & 0x7FFF) * v352) >> 15) * v356;
          do
          {
            unsigned int v359 = dword_1001C87C4[v350] + v351;
            unsigned int v360 = dword_1001C87E4[v350] + v346;
            unsigned int v361 = v359 >> 15;
            int v362 = v359 & 0x7FFF;
            int v363 = v360 & 0x7FFF;
            unsigned int v364 = ((v360 >> 8) & 0x7FFF80) + (unsigned __int16)v361;
            int v365 = *(unsigned __int16 *)(v324 + 2 * v364);
            int v366 = *(unsigned __int16 *)(v324 + 2 * (v364 + 1));
            int v367 = *(unsigned __int16 *)(v324 + 2 * (v364 + 128));
            int v368 = *(unsigned __int16 *)(v324 + 2 * (v364 + 129));
            unsigned int v369 = (((v363 ^ 0x7FFF) * (v362 ^ 0x7FFFu)) >> 15) * v365;
            if (v369 >> 30) {
              __int16 v370 = 0x7FFF;
            }
            else {
              __int16 v370 = v369 >> 15;
            }
            unsigned int v371 = (((v363 ^ 0x7FFFu) * v362) >> 15) * v366;
            if (v371 >> 30) {
              __int16 v372 = 0x7FFF;
            }
            else {
              __int16 v372 = v371 >> 15;
            }
            unsigned int v373 = ((v363 * (v362 ^ 0x7FFFu)) >> 15) * v367;
            if (v373 >> 30) {
              __int16 v374 = 0x7FFF;
            }
            else {
              __int16 v374 = v373 >> 15;
            }
            unsigned int v375 = ((v363 * v362) >> 15) * v368;
            if (v375 >> 30) {
              __int16 v376 = 0x7FFF;
            }
            else {
              __int16 v376 = v375 >> 15;
            }
            v340 += (unsigned __int16)(v370 + v374 + v372 + v376);
            ++v350;
          }
          while (v350 != 8);
          unsigned int v377 = v358 >> 30;
          unsigned int v378 = v358 >> 15;
          unsigned int v379 = v357 >> 30;
          unsigned int v380 = v357 >> 15;
          unsigned int v381 = v355 >> 30;
          unsigned int v382 = v355 >> 15;
          unsigned int v383 = v354 >> 15;
          unsigned int v384 = v354 >> 30;
          if (v381) {
            __int16 v385 = 0x7FFF;
          }
          else {
            __int16 v385 = v382;
          }
          if (v379) {
            __int16 v386 = 0x7FFF;
          }
          else {
            __int16 v386 = v380;
          }
          if (v377) {
            __int16 v387 = 0x7FFF;
          }
          else {
            __int16 v387 = v378;
          }
          if (v384) {
            __int16 v388 = 0x7FFF;
          }
          else {
            __int16 v388 = v383;
          }
          if (v340 >= 0xFFFF) {
            unsigned int v340 = 0xFFFF;
          }
          if (v340)
          {
            if ((v340 & 0x8000) != 0)
            {
              __int16 v332 = -6;
            }
            else
            {
              int v389 = 0;
              do
              {
                __int16 v390 = v389;
                v340 *= 2;
                ++v389;
              }
              while ((v340 & 0x8000) == 0);
              __int16 v332 = v390 - 5;
            }
            unsigned __int16 v333 = v385 + v388 + v386 + v387;
            unsigned int v334 = (v340 + 32) >> 6;
            BOOL v335 = v340 >> 5 > 0x55A;
            if (v335) {
              unsigned int v334 = (v334 + 1) >> 1;
            }
            unsigned int v336 = 2048 - (((v334 << 16) + 1040187392) >> 14);
            int v337 = v333 << (v332 - v335 + 6);
            int v338 = v333 >> (-6 - (v332 - v335));
            if ((__int16)(v332 - v335) <= -7) {
              unsigned int v339 = v338;
            }
            else {
              unsigned int v339 = v337;
            }
            if (v339 >= 0xFFFF) {
              unsigned int v339 = 0xFFFF;
            }
            unsigned int v340 = (v339 * (v336 & 0xFFFC)) >> 16;
            if (v340 >= 0xFF) {
              unsigned int v340 = 255;
            }
          }
          int v325 = v340 + v325 - 127;
          *(&v1458 + v323) = v325;
        }
        ++v326;
      }
      while (v326 != 64);
      *(&v1458 + v323++) = v325 >> 4;
    }
    while (v323 != 10);
    int v391 = v1458;
    uint64_t v392 = v1459 > v1458;
    if (v1459 > v1458) {
      int v391 = v1459;
    }
    if (v1460 > v391)
    {
      uint64_t v392 = 2;
      int v391 = v1460;
    }
    uint64_t v393 = 3;
    if (v1461 > v391) {
      int v391 = v1461;
    }
    else {
      uint64_t v393 = v392;
    }
    if (v1462 > v391)
    {
      uint64_t v393 = 4;
      int v391 = v1462;
    }
    if (v1463 > v391)
    {
      uint64_t v393 = 5;
      int v391 = v1463;
    }
    if (v1464 > v391)
    {
      int v391 = v1464;
      uint64_t v393 = 6;
    }
    if (v1465 > v391)
    {
      int v391 = v1465;
      uint64_t v393 = 7;
    }
    if (v1466 > v391)
    {
      int v391 = v1466;
      uint64_t v393 = 8;
    }
    BOOL v92 = v1467 <= v391;
    uint64_t v394 = 9;
    if (v92) {
      uint64_t v394 = v393;
    }
    *(_DWORD *)(v1309 + 20) = *(&v1458 + v394);
    uint64_t v395 = *((unsigned int *)v1471 + v394);
    __int32 v396 = v1468.i32[v394];
    unint64_t v397 = v1307;
    uint64_t v398 = v1308 + 136 * v1307;
    long long v399 = *(&v1338 + v394);
    *(_OWORD *)(v398 + 88) = v399;
    v400 = (_DWORD *)(v398 + 88);
    char v401 = 72 - v396;
    int v402 = *(__int16 *)((char *)word_1001C4E86
                      + ((uint64_t)((unint64_t)((840 - v396) >> 3) << 48) >> 47));
    __int16 v403 = v402 + ((word_1001C4F5A[v401 & 7] * v402 + 0x8000) >> 16);
    unint64_t v404 = (v395 << 45 >> 47) & 0xFFFFFFFFFFFFFFFELL;
    int v405 = *(__int16 *)((char *)&unk_1001C4F6A + v404);
    LOWORD(v404) = *(_WORD *)((char *)&unk_1001C50AA + v404);
    uint64_t v406 = 2 * (v395 & 7);
    int v407 = *(__int16 *)((char *)&unk_1001C51EA + v406);
    LODWORD(v406) = *(__int16 *)((char *)&unk_1001C51FA + v406);
    int v408 = (__int16)-(__int16)v404;
    int v409 = ((__int16)(((v406 * v405 + v407 * v408 + 0x8000) >> 16) - v404) * v403 + 64) >> 7;
    v1311[19] = -v409;
    v1311[20] = v409;
    *(_DWORD *)(v398 + 108) = (v395 << 11) / 160 - 0x2000;
    v410 = (_DWORD *)(v398 + 108);
    LODWORD(v406) = ((__int16)(v405 + ((v407 * v405 - v406 * v408 + 0x8000) >> 16)) * v403 + 64) >> 7;
    v1313->i32[0] = v406;
    v1311[21] = v406;
    *(v410 - 1) = v403;
    uint64_t v4 = a1;
    uint64_t v411 = *(void *)(a1 + 168);
    LODWORD(v406) = *(_DWORD *)(v411 + 20);
    _DWORD *v1311 = v406;
    if ((int)v406 < 91) {
      goto LABEL_13;
    }
    _DWORD *v1306 = 1;
    *(_DWORD *)(v1308 + 136 * v1307 + 12) = v403;
    uint64_t v412 = *(void *)(v411 + 32);
    if (v412)
    {
      v1323 = v400;
      v1312 = v410;
      uint64_t v413 = 0;
      int v414 = v399;
      v1315 = *(__int16 ***)(a1 + 176);
      v415 = *v1315;
      v416 = (_DWORD *)(v1308 + 136 * v1307);
      int v418 = v416[25];
      v416 += 25;
      int v417 = v418;
      int v419 = *(v416 - 1);
      v1317 = (int32x2_t *)(v416 - 1);
      v1335 = v416;
      int v420 = *(v416 - 2);
      v1319 = v416 - 2;
      uint64_t v421 = *((void *)*v1315 + 4);
      do
      {
        int v424 = byte_1001C5546[v413];
        int v425 = byte_1001C5506[v413];
        int v426 = v414 * v424 + v419 * v425;
        unsigned int v427 = (v426 + 0x2000) >> 14;
        int v428 = (v417 * v425 + v420 * v424 + 0x2000) >> 14;
        if (v426 >= -8192) {
          int v429 = v428;
        }
        else {
          int v429 = -v428;
        }
        if (v426 < -8192) {
          unsigned int v427 = -v427;
        }
        *(unsigned char *)(v421 + v413) = 0;
        if ((v429 - 4032) >= 0xFFFFE040 && v427 <= 0xFFF)
        {
          unsigned int v430 = (v429 + 4096) >> 6;
          unsigned int v431 = 2 * (v429 & 0x3F);
          int v432 = word_1001C5402[v431];
          int v433 = word_1001C5402[v431 | 1];
          int v434 = word_1001C5402[128 - v431];
          int v435 = word_1001C5402[129 - v431];
          int v436 = 2 * v427;
          unsigned int v437 = (2 * v427) & 0x7E;
          int v438 = word_1001C5402[v437];
          int v439 = word_1001C5402[(2 * (v427 & 0x3F)) | 1];
          int v440 = word_1001C5402[128 - v437];
          int v441 = word_1001C5402[129 - v437];
          int v442 = (v441 * v435 + v440 * v434 + 2048) >> 12;
          int v443 = (v441 * v434 - v435 * v440 + 2048) >> 12;
          int v444 = v436 & 0x7FFFFF80;
          int v445 = (v436 & 0x7FFFFF80) + 128 + v430 + 1;
          int v446 = *(__int16 *)(v412 + 2 * (2 * v445));
          int v447 = *(__int16 *)(v412 + 2 * ((2 * v445) | 1u));
          int v448 = v442 * v446;
          int v449 = v443 * v447;
          int v450 = v442 * v447;
          int v451 = (v438 * v434 - v439 * v435 + 2048) >> 12;
          int v452 = (-(v439 * v434) - v435 * v438 + 2048) >> 12;
          unsigned int v453 = v430 + 1 + v444;
          int v454 = *(__int16 *)(v412 + 4 * v453);
          int v455 = *(__int16 *)(v412 + 2 * ((2 * v453) | 1));
          int v456 = (v440 * v432 - v441 * v433 + 2048) >> 12;
          int v457 = v441 * v432 + v440 * v433 + 2048;
          unsigned int v458 = v444 + 128 + v430;
          int v459 = *(__int16 *)(v412 + 4 * v458);
          v457 >>= 12;
          int v460 = *(__int16 *)(v412 + 2 * ((2 * v458) | 1));
          int v461 = (v439 * v433 + v438 * v432 + 2048) >> 12;
          int v462 = (v438 * v433 - v439 * v432 + 2048) >> 12;
          unsigned int v463 = v444 + v430;
          int v464 = *(__int16 *)(v412 + 4 * v463);
          int v465 = *(__int16 *)(v412 + 2 * ((2 * v463) | 1));
          int v466 = v448 + v451 * v454 + v456 * v459 + v461 * v464;
          int v467 = v449 + v452 * v455 + v457 * v460 + v462 * v465;
          int v468 = v466 - v467;
          int v469 = v450 + v443 * v446 + v452 * v454 + v451 * v455 + v457 * v459 + v456 * v460 + v462 * v464 + v461 * v465;
          if (v426 >= -8192) {
            int v470 = v469;
          }
          else {
            int v470 = -v469;
          }
          if (v468 >= 0) {
            unsigned int v471 = v466 - v467;
          }
          else {
            unsigned int v471 = v467 - v466;
          }
          if (v469 < 0) {
            int v469 = -v469;
          }
          if (v469 >= v471)
          {
            __int16 v422 = sub_1001642DC(v470, v466 - v467);
            __int16 v423 = -16384 - v422;
            if (v470 >= 1) {
              __int16 v423 = 0x4000 - v422;
            }
          }
          else
          {
            __int16 v472 = sub_1001642DC(v466 - v467, v470);
            __int16 v423 = v472 ^ 0x8000;
            if (v468 > 0) {
              __int16 v423 = v472;
            }
          }
          *(_WORD *)(*((void *)v415 + 3) + 2 * v413) = v423;
          *(unsigned char *)(v421 + v413) = 1;
          int8x16_t v109 = (int8x16_t)xmmword_1001AC180;
          int8x16_t v108 = (int8x16_t)xmmword_1001AC170;
          int8x16_t v111 = (int8x16_t)xmmword_1001AC1A0;
          int8x16_t v110 = (int8x16_t)xmmword_1001AC190;
          v112.i64[0] = 0xFF000000FFLL;
          v112.i64[1] = 0xFF000000FFLL;
        }
        ++v413;
      }
      while (v413 != 64);
      uint64_t v473 = 0;
      *((_DWORD *)v415 + 4) = 0;
      do
      {
        *(unsigned char *)(*((void *)v415 + 15) + v473) = 0;
        *(unsigned char *)(*((void *)v415 + 16) + v473) = 0;
        *(unsigned char *)(*((void *)v415 + 11) + v473) = 0;
        *(unsigned char *)(*((void *)v415 + 12) + v473) = 0;
        uint64_t v474 = 2 * v473;
        *(_WORD *)(*((void *)v415 + 13) + v474) = 0;
        *(_WORD *)(*((void *)v415 + 14) + v474) = 0;
        if (*(unsigned char *)(*((void *)v415 + 4) + v473))
        {
          *(unsigned char *)(*((void *)v415 + 15) + *((int *)v415 + 4)) = byte_1001C5506[v473];
          *(unsigned char *)(*((void *)v415 + 16) + *((int *)v415 + 4)) = byte_1001C5546[v473];
          __int16 v475 = word_1001C5586[v473];
          *(unsigned char *)(*((void *)v415 + 11) + *((int *)v415 + 4)) = (unsigned __int16)(*(_WORD *)(*((void *)v415 + 3)
                                                                                                + 2 * v473)
                                                                                     - v475
                                                                                     + 128) >> 8;
          *(unsigned char *)(*((void *)v415 + 12) + *((int *)v415 + 4)) = (unsigned __int16)(v475
                                                                                     + *(_WORD *)(*((void *)v415 + 3)
                                                                                                + 2 * v473)
                                                                                     + 128) >> 8;
          uint64_t v476 = *((void *)v415 + 3);
          uint64_t v477 = *((int *)v415 + 4);
          uint64_t v478 = 2 * v477;
          *(_WORD *)(*((void *)v415 + 13) + v478) = *(_WORD *)(v476 + 2 * v473) - v475;
          *(_WORD *)(*((void *)v415 + 14) + v478) = *(_WORD *)(v476 + 2 * v473) + v475;
          *((_DWORD *)v415 + 4) = v477 + 1;
        }
        ++v473;
      }
      while (v473 != 64);
      uint64_t v479 = 0;
      uint64_t v480 = 0;
      *((_DWORD *)v415 + 5) = 0;
      uint64_t v481 = &_mh_execute_header.magic + 2;
      do
      {
        *(unsigned char *)(*((void *)v415 + 5) + v480) = 0;
        *(unsigned char *)(*((void *)v415 + 7) + v480) = 0;
        *(unsigned char *)(*((void *)v415 + 6) + v480) = 0;
        *(unsigned char *)(*((void *)v415 + 8) + v480) = 0;
        *(unsigned char *)(*((void *)v415 + 9) + v480) = 0;
        *(unsigned char *)(*((void *)v415 + 10) + v480) = 0;
        uint64_t v482 = *((void *)v415 + 4);
        if (*(unsigned char *)(v482 + v479) && *(unsigned char *)(v482 + v479 + 1))
        {
          v483 = (_WORD *)(*((void *)v415 + 3) + v481);
          __int16 v484 = *(v483 - 1);
          LOWORD(v483) = *v483;
          __int16 v485 = *(_WORD *)((char *)&word_1001C5586[-1] + v481);
          __int16 v486 = *(_WORD *)((char *)word_1001C5586 + v481);
          __int16 v487 = v484 - v485 + 128;
          *(unsigned char *)(*((void *)v415 + 5) + v480) = (unsigned __int16)(v487 - ((_WORD)v483 - v486)) >> 8;
          *(unsigned char *)(*((void *)v415 + 6) + v480) = (unsigned __int16)(v487 + (_WORD)v483 - v486) >> 8;
          LOWORD(v483) = v486 + (_WORD)v483;
          __int16 v488 = v485 + v484 + 128;
          *(unsigned char *)(*((void *)v415 + 7) + v480) = (unsigned __int16)(v488 - (_WORD)v483) >> 8;
          *(unsigned char *)(*((void *)v415 + 8) + v480) = (unsigned __int16)(v488 + (_WORD)v483) >> 8;
          *(unsigned char *)(*((void *)v415 + 9) + v480) = 2 * byte_1001C5506[v479];
          *(unsigned char *)(*((void *)v415 + 10) + v480) = 2 * byte_1001C5546[v479];
          ++*((_DWORD *)v415 + 5);
        }
        ++v480;
        v479 += 2;
        v481 += 4;
      }
      while (v480 != 32);
      uint64_t v489 = 0;
      *((void *)v415 + 17) = v412;
      *((_DWORD *)v415 + 36) = *v1323;
      *((_DWORD *)v415 + 37) = *v1319;
      *((_DWORD *)v415 + 38) = v1317->i32[0];
      *((_DWORD *)v415 + 39) = *v1335;
      v490 = *v1315;
      v491 = (int8x16_t *)*((void *)*v1315 + 9);
      v492 = (int8x16_t *)*((void *)*v1315 + 5);
      int8x16_t v493 = *v491;
      int8x16_t v494 = v491[1];
      v495 = (int8x16_t *)*((void *)*v1315 + 7);
      int8x16_t v496 = *v492;
      int8x16_t v497 = v492[1];
      int8x16_t v498 = *v495;
      int8x16_t v499 = v495[1];
      do
      {
        int8x16_t v500 = vdupq_n_s8(v489);
        int8x16_t v501 = vmulq_s8(v493, v500);
        int8x16_t v502 = vsubq_s8(v496, v501);
        int32x4_t v503 = (int32x4_t)vqtbl1q_s8(v502, v108);
        int32x4_t v504 = (int32x4_t)vqtbl1q_s8(v502, v109);
        int32x4_t v505 = (int32x4_t)vqtbl1q_s8(v502, v110);
        int32x4_t v506 = (int32x4_t)vqtbl1q_s8(v502, v111);
        int8x16_t v507 = (int8x16_t)vnegq_s32(v506);
        int8x16_t v508 = (int8x16_t)vnegq_s32(v505);
        int8x16_t v509 = (int8x16_t)vnegq_s32(v504);
        int8x16_t v510 = (int8x16_t)vnegq_s32(v503);
        int16x8_t v511 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v510, v112), (uint32x4_t)v503), (int8x16_t)v503, v510);
        int8x16_t v512 = vsubq_s8(v498, v501);
        int16x8_t v513 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v509, v112), (uint32x4_t)v504), (int8x16_t)v504, v509);
        int32x4_t v514 = (int32x4_t)vqtbl1q_s8(v512, v108);
        int32x4_t v515 = (int32x4_t)vqtbl1q_s8(v512, v109);
        int32x4_t v516 = (int32x4_t)vqtbl1q_s8(v512, v110);
        int32x4_t v517 = (int32x4_t)vqtbl1q_s8(v512, v111);
        int8x16_t v518 = (int8x16_t)vnegq_s32(v517);
        int16x8_t v519 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v508, v112), (uint32x4_t)v505), (int8x16_t)v505, v508);
        int8x16_t v520 = (int8x16_t)vnegq_s32(v516);
        int8x16_t v521 = (int8x16_t)vnegq_s32(v515);
        int8x16_t v522 = (int8x16_t)vnegq_s32(v514);
        int16x8_t v523 = vuzp1q_s16((int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v507, v112), (uint32x4_t)v506), (int8x16_t)v506, v507), v519);
        int16x8_t v524 = vuzp1q_s16(v513, v511);
        int16x8_t v525 = vuzp1q_s16((int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v518, v112), (uint32x4_t)v517), (int8x16_t)v517, v518), (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v520, v112), (uint32x4_t)v516), (int8x16_t)v516, v520));
        int8x16_t v526 = vmulq_s8(v494, v500);
        int8x16_t v527 = vsubq_s8(v497, v526);
        int32x4_t v528 = (int32x4_t)vqtbl1q_s8(v527, v108);
        int32x4_t v529 = (int32x4_t)vqtbl1q_s8(v527, v109);
        int16x8_t v530 = vuzp1q_s16((int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v521, v112), (uint32x4_t)v515), (int8x16_t)v515, v521), (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v522, v112), (uint32x4_t)v514), (int8x16_t)v514, v522));
        int32x4_t v531 = (int32x4_t)vqtbl1q_s8(v527, v110);
        int32x4_t v532 = (int32x4_t)vqtbl1q_s8(v527, v111);
        int8x16_t v533 = (int8x16_t)vnegq_s32(v532);
        int8x16_t v534 = (int8x16_t)vnegq_s32(v531);
        int8x16_t v535 = (int8x16_t)vnegq_s32(v529);
        int8x16_t v536 = (int8x16_t)vnegq_s32(v528);
        int16x8_t v537 = vuzp1q_s16((int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v533, v112), (uint32x4_t)v532), (int8x16_t)v532, v533), (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v534, v112), (uint32x4_t)v531), (int8x16_t)v531, v534));
        int16x8_t v538 = vuzp1q_s16((int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v535, v112), (uint32x4_t)v529), (int8x16_t)v529, v535), (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v536, v112), (uint32x4_t)v528), (int8x16_t)v528, v536));
        int8x16_t v539 = vsubq_s8(v499, v526);
        int32x4_t v540 = (int32x4_t)vqtbl1q_s8(v539, v108);
        int32x4_t v541 = (int32x4_t)vqtbl1q_s8(v539, v109);
        int32x4_t v542 = (int32x4_t)vqtbl1q_s8(v539, v110);
        int32x4_t v543 = (int32x4_t)vqtbl1q_s8(v539, v111);
        int8x16_t v544 = (int8x16_t)vnegq_s32(v543);
        int8x16_t v545 = (int8x16_t)vnegq_s32(v542);
        int8x16_t v546 = (int8x16_t)vnegq_s32(v541);
        int8x16_t v547 = (int8x16_t)vnegq_s32(v540);
        uint64_t v548 = v489;
        *(_WORD *)((char *)v1471 + v548 * 2) = vaddvq_s16(vaddq_s16(vaddq_s16((int16x8_t)(*(_OWORD *)&v538 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)), (int16x8_t)(*(_OWORD *)&v524 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL))), vaddq_s16((int16x8_t)(*(_OWORD *)&v537 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)), (int16x8_t)(*(_OWORD *)&v523 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)))));
        v1468.i16[v548] = vaddvq_s16(vaddq_s16(vaddq_s16((int16x8_t)(*(_OWORD *)&vuzp1q_s16((int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v546, v112), (uint32x4_t)v541), (int8x16_t)v541, v546), (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v547, v112), (uint32x4_t)v540), (int8x16_t)v540, v547)) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)), (int16x8_t)(*(_OWORD *)&v530 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL))), vaddq_s16(
                                (int16x8_t)(*(_OWORD *)&vuzp1q_s16((int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v544, v112), (uint32x4_t)v543), (int8x16_t)v543, v544), (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v545, v112), (uint32x4_t)v542), (int8x16_t)v542, v545)) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)), (int16x8_t)(*(_OWORD *)&v525 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)))));
        ++v489;
      }
      while (v489 != 128);
      uint64_t v549 = 0;
      v550 = (int8x16_t *)*((void *)v490 + 10);
      v551 = (int8x16_t *)*((void *)v490 + 6);
      uint64_t v1329 = (uint64_t)v490;
      v552 = (int8x16_t *)*((void *)v490 + 8);
      int8x16_t v553 = *v550;
      int8x16_t v554 = v550[1];
      int8x16_t v555 = *v551;
      int8x16_t v556 = v551[1];
      int8x16_t v557 = *v552;
      int8x16_t v558 = v552[1];
      do
      {
        int8x16_t v559 = vdupq_n_s8(v549);
        int8x16_t v560 = vmulq_s8(v553, v559);
        int8x16_t v561 = vsubq_s8(v555, v560);
        int32x4_t v562 = (int32x4_t)vqtbl1q_s8(v561, v108);
        int32x4_t v563 = (int32x4_t)vqtbl1q_s8(v561, v109);
        int32x4_t v564 = (int32x4_t)vqtbl1q_s8(v561, v110);
        int32x4_t v565 = (int32x4_t)vqtbl1q_s8(v561, v111);
        int8x16_t v566 = (int8x16_t)vnegq_s32(v565);
        int8x16_t v567 = (int8x16_t)vnegq_s32(v564);
        int8x16_t v568 = (int8x16_t)vnegq_s32(v563);
        int8x16_t v569 = (int8x16_t)vnegq_s32(v562);
        int16x8_t v570 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v569, v112), (uint32x4_t)v562), (int8x16_t)v562, v569);
        int8x16_t v571 = vsubq_s8(v557, v560);
        int16x8_t v572 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v568, v112), (uint32x4_t)v563), (int8x16_t)v563, v568);
        int32x4_t v573 = (int32x4_t)vqtbl1q_s8(v571, v108);
        int32x4_t v574 = (int32x4_t)vqtbl1q_s8(v571, v109);
        int32x4_t v575 = (int32x4_t)vqtbl1q_s8(v571, v110);
        int32x4_t v576 = (int32x4_t)vqtbl1q_s8(v571, v111);
        int8x16_t v577 = (int8x16_t)vnegq_s32(v576);
        int16x8_t v578 = (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v567, v112), (uint32x4_t)v564), (int8x16_t)v564, v567);
        int8x16_t v579 = (int8x16_t)vnegq_s32(v575);
        int8x16_t v580 = (int8x16_t)vnegq_s32(v574);
        int8x16_t v581 = (int8x16_t)vnegq_s32(v573);
        int16x8_t v582 = vuzp1q_s16((int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v566, v112), (uint32x4_t)v565), (int8x16_t)v565, v566), v578);
        int16x8_t v583 = vuzp1q_s16(v572, v570);
        int16x8_t v584 = vuzp1q_s16((int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v577, v112), (uint32x4_t)v576), (int8x16_t)v576, v577), (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v579, v112), (uint32x4_t)v575), (int8x16_t)v575, v579));
        int8x16_t v585 = vmulq_s8(v554, v559);
        int8x16_t v586 = vsubq_s8(v556, v585);
        int32x4_t v587 = (int32x4_t)vqtbl1q_s8(v586, v108);
        int32x4_t v588 = (int32x4_t)vqtbl1q_s8(v586, v109);
        int16x8_t v589 = vuzp1q_s16((int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v580, v112), (uint32x4_t)v574), (int8x16_t)v574, v580), (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v581, v112), (uint32x4_t)v573), (int8x16_t)v573, v581));
        int32x4_t v590 = (int32x4_t)vqtbl1q_s8(v586, v110);
        int32x4_t v591 = (int32x4_t)vqtbl1q_s8(v586, v111);
        int8x16_t v592 = (int8x16_t)vnegq_s32(v591);
        int8x16_t v593 = (int8x16_t)vnegq_s32(v590);
        int8x16_t v594 = (int8x16_t)vnegq_s32(v588);
        int8x16_t v595 = (int8x16_t)vnegq_s32(v587);
        int16x8_t v596 = vuzp1q_s16((int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v592, v112), (uint32x4_t)v591), (int8x16_t)v591, v592), (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v593, v112), (uint32x4_t)v590), (int8x16_t)v590, v593));
        int16x8_t v597 = vuzp1q_s16((int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v594, v112), (uint32x4_t)v588), (int8x16_t)v588, v594), (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v595, v112), (uint32x4_t)v587), (int8x16_t)v587, v595));
        int8x16_t v598 = vsubq_s8(v558, v585);
        int32x4_t v599 = (int32x4_t)vqtbl1q_s8(v598, v108);
        int32x4_t v600 = (int32x4_t)vqtbl1q_s8(v598, v109);
        int32x4_t v601 = (int32x4_t)vqtbl1q_s8(v598, v110);
        int32x4_t v602 = (int32x4_t)vqtbl1q_s8(v598, v111);
        int8x16_t v603 = (int8x16_t)vnegq_s32(v602);
        int8x16_t v604 = (int8x16_t)vnegq_s32(v601);
        int8x16_t v605 = (int8x16_t)vnegq_s32(v600);
        int8x16_t v606 = (int8x16_t)vnegq_s32(v599);
        uint64_t v607 = 2 * v549;
        *(_WORD *)((char *)&v1458 + v607) = vaddvq_s16(vaddq_s16(vaddq_s16((int16x8_t)(*(_OWORD *)&v597 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)), (int16x8_t)(*(_OWORD *)&v583 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL))), vaddq_s16((int16x8_t)(*(_OWORD *)&v596 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)), (int16x8_t)(*(_OWORD *)&v582 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)))));
        *(_WORD *)((char *)v1457 + v607) = vaddvq_s16(vaddq_s16(vaddq_s16((int16x8_t)(*(_OWORD *)&vuzp1q_s16((int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v605, v112), (uint32x4_t)v600), (int8x16_t)v600, v605), (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v606, v112), (uint32x4_t)v599), (int8x16_t)v599, v606)) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)), (int16x8_t)(*(_OWORD *)&v589 & __PAIR128__(0xFF00FF00FF00FFLL,
                                                                                  0xFF00FF00FF00FFLL))),
                                               vaddq_s16((int16x8_t)(*(_OWORD *)&vuzp1q_s16((int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v603, v112), (uint32x4_t)v602), (int8x16_t)v602, v603), (int16x8_t)vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v604, v112), (uint32x4_t)v601), (int8x16_t)v601, v604)) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)), (int16x8_t)(*(_OWORD *)&v584 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)))));
        ++v549;
      }
      while (v549 != 128);
      uint64_t v608 = 0;
      uint64_t v609 = 1;
      uint64_t v610 = 2;
      uint64_t v611 = 3;
      uint64_t v612 = 4;
      uint64_t v613 = 5;
      uint64_t v614 = 6;
      uint64_t v615 = 7;
      uint64_t v616 = 8;
      unsigned int v617 = 9;
      while (1)
      {
        uint64_t v618 = v609;
        unsigned int v619 = *((unsigned __int16 *)v1471 + v609);
        if (*((unsigned __int16 *)v1471 + v608) <= v619)
        {
          int v620 = 0;
          uint64_t v621 = v609;
        }
        else
        {
          int v620 = 1;
          unsigned int v619 = *((unsigned __int16 *)v1471 + v608);
          uint64_t v618 = v608;
          uint64_t v621 = v608;
          uint64_t v608 = v609;
        }
        unsigned int v622 = *((unsigned __int16 *)v1471 + v610);
        if (v619 <= v622)
        {
          uint64_t v618 = v610;
          uint64_t v623 = v610;
          uint64_t v609 = v621;
        }
        else
        {
          unsigned int v622 = *((unsigned __int16 *)v1471 + v618);
          int v620 = 1;
          uint64_t v623 = v621;
          uint64_t v609 = v610;
        }
        if (v622 <= *((unsigned __int16 *)v1471 + v611))
        {
          unsigned int v622 = *((unsigned __int16 *)v1471 + v611);
          uint64_t v618 = v611;
          uint64_t v624 = v611;
          uint64_t v610 = v623;
        }
        else
        {
          int v620 = 1;
          uint64_t v624 = v623;
          uint64_t v610 = v611;
        }
        unsigned int v625 = *((unsigned __int16 *)v1471 + v612);
        if (v622 <= v625)
        {
          uint64_t v618 = v612;
          uint64_t v626 = v612;
          uint64_t v611 = v624;
        }
        else
        {
          unsigned int v625 = *((unsigned __int16 *)v1471 + v618);
          int v620 = 1;
          uint64_t v626 = v624;
          uint64_t v611 = v612;
        }
        if (v625 <= *((unsigned __int16 *)v1471 + v613))
        {
          unsigned int v625 = *((unsigned __int16 *)v1471 + v613);
          uint64_t v618 = v613;
          uint64_t v627 = v613;
          uint64_t v612 = v626;
        }
        else
        {
          int v620 = 1;
          uint64_t v627 = v626;
          uint64_t v612 = v613;
        }
        unsigned int v628 = *((unsigned __int16 *)v1471 + v614);
        if (v625 <= v628)
        {
          uint64_t v618 = v614;
          uint64_t v629 = v614;
          uint64_t v613 = v627;
        }
        else
        {
          unsigned int v628 = *((unsigned __int16 *)v1471 + v618);
          int v620 = 1;
          uint64_t v629 = v627;
          uint64_t v613 = v614;
        }
        if (v628 <= *((unsigned __int16 *)v1471 + v615))
        {
          unsigned int v628 = *((unsigned __int16 *)v1471 + v615);
          uint64_t v618 = v615;
          uint64_t v630 = v615;
          uint64_t v614 = v629;
        }
        else
        {
          int v620 = 1;
          uint64_t v630 = v629;
          uint64_t v614 = v615;
        }
        unsigned int v631 = *((unsigned __int16 *)v1471 + v616);
        if (v628 <= v631)
        {
          unsigned int v632 = v616;
          uint64_t v615 = v630;
        }
        else
        {
          unsigned int v631 = *((unsigned __int16 *)v1471 + v618);
          int v620 = 1;
          unsigned int v632 = v630;
          uint64_t v615 = v616;
        }
        unsigned int v633 = *((unsigned __int16 *)v1471 + v617);
        BOOL v634 = v631 > v633;
        if (v631 > v633) {
          unsigned int v635 = v632;
        }
        else {
          unsigned int v635 = v617;
        }
        if (v631 > v633) {
          uint64_t v616 = v617;
        }
        else {
          uint64_t v616 = v632;
        }
        unsigned int v617 = v635;
        if (!v634)
        {
          unsigned int v617 = v635;
          if (!v620) {
            break;
          }
        }
      }
      unsigned int v636 = *((unsigned __int16 *)v1471 + v635);
      unsigned __int8 v637 = v635;
      for (uint64_t m = 10; m != 128; ++m)
      {
        unsigned int v643 = *((unsigned __int16 *)v1471 + m);
        if (v643 < v636)
        {
          uint64_t v644 = v616;
          unsigned int v645 = *((unsigned __int16 *)v1471 + v616);
          if (v645 <= v643)
          {
            unsigned __int8 v637 = m;
            uint64_t v646 = v616;
          }
          else
          {
            unsigned int v645 = *((unsigned __int16 *)v1471 + m);
            uint64_t v644 = m;
            unsigned __int8 v637 = v616;
            uint64_t v646 = m;
          }
          unsigned int v647 = *((unsigned __int16 *)v1471 + v615);
          if (v647 <= v645)
          {
            uint64_t v644 = v615;
            uint64_t v616 = v646;
            uint64_t v646 = v615;
          }
          else
          {
            unsigned int v647 = *((unsigned __int16 *)v1471 + v644);
            uint64_t v616 = v615;
          }
          if (*((unsigned __int16 *)v1471 + v614) <= v647)
          {
            unsigned int v647 = *((unsigned __int16 *)v1471 + v614);
            uint64_t v644 = v614;
            uint64_t v615 = v646;
            uint64_t v646 = v614;
          }
          else
          {
            uint64_t v615 = v614;
          }
          unsigned int v648 = *((unsigned __int16 *)v1471 + v613);
          if (v648 <= v647)
          {
            uint64_t v644 = v613;
            uint64_t v614 = v646;
            uint64_t v646 = v613;
          }
          else
          {
            unsigned int v648 = *((unsigned __int16 *)v1471 + v644);
            uint64_t v614 = v613;
          }
          if (*((unsigned __int16 *)v1471 + v612) <= v648)
          {
            unsigned int v648 = *((unsigned __int16 *)v1471 + v612);
            uint64_t v644 = v612;
            uint64_t v613 = v646;
            uint64_t v646 = v612;
          }
          else
          {
            uint64_t v613 = v612;
          }
          unsigned int v649 = *((unsigned __int16 *)v1471 + v611);
          if (v649 <= v648)
          {
            uint64_t v644 = v611;
            uint64_t v612 = v646;
            uint64_t v646 = v611;
          }
          else
          {
            unsigned int v649 = *((unsigned __int16 *)v1471 + v644);
            uint64_t v612 = v611;
          }
          if (*((unsigned __int16 *)v1471 + v610) <= v649)
          {
            unsigned int v649 = *((unsigned __int16 *)v1471 + v610);
            uint64_t v644 = v610;
            uint64_t v611 = v646;
          }
          else
          {
            uint64_t v611 = v610;
            uint64_t v610 = v646;
          }
          unsigned int v639 = *((unsigned __int16 *)v1471 + v609);
          if (v639 > v649)
          {
            unsigned int v639 = *((unsigned __int16 *)v1471 + v644);
            uint64_t v640 = v609;
          }
          else
          {
            uint64_t v640 = v610;
            LODWORD(v610) = v609;
          }
          unsigned int v641 = *((unsigned __int16 *)v1471 + v608);
          BOOL v642 = v641 > v639;
          if (v641 <= v639) {
            uint64_t v609 = v610;
          }
          else {
            uint64_t v609 = v608;
          }
          if (v642) {
            LODWORD(v608) = v610;
          }
          unsigned int v636 = *((unsigned __int16 *)v1471 + v637);
          uint64_t v610 = v640;
        }
      }
      uint64_t v650 = 0;
      uint64_t v651 = 1;
      uint64_t v652 = 2;
      uint64_t v653 = 3;
      uint64_t v654 = 4;
      uint64_t v655 = 5;
      uint64_t v656 = 6;
      uint64_t v657 = 7;
      uint64_t v658 = 8;
      unsigned int v659 = 9;
      while (1)
      {
        uint64_t v660 = v651;
        unsigned int v661 = *((unsigned __int16 *)&v1458 + v651);
        if (*((unsigned __int16 *)&v1458 + v650) <= v661)
        {
          int v662 = 0;
          uint64_t v663 = v651;
        }
        else
        {
          int v662 = 1;
          unsigned int v661 = *((unsigned __int16 *)&v1458 + v650);
          uint64_t v660 = v650;
          uint64_t v663 = v650;
          uint64_t v650 = v651;
        }
        unsigned int v664 = *((unsigned __int16 *)&v1458 + v652);
        if (v661 <= v664)
        {
          uint64_t v660 = v652;
          uint64_t v665 = v652;
          uint64_t v651 = v663;
        }
        else
        {
          unsigned int v664 = *((unsigned __int16 *)&v1458 + v660);
          int v662 = 1;
          uint64_t v665 = v663;
          uint64_t v651 = v652;
        }
        if (v664 <= *((unsigned __int16 *)&v1458 + v653))
        {
          unsigned int v664 = *((unsigned __int16 *)&v1458 + v653);
          uint64_t v660 = v653;
          uint64_t v666 = v653;
          uint64_t v652 = v665;
        }
        else
        {
          int v662 = 1;
          uint64_t v666 = v665;
          uint64_t v652 = v653;
        }
        unsigned int v667 = *((unsigned __int16 *)&v1458 + v654);
        if (v664 <= v667)
        {
          uint64_t v660 = v654;
          uint64_t v668 = v654;
          uint64_t v653 = v666;
        }
        else
        {
          unsigned int v667 = *((unsigned __int16 *)&v1458 + v660);
          int v662 = 1;
          uint64_t v668 = v666;
          uint64_t v653 = v654;
        }
        if (v667 <= *((unsigned __int16 *)&v1458 + v655))
        {
          unsigned int v667 = *((unsigned __int16 *)&v1458 + v655);
          uint64_t v660 = v655;
          uint64_t v669 = v655;
          uint64_t v654 = v668;
        }
        else
        {
          int v662 = 1;
          uint64_t v669 = v668;
          uint64_t v654 = v655;
        }
        unsigned int v670 = *((unsigned __int16 *)&v1458 + v656);
        if (v667 <= v670)
        {
          uint64_t v660 = v656;
          uint64_t v671 = v656;
          uint64_t v655 = v669;
        }
        else
        {
          unsigned int v670 = *((unsigned __int16 *)&v1458 + v660);
          int v662 = 1;
          uint64_t v671 = v669;
          uint64_t v655 = v656;
        }
        if (v670 <= *((unsigned __int16 *)&v1458 + v657))
        {
          unsigned int v670 = *((unsigned __int16 *)&v1458 + v657);
          uint64_t v660 = v657;
          uint64_t v672 = v657;
          uint64_t v656 = v671;
        }
        else
        {
          int v662 = 1;
          uint64_t v672 = v671;
          uint64_t v656 = v657;
        }
        unsigned int v673 = *((unsigned __int16 *)&v1458 + v658);
        if (v670 <= v673)
        {
          unsigned int v674 = v658;
          uint64_t v657 = v672;
        }
        else
        {
          unsigned int v673 = *((unsigned __int16 *)&v1458 + v660);
          int v662 = 1;
          unsigned int v674 = v672;
          uint64_t v657 = v658;
        }
        unsigned int v675 = *((unsigned __int16 *)&v1458 + v659);
        BOOL v676 = v673 > v675;
        if (v673 > v675) {
          unsigned int v677 = v674;
        }
        else {
          unsigned int v677 = v659;
        }
        if (v673 > v675) {
          uint64_t v658 = v659;
        }
        else {
          uint64_t v658 = v674;
        }
        unsigned int v659 = v677;
        if (!v676)
        {
          unsigned int v659 = v677;
          if (!v662) {
            break;
          }
        }
      }
      unsigned int v678 = *((unsigned __int16 *)&v1458 + v677);
      unsigned __int8 v679 = v677;
      for (uint64_t n = 10; n != 128; ++n)
      {
        unsigned int v685 = *((unsigned __int16 *)&v1458 + n);
        if (v685 < v678)
        {
          uint64_t v686 = v658;
          unsigned int v687 = *((unsigned __int16 *)&v1458 + v658);
          if (v687 <= v685)
          {
            unsigned __int8 v679 = n;
            uint64_t v688 = v658;
          }
          else
          {
            unsigned int v687 = *((unsigned __int16 *)&v1458 + n);
            uint64_t v686 = n;
            unsigned __int8 v679 = v658;
            uint64_t v688 = n;
          }
          unsigned int v689 = *((unsigned __int16 *)&v1458 + v657);
          if (v689 <= v687)
          {
            uint64_t v686 = v657;
            uint64_t v658 = v688;
            uint64_t v688 = v657;
          }
          else
          {
            unsigned int v689 = *((unsigned __int16 *)&v1458 + v686);
            uint64_t v658 = v657;
          }
          if (*((unsigned __int16 *)&v1458 + v656) <= v689)
          {
            unsigned int v689 = *((unsigned __int16 *)&v1458 + v656);
            uint64_t v686 = v656;
            uint64_t v657 = v688;
            uint64_t v688 = v656;
          }
          else
          {
            uint64_t v657 = v656;
          }
          unsigned int v690 = *((unsigned __int16 *)&v1458 + v655);
          if (v690 <= v689)
          {
            uint64_t v686 = v655;
            uint64_t v656 = v688;
            uint64_t v688 = v655;
          }
          else
          {
            unsigned int v690 = *((unsigned __int16 *)&v1458 + v686);
            uint64_t v656 = v655;
          }
          if (*((unsigned __int16 *)&v1458 + v654) <= v690)
          {
            unsigned int v690 = *((unsigned __int16 *)&v1458 + v654);
            uint64_t v686 = v654;
            uint64_t v655 = v688;
            uint64_t v688 = v654;
          }
          else
          {
            uint64_t v655 = v654;
          }
          unsigned int v691 = *((unsigned __int16 *)&v1458 + v653);
          if (v691 <= v690)
          {
            uint64_t v686 = v653;
            uint64_t v654 = v688;
            uint64_t v688 = v653;
          }
          else
          {
            unsigned int v691 = *((unsigned __int16 *)&v1458 + v686);
            uint64_t v654 = v653;
          }
          if (*((unsigned __int16 *)&v1458 + v652) <= v691)
          {
            unsigned int v691 = *((unsigned __int16 *)&v1458 + v652);
            uint64_t v686 = v652;
            uint64_t v653 = v688;
          }
          else
          {
            uint64_t v653 = v652;
            uint64_t v652 = v688;
          }
          unsigned int v681 = *((unsigned __int16 *)&v1458 + v651);
          if (v681 > v691)
          {
            unsigned int v681 = *((unsigned __int16 *)&v1458 + v686);
            uint64_t v682 = v651;
          }
          else
          {
            uint64_t v682 = v652;
            LODWORD(v652) = v651;
          }
          unsigned int v683 = *((unsigned __int16 *)&v1458 + v650);
          BOOL v684 = v683 > v681;
          if (v683 <= v681) {
            uint64_t v651 = v652;
          }
          else {
            uint64_t v651 = v650;
          }
          if (v684) {
            LODWORD(v650) = v652;
          }
          unsigned int v678 = *((unsigned __int16 *)&v1458 + v679);
          uint64_t v652 = v682;
        }
      }
      uint64_t v1437 = 0x101010101010101 * v608;
      __int16 v1438 = 257 * v608;
      uint64_t v1439 = 0x101010101010101 * v609;
      __int16 v1440 = 257 * v609;
      uint64_t v692 = 0x101010101010101 * v610;
      __int16 v1442 = v692;
      uint64_t v1441 = v692;
      uint64_t v1443 = 0x101010101010101 * v611;
      __int16 v1444 = 257 * v611;
      uint64_t v693 = 0x101010101010101 * v612;
      __int16 v1446 = v693;
      uint64_t v1445 = v693;
      uint64_t v1447 = 0x101010101010101 * v613;
      __int16 v1448 = 257 * v613;
      uint64_t v694 = 0x101010101010101 * v614;
      __int16 v1450 = v694;
      uint64_t v1449 = v694;
      uint64_t v695 = 0x101010101010101 * v615;
      __int16 v1452 = v695;
      uint64_t v1451 = v695;
      uint64_t v696 = 0x101010101010101 * v616;
      __int16 v1454 = v696;
      uint64_t v1453 = v696;
      uint64_t v697 = 0x101010101010101 * v637;
      __int16 v1456 = v697;
      uint64_t v1455 = v697;
      LOBYTE(v1340) = v650;
      char v1347 = v650;
      char v1357 = v650;
      char v1367 = v650;
      char v1377 = v650;
      char v1387 = v650;
      char v1397 = v650;
      char v1407 = v650;
      char v1417 = v650;
      char v1427 = v650;
      BYTE1(v1340) = v651;
      char v1348 = v651;
      char v1358 = v651;
      char v1368 = v651;
      char v1378 = v651;
      char v1388 = v651;
      char v1398 = v651;
      char v1408 = v651;
      char v1418 = v651;
      char v1428 = v651;
      BYTE2(v1340) = v652;
      char v1349 = v652;
      char v1359 = v652;
      char v1369 = v652;
      char v1379 = v652;
      char v1389 = v652;
      char v1399 = v652;
      char v1409 = v652;
      char v1419 = v652;
      char v1429 = v652;
      HIBYTE(v1340) = v653;
      char v1350 = v653;
      char v1360 = v653;
      char v1370 = v653;
      char v1380 = v653;
      char v1390 = v653;
      char v1400 = v653;
      char v1410 = v653;
      char v1420 = v653;
      char v1430 = v653;
      char v1341 = v654;
      char v1351 = v654;
      char v1361 = v654;
      char v1371 = v654;
      char v1381 = v654;
      char v1391 = v654;
      char v1401 = v654;
      char v1411 = v654;
      char v1421 = v654;
      char v1431 = v654;
      char v1342 = v655;
      char v1352 = v655;
      char v1362 = v655;
      char v1372 = v655;
      char v1382 = v655;
      char v1392 = v655;
      char v1402 = v655;
      char v1412 = v655;
      char v1422 = v655;
      char v1432 = v655;
      char v1343 = v656;
      char v1353 = v656;
      char v1363 = v656;
      char v1373 = v656;
      char v1383 = v656;
      char v1393 = v656;
      char v1403 = v656;
      char v1413 = v656;
      char v1423 = v656;
      char v1433 = v656;
      char v1344 = v657;
      char v1354 = v657;
      char v1364 = v657;
      char v1374 = v657;
      char v1384 = v657;
      char v1394 = v657;
      char v1404 = v657;
      char v1414 = v657;
      char v1424 = v657;
      char v1434 = v657;
      char v1345 = v658;
      char v1355 = v658;
      char v1365 = v658;
      char v1375 = v658;
      char v1385 = v658;
      char v1395 = v658;
      char v1405 = v658;
      char v1415 = v658;
      char v1425 = v658;
      char v1435 = v658;
      unsigned __int8 v1346 = v679;
      unsigned __int8 v1356 = v679;
      unsigned __int8 v1366 = v679;
      unsigned __int8 v1376 = v679;
      unsigned __int8 v1386 = v679;
      unsigned __int8 v1396 = v679;
      unsigned __int8 v1406 = v679;
      unsigned __int8 v1416 = v679;
      unsigned __int8 v1426 = v679;
      unsigned __int8 v1436 = v679;
      sub_10016441C(v1329, *(int8x16_t **)(v1329 + 88), (uint64_t)&v1437, (uint64_t)&v1340, (char *)&v1338);
      uint64_t v698 = 0;
      int v699 = 0;
      int v700 = 0;
      unsigned int v701 = 0xFFFF;
      v702 = (unsigned __int16 *)&v1338 + 2;
      do
      {
        if (*(v702 - 2) < v701)
        {
          int v700 = *((unsigned __int8 *)&v1437 + v698);
          int v699 = *((unsigned __int8 *)&v1340 + v698);
          unsigned int v701 = *(v702 - 2);
        }
        if (*(v702 - 1) < v701)
        {
          int v700 = *((unsigned __int8 *)&v1437 + v698) ^ 0x80;
          int v699 = *((unsigned __int8 *)&v1340 + v698);
          unsigned int v701 = *(v702 - 1);
        }
        if (*v702 < v701)
        {
          int v700 = *((unsigned __int8 *)&v1437 + v698);
          int v699 = *((unsigned __int8 *)&v1340 + v698) ^ 0x80;
          unsigned int v701 = *v702;
        }
        if (v702[1] < v701)
        {
          int v700 = *((unsigned __int8 *)&v1437 + v698) ^ 0x80;
          int v699 = *((unsigned __int8 *)&v1340 + v698) ^ 0x80;
          unsigned int v701 = v702[1];
        }
        v702 += 4;
        ++v698;
      }
      while (v698 != 100);
      uint64_t v703 = 0;
      uint64_t v704 = 1;
      uint64_t v705 = 2;
      uint64_t v706 = 3;
      uint64_t v707 = 4;
      uint64_t v708 = 5;
      uint64_t v709 = 6;
      uint64_t v710 = 7;
      uint64_t v711 = 8;
      unsigned int v712 = 9;
      while (1)
      {
        uint64_t v713 = v704;
        unsigned int v714 = v1468.u16[v704];
        if (v1468.u16[v703] <= v714)
        {
          int v715 = 0;
          uint64_t v716 = v704;
        }
        else
        {
          int v715 = 1;
          unsigned int v714 = v1468.u16[v703];
          uint64_t v713 = v703;
          uint64_t v716 = v703;
          uint64_t v703 = v704;
        }
        unsigned int v717 = v1468.u16[v705];
        if (v714 <= v717)
        {
          uint64_t v713 = v705;
          uint64_t v718 = v705;
          uint64_t v704 = v716;
        }
        else
        {
          unsigned int v717 = v1468.u16[v713];
          int v715 = 1;
          uint64_t v718 = v716;
          uint64_t v704 = v705;
        }
        if (v717 <= v1468.u16[v706])
        {
          unsigned int v717 = v1468.u16[v706];
          uint64_t v713 = v706;
          uint64_t v719 = v706;
          uint64_t v705 = v718;
        }
        else
        {
          int v715 = 1;
          uint64_t v719 = v718;
          uint64_t v705 = v706;
        }
        unsigned int v720 = v1468.u16[v707];
        if (v717 <= v720)
        {
          uint64_t v713 = v707;
          uint64_t v721 = v707;
          uint64_t v706 = v719;
        }
        else
        {
          unsigned int v720 = v1468.u16[v713];
          int v715 = 1;
          uint64_t v721 = v719;
          uint64_t v706 = v707;
        }
        if (v720 <= v1468.u16[v708])
        {
          unsigned int v720 = v1468.u16[v708];
          uint64_t v713 = v708;
          uint64_t v722 = v708;
          uint64_t v707 = v721;
        }
        else
        {
          int v715 = 1;
          uint64_t v722 = v721;
          uint64_t v707 = v708;
        }
        unsigned int v723 = v1468.u16[v709];
        if (v720 <= v723)
        {
          uint64_t v713 = v709;
          uint64_t v724 = v709;
          uint64_t v708 = v722;
        }
        else
        {
          unsigned int v723 = v1468.u16[v713];
          int v715 = 1;
          uint64_t v724 = v722;
          uint64_t v708 = v709;
        }
        if (v723 <= v1468.u16[v710])
        {
          unsigned int v723 = v1468.u16[v710];
          uint64_t v713 = v710;
          uint64_t v725 = v710;
          uint64_t v709 = v724;
        }
        else
        {
          int v715 = 1;
          uint64_t v725 = v724;
          uint64_t v709 = v710;
        }
        unsigned int v726 = v1468.u16[v711];
        if (v723 <= v726)
        {
          unsigned int v727 = v711;
          uint64_t v710 = v725;
        }
        else
        {
          unsigned int v726 = v1468.u16[v713];
          int v715 = 1;
          unsigned int v727 = v725;
          uint64_t v710 = v711;
        }
        unsigned int v728 = v1468.u16[v712];
        BOOL v729 = v726 > v728;
        if (v726 > v728) {
          unsigned int v730 = v727;
        }
        else {
          unsigned int v730 = v712;
        }
        if (v726 > v728) {
          uint64_t v711 = v712;
        }
        else {
          uint64_t v711 = v727;
        }
        unsigned int v712 = v730;
        if (!v729)
        {
          unsigned int v712 = v730;
          if (!v715) {
            break;
          }
        }
      }
      unsigned int v731 = v1468.u16[v730];
      unsigned __int8 v732 = v730;
      for (iunsigned int i = 10; ii != 128; ++ii)
      {
        unsigned int v738 = v1468.u16[ii];
        if (v738 < v731)
        {
          uint64_t v739 = v711;
          unsigned int v740 = v1468.u16[v711];
          if (v740 <= v738)
          {
            unsigned __int8 v732 = ii;
            uint64_t v741 = v711;
          }
          else
          {
            unsigned int v740 = v1468.u16[ii];
            uint64_t v739 = ii;
            unsigned __int8 v732 = v711;
            uint64_t v741 = ii;
          }
          unsigned int v742 = v1468.u16[v710];
          if (v742 <= v740)
          {
            uint64_t v739 = v710;
            uint64_t v711 = v741;
            uint64_t v741 = v710;
          }
          else
          {
            unsigned int v742 = v1468.u16[v739];
            uint64_t v711 = v710;
          }
          if (v1468.u16[v709] <= v742)
          {
            unsigned int v742 = v1468.u16[v709];
            uint64_t v739 = v709;
            uint64_t v710 = v741;
            uint64_t v741 = v709;
          }
          else
          {
            uint64_t v710 = v709;
          }
          unsigned int v743 = v1468.u16[v708];
          if (v743 <= v742)
          {
            uint64_t v739 = v708;
            uint64_t v709 = v741;
            uint64_t v741 = v708;
          }
          else
          {
            unsigned int v743 = v1468.u16[v739];
            uint64_t v709 = v708;
          }
          if (v1468.u16[v707] <= v743)
          {
            unsigned int v743 = v1468.u16[v707];
            uint64_t v739 = v707;
            uint64_t v708 = v741;
            uint64_t v741 = v707;
          }
          else
          {
            uint64_t v708 = v707;
          }
          unsigned int v744 = v1468.u16[v706];
          if (v744 <= v743)
          {
            uint64_t v739 = v706;
            uint64_t v707 = v741;
            uint64_t v741 = v706;
          }
          else
          {
            unsigned int v744 = v1468.u16[v739];
            uint64_t v707 = v706;
          }
          if (v1468.u16[v705] <= v744)
          {
            unsigned int v744 = v1468.u16[v705];
            uint64_t v739 = v705;
            uint64_t v706 = v741;
          }
          else
          {
            uint64_t v706 = v705;
            uint64_t v705 = v741;
          }
          unsigned int v734 = v1468.u16[v704];
          if (v734 > v744)
          {
            unsigned int v734 = v1468.u16[v739];
            uint64_t v735 = v704;
          }
          else
          {
            uint64_t v735 = v705;
            LODWORD(v705) = v704;
          }
          unsigned int v736 = v1468.u16[v703];
          BOOL v737 = v736 > v734;
          if (v736 <= v734) {
            uint64_t v704 = v705;
          }
          else {
            uint64_t v704 = v703;
          }
          if (v737) {
            LODWORD(v703) = v705;
          }
          unsigned int v731 = v1468.u16[v732];
          uint64_t v705 = v735;
        }
      }
      uint64_t v745 = 0;
      uint64_t v746 = 1;
      uint64_t v747 = 2;
      uint64_t v748 = 3;
      uint64_t v749 = 4;
      uint64_t v750 = 5;
      uint64_t v751 = 6;
      uint64_t v752 = 7;
      uint64_t v753 = 8;
      unsigned int v754 = 9;
      while (1)
      {
        uint64_t v755 = v746;
        unsigned int v756 = *((unsigned __int16 *)v1457 + v746);
        if (*((unsigned __int16 *)v1457 + v745) <= v756)
        {
          int v757 = 0;
          uint64_t v758 = v746;
        }
        else
        {
          int v757 = 1;
          unsigned int v756 = *((unsigned __int16 *)v1457 + v745);
          uint64_t v755 = v745;
          uint64_t v758 = v745;
          uint64_t v745 = v746;
        }
        unsigned int v759 = *((unsigned __int16 *)v1457 + v747);
        if (v756 <= v759)
        {
          uint64_t v755 = v747;
          uint64_t v760 = v747;
          uint64_t v746 = v758;
        }
        else
        {
          unsigned int v759 = *((unsigned __int16 *)v1457 + v755);
          int v757 = 1;
          uint64_t v760 = v758;
          uint64_t v746 = v747;
        }
        if (v759 <= *((unsigned __int16 *)v1457 + v748))
        {
          unsigned int v759 = *((unsigned __int16 *)v1457 + v748);
          uint64_t v755 = v748;
          uint64_t v761 = v748;
          uint64_t v747 = v760;
        }
        else
        {
          int v757 = 1;
          uint64_t v761 = v760;
          uint64_t v747 = v748;
        }
        unsigned int v762 = *((unsigned __int16 *)v1457 + v749);
        if (v759 <= v762)
        {
          uint64_t v755 = v749;
          uint64_t v763 = v749;
          uint64_t v748 = v761;
        }
        else
        {
          unsigned int v762 = *((unsigned __int16 *)v1457 + v755);
          int v757 = 1;
          uint64_t v763 = v761;
          uint64_t v748 = v749;
        }
        if (v762 <= *((unsigned __int16 *)v1457 + v750))
        {
          unsigned int v762 = *((unsigned __int16 *)v1457 + v750);
          uint64_t v755 = v750;
          uint64_t v764 = v750;
          uint64_t v749 = v763;
        }
        else
        {
          int v757 = 1;
          uint64_t v764 = v763;
          uint64_t v749 = v750;
        }
        unsigned int v765 = *((unsigned __int16 *)v1457 + v751);
        if (v762 <= v765)
        {
          uint64_t v755 = v751;
          uint64_t v766 = v751;
          uint64_t v750 = v764;
        }
        else
        {
          unsigned int v765 = *((unsigned __int16 *)v1457 + v755);
          int v757 = 1;
          uint64_t v766 = v764;
          uint64_t v750 = v751;
        }
        if (v765 <= *((unsigned __int16 *)v1457 + v752))
        {
          unsigned int v765 = *((unsigned __int16 *)v1457 + v752);
          uint64_t v755 = v752;
          uint64_t v767 = v752;
          uint64_t v751 = v766;
        }
        else
        {
          int v757 = 1;
          uint64_t v767 = v766;
          uint64_t v751 = v752;
        }
        unsigned int v768 = *((unsigned __int16 *)v1457 + v753);
        if (v765 <= v768)
        {
          unsigned int v769 = v753;
          uint64_t v752 = v767;
        }
        else
        {
          unsigned int v768 = *((unsigned __int16 *)v1457 + v755);
          int v757 = 1;
          unsigned int v769 = v767;
          uint64_t v752 = v753;
        }
        unsigned int v770 = *((unsigned __int16 *)v1457 + v754);
        BOOL v771 = v768 > v770;
        if (v768 > v770) {
          unsigned int v772 = v769;
        }
        else {
          unsigned int v772 = v754;
        }
        if (v768 > v770) {
          uint64_t v753 = v754;
        }
        else {
          uint64_t v753 = v769;
        }
        unsigned int v754 = v772;
        if (!v771)
        {
          unsigned int v754 = v772;
          if (!v757) {
            break;
          }
        }
      }
      unsigned int v773 = *((unsigned __int16 *)v1457 + v772);
      unsigned __int8 v774 = v772;
      for (junsigned int j = 10; jj != 128; ++jj)
      {
        unsigned int v780 = *((unsigned __int16 *)v1457 + jj);
        if (v780 < v773)
        {
          uint64_t v781 = v753;
          unsigned int v782 = *((unsigned __int16 *)v1457 + v753);
          if (v782 <= v780)
          {
            unsigned __int8 v774 = jj;
            uint64_t v783 = v753;
          }
          else
          {
            unsigned int v782 = *((unsigned __int16 *)v1457 + jj);
            uint64_t v781 = jj;
            unsigned __int8 v774 = v753;
            uint64_t v783 = jj;
          }
          unsigned int v784 = *((unsigned __int16 *)v1457 + v752);
          if (v784 <= v782)
          {
            uint64_t v781 = v752;
            uint64_t v753 = v783;
            uint64_t v783 = v752;
          }
          else
          {
            unsigned int v784 = *((unsigned __int16 *)v1457 + v781);
            uint64_t v753 = v752;
          }
          if (*((unsigned __int16 *)v1457 + v751) <= v784)
          {
            unsigned int v784 = *((unsigned __int16 *)v1457 + v751);
            uint64_t v781 = v751;
            uint64_t v752 = v783;
            uint64_t v783 = v751;
          }
          else
          {
            uint64_t v752 = v751;
          }
          unsigned int v785 = *((unsigned __int16 *)v1457 + v750);
          if (v785 <= v784)
          {
            uint64_t v781 = v750;
            uint64_t v751 = v783;
            uint64_t v783 = v750;
          }
          else
          {
            unsigned int v785 = *((unsigned __int16 *)v1457 + v781);
            uint64_t v751 = v750;
          }
          if (*((unsigned __int16 *)v1457 + v749) <= v785)
          {
            unsigned int v785 = *((unsigned __int16 *)v1457 + v749);
            uint64_t v781 = v749;
            uint64_t v750 = v783;
            uint64_t v783 = v749;
          }
          else
          {
            uint64_t v750 = v749;
          }
          unsigned int v786 = *((unsigned __int16 *)v1457 + v748);
          if (v786 <= v785)
          {
            uint64_t v781 = v748;
            uint64_t v749 = v783;
            uint64_t v783 = v748;
          }
          else
          {
            unsigned int v786 = *((unsigned __int16 *)v1457 + v781);
            uint64_t v749 = v748;
          }
          if (*((unsigned __int16 *)v1457 + v747) <= v786)
          {
            unsigned int v786 = *((unsigned __int16 *)v1457 + v747);
            uint64_t v781 = v747;
            uint64_t v748 = v783;
          }
          else
          {
            uint64_t v748 = v747;
            uint64_t v747 = v783;
          }
          unsigned int v776 = *((unsigned __int16 *)v1457 + v746);
          if (v776 > v786)
          {
            unsigned int v776 = *((unsigned __int16 *)v1457 + v781);
            uint64_t v777 = v746;
          }
          else
          {
            uint64_t v777 = v747;
            LODWORD(v747) = v746;
          }
          unsigned int v778 = *((unsigned __int16 *)v1457 + v745);
          BOOL v779 = v778 > v776;
          if (v778 <= v776) {
            uint64_t v746 = v747;
          }
          else {
            uint64_t v746 = v745;
          }
          if (v779) {
            LODWORD(v745) = v747;
          }
          unsigned int v773 = *((unsigned __int16 *)v1457 + v774);
          uint64_t v747 = v777;
        }
      }
      uint64_t v1437 = 0x101010101010101 * v703;
      __int16 v1438 = 257 * v703;
      uint64_t v1439 = 0x101010101010101 * v704;
      __int16 v1440 = 257 * v704;
      uint64_t v787 = 0x101010101010101 * v705;
      __int16 v1442 = v787;
      uint64_t v1441 = v787;
      uint64_t v1443 = 0x101010101010101 * v706;
      __int16 v1444 = 257 * v706;
      uint64_t v788 = 0x101010101010101 * v707;
      __int16 v1446 = v788;
      uint64_t v1445 = v788;
      uint64_t v1447 = 0x101010101010101 * v708;
      __int16 v1448 = 257 * v708;
      uint64_t v789 = 0x101010101010101 * v709;
      __int16 v1450 = v789;
      uint64_t v1449 = v789;
      uint64_t v790 = 0x101010101010101 * v710;
      __int16 v1452 = v790;
      uint64_t v1451 = v790;
      uint64_t v791 = 0x101010101010101 * v711;
      __int16 v1454 = v791;
      uint64_t v1453 = v791;
      uint64_t v792 = 0x101010101010101 * v732;
      __int16 v1456 = v792;
      uint64_t v1455 = v792;
      LOBYTE(v1340) = v745;
      char v1347 = v745;
      char v1357 = v745;
      char v1367 = v745;
      char v1377 = v745;
      char v1387 = v745;
      char v1397 = v745;
      char v1407 = v745;
      char v1417 = v745;
      char v1427 = v745;
      BYTE1(v1340) = v746;
      char v1348 = v746;
      char v1358 = v746;
      char v1368 = v746;
      char v1378 = v746;
      char v1388 = v746;
      char v1398 = v746;
      char v1408 = v746;
      char v1418 = v746;
      char v1428 = v746;
      BYTE2(v1340) = v747;
      char v1349 = v747;
      char v1359 = v747;
      char v1369 = v747;
      char v1379 = v747;
      char v1389 = v747;
      char v1399 = v747;
      char v1409 = v747;
      char v1419 = v747;
      char v1429 = v747;
      HIBYTE(v1340) = v748;
      char v1350 = v748;
      char v1360 = v748;
      char v1370 = v748;
      char v1380 = v748;
      char v1390 = v748;
      char v1400 = v748;
      char v1410 = v748;
      char v1420 = v748;
      char v1430 = v748;
      char v1341 = v749;
      char v1351 = v749;
      char v1361 = v749;
      char v1371 = v749;
      char v1381 = v749;
      char v1391 = v749;
      char v1401 = v749;
      char v1411 = v749;
      char v1421 = v749;
      char v1431 = v749;
      char v1342 = v750;
      char v1352 = v750;
      char v1362 = v750;
      char v1372 = v750;
      char v1382 = v750;
      char v1392 = v750;
      char v1402 = v750;
      char v1412 = v750;
      char v1422 = v750;
      char v1432 = v750;
      char v1343 = v751;
      char v1353 = v751;
      char v1363 = v751;
      char v1373 = v751;
      char v1383 = v751;
      char v1393 = v751;
      char v1403 = v751;
      char v1413 = v751;
      char v1423 = v751;
      char v1433 = v751;
      char v1344 = v752;
      char v1354 = v752;
      char v1364 = v752;
      char v1374 = v752;
      char v1384 = v752;
      char v1394 = v752;
      char v1404 = v752;
      char v1414 = v752;
      char v1424 = v752;
      char v1434 = v752;
      char v1345 = v753;
      char v1355 = v753;
      char v1365 = v753;
      char v1375 = v753;
      char v1385 = v753;
      char v1395 = v753;
      char v1405 = v753;
      char v1415 = v753;
      char v1425 = v753;
      char v1435 = v753;
      unsigned __int8 v1346 = v774;
      unsigned __int8 v1356 = v774;
      unsigned __int8 v1366 = v774;
      unsigned __int8 v1376 = v774;
      unsigned __int8 v1386 = v774;
      unsigned __int8 v1396 = v774;
      unsigned __int8 v1406 = v774;
      unsigned __int8 v1416 = v774;
      unsigned __int8 v1426 = v774;
      unsigned __int8 v1436 = v774;
      sub_10016441C(v1329, *(int8x16_t **)(v1329 + 96), (uint64_t)&v1437, (uint64_t)&v1340, (char *)&v1338);
      uint64_t v794 = 0;
      int v795 = 0;
      int v796 = 0;
      unsigned int v797 = 0xFFFF;
      v798 = (unsigned __int16 *)&v1338 + 2;
      uint32x4_t v799 = 0uLL;
      v800.i64[0] = 0xFFFF0000FFFFLL;
      v800.i64[1] = 0xFFFF0000FFFFLL;
      do
      {
        if (*(v798 - 2) < v797)
        {
          int v796 = *((unsigned __int8 *)&v1437 + v794);
          int v795 = *((unsigned __int8 *)&v1340 + v794);
          unsigned int v797 = *(v798 - 2);
        }
        if (*(v798 - 1) < v797)
        {
          int v796 = *((unsigned __int8 *)&v1437 + v794) ^ 0x80;
          int v795 = *((unsigned __int8 *)&v1340 + v794);
          unsigned int v797 = *(v798 - 1);
        }
        if (*v798 < v797)
        {
          int v796 = *((unsigned __int8 *)&v1437 + v794);
          int v795 = *((unsigned __int8 *)&v1340 + v794) ^ 0x80;
          unsigned int v797 = *v798;
        }
        if (v798[1] < v797)
        {
          int v796 = *((unsigned __int8 *)&v1437 + v794) ^ 0x80;
          int v795 = *((unsigned __int8 *)&v1340 + v794) ^ 0x80;
          unsigned int v797 = v798[1];
        }
        v798 += 4;
        ++v794;
      }
      while (v794 != 100);
      uint64_t v801 = v1329;
      if (v701 >= v797) {
        char v802 = -76;
      }
      else {
        char v802 = 0;
      }
      if (v701 >= v797) {
        unsigned int v803 = v797;
      }
      else {
        unsigned int v803 = v701;
      }
      if (v701 >= v797)
      {
        v804 = (int16x8_t **)(v1329 + 112);
      }
      else
      {
        int v796 = v700;
        int v795 = v699;
        v804 = (int16x8_t **)(v1329 + 104);
      }
      v805 = *v804;
      unsigned int v806 = v795 << 8;
      unsigned int v807 = v796 << 8;
      *(unsigned char *)(v1329 + 4) = v802;
      *(_DWORD *)(v1329 + 8) = v803 << 8;
      *(_WORD *)uint64_t v1329 = (_WORD)v796 << 8;
      *(_WORD *)(v1329 + 2) = (_WORD)v795 << 8;
      *(void *)(v1329 + 160) = v805;
      uint64_t v808 = *(unsigned int *)(v1329 + 16);
      if ((int)v808 < 1)
      {
        unsigned int v1095 = 0;
        *(_WORD *)(v1329 + 2) = v806;
        goto LABEL_891;
      }
      int v809 = 0;
      v811 = *(int8x16_t **)(v1329 + 120);
      v810 = *(int8x16_t **)(v1329 + 128);
      uint64_t v812 = v808 & 0xFFFFFFF0;
      uint64_t v813 = v808 & 0xFFFFFFF8;
      uint64_t v814 = -v813;
      int v815 = 256;
      uint64_t v1327 = v813;
      while (2)
      {
        int v1336 = v809;
        while (2)
        {
          int16x8_t v816 = vdupq_n_s16(v806);
          unsigned int v817 = v806 - v815;
          int16x8_t v818 = vdupq_n_s16(v806 - v815);
          int16x8_t v819 = vdupq_n_s16(v806 + v815);
          while (2)
          {
            if (v808 >= 8)
            {
              int16x8_t v822 = vdupq_n_s16(v807);
              if (v808 >= 0x10)
              {
                int32x4_t v840 = 0uLL;
                v841 = v811;
                v842 = v810;
                v843 = v805;
                uint64_t v844 = v808 & 0xFFFFFFF0;
                int32x4_t v845 = 0uLL;
                int32x4_t v846 = 0uLL;
                int32x4_t v847 = 0uLL;
                do
                {
                  int8x16_t v848 = *v841++;
                  int16x8_t v849 = vmovl_s8(*(int8x8_t *)v848.i8);
                  int16x8_t v850 = vmovl_high_s8(v848);
                  int8x16_t v851 = *v842++;
                  int16x8_t v853 = *v843;
                  int16x8_t v852 = v843[1];
                  v843 += 2;
                  uint16x8_t v854 = (uint16x8_t)vmlsq_s16(vmlsq_s16(v853, v816, vmovl_s8(*(int8x8_t *)v851.i8)), v822, v849);
                  uint16x8_t v855 = (uint16x8_t)vmlsq_s16(vmlsq_s16(v852, v816, vmovl_high_s8(v851)), v822, v850);
                  int8x16_t v856 = (int8x16_t)vmovl_high_u16(v855);
                  int8x16_t v857 = (int8x16_t)vmovl_high_u16(v854);
                  int32x4_t v858 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v855.i8);
                  int32x4_t v859 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v854.i8);
                  int8x16_t v860 = (int8x16_t)vnegq_s32(v859);
                  int8x16_t v861 = (int8x16_t)vnegq_s32(v858);
                  int8x16_t v862 = (int8x16_t)vsubw_high_u16(v799, v854);
                  int8x16_t v863 = (int8x16_t)vsubw_high_u16(v799, v855);
                  int32x4_t v847 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v863, v800), (uint32x4_t)v856), v856, v863), v800), v847);
                  int32x4_t v845 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v862, v800), (uint32x4_t)v857), v857, v862), v800), v845);
                  int32x4_t v846 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v861, v800), (uint32x4_t)v858), (int8x16_t)v858, v861), v800), v846);
                  int32x4_t v840 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v860, v800), (uint32x4_t)v859), (int8x16_t)v859, v860), v800), v840);
                  v844 -= 16;
                }
                while (v844);
                unsigned int v821 = vaddvq_s32(vaddq_s32(vaddq_s32(v840, v846), vaddq_s32(v845, v847)));
                if (v812 == v808) {
                  goto LABEL_806;
                }
                uint64_t v823 = v808 & 0xFFFFFFF0;
                uint64_t v820 = v823;
                if ((v808 & 8) == 0) {
                  goto LABEL_802;
                }
              }
              else
              {
                unsigned int v821 = 0;
                uint64_t v823 = 0;
              }
              int32x4_t v824 = 0uLL;
              int32x4_t v825 = (int32x4_t)v821;
              uint64_t v826 = v814 + v823;
              v827 = (int16x8_t *)((char *)v805 + 2 * v823);
              v828 = (int8x8_t *)&v810->i8[v823];
              v829 = (int8x8_t *)&v811->i8[v823];
              do
              {
                int8x8_t v830 = *v829++;
                int16x8_t v831 = vmovl_s8(v830);
                int8x8_t v832 = *v828++;
                int8x8_t v833 = v832;
                int16x8_t v834 = *v827++;
                uint16x8_t v835 = (uint16x8_t)vmlsq_s16(vmlsq_s16(v834, v816, vmovl_s8(v833)), v822, v831);
                int8x16_t v836 = (int8x16_t)vmovl_high_u16(v835);
                int32x4_t v837 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v835.i8);
                int8x16_t v838 = (int8x16_t)vnegq_s32(v837);
                int8x16_t v839 = (int8x16_t)vsubw_high_u16(v799, v835);
                int32x4_t v824 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v839, v800), (uint32x4_t)v836), v836, v839), v800), v824);
                int32x4_t v825 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v838, v800), (uint32x4_t)v837), (int8x16_t)v837, v838), v800), v825);
                v826 += 8;
              }
              while (v826);
              unsigned int v821 = vaddvq_s32(vaddq_s32(v825, v824));
              uint64_t v820 = v813;
              if (v813 != v808) {
                goto LABEL_802;
              }
            }
            else
            {
              uint64_t v820 = 0;
              unsigned int v821 = 0;
LABEL_802:
              uint64_t v864 = v808 - v820;
              v865 = &v810->i8[v820];
              v866 = &v811->i8[v820];
              v867 = &v805->i16[v820];
              do
              {
                __int16 v869 = *v866++;
                __int16 v868 = v869;
                __int16 v871 = *v865++;
                __int16 v870 = v871;
                __int16 v872 = *v867++;
                unsigned int v873 = (unsigned __int16)(v872 - v806 * v870 - v807 * v868);
                if (v873 >= (unsigned __int16)-(__int16)v873) {
                  unsigned int v873 = -v873;
                }
                v821 += (unsigned __int16)v873;
                --v864;
              }
              while (v864);
            }
LABEL_806:
            unsigned int v874 = v807 - v815;
            if (v808 >= 8)
            {
              int16x8_t v877 = vdupq_n_s16(v874);
              if (v808 >= 0x10)
              {
                int32x4_t v895 = 0uLL;
                v896 = v811;
                v897 = v810;
                v898 = v805;
                uint64_t v899 = v808 & 0xFFFFFFF0;
                int32x4_t v900 = 0uLL;
                int32x4_t v901 = 0uLL;
                int32x4_t v902 = 0uLL;
                do
                {
                  int8x16_t v903 = *v896++;
                  int16x8_t v904 = vmovl_s8(*(int8x8_t *)v903.i8);
                  int16x8_t v905 = vmovl_high_s8(v903);
                  int8x16_t v906 = *v897++;
                  int16x8_t v908 = *v898;
                  int16x8_t v907 = v898[1];
                  v898 += 2;
                  uint16x8_t v909 = (uint16x8_t)vmlsq_s16(vmlsq_s16(v908, v816, vmovl_s8(*(int8x8_t *)v906.i8)), v877, v904);
                  uint16x8_t v910 = (uint16x8_t)vmlsq_s16(vmlsq_s16(v907, v816, vmovl_high_s8(v906)), v877, v905);
                  int8x16_t v911 = (int8x16_t)vmovl_high_u16(v910);
                  int8x16_t v912 = (int8x16_t)vmovl_high_u16(v909);
                  int32x4_t v913 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v910.i8);
                  int32x4_t v914 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v909.i8);
                  int8x16_t v915 = (int8x16_t)vnegq_s32(v914);
                  int8x16_t v916 = (int8x16_t)vnegq_s32(v913);
                  int8x16_t v917 = (int8x16_t)vsubw_high_u16(v799, v909);
                  int8x16_t v918 = (int8x16_t)vsubw_high_u16(v799, v910);
                  int32x4_t v902 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v918, v800), (uint32x4_t)v911), v911, v918), v800), v902);
                  int32x4_t v900 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v917, v800), (uint32x4_t)v912), v912, v917), v800), v900);
                  int32x4_t v901 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v916, v800), (uint32x4_t)v913), (int8x16_t)v913, v916), v800), v901);
                  int32x4_t v895 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v915, v800), (uint32x4_t)v914), (int8x16_t)v914, v915), v800), v895);
                  v899 -= 16;
                }
                while (v899);
                unsigned int v876 = vaddvq_s32(vaddq_s32(vaddq_s32(v895, v901), vaddq_s32(v900, v902)));
                if (v812 == v808) {
                  goto LABEL_822;
                }
                uint64_t v878 = v808 & 0xFFFFFFF0;
                uint64_t v875 = v878;
                if ((v808 & 8) == 0) {
                  goto LABEL_818;
                }
              }
              else
              {
                unsigned int v876 = 0;
                uint64_t v878 = 0;
              }
              int32x4_t v879 = 0uLL;
              int32x4_t v880 = (int32x4_t)v876;
              uint64_t v881 = v814 + v878;
              v882 = (int16x8_t *)((char *)v805 + 2 * v878);
              v883 = (int8x8_t *)&v810->i8[v878];
              v884 = (int8x8_t *)&v811->i8[v878];
              do
              {
                int8x8_t v885 = *v884++;
                int16x8_t v886 = vmovl_s8(v885);
                int8x8_t v887 = *v883++;
                int8x8_t v888 = v887;
                int16x8_t v889 = *v882++;
                uint16x8_t v890 = (uint16x8_t)vmlsq_s16(vmlsq_s16(v889, v816, vmovl_s8(v888)), v877, v886);
                int8x16_t v891 = (int8x16_t)vmovl_high_u16(v890);
                int32x4_t v892 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v890.i8);
                int8x16_t v893 = (int8x16_t)vnegq_s32(v892);
                int8x16_t v894 = (int8x16_t)vsubw_high_u16(v799, v890);
                int32x4_t v879 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v894, v800), (uint32x4_t)v891), v891, v894), v800), v879);
                int32x4_t v880 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v893, v800), (uint32x4_t)v892), (int8x16_t)v892, v893), v800), v880);
                v881 += 8;
              }
              while (v881);
              unsigned int v876 = vaddvq_s32(vaddq_s32(v880, v879));
              uint64_t v875 = v813;
              if (v813 != v808) {
                goto LABEL_818;
              }
            }
            else
            {
              uint64_t v875 = 0;
              unsigned int v876 = 0;
LABEL_818:
              uint64_t v919 = v808 - v875;
              v920 = &v810->i8[v875];
              v921 = &v811->i8[v875];
              v922 = &v805->i16[v875];
              do
              {
                __int16 v924 = *v921++;
                __int16 v923 = v924;
                __int16 v926 = *v920++;
                __int16 v925 = v926;
                __int16 v927 = *v922++;
                unsigned int v928 = (unsigned __int16)(v927 - v806 * v925 - v874 * v923);
                if (v928 >= (unsigned __int16)-(__int16)v928) {
                  unsigned int v928 = -v928;
                }
                v876 += (unsigned __int16)v928;
                --v919;
              }
              while (v919);
            }
LABEL_822:
            unsigned int v929 = v807 + v815;
            if (v808 >= 8)
            {
              int16x8_t v932 = vdupq_n_s16(v929);
              if (v808 >= 0x10)
              {
                int32x4_t v950 = 0uLL;
                v951 = v811;
                v952 = v810;
                v953 = v805;
                uint64_t v954 = v808 & 0xFFFFFFF0;
                int32x4_t v955 = 0uLL;
                int32x4_t v956 = 0uLL;
                int32x4_t v957 = 0uLL;
                do
                {
                  int8x16_t v958 = *v951++;
                  int16x8_t v959 = vmovl_s8(*(int8x8_t *)v958.i8);
                  int16x8_t v960 = vmovl_high_s8(v958);
                  int8x16_t v961 = *v952++;
                  int16x8_t v963 = *v953;
                  int16x8_t v962 = v953[1];
                  v953 += 2;
                  uint16x8_t v964 = (uint16x8_t)vmlsq_s16(vmlsq_s16(v963, v816, vmovl_s8(*(int8x8_t *)v961.i8)), v932, v959);
                  uint16x8_t v965 = (uint16x8_t)vmlsq_s16(vmlsq_s16(v962, v816, vmovl_high_s8(v961)), v932, v960);
                  int8x16_t v966 = (int8x16_t)vmovl_high_u16(v965);
                  int8x16_t v967 = (int8x16_t)vmovl_high_u16(v964);
                  int32x4_t v968 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v965.i8);
                  int32x4_t v969 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v964.i8);
                  int8x16_t v970 = (int8x16_t)vnegq_s32(v969);
                  int8x16_t v971 = (int8x16_t)vnegq_s32(v968);
                  int8x16_t v972 = (int8x16_t)vsubw_high_u16(v799, v964);
                  int8x16_t v973 = (int8x16_t)vsubw_high_u16(v799, v965);
                  int32x4_t v957 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v973, v800), (uint32x4_t)v966), v966, v973), v800), v957);
                  int32x4_t v955 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v972, v800), (uint32x4_t)v967), v967, v972), v800), v955);
                  int32x4_t v956 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v971, v800), (uint32x4_t)v968), (int8x16_t)v968, v971), v800), v956);
                  int32x4_t v950 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v970, v800), (uint32x4_t)v969), (int8x16_t)v969, v970), v800), v950);
                  v954 -= 16;
                }
                while (v954);
                unsigned int v931 = vaddvq_s32(vaddq_s32(vaddq_s32(v950, v956), vaddq_s32(v955, v957)));
                if (v812 == v808) {
                  goto LABEL_838;
                }
                uint64_t v933 = v808 & 0xFFFFFFF0;
                uint64_t v930 = v933;
                if ((v808 & 8) == 0) {
                  goto LABEL_834;
                }
              }
              else
              {
                unsigned int v931 = 0;
                uint64_t v933 = 0;
              }
              int32x4_t v934 = 0uLL;
              int32x4_t v935 = (int32x4_t)v931;
              uint64_t v936 = v814 + v933;
              v937 = (int16x8_t *)((char *)v805 + 2 * v933);
              v938 = (int8x8_t *)&v810->i8[v933];
              v939 = (int8x8_t *)&v811->i8[v933];
              do
              {
                int8x8_t v940 = *v939++;
                int16x8_t v941 = vmovl_s8(v940);
                int8x8_t v942 = *v938++;
                int8x8_t v943 = v942;
                int16x8_t v944 = *v937++;
                uint16x8_t v945 = (uint16x8_t)vmlsq_s16(vmlsq_s16(v944, v816, vmovl_s8(v943)), v932, v941);
                int8x16_t v946 = (int8x16_t)vmovl_high_u16(v945);
                int32x4_t v947 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v945.i8);
                int8x16_t v948 = (int8x16_t)vnegq_s32(v947);
                int8x16_t v949 = (int8x16_t)vsubw_high_u16(v799, v945);
                int32x4_t v934 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v949, v800), (uint32x4_t)v946), v946, v949), v800), v934);
                int32x4_t v935 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v948, v800), (uint32x4_t)v947), (int8x16_t)v947, v948), v800), v935);
                v936 += 8;
              }
              while (v936);
              unsigned int v931 = vaddvq_s32(vaddq_s32(v935, v934));
              uint64_t v930 = v813;
              if (v813 != v808) {
                goto LABEL_834;
              }
            }
            else
            {
              uint64_t v930 = 0;
              unsigned int v931 = 0;
LABEL_834:
              uint64_t v974 = v808 - v930;
              v975 = &v810->i8[v930];
              v976 = &v811->i8[v930];
              v977 = &v805->i16[v930];
              do
              {
                __int16 v979 = *v976++;
                __int16 v978 = v979;
                __int16 v981 = *v975++;
                __int16 v980 = v981;
                __int16 v982 = *v977++;
                unsigned int v983 = (unsigned __int16)(v982 - v806 * v980 - v929 * v978);
                if (v983 >= (unsigned __int16)-(__int16)v983) {
                  unsigned int v983 = -v983;
                }
                v931 += (unsigned __int16)v983;
                --v974;
              }
              while (v974);
            }
LABEL_838:
            if (v808 >= 8)
            {
              if (v808 >= 0x10)
              {
                int16x8_t v1004 = vdupq_n_s16(v807);
                int32x4_t v1005 = 0uLL;
                v1006 = v811;
                v1007 = v810;
                v1008 = v805;
                uint64_t v1009 = v808 & 0xFFFFFFF0;
                int32x4_t v1010 = 0uLL;
                int32x4_t v1011 = 0uLL;
                int32x4_t v1012 = 0uLL;
                do
                {
                  int8x16_t v1013 = *v1006++;
                  int16x8_t v1014 = vmovl_s8(*(int8x8_t *)v1013.i8);
                  int16x8_t v1015 = vmovl_high_s8(v1013);
                  int8x16_t v1016 = *v1007++;
                  int16x8_t v1018 = *v1008;
                  int16x8_t v1017 = v1008[1];
                  v1008 += 2;
                  uint16x8_t v1019 = (uint16x8_t)vmlsq_s16(vmlsq_s16(v1018, v818, vmovl_s8(*(int8x8_t *)v1016.i8)), v1004, v1014);
                  uint16x8_t v1020 = (uint16x8_t)vmlsq_s16(vmlsq_s16(v1017, v818, vmovl_high_s8(v1016)), v1004, v1015);
                  int8x16_t v1021 = (int8x16_t)vmovl_high_u16(v1020);
                  int8x16_t v1022 = (int8x16_t)vmovl_high_u16(v1019);
                  int32x4_t v1023 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v1020.i8);
                  int32x4_t v1024 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v1019.i8);
                  int8x16_t v1025 = (int8x16_t)vnegq_s32(v1024);
                  int8x16_t v1026 = (int8x16_t)vnegq_s32(v1023);
                  int8x16_t v1027 = (int8x16_t)vsubw_high_u16(v799, v1019);
                  int8x16_t v1028 = (int8x16_t)vsubw_high_u16(v799, v1020);
                  int32x4_t v1012 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v1028, v800), (uint32x4_t)v1021), v1021, v1028), v800), v1012);
                  int32x4_t v1010 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v1027, v800), (uint32x4_t)v1022), v1022, v1027), v800), v1010);
                  int32x4_t v1011 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v1026, v800), (uint32x4_t)v1023), (int8x16_t)v1023, v1026), v800), v1011);
                  int32x4_t v1005 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v1025, v800), (uint32x4_t)v1024), (int8x16_t)v1024, v1025), v800), v1005);
                  v1009 -= 16;
                }
                while (v1009);
                unsigned int v985 = vaddvq_s32(vaddq_s32(vaddq_s32(v1005, v1011), vaddq_s32(v1010, v1012)));
                if (v812 == v808) {
                  goto LABEL_854;
                }
                uint64_t v986 = v808 & 0xFFFFFFF0;
                uint64_t v984 = v986;
                if ((v808 & 8) == 0) {
                  goto LABEL_850;
                }
              }
              else
              {
                unsigned int v985 = 0;
                uint64_t v986 = 0;
              }
              int32x4_t v987 = 0uLL;
              int32x4_t v988 = (int32x4_t)v985;
              int16x8_t v989 = vdupq_n_s16(v807);
              uint64_t v990 = v814 + v986;
              v991 = (int16x8_t *)((char *)v805 + 2 * v986);
              v992 = (int8x8_t *)&v810->i8[v986];
              v993 = (int8x8_t *)&v811->i8[v986];
              do
              {
                int8x8_t v994 = *v993++;
                int16x8_t v995 = vmovl_s8(v994);
                int8x8_t v996 = *v992++;
                int8x8_t v997 = v996;
                int16x8_t v998 = *v991++;
                uint16x8_t v999 = (uint16x8_t)vmlsq_s16(vmlsq_s16(v998, v818, vmovl_s8(v997)), v989, v995);
                int8x16_t v1000 = (int8x16_t)vmovl_high_u16(v999);
                int32x4_t v1001 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v999.i8);
                int8x16_t v1002 = (int8x16_t)vnegq_s32(v1001);
                int8x16_t v1003 = (int8x16_t)vsubw_high_u16(v799, v999);
                int32x4_t v987 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v1003, v800), (uint32x4_t)v1000), v1000, v1003), v800), v987);
                int32x4_t v988 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v1002, v800), (uint32x4_t)v1001), (int8x16_t)v1001, v1002), v800), v988);
                v990 += 8;
              }
              while (v990);
              unsigned int v985 = vaddvq_s32(vaddq_s32(v988, v987));
              uint64_t v984 = v813;
              if (v813 != v808) {
                goto LABEL_850;
              }
            }
            else
            {
              uint64_t v984 = 0;
              unsigned int v985 = 0;
LABEL_850:
              uint64_t v1029 = v808 - v984;
              v1030 = &v810->i8[v984];
              v1031 = &v811->i8[v984];
              v1032 = &v805->i16[v984];
              do
              {
                __int16 v1034 = *v1031++;
                __int16 v1033 = v1034;
                __int16 v1036 = *v1030++;
                __int16 v1035 = v1036;
                __int16 v1037 = *v1032++;
                unsigned int v1038 = (unsigned __int16)(v1037 - v817 * v1035 - v807 * v1033);
                if (v1038 >= (unsigned __int16)-(__int16)v1038) {
                  unsigned int v1038 = -v1038;
                }
                v985 += (unsigned __int16)v1038;
                --v1029;
              }
              while (v1029);
            }
LABEL_854:
            if (v808 >= 8)
            {
              if (v808 >= 0x10)
              {
                int16x8_t v1059 = vdupq_n_s16(v807);
                int32x4_t v1060 = 0uLL;
                v1061 = v811;
                v1062 = v810;
                v1063 = v805;
                uint64_t v1064 = v808 & 0xFFFFFFF0;
                int32x4_t v1065 = 0uLL;
                int32x4_t v1066 = 0uLL;
                int32x4_t v1067 = 0uLL;
                do
                {
                  int8x16_t v1068 = *v1061++;
                  int16x8_t v1069 = vmovl_s8(*(int8x8_t *)v1068.i8);
                  int16x8_t v1070 = vmovl_high_s8(v1068);
                  int8x16_t v1071 = *v1062++;
                  int16x8_t v1073 = *v1063;
                  int16x8_t v1072 = v1063[1];
                  v1063 += 2;
                  uint16x8_t v1074 = (uint16x8_t)vmlsq_s16(vmlsq_s16(v1073, v819, vmovl_s8(*(int8x8_t *)v1071.i8)), v1059, v1069);
                  uint16x8_t v1075 = (uint16x8_t)vmlsq_s16(vmlsq_s16(v1072, v819, vmovl_high_s8(v1071)), v1059, v1070);
                  int8x16_t v1076 = (int8x16_t)vmovl_high_u16(v1075);
                  int8x16_t v1077 = (int8x16_t)vmovl_high_u16(v1074);
                  int32x4_t v1078 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v1075.i8);
                  int32x4_t v1079 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v1074.i8);
                  int8x16_t v1080 = (int8x16_t)vnegq_s32(v1079);
                  int8x16_t v1081 = (int8x16_t)vnegq_s32(v1078);
                  int8x16_t v1082 = (int8x16_t)vsubw_high_u16(v799, v1074);
                  int8x16_t v1083 = (int8x16_t)vsubw_high_u16(v799, v1075);
                  int32x4_t v1067 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v1083, v800), (uint32x4_t)v1076), v1076, v1083), v800), v1067);
                  int32x4_t v1065 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v1082, v800), (uint32x4_t)v1077), v1077, v1082), v800), v1065);
                  int32x4_t v1066 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v1081, v800), (uint32x4_t)v1078), (int8x16_t)v1078, v1081), v800), v1066);
                  int32x4_t v1060 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v1080, v800), (uint32x4_t)v1079), (int8x16_t)v1079, v1080), v800), v1060);
                  v1064 -= 16;
                }
                while (v1064);
                unsigned int v1040 = vaddvq_s32(vaddq_s32(vaddq_s32(v1060, v1066), vaddq_s32(v1065, v1067)));
                if (v812 == v808) {
                  goto LABEL_870;
                }
                uint64_t v1041 = v808 & 0xFFFFFFF0;
                uint64_t v1039 = v1041;
                if ((v808 & 8) == 0) {
                  goto LABEL_866;
                }
              }
              else
              {
                unsigned int v1040 = 0;
                uint64_t v1041 = 0;
              }
              int32x4_t v1042 = 0uLL;
              int32x4_t v1043 = (int32x4_t)v1040;
              int16x8_t v1044 = vdupq_n_s16(v807);
              uint64_t v1045 = v814 + v1041;
              v1046 = (int16x8_t *)((char *)v805 + 2 * v1041);
              v1047 = (int8x8_t *)&v810->i8[v1041];
              v1048 = (int8x8_t *)&v811->i8[v1041];
              do
              {
                int8x8_t v1049 = *v1048++;
                int16x8_t v1050 = vmovl_s8(v1049);
                int8x8_t v1051 = *v1047++;
                int8x8_t v1052 = v1051;
                int16x8_t v1053 = *v1046++;
                uint16x8_t v1054 = (uint16x8_t)vmlsq_s16(vmlsq_s16(v1053, v819, vmovl_s8(v1052)), v1044, v1050);
                int8x16_t v1055 = (int8x16_t)vmovl_high_u16(v1054);
                int32x4_t v1056 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v1054.i8);
                int8x16_t v1057 = (int8x16_t)vnegq_s32(v1056);
                int8x16_t v1058 = (int8x16_t)vsubw_high_u16(v799, v1054);
                int32x4_t v1042 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v1058, v800), (uint32x4_t)v1055), v1055, v1058), v800), v1042);
                int32x4_t v1043 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v1057, v800), (uint32x4_t)v1056), (int8x16_t)v1056, v1057), v800), v1043);
                v1045 += 8;
              }
              while (v1045);
              unsigned int v1040 = vaddvq_s32(vaddq_s32(v1043, v1042));
              uint64_t v1039 = v813;
              if (v813 != v808) {
                goto LABEL_866;
              }
            }
            else
            {
              uint64_t v1039 = 0;
              unsigned int v1040 = 0;
LABEL_866:
              uint64_t v1084 = v808 - v1039;
              v1085 = &v810->i8[v1039];
              v1086 = &v811->i8[v1039];
              v1087 = &v805->i16[v1039];
              do
              {
                __int16 v1089 = *v1086++;
                __int16 v1088 = v1089;
                __int16 v1091 = *v1085++;
                __int16 v1090 = v1091;
                __int16 v1092 = *v1087++;
                unsigned int v1093 = (unsigned __int16)(v1092 - (v806 + v815) * v1090 - v807 * v1088);
                if (v1093 >= (unsigned __int16)-(__int16)v1093) {
                  unsigned int v1093 = -v1093;
                }
                v1040 += (unsigned __int16)v1093;
                --v1084;
              }
              while (v1084);
            }
LABEL_870:
            if (v876 < v821 || (unsigned int v874 = v807 + v815, v931 < v821))
            {
              *(_WORD *)uint64_t v801 = v874;
              unsigned int v807 = v874;
              continue;
            }
            break;
          }
          if (v985 < v821 || (unsigned int v817 = v806 + v815, v1040 < v821))
          {
            *(_WORD *)(v801 + 2) = v817;
            unsigned int v806 = v817;
            continue;
          }
          break;
        }
        unsigned int v1333 = v815;
        int v1331 = sub_100164A18(v876, v821, v931);
        int v1094 = sub_100164A18(v985, v821, v1040);
        uint64_t v814 = -(uint64_t)(v808 & 0xFFFFFFF8);
        uint64_t v813 = v808 & 0xFFFFFFF8;
        uint64_t v801 = v1329;
        v800.i64[0] = 0xFFFF0000FFFFLL;
        v800.i64[1] = 0xFFFF0000FFFFLL;
        uint32x4_t v799 = 0uLL;
        v807 += (v1331 * v1333 + 0x4000) >> 15;
        *(_WORD *)uint64_t v1329 = v807;
        v806 += (v1094 * v1333 + 0x4000) >> 15;
        *(_WORD *)(v1329 + 2) = v806;
        int v815 = v1333 >> 1;
        int v809 = v1336 + 1;
        if (v1336 != 4) {
          continue;
        }
        break;
      }
      if (v808 >= 8)
      {
        int16x8_t v793 = vdupq_n_s16(v807);
        int16x8_t v1096 = vdupq_n_s16(v806);
        if (v808 >= 0x10)
        {
          int32x4_t v1097 = 0uLL;
          v1098 = v811;
          v1099 = v810;
          v1100 = v805;
          uint64_t v1101 = v808 & 0xFFFFFFF0;
          int32x4_t v1102 = 0uLL;
          int32x4_t v1103 = 0uLL;
          int32x4_t v1104 = 0uLL;
          do
          {
            int8x16_t v1105 = *v1098++;
            int16x8_t v1106 = vmovl_s8(*(int8x8_t *)v1105.i8);
            int16x8_t v1107 = vmovl_high_s8(v1105);
            int8x16_t v1108 = *v1099++;
            int16x8_t v1110 = *v1100;
            int16x8_t v1109 = v1100[1];
            v1100 += 2;
            uint16x8_t v1111 = (uint16x8_t)vmlsq_s16(vmlsq_s16(v1110, v1096, vmovl_s8(*(int8x8_t *)v1108.i8)), v793, v1106);
            uint16x8_t v1112 = (uint16x8_t)vmlsq_s16(vmlsq_s16(v1109, v1096, vmovl_high_s8(v1108)), v793, v1107);
            int8x16_t v1113 = (int8x16_t)vmovl_high_u16(v1112);
            int8x16_t v1114 = (int8x16_t)vmovl_high_u16(v1111);
            int32x4_t v1115 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v1112.i8);
            int32x4_t v1116 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v1111.i8);
            int8x16_t v1117 = (int8x16_t)vnegq_s32(v1116);
            int8x16_t v1118 = (int8x16_t)vnegq_s32(v1115);
            int8x16_t v1119 = (int8x16_t)vsubw_high_u16((uint32x4_t)0, v1111);
            int8x16_t v1120 = (int8x16_t)vsubw_high_u16((uint32x4_t)0, v1112);
            int32x4_t v1104 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v1120, v800), (uint32x4_t)v1113), v1113, v1120), v800), v1104);
            int32x4_t v1102 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v1119, v800), (uint32x4_t)v1114), v1114, v1119), v800), v1102);
            int32x4_t v1103 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v1118, v800), (uint32x4_t)v1115), (int8x16_t)v1115, v1118), v800), v1103);
            int32x4_t v1097 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v1117, v800), (uint32x4_t)v1116), (int8x16_t)v1116, v1117), v800), v1097);
            v1101 -= 16;
          }
          while (v1101);
          unsigned int v1095 = vaddvq_s32(vaddq_s32(vaddq_s32(v1097, v1103), vaddq_s32(v1102, v1104)));
          if (v812 == v808) {
            goto LABEL_891;
          }
          if ((v808 & 8) == 0) {
            goto LABEL_887;
          }
        }
        else
        {
          unsigned int v1095 = 0;
          uint64_t v812 = 0;
        }
        int32x4_t v1121 = 0uLL;
        int32x4_t v1122 = (int32x4_t)v1095;
        uint64_t v1123 = v812 - v1327;
        v1124 = (int16x8_t *)((char *)v805 + 2 * v812);
        v1125 = (int8x8_t *)&v810->i8[v812];
        v1126 = (int8x8_t *)&v811->i8[v812];
        do
        {
          int8x8_t v1127 = *v1126++;
          int16x8_t v1128 = vmovl_s8(v1127);
          int8x8_t v1129 = *v1125++;
          int8x8_t v1130 = v1129;
          int16x8_t v1131 = *v1124++;
          uint16x8_t v1132 = (uint16x8_t)vmlsq_s16(vmlsq_s16(v1131, v1096, vmovl_s8(v1130)), v793, v1128);
          int8x16_t v1133 = (int8x16_t)vmovl_high_u16(v1132);
          int32x4_t v1134 = (int32x4_t)vmovl_u16(*(uint16x4_t *)v1132.i8);
          int8x16_t v1135 = (int8x16_t)vnegq_s32(v1134);
          int8x16_t v1136 = (int8x16_t)vsubw_high_u16((uint32x4_t)0, v1132);
          int32x4_t v1121 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v1136, v800), (uint32x4_t)v1133), v1133, v1136), v800), v1121);
          int32x4_t v1122 = vaddq_s32((int32x4_t)vandq_s8(vbslq_s8((int8x16_t)vcgtq_u32((uint32x4_t)vandq_s8(v1135, v800), (uint32x4_t)v1134), (int8x16_t)v1134, v1135), v800), v1122);
          v1123 += 8;
        }
        while (v1123);
        int16x8_t v793 = (int16x8_t)vaddq_s32(v1122, v1121);
        v793.i32[0] = vaddvq_s32((int32x4_t)v793);
        unsigned int v1095 = v793.i32[0];
        uint64_t v812 = v808 & 0xFFFFFFF8;
        if (v1327 != v808) {
          goto LABEL_887;
        }
      }
      else
      {
        uint64_t v812 = 0;
        unsigned int v1095 = 0;
LABEL_887:
        uint64_t v1137 = v808 - v812;
        v1138 = &v810->i8[v812];
        v1139 = &v811->i8[v812];
        v1140 = &v805->i16[v812];
        do
        {
          __int16 v1142 = *v1139++;
          __int16 v1141 = v1142;
          __int16 v1144 = *v1138++;
          __int16 v1143 = v1144;
          __int16 v1145 = *v1140++;
          unsigned int v1146 = (unsigned __int16)(v1145 - v806 * v1143 - v807 * v1141);
          if (v1146 >= (unsigned __int16)-(__int16)v1146) {
            unsigned int v1146 = -v1146;
          }
          v1095 += (unsigned __int16)v1146;
          --v1137;
        }
        while (v1137);
      }
LABEL_891:
      *(_DWORD *)(v801 + 8) = v1095;
      int v1147 = *((unsigned __int8 *)*v1315 + 4);
      v793.i16[0] = **v1315;
      v793.i16[2] = (*v1315)[1];
      *((_DWORD *)v1315 + 2) = -87163 * *((_DWORD *)*v1315 + 4)
                             + ((402 * *((_DWORD *)*v1315 + 2) + 32) >> 6);
      unint64_t v397 = v1307;
      *(_DWORD *)(v1308 + 136 * v1307 + 120) = 3;
      if (v1147)
      {
        v1148 = (int32x2_t *)(v1308 + 136 * v1307);
        uint64_t v1149 = (uint64_t)*v1317;
        v1150.i32[0] = *v1323;
        v1150.i32[1] = *v1319;
        int32x2_t v1151 = vneg_s32(vshr_n_s32(vadd_s32(vsra_n_s32((int32x2_t)vand_s8(*(int8x8_t *)v793.i8, (int8x8_t)0xFFFF0000FFFFLL), vadd_s32(vsub_s32(*v1317, *(int32x2_t *)v1150.i8), (int32x2_t)0x1000000010), 5uLL), (int32x2_t)0x2000000020), 6uLL));
        v1148[14] = v1151;
        v1148[15].i8[4] = 0;
        v1152 = v1312;
        int32x4_t *v1313 = vnegq_s32(*v1313);
        v1150.i64[1] = v1149;
        *(int32x4_t *)v1323 = vnegq_s32(v1150);
        int v1153 = *v1312;
        if ((*v1312 & 0x80000000) != 0) {
          int v1154 = v1153 + 0x4000;
        }
        else {
          int v1154 = v1153 - 0x4000;
        }
        _DWORD *v1312 = v1154;
      }
      else
      {
        v1155 = (int32x2_t *)(v1308 + 136 * v1307);
        v1156.i32[0] = *v1323;
        v1156.i32[1] = *v1319;
        int32x2_t v1151 = vshr_n_s32(vadd_s32(vsra_n_s32((int32x2_t)vand_s8(*(int8x8_t *)v793.i8, (int8x8_t)0xFFFF0000FFFFLL), vadd_s32(vsub_s32(*v1317, v1156), (int32x2_t)0x1000000010), 5uLL), (int32x2_t)0x2000000020), 6uLL);
        v1155[14] = v1151;
        v1155[15].i8[4] = 1;
        v1152 = v1312;
      }
      v1157 = (int *)(v1308 + 136 * v1307 + 112);
      int v1158 = v1151.i32[0];
      if (v1151.i32[0] >= 513)
      {
        if (v1151.i32[0] >= 1536) {
          int v1159 = 1536;
        }
        else {
          int v1159 = v1151.i32[0];
        }
        int v1158 = v1151.i32[0] - ((v1151.i32[0] - v1159 + 1023) & 0xFFFFFC00) - 1024;
        int *v1157 = v1158;
      }
      if (v1158 <= -513)
      {
        if (v1158 <= -1536) {
          int v1160 = -1536;
        }
        else {
          int v1160 = v1158;
        }
        int *v1157 = v1158 + ((v1160 - v1158 + 1023) & 0xFFFFFC00) + 1024;
      }
      v1161 = (signed int *)(v1308 + 136 * v1307 + 116);
      signed int v1162 = v1151.i32[1];
      if (v1151.i32[1] >= 513)
      {
        if (v1151.i32[1] >= 1536) {
          int v1163 = 1536;
        }
        else {
          int v1163 = v1151.i32[1];
        }
        signed int v1162 = v1151.i32[1] - ((v1151.i32[1] - v1163 + 1023) & 0xFFFFFC00) - 1024;
        signed int *v1161 = v1162;
      }
      if (v1162 <= -513)
      {
        if (v1162 <= -1536) {
          int v1164 = -1536;
        }
        else {
          int v1164 = v1162;
        }
        signed int *v1161 = v1162 + ((v1164 - v1162 + 1023) & 0xFFFFFC00) + 1024;
      }
      uint64_t v4 = a1;
      int v1165 = *(_DWORD *)(*(void *)(a1 + 176) + 8);
      *(_DWORD *)(v1308 + 136 * v1307 + 4) = v1165;
      if (v1165 <= -1769473)
      {
        _DWORD *v1306 = 2;
        *(_DWORD *)(v1308 + 136 * v1307 + 8) = *v1152;
      }
LABEL_13:
      unint64_t v9 = v397 + 1;
      if (v9 >= *(unsigned int *)(v4 + 40)) {
        goto LABEL_921;
      }
      continue;
    }
    return 2;
  }
}

void sub_10016E984()
{
}

uint64_t sub_10016E99C(uint64_t a1, __int16 a2, int a3)
{
  int v3 = 0;
  LOWORD(v4) = 0;
  int v5 = (__int16)(a3
               + 160
               * (((a3 >> 15) & 1)
                + (unsigned __int16)((a3 & ~(unsigned __int16)(a3 >> 31)) - (((a3 >> 15) & 1) + a3))
                / 0xA0u));
  if (v5 <= 159) {
    int v5 = 159;
  }
  unsigned __int16 v6 = a3
     + 160
     * (((a3 >> 15) & 1)
      + (unsigned __int16)((a3 & ~(unsigned __int16)(a3 >> 31)) - (((a3 >> 15) & 1) + a3)) / 0xA0u)
     - 160 * ((unsigned __int16)((26215 * v5) >> 16) >> 6);
  int v7 = v6;
  int v8 = (unsigned __int16)(v6 + 1);
  int v9 = (unsigned __int16)(v6 + 2);
  int v10 = (unsigned __int16)(v6 + 3);
  int v11 = (unsigned __int16)(v6 + 4);
  int v12 = (unsigned __int16)(v6 + 5);
  int v13 = (unsigned __int16)(v6 + 6);
  int v14 = (unsigned __int16)(v6 + 7);
  int v15 = (unsigned __int16)(v6 + 8);
  int v16 = (unsigned __int16)(v6 + 9);
  int v17 = (unsigned __int16)(v6 + 10);
  int v18 = (unsigned __int16)(v6 + 11);
  int v19 = (unsigned __int16)(v6 + 12);
  int v20 = (unsigned __int16)(v6 + 13);
  int v21 = (unsigned __int16)(v6 + 14);
  int v22 = (unsigned __int16)(v6 + 15);
  do
  {
    unsigned int v23 = 160 * (unsigned __int16)(v3 + a2);
    unsigned int v24 = v23 + v7;
    if (v7 == 159) {
      unsigned int v25 = 160 * (unsigned __int16)(v3 + a2);
    }
    else {
      unsigned int v25 = v24 + 1;
    }
    unsigned int v26 = *(unsigned __int16 *)(a1 + 2 * v25);
    unsigned int v27 = v23 + 160;
    __int16 v28 = *(_WORD *)(a1 + 2 * v24);
    if (v26 <= *(unsigned __int16 *)(a1 + 2 * (v23 + 160 + v7))) {
      LOWORD(v26) = *(_WORD *)(a1 + 2 * (v23 + 160 + v7));
    }
    unsigned int v29 = (unsigned __int16)(v26 + v28);
    unsigned int v4 = (unsigned __int16)v4;
    if (v29 > (unsigned __int16)v4) {
      unsigned int v4 = v29;
    }
    unsigned int v30 = v23 + v8;
    if (v8 == 159) {
      unsigned int v31 = 160 * (unsigned __int16)(v3 + a2);
    }
    else {
      unsigned int v31 = v30 + 1;
    }
    unsigned int v32 = *(unsigned __int16 *)(a1 + 2 * v31);
    __int16 v33 = *(_WORD *)(a1 + 2 * v30);
    if (v32 <= *(unsigned __int16 *)(a1 + 2 * (v27 + v8))) {
      LOWORD(v32) = *(_WORD *)(a1 + 2 * (v27 + v8));
    }
    unsigned int v34 = (unsigned __int16)(v32 + v33);
    if (v34 > v4) {
      unsigned int v4 = v34;
    }
    unsigned int v35 = v23 + v9;
    if (v9 == 159) {
      unsigned int v36 = 160 * (unsigned __int16)(v3 + a2);
    }
    else {
      unsigned int v36 = v35 + 1;
    }
    unsigned int v37 = *(unsigned __int16 *)(a1 + 2 * v36);
    __int16 v38 = *(_WORD *)(a1 + 2 * v35);
    if (v37 <= *(unsigned __int16 *)(a1 + 2 * (v27 + v9))) {
      LOWORD(v37) = *(_WORD *)(a1 + 2 * (v27 + v9));
    }
    unsigned int v39 = (unsigned __int16)(v37 + v38);
    if (v39 > v4) {
      unsigned int v4 = v39;
    }
    unsigned int v40 = v23 + v10;
    if (v10 == 159) {
      unsigned int v41 = 160 * (unsigned __int16)(v3 + a2);
    }
    else {
      unsigned int v41 = v40 + 1;
    }
    unsigned int v42 = *(unsigned __int16 *)(a1 + 2 * v41);
    __int16 v43 = *(_WORD *)(a1 + 2 * v40);
    if (v42 <= *(unsigned __int16 *)(a1 + 2 * (v27 + v10))) {
      LOWORD(v42) = *(_WORD *)(a1 + 2 * (v27 + v10));
    }
    unsigned int v44 = (unsigned __int16)(v42 + v43);
    if (v44 > v4) {
      unsigned int v4 = v44;
    }
    unsigned int v45 = v23 + v11;
    if (v11 == 159) {
      unsigned int v46 = 160 * (unsigned __int16)(v3 + a2);
    }
    else {
      unsigned int v46 = v45 + 1;
    }
    unsigned int v47 = *(unsigned __int16 *)(a1 + 2 * v46);
    __int16 v48 = *(_WORD *)(a1 + 2 * v45);
    if (v47 <= *(unsigned __int16 *)(a1 + 2 * (v27 + v11))) {
      LOWORD(v47) = *(_WORD *)(a1 + 2 * (v27 + v11));
    }
    unsigned int v49 = (unsigned __int16)(v47 + v48);
    if (v49 > v4) {
      unsigned int v4 = v49;
    }
    unsigned int v50 = v23 + v12;
    if (v12 == 159) {
      unsigned int v51 = 160 * (unsigned __int16)(v3 + a2);
    }
    else {
      unsigned int v51 = v50 + 1;
    }
    unsigned int v52 = *(unsigned __int16 *)(a1 + 2 * v51);
    __int16 v53 = *(_WORD *)(a1 + 2 * v50);
    if (v52 <= *(unsigned __int16 *)(a1 + 2 * (v27 + v12))) {
      LOWORD(v52) = *(_WORD *)(a1 + 2 * (v27 + v12));
    }
    unsigned int v54 = (unsigned __int16)(v52 + v53);
    if (v54 > v4) {
      unsigned int v4 = v54;
    }
    unsigned int v55 = v23 + v13;
    if (v13 == 159) {
      unsigned int v56 = 160 * (unsigned __int16)(v3 + a2);
    }
    else {
      unsigned int v56 = v55 + 1;
    }
    unsigned int v57 = *(unsigned __int16 *)(a1 + 2 * v56);
    __int16 v58 = *(_WORD *)(a1 + 2 * v55);
    if (v57 <= *(unsigned __int16 *)(a1 + 2 * (v27 + v13))) {
      LOWORD(v57) = *(_WORD *)(a1 + 2 * (v27 + v13));
    }
    unsigned int v59 = (unsigned __int16)(v57 + v58);
    if (v59 > v4) {
      unsigned int v4 = v59;
    }
    unsigned int v60 = v23 + v14;
    if (v14 == 159) {
      unsigned int v61 = 160 * (unsigned __int16)(v3 + a2);
    }
    else {
      unsigned int v61 = v60 + 1;
    }
    unsigned int v62 = *(unsigned __int16 *)(a1 + 2 * v61);
    __int16 v63 = *(_WORD *)(a1 + 2 * v60);
    if (v62 <= *(unsigned __int16 *)(a1 + 2 * (v27 + v14))) {
      LOWORD(v62) = *(_WORD *)(a1 + 2 * (v27 + v14));
    }
    unsigned int v64 = (unsigned __int16)(v62 + v63);
    if (v64 > v4) {
      unsigned int v4 = v64;
    }
    unsigned int v65 = v23 + v15;
    if (v15 == 159) {
      unsigned int v66 = 160 * (unsigned __int16)(v3 + a2);
    }
    else {
      unsigned int v66 = v65 + 1;
    }
    unsigned int v67 = *(unsigned __int16 *)(a1 + 2 * v66);
    __int16 v68 = *(_WORD *)(a1 + 2 * v65);
    if (v67 <= *(unsigned __int16 *)(a1 + 2 * (v27 + v15))) {
      LOWORD(v67) = *(_WORD *)(a1 + 2 * (v27 + v15));
    }
    unsigned int v69 = (unsigned __int16)(v67 + v68);
    if (v69 > v4) {
      unsigned int v4 = v69;
    }
    unsigned int v70 = v23 + v16;
    if (v16 == 159) {
      unsigned int v71 = 160 * (unsigned __int16)(v3 + a2);
    }
    else {
      unsigned int v71 = v70 + 1;
    }
    unsigned int v72 = *(unsigned __int16 *)(a1 + 2 * v71);
    __int16 v73 = *(_WORD *)(a1 + 2 * v70);
    if (v72 <= *(unsigned __int16 *)(a1 + 2 * (v27 + v16))) {
      LOWORD(v72) = *(_WORD *)(a1 + 2 * (v27 + v16));
    }
    unsigned int v74 = (unsigned __int16)(v72 + v73);
    if (v74 > v4) {
      unsigned int v4 = v74;
    }
    unsigned int v75 = v23 + v17;
    if (v17 == 159) {
      unsigned int v76 = 160 * (unsigned __int16)(v3 + a2);
    }
    else {
      unsigned int v76 = v75 + 1;
    }
    unsigned int v77 = *(unsigned __int16 *)(a1 + 2 * v76);
    __int16 v78 = *(_WORD *)(a1 + 2 * v75);
    if (v77 <= *(unsigned __int16 *)(a1 + 2 * (v27 + v17))) {
      LOWORD(v77) = *(_WORD *)(a1 + 2 * (v27 + v17));
    }
    unsigned int v79 = (unsigned __int16)(v77 + v78);
    if (v79 > v4) {
      unsigned int v4 = v79;
    }
    unsigned int v80 = v23 + v18;
    if (v18 == 159) {
      unsigned int v81 = 160 * (unsigned __int16)(v3 + a2);
    }
    else {
      unsigned int v81 = v80 + 1;
    }
    unsigned int v82 = *(unsigned __int16 *)(a1 + 2 * v81);
    __int16 v83 = *(_WORD *)(a1 + 2 * v80);
    if (v82 <= *(unsigned __int16 *)(a1 + 2 * (v27 + v18))) {
      LOWORD(v82) = *(_WORD *)(a1 + 2 * (v27 + v18));
    }
    unsigned int v84 = (unsigned __int16)(v82 + v83);
    if (v84 > v4) {
      unsigned int v4 = v84;
    }
    unsigned int v85 = v23 + v19;
    if (v19 == 159) {
      unsigned int v86 = 160 * (unsigned __int16)(v3 + a2);
    }
    else {
      unsigned int v86 = v85 + 1;
    }
    unsigned int v87 = *(unsigned __int16 *)(a1 + 2 * v86);
    __int16 v88 = *(_WORD *)(a1 + 2 * v85);
    if (v87 <= *(unsigned __int16 *)(a1 + 2 * (v27 + v19))) {
      LOWORD(v87) = *(_WORD *)(a1 + 2 * (v27 + v19));
    }
    unsigned int v89 = (unsigned __int16)(v87 + v88);
    if (v89 > v4) {
      unsigned int v4 = v89;
    }
    unsigned int v90 = v23 + v20;
    if (v20 == 159) {
      unsigned int v91 = 160 * (unsigned __int16)(v3 + a2);
    }
    else {
      unsigned int v91 = v90 + 1;
    }
    unsigned int v92 = *(unsigned __int16 *)(a1 + 2 * v91);
    __int16 v93 = *(_WORD *)(a1 + 2 * v90);
    if (v92 <= *(unsigned __int16 *)(a1 + 2 * (v27 + v20))) {
      LOWORD(v92) = *(_WORD *)(a1 + 2 * (v27 + v20));
    }
    unsigned int v94 = (unsigned __int16)(v92 + v93);
    if (v94 > v4) {
      unsigned int v4 = v94;
    }
    if (v21 == 159) {
      unsigned int v95 = 160 * (unsigned __int16)(v3 + a2);
    }
    else {
      unsigned int v95 = v23 + v21 + 1;
    }
    unsigned int v96 = *(unsigned __int16 *)(a1 + 2 * v95);
    if (v96 <= *(unsigned __int16 *)(a1 + 2 * (v27 + v21))) {
      LOWORD(v96) = *(_WORD *)(a1 + 2 * (v27 + v21));
    }
    unsigned int v97 = (unsigned __int16)(v96 + *(_WORD *)(a1 + 2 * (v23 + v21)));
    unsigned int v98 = v23 + v22;
    if (v97 > v4) {
      unsigned int v4 = v97;
    }
    if (v22 != 159) {
      unsigned int v23 = v98 + 1;
    }
    unsigned int v99 = *(unsigned __int16 *)(a1 + 2 * v23);
    unsigned int v100 = *(unsigned __int16 *)(a1 + 2 * (v27 + v22));
    if (v99 <= v100) {
      LOWORD(v99) = v100;
    }
    unsigned int v101 = (unsigned __int16)(v99 + *(_WORD *)(a1 + 2 * v98));
    if (v101 > v4) {
      LOWORD(v4) = v101;
    }
    ++v3;
  }
  while (v3 != 8);
  return (unsigned __int16)v4;
}

uint64_t sub_10016EDFC(uint64_t a1, unsigned int a2)
{
  if (!*(unsigned char *)(a1 + 16)) {
    return 5;
  }
  uint64_t v3 = *(void *)(a1 + 240);
  if (!v3) {
    return 3;
  }
  if (a2 > 3) {
    return 2;
  }
  int v5 = *(_DWORD *)(a1 + 92);
  int v7 = *(_DWORD *)(a1 + 80);
  int v6 = *(_DWORD *)(a1 + 84);
  uint64_t v8 = *(unsigned int *)(a1 + 88);
  uint64_t v9 = *(void *)(a1 + 56);
  int v10 = (_DWORD *)(a1 + 92 + 48 * a2);
  *int v10 = v5;
  switch(a2)
  {
    case 0u:
      uint64_t result = 0;
      int v12 = *(unsigned __int16 *)(a1 + 250);
      int v13 = *(unsigned __int16 *)(a1 + 248);
      *(_DWORD *)(a1 + 80) = v12;
      *(_DWORD *)(a1 + 84) = v13;
      *(_DWORD *)(a1 + 72) = v12;
      *(_DWORD *)(a1 + 76) = v13;
      int v14 = *(unsigned __int16 *)(a1 + 252);
      *(void *)(a1 + 56) = v3;
      *(void *)(a1 + 64) = v3;
      int v15 = *(_DWORD *)(a1 + 256);
      *(_DWORD *)(a1 + 88) = v14;
      *(_DWORD *)(a1 + 92) = v15;
      return result;
    case 1u:
      if (!*(void *)(a1 + 48 * a2 + 64))
      {
        int v16 = (_DWORD *)(a1 + 48 * a2);
        v16[20] = v7 >> 1;
        v16[21] = v6 >> 1;
        int v17 = 2 * *(unsigned __int16 *)(a1 + 42);
        v16[18] = v17 + (v7 >> 1);
        v16[19] = v17 + (v6 >> 1);
        operator new[]();
      }
      if (!v9) {
        return 0;
      }
      uint64_t v18 = a1 + 48 * a2;
      uint64_t v19 = *(void *)(v18 + 56);
      unsigned int v20 = (unsigned __int16)v8;
      unsigned int v21 = (unsigned __int16)*(_DWORD *)(v18 + 88);
      unsigned int v22 = (unsigned __int16)(v7 >> 1);
      unsigned int v23 = (unsigned __int16)(v6 >> 5);
      uint64_t result = v9;
      if (v5 != 1) {
        goto LABEL_36;
      }
      goto LABEL_13;
    case 2u:
      if (!*(void *)(a1 + 48 * a2 + 64))
      {
        unsigned int v24 = (_DWORD *)(a1 + 48 * a2);
        v24[20] = v7 / 3;
        v24[21] = v6 / 3;
        int v25 = 2 * *(unsigned __int16 *)(a1 + 42);
        int v26 = v25 + v6 / 3;
        v24[18] = v25 + v7 / 3;
        v24[19] = v26;
        v24[22] = v26 * v5;
        operator new[]();
      }
      if (!v9) {
        return 0;
      }
      if (v5 != 1)
      {
        sub_100168148(v9, (unsigned __int16)v8, *(void *)(a1 + 48 * a2 + 56), *(unsigned __int16 *)(a1 + 48 * a2 + 88), *(unsigned __int16 *)(a1 + 48 * a2 + 80), (unsigned __int16)(*(_DWORD *)(a1 + 48 * a2 + 84) >> 3));
        return 0;
      }
      int v27 = *(_DWORD *)(a1 + 48 * a2 + 80);
      if (v27 < 1) {
        return 0;
      }
      int v28 = 0;
      while (1)
      {
        int v29 = v27 >= 0x64 ? 100 : v27;
        uint64_t v30 = v9;
        uint64_t v31 = v8;
        downsample_3x3_3Hx24W_N64();
        unsigned int v32 = *(unsigned int **)(a1 + 8);
        if (v32)
        {
          __int16 v33 = (void (*)(void))*((void *)v32 + 1);
          if (v33) {
            v33(*v32);
          }
          unsigned int v34 = (unsigned char *)*((void *)v32 + 2);
          if (v34)
          {
            if (*v34) {
              break;
            }
          }
        }
        uint64_t result = 0;
        v27 -= v29;
        v28 += v29;
        uint64_t v8 = v31;
        uint64_t v9 = v30;
        if (v27 < 1) {
          return result;
        }
      }
      return 9;
    case 3u:
      int v35 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 72))(a1, 2);
      if (!*(void *)(a1 + 48 * a2 + 64))
      {
        if (!*(void *)(a1 + 48 * v35 + 56)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, 1);
        }
        unsigned int v36 = (_DWORD *)(a1 + 48 * a2);
        v36[20] = v7 >> 2;
        v36[21] = v6 >> 2;
        int v37 = 2 * *(unsigned __int16 *)(a1 + 42);
        int v38 = v37 + (v6 >> 2);
        v36[18] = v37 + (v7 >> 2);
        v36[19] = v38;
        v36[22] = *v10 * v38;
        operator new[]();
      }
      uint64_t result = *(void *)(a1 + 48 * v35 + 56);
      if (!result) {
        return result;
      }
      uint64_t v39 = a1 + 48 + 48 * a2;
      uint64_t v19 = *(void *)(v39 + 8);
      unsigned int v20 = (unsigned __int16)*(_DWORD *)(a1 + 48 + 48 * v35 + 40);
      unsigned int v21 = (unsigned __int16)*(_DWORD *)(v39 + 40);
      unsigned int v22 = (unsigned __int16)(v7 >> 2);
      unsigned int v23 = (unsigned __int16)(v6 >> 6);
      if (*v10 == 1) {
LABEL_13:
      }
        downsample_2x2_2Hx32W_N64();
      else {
LABEL_36:
      }
        sub_100167E14(result, v20, v19, v21, v22, v23);
      return 0;
    default:
      return 0;
  }
}

uint64_t sub_10016F2D8(uint64_t a1, int a2)
{
  if ((a2 - 2) < 3) {
    return (a2 - 2) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_10016F2EC(uint64_t a1, uint64_t a2, int a3, int a4)
{
  if (!a2) {
    return 2;
  }
  if (!*(unsigned char *)(a1 + 16)) {
    return 5;
  }
  if (a3 * (int)a2 >= *(unsigned __int16 *)(a1 + 248)
    || a4 * (int)a2 >= *(unsigned __int16 *)(a1 + 250))
  {
    return 2;
  }
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 72))(a1, a2);
  *(unsigned char *)(a1 + 48 * v5 + 48) = 1;
  if (!*(void *)(a1 + 240)
    || *(void *)(a1 + 48 * v5 + 64)
    || (uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)a1 + 80))(a1, v5),
        !result))
  {
    if (*(_DWORD *)(a1 + 36) < (*(_DWORD *)(a1 + 32) + 1)) {
      operator new[]();
    }
    operator new();
  }
  return result;
}

uint64_t sub_10016F4C8(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 3;
  }
  if (!*(unsigned char *)(a1 + 16)) {
    return 5;
  }
  *(void *)(a1 + 240) = a2;
  if (*(unsigned char *)(a1 + 48))
  {
    (*(void (**)(uint64_t, void))(*(void *)a1 + 80))(a1, 0);
    uint64_t v3 = *(unsigned int **)(a1 + 8);
    if (v3)
    {
      unsigned int v4 = (void (*)(void))*((void *)v3 + 1);
      if (v4) {
        v4(*v3);
      }
      int v5 = (unsigned char *)*((void *)v3 + 2);
      if (v5)
      {
        if (*v5) {
          return 9;
        }
      }
    }
  }
  if (*(unsigned char *)(a1 + 96))
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, 1);
    int v6 = *(unsigned int **)(a1 + 8);
    if (v6)
    {
      int v7 = (void (*)(void))*((void *)v6 + 1);
      if (v7) {
        v7(*v6);
      }
      uint64_t v8 = (unsigned char *)*((void *)v6 + 2);
      if (v8)
      {
        if (*v8) {
          return 9;
        }
      }
    }
  }
  if (*(unsigned char *)(a1 + 144))
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, 2);
    uint64_t v9 = *(unsigned int **)(a1 + 8);
    if (v9)
    {
      int v10 = (void (*)(void))*((void *)v9 + 1);
      if (v10) {
        v10(*v9);
      }
      int v11 = (unsigned char *)*((void *)v9 + 2);
      if (v11)
      {
        if (*v11) {
          return 9;
        }
      }
    }
  }
  if (!*(unsigned char *)(a1 + 192)) {
    return 0;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, 3);
  int v12 = *(unsigned int **)(a1 + 8);
  if (!v12) {
    return 0;
  }
  int v13 = (void (*)(void))*((void *)v12 + 1);
  if (v13) {
    v13(*v12);
  }
  int v14 = (unsigned char *)*((void *)v12 + 2);
  if (v14 && *v14) {
    return 9;
  }
  else {
    return 0;
  }
}

uint64_t sub_10016F688(uint64_t a1, unsigned int a2, void *a3, _DWORD *a4, _DWORD *a5, _DWORD *a6, _DWORD *a7, _DWORD *a8)
{
  if (!*(unsigned char *)(a1 + 16)) {
    return 5;
  }
  if (!a3) {
    return 3;
  }
  if (*(_DWORD *)(a1 + 32) <= a2) {
    return 2;
  }
  int v15 = *(unsigned __int8 **)(*(void *)(a1 + 24) + 8 * a2);
  int v16 = (*(uint64_t (**)(uint64_t, void))(*(void *)a1 + 72))(a1, *v15);
  uint64_t result = 0;
  uint64_t v18 = a1 + 48 * v16;
  *a3 = *(void *)(v18 + 64);
  *a4 = *(_DWORD *)(v18 + 72);
  *a5 = *(_DWORD *)(v18 + 76);
  *a6 = *((unsigned __int16 *)v15 + 1) + ((*(_DWORD *)(v18 + 76) - *(_DWORD *)(v18 + 84)) >> 1);
  *a7 = *((unsigned __int16 *)v15 + 2) + ((*(_DWORD *)(v18 + 72) - *(_DWORD *)(v18 + 80)) >> 1);
  *a8 = *(_DWORD *)(v18 + 92);
  return result;
}

uint64_t sub_10016F79C(uint64_t a1, unsigned int a2, void *a3, _WORD *a4, __int32 *a5)
{
  if (!*(unsigned char *)(a1 + 16)) {
    return 5;
  }
  if (!a3) {
    return 3;
  }
  if (*(_DWORD *)(a1 + 32) <= a2) {
    return 2;
  }
  uint64_t v9 = *(unsigned __int8 **)(*(void *)(a1 + 24) + 8 * a2);
  int v10 = (*(uint64_t (**)(uint64_t, void))(*(void *)a1 + 72))(a1, *v9);
  uint64_t result = 0;
  int v12 = (int32x2_t *)(a1 + 48 * v10);
  v13.i32[0] = *((unsigned __int16 *)v9 + 1);
  v13.i32[1] = *((unsigned __int16 *)v9 + 2);
  int32x2_t v14 = vsra_n_s32(vrev64_s32(vadd_s32(v13, (int32x2_t)0x3F0000003FLL)), vsub_s32(v12[9], v12[10]), 1uLL);
  __int32 v16 = v12[11].i32[0];
  __int32 v15 = v12[11].i32[1];
  *a3 = *(void *)&v12[8] + ((v14.i32[1] + v14.i32[0] * v16) * v15);
  *a4 = v16;
  *a5 = v15;
  return result;
}

void sub_10016F89C(uint64_t a1)
{
  sub_10016F8D4(a1);

  operator delete();
}

uint64_t sub_10016F8D4(uint64_t result)
{
  *(void *)uint64_t result = off_100249118;
  if (*(unsigned char *)(result + 40) && *(void *)(result + 64)) {
    operator delete[]();
  }
  if (*(void *)(result + 112)) {
    operator delete[]();
  }
  if (*(void *)(result + 160)) {
    operator delete[]();
  }
  if (*(void *)(result + 208)) {
    operator delete[]();
  }
  *(void *)uint64_t result = off_1002491A8;
  unint64_t v1 = *(unsigned int *)(result + 32);
  if (v1)
  {
    for (unint64_t i = 0; i < v1; ++i)
    {
      if (*(void *)(*(void *)(result + 24) + 8 * i)) {
        operator delete();
      }
    }
  }
  if (*(void *)(result + 24)) {
    operator delete[]();
  }
  return result;
}

unint64_t sub_10016FA14(unsigned int a1)
{
  if ((int)a1 >= 0x10000)
  {
    if (HIBYTE(a1))
    {
      unsigned int v1 = a1 >> 28;
      if (a1 >> 26) {
        char v2 = 20;
      }
      else {
        char v2 = 18;
      }
      if (a1 >> 26) {
        char v3 = 6;
      }
      else {
        char v3 = 5;
      }
      if (a1 >> 30) {
        char v4 = 24;
      }
      else {
        char v4 = 22;
      }
      if (a1 >> 30) {
        char v5 = 8;
      }
      else {
        char v5 = 7;
      }
      BOOL v6 = v1 == 0;
      if (v1) {
        char v7 = v4;
      }
      else {
        char v7 = v2;
      }
      if (v6) {
        char v8 = v3;
      }
      else {
        char v8 = v5;
      }
      unsigned int v9 = byte_1001C8804[(unint64_t)a1 >> v7] << v8;
      if (v9 < 0x1000)
      {
        char v10 = 0;
        unsigned int v12 = v9;
      }
      else
      {
        char v10 = 0;
        unsigned int v11 = v9;
        do
        {
          unsigned int v12 = (v11 + 2) >> 2;
          v10 += 2;
          BOOL v13 = v11 > 0x3FFD;
          unsigned int v11 = v12;
        }
        while (v13);
      }
      int v18 = v9 | 1;
      if (v12 < 0x2CC)
      {
        unsigned int v19 = v12;
      }
      else
      {
        do
        {
          unsigned int v19 = (v12 + 1) >> 1;
          ++v10;
          BOOL v13 = v12 > 0x596;
          unsigned int v12 = v19;
        }
        while (v13);
      }
      unsigned int v24 = v19 - 512;
      int v25 = v18
          + ((int)(((int)(((v24 * v24 + 64) >> 7)
                        - 4 * v24
                        + (1 << v10 >> 1)
                        - ((int)(((v24 * v24 + 64) >> 7) * v24 + 256) >> 9)
                        + 2048) >> v10)
                 * (a1 >> 10)) >> 10);
      int v26 = v25 >> 1;
      if (v25 < 0x2000)
      {
        char v27 = 0;
        signed int v29 = v26;
      }
      else
      {
        char v27 = 0;
        unsigned int v28 = v26;
        do
        {
          signed int v29 = (v28 + 2) >> 2;
          v27 += 2;
          BOOL v13 = v28 > 0x3FFD;
          unsigned int v28 = v29;
        }
        while (v13);
      }
      int v30 = v26 + 1;
      if (v29 < 716)
      {
        unsigned int v31 = v29;
      }
      else
      {
        do
        {
          unsigned int v31 = (v29 + 1) >> 1;
          ++v27;
          BOOL v13 = v29 > 0x596;
          signed int v29 = v31;
        }
        while (v13);
      }
      unsigned int v32 = v31 - 512;
      int v33 = v30
          + ((int)(((int)(((v32 * v32 + 64) >> 7)
                        - 4 * v32
                        + (1 << v27 >> 1)
                        - ((int)(((v32 * v32 + 64) >> 7) * v32 + 256) >> 9)
                        + 2048) >> v27)
                 * (a1 >> 10)) >> 10);
      return (v33 >> 1) - ((v33 >> 1) * (v33 >> 1) > (int)a1);
    }
    if (a1 < 0x100000)
    {
      unsigned int v20 = a1 >> 18;
      if (!(a1 >> 18))
      {
        unsigned int v21 = 2 * byte_1001C8804[(unint64_t)a1 >> 10];
        goto LABEL_67;
      }
      char v16 = 2;
      char v15 = 12;
    }
    else
    {
      if (a1 >> 22) {
        char v15 = 16;
      }
      else {
        char v15 = 14;
      }
      if (a1 >> 22) {
        char v16 = 4;
      }
      else {
        char v16 = 3;
      }
    }
    unsigned int v21 = byte_1001C8804[(unint64_t)a1 >> v15] << v16;
    if (v21 >= 0x2CC)
    {
      LOBYTE(v20) = 0;
      unsigned int v22 = v21;
      do
      {
        unsigned int v23 = v22;
        unsigned int v22 = (v22 + 1) >> 1;
        LOBYTE(v20) = v20 + 1;
      }
      while (v23 > 0x596);
      goto LABEL_68;
    }
    LOBYTE(v20) = 0;
LABEL_67:
    unsigned int v22 = v21;
LABEL_68:
    unsigned int v34 = v22 - 512;
    int v33 = (v21 | 1)
        + ((int)(((int)(((v34 * v34 + 64) >> 7)
                      - 4 * v34
                      + (1 << v20 >> 1)
                      - ((int)(((v34 * v34 + 64) >> 7) * v34 + 256) >> 9)
                      + 2048) >> v20)
               * (a1 >> 10)) >> 10);
    return (v33 >> 1) - ((v33 >> 1) * (v33 >> 1) > (int)a1);
  }
  if ((int)a1 < 256)
  {
    if ((a1 & 0x80000000) != 0) {
      return 0xFFFFFFFFLL;
    }
    else {
      return byte_1001C8804[a1] >> 4;
    }
  }
  else
  {
    if (a1 < 0x1000)
    {
      if (a1 < 0x400) {
        int v14 = byte_1001C8804[(unint64_t)a1 >> 2] >> 3;
      }
      else {
        int v14 = byte_1001C8804[(unint64_t)a1 >> 4] >> 2;
      }
    }
    else if (a1 < 0x4000)
    {
      int v14 = byte_1001C8804[(unint64_t)a1 >> 6] >> 1;
    }
    else
    {
      int v14 = byte_1001C8804[(unint64_t)a1 >> 8];
    }
    return (__PAIR64__(v14 + 1, a1) - ((v14 + 1) * (v14 + 1))) >> 32;
  }
}

uint64_t sub_10016FD84(uint64_t a1, int a2, int a3)
{
  memset(v36, 0, sizeof(v36));
  if (a3)
  {
    if (a3 != 2)
    {
      if (a3 != 1)
      {
        LOBYTE(v9) = 0;
        return v9 & 1;
      }
      char v3 = 0;
      char v4 = &byte_1001C8910;
      unsigned int v5 = 24;
      uint64_t v6 = (a2 + 24);
      if (!((a2 + 24 < 0) ^ __OFADD__(24, a2) | (a2 == -24))) {
        goto LABEL_23;
      }
LABEL_9:
      uint64_t v7 = a2;
      goto LABEL_10;
    }
    char v3 = 0;
    char v4 = &byte_1001C8928;
    unsigned int v5 = 32;
    uint64_t v6 = (a2 + 32);
    if ((a2 + 32 < 0) ^ __OFADD__(32, a2) | (a2 == -32)) {
      goto LABEL_9;
    }
  }
  else
  {
    char v4 = &byte_1001C8904;
    unsigned int v5 = 12;
    char v3 = 1;
    uint64_t v6 = (a2 + 12);
    if ((a2 + 12 < 0) ^ __OFADD__(12, a2) | (a2 == -12)) {
      goto LABEL_9;
    }
  }
LABEL_23:
  uint64_t v30 = 0;
  uint64_t v7 = a2;
  do
  {
    char v32 = *((unsigned char *)v36 + v5 - 1);
    uint64_t v33 = v5 - 4;
    do
    {
      *((unsigned char *)v36 + v33 + 3) = (v4[v33 + 3] * v32) ^ *((unsigned char *)v36 + (v33 + 2));
      uint64_t v34 = v33 + 3;
      --v33;
    }
    while (v34 > 1);
    if (v30 < v7) {
      char v31 = (*v4 * v32) ^ *(unsigned char *)(a1 + v30);
    }
    else {
      char v31 = *v4 * v32;
    }
    LOBYTE(v36[0]) = v31;
    ++v30;
  }
  while (v30 != v6);
LABEL_10:
  if (v3)
  {
    uint64_t v8 = 0;
    LODWORD(v9) = 1;
  }
  else
  {
    uint64_t v8 = v5 & 0x30;
    char v10 = (int8x16_t *)((char *)&v36[-1] + v5);
    unsigned int v11 = (int8x16_t *)(a1 + v7);
    v12.i64[0] = 0x101010101010101;
    v12.i64[1] = 0x101010101010101;
    uint64_t v13 = v8;
    do
    {
      int8x16_t v14 = *v11++;
      int8x16_t v15 = v14;
      int8x16_t v16 = *v10--;
      int8x16_t v17 = vrev64q_s8(v16);
      int8x16_t v12 = vandq_s8(vceqq_s8(v15, vextq_s8(v17, v17, 8uLL)), v12);
      v13 -= 16;
    }
    while (v13);
    uint8x16_t v18 = (uint8x16_t)vcltzq_s8(vshlq_n_s8(vmvnq_s8(v12), 7uLL));
    v18.i8[0] = vmaxvq_u8(v18);
    LODWORD(v9) = v18.i32[0] ^ 1;
    if (v8 == v5) {
      return v9 & 1;
    }
    if ((v5 & 8) == 0)
    {
LABEL_19:
      uint64_t v27 = v5 - v8;
      unsigned int v28 = (unsigned __int8 *)(a1 + v7 + v8);
      do
      {
        int v29 = *v28++;
        LOBYTE(v9) = (v29 == *((unsigned __int8 *)&v36[-1] + v27-- + 15)) & v9;
      }
      while (v27);
      return v9 & 1;
    }
  }
  uint64_t v19 = v8;
  uint64_t v8 = v5 & 0x38;
  int8x8_t v20 = vdup_n_s8(v9);
  uint64_t v21 = v19 - v8;
  unsigned int v22 = (int8x8_t *)((char *)&v36[-1] + v5 - v19 + 8);
  unsigned int v23 = (int8x8_t *)(a1 + v19 + v7);
  do
  {
    int8x8_t v24 = *v23++;
    int8x8_t v25 = v24;
    int8x8_t v26 = *v22--;
    int8x8_t v20 = vand_s8(vceq_s8(v25, vrev64_s8(v26)), v20);
    v21 += 8;
  }
  while (v21);
  uint64_t v9 = vmaxv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmvn_s8(v20), 7uLL))) ^ 1u;
  if (v8 != v5) {
    goto LABEL_19;
  }
  return v9 & 1;
}

uint64_t sub_10016FFD0(unsigned char *a1, _WORD *a2)
{
  char v2 = a1 + 12288;
  char v3 = a1 + 0x2000;
  char v4 = a1 + 4096;
  char v5 = 4 * *a1;
  char v6 = 4 * a1[1];
  char v7 = 4 * a1[2049];
  char v8 = 4 * a1[4096];
  char v9 = 4 * a1[0x2000];
  char v10 = 4 * a1[8193];
  __int16 v11 = v9 + v5;
  __int16 v12 = v10 + v6;
  __int16 v13 = v5 - v9;
  __int16 v14 = v6 - v10;
  int v15 = (char)(4 * a1[2048]);
  int v16 = (char)(4 * a1[10240]);
  __int16 v17 = v16 + v15;
  LODWORD(v3) = (char)(4 * v3[2049]);
  __int16 v18 = (_WORD)v3 + v7;
  int v19 = v15 - v16;
  int v20 = v7 - v3;
  LOWORD(v3) = v8;
  LOWORD(v15) = (char)(4 * *v2);
  LOWORD(v16) = v15 + v8;
  __int16 v21 = (char)(4 * v4[1]);
  __int16 v22 = (char)(4 * v2[1]);
  __int16 v23 = v22 + v21;
  __int16 v24 = (_WORD)v3 - v15;
  __int16 v25 = v21 - v22;
  LODWORD(v3) = (char)(4 * v4[2048]);
  int v26 = (char)(4 * v2[2048]);
  __int16 v27 = v26 + (_WORD)v3;
  LODWORD(v4) = (char)(4 * v4[2049]);
  LODWORD(v2) = (char)(4 * v2[2049]);
  __int16 v28 = (_WORD)v2 + (_WORD)v4;
  int v29 = v3 - v26;
  int v30 = v4 - v2;
  __int16 v31 = v16 + v11;
  __int16 v32 = v22 + v21 + v12;
  LOWORD(v26) = v11 - v16;
  LOWORD(v3) = v12 - v23;
  LOWORD(v16) = v25 + v13;
  __int16 v33 = v14 - v24;
  LOWORD(v4) = v13 - v25;
  LOWORD(v2) = v24 + v14;
  __int16 v34 = v27 + v17;
  __int16 v35 = v28 + v18;
  __int16 v36 = v17 - v27;
  __int16 v37 = v18 - v28;
  uint64_t result = (v29 + v20);
  __int16 v39 = v28 + v18 + v32;
  int v40 = 11585 * (v30 + v19);
  int v41 = 11585 * (v20 - v29);
  int v42 = -11585 * (v30 + v19);
  *a2 = v34 + v31;
  a2[1] = v39;
  a2[2] = v16 + ((4 * (v40 - -11585 * (v20 - v29)) + 0x8000) >> 16);
  a2[3] = v33 + ((4 * (v42 + v41) + 0x8000) >> 16);
  a2[4] = v37 + v26;
  a2[5] = (_WORD)v3 - v36;
  a2[6] = (_WORD)v4 + ((4 * (-11585 * (v19 - v30) - -11585 * result) + 0x8000) >> 16);
  a2[7] = (_WORD)v2 + ((4 * (-11585 * (v19 - v30) - 11585 * result) + 0x8000) >> 16);
  a2[8] = v31 - v34;
  a2[9] = v32 - v35;
  a2[10] = v16 + ((4 * (v42 - v41) + 0x8000) >> 16);
  a2[11] = v33 + ((4 * (v40 - v41) + 0x8000) >> 16);
  a2[12] = v26 - v37;
  a2[13] = v36 + (_WORD)v3;
  LODWORD(v3) = 11585 * (v19 - v30);
  a2[14] = (_WORD)v4 + ((4 * (v3 - 11585 * result) + 0x8000) >> 16);
  a2[15] = (_WORD)v2 + ((4 * (v3 + 11585 * result) + 0x8000) >> 16);
  return result;
}

int8x8_t sub_100170248(uint64_t a1, int a2, _WORD *a3)
{
  int v5 = 0;
  uint64_t v6 = 0;
  char v7 = a3 + 0x4000;
  char v8 = a3 + 12288;
  char v9 = a3 + 0x2000;
  char v10 = a3 + 4096;
  uint64_t v11 = 4 * (-a2 & 7);
  __int16 v12 = (__int16 *)(v11 + a1 + 2);
  __int16 v13 = (__int16 *)(a1 + 4 * (unsigned __int16)a2 + 2);
  __int16 v14 = &word_1001C894A;
  do
  {
    int v15 = *(v13 - 1);
    int v16 = *v13;
    if (v5 <= 0) {
      int v17 = -(-v5 & 0x7F);
    }
    else {
      int v17 = v5 & 0x7F;
    }
    int v18 = 2 * v17;
    int v19 = *((__int16 *)&unk_1001C8948 + 2 * v17);
    int v20 = *((__int16 *)&unk_1001C8948 + v18 + 1);
    v162[v6] = (v19 * v15 - v20 * v16 + 0x2000) >> 14;
    v161[v6] = (v20 * v15 + v19 * v16 + 0x2000) >> 14;
    int v21 = *(v12 - 1);
    int v22 = *v12;
    int v23 = *(v14 - 1);
    int v24 = *v14;
    v160[v6] = (v23 * v21 - v24 * v22 + 0x2000) >> 14;
    v159[v6++] = (v24 * v21 + v23 * v22 + 0x2000) >> 14;
    __int16 v14 = (__int16 *)((char *)v14 + v11);
    v5 += (unsigned __int16)a2;
    v12 += 16;
    v13 += 16;
  }
  while (v6 != 16);
  sub_100170A78(v162, v161, &v150, &v141);
  sub_100170A78(v160, v159, v132, v123);
  if (a2)
  {
    uint64_t v25 = 0;
    int v26 = &a3[256 * (unint64_t)(unsigned __int16)a2 + 2];
    __int16 v27 = &a3[256 * (-a2 & 7) + 2];
    uint64_t v28 = 15;
    int8x8_t result = (int8x8_t)0x100000001;
    do
    {
      int v30 = (unsigned __int16)v132[v28];
      int v31 = *(unsigned __int16 *)((char *)&v150 + v25 * 2);
      signed int v32 = (__int16)(v31 + v30);
      if (v32 < 0) {
        signed int v32 = -((1 - v32) >> 1);
      }
      else {
        LOWORD(v32) = v32 >> 1;
      }
      int v33 = (unsigned __int16)v123[v28];
      *(v26 - 2) = v32;
      int v34 = *(unsigned __int16 *)((char *)&v141 + v25 * 2);
      int v35 = (__int16)(v34 - v33);
      unsigned int v36 = -(-v35 >> 1);
      unsigned int v37 = (v35 + 1) >> 1;
      if ((((_WORD)v34 - (_WORD)v33) & 0x8000) != 0) {
        __int16 v38 = v36;
      }
      else {
        __int16 v38 = v37;
      }
      *(v26 - 1) = v38;
      v39.i32[0] = v34 + v33;
      v39.i32[1] = v30 - v31;
      int32x2_t v40 = vshr_n_s32(vshl_n_s32(v39, 0x10uLL), 0x10uLL);
      int8x8_t v41 = vbsl_s8((int8x8_t)vcltz_s32(v40), (int8x8_t)vneg_s32((int32x2_t)vshr_n_u32((uint32x2_t)vsub_s32((int32x2_t)0x100000001, v40), 1uLL)), (int8x8_t)vshr_n_u32((uint32x2_t)v40, 1uLL));
      v26[1] = v41.i16[2];
      _WORD *v26 = v41.i16[0];
      int v42 = *(unsigned __int16 *)((char *)&v150 + v28 * 2);
      int v43 = (unsigned __int16)v132[v25];
      signed int v44 = (__int16)(v43 + v42);
      if (v44 < 0) {
        signed int v44 = -((1 - v44) >> 1);
      }
      else {
        LOWORD(v44) = v44 >> 1;
      }
      *(v27 - 2) = v44;
      int v45 = *(unsigned __int16 *)((char *)&v141 + v28 * 2);
      int v46 = (unsigned __int16)v123[v25];
      int v47 = (__int16)(v46 - v45);
      unsigned int v48 = -(-v47 >> 1);
      unsigned int v49 = (v47 + 1) >> 1;
      if ((((_WORD)v46 - (_WORD)v45) & 0x8000) != 0) {
        __int16 v50 = v48;
      }
      else {
        __int16 v50 = v49;
      }
      *(v27 - 1) = v50;
      v51.i32[0] = v46 + v45;
      v51.i32[1] = v42 - v43;
      int32x2_t v52 = vshr_n_s32(vshl_n_s32(v51, 0x10uLL), 0x10uLL);
      int8x8_t v53 = vbsl_s8((int8x8_t)vcltz_s32(v52), (int8x8_t)vneg_s32((int32x2_t)vshr_n_u32((uint32x2_t)vsub_s32((int32x2_t)0x100000001, v52), 1uLL)), (int8x8_t)vshr_n_u32((uint32x2_t)v52, 1uLL));
      ++v25;
      v27[1] = v53.i16[2];
      _WORD *v27 = v53.i16[0];
      --v28;
      v26 += 2048;
      v27 += 2048;
    }
    while (v25 != 8);
  }
  else
  {
    *a3 = v150;
    a3[1] = 0;
    a3[2] = v141;
    a3[3] = 0;
    int v54 = v140;
    int v55 = v151;
    signed int v56 = (__int16)(v151 + v140);
    if (v56 < 0) {
      signed int v56 = -((1 - v56) >> 1);
    }
    else {
      LOWORD(v56) = v56 >> 1;
    }
    a3[2048] = v56;
    int v57 = (__int16)(v142 - v131);
    if (((v142 - v131) & 0x8000) != 0) {
      unsigned int v58 = -(-v57 >> 1);
    }
    else {
      unsigned int v58 = (v57 + 1) >> 1;
    }
    v59.i32[0] = v142 + v131;
    v59.i32[1] = v54 - v55;
    a3[2049] = v58;
    int32x2_t v60 = vshr_n_s32(vshl_n_s32(v59, 0x10uLL), 0x10uLL);
    int8x8_t v61 = vbsl_s8((int8x8_t)vcltz_s32(v60), (int8x8_t)vneg_s32((int32x2_t)vshr_n_u32((uint32x2_t)vsub_s32((int32x2_t)0x100000001, v60), 1uLL)), (int8x8_t)vshr_n_u32((uint32x2_t)v60, 1uLL));
    a3[2051] = v61.i16[2];
    a3[2050] = v61.i16[0];
    int v62 = v139;
    int v63 = v152;
    signed int v64 = (__int16)(v152 + v139);
    if (v64 < 0) {
      signed int v64 = -((1 - v64) >> 1);
    }
    else {
      LOWORD(v64) = v64 >> 1;
    }
    *char v10 = v64;
    int v65 = v130;
    int v66 = v143;
    int v67 = (__int16)(v143 - v130);
    if (((v143 - v130) & 0x8000) != 0) {
      unsigned int v68 = -(-v67 >> 1);
    }
    else {
      unsigned int v68 = (v67 + 1) >> 1;
    }
    v10[1] = v68;
    v69.i32[0] = v66 + v65;
    v69.i32[1] = v62 - v63;
    int32x2_t v70 = vshr_n_s32(vshl_n_s32(v69, 0x10uLL), 0x10uLL);
    int8x8_t v71 = vbsl_s8((int8x8_t)vcltz_s32(v70), (int8x8_t)vneg_s32((int32x2_t)vshr_n_u32((uint32x2_t)vsub_s32((int32x2_t)0x100000001, v70), 1uLL)), (int8x8_t)vshr_n_u32((uint32x2_t)v70, 1uLL));
    a3[4099] = v71.i16[2];
    a3[4098] = v71.i16[0];
    int v72 = v138;
    int v73 = v153;
    signed int v74 = (__int16)(v153 + v138);
    if (v74 < 0) {
      signed int v74 = -((1 - v74) >> 1);
    }
    else {
      LOWORD(v74) = v74 >> 1;
    }
    v10[2048] = v74;
    int v75 = v129;
    int v76 = v144;
    int v77 = (__int16)(v144 - v129);
    if (((v144 - v129) & 0x8000) != 0) {
      unsigned int v78 = -(-v77 >> 1);
    }
    else {
      unsigned int v78 = (v77 + 1) >> 1;
    }
    v10[2049] = v78;
    v79.i32[0] = v76 + v75;
    v79.i32[1] = v72 - v73;
    int32x2_t v80 = vshr_n_s32(vshl_n_s32(v79, 0x10uLL), 0x10uLL);
    int8x8_t v81 = vbsl_s8((int8x8_t)vcltz_s32(v80), (int8x8_t)vneg_s32((int32x2_t)vshr_n_u32((uint32x2_t)vsub_s32((int32x2_t)0x100000001, v80), 1uLL)), (int8x8_t)vshr_n_u32((uint32x2_t)v80, 1uLL));
    a3[6147] = v81.i16[2];
    a3[6146] = v81.i16[0];
    int v82 = v137;
    int v83 = v154;
    signed int v84 = (__int16)(v154 + v137);
    if (v84 < 0) {
      signed int v84 = -((1 - v84) >> 1);
    }
    else {
      LOWORD(v84) = v84 >> 1;
    }
    _WORD *v9 = v84;
    int v85 = (__int16)(v145 - v128);
    if (((v145 - v128) & 0x8000) != 0) {
      unsigned int v86 = -(-v85 >> 1);
    }
    else {
      unsigned int v86 = (v85 + 1) >> 1;
    }
    v87.i32[0] = v145 + v128;
    v87.i32[1] = v82 - v83;
    v9[1] = v86;
    int32x2_t v88 = vshr_n_s32(vshl_n_s32(v87, 0x10uLL), 0x10uLL);
    int8x8_t v89 = vbsl_s8((int8x8_t)vcltz_s32(v88), (int8x8_t)vneg_s32((int32x2_t)vshr_n_u32((uint32x2_t)vsub_s32((int32x2_t)0x100000001, v88), 1uLL)), (int8x8_t)vshr_n_u32((uint32x2_t)v88, 1uLL));
    v9[3] = v89.i16[2];
    _OWORD v9[2] = v89.i16[0];
    int v90 = v136;
    int v91 = v155;
    signed int v92 = (__int16)(v155 + v136);
    if (v92 < 0) {
      signed int v92 = -((1 - v92) >> 1);
    }
    else {
      LOWORD(v92) = v92 >> 1;
    }
    v9[2048] = v92;
    int v93 = (__int16)(v146 - v127);
    if (((v146 - v127) & 0x8000) != 0) {
      unsigned int v94 = -(-v93 >> 1);
    }
    else {
      unsigned int v94 = (v93 + 1) >> 1;
    }
    v95.i32[0] = v146 + v127;
    v95.i32[1] = v90 - v91;
    v9[2049] = v94;
    int32x2_t v96 = vshr_n_s32(vshl_n_s32(v95, 0x10uLL), 0x10uLL);
    int8x8_t v97 = vbsl_s8((int8x8_t)vcltz_s32(v96), (int8x8_t)vneg_s32((int32x2_t)vshr_n_u32((uint32x2_t)vsub_s32((int32x2_t)0x100000001, v96), 1uLL)), (int8x8_t)vshr_n_u32((uint32x2_t)v96, 1uLL));
    v9[2051] = v97.i16[2];
    v9[2050] = v97.i16[0];
    int v98 = v135;
    int v99 = v156;
    signed int v100 = (__int16)(v156 + v135);
    if (v100 < 0) {
      signed int v100 = -((1 - v100) >> 1);
    }
    else {
      LOWORD(v100) = v100 >> 1;
    }
    *char v8 = v100;
    int v101 = (__int16)(v147 - v126);
    if (((v147 - v126) & 0x8000) != 0) {
      unsigned int v102 = -(-v101 >> 1);
    }
    else {
      unsigned int v102 = (v101 + 1) >> 1;
    }
    v103.i32[0] = v147 + v126;
    v103.i32[1] = v98 - v99;
    v8[1] = v102;
    int32x2_t v104 = vshr_n_s32(vshl_n_s32(v103, 0x10uLL), 0x10uLL);
    int8x8_t v105 = vbsl_s8((int8x8_t)vcltz_s32(v104), (int8x8_t)vneg_s32((int32x2_t)vshr_n_u32((uint32x2_t)vsub_s32((int32x2_t)0x100000001, v104), 1uLL)), (int8x8_t)vshr_n_u32((uint32x2_t)v104, 1uLL));
    v8[3] = v105.i16[2];
    _DWORD v8[2] = v105.i16[0];
    int v106 = v134;
    int v107 = v157;
    signed int v108 = (__int16)(v157 + v134);
    if (v108 < 0) {
      signed int v108 = -((1 - v108) >> 1);
    }
    else {
      LOWORD(v108) = v108 >> 1;
    }
    v8[2048] = v108;
    int v109 = (__int16)(v148 - v125);
    if (((v148 - v125) & 0x8000) != 0) {
      unsigned int v110 = -(-v109 >> 1);
    }
    else {
      unsigned int v110 = (v109 + 1) >> 1;
    }
    v111.i32[0] = v148 + v125;
    v111.i32[1] = v106 - v107;
    v8[2049] = v110;
    int32x2_t v112 = vshr_n_s32(vshl_n_s32(v111, 0x10uLL), 0x10uLL);
    int8x8_t v113 = vbsl_s8((int8x8_t)vcltz_s32(v112), (int8x8_t)vneg_s32((int32x2_t)vshr_n_u32((uint32x2_t)vsub_s32((int32x2_t)0x100000001, v112), 1uLL)), (int8x8_t)vshr_n_u32((uint32x2_t)v112, 1uLL));
    v8[2051] = v113.i16[2];
    v8[2050] = v113.i16[0];
    int v114 = v133;
    int v115 = v158;
    signed int v116 = (__int16)(v158 + v133);
    if (v116 < 0) {
      signed int v116 = -((1 - v116) >> 1);
    }
    else {
      LOWORD(v116) = v116 >> 1;
    }
    _WORD *v7 = v116;
    int v117 = v124;
    int v118 = v149;
    int v119 = (__int16)(v149 - v124);
    if (((v149 - v124) & 0x8000) != 0) {
      unsigned int v120 = -(-v119 >> 1);
    }
    else {
      unsigned int v120 = (v119 + 1) >> 1;
    }
    v7[1] = v120;
    v121.i32[0] = v118 + v117;
    v121.i32[1] = v114 - v115;
    int32x2_t v122 = vshr_n_s32(vshl_n_s32(v121, 0x10uLL), 0x10uLL);
    int8x8_t result = vbsl_s8((int8x8_t)vcltz_s32(v122), (int8x8_t)vneg_s32((int32x2_t)vshr_n_u32((uint32x2_t)vsub_s32((int32x2_t)0x100000001, v122), 1uLL)), (int8x8_t)vshr_n_u32((uint32x2_t)v122, 1uLL));
    v7[3] = result.i16[2];
    void v7[2] = result.i16[0];
  }
  return result;
}

uint64_t sub_100170A78(_WORD *a1, _WORD *a2, _WORD *a3, _WORD *a4)
{
  __int16 v4 = a1[8];
  __int16 v5 = v4 + *a1;
  __int16 v6 = a2[8];
  __int16 v7 = v6 + *a2;
  __int16 v8 = *a1 - v4;
  __int16 v9 = *a2 - v6;
  __int16 v10 = a1[1];
  __int16 v11 = a1[9];
  __int16 v12 = v11 + v10;
  __int16 v13 = a2[1];
  __int16 v14 = a2[9];
  __int16 v15 = v14 + v13;
  __int16 v16 = v10 - v11;
  __int16 v17 = v13 - v14;
  __int16 v18 = a1[2];
  __int16 v19 = a1[10];
  __int16 v125 = v19 + v18;
  __int16 v20 = a2[2];
  __int16 v21 = a2[10];
  __int16 v127 = v21 + v20;
  __int16 v129 = v18 - v19;
  __int16 v131 = v20 - v21;
  __int16 v22 = a1[3];
  __int16 v23 = a1[11];
  __int16 v133 = v23 + v22;
  __int16 v24 = a2[3];
  __int16 v25 = a2[11];
  __int16 v135 = v25 + v24;
  __int16 v137 = v22 - v23;
  __int16 v139 = v24 - v25;
  __int16 v26 = a1[4];
  __int16 v27 = a1[12];
  __int16 v28 = v27 + v26;
  __int16 v29 = a2[4];
  __int16 v30 = a2[12];
  __int16 v31 = v30 + v29;
  __int16 v32 = v26 - v27;
  __int16 v33 = v29 - v30;
  __int16 v34 = a1[5];
  __int16 v35 = a1[13];
  __int16 v36 = v35 + v34;
  __int16 v37 = a2[5];
  __int16 v38 = a2[13];
  __int16 v39 = v38 + v37;
  __int16 v40 = v34 - v35;
  __int16 v41 = v37 - v38;
  __int16 v42 = a1[6];
  __int16 v43 = a1[14];
  __int16 v44 = v43 + v42;
  __int16 v45 = v42 - v43;
  __int16 v46 = a2[6];
  __int16 v47 = a2[14];
  __int16 v48 = v47 + v46;
  __int16 v49 = v46 - v47;
  __int16 v50 = a1[7];
  __int16 v51 = a1[15];
  __int16 v52 = v51 + v50;
  __int16 v53 = v50 - v51;
  __int16 v54 = a2[7];
  __int16 v55 = a2[15];
  __int16 v56 = v55 + v54;
  __int16 v57 = v54 - v55;
  __int16 v121 = v9 - v32;
  __int16 v120 = v32 + v9;
  __int16 v58 = v41 + v16;
  __int16 v59 = v16 - v41;
  __int16 v60 = v48 + v127;
  __int16 v61 = v127 - v48;
  *a3 = v28 + v5;
  __int16 v62 = v139 - v53;
  __int16 v63 = v53 + v139;
  *a4 = v31 + v7;
  a3[1] = v5 - v28;
  a4[1] = v7 - v31;
  a3[2] = v33 + v8;
  a4[2] = v121;
  a3[3] = v8 - v33;
  a4[3] = v120;
  a3[4] = v36 + v12;
  a4[4] = v39 + v15;
  a3[5] = v12 - v36;
  a4[5] = v15 - v39;
  a3[6] = v58;
  a4[6] = v17 - v40;
  a3[7] = v59;
  a4[7] = v40 + v17;
  a3[8] = v44 + v125;
  a4[8] = v60;
  a3[9] = v125 - v44;
  a4[9] = v61;
  a3[10] = v49 + v129;
  a4[10] = v131 - v45;
  a3[11] = v129 - v49;
  a4[11] = v45 + v131;
  a3[12] = v52 + v133;
  a4[12] = v56 + v135;
  a3[13] = v133 - v52;
  a4[13] = v135 - v56;
  a3[14] = v57 + v137;
  a4[14] = v62;
  a3[15] = v137 - v57;
  a4[15] = v63;
  int v64 = (__int16)a3[10];
  int v65 = 11585 * v64;
  int v66 = (__int16)a4[10];
  int v67 = -11585 * v66;
  int v68 = (unsigned __int16)a3[2];
  int v69 = 11585 * v66;
  int v70 = -11585 * v64;
  int v138 = v68 + ((4 * (-11585 * v64 - 11585 * v66) + 0x8000) >> 16);
  int v140 = v68 + ((4 * (11585 * v64 - -11585 * v66) + 0x8000) >> 16);
  int v71 = (__int16)a3[11];
  int v72 = (__int16)a4[11];
  int v73 = (unsigned __int16)a3[3];
  __int16 v74 = v73 + ((4 * (-11585 * v71 - -11585 * v72) + 0x8000) >> 16);
  int v75 = (unsigned __int16)a4[3];
  __int16 v76 = v75 + ((4 * (-11585 * v72 - 11585 * v71) + 0x8000) >> 16);
  v71 *= 11585;
  int v134 = v75 + ((4 * (11585 * v72 + v71) + 0x8000) >> 16);
  int v136 = v73 + ((4 * (v71 - 11585 * v72) + 0x8000) >> 16);
  int v77 = (__int16)a3[14];
  int v78 = 11585 * v77;
  int v79 = (__int16)a4[14];
  int v80 = -11585 * v79;
  int v81 = (unsigned __int16)a3[6];
  int v130 = v81 + ((4 * (11585 * v77 - -11585 * v79) + 0x8000) >> 16);
  v79 *= 11585;
  v77 *= -11585;
  int v82 = (unsigned __int16)a4[6];
  int v128 = v81 + ((4 * (v77 - v79) + 0x8000) >> 16);
  int v124 = v82 + ((4 * (v79 + v77) + 0x8000) >> 16);
  int v126 = v82 + ((4 * (v80 + v78) + 0x8000) >> 16);
  int v83 = (__int16)a3[15];
  int v84 = -11585 * v63;
  LOWORD(v81) = a3[7];
  __int16 v85 = v81 + ((4 * (-11585 * v83 - v84) + 0x8000) >> 16);
  int v86 = 4 * (v84 - 11585 * v83) + 0x8000;
  LOWORD(v84) = a4[7];
  LOWORD(v86) = v84 + HIWORD(v86);
  int v87 = 11585 * v63;
  __int16 v88 = v81 + ((4 * (11585 * v83 - v87) + 0x8000) >> 16);
  LOWORD(v87) = v84 + ((4 * (v87 + 11585 * v83) + 0x8000) >> 16);
  LOWORD(v84) = a3[1];
  LOWORD(v81) = a4[9];
  __int16 v89 = v81 + v84;
  LOWORD(v82) = a4[1];
  __int16 v90 = a3[9];
  __int16 v91 = v82 - v90;
  __int16 v92 = v84 - v81;
  __int16 v93 = v90 + v82;
  int v132 = v69 + v70;
  int v123 = v67 + v65;
  LOWORD(v84) = a3[5];
  LOWORD(v81) = a4[13];
  __int16 v94 = v81 + v84;
  LOWORD(v65) = a4[5];
  LOWORD(v67) = a3[13];
  __int16 v95 = v65 - v67;
  __int16 v96 = v84 - v81;
  __int16 v122 = v67 + v65;
  int v97 = 15137 * (__int16)v86 + 6270 * v85;
  int v98 = 6270 * (__int16)v86 + 1073726687 * v85;
  unsigned int v99 = (v97 + 0x2000) >> 14;
  LOWORD(v97) = v74 + v99;
  LOWORD(v99) = v74 - v99;
  LOWORD(v70) = *a4;
  uint64_t result = (unsigned __int16)a4[8];
  __int16 v101 = a4[2];
  __int16 v102 = a4[4];
  LOWORD(v69) = a4[12];
  a3[3] = v97;
  unsigned int v103 = (v98 + 0x2000) >> 14;
  __int16 v104 = v76 + v103;
  LOWORD(v82) = v76 - v103;
  int v105 = 6270 * (__int16)v87 + 1073726687 * v88;
  int v106 = 1073726687 * (__int16)v87 + 1073735554 * v88;
  LOWORD(v87) = *a3;
  LOWORD(v103) = a3[8];
  __int16 v107 = a3[4];
  LOWORD(v84) = a3[12];
  a4[3] = v104;
  a3[11] = v99;
  a4[11] = v82;
  int v108 = -11585 * v96 + 0x2000;
  int v109 = -11585 * v122;
  unsigned int v110 = (v108 - v109) >> 14;
  a3[6] = v92 + v110;
  unsigned int v111 = (v109 + v108) >> 14;
  a4[6] = v93 + v111;
  a3[14] = v92 - v110;
  a4[14] = v93 - v111;
  unsigned int v112 = (11585 * (v95 + v94) + 0x2000) >> 14;
  a3[2] = v89 + v112;
  unsigned int v113 = (11585 * v95 + 1073730239 * v94 + 0x2000) >> 14;
  a4[2] = v91 + v113;
  a3[10] = v89 - v112;
  a4[10] = v91 - v113;
  unsigned int v114 = (v105 + 0x2000) >> 14;
  a3[7] = v136 + v114;
  unsigned int v115 = (v106 + 0x2000) >> 14;
  a4[7] = v134 + v115;
  a3[15] = v136 - v114;
  LOWORD(v114) = v134 - v115;
  LOWORD(v115) = v101 + ((4 * v123 + 0x8000) >> 16);
  a4[15] = v114;
  unsigned int v116 = (15137 * (__int16)v126 + 1073735554 * (__int16)v128 + 0x2000) >> 14;
  a3[5] = v138 + v116;
  unsigned int v117 = (1073735554 * (__int16)v126 + 1073726687 * (__int16)v128 + 0x2000) >> 14;
  a4[5] = v115 + v117;
  a3[13] = v138 - v116;
  a4[13] = v115 - v117;
  unsigned int v118 = (6270 * (__int16)v124 + 15137 * (__int16)v130 + 0x2000) >> 14;
  a3[1] = v140 + v118;
  unsigned int v119 = (15137 * (__int16)v124 + 1073735554 * (__int16)v130 + 0x2000) >> 14;
  LOWORD(v116) = v101 + ((4 * v132 + 0x8000) >> 16);
  a4[1] = v116 + v119;
  a3[9] = v140 - v118;
  a4[9] = v116 - v119;
  *a3 = v84 + v107 + v103 + v87;
  *a4 = v69 + v102 + result + v70;
  a3[8] = v103 + v87 - (v84 + v107);
  a4[8] = result + v70 - (v69 + v102);
  a3[4] = v102 - v69 + v87 - v103;
  LOWORD(v84) = v107 - v84;
  a4[4] = v70 - result - v84;
  a3[12] = v87 - v103 - (v102 - v69);
  a4[12] = v84 + v70 - result;
  return result;
}

uint64_t sub_100171170(uint64_t a1, __int16 a2, int a3, uint64_t a4)
{
  __int16 v5 = (unsigned __int16 *)(a1 + 2 * (__int16)((a2 << 8) + 2 * a3));
  int v6 = *v5;
  int v7 = v5[1];
  unsigned __int16 v8 = v5[32];
  int v9 = v5[128];
  int v10 = v5[129];
  __int16 v11 = v9 + v6;
  __int16 v12 = v10 + v7;
  unsigned __int16 v13 = v5[33];
  int v14 = v6 - v9;
  int v15 = v7 - v10;
  LOWORD(v6) = v5[160];
  __int16 v16 = v6 + v8;
  LOWORD(v7) = v5[161];
  __int16 v17 = v7 + v13;
  __int16 v18 = v8 - v6;
  __int16 v19 = v13 - v7;
  int v20 = v5[64];
  int v21 = v5[192];
  __int16 v22 = v21 + v20;
  int v23 = v5[65];
  int v24 = v5[193];
  __int16 v25 = v24 + v23;
  int v26 = v20 - v21;
  int v27 = v23 - v24;
  LOWORD(v20) = v5[96];
  LOWORD(v23) = v5[224];
  LOWORD(v24) = v23 + v20;
  unsigned __int16 v28 = v5[97];
  LOWORD(v5) = v5[225];
  __int16 v29 = (_WORD)v5 + v28;
  LOWORD(v23) = v20 - v23;
  __int16 v30 = v28 - (_WORD)v5;
  __int16 v31 = v22 + v11;
  __int16 v32 = v25 + v12;
  __int16 v33 = v11 - v22;
  LOWORD(v20) = v12 - v25;
  int v34 = v27 + v14;
  int v35 = v15 - v26;
  LOWORD(v27) = v14 - v27;
  __int16 v36 = v26 + v15;
  __int16 v37 = v24 + v16;
  LOWORD(v26) = v29 + v17;
  LOWORD(v14) = v16 - v24;
  __int16 v38 = v17 - v29;
  LOWORD(v15) = v30 + v18;
  int v39 = (__int16)(v19 - v23);
  int v40 = -11585 * v39;
  __int16 v41 = v34 + ((4 * (11585 * (__int16)(v30 + v18) - -11585 * v39) + 0x8000) >> 16);
  v39 *= 11585;
  int v42 = -11585 * (__int16)(v30 + v18);
  __int16 v43 = v23 + v19;
  int v44 = v35 + ((4 * (v42 + v39) + 0x8000) >> 16);
  __int16 v45 = v18 - v30;
  __int16 v46 = v38 + v33;
  int v47 = v34 + ((4 * (v42 - v39) + 0x8000) >> 16);
  uint64_t result = (4 * (11585 * (__int16)v15 + v40) + 0x8000);
  __int16 v49 = v33 - v38;
  __int16 v50 = (_WORD *)(a4 + 32 * a3);
  _WORD *v50 = v37 + v31;
  v50[1] = v26 + v32;
  v50[2] = v41;
  v50[3] = v44;
  v50[4] = v46;
  v50[5] = v20 - v14;
  v50[6] = v27 + ((4 * (-11585 * v45 - -11585 * v43) + 0x8000) >> 16);
  v50[7] = v36 + ((4 * (-11585 * v45 - 11585 * v43) + 0x8000) >> 16);
  v50[8] = v31 - v37;
  v50[9] = v32 - v26;
  v50[10] = v47;
  v50[11] = v35 + WORD1(result);
  v50[12] = v49;
  v50[13] = v14 + v20;
  int v51 = 11585 * v43;
  v50[14] = v27 + ((4 * (11585 * v45 - v51) + 0x8000) >> 16);
  v50[15] = v36 + ((4 * (11585 * v45 + v51) + 0x8000) >> 16);
  return result;
}

uint64_t sub_1001713A8(uint64_t a1, unsigned __int16 a2, uint64_t a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = 0;
  int v8 = a2;
  int v9 = (__int16 *)(a1 + 4 * a2 + 2);
  do
  {
    int v10 = *(v9 - 1);
    int v11 = *v9;
    if (v6 <= 0) {
      int v12 = -(-v6 & 0x7F);
    }
    else {
      int v12 = v6 & 0x7F;
    }
    int v13 = 2 * v12;
    int v14 = *((__int16 *)&unk_1001C8948 + 2 * v12);
    int v15 = *((__int16 *)&unk_1001C8948 + v13 + 1);
    v26[v7] = (v14 * v10 - v15 * v11 + 0x2000) >> 14;
    v25[v7++] = (v15 * v10 + v14 * v11 + 0x2000) >> 14;
    v6 += a2;
    v9 += 16;
  }
  while (v7 != 16);
  uint64_t result = sub_100170A78(v26, v25, v24, v23);
  uint64_t v17 = 0;
  int v18 = v8 + 64;
  do
  {
    if (v18 <= 0) {
      int v19 = -(-v18 & 0x7F);
    }
    else {
      int v19 = v18 & 0x7F;
    }
    int v20 = (__int16)v24[v17];
    *(_WORD *)(a3 + 4 * v19) = v24[v17];
    int v21 = (__int16)v23[v17];
    *(_WORD *)(a3 + 4 * v19 + 2) = v23[v17];
    if (v20 < 0) {
      int v20 = -v20;
    }
    int v20 = (unsigned __int16)v20;
    if (v21 < 0) {
      int v21 = -v21;
    }
    if ((unsigned __int16)v20 >= (unsigned __int16)v21) {
      int v22 = (unsigned __int16)v21;
    }
    else {
      int v22 = (unsigned __int16)v20;
    }
    if ((unsigned __int16)v20 <= (unsigned __int16)v21) {
      int v20 = (unsigned __int16)v21;
    }
    *(_WORD *)(a4 + 2 * (__int16)v19) = ((62168 * v20 + 0x8000) >> 16)
                                        + ((25752 * v22 + 0x8000) >> 16);
    ++v17;
    v18 += 8;
  }
  while (v17 != 16);
  return result;
}

uint64_t sub_100171540()
{
  uint64_t v0 = abort_report_np();
  return sub_100171568(v0);
}

uint64_t sub_100171568()
{
  uint64_t v0 = abort_report_np();
  return sub_100171590(v0);
}

void sub_100171590(uint64_t a1, uint64_t a2, NSObject *a3)
{
  __int16 v5 = +[NSNumber numberWithInteger:a1];
  int v6 = 138412546;
  uint64_t v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "primeBuysOnWatchCredentials failed: Error Code: %@ %@", (uint8_t *)&v6, 0x16u);
}

void sub_10017164C()
{
  v1[0] = 136315394;
  sub_10001BB24();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "%s: no tinkerFamilyMember; delegate:%{public}@",
    (uint8_t *)v1,
    0x16u);
}

void sub_1001716CC()
{
  v1[0] = 136315394;
  sub_10001BB24();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "%s: currentConfigurationForUser error:%{public}@", (uint8_t *)v1, 0x16u);
}

uint64_t sub_10017174C()
{
  uint64_t v0 = abort_report_np();
  return sub_100171774(v0);
}

uint64_t sub_100171774()
{
  uint64_t v0 = abort_report_np();
  return sub_10017179C(v0);
}

void sub_10017179C()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Configuring payment express setup manager", v2, v3, v4, v5, v6);
}

void sub_1001717D0()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Skipping configuration of payment express setup manager", v2, v3, v4, v5, v6);
}

void sub_100171804()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "(COSExpressModeOptInViewController) NRDevicePropertyLocalPairingDataStorePath was still nil. Awaiting pairingDataStore property...", v2, v3, v4, v5, v6);
}

void sub_100171838()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "_setupController.expressModeDevice was nil, couldn't populate device details!", v2, v3, v4, v5, v6);
}

void sub_10017186C()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Express mode pane shown but there are no express mode controller settings classes.", v2, v3, v4, v5, v6);
}

void sub_1001718A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (objc_class *)sub_10001E4B0(a1, a2);
  uint64_t v5 = NSStringFromClass(v4);
  _DWORD *v3 = 138412290;
  *uint64_t v2 = v5;
  sub_10001E490((void *)&_mh_execute_header, v6, v7, "Express mode controller class didn't construct an item: %@");
}

void sub_1001718FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (objc_class *)sub_10001E4B0(a1, a2);
  uint64_t v5 = NSStringFromClass(v4);
  _DWORD *v3 = 138412290;
  *uint64_t v2 = v5;
  sub_10001E490((void *)&_mh_execute_header, v6, v7, "Express mode controller class doesn't respond to item selector: %@");
}

void sub_100171958()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "_setupController.expressModeDevice was nil, couldn't populate device settings!", v2, v3, v4, v5, v6);
}

void sub_10017198C()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Cannot construct Wallet detail section; unexpectedly found nil paymentExpressSetupManager.",
    v2,
    v3,
    v4,
    v5,
    v6);
}

uint64_t sub_1001719C0()
{
  uint64_t v0 = abort_report_np();
  return sub_1001719E8(v0);
}

void sub_1001719E8(os_log_t log)
{
  v1[0] = 67109378;
  v1[1] = 244;
  __int16 v2 = 2080;
  uint64_t v3 = "-[COSSetupSoftwareUpdateManager consistencyCheckInstall]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%d %s - Watch updated to incompatible version", (uint8_t *)v1, 0x12u);
}

uint64_t sub_100171A7C()
{
  dlerror();
  uint64_t v0 = abort_report_np();
  return sub_100171AA0(v0);
}

uint64_t sub_100171AA0()
{
  uint64_t v0 = abort_report_np();
  return sub_100171AC8(v0);
}

void sub_100171AC8()
{
  uint64_t v0 = (objc_class *)objc_opt_class();
  uint64_t v1 = NSStringFromClass(v0);
  sub_10002DE58((void *)&_mh_execute_header, v2, v3, "%{public}@ ~ NanoSettingsPrivacyProxy appBundle is nil", v4, v5, v6, v7, 2u);
}

void sub_100171B54()
{
  uint64_t v0 = (objc_class *)objc_opt_class();
  uint64_t v1 = NSStringFromClass(v0);
  sub_10002DE58((void *)&_mh_execute_header, v2, v3, "%{public}@ ~ PDUDisclosureReviewViewControllerForBundle returned a nil view controller", v4, v5, v6, v7, 2u);
}

void sub_100171BE0(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Ignoring BetterTogether Paired Watch limit!", v1, 2u);
}

uint64_t sub_100171C24()
{
  uint64_t v0 = abort_report_np();
  return sub_100171C4C(v0);
}

uint64_t sub_100171C4C()
{
  uint64_t v0 = abort_report_np();
  return sub_100171C74(v0);
}

void sub_100171C74(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Network NOT reachable!", v1, 2u);
}

void sub_100171CB8(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Bluetooth NOT enabled!", v1, 2u);
}

void sub_100171CFC(char a1, NSObject *a2)
{
  CFStringRef v2 = @"PROBLEM_NO_REACHABILITY";
  if (a1) {
    CFStringRef v2 = @"PROBLEM_NO_BT";
  }
  int v3 = 138412290;
  CFStringRef v4 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Showing Problem Message: (%@)", (uint8_t *)&v3, 0xCu);
}

void sub_100171D8C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Discover ~ Unexpected property change: %@!", (uint8_t *)&v2, 0xCu);
}

void sub_100171E04(uint8_t *a1, void *a2, void *a3, NSObject *a4)
{
  uint64_t v7 = [a2 titleForDiscoverPlugin];
  *(_DWORD *)a1 = 138412290;
  *a3 = v7;
  _os_log_error_impl((void *)&_mh_execute_header, a4, OS_LOG_TYPE_ERROR, "Skipping plugin: %@", a1, 0xCu);
}

void sub_100171E7C(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Plugin doesn't provide controller to launch", v1, 2u);
}

void sub_100171EC0(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "User tapped restore with no selected backup!", v1, 2u);
}

void sub_100171F04(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "NRDevicePropertyLocalPairingDataStorePath was still nil. Awaiting pairingDataStore property...", v1, 2u);
}

void sub_100171F48(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Restore from Backup Failed (%@)", (uint8_t *)&v2, 0xCu);
}

void sub_100171FC0(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Restore from Other Paired Device Failed (%@)", (uint8_t *)&v2, 0xCu);
}

uint64_t sub_100172038()
{
  uint64_t v0 = abort_report_np();
  return sub_100172060(v0);
}

uint64_t sub_100172060()
{
  uint64_t v0 = abort_report_np();
  return sub_100172088(v0);
}

void sub_100172088()
{
  v1[0] = 138412546;
  sub_100057EB0();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "%@ ML Warmup Error! %@", (uint8_t *)v1, 0x16u);
}

void sub_100172108()
{
  v1[0] = 138412546;
  sub_100057EB0();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "%@ Ingest Error! %@", (uint8_t *)v1, 0x16u);
}

uint64_t sub_100172188()
{
  uint64_t v0 = abort_report_np();
  return sub_1001721B0(v0);
}

void sub_1001721B0(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "-[COSScreenTimeController _openScreenTimeForTinkerFamilyMember]_block_invoke";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s: error %@", (uint8_t *)&v2, 0x16u);
}

void sub_10017223C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Magic code scanner can't use camera, error: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001722B4(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Scanner sat too long without doing anything, release screen assertion and save battery.", v1, 2u);
}

void sub_1001722F8(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Critical Error! Ring Buffer Empty or Nil", v1, 2u);
}

uint64_t sub_10017233C()
{
  uint64_t v0 = abort_report_np();
  return sub_100172364(v0);
}

void sub_100172364()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "failed to get camera", v2, v3, v4, v5, v6);
}

void sub_100172398()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "could only get front camera", v2, v3, v4, v5, v6);
}

void sub_1001723CC()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, " failed to get input device", v2, v3, v4, v5, v6);
}

void sub_100172400()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "ImageBufer is not planar!", v2, v3, v4, v5, v6);
}

void sub_100172434(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "ProcessUVFrame failure (tResult is %d).", (uint8_t *)v2, 8u);
}

void sub_1001724AC()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Invalid parameter", v2, v3, v4, v5, v6);
}

void sub_1001724E0(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to initialize decoding library (tResult is %d).", (uint8_t *)v2, 8u);
}

void sub_100172558(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "FINAL Confidence Summary! %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001725D0()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Error writing video buffer", v2, v3, v4, v5, v6);
}

void sub_100172604()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Error writing initial buffer", v2, v3, v4, v5, v6);
}

void sub_100172638()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Not scanning for code. Ignoring error", v2, v3, v4, v5, v6);
}

void sub_10017266C(void *a1, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)long long buf = 138412290;
  *(void *)(buf + 4) = a1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Capture failed because of runtime error (%@)", buf, 0xCu);
}

void sub_1001726C4()
{
  sub_10001BB24();
  sub_100071608((void *)&_mh_execute_header, v0, v1, "%s: error from _collectThenSetScreenTimePasscodeForFamilyMember:%{public}@; ending flow",
    v2,
    v3,
    v4,
    v5,
    2u);
}

void sub_100172738()
{
  sub_10001BB24();
  sub_100071608((void *)&_mh_execute_header, v0, v1, "%s: !familyMember.dsid - error:%{public}@", v2, v3, v4, v5, 2u);
}

void sub_1001727AC()
{
  int v2 = 136315650;
  sub_100071624();
  sub_100071640((void *)&_mh_execute_header, v0, v1, "%s: !stEnabled - currentConfiguration:%{public}@ error:%{public}@", v2);
}

void sub_100172820()
{
  sub_10001BB24();
  sub_100071608((void *)&_mh_execute_header, v0, v1, "%s: currentConfigurationForUser error:%{public}@", v2, v3, v4, v5, 2u);
}

void sub_100172894()
{
  int v2 = 136315650;
  sub_100071624();
  sub_100071640((void *)&_mh_execute_header, v0, v1, "%s: applyUpdatedConfiguration error:%{public}@ updatedConfiguration:%{public}@", v2);
}

void sub_100172908()
{
  sub_10001BB24();
  sub_100071608((void *)&_mh_execute_header, v0, v1, "%s: passcodeCollectedFromUser error:%{public}@", v2, v3, v4, v5, 2u);
}

void sub_10017297C()
{
  v1[0] = 136315394;
  sub_100057EB0();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "%s AMSDeviceMessenger error (%@)", (uint8_t *)v1, 0x16u);
}

void sub_1001729FC()
{
  v3[0] = 136315650;
  sub_100057EB0();
  __int16 v4 = v0;
  uint64_t v5 = v1;
  _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "%s - result %@ (Error: %@)", (uint8_t *)v3, 0x20u);
}

uint64_t sub_100172A88()
{
  __int16 v0 = abort_report_np();
  return sub_100172AB0(v0);
}

void sub_100172AB0(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "MultiArray was invalid length!", v1, 2u);
}

void sub_100172AF4()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "ERROR!! pairedGizmo was nil!!", v2, v3, v4, v5, v6);
}

void sub_100172B28()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Sync was already set complete, but now has been set incomplete. Re-adding observers so the UI updates.", v2, v3, v4, v5, v6);
}

void sub_100172B5C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100172BC8()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "User Reset Buddy! - Aborting Pairing", v2, v3, v4, v5, v6);
}

void sub_100172BFC()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "User Reset Buddy!", v2, v3, v4, v5, v6);
}

void sub_100172C30(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100172C9C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100172D08(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "enrollment data is empty, skipping", v1, 2u);
}

void sub_100172D4C(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "failed to fetch pairing token. error: %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_100172DC4(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "missing enrollment data", v1, 2u);
}

void sub_100172E08(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "failed setting up device management on watch. error: %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_100172E80(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[sharing-setup] %@ Tinker family member not found for this pairing, abort fetching share status. (#t0)", (uint8_t *)&v2, 0xCu);
}

void sub_100172EF8(uint64_t a1, void *a2)
{
  int v2 = a2;
  int v4 = 138543362;
  id v5 = (id)objc_opt_class();
  id v3 = v5;
  _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "[sharing-setup] %{public}@ Fetching sharing status timed out", (uint8_t *)&v4, 0xCu);
}

void sub_100172FA0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10017300C()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Presenting 'phone version too old' alert", v2, v3, v4, v5, v6);
}

void sub_100173040()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Presenting 'Unsupported Tinker HW' alert", v2, v3, v4, v5, v6);
}

void sub_100173074()
{
  int v1 = 136315394;
  uint64_t v2 = "-[COSSetupController setPairingParentFamilyMember:]_block_invoke";
  sub_10009CFEC();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "%s: failed to set pairingParent id in registry: %@", (uint8_t *)&v1, 0x16u);
}

void sub_1001730F8()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Presenting 'Unsupported Yorktown HW' alert", v2, v3, v4, v5, v6);
}

void sub_10017312C()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Presenting 'should update watch version' alert", v2, v3, v4, v5, v6);
}

void sub_100173160()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Presenting Unsupported watch paired to better together demo device alert", v2, v3, v4, v5, v6);
}

void sub_100173194()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Pairing failed alert displayed without a dismiss setup completion. That shouldn't happen!", v2, v3, v4, v5, v6);
}

void sub_1001731C8()
{
  sub_10001E484();
  _os_log_fault_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "Presenting 'pairing failed try again' alert", v1, 2u);
}

void sub_100173208(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100173274()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Already had a block/timer when trying to hold!", v2, v3, v4, v5, v6);
}

void sub_1001732A8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100173318(uint64_t a1, void *a2)
{
  uint64_t v2 = [a2 nextControllerAfterHold];
  sub_10009CFEC();
  sub_10009CFCC((void *)&_mh_execute_header, v3, v4, "Asked to release hold for (%@) while holding (%@).", v5, v6, v7, v8, 2u);
}

void sub_1001733B4()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "We are expecting controller class after sign-in but is nil", v2, v3, v4, v5, v6);
}

void sub_1001733E8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100173458()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Could not pop to Passcode Choice Controller.", v2, v3, v4, v5, v6);
}

void sub_10017348C()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Passcode Creation Failed. Reset Passcode Flow.", v2, v3, v4, v5, v6);
}

void sub_1001734C0(id *a1)
{
  uint64_t v1 = [*a1 visiblePage];
  sub_10009CFFC();
  sub_10009CFCC((void *)&_mh_execute_header, v2, v3, "CRITICAL RUI PUSH ISSUE! Internal inconsistency (Pushed %@ / Top View Controller %@)", v4, v5, v6, v7, v8);
}

void sub_100173558()
{
  sub_10009CFFC();
  uint64_t v3 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "CRITICAL RUI POP ISSUE! Internal inconsistency (Top Controller %@ / Top Buddy Controller %@)", v2, 0x16u);
}

void sub_1001735D4()
{
  uint64_t v0 = (objc_class *)objc_opt_class();
  os_log_t v1 = NSStringFromClass(v0);
  sub_10009CFEC();
  sub_10009CFCC((void *)&_mh_execute_header, v2, v3, "Warning: We aren't correctly mapping ControllerTypeForViewController (%@ %@)", v4, v5, v6, v7, 2u);
}

void sub_100173670()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "iPhone is configured in better-togther, but trying to pair watch in regular configuration. Presenting error alert to unpair", v2, v3, v4, v5, v6);
}

void sub_1001736A4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100173710()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Nothing to do here, because we already did it.", v2, v3, v4, v5, v6);
}

void sub_100173744(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001737B4()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "missing active watch. skipping to tell NR to update to normal state", v2, v3, v4, v5, v6);
}

void sub_1001737E8()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "IMPORTANT: Are you seeing the wrong color/material of Apple Watch? You must be connected to the internal network to pull watch images! Please enable VPN or manually connect to the internal network!", v2, v3, v4, v5, v6);
}

void sub_10017381C(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = [*(id *)(a1 + 32) _bridgeConciseDebugDescription];
  sub_1000B718C();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to pull Assets For %@", v4, 0xCu);
}

void sub_1001738B4()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Unable to take suspend assertion!", v2, v3, v4, v5, v6);
}

void sub_1001738E8()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Was already in Setup flow, ignoring Setup flow presentation", v2, v3, v4, v5, v6);
}

void sub_10017391C()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "User Disagreed to terms. Cancel Setup.", v2, v3, v4, v5, v6);
}

void sub_100173950()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "This Apple Watch requires newer companion hardware. Cancel Setup.", v2, v3, v4, v5, v6);
}

void sub_100173984()
{
  sub_1000B718C();
  sub_100085278((void *)&_mh_execute_header, v0, v1, "IDS Message Send Failed! (%@)", v2, v3, v4, v5, v6);
}

void sub_1001739EC(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Pairing Error %d", (uint8_t *)v2, 8u);
}

void sub_100173A64()
{
  sub_1000B718C();
  sub_100085278((void *)&_mh_execute_header, v0, v1, "Pairing Failed! (%@)", v2, v3, v4, v5, v6);
}

void sub_100173ACC()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Initial Pairing Failed: called while _setupController is nil! Resetting silently with no alert.", v2, v3, v4, v5, v6);
}

void sub_100173B00()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Dismissing 'transport became unreachable' alert", v2, v3, v4, v5, v6);
}

void sub_100173B34()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Presented 'transport became unreachable' alert", v2, v3, v4, v5, v6);
}

void sub_100173B68(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100173BD8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100173C48(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "-[COSPreferencesAppController _updateAppStoreRowForRepair]_block_invoke";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s AMSDeviceMessenger error (%@)", (uint8_t *)&v2, 0x16u);
}

void sub_100173CD4()
{
  sub_1000B718C();
  sub_100085278((void *)&_mh_execute_header, v0, v1, "getActiveTinkerFamilyMemberWithCompletion: error %@", v2, v3, v4, v5, v6);
}

uint64_t sub_100173D3C()
{
  return sub_100173D64();
}

uint64_t sub_100173D64()
{
  uint64_t v0 = abort_report_np();
  return sub_100173D8C(v0);
}

void sub_100173D8C(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint8_t v6 = [*(id *)(a1 + 32) domain];
  uint64_t v7 = *(void *)(a1 + 40);
  int v8 = 138412802;
  uint64_t v9 = v6;
  __int16 v10 = 2112;
  uint64_t v11 = v7;
  __int16 v12 = 2112;
  uint64_t v13 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "could not synchronize %@ %@ %@", (uint8_t *)&v8, 0x20u);
}

void sub_100173E50(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Crown Choice: Unexpected missing pairing data store! device: (%@)", (uint8_t *)&v2, 0xCu);
}

void sub_100173EC8(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Crown Choice: Unexpected error! device: (%@); pairingID: (%@)",
    (uint8_t *)&v3,
    0x16u);
}

void sub_100173F50(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "[UsesDarkTheme Violation] Step: %@", (uint8_t *)&v2, 0xCu);
}

void sub_100173FC8(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "expressSetupProvisioningContext failed to provide provisioning context", v1, 2u);
}

void sub_10017400C(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "-[COSPairingTypeSelectionViewController preflightPairingFlowAgainstDeviceTakeoverProtection:]_block_invoke_2";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s ~ Failed with Error: %@. Operation Gated.", (uint8_t *)&v2, 0x16u);
}

void sub_100174098(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001740D0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100174108(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100174140(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Connectivity Error: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001741B8(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Unhandled Family Eligibility Error: %@ (response: %@)", (uint8_t *)&v3, 0x16u);
}

uint64_t sub_100174240()
{
  uint64_t v0 = abort_report_np();
  return sub_100174268(v0);
}

void sub_100174268(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Attempt to pair with invalid device (version Magic Code mismatch).", v1, 2u);
}

void sub_1001742AC(void *a1, NSObject *a2)
{
  int v3 = [a1 pairingID];
  int v4 = 138412290;
  __int16 v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Device: %@ has an incompatible NRDevicePropertyMaxPairingCompatibilityVersion, requires update.", (uint8_t *)&v4, 0xCu);
}

void sub_100174344(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  int v3 = "-[COSPairedDeviceListViewController _switchToDeviceWithSpecifier:atIndex:successCompletion:]_block_invoke";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s: failed to set pairingParent id in registry: %@", (uint8_t *)&v2, 0x16u);
}

void sub_1001743D0(uint64_t *a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *a1;
  int v4 = 138412546;
  uint64_t v5 = v3;
  __int16 v6 = 2112;
  uint64_t v7 = a2;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "Scanned Malformed Code (%@) -- (%@)", (uint8_t *)&v4, 0x16u);
}

void sub_10017445C(void *a1, NSObject *a2)
{
  int v3 = 134218240;
  id v4 = [a1 retryMetadataReadCounter];
  __int16 v5 = 1024;
  int v6 = 1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Received NULL Watch Pairing Extended Metadata, retrying (%lu/%d)", (uint8_t *)&v3, 0x12u);
}

void sub_1001744F8()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Received NULL Watch Pairing Extended Metadata, no more retries, failing pairing", v2, v3, v4, v5, v6);
}

void sub_10017452C()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Scanned Watch is not compatible with Satellite-pairing.", v2, v3, v4, v5, v6);
}

void sub_100174560()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Scanned Watch is not compatible with Yorktown-pairing.", v2, v3, v4, v5, v6);
}

void sub_100174594(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [a1 deviceSetupName];
  int v6 = 138412546;
  uint64_t v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_fault_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_FAULT, "Error Pairing %@ -- %@", (uint8_t *)&v6, 0x16u);
}

void sub_100174644()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "UHP paired Watch is not compatible with Satellite-pairing.", v2, v3, v4, v5, v6);
}

void sub_100174678()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "UHP paired Watch is not compatible with Yorktown-pairing.", v2, v3, v4, v5, v6);
}

void sub_1001746AC(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to register block and get notify token for %@", (uint8_t *)&v2, 0xCu);
}

uint64_t sub_100174724()
{
  uint64_t v0 = abort_report_np();
  return sub_10017474C(v0);
}

uint64_t sub_10017474C()
{
  uint64_t v0 = abort_report_np();
  return sub_100174774(v0);
}

uint64_t sub_100174774()
{
  uint64_t v0 = abort_report_np();
  return sub_10017479C(v0);
}

uint64_t sub_10017479C()
{
  uint64_t v0 = abort_report_np();
  return sub_1001747C4(v0);
}

uint64_t sub_1001747C4()
{
  uint64_t v0 = abort_report_np();
  return sub_1001747EC(v0);
}

uint64_t sub_1001747EC()
{
  uint64_t v0 = abort_report_np();
  return sub_100174814(v0);
}

void sub_100174814(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 pairingID];
  int v4 = 136315394;
  uint64_t v5 = "-[COSWatchPairedViewController _madeWristOnLeftSelection:crownOnRightSelection:]";
  __int16 v6 = 2112;
  uint64_t v7 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s Unexpected missing pairing data store! device: (%@)", (uint8_t *)&v4, 0x16u);
}

uint64_t sub_1001748C0()
{
  uint64_t v0 = abort_report_np();
  return sub_1001748E8(v0);
}

void sub_1001748E8(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Not connected. Presenting alert above VC: %@", (uint8_t *)&v2, 0xCu);
}

void sub_100174960(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100174998(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001749D0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100174A08(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100174A40(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100174A78(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100174AB0()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "No IDMS account found.", v2, v3, v4, v5, v6);
}

void sub_100174AE4()
{
  sub_100100540();
  sub_100100558((void *)&_mh_execute_header, v0, v1, "Failed to retrieve credentials (%@) for the IDMS account with error: (%@).");
}

void sub_100174B4C()
{
  sub_1000B718C();
  sub_100085278((void *)&_mh_execute_header, v0, v1, "Failed to sign-in via Magic Auth with error: (%@) ", v2, v3, v4, v5, v6);
}

void sub_100174BB4()
{
  sub_1000B718C();
  sub_100085278((void *)&_mh_execute_header, v0, v1, "Failed to sign-in via Password-less Auth with error: (%@)", v2, v3, v4, v5, v6);
}

void sub_100174C1C()
{
  sub_1000B718C();
  sub_100085278((void *)&_mh_execute_header, v0, v1, "Failed to sign-in via Proxied Auth with error: (%@) ", v2, v3, v4, v5, v6);
}

void sub_100174C84()
{
  sub_1000B718C();
  sub_100085278((void *)&_mh_execute_header, v0, v1, "Proxied authentication failed with error: %@", v2, v3, v4, v5, v6);
}

void sub_100174CEC()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "Invalid passwordlessToken.", v2, v3, v4, v5, v6);
}

void sub_100174D20(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100174D98(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "-[COSAppleIDAuthController _resumeSatelliteSignin]_block_invoke";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s: failed to set alt account id in registry: %@", (uint8_t *)&v2, 0x16u);
}

void sub_100174E24()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "sign-in controller deallocated.", v2, v3, v4, v5, v6);
}

void sub_100174E58(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100174ED0()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "com.apple.gs.icloud.family.auth was nil", v2, v3, v4, v5, v6);
}

void sub_100174F04()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "altDSID/AKAuthenticationDSIDKey was nil", v2, v3, v4, v5, v6);
}

void sub_100174F38()
{
  sub_10001E484();
  sub_10001E468((void *)&_mh_execute_header, v0, v1, "memberId/AKAuthenticationDSIDKey was nil", v2, v3, v4, v5, v6);
}

void sub_100174F6C(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Migration manager released before PSYSyncSessionObserver started", v1, 2u);
}

void sub_100174FB0(uint64_t *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = [*(id *)(a2 + 40) httpResponse];
  int v6 = 138412546;
  uint64_t v7 = v4;
  __int16 v8 = 2048;
  id v9 = [v5 statusCode];
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Online terms response failed with error: %@ responseCode: %li", (uint8_t *)&v6, 0x16u);
}

void sub_100175068(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Releasing hold for terms on error", v1, 2u);
}

void sub_1001750AC(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error parsing object model: %@", (uint8_t *)&v2, 0xCu);
}

void sub_100175124(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed %@ %@", (uint8_t *)&v3, 0x16u);
}

void sub_1001751AC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100175218(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100175284(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001752BC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001752F4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10017532C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001753A4(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Unable to complete unpair, object deallocated", v1, 2u);
}

void sub_1001753E8(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unpair failed with error: %@", (uint8_t *)&v2, 0xCu);
}

void sub_100175460(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Unable to handle the unpair notification, object deallocated", v1, 2u);
}

void sub_1001754A4(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Guardian Account Repair Failed!", v1, 2u);
}

void sub_1001754E8()
{
  *(_WORD *)uint64_t v0 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Could not load beam_bridge_2022_v2_1.mlmodelc in the bundle resource", v0, 2u);
}

uint64_t static FormatStyle<>.dateTime.getter()
{
  return static FormatStyle<>.dateTime.getter();
}

uint64_t FormatStyle.locale(_:)()
{
  return FormatStyle.locale(_:)();
}

uint64_t static Notification._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for Notification()
{
  return type metadata accessor for Notification();
}

Swift::String __swiftcall NSLocalizedString(_:tableName:bundle:value:comment:)(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  uint64_t v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(_._countAndFlagsBits, _._object, tableName.value._countAndFlagsBits, tableName.value._object, bundle.super.isa, value._countAndFlagsBits, value._object, comment._countAndFlagsBits);
  result._object = v6;
  result._Swift::Int countAndFlagsBits = v5;
  return result;
}

uint64_t IntegerFormatStyle.init(locale:)()
{
  return IntegerFormatStyle.init(locale:)();
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t LocalizedStringResource.init(stringLiteral:)()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t type metadata accessor for LocalizedStringResource()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t type metadata accessor for URL.DirectoryHint()
{
  return type metadata accessor for URL.DirectoryHint();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t URL.deletingLastPathComponent()()
{
  return URL.deletingLastPathComponent()();
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

Swift::String __swiftcall URL.path(percentEncoded:)(Swift::Bool percentEncoded)
{
  uint64_t v1 = URL.path(percentEncoded:)(percentEncoded);
  result._object = v2;
  result._Swift::Int countAndFlagsBits = v1;
  return result;
}

uint64_t URL.appending<A>(path:directoryHint:)()
{
  return URL.appending<A>(path:directoryHint:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Data.write(to:options:)()
{
  return Data.write(to:options:)();
}

uint64_t Date.FormatStyle.month(_:)()
{
  return Date.FormatStyle.month(_:)();
}

uint64_t static Date.FormatStyle.Symbol.Month.wide.getter()
{
  return static Date.FormatStyle.Symbol.Month.wide.getter();
}

uint64_t type metadata accessor for Date.FormatStyle.Symbol.Month()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Month();
}

uint64_t type metadata accessor for Date.FormatStyle()
{
  return type metadata accessor for Date.FormatStyle();
}

uint64_t static Date.distantPast.getter()
{
  return static Date.distantPast.getter();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)Date._bridgeToObjectiveC()();
}

uint64_t Date.timeIntervalSinceNow.getter()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t Date.formatted<A>(_:)()
{
  return Date.formatted<A>(_:)();
}

uint64_t Date.init()()
{
  return Date.init()();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

NSLocale __swiftcall Locale._bridgeToObjectiveC()()
{
  return (NSLocale)Locale._bridgeToObjectiveC()();
}

uint64_t static Locale.autoupdatingCurrent.getter()
{
  return static Locale.autoupdatingCurrent.getter();
}

uint64_t type metadata accessor for Locale()
{
  return type metadata accessor for Locale();
}

NSCalendar __swiftcall Calendar._bridgeToObjectiveC()()
{
  return (NSCalendar)Calendar._bridgeToObjectiveC()();
}

uint64_t static Calendar.autoupdatingCurrent.getter()
{
  return static Calendar.autoupdatingCurrent.getter();
}

uint64_t type metadata accessor for Calendar.Component()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t type metadata accessor for Calendar()
{
  return type metadata accessor for Calendar();
}

NSIndexPath __swiftcall IndexPath._bridgeToObjectiveC()()
{
  return (NSIndexPath)IndexPath._bridgeToObjectiveC()();
}

uint64_t static IndexPath._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for IndexPath()
{
  return type metadata accessor for IndexPath();
}

uint64_t dispatch thunk of Activity.activityState.getter()
{
  return dispatch thunk of Activity.activityState.getter();
}

uint64_t Activity.id.getter()
{
  return Activity.id.getter();
}

uint64_t static ActivityUIDismissalPolicy.immediate.getter()
{
  return static ActivityUIDismissalPolicy.immediate.getter();
}

uint64_t type metadata accessor for ActivityUIDismissalPolicy()
{
  return type metadata accessor for ActivityUIDismissalPolicy();
}

uint64_t type metadata accessor for ActivityState()
{
  return type metadata accessor for ActivityState();
}

uint64_t static AlertConfiguration.AlertSound.default.getter()
{
  return static AlertConfiguration.AlertSound.default.getter();
}

uint64_t type metadata accessor for AlertConfiguration.AlertSound()
{
  return type metadata accessor for AlertConfiguration.AlertSound();
}

uint64_t AlertConfiguration.init(title:body:sound:)()
{
  return AlertConfiguration.init(title:body:sound:)();
}

uint64_t type metadata accessor for AlertConfiguration()
{
  return type metadata accessor for AlertConfiguration();
}

NSNumber __swiftcall CGFloat._bridgeToObjectiveC()()
{
  return (NSNumber)CGFloat._bridgeToObjectiveC()();
}

uint64_t isFeatureEnabled(_:)()
{
  return isFeatureEnabled(_:)();
}

uint64_t LiveActivitySetupState.init(textMap:imageMap:metadata:shouldSuppressAlert:)()
{
  return LiveActivitySetupState.init(textMap:imageMap:metadata:shouldSuppressAlert:)();
}

uint64_t LiveActivityImageSource.systemAppleWatchSFSymbol.unsafeMutableAddressor()
{
  return LiveActivityImageSource.systemAppleWatchSFSymbol.unsafeMutableAddressor();
}

uint64_t LiveActivitySetupLogger.unsafeMutableAddressor()
{
  return LiveActivitySetupLogger.unsafeMutableAddressor();
}

uint64_t LiveActivitySetupAttributes.init(startTime:)()
{
  return LiveActivitySetupAttributes.init(startTime:)();
}

uint64_t type metadata accessor for LiveActivitySetupAttributes()
{
  return type metadata accessor for LiveActivitySetupAttributes();
}

uint64_t LiveActivityServiceDebugUtils.debugCallback.unsafeMutableAddressor()
{
  return LiveActivityServiceDebugUtils.debugCallback.unsafeMutableAddressor();
}

uint64_t LiveActivitySetupStateProvider.state.getter()
{
  return LiveActivitySetupStateProvider.state.getter();
}

uint64_t LiveActivitySharedAppGroupName.unsafeMutableAddressor()
{
  return LiveActivitySharedAppGroupName.unsafeMutableAddressor();
}

uint64_t LiveActivityText.init(title:subtitle:)()
{
  return LiveActivityText.init(title:subtitle:)();
}

uint64_t LiveActivityImages.init(leadingImageSource:trailingImageSource:)()
{
  return LiveActivityImages.init(leadingImageSource:trailingImageSource:)();
}

uint64_t LiveActivityService.shared.unsafeMutableAddressor()
{
  return LiveActivityService.shared.unsafeMutableAddressor();
}

uint64_t LiveActivityTextMap.init(dynamicIslandExpanded:lockScreen:)()
{
  return LiveActivityTextMap.init(dynamicIslandExpanded:lockScreen:)();
}

uint64_t LiveActivityImageMap.init(dynamicIslandCompact:dynamicIslandMinimal:dynamicIslandExpanded:lockScreen:)()
{
  return LiveActivityImageMap.init(dynamicIslandCompact:dynamicIslandMinimal:dynamicIslandExpanded:lockScreen:)();
}

uint64_t LiveActivityImageMap.init(imagePath:)()
{
  return LiveActivityImageMap.init(imagePath:)();
}

uint64_t LiveActivityMetadata.ProgressMetadata.init(progress:positionFactor:sizeFactor:watchAssetType:)()
{
  return LiveActivityMetadata.ProgressMetadata.init(progress:positionFactor:sizeFactor:watchAssetType:)();
}

uint64_t LiveActivityPlacement.imageHeight.getter()
{
  return LiveActivityPlacement.imageHeight.getter();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t Logger.init(subsystem:category:)()
{
  return Logger.init(subsystem:category:)();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t ChartContent.annotation<A>(position:alignment:spacing:content:)()
{
  return ChartContent.annotation<A>(position:alignment:spacing:content:)();
}

uint64_t ChartContent.cornerRadius(_:style:)()
{
  return ChartContent.cornerRadius(_:style:)();
}

uint64_t ChartContent.accessibilityLabel<A>(_:)()
{
  return ChartContent.accessibilityLabel<A>(_:)();
}

uint64_t ChartContent.accessibilityValue<A>(_:)()
{
  return ChartContent.accessibilityValue<A>(_:)();
}

uint64_t static AxisMarkPreset.automatic.getter()
{
  return static AxisMarkPreset.automatic.getter();
}

uint64_t type metadata accessor for AxisMarkPreset()
{
  return type metadata accessor for AxisMarkPreset();
}

uint64_t static AxisMarkValues.stride(by:count:roundLowerBound:roundUpperBound:calendar:)()
{
  return static AxisMarkValues.stride(by:count:roundLowerBound:roundUpperBound:calendar:)();
}

uint64_t type metadata accessor for AxisMarkValues()
{
  return type metadata accessor for AxisMarkValues();
}

uint64_t AxisValueLabel.init<A>(format:centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:)()
{
  return AxisValueLabel.init<A>(format:centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:)();
}

uint64_t static PlottableValue.value<>(_:_:unit:calendar:)()
{
  return static PlottableValue.value<>(_:_:unit:calendar:)();
}

uint64_t static PlottableValue.value(_:_:)()
{
  return static PlottableValue.value(_:_:)();
}

uint64_t static AxisMarkPosition.automatic.getter()
{
  return static AxisMarkPosition.automatic.getter();
}

uint64_t type metadata accessor for AxisMarkPosition()
{
  return type metadata accessor for AxisMarkPosition();
}

uint64_t type metadata accessor for ChartPlotContent()
{
  return type metadata accessor for ChartPlotContent();
}

uint64_t static AnnotationPosition.top.getter()
{
  return static AnnotationPosition.top.getter();
}

uint64_t type metadata accessor for AnnotationPosition()
{
  return type metadata accessor for AnnotationPosition();
}

uint64_t static AxisValueLabelOrientation.automatic.getter()
{
  return static AxisValueLabelOrientation.automatic.getter();
}

uint64_t type metadata accessor for AxisValueLabelOrientation()
{
  return type metadata accessor for AxisValueLabelOrientation();
}

uint64_t static AxisValueLabelCollisionResolution.automatic.getter()
{
  return static AxisValueLabelCollisionResolution.automatic.getter();
}

uint64_t type metadata accessor for AxisValueLabelCollisionResolution()
{
  return type metadata accessor for AxisValueLabelCollisionResolution();
}

uint64_t Chart.init<A, B, C>(_:id:content:)()
{
  return Chart.init<A, B, C>(_:id:content:)();
}

uint64_t BarMark.init<A, B>(x:y:width:height:stacking:)()
{
  return BarMark.init<A, B>(x:y:width:height:stacking:)();
}

uint64_t type metadata accessor for BarMark()
{
  return type metadata accessor for BarMark();
}

uint64_t AxisMark.font(_:)()
{
  return AxisMark.font(_:)();
}

uint64_t AxisMarks.init(preset:position:values:content:)()
{
  return AxisMarks.init(preset:position:values:content:)();
}

uint64_t AnyCancellable.store<A>(in:)()
{
  return AnyCancellable.store<A>(in:)();
}

uint64_t ObservableObject<>.objectWillChange.getter()
{
  return ObservableObject<>.objectWillChange.getter();
}

Swift::Void __swiftcall ObservableObjectPublisher.send()()
{
}

uint64_t Published.init(initialValue:)()
{
  return Published.init(initialValue:)();
}

uint64_t Published.projectedValue.getter()
{
  return Published.projectedValue.getter();
}

uint64_t Published.projectedValue.setter()
{
  return Published.projectedValue.setter();
}

uint64_t static Published.subscript.modify()
{
  return static Published.subscript.modify();
}

uint64_t static Published.subscript.getter()
{
  return static Published.subscript.getter();
}

uint64_t static Published.subscript.setter()
{
  return static Published.subscript.setter();
}

uint64_t type metadata accessor for Published()
{
  return type metadata accessor for Published();
}

uint64_t Publisher.receive<A>(on:options:)()
{
  return Publisher.receive<A>(on:options:)();
}

uint64_t Publisher<>.sink(receiveValue:)()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t EdgeInsets.init(_all:)()
{
  return EdgeInsets.init(_all:)();
}

uint64_t _FrameLayout.init(width:height:alignment:)()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t ObservedObject.init(wrappedValue:)()
{
  return ObservedObject.init(wrappedValue:)();
}

uint64_t EnvironmentValues.pixelLength.getter()
{
  return EnvironmentValues.pixelLength.getter();
}

uint64_t EnvironmentValues.foregroundColor.getter()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t EnvironmentValues.foregroundColor.setter()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t EnvironmentValues.init()()
{
  return EnvironmentValues.init()();
}

uint64_t type metadata accessor for EnvironmentValues()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t LocalizedStringKey.init(stringLiteral:)()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t type metadata accessor for RoundedCornerStyle()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t UIHostingController.init(rootView:)()
{
  return UIHostingController.init(rootView:)();
}

uint64_t static Edge.Set.all.getter()
{
  return static Edge.Set.all.getter();
}

uint64_t static Edge.Set.top.getter()
{
  return static Edge.Set.top.getter();
}

uint64_t static Font.Weight.medium.getter()
{
  return static Font.Weight.medium.getter();
}

uint64_t Font.weight(_:)()
{
  return Font.weight(_:)();
}

uint64_t static Font.footnote.getter()
{
  return static Font.footnote.getter();
}

uint64_t Text.foregroundColor(_:)()
{
  return Text.foregroundColor(_:)();
}

uint64_t Text.font(_:)()
{
  return Text.font(_:)();
}

uint64_t Text.init<A>(_:format:)()
{
  return Text.init<A>(_:format:)();
}

uint64_t View.chartXAxis<A>(content:)()
{
  return View.chartXAxis<A>(content:)();
}

uint64_t View.chartYAxis(_:)()
{
  return View.chartYAxis(_:)();
}

uint64_t View.chartPlotStyle<A>(content:)()
{
  return View.chartPlotStyle<A>(content:)();
}

uint64_t static View._makeView(view:inputs:)()
{
  return static View._makeView(view:inputs:)();
}

uint64_t static View._makeViewList(view:inputs:)()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t static View._viewListCount(inputs:)()
{
  return static View._viewListCount(inputs:)();
}

uint64_t static Color.accentColor.getter()
{
  return static Color.accentColor.getter();
}

uint64_t Color.init(_:)()
{
  return Color.init(_:)();
}

uint64_t Divider.init()()
{
  return Divider.init()();
}

uint64_t type metadata accessor for Divider()
{
  return type metadata accessor for Divider();
}

uint64_t static Alignment.bottom.getter()
{
  return static Alignment.bottom.getter();
}

uint64_t static Alignment.center.getter()
{
  return static Alignment.center.getter();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t Encodable.stringValue.getter()
{
  return Encodable.stringValue.getter();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.init<A>(describing:)()
{
  return String.init<A>(describing:)();
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._forceBridgeFromObjectiveC(_:result:)()
{
  return static Array._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

NSNumber __swiftcall Bool._bridgeToObjectiveC()()
{
  return (NSNumber)Bool._bridgeToObjectiveC()();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t static MainActor.shared.getter()
{
  return static MainActor.shared.getter();
}

uint64_t type metadata accessor for MainActor()
{
  return type metadata accessor for MainActor();
}

uint64_t static TaskPriority.userInitiated.getter()
{
  return static TaskPriority.userInitiated.getter();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

Swift::Void __swiftcall Task.cancel()()
{
}

uint64_t static Task<>.isCancelled.getter()
{
  return static Task<>.isCancelled.getter();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerOptions()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerOptions();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t type metadata accessor for NSNotificationCenter.Publisher()
{
  return type metadata accessor for NSNotificationCenter.Publisher();
}

uint64_t NSNotificationCenter.publisher(for:object:)()
{
  return NSNotificationCenter.publisher(for:object:)();
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t NSObject.hash(into:)()
{
  return NSObject.hash(into:)();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t StringProtocol.hash.getter()
{
  return StringProtocol.hash.getter();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t __CocoaSet.makeIterator()()
{
  return __CocoaSet.makeIterator()();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return __CocoaSet.Iterator.next()();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t static _SetStorage.copy(original:)()
{
  return static _SetStorage.copy(original:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases._rawValue, string._countAndFlagsBits, string._object);
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)()
{
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t Error.localizedDescription.getter()
{
  return Error.localizedDescription.getter();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t AMSLogKey()
{
  return _AMSLogKey();
}

uint64_t BPSAccessoryColor()
{
  return _BPSAccessoryColor();
}

uint64_t BPSAccessoryHighlightColor()
{
  return _BPSAccessoryHighlightColor();
}

uint64_t BPSApplyStyleToNavBar()
{
  return _BPSApplyStyleToNavBar();
}

uint64_t BPSApplyStyleToNavBarOptions()
{
  return _BPSApplyStyleToNavBarOptions();
}

uint64_t BPSArchivedDevices()
{
  return _BPSArchivedDevices();
}

uint64_t BPSBackgroundColor()
{
  return _BPSBackgroundColor();
}

uint64_t BPSBridgeTintColor()
{
  return _BPSBridgeTintColor();
}

uint64_t BPSCellHightlightColor()
{
  return _BPSCellHightlightColor();
}

uint64_t BPSCreateRoundedGizmoAppIconForSquareImage()
{
  return _BPSCreateRoundedGizmoAppIconForSquareImage();
}

uint64_t BPSCurrentScreenType()
{
  return _BPSCurrentScreenType();
}

uint64_t BPSDefaultDetailTextAttributes()
{
  return _BPSDefaultDetailTextAttributes();
}

uint64_t BPSDefaultTitleTextAttributes()
{
  return _BPSDefaultTitleTextAttributes();
}

uint64_t BPSDetailTextColor()
{
  return _BPSDetailTextColor();
}

uint64_t BPSDeviceHasAllCapabilitiesForStrings()
{
  return _BPSDeviceHasAllCapabilitiesForStrings();
}

uint64_t BPSDeviceHasCapabilityForString()
{
  return _BPSDeviceHasCapabilityForString();
}

uint64_t BPSDeviceHasCellularDataCapability()
{
  return _BPSDeviceHasCellularDataCapability();
}

uint64_t BPSDeviceHasStandaloneAppsCapability()
{
  return _BPSDeviceHasStandaloneAppsCapability();
}

uint64_t BPSDevicePickerCellBackgroundColor()
{
  return _BPSDevicePickerCellBackgroundColor();
}

uint64_t BPSDevicePickerCellHighlightColor()
{
  return _BPSDevicePickerCellHighlightColor();
}

uint64_t BPSDeviceRemoteAssetString()
{
  return _BPSDeviceRemoteAssetString();
}

uint64_t BPSEditablePlaceholderColor()
{
  return _BPSEditablePlaceholderColor();
}

uint64_t BPSFontWithSize()
{
  return _BPSFontWithSize();
}

uint64_t BPSForegroundColor()
{
  return _BPSForegroundColor();
}

uint64_t BPSGetActiveDevice()
{
  return _BPSGetActiveDevice();
}

uint64_t BPSGetActiveSetupCompletedDevice()
{
  return _BPSGetActiveSetupCompletedDevice();
}

uint64_t BPSGetRelevantScreenStringForProduct()
{
  return _BPSGetRelevantScreenStringForProduct();
}

uint64_t BPSIsDeviceCompatibleWithVersions()
{
  return _BPSIsDeviceCompatibleWithVersions();
}

uint64_t BPSIsIconForBundleIDRemote()
{
  return _BPSIsIconForBundleIDRemote();
}

uint64_t BPSLocalIconName()
{
  return _BPSLocalIconName();
}

uint64_t BPSLocalizedNameForMaterial()
{
  return _BPSLocalizedNameForMaterial();
}

uint64_t BPSLocalizedShortEdition()
{
  return _BPSLocalizedShortEdition();
}

uint64_t BPSLocalizedVariantSizeForProductType()
{
  return _BPSLocalizedVariantSizeForProductType();
}

uint64_t BPSMigrateDevices()
{
  return _BPSMigrateDevices();
}

uint64_t BPSMigrationDevices()
{
  return _BPSMigrationDevices();
}

uint64_t BPSOffSwitchBorderColor()
{
  return _BPSOffSwitchBorderColor();
}

uint64_t BPSOpenSensitiveURLAsync()
{
  return _BPSOpenSensitiveURLAsync();
}

uint64_t BPSPillButtonImage()
{
  return _BPSPillButtonImage();
}

uint64_t BPSPillSelectedColor()
{
  return _BPSPillSelectedColor();
}

uint64_t BPSPresentGizmoUnreachableOrLockedServiceAlertWithDismissalHandler()
{
  return _BPSPresentGizmoUnreachableOrLockedServiceAlertWithDismissalHandler();
}

uint64_t BPSPresentGizmoUnreachableServiceAlertWithDismissalHandler()
{
  return _BPSPresentGizmoUnreachableServiceAlertWithDismissalHandler();
}

uint64_t BPSProgressBarStalledTintColor()
{
  return _BPSProgressBarStalledTintColor();
}

uint64_t BPSProgressBarTintColor()
{
  return _BPSProgressBarTintColor();
}

uint64_t BPSProgressBarTrackTintColor()
{
  return _BPSProgressBarTrackTintColor();
}

uint64_t BPSRemoveCapabilityIncompatibleSpecifiersFromArray()
{
  return _BPSRemoveCapabilityIncompatibleSpecifiersFromArray();
}

uint64_t BPSRemoveHiddenAppsFromSpecifiers()
{
  return _BPSRemoveHiddenAppsFromSpecifiers();
}

uint64_t BPSScreenValueGetRelevantValue()
{
  return _BPSScreenValueGetRelevantValue();
}

uint64_t BPSScreenValueGetRelevantZoomValue()
{
  return _BPSScreenValueGetRelevantZoomValue();
}

uint64_t BPSSeparatorColor()
{
  return _BPSSeparatorColor();
}

uint64_t BPSSetupBackgroundColor()
{
  return _BPSSetupBackgroundColor();
}

uint64_t BPSSetupTintColor()
{
  return _BPSSetupTintColor();
}

uint64_t BPSShortLocalizedVariantSizeForProductType()
{
  return _BPSShortLocalizedVariantSizeForProductType();
}

uint64_t BPSShouldOfferSiriForDeviceLanguage()
{
  return _BPSShouldOfferSiriForDeviceLanguage();
}

uint64_t BPSStockholmSupportedInGizmoRegion()
{
  return _BPSStockholmSupportedInGizmoRegion();
}

uint64_t BPSSystemAppIsRemovable()
{
  return _BPSSystemAppIsRemovable();
}

uint64_t BPSTextColor()
{
  return _BPSTextColor();
}

uint64_t BPSTintedSymbol()
{
  return _BPSTintedSymbol();
}

uint64_t BPSUnlocalizedNameForMaterial()
{
  return _BPSUnlocalizedNameForMaterial();
}

uint64_t BPSVariantSizeForArtworkDeviceSubType()
{
  return _BPSVariantSizeForArtworkDeviceSubType();
}

uint64_t BPSVariantSizeForProductType()
{
  return _BPSVariantSizeForProductType();
}

uint64_t BPSWatchAppBundleIDForSettingsBundle()
{
  return _BPSWatchAppBundleIDForSettingsBundle();
}

uint64_t BPSWatchAppBundleIDForSettingsBundleSpecifier()
{
  return _BPSWatchAppBundleIDForSettingsBundleSpecifier();
}

uint64_t BRGetAllMetricKeysAndValues()
{
  return _BRGetAllMetricKeysAndValues();
}

uint64_t BRSignInFailureErrorForAccountType()
{
  return _BRSignInFailureErrorForAccountType();
}

uint64_t BRSignInPairingTimeEventForAccountType()
{
  return _BRSignInPairingTimeEventForAccountType();
}

CFTimeInterval CACurrentMediaTime(void)
{
  return _CACurrentMediaTime();
}

CGAffineTransform *__cdecl CATransform3DGetAffineTransform(CGAffineTransform *__return_ptr retstr, CATransform3D *t)
{
  return _CATransform3DGetAffineTransform(retstr, t);
}

CATransform3D *__cdecl CATransform3DMakeRotation(CATransform3D *__return_ptr retstr, CGFloat angle, CGFloat x, CGFloat y, CGFloat z)
{
  return _CATransform3DMakeRotation(retstr, angle, x, y, z);
}

CATransform3D *__cdecl CATransform3DScale(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return _CATransform3DScale(retstr, t, sx, sy, sz);
}

CATransform3D *__cdecl CATransform3DTranslate(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return _CATransform3DTranslate(retstr, t, tx, ty, tz);
}

CCCryptorStatus CCCrypt(CCOperation op, CCAlgorithm alg, CCOptions options, const void *key, size_t keyLength, const void *iv, const void *dataIn, size_t dataInLength, void *dataOut, size_t dataOutAvailable, size_t *dataOutMoved)
{
  return _CCCrypt(op, alg, options, key, keyLength, iv, dataIn, dataInLength, dataOut, dataOutAvailable, dataOutMoved);
}

void CCHmac(CCHmacAlgorithm algorithm, const void *key, size_t keyLength, const void *data, size_t dataLength, void *macOut)
{
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  return _CFAbsoluteTimeGetCurrent();
}

CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks)
{
  return _CFArrayCreateMutable(allocator, capacity, callBacks);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return _CFArrayGetCount(theArray);
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return _CFArrayGetValueAtIndex(theArray, idx);
}

void CFArrayInsertValueAtIndex(CFMutableArrayRef theArray, CFIndex idx, const void *value)
{
}

void CFArrayRemoveAllValues(CFMutableArrayRef theArray)
{
}

CFStringRef CFBundleGetIdentifier(CFBundleRef bundle)
{
  return _CFBundleGetIdentifier(bundle);
}

CFDictionaryRef CFBundleGetInfoDictionary(CFBundleRef bundle)
{
  return _CFBundleGetInfoDictionary(bundle);
}

CFDateFormatterRef CFDateFormatterCreate(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle)
{
  return _CFDateFormatterCreate(allocator, locale, dateStyle, timeStyle);
}

CFStringRef CFDateFormatterCreateStringWithDate(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFDateRef date)
{
  return _CFDateFormatterCreateStringWithDate(allocator, formatter, date);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return _CFDictionaryCreateMutable(allocator, capacity, keyCallBacks, valueCallBacks);
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

CFLocaleRef CFLocaleCopyCurrent(void)
{
  return _CFLocaleCopyCurrent();
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

CFNotificationCenterRef CFNotificationCenterGetDistributedCenter(void)
{
  return _CFNotificationCenterGetDistributedCenter();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

void CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer)
{
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
}

CFNumberRef CFNumberCreate(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr)
{
  return _CFNumberCreate(allocator, theType, valuePtr);
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return _CFPreferencesAppSynchronize(applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return _CFPreferencesCopyAppValue(key, applicationID);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return _CFPreferencesGetAppBooleanValue(key, applicationID, keyExistsAndHasValidFormat);
}

CFIndex CFPreferencesGetAppIntegerValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return _CFPreferencesGetAppIntegerValue(key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return _CFRetain(cf);
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return _CFRunLoopGetCurrent();
}

void CFRunLoopRemoveSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
}

SInt32 CFUserNotificationDisplayNotice(CFTimeInterval timeout, CFOptionFlags flags, CFURLRef iconURL, CFURLRef soundURL, CFURLRef localizationURL, CFStringRef alertHeader, CFStringRef alertMessage, CFStringRef defaultButtonTitle)
{
  return _CFUserNotificationDisplayNotice(timeout, flags, iconURL, soundURL, localizationURL, alertHeader, alertMessage, defaultButtonTitle);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return _CGAffineTransformMakeScale(retstr, sx, sy);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return _CGBitmapContextCreate(data, width, height, bitsPerComponent, bytesPerRow, space, bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return _CGBitmapContextCreateImage(context);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return _CGColorSpaceCreateDeviceRGB();
}

void CGColorSpaceRelease(CGColorSpaceRef space)
{
}

void CGContextDrawImage(CGContextRef c, CGRect rect, CGImageRef image)
{
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
}

void CGContextRelease(CGContextRef c)
{
}

void CGContextRotateCTM(CGContextRef c, CGFloat angle)
{
}

void CGContextSetInterpolationQuality(CGContextRef c, CGInterpolationQuality quality)
{
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
}

void CGContextStrokeEllipseInRect(CGContextRef c, CGRect rect)
{
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
}

CGBitmapInfo CGImageGetBitmapInfo(CGImageRef image)
{
  return _CGImageGetBitmapInfo(image);
}

size_t CGImageGetBitsPerComponent(CGImageRef image)
{
  return _CGImageGetBitsPerComponent(image);
}

size_t CGImageGetBytesPerRow(CGImageRef image)
{
  return _CGImageGetBytesPerRow(image);
}

CGColorSpaceRef CGImageGetColorSpace(CGImageRef image)
{
  return _CGImageGetColorSpace(image);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return _CGImageGetHeight(image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return _CGImageGetWidth(image);
}

void CGImageRelease(CGImageRef image)
{
}

void CGPathAddPath(CGMutablePathRef path1, const CGAffineTransform *m, CGPathRef path2)
{
}

void CGPathAddRect(CGMutablePathRef path, const CGAffineTransform *m, CGRect rect)
{
}

CGPathRef CGPathCreateCopyByTransformingPath(CGPathRef path, const CGAffineTransform *transform)
{
  return _CGPathCreateCopyByTransformingPath(path, transform);
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return _CGPathCreateMutable();
}

CGPathRef CGPathCreateWithEllipseInRect(CGRect rect, const CGAffineTransform *transform)
{
  return _CGPathCreateWithEllipseInRect(rect, transform);
}

CGRect CGPathGetBoundingBox(CGPathRef path)
{
  return _CGPathGetBoundingBox(path);
}

void CGRectDivide(CGRect rect, CGRect *slice, CGRect *remainder, CGFloat amount, CGRectEdge edge)
{
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  return _CGRectGetMaxX(rect);
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  return _CGRectGetMaxY(rect);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMidY(CGRect rect)
{
  return _CGRectGetMidY(rect);
}

CGFloat CGRectGetMinX(CGRect rect)
{
  return _CGRectGetMinX(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectInset(rect, dx, dy);
}

CVImageBufferRef CMSampleBufferGetImageBuffer(CMSampleBufferRef sbuf)
{
  return _CMSampleBufferGetImageBuffer(sbuf);
}

CMTime *__cdecl CMSampleBufferGetPresentationTimeStamp(CMTime *__return_ptr retstr, CMSampleBufferRef sbuf)
{
  return _CMSampleBufferGetPresentationTimeStamp(retstr, sbuf);
}

CMTime *__cdecl CMTimeMake(CMTime *__return_ptr retstr, int64_t value, int32_t timescale)
{
  return _CMTimeMake(retstr, value, timescale);
}

CMTime *__cdecl CMTimeSubtract(CMTime *__return_ptr retstr, CMTime *lhs, CMTime *rhs)
{
  return _CMTimeSubtract(retstr, lhs, rhs);
}

uint64_t CPFSSizeStrings()
{
  return _CPFSSizeStrings();
}

CVReturn CVPixelBufferCreate(CFAllocatorRef allocator, size_t width, size_t height, OSType pixelFormatType, CFDictionaryRef pixelBufferAttributes, CVPixelBufferRef *pixelBufferOut)
{
  return _CVPixelBufferCreate(allocator, width, height, pixelFormatType, pixelBufferAttributes, pixelBufferOut);
}

void *__cdecl CVPixelBufferGetBaseAddress(CVPixelBufferRef pixelBuffer)
{
  return _CVPixelBufferGetBaseAddress(pixelBuffer);
}

void *__cdecl CVPixelBufferGetBaseAddressOfPlane(CVPixelBufferRef pixelBuffer, size_t planeIndex)
{
  return _CVPixelBufferGetBaseAddressOfPlane(pixelBuffer, planeIndex);
}

size_t CVPixelBufferGetBytesPerRow(CVPixelBufferRef pixelBuffer)
{
  return _CVPixelBufferGetBytesPerRow(pixelBuffer);
}

size_t CVPixelBufferGetBytesPerRowOfPlane(CVPixelBufferRef pixelBuffer, size_t planeIndex)
{
  return _CVPixelBufferGetBytesPerRowOfPlane(pixelBuffer, planeIndex);
}

size_t CVPixelBufferGetHeight(CVPixelBufferRef pixelBuffer)
{
  return _CVPixelBufferGetHeight(pixelBuffer);
}

size_t CVPixelBufferGetHeightOfPlane(CVPixelBufferRef pixelBuffer, size_t planeIndex)
{
  return _CVPixelBufferGetHeightOfPlane(pixelBuffer, planeIndex);
}

OSType CVPixelBufferGetPixelFormatType(CVPixelBufferRef pixelBuffer)
{
  return _CVPixelBufferGetPixelFormatType(pixelBuffer);
}

size_t CVPixelBufferGetWidth(CVPixelBufferRef pixelBuffer)
{
  return _CVPixelBufferGetWidth(pixelBuffer);
}

size_t CVPixelBufferGetWidthOfPlane(CVPixelBufferRef pixelBuffer, size_t planeIndex)
{
  return _CVPixelBufferGetWidthOfPlane(pixelBuffer, planeIndex);
}

Boolean CVPixelBufferIsPlanar(CVPixelBufferRef pixelBuffer)
{
  return _CVPixelBufferIsPlanar(pixelBuffer);
}

CVReturn CVPixelBufferLockBaseAddress(CVPixelBufferRef pixelBuffer, CVPixelBufferLockFlags lockFlags)
{
  return _CVPixelBufferLockBaseAddress(pixelBuffer, lockFlags);
}

void CVPixelBufferRelease(CVPixelBufferRef texture)
{
}

CVPixelBufferRef CVPixelBufferRetain(CVPixelBufferRef texture)
{
  return _CVPixelBufferRetain(texture);
}

CVReturn CVPixelBufferUnlockBaseAddress(CVPixelBufferRef pixelBuffer, CVPixelBufferLockFlags unlockFlags)
{
  return _CVPixelBufferUnlockBaseAddress(pixelBuffer, unlockFlags);
}

uint64_t HKRPShouldSkipHardwareCheck()
{
  return _HKRPShouldSkipHardwareCheck();
}

IOReturn IOAllowPowerChange(io_connect_t kernelPort, intptr_t notificationID)
{
  return _IOAllowPowerChange(kernelPort, notificationID);
}

IOReturn IODeregisterForSystemPower(io_object_t *notifier)
{
  return _IODeregisterForSystemPower(notifier);
}

void IONotificationPortDestroy(IONotificationPortRef notify)
{
}

CFRunLoopSourceRef IONotificationPortGetRunLoopSource(IONotificationPortRef notify)
{
  return _IONotificationPortGetRunLoopSource(notify);
}

io_connect_t IORegisterForSystemPower(void *refcon, IONotificationPortRef *thePortRef, IOServiceInterestCallback callback, io_object_t *notifier)
{
  return _IORegisterForSystemPower(refcon, thePortRef, callback, notifier);
}

kern_return_t IOServiceClose(io_connect_t connect)
{
  return _IOServiceClose(connect);
}

uint64_t MGCopyAnswer()
{
  return _MGCopyAnswer();
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

uint64_t MGGetProductType()
{
  return _MGGetProductType();
}

uint64_t MKBGetDeviceLockState()
{
  return _MKBGetDeviceLockState();
}

uint64_t NRDeviceSizeForProductType()
{
  return _NRDeviceSizeForProductType();
}

uint64_t NRPairedDeviceRegistryStatusCodeString()
{
  return _NRPairedDeviceRegistryStatusCodeString();
}

uint64_t NRRawVersionFromString()
{
  return _NRRawVersionFromString();
}

uint64_t NRVersionIsGreaterThanOrEqual()
{
  return _NRVersionIsGreaterThanOrEqual();
}

uint64_t NRWatchOSVersion()
{
  return _NRWatchOSVersion();
}

uint64_t NRWatchOSVersionForRemoteDevice()
{
  return _NRWatchOSVersionForRemoteDevice();
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

uint64_t NSLocalizedFileSizeDescription()
{
  return _NSLocalizedFileSizeDescription();
}

void NSLog(NSString *format, ...)
{
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return _NSSearchPathForDirectoriesInDomains(directory, domainMask, expandTilde);
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return _NSSelectorFromString(aSelectorName);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *__cdecl NSStringFromRange(NSRange range)
{
  return _NSStringFromRange(range);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return _NSStringFromSelector(aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return _NSTemporaryDirectory();
}

uint64_t PBAdvertisingInfoFromPayload()
{
  return _PBAdvertisingInfoFromPayload();
}

uint64_t PBBridgeCAReporterIncrementSuccessType()
{
  return _PBBridgeCAReporterIncrementSuccessType();
}

uint64_t PBBridgeMagicCodeDecoder()
{
  return _PBBridgeMagicCodeDecoder();
}

uint64_t PBBuddyControllerDescription()
{
  return _PBBuddyControllerDescription();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return _PBDataWriterWriteDoubleField();
}

uint64_t PBDataWriterWriteStringField()
{
  return _PBDataWriterWriteStringField();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return _PBDataWriterWriteSubmessage();
}

uint64_t PBDataWriterWriteUint32Field()
{
  return _PBDataWriterWriteUint32Field();
}

uint64_t PBDumpLogsWithBlock()
{
  return _PBDumpLogsWithBlock();
}

uint64_t PBHasSetupDevice()
{
  return _PBHasSetupDevice();
}

uint64_t PBIsEarlyPairedSyncSupportedForDevice()
{
  return _PBIsEarlyPairedSyncSupportedForDevice();
}

uint64_t PBIsInternalInstall()
{
  return _PBIsInternalInstall();
}

uint64_t PBLocalizedAppleWatchModelStringForDeviceDescription()
{
  return _PBLocalizedAppleWatchModelStringForDeviceDescription();
}

uint64_t PBLogPerformanceMetrics()
{
  return _PBLogPerformanceMetrics();
}

uint64_t PBOOBDataFromHexString()
{
  return _PBOOBDataFromHexString();
}

uint64_t PBPairedSyncComplete()
{
  return _PBPairedSyncComplete();
}

uint64_t PBPairedSyncCompleteState()
{
  return _PBPairedSyncCompleteState();
}

uint64_t PBPairingGlobalProgress()
{
  return _PBPairingGlobalProgress();
}

uint64_t PBReaderPlaceMark()
{
  return _PBReaderPlaceMark();
}

uint64_t PBReaderReadString()
{
  return _PBReaderReadString();
}

uint64_t PBReaderRecallMark()
{
  return _PBReaderRecallMark();
}

uint64_t PBReaderSkipValueWithTag()
{
  return _PBReaderSkipValueWithTag();
}

uint64_t PBShouldOfferBetterTogetherFlow()
{
  return _PBShouldOfferBetterTogetherFlow();
}

uint64_t PBStoreDemoContentIsFrozen()
{
  return _PBStoreDemoContentIsFrozen();
}

uint64_t PBisInMigrationSync()
{
  return _PBisInMigrationSync();
}

uint64_t PDUDisclosureReviewViewControllerForBundle()
{
  return _PDUDisclosureReviewViewControllerForBundle();
}

uint64_t PSBlankIconImage()
{
  return _PSBlankIconImage();
}

uint64_t PSLocaleLanguageDirection()
{
  return _PSLocaleLanguageDirection();
}

uint64_t PSPreferencesUIFrameworkBundle()
{
  return _PSPreferencesUIFrameworkBundle();
}

uint64_t PSRoundToPixel()
{
  return _PSRoundToPixel();
}

uint64_t PSSetCustomWatchCapabilityCheck()
{
  return _PSSetCustomWatchCapabilityCheck();
}

uint64_t PSTableSectionFooterBottomPad()
{
  return _PSTableSectionFooterBottomPad();
}

uint64_t PSTableSectionFooterTopPad()
{
  return _PSTableSectionFooterTopPad();
}

uint64_t PSTextViewInsets()
{
  return _PSTextViewInsets();
}

uint64_t PreferencesTableViewCellLeftPad()
{
  return _PreferencesTableViewCellLeftPad();
}

uint64_t PreferencesTableViewCellRightPad()
{
  return _PreferencesTableViewCellRightPad();
}

uint64_t PreferencesTableViewFooterColor()
{
  return _PreferencesTableViewFooterColor();
}

uint64_t PreferencesTableViewFooterFont()
{
  return _PreferencesTableViewFooterFont();
}

uint64_t PreferencesTableViewHeaderColor()
{
  return _PreferencesTableViewHeaderColor();
}

uint64_t PreferencesTableViewHeaderFont()
{
  return _PreferencesTableViewHeaderFont();
}

SCNetworkReachabilityRef SCNetworkReachabilityCreateWithName(CFAllocatorRef allocator, const char *nodename)
{
  return _SCNetworkReachabilityCreateWithName(allocator, nodename);
}

Boolean SCNetworkReachabilityGetFlags(SCNetworkReachabilityRef target, SCNetworkReachabilityFlags *flags)
{
  return _SCNetworkReachabilityGetFlags(target, flags);
}

Boolean SCNetworkReachabilityScheduleWithRunLoop(SCNetworkReachabilityRef target, CFRunLoopRef runLoop, CFStringRef runLoopMode)
{
  return _SCNetworkReachabilityScheduleWithRunLoop(target, runLoop, runLoopMode);
}

Boolean SCNetworkReachabilitySetCallback(SCNetworkReachabilityRef target, SCNetworkReachabilityCallBack callout, SCNetworkReachabilityContext *context)
{
  return _SCNetworkReachabilitySetCallback(target, callout, context);
}

Boolean SCNetworkReachabilityUnscheduleFromRunLoop(SCNetworkReachabilityRef target, CFRunLoopRef runLoop, CFStringRef runLoopMode)
{
  return _SCNetworkReachabilityUnscheduleFromRunLoop(target, runLoop, runLoopMode);
}

uint64_t SFLocalizableWAPIStringKeyForKey()
{
  return _SFLocalizableWAPIStringKeyForKey();
}

uint64_t SFObjectAndOffsetForURLPair()
{
  return _SFObjectAndOffsetForURLPair();
}

uint64_t SUBStringForManagerState()
{
  return _SUBStringForManagerState();
}

SecKeyRef SecCertificateCopyKey(SecCertificateRef certificate)
{
  return _SecCertificateCopyKey(certificate);
}

SecCertificateRef SecCertificateCreateWithData(CFAllocatorRef allocator, CFDataRef data)
{
  return _SecCertificateCreateWithData(allocator, data);
}

OSStatus SecKeyEncrypt(SecKeyRef key, SecPadding padding, const uint8_t *plainText, size_t plainTextLen, uint8_t *cipherText, size_t *cipherTextLen)
{
  return _SecKeyEncrypt(key, padding, plainText, plainTextLen, cipherText, cipherTextLen);
}

size_t SecKeyGetBlockSize(SecKeyRef key)
{
  return _SecKeyGetBlockSize(key);
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return _SecRandomCopyBytes(rnd, count, bytes);
}

uint64_t SpecifiersFromPlist()
{
  return _SpecifiersFromPlist();
}

uint64_t TCCAccessCopyBundleIdentifiersDisabledForService()
{
  return _TCCAccessCopyBundleIdentifiersDisabledForService();
}

uint64_t TCCAccessCopyBundleIdentifiersForService()
{
  return _TCCAccessCopyBundleIdentifiersForService();
}

uint64_t TCCAccessCopyInformation()
{
  return _TCCAccessCopyInformation();
}

uint64_t TCCAccessSetForBundleId()
{
  return _TCCAccessSetForBundleId();
}

uint64_t TLAlertTypeFromString()
{
  return _TLAlertTypeFromString();
}

int UIApplicationMain(int argc, char **argv, NSString *principalClassName, NSString *delegateClassName)
{
  return _UIApplicationMain(argc, argv, principalClassName, delegateClassName);
}

NSComparisonResult UIContentSizeCategoryCompareToCategory(UIContentSizeCategory lhs, UIContentSizeCategory rhs)
{
  return _UIContentSizeCategoryCompareToCategory(lhs, rhs);
}

BOOL UIContentSizeCategoryIsAccessibilityCategory(UIContentSizeCategory category)
{
  return _UIContentSizeCategoryIsAccessibilityCategory(category);
}

void UIGraphicsBeginImageContext(CGSize size)
{
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
}

void UIGraphicsBeginPDFContextToData(NSMutableData *data, CGRect bounds, NSDictionary *documentInfo)
{
}

void UIGraphicsBeginPDFPageWithInfo(CGRect bounds, NSDictionary *pageInfo)
{
}

void UIGraphicsEndImageContext(void)
{
}

void UIGraphicsEndPDFContext(void)
{
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return _UIGraphicsGetCurrentContext();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return _UIGraphicsGetImageFromCurrentImageContext();
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return _UIImagePNGRepresentation(image);
}

uint64_t UIInterfaceGetContentDisabledAlpha()
{
  return _UIInterfaceGetContentDisabledAlpha();
}

void UIRectFill(CGRect rect)
{
}

void UIRectFillUsingBlendMode(CGRect rect, CGBlendMode blendMode)
{
}

uint64_t UIRoundToViewScale()
{
  return _UIRoundToViewScale();
}

OSStatus VTPixelTransferSessionCreate(CFAllocatorRef allocator, VTPixelTransferSessionRef *pixelTransferSessionOut)
{
  return _VTPixelTransferSessionCreate(allocator, pixelTransferSessionOut);
}

OSStatus VTPixelTransferSessionTransferImage(VTPixelTransferSessionRef session, CVPixelBufferRef sourceBuffer, CVPixelBufferRef destinationBuffer)
{
  return _VTPixelTransferSessionTransferImage(session, sourceBuffer, destinationBuffer);
}

uint64_t _BPSIsPairingCompatible()
{
  return __BPSIsPairingCompatible();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _HKInitializeLogging()
{
  return __HKInitializeLogging();
}

NSDictionary *_NSDictionaryOfVariableBindings(NSString *commaSeparatedKeysString, id firstValue, ...)
{
  return __NSDictionaryOfVariableBindings(commaSeparatedKeysString, firstValue);
}

uint64_t _PBBridgeMagicCodeString()
{
  return __PBBridgeMagicCodeString();
}

uint64_t _UIContentSizeCategoryCompareToContentSizeCategory()
{
  return __UIContentSizeCategoryCompareToContentSizeCategory();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void std::terminate(void)
{
}

void operator delete[]()
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void operator new[]()
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

void *__cxa_begin_catch(void *a1)
{
  return ___cxa_begin_catch(a1);
}

int __maskrune(__darwin_ct_rune_t a1, unint64_t a2)
{
  return ___maskrune(a1, a2);
}

__float2 __sincosf_stret(float a1)
{
  __float2 v3 = ___sincosf_stret(a1);
  float cosval = v3.__cosval;
  float sinval = v3.__sinval;
  result.__float cosval = cosval;
  result.__float sinval = sinval;
  return result;
}

uint64_t _os_feature_enabled_impl()
{
  return __os_feature_enabled_impl();
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return __sl_dlopen();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void abort(void)
{
}

uint64_t abort_report_np()
{
  return _abort_report_np();
}

void bzero(void *a1, size_t a2)
{
}

uint64_t createStringFromNRLinkSubtype()
{
  return _createStringFromNRLinkSubtype();
}

uint64_t createStringFromNRLinkType()
{
  return _createStringFromNRLinkType();
}

uint64_t ct_green_tea_logger_create()
{
  return _ct_green_tea_logger_create();
}

int deflate(z_streamp strm, int flush)
{
  return _deflate(strm, flush);
}

int deflateEnd(z_streamp strm)
{
  return _deflateEnd(strm);
}

int deflateInit2_(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, const char *version, int stream_size)
{
  return _deflateInit2_(strm, level, method, windowBits, memLevel, strategy, version, stream_size);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_barrier_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return _dispatch_source_create(type, handle, mask, queue);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

char *dlerror(void)
{
  return _dlerror();
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return _dlsym(__handle, __symbol);
}

void exit(int a1)
{
}

long double fmod(long double __x, long double __y)
{
  return _fmod(__x, __y);
}

void free(void *a1)
{
}

uint64_t getCTGreenTeaOsLogHandle()
{
  return _getCTGreenTeaOsLogHandle();
}

pid_t getpid(void)
{
  return _getpid();
}

uint64_t kdebug_trace()
{
  return _kdebug_trace();
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_malloc(size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

void memset_pattern16(void *__b, const void *__pattern16, size_t __len)
{
}

uint32_t notify_cancel(int token)
{
  return _notify_cancel(token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return _notify_get_state(token, state64);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return _notify_register_check(name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return _notify_register_dispatch(name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_begin_catch(void *exc_buf)
{
  return _objc_begin_catch(exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_rethrow(void)
{
}

void objc_exception_throw(id exception)
{
}

Class objc_getClass(const char *name)
{
  return _objc_getClass(name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

int objc_sync_enter(id obj)
{
  return _objc_sync_enter(obj);
}

int objc_sync_exit(id obj)
{
  return _objc_sync_exit(obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return _os_signpost_enabled(log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return _os_signpost_id_generate(log);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t pbb_accountsignin_log()
{
  return _pbb_accountsignin_log();
}

uint64_t pbb_activation_log()
{
  return _pbb_activation_log();
}

uint64_t pbb_bridge_log()
{
  return _pbb_bridge_log();
}

uint64_t pbb_devicemanagement_log()
{
  return _pbb_devicemanagement_log();
}

uint64_t pbb_discover_log()
{
  return _pbb_discover_log();
}

uint64_t pbb_manualunpairing_log()
{
  return _pbb_manualunpairing_log();
}

uint64_t pbb_mobileasset_log()
{
  return _pbb_mobileasset_log();
}

uint64_t pbb_setup_log()
{
  return _pbb_setup_log();
}

uint64_t pbb_setupflow_log()
{
  return _pbb_setupflow_log();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_continuation_resume()
{
  return _swift_continuation_resume();
}

uint64_t swift_deletedMethodError()
{
  return _swift_deletedMethodError();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getMetatypeMetadata()
{
  return _swift_getMetatypeMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

id objc_msgSend_AWSAccessKeyID(void *a1, const char *a2, ...)
{
  return _[a1 AWSAccessKeyID];
}

id objc_msgSend_AWSCanonicalizedResourceWithBucket_FileName_(void *a1, const char *a2, ...)
{
  return [a1 AWSCanonicalizedResourceWithBucket:FileName:];
}

id objc_msgSend_AWSSecretAccessKey(void *a1, const char *a2, ...)
{
  return _[a1 AWSSecretAccessKey];
}

id objc_msgSend_AWSStringToSignWithHTTPVerb_contentMD5_contentType_date_canonicalizedResource_(void *a1, const char *a2, ...)
{
  return [a1 AWSStringToSignWithHTTPVerb:contentMD5:contentType:date:canonicalizedResource:];
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _[a1 CGColor];
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _[a1 CGImage];
}

id objc_msgSend_CGPath(void *a1, const char *a2, ...)
{
  return _[a1 CGPath];
}

id objc_msgSend_DSIDForAccount_(void *a1, const char *a2, ...)
{
  return [a1 DSIDForAccount:];
}

id objc_msgSend_DSIDForAccount_service_(void *a1, const char *a2, ...)
{
  return [a1 DSIDForAccount:service:];
}

id objc_msgSend_DSIDForIDMSAccount_(void *a1, const char *a2, ...)
{
  return [a1 DSIDForIDMSAccount:];
}

id objc_msgSend_DSIDForIDSAccount_(void *a1, const char *a2, ...)
{
  return [a1 DSIDForIDSAccount];
}

id objc_msgSend_DSIDForiCloudAccount_(void *a1, const char *a2, ...)
{
  return [a1 DSIDForiCloudAccount:];
}

id objc_msgSend_DSIDForiTunesStoreAccount_(void *a1, const char *a2, ...)
{
  return [a1 DSIDForiTunesStoreAccount:];
}

id objc_msgSend_SEIDString(void *a1, const char *a2, ...)
{
  return _[a1 SEIDString];
}

id objc_msgSend_SOSContactsWithTimeout_andCompletion_(void *a1, const char *a2, ...)
{
  return [a1 SOSContactsWithTimeout:andCompletion:];
}

id objc_msgSend_SOSLegacyContacts(void *a1, const char *a2, ...)
{
  return _[a1 SOSLegacyContacts];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return [a1 URLByAppendingPathComponent:];
}

id objc_msgSend_URLForResource_withExtension_subdirectory_(void *a1, const char *a2, ...)
{
  return [a1 URLForResource:withExtension:subdirectory:];
}

id objc_msgSend_URLHostAllowedCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 URLHostAllowedCharacterSet];
}

id objc_msgSend_URLOfModelInThisBundle(void *a1, const char *a2, ...)
{
  return _[a1 URLOfModelInThisBundle];
}

id objc_msgSend_URLQueryAllowedCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 URLQueryAllowedCharacterSet];
}

id objc_msgSend_URLString(void *a1, const char *a2, ...)
{
  return _[a1 URLString];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return [a1 URLWithString:];
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend__NRWatchVersionFromBackup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_NRWatchVersionFromBackup:");
}

id objc_msgSend__TCCInfoItems(void *a1, const char *a2, ...)
{
  return _[a1 _TCCInfoItems];
}

id objc_msgSend__aa_setRawPassword_(void *a1, const char *a2, ...)
{
  return [_aa_setRawPassword:];
}

id objc_msgSend__accessibilityHigherContrastTintColorForColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilityHigherContrastTintColorForColor:");
}

id objc_msgSend__accessibilitySetInterfaceStyleIntent_(void *a1, const char *a2, ...)
{
  return [a1 _accessibilitySetInterfaceStyleIntent:];
}

id objc_msgSend__accountManager(void *a1, const char *a2, ...)
{
  return _[a1 _accountManager];
}

id objc_msgSend__activateTinkerWatchWithCSN_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activateTinkerWatchWithCSN:completionBlock:");
}

id objc_msgSend__activeWatchNeedsUpdate(void *a1, const char *a2, ...)
{
  return _[a1 _activeWatchNeedsUpdate];
}

id objc_msgSend__addFooterFormat_footerLink_toSpecifier_withAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addFooterFormat:footerLink:toSpecifier:withAction:");
}

id objc_msgSend__addProgressBar(void *a1, const char *a2, ...)
{
  return _[a1 _addProgressBar];
}

id objc_msgSend__addRequiredWatchAppsToMapping_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addRequiredWatchAppsToMapping:");
}

id objc_msgSend__alertMessageForReason_andCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alertMessageForReason:andCode:");
}

id objc_msgSend__allowInteractionsWithSettingsControllers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allowInteractionsWithSettingsControllers:");
}

id objc_msgSend__attemptEnrollmentAfterGeneratingPairingTokenWithSigningInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attemptEnrollmentAfterGeneratingPairingTokenWithSigningInfo:");
}

id objc_msgSend__authWithContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_authWithContext:completion:");
}

id objc_msgSend__backgroundInset(void *a1, const char *a2, ...)
{
  return _[a1 _backgroundInset];
}

id objc_msgSend__barStyleBlackHairlineShadowColor(void *a1, const char *a2, ...)
{
  return _[a1 _barStyleBlackHairlineShadowColor];
}

id objc_msgSend__beginConsideringFaceUpAdvice(void *a1, const char *a2, ...)
{
  return _[a1 _beginConsideringFaceUpAdvice];
}

id objc_msgSend__bodyLeading(void *a1, const char *a2, ...)
{
  return _[a1 _bodyLeading];
}

id objc_msgSend__bridgeConciseDebugDescription(void *a1, const char *a2, ...)
{
  return _[a1 _bridgeConciseDebugDescription];
}

id objc_msgSend__browserView(void *a1, const char *a2, ...)
{
  return _[a1 _browserView];
}

id objc_msgSend__buddyControllerDone_nextControllerClass_nextController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buddyControllerDone:nextControllerClass:nextController:");
}

id objc_msgSend__buildSystemAppSpecifierDicts(void *a1, const char *a2, ...)
{
  return _[a1 _buildSystemAppSpecifierDicts];
}

id objc_msgSend__cancelAlreadyPairedTimers(void *a1, const char *a2, ...)
{
  return _[a1 _cancelAlreadyPairedTimers];
}

id objc_msgSend__cancelConnectionTimeout(void *a1, const char *a2, ...)
{
  return _[a1 _cancelConnectionTimeout];
}

id objc_msgSend__cancelTaskTimeout(void *a1, const char *a2, ...)
{
  return _[a1 _cancelTaskTimeout];
}

id objc_msgSend__capOffsetFromBoundsTop(void *a1, const char *a2, ...)
{
  return _[a1 _capOffsetFromBoundsTop];
}

id objc_msgSend__changeCameraConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 _changeCameraConfiguration];
}

id objc_msgSend__checkCurrentStateValidity(void *a1, const char *a2, ...)
{
  return _[a1 _checkCurrentStateValidity];
}

id objc_msgSend__checkFamilyEligibilityWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkFamilyEligibilityWithCompletion:");
}

id objc_msgSend__checkForProximateAgaveDevice(void *a1, const char *a2, ...)
{
  return _[a1 _checkForProximateAgaveDevice];
}

id objc_msgSend__checkIfShouldUpdateInRevLockFlowForWatchPairingVersion_watchChipID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkIfShouldUpdateInRevLockFlowForWatchPairingVersion:watchChipID:");
}

id objc_msgSend__checkIfTinker(void *a1, const char *a2, ...)
{
  return _[a1 _checkIfTinker];
}

id objc_msgSend__checkLocalPairingStorePathAndReleaseHold(void *a1, const char *a2, ...)
{
  return _[a1 _checkLocalPairingStorePathAndReleaseHold];
}

id objc_msgSend__classicPairingEventList(void *a1, const char *a2, ...)
{
  return _[a1 _classicPairingEventList];
}

id objc_msgSend__cleanupLoader(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupLoader];
}

id objc_msgSend__collectThenSetScreenTimePasscodeForFamilyMember_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_collectThenSetScreenTimePasscodeForFamilyMember:withCompletionHandler:");
}

id objc_msgSend__completeStream(void *a1, const char *a2, ...)
{
  return _[a1 _completeStream];
}

id objc_msgSend__computedFrameForTextLabel(void *a1, const char *a2, ...)
{
  return _[a1 _computedFrameForTextLabel];
}

id objc_msgSend__computedFrameForWatchImage(void *a1, const char *a2, ...)
{
  return _[a1 _computedFrameForWatchImage];
}

id objc_msgSend__configurationWithHierarchicalColors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configurationWithHierarchicalColors:");
}

id objc_msgSend__configureBackButtonBehavior(void *a1, const char *a2, ...)
{
  return _[a1 _configureBackButtonBehavior];
}

id objc_msgSend__configureCurrentState(void *a1, const char *a2, ...)
{
  return _[a1 _configureCurrentState];
}

id objc_msgSend__configureMetrics(void *a1, const char *a2, ...)
{
  return _[a1 _configureMetrics];
}

id objc_msgSend__configureWatchMessage(void *a1, const char *a2, ...)
{
  return _[a1 _configureWatchMessage];
}

id objc_msgSend__connectionFinishedWithSuccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectionFinishedWithSuccess:");
}

id objc_msgSend__containsSubstring_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_containsSubstring:");
}

id objc_msgSend__contextForPrimaryAccountWithController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextForPrimaryAccountWithController:");
}

id objc_msgSend__controllerFollowingControllerClass_(void *a1, const char *a2, ...)
{
  return [a1 _controllerFollowingControllerClass];
}

id objc_msgSend__controllerForClass_(void *a1, const char *a2, ...)
{
  return [a1 _controllerForClass];
}

id objc_msgSend__controllerShouldMirrorToGizmo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_controllerShouldMirrorToGizmo:");
}

id objc_msgSend__createIdleNotificationTimer(void *a1, const char *a2, ...)
{
  return _[a1 _createIdleNotificationTimer];
}

id objc_msgSend__createKappaAPISpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _createKappaAPISpecifiers];
}

id objc_msgSend__createKappaSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _createKappaSpecifiers];
}

id objc_msgSend__createNewtonSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 _createNewtonSpecifiers];
}

id objc_msgSend__decorateInsertAndReloadSystemAppSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_decorateInsertAndReloadSystemAppSpecifiers:");
}

id objc_msgSend__decorateSpecifierForLazyIconLoading_(void *a1, const char *a2, ...)
{
  return [a1 _decorateSpecifierForLazyIconLoading:];
}

id objc_msgSend__deregisterForPowerNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _deregisterForPowerNotifications];
}

id objc_msgSend__descriptionText(void *a1, const char *a2, ...)
{
  return _[a1 _descriptionText];
}

id objc_msgSend__detailStringKeyForCurrentState(void *a1, const char *a2, ...)
{
  return _[a1 _detailStringKeyForCurrentState];
}

id objc_msgSend__devicePickerBeingPresented(void *a1, const char *a2, ...)
{
  return _[a1 _devicePickerBeingPresented];
}

id objc_msgSend__deviceRequiresUpdate_(void *a1, const char *a2, ...)
{
  return [a1 _deviceRequiresUpdate:];
}

id objc_msgSend__deviceWatingToSync(void *a1, const char *a2, ...)
{
  return _[a1 _deviceWatingToSync];
}

id objc_msgSend__dictationAutoPunctuationSupportedLanguages(void *a1, const char *a2, ...)
{
  return _[a1 _dictationAutoPunctuationSupportedLanguages];
}

id objc_msgSend__dictationPrivacyTextWithUnsupportedLanguages_supportedInstalledLanguages_supportedWaitingLanguages_supportedInstallingLanguages_andLanguageMapping_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dictationPrivacyTextWithUnsupportedLanguages:supportedInstalledLanguages:supportedWaitingLanguages:supportedInstallingLanguages:andLanguageMapping:");
}

id objc_msgSend__didFinish(void *a1, const char *a2, ...)
{
  return _[a1 _didFinish];
}

id objc_msgSend__didTimeOutWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didTimeOutWithHandler:");
}

id objc_msgSend__disableButtons(void *a1, const char *a2, ...)
{
  return _[a1 _disableButtons];
}

id objc_msgSend__discoveredNRDeviceForAdvertisedName_(void *a1, const char *a2, ...)
{
  return [a1 _discoveredNRDeviceForAdvertisedName:];
}

id objc_msgSend__discoveredNetworkRelayWatch(void *a1, const char *a2, ...)
{
  return _[a1 _discoveredNetworkRelayWatch];
}

id objc_msgSend__dismissModalAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissModalAlert:");
}

id objc_msgSend__displayNameForWatchBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayNameForWatchBundleID:");
}

id objc_msgSend__displayNamesForLanguageIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayNamesForLanguageIDs:");
}

id objc_msgSend__enabledDictationLanguageCodes(void *a1, const char *a2, ...)
{
  return _[a1 _enabledDictationLanguageCodes];
}

id objc_msgSend__endTapToRadarActivity(void *a1, const char *a2, ...)
{
  return _[a1 _endTapToRadarActivity];
}

id objc_msgSend__enumerateAlertPresenterObservers_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enumerateAlertPresenterObservers:withCompletion:");
}

id objc_msgSend__eraseCellularPlans(void *a1, const char *a2, ...)
{
  return _[a1 _eraseCellularPlans];
}

id objc_msgSend__errorIsUserCanceledSettingPIN_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_errorIsUserCanceledSettingPIN:");
}

id objc_msgSend__evaluatePendingTasksAfterActivationCompletedOrDeferredForUserResponse(void *a1, const char *a2, ...)
{
  return _[a1 _evaluatePendingTasksAfterActivationCompletedOrDeferredForUserResponse];
}

id objc_msgSend__extendBackgroundAssertion(void *a1, const char *a2, ...)
{
  return _[a1 _extendBackgroundAssertion];
}

id objc_msgSend__fakeList(void *a1, const char *a2, ...)
{
  return _[a1 _fakeList];
}

id objc_msgSend__fakeWatchName_(void *a1, const char *a2, ...)
{
  return [a1 _fakeWatchName:];
}

id objc_msgSend__familyEligibilityRequester(void *a1, const char *a2, ...)
{
  return _[a1 _familyEligibilityRequester];
}

id objc_msgSend__federatedAuthRequiredForAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_federatedAuthRequiredForAccount:");
}

id objc_msgSend__fetchAppIcons(void *a1, const char *a2, ...)
{
  return _[a1 _fetchAppIcons];
}

id objc_msgSend__fetchFamilyCircle(void *a1, const char *a2, ...)
{
  return _[a1 _fetchFamilyCircle];
}

id objc_msgSend__fetchIconForBundleID_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchIconForBundleID:atIndex:");
}

id objc_msgSend__fetchNewtonEligibility_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchNewtonEligibility:");
}

id objc_msgSend__fetchSharingStatus(void *a1, const char *a2, ...)
{
  return _[a1 _fetchSharingStatus];
}

id objc_msgSend__findZeroDayPlist(void *a1, const char *a2, ...)
{
  return _[a1 _findZeroDayPlist];
}

id objc_msgSend__finishBuddy(void *a1, const char *a2, ...)
{
  return _[a1 _finishBuddy];
}

id objc_msgSend__finishedWithResult_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_finishedWithResult:completion:");
}

id objc_msgSend__flatImageWithColor_(void *a1, const char *a2, ...)
{
  return [a1 _flatImageWithColor:];
}

id objc_msgSend__fontScaledByScaleFactor_(void *a1, const char *a2, ...)
{
  return [a1 _fontScaledByScaleFactor:];
}

id objc_msgSend__footerTextForAutoPunctuationLanguages_withLanguageMapping_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_footerTextForAutoPunctuationLanguages:withLanguageMapping:");
}

id objc_msgSend__forceComplexTopLevel(void *a1, const char *a2, ...)
{
  return _[a1 _forceComplexTopLevel];
}

id objc_msgSend__formatHTTPDate_(void *a1, const char *a2, ...)
{
  return [a1 _formatHTTPDate];
}

id objc_msgSend__foundNearbyAdvertisingWatches(void *a1, const char *a2, ...)
{
  return _[a1 _foundNearbyAdvertisingWatches];
}

id objc_msgSend__generateTCCItems(void *a1, const char *a2, ...)
{
  return _[a1 _generateTCCItems];
}

id objc_msgSend__getMigratingDevice(void *a1, const char *a2, ...)
{
  return _[a1 _getMigratingDevice];
}

id objc_msgSend__getStartedController(void *a1, const char *a2, ...)
{
  return _[a1 _getStartedController];
}

id objc_msgSend__getUnpairInstructions(void *a1, const char *a2, ...)
{
  return _[a1 _getUnpairInstructions];
}

id objc_msgSend__gotAutomaticAppInstallState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_gotAutomaticAppInstallState:");
}

id objc_msgSend__groupIndexForGroup_(void *a1, const char *a2, ...)
{
  return [a1 _groupIndexForGroup:];
}

id objc_msgSend__gzipCompressData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_gzipCompressData:");
}

id objc_msgSend__handleEnrollmentError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleEnrollmentError:");
}

id objc_msgSend__iconCache(void *a1, const char *a2, ...)
{
  return _[a1 _iconCache];
}

id objc_msgSend__initWithFrame_enableReachability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithFrame:enableReachability:");
}

id objc_msgSend__initialSyncStateObserverClientCanRetryFailedRequests(void *a1, const char *a2, ...)
{
  return _[a1 _initialSyncStateObserverClientCanRetryFailedRequests];
}

id objc_msgSend__insertSpecifierIntoTableAndStash_atIndex_stashIndex_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertSpecifierIntoTableAndStash:atIndex:stashIndex:animated:");
}

id objc_msgSend__invokePasscodeUpgradeCompletionWithSuccess_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invokePasscodeUpgradeCompletionWithSuccess:error:");
}

id objc_msgSend__isProductKitUrl_(void *a1, const char *a2, ...)
{
  return [a1 _isProductKitUrl:];
}

id objc_msgSend__isRegularWidth(void *a1, const char *a2, ...)
{
  return _[a1 _isRegularWidth];
}

id objc_msgSend__isSatellitePairing(void *a1, const char *a2, ...)
{
  return _[a1 _isSatellitePairing];
}

id objc_msgSend__isSyncComplete(void *a1, const char *a2, ...)
{
  return _[a1 _isSyncComplete];
}

id objc_msgSend__isTransitioning(void *a1, const char *a2, ...)
{
  return _[a1 _isTransitioning];
}

id objc_msgSend__isVersion_withinStart_andEnd_isWatch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isVersion:withinStart:andEnd:isWatch:");
}

id objc_msgSend__issueResponse_(void *a1, const char *a2, ...)
{
  return [a1 _issueResponse:];
}

id objc_msgSend__kickOffWatchKitAppReload(void *a1, const char *a2, ...)
{
  return _[a1 _kickOffWatchKitAppReload];
}

id objc_msgSend__lastActiveTraditionallyPairedDevices(void *a1, const char *a2, ...)
{
  return _[a1 _lastActiveTraditionallyPairedDevices];
}

id objc_msgSend__legacy_sizeWithFont_constrainedToSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_legacy_sizeWithFont:constrainedToSize:");
}

id objc_msgSend__loadSystemAppSettings(void *a1, const char *a2, ...)
{
  return _[a1 _loadSystemAppSettings];
}

id objc_msgSend__localizedListForLanguageCodes_andLanguageMapping_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localizedListForLanguageCodes:andLanguageMapping:");
}

id objc_msgSend__logConnectionDescription(void *a1, const char *a2, ...)
{
  return _[a1 _logConnectionDescription];
}

id objc_msgSend__madeWristOnLeftSelection_crownOnRightSelection_(void *a1, const char *a2, ...)
{
  return [a1 _madeWristOnLeftSelection:crownOnRightSelection:];
}

id objc_msgSend__madeWristSelectionForLeftWrist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_madeWristSelectionForLeftWrist:");
}

id objc_msgSend__makeAppsDetailSection(void *a1, const char *a2, ...)
{
  return _[a1 _makeAppsDetailSection];
}

id objc_msgSend__makeDetailSections(void *a1, const char *a2, ...)
{
  return _[a1 _makeDetailSections];
}

id objc_msgSend__makeSettingsDetailSection(void *a1, const char *a2, ...)
{
  return _[a1 _makeSettingsDetailSection];
}

id objc_msgSend__makeWalletDetailSection(void *a1, const char *a2, ...)
{
  return _[a1 _makeWalletDetailSection];
}

id objc_msgSend__manager_didChangeProgressOnDownload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_manager:didChangeProgressOnDownload:");
}

id objc_msgSend__manager_didFailDownload_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_manager:didFailDownload:withError:");
}

id objc_msgSend__manager_didFailInstallation_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_manager:didFailInstallation:withError:");
}

id objc_msgSend__manager_didFinishDownload_willProceedWithInstallation_waitingForAdmissionControl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_manager:didFinishDownload:willProceedWithInstallation:waitingForAdmissionControl:");
}

id objc_msgSend__manager_didFinishInstallation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_manager:didFinishInstallation:");
}

id objc_msgSend__manager_installationOfUpdate_canProceed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_manager:installationOfUpdate:canProceed:");
}

id objc_msgSend__manager_scanRequestDidLocateUpdate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_manager:scanRequestDidLocateUpdate:error:");
}

id objc_msgSend__manager_willProceedWithInstallation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_manager:willProceedWithInstallation:");
}

id objc_msgSend__markApplePayOfferingComplete(void *a1, const char *a2, ...)
{
  return _[a1 _markApplePayOfferingComplete];
}

id objc_msgSend__materialForCLHSValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_materialForCLHSValue:");
}

id objc_msgSend__nanoRegistryHPPairingComplete(void *a1, const char *a2, ...)
{
  return _[a1 _nanoRegistryHPPairingComplete];
}

id objc_msgSend__nanoRegistryManualPairingComplete(void *a1, const char *a2, ...)
{
  return _[a1 _nanoRegistryManualPairingComplete];
}

id objc_msgSend__navigationController(void *a1, const char *a2, ...)
{
  return _[a1 _navigationController];
}

id objc_msgSend__newSystemAppSpecifiers_sameAs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_newSystemAppSpecifiers:sameAs:");
}

id objc_msgSend__normalizeCameraReticuleScale(void *a1, const char *a2, ...)
{
  return _[a1 _normalizeCameraReticuleScale];
}

id objc_msgSend__notifyNTKAboutActiveWatchSkipSetupCompletionCheck_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyNTKAboutActiveWatchSkipSetupCompletionCheck:");
}

id objc_msgSend__notifyThatFullSpecifierDictListIsLoaded(void *a1, const char *a2, ...)
{
  return _[a1 _notifyThatFullSpecifierDictListIsLoaded];
}

id objc_msgSend__notifyThatSpecifiersShouldBeRemoved_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyThatSpecifiersShouldBeRemoved:");
}

id objc_msgSend__numberOfItemsInDiscoverSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_numberOfItemsInDiscoverSection:");
}

id objc_msgSend__onInitialPropertyExchangeComplete(void *a1, const char *a2, ...)
{
  return _[a1 _onInitialPropertyExchangeComplete];
}

id objc_msgSend__openScreenTimeForFamilyMember_(void *a1, const char *a2, ...)
{
  return [a1 _openScreenTimeForFamilyMember:];
}

id objc_msgSend__paymentExpressSetupManager(void *a1, const char *a2, ...)
{
  return _[a1 _paymentExpressSetupManager];
}

id objc_msgSend__pendingLanguagesFooterTextForWaitingLanguages_installingLanguages_andLanguageMapping_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pendingLanguagesFooterTextForWaitingLanguages:installingLanguages:andLanguageMapping:");
}

id objc_msgSend__performAvailabilityCheck_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performAvailabilityCheck:");
}

id objc_msgSend__performFaceGalleryScrollTestNamed_iterations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performFaceGalleryScrollTestNamed:iterations:");
}

id objc_msgSend__performLinkUpgradeToInfraWiFi(void *a1, const char *a2, ...)
{
  return _[a1 _performLinkUpgradeToInfraWiFi];
}

id objc_msgSend__performURLHandlingForRootListController_controller_dictionary_items_controllerNeedsPush_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performURLHandlingForRootListController:controller:dictionary:items:controllerNeedsPush:");
}

id objc_msgSend__performWithoutDeferringTransitions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performWithoutDeferringTransitions:");
}

id objc_msgSend__pluginForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pluginForIndexPath:");
}

id objc_msgSend__pluginsToDisplay(void *a1, const char *a2, ...)
{
  return _[a1 _pluginsToDisplay];
}

id objc_msgSend__popObjectModelAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_popObjectModelAnimated:");
}

id objc_msgSend__popToTopLevelSettingsAnimated_dismissPresentedViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_popToTopLevelSettingsAnimated:dismissPresentedViewController:");
}

id objc_msgSend__pptApps(void *a1, const char *a2, ...)
{
  return _[a1 _pptApps];
}

id objc_msgSend__preferredFontForTextStyle_variant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredFontForTextStyle:variant:");
}

id objc_msgSend__prepareAppearances(void *a1, const char *a2, ...)
{
  return _[a1 _prepareAppearances];
}

id objc_msgSend__prepareDictationFooterForSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareDictationFooterForSpecifier:");
}

id objc_msgSend__prepareDiscoveryIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _prepareDiscoveryIfNeeded];
}

id objc_msgSend__prepareForDevicePickerTest(void *a1, const char *a2, ...)
{
  return _[a1 _prepareForDevicePickerTest];
}

id objc_msgSend__presentDisagreeConfirmationAlert(void *a1, const char *a2, ...)
{
  return _[a1 _presentDisagreeConfirmationAlert];
}

id objc_msgSend__presentModalAlert_(void *a1, const char *a2, ...)
{
  return [a1 _presentModalAlert:];
}

id objc_msgSend__proceedToEnrollWithPairingToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_proceedToEnrollWithPairingToken:");
}

id objc_msgSend__processChangedRows_installed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processChangedRows:installed:");
}

id objc_msgSend__productTypeIsTinkerEnabled_(void *a1, const char *a2, ...)
{
  return [a1 _productTypeIsTinkerEnabled:];
}

id objc_msgSend__productTypeIsYorktownEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_productTypeIsYorktownEnabled:");
}

id objc_msgSend__pushBuddyController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushBuddyController:");
}

id objc_msgSend__pushBuddyController_ontoNavigationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushBuddyController:ontoNavigationController:");
}

id objc_msgSend__pushCustomControllerForPath_andTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushCustomControllerForPath:andTitle:");
}

id objc_msgSend__pushGizmoBuddyController_(void *a1, const char *a2, ...)
{
  return [a1 _pushGizmoBuddyController:];
}

id objc_msgSend__pushToSetupFinished(void *a1, const char *a2, ...)
{
  return _[a1 _pushToSetupFinished];
}

id objc_msgSend__quickFetchFMIPEnabledstate(void *a1, const char *a2, ...)
{
  return _[a1 _quickFetchFMIPEnabledstate];
}

id objc_msgSend__recheckInstallStateForAllBundleRows(void *a1, const char *a2, ...)
{
  return _[a1 _recheckInstallStateForAllBundleRows];
}

id objc_msgSend__recordInitialSyncBeganMetricIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _recordInitialSyncBeganMetricIfNecessary];
}

id objc_msgSend__refreshAppInstallationStatus(void *a1, const char *a2, ...)
{
  return _[a1 _refreshAppInstallationStatus];
}

id objc_msgSend__refreshFaceUpAdviceTimer(void *a1, const char *a2, ...)
{
  return _[a1 _refreshFaceUpAdviceTimer];
}

id objc_msgSend__refreshShortCuts(void *a1, const char *a2, ...)
{
  return _[a1 _refreshShortCuts];
}

id objc_msgSend__refreshTabBarVisibility(void *a1, const char *a2, ...)
{
  return _[a1 _refreshTabBarVisibility];
}

id objc_msgSend__registerForPowerNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _registerForPowerNotifications];
}

id objc_msgSend__reloadSectionHeaderFooters_withRowAnimation_(void *a1, const char *a2, ...)
{
  return [a1 _reloadSectionHeaderFooters:withRowAnimation:];
}

id objc_msgSend__removeAppleIDFollowUp(void *a1, const char *a2, ...)
{
  return _[a1 _removeAppleIDFollowUp];
}

id objc_msgSend__removeRowForSpecialCriteriaOverride_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeRowForSpecialCriteriaOverride:");
}

id objc_msgSend__removeSpecifier_andInsertSpecifier_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeSpecifier:andInsertSpecifier:animated:");
}

id objc_msgSend__removeSpecifierFromTableAndStash_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeSpecifierFromTableAndStash:animated:");
}

id objc_msgSend__removeStoreFollowUp(void *a1, const char *a2, ...)
{
  return _[a1 _removeStoreFollowUp];
}

id objc_msgSend__removeSystemAppSpecifierFromCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeSystemAppSpecifierFromCache:");
}

id objc_msgSend__reportAssetLoaded(void *a1, const char *a2, ...)
{
  return _[a1 _reportAssetLoaded];
}

id objc_msgSend__requiredAppsInstalled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requiredAppsInstalled:");
}

id objc_msgSend__resetAfterAppDeletionResponse_(void *a1, const char *a2, ...)
{
  return [a1 _resetAfterAppDeletionResponse:];
}

id objc_msgSend__resetAfterSockPuppetResponseWithState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetAfterSockPuppetResponseWithState:");
}

id objc_msgSend__resetTermsInformation(void *a1, const char *a2, ...)
{
  return _[a1 _resetTermsInformation];
}

id objc_msgSend__restoreCompletedWithSuccess(void *a1, const char *a2, ...)
{
  return _[a1 _restoreCompletedWithSuccess];
}

id objc_msgSend__resumeSatelliteSignin(void *a1, const char *a2, ...)
{
  return _[a1 _resumeSatelliteSignin];
}

id objc_msgSend__rootControllerForSplitViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rootControllerForSplitViewController:");
}

id objc_msgSend__saveCurrentState(void *a1, const char *a2, ...)
{
  return _[a1 _saveCurrentState];
}

id objc_msgSend__scaledValueForValue_(void *a1, const char *a2, ...)
{
  return [a1 _scaledValueForValue:];
}

id objc_msgSend__scannerSetupComplete(void *a1, const char *a2, ...)
{
  return _[a1 _scannerSetupComplete];
}

id objc_msgSend__schedulePendingAppDelegateIfPresent(void *a1, const char *a2, ...)
{
  return _[a1 _schedulePendingAppDelegateIfPresent];
}

id objc_msgSend__scheduleTaskTimeout_timeoutHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleTaskTimeout:timeoutHandler:");
}

id objc_msgSend__screenCache(void *a1, const char *a2, ...)
{
  return _[a1 _screenCache];
}

id objc_msgSend__screenTimeEnabledWithoutPasscodeForFamilyMember_(void *a1, const char *a2, ...)
{
  return [a1 _screenTimeEnabledWithoutPasscodeForFamilyMember:];
}

id objc_msgSend__scrollToSpecifierWithID_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrollToSpecifierWithID:animated:");
}

id objc_msgSend__scrollToTopOfSettingsAnimated_(void *a1, const char *a2, ...)
{
  return [a1 _scrollToTopOfSettingsAnimated:];
}

id objc_msgSend__scrollView(void *a1, const char *a2, ...)
{
  return _[a1 _scrollView];
}

id objc_msgSend__sectionContentInset(void *a1, const char *a2, ...)
{
  return _[a1 _sectionContentInset];
}

id objc_msgSend__secureRandomOfLength_(void *a1, const char *a2, ...)
{
  return [a1 _secureRandomOfLength:];
}

id objc_msgSend__selectCaptureDevice(void *a1, const char *a2, ...)
{
  return _[a1 _selectCaptureDevice];
}

id objc_msgSend__sendWirelessCredentialsToWatch(void *a1, const char *a2, ...)
{
  return _[a1 _sendWirelessCredentialsToWatch];
}

id objc_msgSend__setAvailableInStoreResult_(void *a1, const char *a2, ...)
{
  return [_a1 _setAvailableInStoreResult:];
}

id objc_msgSend__setBuiltinTransitionStyle_(void *a1, const char *a2, ...)
{
  return [a1 _setBuiltinTransitionStyle:];
}

id objc_msgSend__setCollapsed_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCollapsed:animated:");
}

id objc_msgSend__setCompatiblityCriteriaWithProductType_systemVersion_watchPairingVersion_watchChipIDNumber_shouldForceSoftwareUpdateCheck_zeroDayCriteria_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCompatiblityCriteriaWithProductType:systemVersion:watchPairingVersion:watchChipIDNumber:shouldForceSoftwareUpdateCheck:zeroDayCriteria:");
}

id objc_msgSend__setDisplaysCellContentStringsOnTapAndHold_(void *a1, const char *a2, ...)
{
  return [a1 _setDisplaysCellContentStringsOnTapAndHold];
}

id objc_msgSend__setDrawsCheckeredPattern_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDrawsCheckeredPattern:");
}

id objc_msgSend__setHidesShadow_(void *a1, const char *a2, ...)
{
  return [a1 _setHidesShadow:];
}

id objc_msgSend__setHyphenationFactor_(void *a1, const char *a2, ...)
{
  return [a1 _setHyphenationFactor:];
}

id objc_msgSend__setInteractiveTextSelectionDisabled_(void *a1, const char *a2, ...)
{
  return [a1 _setInteractiveTextSelectionDisabled:];
}

id objc_msgSend__setInternalTitle_(void *a1, const char *a2, ...)
{
  return [_a1 _setInternalTitle:];
}

id objc_msgSend__setLargeTitleTwoLineMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLargeTitleTwoLineMode:");
}

id objc_msgSend__setMarginWidth_(void *a1, const char *a2, ...)
{
  return [_a1 _setMarginWidth:];
}

id objc_msgSend__setMinimumZoomFontSize_(void *a1, const char *a2, ...)
{
  return [a1 _setMinimumZoomFontSize:];
}

id objc_msgSend__setOffsetForController_fromObjectPair_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setOffsetForController:fromObjectPair:");
}

id objc_msgSend__setProxyingForApp_(void *a1, const char *a2, ...)
{
  return [a1 _setProxyingForApp:];
}

id objc_msgSend__setRequiredInstalledWatchAppsForLegacy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRequiredInstalledWatchAppsForLegacy:");
}

id objc_msgSend__setSectionHeaderFooterPadding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSectionHeaderFooterPadding:");
}

id objc_msgSend__setShouldBlockTinkerForProductType_tinkerPairing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setShouldBlockTinkerForProductType:tinkerPairing:");
}

id objc_msgSend__setShowsBackgroundShadow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setShowsBackgroundShadow:");
}

id objc_msgSend__setTextColorFollowsTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setTextColorFollowsTintColor:");
}

id objc_msgSend__setUpBundleRows_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUpBundleRows:");
}

id objc_msgSend__setUpdateStateForPairingCode_watchChipID_watchRequestsFailSafe_isWatchAhead_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUpdateStateForPairingCode:watchChipID:watchRequestsFailSafe:isWatchAhead:");
}

id objc_msgSend__setUseCustomBackButtonAction_(void *a1, const char *a2, ...)
{
  return [a1 _setUseCustomBackButtonAction:];
}

id objc_msgSend__setWantsUnderlineForAccessibilityButtonShapesEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setWantsUnderlineForAccessibilityButtonShapesEnabled:");
}

id objc_msgSend__setYorktownCompatibilityFlagsFromForProductType_watchPairingVersion_yorktownPairing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setYorktownCompatibilityFlagsFromForProductType:watchPairingVersion:yorktownPairing:");
}

id objc_msgSend__setupCameraSessionWithCompletion_isAsync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupCameraSessionWithCompletion:isAsync:");
}

id objc_msgSend__setupSections(void *a1, const char *a2, ...)
{
  return _[a1 _setupSections];
}

id objc_msgSend__setupSubviews(void *a1, const char *a2, ...)
{
  return _[a1 _setupSubviews];
}

id objc_msgSend__setupTitleCell(void *a1, const char *a2, ...)
{
  return _[a1 _setupTitleCell];
}

id objc_msgSend__setupWakeSpecifiers_(void *a1, const char *a2, ...)
{
  return [a1 _setupWakeSpecifiers:];
}

id objc_msgSend__setupZeroDayForcedUpdateForProductType_systemVersion_zeroDayCriteria_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupZeroDayForcedUpdateForProductType:systemVersion:zeroDayCriteria:");
}

id objc_msgSend__shouldAllowBailoutForDetectingNetworkRelayWatches(void *a1, const char *a2, ...)
{
  return _[a1 _shouldAllowBailoutForDetectingNetworkRelayWatches];
}

id objc_msgSend__shouldReloadChangedRow_installed_activeDevice_(void *a1, const char *a2, ...)
{
  return [a1 _shouldReloadChangedRow:installed:activeDevice:];
}

id objc_msgSend__shouldReverseLayoutDirection(void *a1, const char *a2, ...)
{
  return _[a1 _shouldReverseLayoutDirection];
}

id objc_msgSend__shouldSkipForBetterTogether_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldSkipForBetterTogether:");
}

id objc_msgSend__shouldUseSpaceConstrainedLayout(void *a1, const char *a2, ...)
{
  return _[a1 _shouldUseSpaceConstrainedLayout];
}

id objc_msgSend__showBackButtonBehavior_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showBackButtonBehavior:animated:");
}

id objc_msgSend__showControllerFromSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showControllerFromSpecifier:");
}

id objc_msgSend__showDevicePicker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showDevicePicker:");
}

id objc_msgSend__showInitialSyncPaneIfNotAlreadyShowing(void *a1, const char *a2, ...)
{
  return _[a1 _showInitialSyncPaneIfNotAlreadyShowing];
}

id objc_msgSend__showInternalOnlySkipButton(void *a1, const char *a2, ...)
{
  return _[a1 _showInternalOnlySkipButton];
}

id objc_msgSend__showInternalTTRPrompt(void *a1, const char *a2, ...)
{
  return _[a1 _showInternalTTRPrompt];
}

id objc_msgSend__showRadarUI(void *a1, const char *a2, ...)
{
  return _[a1 _showRadarUI];
}

id objc_msgSend__showTermsFromRequest_(void *a1, const char *a2, ...)
{
  return [a1 _showTermsFromRequest:];
}

id objc_msgSend__showTinkerSwitchFailureModalForDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showTinkerSwitchFailureModalForDevice:");
}

id objc_msgSend__signInToAccountWithPassword_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_signInToAccountWithPassword:");
}

id objc_msgSend__sizeThatFits_doLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sizeThatFits:doLayout:");
}

id objc_msgSend__skipUpdateAndContinue(void *a1, const char *a2, ...)
{
  return _[a1 _skipUpdateAndContinue];
}

id objc_msgSend__specifierForActiveWatch(void *a1, const char *a2, ...)
{
  return _[a1 _specifierForActiveWatch];
}

id objc_msgSend__specifierForBetaProgram_rowIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_specifierForBetaProgram:rowIdentifier:");
}

id objc_msgSend__starDevicePickerRotationTestWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 _starDevicePickerRotationTestWithOptions:];
}

id objc_msgSend__startFaceGalleryScrollTestWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 _startFaceGalleryScrollTestWithOptions:];
}

id objc_msgSend__startLoading(void *a1, const char *a2, ...)
{
  return _[a1 _startLoading];
}

id objc_msgSend__startNewPairingState(void *a1, const char *a2, ...)
{
  return _[a1 _startNewPairingState];
}

id objc_msgSend__startSpinnerInSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startSpinnerInSpecifier:");
}

id objc_msgSend__startStopWatchSetupPushesIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _startStopWatchSetupPushesIfNeeded];
}

id objc_msgSend__startTapToRadarActivity(void *a1, const char *a2, ...)
{
  return _[a1 _startTapToRadarActivity];
}

id objc_msgSend__startTopLevelScrollTestComplex_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startTopLevelScrollTestComplex:options:");
}

id objc_msgSend__stopLoading(void *a1, const char *a2, ...)
{
  return _[a1 _stopLoading];
}

id objc_msgSend__stopSpinnerInActiveSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 _stopSpinnerInActiveSpecifier];
}

id objc_msgSend__stopSpinnerInSpecifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopSpinnerInSpecifier:");
}

id objc_msgSend__storeReauthStepForTinkerFamilyMember_withWatchAKDevice_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_storeReauthStepForTinkerFamilyMember:withWatchAKDevice:completion:");
}

id objc_msgSend__subtitleLabelFont(void *a1, const char *a2, ...)
{
  return _[a1 _subtitleLabelFont];
}

id objc_msgSend__successfullySignedIn(void *a1, const char *a2, ...)
{
  return _[a1 _successfullySignedIn];
}

id objc_msgSend__switchToDeviceWithSpecifier_atIndex_successCompletion_(void *a1, const char *a2, ...)
{
  return [a1 _switchToDeviceWithSpecifier:atIndex:successCompletion:];
}

id objc_msgSend__synchronizeDomainWithAccessor_keys_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_synchronizeDomainWithAccessor:keys:withCompletion:");
}

id objc_msgSend__syncingDevice(void *a1, const char *a2, ...)
{
  return _[a1 _syncingDevice];
}

id objc_msgSend__systemAppSpecifierDictForBundleRow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_systemAppSpecifierDictForBundleRow:");
}

id objc_msgSend__systemImageNamed_(void *a1, const char *a2, ...)
{
  return [a1 _systemImageNamed:];
}

id objc_msgSend__systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 _systemImageNamed:withConfiguration:];
}

id objc_msgSend__tabBarController(void *a1, const char *a2, ...)
{
  return _[a1 _tabBarController];
}

id objc_msgSend__teardownPlayback(void *a1, const char *a2, ...)
{
  return _[a1 _teardownPlayback];
}

id objc_msgSend__testScrollTest_onScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_testScrollTest:onScrollView:");
}

id objc_msgSend__textFieldValueDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_textFieldValueDidChange:");
}

id objc_msgSend__tinkerConnectionFinished(void *a1, const char *a2, ...)
{
  return _[a1 _tinkerConnectionFinished];
}

id objc_msgSend__tinkerPairingEventList(void *a1, const char *a2, ...)
{
  return _[a1 _tinkerPairingEventList];
}

id objc_msgSend__tinkerSetupComplete(void *a1, const char *a2, ...)
{
  return _[a1 _tinkerSetupComplete];
}

id objc_msgSend__tintTabBarWithViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tintTabBarWithViewController:");
}

id objc_msgSend__titleForViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_titleForViewController:");
}

id objc_msgSend__titleLabelFont(void *a1, const char *a2, ...)
{
  return _[a1 _titleLabelFont];
}

id objc_msgSend__togglePrivacySettingForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_togglePrivacySettingForIndexPath:");
}

id objc_msgSend__transitionFromBuddyController_toBuddyController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transitionFromBuddyController:toBuddyController:");
}

id objc_msgSend__triggerRestoreFromBackupIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_triggerRestoreFromBackupIndex:");
}

id objc_msgSend__triggerRestoreFromDeviceIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_triggerRestoreFromDeviceIndex:");
}

id objc_msgSend__triggerRestoreFromIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_triggerRestoreFromIndex:");
}

id objc_msgSend__triggerUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_triggerUpdate:");
}

id objc_msgSend__unregisterNRObserver(void *a1, const char *a2, ...)
{
  return _[a1 _unregisterNRObserver];
}

id objc_msgSend__updateAppStoreRowForRepair(void *a1, const char *a2, ...)
{
  return _[a1 _updateAppStoreRowForRepair];
}

id objc_msgSend__updateButtonOutline(void *a1, const char *a2, ...)
{
  return _[a1 _updateButtonOutline];
}

id objc_msgSend__updateCompanionLinkPreferenceToAWDLforBTUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCompanionLinkPreferenceToAWDLforBTUUID:");
}

id objc_msgSend__updateDashBoardRows_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDashBoardRows:");
}

id objc_msgSend__updateDeviceManagementInformation(void *a1, const char *a2, ...)
{
  return _[a1 _updateDeviceManagementInformation];
}

id objc_msgSend__updateFooterTextForSettingsGroupSpecifier_syncEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateFooterTextForSettingsGroupSpecifier:syncEnabled:");
}

id objc_msgSend__updateGizmoForSuccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateGizmoForSuccess:");
}

id objc_msgSend__updateNanoRegistryToNormalStateIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _updateNanoRegistryToNormalStateIfNeeded];
}

id objc_msgSend__updateNextControllerForSignInFlow_currentControllerClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateNextControllerForSignInFlow:currentControllerClass:");
}

id objc_msgSend__updatePairingEventsWithEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePairingEventsWithEvent:");
}

id objc_msgSend__updatePrivacyRowVisibility(void *a1, const char *a2, ...)
{
  return _[a1 _updatePrivacyRowVisibility];
}

id objc_msgSend__updateProgressUI(void *a1, const char *a2, ...)
{
  return _[a1 _updateProgressUI];
}

id objc_msgSend__updateProgressViewFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateProgressViewFrame:");
}

id objc_msgSend__updateSOSContactsList(void *a1, const char *a2, ...)
{
  return _[a1 _updateSOSContactsList];
}

id objc_msgSend__updateSelectedWatchInGroupSpecifier_deviceSpecifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSelectedWatchInGroupSpecifier:deviceSpecifiers:");
}

id objc_msgSend__updateSubviews(void *a1, const char *a2, ...)
{
  return _[a1 _updateSubviews];
}

id objc_msgSend__uploadAssetAndComplete(void *a1, const char *a2, ...)
{
  return _[a1 _uploadAssetAndComplete];
}

id objc_msgSend__verboseMALogging(void *a1, const char *a2, ...)
{
  return _[a1 _verboseMALogging];
}

id objc_msgSend__viewControllerForBuddyController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewControllerForBuddyController:");
}

id objc_msgSend__viewControllers(void *a1, const char *a2, ...)
{
  return _[a1 _viewControllers];
}

id objc_msgSend__walletExpressSetupEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _walletExpressSetupEnabled];
}

id objc_msgSend__wantsUnifiedFYIPane(void *a1, const char *a2, ...)
{
  return _[a1 _wantsUnifiedFYIPane];
}

id objc_msgSend_aa_displayName(void *a1, const char *a2, ...)
{
  return [a1 aa_displayName];
}

id objc_msgSend_aa_primaryAppleAccount(void *a1, const char *a2, ...)
{
  return [a1 aa_primaryAppleAccount];
}

id objc_msgSend_aa_updatePropertiesForAppleAccount_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_updatePropertiesForAppleAccount:completion:");
}

id objc_msgSend_abortAndRecaptureMovie(void *a1, const char *a2, ...)
{
  return _[a1 abortAndRecaptureMovie];
}

id objc_msgSend_abortPairing(void *a1, const char *a2, ...)
{
  return _[a1 abortPairing];
}

id objc_msgSend_abortPairingWithReason_(void *a1, const char *a2, ...)
{
  return [a1 abortPairingWithReason:];
}

id objc_msgSend_aboutDataSource(void *a1, const char *a2, ...)
{
  return _[a1 aboutDataSource];
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_absoluteURL(void *a1, const char *a2, ...)
{
  return _[a1 absoluteURL];
}

id objc_msgSend_accessibilityConstraintsWithVariableBindings_metrics_hideChart_(void *a1, const char *a2, ...)
{
  return [a1 accessibilityConstraintsWithVariableBindings:metrics:hideChart:];
}

id objc_msgSend_accessibilityHorizontalConstraintsWithVariableBindings_metrics_hideChart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityHorizontalConstraintsWithVariableBindings:metrics:hideChart:");
}

id objc_msgSend_accessibilityVerticalConstraintsWithVariableBindings_metrics_hideChart_(void *a1, const char *a2, ...)
{
  return [a1 accessibilityVerticalConstraintsWithVariableBindings:metrics:hideChart:];
}

id objc_msgSend_accessoryButton(void *a1, const char *a2, ...)
{
  return _[a1 accessoryButton];
}

id objc_msgSend_accessoryView(void *a1, const char *a2, ...)
{
  return _[a1 accessoryView];
}

id objc_msgSend_account(void *a1, const char *a2, ...)
{
  return _[a1 account];
}

id objc_msgSend_accountForService_(void *a1, const char *a2, ...)
{
  return [a1 accountForService:];
}

id objc_msgSend_accountForServiceType_(void *a1, const char *a2, ...)
{
  return [a1 accountForServiceType:];
}

id objc_msgSend_accountPropertyForKey_(void *a1, const char *a2, ...)
{
  return [a1 accountPropertyForKey:];
}

id objc_msgSend_accountStore(void *a1, const char *a2, ...)
{
  return _[a1 accountStore];
}

id objc_msgSend_accountType(void *a1, const char *a2, ...)
{
  return _[a1 accountType];
}

id objc_msgSend_accountTypeString(void *a1, const char *a2, ...)
{
  return _[a1 accountTypeString];
}

id objc_msgSend_accountTypeWithAccountTypeIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 accountTypeWithAccountTypeIdentifier:];
}

id objc_msgSend_accountWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 accountWithIdentifier:];
}

id objc_msgSend_accountsWithAccountType_(void *a1, const char *a2, ...)
{
  return [a1 accountsWithAccountType:];
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return [a1 actionWithTitle:style:handler:];
}

id objc_msgSend_actions(void *a1, const char *a2, ...)
{
  return _[a1 actions];
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return [a1 activateConstraints:];
}

id objc_msgSend_activateWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 activateWithCompletionBlock:];
}

id objc_msgSend_activationDeferredForUserAction(void *a1, const char *a2, ...)
{
  return _[a1 activationDeferredForUserAction];
}

id objc_msgSend_activationHoldActivityIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 activationHoldActivityIdentifier];
}

id objc_msgSend_activationLockRemovalTitle(void *a1, const char *a2, ...)
{
  return _[a1 activationLockRemovalTitle];
}

id objc_msgSend_activationManager(void *a1, const char *a2, ...)
{
  return _[a1 activationManager];
}

id objc_msgSend_activationServerRespondedAtPage_(void *a1, const char *a2, ...)
{
  return [a1 activationServerRespondedAtPage:];
}

id objc_msgSend_activeDevice(void *a1, const char *a2, ...)
{
  return _[a1 activeDevice];
}

id objc_msgSend_activeDeviceSelectorBlock(void *a1, const char *a2, ...)
{
  return _[a1 activeDeviceSelectorBlock];
}

id objc_msgSend_activeExpressModeControllerClasses(void *a1, const char *a2, ...)
{
  return _[a1 activeExpressModeControllerClasses];
}

id objc_msgSend_activeFormat(void *a1, const char *a2, ...)
{
  return _[a1 activeFormat];
}

id objc_msgSend_activePairedDeviceSelectorBlock(void *a1, const char *a2, ...)
{
  return _[a1 activePairedDeviceSelectorBlock];
}

id objc_msgSend_activePairingDevice(void *a1, const char *a2, ...)
{
  return _[a1 activePairingDevice];
}

id objc_msgSend_activeWatch(void *a1, const char *a2, ...)
{
  return _[a1 activeWatch];
}

id objc_msgSend_activeWatchAssertion(void *a1, const char *a2, ...)
{
  return _[a1 activeWatchAssertion];
}

id objc_msgSend_activeWatchBridgeDomainAccessor(void *a1, const char *a2, ...)
{
  return _[a1 activeWatchBridgeDomainAccessor];
}

id objc_msgSend_activeWatchFaceFileURL(void *a1, const char *a2, ...)
{
  return _[a1 activeWatchFaceFileURL];
}

id objc_msgSend_activeWatchOrFakeWatch(void *a1, const char *a2, ...)
{
  return _[a1 activeWatchOrFakeWatch];
}

id objc_msgSend_activityIndicator(void *a1, const char *a2, ...)
{
  return _[a1 activityIndicator];
}

id objc_msgSend_activityType(void *a1, const char *a2, ...)
{
  return _[a1 activityType];
}

id objc_msgSend_add_forDeviceID_withCompletion_(void *a1, const char *a2, ...)
{
  return [a1 add:forDeviceID:withCompletion:];
}

id objc_msgSend_addAccessoryButton_(void *a1, const char *a2, ...)
{
  return [a1 addAccessoryButton:];
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return [a1 addAction:];
}

id objc_msgSend_addActivationObservers(void *a1, const char *a2, ...)
{
  return _[a1 addActivationObservers];
}

id objc_msgSend_addAlertPresenterObserver_(void *a1, const char *a2, ...)
{
  return [a1 addAlertPresenterObserver:];
}

id objc_msgSend_addAnimation_forKey_(void *a1, const char *a2, ...)
{
  return [a1 addAnimation:forKey:];
}

id objc_msgSend_addArrangedSubview_(void *a1, const char *a2, ...)
{
  return [a1 addArrangedSubview:];
}

id objc_msgSend_addAttribute_value_range_(void *a1, const char *a2, ...)
{
  return [a1 addAttribute:value:range:];
}

id objc_msgSend_addAttributes_range_(void *a1, const char *a2, ...)
{
  return [a1 addAttributes:range:];
}

id objc_msgSend_addBulletedListItemWithTitle_description_image_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBulletedListItemWithTitle:description:image:");
}

id objc_msgSend_addBulletedListItemWithTitle_description_image_tintColor_(void *a1, const char *a2, ...)
{
  return [a1 addBulletedListItemWithTitle:description:image:tintColor:];
}

id objc_msgSend_addBundlesToTinkerFlowMapping_(void *a1, const char *a2, ...)
{
  return [a1 addBundlesToTinkerFlowMapping];
}

id objc_msgSend_addButton_(void *a1, const char *a2, ...)
{
  return [a1 addButton:];
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return [a1 addChildViewController:];
}

id objc_msgSend_addConfidences_(void *a1, const char *a2, ...)
{
  return [a1 addConfidences:];
}

id objc_msgSend_addEmergencyContactsToSpecifiers_(void *a1, const char *a2, ...)
{
  return [a1 addEmergencyContactsToSpecifiers:];
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return [a1 addEntriesFromDictionary:];
}

id objc_msgSend_addFinishBlock_(void *a1, const char *a2, ...)
{
  return [a1 addFinishBlock:];
}

id objc_msgSend_addFollowUpForPageWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 addFollowUpForPageWithCompletion:];
}

id objc_msgSend_addFooter(void *a1, const char *a2, ...)
{
  return _[a1 addFooter];
}

id objc_msgSend_addForgotPasswordFooterToSpecifier_withActionSelector_(void *a1, const char *a2, ...)
{
  return [a1 addForgotPasswordFooterToSpecifier:withActionSelector:];
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 addGestureRecognizer:];
}

id objc_msgSend_addInput_(void *a1, const char *a2, ...)
{
  return [a1 addInput:];
}

id objc_msgSend_addInternalDashboardButton(void *a1, const char *a2, ...)
{
  return _[a1 addInternalDashboardButton];
}

id objc_msgSend_addItemWithURL_completion_(void *a1, const char *a2, ...)
{
  return [a1 addItemWithURL:completion:];
}

id objc_msgSend_addNotificationRequest_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 addNotificationRequest:withCompletionHandler:];
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return [a1 addObject:];
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 addObjectsFromArray:];
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:];
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:selector:name:object:];
}

id objc_msgSend_addObserverForName_object_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return [a1 addObserverForName:object:queue:usingBlock:];
}

id objc_msgSend_addOutput_(void *a1, const char *a2, ...)
{
  return [a1 addOutput:];
}

id objc_msgSend_addPairingTimeEventStringToPairingReportPlist_withValue_withError_(void *a1, const char *a2, ...)
{
  return [a1 addPairingTimeEventStringToPairingReportPlist:withValue:withError:];
}

id objc_msgSend_addPairingTimeEventToPairingReportPlist_withValue_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPairingTimeEventToPairingReportPlist:withValue:withError:");
}

id objc_msgSend_addPropertyObserver_forPropertyChanges_(void *a1, const char *a2, ...)
{
  return [a1 addPropertyObserver:forPropertyChanges:];
}

id objc_msgSend_addResults_(void *a1, const char *a2, ...)
{
  return [a1 addResults:];
}

id objc_msgSend_addRootSpecifier_(void *a1, const char *a2, ...)
{
  return [a1 addRootSpecifier:];
}

id objc_msgSend_addSOSContactsToSpecifiers_(void *a1, const char *a2, ...)
{
  return [a1 addSOSContactsToSpecifiers:];
}

id objc_msgSend_addSearchableItems_(void *a1, const char *a2, ...)
{
  return [a1 addSearchableItems:];
}

id objc_msgSend_addShowOnWatchSectionToSpecifiers_(void *a1, const char *a2, ...)
{
  return [a1 addShowOnWatchSectionToSpecifiers:];
}

id objc_msgSend_addSpecifier_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSpecifier:animated:");
}

id objc_msgSend_addSublayer_(void *a1, const char *a2, ...)
{
  return [a1 addSublayer:];
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return [a1 addSubview:];
}

id objc_msgSend_addSyncTrapProgressView_(void *a1, const char *a2, ...)
{
  return [a1 addSyncTrapProgressView:];
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return [a1 addTarget:action:forControlEvents:];
}

id objc_msgSend_addTarget_action_forEvents_(void *a1, const char *a2, ...)
{
  return [a1 addTarget:action:forEvents:];
}

id objc_msgSend_addTextFieldWithConfigurationHandler_(void *a1, const char *a2, ...)
{
  return [a1 addTextFieldWithConfigurationHandler:];
}

id objc_msgSend_addTimer_forMode_(void *a1, const char *a2, ...)
{
  return [a1 addTimer:forMode:];
}

id objc_msgSend_addUnavailableAppsSectionIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 addUnavailableAppsSectionIfNeeded];
}

id objc_msgSend_addValue_forHTTPHeaderField_(void *a1, const char *a2, ...)
{
  return [a1 addValue:forHTTPHeaderField:];
}

id objc_msgSend_additionalSpecifiers(void *a1, const char *a2, ...)
{
  return _[a1 additionalSpecifiers];
}

id objc_msgSend_adjustTextDirection(void *a1, const char *a2, ...)
{
  return _[a1 adjustTextDirection];
}

id objc_msgSend_adjustedContentInset(void *a1, const char *a2, ...)
{
  return _[a1 adjustedContentInset];
}

id objc_msgSend_advanceToNextItem(void *a1, const char *a2, ...)
{
  return _[a1 advanceToNextItem];
}

id objc_msgSend_agaveSideBySideImage(void *a1, const char *a2, ...)
{
  return _[a1 agaveSideBySideImage];
}

id objc_msgSend_aidaServiceTypeFromAppleIDServiceType_(void *a1, const char *a2, ...)
{
  return [a1 aidaServiceTypeFromAppleIDServiceType:];
}

id objc_msgSend_airplaneModeSettingsLoaded(void *a1, const char *a2, ...)
{
  return _[a1 airplaneModeSettingsLoaded];
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return [a1 alertControllerWithTitle:message:preferredStyle:];
}

id objc_msgSend_alertPresentationViewController(void *a1, const char *a2, ...)
{
  return _[a1 alertPresentationViewController];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allKeysForObject_(void *a1, const char *a2, ...)
{
  return [a1 allKeysForObject:];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_allPages(void *a1, const char *a2, ...)
{
  return _[a1 allPages];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_alloc(void *a1, const char *a2, ...)
{
  return _[a1 alloc];
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return [a1 allocWithZone:];
}

id objc_msgSend_allowSkipping(void *a1, const char *a2, ...)
{
  return _[a1 allowSkipping];
}

id objc_msgSend_allowUserInteractions_(void *a1, const char *a2, ...)
{
  return [a1 allowUserInteractions:];
}

id objc_msgSend_allowedGroupName(void *a1, const char *a2, ...)
{
  return _[a1 allowedGroupName];
}

id objc_msgSend_allowsMarkAsMissingForUDID_completion_(void *a1, const char *a2, ...)
{
  return [a1 allowsMarkAsMissingForUDID:completion:];
}

id objc_msgSend_altDSID(void *a1, const char *a2, ...)
{
  return _[a1 altDSID];
}

id objc_msgSend_altDSIDForAccount_(void *a1, const char *a2, ...)
{
  return [a1 altDSIDForAccount];
}

id objc_msgSend_altDSIDForAccount_service_(void *a1, const char *a2, ...)
{
  return [a1 altDSIDForAccount:service:];
}

id objc_msgSend_altDSIDForIDMSAccount_(void *a1, const char *a2, ...)
{
  return [a1 altDSIDForIDMSAccount];
}

id objc_msgSend_altDSIDForIDSAccount_(void *a1, const char *a2, ...)
{
  return [a1 altDSIDForIDSAccount:];
}

id objc_msgSend_altDSIDForiCloudAccount_(void *a1, const char *a2, ...)
{
  return [a1 altDSIDForiCloudAccount];
}

id objc_msgSend_altDSIDForiTunesStoreAccount_(void *a1, const char *a2, ...)
{
  return [a1 altDSIDForiTunesStoreAccount:];
}

id objc_msgSend_altTextColor(void *a1, const char *a2, ...)
{
  return _[a1 altTextColor];
}

id objc_msgSend_alternateChoiceButton(void *a1, const char *a2, ...)
{
  return _[a1 alternateChoiceButton];
}

id objc_msgSend_amsPromise(void *a1, const char *a2, ...)
{
  return _[a1 amsPromise];
}

id objc_msgSend_amsSaveOptions(void *a1, const char *a2, ...)
{
  return _[a1 amsSaveOptions];
}

id objc_msgSend_ams_iTunesAccountWithAltDSID_DSID_username_(void *a1, const char *a2, ...)
{
  return [a1 ams_iTunesAccountWithAltDSID:DSID:username:];
}

id objc_msgSend_ams_setAltDSID_(void *a1, const char *a2, ...)
{
  return [a1 ams_setAltDSID:];
}

id objc_msgSend_ams_setDSID_(void *a1, const char *a2, ...)
{
  return [a1 ams_setDSID:];
}

id objc_msgSend_ams_setRawPassword_(void *a1, const char *a2, ...)
{
  return [a1 ams_setRawPassword:];
}

id objc_msgSend_ams_sharedAccountStore(void *a1, const char *a2, ...)
{
  return [a1 ams_sharedAccountStore];
}

id objc_msgSend_analyticsEnrollmentRetryCount(void *a1, const char *a2, ...)
{
  return _[a1 analyticsEnrollmentRetryCount];
}

id objc_msgSend_analyticsEventType(void *a1, const char *a2, ...)
{
  return _[a1 analyticsEventType];
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateAlongsideTransition:completion:];
}

id objc_msgSend_animateToColor_(void *a1, const char *a2, ...)
{
  return [a1 animateToColor:];
}

id objc_msgSend_animateWithDuration_animations_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:];
}

id objc_msgSend_animateWithDuration_animations_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:animations:completion:];
}

id objc_msgSend_animateWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:delay:options:animations:completion:];
}

id objc_msgSend_animation(void *a1, const char *a2, ...)
{
  return _[a1 animation];
}

id objc_msgSend_animationForKey_(void *a1, const char *a2, ...)
{
  return [a1 animationForKey:];
}

id objc_msgSend_animationWithKeyPath_(void *a1, const char *a2, ...)
{
  return [a1 animationWithKeyPath:];
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _[a1 anyObject];
}

id objc_msgSend_appBundle(void *a1, const char *a2, ...)
{
  return _[a1 appBundle];
}

id objc_msgSend_appBundleUsage(void *a1, const char *a2, ...)
{
  return _[a1 appBundleUsage];
}

id objc_msgSend_appDelegateOnDismissalBlock(void *a1, const char *a2, ...)
{
  return _[a1 appDelegateOnDismissalBlock];
}

id objc_msgSend_appID(void *a1, const char *a2, ...)
{
  return _[a1 appID];
}

id objc_msgSend_appIcon(void *a1, const char *a2, ...)
{
  return _[a1 appIcon];
}

id objc_msgSend_appIsAvailableStateDidChange_(void *a1, const char *a2, ...)
{
  return [a1 appIsAvailableStateDidChange];
}

id objc_msgSend_appState(void *a1, const char *a2, ...)
{
  return _[a1 appState];
}

id objc_msgSend_appearance(void *a1, const char *a2, ...)
{
  return _[a1 appearance];
}

id objc_msgSend_appearanceWhenContainedInInstancesOfClasses_(void *a1, const char *a2, ...)
{
  return [a1 appearanceWhenContainedInInstancesOfClasses:];
}

id objc_msgSend_appendAttributedString_(void *a1, const char *a2, ...)
{
  return [a1 appendAttributedString:];
}

id objc_msgSend_appendBytes_length_(void *a1, const char *a2, ...)
{
  return [a1 appendBytes:length:];
}

id objc_msgSend_appendData_(void *a1, const char *a2, ...)
{
  return [a1 appendData:];
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return [a1 appendFormat:];
}

id objc_msgSend_appendSampleBuffer_(void *a1, const char *a2, ...)
{
  return [a1 appendSampleBuffer:];
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return [a1 appendString:];
}

id objc_msgSend_appendUsernameToDetailText_(void *a1, const char *a2, ...)
{
  return [a1 appendUsernameToDetailText:];
}

id objc_msgSend_appleID(void *a1, const char *a2, ...)
{
  return _[a1 appleID];
}

id objc_msgSend_appleIDAuthController_didSignInWithSuccess_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appleIDAuthController:didSignInWithSuccess:error:");
}

id objc_msgSend_appleIDAuthControllerRequestsPresentingViewController_(void *a1, const char *a2, ...)
{
  return [a1 appleIDAuthControllerRequestsPresentingViewController:];
}

id objc_msgSend_appleIDServiceState(void *a1, const char *a2, ...)
{
  return _[a1 appleIDServiceState];
}

id objc_msgSend_appleIDServiceType(void *a1, const char *a2, ...)
{
  return _[a1 appleIDServiceType];
}

id objc_msgSend_appleIDSignInModel(void *a1, const char *a2, ...)
{
  return _[a1 appleIDSignInModel];
}

id objc_msgSend_appleIDSilentSignInControllerSignedAccountType_withSuccess_(void *a1, const char *a2, ...)
{
  return [a1 appleIDSilentSignInControllerSignedAccountType:withSuccess:];
}

id objc_msgSend_appleIDSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 appleIDSpecifier];
}

id objc_msgSend_application_openURL_options_(void *a1, const char *a2, ...)
{
  return [a1 application:openURL:options:];
}

id objc_msgSend_applicationIsInstalledOnPairedDevice_withBundleID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationIsInstalledOnPairedDevice:withBundleID:completion:");
}

id objc_msgSend_applicationMode(void *a1, const char *a2, ...)
{
  return _[a1 applicationMode];
}

id objc_msgSend_applicationName(void *a1, const char *a2, ...)
{
  return _[a1 applicationName];
}

id objc_msgSend_applicationProxyForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 applicationProxyForIdentifier];
}

id objc_msgSend_applicationSpinnerView(void *a1, const char *a2, ...)
{
  return _[a1 applicationSpinnerView];
}

id objc_msgSend_applicationState(void *a1, const char *a2, ...)
{
  return _[a1 applicationState];
}

id objc_msgSend_applicationType(void *a1, const char *a2, ...)
{
  return _[a1 applicationType];
}

id objc_msgSend_applyBodyStyle_toRange_(void *a1, const char *a2, ...)
{
  return [a1 applyBodyStyle:toRange:];
}

id objc_msgSend_applyBoldStyle_toTextMatching_(void *a1, const char *a2, ...)
{
  return [a1 applyBoldStyle:toTextMatching:];
}

id objc_msgSend_applyConfirmedOptin_(void *a1, const char *a2, ...)
{
  return [a1 applyConfirmedOptin:];
}

id objc_msgSend_applyScreenStyle(void *a1, const char *a2, ...)
{
  return _[a1 applyScreenStyle];
}

id objc_msgSend_applyUnpairActionsForContext_withCompletion_(void *a1, const char *a2, ...)
{
  return [a1 applyUnpairActionsForContext:withCompletion:];
}

id objc_msgSend_applyUpdatedConfiguration_error_(void *a1, const char *a2, ...)
{
  return [a1 applyUpdatedConfiguration:error:];
}

id objc_msgSend_architectureCompatibility(void *a1, const char *a2, ...)
{
  return _[a1 architectureCompatibility];
}

id objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archivedDataWithRootObject:requiringSecureCoding:error:");
}

id objc_msgSend_arrangedSubviews(void *a1, const char *a2, ...)
{
  return _[a1 arrangedSubviews];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return [a1 arrayByAddingObject:];
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 arrayByAddingObjectsFromArray:];
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithArray:];
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithCapacity:];
}

id objc_msgSend_arrayWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithContentsOfFile:];
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObject:];
}

id objc_msgSend_arrayWithObjects_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:count:];
}

id objc_msgSend_ascender(void *a1, const char *a2, ...)
{
  return _[a1 ascender];
}

id objc_msgSend_assetName(void *a1, const char *a2, ...)
{
  return _[a1 assetName];
}

id objc_msgSend_assetNameForSafetyFeatureRow_(void *a1, const char *a2, ...)
{
  return [a1 assetNameForSafetyFeatureRow:];
}

id objc_msgSend_assetWithURL_(void *a1, const char *a2, ...)
{
  return [a1 assetWithURL:];
}

id objc_msgSend_attachAuthStateAfterReleasingHoldToPresentController(void *a1, const char *a2, ...)
{
  return _[a1 attachAuthStateAfterReleasingHoldToPresentController];
}

id objc_msgSend_attemptMagicSignIn(void *a1, const char *a2, ...)
{
  return _[a1 attemptMagicSignIn];
}

id objc_msgSend_attribute(void *a1, const char *a2, ...)
{
  return _[a1 attribute];
}

id objc_msgSend_attributeDescription_(void *a1, const char *a2, ...)
{
  return [a1 attributeDescription:];
}

id objc_msgSend_attributedStringWithAttachment_(void *a1, const char *a2, ...)
{
  return [a1 attributedStringWithAttachment:];
}

id objc_msgSend_attributesDescription(void *a1, const char *a2, ...)
{
  return _[a1 attributesDescription];
}

id objc_msgSend_audioSettingsManager(void *a1, const char *a2, ...)
{
  return _[a1 audioSettingsManager];
}

id objc_msgSend_authController(void *a1, const char *a2, ...)
{
  return _[a1 authController];
}

id objc_msgSend_authenticateAccountActionForContext_withMessage_buttonTitle_presentingViewController_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authenticateAccountActionForContext:withMessage:buttonTitle:presentingViewController:completion:");
}