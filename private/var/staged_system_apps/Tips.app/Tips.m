void sub_100002D9C()
{
  unint64_t v0;
  unint64_t v1;

  sub_100002FD4(319, (unint64_t *)&unk_1000C9480, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
  if (v0 <= 0x3F)
  {
    sub_100002FD4(319, (unint64_t *)&qword_1000C86C8, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100002EB4()
{
  sub_100002FD4(319, (unint64_t *)&unk_1000C9480, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
  if (v0 <= 0x3F)
  {
    sub_100002FD4(319, (unint64_t *)&qword_1000C86C8, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100002FD4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100003028(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100003384()
{
  uint64_t v1 = type metadata accessor for Locale();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v2 - 8);
  if (*((unsigned char *)v0 + OBJC_IVAR___CollectionListViewController_searchActive) == 1)
  {
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    String.init(localized:table:bundle:locale:comment:)();
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v0 setTitle:v3];
  }
  else
  {
    if (qword_1000C7FC8 != -1) {
      swift_once();
    }
    NSString v4 = String._bridgeToObjectiveC()();
    [v0 setTitle:v4];
  }
}

uint64_t type metadata accessor for TipListViewController()
{
  return self;
}

uint64_t sub_10000366C(uint64_t a1, int a2, void *aBlock)
{
  uint64_t v4 = (uint64_t)_Block_copy(aBlock);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v5;
    v6 = sub_100043328;
  }
  else
  {
    v6 = 0;
  }
  v7 = (uint64_t (**)())(a1 + qword_1000CD1C8);
  uint64_t v8 = *(void *)(a1 + qword_1000CD1C8);
  *v7 = v6;
  v7[1] = (uint64_t (*)())v4;

  return sub_100005470(v8);
}

void sub_1000036F4()
{
  if (!qword_1000C86C8)
  {
    type metadata accessor for ColorScheme();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000C86C8);
    }
  }
}

uint64_t sub_10000374C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_100003824()
{
  uint64_t result = type metadata accessor for ScrollViewProxy();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_100003938(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10001C28C(&qword_1000C93A8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_100012140(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100003AB4(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = a2;
  static Published.subscript.getter();

  swift_release();
  uint64_t result = swift_release();
  if (v6 == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v5 = v3;
    static Published.subscript.getter();

    swift_release();
    uint64_t result = swift_release();
    if ((v6 & 1) == 0)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      v5;
      static Published.subscript.setter();
      return sub_100041C24();
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TipCollection(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_100003C0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100003C54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100003D0C(void **a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FeaturedCollectionView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100012898(a1, v4);
}

uint64_t sub_100003D7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for FeaturedCollectionView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100008368(v4, a1);
}

uint64_t sub_100003EF4()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v1 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t result = String.init(localized:table:bundle:locale:comment:)();
  qword_1000CD150 = result;
  *(void *)algn_1000CD158 = v3;
  return result;
}

unint64_t sub_100003FFC(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();

  return sub_10001C9E4(a1, v2);
}

void sub_10000417C(char *a1)
{
  char v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_10000BF90(v1);
  }
}

Swift::Bool __swiftcall TPSLastDisplayedContent.hasContent()()
{
  id v1 = [self sharedApplication];
  unsigned __int8 v2 = [v1 isRunningTest];

  if (v2) {
    return 0;
  }
  uint64_t v4 = (void *)(v0 + OBJC_IVAR___TPSLastDisplayedContent_collectionId);
  swift_beginAccess();
  if (*v4) {
    return 1;
  }
  id v5 = (void *)(v0 + OBJC_IVAR___TPSLastDisplayedContent_tipId);
  swift_beginAccess();
  return *v5 != 0;
}

unint64_t sub_100004390(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10001C28C(&qword_1000C9398);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100016FEC(v6, (uint64_t)&v13, &qword_1000C9888);
    uint64_t v7 = v13;
    unint64_t result = sub_100003FFC(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_10001C9D4(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CollectionListViewController()
{
  return self;
}

id sub_1000044E4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ColorScheme();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v9 = (char *)&v16 - v8;
  uint64_t v10 = &v1[OBJC_IVAR___CollectionListViewModel_colorScheme];
  swift_beginAccess();
  BOOL v11 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v11(v9, v10, v3);
  v11(v7, v9, v3);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v7, v3);
  uint64_t v13 = 0;
  if (v12 != enum case for ColorScheme.light(_:))
  {
    if (v12 == enum case for ColorScheme.dark(_:))
    {
      uint64_t v13 = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      uint64_t v13 = 0;
    }
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  id v14 = [v1 assetsInfoFor:a1 userInterfaceStyle:v13];

  return v14;
}

void sub_1000047E0()
{
  sub_10001C8C4(319, (unint64_t *)&qword_1000C8908);
  if (v0 <= 0x3F)
  {
    sub_100004A1C(319, &qword_1000C8910, &qword_1000C8918);
    if (v1 <= 0x3F)
    {
      sub_100004A1C(319, (unint64_t *)&qword_1000C8920, &qword_1000C81A8);
      if (v2 <= 0x3F)
      {
        sub_100004A1C(319, &qword_1000C8928, &qword_1000C8930);
        if (v3 <= 0x3F)
        {
          sub_100004A1C(319, &qword_1000C8938, &qword_1000C8940);
          if (v4 <= 0x3F)
          {
            sub_10001C8C4(319, &qword_1000C8948);
            if (v5 <= 0x3F) {
              swift_updateClassMetadata2();
            }
          }
        }
      }
    }
  }
}

void sub_100004A1C(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_10001AD28(a3);
    unint64_t v4 = type metadata accessor for Published();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100004D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  sub_100018B10(a2, a3, a4);
  uint64_t v6 = a4 + *(int *)(sub_10001C28C(&qword_1000C9DA0) + 36);
  uint64_t v7 = type metadata accessor for ScrollViewProxy();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(v6, a1, v7);
}

uint64_t sub_100004DE0()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for TipListViewController();
  [super viewDidLoad];
  sub_10000A840(0);
  id v1 = [v0 navigationItem];
  [v1 setLargeTitleDisplayMode:2];

  uint64_t v2 = *(void *)&v0[OBJC_IVAR___TipListViewController_viewModel];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  unint64_t v4 = (void (**)(char))(v2 + qword_1000CD1B8);
  uint64_t v5 = *(void *)(v2 + qword_1000CD1B8);
  *unint64_t v4 = sub_10005F828;
  v4[1] = (void (*)(char))v3;
  uint64_t v6 = v0;
  return sub_100005470(v5);
}

BOOL sub_100004F68()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 1;
  }
  id v1 = Strong;
  id v2 = [Strong traitCollection];

  id v3 = [v2 horizontalSizeClass];
  return v3 != 0;
}

uint64_t sub_100005248(uint64_t a1)
{
  uint64_t v2 = a1 + qword_1000C96E0;
  uint64_t v3 = sub_10001C28C(&qword_1000C8518);
  unint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  uint64_t v5 = a1 + qword_1000C96E8;
  uint64_t v6 = sub_10001C28C(&qword_1000C9788);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  v4(a1 + qword_1000C96F0, v3);
  v4(a1 + qword_1000C96F8, v3);
  uint64_t v7 = a1 + qword_1000C9700;
  uint64_t v8 = sub_10001C28C(&qword_1000C9780);
  char v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(a1 + qword_1000C9708, v8);
  uint64_t v10 = a1 + qword_1000C9710;
  uint64_t v11 = sub_10001C28C(&qword_1000C89A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = a1 + qword_1000C9718;
  uint64_t v13 = sub_10001C28C(&qword_1000C8990);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  sub_100005470(*(void *)(a1 + qword_1000CD1B8));
  uint64_t v14 = *(void *)(a1 + qword_1000CD1C8);

  return sub_100005470(v14);
}

uint64_t sub_100005470(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void *sub_1000055C0(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C81D0);
    sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  char v9 = (void *)((char *)a2 + v7);
  *uint64_t v8 = *v9;
  uint64_t v10 = (void *)v9[1];
  uint64_t v11 = (void *)v8[1];
  v8[1] = v10;
  id v12 = v10;

  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  *uint64_t v14 = *v15;
  *((void *)v14 + 1) = *((void *)v15 + 1);
  swift_retain();
  swift_release();
  uint64_t v16 = a3[7];
  v17 = (void *)((char *)a1 + v16);
  v18 = (char *)a2 + v16;
  void *v17 = *(void *)((char *)a2 + v16);
  v17[1] = *(void *)((char *)a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17[2] = *((void *)v18 + 2);
  v17[3] = *((void *)v18 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[8];
  v20 = *(void **)((char *)a2 + v19);
  v21 = *(void **)((char *)a1 + v19);
  *(void *)((char *)a1 + v19) = v20;
  id v22 = v20;

  return a1;
}

uint64_t sub_100005758(void *a1, void *a2, void *a3)
{
  if (!(*a2 >> 62))
  {
    if (!*(void *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v5) {
LABEL_3:
  }
    swift_bridgeObjectRetain();
LABEL_5:
  swift_getKeyPath();
  swift_getKeyPath();
  id v6 = a1;
  static Published.subscript.setter();
  if (*a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
LABEL_7:
  }
    swift_bridgeObjectRetain();
LABEL_9:
  swift_getKeyPath();
  swift_getKeyPath();
  id v8 = v6;
  return static Published.subscript.setter();
}

id sub_1000058CC@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (!*a1)
  {
    swift_beginAccess();
    uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
    uint64_t v3 = 0;
    if (Strong)
    {
      *(void *)&Strong[OBJC_IVAR___CollectionListViewModel_featuredAssetViewModel] = 0;

      swift_release();
      uint64_t v3 = 0;
    }
  }
  *a2 = v3;

  return v3;
}

void sub_10000595C()
{
  sub_10001D514();
  if (v0 <= 0x3F)
  {
    sub_100004A1C(319, (unint64_t *)&qword_1000C8920, &qword_1000C81A8);
    if (v1 <= 0x3F)
    {
      sub_100004A1C(319, &qword_1000C8910, &qword_1000C8918);
      if (v2 <= 0x3F)
      {
        sub_10001D624();
        if (v3 <= 0x3F)
        {
          sub_100004A1C(319, &qword_1000C8B08, &qword_1000C8B10);
          if (v4 <= 0x3F)
          {
            sub_100004A1C(319, &qword_1000C8B18, &qword_1000C8B20);
            if (v5 <= 0x3F)
            {
              sub_100004A1C(319, &qword_1000C8B28, &qword_1000C8B30);
              if (v6 <= 0x3F)
              {
                type metadata accessor for ColorScheme();
                if (v7 <= 0x3F) {
                  swift_updateClassMetadata2();
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_100005CF8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id sub_100005E24(void *a1)
{
  uint64_t v3 = OBJC_IVAR___TipListViewController_viewModel;
  id v4 = objc_allocWithZone((Class)type metadata accessor for TipListViewModel(0));
  unint64_t v5 = v1;
  id v6 = [v4 init];
  *(void *)&v1[v3] = v6;
  if (a1)
  {
    *(void *)&v1[v3] = a1;
    id v7 = a1;

    id v6 = *(id *)&v1[v3];
  }
  char v20 = 0;
  id v8 = v6;
  State.init(wrappedValue:)();
  char v9 = v15;
  uint64_t v10 = v16;
  sub_100003C0C(&qword_1000C8C50, (void (*)(uint64_t))type metadata accessor for TipListViewModel);
  uint64_t v15 = 0;
  uint64_t v16 = ObservedObject.init(wrappedValue:)();
  uint64_t v17 = v11;
  char v18 = v9;
  uint64_t v19 = v10;
  id v12 = objc_allocWithZone((Class)sub_10001C28C(&qword_1000C9890));
  *(void *)&v5[OBJC_IVAR___TipListViewController_hostingController] = UIHostingController.init(rootView:)();

  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for TipListViewController();
  return [super initWithNibName:0 bundle:0];
}

char *sub_100005F74(void **a1)
{
  unint64_t v1 = *a1;
  swift_beginAccess();
  unint64_t result = (char *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    id v4 = [result assetsInfoFor:v1];
    type metadata accessor for TipsContentModel();
    static TipsContentModel.shared()();
    type metadata accessor for DocumentAssetViewModel();
    swift_allocObject();
    *(void *)&v3[OBJC_IVAR___CollectionListViewModel_featuredAssetViewModel] = DocumentAssetViewModel.init(document:assetsInfo:contentModel:)();

    return (char *)swift_release();
  }
  return result;
}

void sub_1000061C0(void *a1)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for SearchResultsViewController();
  id v1 = v5.receiver;
  [super viewDidLoad];
  id v2 = [v1 view];
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = [self clearColor];
    [v3 setBackgroundColor:v4];
  }
  else
  {
    __break(1u);
  }
}

void *sub_100006280()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v1) {
    sub_10001CCC8(v1);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v1) {
    sub_10001CCC8(v1);
  }
  return &_swiftEmptyArrayStorage;
}

int main(int argc, const char **argv, const char **envp)
{
  int v3 = static CommandLine.argc.getter();
  id v4 = (char **)static CommandLine.unsafeArgv.getter();
  sub_1000067A4(0, &qword_1000C8040);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v6 = NSStringFromClass(ObjCClassFromMetadata);
  if (!v6)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v6 = (NSString *)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  sub_1000067A4(0, &qword_1000C8048);
  id v7 = (objc_class *)swift_getObjCClassFromMetadata();
  id v8 = NSStringFromClass(v7);
  if (!v8)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v8 = (NSString *)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  UIApplicationMain(v3, v4, v6, v8);

  return 0;
}

uint64_t sub_1000067A4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1000067E0()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v26 = *(void *)(v0 - 8);
  uint64_t v27 = v0;
  __chkstk_darwin(v0);
  v25 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10001C28C(&qword_1000C9D48);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  v24 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v23 = (char *)v22 - v5;
  uint64_t v6 = sub_10001C28C(&qword_1000CA250);
  __chkstk_darwin(v6 - 8);
  v29 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v8 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Locale();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for LocalizedStringResource();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  __chkstk_darwin(v15);
  v22[1] = sub_10001C28C(&qword_1000C9D50);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v17(v10, enum case for LocalizedStringResource.BundleDescription.main(_:), v28);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v29, 1, 1, v13);
  long long v30 = 0u;
  long long v31 = 0u;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v10, v16, v28);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  char v18 = v23;
  IntentDialog.init(_:)();
  uint64_t v19 = type metadata accessor for IntentDialog();
  char v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v18, 0, 1, v19);
  v20(v24, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v25, enum case for InputConnectionBehavior.default(_:), v27);
  sub_10001E00C();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

id sub_100006CE8(void *a1)
{
  uint64_t v3 = OBJC_IVAR___CollectionListViewController_viewModel;
  id v4 = objc_allocWithZone((Class)type metadata accessor for CollectionListViewModel());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  v5[OBJC_IVAR___CollectionListViewController_canIncreaseViewCount] = 1;
  uint64_t v6 = OBJC_IVAR___CollectionListViewController_searchResultsViewModel;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)type metadata accessor for SearchResultsViewModel()) init];
  *(void *)&v5[OBJC_IVAR___CollectionListViewController_searchResultsViewController] = 0;
  *(void *)&v5[OBJC_IVAR___CollectionListViewController_searchController] = 0;
  v5[OBJC_IVAR___CollectionListViewController_searchActive] = 0;
  *(void *)&v5[OBJC_IVAR___CollectionListViewController_cancellables] = &_swiftEmptySetSingleton;
  uint64_t v7 = &v5[OBJC_IVAR___CollectionListViewController_searchResultSelectedHandler];
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  if (a1)
  {
    uint64_t v8 = *(void **)&v1[v3];
    *(void *)&v1[v3] = a1;
    id v9 = a1;
  }
  uint64_t v10 = *(void **)&v1[v3];
  sub_10001D044(&qword_1000C8550, (void (*)(uint64_t))type metadata accessor for CollectionListViewModel);
  id v11 = v10;
  uint64_t v16 = ObservedObject.init(wrappedValue:)();
  uint64_t v17 = v12;
  id v13 = objc_allocWithZone((Class)sub_10001C28C(&qword_1000C8558));
  *(void *)&v5[OBJC_IVAR___CollectionListViewController_hostingController] = UIHostingController.init(rootView:)();

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for CollectionListViewController();
  return [super initWithNibName:0 bundle:0];
}

void *initializeBufferWithCopyOfBuffer for CollectionListView(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  id v4 = v3;
  return a1;
}

void sub_100006EB8(uint64_t a1, int *a2)
{
  sub_10001C28C(&qword_1000C92C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  uint64_t v7 = *(void **)(a1 + a2[7]);
}

void sub_100006FF0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v13) {
    return;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();

  if (v12) {
    return;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v1 = *(void *)&v0[OBJC_IVAR___TPSChecklistViewModel_currentDisplayTips];
  if (v1)
  {
    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      if (v2) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v2)
      {
LABEL_7:
        if ((v1 & 0xC000000000000001) != 0)
        {
          id v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v3 = *(id *)(v1 + 32);
        }
        uint64_t v4 = v3;
        swift_bridgeObjectRelease();
        id v5 = [v4 identifier];

        unint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v2 = v6;

        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v1 = 0;
  }
  else
  {
    uint64_t v2 = 0;
  }
LABEL_14:
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v7 = v0;
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v2)
  {
    uint64_t v8 = (void *)sub_10003D79C(v1, v2);
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    id v9 = v8;
    uint64_t v10 = v7;
    static Published.subscript.setter();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v8)
    {
      id v11 = *(void (**)(void *))&v10[OBJC_IVAR___TPSChecklistViewModel_actionHandler];
      if (v11)
      {
        swift_retain();
        v11(v8);
        sub_100005470((uint64_t)v11);
      }

      id v9 = v8;
    }
  }
}

void *sub_10000736C(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C92C8);
    sub_10001C28C(&qword_1000C92C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    id v9 = (void *)((char *)a2 + v7);
    sub_1000143B4((uint64_t)a1 + v7, &qword_1000C81D0);
    sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  uint64_t v14 = (void *)v13[1];
  objc_super v15 = (void *)v12[1];
  v12[1] = v14;
  id v16 = v14;

  uint64_t v17 = a3[7];
  char v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (char *)a2 + v17;
  void *v18 = *(void *)((char *)a2 + v17);
  v18[1] = *(void *)((char *)a2 + v17 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18[2] = *((void *)v19 + 2);
  v18[3] = *((void *)v19 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  v21 = *(void **)((char *)a2 + v20);
  id v22 = *(void **)((char *)a1 + v20);
  *(void *)((char *)a1 + v20) = v21;
  id v23 = v21;

  return a1;
}

uint64_t sub_100007580(uint64_t a1, uint64_t a2)
{
  sub_10001C28C(&qword_1000C81C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  swift_bridgeObjectRelease();

  return swift_release();
}

void sub_100007700()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  if (v2)
  {
    id v0 = v2;
    id v1 = v2;
    static Published.subscript.setter();
    sub_10003C580();
  }
  else
  {
    id v1 = 0;
    static Published.subscript.setter();
    sub_10003C580();
  }
}

uint64_t sub_100007874(void *a1)
{
  uint64_t v3 = sub_10001C28C(&qword_1000C81C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (void *)((char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for SearchResultsView();
  uint64_t v7 = (int *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = qword_1000C80C8;
  id v11 = objc_allocWithZone((Class)type metadata accessor for SearchResultsViewModel());
  uint64_t v12 = v1;
  id v13 = [v11 init];
  *(void *)&v1[v10] = a1;
  id v14 = a1;

  *uint64_t v5 = swift_getKeyPath();
  sub_10001C28C(&qword_1000C81C8);
  swift_storeEnumTagMultiPayload();
  *(void *)&v9[v7[7]] = swift_getKeyPath();
  sub_10001C28C(&qword_1000C81D0);
  swift_storeEnumTagMultiPayload();
  sub_10001D3EC((uint64_t)v5, (uint64_t)v9);
  objc_super v15 = (uint64_t *)&v9[v7[8]];
  sub_10001D9B0();
  id v16 = v14;
  uint64_t *v15 = ObservedObject.init(wrappedValue:)();
  v15[1] = v17;
  char v18 = &v9[v7[9]];
  v21[0] = 0;
  v21[1] = 0;
  sub_10001C28C(&qword_1000C81A8);
  State.init(wrappedValue:)();
  uint64_t v19 = v23;
  *(_OWORD *)char v18 = v22;
  *((void *)v18 + 2) = v19;
  return UIHostingController.init(rootView:)();
}

void *sub_100007A6C(void *a1, void *a2, int *a3)
{
  sub_10001C28C(&qword_1000C92C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  id v9 = (void *)((char *)a2 + v7);
  sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  id v13 = (void *)((char *)a1 + v11);
  id v14 = (void *)((char *)a2 + v11);
  uint64_t v16 = *v14;
  objc_super v15 = (void *)v14[1];
  *id v13 = v16;
  v13[1] = v15;
  uint64_t v17 = *(void **)((char *)a2 + v12);
  *(void *)((char *)a1 + v12) = v17;
  id v18 = v15;
  id v19 = v17;
  return a1;
}

void *sub_100007E10(void *a1, void *a2, int *a3)
{
  sub_10001C28C(&qword_1000C81C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = sub_10001C28C(&qword_1000C81D8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    *uint64_t v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  objc_super v15 = (void *)((char *)a1 + v13);
  uint64_t v16 = (void *)((char *)a2 + v13);
  uint64_t v18 = *v16;
  uint64_t v17 = (void *)v16[1];
  void *v15 = v18;
  v15[1] = v17;
  id v19 = (void *)((char *)a1 + v14);
  uint64_t v20 = (void *)((char *)a2 + v14);
  uint64_t v21 = v20[1];
  *id v19 = *v20;
  v19[1] = v21;
  v19[2] = v20[2];
  id v22 = v17;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_100008054(void *a1, uint64_t a2, void *a3)
{
  sub_10001C28C(&qword_1000C8540);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10008F1C0;
  *(void *)(v6 + 32) = a1;
  specialized Array._endMutation()();
  swift_getKeyPath();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  id v8 = a1;
  id v9 = a3;
  sub_10001C28C(&qword_1000C8B10);
  sub_10001C28C(&qword_1000C9E88);
  sub_100009170(&qword_1000C9EE8, &qword_1000C8B10);
  sub_1000081A4();
  sub_10000820C();
  return ForEach<>.init(_:id:content:)();
}

unint64_t sub_1000081A4()
{
  unint64_t result = qword_1000C9EF0;
  if (!qword_1000C9EF0)
  {
    sub_1000067A4(255, (unint64_t *)&qword_1000CA260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9EF0);
  }
  return result;
}

unint64_t sub_10000820C()
{
  unint64_t result = qword_1000C9E80;
  if (!qword_1000C9E80)
  {
    sub_10001AD28(&qword_1000C9E88);
    sub_10000B870();
    sub_1000171A4(&qword_1000C9EA8, (void (*)(uint64_t))type metadata accessor for CollectionListItemView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9E80);
  }
  return result;
}

uint64_t sub_100008368@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FeaturedCollectionView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = sub_10001C28C(&qword_1000C87E0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100014474(a1, (uint64_t)&v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))type metadata accessor for FeaturedCollectionView);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  sub_100014410((uint64_t)&v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v12 + v11);
  uint64_t v17 = a1;
  sub_10001C28C(&qword_1000C87E8);
  sub_1000085D4();
  Button.init(action:label:)();
  GeometryProxy.size.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v8 + 16))(a2, v10, v7);
  uint64_t v13 = (_OWORD *)(a2 + *(int *)(sub_10001C28C(&qword_1000C8810) + 36));
  long long v14 = v19;
  *uint64_t v13 = v18;
  v13[1] = v14;
  v13[2] = v20;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_1000085D4()
{
  unint64_t result = qword_1000C87F0;
  if (!qword_1000C87F0)
  {
    sub_10001AD28(&qword_1000C87E8);
    type metadata accessor for RemoteVideoView();
    sub_100017114(&qword_1000C87F8, (void (*)(uint64_t))&type metadata accessor for RemoteVideoView);
    swift_getOpaqueTypeConformance2();
    sub_100009170(&qword_1000C8800, &qword_1000C8808);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C87F0);
  }
  return result;
}

uint64_t sub_1000086D8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1000CA258 + dword_1000CA258);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1000086D4;
  return v4();
}

uint64_t sub_100008780(uint64_t a1, void *a2)
{
  uint64_t v21 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v23 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  objc_super v15 = (char *)&v21 - v14;
  sub_1000067A4(0, (unint64_t *)&qword_1000C84E0);
  uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  id v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v13, v9);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v21;
  *(void *)(v17 + 24) = a2;
  aBlock[4] = sub_10001DCFC;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000374C;
  aBlock[3] = &unk_1000B8EE8;
  long long v18 = _Block_copy(aBlock);
  id v19 = a2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000171A4((unint64_t *)&qword_1000C84E8, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10001C28C(&qword_1000C84F0);
  sub_100009170((unint64_t *)&qword_1000C84F8, &qword_1000C84F0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v25);
  return ((uint64_t (*)(char *, uint64_t))v22)(v15, v23);
}

uint64_t sub_100008B54(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = a2;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  swift_getKeyPath();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = v4;
  id v6 = v4;
  sub_10001C28C(&qword_1000C8B30);
  type metadata accessor for UserGuideListItemView();
  sub_100009170(&qword_1000C9F20, &qword_1000C8B30);
  sub_1000171A4(&qword_1000C9F18, (void (*)(uint64_t))type metadata accessor for UserGuideListItemView);
  return ForEach<>.init(_:id:content:)();
}

uint64_t type metadata accessor for UserGuideListItemView()
{
  uint64_t result = qword_1000CA8E8;
  if (!qword_1000CA8E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100008D20()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10001C28C(&qword_1000C8500);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10001C28C(&qword_1000C8508);
  uint64_t v6 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001C28C(&qword_1000C8510);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (objc_class *)type metadata accessor for CollectionListViewController();
  v23.receiver = v0;
  v23.super_class = v12;
  [super viewDidLoad];
  id v13 = [v0 navigationController];
  if (v13)
  {
    uint64_t v14 = v13;
    id v15 = [v13 navigationBar];

    [v15 setPrefersLargeTitles:1];
  }
  uint64_t v16 = *(void **)&v1[OBJC_IVAR___CollectionListViewController_viewModel];
  swift_beginAccess();
  id v17 = v16;
  sub_10001C28C(&qword_1000C8518);
  Published.projectedValue.getter();
  swift_endAccess();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100009170(&qword_1000C8520, &qword_1000C8500);
  Publisher.filter(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_100009170(&qword_1000C8528, &qword_1000C8508);
  uint64_t v18 = v20;
  Publisher<>.removeDuplicates()();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v18);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100009170(&qword_1000C8530, &qword_1000C8510);
  uint64_t v19 = v22;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v19);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  sub_100003384();
}

uint64_t sub_100009170(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001AD28(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100009610()
{
  uint64_t v1 = type metadata accessor for FeaturedCollectionView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100009768(uint64_t a1)
{
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_1000097B4()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1000097FC()
{
  uint64_t v1 = type metadata accessor for ChecklistView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + *(int *)(v1 + 20);
  sub_10001C28C(&qword_1000C9070);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100009994()
{
  uint64_t v1 = type metadata accessor for ChecklistItemView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  sub_10001C28C(&qword_1000C92C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }

  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100009AD4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100009B1C()
{
  uint64_t v1 = type metadata accessor for SearchResultsView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  sub_10001C28C(&qword_1000C81C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v5 + *(int *)(v1 + 20);
  sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }

  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100009D1C()
{
  uint64_t v1 = (int *)type metadata accessor for UserGuideSearchResultItemView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  sub_10001C28C(&qword_1000CA3D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ScenePhase();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v3 + v4;

  uint64_t v8 = v5 + v1[7];
  uint64_t v9 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  sub_100016FDC(*(void *)(v5 + v1[8]), *(void *)(v5 + v1[8] + 8), *(unsigned char *)(v5 + v1[8] + 16));
  swift_bridgeObjectRelease();
  sub_100016FDC(*(void *)(v5 + v1[9]), *(void *)(v5 + v1[9] + 8), *(unsigned char *)(v5 + v1[9] + 16));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v7, v2 | 7);
}

uint64_t sub_100009EF4()
{
  uint64_t v1 = (int *)type metadata accessor for TipListItemTipBodyView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  sub_10001C28C(&qword_1000C99B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for BackgroundProminence();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + v1[5];
  sub_10001C28C(&qword_1000CA3D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ScenePhase();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v2 | 7;
  uint64_t v10 = v3 + v4;
  sub_10006FAC4(*(void *)(v5 + v1[6]), *(unsigned char *)(v5 + v1[6] + 8));

  uint64_t v11 = v5 + v1[9];
  uint64_t v12 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  sub_100016FDC(*(void *)(v5 + v1[10]), *(void *)(v5 + v1[10] + 8), *(unsigned char *)(v5 + v1[10] + 16));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v10, v9);
}

uint64_t sub_10000A138()
{
  uint64_t v1 = *(void *)(type metadata accessor for ScrollVerticallyTestSupport() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for ScrollViewProxy();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_10000A210(void *a1, uint64_t a2)
{
  sub_10001C28C(&qword_1000C8710);
  uint64_t v4 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v37 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v36 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v36 - v10;
  __chkstk_darwin(v9);
  id v13 = (char *)&v36 - v12;
  id v14 = [a1 featuredAssets];
  id v15 = [a1 language];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v16 = [a1 assetFileInfoManager];
  id v17 = objc_allocWithZone((Class)TPSAssetsConfiguration);
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v19 = [v17 initWithAssets:v14 language:v18 userInterfaceStyle:a2 assetFileInfoManager:v16];

  uint64_t v20 = self;
  id v21 = v19;
  id v22 = [v20 assetPathFromAssetConfiguration:v21 type:0];
  if (v22)
  {
    objc_super v23 = v22;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    URL.init(string:)();
    swift_bridgeObjectRelease();
  }
  else
  {

    uint64_t v24 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v13, 1, 1, v24);
  }
  id v25 = [v21 cacheIdentifierForType:0];
  if (v25)
  {
    uint64_t v26 = v25;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  id v27 = v21;
  id v28 = [v20 assetPathFromAssetConfiguration:v27 type:1];
  if (v28)
  {
    v29 = v28;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    URL.init(string:)();
    swift_bridgeObjectRelease();
  }
  else
  {

    uint64_t v30 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 1, 1, v30);
  }
  id v31 = [v27 cacheIdentifierForType:1];
  if (v31)
  {
    v32 = v31;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  sub_10000A674((uint64_t)v11, (uint64_t)v8);
  sub_10000A674((uint64_t)v13, v37);
  id v33 = objc_allocWithZone((Class)type metadata accessor for TPSAssetsInfo());
  uint64_t v34 = TPSAssetsInfo.init(videoIdentifier:videoURL:imageIdentifier:imageURL:)();

  sub_10000A614((uint64_t)v11);
  sub_10000A614((uint64_t)v13);
  return v34;
}

uint64_t sub_10000A614(uint64_t a1)
{
  uint64_t v2 = sub_10001C28C(&qword_1000C8710);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10000A674(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001C28C(&qword_1000C8710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10000A81C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000A840(char a1)
{
  uint64_t v2 = v1;
  id v4 = [objc_allocWithZone((Class)UINavigationBarAppearance) init];
  uint64_t v5 = self;
  id v6 = [v5 tintColor];
  if ((a1 & 1) != 0 || *(unsigned char *)(*(void *)&v2[OBJC_IVAR___TipListViewController_viewModel] + qword_1000CD1A8) == 1)
  {
    [v4 configureWithDefaultBackground];
LABEL_4:
    id v7 = 0;
    goto LABEL_5;
  }
  [v4 configureWithTransparentBackground];
  id v18 = [v5 whiteColor];

  sub_1000067A4(0, &qword_1000C9880);
  id v6 = v18;
  v19._object = (void *)0x80000001000A0E30;
  v19._countAndFlagsBits = 0xD000000000000010;
  uint64_t v20 = (void *)UIImage.init(systemImageName:)(v19);
  if (!v20)
  {

    goto LABEL_4;
  }
  id v21 = v20;
  id v7 = [v20 imageWithTintColor:v6 renderingMode:1];

LABEL_5:
  id v8 = [v4 backButtonAppearance];
  id v9 = [v8 normal];
  sub_10001C28C(&qword_1000C89C8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10008CF30;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  *(void *)(inited + 64) = sub_1000067A4(0, &qword_1000C8538);
  *(void *)(inited + 40) = v6;
  uint64_t v11 = NSForegroundColorAttributeName;
  id v12 = v6;
  sub_100004390(inited);
  type metadata accessor for Key(0);
  sub_100003C0C(&qword_1000C80A8, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v9 setTitleTextAttributes:isa];

  [v4 setBackIndicatorImage:v7 transitionMaskImage:v7];
  id v14 = [v2 navigationItem];
  [v14 setStandardAppearance:v4];

  id v15 = [v2 navigationController];
  if (v15)
  {
    id v16 = v15;
    id v17 = [v15 navigationBar];

    [v17 setTintColor:v12];
  }
  if ([self isPhoneUI]) {
    [v2 setNeedsStatusBarAppearanceUpdate];
  }
}

void sub_10000ABB0()
{
  uint64_t v1 = v0;
  v32.receiver = v0;
  v32.super_class = (Class)type metadata accessor for TipListViewController();
  [super loadView];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR___TipListViewController_hostingController];
  id v3 = [v2 view];
  if (v3)
  {
    id v4 = v3;
    [v0 addChildViewController:v2];
    id v5 = [v0 view];
    if (v5)
    {
      id v6 = v5;
      [v5 addSubview:v4];

      id v7 = [self systemBackgroundColor];
      [v4 setBackgroundColor:v7];

      [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v8 = [v1 view];
      if (v8)
      {
        id v9 = v8;
        sub_10001C28C(&qword_1000C8540);
        uint64_t v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = xmmword_10008CC00;
        id v11 = [v4 leadingAnchor];
        id v12 = [v1 view];
        if (v12)
        {
          id v13 = v12;
          id v14 = [v12 leadingAnchor];

          id v15 = [v11 constraintEqualToAnchor:v14];
          *(void *)(v10 + 32) = v15;
          id v16 = [v4 topAnchor];
          id v17 = [v1 view];
          if (v17)
          {
            id v18 = v17;
            id v19 = [v17 topAnchor];

            id v20 = [v16 constraintEqualToAnchor:v19];
            *(void *)(v10 + 40) = v20;
            id v21 = [v4 trailingAnchor];
            id v22 = [v1 view];
            if (v22)
            {
              objc_super v23 = v22;
              id v24 = [v22 trailingAnchor];

              id v25 = [v21 constraintEqualToAnchor:v24];
              *(void *)(v10 + 48) = v25;
              id v26 = [v4 bottomAnchor];
              id v27 = [v1 view];
              if (v27)
              {
                id v28 = v27;
                id v29 = [v27 bottomAnchor];

                id v30 = [v26 constraintEqualToAnchor:v29];
                *(void *)(v10 + 56) = v30;
                specialized Array._endMutation()();
                sub_1000067A4(0, (unint64_t *)&qword_1000C8548);
                Class isa = Array._bridgeToObjectiveC()().super.isa;
                swift_bridgeObjectRelease();
                [v9 addConstraints:isa];

                [v2 didMoveToParentViewController:v1];
                return;
              }
LABEL_15:
              __break(1u);
              return;
            }
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
LABEL_13:
          __break(1u);
          goto LABEL_14;
        }
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
}

void sub_10000AF84()
{
  uint64_t v1 = v0;
  v32.receiver = v0;
  v32.super_class = (Class)type metadata accessor for CollectionListViewController();
  [super loadView];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR___CollectionListViewController_hostingController];
  id v3 = [v2 view];
  if (v3)
  {
    id v4 = v3;
    [v0 addChildViewController:v2];
    id v5 = [v0 view];
    if (v5)
    {
      id v6 = v5;
      [v5 addSubview:v4];

      id v7 = [self systemBackgroundColor];
      [v4 setBackgroundColor:v7];

      [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v8 = [v1 view];
      if (v8)
      {
        id v9 = v8;
        sub_10001C28C(&qword_1000C8540);
        uint64_t v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = xmmword_10008CC00;
        id v11 = [v4 leadingAnchor];
        id v12 = [v1 view];
        if (v12)
        {
          id v13 = v12;
          id v14 = [v12 leadingAnchor];

          id v15 = [v11 constraintEqualToAnchor:v14];
          *(void *)(v10 + 32) = v15;
          id v16 = [v4 topAnchor];
          id v17 = [v1 view];
          if (v17)
          {
            id v18 = v17;
            id v19 = [v17 topAnchor];

            id v20 = [v16 constraintEqualToAnchor:v19];
            *(void *)(v10 + 40) = v20;
            id v21 = [v4 trailingAnchor];
            id v22 = [v1 view];
            if (v22)
            {
              objc_super v23 = v22;
              id v24 = [v22 trailingAnchor];

              id v25 = [v21 constraintEqualToAnchor:v24];
              *(void *)(v10 + 48) = v25;
              id v26 = [v4 bottomAnchor];
              id v27 = [v1 view];
              if (v27)
              {
                id v28 = v27;
                id v29 = [v27 bottomAnchor];

                id v30 = [v26 constraintEqualToAnchor:v29];
                *(void *)(v10 + 56) = v30;
                specialized Array._endMutation()();
                sub_1000067A4(0, (unint64_t *)&qword_1000C8548);
                Class isa = Array._bridgeToObjectiveC()().super.isa;
                swift_bridgeObjectRelease();
                [v9 addConstraints:isa];

                [v2 didMoveToParentViewController:v1];
                return;
              }
LABEL_15:
              __break(1u);
              return;
            }
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
LABEL_13:
          __break(1u);
          goto LABEL_14;
        }
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
}

uint64_t sub_10000B358@<X0>(id *a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v47 = a3;
  uint64_t v46 = type metadata accessor for CollectionListItemView();
  __chkstk_darwin(v46);
  id v6 = (void *)((char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10001C28C(&qword_1000C9EF8);
  __chkstk_darwin(v7);
  id v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FeaturedCollectionView();
  __chkstk_darwin(v10 - 8);
  id v12 = (void *)((char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_10001C28C(&qword_1000C9E98);
  uint64_t v14 = __chkstk_darwin(v13);
  id v16 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v18 = (char *)v42 - v17;
  id v45 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v19 = a2;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v48 == 1)
  {
    id v20 = v19;
    sub_10003AB68(v20, v45, v12);
    sub_10000B9A0((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FeaturedCollectionView);
    id v21 = &v16[*(int *)(v13 + 36)];
    v21[32] = 0;
    *(_OWORD *)id v21 = 0u;
    *((_OWORD *)v21 + 1) = 0u;
    sub_10000B940((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeaturedCollectionView);
    sub_100017278((uint64_t)v16, (uint64_t)v18, &qword_1000C9E98);
    sub_100016FEC((uint64_t)v18, (uint64_t)v9, &qword_1000C9E98);
    swift_storeEnumTagMultiPayload();
    sub_10000B870();
    sub_1000171A4(&qword_1000C9EA8, (void (*)(uint64_t))type metadata accessor for CollectionListItemView);
    _ConditionalContent<>.init(storage:)();
    return sub_1000143B4((uint64_t)v18, &qword_1000C9E98);
  }
  else
  {
    v42[1] = v7;
    v43 = v9;
    uint64_t v44 = v13;
    *id v6 = swift_getKeyPath();
    sub_10001C28C(&qword_1000C92C8);
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = v46;
    id v24 = (uint64_t *)((char *)v6 + *(int *)(v46 + 20));
    uint64_t *v24 = swift_getKeyPath();
    sub_10001C28C(&qword_1000C81D0);
    swift_storeEnumTagMultiPayload();
    id v25 = (uint64_t *)((char *)v6 + *(int *)(v23 + 24));
    type metadata accessor for CollectionListViewModel();
    sub_1000171A4(&qword_1000C8550, (void (*)(uint64_t))type metadata accessor for CollectionListViewModel);
    id v26 = v19;
    id v27 = v45;
    uint64_t *v25 = ObservedObject.init(wrappedValue:)();
    v25[1] = v28;
    uint64_t v29 = v23;
    *(uint64_t *)((char *)v6 + *(int *)(v23 + 32)) = (uint64_t)v27;
    id v30 = v27;
    id v31 = [v30 identifier];
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v34 = v33;

    id v35 = [v30 title];
    if (v35)
    {
      uint64_t v36 = v35;
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v39 = v38;
    }
    else
    {

      uint64_t v37 = 0;
      unint64_t v39 = 0xE000000000000000;
    }
    uint64_t v40 = (uint64_t)v43;
    v41 = (uint64_t *)((char *)v6 + *(int *)(v29 + 28));
    uint64_t *v41 = v32;
    v41[1] = v34;
    v41[2] = v37;
    v41[3] = v39;
    sub_10000B9A0((uint64_t)v6, v40, (uint64_t (*)(void))type metadata accessor for CollectionListItemView);
    swift_storeEnumTagMultiPayload();
    sub_10000B870();
    sub_1000171A4(&qword_1000C9EA8, (void (*)(uint64_t))type metadata accessor for CollectionListItemView);
    _ConditionalContent<>.init(storage:)();
    return sub_10000B940((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CollectionListItemView);
  }
}

unint64_t sub_10000B870()
{
  unint64_t result = qword_1000C9E90;
  if (!qword_1000C9E90)
  {
    sub_10001AD28(&qword_1000C9E98);
    sub_1000171A4(&qword_1000C9EA0, (void (*)(uint64_t))type metadata accessor for FeaturedCollectionView);
    sub_100009170(&qword_1000C8F60, &qword_1000C8F68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9E90);
  }
  return result;
}

uint64_t sub_10000B940(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000B9A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

double sub_10000BA08@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v5 = a2;
  char v6 = sub_10000BC84();

  if (v6)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    *(void *)(v7 + 24) = v5;
    id v8 = v5;
  }
  sub_10001C28C(&qword_1000C9D90);
  sub_100009170(&qword_1000C9D98, &qword_1000C9D90);
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v10;
  *(_OWORD *)a3 = v10;
  *(unsigned char *)(a3 + 16) = v11;
  return result;
}

void sub_10000BB6C()
{
  if (v0[OBJC_IVAR___CollectionListViewController_canIncreaseViewCount] == 1)
  {
    uint64_t v1 = v0;
    id v2 = *(id *)&v0[OBJC_IVAR___CollectionListViewController_viewModel];
    char v3 = sub_10000BC84();

    if (v3)
    {
      [v1 cancelAnalyticsIncreaseCountViewForCollectionsViewDelay];
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v4 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v5 = [self proxyWithViewMethod:v4];

      [v1 performSelector:"analyticsIncreaseCountViewForCollectionsView:" withObject:v5 afterDelay:kTipsAnalyticsDelayedEventInterval];
    }
  }
}

uint64_t sub_10000BC84()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v0 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v0 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v0) {
    return 1;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v1 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v1) {
    return 1;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();

  if (v3) {
    return 1;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return 0;
}

uint64_t sub_10000BE7C(uint64_t a1)
{
  uint64_t v2 = a1 + qword_1000C9608;
  uint64_t v3 = sub_10001C28C(&qword_1000C8518);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = a1 + qword_1000C9610;
  uint64_t v5 = sub_10001C28C(&qword_1000C9698);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + qword_1000C9618;
  uint64_t v7 = sub_10001C28C(&qword_1000C9690);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_bridgeObjectRelease();
}

void sub_10000BF90(char a1)
{
  uint64_t v2 = v1;
  if (a1)
  {
    uint64_t v3 = OBJC_IVAR___CollectionListViewController_searchResultsViewModel;
    uint64_t v4 = *(void **)&v1[OBJC_IVAR___CollectionListViewController_searchResultsViewModel];
    swift_getKeyPath();
    swift_getKeyPath();
    id v5 = v4;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of SearchResultsModel.searchResultEligibilityFilter.setter();

    swift_release();
    uint64_t v6 = *(void **)&v1[v3];
    swift_getKeyPath();
    swift_getKeyPath();
    id v7 = v6;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of SearchResultsModel.searchResultCollectionResolver.setter();

    swift_release();
    id v8 = *(void **)&v1[v3];
    swift_getKeyPath();
    swift_getKeyPath();
    id v9 = v8;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of SearchResultsModel.searchResultUserGuideResolver.setter();

    swift_release();
    long long v10 = *(void **)&v1[v3];
    uint64_t v11 = *(void *)&v1[OBJC_IVAR___CollectionListViewController_searchResultSelectedHandler];
    swift_getKeyPath();
    swift_getKeyPath();
    id v12 = v10;
    sub_1000397EC(v11);
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of SearchResultsModel.searchResultSelected.setter();

    swift_release();
    uint64_t v13 = *(void **)&v2[v3];
    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_getKeyPath();
    swift_getKeyPath();
    id v14 = v13;
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of SearchResultsModel.searchResultsSeeAllHandler.setter();

    swift_release();
    swift_release();
    uint64_t v15 = *(void **)&v2[v3];
    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_getKeyPath();
    swift_getKeyPath();
    id v16 = v15;
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of SearchResultsModel.searchResultScrollHandler.setter();

    swift_release();
    swift_release();
    uint64_t v17 = *(void **)&v2[v3];
    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_getKeyPath();
    swift_getKeyPath();
    id v18 = v17;
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of SearchResultsModel.searchResultsUpdated.setter();

    swift_release();
    swift_release();
    id v19 = *(void **)&v2[v3];
    id v20 = objc_allocWithZone((Class)type metadata accessor for SearchResultsViewController());
    id v21 = v19;
    uint64_t v22 = sub_100007874(v21);

    uint64_t v23 = OBJC_IVAR___CollectionListViewController_searchResultsViewController;
    id v24 = *(void **)&v2[OBJC_IVAR___CollectionListViewController_searchResultsViewController];
    *(void *)&v2[OBJC_IVAR___CollectionListViewController_searchResultsViewController] = v22;

    id v25 = [objc_allocWithZone((Class)UISearchController) initWithSearchResultsController:*(void *)&v2[v23]];
    uint64_t v26 = OBJC_IVAR___CollectionListViewController_searchController;
    id v27 = *(void **)&v2[OBJC_IVAR___CollectionListViewController_searchController];
    *(void *)&v2[OBJC_IVAR___CollectionListViewController_searchController] = v25;

    uint64_t v28 = *(void **)&v2[v26];
    if (v28)
    {
      [v28 setSearchResultsUpdater:v2];
      uint64_t v29 = *(void **)&v2[v26];
      if (v29)
      {
        [v29 setDelegate:v2];
        id v30 = *(void **)&v2[v26];
        if (v30)
        {
          [v30 setHidesNavigationBarDuringPresentation:1];
          id v31 = *(void **)&v2[v26];
          if (v31)
          {
            [v31 setObscuresBackgroundDuringPresentation:0];
            uint64_t v32 = *(void **)&v2[v26];
            if (v32)
            {
              id v33 = [v32 searchBar];
              [v33 setDelegate:v2];

              uint64_t v34 = *(void **)&v2[v26];
              if (v34)
              {
                id v35 = [v34 searchBar];
                [v35 setAutocorrectionType:1];

                uint64_t v36 = *(void **)&v2[v26];
                if (v36)
                {
                  id v37 = [v36 searchBar];
                  [v37 setAutocapitalizationType:0];
                }
              }
            }
          }
        }
      }
    }
    id v38 = [v2 navigationItem];
    id v39 = *(id *)&v2[v26];
    [v38 setSearchController:v39];

    id v40 = [v2 navigationItem];
    [v40 setHidesSearchBarWhenScrolling:0];

    [v2 setDefinesPresentationContext:1];
  }
  else
  {
    id v41 = [v1 navigationController];
    if (v41)
    {
      v42 = v41;
    }
    id v43 = [v2 navigationItem];
    [v43 setSearchController:0];

    uint64_t v44 = *(void **)&v2[OBJC_IVAR___CollectionListViewController_searchController];
    *(void *)&v2[OBJC_IVAR___CollectionListViewController_searchController] = 0;

    v2[OBJC_IVAR___CollectionListViewController_searchActive] = 0;
    id v45 = *(void **)&v2[OBJC_IVAR___CollectionListViewController_searchResultsViewModel];
    swift_getKeyPath();
    swift_getKeyPath();
    id v46 = v45;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of SearchResultsModel.reset()();

    swift_release();
    sub_100003384();
  }
}

void sub_10000C6A4()
{
}

void sub_10000C6AC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR___CollectionListViewController_searchResultsViewController);
    if (!v2)
    {
LABEL_12:

      return;
    }
    uint64_t v3 = *(void **)(Strong + OBJC_IVAR___CollectionListViewController_searchResultsViewModel);
    swift_getKeyPath();
    swift_getKeyPath();
    id v4 = v2;
    id v5 = v3;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    char v6 = dispatch thunk of SearchResultsModel.hasStartedSearch.getter();

    swift_release();
    id v7 = self;
    id v8 = &selRef_systemBackgroundColor;
    if ((v6 & 1) == 0) {
      id v8 = &selRef_clearColor;
    }
    id v9 = [v7 *v8];
    id v10 = [v4 view];
    if (v10)
    {
      uint64_t v11 = v10;
      id v12 = [v10 backgroundColor];

      if (v12)
      {
        sub_1000067A4(0, &qword_1000C8538);
        id v13 = v9;
        id v14 = v12;
        char v15 = static NSObject.== infix(_:_:)();

        if (v15)
        {
          id v9 = v1;
          uint64_t v1 = v4;
          id v4 = v13;
LABEL_11:

          uint64_t v1 = v4;
          goto LABEL_12;
        }
      }
      id v16 = [v4 view];
      if (v16)
      {
        uint64_t v17 = v16;
        [v16 setBackgroundColor:v9];

        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_10000C8F4()
{
  if (![self isPhoneUI]) {
    return;
  }
  id v1 = [v0 viewControllers];
  sub_10000CAE4();
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v2 >> 62))
  {
    if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_19;
  }
LABEL_4:
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v3 = *(id *)(v2 + 32);
  }
  id v4 = v3;
  swift_bridgeObjectRelease();
  self;
  id v5 = (void *)swift_dynamicCastObjCClass();
  if (!v5 || (id v6 = [v5 topViewController]) == 0)
  {
LABEL_15:

    return;
  }
  id v7 = v6;
  self;
  id v8 = (void *)swift_dynamicCastObjCClass();
  if (!v8)
  {

    goto LABEL_15;
  }
  id v9 = [v8 topViewController];
  if (v9)
  {
    id v10 = v9;
    type metadata accessor for TipListViewController();
    if ([v10 isKindOfClass:swift_getObjCClassFromMetadata()]) {
      [v0 viewControllerForColumn:1];
    }
  }
  else
  {
  }
}

unint64_t sub_10000CAE4()
{
  unint64_t result = qword_1000C8878;
  if (!qword_1000C8878)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000C8878);
  }
  return result;
}

uint64_t sub_10000CB24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_10000CB74()
{
  uint64_t v1 = sub_10001C28C(&qword_1000C8B38);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v79 = v1;
  uint64_t v80 = v2;
  __chkstk_darwin(v1);
  v76 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001C28C(&qword_1000C8B40);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v81 = v4;
  uint64_t v82 = v5;
  __chkstk_darwin(v4);
  v77 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001C28C(&qword_1000C8B48);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v83 = v7;
  uint64_t v84 = v8;
  __chkstk_darwin(v7);
  v78 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10001C28C(&qword_1000C8B50);
  uint64_t v74 = *(void *)(v10 - 8);
  uint64_t v75 = v10;
  __chkstk_darwin(v10);
  v73 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001C28C(&qword_1000C8B58);
  uint64_t v71 = *(void *)(v12 - 8);
  uint64_t v72 = v12;
  __chkstk_darwin(v12);
  v70 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_10001C28C(&qword_1000C8B60);
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  v67 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_10001C28C(&qword_1000C89B0);
  uint64_t v65 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  id v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_10001C28C(&qword_1000C89A8);
  uint64_t v17 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  id v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10001C28C(&qword_1000C8518);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v24 = &v0[OBJC_IVAR___CollectionListViewModel__appInBackground];
  LOBYTE(v87) = 0;
  id v25 = v0;
  Published.init(initialValue:)();
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v26(v24, v23, v20);
  id v27 = &v25[OBJC_IVAR___CollectionListViewModel__viewCollapsed];
  LOBYTE(v87) = 0;
  Published.init(initialValue:)();
  v26(v27, v23, v20);
  uint64_t v28 = &v25[OBJC_IVAR___CollectionListViewModel__currentCollectionID];
  v87 = 0;
  uint64_t v88 = 0;
  sub_10001C28C(&qword_1000C81A8);
  Published.init(initialValue:)();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  uint64_t v30 = v64;
  v29(v28, v19, v64);
  id v31 = &v25[OBJC_IVAR___CollectionListViewModel__selectedCollectionID];
  v87 = 0;
  uint64_t v88 = 0;
  Published.init(initialValue:)();
  v29(v31, v19, v30);
  uint64_t v32 = &v25[OBJC_IVAR___CollectionListViewModel__featuredCollection];
  v87 = 0;
  sub_10001C28C(&qword_1000C8918);
  Published.init(initialValue:)();
  id v33 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
  uint64_t v34 = v66;
  v33(v32, v16, v66);
  id v35 = &v25[OBJC_IVAR___CollectionListViewModel__checklistCollection];
  v87 = 0;
  Published.init(initialValue:)();
  v33(v35, v16, v34);
  uint64_t v36 = &v25[OBJC_IVAR___CollectionListViewModel__savedTipsCollection];
  v87 = 0;
  Published.init(initialValue:)();
  v33(v36, v16, v34);
  id v37 = &v25[OBJC_IVAR___CollectionListViewModel__collections];
  v87 = (char *)_swiftEmptyArrayStorage;
  sub_10001C28C(&qword_1000C8B10);
  id v38 = v67;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v37, v38, v69);
  id v39 = &v25[OBJC_IVAR___CollectionListViewModel__collectionSections];
  v87 = (char *)_swiftEmptyArrayStorage;
  sub_10001C28C(&qword_1000C8B20);
  id v40 = v70;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v39, v40, v72);
  id v41 = &v25[OBJC_IVAR___CollectionListViewModel__userGuides];
  v87 = (char *)_swiftEmptyArrayStorage;
  sub_10001C28C(&qword_1000C8B30);
  v42 = v73;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v41, v42, v75);
  *(void *)&v25[OBJC_IVAR___CollectionListViewModel_featuredAssetViewModel] = 0;
  id v43 = &v25[OBJC_IVAR___CollectionListViewModel_actionHandler];
  *(void *)id v43 = 0;
  *((void *)v43 + 1) = 0;
  uint64_t v44 = &v25[OBJC_IVAR___CollectionListViewModel_checklistHandler];
  *(void *)uint64_t v44 = 0;
  *((void *)v44 + 1) = 0;
  id v45 = &v25[OBJC_IVAR___CollectionListViewModel_userGuideHandler];
  *(void *)id v45 = 0;
  *((void *)v45 + 1) = 0;
  id v46 = &v25[OBJC_IVAR___CollectionListViewModel_colorScheme];
  uint64_t v47 = enum case for ColorScheme.light(_:);
  uint64_t v48 = type metadata accessor for ColorScheme();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 104))(v46, v47, v48);
  *(void *)&v25[OBJC_IVAR___CollectionListViewModel_cancellables] = &_swiftEmptySetSingleton;
  id v49 = [objc_allocWithZone((Class)type metadata accessor for ChecklistViewModel()) init];
  swift_beginAccess();
  id v86 = v49;
  Published.init(initialValue:)();
  swift_endAccess();

  v50 = (objc_class *)type metadata accessor for CollectionListViewModel();
  v85.receiver = v25;
  v85.super_class = v50;
  id v51 = [super init];
  swift_getKeyPath();
  swift_getKeyPath();
  id v52 = v51;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  v53 = v87;
  uint64_t v54 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v55 = (void (**)(uint64_t))&v53[OBJC_IVAR___TPSChecklistViewModel_actionHandler];
  uint64_t v56 = *(void *)&v53[OBJC_IVAR___TPSChecklistViewModel_actionHandler];
  *v55 = sub_1000432E8;
  v55[1] = (void (*)(uint64_t))v54;
  sub_100005470(v56);

  swift_beginAccess();
  v57 = v76;
  Published.projectedValue.getter();
  swift_endAccess();
  sub_100009170(&qword_1000C8B68, &qword_1000C8B38);
  sub_10000D750();
  v58 = v77;
  uint64_t v59 = v79;
  Publisher<>.removeDuplicates()();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v57, v59);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000067A4(0, (unint64_t *)&qword_1000CA260);
  sub_100009170(&qword_1000C8B80, &qword_1000C8B40);
  v60 = v78;
  uint64_t v61 = v81;
  Publisher.compactMap<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v58, v61);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100009170(&qword_1000C8B88, &qword_1000C8B48);
  uint64_t v62 = v83;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v60, v62);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();

  return v52;
}

uint64_t type metadata accessor for ChecklistViewModel()
{
  uint64_t result = qword_1000C88F8;
  if (!qword_1000C88F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_10000D750()
{
  unint64_t result = qword_1000C8B70;
  if (!qword_1000C8B70)
  {
    sub_10001AD28(&qword_1000C8918);
    sub_10001CBEC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8B70);
  }
  return result;
}

id sub_10000D7E8()
{
  uint64_t v1 = sub_10001C28C(&qword_1000C8990);
  uint64_t v48 = *(void *)(v1 - 8);
  uint64_t v49 = v1;
  __chkstk_darwin(v1);
  uint64_t v47 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10001C28C(&qword_1000C8998);
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  __chkstk_darwin(v3);
  uint64_t v44 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001C28C(&qword_1000C89A0);
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  __chkstk_darwin(v5);
  id v41 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001C28C(&qword_1000C89A8);
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  __chkstk_darwin(v7);
  id v38 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_10001C28C(&qword_1000C89B0);
  uint64_t v9 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001C28C(&qword_1000C8518);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = OBJC_IVAR___TPSChecklistViewModel_appController;
  type metadata accessor for TPSUIAppController();
  uint64_t v17 = v0;
  *(void *)&v0[v16] = static TPSUIAppController.shared.getter();
  uint64_t v18 = OBJC_IVAR___TPSChecklistViewModel_checkListSessionController;
  type metadata accessor for TPSAnalyticsChecklistSessionController();
  *(void *)&v17[v18] = static TPSAnalyticsChecklistSessionController.sharedInstance.getter();
  id v19 = &v17[OBJC_IVAR___TPSChecklistViewModel__appInBackground];
  LOBYTE(v51) = 0;
  Published.init(initialValue:)();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v20(v19, v15, v12);
  uint64_t v21 = &v17[OBJC_IVAR___TPSChecklistViewModel__collection];
  uint64_t v51 = 0;
  sub_10001C28C(&qword_1000C8918);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v21, v11, v37);
  uint64_t v22 = &v17[OBJC_IVAR___TPSChecklistViewModel__viewCollapsed];
  LOBYTE(v51) = 0;
  Published.init(initialValue:)();
  v20(v22, v15, v12);
  uint64_t v23 = &v17[OBJC_IVAR___TPSChecklistViewModel__selectedTipIdentifier];
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  sub_10001C28C(&qword_1000C81A8);
  id v24 = v38;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v23, v24, v40);
  id v25 = &v17[OBJC_IVAR___TPSChecklistViewModel__currentTip];
  uint64_t v51 = 0;
  sub_10001C28C(&qword_1000C8930);
  uint64_t v26 = v41;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v25, v26, v43);
  id v27 = &v17[OBJC_IVAR___TPSChecklistViewModel__suggestedTips];
  uint64_t v51 = 0;
  sub_10001C28C(&qword_1000C8940);
  uint64_t v28 = v44;
  Published.init(initialValue:)();
  uint64_t v29 = v46;
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
  v30(v27, v28, v46);
  id v31 = &v17[OBJC_IVAR___TPSChecklistViewModel__completedTips];
  uint64_t v51 = 0;
  Published.init(initialValue:)();
  v30(v31, v28, v29);
  uint64_t v32 = &v17[OBJC_IVAR___TPSChecklistViewModel__collectionEntity];
  uint64_t v51 = *(void *)aEmpty;
  uint64_t v52 = unk_1000CA118;
  uint64_t v53 = qword_1000CA120;
  uint64_t v54 = unk_1000CA128;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v33 = v47;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v32, v33, v49);
  *(void *)&v17[OBJC_IVAR___TPSChecklistViewModel_currentDisplayTips] = 0;
  uint64_t v34 = &v17[OBJC_IVAR___TPSChecklistViewModel_actionHandler];
  *(void *)uint64_t v34 = 0;
  *((void *)v34 + 1) = 0;

  id v35 = (objc_class *)type metadata accessor for ChecklistViewModel();
  v50.receiver = v17;
  v50.super_class = v35;
  return [super init];
}

void sub_10000DFD8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 88));
  _Unwind_Resume(a1);
}

uint64_t sub_10000E020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v45 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v45);
  uint64_t v40 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001C28C(&qword_1000C8710);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v39 - v8;
  uint64_t v10 = type metadata accessor for FeaturedCollectionView();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for RemoteVideoView();
  uint64_t v42 = *(void *)(v13 - 8);
  uint64_t v43 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_10001C28C(&qword_1000C8818);
  uint64_t v16 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_10001C28C(&qword_1000C87E8);
  __chkstk_darwin(v41);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(*(void *)(a1 + *(int *)(v10 + 20) + 8) + OBJC_IVAR___CollectionListViewModel_featuredAssetViewModel);
  sub_100014474(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeaturedCollectionView);
  if (!v21)
  {
    id v39 = *(id *)&v12[*(int *)(v10 + 32)];
    uint64_t v22 = type metadata accessor for URL();
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    v23(v9, 1, 1, v22);
    v23(v7, 1, 1, v22);
    id v24 = objc_allocWithZone((Class)type metadata accessor for TPSAssetsInfo());
    id v25 = v39;
    TPSAssetsInfo.init(videoIdentifier:videoURL:imageIdentifier:imageURL:)();
    type metadata accessor for TipsContentModel();
    static TipsContentModel.shared()();
    type metadata accessor for DocumentAssetViewModel();
    swift_allocObject();
    DocumentAssetViewModel.init(document:assetsInfo:contentModel:)();
  }
  swift_retain();
  sub_10000ECF0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeaturedCollectionView);
  char v47 = 0;
  static Binding.constant(_:)();
  RemoteVideoView.init(viewModel:showReplayButtonAtVideoEnd:isImageLoaded:)();
  sub_100017114(&qword_1000C87F8, (void (*)(uint64_t))&type metadata accessor for RemoteVideoView);
  uint64_t v26 = v43;
  View.assetContentMode(_:)();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v26);
  id v27 = v40;
  uint64_t v28 = &v40[*(int *)(v45 + 20)];
  uint64_t v29 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v30 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v28, v29, v30);
  __asm { FMOV            V0.2D, #10.0 }
  *id v27 = _Q0;
  uint64_t v36 = (uint64_t)&v20[*(int *)(v41 + 36)];
  sub_100014474((uint64_t)v27, v36, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v36 + *(int *)(sub_10001C28C(&qword_1000C8808) + 36)) = 256;
  uint64_t v37 = v44;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v20, v18, v44);
  sub_10000ECF0((uint64_t)v27, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v37);
  return sub_100017278((uint64_t)v20, v46, &qword_1000C87E8);
}

uint64_t sub_10000E5BC(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10001C28C(&qword_1000C8710);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v49 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v48 = (char *)&v47 - v7;
  uint64_t v8 = type metadata accessor for FeaturedCollectionView();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v47 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v47 - v19;
  uint64_t v21 = v2 + *(int *)(v18 + 24);
  uint64_t v23 = *(void *)(v21 + 8);
  char v51 = *(unsigned char *)v21;
  char v22 = v51;
  uint64_t v52 = v23;
  char v50 = a1;
  sub_10001C28C(&qword_1000C87B0);
  State.wrappedValue.setter();
  char v51 = v22;
  uint64_t v52 = v23;
  State.wrappedValue.getter();
  uint64_t v24 = v2 + *(int *)(v8 + 20);
  uint64_t v25 = *(void *)(*(void *)(v24 + 8) + OBJC_IVAR___CollectionListViewModel_featuredAssetViewModel);
  if (v50 == 1)
  {
    sub_100014474(v2, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FeaturedCollectionView);
    if (!v25)
    {
      id v47 = *(id *)&v20[*(int *)(v8 + 32)];
      uint64_t v26 = type metadata accessor for URL();
      id v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
      v27(v48, 1, 1, v26);
      v27(v49, 1, 1, v26);
      id v28 = objc_allocWithZone((Class)type metadata accessor for TPSAssetsInfo());
      id v29 = v47;
      TPSAssetsInfo.init(videoIdentifier:videoURL:imageIdentifier:imageURL:)();
      type metadata accessor for TipsContentModel();
      static TipsContentModel.shared()();
      type metadata accessor for DocumentAssetViewModel();
      swift_allocObject();
      DocumentAssetViewModel.init(document:assetsInfo:contentModel:)();
    }
    swift_retain();
    sub_10000ECF0((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FeaturedCollectionView);
    dispatch thunk of DocumentAssetViewModel.load()();
    swift_release();
    uint64_t v30 = *(void *)(*(void *)(v24 + 8) + OBJC_IVAR___CollectionListViewModel_featuredAssetViewModel);
    sub_100014474(v2, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FeaturedCollectionView);
    if (!v30)
    {
      uint64_t v36 = *(void **)&v17[*(int *)(v8 + 32)];
      uint64_t v37 = type metadata accessor for URL();
      id v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
      v38(v48, 1, 1, v37);
      v38(v49, 1, 1, v37);
      id v39 = objc_allocWithZone((Class)type metadata accessor for TPSAssetsInfo());
      id v40 = v36;
      TPSAssetsInfo.init(videoIdentifier:videoURL:imageIdentifier:imageURL:)();
      type metadata accessor for TipsContentModel();
      static TipsContentModel.shared()();
      type metadata accessor for DocumentAssetViewModel();
      swift_allocObject();
      DocumentAssetViewModel.init(document:assetsInfo:contentModel:)();
    }
    swift_retain();
    sub_10000ECF0((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FeaturedCollectionView);
    dispatch thunk of DocumentAssetViewModel.playVideo()();
  }
  else
  {
    sub_100014474(v2, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeaturedCollectionView);
    if (!v25)
    {
      id v47 = *(id *)&v14[*(int *)(v8 + 32)];
      uint64_t v31 = type metadata accessor for URL();
      uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56);
      v32(v48, 1, 1, v31);
      v32(v49, 1, 1, v31);
      id v33 = objc_allocWithZone((Class)type metadata accessor for TPSAssetsInfo());
      id v34 = v47;
      TPSAssetsInfo.init(videoIdentifier:videoURL:imageIdentifier:imageURL:)();
      type metadata accessor for TipsContentModel();
      static TipsContentModel.shared()();
      type metadata accessor for DocumentAssetViewModel();
      swift_allocObject();
      DocumentAssetViewModel.init(document:assetsInfo:contentModel:)();
    }
    swift_retain();
    sub_10000ECF0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeaturedCollectionView);
    dispatch thunk of DocumentAssetViewModel.cancel()();
    swift_release();
    uint64_t v35 = *(void *)(*(void *)(v24 + 8) + OBJC_IVAR___CollectionListViewModel_featuredAssetViewModel);
    sub_100014474(v2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeaturedCollectionView);
    if (!v35)
    {
      uint64_t v41 = *(void **)&v11[*(int *)(v8 + 32)];
      uint64_t v42 = type metadata accessor for URL();
      uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56);
      v43(v48, 1, 1, v42);
      v43(v49, 1, 1, v42);
      id v44 = objc_allocWithZone((Class)type metadata accessor for TPSAssetsInfo());
      id v45 = v41;
      TPSAssetsInfo.init(videoIdentifier:videoURL:imageIdentifier:imageURL:)();
      type metadata accessor for TipsContentModel();
      static TipsContentModel.shared()();
      type metadata accessor for DocumentAssetViewModel();
      swift_allocObject();
      DocumentAssetViewModel.init(document:assetsInfo:contentModel:)();
    }
    swift_retain();
    sub_10000ECF0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeaturedCollectionView);
    dispatch thunk of DocumentAssetViewModel.resetVideo()();
  }
  return swift_release();
}

uint64_t sub_10000ECF0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_10000ED50(uint64_t a1, uint64_t a2)
{
  sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + *(int *)(a2 + 32));
}

uint64_t sub_10000EE30()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v305 = *(void *)(v0 - 8);
  uint64_t v306 = v0;
  __chkstk_darwin(v0);
  v304 = (char *)&v265 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for Locale();
  __chkstk_darwin(v2 - 8);
  v303 = (char *)&v265 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v4 - 8);
  v301 = (char *)&v265 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v6 - 8);
  v302 = (char *)&v265 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AppShortcutPhraseToken();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v265 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001C28C(&qword_1000C96B0);
  uint64_t v13 = __chkstk_darwin(v12);
  v300 = (char *)&v265 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  v299 = (char *)&v265 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  v295 = (char *)&v265 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  v293 = (char *)&v265 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  v292 = (char *)&v265 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  v291 = (char *)&v265 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  v290 = (char *)&v265 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  v289 = (char *)&v265 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  v288 = (char *)&v265 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  v287 = (char *)&v265 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  v286 = (char *)&v265 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  v285 = (char *)&v265 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  v284 = (char *)&v265 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  v283 = (char *)&v265 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  v282 = (char *)&v265 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  v281 = (char *)&v265 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  v280 = (char *)&v265 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  v279 = (char *)&v265 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  v278 = (char *)&v265 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  v277 = (char *)&v265 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  v276 = (char *)&v265 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  v275 = (char *)&v265 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  v274 = (char *)&v265 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  v273 = (char *)&v265 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  v272 = (char *)&v265 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  v271 = (char *)&v265 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  v307 = (char *)&v265 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  v270 = (char *)&v265 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  v269 = (char *)&v265 - v70;
  uint64_t v71 = __chkstk_darwin(v69);
  v268 = (char *)&v265 - v72;
  uint64_t v73 = __chkstk_darwin(v71);
  v267 = (char *)&v265 - v74;
  uint64_t v75 = __chkstk_darwin(v73);
  v266 = (char *)&v265 - v76;
  __chkstk_darwin(v75);
  uint64_t v298 = type metadata accessor for AppShortcut();
  uint64_t v297 = *(void *)(v298 - 8);
  __chkstk_darwin(v298);
  v296 = (char *)&v265 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v320 = sub_1000067E0();
  sub_10001C28C(&qword_1000C96B8);
  uint64_t v78 = *(void *)(sub_10001C28C(&qword_1000C96C0) - 8);
  unint64_t v317 = *(void *)(v78 + 72);
  unint64_t v79 = (*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
  uint64_t v308 = 32 * v317;
  uint64_t v80 = swift_allocObject();
  uint64_t v294 = v80;
  *(_OWORD *)(v80 + 16) = xmmword_10008E920;
  unint64_t v81 = v80 + v79;
  unint64_t v82 = sub_10001C38C();
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v83._countAndFlagsBits = 0x206E65704FLL;
  v83._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v83);
  swift_getKeyPath();
  uint64_t v312 = sub_10001C28C(&qword_1000C96D0);
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v84._countAndFlagsBits = 32;
  v84._object = (void *)0xE100000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v84);
  unsigned int v313 = enum case for AppShortcutPhraseToken.applicationName(_:);
  v318 = *(void (**)(char *))(v9 + 104);
  uint64_t v316 = v9 + 104;
  uint64_t v314 = v8;
  v318(v11);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  objc_super v85 = *(void (**)(char *, uint64_t))(v9 + 8);
  v85(v11, v8);
  uint64_t v310 = v9 + 8;
  v86._countAndFlagsBits = 0;
  v86._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v86);
  unint64_t v319 = v81;
  unint64_t v315 = v82;
  AppShortcutPhrase.init(stringInterpolation:)();
  unint64_t v87 = v317;
  unint64_t v265 = v81 + v317;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v88._countAndFlagsBits = 0x206E65704FLL;
  v88._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v88);
  v309 = v11;
  uint64_t v89 = v313;
  uint64_t v90 = v314;
  ((void (*)(char *, void, uint64_t))v318)(v11, v313, v314);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v85(v11, v90);
  v91._countAndFlagsBits = 0x2074756F626120;
  v91._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v91);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v92._countAndFlagsBits = 0;
  v92._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v92);
  AppShortcutPhrase.init(stringInterpolation:)();
  v266 = (char *)(v319 + 2 * v87);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v93._countAndFlagsBits = 0x206E65704FLL;
  v93._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v93);
  v94 = v309;
  uint64_t v95 = v314;
  ((void (*)(char *, uint64_t, uint64_t))v318)(v309, v89, v314);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v311 = v85;
  v85(v94, v95);
  v96._countAndFlagsBits = 0x20726F6620;
  v96._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v96);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v97._countAndFlagsBits = 0;
  v97._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v97);
  AppShortcutPhrase.init(stringInterpolation:)();
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v98._countAndFlagsBits = 0x20656D20776F6853;
  v98._object = (void *)0xE800000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v98);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v99._countAndFlagsBits = 32;
  v99._object = (void *)0xE100000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v99);
  uint64_t v100 = v313;
  v101 = (void (*)(char *, uint64_t, uint64_t))v318;
  ((void (*)(char *, void, uint64_t))v318)(v94, v313, v95);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v311(v94, v95);
  v102._countAndFlagsBits = 0;
  v102._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v102);
  AppShortcutPhrase.init(stringInterpolation:)();
  v268 = (char *)(4 * v317);
  unint64_t v103 = v319;
  v267 = (char *)(v319 + 4 * v317);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v104._countAndFlagsBits = 0x20656D20776F6853;
  v104._object = (void *)0xE800000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v104);
  v105 = v94;
  v106 = v94;
  uint64_t v107 = v314;
  v101(v106, v100, v314);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v108 = v311;
  v311(v105, v107);
  v109._countAndFlagsBits = 0x2074756F626120;
  v109._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v109);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v110._countAndFlagsBits = 0;
  v110._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v110);
  AppShortcutPhrase.init(stringInterpolation:)();
  unint64_t v111 = v317;
  v269 = &v268[v317 + v103];
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v112._countAndFlagsBits = 0x20656D20776F6853;
  v112._object = (void *)0xE800000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v112);
  uint64_t v113 = v314;
  v114 = v318;
  ((void (*)(char *, void, uint64_t))v318)(v105, v313, v314);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v108(v105, v113);
  v115._countAndFlagsBits = 0x20726F6620;
  v115._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v115);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v116._countAndFlagsBits = 0;
  v116._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v116);
  AppShortcutPhrase.init(stringInterpolation:)();
  v270 = (char *)(v103 + 6 * v111);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v117._countAndFlagsBits = 0x20776F6853;
  v117._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v117);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v118._countAndFlagsBits = 32;
  v118._object = (void *)0xE100000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v118);
  v119 = v309;
  uint64_t v120 = v313;
  uint64_t v121 = v314;
  ((void (*)(char *, void, uint64_t))v114)(v309, v313, v314);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v122 = v311;
  v311(v119, v121);
  v123._countAndFlagsBits = 0;
  v123._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v123);
  AppShortcutPhrase.init(stringInterpolation:)();
  v307 = (char *)(8 * v317);
  v270 = (char *)(v319 + 7 * v317);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v124._countAndFlagsBits = 0x20776F6853;
  v124._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v124);
  uint64_t v125 = v120;
  uint64_t v126 = v314;
  v127 = v318;
  ((void (*)(char *, uint64_t, uint64_t))v318)(v119, v125, v314);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v122(v119, v126);
  v128._countAndFlagsBits = 0x2074756F626120;
  v128._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v128);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v129._countAndFlagsBits = 0;
  v129._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v129);
  AppShortcutPhrase.init(stringInterpolation:)();
  unint64_t v130 = v319;
  v271 = &v307[v319];
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v131._countAndFlagsBits = 0x20776F6853;
  v131._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v131);
  uint64_t v132 = v313;
  uint64_t v133 = v314;
  ((void (*)(char *, void, uint64_t))v127)(v119, v313, v314);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v311(v119, v133);
  v134._countAndFlagsBits = 0x20726F6620;
  v134._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v134);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v135._countAndFlagsBits = 0;
  v135._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v135);
  AppShortcutPhrase.init(stringInterpolation:)();
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v136._countAndFlagsBits = 0x20656D2065766947;
  v136._object = (void *)0xE800000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v136);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v137._countAndFlagsBits = 32;
  v137._object = (void *)0xE100000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v137);
  uint64_t v138 = v314;
  v139 = v318;
  ((void (*)(char *, uint64_t, uint64_t))v318)(v119, v132, v314);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v140 = v138;
  v141 = v311;
  v311(v119, v140);
  v142._countAndFlagsBits = 0;
  v142._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v142);
  AppShortcutPhrase.init(stringInterpolation:)();
  v307 = (char *)(v130 + 10 * v317);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v143._countAndFlagsBits = 0x20656D2065766947;
  v143._object = (void *)0xE800000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v143);
  uint64_t v144 = v313;
  uint64_t v145 = v314;
  ((void (*)(char *, void, uint64_t))v139)(v119, v313, v314);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v141(v119, v145);
  v146._countAndFlagsBits = 0x2074756F626120;
  v146._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v146);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v147._countAndFlagsBits = 0;
  v147._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v147);
  AppShortcutPhrase.init(stringInterpolation:)();
  unint64_t v148 = v319;
  unint64_t v149 = v317;
  v307 = (char *)(v319 + 11 * v317);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v150._countAndFlagsBits = 0x20656D2065766947;
  v150._object = (void *)0xE800000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v150);
  uint64_t v151 = v314;
  ((void (*)(char *, uint64_t, uint64_t))v318)(v119, v144, v314);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v311(v119, v151);
  v152._countAndFlagsBits = 0x20726F6620;
  v152._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v152);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v153._countAndFlagsBits = 0;
  v153._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v153);
  AppShortcutPhrase.init(stringInterpolation:)();
  v307 = (char *)(v148 + 12 * v149);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v154._countAndFlagsBits = 0x2065766947;
  v154._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v154);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v155._countAndFlagsBits = 32;
  v155._object = (void *)0xE100000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v155);
  uint64_t v156 = v313;
  v157 = (void (*)(char *, uint64_t, uint64_t))v318;
  ((void (*)(char *, void, uint64_t))v318)(v119, v313, v151);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v158 = v311;
  v311(v119, v151);
  v159._countAndFlagsBits = 0;
  v159._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v159);
  AppShortcutPhrase.init(stringInterpolation:)();
  v307 = (char *)(v319 + 13 * v317);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v160._countAndFlagsBits = 0x2065766947;
  v160._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v160);
  uint64_t v161 = v156;
  uint64_t v162 = v314;
  v157(v119, v161, v314);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v158(v119, v162);
  v163._countAndFlagsBits = 0x2074756F626120;
  v163._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v163);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v164._countAndFlagsBits = 0;
  v164._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v164);
  AppShortcutPhrase.init(stringInterpolation:)();
  unint64_t v165 = v319;
  unint64_t v166 = v317;
  v307 = (char *)(v319 + 14 * v317);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v167._countAndFlagsBits = 0x2065766947;
  v167._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v167);
  uint64_t v168 = v314;
  ((void (*)(char *, void, uint64_t))v318)(v119, v313, v314);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v158(v119, v168);
  v169._countAndFlagsBits = 0x20726F6620;
  v169._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v169);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v170._countAndFlagsBits = 0;
  v170._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v170);
  AppShortcutPhrase.init(stringInterpolation:)();
  v307 = (char *)(16 * v166);
  v278 = (char *)(v165 + 15 * v166);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v171._countAndFlagsBits = 0x2077656956;
  v171._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v171);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v172._countAndFlagsBits = 32;
  v172._object = (void *)0xE100000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v172);
  v173 = v119;
  v174 = v119;
  uint64_t v175 = v313;
  uint64_t v176 = v314;
  v177 = (void (*)(char *, uint64_t, uint64_t))v318;
  ((void (*)(char *, void, uint64_t))v318)(v174, v313, v314);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v178 = v173;
  v179 = v311;
  v311(v178, v176);
  v180._countAndFlagsBits = 0;
  v180._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v180);
  AppShortcutPhrase.init(stringInterpolation:)();
  v279 = &v307[v319];
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v181._countAndFlagsBits = 0x2077656956;
  v181._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v181);
  v182 = v309;
  v177(v309, v175, v176);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v179(v182, v176);
  v183._countAndFlagsBits = 0x2074756F626120;
  v183._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v183);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v184._countAndFlagsBits = 0;
  v184._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v184);
  AppShortcutPhrase.init(stringInterpolation:)();
  unint64_t v185 = v317;
  v307 += v319 + v317;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v186._countAndFlagsBits = 0x2077656956;
  v186._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v186);
  uint64_t v187 = v314;
  v188 = v318;
  ((void (*)(char *, void, uint64_t))v318)(v182, v313, v314);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v311(v182, v187);
  v189._countAndFlagsBits = 0x20726F6620;
  v189._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v189);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v190._countAndFlagsBits = 0;
  v190._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v190);
  AppShortcutPhrase.init(stringInterpolation:)();
  v307 = (char *)(v319 + 18 * v185);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v191._countAndFlagsBits = 0x2079616C70736944;
  v191._object = (void *)0xE800000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v191);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v192._countAndFlagsBits = 32;
  v192._object = (void *)0xE100000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v192);
  uint64_t v193 = v313;
  uint64_t v194 = v314;
  ((void (*)(char *, void, uint64_t))v188)(v182, v313, v314);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v195 = v311;
  v311(v182, v194);
  v196._countAndFlagsBits = 0;
  v196._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v196);
  AppShortcutPhrase.init(stringInterpolation:)();
  unint64_t v197 = v319;
  v307 = (char *)(v319 + 19 * v317);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v198._countAndFlagsBits = 0x2079616C70736944;
  v198._object = (void *)0xE800000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v198);
  uint64_t v199 = v193;
  uint64_t v200 = v314;
  ((void (*)(char *, uint64_t, uint64_t))v188)(v182, v199, v314);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v195(v182, v200);
  v201._countAndFlagsBits = 0x2074756F626120;
  v201._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v201);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v202._countAndFlagsBits = 0;
  v202._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v202);
  AppShortcutPhrase.init(stringInterpolation:)();
  unint64_t v203 = v317;
  v307 = (char *)(v197 + 20 * v317);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v204._countAndFlagsBits = 0x2079616C70736944;
  v204._object = (void *)0xE800000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v204);
  uint64_t v205 = v313;
  uint64_t v206 = v314;
  ((void (*)(char *, void, uint64_t))v318)(v182, v313, v314);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v311(v182, v206);
  v207._countAndFlagsBits = 0x20726F6620;
  v207._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v207);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v208._countAndFlagsBits = 0;
  v208._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v208);
  AppShortcutPhrase.init(stringInterpolation:)();
  v307 = (char *)(v319 + 21 * v203);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v209._countAndFlagsBits = 0x206573776F7242;
  v209._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v209);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v210._countAndFlagsBits = 32;
  v210._object = (void *)0xE100000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v210);
  uint64_t v211 = v314;
  v212 = v318;
  ((void (*)(char *, uint64_t, uint64_t))v318)(v182, v205, v314);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v213 = v311;
  v311(v182, v211);
  v214._countAndFlagsBits = 0;
  v214._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v214);
  AppShortcutPhrase.init(stringInterpolation:)();
  v307 = (char *)(v319 + 22 * v317);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v215._countAndFlagsBits = 0x206573776F7242;
  v215._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v215);
  ((void (*)(char *, void, uint64_t))v212)(v182, v313, v211);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v213(v182, v211);
  v216._countAndFlagsBits = 0x2074756F626120;
  v216._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v216);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v217._countAndFlagsBits = 0;
  v217._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v217);
  AppShortcutPhrase.init(stringInterpolation:)();
  unint64_t v218 = v317;
  unint64_t v219 = v319;
  v307 = (char *)(v319 + 23 * v317);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v220._countAndFlagsBits = 0x206573776F7242;
  v220._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v220);
  uint64_t v221 = v313;
  ((void (*)(char *, void, uint64_t))v318)(v182, v313, v211);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v213(v182, v211);
  v222._countAndFlagsBits = 0x20726F6620;
  v222._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v222);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v223._countAndFlagsBits = 0;
  v223._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v223);
  AppShortcutPhrase.init(stringInterpolation:)();
  v307 = (char *)(v219 + 24 * v218);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v224._countAndFlagsBits = 543515987;
  v224._object = (void *)0xE400000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v224);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v225._countAndFlagsBits = 32;
  v225._object = (void *)0xE100000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v225);
  ((void (*)(char *, uint64_t, uint64_t))v318)(v182, v221, v211);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v226 = v311;
  v311(v182, v211);
  v227._countAndFlagsBits = 0;
  v227._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v227);
  AppShortcutPhrase.init(stringInterpolation:)();
  v307 = (char *)(v319 + 25 * v317);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v228._countAndFlagsBits = 543515987;
  v228._object = (void *)0xE400000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v228);
  v229 = (void (*)(char *, uint64_t, uint64_t))v318;
  ((void (*)(char *, uint64_t, uint64_t))v318)(v182, v221, v211);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v226(v182, v211);
  v230._countAndFlagsBits = 0x2074756F626120;
  v230._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v230);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v231._countAndFlagsBits = 0;
  v231._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v231);
  AppShortcutPhrase.init(stringInterpolation:)();
  unint64_t v232 = v317;
  v307 = (char *)(v319 + 26 * v317);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v233._countAndFlagsBits = 543515987;
  v233._object = (void *)0xE400000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v233);
  v229(v182, v221, v211);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v311(v182, v211);
  v234._countAndFlagsBits = 0x20726F6620;
  v234._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v234);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v235._countAndFlagsBits = 0;
  v235._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v235);
  AppShortcutPhrase.init(stringInterpolation:)();
  v307 = (char *)(v319 + 27 * v232);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v236._countAndFlagsBits = 0x6572612074616857;
  v236._object = (void *)0xE900000000000020;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v236);
  ((void (*)(char *, void, uint64_t))v318)(v182, v313, v211);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v237 = v311;
  v311(v182, v211);
  v238._countAndFlagsBits = 0x20726F6620;
  v238._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v238);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v239._countAndFlagsBits = 0;
  v239._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v239);
  AppShortcutPhrase.init(stringInterpolation:)();
  v307 = (char *)(v319 + 28 * v317);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v240._countAndFlagsBits = 0x6572612074616857;
  v240._object = (void *)0xEE0020656D6F7320;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v240);
  ((void (*)(char *, void, uint64_t))v318)(v182, v313, v211);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v237(v182, v211);
  v241._countAndFlagsBits = 0x20726F6620;
  v241._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v241);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v242._countAndFlagsBits = 0;
  v242._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v242);
  AppShortcutPhrase.init(stringInterpolation:)();
  v307 = (char *)(v319 + 29 * v317);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v243._countAndFlagsBits = 0x656D206863616554;
  v243._object = (void *)0xE900000000000020;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v243);
  uint64_t v244 = v313;
  v245 = (void (*)(char *, uint64_t, uint64_t))v318;
  ((void (*)(char *, void, uint64_t))v318)(v182, v313, v211);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v246 = v311;
  v311(v182, v211);
  v247._countAndFlagsBits = 0x20726F6620;
  v247._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v247);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v248._countAndFlagsBits = 0;
  v248._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v248);
  AppShortcutPhrase.init(stringInterpolation:)();
  v307 = (char *)(v319 + 30 * v317);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v249._countAndFlagsBits = 0x20656D206C6C6554;
  v249._object = (void *)0xE800000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v249);
  uint64_t v250 = v314;
  v245(v182, v244, v314);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v246(v182, v250);
  v251._countAndFlagsBits = 0x2074756F626120;
  v251._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v251);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v252._countAndFlagsBits = 0;
  v252._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v252);
  AppShortcutPhrase.init(stringInterpolation:)();
  unint64_t v317 = v319 + v308 - v317;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v253._countAndFlagsBits = 0;
  v253._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v253);
  uint64_t v254 = v314;
  ((void (*)(char *, void, uint64_t))v318)(v182, v313, v314);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v311(v182, v254);
  v255._countAndFlagsBits = 0x2074756F626120;
  v255._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v255);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v256._countAndFlagsBits = 0;
  v256._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v256);
  AppShortcutPhrase.init(stringInterpolation:)();
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v257._countAndFlagsBits = 0;
  v257._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v257);
  ((void (*)(char *, void, uint64_t))v318)(v182, v313, v254);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v311(v182, v254);
  v258._countAndFlagsBits = 0x20726F6620;
  v258._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v258);
  swift_getKeyPath();
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v259._countAndFlagsBits = 0;
  v259._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v259);
  AppShortcutPhrase.init(stringInterpolation:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v305 + 104))(v304, enum case for LocalizedStringResource.BundleDescription.main(_:), v306);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v260 = v296;
  AppShortcut.init<A>(intent:phrases:shortTitle:systemImageName:)();
  uint64_t v261 = static AppShortcutsBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v297 + 8))(v260, v298);
  sub_10001C28C(&qword_1000C96D8);
  uint64_t v262 = swift_allocObject();
  *(_OWORD *)(v262 + 16) = xmmword_10008CF30;
  *(void *)(v262 + 32) = v261;
  uint64_t v263 = static AppShortcutsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v263;
}

void sub_100011978()
{
  uint64_t v2 = v0;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v56[0])
  {
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR___TPSChecklistViewModel_appController);
    NSString v4 = [v56[0] identifier];
    if (!v4)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v4 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    id v5 = [v3 tipsForCollectionIdentifier:v4];

    if (!v5)
    {

      return;
    }
    id v53 = v56[0];
    uint64_t v54 = v2;
    sub_1000067A4(0, (unint64_t *)&qword_1000C8330);
    unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v7 = (void *)sub_100003938((uint64_t)&_swiftEmptyArrayStorage);
    unint64_t v57 = (unint64_t)&_swiftEmptyArrayStorage;
    unint64_t v58 = (unint64_t)&_swiftEmptyArrayStorage;
    if (v6 >> 62) {
      goto LABEL_41;
    }
    uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
      while (2)
      {
        if (v8 >= 1)
        {
          uint64_t v9 = 0;
          uint64_t v55 = v8;
          while (1)
          {
            id v10 = (v6 & 0xC000000000000001) != 0
                ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
                : *(id *)(v6 + 8 * v9 + 32);
            uint64_t v11 = v10;
            id v12 = [v10 checklistContent];

            if (v12) {
              break;
            }

LABEL_10:
            if (v8 == ++v9) {
              goto LABEL_42;
            }
          }
          if ([v11 contentStatus] == (id)1)
          {
            swift_getKeyPath();
            swift_getKeyPath();
            static Published.subscript.getter();
            swift_release();
            swift_release();
            if (v56[0])
            {
              char v13 = sub_10003D5CC((uint64_t)v11, (unint64_t)v56[0]);
              swift_bridgeObjectRelease();
              if ((v13 & 1) == 0)
              {
                type metadata accessor for TPSAnalyticsChecklistSessionController();
                uint64_t v14 = (void *)static TPSAnalyticsChecklistSessionController.sharedInstance.getter();
                uint64_t v15 = (void (*)(id *, void))dispatch thunk of TPSAnalyticsChecklistSessionController.sessionTipsCompleted.modify();
                if (__OFADD__(*v16, 1)) {
                  goto LABEL_40;
                }
                ++*v16;
                v15(v56, 0);
              }
            }
            id v17 = v11;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
          }
          else
          {
            id v18 = v11;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v19 = [v11 identifier];
          uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v1 = v21;

          id v22 = v11;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v56[0] = v7;
          unint64_t v25 = sub_100012140(v20, v1);
          uint64_t v26 = v7[2];
          BOOL v27 = (v24 & 1) == 0;
          uint64_t v28 = v26 + v27;
          if (__OFADD__(v26, v27))
          {
            __break(1u);
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
LABEL_41:
            swift_bridgeObjectRetain();
            uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (!v8) {
              goto LABEL_42;
            }
            continue;
          }
          char v29 = v24;
          if (v7[3] < v28)
          {
            sub_10001229C(v28, isUniquelyReferenced_nonNull_native);
            unint64_t v30 = sub_100012140(v20, v1);
            if ((v29 & 1) != (v31 & 1)) {
              goto LABEL_71;
            }
            unint64_t v25 = v30;
            uint64_t v7 = v56[0];
            if ((v29 & 1) == 0) {
              goto LABEL_34;
            }
LABEL_32:
            uint64_t v32 = v7[7];

            *(void *)(v32 + 8 * v25) = v22;
LABEL_36:

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v8 = v55;
            goto LABEL_10;
          }
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v7 = v56[0];
            if (v24) {
              goto LABEL_32;
            }
          }
          else
          {
            sub_100054CA8();
            uint64_t v7 = v56[0];
            if (v29) {
              goto LABEL_32;
            }
          }
LABEL_34:
          v7[(v25 >> 6) + 8] |= 1 << v25;
          uint64_t v33 = (uint64_t *)(v7[6] + 16 * v25);
          *uint64_t v33 = v20;
          v33[1] = v1;
          *(void *)(v7[7] + 8 * v25) = v22;
          uint64_t v34 = v7[2];
          BOOL v35 = __OFADD__(v34, 1);
          uint64_t v36 = v34 + 1;
          if (v35) {
            goto LABEL_39;
          }
          v7[2] = v36;
          swift_bridgeObjectRetain();
          goto LABEL_36;
        }
        break;
      }
      __break(1u);
LABEL_59:
      swift_bridgeObjectRetain();
      uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v39) {
        goto LABEL_60;
      }
LABEL_45:
      if (v39 >= 1)
      {
        for (uint64_t i = 0; i != v39; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0) {
            id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v41 = *(id *)(v6 + 8 * i + 32);
          }
          uint64_t v42 = v41;
          id v43 = [v41 identifier];
          uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v46 = v45;

          if (v7[2] && (unint64_t v47 = sub_100012140(v44, v46), (v48 & 1) != 0))
          {
            id v49 = *(id *)(v7[7] + 8 * v47);
            swift_bridgeObjectRelease();
            id v50 = v49;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)(((unint64_t)v56[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v56[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          else
          {

            swift_bridgeObjectRelease();
          }
        }
        swift_bridgeObjectRelease();
        id v38 = v56[0];
        goto LABEL_61;
      }
      __break(1u);
LABEL_71:
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
LABEL_42:
      uint64_t v37 = swift_bridgeObjectRelease();
      __chkstk_darwin(v37);
      static Animation.default.getter();
      withAnimation<A>(_:_:)();
      swift_release();
      id v38 = sub_100006280();
      uint64_t v1 = OBJC_IVAR___TPSChecklistViewModel_currentDisplayTips;
      unint64_t v6 = *(void *)(v54 + OBJC_IVAR___TPSChecklistViewModel_currentDisplayTips);
      if (v6)
      {
        v56[0] = &_swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (v6 >> 62) {
          goto LABEL_59;
        }
        uint64_t v39 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v39) {
          goto LABEL_45;
        }
LABEL_60:
        swift_bridgeObjectRelease();
        id v38 = &_swiftEmptyArrayStorage;
      }
LABEL_61:
      *(void *)(v54 + v1) = v38;
      swift_bridgeObjectRelease();
      dispatch thunk of TPSAnalyticsChecklistSessionController.sessionStartSuggestedTipCount.getter();
      unint64_t v51 = v58 >> 62;
      if (v52)
      {
        if (v51)
        {
          swift_bridgeObjectRetain();
          _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        dispatch thunk of TPSAnalyticsChecklistSessionController.sessionStartSuggestedTipCount.setter();
      }
      else
      {
        if (v51)
        {
          swift_bridgeObjectRetain();
          _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        dispatch thunk of TPSAnalyticsChecklistSessionController.sessionEndSuggestedTipsCount.setter();
      }
      sub_100006FF0();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
}

unint64_t sub_100012140(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_1000121B8(a1, a2, v4);
}

unint64_t sub_1000121B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    id v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        char v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_10001229C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10001C28C(&qword_1000C93A8);
  char v38 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  BOOL v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    id v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    char v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    id v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  id v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *id v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_1000125AC(uint64_t a1, int *a2)
{
  sub_10001C28C(&qword_1000C92C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + a2[8]);
}

void *sub_1000126E8(void *a1, void *a2, int *a3)
{
  sub_10001C28C(&qword_1000C92C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  int64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v16 = *v14;
  unint64_t v15 = (void *)v14[1];
  *int64_t v13 = v16;
  v13[1] = v15;
  unint64_t v17 = (void *)((char *)a1 + v12);
  id v18 = (void *)((char *)a2 + v12);
  uint64_t v19 = v18[1];
  void *v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = v18[3];
  v17[2] = v18[2];
  v17[3] = v20;
  uint64_t v21 = a3[8];
  id v22 = *(void **)((char *)a2 + v21);
  *(void *)((char *)a1 + v21) = v22;
  id v23 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v24 = v22;
  return a1;
}

uint64_t sub_100012898(void **a1, uint64_t a2)
{
  uint64_t v41 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v44 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v40 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  __chkstk_darwin(v5);
  uint64_t v39 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FeaturedCollectionView();
  uint64_t v8 = v7 - 8;
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v37 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for DispatchTime();
  uint64_t v45 = *(void *)(v35 - 8);
  uint64_t v11 = __chkstk_darwin(v35);
  int64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  int64_t v36 = (char *)&v34 - v14;
  uint64_t v15 = type metadata accessor for ColorScheme();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = *a1;
  id v19 = *(id *)(a2 + *(int *)(v8 + 28) + 8);
  sub_1000148E8((uint64_t)v18);
  sub_100012E4C(v18, 0);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_100012E0C();
  uint64_t v20 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t))(v45 + 8);
  v45 += 8;
  char v38 = v21;
  uint64_t v22 = v35;
  v21(v13, v35);
  sub_100014474(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FeaturedCollectionView);
  unint64_t v23 = (*(unsigned __int8 *)(v37 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  unint64_t v24 = (v9 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  sub_100014410((uint64_t)v10, v25 + v23);
  unint64_t v26 = v34;
  *(void *)(v25 + v24) = v34;
  aBlock[4] = sub_10003B8E0;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000374C;
  aBlock[3] = &unk_1000B80A0;
  BOOL v27 = _Block_copy(aBlock);
  id v28 = v26;
  swift_release();
  char v29 = v39;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100017114((unint64_t *)&qword_1000C84E8, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10001C28C(&qword_1000C84F0);
  sub_100009170((unint64_t *)&qword_1000C84F8, &qword_1000C84F0);
  uint64_t v30 = v40;
  uint64_t v31 = v41;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v32 = v36;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v31);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v43);
  return v38(v32, v22);
}

unint64_t sub_100012E0C()
{
  unint64_t result = qword_1000C84E0;
  if (!qword_1000C84E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000C84E0);
  }
  return result;
}

void sub_100012E4C(char *a1, char a2)
{
  uint64_t v5 = type metadata accessor for ColorScheme();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = &v2[OBJC_IVAR___CollectionListViewModel_colorScheme];
  swift_beginAccess();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v10(v8, v9, v5);
  char v11 = static ColorScheme.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v11 & 1) == 0 || (a2)
  {
    v10(v8, a1, v5);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v6 + 40))(v9, v8, v5);
    swift_endAccess();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v12 = v14;
    if (v14)
    {
      if (*(void *)&v2[OBJC_IVAR___CollectionListViewModel_featuredAssetViewModel])
      {
        swift_retain();
        id v13 = [v2 assetsInfoFor:v12];
        dispatch thunk of DocumentAssetViewModel.updateWithTipAssetInfo(_:shouldReload:)();
        swift_release();
      }
    }
  }
}

uint64_t sub_100013074@<X0>(uint64_t a1@<X8>)
{
  uint64_t v65 = a1;
  uint64_t v2 = sub_10001C28C(&qword_1000C8318);
  __chkstk_darwin(v2 - 8);
  uint64_t v63 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10001C28C(&qword_1000C87B8);
  uint64_t v4 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_10001C28C(&qword_1000C87C0);
  __chkstk_darwin(v58);
  uint64_t v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_10001C28C(&qword_1000C87C8);
  __chkstk_darwin(v59);
  uint64_t v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_10001C28C(&qword_1000C87D0);
  __chkstk_darwin(v62);
  uint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(int *)(type metadata accessor for FeaturedCollectionView() + 32);
  uint64_t v64 = v1;
  uint64_t v61 = v13;
  id v14 = [*(id *)(v1 + v13) featuredTitle];
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = 0;
    unint64_t v18 = 0xE000000000000000;
  }
  uint64_t v66 = v16;
  unint64_t v67 = v18;
  sub_100016F88();
  uint64_t v19 = Text.init<A>(_:)();
  uint64_t v21 = v20;
  uint64_t v66 = v19;
  unint64_t v67 = v20;
  char v23 = v22 & 1;
  char v68 = v22 & 1;
  uint64_t v69 = v24;
  View.avoidsOrphans(_:)();
  sub_100016FDC(v19, v21, v23);
  swift_bridgeObjectRelease();
  LOBYTE(v19) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v33 = v60;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v6, v60);
  uint64_t v34 = &v8[*(int *)(v58 + 36)];
  *uint64_t v34 = v19;
  *((void *)v34 + 1) = v26;
  *((void *)v34 + 2) = v28;
  *((void *)v34 + 3) = v30;
  *((void *)v34 + 4) = v32;
  v34[40] = 0;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v33);
  LOBYTE(v19) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  sub_100016FEC((uint64_t)v8, (uint64_t)v10, &qword_1000C87C0);
  uint64_t v43 = &v10[*(int *)(v59 + 36)];
  char *v43 = v19;
  *((void *)v43 + 1) = v36;
  *((void *)v43 + 2) = v38;
  *((void *)v43 + 3) = v40;
  *((void *)v43 + 4) = v42;
  v43[40] = 0;
  sub_1000143B4((uint64_t)v8, &qword_1000C87C0);
  uint64_t v44 = type metadata accessor for Font.Design();
  uint64_t v45 = (uint64_t)v63;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v63, 1, 1, v44);
  static Font.system(size:weight:design:)();
  sub_1000143B4(v45, &qword_1000C8318);
  static Font.Weight.bold.getter();
  uint64_t v46 = Font.weight(_:)();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_100016FEC((uint64_t)v10, (uint64_t)v12, &qword_1000C87C8);
  char v48 = (uint64_t *)&v12[*(int *)(v62 + 36)];
  *char v48 = KeyPath;
  v48[1] = v46;
  sub_1000143B4((uint64_t)v10, &qword_1000C87C8);
  id v49 = [*(id *)(v64 + v61) featuredContent];
  if (v49 && (v50 = v49, id v51 = [v49 labelStyle], v50, v51 == (id)1)) {
    uint64_t v52 = static Color.white.getter();
  }
  else {
    uint64_t v52 = static Color.primary.getter();
  }
  uint64_t v53 = v52;
  uint64_t v54 = swift_getKeyPath();
  uint64_t v55 = v65;
  sub_100016FEC((uint64_t)v12, v65, &qword_1000C87D0);
  uint64_t v56 = (uint64_t *)(v55 + *(int *)(sub_10001C28C(&qword_1000C87D8) + 36));
  *uint64_t v56 = v54;
  v56[1] = v53;
  return sub_1000143B4((uint64_t)v12, &qword_1000C87D0);
}

uint64_t sub_100013588@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v119 = a1;
  uint64_t v3 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v117 = *(void *)(v3 - 8);
  uint64_t v118 = v3;
  __chkstk_darwin(v3);
  Swift::String v116 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001C28C(&qword_1000C8708);
  uint64_t v114 = *(void *)(v5 - 8);
  uint64_t v115 = v5;
  __chkstk_darwin(v5);
  uint64_t v113 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001C28C(&qword_1000C8710);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  v94 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  Swift::String v93 = (char *)&v92 - v10;
  uint64_t v104 = type metadata accessor for ColorScheme();
  uint64_t v105 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v103 = (uint64_t)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001C28C(&qword_1000C8718);
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = type metadata accessor for FeaturedCollectionView();
  uint64_t v15 = *(void *)(v126 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = __chkstk_darwin(v126);
  uint64_t v95 = (uint64_t)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v92 - v18;
  uint64_t v98 = sub_10001C28C(&qword_1000C8720);
  uint64_t v99 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  Swift::String v96 = (char *)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10001C28C(&qword_1000C8728);
  uint64_t v22 = v21 - 8;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10001C28C(&qword_1000C8730);
  uint64_t v26 = v25 - 8;
  __chkstk_darwin(v25);
  Swift::String v97 = (char *)&v92 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_10001C28C(&qword_1000C8738) - 8;
  __chkstk_darwin(v102);
  uint64_t v100 = (uint64_t)&v92 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_10001C28C(&qword_1000C8740);
  __chkstk_darwin(v122);
  uint64_t v101 = (uint64_t)&v92 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_10001C28C(&qword_1000C8748);
  uint64_t v108 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  Swift::String v124 = (char *)&v92 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_10001C28C(&qword_1000C8750);
  __chkstk_darwin(v109);
  unint64_t v111 = (char *)&v92 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_10001C28C(&qword_1000C8758);
  uint64_t v107 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  v106 = (char *)&v92 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = v1;
  uint64_t v121 = type metadata accessor for FeaturedCollectionView;
  Swift::String v123 = v19;
  sub_100014474(v1, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FeaturedCollectionView);
  uint64_t v33 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v34 = (v33 + 16) & ~v33;
  uint64_t v35 = v34 + v16;
  uint64_t v125 = v33 | 7;
  uint64_t v36 = swift_allocObject();
  sub_100014410((uint64_t)v19, v36 + v34);
  v127 = sub_100003D7C;
  uint64_t v128 = v36;
  uint64_t v37 = v2 + *(int *)(v126 + 28);
  long long v38 = *(_OWORD *)v37;
  uint64_t v40 = *(void *)(v37 + 16);
  uint64_t v39 = *(void *)(v37 + 24);
  long long v129 = v38;
  *(void *)&long long v130 = v40;
  *((void *)&v130 + 1) = v39;
  sub_10001E00C();
  AppEntity.fullyQualifiedIdentifier.getter();
  uint64_t v41 = type metadata accessor for EntityIdentifier();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v14, 0, 1, v41);
  sub_10001C28C(&qword_1000C8760);
  sub_100009170(&qword_1000C8768, &qword_1000C8760);
  uint64_t v42 = v96;
  View.appEntityIdentifier(_:)();
  sub_1000143B4((uint64_t)v14, &qword_1000C8718);
  swift_release();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v43 = v99;
  uint64_t v44 = v98;
  (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v24, v42, v98);
  uint64_t v45 = &v24[*(int *)(v22 + 44)];
  long long v46 = v130;
  *(_OWORD *)uint64_t v45 = v129;
  *((_OWORD *)v45 + 1) = v46;
  *((_OWORD *)v45 + 2) = v131;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
  uint64_t v47 = static Alignment.topLeading.getter();
  uint64_t v49 = v48;
  uint64_t v50 = (uint64_t)v97;
  uint64_t v51 = (uint64_t)&v97[*(int *)(v26 + 44)];
  uint64_t v52 = v120;
  sub_100013074(v51);
  uint64_t v53 = (uint64_t *)(v51 + *(int *)(sub_10001C28C(&qword_1000C8770) + 36));
  uint64_t *v53 = v47;
  v53[1] = v49;
  uint64_t v54 = v35;
  sub_100017278((uint64_t)v24, v50, &qword_1000C8728);
  uint64_t v55 = (uint64_t)v123;
  uint64_t v56 = v121;
  sub_100014474(v52, (uint64_t)v123, (uint64_t (*)(void))v121);
  uint64_t v57 = swift_allocObject();
  sub_100014410(v55, v57 + v34);
  uint64_t v58 = v100;
  sub_100016FEC(v50, v100, &qword_1000C8730);
  uint64_t v59 = (uint64_t (**)())(v58 + *(int *)(v102 + 44));
  *uint64_t v59 = sub_10001DB5C;
  v59[1] = (uint64_t (*)())v57;
  v59[2] = 0;
  v59[3] = 0;
  uint64_t v60 = v50;
  uint64_t v61 = v120;
  sub_1000143B4(v60, &qword_1000C8730);
  sub_100014474(v61, v55, (uint64_t (*)(void))v56);
  uint64_t v62 = swift_allocObject();
  sub_100014410(v55, v62 + v34);
  uint64_t v63 = v101;
  sub_100016FEC(v58, v101, &qword_1000C8738);
  uint64_t v64 = (void *)(v63 + *(int *)(v122 + 36));
  *uint64_t v64 = 0;
  v64[1] = 0;
  v64[2] = sub_10003B4B8;
  v64[3] = v62;
  sub_1000143B4(v58, &qword_1000C8738);
  uint64_t v65 = v103;
  sub_1000148E8(v103);
  sub_100014474(v61, v55, (uint64_t (*)(void))v56);
  uint64_t v102 = v54;
  uint64_t v66 = swift_allocObject();
  uint64_t v67 = v34;
  sub_100014410(v55, v66 + v34);
  sub_10003B56C(&qword_1000C8778, &qword_1000C8740, (void (*)(void))sub_10003B544);
  sub_100017114(&qword_1000C87A0, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  uint64_t v68 = v104;
  View.onChange<A>(of:initial:_:)();
  uint64_t v69 = v126;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v65, v68);
  sub_1000143B4(v63, &qword_1000C8740);
  uint64_t v70 = *(void *)(*(void *)(v61 + *(int *)(v69 + 20) + 8)
                  + OBJC_IVAR___CollectionListViewModel_featuredAssetViewModel);
  uint64_t v71 = v61;
  uint64_t v72 = v95;
  sub_100014474(v61, v95, (uint64_t (*)(void))v121);
  if (!v70)
  {
    uint64_t v73 = *(void **)(v72 + *(int *)(v69 + 32));
    uint64_t v74 = type metadata accessor for URL();
    uint64_t v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56);
    v75(v93, 1, 1, v74);
    v75(v94, 1, 1, v74);
    id v76 = objc_allocWithZone((Class)type metadata accessor for TPSAssetsInfo());
    id v77 = v73;
    uint64_t v67 = v34;
    TPSAssetsInfo.init(videoIdentifier:videoURL:imageIdentifier:imageURL:)();
    type metadata accessor for TipsContentModel();
    static TipsContentModel.shared()();
    type metadata accessor for DocumentAssetViewModel();
    swift_allocObject();
    DocumentAssetViewModel.init(document:assetsInfo:contentModel:)();
  }
  swift_retain();
  sub_10000ECF0(v72, (uint64_t (*)(void))type metadata accessor for FeaturedCollectionView);
  uint64_t v78 = v113;
  dispatch thunk of DocumentAssetViewModel.$player.getter();
  swift_release();
  uint64_t v79 = (uint64_t)v123;
  sub_100014474(v71, (uint64_t)v123, (uint64_t (*)(void))type metadata accessor for FeaturedCollectionView);
  uint64_t v80 = swift_allocObject();
  sub_100014410(v79, v80 + v67);
  uint64_t v81 = v108;
  uint64_t v82 = (uint64_t)v111;
  Swift::String v83 = v124;
  uint64_t v84 = v112;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v111, v124, v112);
  uint64_t v85 = v109;
  uint64_t v87 = v114;
  uint64_t v86 = v115;
  (*(void (**)(uint64_t, char *, uint64_t))(v114 + 16))(v82 + *(int *)(v109 + 52), v78, v115);
  Swift::String v88 = (uint64_t (**)(void **))(v82 + *(int *)(v85 + 56));
  *Swift::String v88 = sub_100003D0C;
  v88[1] = (uint64_t (*)(void **))v80;
  (*(void (**)(char *, uint64_t))(v87 + 8))(v78, v86);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v83, v84);
  uint64_t v89 = v116;
  static AccessibilityChildBehavior.combine.getter();
  sub_100009170(&qword_1000C87A8, &qword_1000C8750);
  uint64_t v90 = v106;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v89, v118);
  sub_1000143B4(v82, &qword_1000C8750);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v107 + 32))(v119, v90, v110);
}

uint64_t sub_1000143B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10001C28C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100014410(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeaturedCollectionView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100014474(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for FeaturedCollectionView()
{
  uint64_t result = qword_1000C86B8;
  if (!qword_1000C86B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_100014528(void *a1, void *a2, int *a3)
{
  sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v7);
  uint64_t v10 = (void *)((char *)a2 + v7);
  uint64_t v12 = *v10;
  uint64_t v11 = (void *)v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  uint64_t v13 = (char *)a1 + v8;
  id v14 = (char *)a2 + v8;
  *uint64_t v13 = *v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)((char *)a1 + v15);
  uint64_t v18 = (void *)((char *)a2 + v15);
  uint64_t v19 = v18[1];
  void *v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = v18[3];
  v17[2] = v18[2];
  v17[3] = v20;
  uint64_t v21 = *(void **)((char *)a2 + v16);
  *(void *)((char *)a1 + v16) = v21;
  id v22 = v11;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v23 = v21;
  return a1;
}

uint64_t sub_100014660@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v23 = a4;
  uint64_t v9 = v5;
  uint64_t v11 = type metadata accessor for EnvironmentValues();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10001C28C(a1);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100016FEC(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = static os_log_type_t.fault.getter();
    uint64_t v21 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v21, v20))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315138;
      *(void *)(v22 + 4) = sub_10006F36C(a3, v23, &v24);
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_1000148E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100014660(&qword_1000C81D0, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

Class sub_100014E98(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v7 = a1;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  sub_1000067A4(0, a5);
  v8.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v8.super.isa;
}

void sub_10001548C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100015784(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v9 = a2;
  uint64_t v6 = [v9 collectionIdentifiers];
  id v7 = +[TPSCommonDefines checklistCollectionIdentifier];
  unsigned int v8 = [v6 containsObject:v7];

  if (v8)
  {
    if ((*(unsigned int (**)(void))(*(void *)(a1 + 48) + 16))())
    {
      [*(id *)(a1 + 32) removeObject:v9];
      if ((unint64_t)[*(id *)(a1 + 40) count] >= 3) {
        *a4 = 1;
      }
    }
  }
}

uint64_t sub_100015864(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 identifier];
  if (v4
    && (uint64_t v5 = (void *)v4,
        [v3 title],
        uint64_t v6 = objc_claimAutoreleasedReturnValue(),
        id v7 = [v6 length],
        v6,
        v5,
        v7))
  {
    id v8 = objc_alloc_init((Class)NSURLComponents);
    [v8 setScheme:@"tips"];
    [v8 setPath:@"open"];
    id v9 = [v3 identifier];
    uint64_t v10 = +[TPSCommonDefines sharedInstance];
    uint64_t v11 = [v3 collectionIdentifiers];
    uint64_t v12 = [v10 collectionIdentifierToUseForCollectionIdentifiers:v11];

    if ([v12 length])
    {
      uint64_t v13 = [v9 stringByAppendingFormat:@"%@%@", @"#", v12];

      id v9 = (void *)v13;
    }
    id v14 = +[NSURLQueryItem queryItemWithName:@"type" value:@"shortcut"];
    uint64_t v15 = +[NSURLQueryItem queryItemWithName:@"id" value:v9];
    v23[0] = v14;
    v23[1] = v15;
    uint64_t v16 = +[NSArray arrayWithObjects:v23 count:2];
    [v8 setQueryItems:v16];

    uint64_t v17 = [v8 string];
    id v18 = objc_alloc((Class)UIApplicationShortcutItem);
    uint64_t v19 = [v3 title];
    id v20 = [v18 initWithType:v17 localizedTitle:v19];

    [*(id *)(a1 + 32) addObject:v20];
    uint64_t v21 = 1;
  }
  else
  {
    uint64_t v21 = 0;
  }

  return v21;
}

uint64_t sub_100015AE0(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_100015B70(void *a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  sub_1000067A4(0, a4);
  static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_getKeyPath();
  swift_getKeyPath();
  id v5 = a1;
  return static Published.subscript.setter();
}

uint64_t sub_100015C00(void *a1, uint64_t a2, void *a3)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v5 = a3;
  id v6 = a1;
  return static Published.subscript.setter();
}

uint64_t sub_100015DA0(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  return static Published.subscript.setter();
}

void sub_100015E1C(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.setter();
  sub_100015EC4();
}

uint64_t sub_100015EC4()
{
  return static Published.subscript.setter();
}

uint64_t sub_100015FE8(void *a1)
{
  return sub_100015DA0(a1);
}

uint64_t sub_100015FFC(void *a1)
{
  return sub_100015DA0(a1);
}

uint64_t destroy for TipCollection()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100016B10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v36 = a1;
  uint64_t v3 = sub_10001C28C(&qword_1000C8718);
  __chkstk_darwin(v3 - 8);
  uint64_t v35 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AccessibilityTraits();
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  __chkstk_darwin(v5);
  uint64_t v30 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v7 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  id v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10001C28C(&qword_1000C94C0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10001C28C(&qword_1000C94C8);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10001C28C(&qword_1000C94D0);
  __chkstk_darwin(v32);
  id v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v12 = static VerticalAlignment.center.getter();
  *((void *)v12 + 1) = 0;
  v12[16] = 1;
  uint64_t v19 = sub_10001C28C(&qword_1000C94D8);
  sub_100057830(v2, (uint64_t)&v12[*(int *)(v19 + 44)]);
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v20 = sub_100009170(&qword_1000C94E0, &qword_1000C94C0);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v31);
  sub_1000143B4((uint64_t)v12, &qword_1000C94C0);
  uint64_t v21 = v30;
  static AccessibilityTraits.isButton.getter();
  *(void *)&long long v37 = v10;
  *((void *)&v37 + 1) = v20;
  swift_getOpaqueTypeConformance2();
  View.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v34);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v22 = (long long *)(v29 + *(int *)(type metadata accessor for CollectionListItemView() + 28));
  long long v23 = *v22;
  uint64_t v25 = *((void *)v22 + 2);
  uint64_t v24 = *((void *)v22 + 3);
  long long v37 = v23;
  uint64_t v38 = v25;
  uint64_t v39 = v24;
  sub_10001E00C();
  uint64_t v26 = (uint64_t)v35;
  AppEntity.fullyQualifiedIdentifier.getter();
  uint64_t v27 = type metadata accessor for EntityIdentifier();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 0, 1, v27);
  sub_10005913C();
  View.appEntityIdentifier(_:)();
  sub_1000143B4(v26, &qword_1000C8718);
  return sub_1000143B4((uint64_t)v18, &qword_1000C94D0);
}

unint64_t sub_100016F88()
{
  unint64_t result = qword_1000C8320;
  if (!qword_1000C8320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8320);
  }
  return result;
}

uint64_t sub_100016FDC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100016FEC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10001C28C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100017050(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001AD28(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for CollectionListItemView()
{
  uint64_t result = qword_1000C9470;
  if (!qword_1000C9470) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100017114(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001715C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000171A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000171EC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CollectionListViewModel();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for CollectionListViewModel()
{
  uint64_t result = qword_1000C8AF0;
  if (!qword_1000C8AF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100017278(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10001C28C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000172DC(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100037CB8(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100017320(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100016FDC(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

BOOL sub_1000173B4(void *a1)
{
  uint64_t v2 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  BOOL result = 0;
  if (v7)
  {
    sub_1000067A4(0, (unint64_t *)&qword_1000CA260);
    id v4 = a1;
    char v5 = static NSObject.== infix(_:_:)();

    if ((v5 & 1) != 0 && ![v2 tipCountFor:v4]) {
      return 1;
    }
  }
  return result;
}

BOOL sub_1000174F8(void *a1)
{
  uint64_t v2 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v9)
  {
    sub_1000067A4(0, (unint64_t *)&qword_1000CA260);
    id v4 = a1;
    char v5 = static NSObject.== infix(_:_:)();

    if (v5) {
      return (uint64_t)[v2 tipCountFor:a1] > 0;
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (!v9) {
    return 0;
  }
  sub_1000067A4(0, (unint64_t *)&qword_1000CA260);
  id v6 = a1;
  char v7 = static NSObject.== infix(_:_:)();

  return (v7 & 1) != 0 && (uint64_t)[v2 tipCountFor:a1] > 0;
}

uint64_t sub_100017678@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  LODWORD(v3) = a2;
  uint64_t v80 = a3;
  uint64_t v5 = sub_10001C28C(&qword_1000C95A0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v79 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v82 = (uint64_t)&v57 - v8;
  uint64_t v67 = sub_10001C28C(&qword_1000C95A8);
  __chkstk_darwin(v67);
  uint64_t v71 = (uint64_t *)((char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v70 = type metadata accessor for Image.Scale();
  uint64_t v69 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v68 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10001C28C(&qword_1000C8318);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Font.TextStyle();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_10001C28C(&qword_1000C95B0);
  uint64_t v77 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10001C28C(&qword_1000C95B8);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v78 = (uint64_t)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v57 - v23;
  int v76 = a1;
  uint64_t v75 = v13;
  uint64_t v74 = v14;
  uint64_t v73 = v15;
  uint64_t v72 = v17;
  if (a1)
  {
    uint64_t v66 = Image.init(systemName:)();
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for Font.TextStyle.footnote(_:), v14);
    uint64_t v25 = type metadata accessor for Font.Design();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v13, 1, 1, v25);
    static Font.system(_:design:weight:)();
    int v64 = v3;
    sub_1000143B4((uint64_t)v13, &qword_1000C8318);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    static Font.Weight.bold.getter();
    uint64_t v63 = Font.weight(_:)();
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v27 = static Color.green.getter();
    uint64_t v3 = swift_getKeyPath();
    static Alignment.trailing.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v62 = v93;
    int v61 = v94;
    uint64_t v60 = v95;
    int v59 = v96;
    uint64_t v58 = v97;
    uint64_t v65 = v24;
    uint64_t v28 = v98;
    uint64_t v29 = v69;
    uint64_t v30 = v68;
    uint64_t v31 = v70;
    (*(void (**)(char *, void, uint64_t))(v69 + 104))(v68, enum case for Image.Scale.large(_:), v70);
    uint64_t v32 = swift_getKeyPath();
    uint64_t v33 = v71;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))((char *)v71 + *(int *)(v67 + 28), v30, v31);
    *uint64_t v33 = v32;
    sub_100016FEC((uint64_t)v33, (uint64_t)&v19[*(int *)(v81 + 36)], &qword_1000C95A8);
    *(void *)uint64_t v19 = v66;
    *((void *)v19 + 1) = KeyPath;
    *((void *)v19 + 2) = v63;
    *((void *)v19 + 3) = v3;
    uint64_t v34 = v62;
    *((void *)v19 + 4) = v27;
    *((void *)v19 + 5) = v34;
    v19[48] = v61;
    *((void *)v19 + 7) = v60;
    v19[64] = v59;
    *((void *)v19 + 9) = v58;
    *((void *)v19 + 10) = v28;
    uint64_t v24 = v65;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000143B4((uint64_t)v33, &qword_1000C95A8);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
    swift_release();
    LOBYTE(v3) = v64;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_100017278((uint64_t)v19, (uint64_t)v24, &qword_1000C95B0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v24, 0, 1, v81);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56))((char *)&v57 - v23, 1, 1, v81);
  }
  if (v3)
  {
    uint64_t v35 = Image.init(systemName:)();
    uint64_t v36 = v73;
    long long v37 = v72;
    uint64_t v38 = v74;
    (*(void (**)(char *, void, uint64_t))(v73 + 104))(v72, enum case for Font.TextStyle.footnote(_:), v74);
    uint64_t v39 = type metadata accessor for Font.Design();
    uint64_t v40 = (uint64_t)v75;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v75, 1, 1, v39);
    static Font.system(_:design:weight:)();
    sub_1000143B4(v40, &qword_1000C8318);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
    static Font.Weight.bold.getter();
    uint64_t v41 = Font.weight(_:)();
    swift_release();
    uint64_t v42 = swift_getKeyPath();
    id v43 = [self tertiaryLabelColor];
    uint64_t v44 = Color.init(_:)();
    uint64_t v45 = v24;
    uint64_t v46 = swift_getKeyPath();
    static Alignment.trailing.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v83 = v35;
    uint64_t v84 = v42;
    uint64_t v85 = v41;
    uint64_t v86 = v46;
    uint64_t v87 = v44;
    uint64_t v88 = v99;
    char v89 = v100;
    uint64_t v90 = v101;
    char v91 = v102;
    long long v92 = v103;
    sub_10001C28C(&qword_1000C95D0);
    sub_1000180E8();
    uint64_t v47 = v82;
    View.accessibilityHidden(_:)();
    swift_release();
    uint64_t v24 = v45;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v48 = sub_10001C28C(&qword_1000C95C0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
  }
  else
  {
    uint64_t v49 = sub_10001C28C(&qword_1000C95C0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v82, 1, 1, v49);
    if ((v76 & 1) == 0)
    {
      char v50 = 0;
      goto LABEL_9;
    }
  }
  char v50 = 1;
LABEL_9:
  uint64_t v51 = v78;
  sub_100016FEC((uint64_t)v24, v78, &qword_1000C95B8);
  uint64_t v52 = v82;
  uint64_t v53 = v79;
  sub_100016FEC(v82, v79, &qword_1000C95A0);
  uint64_t v54 = v80;
  sub_100016FEC(v51, v80, &qword_1000C95B8);
  uint64_t v55 = sub_10001C28C(&qword_1000C95C8);
  sub_100016FEC(v53, v54 + *(int *)(v55 + 48), &qword_1000C95A0);
  *(unsigned char *)(v54 + *(int *)(v55 + 64)) = v50;
  sub_1000143B4(v52, &qword_1000C95A0);
  sub_1000143B4((uint64_t)v24, &qword_1000C95B8);
  sub_1000143B4(v53, &qword_1000C95A0);
  return sub_1000143B4(v51, &qword_1000C95B8);
}

unint64_t sub_1000180E8()
{
  unint64_t result = qword_1000C95D8;
  if (!qword_1000C95D8)
  {
    sub_10001AD28(&qword_1000C95D0);
    sub_10001D34C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C95D8);
  }
  return result;
}

unint64_t sub_100018164()
{
  unint64_t result = qword_1000C9548;
  if (!qword_1000C9548)
  {
    sub_10001AD28(&qword_1000C9550);
    sub_100017050(&qword_1000C9558, &qword_1000C9518, (void (*)(void))sub_10001D20C);
    sub_100009170(&qword_1000C8E28, &qword_1000C8E30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9548);
  }
  return result;
}

unint64_t sub_100018228()
{
  unint64_t result = qword_1000C9570;
  if (!qword_1000C9570)
  {
    sub_10001AD28(&qword_1000C9578);
    sub_100009170(&qword_1000C8E18, &qword_1000C8E20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9570);
  }
  return result;
}

uint64_t sub_100018380@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v61 = a3;
  uint64_t v47 = type metadata accessor for Prominence();
  uint64_t v4 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_10001C28C(&qword_1000C92B8);
  uint64_t v48 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v59 = (int *)sub_10001C28C(&qword_1000C9248);
  __chkstk_darwin(v59);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10001C28C(&qword_1000C9F28);
  uint64_t v52 = *(void *)(v11 - 8);
  uint64_t v53 = v11;
  __chkstk_darwin(v11);
  char v50 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10001C28C(&qword_1000C9EB0);
  uint64_t v56 = *(void *)(v60 - 8);
  uint64_t v13 = __chkstk_darwin(v60);
  uint64_t v49 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v54 = (char *)&v46 - v15;
  uint64_t v16 = type metadata accessor for Locale();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v17 - 8);
  uint64_t v58 = sub_10001C28C(&qword_1000C9F30);
  __chkstk_darwin(v58);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  id v20 = a2;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v62)
  {
    id v57 = v62;
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    uint64_t v62 = (void *)String.init(localized:table:bundle:locale:comment:)();
    uint64_t v63 = v21;
    sub_100016F88();
    swift_bridgeObjectRetain();
    uint64_t v62 = (void *)Text.init<A>(_:)();
    uint64_t v63 = v22;
    LOBYTE(v64) = v23 & 1;
    unint64_t v65 = v24;
    uint64_t v25 = v47;
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Prominence.increased(_:), v47);
    View.headerProminence(_:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v25);
    sub_100016FDC((uint64_t)v62, v63, (char)v64);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v27 = v48;
    uint64_t v28 = v51;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v10, v8, v51);
    uint64_t v29 = v59;
    uint64_t v30 = &v10[v59[9]];
    *(void *)uint64_t v30 = KeyPath;
    *((void *)v30 + 1) = 0;
    v30[16] = 1;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v28);
    uint64_t v31 = swift_bridgeObjectRelease();
    __chkstk_darwin(v31);
    uint64_t v32 = v55;
    *(&v46 - 4) = (uint64_t)v57;
    *(&v46 - 3) = v32;
    *(&v46 - 2) = (uint64_t)v20;
    uint64_t v33 = sub_10001C28C(&qword_1000C9EC0);
    unint64_t v34 = sub_10001AAC0();
    unint64_t v35 = sub_10001AB90();
    uint64_t v36 = v50;
    Section<>.init(header:content:)();
    long long v37 = v49;
    uint64_t v38 = v53;
    Section<>.collapsible(_:)();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v36, v38);
    uint64_t v39 = v56;
    uint64_t v40 = v54;
    uint64_t v41 = v60;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v54, v37, v60);
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v19, v40, v41);
    swift_storeEnumTagMultiPayload();
    uint64_t v62 = v29;
    uint64_t v63 = v33;
    int v64 = &type metadata for EmptyView;
    unint64_t v65 = v34;
    unint64_t v66 = v35;
    uint64_t v67 = &protocol witness table for EmptyView;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();

    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v40, v41);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    uint64_t v43 = sub_10001AD28(&qword_1000C9EC0);
    unint64_t v44 = sub_10001AAC0();
    unint64_t v45 = sub_10001AB90();
    uint64_t v62 = v59;
    uint64_t v63 = v43;
    int v64 = &type metadata for EmptyView;
    unint64_t v65 = v44;
    unint64_t v66 = v45;
    uint64_t v67 = &protocol witness table for EmptyView;
    swift_getOpaqueTypeConformance2();
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_100018B10@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v79 = a3;
  uint64_t v67 = type metadata accessor for SidebarListStyle();
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  int v64 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001C28C(&qword_1000C9DA8);
  uint64_t v69 = *(void *)(v6 - 8);
  uint64_t v70 = v6;
  __chkstk_darwin(v6);
  uint64_t v68 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_10001C28C(&qword_1000C9DB0);
  uint64_t v8 = __chkstk_darwin(v78);
  unint64_t v65 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v71 = (uint64_t)&v59 - v10;
  uint64_t v76 = sub_10001C28C(&qword_1000C9DB8);
  __chkstk_darwin(v76);
  uint64_t v77 = (uint64_t)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for InsetGroupedListStyle();
  uint64_t v63 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v61 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_10001C28C(&qword_1000C9DC0);
  uint64_t v13 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_10001C28C(&qword_1000C9DC8);
  __chkstk_darwin(v73);
  uint64_t v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_10001C28C(&qword_1000C9DD0);
  uint64_t v62 = *(void *)(v74 - 8);
  uint64_t v18 = __chkstk_darwin(v74);
  uint64_t v60 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v59 - v20;
  swift_getKeyPath();
  swift_getKeyPath();
  id v22 = a2;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  int v23 = v85;
  type metadata accessor for CollectionListViewModel();
  sub_1000171A4(&qword_1000C8550, (void (*)(uint64_t))type metadata accessor for CollectionListViewModel);
  uint64_t v24 = a1;
  uint64_t v25 = (void *)ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();

  uint64_t v82 = v85;
  uint64_t v83 = v86;
  long long v84 = v87;
  __chkstk_darwin(v26);
  *(&v59 - 2) = a1;
  *(&v59 - 1) = (uint64_t)v22;
  sub_10001C28C(&qword_1000C9DD8);
  if (v23 == 1)
  {
    uint64_t v27 = sub_10001AD28(&qword_1000C9DE0);
    unint64_t v28 = sub_100019A2C();
    uint64_t v80 = v27;
    unint64_t v81 = v28;
    swift_getOpaqueTypeConformance2();
    List.init(selection:content:)();
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v24;
    *(void *)(v29 + 24) = v22;
    uint64_t v30 = v72;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v15, v72);
    uint64_t v31 = v73;
    uint64_t v32 = &v17[*(int *)(v73 + 36)];
    *(void *)uint64_t v32 = sub_10001DD04;
    *((void *)v32 + 1) = v29;
    *((void *)v32 + 2) = 0;
    *((void *)v32 + 3) = 0;
    uint64_t v33 = *(void (**)(char *, uint64_t))(v13 + 8);
    id v34 = v22;
    v33(v15, v30);
    unint64_t v35 = v61;
    InsetGroupedListStyle.init()();
    unint64_t v36 = sub_100019674();
    long long v37 = v60;
    uint64_t v38 = v75;
    View.listStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v35, v38);
    sub_1000143B4((uint64_t)v17, &qword_1000C9DC8);
    uint64_t v39 = v62;
    uint64_t v40 = v74;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v21, v37, v74);
    (*(void (**)(uint64_t, char *, uint64_t))(v39 + 16))(v77, v21, v40);
    swift_storeEnumTagMultiPayload();
    uint64_t v85 = v31;
    uint64_t v86 = v38;
    *(void *)&long long v87 = v36;
    *((void *)&v87 + 1) = &protocol witness table for InsetGroupedListStyle;
    swift_getOpaqueTypeConformance2();
    sub_100019580();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v21, v40);
  }
  else
  {
    uint64_t v42 = sub_10001AD28(&qword_1000C9DE0);
    unint64_t v43 = sub_100019A2C();
    uint64_t v80 = v42;
    unint64_t v81 = v43;
    swift_getOpaqueTypeConformance2();
    List.init(selection:content:)();
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = a1;
    *(void *)(v44 + 24) = v22;
    uint64_t v45 = v72;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v15, v72);
    uint64_t v46 = v73;
    uint64_t v47 = (uint64_t (**)())&v17[*(int *)(v73 + 36)];
    *uint64_t v47 = sub_10001DD08;
    v47[1] = (uint64_t (*)())v44;
    v47[2] = 0;
    v47[3] = 0;
    uint64_t v48 = *(void (**)(char *, uint64_t))(v13 + 8);
    id v49 = v22;
    v48(v15, v45);
    char v50 = v64;
    SidebarListStyle.init()();
    unint64_t v51 = sub_100019674();
    uint64_t v52 = v68;
    uint64_t v53 = v67;
    View.listStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v50, v53);
    sub_1000143B4((uint64_t)v17, &qword_1000C9DC8);
    uint64_t v85 = static Color.clear.getter();
    swift_retain();
    uint64_t v54 = AnyView.init<A>(_:)();
    uint64_t v56 = v69;
    uint64_t v55 = v70;
    uint64_t v57 = (uint64_t)v65;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v65, v52, v70);
    swift_release();
    *(void *)(v57 + *(int *)(v78 + 36)) = v54;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v52, v55);
    uint64_t v58 = v71;
    sub_100017278(v57, v71, &qword_1000C9DB0);
    sub_100016FEC(v58, v77, &qword_1000C9DB0);
    swift_storeEnumTagMultiPayload();
    uint64_t v85 = v46;
    uint64_t v86 = v75;
    *(void *)&long long v87 = v51;
    *((void *)&v87 + 1) = &protocol witness table for InsetGroupedListStyle;
    swift_getOpaqueTypeConformance2();
    sub_100019580();
    _ConditionalContent<>.init(storage:)();
    return sub_1000143B4(v58, &qword_1000C9DB0);
  }
}

unint64_t sub_100019580()
{
  unint64_t result = qword_1000C9E20;
  if (!qword_1000C9E20)
  {
    sub_10001AD28(&qword_1000C9DB0);
    sub_10001AD28(&qword_1000C9DC8);
    type metadata accessor for SidebarListStyle();
    sub_100019674();
    swift_getOpaqueTypeConformance2();
    sub_100009170(&qword_1000C82C0, &qword_1000C82C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9E20);
  }
  return result;
}

unint64_t sub_100019674()
{
  unint64_t result = qword_1000C9E10;
  if (!qword_1000C9E10)
  {
    sub_10001AD28(&qword_1000C9DC8);
    sub_100009170(&qword_1000C9E18, &qword_1000C9DC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9E10);
  }
  return result;
}

uint64_t sub_100019714@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v5 = sub_10001C28C(&qword_1000C8CD0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001C28C(&qword_1000C9DF8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10001C28C(&qword_1000C9DE0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10001C28C(&qword_1000C9DD8);
  uint64_t v14 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100019ACC(a1, a2, (uint64_t)v10);
  uint64_t v17 = type metadata accessor for Text.Case();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 1, 1, v17);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  uint64_t v20 = sub_10001C28C(&qword_1000C8CF8);
  sub_100016FEC((uint64_t)v7, (uint64_t)v19 + *(int *)(v20 + 28), &qword_1000C8CD0);
  *uint64_t v19 = KeyPath;
  sub_100016FEC((uint64_t)v10, (uint64_t)v13, &qword_1000C9DF8);
  sub_1000143B4((uint64_t)v7, &qword_1000C8CD0);
  sub_1000143B4((uint64_t)v10, &qword_1000C9DF8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v21 = a2;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  static VerticalEdge.Set.all.getter();
  sub_100019A2C();
  View.listRowSeparator(_:edges:)();
  sub_1000143B4((uint64_t)v13, &qword_1000C9DE0);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v25, v16, v24);
}

unint64_t sub_100019A2C()
{
  unint64_t result = qword_1000C9DE8;
  if (!qword_1000C9DE8)
  {
    sub_10001AD28(&qword_1000C9DE0);
    sub_10001D0D4();
    sub_100009170(&qword_1000C8D10, &qword_1000C8CF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9DE8);
  }
  return result;
}

uint64_t sub_100019ACC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v84 = a3;
  uint64_t v5 = sub_10001C28C(&qword_1000C9E28);
  uint64_t v78 = *(void *)(v5 - 8);
  uint64_t v79 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v77 = (char *)v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v86 = (uint64_t)v72 - v8;
  uint64_t v9 = sub_10001C28C(&qword_1000C9E30);
  uint64_t v75 = *(void *)(v9 - 8);
  uint64_t v76 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v74 = (char *)v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v85 = (char *)v72 - v12;
  uint64_t v13 = sub_10001C28C(&qword_1000C9E38);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v83 = (char *)v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v81 = (uint64_t)v72 - v16;
  uint64_t v17 = sub_10001C28C(&qword_1000C9E40);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v82 = (uint64_t)v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v88 = (uint64_t)v72 - v20;
  uint64_t v21 = sub_10001C28C(&qword_1000C9E48);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10001C28C(&qword_1000C9E50);
  uint64_t v73 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10001C28C(&qword_1000C9E58);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10001C28C(&qword_1000C9E60);
  uint64_t v31 = __chkstk_darwin(v30 - 8);
  uint64_t v80 = (uint64_t)v72 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v87 = (uint64_t)v72 - v33;
  swift_getKeyPath();
  swift_getKeyPath();
  id v34 = a2;
  static Published.subscript.getter();

  swift_release();
  uint64_t v35 = swift_release();
  unint64_t v36 = (void *)v89;
  if (v89)
  {
    v72[1] = v21;
    __chkstk_darwin(v35);
    v72[-4] = v36;
    v72[-3] = a1;
    uint64_t OpaqueTypeConformance2 = (uint64_t)v34;
    sub_10001C28C(&qword_1000C9E78);
    sub_10001ACB4();
    Section<>.init(content:)();
    uint64_t v37 = v73;
    (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v23, v26, v24);
    swift_storeEnumTagMultiPayload();
    sub_10001AC34();
    _ConditionalContent<>.init(storage:)();

    (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v24);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_10001AC34();
    _ConditionalContent<>.init(storage:)();
  }
  sub_100017278((uint64_t)v29, v87, &qword_1000C9E58);
  sub_100018380(a1, v34, v88);
  swift_getKeyPath();
  swift_getKeyPath();
  id v38 = v34;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v89 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = *(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v39)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v40 = v38;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    unint64_t v95 = v89;
    swift_getKeyPath();
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = a1;
    *(void *)(v41 + 24) = v40;
    id v42 = v40;
    sub_10001C28C(&qword_1000C8B20);
    sub_10001C28C(&qword_1000C9EB0);
    sub_100009170(&qword_1000C9EB8, &qword_1000C8B20);
    uint64_t v43 = sub_10001AD28(&qword_1000C9248);
    uint64_t v44 = sub_10001AD28(&qword_1000C9EC0);
    unint64_t v45 = sub_10001AAC0();
    unint64_t v46 = sub_10001AB90();
    unint64_t v89 = v43;
    uint64_t v90 = v44;
    char v91 = &type metadata for EmptyView;
    unint64_t v92 = v45;
    unint64_t v93 = v46;
    unsigned __int8 v94 = &protocol witness table for EmptyView;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v47 = v85;
    ForEach<>.init(_:id:content:)();
    uint64_t v48 = v86;
    sub_10001AD70(a1, (uint64_t)v42, v86);
    uint64_t v50 = v75;
    uint64_t v49 = v76;
    unint64_t v51 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
    uint64_t v52 = v74;
    v51(v74, v47, v76);
    uint64_t v53 = v78;
    uint64_t v73 = *(void *)(v78 + 16);
    uint64_t v54 = v77;
    uint64_t v55 = v48;
    uint64_t v56 = v79;
    ((void (*)(char *, uint64_t, uint64_t))v73)(v77, v55, v79);
    uint64_t v57 = (uint64_t)v83;
    v51(v83, v52, v49);
    uint64_t v58 = sub_10001C28C(&qword_1000C9ED0);
    ((void (*)(uint64_t, char *, uint64_t))v73)(v57 + *(int *)(v58 + 48), v54, v56);
    uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
    v59(v86, v56);
    uint64_t v60 = *(void (**)(char *, uint64_t))(v50 + 8);
    v60(v85, v49);
    v59((uint64_t)v54, v56);
    v60(v52, v49);
    uint64_t v61 = sub_10001C28C(&qword_1000C9ED8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v57, 0, 1, v61);
    uint64_t v62 = v81;
    sub_100017278(v57, v81, &qword_1000C9E38);
  }
  else
  {
    uint64_t v63 = sub_10001C28C(&qword_1000C9ED8);
    uint64_t v62 = v81;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v81, 1, 1, v63);
    uint64_t v57 = (uint64_t)v83;
  }
  uint64_t v64 = v87;
  uint64_t v65 = v80;
  sub_100016FEC(v87, v80, &qword_1000C9E60);
  uint64_t v66 = v88;
  uint64_t v67 = v82;
  sub_100016FEC(v88, v82, &qword_1000C9E40);
  sub_100016FEC(v62, v57, &qword_1000C9E38);
  uint64_t v68 = v84;
  sub_100016FEC(v65, v84, &qword_1000C9E60);
  uint64_t v69 = sub_10001C28C(&qword_1000C9EE0);
  sub_100016FEC(v67, v68 + *(int *)(v69 + 48), &qword_1000C9E40);
  sub_100016FEC(v57, v68 + *(int *)(v69 + 64), &qword_1000C9E38);
  sub_1000143B4(v62, &qword_1000C9E38);
  sub_1000143B4(v66, &qword_1000C9E40);
  sub_1000143B4(v64, &qword_1000C9E60);
  sub_1000143B4(v57, &qword_1000C9E38);
  sub_1000143B4(v67, &qword_1000C9E40);
  return sub_1000143B4(v65, &qword_1000C9E60);
}

uint64_t sub_10001A54C(void *a1, uint64_t a2, void *a3)
{
  id v5 = [a1 collections];
  sub_1000067A4(0, (unint64_t *)&qword_1000CA260);
  static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_getKeyPath();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  id v7 = a3;
  sub_10001C28C(&qword_1000C8B10);
  type metadata accessor for CollectionListItemView();
  sub_100009170(&qword_1000C9EE8, &qword_1000C8B10);
  sub_1000171A4(&qword_1000C9EA8, (void (*)(uint64_t))type metadata accessor for CollectionListItemView);
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_10001A6C0@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v5 = type metadata accessor for Prominence();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10001C28C(&qword_1000C92B8);
  uint64_t v9 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10001C28C(&qword_1000C9248);
  __chkstk_darwin(v31);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10001C28C(&qword_1000C9F28);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v33 = v14;
  uint64_t v34 = v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v30 = *a1;
  id v18 = [v30 text];
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  uint64_t v41 = v19;
  uint64_t v42 = v21;
  sub_100016F88();
  swift_bridgeObjectRetain();
  uint64_t v41 = Text.init<A>(_:)();
  uint64_t v42 = v22;
  char v43 = v23 & 1;
  uint64_t v44 = v24;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Prominence.increased(_:), v5);
  View.headerProminence(_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100016FDC(v41, v42, v43);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v26 = v32;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v13, v11, v32);
  uint64_t v27 = &v13[*(int *)(v31 + 36)];
  *(void *)uint64_t v27 = KeyPath;
  *((void *)v27 + 1) = 0;
  v27[16] = 1;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v26);
  swift_bridgeObjectRelease();
  id v38 = v30;
  uint64_t v39 = v35;
  uint64_t v40 = v36;
  sub_10001C28C(&qword_1000C9EC0);
  sub_10001AAC0();
  sub_10001AB90();
  Section<>.init(header:content:)();
  uint64_t v28 = v33;
  Section<>.collapsible(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v28);
}

unint64_t sub_10001AAC0()
{
  unint64_t result = qword_1000C9240;
  if (!qword_1000C9240)
  {
    sub_10001AD28(&qword_1000C9248);
    swift_getOpaqueTypeConformance2();
    sub_100009170(&qword_1000C9250, &qword_1000C9258);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9240);
  }
  return result;
}

unint64_t sub_10001AB90()
{
  unint64_t result = qword_1000C9EC8;
  if (!qword_1000C9EC8)
  {
    sub_10001AD28(&qword_1000C9EC0);
    sub_1000171A4(&qword_1000C9EA8, (void (*)(uint64_t))type metadata accessor for CollectionListItemView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9EC8);
  }
  return result;
}

unint64_t sub_10001AC34()
{
  unint64_t result = qword_1000C9E68;
  if (!qword_1000C9E68)
  {
    sub_10001AD28(&qword_1000C9E50);
    sub_10001ACB4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9E68);
  }
  return result;
}

unint64_t sub_10001ACB4()
{
  unint64_t result = qword_1000C9E70;
  if (!qword_1000C9E70)
  {
    sub_10001AD28(&qword_1000C9E78);
    sub_10000820C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9E70);
  }
  return result;
}

uint64_t sub_10001AD28(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_10001AD70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v3 = type metadata accessor for Prominence();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10001C28C(&qword_1000C92B8);
  uint64_t v7 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Locale();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = sub_10001C28C(&qword_1000C9248);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10001C28C(&qword_1000C9F00);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v28 = v15;
  uint64_t v29 = v16;
  __chkstk_darwin(v15);
  id v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v36 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v37 = v19;
  sub_100016F88();
  swift_bridgeObjectRetain();
  uint64_t v36 = Text.init<A>(_:)();
  uint64_t v37 = v20;
  char v38 = v21 & 1;
  uint64_t v39 = v22;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Prominence.increased(_:), v3);
  View.headerProminence(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_100016FDC(v36, v37, v38);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v24 = v30;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v14, v9, v30);
  uint64_t v25 = &v14[*(int *)(v12 + 36)];
  *(void *)uint64_t v25 = KeyPath;
  *((void *)v25 + 1) = 0;
  v25[16] = 1;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v24);
  swift_bridgeObjectRelease();
  uint64_t v34 = v31;
  uint64_t v35 = v32;
  sub_10001C28C(&qword_1000C9F08);
  sub_10001AAC0();
  sub_10001B210();
  Section<>.init(header:content:)();
  uint64_t v26 = v28;
  Section<>.collapsible(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v18, v26);
}

unint64_t sub_10001B210()
{
  unint64_t result = qword_1000C9F10;
  if (!qword_1000C9F10)
  {
    sub_10001AD28(&qword_1000C9F08);
    sub_1000171A4(&qword_1000C9F18, (void (*)(uint64_t))type metadata accessor for UserGuideListItemView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9F10);
  }
  return result;
}

unsigned char *sub_10001B2B4()
{
  return sub_10001B2D8();
}

unsigned char *sub_10001B2D8()
{
  uint64_t v1 = sub_10001C28C(&qword_1000C9690);
  uint64_t v20 = *(void *)(v1 - 8);
  uint64_t v21 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001C28C(&qword_1000C9698);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001C28C(&qword_1000C8518);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = &v0[qword_1000C9608];
  LOBYTE(v23) = 0;
  uint64_t v13 = v0;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  uint64_t v14 = &v13[qword_1000C9610];
  type metadata accessor for SearchResultsModel();
  swift_allocObject();
  char v23 = (void *)SearchResultsModel.init()();
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v14, v7, v4);
  uint64_t v15 = &v13[qword_1000C9618];
  char v23 = _swiftEmptyArrayStorage;
  sub_10001C28C((uint64_t *)&unk_1000C9670);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v15, v3, v21);
  *(void *)&v13[qword_1000C9620] = &_swiftEmptySetSingleton;

  uint64_t v16 = (objc_class *)type metadata accessor for SearchResultsViewModel();
  v22.receiver = v13;
  v22.super_class = v16;
  uint64_t v17 = [super init];
  sub_10005AA9C();
  v17[qword_1000CD1A0] = 0;

  return v17;
}

uint64_t type metadata accessor for SearchResultsViewModel()
{
  uint64_t result = qword_1000C9628;
  if (!qword_1000C9628) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_10001B624()
{
  return sub_10001B648();
}

id sub_10001B648()
{
  uint64_t v1 = sub_10001C28C(&qword_1000C8990);
  uint64_t v41 = *(void *)(v1 - 8);
  uint64_t v42 = v1;
  __chkstk_darwin(v1);
  uint64_t v40 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10001C28C(&qword_1000C89A8);
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v39 = v3;
  __chkstk_darwin(v3);
  uint64_t v37 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001C28C(&qword_1000C9780);
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001C28C(&qword_1000C9788);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001C28C(&qword_1000C8518);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = &v0[qword_1000C96E0];
  LOBYTE(v44) = 0;
  uint64_t v17 = v0;
  Published.init(initialValue:)();
  id v18 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v18(v16, v15, v12);
  uint64_t v19 = &v17[qword_1000C96E8];
  id v44 = [objc_allocWithZone((Class)TPSCollection) init];
  sub_10001BC1C();
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v19, v11, v8);
  uint64_t v20 = &v17[qword_1000C96F0];
  LOBYTE(v44) = 0;
  Published.init(initialValue:)();
  v18(v20, v15, v12);
  uint64_t v21 = &v17[qword_1000C96F8];
  LOBYTE(v44) = 0;
  Published.init(initialValue:)();
  v18(v21, v15, v12);
  objc_super v22 = &v17[qword_1000C9700];
  id v44 = 0;
  Published.init(initialValue:)();
  uint64_t v23 = v36;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
  v24(v22, v7, v36);
  uint64_t v25 = &v17[qword_1000C9708];
  id v44 = 0;
  Published.init(initialValue:)();
  v24(v25, v7, v23);
  uint64_t v26 = &v17[qword_1000C9710];
  id v44 = 0;
  uint64_t v45 = 0;
  sub_10001C28C(&qword_1000C81A8);
  uint64_t v27 = v37;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v26, v27, v39);
  uint64_t v28 = &v17[qword_1000C9718];
  id v44 = *(id *)aEmpty;
  uint64_t v45 = unk_1000CA118;
  uint64_t v46 = qword_1000CA120;
  uint64_t v47 = unk_1000CA128;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = v40;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v28, v29, v42);
  v17[qword_1000CD1A0] = 1;
  v17[qword_1000CD1A8] = 0;
  v17[qword_1000CD1B0] = 0;
  uint64_t v30 = &v17[qword_1000CD1B8];
  *(void *)uint64_t v30 = 0;
  *((void *)v30 + 1) = 0;
  uint64_t v31 = &v17[qword_1000CD1C0];
  *(void *)uint64_t v31 = 0;
  *((void *)v31 + 1) = 0;
  uint64_t v32 = &v17[qword_1000CD1C8];
  *(void *)uint64_t v32 = 0;
  *((void *)v32 + 1) = 0;
  v17[qword_1000CD1D0] = 0;

  uint64_t v33 = (objc_class *)type metadata accessor for TipListViewModel(0);
  v43.receiver = v17;
  v43.super_class = v33;
  return [super init];
}

uint64_t sub_10001BBC4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for TipListViewModel(uint64_t a1)
{
  return sub_10001BBC4(a1, (uint64_t *)&unk_1000C9720);
}

unint64_t sub_10001BC1C()
{
  unint64_t result = qword_1000CA260;
  if (!qword_1000CA260)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000CA260);
  }
  return result;
}

char *sub_10001BC5C(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_10001BC7C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_10001BC7C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10001C28C(&qword_1000C9790);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *initializeWithCopy for TipCollection(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10001BDC4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  id v44 = (char *)a1;
  uint64_t v48 = a2;
  uint64_t v2 = sub_10001C28C(&qword_1000CA248);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  char v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  int64_t v7 = (char *)v39 - v6;
  uint64_t v8 = sub_10001C28C(&qword_1000CA250);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v47 = (uint64_t)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  objc_super v43 = (char *)v39 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v39 - v13;
  uint64_t v15 = type metadata accessor for LocalizedStringResource();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v45 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v39 - v19;
  swift_bridgeObjectRetain();
  uint64_t v46 = v20;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v40(v14, 1, 1, v15);
  uint64_t v21 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56);
  uint64_t v41 = v22 + 56;
  uint64_t v42 = v23;
  v23((uint64_t)v7, 1, 1, v21);
  type metadata accessor for TPSUIAppController();
  uint64_t v24 = (void *)static TPSUIAppController.shared.getter();
  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [v24 collectionForIdentifier:v25];

  uint64_t v27 = (uint64_t)v5;
  if (v26)
  {
    id v28 = [v26 tocAssets];
    if (v28)
    {
      uint64_t v29 = v28;
      id v44 = v7;
      uint64_t v30 = v5;
      id v31 = [v28 symbolId];

      if (v31)
      {
        uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v39[1] = v33;
        v39[2] = v32;

        id v34 = [v26 text];
        if (v34)
        {
          uint64_t v35 = v34;
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
        uint64_t v36 = (uint64_t)v43;
        LocalizedStringResource.init(stringLiteral:)();
        sub_1000143B4((uint64_t)v14, &qword_1000CA250);
        v40((char *)v36, 0, 1, v15);
        sub_100017278(v36, (uint64_t)v14, &qword_1000CA250);
        uint64_t v27 = (uint64_t)v30;
        DisplayRepresentation.Image.init(systemName:isTemplate:)();

        int64_t v7 = v44;
        sub_1000143B4((uint64_t)v44, &qword_1000CA248);
        v42(v27, 0, 1, v21);
        sub_100017278(v27, (uint64_t)v7, &qword_1000CA248);
      }
      else
      {

        uint64_t v27 = (uint64_t)v5;
        int64_t v7 = v44;
      }
    }
    else
    {
    }
  }
  uint64_t v37 = v46;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v45, v46, v15);
  sub_100016FEC((uint64_t)v14, v47, &qword_1000CA250);
  sub_100016FEC((uint64_t)v7, v27, &qword_1000CA248);
  DisplayRepresentation.init(title:subtitle:image:)();
  sub_1000143B4((uint64_t)v7, &qword_1000CA248);
  sub_1000143B4((uint64_t)v14, &qword_1000CA250);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v37, v15);
}

uint64_t sub_10001C28C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void sub_10001C2D0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 identifier];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

uint64_t sub_10001C32C@<X0>(uint64_t a1@<X8>)
{
  return sub_10001BDC4(*(void *)(v1 + 8), a1);
}

__n128 initializeWithTake for TipCollection(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_10001C344@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10001C350(uint64_t a1)
{
  unint64_t v2 = sub_10001C38C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_10001C38C()
{
  unint64_t result = qword_1000C96C8;
  if (!qword_1000C96C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C96C8);
  }
  return result;
}

void sub_10001C3E4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void type metadata accessor for Key(uint64_t a1)
{
}

uint64_t sub_10001C440()
{
  return sub_10001A54C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

ValueMetadata *type metadata accessor for TipCollection()
{
  return &type metadata for TipCollection;
}

uint64_t sub_10001C45C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001A6C0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t type metadata accessor for ScrollVerticallyTestSupport()
{
  uint64_t result = qword_1000CAB50;
  if (!qword_1000CAB50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionListView()
{
  return &type metadata for CollectionListView;
}

void destroy for CollectionListView(uint64_t a1)
{
}

ValueMetadata *type metadata accessor for CollectionOpenIntent()
{
  return &type metadata for CollectionOpenIntent;
}

uint64_t getEnumTagSinglePayload for TipCollection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

unint64_t sub_10001C534()
{
  unint64_t result = qword_1000CA170;
  if (!qword_1000CA170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA170);
  }
  return result;
}

const char *sub_10001C588()
{
  return "identifier";
}

uint64_t sub_10001C594(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001C5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001C5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001C5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001C5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001C5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001C5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001C604(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001C614(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001C624(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001C634(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001C644(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001C654(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

id sub_10001C664@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_1000058CC(a1, a2);
}

uint64_t sub_10001C670@<X0>(uint64_t a1@<X8>)
{
  return sub_10000E020(*(void *)(v1 + 16), a1);
}

double sub_10001C678@<D0>(uint64_t a1@<X8>)
{
  return sub_10000BA08(*(void *)v1, *(void **)(v1 + 8), a1);
}

uint64_t sub_10001C684@<X0>(uint64_t a1@<X8>)
{
  return sub_100019714(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_10001C68C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100004D54(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_10001C694()
{
  return sub_100008B54(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10001C69C()
{
  return sub_100008054(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10001C6A8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10000B358(a1, *(void **)(v2 + 24), a2);
}

void sub_10001C6B0()
{
  sub_10001C8C4(319, (unint64_t *)&qword_1000C8908);
  if (v0 <= 0x3F)
  {
    sub_10001D4B0(319, &qword_1000C9758, (uint64_t (*)(uint64_t))sub_10001BC1C, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
    if (v1 <= 0x3F)
    {
      sub_10001C8C4(319, (unint64_t *)&unk_1000C9760);
      if (v2 <= 0x3F)
      {
        sub_10001D5C8();
        if (v3 <= 0x3F)
        {
          sub_10001C8C4(319, &qword_1000C8948);
          if (v4 <= 0x3F) {
            swift_initClassMetadata2();
          }
        }
      }
    }
  }
}

void sub_10001C8C4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for Published();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unint64_t sub_10001C90C()
{
  unint64_t result = qword_1000CA1B8;
  if (!qword_1000CA1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA1B8);
  }
  return result;
}

uint64_t sub_10001C960()
{
  return swift_release();
}

uint64_t sub_10001C968()
{
  return swift_release();
}

uint64_t sub_10001C970()
{
  return swift_release();
}

uint64_t sub_10001C978()
{
  return swift_release();
}

uint64_t sub_10001C980()
{
  return swift_release();
}

uint64_t sub_10001C988()
{
  return swift_release();
}

uint64_t sub_10001C990()
{
  return swift_release();
}

uint64_t sub_10001C998()
{
  return swift_release();
}

uint64_t sub_10001C9A0()
{
  return swift_release();
}

uint64_t sub_10001C9A8()
{
  return swift_release();
}

uint64_t sub_10001C9B0()
{
  return swift_release();
}

uint64_t sub_10001C9B8()
{
  return swift_release();
}

uint64_t sub_10001C9C0()
{
  return swift_release();
}

__n128 initializeWithTake for SearchResultItemOnTapModifier(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *sub_10001C9D4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_10001C9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16) {
            break;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_10001CB5C()
{
  return sub_10001CBA4(&qword_1000C8090, type metadata accessor for Key);
}

uint64_t sub_10001CBA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10001CBEC()
{
  unint64_t result = qword_1000C8B78;
  if (!qword_1000C8B78)
  {
    sub_1000067A4(255, (unint64_t *)&qword_1000CA260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8B78);
  }
  return result;
}

unint64_t sub_10001CC54()
{
  unint64_t result = qword_1000CA178;
  if (!qword_1000CA178)
  {
    sub_10001AD28(qword_1000CA180);
    sub_10001C534();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA178);
  }
  return result;
}

uint64_t sub_10001CCC8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *unint64_t v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_10001CE94(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_10001CE94(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_10003F2BC();
          swift_bridgeObjectRetain();
          for (unint64_t i = 0; i != v7; ++i)
          {
            sub_10001C28C(&qword_1000C8980);
            uint64_t v10 = sub_10003EB5C(v13, i, a3);
            id v12 = *v11;
            ((void (*)(void (**)(id *), void))v10)(v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_1000067A4(0, (unint64_t *)&qword_1000C8330);
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10001D044(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001D08C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10001D0D4()
{
  unint64_t result = qword_1000C9DF0;
  if (!qword_1000C9DF0)
  {
    sub_10001AD28(&qword_1000C9DF8);
    sub_100009170(&qword_1000C9E00, &qword_1000C9E08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9DF0);
  }
  return result;
}

unint64_t sub_10001D16C()
{
  unint64_t result = qword_1000C9F38;
  if (!qword_1000C9F38)
  {
    sub_10001AD28((uint64_t *)&unk_1000C9F40);
    sub_100009170(&qword_1000C9D98, &qword_1000C9D90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9F38);
  }
  return result;
}

unint64_t sub_10001D20C()
{
  unint64_t result = qword_1000C9560;
  if (!qword_1000C9560)
  {
    sub_10001AD28(&qword_1000C9568);
    sub_100018228();
    sub_100009170(&qword_1000C9580, &qword_1000C9588);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9560);
  }
  return result;
}

unint64_t sub_10001D2AC()
{
  unint64_t result = qword_1000C9528;
  if (!qword_1000C9528)
  {
    sub_10001AD28(&qword_1000C9530);
    sub_100009170(&qword_1000C9538, &qword_1000C9540);
    sub_100018164();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9528);
  }
  return result;
}

unint64_t sub_10001D34C()
{
  unint64_t result = qword_1000C95E0;
  if (!qword_1000C95E0)
  {
    sub_10001AD28(&qword_1000C95E8);
    sub_100018228();
    sub_100009170(&qword_1000C8E28, &qword_1000C8E30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C95E0);
  }
  return result;
}

uint64_t sub_10001D3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001C28C(&qword_1000C81C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10001D454()
{
  if (!qword_1000CA2E0)
  {
    sub_10001AD28(&qword_1000C81D8);
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000CA2E0);
    }
  }
}

void sub_10001D4B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_10001D514()
{
  if (!qword_1000C8908)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000C8908);
    }
  }
}

void sub_10001D56C()
{
  if (!qword_1000C9668)
  {
    sub_10001AD28((uint64_t *)&unk_1000C9670);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000C9668);
    }
  }
}

void sub_10001D5C8()
{
  if (!qword_1000C8920)
  {
    sub_10001AD28(&qword_1000C81A8);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000C8920);
    }
  }
}

void sub_10001D624()
{
  if (!qword_1000C8B00)
  {
    type metadata accessor for ChecklistViewModel();
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000C8B00);
    }
  }
}

void sub_10001D67C(char *a1)
{
}

BOOL sub_10001D6CC()
{
  return sub_100004F68();
}

uint64_t sub_10001D71C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for SearchResultsViewController()
{
  uint64_t result = qword_1000C80D0;
  if (!qword_1000C80D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001D7BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001D7D8()
{
  return type metadata accessor for CollectionListViewModel();
}

char *sub_10001D7E0(void **a1)
{
  return sub_100005F74(a1);
}

void *sub_10001D7E8()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t type metadata accessor for TPSSplitViewController()
{
  return self;
}

void sub_10001D898()
{
  sub_10001D514();
  if (v0 <= 0x3F)
  {
    sub_10005B288();
    if (v1 <= 0x3F)
    {
      sub_10001D56C();
      if (v2 <= 0x3F) {
        swift_initClassMetadata2();
      }
    }
  }
}

unint64_t sub_10001D9B0()
{
  unint64_t result = qword_1000C81B0;
  if (!qword_1000C81B0)
  {
    type metadata accessor for SearchResultsViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C81B0);
  }
  return result;
}

void sub_10001DA08()
{
  sub_1000036F4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10001DAC0()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_10001DADC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001DAF8(char a1)
{
  return sub_10000E5BC(a1);
}

uint64_t sub_10001DB5C()
{
  return sub_10001DAF8(1);
}

uint64_t sub_10001DB64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001DB80()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10001DC2C()
{
  unint64_t result = qword_1000C9D10;
  if (!qword_1000C9D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9D10);
  }
  return result;
}

unint64_t sub_10001DC80()
{
  unint64_t result = qword_1000C9D18;
  if (!qword_1000C9D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9D18);
  }
  return result;
}

uint64_t sub_10001DCE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001DCFC()
{
  return sub_100003AB4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10001DD08()
{
  return sub_100008780(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10001DD10@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100068A28(a1, *(void **)(v2 + 24), a2);
}

uint64_t sub_10001DD18()
{
  return sub_100005758(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

void sub_10001DD38()
{
  sub_10001D454();
  if (v0 <= 0x3F)
  {
    sub_1000036F4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t type metadata accessor for SearchResultsView()
{
  uint64_t result = qword_1000CA2D0;
  if (!qword_1000CA2D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001DE60()
{
  return type metadata accessor for TipListViewModel(0);
}

unint64_t sub_10001DE68()
{
  unint64_t result = qword_1000CA1A8;
  if (!qword_1000CA1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA1A8);
  }
  return result;
}

unint64_t sub_10001DEBC()
{
  unint64_t result = qword_1000CA1D8;
  if (!qword_1000CA1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA1D8);
  }
  return result;
}

unint64_t sub_10001DF10()
{
  unint64_t result = qword_1000CA1C0;
  if (!qword_1000CA1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA1C0);
  }
  return result;
}

unint64_t sub_10001DF64()
{
  unint64_t result = qword_1000CA1B0;
  if (!qword_1000CA1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA1B0);
  }
  return result;
}

unint64_t sub_10001DFB8()
{
  unint64_t result = qword_1000CA1A0;
  if (!qword_1000CA1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA1A0);
  }
  return result;
}

unint64_t sub_10001E00C()
{
  unint64_t result = qword_1000CA150[0];
  if (!qword_1000CA150[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000CA150);
  }
  return result;
}

unint64_t sub_10001E060()
{
  unint64_t result = qword_1000CA198;
  if (!qword_1000CA198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA198);
  }
  return result;
}

void *sub_10001E0D4()
{
  return &protocol witness table for String;
}

ValueMetadata *type metadata accessor for TipCollection.TipCollectionQuery()
{
  return &type metadata for TipCollection.TipCollectionQuery;
}

unint64_t sub_10001E0F8()
{
  unint64_t result = qword_1000CA148;
  if (!qword_1000CA148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA148);
  }
  return result;
}

unint64_t sub_10001E14C()
{
  unint64_t result = qword_1000CA140;
  if (!qword_1000CA140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA140);
  }
  return result;
}

unint64_t sub_10001E1A0()
{
  unint64_t result = qword_1000CA168;
  if (!qword_1000CA168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA168);
  }
  return result;
}

unint64_t sub_10001E1F4()
{
  unint64_t result = qword_1000CA130;
  if (!qword_1000CA130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA130);
  }
  return result;
}

uint64_t destroy for TipListView(uint64_t a1)
{
  return swift_release();
}

uint64_t initializeWithCopy for TipListView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  id v4 = v3;
  swift_retain();
  return a1;
}

ValueMetadata *type metadata accessor for TipListView()
{
  return &type metadata for TipListView;
}

ValueMetadata *type metadata accessor for TipsAppShortcuts()
{
  return &type metadata for TipsAppShortcuts;
}

unint64_t sub_10001E308()
{
  unint64_t result = qword_1000C8A48;
  if (!qword_1000C8A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8A48);
  }
  return result;
}

void sub_10001EE24(id a1)
{
  id v1 = objc_alloc_init((Class)NSOperationQueue);
  uint64_t v2 = (void *)qword_1000CAC98;
  qword_1000CAC98 = (uint64_t)v1;

  uint64_t v3 = (void *)qword_1000CAC98;

  _[v3 setMaxConcurrentOperationCount:1];
}

void sub_10002189C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);
  _Unwind_Resume(a1);
}

void sub_1000218F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained contentParser];
  [v2 setDelegate:WeakRetained];

  uint64_t v3 = [WeakRetained tip];
  uint64_t v20 = [v3 identifier];

  id v4 = [WeakRetained tip];
  uint64_t v5 = [v4 fullContentAssets];
  uint64_t v19 = [v5 baseURL];

  unint64_t v6 = [WeakRetained tip];
  uint64_t v7 = [v6 language];

  unint64_t v8 = [WeakRetained tip];
  uint64_t v9 = [v8 assetFileInfoManager];

  LOBYTE(v2) = [WeakRetained isSharedVariant] ^ 1;
  uint64_t v10 = [WeakRetained contentParser];
  uint64_t v11 = [WeakRetained tip];
  id v12 = [v11 bodyContent];
  uint64_t v13 = *(void *)(a1 + 32);
  id v25 = 0;
  LOBYTE(v18) = (_BYTE)v2;
  uint64_t v14 = (void *)v9;
  uint64_t v15 = [v10 attributedStringForConstellationContent:v12 defaultAttributes:v13 identifier:v20 language:v7 assetsBaseURL:v19 assetFileInfoManager:v9 supportsLinks:v18 error:&v25];
  id v16 = v25;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100021B24;
  block[3] = &unk_1000B7530;
  block[4] = WeakRetained;
  objc_copyWeak(&v24, (id *)(a1 + 48));
  id v23 = v15;
  id v17 = v15;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v24);
}

id sub_100021B24(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) contentParser];
  [*(id *)(a1 + 32) setBodyContentProcessingCount:[v2 numOfActiveRemoteURLSessions]];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v4 = [*(id *)(a1 + 32) uniqueIdentifierForCurrentTip];
  unsigned int v5 = [WeakRetained isEqualToString:v4];

  if (v5)
  {
    unint64_t v6 = [*(id *)(a1 + 32) appController];
    uint64_t v7 = *(void *)(a1 + 40);
    unint64_t v8 = [*(id *)(a1 + 32) tip];
    uint64_t v9 = [v8 identifier];
    [v6 updateAttributedString:v7 forIdentifier:v9];

    [*(id *)(a1 + 32) updateAttributedStringWithCache];
  }
  [*(id *)(a1 + 32) setContentTextOperation:0];
  [*(id *)(a1 + 32) setContentTextOperationID:0];
  uint64_t v10 = *(void **)(a1 + 32);

  return [v10 updateImageReadyStatus];
}

void sub_100022794(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) delegate];
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = [*(id *)(a1 + 32) delegate];
    char v5 = objc_opt_respondsToSelector();

    if (v5)
    {
      id v6 = [*(id *)(a1 + 32) delegate];
      [v6 performSelector:"tipCollectionViewCellSharedTipTapped:" withObject:*(void *)(a1 + 32)];
    }
  }
}

void sub_100022858(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) link];
  [v1 handleTipsURL:v2];
}

void sub_100023C60(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void sub_10002408C(uint64_t a1)
{
  id v2 = +[UIApplication sharedApplication];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100024144;
  v4[3] = &unk_1000B75D0;
  uint64_t v3 = *(void **)(a1 + 40);
  v4[4] = *(void *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 56);
  id v5 = v3;
  uint64_t v6 = *(void *)(a1 + 48);
  [v2 installCACommitCompletionBlock:v4];
}

void sub_100024144(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) appDelegate];
  uint64_t v3 = [v2 tipsByCollectionViewController];
  id v9 = [v3 collectionView];

  if (*(unsigned char *)(a1 + 56))
  {
    id v4 = [objc_alloc((Class)RPTDirectionalSwipeTestParameters) initWithTestName:*(void *)(a1 + 40) scrollView:v9 completionHandler:0];
    RPTGetBoundsForView();
    double x = v11.origin.x;
    double y = v11.origin.y;
    double width = v11.size.width;
    double Height = CGRectGetHeight(v11);
    if (Height > 0.0) {
      [v4 setScrollingBounds:x + 30.0, y + 0.0, width + -60.0, round(Height / 3.0)];
    }
    [v4 setDirection:2];
    [v4 setSwipeSpeedFactor:&off_1000BA018];
    [v4 setShouldFlick:1];
    +[RPTTestRunner runTestWithParameters:v4];
  }
  else
  {
    [v9 _performScrollTest:*(void *)(a1 + 40) iterations:*(unsigned int *)(a1 + 48) delta:*(unsigned int *)(a1 + 52) scrollAxis:1];
  }
}

void sub_100025FF4(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained networkStateDidChange:a2];
}

void sub_100028624(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100028648(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [*(id *)(a1 + 32) searchResultViewModel];
  uint64_t v3 = [v2 searchQuery];
  id v4 = [v3 searchTerm];

  if (![v4 length])
  {
    id v5 = [WeakRetained searchResultViewModel];
    [v5 reset];
  }
}

void sub_100029BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = +[NSIndexPath indexPathForRow:a3 inSection:0];
  id v4 = [*(id *)(a1 + 32) collectionView];
  id v5 = [v4 cellForItemAtIndexPath:v6];

  if (v5) {
    [*(id *)(a1 + 40) addObject:v6];
  }
}

void sub_100029C7C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) collectionView];
  [v2 reconfigureItemsAtIndexPaths:*(void *)(a1 + 40)];
}

void sub_100029ED0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 120));
  _Unwind_Resume(a1);
}

void sub_100029EF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reconfigureAllCollectionViewItems];
  [WeakRetained ensureCurrentTipPositionWithViewSize:*(double *)(a1 + 40), *(double *)(a1 + 48)];
}

void sub_100029F4C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setUpdatingSize:0];
  [WeakRetained setScrollingTipContent:0];
  if (!*(unsigned char *)(a1 + 64))
  {
    id v2 = [WeakRetained appController];
    unsigned __int8 v3 = [v2 appInBackground];

    if ((v3 & 1) == 0)
    {
      id v4 = [*(id *)(a1 + 32) delegate];
      [WeakRetained updateTipForCell:0 startVideo:[v4 tipsViewControllerShouldStartVideo:*(void *)(a1 + 32)]];
    }
  }
  [WeakRetained _adjustScrollViewPagingDecelerationForSize:*(double *)(a1 + 48) *(double *)(a1 + 56)];
  [WeakRetained resetSearchController];
  id v5 = [*(id *)(a1 + 32) view];
  [v5 setNeedsLayout];
}

void sub_10002A1EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10002A210(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  char v7 = [a2 identifier];
  unint64_t v8 = [*(id *)(a1 + 32) currentTip];
  id v9 = [v8 identifier];
  unsigned int v10 = [v7 isEqualToString:v9];

  if (v10)
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a3;
    *a4 = 1;
  }
}

id sub_10002BB84(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = a3;
  [v4 cancelAssetsPrefetch];
  id v6 = [*(id *)(a1 + 32) appController];
  [v6 resetAttributedStringCache];

  char v7 = [*(id *)(a1 + 32) traitCollection];
  unsigned int v8 = [v7 hasDifferentColorAppearanceComparedToTraitCollection:v5];

  if (v8)
  {
    id v9 = *(void **)(a1 + 32);
    unsigned int v10 = [v9 traitCollection];
    [v9 updateContentBackgroundWithTraitCollection:v10];

    CGRect v11 = [*(id *)(a1 + 32) traitCollection];
    id v12 = [v11 userInterfaceStyle];
    uint64_t v13 = [*(id *)(a1 + 32) cellAppearance];
    [v13 setUserInterfaceStyle:v12];

    [*(id *)(a1 + 32) reconfigureAllCollectionViewItems];
  }
  uint64_t v14 = *(void **)(a1 + 32);

  return [v14 updateTipForCell:0 startVideo:1];
}

void sub_10002C494(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) playerController];
  [v1 autoplay:0];
}

void sub_10002E598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10002E5D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  unsigned __int8 v3 = [*(id *)(a1 + 32) identifier];
  id v4 = [*(id *)(a1 + 32) fullContentAssets];
  id v5 = [v4 baseURL];

  id v6 = [*(id *)(a1 + 32) language];
  char v7 = [*(id *)(a1 + 32) assetFileInfoManager];
  char v8 = [WeakRetained isSharedVariant] ^ 1;
  id v9 = [WeakRetained footnoteContentParser];
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  id v22 = 0;
  LOBYTE(v16) = v8;
  id v12 = [v9 attributedStringForConstellationContent:v10 defaultAttributes:v11 identifier:v3 language:v6 assetsBaseURL:v5 assetFileInfoManager:v7 supportsLinks:v16 error:&v22];
  id v13 = v22;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10002E780;
  block[3] = &unk_1000B7760;
  id v18 = *(id *)(a1 + 56);
  id v19 = WeakRetained;
  id v20 = v12;
  id v21 = v3;
  id v14 = v3;
  id v15 = v12;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_10002E780(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  unsigned __int8 v3 = [*(id *)(a1 + 40) uniqueIdentifierForCurrentTip];
  LODWORD(v2) = [v2 hasPrefix:v3];

  if (v2)
  {
    id v4 = [*(id *)(a1 + 40) appController];
    uint64_t v5 = *(void *)(a1 + 48);
    id v6 = [*(id *)(a1 + 40) tip];
    char v7 = [v6 identifier];
    [v4 updateFootnoteAttributedString:v5 forIdentifier:v7];

    uint64_t v8 = *(void *)(a1 + 48);
    id v9 = [*(id *)(a1 + 40) footnoteTextView];
    [v9 setAttributedText:v8];

    uint64_t v10 = *(void *)(a1 + 56);
    uint64_t v11 = [*(id *)(a1 + 40) footnoteTextView];
    [v11 setTipID:v10];

    id v12 = [*(id *)(a1 + 40) footnoteTextView];
    [v12 setHidden:0];
  }
  [*(id *)(a1 + 40) setFootnoteContentTextOperation:0];
  id v13 = *(void **)(a1 + 40);

  return [v13 setFootnoteContentTextOperationID:0];
}

void sub_10002FB68(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (+[TPSCommonDefines isChecklistCollectionWithIdentifier:v5])
  {
    id v4 = +[TPSAnalyticsChecklistSessionController sharedInstance];
    [v4 startSession];
  }
  else
  {
    [WeakRetained logAnalyticsEventForChecklistSession];
  }
  if (([*(id *)(a1 + 32) pendingColumnSwitching] & 1) == 0) {
    [WeakRetained displayCollectionID:v5 tipID:0 preferredColumn:1];
  }
}

void sub_10002FC20(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v4 = +[TPSCommonDefines checklistCollectionIdentifier];
  id v5 = [v3 identifier];

  [WeakRetained displayCollectionID:v4 tipID:v5 preferredColumn:2];
  id v6 = +[TPSAnalyticsChecklistSessionController sharedInstance];
  [v6 startSession];
}

void sub_10002FCD8(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained logAnalyticsEventForChecklistSession];
  id v4 = [v3 identifier];
  id v5 = [v3 version];
  id v6 = [v3 platformIndependent];

  [WeakRetained displayUserGuideWithIdentifier:v4 topicId:0 version:v5 platformIndependent:v6 prefersLandingPage:0];
}

void sub_10002FD88(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  id v5 = [WeakRetained tipListViewController];
  id v6 = [v5 viewModel];
  char v7 = [v6 collection];
  uint64_t v8 = [v7 identifier];

  id v9 = [WeakRetained tipsByCollectionViewController];
  uint64_t v10 = [v4 identifier];

  [v9 updateWithCollectionID:v8 tipID:v10];
  if (([*(id *)(a1 + 32) pendingColumnSwitching] & 1) == 0) {
    [*(id *)(a1 + 32) showTipsView];
  }
}

id sub_100030310(uint64_t a1)
{
  if ([*(id *)(a1 + 32) length]) {
    uint64_t v2 = 2;
  }
  else {
    uint64_t v2 = 1;
  }
  id v3 = *(void **)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 32);

  return [v3 displayCollectionID:v4 tipID:v5 preferredColumn:v2];
}

void sub_10003051C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) splitViewController];
  [v2 showColumn:*(void *)(a1 + 40)];
}

void sub_100030570(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained showCollectionsView];
}

void sub_100030DCC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) length] || !*(unsigned char *)(a1 + 40)) {
    [v3 setSelectedHelpTopicID:*(void *)(a1 + 32)];
  }
  else {
    [v3 setPrefersLandingViewOnLoad:1];
  }
}

void sub_100030E40(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) text];
  id v4 = +[HLPHelpViewController helpViewControllerWithTitle:v2 identifier:*(void *)(a1 + 40) version:*(void *)(a1 + 48)];

  [v4 setDelegate:*(void *)(a1 + 56)];
  (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
  [v4 setShowTopicViewOnLoad:1];
  [v4 setPlatformIndependent:*(unsigned __int8 *)(a1 + 72)];
  [*(id *)(a1 + 56) setUserGuideDisplayed:1];
  id v3 = [objc_alloc((Class)UINavigationController) initWithRootViewController:v4];
  [v3 setModalPresentationStyle:1];
  [*(id *)(a1 + 56) presentViewController:v3 animated:1 completion:0];
}

BOOL sub_100031AE8(id a1, NSURLQueryItem *a2)
{
  id v2 = [(NSURLQueryItem *)a2 name];
  unsigned __int8 v3 = [v2 isEqualToString:TPSTipURLSchemeParameterSearchTermKey];

  return v3;
}

void sub_1000321A0(uint64_t a1)
{
  [*(id *)(a1 + 32) showCollectionsView];
  id v2 = [*(id *)(a1 + 32) collectionListViewController];
  unsigned __int8 v3 = [v2 navigationController];
  id v4 = [v3 popToRootViewControllerAnimated:0];

  id v5 = [*(id *)(a1 + 32) collectionListViewController];
  [v5 searchWithSearchQuery:*(void *)(a1 + 40)];
}

void sub_100032238(uint64_t a1)
{
  [*(id *)(a1 + 32) showTipsView];
  id v2 = [*(id *)(a1 + 32) tipsByCollectionViewController];
  [v2 searchWithSearchQuery:*(void *)(a1 + 40)];
}

void sub_100033384(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

id sub_100033FD4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) model];
  if ((unint64_t)result < 2) {
    return [*(id *)(a1 + 32) parallaxFactor];
  }
  return result;
}

uint64_t variable initialization expression of TPSLastDisplayedContent.tipId()
{
  return 0;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t sub_1000340EC(uint64_t a1, uint64_t a2)
{
  return sub_10003458C(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_100034114(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_10003418C(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_10003420C@<X0>(void *a1@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void type metadata accessor for ActivityType(uint64_t a1)
{
}

uint64_t sub_100034268(uint64_t a1)
{
  uint64_t v2 = sub_10001CBA4(&qword_1000C80A8, type metadata accessor for Key);
  uint64_t v3 = sub_10001CBA4(&qword_1000C80B0, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100034324()
{
  return sub_10001CBA4(&qword_1000C8068, type metadata accessor for Key);
}

uint64_t sub_10003436C()
{
  return sub_10001CBA4(&qword_1000C8070, type metadata accessor for Key);
}

uint64_t sub_1000343B4@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1000343FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100034428(uint64_t a1)
{
  uint64_t v2 = sub_10001CBA4(&qword_1000C8098, type metadata accessor for ActivityType);
  uint64_t v3 = sub_10001CBA4(&qword_1000C80A0, type metadata accessor for ActivityType);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000344E4()
{
  return sub_10001CBA4(&qword_1000C8078, type metadata accessor for ActivityType);
}

uint64_t sub_10003452C()
{
  return sub_10001CBA4(&qword_1000C8080, type metadata accessor for ActivityType);
}

uint64_t sub_100034574(uint64_t a1, uint64_t a2)
{
  return sub_10003458C(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_10003458C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1000345D0()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100034624()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100034698()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_100034724()
{
  return sub_10001CBA4(&qword_1000C8088, type metadata accessor for ActivityType);
}

uint64_t sub_10003476C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10003478C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t sub_1000347CC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1000347EC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

uint64_t sub_100034828()
{
  return type metadata accessor for SearchResultsViewController();
}

id sub_1000348E0(uint64_t a1)
{
  return *(id *)(a1 + qword_1000C80C8);
}

void sub_1000348F0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = *(id *)(a1 + qword_1000C80C8);
  *(void *)(a1 + qword_1000C80C8) = a3;
  id v3 = a3;
}

uint64_t sub_100034938(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  uint64_t v4 = sub_100007874(v3);

  return v4;
}

void sub_100034970(char a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for SearchResultsViewController();
  [super viewWillAppear:a1 & 1];
  id v3 = *(void **)&v1[qword_1000C80C8];
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v3;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v8 == 1)
  {
    id v5 = [v1 navigationController];
    if (v5)
    {
      id v6 = v5;
      id v7 = [v5 navigationBar];

      [v7 setHidden:1];
    }
  }
}

void sub_100034A78(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_100034970(a3);
}

id sub_100034ACC(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = qword_1000C80C8;
  id v6 = objc_allocWithZone((Class)type metadata accessor for SearchResultsViewModel());
  id v7 = a3;
  char v8 = a1;
  *(void *)&a1[v5] = [v6 init];

  v11.receiver = v8;
  v11.super_class = (Class)type metadata accessor for SearchResultsViewController();
  [super initWithCoder:v7];

  return v9;
}

void sub_100034B74()
{
}

void sub_100034BA4()
{
}

void sub_100034BD4()
{
}

id sub_100034BE4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchResultsViewController();
  return [super dealloc];
}

void sub_100034C1C(uint64_t a1)
{
}

uint64_t sub_100034C2C()
{
  return type metadata accessor for SearchResultsViewController();
}

uint64_t sub_100034C38()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100034C8C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  uint64_t v4 = sub_1000355D4(v3);

  return v4;
}

void sub_100034CC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v3 = *(void *)(v2 + qword_1000CD130);
  uint64_t v4 = *(void *)(v2 + qword_1000CD130 + 8);
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for SearchResultsListViewController();
  [super viewDidLoad];
  id v5 = [v1 navigationItem];
  [v5 setLargeTitleDisplayMode:2];

  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setTitle:v6];
}

void sub_100034DD4(void *a1)
{
  id v1 = a1;
  sub_100034CC4();
}

void sub_100034E1C(char a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for SearchResultsListViewController();
  [super viewWillAppear:a1 & 1];
  uint64_t v3 = *(void **)((char *)v1 + *(void *)(qword_1000CD130 + (swift_isaMask & *v1) + 16));
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v3;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v8 == 1)
  {
    id v5 = [v1 navigationController];
    if (v5)
    {
      NSString v6 = v5;
      id v7 = [v5 navigationBar];

      [v7 setHidden:0];
    }
  }
}

void sub_100034F98(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_100034E1C(a3);
}

id sub_100034FEC(void *a1)
{
  uint64_t v3 = *(void *)(qword_1000CD130 + (swift_isaMask & *v1) + 16);
  id v4 = objc_allocWithZone((Class)type metadata accessor for SearchResultsViewModel());
  id v5 = v1;
  *(void *)((char *)v1 + v3) = [v4 init];

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for SearchResultsListViewController();
  [super initWithCoder:a1];

  return v6;
}

id sub_1000350DC(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100034FEC(a3);
}

void sub_100035104()
{
}

id sub_100035150()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchResultsListViewController();
  [super dealloc];
}

void sub_1000351CC(void *a1)
{
}

uint64_t type metadata accessor for SearchResultsListViewController()
{
  return sub_100035730();
}

void sub_100035230()
{
}

void sub_100035244()
{
}

uint64_t sub_100035258(uint64_t a1)
{
  uint64_t v2 = sub_10001C28C(&qword_1000C81D8);
  __chkstk_darwin(v2 - 8);
  sub_10003556C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  return EnvironmentValues.horizontalSizeClass.setter();
}

uint64_t sub_1000352E4(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for SearchResult.Item.Category();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for SearchResult.Item.Category.tip(_:))
  {
    objc_super v9 = (uint64_t *)&unk_1000C81B8;
  }
  else
  {
    if (v8 != enum case for SearchResult.Item.Category.userGuideTopic(_:))
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return 0;
    }
    objc_super v9 = (uint64_t *)&unk_1000C81A0;
  }
  uint64_t v10 = objc_allocWithZone((Class)sub_10001C28C(v9));
  uint64_t v11 = *(void *)(qword_1000CD130 + (swift_isaMask & *v10) + 16);
  id v12 = objc_allocWithZone((Class)type metadata accessor for SearchResultsViewModel());
  id v13 = a2;
  id v14 = v10;
  id v15 = [v12 init];
  *(void *)((char *)v10 + v11) = v13;
  id v16 = v13;

  uint64_t v26 = 0;
  uint64_t v27 = 0;
  id v17 = v16;
  sub_10001C28C(&qword_1000C81A8);
  State.init(wrappedValue:)();
  long long v22 = v23;
  uint64_t v18 = v24;
  sub_10001D9B0();
  *(void *)&long long v23 = ObservedObject.init(wrappedValue:)();
  *((void *)&v23 + 1) = v19;
  long long v24 = v22;
  uint64_t v25 = v18;
  uint64_t v20 = UIHostingController.init(rootView:)();

  return v20;
}

uint64_t sub_10003553C()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t sub_10003556C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001C28C(&qword_1000C81D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000355D4(void *a1)
{
  uint64_t v3 = *(void *)(qword_1000CD130 + (swift_isaMask & *v1) + 16);
  id v4 = objc_allocWithZone((Class)type metadata accessor for SearchResultsViewModel());
  uint64_t v5 = v1;
  id v6 = [v4 init];
  *(void *)((char *)v1 + v3) = a1;
  id v7 = a1;

  id v8 = v7;
  sub_100049F7C(v10);
  return UIHostingController.init(rootView:)();
}

void sub_1000356C8()
{
}

void sub_1000356F8()
{
}

uint64_t sub_100035730()
{
  return swift_getGenericMetadata();
}

uint64_t destroy for UserGuideSearchResultsItemsView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for UserGuideSearchResultsItemsView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  id v7 = v3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for UserGuideSearchResultsItemsView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for UserGuideSearchResultsItemsView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for UserGuideSearchResultsItemsView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for UserGuideSearchResultsItemsView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserGuideSearchResultsItemsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserGuideSearchResultsItemsView()
{
  return &type metadata for UserGuideSearchResultsItemsView;
}

uint64_t sub_100035A50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100035A6C()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v1 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t result = String.init(localized:table:bundle:locale:comment:)();
  qword_1000CD140 = result;
  *(void *)algn_1000CD148 = v3;
  return result;
}

uint64_t sub_100035B74(long long *a1)
{
  uint64_t v2 = type metadata accessor for SearchResult.Item.Category();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v11 = *a1;
  id v6 = (void *)*((void *)&v11 + 1);
  swift_getKeyPath();
  swift_getKeyPath();
  id v7 = v6;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v8 = (void (*)(char *))dispatch thunk of SearchResultsModel.searchResultsSeeAllHandler.getter();
  swift_release();
  uint64_t result = sub_100037664((uint64_t)&v11);
  if (v8)
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for SearchResult.Item.Category.userGuideTopic(_:), v2);
    v8(v5);
    sub_100005470((uint64_t)v8);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

uint64_t sub_100035CF4()
{
  uint64_t v1 = sub_10001C28C(&qword_1000C8260);
  __chkstk_darwin(v1);
  long long v5 = *(_OWORD *)v0;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = *((id *)&v5 + 1);
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_100037664((uint64_t)&v5);
  sub_100037E3C(*(void *)(v0 + 48), v4, (void (*)(void))&type metadata accessor for UserGuideTopic);
  swift_bridgeObjectRelease();
  sub_100037D5C(v0);
  sub_100035EC8((void (*)(uint64_t))sub_1000369EC);
  sub_100037DC0(v0);
  sub_10001C28C(&qword_1000C8268);
  sub_1000376FC();
  sub_10003779C();
  Section<>.init(header:content:)();
  return swift_unknownObjectRelease();
}

uint64_t sub_100035EB0()
{
  return sub_100035EC8((void (*)(uint64_t))sub_100037040);
}

uint64_t sub_100035EC8(void (*a1)(uint64_t))
{
  uint64_t v3 = sub_10001C28C(&qword_1000C82F8);
  __chkstk_darwin(v3);
  long long v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001C28C(&qword_1000C8280);
  __chkstk_darwin(v6);
  id v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 56))
  {
    *(void *)id v8 = static VerticalAlignment.center.getter();
    *((void *)v8 + 1) = 0;
    v8[16] = 1;
    sub_10001C28C(&qword_1000C8300);
    a1(v1);
    sub_100016FEC((uint64_t)v8, (uint64_t)v5, &qword_1000C8280);
    swift_storeEnumTagMultiPayload();
    sub_100009170(&qword_1000C8278, &qword_1000C8280);
    _ConditionalContent<>.init(storage:)();
    return sub_1000143B4((uint64_t)v8, &qword_1000C8280);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_100009170(&qword_1000C8278, &qword_1000C8280);
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_1000360BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  swift_getKeyPath();
  uint64_t v10 = swift_allocObject();
  long long v11 = a5[3];
  *(_OWORD *)(v10 + 48) = a5[2];
  *(_OWORD *)(v10 + 64) = v11;
  *(_OWORD *)(v10 + 80) = a5[4];
  long long v12 = a5[1];
  *(_OWORD *)(v10 + 16) = *a5;
  *(_OWORD *)(v10 + 32) = v12;
  *(void *)(v10 + 96) = a1;
  *(void *)(v10 + 104) = a2;
  *(void *)(v10 + 112) = a3;
  *(void *)(v10 + 120) = a4;
  swift_unknownObjectRetain_n();
  sub_100037D5C((uint64_t)a5);
  sub_10001C28C(&qword_1000C82D8);
  sub_10001C28C(&qword_1000C8298);
  sub_100009170(&qword_1000C82E0, &qword_1000C82D8);
  sub_100037810();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100036204@<X0>(void **a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, unint64_t a5@<X5>, uint64_t a6@<X8>)
{
  unint64_t v61 = a5;
  uint64_t v62 = a4;
  uint64_t v52 = a3;
  uint64_t v60 = a6;
  uint64_t v8 = type metadata accessor for UserGuideSearchResultItemView();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v63 = sub_10001C28C(&qword_1000C82A8);
  __chkstk_darwin(v63);
  long long v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10001C28C(&qword_1000C82A0);
  uint64_t v54 = *(void *)(v13 - 8);
  uint64_t v55 = v13;
  __chkstk_darwin(v13);
  id v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10001C28C(&qword_1000C82E8);
  uint64_t v58 = *(void *)(v16 - 8);
  uint64_t v59 = v16;
  __chkstk_darwin(v16);
  uint64_t v57 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_10001C28C(&qword_1000C8298);
  __chkstk_darwin(v53);
  uint64_t v56 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *a1;
  v68[0] = *a2;
  uint64_t v20 = (void *)*((void *)&v68[0] + 1);
  sub_100037AD8((uint64_t)v68);
  id v21 = v19;
  sub_100070850(v20, v21, v10);
  uint64_t v22 = dispatch thunk of UserGuideTopic.identifier.getter();
  uint64_t v24 = v23;
  swift_getKeyPath();
  swift_getKeyPath();
  id v25 = v20;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_100037664((uint64_t)v68);
  if (v64 == 1)
  {
    long long v26 = a2[2];
    long long v64 = a2[1];
    long long v65 = v26;
    sub_100037D5C((uint64_t)a2);
    sub_10001C28C(&qword_1000C82F0);
    Binding.wrappedValue.getter();
    if (v67)
    {
      if (v66 == v22 && v67 == v24)
      {
        sub_100037DC0((uint64_t)a2);
        swift_bridgeObjectRelease();
LABEL_8:
        id v28 = [self tintColor];
        uint64_t v29 = Color.init(uiColor:)();
        swift_bridgeObjectRelease();
        *(void *)&long long v64 = v29;
        swift_retain();
        uint64_t v30 = AnyView.init<A>(_:)();
        sub_100037B0C((uint64_t)v10, (uint64_t)v12);
        swift_release();
        uint64_t v31 = v63;
        *(void *)&v12[*(int *)(v63 + 36)] = v30;
        goto LABEL_10;
      }
      char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_100037DC0((uint64_t)a2);
      swift_bridgeObjectRelease();
      if (v27) {
        goto LABEL_8;
      }
    }
    else
    {
      sub_100037DC0((uint64_t)a2);
    }
  }
  swift_bridgeObjectRelease();
  sub_100037B0C((uint64_t)v10, (uint64_t)v12);
  uint64_t v31 = v63;
  *(void *)&v12[*(int *)(v63 + 36)] = 0;
LABEL_10:
  uint64_t result = sub_100037B70((uint64_t)v10);
  uint64_t v33 = v62;
  int64_t v34 = v61 >> 1;
  if (v61 >> 1 != v62)
  {
    if (v34 <= v62)
    {
      __break(1u);
      goto LABEL_18;
    }
    uint64_t v35 = *(void **)(v52 + 8 * v62);
    type metadata accessor for UserGuideTopic();
    id v36 = v21;
    id v37 = v35;
    static NSObject.== infix(_:_:)();
  }
  static VerticalEdge.Set.top.getter();
  unint64_t v38 = sub_1000378F0();
  View.listRowSeparator(_:edges:)();
  uint64_t result = sub_1000143B4((uint64_t)v12, &qword_1000C82A8);
  if (v34 == v33)
  {
LABEL_16:
    static VerticalEdge.Set.bottom.getter();
    *(void *)&long long v64 = v31;
    *((void *)&v64 + 1) = v38;
    swift_getOpaqueTypeConformance2();
    uint64_t v42 = v57;
    uint64_t v43 = v55;
    View.listRowSeparator(_:edges:)();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v15, v43);
    uint64_t v44 = swift_allocObject();
    long long v45 = a2[3];
    *(_OWORD *)(v44 + 48) = a2[2];
    *(_OWORD *)(v44 + 64) = v45;
    *(_OWORD *)(v44 + 80) = a2[4];
    long long v46 = a2[1];
    *(_OWORD *)(v44 + 16) = *a2;
    *(_OWORD *)(v44 + 32) = v46;
    *(void *)(v44 + 96) = v21;
    uint64_t v48 = v58;
    uint64_t v47 = v59;
    uint64_t v49 = (uint64_t)v56;
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v56, v42, v59);
    uint64_t v50 = (uint64_t (**)())(v49 + *(int *)(v53 + 36));
    char *v50 = sub_100037C2C;
    v50[1] = (uint64_t (*)())v44;
    id v51 = v21;
    sub_100037D5C((uint64_t)a2);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v42, v47);
    return sub_100017278(v49, v60, &qword_1000C8298);
  }
  if (v34 > v33)
  {
    uint64_t v39 = *(void **)(v52 + 8 * v34 - 8);
    type metadata accessor for UserGuideTopic();
    id v40 = v21;
    id v41 = v39;
    static NSObject.== infix(_:_:)();

    goto LABEL_16;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_100036820()
{
  if (qword_1000C7FC0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1000CD140;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_100036888()
{
  return sub_100035CF4();
}

uint64_t sub_1000368CC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10003691C()
{
  unint64_t result = qword_1000C81E0;
  if (!qword_1000C81E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C81E0);
  }
  return result;
}

unint64_t sub_100036970(uint64_t a1)
{
  unint64_t result = sub_100036998();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100036998()
{
  unint64_t result = qword_1000C8258;
  if (!qword_1000C8258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8258);
  }
  return result;
}

uint64_t sub_1000369EC@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v3 = sub_10001C28C(&qword_1000C8308);
  uint64_t v58 = *(void *)(v3 - 8);
  uint64_t v59 = v3;
  __chkstk_darwin(v3);
  uint64_t v55 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_10001C28C(&qword_1000C8310);
  uint64_t v5 = __chkstk_darwin(v57);
  uint64_t v61 = (uint64_t)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v56 = (char *)&v54 - v8;
  __chkstk_darwin(v7);
  uint64_t v60 = (uint64_t)&v54 - v9;
  uint64_t v10 = sub_10001C28C(&qword_1000C8318);
  __chkstk_darwin(v10 - 8);
  long long v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Font.TextStyle();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000C7FC0 != -1) {
    swift_once();
  }
  long long v64 = xmmword_1000CD140;
  sub_100016F88();
  swift_bridgeObjectRetain();
  uint64_t v17 = Text.init<A>(_:)();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for Font.TextStyle.title3(_:), v13);
  uint64_t v22 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v12, 1, 1, v22);
  static Font.Weight.bold.getter();
  static Font.system(_:design:weight:)();
  sub_1000143B4((uint64_t)v12, &qword_1000C8318);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v23 = Text.font(_:)();
  uint64_t v25 = v24;
  char v27 = v26;
  swift_release();
  char v28 = v27 & 1;
  sub_100016FDC(v17, v19, v21);
  swift_bridgeObjectRelease();
  id v29 = [self labelColor];
  *(void *)&long long v64 = Color.init(uiColor:)();
  uint64_t v30 = Text.foregroundStyle<A>(_:)();
  uint64_t v32 = v31;
  char v34 = v33;
  uint64_t v36 = v35;
  sub_100016FDC(v23, v25, v28);
  swift_release();
  swift_bridgeObjectRelease();
  id v37 = (_OWORD *)swift_allocObject();
  long long v38 = a1[3];
  v37[3] = a1[2];
  v37[4] = v38;
  v37[5] = a1[4];
  long long v39 = a1[1];
  v37[1] = *a1;
  v37[2] = v39;
  sub_100037D5C((uint64_t)a1);
  id v40 = v55;
  Button.init(action:label:)();
  long long v64 = *a1;
  id v41 = (void *)*((void *)&v64 + 1);
  swift_getKeyPath();
  swift_getKeyPath();
  id v42 = v41;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_100037664((uint64_t)&v64);
  if (v63 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v43 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  char v44 = v34 & 1;
  if (*((void *)a1 + 6) >= v43) {
    double v45 = 0.0;
  }
  else {
    double v45 = 1.0;
  }
  uint64_t v47 = v58;
  uint64_t v46 = v59;
  uint64_t v48 = (uint64_t)v56;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v56, v40, v59);
  *(double *)(v48 + *(int *)(v57 + 36)) = v45;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v40, v46);
  uint64_t v49 = v60;
  sub_100017278(v48, v60, &qword_1000C8310);
  uint64_t v50 = v61;
  sub_100016FEC(v49, v61, &qword_1000C8310);
  id v51 = v62;
  *uint64_t v62 = v30;
  v51[1] = v32;
  *((unsigned char *)v51 + 16) = v44;
  v51[3] = v36;
  v51[4] = 0;
  *((unsigned char *)v51 + 40) = 1;
  uint64_t v52 = sub_10001C28C(&qword_1000C8328);
  sub_100016FEC(v50, (uint64_t)v51 + *(int *)(v52 + 64), &qword_1000C8310);
  sub_100037CB8(v30, v32, v44);
  swift_bridgeObjectRetain();
  sub_1000143B4(v49, &qword_1000C8310);
  sub_1000143B4(v50, &qword_1000C8310);
  sub_100016FDC(v30, v32, v44);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100037040@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v3 = sub_10001C28C(&qword_1000C8308);
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  __chkstk_darwin(v3);
  uint64_t v54 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_10001C28C(&qword_1000C8310);
  uint64_t v5 = __chkstk_darwin(v56);
  uint64_t v60 = (uint64_t)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v55 = (char *)&v54 - v8;
  __chkstk_darwin(v7);
  uint64_t v59 = (uint64_t)&v54 - v9;
  uint64_t v10 = sub_10001C28C(&qword_1000C8318);
  __chkstk_darwin(v10 - 8);
  long long v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Font.TextStyle();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000C8008 != -1) {
    swift_once();
  }
  long long v62 = xmmword_1000CD218;
  sub_100016F88();
  swift_bridgeObjectRetain();
  uint64_t v17 = Text.init<A>(_:)();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for Font.TextStyle.title3(_:), v13);
  uint64_t v22 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v12, 1, 1, v22);
  static Font.Weight.bold.getter();
  static Font.system(_:design:weight:)();
  sub_1000143B4((uint64_t)v12, &qword_1000C8318);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v23 = Text.font(_:)();
  uint64_t v25 = v24;
  char v27 = v26;
  swift_release();
  char v28 = v27 & 1;
  sub_100016FDC(v17, v19, v21);
  swift_bridgeObjectRelease();
  id v29 = [self labelColor];
  *(void *)&long long v62 = Color.init(uiColor:)();
  uint64_t v30 = Text.foregroundStyle<A>(_:)();
  uint64_t v32 = v31;
  char v34 = v33;
  uint64_t v36 = v35;
  sub_100016FDC(v23, v25, v28);
  swift_release();
  swift_bridgeObjectRelease();
  id v37 = (_OWORD *)swift_allocObject();
  long long v38 = a1[3];
  v37[3] = a1[2];
  v37[4] = v38;
  v37[5] = a1[4];
  long long v39 = a1[1];
  v37[1] = *a1;
  v37[2] = v39;
  sub_100037D5C((uint64_t)a1);
  id v40 = v54;
  Button.init(action:label:)();
  long long v62 = *a1;
  id v41 = *((id *)&v62 + 1);
  unint64_t v42 = dispatch thunk of TipNavigationViewModel.tips.getter();
  sub_100037664((uint64_t)&v62);
  if (v42 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  char v44 = v34 & 1;
  if (*((void *)a1 + 6) >= v43) {
    double v45 = 0.0;
  }
  else {
    double v45 = 1.0;
  }
  uint64_t v47 = v57;
  uint64_t v46 = v58;
  uint64_t v48 = (uint64_t)v55;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v55, v40, v58);
  *(double *)(v48 + *(int *)(v56 + 36)) = v45;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v40, v46);
  uint64_t v49 = v59;
  sub_100017278(v48, v59, &qword_1000C8310);
  uint64_t v50 = v60;
  sub_100016FEC(v49, v60, &qword_1000C8310);
  id v51 = v61;
  *uint64_t v61 = v30;
  v51[1] = v32;
  *((unsigned char *)v51 + 16) = v44;
  v51[3] = v36;
  v51[4] = 0;
  *((unsigned char *)v51 + 40) = 1;
  uint64_t v52 = sub_10001C28C(&qword_1000C8328);
  sub_100016FEC(v50, (uint64_t)v51 + *(int *)(v52 + 64), &qword_1000C8310);
  sub_100037CB8(v30, v32, v44);
  swift_bridgeObjectRetain();
  sub_1000143B4(v49, &qword_1000C8310);
  sub_1000143B4(v50, &qword_1000C8310);
  sub_100016FDC(v30, v32, v44);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100037664(uint64_t a1)
{
  return a1;
}

uint64_t sub_100037690(_OWORD *a1, void (*a2)(_OWORD *))
{
  long long v3 = a1[3];
  v6[2] = a1[2];
  v6[3] = v3;
  v6[4] = a1[4];
  long long v4 = a1[1];
  v6[0] = *a1;
  v6[1] = v4;
  sub_100037D5C((uint64_t)v6);
  a2(v6);
  return sub_100037DC0((uint64_t)v6);
}

uint64_t sub_1000376EC()
{
  return sub_1000360BC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(_OWORD **)(v0 + 48));
}

unint64_t sub_1000376FC()
{
  unint64_t result = qword_1000C8270;
  if (!qword_1000C8270)
  {
    sub_10001AD28(&qword_1000C8260);
    sub_100009170(&qword_1000C8278, &qword_1000C8280);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8270);
  }
  return result;
}

unint64_t sub_10003779C()
{
  unint64_t result = qword_1000C8288;
  if (!qword_1000C8288)
  {
    sub_10001AD28(&qword_1000C8268);
    sub_100037810();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8288);
  }
  return result;
}

unint64_t sub_100037810()
{
  unint64_t result = qword_1000C8290;
  if (!qword_1000C8290)
  {
    sub_10001AD28(&qword_1000C8298);
    sub_10001AD28(&qword_1000C82A0);
    sub_10001AD28(&qword_1000C82A8);
    sub_1000378F0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1000379E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8290);
  }
  return result;
}

unint64_t sub_1000378F0()
{
  unint64_t result = qword_1000C82B0;
  if (!qword_1000C82B0)
  {
    sub_10001AD28(&qword_1000C82A8);
    sub_100037990();
    sub_100009170(&qword_1000C82C0, &qword_1000C82C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C82B0);
  }
  return result;
}

unint64_t sub_100037990()
{
  unint64_t result = qword_1000C82B8;
  if (!qword_1000C82B8)
  {
    type metadata accessor for UserGuideSearchResultItemView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C82B8);
  }
  return result;
}

unint64_t sub_1000379E8()
{
  unint64_t result = qword_1000C82D0;
  if (!qword_1000C82D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C82D0);
  }
  return result;
}

uint64_t sub_100037A3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = dispatch thunk of UserGuideTopic.identifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100037A68()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_100037AC8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100036204(a1, (_OWORD *)(v2 + 16), *(void *)(v2 + 104), *(void *)(v2 + 112), *(void *)(v2 + 120), a2);
}

uint64_t sub_100037AD8(uint64_t a1)
{
  id v2 = *(id *)(a1 + 8);
  return a1;
}

uint64_t sub_100037B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UserGuideSearchResultItemView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100037B70(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UserGuideSearchResultItemView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100037BCC()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100037C2C()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 80);
  uint64_t v2 = dispatch thunk of UserGuideTopic.identifier.getter();
  v1(v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100037C88()
{
  return sub_100037690((_OWORD *)(v0 + 16), (void (*)(_OWORD *))sub_100035B74);
}

uint64_t sub_100037CB8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_100037CD4()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_100037D2C()
{
  return sub_100037690((_OWORD *)(v0 + 16), (void (*)(_OWORD *))sub_10007C6BC);
}

uint64_t sub_100037D5C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  id v3 = v2;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100037DC0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100037E24(uint64_t a1, unint64_t a2)
{
  return sub_100037E3C(a1, a2, (void (*)(void))sub_100037FDC);
}

uint64_t sub_100037E3C(uint64_t result, unint64_t a2, void (*a3)(void))
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = a3;
    unint64_t v3 = a2;
    uint64_t v4 = result;
    unint64_t v6 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v7 >= v4) {
    uint64_t v8 = v4;
  }
  else {
    uint64_t v8 = v7;
  }
  if (v7 < 0) {
    uint64_t v8 = v4;
  }
  if (v4) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v11 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 < v9)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v3 & 0xC000000000000001) != 0 && v9)
  {
    v5(0);
    Swift::Int v12 = 0;
    do
    {
      Swift::Int v13 = v12 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v12);
      Swift::Int v12 = v13;
    }
    while (v9 != v13);
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.subscript.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v14;
}

unint64_t sub_100037FDC()
{
  unint64_t result = qword_1000C8330;
  if (!qword_1000C8330)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000C8330);
  }
  return result;
}

unint64_t sub_100038020()
{
  unint64_t result = qword_1000C8338;
  if (!qword_1000C8338)
  {
    sub_10001AD28((uint64_t *)&unk_1000C8340);
    sub_1000376FC();
    sub_10003779C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8338);
  }
  return result;
}

id sub_100038100()
{
  [v0 cancelAnalyticsIncreaseCountViewForCollectionsViewDelay];
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0 name:UIApplicationWillEnterForegroundNotification object:0];
  [v1 removeObserver:v0 name:UIApplicationDidEnterBackgroundNotification object:0];

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for CollectionListViewController();
  return [super dealloc];
}

id sub_10003831C(void *a1)
{
  uint64_t v3 = OBJC_IVAR___CollectionListViewController_viewModel;
  id v4 = objc_allocWithZone((Class)type metadata accessor for CollectionListViewModel());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  v5[OBJC_IVAR___CollectionListViewController_canIncreaseViewCount] = 1;
  uint64_t v6 = OBJC_IVAR___CollectionListViewController_searchResultsViewModel;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)type metadata accessor for SearchResultsViewModel()) init];
  *(void *)&v5[OBJC_IVAR___CollectionListViewController_searchResultsViewController] = 0;
  *(void *)&v5[OBJC_IVAR___CollectionListViewController_searchController] = 0;
  v5[OBJC_IVAR___CollectionListViewController_searchActive] = 0;
  *(void *)&v5[OBJC_IVAR___CollectionListViewController_cancellables] = &_swiftEmptySetSingleton;
  uint64_t v7 = &v5[OBJC_IVAR___CollectionListViewController_searchResultSelectedHandler];
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  uint64_t v8 = *(void **)&v1[v3];
  sub_10001D044(&qword_1000C8550, (void (*)(uint64_t))type metadata accessor for CollectionListViewModel);
  id v9 = v8;
  uint64_t v15 = ObservedObject.init(wrappedValue:)();
  uint64_t v16 = v10;
  id v11 = objc_allocWithZone((Class)sub_10001C28C(&qword_1000C8558));
  *(void *)&v5[OBJC_IVAR___CollectionListViewController_hostingController] = UIHostingController.init(rootView:)();

  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for CollectionListViewController();
  [super initWithCoder:a1];

  return v12;
}

id sub_1000386E4(uint64_t a1, uint64_t a2)
{
  return sub_100038708(a1, a2, (SEL *)&selRef_tipForIdentifier_);
}

id sub_1000386F0(uint64_t a1, uint64_t a2)
{
  return sub_100038708(a1, a2, (SEL *)&selRef_collectionForIdentifier_);
}

id sub_1000386FC(uint64_t a1, uint64_t a2)
{
  return sub_100038708(a1, a2, (SEL *)&selRef_userGuideWithIdentifier_);
}

id sub_100038708(uint64_t a1, uint64_t a2, SEL *a3)
{
  type metadata accessor for TPSUIAppController();
  id v4 = (void *)static TPSUIAppController.shared.getter();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 *a3:v5];

  return v6;
}

void sub_100038784(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    id v4 = *(id *)(Strong + OBJC_IVAR___CollectionListViewController_searchResultsViewModel);
    uint64_t v5 = sub_1000352E4(a1, v4);

    if (v5)
    {
      id v6 = [v3 navigationController];
      if (v6)
      {
        uint64_t v7 = v6;
        [v6 pushViewController:v5 animated:1];
      }
      uint64_t v3 = (void *)v5;
    }
  }
}

void sub_10003884C()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = Strong;
    [Strong dismissSearch];
  }
}

uint64_t sub_1000388C0(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v23 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  id v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  objc_super v14 = (char *)&v21 - v13;
  sub_1000067A4(0, (unint64_t *)&qword_1000C84E0);
  uint64_t v15 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v12, v8);
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = a1;
  aBlock[4] = sub_1000397E4;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000374C;
  aBlock[3] = &unk_1000B7EE0;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001D044((unint64_t *)&qword_1000C84E8, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10001C28C(&qword_1000C84F0);
  sub_100009170((unint64_t *)&qword_1000C84F8, &qword_1000C84F0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
  return ((uint64_t (*)(char *, uint64_t))v22)(v14, v23);
}

uint64_t sub_100038CB4(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = (void *)Strong;
    uint64_t v5 = *(void **)(Strong + OBJC_IVAR___CollectionListViewController_searchController);
    id v6 = v5;

    if (v5)
    {
      id v7 = [v6 searchBar];

      dispatch thunk of TPSAppSearchQuery.searchTerm.getter();
      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v7 setText:v8];
    }
  }
  swift_beginAccess();
  uint64_t v9 = swift_unknownObjectWeakLoadStrong();
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    uint64_t v11 = *(void **)(v9 + OBJC_IVAR___CollectionListViewController_searchController);
    id v12 = v11;

    if (v11)
    {
      id v13 = [v12 searchBar];

      [v13 becomeFirstResponder];
    }
  }
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v15 = (void *)result;
    id v16 = *(id *)(result + OBJC_IVAR___CollectionListViewController_searchResultsViewModel);

    swift_getKeyPath();
    swift_getKeyPath();
    id v17 = a2;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of SearchResultsModel.searchQuery.setter();

    return swift_release();
  }
  return result;
}

void sub_100038F88(void *a1)
{
  id v2 = [a1 searchBar];
  id v3 = [v2 text];

  if (v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v4 = *(void **)(v1 + OBJC_IVAR___CollectionListViewController_searchResultsViewModel);
    id v5 = objc_allocWithZone((Class)type metadata accessor for TPSAppSearchQuery());
    id v6 = v4;
    TPSAppSearchQuery.init(searchTerm:origin:identifier:)();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of SearchResultsModel.searchQuery.setter();

    swift_release();
  }
}

void sub_10003936C(void *a1)
{
  id v2 = v1;
  [v1 cancelAnalyticsIncreaseCountViewForCollectionsViewDelay];
  if (v1[OBJC_IVAR___CollectionListViewController_canIncreaseViewCount] == 1)
  {
    id v4 = *(id *)&v1[OBJC_IVAR___CollectionListViewController_viewModel];
    char v5 = sub_10000BC84();

    if (v5)
    {
      id v6 = TPSAnalyticsContentStyleLandingPage;
      NSString v7 = [a1 viewMethod];
      if (!v7)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v7 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      NSString v8 = self;
      id v9 = [v2 traitCollection];
      id v10 = [v8 analyticsViewModeForTraitCollection:v9];

      id v11 = [v8 eventWithContentID:v6 collectionID:v6 correlationID:0 clientConditionID:0 viewMethod:v7 viewMode:v10];
      [v11 log];
    }
  }
}

void sub_100039578()
{
  *(unsigned char *)(v0 + OBJC_IVAR___CollectionListViewController_searchActive) = 0;
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___CollectionListViewController_searchResultsViewModel);
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  dispatch thunk of SearchResultsModel.reset()();

  swift_release();
  sub_100003384();
}

void sub_100039624()
{
  uint64_t v1 = OBJC_IVAR___CollectionListViewController_searchActive;
  if (v0[OBJC_IVAR___CollectionListViewController_searchActive] == 1)
  {
    uint64_t v2 = OBJC_IVAR___CollectionListViewController_searchResultsViewModel;
    id v3 = *(void **)&v0[OBJC_IVAR___CollectionListViewController_searchResultsViewModel];
    swift_getKeyPath();
    swift_getKeyPath();
    id v4 = v3;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v5 = dispatch thunk of SearchResultsModel.queryCount.getter();

    swift_release();
    if (!v5)
    {
      [v0 dismissViewControllerAnimated:1 completion:0];
      v0[v1] = 0;
      id v6 = *(void **)&v0[v2];
      swift_getKeyPath();
      swift_getKeyPath();
      id v7 = v6;
      static Published.subscript.getter();
      swift_release();
      swift_release();
      dispatch thunk of SearchResultsModel.reset()();

      swift_release();
      sub_100003384();
    }
  }
}

uint64_t sub_10003976C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000397A4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000397E4()
{
  return sub_100038CB4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1000397EC(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

void sub_1000397FC(uint64_t a1)
{
}

void sub_100039804()
{
}

void *initializeBufferWithCopyOfBuffer for SearchResultItemOnTapModifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for SearchResultItemOnTapModifier()
{
  return swift_release();
}

void *assignWithCopy for SearchResultItemOnTapModifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for SearchResultItemOnTapModifier(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultItemOnTapModifier(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchResultItemOnTapModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchResultItemOnTapModifier()
{
  return &type metadata for SearchResultItemOnTapModifier;
}

uint64_t sub_100039948()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100039968()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_100039984(uint64_t a1)
{
  uint64_t v2 = sub_10001C28C(&qword_1000C8620);
  __chkstk_darwin(v2);
  id v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001C28C(&qword_1000C8628);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  NSString v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001C28C(&qword_1000C8630);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v4, a1, v9);
  v4[*(int *)(v2 + 36)] = 0;
  unint64_t v10 = sub_100039B80();
  View.onTapGesture(count:perform:)();
  sub_100039C44((uint64_t)v4);
  v12[0] = v2;
  v12[1] = v10;
  swift_getOpaqueTypeConformance2();
  View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_100039B80()
{
  unint64_t result = qword_1000C8638;
  if (!qword_1000C8638)
  {
    sub_10001AD28(&qword_1000C8620);
    sub_100009170(&qword_1000C8640, &qword_1000C8630);
    sub_100009170(&qword_1000C8648, &qword_1000C8650);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8638);
  }
  return result;
}

uint64_t sub_100039C44(uint64_t a1)
{
  uint64_t v2 = sub_10001C28C(&qword_1000C8620);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100039CA4()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_100039D38()
{
  uint64_t v1 = v0;
  id v2 = [objc_allocWithZone((Class)type metadata accessor for SearchResultsViewModel()) init];
  [v1 setSearchResultViewModel:v2];

  uint64_t v3 = [v1 searchResultViewModel];
  if (v3)
  {
    v3[qword_1000CD1A0] = 1;
  }
  if ([v1 searchResultViewModel])
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.setter();
  }
  id v4 = [v1 searchResultViewModel];
  if (v4)
  {
    uint64_t v5 = v4;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of SearchResultsModel.searchResultEligibilityFilter.setter();

    swift_release();
    swift_release();
  }
  id v6 = [v1 searchResultViewModel];
  if (v6)
  {
    uint64_t v7 = v6;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of SearchResultsModel.searchResultCollectionResolver.setter();

    swift_release();
    swift_release();
  }
  id v8 = [v1 searchResultViewModel];
  if (v8)
  {
    uint64_t v9 = v8;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of SearchResultsModel.searchResultUserGuideResolver.setter();

    swift_release();
    swift_release();
  }
  id v10 = [v1 searchResultViewModel];
  if (v10)
  {
    id v11 = v10;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of SearchResultsModel.searchResultSelected.setter();

    swift_release();
    swift_release();
  }
  id v12 = [v1 searchResultViewModel];
  if (v12)
  {
    id v13 = v12;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of SearchResultsModel.searchResultsSeeAllHandler.setter();

    swift_release();
    swift_release();
  }
  id v14 = [v1 searchResultViewModel];
  if (v14)
  {
    uint64_t v15 = v14;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of SearchResultsModel.searchResultScrollHandler.setter();

    swift_release();
    swift_release();
  }
  id result = [v1 searchResultViewModel];
  if (result)
  {
    id v17 = result;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of SearchResultsModel.searchResultsUpdated.setter();

    swift_release();
    return (id)swift_release();
  }
  return result;
}

void sub_10003A36C(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = Strong;
    id v7 = [Strong appController];

    if (v7)
    {
      NSString v8 = String._bridgeToObjectiveC()();
      [v7 *a4:v8];
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_10003A438(uint64_t a1)
{
  swift_beginAccess();
  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    [result dismissPresentedSearchResultsViewController:1];
    [v3 dismissSearch];
    id result = [v3 delegate];
    if (result)
    {
      id v4 = result;
      if ([result respondsToSelector:"tipsViewController:didSelectSearchResult:"])
      {
        uint64_t v5 = type metadata accessor for SearchResult.Item.Value();
        v18[3] = v5;
        id v6 = sub_10003A9A8(v18);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v6, a1, v5);
        sub_10003AA0C((uint64_t)v18, (uint64_t)v16);
        uint64_t v7 = v17;
        if (v17)
        {
          NSString v8 = sub_10003AAD4(v16, v17);
          uint64_t v9 = *(void *)(v7 - 8);
          __chkstk_darwin(v8);
          id v11 = (char *)&v16[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v9 + 16))(v11);
          id v12 = v3;
          uint64_t v13 = _bridgeAnythingToObjectiveC<A>(_:)();
          (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
          sub_10003AB18((uint64_t)v16);
        }
        else
        {
          id v14 = v3;
          uint64_t v13 = 0;
        }
        [v4 tipsViewController:v3 didSelectSearchResult:v13];
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        return (id)sub_10003AA74((uint64_t)v18);
      }
      else
      {

        return (id)swift_unknownObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_10003A67C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    id v4 = [Strong searchResultViewModel];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = sub_1000352E4(a1, v4);
      if (v6)
      {
        uint64_t v7 = v6;
        id v8 = [v3 searchResultsNavigationController];
        if (v8)
        {
          uint64_t v9 = (uint64_t)v8;
          [v8 pushViewController:v7 animated:1];

          uint64_t v3 = v5;
          id v5 = (id)v7;
          uint64_t v7 = v9;
        }

        uint64_t v3 = v5;
        id v5 = (id)v7;
      }

      uint64_t v3 = v5;
    }
  }
}

void sub_10003A760(uint64_t a1, SEL *a2)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = Strong;
    [Strong *a2];
  }
}

uint64_t sub_10003A8A4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10003A8DC(uint64_t a1, uint64_t a2)
{
  sub_10003A36C(a1, a2, v2, (SEL *)&selRef_tipForIdentifier_);
}

void sub_10003A908(uint64_t a1, uint64_t a2)
{
  sub_10003A36C(a1, a2, v2, (SEL *)&selRef_collectionForIdentifier_);
}

void sub_10003A92C(uint64_t a1, uint64_t a2)
{
  sub_10003A36C(a1, a2, v2, (SEL *)&selRef_userGuideWithIdentifier_);
}

id sub_10003A950(uint64_t a1)
{
  return sub_10003A438(a1);
}

void sub_10003A958(uint64_t a1)
{
}

void sub_10003A960()
{
  sub_10003A760(v0, (SEL *)&selRef_dismissSearch);
}

void sub_10003A984()
{
  sub_10003A760(v0, (SEL *)&selRef_updateSearchResultsPresentationIfNeeded);
}

uint64_t *sub_10003A9A8(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_10003AA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001C28C(&qword_1000C8A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003AA74(uint64_t a1)
{
  uint64_t v2 = sub_10001C28C(&qword_1000C8A40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_10003AAD4(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_10003AB18(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void sub_10003AB68(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = swift_getKeyPath();
  sub_10001C28C(&qword_1000C81D0);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (int *)type metadata accessor for FeaturedCollectionView();
  uint64_t v7 = (char *)a3 + v6[6];
  State.init(wrappedValue:)();
  char *v7 = v22;
  *((void *)v7 + 1) = v23;
  id v8 = (uint64_t *)((char *)a3 + v6[5]);
  type metadata accessor for CollectionListViewModel();
  sub_100017114(&qword_1000C8550, (void (*)(uint64_t))type metadata accessor for CollectionListViewModel);
  id v9 = a1;
  *id v8 = ObservedObject.init(wrappedValue:)();
  v8[1] = v10;
  *(uint64_t *)((char *)a3 + v6[8]) = (uint64_t)a2;
  id v11 = a2;
  id v12 = [v11 identifier];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  id v16 = [v11 title];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;
  }
  else
  {

    uint64_t v18 = 0;
    unint64_t v20 = 0xE000000000000000;
  }

  uint64_t v21 = (uint64_t *)((char *)a3 + v6[7]);
  uint64_t *v21 = v13;
  v21[1] = v15;
  void v21[2] = v18;
  v21[3] = v20;
}

uint64_t sub_10003AD14(uint64_t a1)
{
  uint64_t result = type metadata accessor for FeaturedCollectionView();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(a1 + *(int *)(result + 20) + 8)
                                               + OBJC_IVAR___CollectionListViewModel_actionHandler);
  if (v3)
  {
    uint64_t v4 = *(void **)(a1 + *(int *)(result + 32));
    swift_retain();
    id v5 = [v4 identifier];
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    v3(v6, v8);
    sub_100005470((uint64_t)v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_10003ADF8(uint64_t a1, char *a2, uint64_t a3)
{
  id v4 = *(id *)(a3 + *(int *)(type metadata accessor for FeaturedCollectionView() + 20) + 8);
  sub_10001C28C(&qword_1000C87B0);
  State.wrappedValue.getter();
  sub_100012E4C(a2, v5);
}

id sub_10003AE88(uint64_t a1, void *a2)
{
  type metadata accessor for FeaturedCollectionView();
  sub_10001C28C(&qword_1000C87B0);
  id result = (id)State.wrappedValue.getter();
  if (v4 == 1) {
    return [a2 play];
  }
  return result;
}

uint64_t *sub_10003AF10(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ColorScheme();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    id v11 = (uint64_t *)((char *)a1 + v9);
    id v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v14 = *v12;
    uint64_t v13 = (void *)v12[1];
    void *v11 = v14;
    v11[1] = v13;
    uint64_t v15 = (char *)a1 + v10;
    id v16 = (char *)a2 + v10;
    char *v15 = *v16;
    *((void *)v15 + 1) = *((void *)v16 + 1);
    uint64_t v17 = a3[7];
    uint64_t v18 = a3[8];
    unint64_t v19 = (uint64_t *)((char *)a1 + v17);
    unint64_t v20 = (uint64_t *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *unint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = v20[3];
    v19[2] = v20[2];
    v19[3] = v22;
    uint64_t v23 = *(void **)((char *)a2 + v18);
    *(uint64_t *)((char *)a1 + v18) = (uint64_t)v23;
    id v24 = v13;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v25 = v23;
  }
  return a1;
}

char *sub_10003B098(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  uint64_t v9 = a3[7];
  uint64_t v10 = a3[8];
  id v11 = &a1[v9];
  id v12 = &a2[v9];
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)id v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *(void *)&a1[v10] = *(void *)&a2[v10];
  return a1;
}

char *sub_10003B190(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C81D0);
    uint64_t v6 = sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ColorScheme();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v12 = *(void *)v10;
  uint64_t v11 = *((void *)v10 + 1);
  long long v13 = (void *)*((void *)v9 + 1);
  *(void *)uint64_t v9 = v12;
  *((void *)v9 + 1) = v11;

  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  id v16 = &a2[v14];
  char *v15 = *v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_release();
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v17];
  unint64_t v19 = &a2[v17];
  uint64_t v20 = *(void *)&a2[v17 + 8];
  *(void *)uint64_t v18 = *(void *)&a2[v17];
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *((void *)v19 + 3);
  *((void *)v18 + 2) = *((void *)v19 + 2);
  *((void *)v18 + 3) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = *(void **)&a1[v22];
  *(void *)&a1[v22] = *(void *)&a2[v22];

  return a1;
}

uint64_t sub_10003B2F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003B30C);
}

uint64_t sub_10003B30C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C8658);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10003B3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003B3E8);
}

uint64_t sub_10003B3E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10001C28C(&qword_1000C8658);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10003B4B8()
{
  return sub_10001DAF8(0);
}

void sub_10003B4C4(uint64_t a1, char *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for FeaturedCollectionView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_10003ADF8(a1, a2, v6);
}

uint64_t sub_10003B544()
{
  return sub_10003B56C(&qword_1000C8780, &qword_1000C8738, (void (*)(void))sub_10003B5EC);
}

uint64_t sub_10003B56C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001AD28(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10003B5EC()
{
  unint64_t result = qword_1000C8788;
  if (!qword_1000C8788)
  {
    sub_10001AD28(&qword_1000C8730);
    sub_10003B68C();
    sub_100009170(&qword_1000C8798, &qword_1000C8770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8788);
  }
  return result;
}

unint64_t sub_10003B68C()
{
  unint64_t result = qword_1000C8790;
  if (!qword_1000C8790)
  {
    sub_10001AD28(&qword_1000C8728);
    sub_10001AD28(&qword_1000C8760);
    sub_100009170(&qword_1000C8768, &qword_1000C8760);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8790);
  }
  return result;
}

uint64_t sub_10003B76C()
{
  uint64_t v1 = type metadata accessor for FeaturedCollectionView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v7 + 8, v2 | 7);
}

id sub_10003B8E0()
{
  uint64_t v1 = *(void *)(type metadata accessor for FeaturedCollectionView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10003AE88(v0 + v2, v3);
}

uint64_t sub_10003B980()
{
  uint64_t v1 = *(void *)(type metadata accessor for FeaturedCollectionView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_10003AD14(v2);
}

uint64_t sub_10003B9E0()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_10003BA60(void *a1)
{
  uint64_t v3 = type metadata accessor for Locale();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v4 - 8);
  id v5 = [objc_allocWithZone(v1) init];
  sub_100037FDC();
  id v6 = v5;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v6 setTips:isa];

  if (!a1)
  {
LABEL_9:
    [v6 setAllowBookmarks:0];
    [v6 setAllowPaging:0];
    [v6 setShouldDisplayNavigationTitle:0];
    [v6 setIsSharedVariant:1];
    [v6 setCurrentTip:a1];
    id v15 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:0 target:_bridgeAnythingToObjectiveC<A>(_:)() action:"doneTapped:"];
    swift_unknownObjectRelease();
    id v16 = [v6 navigationItem];
    [v16 setRightBarButtonItem:v15];

    id v17 = [v6 navigationItem];
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    String.init(localized:table:bundle:locale:comment:)();
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v17 setTitle:v18];

    return v6;
  }
  id v8 = a1;
  id v9 = v6;
  id v10 = v8;
  id result = [v9 tips];
  if (result)
  {
    uint64_t v12 = result;
    uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    if (v13)
    {
      v14.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      v14.super.Class isa = 0;
    }
    [v9 setTips:v14.super.isa];

    goto LABEL_9;
  }
  __break(1u);
  return result;
}

id sub_10003C0EC(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  unint64_t v7 = &a1[OBJC_IVAR____TtC4Tips26TPSSharedTipViewController_onDismissed];
  id v8 = (objc_class *)type metadata accessor for TPSSharedTipViewController();
  *(void *)unint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  v10.receiver = a1;
  v10.super_class = v8;
  return [super a3];
}

id sub_10003C14C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TPSSharedTipViewController();
  [super dealloc];
}

uint64_t type metadata accessor for TPSSharedTipViewController()
{
  return self;
}

BOOL sub_10003C1B8(BOOL a1)
{
  objc_super v2 = v1;
  id v4 = [v1 assetFileInfoManager];
  if (v4)
  {
    id v5 = v4;
    id v6 = [v2 assets];
    if (v6 && (v7 = v6, id v8 = [v6 videoId], v7, v8)
      || (id v9 = [v2 assets]) != 0
      && (v10 = v9, id v8 = [v9 posterId], v10, v8))
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v11 = String._bridgeToObjectiveC()();
      id v12 = [v5 fileInfoIdentifierWithMainIdentifier:v11 userInterfaceStyle:a1];

      if (v12)
      {

        swift_bridgeObjectRelease();
        id v5 = v12;
      }
      else
      {
        NSString v13 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v14 = [v5 fileInfoIdentifierWithMainIdentifier:v13 userInterfaceStyle:!a1];

        if (v14)
        {

          a1 = !a1;
        }
      }
    }
  }
  return a1;
}

id sub_10003C434()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TPSSplitViewController();
  return [super dealloc];
}

uint64_t sub_10003C49C()
{
  return sub_10003C740();
}

uint64_t sub_10003C4D8()
{
  return sub_10003CE90();
}

uint64_t sub_10003C580()
{
  sub_100011978();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v5)
  {
    id v1 = [v5 identifier];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v5)
  {
    id v2 = [v5 title];

    if (v2)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v0;
  return static Published.subscript.setter();
}

uint64_t sub_10003C72C()
{
  return sub_10003C740();
}

uint64_t sub_10003C740()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10003C878()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void sub_10003C96C(unint64_t a1, uint64_t a2)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v5 = v2;
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (a2)
  {
    id v6 = (void *)sub_10003D79C(a1, a2);
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    id v7 = v6;
    id v8 = (char *)v5;
    static Published.subscript.setter();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v6)
    {
      id v9 = *(void (**)(void *))&v8[OBJC_IVAR___TPSChecklistViewModel_actionHandler];
      if (v9)
      {
        swift_retain();
        v9(v6);
        sub_100005470((uint64_t)v9);
      }

      id v7 = v6;
    }
  }
}

double sub_10003CB2C@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

void sub_10003CBAC(unint64_t *a1)
{
  unint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_10003C96C(v1, v2);
}

id sub_10003CC00(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.getter();

  swift_release();
  swift_release();

  return v4;
}

uint64_t sub_10003CC8C()
{
  return sub_10003CE90();
}

uint64_t sub_10003CCFC@<X0>(void *a1@<X8>)
{
  return sub_10003CFC0(a1);
}

void sub_10003CD10(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_10003EE50(v1);
}

uint64_t sub_10003CD74()
{
  return sub_10003CE90();
}

Class sub_10003CDB0(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v5)
  {
    sub_1000067A4(0, (unint64_t *)&qword_1000C8330);
    v3.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v3.super.Class isa = 0;
  }

  return v3.super.isa;
}

uint64_t sub_10003CE7C()
{
  return sub_10003CE90();
}

uint64_t sub_10003CE90()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10003CF10(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1000067A4(0, (unint64_t *)&qword_1000C8330);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = a1;
  return static Published.subscript.setter();
}

uint64_t sub_10003CFAC@<X0>(void *a1@<X8>)
{
  return sub_10003CFC0(a1);
}

uint64_t sub_10003CFC0@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10003D03C(uint64_t a1, void **a2)
{
  id v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_10003D0B4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10003D41C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v1) {
    return 1;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return 0;
}

uint64_t sub_10003D5CC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
      id v6 = v5;
      sub_1000067A4(0, (unint64_t *)&qword_1000C8330);
      char v7 = static NSObject.== infix(_:_:)();

      if (v7)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1) {
        goto LABEL_18;
      }
      if (v4) {
        break;
      }
      unint64_t v4 = 5;
      while (1)
      {
        unint64_t v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        id v13 = *(id *)(a2 + 8 * v4);
        char v14 = static NSObject.== infix(_:_:)();

        if (v14) {
          goto LABEL_6;
        }
        ++v4;
        if (v12 == v3) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v9 = 1;
    while (1)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      char v11 = static NSObject.== infix(_:_:)();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++v9;
      if (v10 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10003D79C(unint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!a2) {
    return v2;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v8)
  {
    swift_bridgeObjectRetain();
    unint64_t v4 = (unint64_t)sub_10003EC94(v8, a1, v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v4 >> 62)
    {
      if (_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_5;
      }
    }
    else if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_5:
      if ((v4 & 0xC000000000000001) != 0)
      {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_8;
      }
      if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v5 = *(id *)(v4 + 32);
LABEL_8:
        uint64_t v2 = (uint64_t)v5;
LABEL_19:
        swift_bridgeObjectRelease();
        return v2;
      }
      __break(1u);
      goto LABEL_22;
    }
    swift_bridgeObjectRelease();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (!v8) {
    return 0;
  }
  swift_bridgeObjectRetain();
  a1 = (unint64_t)sub_10003EC94(v8, a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1 >> 62)
  {
LABEL_22:
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    if (!result) {
      goto LABEL_23;
    }
    goto LABEL_15;
  }
  uint64_t result = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!result)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_15:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_18;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v7 = *(id *)(a1 + 32);
LABEL_18:
    uint64_t v2 = (uint64_t)v7;
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_10003DA88()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v0 = v5;
  if (v5)
  {
    if (v5 >> 62) {
      goto LABEL_7;
    }
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      while ((v5 & 0xC000000000000001) == 0)
      {
        if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_14;
        }
        __break(1u);
LABEL_7:
        swift_bridgeObjectRetain();
        uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v1) {
          goto LABEL_8;
        }
      }
LABEL_19:
      id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_15;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  unint64_t v0 = v5;
  if (!v5) {
    return 0;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  if ((v5 & 0xC000000000000001) != 0) {
    goto LABEL_19;
  }
  if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_14:
    id v4 = *(id *)(v0 + 32);
LABEL_15:
    uint64_t v3 = (uint64_t)v4;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

void sub_10003DC6C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v1;
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
}

id sub_10003DF34()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChecklistViewModel();
  return [super dealloc];
}

uint64_t sub_10003DF6C()
{
  return type metadata accessor for ChecklistViewModel();
}

uint64_t sub_10003DF74@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ChecklistViewModel();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10003DFB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10001C28C(&qword_1000C8710);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 checklistContent];
  if (v7 && (unint64_t v8 = v7, v9 = [v7 assets], v8, v9))
  {
    id v10 = [v9 baseURL];

    if (v10)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v11 = type metadata accessor for URL();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 0, 1, v11);
    }
    else
    {
      uint64_t v15 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
    }
    return sub_10003F15C((uint64_t)v6, a2);
  }
  else
  {
    uint64_t v12 = type metadata accessor for URL();
    id v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    return v13(a2, 1, 1, v12);
  }
}

uint64_t sub_10003E390(void *a1)
{
  uint64_t v3 = type metadata accessor for Locale();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v4 - 8);
  id v5 = [a1 checklistContent];
  if (v5 && (id v6 = v5, v7 = [v5 subtitle], v6, v7))
  {
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return v8;
  }
  else
  {
    id v10 = [v1 titleFor:a1];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    [v1 isCompletedFor:a1];
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    String.init(localized:table:bundle:locale:comment:)();
    sub_10001C28C(&qword_1000C8970);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_10008CF30;
    *(void *)(v14 + 56) = &type metadata for String;
    *(void *)(v14 + 64) = sub_10003F108();
    *(void *)(v14 + 32) = v11;
    *(void *)(v14 + 40) = v13;
    uint64_t v15 = String.init(format:_:)();
    swift_bridgeObjectRelease();
    return v15;
  }
}

uint64_t sub_10003E820@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = [a1 checklistContent];
  if (!v3) {
    goto LABEL_15;
  }
  uint64_t v4 = v3;
  id v5 = [v3 assets];

  if (!v5) {
    goto LABEL_15;
  }
  id v6 = [v5 symbolSize];

  if (!v6) {
    goto LABEL_15;
  }
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  BOOL v10 = v7 == 0x656772616CLL && v9 == 0xE500000000000000;
  if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = (unsigned int *)&enum case for Image.Scale.large(_:);
    goto LABEL_16;
  }
  if (v7 == 0x6C6C616D73 && v9 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
LABEL_15:
      uint64_t v11 = (unsigned int *)&enum case for Image.Scale.medium(_:);
      goto LABEL_16;
    }
  }
  uint64_t v11 = (unsigned int *)&enum case for Image.Scale.small(_:);
LABEL_16:
  uint64_t v14 = *v11;
  uint64_t v15 = type metadata accessor for Image.Scale();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(a2, v14, v15);
}

double sub_10003EA34@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10003EAC0(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

void (*sub_10003EB5C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  id v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10003EC0C(v6, a2, a3);
  return sub_10003EBC4;
}

void sub_10003EBC4(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_10003EC0C(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  id v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)id v3 = v4;
    return sub_10003EC8C;
  }
  __break(1u);
  return result;
}

void sub_10003EC8C(id *a1)
{
}

void *sub_10003EC94(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      unint64_t v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v8 = v7;
        unint64_t v9 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_21;
        }
        uint64_t v10 = v5;
        id v11 = [v7 identifier];
        uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v14 = v13;

        if (v12 == a2 && v14 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_17:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          goto LABEL_5;
        }
        char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_17;
        }

LABEL_5:
        ++v6;
        uint64_t v5 = v10;
        if (v9 == v10) {
          return &_swiftEmptyArrayStorage;
        }
      }
      if (v6 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      if (!v5) {
        return &_swiftEmptyArrayStorage;
      }
    }
    id v7 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return &_swiftEmptyArrayStorage;
}

void sub_10003EE50(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  unint64_t v6 = a1;
  id v3 = a1;
  id v4 = v1;
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v6)
  {
    uint64_t v5 = *(void (**)(void *))&v4[OBJC_IVAR___TPSChecklistViewModel_actionHandler];
    if (v5)
    {
      swift_retain();
      v5(v6);
      sub_100005470((uint64_t)v5);
    }
  }
}

void *sub_10003EF54(void *a1)
{
  id v2 = [a1 checklistContent];
  if (v2 && (v3 = v2, id v4 = [v2 bodyContent], v3, v4))
  {
    sub_10001C28C(&qword_1000C8960);
    uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v6 = (uint64_t)sub_10005B8B8(v5);
    swift_bridgeObjectRelease();
    if (!v6)
    {
      sub_10001C28C(&qword_1000C8968);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_10008CF30;
      *(void *)(v6 + 32) = sub_10005E764((uint64_t)_swiftEmptyArrayStorage);
    }
    return (void *)v6;
  }
  else
  {
    id v8 = [a1 checklistContent];
    NSString v9 = v8;
    if (v8)
    {
      id v10 = [v8 bodyText];

      if (v10)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        NSString v9 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v9 = 0;
      }
    }
    id v11 = [self textContentWithText:v9];

    sub_10001C28C(&qword_1000C8958);
    uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v13 = sub_10005B774(v12);
    swift_bridgeObjectRelease();
    return v13;
  }
}

unint64_t sub_10003F108()
{
  unint64_t result = qword_1000C8978;
  if (!qword_1000C8978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8978);
  }
  return result;
}

uint64_t sub_10003F15C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001C28C(&qword_1000C8710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10003F1C8(unint64_t *a1)
{
  unint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_10003C96C(v1, v2);
}

uint64_t sub_10003F208@<X0>(void *a1@<X8>)
{
  return sub_10003CFC0(a1);
}

void sub_10003F230(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_10003EE50(v1);
}

uint64_t sub_10003F288@<X0>(void *a1@<X8>)
{
  return sub_10003CFC0(a1);
}

unint64_t sub_10003F2BC()
{
  unint64_t result = qword_1000C8988;
  if (!qword_1000C8988)
  {
    sub_10001AD28(&qword_1000C8980);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8988);
  }
  return result;
}

uint64_t sub_10003F320()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10003F358(uint64_t a1)
{
  return sub_10005B75C(a1, *(void *)(v1 + 16));
}

uint64_t sub_10003F360(void *a1)
{
  id v2 = [a1 checklistContent];
  if (v2
    && (v3 = v2, id v4 = [v2 assets], v3, v4)
    && (id v5 = [v4 symbolColor], v4, v5))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1000067A4(0, &qword_1000C8538);
    static UIColor.colorForSystemColorString(_:)();
    swift_bridgeObjectRelease();
    return Color.init(_:)();
  }
  else
  {
    id v7 = [a1 checklistContent];
    if (v7
      && (id v8 = v7, v9 = [v7 assets], v8, v9)
      && (id v10 = [v9 symbolId], v9, v10))
    {

      return static Color.black.getter();
    }
    else
    {
      return static Color.yellow.getter();
    }
  }
}

void sub_10003F4F4(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v51 = a5;
  id v50 = a4;
  uint64_t v55 = a2;
  uint64_t v54 = a1;
  uint64_t v63 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v61 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v60 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v57 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for UIButton.Configuration.TitleAlignment();
  uint64_t v52 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10001C28C(&qword_1000C89C0);
  __chkstk_darwin(v14 - 8);
  char v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = a6;
  if (a7) {
    static UIButton.Configuration.filled()();
  }
  else {
    static UIButton.Configuration.plain()();
  }
  id v17 = self;
  [v17 buttonFontSize];
  id v18 = [v17 systemFontOfSize:];
  id v19 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleBody];
  id v62 = v18;
  id v20 = [v19 scaledFontForFont:v18];

  int v56 = a7;
  if (a7) {
    id v21 = a3;
  }
  else {
    id v21 = [a3 colorWithAlphaComponent:0.3];
  }
  uint64_t v22 = v21;
  sub_10001C28C(&qword_1000C89C8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10008D280;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v24 = sub_1000067A4(0, (unint64_t *)&qword_1000C89D0);
  *(void *)(inited + 40) = v20;
  *(void *)(inited + 64) = v24;
  *(void *)(inited + 72) = NSParagraphStyleAttributeName;
  id v25 = objc_allocWithZone((Class)NSMutableParagraphStyle);
  uint64_t v26 = NSFontAttributeName;
  id v27 = v20;
  char v28 = NSParagraphStyleAttributeName;
  id v29 = [v25 initWithAlignment:1];
  uint64_t v30 = sub_1000067A4(0, &qword_1000C89D8);
  *(void *)(inited + 80) = v29;
  *(void *)(inited + 104) = v30;
  *(void *)(inited + 112) = NSForegroundColorAttributeName;
  *(void *)(inited + 144) = sub_1000067A4(0, &qword_1000C8538);
  *(void *)(inited + 120) = v22;
  uint64_t v31 = NSForegroundColorAttributeName;
  id v32 = v22;
  unint64_t v33 = sub_100004390(inited);
  *(void *)(swift_allocObject() + 16) = v33;
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v34 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v16, 0, 1, v34);
  UIButton.Configuration.titleTextAttributesTransformer.setter();
  swift_bridgeObjectRetain();
  UIButton.Configuration.title.setter();
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v13, enum case for UIButton.Configuration.TitleAlignment.center(_:), v53);
  UIButton.Configuration.titleAlignment.setter();
  id v35 = v32;
  UIButton.Configuration.baseForegroundColor.setter();
  if (v56)
  {
    id v36 = v50;
    UIButton.Configuration.baseBackgroundColor.setter();
  }
  else
  {
    id v37 = self;
    id v38 = [v37 systemGray6Color];
    id v39 = v27;
    id v40 = (void (*)(unsigned char *, void))UIButton.Configuration.background.modify();
    UIBackgroundConfiguration.strokeColor.setter();
    v40(v65, 0);
    id v41 = [v37 clearColor];
    unint64_t v42 = (void (*)(unsigned char *, void))UIButton.Configuration.background.modify();
    UIBackgroundConfiguration.backgroundColor.setter();
    v42(v65, 0);
    id v27 = v39;
  }
  uint64_t v43 = v64;
  (*(void (**)(char *, void, uint64_t))(v58 + 104))(v57, enum case for UIButton.Configuration.Size.medium(_:), v59);
  UIButton.Configuration.buttonSize.setter();
  (*(void (**)(char *, void, uint64_t))(v61 + 104))(v60, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v63);
  UIButton.Configuration.cornerStyle.setter();
  if (v43)
  {
    swift_bridgeObjectRetain();
    NSString v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v45 = [self systemImageNamed:v44];

    if (v45)
    {
      UIButton.Configuration.imagePlacement.setter();
      UIButton.Configuration.imagePadding.setter();
      id v46 = v27;
      id v47 = [self configurationWithScale:1];
      id v48 = [v45 imageByApplyingSymbolConfiguration:v47];
      UIButton.Configuration.image.setter();

      id v27 = v46;
    }
  }
}

void sub_100040234(uint64_t a1@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v1 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v36 = *(void *)(v1 - 8);
  uint64_t v37 = v1;
  __chkstk_darwin(v1);
  id v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v4 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001C28C(&qword_1000C89C0);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UIButton.Configuration.TitleAlignment();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for UIButton.Configuration();
  uint64_t v38 = *(void *)(v16 - 8);
  uint64_t v39 = v16;
  __chkstk_darwin(v16);
  id v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.plain()();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  UIButton.Configuration.title.setter();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for UIButton.Configuration.TitleAlignment.center(_:), v10);
  UIButton.Configuration.titleAlignment.setter();
  id v19 = self;
  [v19 buttonFontSize];
  id v20 = [v19 systemFontOfSize:];
  id v21 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleBody];
  id v22 = [v21 scaledFontForFont:v20];

  sub_10001C28C(&qword_1000C89C8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10008CF30;
  *(void *)(inited + 32) = NSFontAttributeName;
  *(void *)(inited + 64) = sub_1000067A4(0, (unint64_t *)&qword_1000C89D0);
  *(void *)(inited + 40) = v22;
  uint64_t v24 = NSFontAttributeName;
  id v34 = v22;
  unint64_t v25 = sub_100004390(inited);
  *(void *)(swift_allocObject() + 16) = v25;
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v26 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v9, 0, 1, v26);
  UIButton.Configuration.titleTextAttributesTransformer.setter();
  id v27 = [self systemBlueColor];
  UIButton.Configuration.baseForegroundColor.setter();
  id v28 = [self effectWithStyle:8];
  [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v28];
  id v29 = (void (*)(unsigned char *, void))UIButton.Configuration.background.modify();
  UIBackgroundConfiguration.customView.setter();
  v29(v41, 0);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for UIButton.Configuration.Size.medium(_:), v35);
  UIButton.Configuration.buttonSize.setter();
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v3, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v37);
  UIButton.Configuration.cornerStyle.setter();
  UIButton.Configuration.imagePlacement.setter();
  UIButton.Configuration.imagePadding.setter();
  NSString v30 = String._bridgeToObjectiveC()();
  id v31 = [self systemImageNamed:v30];

  if (v31)
  {
    id v32 = [self configurationWithScale:1];
    id v33 = [v31 imageByApplyingSymbolConfiguration:v32];
    UIButton.Configuration.image.setter();

    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v40, v18, v39);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v40, v18, v39);
  }
}

uint64_t sub_100040A0C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100040A44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007F0F8(a1, a2);
}

void sub_100040A54(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchResult.Item.Value();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void **)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void **, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v6 = (*(uint64_t (**)(void **, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for SearchResult.Item.Value.topic(_:))
  {
    (*(void (**)(void **, uint64_t))(v3 + 96))(v5, v2);
    uint64_t v7 = *v5;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v9 = (void *)Strong;
      sub_100040D98();
LABEL_7:

      goto LABEL_8;
    }
    goto LABEL_8;
  }
  if (v6 == enum case for SearchResult.Item.Value.tip(_:))
  {
    (*(void (**)(void **, uint64_t))(v3 + 96))(v5, v2);
    uint64_t v7 = *v5;
    swift_beginAccess();
    uint64_t v10 = swift_unknownObjectWeakLoadStrong();
    if (v10)
    {
      id v9 = (void *)v10;
      sub_100040C28(v7);
      goto LABEL_7;
    }
LABEL_8:

    return;
  }
  (*(void (**)(void **, uint64_t))(v3 + 8))(v5, v2);
}

void sub_100040C28(void *a1)
{
  id v3 = [v1 appController];
  id v7 = [objc_allocWithZone((Class)TPSTipsByCollectionViewController) initWithAppController:v3];

  if (v7)
  {
    [v7 setDelegate:v1];
    [v7 setShouldDisplayNavigationTitle:1];
    NSString v4 = [a1 identifier];
    if (!v4)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v4 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v7 updateWithCollectionID:0 tipID:v4];

    id v5 = [v1 collectionListViewController];
    id v6 = [v5 navigationController];

    if (v6)
    {
      [v6 pushViewController:v7 animated:1];
    }
  }
}

void sub_100040D98()
{
  dispatch thunk of UserGuideTopic.productId.getter();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  dispatch thunk of UserGuideTopic.topicId.getter();
  if (v2)
  {
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    dispatch thunk of UserGuideTopic.version.getter();
    if (v4)
    {
LABEL_3:
      NSString v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    NSString v3 = 0;
    dispatch thunk of UserGuideTopic.version.getter();
    if (v5) {
      goto LABEL_3;
    }
  }
  NSString v6 = 0;
LABEL_6:
  [v0 displayUserGuideWithIdentifier:v1 topicId:v3 version:v6 platformIndependent:1 prefersLandingPage:1];
}

uint64_t TPSMainViewController.tipsViewController(_:didSelectSearchResult:)(uint64_t a1, uint64_t a2)
{
  return sub_100040F10(a2);
}

uint64_t sub_100040F10(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10001C28C((uint64_t *)&unk_1000C8A50);
  __chkstk_darwin(v4 - 8);
  NSString v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for SearchResult.Item.Value();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (void **)&v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v13 = (void **)&v27[-v12];
  sub_10003AA0C(a1, (uint64_t)v27);
  if (!v28)
  {
    sub_1000143B4((uint64_t)v27, &qword_1000C8A40);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    return sub_1000143B4((uint64_t)v6, (uint64_t *)&unk_1000C8A50);
  }
  int v14 = swift_dynamicCast();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v6, v14 ^ 1u, 1, v7);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_1000143B4((uint64_t)v6, (uint64_t *)&unk_1000C8A50);
  }
  (*(void (**)(void **, unsigned char *, uint64_t))(v8 + 32))(v13, v6, v7);
  (*(void (**)(void **, void **, uint64_t))(v8 + 16))(v11, v13, v7);
  int v15 = (*(uint64_t (**)(void **, uint64_t))(v8 + 88))(v11, v7);
  if (v15 == enum case for SearchResult.Item.Value.topic(_:))
  {
    (*(void (**)(void **, uint64_t))(v8 + 96))(v11, v7);
    uint64_t v16 = *v11;
    dispatch thunk of UserGuideTopic.productId.getter();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    dispatch thunk of UserGuideTopic.topicId.getter();
    if (v18)
    {
      NSString v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      dispatch thunk of UserGuideTopic.version.getter();
      if (v20)
      {
LABEL_6:
        NSString v21 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
LABEL_16:
        [v2 displayUserGuideWithIdentifier:v17 topicId:v19 version:v21 platformIndependent:1 prefersLandingPage:1];

        return (*(uint64_t (**)(void **, uint64_t))(v8 + 8))(v13, v7);
      }
    }
    else
    {
      NSString v19 = 0;
      dispatch thunk of UserGuideTopic.version.getter();
      if (v26) {
        goto LABEL_6;
      }
    }
    NSString v21 = 0;
    goto LABEL_16;
  }
  if (v15 != enum case for SearchResult.Item.Value.tip(_:))
  {
    unint64_t v25 = *(uint64_t (**)(void **, uint64_t))(v8 + 8);
    v25(v13, v7);
    return v25(v11, v7);
  }
  (*(void (**)(void **, uint64_t))(v8 + 96))(v11, v7);
  uint64_t v23 = *v11;
  NSString v24 = [v23 identifier];
  if (!v24)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v2 showTipWithID:v24 launchType:TPSAnalyticsLaunchTypeSearchResult];

  return (*(uint64_t (**)(void **, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t sub_100041308()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100041340(uint64_t a1)
{
}

uint64_t sub_100041348@<X0>(unsigned char *a1@<X8>)
{
  return sub_100041504(a1);
}

uint64_t sub_10004135C(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_1000413CC@<X0>(void *a1@<X8>)
{
  return sub_10003CFC0(a1);
}

uint64_t sub_1000413E0(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_10004146C()
{
  return sub_10003C740();
}

uint64_t sub_1000414A4@<X0>(unsigned char *a1@<X8>)
{
  return sub_100041504(a1);
}

uint64_t sub_1000414B8(uint64_t a1, void **a2)
{
  return sub_1000415A4(a1, a2);
}

uint64_t sub_1000414DC()
{
  return sub_10003C740();
}

uint64_t sub_1000414F0@<X0>(unsigned char *a1@<X8>)
{
  return sub_100041504(a1);
}

uint64_t sub_100041504@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100041580(uint64_t a1, void **a2)
{
  return sub_1000415A4(a1, a2);
}

uint64_t sub_1000415A4(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v2;
  static Published.subscript.setter();
  return sub_100015EC4();
}

uint64_t sub_100041648()
{
  return sub_100041B14();
}

uint64_t sub_100041760(uint64_t a1, uint64_t a2)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if (v8)
  {
    NSString v6 = *(void (**)())(v2 + OBJC_IVAR___CollectionListViewModel_actionHandler);
    if (v6)
    {
      swift_retain();
      v6();
      sub_100005470((uint64_t)v6);
    }
    if (a2 && (v7 == a1 && v8 == a2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_100041950(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  static Published.subscript.setter();
  sub_100041760(v5, v6);
  return swift_bridgeObjectRelease();
}

id sub_100041A4C(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v5)
  {
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v3 = 0;
  }

  return v3;
}

uint64_t sub_100041B00()
{
  return sub_100041B14();
}

uint64_t sub_100041B14()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100041C24()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if (v4)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    id v2 = v0;
    static Published.subscript.setter();
    sub_100041760(v3, v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

double sub_100041D4C@<D0>(_OWORD *a1@<X8>)
{
  return sub_100041D60(a1);
}

double sub_100041D60@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_100041DDC(uint64_t a1, void **a2)
{
  id v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  v2;
  static Published.subscript.setter();
  return sub_100041C24();
}

uint64_t sub_100041E7C()
{
  return sub_10003CE90();
}

uint64_t sub_100041E90@<X0>(void *a1@<X8>)
{
  return sub_10003CFC0(a1);
}

uint64_t sub_100041EA4(void **a1, void **a2)
{
  return sub_10004221C(a1, a2);
}

uint64_t sub_100041ECC()
{
  return sub_10003CE90();
}

void sub_100041EE0(void **a1, void **a2)
{
  id v2 = *a1;
  long long v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v2;
  v3;
  static Published.subscript.setter();
  sub_100007700();
}

uint64_t sub_100041FF0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000420D8@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100042158(void **a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v2;
  id v5 = v3;
  return static Published.subscript.setter();
}

uint64_t sub_1000421E0()
{
  return sub_10003CE90();
}

uint64_t sub_1000421F4@<X0>(void *a1@<X8>)
{
  return sub_10003CFC0(a1);
}

uint64_t sub_100042208(void **a1, void **a2)
{
  return sub_10004221C(a1, a2);
}

uint64_t sub_10004221C(void **a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v2;
  id v5 = v3;
  return static Published.subscript.setter();
}

uint64_t sub_10004228C()
{
  return sub_10003CE90();
}

uint64_t sub_1000422C4()
{
  return sub_10003CE90();
}

uint64_t sub_1000422D8@<X0>(void *a1@<X8>)
{
  return sub_10003CFC0(a1);
}

uint64_t sub_1000422EC(uint64_t a1, void **a2)
{
  return sub_1000423F0(a1, a2);
}

uint64_t sub_1000423B4()
{
  return sub_10003CE90();
}

uint64_t sub_1000423C8@<X0>(void *a1@<X8>)
{
  return sub_10003CFC0(a1);
}

uint64_t sub_1000423DC(uint64_t a1, void **a2)
{
  return sub_1000423F0(a1, a2);
}

uint64_t sub_1000423F0(uint64_t a1, void **a2)
{
  id v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_100042498()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();

  if (v3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    sub_1000067A4(0, (unint64_t *)&qword_1000CA260);
    id v0 = v3;
    char v1 = static NSObject.== infix(_:_:)();
  }
  else
  {
    char v1 = 0;
  }
  return v1 & 1;
}

uint64_t sub_1000426DC(uint64_t a1)
{
  char v1 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;
  swift_retain();
  v1(v2, v4);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1000428D8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_100042974(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    id v4 = *(void (**)(uint64_t))(Strong + OBJC_IVAR___CollectionListViewModel_checklistHandler);
    sub_1000397EC((uint64_t)v4);

    if (v4)
    {
      v4(a1);
      sub_100005470((uint64_t)v4);
    }
  }
}

id sub_100042A90()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CollectionListViewModel();
  return [super dealloc];
}

id sub_100042B0C()
{
  uint64_t v1 = type metadata accessor for ColorScheme();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  id v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v15 - v6;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v8 = v16;
  if (!v16) {
    return 0;
  }
  uint64_t v9 = &v0[OBJC_IVAR___CollectionListViewModel_colorScheme];
  swift_beginAccess();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v10(v7, v9, v1);
  v10(v5, v7, v1);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v5, v1);
  uint64_t v12 = 0;
  if (v11 != enum case for ColorScheme.light(_:))
  {
    if (v11 == enum case for ColorScheme.dark(_:))
    {
      uint64_t v12 = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      uint64_t v12 = 0;
    }
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  id v13 = [v0 assetsInfoFor:v8 userInterfaceStyle:v12];

  return v13;
}

id sub_100042D48(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (!v6) {
    return [a1 count];
  }
  sub_1000067A4(0, (unint64_t *)&qword_1000CA260);
  id v2 = a1;
  char v3 = static NSObject.== infix(_:_:)();

  if ((v3 & 1) == 0) {
    return [a1 count];
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();

    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v4 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);

    swift_bridgeObjectRelease();
  }
  return (id)v4;
}

uint64_t sub_100042F6C@<X0>(void *a1@<X8>)
{
  return sub_10003CFC0(a1);
}

uint64_t sub_100042FA8@<X0>(void *a1@<X8>)
{
  return sub_10003CFC0(a1);
}

uint64_t sub_100042FD0(void **a1, void **a2)
{
  return sub_10004221C(a1, a2);
}

uint64_t sub_100042FF8@<X0>(void *a1@<X8>)
{
  return sub_10003CFC0(a1);
}

uint64_t sub_100043024@<X0>(void *a1@<X8>)
{
  return sub_10003CFC0(a1);
}

uint64_t sub_10004304C(void **a1, void **a2)
{
  return sub_10004221C(a1, a2);
}

uint64_t sub_100043074@<X0>(void *a1@<X8>)
{
  return sub_10003CFC0(a1);
}

uint64_t sub_10004309C(uint64_t a1, void **a2)
{
  return sub_1000423F0(a1, a2);
}

uint64_t sub_1000430C4@<X0>(void *a1@<X8>)
{
  return sub_10003CFC0(a1);
}

uint64_t sub_1000430EC(uint64_t a1, void **a2)
{
  return sub_1000423F0(a1, a2);
}

uint64_t sub_100043114@<X0>(void *a1@<X8>)
{
  return sub_10003CFC0(a1);
}

uint64_t sub_10004313C(uint64_t a1, void **a2)
{
  return sub_1000423F0(a1, a2);
}

double sub_100043164@<D0>(_OWORD *a1@<X8>)
{
  return sub_100041D60(a1);
}

double sub_100043190@<D0>(_OWORD *a1@<X8>)
{
  return sub_100041D60(a1);
}

uint64_t sub_1000431BC@<X0>(unsigned char *a1@<X8>)
{
  return sub_100041504(a1);
}

uint64_t sub_1000431E4(uint64_t a1, void **a2)
{
  return sub_1000415A4(a1, a2);
}

uint64_t sub_100043224@<X0>(unsigned char *a1@<X8>)
{
  return sub_100041504(a1);
}

uint64_t sub_10004324C(uint64_t a1, void **a2)
{
  return sub_1000415A4(a1, a2);
}

uint64_t sub_100043284@<X0>(unsigned char *a1@<X8>)
{
  return sub_100041504(a1);
}

uint64_t sub_1000432B0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000432E8(uint64_t a1)
{
}

uint64_t sub_1000432F0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100043328()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

void sub_10004333C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  NSString v2 = String._bridgeToObjectiveC()();
  (*(void (**)(uint64_t, NSString))(v1 + 16))(v1, v2);
}

uint64_t assignWithCopy for TipListView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void **)(a2 + 16);
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for TipListView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TipListView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TipListView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TipListView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_100043560()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004357C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v6 = type metadata accessor for GeometryProxy();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  long long v9 = *(_OWORD *)(a2 + 8);
  long long v14 = *(_OWORD *)(a2 + 24);
  long long v15 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v11 + 32) = v12;
  *(void *)(v11 + 48) = *(void *)(a2 + 32);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *a3 = sub_100048290;
  a3[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v11;
  sub_100037AD8((uint64_t)&v15);
  return sub_10004802C((uint64_t)&v14);
}

uint64_t sub_1000436DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v91 = a1;
  uint64_t v86 = a4;
  uint64_t v85 = type metadata accessor for ScrollViewProxy();
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v90 = v6;
  uint64_t v83 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = (void *)sub_10001C28C(&qword_1000C8C10);
  uint64_t v7 = *(v70 - 1);
  __chkstk_darwin(v70);
  long long v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = (void *)sub_10001C28C(&qword_1000C8C18);
  *((void *)&v73 + 1) = *(v75 - 1);
  __chkstk_darwin(v75);
  *(void *)&long long v73 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_10001C28C(&qword_1000C8C20);
  __chkstk_darwin(v71);
  long long v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_10001C28C(&qword_1000C8C28);
  __chkstk_darwin(v72);
  uint64_t v74 = (uint64_t)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_10001C28C(&qword_1000C8C30);
  __chkstk_darwin(v88);
  uint64_t v87 = (uint64_t)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_10001C28C(&qword_1000C8C38);
  uint64_t v77 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  unint64_t v89 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_10001C28C(&qword_1000C8C40);
  uint64_t v81 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v80 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_10001C28C(&qword_1000C8C48);
  __chkstk_darwin(v76);
  uint64_t v78 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void **)(a2 + 16);
  type metadata accessor for TipListViewModel(0);
  sub_100048314(&qword_1000C8C50, (void (*)(uint64_t))type metadata accessor for TipListViewModel);
  NSString v19 = (void *)ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();

  v95[0] = v96;
  v95[1] = v97;
  uint64_t v92 = a2;
  uint64_t v93 = a3;
  sub_10001C28C(&qword_1000C8C58);
  sub_100009170(&qword_1000C8C60, &qword_1000C8C58);
  List.init(selection:content:)();
  unsigned __int8 v20 = static Axis.Set.horizontal.getter();
  unsigned __int8 v21 = static Axis.Set.vertical.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v20) {
    Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v21) {
    Axis.Set.init(rawValue:)();
  }
  static Alignment.center.getter();
  sub_100009170(&qword_1000C8C68, &qword_1000C8C10);
  uint64_t v22 = v73;
  uint64_t v23 = v70;
  View.containerRelativeFrame(_:alignment:)();
  (*(void (**)(char *, void *))(v7 + 8))(v9, v23);
  uint64_t v24 = static Alignment.center.getter();
  uint64_t v26 = v25;
  GeometryProxy.size.getter();
  double v28 = round(v27);
  uint64_t v69 = (_OWORD *)a2;
  v95[0] = *(_OWORD *)(a2 + 24);
  uint64_t v29 = swift_allocObject();
  long long v30 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v29 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v29 + 32) = v30;
  *(void *)(v29 + 48) = *(void *)(a2 + 32);
  *(double *)(v29 + 56) = v28;
  uint64_t v70 = v18;
  sub_10004802C((uint64_t)v95);
  uint64_t v31 = Namespace.wrappedValue.getter();
  int v32 = static MatchedGeometryProperties.frame.getter();
  static UnitPoint.center.getter();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v37 = *((void *)&v73 + 1);
  uint64_t v38 = v75;
  (*(void (**)(char *, uint64_t, void *))(*((void *)&v73 + 1) + 16))(v12, v22, v75);
  uint64_t v39 = &v12[*(int *)(v71 + 36)];
  *(void *)uint64_t v39 = sub_100048374;
  *((void *)v39 + 1) = v29;
  *((void *)v39 + 2) = 0x646165487473696CLL;
  *((void *)v39 + 3) = 0xEA00000000007265;
  *((void *)v39 + 4) = v31;
  *((_DWORD *)v39 + 10) = v32;
  *((void *)v39 + 6) = v34;
  *((void *)v39 + 7) = v36;
  *((_WORD *)v39 + 32) = 0;
  *((void *)v39 + 9) = v24;
  *((void *)v39 + 10) = v26;
  (*(void (**)(uint64_t, void *))(v37 + 8))(v22, v38);
  uint64_t v40 = v74;
  sub_100016FEC((uint64_t)v12, v74, &qword_1000C8C20);
  id v41 = (void *)(v40 + *(int *)(v72 + 36));
  void *v41 = 1953720684;
  v41[1] = 0xE400000000000000;
  sub_1000143B4((uint64_t)v12, &qword_1000C8C20);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v43 = v87;
  sub_100016FEC(v40, v87, &qword_1000C8C28);
  uint64_t v44 = v43 + *(int *)(v88 + 36);
  *(void *)uint64_t v44 = KeyPath;
  *(void *)(v44 + 8) = 0;
  *(unsigned char *)(v44 + 16) = 0;
  sub_1000143B4(v40, &qword_1000C8C28);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v45 = v84;
  uint64_t v75 = *(void **)(v84 + 16);
  id v46 = v83;
  uint64_t v47 = v85;
  ((void (*)(char *, uint64_t, uint64_t))v75)(v83, v91, v85);
  uint64_t v48 = *(unsigned __int8 *)(v45 + 80);
  uint64_t v74 = v48 | 7;
  uint64_t v49 = swift_allocObject();
  uint64_t v84 = *(void *)(v45 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v84)(v49 + ((v48 + 16) & ~v48), v46, v47);
  uint64_t v50 = sub_1000067A4(0, (unint64_t *)&qword_1000CA260);
  *(void *)&long long v73 = sub_10004858C();
  *((void *)&v73 + 1) = sub_1000487CC((unint64_t *)&qword_1000C8B78, (unint64_t *)&qword_1000CA260);
  uint64_t v51 = v88;
  uint64_t v52 = v87;
  View.onChange<A>(of:initial:_:)();
  swift_release();

  sub_1000143B4(v52, &qword_1000C8C30);
  uint64_t v53 = v70;
  id v94 = (id)dispatch thunk of TipNavigationViewModel.currentTip.getter();
  ((void (*)(char *, uint64_t, uint64_t))v75)(v46, v91, v47);
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = v69;
  long long v56 = v69[1];
  *(_OWORD *)(v54 + 16) = *v69;
  *(_OWORD *)(v54 + 32) = v56;
  *(void *)(v54 + 48) = *((void *)v55 + 4);
  ((void (*)(uint64_t, char *, uint64_t))v84)(v54 + ((v48 + 56) & ~v48), v46, v47);
  id v57 = v53;
  sub_10004802C((uint64_t)v95);
  sub_10001C28C(&qword_1000C8930);
  *(void *)&long long v96 = v51;
  *((void *)&v96 + 1) = v50;
  long long v97 = v73;
  swift_getOpaqueTypeConformance2();
  sub_100048988();
  uint64_t v58 = v80;
  uint64_t v59 = v79;
  uint64_t v60 = v89;
  View.onChange<A>(of:initial:_:)();
  swift_release();

  (*(void (**)(char *, uint64_t))(v77 + 8))(v60, v59);
  uint64_t v61 = swift_allocObject();
  long long v62 = v55[1];
  *(_OWORD *)(v61 + 16) = *v55;
  *(_OWORD *)(v61 + 32) = v62;
  *(void *)(v61 + 48) = *((void *)v55 + 4);
  uint64_t v63 = v81;
  uint64_t v64 = (uint64_t)v78;
  uint64_t v65 = v82;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v78, v58, v82);
  uint64_t v66 = (uint64_t (**)())(v64 + *(int *)(v76 + 36));
  *uint64_t v66 = sub_100048A30;
  v66[1] = (uint64_t (*)())v61;
  v66[2] = 0;
  v66[3] = 0;
  id v67 = v57;
  sub_10004802C((uint64_t)v95);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v58, v65);
  return sub_100017278(v64, v86, &qword_1000C8C48);
}

uint64_t sub_1000442E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v87 = a3;
  uint64_t v4 = sub_10001C28C(&qword_1000C8EE8);
  uint64_t v85 = *(void *)(v4 - 8);
  uint64_t v86 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v84 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v83 = (char *)&v72 - v7;
  uint64_t v8 = sub_10001C28C(&qword_1000C8D18);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10001C28C(&qword_1000C8EF0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_10001C28C(&qword_1000C8EF8);
  __chkstk_darwin(v73);
  uint64_t v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10001C28C(&qword_1000C8F00);
  uint64_t v74 = *(void *)(v17 - 8);
  uint64_t v75 = v17;
  __chkstk_darwin(v17);
  NSString v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10001C28C(&qword_1000C8F08);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_10001C28C(&qword_1000C8F10) - 8;
  __chkstk_darwin(v76);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_10001C28C(&qword_1000C8F18) - 8;
  __chkstk_darwin(v79);
  uint64_t v77 = (uint64_t)&v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_10001C28C(&qword_1000C8F20) - 8;
  uint64_t v27 = __chkstk_darwin(v81);
  uint64_t v82 = (uint64_t)&v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v80 = (uint64_t)&v72 - v30;
  __chkstk_darwin(v29);
  uint64_t v88 = (uint64_t)&v72 - v31;
  sub_100044C28((uint64_t)v10);
  uint64_t v72 = a1;
  long long v95 = *(_OWORD *)(a1 + 24);
  v90[0] = *(_OWORD *)(a1 + 24);
  sub_10001C28C(&qword_1000C87B0);
  State.wrappedValue.getter();
  if ((_BYTE)v91) {
    double v32 = 0.0;
  }
  else {
    double v32 = 1.0;
  }
  sub_100016FEC((uint64_t)v10, (uint64_t)v14, &qword_1000C8D18);
  *(double *)&v14[*(int *)(v12 + 44)] = v32;
  sub_1000143B4((uint64_t)v10, &qword_1000C8D18);
  GeometryProxy.size.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_100016FEC((uint64_t)v14, (uint64_t)v16, &qword_1000C8EF0);
  uint64_t v33 = &v16[*(int *)(v73 + 36)];
  long long v34 = v92;
  *(_OWORD *)uint64_t v33 = v91;
  *((_OWORD *)v33 + 1) = v34;
  *((_OWORD *)v33 + 2) = v93;
  sub_1000143B4((uint64_t)v14, &qword_1000C8EF0);
  static VerticalEdge.Set.all.getter();
  sub_100049928(&qword_1000C8F28, &qword_1000C8EF8, (void (*)(void))sub_1000498F8);
  View.listRowSeparator(_:edges:)();
  sub_1000143B4((uint64_t)v16, &qword_1000C8EF8);
  uint64_t v36 = v74;
  uint64_t v35 = v75;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v23, v19, v75);
  uint64_t v37 = &v23[*(int *)(v21 + 60)];
  *(void *)uint64_t v37 = 0x646165487473696CLL;
  *((void *)v37 + 1) = 0xEA00000000007265;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v35);
  uint64_t v38 = v72;
  long long v94 = *(_OWORD *)(v72 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double v39 = -*(double *)v90;
  sub_100016FEC((uint64_t)v23, (uint64_t)v25, &qword_1000C8F08);
  uint64_t v40 = &v25[*(int *)(v76 + 44)];
  *(double *)uint64_t v40 = v39;
  *((void *)v40 + 2) = 0;
  *((void *)v40 + 3) = 0;
  *((void *)v40 + 1) = 0;
  v40[32] = 0;
  sub_1000143B4((uint64_t)v23, &qword_1000C8F08);
  uint64_t v41 = Namespace.wrappedValue.getter();
  LODWORD(v36) = static MatchedGeometryProperties.frame.getter();
  static UnitPoint.center.getter();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v46 = v77;
  sub_100016FEC((uint64_t)v25, v77, &qword_1000C8F10);
  uint64_t v47 = v46 + *(int *)(v79 + 44);
  *(void *)uint64_t v47 = 0x646165487473696CLL;
  *(void *)(v47 + 8) = 0xEA00000000007265;
  *(void *)(v47 + 16) = v41;
  *(_DWORD *)(v47 + 24) = v36;
  *(void *)(v47 + 32) = v43;
  *(void *)(v47 + 40) = v45;
  *(unsigned char *)(v47 + 48) = 1;
  sub_1000143B4((uint64_t)v25, &qword_1000C8F10);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v48 = *(void **)&v90[0];
  id v49 = [*(id *)&v90[0] gradient];

  memset(v96, 0, 32);
  v96[32] = 1;
  sub_1000473C0((uint64_t)v96, v90);

  uint64_t v50 = static Alignment.center.getter();
  uint64_t v52 = v51;
  uint64_t v53 = v80;
  sub_100016FEC(v46, v80, &qword_1000C8F18);
  uint64_t v54 = v53 + *(int *)(v81 + 44);
  long long v55 = v90[5];
  *(_OWORD *)(v54 + 64) = v90[4];
  *(_OWORD *)(v54 + 80) = v55;
  long long v56 = v90[7];
  *(_OWORD *)(v54 + 96) = v90[6];
  *(_OWORD *)(v54 + 112) = v56;
  long long v57 = v90[1];
  *(_OWORD *)uint64_t v54 = v90[0];
  *(_OWORD *)(v54 + 16) = v57;
  long long v58 = v90[3];
  *(_OWORD *)(v54 + 32) = v90[2];
  *(_OWORD *)(v54 + 48) = v58;
  *(void *)(v54 + 128) = v50;
  *(void *)(v54 + 136) = v52;
  sub_1000143B4(v46, &qword_1000C8F18);
  uint64_t v59 = v88;
  sub_100017278(v53, v88, &qword_1000C8F20);
  uint64_t v89 = dispatch thunk of TipNavigationViewModel.tips.getter();
  swift_getKeyPath();
  uint64_t v60 = swift_allocObject();
  long long v61 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)(v60 + 16) = *(_OWORD *)v38;
  *(_OWORD *)(v60 + 32) = v61;
  *(void *)(v60 + 48) = *(void *)(v38 + 32);
  sub_100037AD8((uint64_t)&v94);
  sub_10004802C((uint64_t)&v95);
  sub_10001C28C(&qword_1000C8980);
  sub_10001C28C(&qword_1000C8F40);
  sub_100009170(&qword_1000C8F48, &qword_1000C8980);
  sub_100049AA0();
  long long v62 = v83;
  ForEach<>.init(_:id:content:)();
  uint64_t v63 = v82;
  sub_100016FEC(v59, v82, &qword_1000C8F20);
  uint64_t v65 = v84;
  uint64_t v64 = v85;
  uint64_t v66 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
  uint64_t v67 = v86;
  v66(v84, v62, v86);
  uint64_t v68 = v87;
  sub_100016FEC(v63, v87, &qword_1000C8F20);
  uint64_t v69 = sub_10001C28C(&qword_1000C8F70);
  v66((char *)(v68 + *(int *)(v69 + 48)), v65, v67);
  uint64_t v70 = *(void (**)(char *, uint64_t))(v64 + 8);
  v70(v62, v67);
  sub_1000143B4(v88, &qword_1000C8F20);
  v70(v65, v67);
  return sub_1000143B4(v63, &qword_1000C8F20);
}

uint64_t sub_100044C28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v46 = a1;
  uint64_t v3 = sub_10001C28C(&qword_1000C8D28);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001C28C(&qword_1000C8D30);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001C28C(&qword_1000C8D38);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10001C28C(&qword_1000C8D40);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_10001C28C(&qword_1000C8D48);
  uint64_t v16 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = static HorizontalAlignment.center.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  uint64_t v19 = sub_10001C28C(&qword_1000C8D50);
  sub_1000467B0(v2, (uint64_t)&v5[*(int *)(v19 + 44)]);
  uint64_t v20 = static Alignment.center.getter();
  sub_10004CAB4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v8, 0.0, 1, 0.0, 1, v20, v21);
  sub_1000143B4((uint64_t)v5, &qword_1000C8D28);
  LOBYTE(v5) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_100016FEC((uint64_t)v8, (uint64_t)v12, &qword_1000C8D30);
  uint64_t v30 = &v12[*(int *)(v10 + 44)];
  *uint64_t v30 = (char)v5;
  *((void *)v30 + 1) = v23;
  *((void *)v30 + 2) = v25;
  *((void *)v30 + 3) = v27;
  *((void *)v30 + 4) = v29;
  v30[40] = 0;
  sub_1000143B4((uint64_t)v8, &qword_1000C8D30);
  LOBYTE(v10) = static Edge.Set.bottom.getter();
  long long v48 = *(_OWORD *)(v2 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  EdgeInsets.init(_all:)();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  sub_100016FEC((uint64_t)v12, (uint64_t)v15, &qword_1000C8D38);
  double v39 = &v15[*(int *)(v13 + 36)];
  *double v39 = v10;
  *((void *)v39 + 1) = v32;
  *((void *)v39 + 2) = v34;
  *((void *)v39 + 3) = v36;
  *((void *)v39 + 4) = v38;
  v39[40] = 0;
  sub_1000143B4((uint64_t)v12, &qword_1000C8D38);
  long long v47 = *(_OWORD *)(v2 + 24);
  uint64_t v40 = swift_allocObject();
  long long v41 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v40 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v40 + 32) = v41;
  *(void *)(v40 + 48) = *(void *)(v2 + 32);
  sub_100037AD8((uint64_t)&v48);
  sub_10004802C((uint64_t)&v47);
  sub_100049928(&qword_1000C8D58, &qword_1000C8D40, (void (*)(void))sub_100048FC0);
  View.readScrollOffset(onChange:)();
  swift_release();
  sub_1000143B4((uint64_t)v15, &qword_1000C8D40);
  uint64_t v43 = v45;
  uint64_t v42 = v46;
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v46, v18, v45);
  *(_WORD *)(v42 + *(int *)(sub_10001C28C(&qword_1000C8D18) + 36)) = 256;
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v43);
}

unint64_t sub_1000450D4@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v5 = (int *)type metadata accessor for TipListItemView(0);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v11 = sub_10001C28C(&qword_1000C8F78);
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t v37 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_10001C28C(&qword_1000C8F40);
  __chkstk_darwin(v35);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  long long v40 = *(_OWORD *)(a2 + 8);
  *uint64_t v8 = swift_getKeyPath();
  sub_10001C28C(&qword_1000C81D0);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = (uint64_t *)((char *)v8 + v5[5]);
  sub_100037AD8((uint64_t)&v40);
  type metadata accessor for TipListViewModel(0);
  sub_100048314(&qword_1000C8C50, (void (*)(uint64_t))type metadata accessor for TipListViewModel);
  id v18 = v16;
  uint64_t *v17 = ObservedObject.init(wrappedValue:)();
  v17[1] = v19;
  *(uint64_t *)((char *)v8 + v5[6]) = (uint64_t)v18;
  *(uint64_t *)((char *)v8 + v5[7]) = 4;
  sub_100049BA8((uint64_t)v8, (uint64_t)v10);
  unint64_t v20 = dispatch thunk of TipNavigationViewModel.tips.getter();
  unint64_t v21 = v20;
  if (!(v20 >> 62))
  {
    uint64_t v22 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v22) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  if (!v22) {
    goto LABEL_10;
  }
LABEL_3:
  BOOL v23 = __OFSUB__(v22, 1);
  unint64_t result = v22 - 1;
  if (v23)
  {
    __break(1u);
    goto LABEL_16;
  }
  if ((v21 & 0xC000000000000001) != 0)
  {
LABEL_16:
    id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (result >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_18:
    __break(1u);
    return result;
  }
  id v25 = *(id *)(v21 + 8 * result + 32);
LABEL_8:
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  sub_1000067A4(0, (unint64_t *)&qword_1000C8330);
  id v27 = v18;
  id v28 = v26;
  static NSObject.== infix(_:_:)();

LABEL_11:
  static VerticalEdge.Set.bottom.getter();
  sub_100048314(&qword_1000C8F58, (void (*)(uint64_t))type metadata accessor for TipListItemView);
  View.listRowSeparator(_:edges:)();
  sub_100049C0C((uint64_t)v10);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v29 = v39;
  if (v39) {
    uint64_t v30 = 0;
  }
  else {
    uint64_t v30 = 0x4020000000000000;
  }
  uint64_t v32 = v36;
  uint64_t v31 = v37;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v15, v13, v37);
  uint64_t v33 = &v15[*(int *)(v35 + 36)];
  *(void *)uint64_t v33 = v30;
  *((void *)v33 + 1) = 0;
  *((void *)v33 + 2) = v30;
  *((void *)v33 + 3) = 0;
  v33[32] = v29;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v31);
  return sub_100017278((uint64_t)v15, v38, &qword_1000C8F40);
}

uint64_t sub_100045524()
{
  return ScrollViewProxy.scrollTo<A>(_:anchor:)();
}

void sub_100045590(uint64_t a1, id *a2, uint64_t a3)
{
  if (*a2)
  {
    uint64_t v3 = *(void **)(a3 + 16);
    id v7 = *a2;
    unint64_t v4 = dispatch thunk of TipNavigationViewModel.tips.getter();
    char v5 = sub_10003D5CC((uint64_t)v7, v4);
    swift_bridgeObjectRelease();
    if (v5)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if ((v8 & 1) == 0)
      {
        id v6 = [v7 identifier];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        swift_getKeyPath();
        swift_getKeyPath();
        v3;
        static Published.subscript.setter();
        sub_10005C5F8();
      }
      if (*((unsigned char *)v3 + qword_1000CD1D0) == 1)
      {
        __chkstk_darwin(v7);
        static Animation.default.getter();
        withAnimation<A>(_:_:)();

        swift_release();
        return;
      }
    }
    else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
    {
      __break(0xC471u);
    }
  }
}

uint64_t sub_100045798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  static UnitPoint.center.getter();
  sub_1000067A4(0, (unint64_t *)&qword_1000C8330);
  sub_1000487CC(&qword_1000C8CC8, (unint64_t *)&qword_1000C8330);
  uint64_t result = ScrollViewProxy.scrollTo<A>(_:anchor:)();
  *(unsigned char *)(*(void *)(a3 + 16) + qword_1000CD1D0) = 0;
  return result;
}

uint64_t sub_100045870(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  __chkstk_darwin(v5);
  id v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v23 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v21 - v13;
  sub_1000067A4(0, (unint64_t *)&qword_1000C84E0);
  uint64_t v15 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v12, v8);
  long long v16 = *(_OWORD *)(a1 + 8);
  long long v28 = *(_OWORD *)(a1 + 24);
  long long v29 = v16;
  uint64_t v17 = swift_allocObject();
  long long v18 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v17 + 32) = v18;
  *(void *)(v17 + 48) = *(void *)(a1 + 32);
  aBlock[4] = sub_100048A40;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000374C;
  aBlock[3] = &unk_1000B84C0;
  uint64_t v19 = _Block_copy(aBlock);
  sub_100037AD8((uint64_t)&v29);
  sub_10004802C((uint64_t)&v28);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100048314((unint64_t *)&qword_1000C84E8, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10001C28C(&qword_1000C84F0);
  sub_100009170((unint64_t *)&qword_1000C84F8, &qword_1000C84F0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
  return ((uint64_t (*)(char *, uint64_t))v22)(v14, v23);
}

void sub_100045C60(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v2 == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if ((v2 & 1) == 0)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      v1;
      static Published.subscript.setter();
      sub_10005C5F8();
    }
  }
}

double sub_100045D74@<D0>(uint64_t a1@<X8>)
{
  long long v11 = *(_OWORD *)(v1 + 8);
  unint64_t v3 = dispatch thunk of TipNavigationViewModel.tips.getter();
  if (v3 >> 62) {
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v4)
  {
    long long v10 = *(_OWORD *)(v1 + 24);
    uint64_t v5 = swift_allocObject();
    long long v6 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v5 + 16) = *(_OWORD *)v1;
    *(_OWORD *)(v5 + 32) = v6;
    *(void *)(v5 + 48) = *(void *)(v1 + 32);
    sub_100037AD8((uint64_t)&v11);
    sub_10004802C((uint64_t)&v10);
  }
  sub_10001C28C(&qword_1000C8BA0);
  sub_100009170(&qword_1000C8BA8, &qword_1000C8BA0);
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v8;
  *(_OWORD *)a1 = v8;
  *(unsigned char *)(a1 + 16) = v9;
  return result;
}

uint64_t sub_100045EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001C28C(&qword_1000C8718);
  __chkstk_darwin(v4 - 8);
  long long v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001C28C(&qword_1000C8BB0);
  __chkstk_darwin(v7);
  char v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000460F8(a2, (uint64_t)v9);
  long long v10 = &v9[*(int *)(v7 + 36)];
  uint64_t v11 = type metadata accessor for ScrollViewProxy();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, a1, v11);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_10001E00C();
  AppEntity.fullyQualifiedIdentifier.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = type metadata accessor for EntityIdentifier();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 0, 1, v12);
  sub_100048060();
  View.appEntityIdentifier(_:)();
  sub_1000143B4((uint64_t)v6, &qword_1000C8718);
  return sub_1000143B4((uint64_t)v9, &qword_1000C8BB0);
}

uint64_t sub_1000460F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v42 = type metadata accessor for InsetListStyle();
  uint64_t v35 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_10001C28C(&qword_1000C8BF8);
  uint64_t v37 = *(void *)(v43 - 8);
  uint64_t v5 = __chkstk_darwin(v43);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v36 = (char *)&v33 - v8;
  uint64_t v39 = sub_10001C28C(&qword_1000C8C00);
  __chkstk_darwin(v39);
  long long v41 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for PlainListStyle();
  uint64_t v34 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10001C28C(&qword_1000C8C08);
  uint64_t v12 = *(void *)(v40 - 8);
  uint64_t v13 = __chkstk_darwin(v40);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v33 - v16;
  v50[0] = *(_OWORD *)(a1 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  long long v49 = *(_OWORD *)(a1 + 24);
  if (v45 == 1)
  {
    uint64_t v18 = swift_allocObject();
    long long v19 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v18 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v18 + 32) = v19;
    *(void *)(v18 + 48) = *(void *)(a1 + 32);
    uint64_t v45 = sub_100049D0C;
    uint64_t v46 = v18;
    sub_100037AD8((uint64_t)v50);
    sub_10004802C((uint64_t)&v49);
    PlainListStyle.init()();
    uint64_t v20 = sub_10001C28C(&qword_1000C8BE0);
    uint64_t v21 = sub_100009170(&qword_1000C8BE8, &qword_1000C8BE0);
    uint64_t v22 = v38;
    View.listStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v22);
    swift_release();
    uint64_t v23 = v40;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v15, v40);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v41, v17, v23);
    swift_storeEnumTagMultiPayload();
    uint64_t v45 = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>)@<X8>))v20;
    uint64_t v46 = v22;
    uint64_t v47 = v21;
    long long v48 = &protocol witness table for PlainListStyle;
    swift_getOpaqueTypeConformance2();
    uint64_t v45 = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>)@<X8>))v20;
    uint64_t v46 = v42;
    uint64_t v47 = v21;
    long long v48 = &protocol witness table for InsetListStyle;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v23);
  }
  else
  {
    uint64_t v25 = swift_allocObject();
    long long v26 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v25 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v25 + 32) = v26;
    *(void *)(v25 + 48) = *(void *)(a1 + 32);
    uint64_t v45 = sub_100048268;
    uint64_t v46 = v25;
    sub_100037AD8((uint64_t)v50);
    sub_10004802C((uint64_t)&v49);
    InsetListStyle.init()();
    uint64_t v27 = sub_10001C28C(&qword_1000C8BE0);
    uint64_t v28 = sub_100009170(&qword_1000C8BE8, &qword_1000C8BE0);
    uint64_t v29 = v42;
    View.listStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v4, v29);
    swift_release();
    uint64_t v31 = v36;
    uint64_t v30 = v37;
    uint64_t v32 = v43;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v36, v7, v43);
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v41, v31, v32);
    swift_storeEnumTagMultiPayload();
    uint64_t v45 = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>)@<X8>))v27;
    uint64_t v46 = v38;
    uint64_t v47 = v28;
    long long v48 = &protocol witness table for PlainListStyle;
    swift_getOpaqueTypeConformance2();
    uint64_t v45 = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>)@<X8>))v27;
    uint64_t v46 = v29;
    uint64_t v47 = v28;
    long long v48 = &protocol witness table for InsetListStyle;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v31, v32);
  }
}

uint64_t sub_1000467B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v118 = a2;
  uint64_t v3 = type metadata accessor for AccessibilityTraits();
  uint64_t v109 = *(void *)(v3 - 8);
  uint64_t v110 = v3;
  __chkstk_darwin(v3);
  uint64_t v107 = (char *)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001C28C(&qword_1000C8D78);
  uint64_t v114 = *(void *)(v5 - 8);
  uint64_t v115 = v5;
  __chkstk_darwin(v5);
  uint64_t v108 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001C28C(&qword_1000C8D80);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v117 = (uint64_t)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v113 = (uint64_t)&v105 - v10;
  uint64_t v11 = sub_10001C28C(&qword_1000C8318);
  __chkstk_darwin(v11 - 8);
  uint64_t v112 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10001C28C(&qword_1000C8D88);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10001C28C(&qword_1000C8D90);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  long long v19 = (char *)&v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_10001C28C(&qword_1000C8D98) - 8;
  __chkstk_darwin(v111);
  uint64_t v21 = (char *)&v105 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v116 = (char *)(sub_10001C28C(&qword_1000C8DA0) - 8);
  uint64_t v22 = __chkstk_darwin(v116);
  uint64_t v24 = (char *)&v105 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v119 = (uint64_t)&v105 - v25;
  sub_100047230((uint64_t)v15);
  char v26 = static Edge.Set.top.getter();
  uint64_t v27 = *(char **)(a1 + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  EdgeInsets.init(_all:)();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  sub_100016FEC((uint64_t)v15, (uint64_t)v19, &qword_1000C8D88);
  uint64_t v36 = &v19[*(int *)(v17 + 44)];
  *uint64_t v36 = v26;
  *((void *)v36 + 1) = v29;
  *((void *)v36 + 2) = v31;
  *((void *)v36 + 3) = v33;
  *((void *)v36 + 4) = v35;
  v36[40] = 0;
  sub_1000143B4((uint64_t)v15, &qword_1000C8D88);
  uint64_t v37 = type metadata accessor for Font.Design();
  uint64_t v38 = (uint64_t)v112;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v112, 1, 1, v37);
  static Font.system(size:weight:design:)();
  sub_1000143B4(v38, &qword_1000C8318);
  static Font.Weight.semibold.getter();
  uint64_t v39 = Font.weight(_:)();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_100016FEC((uint64_t)v19, (uint64_t)v21, &qword_1000C8D90);
  long long v41 = (uint64_t *)&v21[*(int *)(v111 + 44)];
  uint64_t *v41 = KeyPath;
  v41[1] = v39;
  sub_1000143B4((uint64_t)v19, &qword_1000C8D90);
  uint64_t v42 = static Color.white.getter();
  uint64_t v43 = swift_getKeyPath();
  sub_100016FEC((uint64_t)v21, (uint64_t)v24, &qword_1000C8D98);
  uint64_t v44 = (uint64_t *)&v24[*((int *)v116 + 11)];
  *uint64_t v44 = v43;
  v44[1] = v42;
  sub_1000143B4((uint64_t)v21, &qword_1000C8D98);
  Swift::String v116 = v24;
  sub_100017278((uint64_t)v24, v119, &qword_1000C8DA0);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v112 = v27;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v45 = *(void **)&v131[0];
  id v46 = [*(id *)&v131[0] title];

  if (v46)
  {
    uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v49 = v48;

    *(void *)&v131[0] = v47;
    *((void *)&v131[0] + 1) = v49;
    sub_100016F88();
    uint64_t v111 = Text.init<A>(_:)();
    uint64_t v51 = v50;
    LOBYTE(v47) = v52;
    uint64_t v106 = v53;
    uint64_t v54 = swift_getKeyPath();
    char v55 = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    uint64_t v57 = v56;
    uint64_t v59 = v58;
    uint64_t v61 = v60;
    uint64_t v63 = v62;
    static Font.title.getter();
    static Font.Weight.bold.getter();
    uint64_t v64 = Font.weight(_:)();
    swift_release();
    uint64_t v65 = swift_getKeyPath();
    uint64_t v66 = static Color.white.getter();
    uint64_t v67 = swift_getKeyPath();
    v121[0] = v47 & 1;
    v120[0] = 0;
    int v68 = static HierarchicalShapeStyle.primary.getter();
    *(void *)&long long v122 = v111;
    *((void *)&v122 + 1) = v51;
    LOBYTE(v123) = v121[0];
    *((void *)&v123 + 1) = v106;
    *(void *)&long long v124 = v54;
    BYTE8(v124) = 1;
    LOBYTE(v125) = v55;
    *((void *)&v125 + 1) = v57;
    *(void *)&long long v126 = v59;
    *((void *)&v126 + 1) = v61;
    *(void *)&long long v127 = v63;
    BYTE8(v127) = v120[0];
    *(void *)&long long v128 = v65;
    *((void *)&v128 + 1) = v64;
    *(void *)&long long v129 = v67;
    *((void *)&v129 + 1) = v66;
    int v130 = v68;
    uint64_t v69 = v107;
    static AccessibilityTraits.isHeader.getter();
    sub_10001C28C(&qword_1000C8DB8);
    sub_1000492F0();
    uint64_t v70 = (uint64_t)v108;
    View.accessibilityAddTraits(_:)();
    (*(void (**)(char *, uint64_t))(v109 + 8))(v69, v110);
    v131[6] = v128;
    v131[7] = v129;
    int v132 = v130;
    v131[2] = v124;
    v131[3] = v125;
    v131[4] = v126;
    v131[5] = v127;
    v131[0] = v122;
    v131[1] = v123;
    sub_10004959C((uint64_t)v131);
    uint64_t v71 = v113;
    sub_100017278(v70, v113, &qword_1000C8D78);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v114 + 56))(v71, 0, 1, v115);
  }
  else
  {
    uint64_t v71 = v113;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v114 + 56))(v113, 1, 1, v115);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v72 = *(void **)&v131[0];
  id v73 = [*(id *)&v131[0] text];

  if (v73)
  {
    uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v76 = v75;

    *(void *)&v131[0] = v74;
    *((void *)&v131[0] + 1) = v76;
    sub_100016F88();
    uint64_t v77 = Text.init<A>(_:)();
    uint64_t v114 = v78;
    uint64_t v115 = v77;
    LOBYTE(v76) = v79;
    uint64_t v81 = v80;
    uint64_t v82 = swift_getKeyPath();
    uint64_t v83 = static Font.subheadline.getter();
    uint64_t v84 = v71;
    uint64_t v85 = swift_getKeyPath();
    char v86 = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    uint64_t v88 = v87;
    uint64_t v90 = v89;
    uint64_t v92 = v91;
    uint64_t v94 = v93;
    uint64_t v95 = static Color.secondary.getter();
    uint64_t v96 = swift_getKeyPath();
    v121[0] = v76 & 1;
    v120[0] = 0;
    int v97 = static HierarchicalShapeStyle.secondary.getter();
    *(void *)&long long v122 = v115;
    *((void *)&v122 + 1) = v114;
    LOBYTE(v123) = v121[0];
    *((void *)&v123 + 1) = v81;
    *(void *)&long long v124 = v82;
    BYTE8(v124) = 1;
    *(void *)&long long v125 = v85;
    *((void *)&v125 + 1) = v83;
    uint64_t v71 = v84;
    LOBYTE(v126) = v86;
    *((void *)&v126 + 1) = v88;
    *(void *)&long long v127 = v90;
    *((void *)&v127 + 1) = v92;
    *(void *)&long long v128 = v94;
    BYTE8(v128) = v120[0];
    *(void *)&long long v129 = v96;
    *((void *)&v129 + 1) = v95;
    int v130 = v97;
    nullsub_1(&v122);
  }
  else
  {
    sub_100049148((uint64_t)&v122);
  }
  sub_100017278((uint64_t)&v122, (uint64_t)v131, &qword_1000C8DA8);
  uint64_t v98 = v119;
  uint64_t v99 = (uint64_t)v116;
  sub_100016FEC(v119, (uint64_t)v116, &qword_1000C8DA0);
  uint64_t v100 = v117;
  sub_100016FEC(v71, v117, &qword_1000C8D80);
  sub_100017278((uint64_t)v131, (uint64_t)v120, &qword_1000C8DA8);
  uint64_t v101 = v118;
  sub_100016FEC(v99, v118, &qword_1000C8DA0);
  uint64_t v102 = sub_10001C28C(&qword_1000C8DB0);
  sub_100016FEC(v100, v101 + *(int *)(v102 + 48), &qword_1000C8D80);
  uint64_t v103 = v101 + *(int *)(v102 + 64);
  sub_100017278((uint64_t)v120, (uint64_t)v121, &qword_1000C8DA8);
  sub_100017278((uint64_t)v121, v103, &qword_1000C8DA8);
  sub_1000491F0((uint64_t)v121, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_100049164);
  sub_1000143B4(v71, &qword_1000C8D80);
  sub_1000143B4(v98, &qword_1000C8DA0);
  sub_100017278((uint64_t)v120, (uint64_t)&v122, &qword_1000C8DA8);
  sub_1000491F0((uint64_t)&v122, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_10004925C);
  sub_1000143B4(v100, &qword_1000C8D80);
  return sub_1000143B4(v99, &qword_1000C8DA0);
}

uint64_t sub_100047230@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v2 = [v7 tocAssets];

  if (v2 && (id v3 = [v2 symbolId], v2, v3))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    Image.init(_internalSystemName:)();
    View.accessibilityHidden(_:)();
    swift_release();
    uint64_t v4 = sub_10001C28C(&qword_1000C8E48);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 0, 1, v4);
  }
  else
  {
    uint64_t v6 = sub_10001C28C(&qword_1000C8E48);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, 1, 1, v6);
  }
}

double sub_1000473C0@<D0>(uint64_t a1@<X1>, _OWORD *a2@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v4 = [(id)v56 gradient];

  if (v4)
  {
    id v5 = v4;
    static Array.colorsFromGradient(_:)();

    Gradient.init(colors:)();
    static UnitPoint.topTrailing.getter();
    static UnitPoint.bottomLeading.getter();
    LinearGradient.init(gradient:startPoint:endPoint:)();
    sub_100017278(a1, (uint64_t)v52, &qword_1000C8EB8);
    if (v55)
    {
      long long v38 = v45;
      long long v39 = v46;
      *(void *)&long long v40 = v47;
      *((void *)&v40 + 1) = 256;
      long long v41 = 0uLL;
      *(void *)&long long v42 = 0;
      WORD4(v42) = 0;
      BYTE10(v42) = 1;
    }
    else
    {
      long long v38 = v54;
      *(void *)&long long v39 = 0;
      *((double *)&v39 + 1) = -v53;
      long long v40 = v45;
      long long v41 = v46;
      *(void *)&long long v42 = v47;
      WORD4(v42) = 256;
      BYTE10(v42) = 0;
    }
    sub_10001C28C(&qword_1000C8E90);
    sub_10001C28C(&qword_1000C8EA0);
    sub_100009170(&qword_1000C8E88, &qword_1000C8E90);
    sub_100009170(&qword_1000C8E98, &qword_1000C8EA0);
    _ConditionalContent<>.init(storage:)();
    long long v6 = v56;
    long long v7 = v57;
    uint64_t v23 = *((void *)&v58 + 1);
    uint64_t v24 = v58;
    uint64_t v21 = *((void *)&v59 + 1);
    uint64_t v22 = v59;
    uint64_t v20 = v60;
    char v18 = BYTE10(v60);
    __int16 v19 = WORD4(v60);
    sub_10001C28C(&qword_1000C8EC0);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_10008D880;
    uint64_t v9 = self;
    id v10 = [v9 systemBackgroundColor];
    *(void *)(v8 + 32) = Color.init(_:)();
    id v11 = [v9 systemBackgroundColor];
    id v12 = [v11 colorWithAlphaComponent:0.0];

    *(void *)(v8 + 40) = Color.init(_:)();
    *(void *)&long long v56 = v8;
    specialized Array._endMutation()();
    uint64_t v13 = AnyGradient.init(colors:locations:interpolations:)();
    sub_100017278(a1, (uint64_t)v48, &qword_1000C8EB8);
    if (v51)
    {
      *(void *)&long long v56 = v13;
      *((void *)&v56 + 1) = 256;
      *(void *)&long long v58 = 0;
      long long v57 = 0uLL;
      WORD4(v58) = 0;
      BYTE10(v58) = 1;
    }
    else
    {
      long long v56 = v50;
      *(void *)&long long v57 = 0;
      *((double *)&v57 + 1) = -v49;
      *(void *)&long long v58 = v13;
      WORD4(v58) = 256;
      BYTE10(v58) = 0;
    }
    sub_10001C28C(&qword_1000C8EC8);
    sub_10001C28C(&qword_1000C8ED0);
    sub_100009170(&qword_1000C8ED8, &qword_1000C8EC8);
    sub_100009170(&qword_1000C8EE0, &qword_1000C8ED0);
    _ConditionalContent<>.init(storage:)();
    v25[0] = v6;
    v25[1] = v7;
    *(void *)&long long v26 = v24;
    *((void *)&v26 + 1) = v23;
    *(void *)&long long v27 = v22;
    *((void *)&v27 + 1) = v21;
    *(void *)&long long v28 = v20;
    WORD4(v28) = v19;
    BYTE10(v28) = v18;
    long long v29 = v31;
    *(_OWORD *)uint64_t v30 = v32;
    *(void *)&v30[16] = v33;
    *(_WORD *)&v30[24] = v34;
    v30[26] = v35;
    long long v40 = v26;
    long long v41 = v27;
    long long v38 = v6;
    long long v39 = v7;
    *(_OWORD *)((char *)v44 + 11) = *(_OWORD *)&v30[11];
    long long v43 = v31;
    v44[0] = v32;
    long long v42 = v28;
    sub_10004982C((uint64_t)&v38);
    sub_100017278((uint64_t)&v38, (uint64_t)&v56, &qword_1000C8E50);
    sub_100049834((uint64_t)v25, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_100048E04, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100048E14);
    sub_100049834((uint64_t)v25, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_100048E04, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100048E14);
    sub_10001C28C(&qword_1000C8E58);
    sub_100049630();
    _ConditionalContent<>.init(storage:)();

    sub_100049834((uint64_t)v25, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_100048F64, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100048F74);
    sub_100049834((uint64_t)v25, (void (*)(void, void, void, void, void, void, void, void, void, int))sub_100048F64, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100048F74);
    long long v60 = v36[4];
    long long v61 = v36[5];
    v62[0] = v37[0];
    *(_OWORD *)((char *)v62 + 12) = *(_OWORD *)((char *)v37 + 12);
    long long v56 = v36[0];
    long long v57 = v36[1];
    long long v58 = v36[2];
    long long v59 = v36[3];
  }
  else
  {
    *(void *)&long long v38 = static Color.clear.getter();
    sub_100049624((uint64_t)&v38);
    sub_100017278((uint64_t)&v38, (uint64_t)v36, &qword_1000C8E50);
    sub_10001C28C(&qword_1000C8E58);
    sub_100049630();
    _ConditionalContent<>.init(storage:)();
  }
  long long v14 = v61;
  a2[4] = v60;
  a2[5] = v14;
  a2[6] = v62[0];
  *(_OWORD *)((char *)a2 + 108) = *(_OWORD *)((char *)v62 + 12);
  long long v15 = v57;
  *a2 = v56;
  a2[1] = v15;
  double result = *(double *)&v58;
  long long v17 = v59;
  a2[2] = v58;
  a2[3] = v17;
  return result;
}

uint64_t sub_1000479FC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C8CD0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001C28C(&qword_1000C8CD8);
  __chkstk_darwin(v9 - 8);
  id v11 = (uint64_t *)((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_10001C28C(&qword_1000C8CE0);
  __chkstk_darwin(v12);
  long long v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10001C28C(&qword_1000C8CE8);
  uint64_t v35 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  long long v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18.n128_f64[0] = sub_100048A70(a3, *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)(a1 + 32));
  if (v21 <= 0.0)
  {
    uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v35 + 56);
    return v33(a2, 1, 1, v15, v18);
  }
  else
  {
    double v22 = v18.n128_f64[0];
    double v23 = v19;
    double v24 = v20;
    double v25 = v21;
    uint64_t *v11 = static Alignment.center.getter();
    v11[1] = v26;
    uint64_t v27 = sub_10001C28C(&qword_1000C8CF0);
    sub_100047DA8((uint64_t *)((char *)v11 + *(int *)(v27 + 44)), v22, v23, v24, v25);
    uint64_t v28 = type metadata accessor for Text.Case();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v8, 1, 1, v28);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v30 = (uint64_t *)&v14[*(int *)(v12 + 36)];
    uint64_t v31 = sub_10001C28C(&qword_1000C8CF8);
    sub_100016FEC((uint64_t)v8, (uint64_t)v30 + *(int *)(v31 + 28), &qword_1000C8CD0);
    *uint64_t v30 = KeyPath;
    sub_100016FEC((uint64_t)v11, (uint64_t)v14, &qword_1000C8CD8);
    sub_1000143B4((uint64_t)v8, &qword_1000C8CD0);
    sub_1000143B4((uint64_t)v11, &qword_1000C8CD8);
    static VerticalEdge.Set.all.getter();
    sub_100048C78();
    View.listRowSeparator(_:edges:)();
    sub_1000143B4((uint64_t)v14, &qword_1000C8CE0);
    (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(a2, v17, v15);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(a2, 0, 1, v15);
  }
}

uint64_t sub_100047DA8@<X0>(_OWORD *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v10 = sub_10001C28C(&qword_1000C8D18);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v27 - v14;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v16 = *(void **)&v39[0];
  id v17 = [*(id *)&v39[0] gradient];

  *(double *)uint64_t v35 = a2;
  *(double *)&v35[1] = a3;
  *(double *)&v35[2] = a4;
  *(double *)&v35[3] = a5;
  char v36 = 0;
  sub_1000473C0((uint64_t)v35, &v28);

  sub_100044C28((uint64_t)v15);
  sub_100016FEC((uint64_t)v15, (uint64_t)v13, &qword_1000C8D18);
  long long v18 = v32;
  long long v19 = v33;
  v37[4] = v32;
  v37[5] = v33;
  long long v20 = v34[0];
  v38[0] = v34[0];
  *(_OWORD *)((char *)v38 + 12) = *(_OWORD *)((char *)v34 + 12);
  long long v21 = v28;
  long long v22 = v29;
  v37[0] = v28;
  v37[1] = v29;
  long long v23 = v30;
  long long v24 = v31;
  _OWORD v37[2] = v30;
  v37[3] = v31;
  *(_OWORD *)((char *)a1 + 108) = *(_OWORD *)((char *)v34 + 12);
  a1[5] = v19;
  a1[6] = v20;
  a1[3] = v24;
  a1[4] = v18;
  a1[1] = v22;
  a1[2] = v23;
  *a1 = v21;
  uint64_t v25 = sub_10001C28C(&qword_1000C8D20);
  sub_100016FEC((uint64_t)v13, (uint64_t)a1 + *(int *)(v25 + 48), &qword_1000C8D18);
  sub_100048E20((uint64_t)v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t))sub_100048D3C);
  sub_1000143B4((uint64_t)v15, &qword_1000C8D18);
  sub_1000143B4((uint64_t)v13, &qword_1000C8D18);
  v39[4] = v32;
  v39[5] = v33;
  v40[0] = v34[0];
  *(_OWORD *)((char *)v40 + 12) = *(_OWORD *)((char *)v34 + 12);
  v39[0] = v28;
  v39[1] = v29;
  v39[2] = v30;
  void v39[3] = v31;
  return sub_100048E20((uint64_t)v39, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t))sub_100048E9C);
}

uint64_t sub_10004801C()
{
  return sub_100009768(56);
}

uint64_t sub_100048024(uint64_t a1)
{
  return sub_100045EC0(a1, v1 + 16);
}

uint64_t sub_10004802C(uint64_t a1)
{
  return a1;
}

unint64_t sub_100048060()
{
  unint64_t result = qword_1000C8BB8;
  if (!qword_1000C8BB8)
  {
    sub_10001AD28(&qword_1000C8BB0);
    sub_1000496F4(&qword_1000C8BC0, &qword_1000C8BC8, (void (*)(void))sub_100048130);
    sub_100048314(&qword_1000C8BF0, (void (*)(uint64_t))type metadata accessor for ScrollVerticallyTestSupport);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8BB8);
  }
  return result;
}

unint64_t sub_100048130()
{
  unint64_t result = qword_1000C8BD0;
  if (!qword_1000C8BD0)
  {
    sub_10001AD28(&qword_1000C8BD8);
    sub_10001AD28(&qword_1000C8BE0);
    type metadata accessor for PlainListStyle();
    sub_100009170(&qword_1000C8BE8, &qword_1000C8BE0);
    swift_getOpaqueTypeConformance2();
    type metadata accessor for InsetListStyle();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8BD0);
  }
  return result;
}

uint64_t sub_100048260()
{
  return sub_100009768(56);
}

uint64_t sub_100048268@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  return sub_10004357C(a1, v2 + 16, a2);
}

uint64_t sub_100048270()
{
  return sub_100009768(56);
}

uint64_t sub_100048278()
{
  return sub_100048828((uint64_t (*)(void))&type metadata accessor for GeometryProxy);
}

uint64_t sub_100048290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for GeometryProxy() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1000436DC(a1, v2 + 16, v6, a2);
}

uint64_t sub_100048314(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100048364@<X0>(uint64_t a1@<X8>)
{
  return sub_1000442E0(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10004836C()
{
  return sub_100009768(64);
}

uint64_t sub_100048374@<X0>(uint64_t a1@<X8>)
{
  return sub_1000479FC(v1 + 16, a1, *(double *)(v1 + 56));
}

uint64_t sub_100048380@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000483AC()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_1000483D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100048404()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_100048430@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.listRowSpacing.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100048464()
{
  return EnvironmentValues.listRowSpacing.setter();
}

uint64_t sub_10004849C()
{
  uint64_t v1 = type metadata accessor for ScrollViewProxy();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10004852C()
{
  type metadata accessor for ScrollViewProxy();

  return sub_100045524();
}

unint64_t sub_10004858C()
{
  unint64_t result = qword_1000C8C70;
  if (!qword_1000C8C70)
  {
    sub_10001AD28(&qword_1000C8C30);
    sub_10004862C();
    sub_100009170(&qword_1000C8CA8, &qword_1000C8CB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8C70);
  }
  return result;
}

unint64_t sub_10004862C()
{
  unint64_t result = qword_1000C8C78;
  if (!qword_1000C8C78)
  {
    sub_10001AD28(&qword_1000C8C28);
    sub_1000486CC();
    sub_100009170(&qword_1000C8C98, &qword_1000C8CA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8C78);
  }
  return result;
}

unint64_t sub_1000486CC()
{
  unint64_t result = qword_1000C8C80;
  if (!qword_1000C8C80)
  {
    sub_10001AD28(&qword_1000C8C20);
    sub_10001AD28(&qword_1000C8C10);
    sub_100009170(&qword_1000C8C68, &qword_1000C8C10);
    swift_getOpaqueTypeConformance2();
    sub_100009170(&qword_1000C8C88, &qword_1000C8C90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8C80);
  }
  return result;
}

uint64_t sub_1000487CC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000067A4(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100048810()
{
  return sub_100048828((uint64_t (*)(void))&type metadata accessor for ScrollViewProxy);
}

uint64_t sub_100048828(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 56) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

void sub_100048904(uint64_t a1, id *a2)
{
  type metadata accessor for ScrollViewProxy();

  sub_100045590(a1, a2, v2 + 16);
}

unint64_t sub_100048988()
{
  unint64_t result = qword_1000C8CB8;
  if (!qword_1000C8CB8)
  {
    sub_10001AD28(&qword_1000C8930);
    sub_1000487CC(&qword_1000C8CC0, (unint64_t *)&qword_1000C8330);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8CB8);
  }
  return result;
}

uint64_t sub_100048A28()
{
  return sub_100009768(56);
}

uint64_t sub_100048A30()
{
  return sub_100045870(v0 + 16);
}

uint64_t sub_100048A38()
{
  return sub_100009768(56);
}

void sub_100048A40()
{
  sub_100045C60(v0 + 16);
}

uint64_t sub_100048A50()
{
  return sub_100045798(v0[2], v0[3], v0[4]);
}

double sub_100048A70(double a1, uint64_t a2, char a3, unint64_t a4)
{
  uint64_t v7 = type metadata accessor for NamedCoordinateSpace();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double v11 = *(double *)&v20;
  uint64_t v20 = 1953720684;
  unint64_t v21 = 0xE400000000000000;
  static CoordinateSpaceProtocol<>.named<A>(_:)();
  GeometryProxy.frame<A>(in:)();
  double v13 = v12;
  double v15 = v14;
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  GeometryProxy.size.getter();
  double v17 = 0.0;
  if (round(v16) < a1 && round(v11 + v15) < a1) {
    double v17 = v11 + v15;
  }
  LOBYTE(v20) = a3 & 1;
  unint64_t v21 = a4;
  v19[15] = v17 != 0.0;
  sub_10001C28C(&qword_1000C87B0);
  State.wrappedValue.setter();
  return v13;
}

unint64_t sub_100048C78()
{
  unint64_t result = qword_1000C8D00;
  if (!qword_1000C8D00)
  {
    sub_10001AD28(&qword_1000C8CE0);
    sub_100009170(&qword_1000C8D08, &qword_1000C8CD8);
    sub_100009170(&qword_1000C8D10, &qword_1000C8CF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8D00);
  }
  return result;
}

uint64_t sub_100048D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17)
{
  if (a17)
  {
    return swift_retain();
  }
  else
  {
    sub_100048E04();
    return sub_100048E14();
  }
}

uint64_t sub_100048E04()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100048E14()
{
  return swift_retain();
}

uint64_t sub_100048E20(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t))
{
  BYTE4(v4) = *(unsigned char *)(a1 + 123);
  LODWORD(v4) = *(unsigned __int16 *)(a1 + 120) | (*(unsigned __int8 *)(a1 + 122) << 16);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), v4);
  return a1;
}

uint64_t sub_100048E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17)
{
  if (a17)
  {
    return swift_release();
  }
  else
  {
    sub_100048F64();
    return sub_100048F74();
  }
}

uint64_t sub_100048F64()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100048F74()
{
  return swift_release();
}

uint64_t sub_100048F80()
{
  return sub_100009768(56);
}

uint64_t sub_100048F88(double a1, double a2)
{
  uint64_t v3 = (double *)(*(void *)(v2 + 32) + qword_1000CD1C0);
  *uint64_t v3 = a1;
  v3[1] = a2;
  return sub_10005CB50();
}

uint64_t sub_100048FC0()
{
  return sub_100049928(&qword_1000C8D60, &qword_1000C8D38, (void (*)(void))sub_100048FF0);
}

unint64_t sub_100048FF0()
{
  unint64_t result = qword_1000C8D68;
  if (!qword_1000C8D68)
  {
    sub_10001AD28(&qword_1000C8D30);
    sub_100009170(&qword_1000C8D70, &qword_1000C8D28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8D68);
  }
  return result;
}

uint64_t sub_100049098@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000490C4()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_1000490F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10004911C()
{
  return EnvironmentValues.foregroundColor.setter();
}

double sub_100049148(uint64_t a1)
{
  *(_DWORD *)(a1 + 128) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_100049164(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100037CB8(result, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1000491F0(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))
{
  return a1;
}

uint64_t sub_10004925C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100016FDC(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_1000492F0()
{
  unint64_t result = qword_1000C8DC0;
  if (!qword_1000C8DC0)
  {
    sub_10001AD28(&qword_1000C8DB8);
    sub_100049390();
    sub_100009170(&qword_1000C8E38, &qword_1000C8E40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8DC0);
  }
  return result;
}

unint64_t sub_100049390()
{
  unint64_t result = qword_1000C8DC8;
  if (!qword_1000C8DC8)
  {
    sub_10001AD28(&qword_1000C8DD0);
    sub_100049430();
    sub_100009170(&qword_1000C8E28, &qword_1000C8E30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8DC8);
  }
  return result;
}

unint64_t sub_100049430()
{
  unint64_t result = qword_1000C8DD8;
  if (!qword_1000C8DD8)
  {
    sub_10001AD28(&qword_1000C8DE0);
    sub_100049928(&qword_1000C8DE8, &qword_1000C8DF0, (void (*)(void))sub_1000494FC);
    sub_100009170(&qword_1000C8E18, &qword_1000C8E20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8DD8);
  }
  return result;
}

unint64_t sub_1000494FC()
{
  unint64_t result = qword_1000C8DF8;
  if (!qword_1000C8DF8)
  {
    sub_10001AD28(&qword_1000C8E00);
    sub_100009170(&qword_1000C8E08, &qword_1000C8E10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8DF8);
  }
  return result;
}

uint64_t sub_10004959C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100049624(uint64_t result)
{
  *(unsigned char *)(result + 123) = 1;
  return result;
}

unint64_t sub_100049630()
{
  unint64_t result = qword_1000C8E60;
  if (!qword_1000C8E60)
  {
    sub_10001AD28(&qword_1000C8E58);
    sub_1000496F4(&qword_1000C8E68, &qword_1000C8E70, (void (*)(void))sub_10004976C);
    sub_100009170(&qword_1000C8EA8, &qword_1000C8EB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8E60);
  }
  return result;
}

uint64_t sub_1000496F4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001AD28(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10004976C()
{
  unint64_t result = qword_1000C8E78;
  if (!qword_1000C8E78)
  {
    sub_10001AD28(&qword_1000C8E80);
    sub_100009170(&qword_1000C8E88, &qword_1000C8E90);
    sub_100009170(&qword_1000C8E98, &qword_1000C8EA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8E78);
  }
  return result;
}

uint64_t sub_10004982C(uint64_t result)
{
  *(unsigned char *)(result + 123) = 0;
  return result;
}

uint64_t sub_100049834(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, int), void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 96);
  uint64_t v8 = *(void *)(a1 + 104);
  uint64_t v9 = *(void *)(a1 + 112);
  uint64_t v10 = *(unsigned __int8 *)(a1 + 122);
  uint64_t v11 = *(unsigned __int16 *)(a1 + 120);
  BYTE2(v13) = *(unsigned char *)(a1 + 74);
  LOWORD(v13) = *(_WORD *)(a1 + 72);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), v13);
  a3(v5, v6, v7, v8, v9, v11, v10);
  return a1;
}

uint64_t sub_1000498F8()
{
  return sub_100049928(&qword_1000C8F30, &qword_1000C8EF0, (void (*)(void))sub_1000499A4);
}

uint64_t sub_100049928(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001AD28(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000499A4()
{
  unint64_t result = qword_1000C8F38;
  if (!qword_1000C8F38)
  {
    sub_10001AD28(&qword_1000C8D18);
    sub_10001AD28(&qword_1000C8D40);
    sub_100049928(&qword_1000C8D58, &qword_1000C8D40, (void (*)(void))sub_100048FC0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8F38);
  }
  return result;
}

uint64_t sub_100049A90()
{
  return sub_100009768(56);
}

unint64_t sub_100049A98@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000450D4(a1, v2 + 16, a2);
}

unint64_t sub_100049AA0()
{
  unint64_t result = qword_1000C8F50;
  if (!qword_1000C8F50)
  {
    sub_10001AD28(&qword_1000C8F40);
    type metadata accessor for TipListItemView(255);
    sub_100048314(&qword_1000C8F58, (void (*)(uint64_t))type metadata accessor for TipListItemView);
    swift_getOpaqueTypeConformance2();
    sub_100009170(&qword_1000C8F60, &qword_1000C8F68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8F50);
  }
  return result;
}

uint64_t sub_100049BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TipListItemView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100049C0C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TipListItemView(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100049C6C()
{
  unint64_t result = qword_1000C8F80;
  if (!qword_1000C8F80)
  {
    sub_10001AD28(qword_1000C8F88);
    sub_100009170(&qword_1000C8BA8, &qword_1000C8BA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C8F80);
  }
  return result;
}

uint64_t sub_100049D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_100049D18(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_100049D5C(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  id v5 = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_100049DB4(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (void *)a2[1];
  id v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100049E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  id v5 = *(void **)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t sub_100049E90(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100049ED8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for SearchResultsListView()
{
  return sub_100035730();
}

uint64_t sub_100049F38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100049F7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10004A024();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  type metadata accessor for SearchResultsViewModel();
  sub_10001D08C((unint64_t *)&qword_1000C81B0, (void (*)(uint64_t))type metadata accessor for SearchResultsViewModel);
  uint64_t result = ObservedObject.init(wrappedValue:)();
  *a1 = result;
  a1[1] = v8;
  a1[2] = v2;
  a1[3] = v4;
  a1[4] = v6;
  return result;
}

uint64_t sub_10004A024()
{
  sub_10001C28C(&qword_1000C81A8);
  State.init(wrappedValue:)();
  return v1;
}

uint64_t sub_10004A068()
{
  sub_10001C28C(&qword_1000C9028);
  State.wrappedValue.getter();
  return v1;
}

uint64_t sub_10004A0B8()
{
  sub_10001C28C(&qword_1000C9028);
  State.projectedValue.getter();
  return v1;
}

uint64_t sub_10004A10C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v74 = a2;
  uint64_t v5 = type metadata accessor for PlainListStyle();
  uint64_t v73 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v72 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for KeyEquivalent();
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  long long v60 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void **)(a1 + 16);
  uint64_t v51 = *(void *)(a1 + 24);
  char v55 = *(void **)(v51 + 8);
  uint64_t v80 = &type metadata for String;
  uint64_t v81 = v8;
  uint64_t v82 = &protocol witness table for String;
  uint64_t v83 = v55;
  uint64_t v9 = type metadata accessor for List();
  uint64_t v69 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v51 - v10;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v80 = (void *)v9;
  uint64_t v81 = (void *)WitnessTable;
  int v13 = (void *)WitnessTable;
  uint64_t v58 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v67 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  long long v57 = (char *)&v51 - v15;
  uint64_t v80 = (void *)v9;
  uint64_t v81 = v13;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v80 = (void *)OpaqueTypeMetadata2;
  uint64_t v81 = (void *)v5;
  uint64_t v53 = v5;
  uint64_t v82 = (void *)OpaqueTypeConformance2;
  uint64_t v83 = &protocol witness table for PlainListStyle;
  double v17 = (void *)OpaqueTypeConformance2;
  uint64_t v54 = OpaqueTypeConformance2;
  uint64_t v18 = swift_getOpaqueTypeMetadata2();
  uint64_t v63 = v18;
  uint64_t v68 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  char v52 = (char *)&v51 - v19;
  uint64_t v80 = (void *)OpaqueTypeMetadata2;
  uint64_t v81 = (void *)v5;
  uint64_t v82 = v17;
  uint64_t v83 = &protocol witness table for PlainListStyle;
  uint64_t v62 = swift_getOpaqueTypeConformance2();
  uint64_t v80 = (void *)v18;
  uint64_t v81 = &type metadata for Color;
  uint64_t v82 = (void *)v62;
  uint64_t v83 = &protocol witness table for Color;
  uint64_t v65 = &opaque type descriptor for <<opaque return type of View.scrollContentBackground<A>(_:)>>;
  uint64_t v61 = swift_getOpaqueTypeMetadata2();
  uint64_t v66 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  long long v56 = (char *)&v51 - v20;
  sub_10001AD28(&qword_1000C9010);
  uint64_t v21 = type metadata accessor for ModifiedContent();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  long long v59 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v64 = (char *)&v51 - v25;
  uint64_t v80 = (void *)sub_10004A0B8();
  uint64_t v81 = v26;
  uint64_t v82 = v27;
  uint64_t v83 = v28;
  uint64_t v29 = v51;
  uint64_t v75 = v8;
  uint64_t v76 = v51;
  uint64_t v77 = v3;
  long long v30 = v11;
  List.init(selection:content:)();
  long long v31 = v60;
  static KeyEquivalent.return.getter();
  long long v32 = v3[1];
  long long v88 = *v3;
  long long v84 = v32;
  uint64_t v85 = *((void *)v3 + 4);
  sub_100017278((uint64_t)&v84, (uint64_t)v87, &qword_1000C81A8);
  sub_100017278((uint64_t)&v85, (uint64_t)v86, &qword_1000C9018);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v8;
  *(void *)(v33 + 24) = v29;
  long long v34 = v3[1];
  *(_OWORD *)(v33 + 32) = *v3;
  *(_OWORD *)(v33 + 48) = v34;
  *(void *)(v33 + 64) = *((void *)v3 + 4);
  sub_100037AD8((uint64_t)&v88);
  sub_10004B54C((uint64_t)v87);
  sub_10004B578((uint64_t)v86);
  uint64_t v35 = v57;
  View.onKeyPress(_:action:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v31, v71);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v30, v9);
  char v36 = v72;
  PlainListStyle.init()();
  uint64_t v37 = v52;
  uint64_t v38 = v53;
  View.listStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v36, v38);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v35, OpaqueTypeMetadata2);
  id v39 = [self systemBackgroundColor];
  uint64_t v80 = (void *)Color.init(_:)();
  long long v40 = v56;
  long long v41 = (void *)v63;
  long long v42 = (void *)v62;
  View.scrollContentBackground<A>(_:)();
  swift_release();
  (*(void (**)(char *, void *))(v68 + 8))(v37, v41);
  static Edge.Set.all.getter();
  uint64_t v80 = v41;
  uint64_t v81 = &type metadata for Color;
  uint64_t v82 = v42;
  uint64_t v83 = &protocol witness table for Color;
  uint64_t v43 = swift_getOpaqueTypeConformance2();
  uint64_t v44 = v59;
  uint64_t v45 = v61;
  View.background(ignoresSafeAreaEdges:)();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v40, v45);
  uint64_t v46 = sub_100009170(&qword_1000C9020, &qword_1000C9010);
  uint64_t v78 = v43;
  uint64_t v79 = v46;
  swift_getWitnessTable();
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  uint64_t v48 = v64;
  v47(v64, v44, v21);
  double v49 = *(void (**)(char *, uint64_t))(v22 + 8);
  v49(v44, v21);
  v47(v74, v48, v21);
  return ((uint64_t (*)(char *, uint64_t))v49)(v48, v21);
}

uint64_t sub_10004AA40@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v27 = a4;
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = __chkstk_darwin(a1);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  int v13 = (char *)&v26 - v12;
  id v26 = *(id *)(v11 + 8);
  uint64_t v14 = sub_10004A0B8();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v21 = sub_10004ABF8(a1, a2, a3);
  (*(void (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(a3 + 96))(v26, v14, v16, v18, v20, v21, v22, a2, a3);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v23(v13, v10, a2);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v7 + 8);
  v24(v10, a2);
  v23(v27, v13, a2);
  return ((uint64_t (*)(char *, uint64_t))v24)(v13, a2);
}

uint64_t (*sub_10004ABF8(long long *a1, uint64_t a2, uint64_t a3))(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  long long v7 = *a1;
  long long v8 = a1[1];
  *(_OWORD *)(v6 + 32) = *a1;
  *(_OWORD *)(v6 + 48) = v8;
  uint64_t v9 = *((void *)a1 + 4);
  *(void *)(v6 + 64) = v9;
  long long v15 = v7;
  long long v11 = v8;
  uint64_t v12 = v9;
  sub_100017278((uint64_t)&v11, (uint64_t)v14, &qword_1000C81A8);
  sub_100017278((uint64_t)&v12, (uint64_t)v13, &qword_1000C9018);
  sub_100037AD8((uint64_t)&v15);
  sub_10004B54C((uint64_t)v14);
  sub_10004B578((uint64_t)v13);
  return sub_10004B6A8;
}

uint64_t sub_10004ACC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a3;
  uint64_t v36 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v35 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v38 = v7;
  __chkstk_darwin(v7);
  long long v34 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for DispatchTime();
  uint64_t v41 = *(void *)(v32 - 8);
  uint64_t v9 = __chkstk_darwin(v32);
  long long v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  long long v40 = (char *)&v32 - v12;
  uint64_t v13 = type metadata accessor for SearchResult.Item.Category();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  long long aBlock = v3[1];
  uint64_t v43 = (uint64_t (*)(uint64_t))*((void *)v3 + 4);
  *(void *)&long long v47 = a1;
  *((void *)&v47 + 1) = a2;
  sub_10001C28C(&qword_1000C9028);
  State.wrappedValue.setter();
  uint64_t v17 = (void *)*((void *)v3 + 1);
  swift_getKeyPath();
  swift_getKeyPath();
  id v18 = v17;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  dispatch thunk of SearchResultsModel.updateSelection(to:)();

  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_100012E0C();
  uint64_t v19 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v41 + 8);
  v41 += 8;
  uint64_t v21 = v32;
  v20(v11, v32);
  long long v22 = v3[1];
  long long v51 = *v3;
  long long v47 = v22;
  uint64_t v48 = *((void *)v3 + 4);
  sub_100017278((uint64_t)&v47, (uint64_t)v50, &qword_1000C81A8);
  sub_100017278((uint64_t)&v48, (uint64_t)v49, &qword_1000C9018);
  uint64_t v23 = swift_allocObject();
  long long v24 = *v3;
  long long v25 = v3[1];
  *(_OWORD *)(v23 + 16) = *(_OWORD *)(v33 + 16);
  *(_OWORD *)(v23 + 32) = v24;
  *(_OWORD *)(v23 + 48) = v25;
  *(void *)(v23 + 64) = *((void *)v3 + 4);
  uint64_t v45 = sub_10004B6F8;
  uint64_t v46 = v23;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v43 = sub_10000374C;
  uint64_t v44 = &unk_1000B8608;
  id v26 = _Block_copy(&aBlock);
  sub_100037AD8((uint64_t)&v51);
  sub_10004B54C((uint64_t)v50);
  sub_10004B578((uint64_t)v49);
  swift_release();
  uint64_t v27 = v34;
  static DispatchQoS.unspecified.getter();
  *(void *)&long long aBlock = _swiftEmptyArrayStorage;
  sub_10001D08C((unint64_t *)&qword_1000C84E8, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10001C28C(&qword_1000C84F0);
  sub_100009170((unint64_t *)&qword_1000C84F8, &qword_1000C84F0);
  long long v28 = v35;
  uint64_t v29 = v36;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  long long v30 = v40;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v29);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v38);
  return ((uint64_t (*)(char *, uint64_t))v20)(v30, v21);
}

uint64_t sub_10004B278@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SearchResult.Item.Category();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A068();
  if (v7)
  {
    uint64_t v8 = *(void **)(v1 + 8);
    swift_getKeyPath();
    swift_getKeyPath();
    id v9 = v8;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of SearchResultsModel.updateSelection(to:)();

    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    long long v17 = *(_OWORD *)(v1 + 16);
    uint64_t v18 = *(void *)(v1 + 32);
    v16[0] = 0;
    v16[1] = 0;
    sub_10001C28C(&qword_1000C9028);
    State.wrappedValue.setter();
    uint64_t v10 = enum case for KeyPress.Result.handled(_:);
    uint64_t v11 = type metadata accessor for KeyPress.Result();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(a1, v10, v11);
  }
  else
  {
    uint64_t v13 = enum case for KeyPress.Result.ignored(_:);
    uint64_t v14 = type metadata accessor for KeyPress.Result();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);
    return v15(a1, v13, v14);
  }
}

uint64_t sub_10004B4C8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_10004A10C(a1, a2);
}

uint64_t sub_10004B504@<X0>(char *a1@<X8>)
{
  return sub_10004AA40(*(long long **)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10004B514@<X0>(uint64_t a1@<X8>)
{
  return sub_10004B278(a1);
}

uint64_t sub_10004B54C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10004B578(uint64_t a1)
{
  return a1;
}

uint64_t sub_10004B5A4@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10004B624(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_10004B6A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchResultsListView();
  return sub_10004ACC8(a1, a2, v4);
}

uint64_t sub_10004B6F8()
{
  return State.wrappedValue.setter();
}

uint64_t sub_10004B74C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10004B950@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  return sub_10004BA70(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_10004B95C@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Color.blue.getter();
  uint64_t v7 = Text.foregroundStyle<A>(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  sub_100016FDC(v2, v4, v6);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  return result;
}

uint64_t sub_10004BA70@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  type metadata accessor for SearchResultsViewModel();
  sub_10001D9B0();
  uint64_t result = ObservedObject.init(wrappedValue:)();
  *(void *)a7 = result;
  *(void *)(a7 + 8) = v15;
  *(void *)(a7 + 16) = a1;
  *(void *)(a7 + 24) = a2;
  *(void *)(a7 + 32) = a3;
  *(void *)(a7 + 40) = a4;
  *(void *)(a7 + 48) = 0x7FFFFFFFFFFFFFFFLL;
  *(unsigned char *)(a7 + 56) = 0;
  *(void *)(a7 + 64) = a5;
  *(void *)(a7 + 72) = a6;
  return result;
}

uint64_t sub_10004BB0C()
{
  _StringGuts.grow(_:)(32);
  swift_bridgeObjectRelease();
  id v1 = [v0 variantID:0xD00000000000001ELL];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;

  v5._countAndFlagsBits = v2;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  URL.init(string:)();

  return swift_bridgeObjectRelease();
}

void sub_10004BBE0()
{
  id v1 = v0;
  uint64_t v2 = sub_10001C28C(&qword_1000C8710);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (![self allowsTipsSharing]) {
    return;
  }
  id v9 = [v0 currentTip];
  if (!v9)
  {
    __break(1u);
    goto LABEL_14;
  }
  char v10 = v9;
  char v11 = (objc_class *)type metadata accessor for TPSSharingActivityItemSource();
  id v12 = objc_allocWithZone(v11);
  id v13 = sub_1000739A0(v10);

  sub_10001C28C(&qword_1000C9030);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10008CF30;
  *(void *)(v14 + 56) = v11;
  *(void *)(v14 + 32) = v13;
  id v15 = v13;
  id v16 = [v1 currentTip];
  if (!v16)
  {
LABEL_14:
    __break(1u);
    return;
  }
  long long v17 = v16;
  sub_10004BB0C();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1000143B4((uint64_t)v4, &qword_1000C8710);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    uint64_t v29 = v5;
    uint64_t v18 = sub_10003A9A8(v28);
    (*(void (**)(uint64_t *, char *, uint64_t))(v6 + 16))(v18, v8, v5);
    unint64_t v20 = *(void *)(v14 + 16);
    unint64_t v19 = *(void *)(v14 + 24);
    if (v20 >= v19 >> 1) {
      uint64_t v14 = (uint64_t)sub_10004C010((char *)(v19 > 1), v20 + 1, 1, (char *)v14);
    }
    *(void *)(v14 + 16) = v20 + 1;
    sub_10001C9D4(v28, (_OWORD *)(v14 + 32 * v20 + 32));
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  id v21 = objc_allocWithZone((Class)UIActivityViewController);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v23 = [v21 initWithActivityItems:isa applicationActivities:0];

  sub_10004C118();
  type metadata accessor for ActivityType(0);
  Class v24 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v23 setExcludedActivityTypes:v24];

  id v25 = [v23 popoverPresentationController];
  if (v25)
  {
    id v26 = v25;
    id v27 = [v1 shareBarButton];
    [v26 setSourceItem:v27];
  }
  [v1 presentViewController:v23 animated:1 completion:0];
}

char *sub_10004C010(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10001C28C(&qword_1000C9030);
    char v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    char v10 = (char *)_swiftEmptyArrayStorage;
  }
  id v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10004C118()
{
  sub_10001C28C(&qword_1000C9038);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10008DDF0;
  *(void *)(v0 + 32) = UIActivityTypeAssignToContact;
  *(void *)(v0 + 40) = UIActivityTypePrint;
  *(void *)(v0 + 48) = UIActivityTypeSaveToCameraRoll;
  *(void *)(v0 + 56) = UIActivityTypeAddToReadingList;
  *(void *)(v0 + 64) = UIActivityTypePostToFlickr;
  *(void *)(v0 + 72) = UIActivityTypePostToVimeo;
  *(void *)(v0 + 80) = UIActivityTypePostToTencentWeibo;
  *(void *)(v0 + 88) = UIActivityTypeMarkupAsPDF;
  *(void *)(v0 + 96) = UIActivityTypeCollaborationInviteWithLink;
  *(void *)(v0 + 104) = UIActivityTypeCollaborationCopyLink;
  uint64_t v1 = UIActivityTypeUserDefaults;
  unint64_t v20 = (void *)UIActivityTypeUserDefaults;
  *(void *)(v0 + 112) = UIActivityTypeAddToHomeScreen;
  *(void *)(v0 + 120) = v1;
  unint64_t v19 = (void *)UIActivityTypeCreateReminder;
  uint64_t v2 = UIActivityTypeSaveToFiles;
  id v21 = (void *)UIActivityTypeSaveToFiles;
  *(void *)(v0 + 128) = UIActivityTypeCreateReminder;
  *(void *)(v0 + 136) = v2;
  long long v22 = (void *)UIActivityTypeBoxInvite;
  *(void *)(v0 + 144) = UIActivityTypeBoxInvite;
  uint64_t v3 = UIActivityTypeAssignToContact;
  uint64_t v4 = UIActivityTypePrint;
  char v5 = UIActivityTypeSaveToCameraRoll;
  unint64_t v6 = UIActivityTypeAddToReadingList;
  int64_t v7 = UIActivityTypePostToFlickr;
  uint64_t v8 = UIActivityTypePostToVimeo;
  uint64_t v9 = UIActivityTypePostToTencentWeibo;
  char v10 = UIActivityTypeMarkupAsPDF;
  int64_t v11 = UIActivityTypeCollaborationInviteWithLink;
  uint64_t v12 = UIActivityTypeCollaborationCopyLink;
  id v13 = UIActivityTypeAddToHomeScreen;
  id v14 = v20;
  id v15 = v19;
  id v16 = v21;
  id v17 = v22;
  return v0;
}

ValueMetadata *type metadata accessor for SearchResultsEmptyView()
{
  return &type metadata for SearchResultsEmptyView;
}

uint64_t sub_10004C2DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004C2F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  char v5 = self;
  swift_bridgeObjectRetain();
  id v6 = [v5 systemBackgroundColor];
  uint64_t v7 = Color.init(_:)();
  uint64_t result = static Edge.Set.all.getter();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for ContentUnavailableView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ContentUnavailableView()
{
  return swift_bridgeObjectRelease();
}

void *_s4Tips22SearchResultsEmptyViewVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ContentUnavailableView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CollectionListView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CollectionListView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentUnavailableView()
{
  return &type metadata for ContentUnavailableView;
}

unint64_t sub_10004C4B4()
{
  unint64_t result = qword_1000C9040;
  if (!qword_1000C9040)
  {
    sub_10001AD28(&qword_1000C9048);
    sub_10004C530();
    sub_10004C584();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9040);
  }
  return result;
}

unint64_t sub_10004C530()
{
  unint64_t result = qword_1000C9050;
  if (!qword_1000C9050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9050);
  }
  return result;
}

unint64_t sub_10004C584()
{
  unint64_t result = qword_1000C9058;
  if (!qword_1000C9058)
  {
    sub_10001AD28(&qword_1000C9060);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9058);
  }
  return result;
}

void *sub_10004C5E0()
{
  return &protocol witness table for Never;
}

id sub_10004C5EC(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  id v6 = [self searchConfiguration];
  uint64_t v7 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v7)
  {
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    String.init(localized:table:bundle:locale:comment:)();
    sub_10001C28C(&qword_1000C8970);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_10008CF30;
    *(void *)(v8 + 56) = &type metadata for String;
    *(void *)(v8 + 64) = sub_10003F108();
    *(void *)(v8 + 32) = a1;
    *(void *)(v8 + 40) = a2;
    swift_bridgeObjectRetain();
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v6 setText:v9];
  }
  return v6;
}

id sub_10004C7E4()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  id v3 = [objc_allocWithZone((Class)UIViewController) init];
  id v4 = sub_10004C5EC(v1, v2);
  [v3 _setContentUnavailableConfiguration:v4];

  return v3;
}

void sub_10004C854(void *a1)
{
  id v3 = sub_10004C5EC(*(void *)v1, *(void *)(v1 + 8));
  [a1 _setContentUnavailableConfiguration:v3];
}

uint64_t sub_10004C8BC()
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)();
}

uint64_t sub_10004C8F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10004C9EC();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10004C95C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10004C9EC();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10004C9C0()
{
}

unint64_t sub_10004C9EC()
{
  unint64_t result = qword_1000C9068;
  if (!qword_1000C9068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9068);
  }
  return result;
}

void sub_10004CA50(uint64_t a1, void **a2)
{
  unint64_t v2 = *a2;
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 setIdentifier:v3];
}

double sub_10004CAB4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10004CB10(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1000C8D28, &qword_1000C8D30).n128_u64[0];
  return result;
}

__n128 sub_10004CB10@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  unint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v28 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    unint64_t v19 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_100016FEC(v17, a9, a16);
  uint64_t v29 = (_OWORD *)(a9 + *(int *)(sub_10001C28C(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  _OWORD *v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

double sub_10004CCE0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10004CB10(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1000C9338, &qword_1000C9340).n128_u64[0];
  return result;
}

double sub_10004CD3C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10004CB10(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1000C9348, &qword_1000C9350).n128_u64[0];
  return result;
}

double sub_10004CD98@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10004CE50(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1000C9358, &qword_1000C9360).n128_u64[0];
  return result;
}

double sub_10004CDF4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10004CE50(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1000C9368, &qword_1000C9370).n128_u64[0];
  return result;
}

__n128 sub_10004CE50@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  unint64_t v19 = a16;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v28 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    unint64_t v19 = a16;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v29 = sub_10001C28C(v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(a9, v17, v29);
  long long v30 = (_OWORD *)(a9 + *(int *)(sub_10001C28C(a17) + 36));
  v30[4] = v36;
  v30[5] = v37;
  v30[6] = v38;
  *long long v30 = v32;
  v30[1] = v33;
  __n128 result = v35;
  v30[2] = v34;
  v30[3] = v35;
  return result;
}

uint64_t TPSTip.id.getter()
{
  id v1 = [v0 identifier];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

void *sub_10004D0A4()
{
  return &protocol witness table for String;
}

void sub_10004D0B0(uint64_t *a1@<X8>)
{
  id v3 = [*v1 identifier];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

uint64_t *sub_10004D108(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ColorScheme();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    char v10 = (uint64_t *)((char *)a1 + v9);
    int64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_10001C28C(&qword_1000C9070);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *char v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(int *)(a3 + 24);
    id v14 = (uint64_t *)((char *)a1 + v13);
    id v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = *v15;
    id v16 = (void *)v15[1];
    *id v14 = v17;
    v14[1] = v16;
    id v18 = v16;
  }
  return a1;
}

void sub_10004D2D0(uint64_t a1, uint64_t a2)
{
  sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_10001C28C(&qword_1000C9070);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = *(void **)(a1 + *(int *)(a2 + 24) + 8);
}

void *sub_10004D3E8(void *a1, void *a2, uint64_t a3)
{
  sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_10001C28C(&qword_1000C9070);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  id v14 = (void *)v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  id v16 = v14;
  return a1;
}

void *sub_10004D560(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C81D0);
    sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_1000143B4((uint64_t)a1 + v7, &qword_1000C9070);
    sub_10001C28C(&qword_1000C9070);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  id v14 = (void *)v13[1];
  uint64_t v15 = (void *)v12[1];
  v12[1] = v14;
  id v16 = v14;

  return a1;
}

char *sub_10004D710(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_10001C28C(&qword_1000C9070);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for DismissAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_10004D88C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C81D0);
    uint64_t v6 = sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ColorScheme();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_1000143B4((uint64_t)&a1[v8], &qword_1000C9070);
    uint64_t v11 = sub_10001C28C(&qword_1000C9070);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = *(int *)(a3 + 24);
  id v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v17 = *(void *)v15;
  uint64_t v16 = *((void *)v15 + 1);
  id v18 = (void *)*((void *)v14 + 1);
  *(void *)id v14 = v17;
  *((void *)v14 + 1) = v16;

  return a1;
}

uint64_t sub_10004DA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004DA54);
}

uint64_t sub_10004DA54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C8658);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_10001C28C(&qword_1000C9078);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_10004DB74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004DB88);
}

uint64_t sub_10004DB88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_10001C28C(&qword_1000C8658);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_10001C28C(&qword_1000C9078);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for ChecklistView()
{
  uint64_t result = qword_1000C90D8;
  if (!qword_1000C90D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10004DCF0()
{
  sub_10004DDF8(319, (unint64_t *)&qword_1000C86C8, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F)
  {
    sub_10004DDF8(319, (unint64_t *)&unk_1000C90E8, (void (*)(uint64_t))&type metadata accessor for DismissAction);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10004DDF8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10004DE4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004DE68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v60 = a1;
  uint64_t v2 = type metadata accessor for ChecklistView();
  uint64_t v59 = *(void *)(v2 - 8);
  uint64_t v58 = *(void *)(v59 + 64);
  __chkstk_darwin(v2);
  uint64_t v57 = (uint64_t)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for InsetGroupedListStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  uint64_t v56 = v5;
  __chkstk_darwin(v4);
  long long v51 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001C28C(&qword_1000C8718);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10001C28C(&qword_1000C9120);
  uint64_t v44 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_10001C28C(&qword_1000C9128);
  uint64_t v46 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_10001C28C(&qword_1000C9130);
  uint64_t v49 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  long long v42 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_10001C28C(&qword_1000C9138);
  uint64_t v52 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v43 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10001C28C(&qword_1000C9140);
  uint64_t v53 = *(void *)(v17 - 8);
  uint64_t v54 = v17;
  __chkstk_darwin(v17);
  uint64_t v48 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ChecklistViewModel();
  sub_100051FC8((unint64_t *)&qword_1000C9148, (void (*)(uint64_t))type metadata accessor for ChecklistViewModel);
  unint64_t v19 = (void *)ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();

  uint64_t v62 = v65;
  uint64_t v63 = v66;
  long long v64 = v67;
  uint64_t v61 = v1;
  sub_10001C28C(&qword_1000C9150);
  sub_100009170(&qword_1000C9158, &qword_1000C9150);
  List.init(selection:content:)();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_10001E00C();
  AppEntity.fullyQualifiedIdentifier.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = type metadata accessor for EntityIdentifier();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v9, 0, 1, v20);
  uint64_t v21 = sub_100009170(&qword_1000C9160, &qword_1000C9120);
  View.appEntityIdentifier(_:)();
  sub_1000143B4((uint64_t)v9, &qword_1000C8718);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v10);
  static Edge.Set.top.getter();
  uint64_t v65 = v10;
  uint64_t v66 = v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  id v23 = v42;
  uint64_t v24 = v45;
  View.listPadding(_:_:)();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v24);
  id v25 = v51;
  InsetGroupedListStyle.init()();
  uint64_t v65 = v24;
  uint64_t v66 = OpaqueTypeConformance2;
  uint64_t v26 = swift_getOpaqueTypeConformance2();
  id v27 = v43;
  uint64_t v28 = v47;
  uint64_t v29 = v55;
  View.listStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v25, v29);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v23, v28);
  id v30 = [self systemGroupedBackgroundColor];
  uint64_t v62 = Color.init(_:)();
  uint64_t v65 = v28;
  uint64_t v66 = v29;
  *(void *)&long long v67 = v26;
  *((void *)&v67 + 1) = &protocol witness table for InsetGroupedListStyle;
  swift_getOpaqueTypeConformance2();
  long long v31 = v48;
  uint64_t v32 = v50;
  View.scrollContentBackground<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v27, v32);
  uint64_t v33 = v57;
  sub_10005168C(v1, v57);
  unint64_t v34 = (*(unsigned __int8 *)(v59 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  uint64_t v35 = swift_allocObject();
  sub_100052304(v33, v35 + v34, (uint64_t (*)(void))type metadata accessor for ChecklistView);
  uint64_t v37 = v53;
  uint64_t v36 = v54;
  uint64_t v38 = v60;
  (*(void (**)(uint64_t, char *, uint64_t))(v53 + 16))(v60, v31, v54);
  uint64_t v39 = (uint64_t (**)())(v38 + *(int *)(sub_10001C28C(&qword_1000C9168) + 36));
  *uint64_t v39 = sub_1000516F4;
  v39[1] = (uint64_t (*)())v35;
  v39[2] = 0;
  void v39[3] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v31, v36);
}

uint64_t sub_10004E784@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v81 = a2;
  uint64_t v85 = sub_10001C28C(&qword_1000C9170);
  uint64_t v87 = *(void *)(v85 - 8);
  uint64_t v3 = __chkstk_darwin(v85);
  uint64_t v74 = (char *)v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v73 = (char *)v71 - v5;
  uint64_t v6 = type metadata accessor for ChecklistView();
  uint64_t v82 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v83 = v7;
  uint64_t v84 = (uint64_t)v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Locale();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10001C28C(&qword_1000C9178);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v80 = (uint64_t)v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v79 = (uint64_t)v71 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v76 = (char *)v71 - v20;
  __chkstk_darwin(v19);
  long long v22 = (char *)v71 - v21;
  uint64_t v23 = sub_10001C28C(&qword_1000C9180);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v75 = (char *)v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)v71 - v28;
  __chkstk_darwin(v27);
  long long v31 = (char *)v71 - v30;
  uint64_t v89 = a1;
  sub_10001C28C(&qword_1000C9188);
  sub_1000518F8();
  Section<>.init(content:)();
  uint64_t v77 = v24;
  uint64_t v78 = v23;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  char v86 = v31;
  v32(v31, v29, v23);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v33 = v90;
  long long v88 = v22;
  uint64_t v72 = a1;
  v71[2] = v10;
  v71[1] = v13;
  if (v90)
  {
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    uint64_t v34 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v36 = v35;
    uint64_t v90 = v33;
    v71[0] = swift_getKeyPath();
    uint64_t v37 = v84;
    sub_10005168C(a1, v84);
    unint64_t v38 = (*(unsigned __int8 *)(v82 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
    unint64_t v39 = (v83 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v40 = swift_allocObject();
    sub_100052304(v37, v40 + v38, (uint64_t (*)(void))type metadata accessor for ChecklistView);
    *(void *)(v40 + v39) = v33;
    uint64_t v41 = v85;
    uint64_t v43 = v87;
    uint64_t v42 = (uint64_t)v88;
    unint64_t v44 = v40 + ((v39 + 15) & 0xFFFFFFFFFFFFFFF8);
    *(void *)unint64_t v44 = v34;
    *(void *)(v44 + 8) = v36;
    *(unsigned char *)(v44 + 16) = 0;
    swift_bridgeObjectRetain();
    sub_10001C28C(&qword_1000C8980);
    sub_10001C28C(&qword_1000C91E0);
    sub_100009170(&qword_1000C8F48, &qword_1000C8980);
    sub_100051B84();
    ForEach<>.init(_:id:content:)();
    uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56);
    v45(v42, 0, 1, v41);
  }
  else
  {
    uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v87 + 56);
    uint64_t v41 = v85;
    v45((uint64_t)v22, 1, 1, v85);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v46 = v90;
  if (v90)
  {
    v71[0] = v45;
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    uint64_t v47 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v49 = v48;
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v50 = v90;
    if (v90) {
      swift_bridgeObjectRelease();
    }
    uint64_t v90 = v46;
    swift_getKeyPath();
    uint64_t v51 = v84;
    sub_10005168C(v72, v84);
    unint64_t v52 = (*(unsigned __int8 *)(v82 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
    unint64_t v53 = (v83 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v54 = swift_allocObject();
    sub_100052304(v51, v54 + v52, (uint64_t (*)(void))type metadata accessor for ChecklistView);
    *(void *)(v54 + v53) = v46;
    unint64_t v55 = v54 + ((v53 + 15) & 0xFFFFFFFFFFFFFFF8);
    *(void *)unint64_t v55 = v47;
    *(void *)(v55 + 8) = v49;
    *(unsigned char *)(v55 + 16) = v50 != 0;
    swift_bridgeObjectRetain();
    sub_10001C28C(&qword_1000C8980);
    sub_10001C28C(&qword_1000C91E0);
    sub_100009170(&qword_1000C8F48, &qword_1000C8980);
    sub_100051B84();
    uint64_t v56 = v74;
    ForEach<>.init(_:id:content:)();
    uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v87 + 32);
    uint64_t v58 = v73;
    uint64_t v59 = v85;
    v57(v73, v56, v85);
    uint64_t v60 = (uint64_t)v76;
    v57(v76, v58, v59);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v71[0])(v60, 0, 1, v59);
  }
  else
  {
    uint64_t v60 = (uint64_t)v76;
    v45((uint64_t)v76, 1, 1, v41);
  }
  uint64_t v62 = v77;
  uint64_t v61 = v78;
  uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
  long long v64 = v75;
  v63(v75, v86, v78);
  uint64_t v65 = v79;
  sub_100016FEC((uint64_t)v88, v79, &qword_1000C9178);
  uint64_t v66 = v80;
  sub_100016FEC(v60, v80, &qword_1000C9178);
  long long v67 = v81;
  v63(v81, v64, v61);
  uint64_t v68 = sub_10001C28C(&qword_1000C91D8);
  sub_100016FEC(v65, (uint64_t)&v67[*(int *)(v68 + 48)], &qword_1000C9178);
  sub_100016FEC(v66, (uint64_t)&v67[*(int *)(v68 + 64)], &qword_1000C9178);
  sub_1000143B4(v60, &qword_1000C9178);
  sub_1000143B4((uint64_t)v88, &qword_1000C9178);
  uint64_t v69 = *(void (**)(char *, uint64_t))(v62 + 8);
  v69(v86, v61);
  sub_1000143B4(v66, &qword_1000C9178);
  sub_1000143B4(v65, &qword_1000C9178);
  return ((uint64_t (*)(char *, uint64_t))v69)(v64, v61);
}

uint64_t sub_10004F17C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10001C28C(&qword_1000C91D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001C28C(&qword_1000C91C0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10001C28C(&qword_1000C91B0);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10001C28C(&qword_1000C91A0);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0x4028000000000000;
  v6[16] = 0;
  uint64_t v18 = sub_10001C28C(&qword_1000C92D0);
  sub_10004FC08(a1, (uint64_t)&v6[*(int *)(v18 + 44)]);
  uint64_t v19 = static Alignment.center.getter();
  sub_10004CB10(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v9, 0.0, 1, 0.0, 1, v19, v20, &qword_1000C91D0, &qword_1000C91C0);
  sub_1000143B4((uint64_t)v6, &qword_1000C91D0);
  LOBYTE(v6) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  sub_100016FEC((uint64_t)v9, (uint64_t)v13, &qword_1000C91C0);
  uint64_t v29 = &v13[*(int *)(v11 + 44)];
  char *v29 = (char)v6;
  *((void *)v29 + 1) = v22;
  *((void *)v29 + 2) = v24;
  *((void *)v29 + 3) = v26;
  *((void *)v29 + 4) = v28;
  v29[40] = 0;
  sub_1000143B4((uint64_t)v9, &qword_1000C91C0);
  sub_100016FEC((uint64_t)v13, (uint64_t)v17, &qword_1000C91B0);
  uint64_t v30 = &v17[*(int *)(v15 + 44)];
  v30[32] = 0;
  *(_OWORD *)uint64_t v30 = 0u;
  *((_OWORD *)v30 + 1) = 0u;
  sub_1000143B4((uint64_t)v13, &qword_1000C91B0);
  v33[1] = static Color.clear.getter();
  swift_retain();
  uint64_t v31 = AnyView.init<A>(_:)();
  sub_100016FEC((uint64_t)v17, a2, &qword_1000C91A0);
  swift_release();
  *(void *)(a2 + *(int *)(sub_10001C28C(&qword_1000C9188) + 36)) = v31;
  return sub_1000143B4((uint64_t)v17, &qword_1000C91A0);
}

uint64_t sub_10004F488(uint64_t a1)
{
  uint64_t v23 = a1;
  uint64_t v26 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v29 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v27 = *(void *)(v3 - 8);
  uint64_t v28 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ChecklistView();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v25 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v22 - v14;
  sub_1000067A4(0, (unint64_t *)&qword_1000C84E0);
  uint64_t v22 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v13, v9);
  sub_10005168C(v23, (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = swift_allocObject();
  sub_100052304((uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, (uint64_t (*)(void))type metadata accessor for ChecklistView);
  aBlock[4] = sub_100051710;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000374C;
  aBlock[3] = &unk_1000B8780;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100051FC8((unint64_t *)&qword_1000C84E8, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10001C28C(&qword_1000C84F0);
  sub_100009170((unint64_t *)&qword_1000C84F8, &qword_1000C84F0);
  uint64_t v19 = v26;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v20 = (void *)v22;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v2, v19);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v28);
  return ((uint64_t (*)(char *, uint64_t))v24)(v15, v25);
}

void sub_10004F8F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ChecklistView();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = a1 + *(int *)(v3 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  int v7 = v16;
  sub_10005168C(a1, (uint64_t)v5);
  if (v7 == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    char v8 = (char)v16;
    sub_10005236C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ChecklistView);
    if ((v8 & 1) == 0)
    {
      uint64_t v9 = *(void **)(v6 + 8);
      swift_getKeyPath();
      swift_getKeyPath();
      unint64_t v16 = 0;
      uint64_t v17 = 0;
      id v10 = v9;
      static Published.subscript.setter();
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (v17)
      {
        uint64_t v11 = (void *)sub_10003D79C((unint64_t)v16, v17);
        swift_bridgeObjectRelease();
        swift_getKeyPath();
        swift_getKeyPath();
        unint64_t v16 = v11;
        id v12 = v11;
        uint64_t v13 = (char *)v10;
        static Published.subscript.setter();
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        uint64_t v14 = v16;
        if (v16)
        {
          uint64_t v15 = *(void (**)(void *))&v13[OBJC_IVAR___TPSChecklistViewModel_actionHandler];
          if (v15)
          {
            swift_retain();
            v15(v14);
            sub_100005470((uint64_t)v15);
          }
        }
        else
        {
        }
      }
    }
  }
  else
  {
    sub_10005236C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ChecklistView);
  }
}

uint64_t sub_10004FC08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v3 = type metadata accessor for AccessibilityTraits();
  uint64_t v76 = *(void *)(v3 - 8);
  uint64_t v77 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001C28C(&qword_1000C92D8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v75 = (char *)v74 - v11;
  __chkstk_darwin(v10);
  uint64_t v82 = (uint64_t)v74 - v12;
  uint64_t v13 = sub_10001C28C(&qword_1000C92E0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (void *)((char *)v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_10001C28C(&qword_1000C92E8);
  uint64_t v17 = v16 - 8;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)v74 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)v74 - v24;
  uint64_t *v15 = static Alignment.center.getter();
  v15[1] = v26;
  uint64_t v27 = sub_10001C28C(&qword_1000C92F0);
  sub_100050334((uint64_t *)((char *)v15 + *(int *)(v27 + 44)));
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_100016FEC((uint64_t)v15, (uint64_t)v23, &qword_1000C92E0);
  uint64_t v28 = &v23[*(int *)(v17 + 44)];
  long long v29 = v91;
  *(_OWORD *)uint64_t v28 = v90;
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v92;
  sub_1000143B4((uint64_t)v15, &qword_1000C92E0);
  uint64_t v78 = v25;
  sub_100017278((uint64_t)v23, (uint64_t)v25, &qword_1000C92E8);
  uint64_t v30 = a1 + *(int *)(type metadata accessor for ChecklistView() + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v31 = v83;
  uint64_t v81 = v9;
  uint64_t v79 = v20;
  v74[2] = v30;
  if (v83)
  {
    id v32 = [v83 title];

    if (v32)
    {
      id v31 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v34 = v33;

      goto LABEL_6;
    }
    id v31 = 0;
  }
  unint64_t v34 = 0xE000000000000000;
LABEL_6:
  id v83 = v31;
  uint64_t v84 = v34;
  v74[1] = sub_100016F88();
  uint64_t v35 = Text.init<A>(_:)();
  uint64_t v37 = v36;
  char v39 = v38 & 1;
  static Font.title.getter();
  static Font.Weight.bold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v40 = (void *)Text.font(_:)();
  uint64_t v42 = v41;
  char v44 = v43;
  uint64_t v46 = v45;
  swift_release();
  sub_100016FDC(v35, v37, v39);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  id v83 = v40;
  uint64_t v84 = v42;
  char v85 = v44 & 1;
  uint64_t v86 = v46;
  uint64_t v87 = KeyPath;
  __int16 v88 = 1;
  char v89 = 1;
  static AccessibilityTraits.isHeader.getter();
  sub_10001C28C(&qword_1000C92F8);
  sub_100052428(&qword_1000C9300, &qword_1000C92F8, (void (*)(void))sub_1000494FC);
  uint64_t v48 = (uint64_t)v75;
  View.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v5, v77);
  sub_100016FDC((uint64_t)v83, v84, v85);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100017278(v48, v82, &qword_1000C92D8);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v49 = v83;
  if (!v83)
  {
LABEL_10:
    unint64_t v52 = 0xE000000000000000;
    goto LABEL_11;
  }
  id v50 = [v83 text];

  if (!v50)
  {
    id v49 = 0;
    goto LABEL_10;
  }
  id v49 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v52 = v51;

LABEL_11:
  id v83 = v49;
  uint64_t v84 = v52;
  uint64_t v53 = Text.init<A>(_:)();
  uint64_t v55 = v54;
  char v57 = v56 & 1;
  static Font.callout.getter();
  uint64_t v58 = Text.font(_:)();
  uint64_t v60 = v59;
  char v62 = v61;
  uint64_t v77 = v63;
  swift_release();
  char v64 = v62 & 1;
  sub_100016FDC(v53, v55, v57);
  swift_bridgeObjectRelease();
  uint64_t v65 = swift_getKeyPath();
  uint64_t v67 = (uint64_t)v78;
  uint64_t v66 = (uint64_t)v79;
  sub_100016FEC((uint64_t)v78, (uint64_t)v79, &qword_1000C92E8);
  uint64_t v68 = (uint64_t)v81;
  uint64_t v69 = v82;
  sub_100016FEC(v82, (uint64_t)v81, &qword_1000C92D8);
  uint64_t v70 = v80;
  sub_100016FEC(v66, v80, &qword_1000C92E8);
  uint64_t v71 = sub_10001C28C(&qword_1000C9308);
  sub_100016FEC(v68, v70 + *(int *)(v71 + 48), &qword_1000C92D8);
  uint64_t v72 = v70 + *(int *)(v71 + 64);
  *(void *)uint64_t v72 = v58;
  *(void *)(v72 + 8) = v60;
  *(unsigned char *)(v72 + 16) = v64;
  *(void *)(v72 + 24) = v77;
  *(void *)(v72 + 32) = v65;
  *(_WORD *)(v72 + 40) = 1;
  *(unsigned char *)(v72 + 42) = 1;
  sub_100037CB8(v58, v60, v64);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000143B4(v69, &qword_1000C92D8);
  sub_1000143B4(v67, &qword_1000C92E8);
  sub_100016FDC(v58, v60, v64);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000143B4(v68, &qword_1000C92D8);
  return sub_1000143B4(v66, &qword_1000C92E8);
}

uint64_t sub_100050334@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v1 = sub_10001C28C(&qword_1000C9310);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ImageResource();
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001C28C(&qword_1000C8E48);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_10001C28C(&qword_1000C9318);
  uint64_t v10 = __chkstk_darwin(v38);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v39 = (uint64_t)&v36 - v13;
  uint64_t v14 = type metadata accessor for ColorScheme();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v36 - v19;
  sub_1000148E8((uint64_t)&v36 - v19);
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v18, enum case for ColorScheme.light(_:), v14);
  char v21 = static ColorScheme.== infix(_:_:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v15 + 8);
  v22(v18, v14);
  v22(v20, v14);
  if (v21)
  {
    uint64_t v23 = static Color.white.getter();
  }
  else
  {
    id v24 = [self tertiarySystemBackgroundColor];
    uint64_t v23 = Color.init(_:)();
  }
  uint64_t v25 = v23;
  if (qword_1000C8038 != -1) {
    swift_once();
  }
  uint64_t v26 = v37;
  uint64_t v27 = sub_1000524A4(v37, (uint64_t)qword_1000CD228);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v6, v27, v26);
  uint64_t v41 = Image.init(_:)();
  View.accessibilityHidden(_:)();
  swift_release();
  static SymbolRenderingMode.multicolor.getter();
  uint64_t v28 = type metadata accessor for SymbolRenderingMode();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v3, 0, 1, v28);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = (uint64_t *)&v12[*(int *)(v38 + 36)];
  uint64_t v31 = sub_10001C28C(&qword_1000C9320);
  sub_100016FEC((uint64_t)v3, (uint64_t)v30 + *(int *)(v31 + 28), &qword_1000C9310);
  *uint64_t v30 = KeyPath;
  sub_100016FEC((uint64_t)v9, (uint64_t)v12, &qword_1000C8E48);
  sub_1000143B4((uint64_t)v3, &qword_1000C9310);
  sub_1000143B4((uint64_t)v9, &qword_1000C8E48);
  uint64_t v32 = v39;
  sub_100017278((uint64_t)v12, v39, &qword_1000C9318);
  sub_100016FEC(v32, (uint64_t)v12, &qword_1000C9318);
  unint64_t v33 = v40;
  *uint64_t v40 = v25;
  *((_WORD *)v33 + 4) = 256;
  uint64_t v34 = sub_10001C28C(&qword_1000C9328);
  sub_100016FEC((uint64_t)v12, (uint64_t)v33 + *(int *)(v34 + 48), &qword_1000C9318);
  swift_retain();
  sub_1000143B4(v32, &qword_1000C9318);
  sub_1000143B4((uint64_t)v12, &qword_1000C9318);
  return swift_release();
}

uint64_t sub_100050810@<X0>(void **a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v44 = a4;
  uint64_t v45 = a5;
  uint64_t v42 = a1;
  unint64_t v43 = a3;
  uint64_t v47 = a7;
  uint64_t v9 = sub_10001C28C(&qword_1000C92B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v46 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10001C28C(&qword_1000C91F8);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ListSectionSpacing();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10001C28C(&qword_1000C9218);
  __chkstk_darwin(v19);
  char v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_10001C28C(&qword_1000C9208);
  uint64_t v48 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v24 = *v42;
  uint64_t v49 = a2;
  id v50 = v24;
  sub_1000510E4(v24, v43, v44, v45, a6, (uint64_t)v21);
  sub_10001C28C(&qword_1000C9268);
  sub_100051D4C();
  sub_100051E1C();
  uint64_t v40 = v23;
  Section<>.init(header:content:)();
  static ListSectionSpacing.compact.getter();
  uint64_t v25 = *(int *)(v12 + 44);
  uint64_t v39 = v14;
  uint64_t v26 = &v14[v25];
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v27(&v14[v25], v18, v15);
  uint64_t v28 = *(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56);
  v28(v26, 0, 1, v15);
  long long v29 = v23;
  uint64_t v30 = v41;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v14, v29, v41);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v32 = (uint64_t)v46;
  v27(v46, v18, v15);
  v28((char *)v32, 0, 1, v15);
  uint64_t v33 = sub_10001C28C(&qword_1000C91E0);
  uint64_t v34 = v47;
  uint64_t v35 = (uint64_t *)(v47 + *(int *)(v33 + 36));
  uint64_t v36 = sub_10001C28C(&qword_1000C92A8);
  sub_100016FEC(v32, (uint64_t)v35 + *(int *)(v36 + 28), &qword_1000C92B0);
  *uint64_t v35 = KeyPath;
  uint64_t v37 = (uint64_t)v39;
  sub_100016FEC((uint64_t)v39, v34, &qword_1000C91F8);
  sub_1000143B4(v32, &qword_1000C92B0);
  sub_1000143B4(v37, &qword_1000C91F8);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v40, v30);
}

uint64_t sub_100050C2C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v5 = type metadata accessor for AccessibilityTraits();
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  __chkstk_darwin(v5);
  uint64_t v40 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for ChecklistItemView(0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v16 = sub_10001C28C(&qword_1000C92C0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v36 = v16;
  uint64_t v37 = v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10001C28C(&qword_1000C9278);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void **)(a1 + *(int *)(type metadata accessor for ChecklistView() + 24) + 8);
  *uint64_t v13 = swift_getKeyPath();
  sub_10001C28C(&qword_1000C92C8);
  swift_storeEnumTagMultiPayload();
  id v24 = (char *)v13 + v10[6];
  uint64_t v44 = 0;
  uint64_t v45 = 0;
  type metadata accessor for CGSize(0);
  id v25 = v23;
  id v26 = a2;
  State.init(wrappedValue:)();
  uint64_t v27 = v47;
  *(_OWORD *)id v24 = v46;
  *((void *)v24 + 2) = v27;
  uint64_t v28 = (uint64_t *)((char *)v13 + v10[5]);
  type metadata accessor for ChecklistViewModel();
  sub_100051FC8((unint64_t *)&qword_1000C9148, (void (*)(uint64_t))type metadata accessor for ChecklistViewModel);
  *uint64_t v28 = ObservedObject.init(wrappedValue:)();
  v28[1] = v29;
  *(uint64_t *)((char *)v13 + v10[7]) = (uint64_t)v26;
  sub_100052304((uint64_t)v13, (uint64_t)v15, type metadata accessor for ChecklistItemView);
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v30 = sub_100051FC8(&qword_1000C9280, (void (*)(uint64_t))type metadata accessor for ChecklistItemView);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v39);
  sub_10005236C((uint64_t)v15, type metadata accessor for ChecklistItemView);
  uint64_t v31 = v40;
  static AccessibilityTraits.isButton.getter();
  *(void *)&long long v46 = v10;
  *((void *)&v46 + 1) = v30;
  swift_getOpaqueTypeConformance2();
  uint64_t v32 = v36;
  View.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v31, v42);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v32);
  uint64_t v33 = v43;
  sub_100016FEC((uint64_t)v22, v43, &qword_1000C9278);
  uint64_t v34 = v33 + *(int *)(sub_10001C28C(&qword_1000C9268) + 36);
  *(unsigned char *)(v34 + 32) = 0;
  *(_OWORD *)uint64_t v34 = 0u;
  *(_OWORD *)(v34 + 16) = 0u;
  return sub_1000143B4((uint64_t)v22, &qword_1000C9278);
}

uint64_t sub_1000510E4@<X0>(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, char a5@<W5>, uint64_t a6@<X8>)
{
  if (!(a2 >> 62))
  {
    uint64_t v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_10:
    uint64_t v23 = sub_10001C28C(&qword_1000C9228);
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
    uint64_t v20 = v23;
    uint64_t v21 = a6;
    uint64_t v22 = 1;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_9;
  }
LABEL_3:
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    id v14 = *(id *)(a2 + 32);
  }
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  sub_1000067A4(0, (unint64_t *)&qword_1000C8330);
  id v16 = a1;
  char v17 = static NSObject.== infix(_:_:)();

  if ((v17 & 1) == 0) {
    goto LABEL_10;
  }
  sub_100051298(a3, a4, a5 & 1, a6);
  uint64_t v18 = sub_10001C28C(&qword_1000C9228);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a6;
  uint64_t v22 = 0;
LABEL_11:

  return v19(v21, v22, 1, v20);
}

uint64_t sub_100051298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v49 = a3;
  uint64_t v50 = a4;
  uint64_t v47 = type metadata accessor for Prominence();
  uint64_t v6 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_10001C28C(&qword_1000C92B8);
  uint64_t v9 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001C28C(&qword_1000C9248);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10001C28C(&qword_1000C9238);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = a1;
  uint64_t v52 = a2;
  sub_100016F88();
  swift_bridgeObjectRetain();
  uint64_t v51 = Text.init<A>(_:)();
  uint64_t v52 = v20;
  char v53 = v21 & 1;
  uint64_t v54 = v22;
  uint64_t v23 = v47;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Prominence.increased(_:), v47);
  View.headerProminence(_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v23);
  sub_100016FDC(v51, v52, v53);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = v48;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v11, v48);
  id v26 = &v15[*(int *)(v13 + 44)];
  *(void *)id v26 = KeyPath;
  *((void *)v26 + 1) = 0;
  v26[16] = 1;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v25);
  LOBYTE(KeyPath) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  sub_100016FEC((uint64_t)v15, (uint64_t)v19, &qword_1000C9248);
  uint64_t v35 = &v19[*(int *)(v17 + 44)];
  *uint64_t v35 = KeyPath;
  *((void *)v35 + 1) = v28;
  *((void *)v35 + 2) = v30;
  *((void *)v35 + 3) = v32;
  *((void *)v35 + 4) = v34;
  v35[40] = 0;
  sub_1000143B4((uint64_t)v15, &qword_1000C9248);
  LOBYTE(KeyPath) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v44 = v50;
  sub_100016FEC((uint64_t)v19, v50, &qword_1000C9238);
  uint64_t v45 = v44 + *(int *)(sub_10001C28C(&qword_1000C9228) + 36);
  *(unsigned char *)uint64_t v45 = KeyPath;
  *(void *)(v45 + 8) = v37;
  *(void *)(v45 + 16) = v39;
  *(void *)(v45 + 24) = v41;
  *(void *)(v45 + 32) = v43;
  *(unsigned char *)(v45 + 40) = 0;
  return sub_1000143B4((uint64_t)v19, &qword_1000C9238);
}

uint64_t sub_10005167C@<X0>(char *a1@<X8>)
{
  return sub_10004E784(*(void *)(v1 + 16), a1);
}

uint64_t sub_10005168C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChecklistView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000516F4()
{
  return sub_100051728(sub_10004F488);
}

uint64_t sub_100051710()
{
  return sub_100051728((uint64_t (*)(uint64_t))sub_10004F8F8);
}

uint64_t sub_100051728(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for ChecklistView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_10005179C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000517C8()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_1000517F0()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t sub_100051814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051834(a1, a2, a3, a4, &qword_1000C9310, (uint64_t (*)(char *))&EnvironmentValues.symbolRenderingMode.setter);
}

uint64_t sub_100051834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(char *))
{
  uint64_t v9 = sub_10001C28C(a5);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100016FEC(a1, (uint64_t)v11, a5);
  return a6(v11);
}

uint64_t sub_1000518F0@<X0>(uint64_t a1@<X8>)
{
  return sub_10004F17C(*(void *)(v1 + 16), a1);
}

unint64_t sub_1000518F8()
{
  unint64_t result = qword_1000C9190;
  if (!qword_1000C9190)
  {
    sub_10001AD28(&qword_1000C9188);
    sub_100051998();
    sub_100009170(&qword_1000C82C0, &qword_1000C82C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9190);
  }
  return result;
}

unint64_t sub_100051998()
{
  unint64_t result = qword_1000C9198;
  if (!qword_1000C9198)
  {
    sub_10001AD28(&qword_1000C91A0);
    sub_100052428(&qword_1000C91A8, &qword_1000C91B0, (void (*)(void))sub_100051A64);
    sub_100009170(&qword_1000C8F60, &qword_1000C8F68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9198);
  }
  return result;
}

unint64_t sub_100051A64()
{
  unint64_t result = qword_1000C91B8;
  if (!qword_1000C91B8)
  {
    sub_10001AD28(&qword_1000C91C0);
    sub_100009170(&qword_1000C91C8, &qword_1000C91D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C91B8);
  }
  return result;
}

void sub_100051B18(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 setIdentifier:v3];
}

unint64_t sub_100051B84()
{
  unint64_t result = qword_1000C91E8;
  if (!qword_1000C91E8)
  {
    sub_10001AD28(&qword_1000C91E0);
    sub_100051C24();
    sub_100009170(&qword_1000C92A0, &qword_1000C92A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C91E8);
  }
  return result;
}

unint64_t sub_100051C24()
{
  unint64_t result = qword_1000C91F0;
  if (!qword_1000C91F0)
  {
    sub_10001AD28(&qword_1000C91F8);
    sub_100051CC4();
    sub_100009170(&qword_1000C9290, &qword_1000C9298);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C91F0);
  }
  return result;
}

unint64_t sub_100051CC4()
{
  unint64_t result = qword_1000C9200;
  if (!qword_1000C9200)
  {
    sub_10001AD28(&qword_1000C9208);
    sub_100051D4C();
    sub_100051E1C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9200);
  }
  return result;
}

unint64_t sub_100051D4C()
{
  unint64_t result = qword_1000C9210;
  if (!qword_1000C9210)
  {
    sub_10001AD28(&qword_1000C9218);
    sub_100052428(&qword_1000C9220, &qword_1000C9228, (void (*)(void))sub_100051DEC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9210);
  }
  return result;
}

uint64_t sub_100051DEC()
{
  return sub_100052428(&qword_1000C9230, &qword_1000C9238, (void (*)(void))sub_10001AAC0);
}

unint64_t sub_100051E1C()
{
  unint64_t result = qword_1000C9260;
  if (!qword_1000C9260)
  {
    sub_10001AD28(&qword_1000C9268);
    sub_100051EBC();
    sub_100009170(&qword_1000C8F60, &qword_1000C8F68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9260);
  }
  return result;
}

unint64_t sub_100051EBC()
{
  unint64_t result = qword_1000C9270;
  if (!qword_1000C9270)
  {
    sub_10001AD28(&qword_1000C9278);
    type metadata accessor for ChecklistItemView(255);
    sub_100051FC8(&qword_1000C9280, (void (*)(uint64_t))type metadata accessor for ChecklistItemView);
    swift_getOpaqueTypeConformance2();
    sub_100051FC8(&qword_1000C9288, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9270);
  }
  return result;
}

uint64_t sub_100051FC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100052014()
{
  uint64_t v1 = type metadata accessor for ChecklistView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + *(int *)(v1 + 20);
  sub_10001C28C(&qword_1000C9070);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 17, v2 | 7);
}

uint64_t sub_1000521D4@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ChecklistView() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = *(void *)(v2 + v7);
  uint64_t v10 = *(void *)(v2 + v8);
  uint64_t v11 = *(void *)(v2 + v8 + 8);
  char v12 = *(unsigned char *)(v2 + v8 + 16);

  return sub_100050810(a1, v2 + v6, v9, v10, v11, v12, a2);
}

uint64_t sub_100052294@<X0>(uint64_t a1@<X8>)
{
  return sub_100050C2C(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_10005229C()
{
  return EnvironmentValues.listSectionSpacing.getter();
}

uint64_t sub_1000522C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051834(a1, a2, a3, a4, &qword_1000C92B0, (uint64_t (*)(char *))&EnvironmentValues.listSectionSpacing.setter);
}

uint64_t sub_100052304(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005236C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000523D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100052400()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_100052428(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001AD28(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000524A4(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_1000524DC()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t sub_100052500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100051834(a1, a2, a3, a4, &qword_1000C9310, (uint64_t (*)(char *))&EnvironmentValues.symbolRenderingMode.setter);
}

unint64_t sub_100052538()
{
  unint64_t result = qword_1000C9330;
  if (!qword_1000C9330)
  {
    sub_10001AD28(&qword_1000C9168);
    sub_10001AD28(&qword_1000C9138);
    sub_10001AD28(&qword_1000C9130);
    type metadata accessor for InsetGroupedListStyle();
    sub_10001AD28(&qword_1000C9128);
    sub_10001AD28(&qword_1000C9120);
    sub_100009170(&qword_1000C9160, &qword_1000C9120);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9330);
  }
  return result;
}

void sub_1000526EC()
{
  if ([v0 isSharedVariant])
  {
    id v1 = [v0 sharedTipAvailabilityView];

    if (!v1)
    {
      id v2 = [v0 actionButton];
      if (v2)
      {
        uint64_t v3 = v2;
        [v2 setEnabled:0];
      }
      [v0 deactivateBottomConstraints];
      id v4 = [objc_allocWithZone((Class)UIView) init];
      [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v5 = [v0 contentScrollView];
      [v5 addSubview:v4];

      id v6 = [objc_allocWithZone((Class)UIView) init];
      [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v7 = [self opaqueSeparatorColor];
      [v6 setBackgroundColor:v7];

      [v4 addSubview:v6];
      id v8 = [v0 availabilityTextView];
      [v4 addSubview:v8];
      id v9 = [v6 heightAnchor];
      id v10 = [v0 cellAppearance];
      [v10 displayScale];
      double v12 = v11;

      id v13 = [v9 constraintEqualToConstant:1.0 / v12];
      [v13 setActive:1];

      id v14 = [v6 topAnchor];
      id v15 = [v4 topAnchor];
      id v16 = [v14 constraintEqualToAnchor:v15];

      [v16 setActive:1];
      id v17 = [v6 leadingAnchor];
      id v18 = [v4 leadingAnchor];
      id v19 = [v17 constraintEqualToAnchor:v18];

      [v19 setActive:1];
      id v20 = [v6 trailingAnchor];
      id v21 = [v4 trailingAnchor];
      id v22 = [v20 constraintEqualToAnchor:v21];

      [v22 setActive:1];
      id v23 = [v8 leadingAnchor];
      id v24 = [v4 leadingAnchor];
      id v25 = [v23 constraintEqualToAnchor:v24];

      [v25 setActive:1];
      id v26 = [v8 trailingAnchor];
      id v27 = [v4 trailingAnchor];
      id v28 = [v26 constraintEqualToAnchor:v27];

      [v28 setActive:1];
      id v29 = [v8 topAnchor];
      id v30 = [v6 bottomAnchor];
      id v31 = [v29 constraintEqualToAnchor:v30 constant:8.0];

      [v31 setActive:1];
      char v64 = v8;
      id v32 = [v8 bottomAnchor];
      id v33 = [v4 bottomAnchor];
      id v34 = [v32 constraintEqualToAnchor:v33];

      [v34 setActive:1];
      id v35 = [v4 leadingAnchor];
      id v36 = [v0 titleLabel];
      id v37 = [v36 leadingAnchor];

      id v38 = [v35 constraintEqualToAnchor:v37];
      [v38 setActive:1];

      id v39 = [v4 trailingAnchor];
      id v40 = [v0 titleLabel];
      id v41 = [v40 trailingAnchor];

      id v42 = [v39 constraintEqualToAnchor:v41];
      [v42 setActive:1];

      id v43 = [v0 footnoteTextView];
      if (v43) {
        goto LABEL_16;
      }
      id v44 = [v0 tip];
      id v45 = [v44 actions];

      if (v45)
      {
        sub_1000067A4(0, &qword_1000C93A0);
        unint64_t v46 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v46 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v47 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        if (v47)
        {
          id v43 = [v0 actionButton];
          if (v43) {
            goto LABEL_16;
          }
        }
      }
      id v48 = [v0 tip];
      unsigned int v49 = [v48 containsLinks];

      id v50 = v49 ? [v0 contentTextView] : [v0 contentLabel];
      id v43 = v50;
      if (v43)
      {
LABEL_16:
        id v65 = v43;
        id v51 = [v4 topAnchor];
        id v52 = [v65 bottomAnchor];
        char v53 = &selRef_applicationWillTerminate;
        id v54 = [v51 constraintEqualToAnchor:v52 constant:15.0];

        [v54 setActive:1];
      }
      else
      {
        id v65 = 0;
        char v53 = &selRef_applicationWillTerminate;
      }
      id v55 = [v4 bottomAnchor];
      id v56 = [v0 contentScrollView];
      id v57 = [v56 bottomAnchor];

      [v0 bottomPadding];
      id v59 = [v55 v53[92] v57 -v58];

      [v0 setSharedTextViewBottomConstraint:v59];
      id v60 = [v0 sharedTextViewBottomConstraint];
      if (v60)
      {
        char v62 = v60;
        LODWORD(v61) = 1144750080;
        [v60 setPriority:v61];
      }
      id v63 = [v0 sharedTextViewBottomConstraint];
      [v63 setActive:1];

      [v0 setSharedTipAvailabilityView:v4];
      [v0 setNeedsUpdateConstraints];
    }
  }
}

id sub_1000530E4()
{
  id v1 = [v0 sharedTipAvailabilityView];
  if (v1)
  {
    id v2 = v1;
    [v1 removeFromSuperview];
    [v0 setSharedTipAvailabilityView:0];
  }
  id v3 = [v0 sharedTextViewBottomConstraint];
  if (v3)
  {
    id v4 = v3;
    [v3 setActive:0];
  }
  [v0 setSharedTextViewBottomConstraint:0];

  return [v0 setNeedsUpdateConstraints];
}

id sub_1000531F0()
{
  uint64_t v1 = type metadata accessor for AttributeContainer();
  uint64_t v93 = *(void *)(v1 - 8);
  uint64_t v94 = v1;
  __chkstk_darwin(v1);
  long long v92 = (char *)&v89 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for AttributedString.MarkdownParsingOptions.FailurePolicy();
  uint64_t v102 = *(void *)(v3 - 8);
  uint64_t v103 = v3;
  __chkstk_darwin(v3);
  uint64_t v101 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AttributedString.MarkdownParsingOptions.InterpretedSyntax();
  uint64_t v98 = *(void *)(v5 - 8);
  uint64_t v99 = v5;
  __chkstk_darwin(v5);
  uint64_t v100 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AttributedString.MarkdownParsingOptions();
  __chkstk_darwin(v7 - 8);
  int v97 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001C28C(&qword_1000C8710);
  __chkstk_darwin(v9 - 8);
  uint64_t v96 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10001C28C(&qword_1000C9378);
  __chkstk_darwin(v11 - 8);
  uint64_t v104 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = (void *)type metadata accessor for AttributedString();
  uint64_t v105 = (void *)*(v13 - 1);
  id v106 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  long long v90 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v95 = (char *)&v89 - v17;
  __chkstk_darwin(v16);
  long long v91 = (char *)&v89 - v18;
  uint64_t v19 = type metadata accessor for Locale();
  __chkstk_darwin(v19 - 8);
  uint64_t v20 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v20 - 8);
  id v21 = [objc_allocWithZone((Class)TPSTipContentTextView) init];
  [v21 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v21 setScrollEnabled:0];
  [v21 _setInteractiveTextSelectionDisabled:1];
  id v22 = self;
  id v23 = v21;
  id v107 = v22;
  id v24 = [v22 clearColor];
  [v23 setBackgroundColor:v24];

  [v23 setEditable:0];
  id v25 = self;
  id v26 = v23;
  id v27 = [v25 footnoteFont];
  [v26 setFont:v27];

  [v26 setDataDetectorTypes:0];
  id v28 = [v26 textContainer];
  [v28 setHeightTracksTextView:1];

  [v26 setDelegate:v0];
  [v26 setOpaque:1];
  [v26 setTextContainerInset:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  id v29 = [v26 textContainer];
  [v29 setLineFragmentPadding:0.0];

  id v30 = [v0 appController];
  id v31 = [v0 tip];
  unsigned int v32 = [v30 hasLocalVariant:v31];

  if (!v32)
  {
    id v59 = [v0 tip];
    id v60 = [v59 availabilityMessage];

    if (v60)
    {
      uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v63 = v62;

      uint64_t v64 = HIBYTE(v63) & 0xF;
      if ((v63 & 0x2000000000000000) == 0) {
        uint64_t v64 = v61 & 0xFFFFFFFFFFFFLL;
      }
      if (v64)
      {
        uint64_t v89 = v61;
LABEL_11:
        sub_10001C28C(&qword_1000C89C8);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10008CF30;
        *(void *)(inited + 32) = NSForegroundColorAttributeName;
        uint64_t v66 = NSForegroundColorAttributeName;
        id v67 = [v107 tertiaryLabelColor:v89];
        *(void *)(inited + 64) = sub_1000067A4(0, &qword_1000C8538);
        *(void *)(inited + 40) = v67;
        unint64_t v68 = sub_100004390(inited);
        id v69 = [v25 footnoteFont];
        if (v69)
        {
          uint64_t v70 = v69;
          uint64_t v111 = sub_1000067A4(0, (unint64_t *)&qword_1000C89D0);
          *(void *)&long long v110 = v70;
          sub_10001C9D4(&v110, v109);
          uint64_t v71 = NSFontAttributeName;
          id v72 = v70;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v108 = v68;
          sub_1000548F4(v109, v71, isUniquelyReferenced_nonNull_native);

          swift_bridgeObjectRelease();
        }
        uint64_t v75 = v102;
        uint64_t v74 = v103;
        uint64_t v77 = v100;
        uint64_t v76 = v101;
        uint64_t v78 = v99;
        uint64_t v79 = type metadata accessor for URL();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v96, 1, 1, v79);
        (*(void (**)(char *, void, uint64_t))(v98 + 104))(v77, enum case for AttributedString.MarkdownParsingOptions.InterpretedSyntax.full(_:), v78);
        (*(void (**)(char *, void, uint64_t))(v75 + 104))(v76, enum case for AttributedString.MarkdownParsingOptions.FailurePolicy.throwError(_:), v74);
        AttributedString.MarkdownParsingOptions.init(allowsExtendedAttributes:interpretedSyntax:failurePolicy:languageCode:)();
        uint64_t v80 = v95;
        AttributedString.init(markdown:options:baseURL:)();
        uint64_t v81 = v92;
        AttributeContainer.init(_:)();
        sub_100054A38(&qword_1000C9380, (void (*)(uint64_t))&type metadata accessor for AttributedString);
        id v82 = v104;
        id v83 = v106;
        AttributedStringProtocol.settingAttributes(_:)();
        (*(void (**)(char *, uint64_t))(v93 + 8))(v81, v94);
        uint64_t v84 = v105;
        char v85 = (void (*)(char *, id))v105[1];
        v85(v80, v83);
        ((void (*)(id, void, uint64_t, id))v84[7])(v82, 0, 1, v83);
        if (((unsigned int (*)(id, uint64_t, id))v84[6])(v82, 1, v83) == 1)
        {
          sub_100054258((uint64_t)v82);
        }
        else
        {
          uint64_t v86 = v91;
          ((void (*)(char *, id, id))v84[4])(v91, v82, v83);
          sub_1000067A4(0, &qword_1000C9388);
          ((void (*)(char *, char *, id))v84[2])(v90, v86, v83);
          id v87 = v26;
          __int16 v88 = NSAttributedString.init(_:)();
          [v87 setAttributedText:v88];

          v85(v86, v83);
        }
        return v26;
      }
      swift_bridgeObjectRelease();
    }
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    uint64_t v89 = String.init(localized:table:bundle:locale:comment:)();
    goto LABEL_11;
  }
  id result = [v25 footnoteBoldTextFont];
  if (result)
  {
    id v34 = result;
    id v106 = [objc_allocWithZone((Class)NSTextAttachment) init];
    id v35 = self;
    id v36 = [v35 configurationWithFont:v34];
    id v37 = [v107 linkColor];
    id v38 = (char *)[v35 configurationWithHierarchicalColor:v37];
    uint64_t v104 = v38;

    id v39 = [self deviceSymbol];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v40 = v36;
    uint64_t v105 = v40;
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v42 = [self systemImageNamed:v41 withConfiguration:v40];

    id v43 = [v42 imageByApplyingSymbolConfiguration:v38];
    id v44 = v106;
    [v106 setImage:v43];

    sub_1000067A4(0, &qword_1000C9390);
    id v45 = [(id)swift_getObjCClassFromMetadata() attributedStringWithAttachment:v44];
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    v46._countAndFlagsBits = String.init(localized:table:bundle:locale:comment:)();
    *(void *)&long long v110 = 32;
    *((void *)&v110 + 1) = 0xE100000000000000;
    String.append(_:)(v46);
    swift_bridgeObjectRelease();
    sub_10001C28C(&qword_1000C89C8);
    uint64_t v47 = swift_initStackObject();
    *(_OWORD *)(v47 + 16) = xmmword_10008D280;
    *(void *)(v47 + 32) = NSFontAttributeName;
    uint64_t v48 = sub_1000067A4(0, (unint64_t *)&qword_1000C89D0);
    *(void *)(v47 + 40) = v34;
    *(void *)(v47 + 64) = v48;
    *(void *)(v47 + 72) = NSForegroundColorAttributeName;
    unsigned int v49 = NSFontAttributeName;
    id v50 = v34;
    id v51 = NSForegroundColorAttributeName;
    id v52 = [v107 linkColor];
    uint64_t v53 = sub_1000067A4(0, &qword_1000C8538);
    *(void *)(v47 + 80) = v52;
    *(void *)(v47 + 104) = v53;
    *(void *)(v47 + 112) = NSLinkAttributeName;
    *(void *)(v47 + 144) = &type metadata for String;
    *(void *)(v47 + 120) = 35;
    *(void *)(v47 + 128) = 0xE100000000000000;
    id v54 = NSLinkAttributeName;
    sub_100004390(v47);
    id v55 = objc_allocWithZone((Class)NSAttributedString);
    NSString v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_100054A38(&qword_1000C80A8, type metadata accessor for Key);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v58 = [v55 initWithString:v56 attributes:isa];

    [v45 appendAttributedString:v58];
    [v26 setAttributedText:v45];

    return v26;
  }
  __break(1u);
  return result;
}

void sub_1000540CC()
{
  id v1 = [v0 contentLabelBottomConstraint];
  if (v1)
  {
    uint64_t v2 = v1;
    [v1 setActive:0];
  }
  id v3 = [v0 textViewBottomConstraint];
  if (v3)
  {
    uint64_t v4 = v3;
    [v3 setActive:0];
  }
  id v5 = [v0 actionButtonBottomConstraint];
  if (v5)
  {
    uint64_t v6 = v5;
    [v5 setActive:0];
  }
  id v7 = [v0 footnoteBottomConstraint];
  if (v7)
  {
    uint64_t v8 = v7;
    [v7 setActive:0];
  }
  id v9 = [v0 sharedTextViewBottomConstraint];
  if (v9)
  {
    id v10 = v9;
    [v9 setActive:0];
  }
}

uint64_t sub_100054258(uint64_t a1)
{
  uint64_t v2 = sub_10001C28C(&qword_1000C9378);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000542B8(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10001C28C(&qword_1000C9398);
  char v35 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    uint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    id v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    id v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_10001C9D4(v22, v36);
    }
    else
    {
      sub_100055024((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v24 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_10001C9D4(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_1000545F4(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  sub_10001C28C(&qword_1000C93B0);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              id v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      id v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      Swift::Int v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_10001C9D4(v24, v35);
      }
      else
      {
        sub_100055024((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      void *v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_10001C9D4(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

_OWORD *sub_1000548F4(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_100003FFC((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_100054E5C();
      goto LABEL_7;
    }
    sub_1000542B8(v12, a3 & 1);
    unint64_t v18 = sub_100003FFC((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      unint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for Key(0);
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    unint64_t v16 = (_OWORD *)(v15[7] + 32 * v9);
    sub_10003AB18((uint64_t)v16);
    return sub_10001C9D4(a1, v16);
  }
LABEL_13:
  sub_100054BD4(v9, (uint64_t)a2, a1, v15);

  return a2;
}

uint64_t sub_100054A38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_OWORD *sub_100054A80(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_100012140(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_100055080();
      goto LABEL_7;
    }
    sub_1000545F4(v15, a4 & 1);
    unint64_t v21 = sub_100012140(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    char v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_10003AB18((uint64_t)v19);
    return sub_10001C9D4(a1, v19);
  }
LABEL_13:
  sub_100054C3C(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_100054BD4(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_10001C9D4(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

_OWORD *sub_100054C3C(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_10001C9D4(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

id sub_100054CA8()
{
  id v1 = v0;
  sub_10001C28C(&qword_1000C93A8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *id v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    int64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_100054E5C()
{
  id v1 = v0;
  sub_10001C28C(&qword_1000C9398);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *id v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_100055024(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_10001C9D4(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100055024(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *sub_100055080()
{
  id v1 = v0;
  sub_10001C28C(&qword_1000C93B0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *id v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_100055024(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    sub_10001C9D4(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    id v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_100055268(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t (*sub_100055274())()
{
  sub_100055628();
  EnvironmentValues.subscript.getter();
  if (!v2) {
    return 0;
  }
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24) = v3;
  return sub_1000556C4;
}

uint64_t _s7SwiftUI4ViewP4TipsE14onTipActionURL7performQry10Foundation0H0Vc_tF_0(uint64_t a1, uint64_t a2)
{
  swift_getKeyPath();
  if (a1)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = a1;
    *(void *)(v4 + 24) = a2;
    uint64_t v5 = sub_100055600;
  }
  else
  {
    uint64_t v5 = 0;
  }
  sub_1000397EC(a1);
  View.environment<A>(_:_:)();
  swift_release();
  return sub_100005470((uint64_t)v5);
}

uint64_t sub_1000553E0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_10005567C;
    *(void *)(v4 + 24) = v3;
  }
  sub_1000397EC(v1);
  sub_100055628();
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_1000554A8()
{
  return swift_getWitnessTable();
}

unint64_t sub_100055518()
{
  unint64_t result = qword_1000C93C0;
  if (!qword_1000C93C0)
  {
    sub_10001AD28(&qword_1000C93B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C93C0);
  }
  return result;
}

double sub_100055574@<D0>(_OWORD *a1@<X8>)
{
  sub_100055628();
  EnvironmentValues.subscript.getter();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1000555C8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100055600()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_100055628()
{
  unint64_t result = qword_1000C93C8;
  if (!qword_1000C93C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C93C8);
  }
  return result;
}

uint64_t sub_10005567C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

ValueMetadata *type metadata accessor for TipActionClientURLHandlerKey()
{
  return &type metadata for TipActionClientURLHandlerKey;
}

void sub_1000556C8(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  BOOL v30 = a4;
  uint64_t v31 = a5;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v33 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  int64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TipsLog();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    static TipsLog.default.getter();
    swift_getErrorValue();
    Error.localizedDescription.getter();
    log(_:_:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
LABEL_3:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    goto LABEL_5;
  }
  if (!a1)
  {
    static TipsLog.default.getter();
    long long aBlock = 0;
    unint64_t v35 = 0xE000000000000000;
    _StringGuts.grow(_:)(23);
    swift_bridgeObjectRelease();
    long long aBlock = (void **)0xD000000000000015;
    unint64_t v35 = 0x80000001000A0790;
    v29._countAndFlagsBits = a3;
    v29._object = v30;
    String.append(_:)(v29);
    log(_:_:)();
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
LABEL_5:
  sub_100012E0C();
  uint64_t v18 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v31;
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = v20;
  id v38 = sub_100056120;
  uint64_t v39 = v19;
  long long aBlock = _NSConcreteStackBlock;
  unint64_t v35 = 1107296256;
  id v36 = sub_10000374C;
  id v37 = &unk_1000B8930;
  int64_t v21 = _Block_copy(&aBlock);
  id v22 = a1;
  id v23 = v20;
  swift_release();
  static DispatchQoS.unspecified.getter();
  long long aBlock = (void **)_swiftEmptyArrayStorage;
  sub_100056128();
  sub_10001C28C(&qword_1000C84F0);
  sub_100056180();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v32);
  if (a1)
  {
    id v24 = v22;
    NSString v25 = [v24 identifier];
    if (!v25)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v25 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    unint64_t v26 = self;
    id v27 = [v24 correlationID];
    id v28 = [v26 eventWithContentID:v25 collectionID:0 correlationID:v27 launchType:TPSAnalyticsLaunchTypeSharedTipModal];

    [v28 log];
  }
}

void sub_100055B7C(void *a1, void *a2)
{
  type metadata accessor for TPSSharedTipViewController();
  id v4 = a1;
  id v5 = sub_10003BA60(a1);
  id v6 = [a2 appController];
  [v5 setAppController:v6];

  [v5 setDelegate:a2];
  unint64_t v7 = (char *)v5;
  id v8 = [a2 preferredUserInterfaceStyle];
  uint64_t v9 = (uint64_t)v8;
  if (a1)
  {
    if (sub_10003C1B8(v8 == (id)2)) {
      uint64_t v9 = 2;
    }
    else {
      uint64_t v9 = 1;
    }
  }
  [v7 setOverrideUserInterfaceStyle:v9];

  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  uint64_t v11 = (void (**)(int))&v7[OBJC_IVAR____TtC4Tips26TPSSharedTipViewController_onDismissed];
  uint64_t v12 = *(void *)&v7[OBJC_IVAR____TtC4Tips26TPSSharedTipViewController_onDismissed];
  char *v11 = sub_100056214;
  v11[1] = (void (*)(int))v10;
  id v13 = a2;
  sub_100005470(v12);
  id v14 = [v13 tipsByCollectionViewController];
  [v14 setShouldHoldOffVideo:1];

  id v15 = [v13 tipsByCollectionViewController];
  [v15 stopVideoForCurrentTip];

  id v16 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v7];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = v13;
  v21[4] = sub_10005625C;
  v21[5] = v17;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 1107296256;
  void v21[2] = sub_10000374C;
  v21[3] = &unk_1000B89A8;
  uint64_t v18 = _Block_copy(v21);
  id v19 = v4;
  id v20 = v13;
  swift_release();
  [v20 presentViewController:v16 animated:1 completion:v18];
  _Block_release(v18);
}

void sub_100055E0C(int a1, id a2)
{
  [a2 updateShouldHoldOffVideo];
  id v3 = [a2 tipsByCollectionViewController];
  [v3 continueVideoForCurrentTip];
}

void sub_100055E80(void *a1, void *a2)
{
  if (a1)
  {
    id v3 = a1;
    id v4 = [a2 appController];
    [v4 logSharedTipDisplayed:v3 isEligible:0];
  }
}

void sub_100055F00(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1000560D4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100056114(void *a1, uint64_t a2)
{
  sub_1000556C8(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32));
}

void sub_100056120()
{
  sub_100055B7C(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_100056128()
{
  unint64_t result = qword_1000C84E8;
  if (!qword_1000C84E8)
  {
    type metadata accessor for DispatchWorkItemFlags();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C84E8);
  }
  return result;
}

unint64_t sub_100056180()
{
  unint64_t result = qword_1000C84F8;
  if (!qword_1000C84F8)
  {
    sub_10001AD28(&qword_1000C84F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C84F8);
  }
  return result;
}

uint64_t sub_1000561DC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100056214(int a1)
{
  sub_100055E0C(a1, *(id *)(v1 + 16));
}

uint64_t sub_10005621C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10005625C()
{
  sub_100055E80(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100056278@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000562F8(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v2;
  v3;
  static Published.subscript.setter();
  return sub_10003C580();
}

uint64_t sub_100056378@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000563F8(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

id sub_100056508(void *a1)
{
  uint64_t v3 = type metadata accessor for ChecklistView();
  uint64_t v4 = v3 - 8;
  uint64_t v5 = __chkstk_darwin(v3);
  id v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v21 - v8;
  id v10 = objc_allocWithZone((Class)type metadata accessor for ChecklistViewModel());
  uint64_t v11 = v1;
  id v12 = [v10 init];
  *(void *)&v11[OBJC_IVAR___TPSChecklistViewController_viewModel] = v12;
  uint64_t *v7 = swift_getKeyPath();
  sub_10001C28C(&qword_1000C81D0);
  swift_storeEnumTagMultiPayload();
  id v13 = (uint64_t *)((char *)v7 + *(int *)(v4 + 28));
  *id v13 = swift_getKeyPath();
  sub_10001C28C(&qword_1000C9070);
  swift_storeEnumTagMultiPayload();
  id v14 = (uint64_t *)((char *)v7 + *(int *)(v4 + 32));
  sub_10005716C();
  id v15 = v12;
  *id v14 = ObservedObject.init(wrappedValue:)();
  v14[1] = v16;
  sub_1000571C4((uint64_t)v7, (uint64_t)v9);
  id v17 = objc_allocWithZone((Class)sub_10001C28C(&qword_1000C9408));
  *(void *)&v11[OBJC_IVAR___TPSChecklistViewController_hostingController] = UIHostingController.init(rootView:)();

  uint64_t v18 = (objc_class *)type metadata accessor for ChecklistViewController();
  v21.receiver = v11;
  v21.super_class = v18;
  id v19 = [super initWithCoder:a1];

  return v19;
}

uint64_t sub_100056744()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void sub_100056864()
{
  uint64_t v1 = v0;
  v31.receiver = v0;
  v31.super_class = (Class)type metadata accessor for ChecklistViewController();
  [super loadView];
  uint64_t v2 = OBJC_IVAR___TPSChecklistViewController_hostingController;
  id v3 = [*(id *)&v0[OBJC_IVAR___TPSChecklistViewController_hostingController] view];
  if (v3)
  {
    uint64_t v4 = v3;
    [v0 addChildViewController:*(void *)&v0[v2]];
    id v5 = [v0 view];
    if (v5)
    {
      uint64_t v6 = v5;
      [v5 addSubview:v4];

      [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v7 = [v1 view];
      if (v7)
      {
        uint64_t v8 = v7;
        sub_10001C28C(&qword_1000C8540);
        uint64_t v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_10008CC00;
        id v10 = [v4 leadingAnchor];
        id v11 = [v1 view];
        if (v11)
        {
          id v12 = v11;
          id v13 = [v11 leadingAnchor];

          id v14 = [v10 constraintEqualToAnchor:v13];
          *(void *)(v9 + 32) = v14;
          id v15 = [v4 topAnchor];
          id v16 = [v1 view];
          if (v16)
          {
            id v17 = v16;
            id v18 = [v16 topAnchor];

            id v19 = [v15 constraintEqualToAnchor:v18];
            *(void *)(v9 + 40) = v19;
            id v20 = [v4 trailingAnchor];
            id v21 = [v1 view];
            if (v21)
            {
              id v22 = v21;
              id v23 = [v21 trailingAnchor];

              id v24 = [v20 constraintEqualToAnchor:v23];
              *(void *)(v9 + 48) = v24;
              id v25 = [v4 bottomAnchor];
              id v26 = [v1 view];
              if (v26)
              {
                id v27 = v26;
                id v28 = [v26 bottomAnchor];

                id v29 = [v25 constraintEqualToAnchor:v28];
                *(void *)(v9 + 56) = v29;
                specialized Array._endMutation()();
                sub_100056FF4();
                Class isa = Array._bridgeToObjectiveC()().super.isa;
                swift_bridgeObjectRelease();
                [v8 addConstraints:isa];

                [*(id *)&v1[v2] didMoveToParentViewController:v1];
                return;
              }
LABEL_15:
              __break(1u);
              return;
            }
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
LABEL_13:
          __break(1u);
          goto LABEL_14;
        }
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
}

uint64_t sub_100056DB8(char a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for ChecklistViewController();
  [super viewDidAppear:a1 & 1];
  uint64_t v3 = *(void *)&v1[OBJC_IVAR___TPSChecklistViewController_viewModel];
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if (v5 == 1)
  {
    *(void *)(v3 + OBJC_IVAR___TPSChecklistViewModel_currentDisplayTips) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100056F00()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___TPSChecklistViewController_hostingController);
}

id sub_100056F40()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChecklistViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for ChecklistViewController()
{
  return self;
}

unint64_t sub_100056FF4()
{
  unint64_t result = qword_1000C8548;
  if (!qword_1000C8548)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000C8548);
  }
  return result;
}

uint64_t sub_100057034()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100057058()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_10005707C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ColorScheme();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.colorScheme.setter();
}

uint64_t sub_100057148()
{
  return EnvironmentValues.dismiss.getter();
}

unint64_t sub_10005716C()
{
  unint64_t result = qword_1000C9148;
  if (!qword_1000C9148)
  {
    type metadata accessor for ChecklistViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9148);
  }
  return result;
}

uint64_t sub_1000571C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChecklistView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_100057228(void *a1)
{
  uint64_t v3 = type metadata accessor for ChecklistView();
  uint64_t v4 = v3 - 8;
  uint64_t v5 = __chkstk_darwin(v3);
  id v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v18 - v8;
  *(void *)&v1[OBJC_IVAR___TPSChecklistViewController_viewModel] = a1;
  uint64_t *v7 = swift_getKeyPath();
  sub_10001C28C(&qword_1000C81D0);
  swift_storeEnumTagMultiPayload();
  id v10 = (uint64_t *)((char *)v7 + *(int *)(v4 + 28));
  *id v10 = swift_getKeyPath();
  sub_10001C28C(&qword_1000C9070);
  swift_storeEnumTagMultiPayload();
  id v11 = (uint64_t *)((char *)v7 + *(int *)(v4 + 32));
  type metadata accessor for ChecklistViewModel();
  sub_10005716C();
  id v12 = a1;
  id v13 = v1;
  uint64_t *v11 = ObservedObject.init(wrappedValue:)();
  v11[1] = v14;
  sub_1000571C4((uint64_t)v7, (uint64_t)v9);
  id v15 = objc_allocWithZone((Class)sub_10001C28C(&qword_1000C9408));
  *(void *)&v13[OBJC_IVAR___TPSChecklistViewController_hostingController] = UIHostingController.init(rootView:)();

  id v16 = (objc_class *)type metadata accessor for ChecklistViewController();
  v18.receiver = v13;
  v18.super_class = v16;
  return [super initWithNibName:0 bundle:0];
}

void sub_1000573D8(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = swift_getKeyPath();
  sub_10001C28C(&qword_1000C92C8);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (int *)type metadata accessor for CollectionListItemView();
  id v7 = (uint64_t *)((char *)a3 + v6[5]);
  uint64_t *v7 = swift_getKeyPath();
  sub_10001C28C(&qword_1000C81D0);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = (uint64_t *)((char *)a3 + v6[6]);
  type metadata accessor for CollectionListViewModel();
  sub_10001715C(&qword_1000C8550, (void (*)(uint64_t))type metadata accessor for CollectionListViewModel);
  id v9 = a1;
  *uint64_t v8 = ObservedObject.init(wrappedValue:)();
  v8[1] = v10;
  *(uint64_t *)((char *)a3 + v6[8]) = (uint64_t)a2;
  id v11 = a2;
  id v12 = [v11 identifier];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  id v16 = [v11 title];
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;
  }
  else
  {

    uint64_t v18 = 0;
    unint64_t v20 = 0xE000000000000000;
  }

  id v21 = (uint64_t *)((char *)a3 + v6[7]);
  uint64_t *v21 = v13;
  v21[1] = v15;
  void v21[2] = v18;
  v21[3] = v20;
}

uint64_t sub_100057580()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10001C28C(&qword_1000C8710);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v7 = (char *)&v18 - v6;
  uint64_t v8 = sub_10001C28C(&qword_1000C9600);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TipsContentModel();
  id v11 = (void *)static TipsContentModel.shared()();
  id v12 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                              + *(int *)(type metadata accessor for CollectionListItemView()
                                                                       + 32)), "tileAssets"));
  uint64_t v13 = type metadata accessor for ColorScheme();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
  uint64_t v14 = (void *)dispatch thunk of TipsContentModel.assetConfiguration(for:assets:updatedColorScheme:)();

  sub_1000143B4((uint64_t)v10, &qword_1000C9600);
  dispatch thunk of TipsContentModel.assetURL(for:type:)();
  if (v14)
  {
    id v15 = [v14 cacheIdentifierForType:0];
    if (v15)
    {
      id v16 = v15;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
  }
  sub_100016FEC((uint64_t)v7, (uint64_t)v5, &qword_1000C8710);
  RemoteImageView.init(identifier:url:isLoaded:placeholder:)();

  return sub_1000143B4((uint64_t)v7, &qword_1000C8710);
}

uint64_t sub_1000577E8@<X0>(uint64_t *a1@<X8>)
{
  id v2 = [self secondarySystemBackgroundColor];
  uint64_t result = Color.init(_:)();
  *a1 = result;
  return result;
}

uint64_t sub_100057830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v127 = a2;
  uint64_t v3 = sub_10001C28C(&qword_1000C94F0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v136 = (uint64_t)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  long long v128 = (uint64_t *)((char *)&v117 - v6);
  uint64_t v7 = sub_10001C28C(&qword_1000C94F8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10001C28C(&qword_1000C9500);
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10001C28C(&qword_1000C9508);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  id v16 = (char *)&v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10001C28C(&qword_1000C9510);
  uint64_t v18 = v17 - 8;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v131 = (uint64_t)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  id v23 = (char *)&v117 - v22;
  __chkstk_darwin(v21);
  uint64_t v135 = (uint64_t)&v117 - v24;
  uint64_t v25 = sub_10001C28C(&qword_1000C9518);
  __chkstk_darwin(v25 - 8);
  id v27 = (char *)&v117 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100058180(a1);
  uint64_t v130 = a1;
  long long v126 = v27;
  sub_1000584E8(a1, (uint64_t)v27, (uint64_t)v9);
  sub_100017050(&qword_1000C9520, &qword_1000C94F8, (void (*)(void))sub_10001D2AC);
  View.accessibilityHidden(_:)();
  sub_1000143B4((uint64_t)v9, &qword_1000C94F8);
  char v28 = static Edge.Set.leading.getter();
  uint64_t v134 = type metadata accessor for CollectionListItemView();
  uint64_t v29 = a1 + *(int *)(v134 + 24);
  BOOL v30 = *(void **)(v29 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v31 = v30;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  EdgeInsets.init(_all:)();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  sub_100016FEC((uint64_t)v12, (uint64_t)v16, &qword_1000C9500);
  id v40 = &v16[*(int *)(v14 + 44)];
  *id v40 = v28;
  *((void *)v40 + 1) = v33;
  *((void *)v40 + 2) = v35;
  *((void *)v40 + 3) = v37;
  *((void *)v40 + 4) = v39;
  v40[40] = 0;
  sub_1000143B4((uint64_t)v12, &qword_1000C9500);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_100016FEC((uint64_t)v16, (uint64_t)v23, &qword_1000C9508);
  NSString v41 = &v23[*(int *)(v18 + 44)];
  long long v42 = v140;
  *(_OWORD *)NSString v41 = v139;
  *((_OWORD *)v41 + 1) = v42;
  *((_OWORD *)v41 + 2) = v141;
  sub_1000143B4((uint64_t)v16, &qword_1000C9508);
  sub_100017278((uint64_t)v23, v135, &qword_1000C9510);
  uint64_t v125 = v29;
  id v43 = *(void **)(v29 + 8);
  uint64_t v44 = *(int *)(v134 + 32);
  uint64_t v45 = *(void *)(v130 + v44);
  uint64_t v52 = (uint64_t)[v43 titleFor:v45];
  uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v48 = v47;

  uint64_t v137 = v46;
  uint64_t v138 = v48;
  sub_100016F88();
  uint64_t v49 = Text.init<A>(_:)();
  uint64_t v133 = v50;
  uint64_t v134 = v49;
  LODWORD(v52) = v51;
  uint64_t v129 = v53;
  int v124 = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  unsigned int v62 = [v43 shouldDisplayBadgeFor:v45];
  uint64_t v63 = 0;
  uint64_t v64 = 0;
  uint64_t v65 = 0;
  uint64_t v132 = 0;
  uint64_t v66 = 0;
  uint64_t v67 = 0;
  uint64_t v68 = 0;
  uint64_t v69 = 0;
  uint64_t v70 = 0;
  if (v62)
  {
    id v71 = [v43 tipCountFor:v45];
    LODWORD(v123) = v52;
    id v72 = v71;
    uint64_t v73 = self;
    id v74 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v72];
    id v75 = [v73 localizedStringFromNumber:v74 numberStyle:0];

    uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v78 = v77;

    uint64_t v137 = v76;
    uint64_t v138 = v78;
    uint64_t v52 = Text.init<A>(_:)();
    uint64_t v80 = v79;
    char v82 = v81 & 1;
    static Color.secondary.getter();
    uint64_t v63 = Text.foregroundColor(_:)();
    uint64_t v64 = v83;
    char v85 = v84;
    uint64_t v132 = v86;
    swift_release();
    uint64_t v65 = v85 & 1;
    uint64_t v87 = v52;
    LOBYTE(v52) = v123;
    sub_100016FDC(v87, v80, v82);
    swift_bridgeObjectRelease();
    LOBYTE(v80) = static Edge.Set.trailing.getter();
    EdgeInsets.init(_all:)();
    uint64_t v67 = v88;
    uint64_t v68 = v89;
    uint64_t v69 = v90;
    uint64_t v70 = v91;
    uint64_t v66 = v80;
  }
  uint64_t v121 = v68;
  uint64_t v122 = v69;
  uint64_t v123 = v70;
  int v92 = v52 & 1;
  uint64_t v93 = v67;
  uint64_t v94 = v66;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v95 = v64;
  id v96 = v43;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  int v97 = v137;
  int v98 = [*(id *)(v125 + 8) shouldDisplayCheckmarkFor:*(void *)(v130 + v44)];
  uint64_t v99 = static VerticalAlignment.center.getter();
  uint64_t v100 = v65;
  uint64_t v117 = v65;
  uint64_t v101 = (uint64_t)v128;
  *long long v128 = v99;
  *(void *)(v101 + 8) = 0;
  *(unsigned char *)(v101 + 16) = 1;
  uint64_t v102 = sub_10001C28C(&qword_1000C9590);
  sub_100017678(v98, v97, v101 + *(int *)(v102 + 44));
  uint64_t v103 = v131;
  sub_100016FEC(v135, v131, &qword_1000C9510);
  sub_100016FEC(v101, v136, &qword_1000C94F0);
  uint64_t v104 = v103;
  uint64_t v105 = v127;
  sub_100016FEC(v104, v127, &qword_1000C9510);
  id v106 = (int *)sub_10001C28C(&qword_1000C9598);
  uint64_t v107 = v105 + v106[12];
  uint64_t v108 = v133;
  *(void *)uint64_t v107 = v134;
  *(void *)(v107 + 8) = v108;
  int v120 = v92;
  *(unsigned char *)(v107 + 16) = v92;
  *(void *)(v107 + 24) = v129;
  *(unsigned char *)(v107 + 32) = v124;
  *(void *)(v107 + 40) = v55;
  *(void *)(v107 + 48) = v57;
  *(void *)(v107 + 56) = v59;
  *(void *)(v107 + 64) = v61;
  *(unsigned char *)(v107 + 72) = 0;
  uint64_t v109 = v105 + v106[16];
  *(void *)uint64_t v109 = 0;
  *(unsigned char *)(v109 + 8) = 1;
  uint64_t v110 = v105 + v106[20];
  uint64_t v118 = v63;
  *(void *)uint64_t v110 = v63;
  *(void *)(v110 + 8) = v95;
  uint64_t v119 = v95;
  uint64_t v111 = v132;
  *(void *)(v110 + 16) = v100;
  *(void *)(v110 + 24) = v111;
  *(void *)(v110 + 32) = v94;
  *(void *)(v110 + 40) = v93;
  uint64_t v112 = v122;
  *(void *)(v110 + 48) = v121;
  *(void *)(v110 + 56) = v112;
  *(void *)(v110 + 64) = v123;
  *(unsigned char *)(v110 + 72) = 0;
  sub_100016FEC(v136, v105 + v106[24], &qword_1000C94F0);
  sub_100037CB8(v134, v133, v92);
  swift_bridgeObjectRetain();
  uint64_t v113 = v63;
  char v114 = v117;
  uint64_t v115 = v132;
  sub_1000172DC(v113, v95, v117, v132);
  sub_1000143B4(v101, &qword_1000C94F0);
  sub_1000143B4(v135, &qword_1000C9510);
  sub_1000143B4((uint64_t)v126, &qword_1000C9518);
  sub_1000143B4(v136, &qword_1000C94F0);
  sub_100017320(v118, v119, v114, v115);
  sub_100016FDC(v134, v133, v120);
  swift_bridgeObjectRelease();
  return sub_1000143B4(v131, &qword_1000C9510);
}

uint64_t sub_100058180(uint64_t a1)
{
  uint64_t v2 = sub_10001C28C(&qword_1000C8318);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001C28C(&qword_1000C95F8);
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_10001C28C(&qword_1000C9588);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [*(id *)(a1 + *(int *)(type metadata accessor for CollectionListItemView() + 32)) collectionAssets];
  if (v12
    && (uint64_t v13 = v12, v14 = [v12 symbolId], v13, v14))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v15 = Image.init(_internalSystemName:)();
    uint64_t v16 = type metadata accessor for Font.Design();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v4, 1, 1, v16);
    uint64_t v17 = static Font.system(size:weight:design:)();
    sub_1000143B4((uint64_t)v4, &qword_1000C8318);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t *v7 = v15;
    v7[1] = KeyPath;
    v7[2] = v17;
    swift_storeEnumTagMultiPayload();
    sub_10001C28C(&qword_1000C9578);
    sub_100018228();
    sub_100009170(&qword_1000C9580, &qword_1000C9588);
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    sub_100057580();
    (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 16))(v7, v11, v8);
    swift_storeEnumTagMultiPayload();
    sub_10001C28C(&qword_1000C9578);
    sub_100018228();
    sub_100009170(&qword_1000C9580, &qword_1000C9588);
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_1000584E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v26 = a3;
  uint64_t v27 = sub_10001C28C(&qword_1000C9550);
  __chkstk_darwin(v27);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10001C28C(&qword_1000C95F0);
  __chkstk_darwin(v25);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001C28C(&qword_1000C9540);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CollectionListItemView();
  uint64_t v13 = *(void **)(a1 + *(int *)(v12 + 24) + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v14 = v13;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v28 == 1)
  {
    id v15 = [*(id *)(a1 + *(int *)(v12 + 32)) collectionAssets];
    id v16 = [v15 gradient];

    __chkstk_darwin(v17);
    *(&v23 - 2) = v24;
    static UnitPoint.topTrailing.getter();
    static UnitPoint.bottomLeading.getter();
    sub_10001C28C(&qword_1000C9518);
    sub_100017050(&qword_1000C9558, &qword_1000C9518, (void (*)(void))sub_10001D20C);
    TipGradientView.init(_:startPoint:endPoint:gradientView:)();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, v11, v8);
    swift_storeEnumTagMultiPayload();
    sub_100009170(&qword_1000C9538, &qword_1000C9540);
    sub_100018164();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    id v19 = [self systemBlueColor];
    uint64_t v20 = Color.init(_:)();
    uint64_t KeyPath = swift_getKeyPath();
    sub_100016FEC(v24, (uint64_t)v5, &qword_1000C9518);
    uint64_t v22 = (uint64_t *)&v5[*(int *)(v27 + 36)];
    *uint64_t v22 = KeyPath;
    v22[1] = v20;
    sub_100016FEC((uint64_t)v5, (uint64_t)v7, &qword_1000C9550);
    swift_storeEnumTagMultiPayload();
    sub_100009170(&qword_1000C9538, &qword_1000C9540);
    sub_100018164();
    _ConditionalContent<>.init(storage:)();
    return sub_1000143B4((uint64_t)v5, &qword_1000C9550);
  }
}

uint64_t *sub_10005894C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10001C28C(&qword_1000C92C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    id v15 = (uint64_t *)((char *)a1 + v13);
    id v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v18 = *v16;
    uint64_t v17 = (void *)v16[1];
    void *v15 = v18;
    v15[1] = v17;
    id v19 = (uint64_t *)((char *)a1 + v14);
    uint64_t v20 = (uint64_t *)((char *)a2 + v14);
    uint64_t v21 = v20[1];
    *id v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = v20[3];
    v19[2] = v20[2];
    v19[3] = v22;
    uint64_t v23 = a3[8];
    uint64_t v24 = *(void **)((char *)a2 + v23);
    *(uint64_t *)((char *)a1 + v23) = (uint64_t)v24;
    id v25 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v26 = v24;
  }
  return a1;
}

char *sub_100058B4C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C92C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  uint64_t v14 = &a1[v13];
  id v15 = &a2[v13];
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  return a1;
}

char *sub_100058CE4(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C92C8);
    uint64_t v6 = sub_10001C28C(&qword_1000C92C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_1000143B4((uint64_t)&a1[v8], &qword_1000C81D0);
    uint64_t v11 = sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ColorScheme();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  id v15 = &a2[v13];
  uint64_t v17 = *(void *)v15;
  uint64_t v16 = *((void *)v15 + 1);
  uint64_t v18 = (void *)*((void *)v14 + 1);
  *(void *)uint64_t v14 = v17;
  *((void *)v14 + 1) = v16;

  uint64_t v19 = a3[7];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = *(void *)&a2[v19 + 8];
  *(void *)uint64_t v20 = *(void *)&a2[v19];
  *((void *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *((void *)v21 + 3);
  *((void *)v20 + 2) = *((void *)v21 + 2);
  *((void *)v20 + 3) = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[8];
  id v25 = *(void **)&a1[v24];
  *(void *)&a1[v24] = *(void *)&a2[v24];

  return a1;
}

uint64_t sub_100058ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100058EEC);
}

uint64_t sub_100058EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C9410);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_10001C28C(&qword_1000C8658);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_10005900C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100059020);
}

uint64_t sub_100059020(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_10001C28C(&qword_1000C9410);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_10001C28C(&qword_1000C8658);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

unint64_t sub_10005913C()
{
  unint64_t result = qword_1000C94E8;
  if (!qword_1000C94E8)
  {
    sub_10001AD28(&qword_1000C94D0);
    sub_10001AD28(&qword_1000C94C0);
    sub_100009170(&qword_1000C94E0, &qword_1000C94C0);
    swift_getOpaqueTypeConformance2();
    sub_10001715C(&qword_1000C9288, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C94E8);
  }
  return result;
}

uint64_t sub_100059260()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_100059284()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_1000592A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Image.Scale();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.imageScale.setter();
}

uint64_t sub_100059374@<X0>(uint64_t a1@<X8>)
{
  return sub_100016FEC(*(void *)(v1 + 16), a1, &qword_1000C9518);
}

uint64_t sub_10005939C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000593F8(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_100059478()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000594EC(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  return static Published.subscript.setter();
}

uint64_t sub_10005955C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000595DC(uint64_t a1, void **a2)
{
  id v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_10005964C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

Class sub_1000596C0(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  type metadata accessor for UserGuideTopic();
  v3.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v3.super.isa;
}

uint64_t sub_100059774()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000597E8(void *a1)
{
  type metadata accessor for UserGuideTopic();
  static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  return static Published.subscript.setter();
}

uint64_t sub_100059870@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000598F0(uint64_t a1, void **a2)
{
  id v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

id sub_100059968(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v3 = (void *)dispatch thunk of SearchResultsModel.searchQuery.getter();

  swift_release();

  return v3;
}

uint64_t sub_100059A0C(void *a1, uint64_t a2, void *a3)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v5 = a3;
  id v6 = a1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  dispatch thunk of SearchResultsModel.searchQuery.setter();

  return swift_release();
}

id sub_100059AAC(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  dispatch thunk of SearchResultsModel.searchTerm.getter();

  swift_release();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_100059B6C(void *a1, uint64_t a2)
{
  return sub_100059BB4(a1, a2, (uint64_t (*)(uint64_t))&dispatch thunk of SearchResultsModel.hasTopics.getter);
}

uint64_t sub_100059B84(void *a1, uint64_t a2)
{
  return sub_100059BB4(a1, a2, (uint64_t (*)(uint64_t))&dispatch thunk of SearchResultsModel.hasSearchResults.getter);
}

uint64_t sub_100059B9C(void *a1, uint64_t a2)
{
  return sub_100059BB4(a1, a2, (uint64_t (*)(uint64_t))&dispatch thunk of SearchResultsModel.hasStartedSearch.getter);
}

uint64_t sub_100059BB4(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v5 = a1;
  static Published.subscript.getter();
  swift_release();
  uint64_t v6 = swift_release();
  LOBYTE(a3) = a3(v6);

  swift_release();
  return a3 & 1;
}

uint64_t sub_100059C58(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v3 = dispatch thunk of SearchResultsModel.hasStartedSearch.getter();

  swift_release();
  return v3 & 1;
}

id sub_100059CEC(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v3 = (void *)dispatch thunk of SearchResultsModel.topicActionHandler.getter();
  uint64_t v5 = v4;

  swift_release();
  if (v3)
  {
    v7[4] = v3;
    v7[5] = v5;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_1000428D8;
    v7[3] = &unk_1000B8B88;
    char v3 = _Block_copy(v7);
    swift_release();
  }

  return v3;
}

uint64_t sub_100059E00(void *a1, int a2, void *aBlock)
{
  uint64_t v4 = _Block_copy(aBlock);
  if (v4) {
    *(void *)(swift_allocObject() + 16) = v4;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v5 = a1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  dispatch thunk of SearchResultsModel.topicActionHandler.setter();

  return swift_release();
}

id sub_100059EE8(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v3 = (void *)dispatch thunk of SearchResultsModel.searchResultCollectionResolver.getter();
  uint64_t v5 = v4;

  swift_release();
  if (v3)
  {
    v7[4] = v3;
    v7[5] = v5;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_100059FFC;
    v7[3] = &unk_1000B8B38;
    char v3 = _Block_copy(v7);
    swift_release();
  }

  return v3;
}

uint64_t sub_10005A000(void *a1, int a2, void *aBlock)
{
  uint64_t v4 = _Block_copy(aBlock);
  if (v4) {
    *(void *)(swift_allocObject() + 16) = v4;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v5 = a1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  dispatch thunk of SearchResultsModel.searchResultCollectionResolver.setter();

  return swift_release();
}

id sub_10005A0E8(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v3 = (void *)dispatch thunk of SearchResultsModel.searchResultUserGuideResolver.getter();
  uint64_t v5 = v4;

  swift_release();
  if (v3)
  {
    v7[4] = v3;
    v7[5] = v5;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_100059FFC;
    v7[3] = &unk_1000B8AE8;
    char v3 = _Block_copy(v7);
    swift_release();
  }

  return v3;
}

uint64_t sub_10005A1FC(void *a1, int a2, void *aBlock)
{
  uint64_t v4 = _Block_copy(aBlock);
  if (v4) {
    *(void *)(swift_allocObject() + 16) = v4;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v5 = a1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  dispatch thunk of SearchResultsModel.searchResultUserGuideResolver.setter();

  return swift_release();
}

id sub_10005A2E4(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v3 = (void *)dispatch thunk of SearchResultsModel.searchResultEligibilityFilter.getter();
  uint64_t v5 = v4;

  swift_release();
  if (v3)
  {
    v7[4] = v3;
    v7[5] = v5;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_100059FFC;
    v7[3] = &unk_1000B8A98;
    char v3 = _Block_copy(v7);
    swift_release();
  }

  return v3;
}

id sub_10005A3F8(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;
  swift_retain();
  uint64_t v5 = (void *)v1(v2, v4);
  swift_release();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_10005A470(void *a1, int a2, void *aBlock)
{
  uint64_t v4 = _Block_copy(aBlock);
  if (v4) {
    *(void *)(swift_allocObject() + 16) = v4;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v5 = a1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  dispatch thunk of SearchResultsModel.searchResultEligibilityFilter.setter();

  return swift_release();
}

id sub_10005A558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = (id)(*(uint64_t (**)(uint64_t, NSString))(a3 + 16))(a3, v4);

  return v5;
}

id sub_10005A5A8(void *a1, uint64_t a2)
{
  return sub_10005A6D0(a1, a2, (uint64_t (*)(uint64_t))&dispatch thunk of SearchResultsModel.searchResultScrollHandler.getter, (uint64_t)&unk_1000B8A48);
}

uint64_t sub_10005A5C8(void *a1, int a2, void *aBlock)
{
  NSString v4 = _Block_copy(aBlock);
  if (v4) {
    *(void *)(swift_allocObject() + 16) = v4;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v5 = a1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  dispatch thunk of SearchResultsModel.searchResultScrollHandler.setter();

  return swift_release();
}

id sub_10005A6B0(void *a1, uint64_t a2)
{
  return sub_10005A6D0(a1, a2, (uint64_t (*)(uint64_t))&dispatch thunk of SearchResultsModel.searchResultsUpdated.getter, (uint64_t)&unk_1000B89F8);
}

id sub_10005A6D0(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v7 = a1;
  static Published.subscript.getter();
  swift_release();
  uint64_t v8 = swift_release();
  uint64_t v9 = a3(v8);
  uint64_t v11 = v10;

  swift_release();
  if (v9)
  {
    v14[4] = v9;
    v14[5] = v11;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    v14[2] = sub_10000374C;
    v14[3] = a4;
    uint64_t v12 = _Block_copy(v14);
    swift_release();
  }
  else
  {
    uint64_t v12 = 0;
  }

  return v12;
}

uint64_t sub_10005A7F8(void *a1, int a2, void *aBlock)
{
  NSString v4 = _Block_copy(aBlock);
  if (v4) {
    *(void *)(swift_allocObject() + 16) = v4;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v5 = a1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  dispatch thunk of SearchResultsModel.searchResultsUpdated.setter();

  return swift_release();
}

uint64_t sub_10005A8E0(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v3 = dispatch thunk of SearchResultsModel.queryCount.getter();

  swift_release();
  return v3;
}

uint64_t sub_10005A974(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  dispatch thunk of SearchResultsModel.queryCount.setter();

  return swift_release();
}

uint64_t sub_10005AA10(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  dispatch thunk of SearchResultsModel.reset()();

  return swift_release();
}

uint64_t sub_10005AA9C()
{
  uint64_t v0 = sub_10001C28C(&qword_1000C8500);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001C28C(&qword_1000C96A0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v11 = v4;
  uint64_t v12 = v5;
  __chkstk_darwin(v4);
  id v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  dispatch thunk of SearchResultsModel.searchResultsTipsUpdated.setter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  dispatch thunk of SearchResultsModel.searchResultsTopicsUpdated.setter();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_10001C28C(&qword_1000C8518);
  Published.projectedValue.getter();
  swift_endAccess();
  sub_100009170(&qword_1000C8520, &qword_1000C8500);
  Publisher.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100009170(&qword_1000C96A8, &qword_1000C96A0);
  uint64_t v8 = v11;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v8);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

void sub_10005AE9C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    swift_bridgeObjectRetain();
    dispatch thunk of TipNavigationViewModel.tips.setter();
  }
}

uint64_t sub_10005AEFC()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    return static Published.subscript.setter();
  }
  return result;
}

unsigned char *sub_10005AF94@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 1) == 0;
  return result;
}

uint64_t sub_10005AFA8()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    return static Published.subscript.setter();
  }
  return result;
}

id sub_10005B034(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_10005B064(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of SearchResultsModel.tipForIdentifier(_:));
}

id sub_10005B04C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_10005B064(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of SearchResultsModel.userGuideForIdentifier(_:));
}

id sub_10005B064(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  swift_getKeyPath();
  swift_getKeyPath();
  id v9 = a1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v10 = (void *)a4(v6, v8);

  swift_bridgeObjectRelease();
  swift_release();

  return v10;
}

uint64_t sub_10005B140()
{
  uint64_t v1 = v0 + qword_1000C9608;
  uint64_t v2 = sub_10001C28C(&qword_1000C8518);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + qword_1000C9610;
  uint64_t v4 = sub_10001C28C(&qword_1000C9698);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + qword_1000C9618;
  uint64_t v6 = sub_10001C28C(&qword_1000C9690);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_bridgeObjectRelease();
}

id sub_10005B250()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchResultsViewModel();
  return [super dealloc];
}

void sub_10005B288()
{
  if (!qword_1000C9660)
  {
    type metadata accessor for SearchResultsModel();
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000C9660);
    }
  }
}

uint64_t sub_10005B2E0()
{
  return type metadata accessor for SearchResultsViewModel();
}

uint64_t sub_10005B2E8(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  objc_super v2 = (uint64_t (*)(uint64_t, uint64_t))dispatch thunk of SearchResultsModel.searchResultCollectionResolver.getter();
  swift_release();
  if (!v2) {
    return 0;
  }
  id v3 = [a1 collectionIdentifiers];
  if (!v3) {
    goto LABEL_8;
  }
  uint64_t v4 = v3;
  uint64_t v5 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!v5[2])
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v6 = v5[4];
  uint64_t v7 = v5[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)v2(v6, v7);
  swift_bridgeObjectRelease();
  if (!v8)
  {
LABEL_8:
    sub_100005470((uint64_t)v2);
    return 0;
  }
  id v9 = [v8 title];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100005470((uint64_t)v2);
  }
  else
  {
    sub_100005470((uint64_t)v2);

    return 0;
  }
  return v11;
}

id sub_10005B478(void *a1, uint64_t a2, void *a3)
{
  return sub_10005B5A8(a1, a2, a3, (void (*)(id))sub_10005B2E8);
}

uint64_t sub_10005B490()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v0 = (uint64_t (*)(uint64_t))dispatch thunk of SearchResultsModel.searchResultUserGuideResolver.getter();
  swift_release();
  if (!v0) {
    return 0;
  }
  uint64_t v1 = dispatch thunk of UserGuideTopic.productId.getter();
  objc_super v2 = (void *)v0(v1);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    sub_100005470((uint64_t)v0);
    return 0;
  }
  uint64_t v3 = UserGuide.displayName.getter();

  sub_100005470((uint64_t)v0);
  return v3;
}

id sub_10005B590(void *a1, uint64_t a2, void *a3)
{
  return sub_10005B5A8(a1, a2, a3, (void (*)(id))sub_10005B490);
}

id sub_10005B5A8(void *a1, uint64_t a2, void *a3, void (*a4)(id))
{
  id v6 = a3;
  id v7 = a1;
  a4(v6);
  uint64_t v9 = v8;

  if (v9)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }

  return v10;
}

uint64_t sub_10005B644()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10005B67C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

id sub_10005B68C(uint64_t a1, uint64_t a2)
{
  return sub_10005A558(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_10005B6B8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10005B6F0()
{
}

uint64_t sub_10005B6F8()
{
  return sub_10005AEFC();
}

uint64_t sub_10005B700()
{
  return sub_10005AFA8();
}

uint64_t sub_10005B75C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
}

void *sub_10005B774(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10005D7AC(0, v1, 0);
    uint64_t v3 = a1 + 32;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_10001C28C(&qword_1000C8958);
      sub_10001C28C(&qword_1000C8950);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_10005D7AC(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v5 = _swiftEmptyArrayStorage[2];
      unint64_t v4 = _swiftEmptyArrayStorage[3];
      if (v5 >= v4 >> 1) {
        sub_10005D7AC((void *)(v4 > 1), v5 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v5 + 1;
      _swiftEmptyArrayStorage[v5 + 4] = v7;
      v3 += 8;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_10005B8B8(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  sub_10005D7AC(0, v2, 0);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 8)
    {
      swift_bridgeObjectRetain();
      sub_10001C28C(&qword_1000C8960);
      sub_10001C28C(&qword_1000C8950);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10005D7AC(0, _swiftEmptyArrayStorage[2] + 1, 1);
        uint64_t v3 = _swiftEmptyArrayStorage;
      }
      unint64_t v6 = _swiftEmptyArrayStorage[2];
      unint64_t v5 = _swiftEmptyArrayStorage[3];
      if (v6 >= v5 >> 1)
      {
        sub_10005D7AC((void *)(v5 > 1), v6 + 1, 1);
        uint64_t v3 = _swiftEmptyArrayStorage;
      }
      _swiftEmptyArrayStorage[2] = v6 + 1;
      _swiftEmptyArrayStorage[v6 + 4] = v8;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

double sub_10005BA08@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

void sub_10005BA88(uint64_t a1, void **a2)
{
  int64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  v2;
  static Published.subscript.setter();
  sub_10005C5F8();
}

uint64_t sub_10005BB14(uint64_t result)
{
  int64_t v2 = *(void (**)(uint64_t))(v1 + qword_1000CD1C8);
  if (v2)
  {
    uint64_t v3 = result;
    swift_retain();
    v2(v3);
    return sub_100005470((uint64_t)v2);
  }
  return result;
}

uint64_t sub_10005BB90()
{
  return sub_10003C740();
}

uint64_t sub_10005BBA4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10005BC18()
{
  return sub_10003C740();
}

uint64_t sub_10005BC2C()
{
  return sub_10003C740();
}

double sub_10005BC40()
{
  return sub_10005BC68();
}

double sub_10005BC54()
{
  return sub_10005BC68();
}

double sub_10005BC68()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10005BCD4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10005BD48()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

BOOL sub_10005BDC0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v0 = [v6 identifier];

  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v3 = v2;

  swift_bridgeObjectRelease();
  uint64_t v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v4 = v1 & 0xFFFFFFFFFFFFLL;
  }
  return v4 != 0;
}

uint64_t sub_10005BE88(void *a1)
{
  return sub_100015AE0(a1);
}

uint64_t sub_10005BE9C(void *a1)
{
  return sub_100015DA0(a1);
}

uint64_t sub_10005BEB0@<X0>(unsigned char *a1@<X8>)
{
  return sub_100041504(a1);
}

uint64_t sub_10005BEC4(uint64_t a1, void **a2)
{
  return sub_10005C1F8(a1, a2);
}

id sub_10005BED8(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.getter();

  swift_release();
  swift_release();

  return v4;
}

void sub_10005BF68(void *a1, uint64_t a2, void *a3)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v5 = a3;
  id v6 = a1;
  id v7 = v5;
  static Published.subscript.setter();
  sub_10005BFFC();
}

uint64_t sub_10005BFFC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v1 = [v5 identifier];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v2 = [v5 title];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v0;
  return static Published.subscript.setter();
}

uint64_t sub_10005C180(void *a1)
{
  return sub_100015AE0(a1);
}

uint64_t sub_10005C194@<X0>(unsigned char *a1@<X8>)
{
  return sub_100041504(a1);
}

uint64_t sub_10005C1A8(uint64_t a1, void **a2)
{
  return sub_10005C1F8(a1, a2);
}

uint64_t sub_10005C1BC(void *a1)
{
  return sub_100015AE0(a1);
}

uint64_t sub_10005C1D0@<X0>(unsigned char *a1@<X8>)
{
  return sub_100041504(a1);
}

uint64_t sub_10005C1E4(uint64_t a1, void **a2)
{
  return sub_10005C1F8(a1, a2);
}

uint64_t sub_10005C1F8(uint64_t a1, void **a2)
{
  id v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

double sub_10005C264(void *a1)
{
  return sub_10005C2A0(a1);
}

uint64_t sub_10005C278(void *a1)
{
  return sub_10005C330(a1);
}

double sub_10005C28C(void *a1)
{
  return sub_10005C2A0(a1);
}

double sub_10005C2A0(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_10005C31C(void *a1)
{
  return sub_10005C330(a1);
}

uint64_t sub_10005C330(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  return static Published.subscript.setter();
}

double sub_10005C3A4@<D0>(double *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_10005C424(uint64_t a1, void **a2)
{
  id v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

id sub_10005C49C(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = a1;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v5)
  {
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v3 = 0;
  }

  return v3;
}

void sub_10005C554(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3) {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = a1;
  static Published.subscript.setter();
  sub_10005C5F8();
}

void sub_10005C5F8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v3)
  {
    id v0 = [(id)type metadata accessor for TPSUIAppController() sharedInstance];
    NSString v1 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v2 = [v0 tipForIdentifier:v1];

    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of TipNavigationViewModel.updateSelectedTip(_:forceUpdate:)();
  }
}

double sub_10005C728@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10005C7B0(uint64_t a1, void **a2)
{
  id v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_10005C848(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + qword_1000CD1A0);
}

uint64_t sub_10005C858(uint64_t result, uint64_t a2, char a3)
{
  *(unsigned char *)(result + qword_1000CD1A0) = a3;
  return result;
}

uint64_t sub_10005C868(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + qword_1000CD1A8);
}

uint64_t sub_10005C878(uint64_t result, uint64_t a2, char a3)
{
  *(unsigned char *)(result + qword_1000CD1A8) = a3;
  return result;
}

uint64_t sub_10005C888(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + qword_1000CD1B0);
}

void sub_10005C898(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  a1[qword_1000CD1B0] = a3;
  id v3 = *(void (**)(uint64_t))&a1[qword_1000CD1B8];
  if (v3)
  {
    uint64_t v5 = a1;
    sub_1000397EC((uint64_t)v3);
    v3(a3);
    sub_100005470((uint64_t)v3);
  }
}

id sub_10005C940(uint64_t a1)
{
  if (*(void *)(a1 + qword_1000CD1B8))
  {
    uint64_t v1 = *(void *)(a1 + qword_1000CD1B8 + 8);
    v4[4] = *(void *)(a1 + qword_1000CD1B8);
    void v4[5] = v1;
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 1107296256;
    v4[2] = sub_10005CA08;
    v4[3] = &unk_1000B8C70;
    id v2 = _Block_copy(v4);
    swift_retain();
    swift_release();
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

uint64_t sub_10005CA08(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_10005CA5C(uint64_t a1, int a2, void *aBlock)
{
  uint64_t v4 = (uint64_t)_Block_copy(aBlock);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v5;
    id v6 = sub_10005DA90;
  }
  else
  {
    id v6 = 0;
  }
  id v7 = (uint64_t (**)(char))(a1 + qword_1000CD1B8);
  uint64_t v8 = *(void *)(a1 + qword_1000CD1B8);
  char *v7 = v6;
  v7[1] = (uint64_t (*)(char))v4;

  return sub_100005470(v8);
}

double sub_10005CAE4(uint64_t a1)
{
  return *(double *)(a1 + qword_1000CD1C0);
}

void sub_10005CAF8(char *a1, double a2, double a3)
{
  id v3 = (double *)&a1[qword_1000CD1C0];
  *id v3 = a2;
  v3[1] = a3;
  uint64_t v4 = a1;
  sub_10005CB50();
}

uint64_t sub_10005CB50()
{
  uint64_t v1 = v0;
  int v2 = v0[qword_1000CD1B0];
  if ((((*(double *)&v0[qword_1000CD1C0 + 8] >= -5.0) ^ v2) & 1) == 0)
  {
    uint64_t v3 = v2 ^ 1u;
    v1[qword_1000CD1B0] = v2 ^ 1;
    uint64_t v4 = *(void (**)(uint64_t))&v1[qword_1000CD1B8];
    if (v4)
    {
      swift_retain();
      v4(v3);
      sub_100005470((uint64_t)v4);
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v5 = v1;
  return static Published.subscript.setter();
}

id sub_10005CC48(uint64_t a1)
{
  if (*(void *)(a1 + qword_1000CD1C8))
  {
    uint64_t v1 = *(void *)(a1 + qword_1000CD1C8 + 8);
    v4[4] = *(void *)(a1 + qword_1000CD1C8);
    void v4[5] = v1;
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 1107296256;
    v4[2] = sub_1000428D8;
    v4[3] = &unk_1000B8C20;
    int v2 = _Block_copy(v4);
    swift_retain();
    swift_release();
  }
  else
  {
    int v2 = 0;
  }

  return v2;
}

uint64_t sub_10005CD10(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + qword_1000CD1D0);
}

uint64_t sub_10005CD20(uint64_t result, uint64_t a2, char a3)
{
  *(unsigned char *)(result + qword_1000CD1D0) = a3;
  return result;
}

BOOL sub_10005CD30(void *a1)
{
  id v1 = a1;
  unint64_t v2 = dispatch thunk of TipNavigationViewModel.tips.getter();
  if (v2 >> 62) {
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }

  swift_bridgeObjectRelease();
  return v3 != 0;
}

BOOL sub_10005CDA0(void *a1)
{
  id v1 = a1;
  BOOL v2 = sub_10005BDC0();

  return v2;
}

void sub_10005CDD4(char *a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void (**)(id))&a1[qword_1000CD1C8];
  if (v3)
  {
    id v5 = a3;
    id v6 = a1;
    sub_1000397EC((uint64_t)v3);
    v3(v5);
    sub_100005470((uint64_t)v3);
  }
}

uint64_t sub_10005CE80()
{
  uint64_t v1 = v0 + qword_1000C96E0;
  uint64_t v2 = sub_10001C28C(&qword_1000C8518);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  uint64_t v4 = v0 + qword_1000C96E8;
  uint64_t v5 = sub_10001C28C(&qword_1000C9788);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  v3(v0 + qword_1000C96F0, v2);
  v3(v0 + qword_1000C96F8, v2);
  uint64_t v6 = v0 + qword_1000C9700;
  uint64_t v7 = sub_10001C28C(&qword_1000C9780);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v0 + qword_1000C9708, v7);
  uint64_t v9 = v0 + qword_1000C9710;
  uint64_t v10 = sub_10001C28C(&qword_1000C89A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v0 + qword_1000C9718;
  uint64_t v12 = sub_10001C28C(&qword_1000C8990);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  sub_100005470(*(void *)(v0 + qword_1000CD1B8));
  uint64_t v13 = *(void *)(v0 + qword_1000CD1C8);

  return sub_100005470(v13);
}

id sub_10005D0A4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TipListViewModel(0);
  return [super dealloc];
}

id sub_10005D0DC(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  id v6 = [v4 fullContent];
  if (v6 && (v7 = v6, id v8 = [v6 title], v7, v8))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
  }
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v9;
}

Class sub_10005D1B8(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_10005D8F0(v4);

  sub_10001C28C(&qword_1000C8950);
  v6.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v6.super.isa;
}

id sub_10005D23C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_10001C28C(&qword_1000C8710);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  id v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v21 - v9;
  id v11 = a3;
  id v12 = a1;
  id v13 = [v11 fullContentAssets];
  id v14 = [v13 baseURL];

  if (v14)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v15 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 0, 1, v15);
  }
  else
  {
    uint64_t v15 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
  }
  sub_10003F15C((uint64_t)v8, (uint64_t)v10);

  type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v18 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v15) != 1)
  {
    URL._bridgeToObjectiveC()(v17);
    uint64_t v18 = v19;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v15);
  }

  return v18;
}

id sub_10005D454()
{
  return 0;
}

uint64_t sub_10005D46C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C8710);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)&v35 - v10;
  id v12 = [a1 fullContentAssets];
  id v13 = [a1 language];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v14 = [a1 assetFileInfoManager];
  id v15 = objc_allocWithZone((Class)TPSAssetsConfiguration);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = [v15 initWithAssets:v12 language:v16 userInterfaceStyle:a2 assetFileInfoManager:v14];

  uint64_t v18 = self;
  id v19 = v17;
  id v20 = [v18 assetPathFromAssetConfiguration:v19 type:2];
  if (v20)
  {
    uint64_t v21 = v20;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    URL.init(string:)();
    swift_bridgeObjectRelease();
  }
  else
  {

    uint64_t v22 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 1, 1, v22);
  }
  id v23 = [v19 cacheIdentifierForType:2];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v26;
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v27 = 0;
  }
  type metadata accessor for TPSUIAppController();
  char v28 = (void *)static TPSUIAppController.shared.getter();
  id v29 = [v28 assetSizes];

  if (v29)
  {
    id v30 = [v29 thumbnail];

    [v30 heightToWidthRatioForViewMode:[self isPhoneUI] ^ 1];
    double v32 = v31;
  }
  else
  {
    double v32 = 1.0;
  }

  sub_10003F15C((uint64_t)v11, (uint64_t)v9);
  *a3 = v25;
  a3[1] = v27;
  uint64_t v33 = type metadata accessor for TipListViewModel.AssetConfiguration(0);
  uint64_t result = sub_10003F15C((uint64_t)v9, (uint64_t)a3 + *(int *)(v33 + 20));
  *(double *)((char *)a3 + *(int *)(v33 + 24)) = v32;
  return result;
}

void *sub_10005D7AC(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_10005D7CC(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_10005D7CC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10001C28C(&qword_1000C8968);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_10001C28C(&qword_1000C8950);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_10005D8F0(void *a1)
{
  id v2 = [a1 bodyContent];
  if (v2)
  {

    id v3 = [a1 bodyContent];
    if (!v3
      || (id v4 = v3,
          sub_10001C28C(&qword_1000C8960),
          uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(),
          v4,
          uint64_t v6 = (uint64_t)sub_10005B8B8(v5),
          swift_bridgeObjectRelease(),
          !v6))
    {
      sub_10001C28C(&qword_1000C8968);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_10008CF30;
      *(void *)(v6 + 32) = sub_10005E764((uint64_t)_swiftEmptyArrayStorage);
      swift_bridgeObjectRelease();
    }
    return (void *)v6;
  }
  else
  {
    uint64_t v8 = self;
    id v9 = [a1 bodyText];
    id v10 = [v8 textContentWithText:v9];

    sub_10001C28C(&qword_1000C8958);
    uint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v12 = sub_10005B774(v11);
    swift_bridgeObjectRelease();
    return v12;
  }
}

uint64_t sub_10005DA50()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10005DA90(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_10005DAB0@<X0>(unsigned char *a1@<X8>)
{
  return sub_100041504(a1);
}

uint64_t sub_10005DAD8(uint64_t a1, void **a2)
{
  return sub_10005C1F8(a1, a2);
}

uint64_t sub_10005DB08@<X0>(unsigned char *a1@<X8>)
{
  return sub_100041504(a1);
}

uint64_t sub_10005DB30(uint64_t a1, void **a2)
{
  return sub_10005C1F8(a1, a2);
}

uint64_t sub_10005DB58@<X0>(unsigned char *a1@<X8>)
{
  return sub_100041504(a1);
}

uint64_t sub_10005DB80(uint64_t a1, void **a2)
{
  return sub_10005C1F8(a1, a2);
}

uint64_t type metadata accessor for TipListViewModel.AssetConfiguration(uint64_t a1)
{
  return sub_10001BBC4(a1, (uint64_t *)&unk_1000C97F0);
}

uint64_t *sub_10005DBC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  id v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *id v4 = *a2;
    id v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    id v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(void *)(v11 - 8);
    id v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_10001C28C(&qword_1000C8710);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t sub_10005DD58(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_10005DE28(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  id v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_10001C28C(&qword_1000C8710);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_10005DF68(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_10001C28C(&qword_1000C8710);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_10005E114(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10001C28C(&qword_1000C8710);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_10005E244(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_10001C28C(&qword_1000C8710);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10005E3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005E3F4);
}

uint64_t sub_10005E3F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_10001C28C(&qword_1000C8710);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_10005E4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005E4C8);
}

uint64_t sub_10005E4C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_10001C28C(&qword_1000C8710);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_10005E574()
{
  sub_10001D4B0(319, (unint64_t *)&unk_1000C9800, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10005E654(uint64_t a1)
{
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = __CocoaSet.startIndex.getter();
    uint64_t v5 = v4;
    __CocoaSet.endIndex.getter();
    char v6 = static __CocoaSet.Index.== infix(_:_:)();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_10005F74C(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_10005F4D4(v3, v5, v2 != 0, a1);
    uint64_t v7 = v11;
    sub_10005F74C(v3, v5, v2 != 0);
    return v7;
  }
  uint64_t result = sub_10005F758(a1);
  if ((v10 & 1) == 0)
  {
    uint64_t v5 = v9;
    if (*(_DWORD *)(a1 + 36) == v9)
    {
      uint64_t v3 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_10005E764(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10001C28C(&qword_1000C93B0);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100016FEC(v6, (uint64_t)&v15, &qword_1000C9898);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_100012140(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_10001C9D4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10005E89C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10005E91C(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v2;
  v3;
  static Published.subscript.setter();
  return sub_10005BFFC();
}

double sub_10005E99C@<D0>(double *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_10005EA1C(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

id sub_10005EAEC(void *a1)
{
  uint64_t v3 = OBJC_IVAR___TipListViewController_viewModel;
  id v4 = objc_allocWithZone((Class)type metadata accessor for TipListViewModel(0));
  uint64_t v5 = v1;
  id v6 = [v4 init];
  *(void *)&v1[v3] = v6;
  char v19 = 0;
  id v7 = v6;
  State.init(wrappedValue:)();
  LOBYTE(v4) = v14;
  uint64_t v8 = v15;
  sub_100003C0C(&qword_1000C8C50, (void (*)(uint64_t))type metadata accessor for TipListViewModel);
  uint64_t v14 = 0;
  uint64_t v15 = ObservedObject.init(wrappedValue:)();
  uint64_t v16 = v9;
  char v17 = (char)v4;
  uint64_t v18 = v8;
  id v10 = objc_allocWithZone((Class)sub_10001C28C(&qword_1000C9890));
  *(void *)&v5[OBJC_IVAR___TipListViewController_hostingController] = UIHostingController.init(rootView:)();

  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for TipListViewController();
  id v11 = [super initWithCoder:a1];

  return v11;
}

uint64_t sub_10005ECA0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___TipListViewController_viewModel);
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  return v4;
}

id sub_10005EDD0()
{
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for TipListViewController();
  [super viewDidLayoutSubviews];
  id result = [v0 view];
  if (result)
  {
    id v2 = result;
    [result safeAreaInsets];
    double v4 = v3;

    uint64_t v5 = OBJC_IVAR___TipListViewController_viewModel;
    id v6 = *(void **)&v0[OBJC_IVAR___TipListViewController_viewModel];
    swift_getKeyPath();
    swift_getKeyPath();
    id v7 = v6;
    static Published.subscript.getter();

    swift_release();
    id result = (id)swift_release();
    if (round(v4) != v10)
    {
      uint64_t v8 = *(void **)&v0[v5];
      swift_getKeyPath();
      swift_getKeyPath();
      id v9 = v8;
      return (id)static Published.subscript.setter();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_10005EF80()
{
  if (![self isPhoneUI]) {
    return 0;
  }
  id v1 = [v0 navigationController];
  id v2 = v1;
  if (v1)
  {
    id v3 = [v1 navigationBar];

    id v2 = [v3 tintColor];
  }
  id v4 = [self whiteColor];
  uint64_t v5 = v4;
  if (v2)
  {
    if (v4)
    {
      sub_1000067A4(0, &qword_1000C8538);
      id v6 = v2;
      char v7 = static NSObject.== infix(_:_:)();

      return (v7 & 1) != 0;
    }
    uint64_t v5 = v2;
  }
  else if (!v4)
  {
    return 1;
  }

  return 0;
}

void sub_10005F0DC()
{
  id v1 = *(void **)(v0 + OBJC_IVAR___TipListViewController_hostingController);
}

id sub_10005F11C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TipListViewController();
  return [super dealloc];
}

void sub_10005F19C(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v5 = swift_bridgeObjectRetain();
  id v6 = (void *)sub_10005E654(v5);
  swift_bridgeObjectRelease();
  if (!v6) {
    return;
  }
  id v21 = [v6 key];

  if (!v21) {
    return;
  }
  id v7 = [v21 keyCode];
  if (v7 == (id)81)
  {
    uint64_t v12 = OBJC_IVAR___TipListViewController_viewModel;
    id v13 = *(id *)&v3[OBJC_IVAR___TipListViewController_viewModel];
    char v14 = dispatch thunk of TipNavigationViewModel.canGoNext.getter();

    if ((v14 & 1) == 0) {
      goto LABEL_10;
    }
    id v11 = *(id *)&v3[v12];
    dispatch thunk of TipNavigationViewModel.goNext()();
  }
  else
  {
    if (v7 != (id)82)
    {
      sub_1000067A4(0, &qword_1000C9870);
      sub_10005F46C();
      Class isa = Set._bridgeToObjectiveC()().super.isa;
      v22.receiver = v3;
      v22.super_class = (Class)type metadata accessor for TipListViewController();
      [super pressesBegan:a2 withEvent:isa];

      return;
    }
    uint64_t v8 = OBJC_IVAR___TipListViewController_viewModel;
    id v9 = *(id *)&v3[OBJC_IVAR___TipListViewController_viewModel];
    char v10 = dispatch thunk of TipNavigationViewModel.canGoBack.getter();

    if ((v10 & 1) == 0) {
      goto LABEL_10;
    }
    id v11 = *(id *)&v3[v8];
    dispatch thunk of TipNavigationViewModel.goBack()();
  }

LABEL_10:
  uint64_t v15 = OBJC_IVAR___TipListViewController_viewModel;
  id v16 = *(id *)&v3[OBJC_IVAR___TipListViewController_viewModel];
  char v17 = (void *)dispatch thunk of TipNavigationViewModel.currentTip.getter();

  if (v17)
  {
    uint64_t v18 = *(void (**)(void *))(*(void *)&v3[v15] + qword_1000CD1C8);
    if (v18)
    {
      swift_retain();
      v18(v17);

      sub_100005470((uint64_t)v18);
      char v19 = v17;
    }
    else
    {

      char v19 = v21;
    }

    *(unsigned char *)(*(void *)&v3[v15] + qword_1000CD1D0) = 1;
  }
  else
  {
  }
}

unint64_t sub_10005F46C()
{
  unint64_t result = qword_1000C9878;
  if (!qword_1000C9878)
  {
    sub_1000067A4(255, &qword_1000C9870);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9878);
  }
  return result;
}

void sub_10005F4D4(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      __CocoaSet.element(at:)();
      sub_1000067A4(0, &qword_1000C9870);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __CocoaSet.Index.element.getter();
  sub_1000067A4(0, &qword_1000C9870);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v4 = v16;
  swift_unknownObjectRelease();
  Swift::Int v7 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
  uint64_t v8 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v7 & ~v8;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v9 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v10 = static NSObject.== infix(_:_:)();

  if ((v10 & 1) == 0)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v6 = (v6 + 1) & v11;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_23;
      }
      id v12 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v13 = static NSObject.== infix(_:_:)();
    }
    while ((v13 & 1) == 0);
  }

LABEL_17:
  char v14 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v15 = v14;
}

uint64_t sub_10005F74C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10005F758(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  id v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_10005F7F0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10005F828(char a1)
{
}

uint64_t *sub_10005F84C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10001C28C(&qword_1000C92C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = (uint64_t *)((char *)a1 + v9);
    id v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v14 = *v12;
    char v13 = (void *)v12[1];
    void *v11 = v14;
    v11[1] = v13;
    id v15 = (char *)a1 + v10;
    id v16 = (char *)a2 + v10;
    *(_OWORD *)id v15 = *(_OWORD *)v16;
    *((void *)v15 + 2) = *((void *)v16 + 2);
    uint64_t v17 = a3[7];
    uint64_t v18 = *(void **)((char *)a2 + v17);
    *(uint64_t *)((char *)a1 + v17) = (uint64_t)v18;
    id v19 = v13;
    swift_retain();
    id v20 = v18;
  }
  return a1;
}

void sub_10005F9A4(uint64_t a1, uint64_t a2)
{
  sub_10001C28C(&qword_1000C92C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }

  swift_release();
  int v5 = *(void **)(a1 + *(int *)(a2 + 28));
}

void *sub_10005FA64(void *a1, void *a2, int *a3)
{
  sub_10001C28C(&qword_1000C92C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v7);
  uint64_t v10 = (void *)((char *)a2 + v7);
  uint64_t v12 = *v10;
  uint64_t v11 = (void *)v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  char v13 = (char *)a1 + v8;
  uint64_t v14 = (char *)a2 + v8;
  *(_OWORD *)char v13 = *(_OWORD *)v14;
  *((void *)v13 + 2) = *((void *)v14 + 2);
  uint64_t v15 = a3[7];
  id v16 = *(void **)((char *)a2 + v15);
  *(void *)((char *)a1 + v15) = v16;
  id v17 = v11;
  swift_retain();
  id v18 = v16;
  return a1;
}

void *sub_10005FB6C(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C92C8);
    sub_10001C28C(&qword_1000C92C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  *uint64_t v8 = *v9;
  uint64_t v10 = (void *)v9[1];
  uint64_t v11 = (void *)v8[1];
  v8[1] = v10;
  id v12 = v10;

  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  v14[2] = v15[2];
  swift_retain();
  swift_release();
  uint64_t v16 = a3[7];
  id v17 = *(void **)((char *)a2 + v16);
  id v18 = *(void **)((char *)a1 + v16);
  *(void *)((char *)a1 + v16) = v17;
  id v19 = v17;

  return a1;
}

char *sub_10005FCB8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C92C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((void *)v9 + 2) = *((void *)v10 + 2);
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *sub_10005FDB0(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C92C8);
    uint64_t v6 = sub_10001C28C(&qword_1000C92C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v12 = *(void *)v10;
  uint64_t v11 = *((void *)v10 + 1);
  uint64_t v13 = (void *)*((void *)v9 + 1);
  *(void *)uint64_t v9 = v12;
  *((void *)v9 + 1) = v11;

  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *((void *)v15 + 2) = *((void *)v16 + 2);
  swift_release();
  uint64_t v17 = a3[7];
  id v18 = *(void **)&a1[v17];
  *(void *)&a1[v17] = *(void *)&a2[v17];

  return a1;
}

uint64_t sub_10005FEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005FEF8);
}

uint64_t sub_10005FEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100064F14(a1, a2, a3, &qword_1000C9410);
}

uint64_t sub_10005FF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005FF18);
}

uint64_t sub_10005FF18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100064FF8(a1, a2, a3, a4, &qword_1000C9410);
}

uint64_t type metadata accessor for ChecklistItemView(uint64_t a1)
{
  return sub_10001BBC4(a1, qword_1000C98F8);
}

void sub_10005FF44(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_10005FF78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005FF94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10001C28C(&qword_1000C9938);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001C28C(&qword_1000C9940);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10001C28C(&qword_1000C9338);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000601E8(v1, (uint64_t)v5);
  char v14 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  sub_100016FEC((uint64_t)v5, (uint64_t)v9, &qword_1000C9938);
  id v23 = &v9[*(int *)(v7 + 44)];
  char *v23 = v14;
  *((void *)v23 + 1) = v16;
  *((void *)v23 + 2) = v18;
  *((void *)v23 + 3) = v20;
  *((void *)v23 + 4) = v22;
  v23[40] = 0;
  sub_1000143B4((uint64_t)v5, &qword_1000C9938);
  char v24 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_100016FEC((uint64_t)v9, (uint64_t)v13, &qword_1000C9940);
  uint64_t v33 = &v13[*(int *)(v11 + 44)];
  *uint64_t v33 = v24;
  *((void *)v33 + 1) = v26;
  *((void *)v33 + 2) = v28;
  *((void *)v33 + 3) = v30;
  *((void *)v33 + 4) = v32;
  v33[40] = 0;
  sub_1000143B4((uint64_t)v9, &qword_1000C9940);
  uint64_t v34 = static Alignment.leading.getter();
  sub_10004CCE0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v34, v35);
  return sub_1000143B4((uint64_t)v13, &qword_1000C9338);
}

uint64_t sub_1000601E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v26 = sub_10001C28C(&qword_1000C9948);
  __chkstk_darwin(v26);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10001C28C(&qword_1000C9950);
  __chkstk_darwin(v23);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10001C28C(&qword_1000C9958);
  __chkstk_darwin(v24);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ContentSizeCategory();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v23 - v14;
  sub_10006ED14((uint64_t)&v23 - v14);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, enum case for ContentSizeCategory.accessibilityMedium(_:), v9);
  BOOL v16 = sub_1000639AC((uint64_t)v15, (uint64_t)v13);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v13, v9);
  v17(v15, v9);
  if (v16)
  {
    *(void *)uint64_t v8 = static VerticalAlignment.top.getter();
    *((void *)v8 + 1) = 0x4026000000000000;
    v8[16] = 0;
    uint64_t v18 = sub_10001C28C(&qword_1000C9978);
    sub_1000605BC(a1, (uint64_t)&v8[*(int *)(v18 + 44)]);
    uint64_t v19 = &qword_1000C9958;
    sub_100016FEC((uint64_t)v8, (uint64_t)v6, &qword_1000C9958);
    swift_storeEnumTagMultiPayload();
    sub_100009170(&qword_1000C9968, &qword_1000C9958);
    sub_100009170(&qword_1000C9970, &qword_1000C9948);
    _ConditionalContent<>.init(storage:)();
    uint64_t v20 = (uint64_t)v8;
  }
  else
  {
    *(void *)uint64_t v4 = static HorizontalAlignment.leading.getter();
    *((void *)v4 + 1) = 0x4018000000000000;
    v4[16] = 0;
    uint64_t v21 = sub_10001C28C(&qword_1000C9960);
    sub_100061360(a1, (uint64_t)&v4[*(int *)(v21 + 44)]);
    uint64_t v19 = &qword_1000C9948;
    sub_100016FEC((uint64_t)v4, (uint64_t)v6, &qword_1000C9948);
    swift_storeEnumTagMultiPayload();
    sub_100009170(&qword_1000C9968, &qword_1000C9958);
    sub_100009170(&qword_1000C9970, &qword_1000C9948);
    _ConditionalContent<>.init(storage:)();
    uint64_t v20 = (uint64_t)v4;
  }
  return sub_1000143B4(v20, v19);
}

uint64_t sub_1000605BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = type metadata accessor for ChecklistItemView(0);
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v29 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v30 = sub_10001C28C(&qword_1000C9980);
  __chkstk_darwin(v30);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001C28C(&qword_1000C9988);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = sub_10001C28C(&qword_1000C9350);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v28 - v18;
  sub_1000609AC((uint64_t)&v28 - v18);
  *(void *)uint64_t v6 = static HorizontalAlignment.leading.getter();
  *((void *)v6 + 1) = 0x4000000000000000;
  v6[16] = 0;
  uint64_t v20 = sub_10001C28C(&qword_1000C9990);
  sub_100060BE8(a1, &v6[*(int *)(v20 + 44)]);
  sub_100063E14(a1, (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ChecklistItemView);
  unint64_t v21 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v22 = swift_allocObject();
  sub_1000641C0((uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, type metadata accessor for ChecklistItemView);
  sub_100009170(&qword_1000C9998, &qword_1000C9980);
  View.readSize(onChange:)();
  swift_release();
  sub_1000143B4((uint64_t)v6, &qword_1000C9980);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v11, v7);
  sub_100016FEC((uint64_t)v19, (uint64_t)v17, &qword_1000C9350);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v23(v11, v13, v7);
  uint64_t v24 = v31;
  sub_100016FEC((uint64_t)v17, v31, &qword_1000C9350);
  uint64_t v25 = sub_10001C28C(&qword_1000C99A0);
  v23((char *)(v24 + *(int *)(v25 + 48)), v11, v7);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  v26(v13, v7);
  sub_1000143B4((uint64_t)v19, &qword_1000C9350);
  v26(v11, v7);
  return sub_1000143B4((uint64_t)v17, &qword_1000C9350);
}

uint64_t sub_1000609AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v2 = type metadata accessor for ChecklistItemIcon(0);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_10001C28C(&qword_1000C9348);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = static VerticalAlignment.center.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  uint64_t v9 = (uint64_t)&v8[*(int *)(sub_10001C28C(&qword_1000C9A28) + 44)];
  uint64_t v10 = type metadata accessor for ChecklistItemView(0);
  uint64_t v11 = *(void **)(v1 + *(int *)(v10 + 20) + 8);
  uint64_t v12 = *(void **)(v1 + *(int *)(v10 + 28));
  *uint64_t v5 = swift_getKeyPath();
  sub_10001C28C(&qword_1000C99B8);
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = (uint64_t *)((char *)v5 + *(int *)(v3 + 28));
  type metadata accessor for ChecklistViewModel();
  sub_10006589C((unint64_t *)&qword_1000C9148, (void (*)(uint64_t))type metadata accessor for ChecklistViewModel);
  id v14 = v11;
  id v15 = v12;
  *uint64_t v13 = ObservedObject.init(wrappedValue:)();
  v13[1] = v16;
  *(uint64_t *)((char *)v5 + *(int *)(v3 + 32)) = (uint64_t)v15;
  sub_1000641C0((uint64_t)v5, v9, type metadata accessor for ChecklistItemIcon);
  uint64_t v17 = static Alignment.center.getter();
  sub_10004CD3C(0.0, 1, 0.0, 1, 45.0, 0, 0.0, 1, v21, 0.0, 1, 0.0, 1, v17, v18);
  return sub_1000143B4((uint64_t)v8, &qword_1000C9348);
}

uint64_t sub_100060BE8@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ChecklistItemBody(0);
  uint64_t v5 = (int *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v57 = (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v51 - v8);
  uint64_t v10 = sub_10001C28C(&qword_1000C99B0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v55 = (uint64_t)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v14 = (char *)&v51 - v13;
  uint64_t v67 = static VerticalAlignment.firstTextLineCenter.getter();
  sub_100061174(a1, (uint64_t)&v87);
  uint64_t v70 = *((void *)&v87 + 1);
  uint64_t v71 = v87;
  int v72 = v88;
  uint64_t v56 = v89;
  int v69 = BYTE1(v90);
  uint64_t v54 = v91;
  uint64_t v63 = v93;
  uint64_t v64 = v92;
  uint64_t v61 = v95;
  uint64_t v62 = v94;
  uint64_t v59 = v97;
  uint64_t v60 = v96;
  unsigned int v58 = v98;
  int v65 = BYTE4(v98);
  int v66 = v90;
  char v75 = 0;
  char v74 = v88;
  char v73 = BYTE4(v98);
  int v68 = BYTE4(v98);
  uint64_t v53 = v14;
  sub_100061DF8(a1);
  id v15 = (int *)type metadata accessor for ChecklistItemView(0);
  uint64_t v16 = *(void **)(a1 + v15[7]);
  uint64_t v17 = *(void **)(a1 + v15[5] + 8);
  uint64_t v18 = a1 + v15[6];
  uint64_t v19 = *(void *)(v18 + 16);
  long long v87 = *(_OWORD *)v18;
  uint64_t v88 = v19;
  id v20 = v17;
  int v51 = v16;
  sub_10001C28C(&qword_1000C99A8);
  State.wrappedValue.getter();
  long long v21 = v80;
  *uint64_t v9 = swift_getKeyPath();
  sub_10001C28C(&qword_1000C99B8);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (uint64_t)v9;
  uint64_t v23 = (_OWORD *)((char *)v9 + v5[9]);
  uint64_t v24 = (uint64_t *)((char *)v9 + v5[7]);
  type metadata accessor for ChecklistViewModel();
  sub_10006589C((unint64_t *)&qword_1000C9148, (void (*)(uint64_t))type metadata accessor for ChecklistViewModel);
  uint64_t *v24 = ObservedObject.init(wrappedValue:)();
  v24[1] = v25;
  uint64_t v26 = v5[8];
  uint64_t v52 = v22;
  *(void *)(v22 + v26) = v51;
  _OWORD *v23 = v21;
  uint64_t v27 = (uint64_t)v14;
  uint64_t v28 = v55;
  sub_100016FEC(v27, v55, &qword_1000C99B0);
  int v51 = type metadata accessor for ChecklistItemBody;
  uint64_t v29 = v57;
  sub_100063E14(v22, v57, type metadata accessor for ChecklistItemBody);
  *(void *)&long long v80 = v67;
  *((void *)&v80 + 1) = 0x4010000000000000;
  LOBYTE(v81) = 0;
  *(_DWORD *)((char *)&v81 + 1) = *(_DWORD *)v79;
  DWORD1(v81) = *(_DWORD *)&v79[3];
  uint64_t v30 = v70;
  uint64_t v31 = v71;
  *((void *)&v81 + 1) = v71;
  *(void *)&long long v82 = v70;
  BYTE8(v82) = v72;
  *(_DWORD *)((char *)&v82 + 9) = *(_DWORD *)v78;
  HIDWORD(v82) = *(_DWORD *)&v78[3];
  *(void *)&long long v83 = v56;
  BYTE8(v83) = v66;
  BYTE9(v83) = v69;
  HIWORD(v83) = v77;
  *(_DWORD *)((char *)&v83 + 10) = v76;
  uint64_t v32 = v54;
  *(void *)&long long v84 = v54;
  *((void *)&v84 + 1) = v64;
  *(void *)&long long v85 = v63;
  *((void *)&v85 + 1) = v62;
  *(void *)&v86[0] = v61;
  *((void *)&v86[0] + 1) = v60;
  *(void *)&v86[1] = v59;
  DWORD2(v86[1]) = v58;
  BYTE12(v86[1]) = v68;
  long long v33 = v81;
  *a2 = v80;
  a2[1] = v33;
  long long v34 = v83;
  a2[2] = v82;
  a2[3] = v34;
  long long v35 = v84;
  long long v36 = v85;
  long long v37 = v86[0];
  *(_OWORD *)((char *)a2 + 109) = *(_OWORD *)((char *)v86 + 13);
  a2[5] = v36;
  a2[6] = v37;
  a2[4] = v35;
  uint64_t v38 = sub_10001C28C(&qword_1000C99C0);
  sub_100016FEC(v28, (uint64_t)a2 + *(int *)(v38 + 48), &qword_1000C99B0);
  sub_100063E14(v29, (uint64_t)a2 + *(int *)(v38 + 64), v51);
  sub_100063E7C((uint64_t)&v80);
  char v39 = v72;
  sub_100037CB8(v31, v30, v72);
  swift_bridgeObjectRetain();
  uint64_t v40 = v32;
  uint64_t v41 = v32;
  uint64_t v43 = v63;
  uint64_t v42 = v64;
  uint64_t v44 = v61;
  uint64_t v45 = v62;
  uint64_t v46 = v59;
  uint64_t v47 = v60;
  uint64_t v48 = v58;
  sub_100063F28(v41, v64, v63, v62, v61, v60, v59, v58, v65);
  sub_100063F84(v52);
  sub_1000143B4((uint64_t)v53, &qword_1000C99B0);
  sub_100016FDC(v71, v70, v39);
  uint64_t v49 = v56;
  swift_bridgeObjectRelease();
  sub_100063FE0(v40, v42, v43, v45, v44, v47, v46, v48, v65);
  sub_100063F84(v57);
  sub_1000143B4(v55, &qword_1000C99B0);
  *(void *)&long long v87 = v67;
  *((void *)&v87 + 1) = 0x4010000000000000;
  LOBYTE(v88) = 0;
  *(_DWORD *)((char *)&v88 + 1) = *(_DWORD *)v79;
  HIDWORD(v88) = *(_DWORD *)&v79[3];
  uint64_t v89 = v71;
  uint64_t v90 = v70;
  LOBYTE(v91) = v72;
  *(_DWORD *)((char *)&v91 + 1) = *(_DWORD *)v78;
  HIDWORD(v91) = *(_DWORD *)&v78[3];
  uint64_t v92 = v49;
  LOBYTE(v93) = v66;
  BYTE1(v93) = v69;
  HIWORD(v93) = v77;
  *(_DWORD *)((char *)&v93 + 2) = v76;
  uint64_t v94 = v40;
  uint64_t v95 = v42;
  uint64_t v96 = v43;
  uint64_t v97 = v45;
  uint64_t v98 = v44;
  uint64_t v99 = v47;
  uint64_t v100 = v46;
  int v101 = v48;
  char v102 = v68;
  return sub_10006403C((uint64_t)&v87);
}

uint64_t sub_100061174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ChecklistItemView(0);
  id v5 = [*(id *)(a1 + *(int *)(v4 + 20) + 8) titleFor:*(void *)(a1 + *(int *)(v4 + 28))];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  uint64_t v32 = v6;
  uint64_t v33 = v8;
  sub_100016F88();
  uint64_t v9 = Text.init<A>(_:)();
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  static Font.headline.getter();
  uint64_t v14 = Text.font(_:)();
  uint64_t v30 = v15;
  uint64_t v31 = v14;
  LOBYTE(a1) = v16;
  uint64_t v28 = v17;
  swift_release();
  LOBYTE(a1) = a1 & 1;
  sub_100016FDC(v9, v11, v13);
  swift_bridgeObjectRelease();
  sub_100062678((uint64_t)&v32);
  uint64_t v18 = v32;
  uint64_t v19 = v33;
  uint64_t v29 = v32;
  uint64_t v20 = v34;
  uint64_t v21 = v35;
  uint64_t v23 = v36;
  uint64_t v22 = v37;
  uint64_t v24 = v38;
  uint64_t v25 = v39;
  char v26 = v40;
  *(void *)a2 = v31;
  *(void *)(a2 + 8) = v30;
  *(unsigned char *)(a2 + 16) = a1;
  *(void *)(a2 + 24) = v28;
  *(_WORD *)(a2 + 32) = 256;
  *(void *)(a2 + 40) = v18;
  *(void *)(a2 + 48) = v19;
  *(void *)(a2 + 56) = v20;
  *(void *)(a2 + 64) = v21;
  *(void *)(a2 + 72) = v23;
  *(void *)(a2 + 80) = v22;
  *(void *)(a2 + 88) = v24;
  *(_DWORD *)(a2 + 96) = v25;
  *(unsigned char *)(a2 + 100) = v26;
  sub_100037CB8(v31, v30, a1);
  swift_bridgeObjectRetain();
  sub_100063F28(v29, v19, v20, v21, v23, v22, v24, v25, v26);
  sub_100063FE0(v29, v19, v20, v21, v23, v22, v24, v25, v26);
  sub_100016FDC(v31, v30, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100061360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v3 = type metadata accessor for ChecklistItemView(0);
  uint64_t v66 = *(void *)(v3 - 8);
  uint64_t v65 = *(void *)(v66 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v63 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_10001C28C(&qword_1000C9A30);
  __chkstk_darwin(v69);
  uint64_t v60 = (uint64_t *)((char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_10001C28C(&qword_1000C9A38);
  uint64_t v67 = *(void *)(v6 - 8);
  uint64_t v68 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v62 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v64 = (char *)&v54 - v9;
  uint64_t v10 = sub_10001C28C(&qword_1000C9350);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  char v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v54 - v14;
  uint64_t v16 = sub_10001C28C(&qword_1000C9A40);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v61 = (uint64_t)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v54 - v19;
  *(void *)uint64_t v20 = static VerticalAlignment.top.getter();
  *((void *)v20 + 1) = 0;
  v20[16] = 1;
  uint64_t v59 = v20;
  uint64_t v56 = &v20[*(int *)(sub_10001C28C(&qword_1000C9A48) + 44)];
  uint64_t v58 = a1;
  sub_1000609AC((uint64_t)v15);
  sub_100062678((uint64_t)v71);
  uint64_t v21 = v71[0];
  uint64_t v22 = v71[1];
  uint64_t v23 = v71[2];
  uint64_t v55 = v71[3];
  uint64_t v24 = v71[5];
  uint64_t v54 = v71[4];
  uint64_t v25 = v71[6];
  uint64_t v26 = v72;
  LOBYTE(a1) = v73;
  uint64_t v57 = v13;
  sub_100016FEC((uint64_t)v15, (uint64_t)v13, &qword_1000C9350);
  uint64_t v27 = (uint64_t)v13;
  uint64_t v28 = (uint64_t)v56;
  sub_100016FEC(v27, (uint64_t)v56, &qword_1000C9350);
  uint64_t v29 = v28 + *(int *)(sub_10001C28C(&qword_1000C9A50) + 48);
  *(void *)uint64_t v29 = v21;
  *(void *)(v29 + 8) = v22;
  uint64_t v30 = v55;
  *(void *)(v29 + 16) = v23;
  *(void *)(v29 + 24) = v30;
  uint64_t v31 = v54;
  *(void *)(v29 + 32) = v54;
  *(void *)(v29 + 40) = v24;
  *(void *)(v29 + 48) = v25;
  *(_DWORD *)(v29 + 56) = v26;
  *(unsigned char *)(v29 + 60) = a1;
  sub_100063F28(v21, v22, v23, v30, v31, v24, v25, v26, a1);
  sub_1000143B4((uint64_t)v15, &qword_1000C9350);
  sub_100063FE0(v21, v22, v23, v30, v31, v24, v25, v26, a1);
  sub_1000143B4((uint64_t)v57, &qword_1000C9350);
  uint64_t v32 = static HorizontalAlignment.leading.getter();
  uint64_t v33 = (uint64_t)v60;
  uint64_t *v60 = v32;
  *(void *)(v33 + 8) = 0x4010000000000000;
  *(unsigned char *)(v33 + 16) = 0;
  uint64_t v34 = sub_10001C28C(&qword_1000C9A58);
  uint64_t v35 = v58;
  sub_10006195C(v58, (uint64_t *)(v33 + *(int *)(v34 + 44)));
  uint64_t v36 = v63;
  sub_100063E14(v35, v63, type metadata accessor for ChecklistItemView);
  unint64_t v37 = (*(unsigned __int8 *)(v66 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  uint64_t v38 = swift_allocObject();
  sub_1000641C0(v36, v38 + v37, type metadata accessor for ChecklistItemView);
  sub_100009170(&qword_1000C9A60, &qword_1000C9A30);
  unsigned int v39 = v62;
  View.readSize(onChange:)();
  swift_release();
  sub_1000143B4(v33, &qword_1000C9A30);
  uint64_t v40 = v67;
  uint64_t v41 = v68;
  uint64_t v42 = v64;
  (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v64, v39, v68);
  uint64_t v43 = (uint64_t)v59;
  uint64_t v44 = v61;
  sub_100016FEC((uint64_t)v59, v61, &qword_1000C9A40);
  uint64_t v45 = v40;
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  uint64_t v47 = v39;
  uint64_t v48 = v39;
  uint64_t v49 = v41;
  v46(v47, v42, v41);
  uint64_t v50 = v70;
  sub_100016FEC(v44, v70, &qword_1000C9A40);
  uint64_t v51 = sub_10001C28C(&qword_1000C9A68);
  v46((char *)(v50 + *(int *)(v51 + 48)), v48, v49);
  uint64_t v52 = *(void (**)(char *, uint64_t))(v45 + 8);
  v52(v42, v49);
  sub_1000143B4(v43, &qword_1000C9A40);
  v52(v48, v49);
  return sub_1000143B4(v44, &qword_1000C9A40);
}

uint64_t sub_10006195C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v3 = type metadata accessor for ChecklistItemBody(0);
  uint64_t v4 = (int *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v56 = (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v49 - v7);
  uint64_t v9 = sub_10001C28C(&qword_1000C99B0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v55 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v58 = (uint64_t)&v49 - v12;
  char v13 = (int *)type metadata accessor for ChecklistItemView(0);
  uint64_t v14 = *(void **)(a1 + v13[7]);
  id v50 = *(id *)(a1 + v13[5] + 8);
  id v51 = v14;
  id v15 = [v50 titleFor:];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  *(void *)&long long v59 = v16;
  *((void *)&v59 + 1) = v18;
  sub_100016F88();
  uint64_t v19 = Text.init<A>(_:)();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  static Font.headline.getter();
  uint64_t v24 = Text.font(_:)();
  uint64_t v53 = v25;
  uint64_t v54 = v24;
  uint64_t v52 = v26;
  char v28 = v27;
  swift_release();
  LOBYTE(v15) = v28 & 1;
  sub_100016FDC(v19, v21, v23);
  swift_bridgeObjectRelease();
  uint64_t v29 = v58;
  sub_100061DF8(a1);
  uint64_t v30 = a1 + v13[6];
  uint64_t v31 = *(void *)(v30 + 16);
  long long v59 = *(_OWORD *)v30;
  uint64_t v60 = v31;
  id v32 = v50;
  id v33 = v51;
  sub_10001C28C(&qword_1000C99A8);
  State.wrappedValue.getter();
  uint64_t v34 = v61;
  uint64_t v35 = v62;
  *uint64_t v8 = swift_getKeyPath();
  sub_10001C28C(&qword_1000C99B8);
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = (uint64_t)v8;
  unint64_t v37 = (uint64_t *)((char *)v8 + v4[9]);
  uint64_t v38 = (uint64_t *)((char *)v8 + v4[7]);
  uint64_t v49 = v8;
  type metadata accessor for ChecklistViewModel();
  sub_10006589C((unint64_t *)&qword_1000C9148, (void (*)(uint64_t))type metadata accessor for ChecklistViewModel);
  *uint64_t v38 = ObservedObject.init(wrappedValue:)();
  v38[1] = v39;
  *(uint64_t *)((char *)v8 + v4[8]) = (uint64_t)v33;
  *unint64_t v37 = v34;
  v37[1] = v35;
  LOBYTE(v8) = (_BYTE)v15;
  LOBYTE(v59) = (_BYTE)v15;
  uint64_t v40 = v55;
  sub_100016FEC(v29, v55, &qword_1000C99B0);
  uint64_t v41 = v56;
  sub_100063E14(v36, v56, type metadata accessor for ChecklistItemBody);
  uint64_t v42 = v57;
  uint64_t v44 = v53;
  uint64_t v43 = v54;
  uint64_t v45 = v52;
  uint64_t *v57 = v54;
  v42[1] = v45;
  *((unsigned char *)v42 + 16) = (_BYTE)v8;
  v42[3] = v44;
  *((_WORD *)v42 + 16) = 256;
  uint64_t v46 = v42;
  uint64_t v47 = sub_10001C28C(&qword_1000C9A70);
  sub_100016FEC(v40, (uint64_t)v46 + *(int *)(v47 + 48), &qword_1000C99B0);
  sub_100063E14(v41, (uint64_t)v46 + *(int *)(v47 + 64), type metadata accessor for ChecklistItemBody);
  sub_100037CB8(v43, v45, (char)v8);
  swift_bridgeObjectRetain();
  sub_100037CB8(v43, v45, (char)v8);
  swift_bridgeObjectRetain();
  sub_100063F84((uint64_t)v49);
  sub_1000143B4(v58, &qword_1000C99B0);
  sub_100016FDC(v43, v45, (char)v8);
  swift_bridgeObjectRelease();
  sub_100063F84(v41);
  sub_1000143B4(v40, &qword_1000C99B0);
  sub_100016FDC(v43, v45, v59);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100061D80()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100061DF8(uint64_t a1)
{
  uint64_t v2 = sub_10001C28C(&qword_1000C99C8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001C28C(&qword_1000C99D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001C28C(&qword_1000C99D8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v13 = (char *)&v17 - v12;
  uint64_t v14 = type metadata accessor for ChecklistItemView(0);
  if ([*(id *)(a1 + *(int *)(v14 + 20) + 8) isCompletedFor:*(void *)(a1 + *(int *)(v14 + 28))])
  {
    *(void *)uint64_t v7 = static VerticalAlignment.firstTextLineCenter.getter();
    *((void *)v7 + 1) = 0x4008000000000000;
    v7[16] = 0;
    uint64_t v15 = sub_10001C28C(&qword_1000C99F0);
    sub_100062074(a1, (uint64_t)&v7[*(int *)(v15 + 44)]);
    sub_100016FEC((uint64_t)v7, (uint64_t)v11, &qword_1000C99D0);
    *(_WORD *)&v11[*(int *)(v8 + 36)] = 256;
    sub_1000143B4((uint64_t)v7, &qword_1000C99D0);
    sub_100017278((uint64_t)v11, (uint64_t)v13, &qword_1000C99D8);
    sub_100016FEC((uint64_t)v13, (uint64_t)v4, &qword_1000C99D8);
    swift_storeEnumTagMultiPayload();
    sub_1000640E8();
    _ConditionalContent<>.init(storage:)();
    return sub_1000143B4((uint64_t)v13, &qword_1000C99D8);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_1000640E8();
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_100062074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v63 = type metadata accessor for Image.Scale();
  uint64_t v3 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001C28C(&qword_1000C8E48);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10001C28C(&qword_1000C99F8);
  __chkstk_darwin(v60);
  uint64_t v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_10001C28C(&qword_1000C9A00);
  __chkstk_darwin(v61);
  uint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_10001C28C(&qword_1000C9A08);
  uint64_t v13 = __chkstk_darwin(v62);
  uint64_t v66 = (uint64_t)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v58 - v16;
  __chkstk_darwin(v15);
  uint64_t v65 = (uint64_t)&v58 - v18;
  uint64_t v68 = Image.init(systemName:)();
  View.accessibilityHidden(_:)();
  swift_release();
  uint64_t v19 = type metadata accessor for ChecklistItemView(0);
  uint64_t v59 = a1 + *(int *)(v19 + 20);
  uint64_t v20 = *(void **)(v59 + 8);
  uint64_t v21 = *(int *)(v19 + 28);
  uint64_t v64 = a1;
  if ([v20 isSuggestedFor:*(void *)(a1 + v21)])
  {
    id v22 = [self secondaryLabelColor];
    uint64_t v23 = Color.init(_:)();
  }
  else
  {
    uint64_t v23 = static Color.green.getter();
  }
  uint64_t v24 = v23;
  sub_100016FEC((uint64_t)v8, (uint64_t)v10, &qword_1000C8E48);
  *(void *)&v10[*(int *)(v60 + 36)] = v24;
  sub_1000143B4((uint64_t)v8, &qword_1000C8E48);
  uint64_t v25 = static Font.footnote.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_100016FEC((uint64_t)v10, (uint64_t)v12, &qword_1000C99F8);
  char v27 = (uint64_t *)&v12[*(int *)(v61 + 36)];
  *char v27 = KeyPath;
  v27[1] = v25;
  sub_1000143B4((uint64_t)v10, &qword_1000C99F8);
  uint64_t v28 = v63;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Image.Scale.small(_:), v63);
  uint64_t v29 = swift_getKeyPath();
  uint64_t v30 = (uint64_t *)&v17[*(int *)(v62 + 36)];
  uint64_t v31 = sub_10001C28C(&qword_1000C95A8);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))((char *)v30 + *(int *)(v31 + 28), v5, v28);
  *uint64_t v30 = v29;
  sub_100016FEC((uint64_t)v12, (uint64_t)v17, &qword_1000C9A00);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v28);
  sub_1000143B4((uint64_t)v12, &qword_1000C9A00);
  uint64_t v32 = v65;
  sub_100017278((uint64_t)v17, v65, &qword_1000C9A08);
  id v33 = [*(id *)(v59 + 8) subtitleFor:*(void *)(v64 + v21)];
  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v36 = v35;

  uint64_t v68 = v34;
  uint64_t v69 = v36;
  sub_100016F88();
  uint64_t v37 = Text.init<A>(_:)();
  uint64_t v39 = v38;
  char v41 = v40 & 1;
  LODWORD(v68) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v42 = Text.foregroundStyle<A>(_:)();
  uint64_t v44 = v43;
  char v46 = v45 & 1;
  sub_100016FDC(v37, v39, v41);
  swift_bridgeObjectRelease();
  static Font.subheadline.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v47 = Text.font(_:)();
  uint64_t v49 = v48;
  char v51 = v50;
  uint64_t v53 = v52;
  swift_release();
  sub_100016FDC(v42, v44, v46);
  swift_bridgeObjectRelease();
  uint64_t v54 = v66;
  sub_100016FEC(v32, v66, &qword_1000C9A08);
  uint64_t v55 = v67;
  sub_100016FEC(v54, v67, &qword_1000C9A08);
  uint64_t v56 = v55 + *(int *)(sub_10001C28C(&qword_1000C9A10) + 48);
  *(void *)uint64_t v56 = v47;
  *(void *)(v56 + 8) = v49;
  *(unsigned char *)(v56 + 16) = v51 & 1;
  *(void *)(v56 + 24) = v53;
  sub_100037CB8(v47, v49, v51 & 1);
  swift_bridgeObjectRetain();
  sub_1000143B4(v32, &qword_1000C9A08);
  sub_100016FDC(v47, v49, v51 & 1);
  swift_bridgeObjectRelease();
  return sub_1000143B4(v54, &qword_1000C9A08);
}

double sub_100062678@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for ChecklistItemView(0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v3 == 1)
  {
    Image.init(systemName:)();
    static Font.footnote.getter();
    static Font.Weight.bold.getter();
    Font.weight(_:)();
    swift_release();
    swift_getKeyPath();
    static HierarchicalShapeStyle.tertiary.getter();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10001C28C(&qword_1000C9A18);
    sub_100009170(&qword_1000C9A20, &qword_1000C9A18);
    _ConditionalContent<>.init(storage:)();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    sub_10001C28C(&qword_1000C9A18);
    sub_100009170(&qword_1000C9A20, &qword_1000C9A18);
    _ConditionalContent<>.init(storage:)();
  }
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v6;
  *(_DWORD *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 60) = v8;
  return result;
}

uint64_t sub_1000628C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v75 = a1;
  uint64_t v2 = type metadata accessor for Image.Scale();
  uint64_t v73 = *(void *)(v2 - 8);
  uint64_t v74 = v2;
  __chkstk_darwin(v2);
  uint64_t v72 = (uint64_t)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001C28C(&qword_1000C8318);
  __chkstk_darwin(v4 - 8);
  uint64_t v71 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for BackgroundProminence();
  uint64_t v65 = *(void *)(v6 - 8);
  uint64_t v66 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v61 - v10;
  uint64_t v12 = sub_10001C28C(&qword_1000C9310);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (uint64_t)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10001C28C(&qword_1000C8E48);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10001C28C(&qword_1000C9318);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_10001C28C(&qword_1000C9C08);
  __chkstk_darwin(v64);
  uint64_t v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_10001C28C(&qword_1000C9C10);
  __chkstk_darwin(v67);
  uint64_t v70 = (uint64_t)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_10001C28C(&qword_1000C9C18);
  __chkstk_darwin(v68);
  uint64_t v69 = (char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for ChecklistItemIcon(0);
  uint64_t v27 = *(int *)(v26 + 24);
  uint64_t v28 = v1 + *(int *)(v26 + 20);
  uint64_t v61 = v1;
  uint64_t v62 = v28;
  uint64_t v29 = *(void **)(v28 + 8);
  uint64_t v63 = v27;
  id v30 = [v29 symbolIdentifierFor:*(void *)(v1 + v27)];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v76 = Image.init(_internalSystemName:)();
  View.accessibilityHidden(_:)();
  swift_release();
  static SymbolRenderingMode.monochrome.getter();
  uint64_t v31 = type metadata accessor for SymbolRenderingMode();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v14, 0, 1, v31);
  uint64_t KeyPath = swift_getKeyPath();
  id v33 = (uint64_t *)&v21[*(int *)(v19 + 44)];
  uint64_t v34 = sub_10001C28C(&qword_1000C9320);
  sub_100016FEC(v14, (uint64_t)v33 + *(int *)(v34 + 28), &qword_1000C9310);
  *id v33 = KeyPath;
  sub_100016FEC((uint64_t)v17, (uint64_t)v21, &qword_1000C8E48);
  uint64_t v35 = v61;
  sub_1000143B4(v14, &qword_1000C9310);
  sub_1000143B4((uint64_t)v17, &qword_1000C8E48);
  sub_10006ED4C((uint64_t)v11);
  static BackgroundProminence.increased.getter();
  LOBYTE(v14) = static BackgroundProminence.== infix(_:_:)();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v65 + 8);
  uint64_t v37 = v9;
  uint64_t v38 = v66;
  v36(v37, v66);
  v36(v11, v38);
  if (v14)
  {
    LODWORD(v76) = static HierarchicalShapeStyle.primary.getter();
    uint64_t v39 = AnyShapeStyle.init<A>(_:)();
    uint64_t v41 = v62;
    uint64_t v40 = v63;
  }
  else
  {
    uint64_t v41 = v62;
    uint64_t v40 = v63;
    uint64_t v42 = *(void **)(v35 + v63);
    id v43 = *(id *)(v62 + 8);
    uint64_t v44 = sub_10003F360(v42);

    uint64_t v76 = v44;
    uint64_t v39 = AnyShapeStyle.init<A>(_:)();
  }
  sub_100016FEC((uint64_t)v21, (uint64_t)v23, &qword_1000C9318);
  *(void *)&v23[*(int *)(v64 + 36)] = v39;
  sub_1000143B4((uint64_t)v21, &qword_1000C9318);
  static Font.Weight.semibold.getter();
  uint64_t v45 = type metadata accessor for Font.Design();
  uint64_t v46 = (uint64_t)v71;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v71, 1, 1, v45);
  uint64_t v47 = static Font.system(size:weight:design:)();
  sub_1000143B4(v46, &qword_1000C8318);
  uint64_t v48 = swift_getKeyPath();
  uint64_t v49 = v70;
  sub_100016FEC((uint64_t)v23, v70, &qword_1000C9C08);
  char v50 = (uint64_t *)(v49 + *(int *)(v67 + 36));
  uint64_t *v50 = v48;
  v50[1] = v47;
  sub_1000143B4((uint64_t)v23, &qword_1000C9C08);
  char v51 = *(void **)(v35 + v40);
  id v52 = *(id *)(v41 + 8);
  uint64_t v53 = v72;
  sub_10003E820(v51, v72);

  uint64_t v54 = swift_getKeyPath();
  uint64_t v55 = (uint64_t)v69;
  uint64_t v56 = (uint64_t *)&v69[*(int *)(v68 + 36)];
  uint64_t v57 = sub_10001C28C(&qword_1000C95A8);
  uint64_t v59 = v73;
  uint64_t v58 = v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))((char *)v56 + *(int *)(v57 + 28), v53, v74);
  *uint64_t v56 = v54;
  sub_100016FEC(v49, v55, &qword_1000C9C10);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v53, v58);
  sub_1000143B4(v49, &qword_1000C9C10);
  return sub_100017278(v55, v75, &qword_1000C9C18);
}

uint64_t sub_100063000()
{
  return EnvironmentValues.backgroundProminence.getter();
}

uint64_t sub_100063024(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BackgroundProminence();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.backgroundProminence.setter();
}

uint64_t sub_1000630F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v3 = sub_10001C28C(&qword_1000C9BE8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001C28C(&qword_1000C9BF0);
  __chkstk_darwin(v6 - 8);
  uint64_t v75 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001C28C(&qword_1000C8710);
  __chkstk_darwin(v8 - 8);
  uint64_t v67 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ConstellationContentView();
  uint64_t v77 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v73 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v76 = (char *)&v63 - v13;
  uint64_t v14 = type metadata accessor for ConstellationContentParagraphStyle();
  uint64_t v69 = *(void *)(v14 - 8);
  uint64_t v70 = v14;
  __chkstk_darwin(v14);
  uint64_t v65 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10001C28C(&qword_1000C9BF8);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for ConstellationContentAttributes();
  uint64_t v72 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v66 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for BackgroundProminence();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v63 - v25;
  uint64_t v27 = type metadata accessor for ChecklistItemBody(0);
  uint64_t v28 = *(int *)(v27 + 20);
  uint64_t v29 = *(int *)(v27 + 24);
  uint64_t v71 = v27;
  uint64_t v30 = a1 + v28;
  uint64_t v31 = *(void **)(a1 + v28 + 8);
  uint64_t v68 = v29;
  if ([v31 isSuggestedFor:*(void *)(a1 + v29)])
  {
    uint64_t v63 = v3;
    uint64_t v64 = v5;
    uint64_t v32 = a1;
    sub_10006ED4C((uint64_t)v26);
    static BackgroundProminence.increased.getter();
    char v33 = static BackgroundProminence.== infix(_:_:)();
    uint64_t v34 = *(void (**)(char *, uint64_t))(v21 + 8);
    v34(v24, v20);
    v34(v26, v20);
    if (v33)
    {
      uint64_t v35 = static Color.white.getter();
    }
    else
    {
      id v37 = [self secondaryLabelColor];
      uint64_t v35 = Color.init(_:)();
    }
    uint64_t v38 = (char *)v35;
    uint64_t v39 = v10;
    uint64_t v41 = v66;
    uint64_t v40 = v67;
    uint64_t v42 = v65;
    id v43 = [self preferredFontForTextStyle:UIFontTextStyleSubheadline];
    uint64_t v44 = type metadata accessor for Locale.Language();
    long long v79 = 0u;
    long long v80 = 0u;
    uint64_t v81 = 0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v18, 1, 1, v44);
    swift_retain();
    defaultParagraphSpacing.getter();
    (*(void (**)(char *, void, uint64_t))(v69 + 104))(v42, enum case for ConstellationContentParagraphStyle.newline(_:), v70);
    ConstellationContentAttributes.init(font:foregroundColor:accentColor:titleGradientStyle:textAlignment:paragraphSpacing:paragraphStyle:numberOfLines:lineBreakMode:symbolScale:useForegroundColorForSymbol:displayLinkStyle:typeSettingLanguage:supportsLinks:)();
    uint64_t v45 = *(void **)(v30 + 8);
    uint64_t v46 = *(void **)(v32 + v68);
    id v47 = [v45 bodyContentFor:v46];
    sub_10001C28C(&qword_1000C8950);
    uint64_t v70 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v48 = [v46 language];
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v69 = v49;

    id v50 = [v45 assetsBaseURLFor:v46];
    uint64_t v67 = v38;
    if (v50)
    {
      char v51 = v50;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v52 = type metadata accessor for URL();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v40, 0, 1, v52);
    }
    else
    {
      uint64_t v53 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v40, 1, 1, v53);
    }
    id v54 = [v46 assetFileInfoManager];
    uint64_t v55 = v72;
    uint64_t v56 = v75;
    uint64_t v57 = v41;
    uint64_t v58 = v41;
    uint64_t v59 = v74;
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v75, v57, v74);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v56, 0, 1, v59);
    uint64_t v60 = v73;
    ConstellationContentView.init(rawContent:language:assetsBaseURL:assetFileInfoManager:attributes:size:maxWidth:textIsSelectable:delegate:)();
    uint64_t v62 = v76;
    uint64_t v61 = v77;
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v76, v60, v39);
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v64, v62, v39);
    swift_storeEnumTagMultiPayload();
    sub_10006589C(&qword_1000C9C00, (void (*)(uint64_t))&type metadata accessor for ConstellationContentView);
    _ConditionalContent<>.init(storage:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v39);
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v58, v59);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_10006589C(&qword_1000C9C00, (void (*)(uint64_t))&type metadata accessor for ConstellationContentView);
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_1000639A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000630F0(v1, a1);
}

BOOL sub_1000639AC(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v3 = type metadata accessor for ContentSizeCategory();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v18 - v8, a1, v3);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v4 + 88);
  int v12 = v11(v9, v3);
  unint64_t v13 = 0;
  int v14 = enum case for ContentSizeCategory.extraSmall(_:);
  if (v12 != enum case for ContentSizeCategory.extraSmall(_:))
  {
    if (v12 == enum case for ContentSizeCategory.small(_:))
    {
      unint64_t v13 = 1;
      goto LABEL_24;
    }
    if (v12 == enum case for ContentSizeCategory.medium(_:))
    {
      unint64_t v13 = 2;
      goto LABEL_24;
    }
    if (v12 == enum case for ContentSizeCategory.large(_:)) {
      goto LABEL_7;
    }
    if (v12 == enum case for ContentSizeCategory.extraLarge(_:))
    {
      unint64_t v13 = 4;
    }
    else if (v12 == enum case for ContentSizeCategory.extraExtraLarge(_:))
    {
      unint64_t v13 = 5;
    }
    else if (v12 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
    {
      unint64_t v13 = 6;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityMedium(_:))
    {
      unint64_t v13 = 7;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityLarge(_:))
    {
      unint64_t v13 = 8;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
    {
      unint64_t v13 = 9;
    }
    else if (v12 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
    {
      unint64_t v13 = 10;
    }
    else
    {
      if (v12 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
LABEL_7:
        unint64_t v13 = 3;
        goto LABEL_24;
      }
      unint64_t v13 = 11;
    }
  }
LABEL_24:
  v10(v7, v19, v3);
  int v15 = v11(v7, v3);
  if (v15 == v14)
  {
    unint64_t v16 = 0;
  }
  else if (v15 == enum case for ContentSizeCategory.small(_:))
  {
    unint64_t v16 = 1;
  }
  else if (v15 == enum case for ContentSizeCategory.medium(_:))
  {
    unint64_t v16 = 2;
  }
  else
  {
    if (v15 != enum case for ContentSizeCategory.large(_:))
    {
      if (v15 == enum case for ContentSizeCategory.extraLarge(_:))
      {
        unint64_t v16 = 4;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.extraExtraLarge(_:))
      {
        unint64_t v16 = 5;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
      {
        unint64_t v16 = 6;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityMedium(_:))
      {
        unint64_t v16 = 7;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityLarge(_:))
      {
        unint64_t v16 = 8;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
      {
        unint64_t v16 = 9;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
      {
        unint64_t v16 = 10;
        return v13 < v16;
      }
      if (v15 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        unint64_t v16 = 11;
        return v13 < v16;
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    unint64_t v16 = 3;
  }
  return v13 < v16;
}

uint64_t type metadata accessor for ChecklistItemBody(uint64_t a1)
{
  return sub_10001BBC4(a1, (uint64_t *)&unk_1000C9AD8);
}

uint64_t sub_100063DEC()
{
  return EnvironmentValues.backgroundProminence.getter();
}

uint64_t sub_100063E14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100063E7C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v7 = *(void *)(a1 + 112);
  uint64_t v8 = *(unsigned int *)(a1 + 120);
  char v9 = *(unsigned char *)(a1 + 124);
  sub_100037CB8(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_100063F28(v11, v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

uint64_t sub_100063F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100063F84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ChecklistItemBody(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100063FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10006403C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v7 = *(void *)(a1 + 112);
  uint64_t v8 = *(unsigned int *)(a1 + 120);
  char v9 = *(unsigned char *)(a1 + 124);
  sub_100016FDC(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_100063FE0(v11, v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

unint64_t sub_1000640E8()
{
  unint64_t result = qword_1000C99E0;
  if (!qword_1000C99E0)
  {
    sub_10001AD28(&qword_1000C99D8);
    sub_100009170(&qword_1000C99E8, &qword_1000C99D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C99E0);
  }
  return result;
}

uint64_t type metadata accessor for ChecklistItemIcon(uint64_t a1)
{
  return sub_10001BBC4(a1, qword_1000C9B78);
}

uint64_t sub_1000641C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10006422C()
{
  return sub_100061D80();
}

uint64_t *sub_100064298(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10001C28C(&qword_1000C99B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for BackgroundProminence();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = (uint64_t *)((char *)a1 + v9);
    int v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v14 = *v12;
    unint64_t v13 = (void *)v12[1];
    void *v11 = v14;
    v11[1] = v13;
    int v15 = *(void **)((char *)a2 + v10);
    *(uint64_t *)((char *)a1 + v10) = (uint64_t)v15;
    *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
    id v16 = v13;
    id v17 = v15;
  }
  return a1;
}

void *sub_1000643DC(void *a1, void *a2, int *a3)
{
  sub_10001C28C(&qword_1000C99B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for BackgroundProminence();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v7);
  uint64_t v10 = (void *)((char *)a2 + v7);
  uint64_t v12 = *v10;
  uint64_t v11 = (void *)v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  unint64_t v13 = *(void **)((char *)a2 + v8);
  *(void *)((char *)a1 + v8) = v13;
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  id v14 = v11;
  id v15 = v13;
  return a1;
}

void *sub_1000644CC(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C99B8);
    sub_10001C28C(&qword_1000C99B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for BackgroundProminence();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  *uint64_t v8 = *v9;
  uint64_t v10 = (void *)v9[1];
  uint64_t v11 = (void *)v8[1];
  v8[1] = v10;
  id v12 = v10;

  uint64_t v13 = a3[6];
  id v14 = *(void **)((char *)a2 + v13);
  id v15 = *(void **)((char *)a1 + v13);
  *(void *)((char *)a1 + v13) = v14;
  id v16 = v14;

  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  void *v18 = *v19;
  v18[1] = v19[1];
  return a1;
}

char *sub_100064600(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C99B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for BackgroundProminence();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  return a1;
}

char *sub_1000646E8(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C99B8);
    uint64_t v6 = sub_10001C28C(&qword_1000C99B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for BackgroundProminence();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v12 = *(void *)v10;
  uint64_t v11 = *((void *)v10 + 1);
  uint64_t v13 = (void *)*((void *)v9 + 1);
  *(void *)uint64_t v9 = v12;
  *((void *)v9 + 1) = v11;

  uint64_t v14 = a3[6];
  id v15 = *(void **)&a1[v14];
  *(void *)&a1[v14] = *(void *)&a2[v14];

  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  return a1;
}

uint64_t sub_100064804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100064818);
}

uint64_t sub_100064818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100064F14(a1, a2, a3, &qword_1000C9A78);
}

uint64_t sub_100064824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100064838);
}

uint64_t sub_100064838(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100064FF8(a1, a2, a3, a4, &qword_1000C9A78);
}

void sub_100064844(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100064878(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_100003028(319, a4, a5);
  if (v5 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_100064928(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10001C28C(&qword_1000C99B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for BackgroundProminence();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (uint64_t *)((char *)a1 + v9);
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v14 = *v12;
    uint64_t v13 = (void *)v12[1];
    void *v11 = v14;
    v11[1] = v13;
    id v15 = *(void **)((char *)a2 + v10);
    *(uint64_t *)((char *)a1 + v10) = (uint64_t)v15;
    id v16 = v13;
    id v17 = v15;
  }
  return a1;
}

void sub_100064A5C(uint64_t a1, uint64_t a2)
{
  sub_10001C28C(&qword_1000C99B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for BackgroundProminence();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }

  int v5 = *(void **)(a1 + *(int *)(a2 + 24));
}

void *sub_100064B0C(void *a1, void *a2, uint64_t a3)
{
  sub_10001C28C(&qword_1000C99B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for BackgroundProminence();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)((char *)a1 + v7);
  uint64_t v10 = (void *)((char *)a2 + v7);
  uint64_t v12 = *v10;
  uint64_t v11 = (void *)v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  uint64_t v13 = *(void **)((char *)a2 + v8);
  *(void *)((char *)a1 + v8) = v13;
  id v14 = v11;
  id v15 = v13;
  return a1;
}

void *sub_100064BF0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C99B8);
    sub_10001C28C(&qword_1000C99B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for BackgroundProminence();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  *uint64_t v8 = *v9;
  uint64_t v10 = (void *)v9[1];
  uint64_t v11 = (void *)v8[1];
  v8[1] = v10;
  id v12 = v10;

  uint64_t v13 = *(int *)(a3 + 24);
  id v14 = *(void **)((char *)a2 + v13);
  id v15 = *(void **)((char *)a1 + v13);
  *(void *)((char *)a1 + v13) = v14;
  id v16 = v14;

  return a1;
}

char *sub_100064D08(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C99B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for BackgroundProminence();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  return a1;
}

char *sub_100064DE4(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C99B8);
    uint64_t v6 = sub_10001C28C(&qword_1000C99B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for BackgroundProminence();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v12 = *(void *)v10;
  uint64_t v11 = *((void *)v10 + 1);
  uint64_t v13 = (void *)*((void *)v9 + 1);
  *(void *)uint64_t v9 = v12;
  *((void *)v9 + 1) = v11;

  uint64_t v14 = *(int *)(a3 + 24);
  id v15 = *(void **)&a1[v14];
  *(void *)&a1[v14] = *(void *)&a2[v14];

  return a1;
}

uint64_t sub_100064EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100064F08);
}

uint64_t sub_100064F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100064F14(a1, a2, a3, &qword_1000C9A78);
}

uint64_t sub_100064F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = sub_10001C28C(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v9(a1, a2, v7);
  }
  else
  {
    unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100064FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100064FEC);
}

uint64_t sub_100064FEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100064FF8(a1, a2, a3, a4, &qword_1000C9A78);
}

uint64_t sub_100064FF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t result = sub_10001C28C(a5);
  uint64_t v10 = *(void *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v11(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

void sub_1000650B8()
{
  sub_100003028(319, (unint64_t *)&unk_1000C9AE8, (void (*)(uint64_t))&type metadata accessor for BackgroundProminence);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100065178()
{
  return sub_1000651BC(&qword_1000C9BB8, &qword_1000C9340, (void (*)(void))sub_100065238);
}

uint64_t sub_1000651BC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001AD28(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100065238()
{
  return sub_1000651BC(&qword_1000C9BC0, &qword_1000C9338, (void (*)(void))sub_100065268);
}

unint64_t sub_100065268()
{
  unint64_t result = qword_1000C9BC8;
  if (!qword_1000C9BC8)
  {
    sub_10001AD28(&qword_1000C9940);
    sub_100065448(&qword_1000C9BD0, &qword_1000C9938, (void (*)(void))sub_100065308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9BC8);
  }
  return result;
}

unint64_t sub_100065308()
{
  unint64_t result = qword_1000C9BD8;
  if (!qword_1000C9BD8)
  {
    sub_10001AD28(&qword_1000C9BE0);
    sub_100009170(&qword_1000C9968, &qword_1000C9958);
    sub_100009170(&qword_1000C9970, &qword_1000C9948);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9BD8);
  }
  return result;
}

uint64_t sub_1000653CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000653E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006540C()
{
  return sub_100065448(&qword_1000C9C20, &qword_1000C9C28, (void (*)(void))sub_1000654C0);
}

uint64_t sub_100065448(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001AD28(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000654C0()
{
  unint64_t result = qword_1000C9C30;
  if (!qword_1000C9C30)
  {
    sub_10001AD28(&qword_1000C9C38);
    sub_10006589C(&qword_1000C9C00, (void (*)(uint64_t))&type metadata accessor for ConstellationContentView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9C30);
  }
  return result;
}

unint64_t sub_100065570()
{
  unint64_t result = qword_1000C9C40;
  if (!qword_1000C9C40)
  {
    sub_10001AD28(&qword_1000C9C18);
    sub_100065610();
    sub_100009170(&qword_1000C9C80, &qword_1000C95A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9C40);
  }
  return result;
}

unint64_t sub_100065610()
{
  unint64_t result = qword_1000C9C48;
  if (!qword_1000C9C48)
  {
    sub_10001AD28(&qword_1000C9C10);
    sub_1000656B0();
    sub_100009170(&qword_1000C8E18, &qword_1000C8E20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9C48);
  }
  return result;
}

unint64_t sub_1000656B0()
{
  unint64_t result = qword_1000C9C50;
  if (!qword_1000C9C50)
  {
    sub_10001AD28(&qword_1000C9C08);
    sub_100065750();
    sub_100009170(&qword_1000C9C70, &qword_1000C9C78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9C50);
  }
  return result;
}

unint64_t sub_100065750()
{
  unint64_t result = qword_1000C9C58;
  if (!qword_1000C9C58)
  {
    sub_10001AD28(&qword_1000C9318);
    sub_1000657F0();
    sub_100009170(&qword_1000C9C68, &qword_1000C9320);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9C58);
  }
  return result;
}

unint64_t sub_1000657F0()
{
  unint64_t result = qword_1000C9C60;
  if (!qword_1000C9C60)
  {
    sub_10001AD28(&qword_1000C8E48);
    sub_10006589C(&qword_1000C9288, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9C60);
  }
  return result;
}

uint64_t sub_10006589C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1000658E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10001C28C(&qword_1000C9CC8);
  uint64_t result = (void *)__chkstk_darwin(v2 - 8);
  int v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC4Tips21TipsTOCViewController_canIncreaseViewCount) == 1)
  {
    uint64_t result = (void *)(*(uint64_t (**)(void *))((swift_isaMask & *v0) + 0xB0))(result);
    if (result)
    {
      uint64_t v6 = (void *)TPSAnalyticsViewMethodAppForeground;

      uint64_t v7 = OBJC_IVAR____TtC4Tips21TipsTOCViewController_analyticsLoggingTask;
      if (*(void *)((char *)v0 + OBJC_IVAR____TtC4Tips21TipsTOCViewController_analyticsLoggingTask))
      {
        swift_retain();
        Task.cancel()();
        swift_release();
      }
      uint64_t v8 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
      type metadata accessor for MainActor();
      uint64_t v9 = v0;
      id v10 = v6;
      uint64_t v11 = static MainActor.shared.getter();
      uint64_t v12 = (void *)swift_allocObject();
      void v12[2] = v11;
      v12[3] = &protocol witness table for MainActor;
      v12[4] = v9;
      v12[5] = v10;
      *(void *)((char *)v1 + v7) = sub_1000667FC((uint64_t)v5, (uint64_t)&unk_1000C9D08, (uint64_t)v12);
      return (void *)swift_release();
    }
  }
  return result;
}

void *sub_100065AB8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10001C28C(&qword_1000C9CC8);
  uint64_t result = (void *)__chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC4Tips21TipsTOCViewController_canIncreaseViewCount) == 1)
  {
    uint64_t result = (void *)(*(uint64_t (**)(void *))((swift_isaMask & *v1) + 0xB0))(result);
    if (result)
    {

      uint64_t v8 = OBJC_IVAR____TtC4Tips21TipsTOCViewController_analyticsLoggingTask;
      if (*(void *)((char *)v1 + OBJC_IVAR____TtC4Tips21TipsTOCViewController_analyticsLoggingTask))
      {
        swift_retain();
        Task.cancel()();
        swift_release();
      }
      uint64_t v9 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
      type metadata accessor for MainActor();
      id v10 = v1;
      id v11 = a1;
      uint64_t v12 = static MainActor.shared.getter();
      uint64_t v13 = (void *)swift_allocObject();
      v13[2] = v12;
      v13[3] = &protocol witness table for MainActor;
      v13[4] = v10;
      v13[5] = v11;
      *(void *)((char *)v2 + v8) = sub_1000667FC((uint64_t)v7, (uint64_t)&unk_1000C9CD8, (uint64_t)v13);
      return (void *)swift_release();
    }
  }
  return result;
}

void sub_100065C84(void *a1)
{
  if (*(void *)((char *)v1 + OBJC_IVAR____TtC4Tips21TipsTOCViewController_analyticsLoggingTask))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC4Tips21TipsTOCViewController_canIncreaseViewCount) == 1)
  {
    uint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xB0))();
    if (v3)
    {
      uint64_t v4 = (void *)v3;
      id v5 = TPSAnalyticsContentStyleLandingPage;
      NSString v6 = [v4 identifier];
      if (!v6)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v6 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      NSString v7 = [a1 viewMethod];
      if (!v7)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v7 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      uint64_t v8 = self;
      id v9 = [v1 traitCollection];
      id v10 = [v8 analyticsViewModeForTraitCollection:v9];

      id v11 = [v8 eventWithContentID:v5 collectionID:v6 correlationID:0 clientConditionID:0 viewMethod:v7 viewMode:v10];
      [v11 log];
    }
  }
}

id sub_100065F20()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0 name:UIApplicationWillEnterForegroundNotification object:0];
  [v1 removeObserver:v0 name:UIApplicationDidEnterBackgroundNotification object:0];

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for TipsTOCViewController();
  return [super dealloc];
}

void sub_100066148(char a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for TipsTOCViewController();
  [super viewWillAppear:a1 & 1];
  v1[OBJC_IVAR____TtC4Tips21TipsTOCViewController_canIncreaseViewCount] = 1;
  uint64_t v3 = OBJC_IVAR____TtC4Tips21TipsTOCViewController_preferredViewMethod;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC4Tips21TipsTOCViewController_preferredViewMethod];
  if (v4)
  {
    id v5 = v4;
    sub_100065AB8(v5);
    NSString v6 = *(void **)&v1[v3];
    *(void *)&v1[v3] = 0;
  }
  else
  {
    sub_100065AB8(TPSAnalyticsViewMethodViewAppear);
  }
}

uint64_t sub_1000663C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = type metadata accessor for ContinuousClock();
  v5[4] = v6;
  v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[7] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[8] = v8;
  v5[9] = v7;
  return _swift_task_switch(sub_1000664BC, v8, v7);
}

uint64_t sub_1000664BC()
{
  uint64_t v1 = static Duration.seconds(_:)();
  uint64_t v3 = v2;
  ContinuousClock.init()();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1000C9CF0 + dword_1000C9CF0);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000665A0;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_1000665A0()
{
  uint64_t v3 = (void *)*v1;
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v4 = v2[6];
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[4];
  if (v0)
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = v3[8];
    uint64_t v8 = v3[9];
    id v9 = sub_1000674AC;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = v3[8];
    uint64_t v8 = v3[9];
    id v9 = sub_100066734;
  }
  return _swift_task_switch(v9, v7, v8);
}

uint64_t sub_100066734()
{
  swift_release();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [self proxyWithViewMethod:v1];

  sub_100065C84(v2);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1000667FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100066ABC(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t type metadata accessor for TipsTOCViewController()
{
  return self;
}

uint64_t sub_1000669FC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000674B0;
  return sub_1000663C8(a1, v4, v5, v7, v6);
}

uint64_t sub_100066ABC(uint64_t a1)
{
  uint64_t v2 = sub_10001C28C(&qword_1000C9CC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100066B1C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100066BF8;
  return v6(a1);
}

uint64_t sub_100066BF8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  NSString v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100066CF0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100066D28(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100066DE0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000C9CE0 + dword_1000C9CE0);
  return v6(a1, v4);
}

uint64_t sub_100066DE0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100066ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = type metadata accessor for ContinuousClock.Instant();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return _swift_task_switch(sub_100066FD8, 0, 0);
}

uint64_t sub_100066FD8()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = type metadata accessor for ContinuousClock();
  uint64_t v5 = sub_1000673A0(&qword_1000C9CF8, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  dispatch thunk of Clock.now.getter();
  sub_1000673A0(&qword_1000C9D00, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  void *v7 = v0;
  v7[1] = sub_100067178;
  uint64_t v8 = v0[11];
  return dispatch thunk of Clock.sleep(until:tolerance:)(v8, v0 + 2, v4, v5);
}

uint64_t sub_100067178()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return _swift_task_switch(sub_100067334, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_100067334()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000673A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000673EC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100066DE0;
  return sub_1000663C8(a1, v4, v5, v7, v6);
}

uint64_t sub_1000674B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000674D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000674EC()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100067510()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_1000687E0(v6, qword_1000CD1E8);
  sub_1000524A4(v6, (uint64_t)qword_1000CD1E8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_1000676F0()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_100067728()
{
  uint64_t v0 = sub_10001C28C(&qword_1000C9D80);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10001C28C(&qword_1000C9D88);
  __chkstk_darwin(v1);
  sub_10001C38C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x80000001000A1070;
  v2._countAndFlagsBits = 0xD00000000000002DLL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10001C28C(&qword_1000C96D0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1000678B8(uint64_t a1, uint64_t a2)
{
  v2[28] = a1;
  v2[29] = a2;
  sub_10001C28C(&qword_1000C8710);
  v2[30] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for IntentSystemContext.Source();
  v2[31] = v3;
  v2[32] = *(void *)(v3 - 8);
  v2[33] = swift_task_alloc();
  v2[34] = sub_10001C28C(&qword_1000C9D60);
  v2[35] = swift_task_alloc();
  sub_10001C28C(&qword_1000C9D68);
  v2[36] = swift_task_alloc();
  v2[37] = swift_task_alloc();
  v2[38] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for IntentSystemContext();
  v2[39] = v4;
  v2[40] = *(void *)(v4 - 8);
  v2[41] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v2[42] = v5;
  v2[43] = *(void *)(v5 - 8);
  v2[44] = swift_task_alloc();
  return _swift_task_switch(sub_100067AE0, 0, 0);
}

uint64_t sub_100067AE0()
{
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 296);
  uint64_t v50 = *(void *)(v0 + 304);
  uint64_t v54 = *(void *)(v0 + 280);
  uint64_t v51 = *(void *)(v0 + 312);
  uint64_t v52 = *(void *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 248);
  uint64_t v4 = *(void *)(v0 + 256);
  uint64_t v6 = *(void *)(v0 + 232);
  uint64_t v7 = self;
  IntentParameter.wrappedValue.getter();
  swift_bridgeObjectRelease();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [v7 URLWithTipIdentifier:0 collectionIdentifier:v8 referrer:TPSAnalyticsLaunchTypeAppShortcuts];

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10005E764((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v0 + 216) = v6;
  sub_10001C38C();
  AppIntent.systemContext.getter();
  IntentSystemContext.source.getter();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v51);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v3, enum case for IntentSystemContext.Source.spotlight(_:), v5);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v3, 0, 1, v5);
  uint64_t v10 = v54 + *(int *)(v52 + 48);
  sub_1000686F4(v50, v54);
  sub_1000686F4(v3, v10);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v11(v54, 1, v5) != 1)
  {
    uint64_t v14 = *(void *)(v0 + 248);
    sub_1000686F4(*(void *)(v0 + 280), *(void *)(v0 + 288));
    int v15 = v11(v10, 1, v14);
    uint64_t v17 = *(void *)(v0 + 296);
    uint64_t v16 = *(void *)(v0 + 304);
    uint64_t v18 = *(void *)(v0 + 288);
    if (v15 != 1)
    {
      uint64_t v53 = *(void *)(v0 + 280);
      uint64_t v21 = *(void *)(v0 + 256);
      uint64_t v22 = *(void *)(v0 + 264);
      uint64_t v23 = *(void *)(v0 + 248);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v22, v10, v23);
      sub_10006875C();
      char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v25(v22, v23);
      sub_1000143B4(v17, &qword_1000C9D68);
      sub_1000143B4(v16, &qword_1000C9D68);
      v25(v18, v23);
      sub_1000143B4(v53, &qword_1000C9D68);
      if ((v24 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    uint64_t v20 = *(void *)(v0 + 248);
    uint64_t v19 = *(void *)(v0 + 256);
    sub_1000143B4(*(void *)(v0 + 296), &qword_1000C9D68);
    sub_1000143B4(v16, &qword_1000C9D68);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
LABEL_6:
    sub_1000143B4(*(void *)(v0 + 280), &qword_1000C9D60);
    goto LABEL_9;
  }
  uint64_t v12 = *(void *)(v0 + 304);
  uint64_t v13 = *(void *)(v0 + 248);
  sub_1000143B4(*(void *)(v0 + 296), &qword_1000C9D68);
  sub_1000143B4(v12, &qword_1000C9D68);
  if (v11(v10, 1, v13) != 1) {
    goto LABEL_6;
  }
  sub_1000143B4(*(void *)(v0 + 280), &qword_1000C9D68);
LABEL_8:
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v27;
  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 176) = &type metadata for String;
  *(void *)(v0 + 152) = v29;
  *(void *)(v0 + 160) = v30;
  sub_10001C9D4((_OWORD *)(v0 + 152), (_OWORD *)(v0 + 184));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100054A80((_OWORD *)(v0 + 184), v26, v28, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_9:
  if ([self allowsPersistentSiri]) {
    uint64_t v32 = AFDeviceSupportsSystemAssistantExperience();
  }
  else {
    uint64_t v32 = 0;
  }
  id v33 = [self clientBundleIdentifier];
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = *(void *)(v0 + 344);
    uint64_t v36 = *(void *)(v0 + 352);
    uint64_t v37 = *(void *)(v0 + 336);
    uint64_t v38 = *(void *)(v0 + 240);
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v38, v36, v37);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v38, 0, 1, v37);
    NSString v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v40.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v38, 1, v37) == 1)
    {
      uint64_t v42 = 0;
    }
    else
    {
      uint64_t v43 = *(void *)(v0 + 336);
      uint64_t v44 = *(void *)(v0 + 344);
      uint64_t v45 = *(void *)(v0 + 240);
      URL._bridgeToObjectiveC()(v41);
      uint64_t v42 = v46;
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v43);
    }
    id v47 = [objc_allocWithZone((Class)INCAppLaunchRequest) initWithBundleIdentifier:v39 options:v40.super.isa URL:v42 userActivity:0 retainsSiri:v32];
    *(void *)(v0 + 360) = v47;

    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 376;
    *(void *)(v0 + 24) = sub_100068134;
    uint64_t v48 = swift_continuation_init();
    *(void *)(v0 + 80) = _NSConcreteStackBlock;
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_100068444;
    *(void *)(v0 + 104) = &unk_1000B8DB0;
    *(void *)(v0 + 112) = v48;
    [v47 performWithCompletionHandler:v0 + 80];
    id v33 = (id)(v0 + 16);
  }
  else
  {
    __break(1u);
  }
  return _swift_continuation_await(v33);
}

uint64_t sub_100068134()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 368) = v1;
  if (v1) {
    uint64_t v2 = sub_100068344;
  }
  else {
    uint64_t v2 = sub_100068244;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100068244()
{
  uint64_t v1 = v0[44];
  uint64_t v2 = (void *)v0[45];
  uint64_t v3 = v0[42];
  uint64_t v4 = v0[43];
  static IntentResult.result<>()();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100068344()
{
  uint64_t v1 = (void *)v0[45];
  uint64_t v3 = v0[43];
  uint64_t v2 = v0[44];
  uint64_t v4 = v0[42];
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100068444(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_10001C28C(&qword_1000C9D78);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    **(unsigned char **)(*(void *)(v3 + 64) + 40) = a2;
    return _swift_continuation_throwingResume(v3);
  }
}

uint64_t sub_1000684F8@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000C7FD0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_1000524A4(v2, (uint64_t)qword_1000CD1E8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1000685B4(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100066DE0;
  return sub_1000678B8(a1, v4);
}

uint64_t sub_100068654@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000067E0();
  *a1 = result;
  return result;
}

uint64_t sub_10006867C()
{
  return sub_100009170(&qword_1000C9D28, &qword_1000C9D30);
}

uint64_t sub_1000686B8()
{
  return sub_100009170(&qword_1000C9D38, &qword_1000C9D40);
}

uint64_t sub_1000686F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001C28C(&qword_1000C9D68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10006875C()
{
  unint64_t result = qword_1000C9D70;
  if (!qword_1000C9D70)
  {
    type metadata accessor for IntentSystemContext.Source();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000C9D70);
  }
  return result;
}

uint64_t sub_1000687B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t *sub_1000687E0(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void *assignWithCopy for CollectionListView(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = (void *)a2[1];
  uint64_t v4 = (void *)a1[1];
  a1[1] = v3;
  id v5 = v3;

  return a1;
}

void *assignWithTake for CollectionListView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  uint64_t v4 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v3;

  return a1;
}

uint64_t sub_1000688B8(void *a1, uint64_t a2, void *a3)
{
  sub_10001C28C(&qword_1000C8540);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10008F1C0;
  *(void *)(v6 + 32) = a1;
  specialized Array._endMutation()();
  swift_getKeyPath();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  id v8 = a1;
  id v9 = a3;
  sub_10001C28C(&qword_1000C8B10);
  type metadata accessor for CollectionListItemView();
  sub_100009170(&qword_1000C9EE8, &qword_1000C8B10);
  sub_1000171A4(&qword_1000C9EA8, (void (*)(uint64_t))type metadata accessor for CollectionListItemView);
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100068A28@<X0>(void **a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C9410);
  __chkstk_darwin(v6 - 8);
  id v8 = (uint64_t *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v9 = *a1;
  *id v8 = swift_getKeyPath();
  sub_10001C28C(&qword_1000C92C8);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v11 = (int *)type metadata accessor for UserGuideListItemView();
  *(void *)(a3 + v11[5]) = KeyPath;
  sub_10001C28C(&qword_1000C81D0);
  swift_storeEnumTagMultiPayload();
  sub_100017278((uint64_t)v8, a3, &qword_1000C9410);
  uint64_t v12 = (uint64_t *)(a3 + v11[6]);
  type metadata accessor for CollectionListViewModel();
  sub_1000171A4(&qword_1000C8550, (void (*)(uint64_t))type metadata accessor for CollectionListViewModel);
  id v13 = a2;
  id v14 = v9;
  uint64_t result = ObservedObject.init(wrappedValue:)();
  *uint64_t v12 = result;
  v12[1] = v16;
  *(void *)(a3 + v11[7]) = v14;
  return result;
}

uint64_t sub_100068BB4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100068C04()
{
  return EnvironmentValues.sizeCategory.getter();
}

uint64_t sub_100068C28(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContentSizeCategory();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.sizeCategory.setter();
}

uint64_t sub_100068CF0()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_100068D14()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_100068D38(uint64_t a1)
{
  uint64_t v2 = sub_10001C28C(&qword_1000C8CD0);
  __chkstk_darwin(v2 - 8);
  sub_100016FEC(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1000C8CD0);
  return EnvironmentValues.textCase.setter();
}

void sub_100068DE0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_100068DF8()
{
  return EnvironmentValues.sizeCategory.getter();
}

uint64_t sub_100068E28@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100068E5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100068E90()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_100068EC0()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_100068EF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = UserGuide.identifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_100068F24(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_100068F3C(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 setIdentifier:v3];
}

uint64_t sub_100068FA8()
{
  return sub_1000688B8(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_100068FB4(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  id v5 = *(id *)(v2 + 24);
  id v6 = v4;

  sub_1000573D8(v5, v6, a2);
}

void *TPSLastDisplayedContent.tipId.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___TPSLastDisplayedContent_tipId);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void TPSLastDisplayedContent.tipId.setter(void *a1)
{
}

uint64_t (*TPSLastDisplayedContent.tipId.modify())()
{
  return j_j__swift_endAccess;
}

id sub_1000691DC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = (id *)(a1 + *a3);
  swift_beginAccess();
  return *v3;
}

void *TPSLastDisplayedContent.collectionId.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___TPSLastDisplayedContent_collectionId);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_100069280(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v5 = (void **)(a1 + *a4);
  swift_beginAccess();
  id v6 = *v5;
  *id v5 = a3;
  id v7 = a3;
}

void TPSLastDisplayedContent.collectionId.setter(void *a1)
{
}

void sub_1000692E8(void *a1, void *a2)
{
  uint64_t v4 = (void **)(v2 + *a2);
  swift_beginAccess();
  id v5 = *v4;
  *uint64_t v4 = a1;
}

uint64_t (*TPSLastDisplayedContent.collectionId.modify())()
{
  return j__swift_endAccess;
}

id TPSLastDisplayedContent.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

id TPSLastDisplayedContent.init()()
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR___TPSLastDisplayedContent_tipId] = 0;
  *(void *)&v0[OBJC_IVAR___TPSLastDisplayedContent_collectionId] = 0;
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return [super init];
}

id TPSLastDisplayedContent.__allocating_init(collectionId:tipId:)(void *a1, void *a2)
{
  id v5 = (char *)objc_allocWithZone(v2);
  id v6 = (void **)&v5[OBJC_IVAR___TPSLastDisplayedContent_tipId];
  *(void *)&v5[OBJC_IVAR___TPSLastDisplayedContent_tipId] = 0;
  id v7 = (void **)&v5[OBJC_IVAR___TPSLastDisplayedContent_collectionId];
  *(void *)&v5[OBJC_IVAR___TPSLastDisplayedContent_collectionId] = 0;
  swift_beginAccess();
  id v8 = *v7;
  void *v7 = a1;
  id v9 = v5;
  id v10 = a1;

  swift_beginAccess();
  uint64_t v11 = *v6;
  *id v6 = a2;
  id v12 = a2;

  v15.receiver = v9;
  v15.super_class = v2;
  id v13 = [super init];

  return v13;
}

id TPSLastDisplayedContent.init(collectionId:tipId:)(void *a1, void *a2)
{
  id v4 = sub_100069B54(a1, a2);

  return v4;
}

uint64_t TPSLastDisplayedContent.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v20 = 40;
  unint64_t v21 = 0xE100000000000000;
  uint64_t v2 = (id *)(v0 + OBJC_IVAR___TPSLastDisplayedContent_collectionId);
  swift_beginAccess();
  if (*v2)
  {
    id v3 = *v2;
    _StringGuts.grow(_:)(16);
    swift_bridgeObjectRelease();
    strcpy((char *)&v19, "collectionId: ");
    HIBYTE(v19._object) = -18;
    id v4 = [v3 description];
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v7 = v6;

    v8._countAndFlagsBits = v5;
    v8._object = v7;
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    String.append(_:)(v19);

    swift_bridgeObjectRelease();
  }
  id v9 = (id *)(v1 + OBJC_IVAR___TPSLastDisplayedContent_tipId);
  swift_beginAccess();
  if (*v9)
  {
    id v10 = *v9;
    id v11 = [v10 description];
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v14 = v13;

    v15._countAndFlagsBits = v12;
    v15._object = v14;
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    v16._countAndFlagsBits = 0x203A6449706974;
    v16._object = (void *)0xE700000000000000;
    String.append(_:)(v16);

    swift_bridgeObjectRelease();
  }
  v17._countAndFlagsBits = 41;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  return v20;
}

id TPSLastDisplayedContent.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  [super dealloc];
}

uint64_t static TPSLastDisplayedContent.supportsSecureCoding.getter()
{
  return 1;
}

Swift::Void __swiftcall TPSLastDisplayedContent.encode(with:)(NSCoder with)
{
  id v3 = (id *)(v1 + OBJC_IVAR___TPSLastDisplayedContent_collectionId);
  swift_beginAccess();
  id v4 = *v3;
  NSString v5 = String._bridgeToObjectiveC()();
  [(objc_class *)with.super.isa encodeObject:v4 forKey:v5];

  id v6 = (id *)(v1 + OBJC_IVAR___TPSLastDisplayedContent_tipId);
  swift_beginAccess();
  id v7 = *v6;
  NSString v8 = String._bridgeToObjectiveC()();
  [(objc_class *)with.super.isa encodeObject:v7 forKey:v8];
}

id TPSLastDisplayedContent.__allocating_init(coder:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithCoder:a1];

  return v3;
}

id TPSLastDisplayedContent.init(coder:)(void *a1)
{
  objc_super v2 = v1;
  sub_100069C2C();
  uint64_t v4 = NSCoder.decodeObject<A>(of:forKey:)();
  if (!v4) {
    goto LABEL_5;
  }
  NSString v5 = (void *)v4;
  id v6 = NSCoder.decodeObject<A>(of:forKey:)();
  if (!v6)
  {

LABEL_5:
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  id v7 = v6;
  id v8 = v5;
  id v9 = [v2 initWithCollectionId:v8 tipId:v7];

  return v9;
}

id sub_100069B54(void *a1, void *a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  id v6 = (void **)&v2[OBJC_IVAR___TPSLastDisplayedContent_tipId];
  *(void *)&v2[OBJC_IVAR___TPSLastDisplayedContent_tipId] = 0;
  id v7 = (void **)&v2[OBJC_IVAR___TPSLastDisplayedContent_collectionId];
  *(void *)&v2[OBJC_IVAR___TPSLastDisplayedContent_collectionId] = 0;
  swift_beginAccess();
  id v8 = *v7;
  void *v7 = a1;
  id v9 = v2;
  id v10 = a1;

  swift_beginAccess();
  id v11 = *v6;
  *id v6 = a2;
  id v12 = a2;

  v14.receiver = v9;
  v14.super_class = ObjectType;
  return [super init];
}

unint64_t sub_100069C2C()
{
  unint64_t result = qword_1000CA020;
  if (!qword_1000CA020)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000CA020);
  }
  return result;
}

uint64_t type metadata accessor for TPSLastDisplayedContent()
{
  return self;
}

uint64_t sub_100069C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  id v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1000CA270 + dword_1000CA270);
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *id v6 = v3;
  v6[1] = sub_100069D4C;
  return v8(a2, a3);
}

uint64_t sub_100069D4C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  id v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_100069E5C(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1000CA268 + dword_1000CA268);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100069F04;
  return v5(a1);
}

uint64_t sub_100069F04(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_10006A004(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10001E1F4();
  *uint64_t v5 = v2;
  v5[1] = sub_100066DE0;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_10006A0B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_100066DE0;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

uint64_t sub_10006A170()
{
  uint64_t v0 = sub_10001C28C(&qword_1000CA250);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_1000687E0(v10, qword_1000CD200);
  sub_1000524A4(v10, (uint64_t)qword_1000CD200);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_10006A448@<X0>(uint64_t a1@<X8>)
{
  if (qword_1000C7FD8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_1000524A4(v2, (uint64_t)qword_1000CD200);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_10006A4F4()
{
  unint64_t result = qword_1000CA1C8;
  if (!qword_1000CA1C8)
  {
    sub_10001AD28(&qword_1000CA1D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA1C8);
  }
  return result;
}

uint64_t sub_10006A550(uint64_t a1)
{
  unint64_t v2 = sub_10001E00C();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_10006A59C(uint64_t a1)
{
  unint64_t v2 = sub_10001DF10();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_10006A5E8()
{
  v1[2] = v0;
  v1[3] = type metadata accessor for MainActor();
  v1[4] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[5] = v3;
  v1[6] = v2;
  return _swift_task_switch(sub_10006A684, v3, v2);
}

uint64_t sub_10006A684()
{
  uint64_t v1 = *(void **)(v0[2] + OBJC_IVAR____TtC4Tips14ContentFetcher_appController);
  if ([v1 contentHasLoaded])
  {
    swift_release();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = v0[2];
    [v1 addDelegate:v4];
    v0[7] = static MainActor.shared.getter();
    uint64_t v5 = swift_task_alloc();
    v0[8] = v5;
    *(void *)(v5 + 16) = v4;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[9] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_10006A7FC;
    return withCheckedContinuation<A>(isolation:function:_:)();
  }
}

uint64_t sub_10006A7FC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_10006A95C, v3, v2);
}

uint64_t sub_10006A95C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_10006A9BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TipsLog();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001C28C(&qword_1000CA240);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10001C28C(&qword_1000CA238);
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a1, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  uint64_t v13 = a2 + OBJC_IVAR____TtC4Tips14ContentFetcher_continuation;
  swift_beginAccess();
  sub_10006B2A8((uint64_t)v10, v13);
  swift_endAccess();
  objc_super v14 = *(void **)(a2 + OBJC_IVAR____TtC4Tips14ContentFetcher_appController);
  LODWORD(v13) = [v14 updatingContent];
  static TipsLog.default.getter();
  Swift::String v15 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
  logDebug(_:_:)();
  if (v13) {
    return (id)(*v15)(v7, v4);
  }
  (*v15)(v7, v4);
  return [v14 updateContent];
}

id sub_10006AC30(void *a1, char a2)
{
  uint64_t v3 = v2;
  id v22 = a1;
  uint64_t v5 = sub_10001C28C(&qword_1000CA238);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001C28C(&qword_1000CA240);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  objc_super v14 = (char *)&v21 - v13;
  uint64_t v15 = type metadata accessor for TipsLog();
  uint64_t v16 = *(void *)(v15 - 8);
  id result = (id)__chkstk_darwin(v15);
  Swift::String v19 = (char *)&v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    static TipsLog.default.getter();
    logDebug(_:_:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    uint64_t v20 = v3 + OBJC_IVAR____TtC4Tips14ContentFetcher_continuation;
    swift_beginAccess();
    sub_100016FEC(v20, (uint64_t)v14, &qword_1000CA240);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5))
    {
      sub_1000143B4((uint64_t)v14, &qword_1000CA240);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v14, v5);
      sub_1000143B4((uint64_t)v14, &qword_1000CA240);
      CheckedContinuation.resume(returning:)();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v12, 1, 1, v5);
    swift_beginAccess();
    sub_10006B2A8((uint64_t)v12, v20);
    swift_endAccess();
    return [v22 removeDelegate:v3];
  }
  return result;
}

id sub_10006AFE0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContentFetcher();
  return [super dealloc];
}

uint64_t sub_10006B060()
{
  return type metadata accessor for ContentFetcher();
}

uint64_t type metadata accessor for ContentFetcher()
{
  uint64_t result = qword_1000CA218;
  if (!qword_1000CA218) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10006B0B4()
{
  sub_10006B154();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10006B154()
{
  if (!qword_1000CA230)
  {
    sub_10001AD28(&qword_1000CA238);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000CA230);
    }
  }
}

void *assignWithCopy for TipCollection(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for TipCollection(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for TipCollection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_10006B2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001C28C(&qword_1000CA240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_10006B310(uint64_t a1)
{
  return sub_10006A9BC(a1, *(void *)(v1 + 16));
}

uint64_t sub_10006B318(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    unint64_t v2 = 0;
    uint64_t v3 = result + 56;
    uint64_t v17 = -(uint64_t)v1;
    uint64_t v15 = result + 56;
    unint64_t v16 = *(void *)(result + 16);
    do
    {
      if (v2 <= v1) {
        unint64_t v4 = v1;
      }
      else {
        unint64_t v4 = v2;
      }
      uint64_t v5 = -(uint64_t)v4;
      for (uint64_t i = (uint64_t *)(v3 + 32 * v2++); ; i += 4)
      {
        if (v5 + v2 == 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v7 = *(i - 3);
        uint64_t v8 = *(i - 2);
        uint64_t v9 = *(i - 1);
        uint64_t v10 = *i;
        sub_100016F88();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (StringProtocol.localizedCaseInsensitiveContains<A>(_:)()) {
          break;
        }
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        ++v2;
        if (v17 + v2 == 1) {
          return (uint64_t)_swiftEmptyArrayStorage;
        }
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_10001BC5C(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      uint64_t v3 = v15;
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      unint64_t v13 = v12 + 1;
      if (v12 >= v11 >> 1)
      {
        uint64_t result = (uint64_t)sub_10001BC5C((char *)(v11 > 1), v12 + 1, 1);
        unint64_t v13 = v12 + 1;
      }
      _swiftEmptyArrayStorage[2] = v13;
      objc_super v14 = &_swiftEmptyArrayStorage[4 * v12];
      v14[4] = v7;
      v14[5] = v8;
      void v14[6] = v9;
      v14[7] = v10;
      unint64_t v1 = v16;
    }
    while (v17 + v2);
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

uint64_t sub_10006B4DC()
{
  return _swift_task_switch(sub_10006B4F8, 0, 0);
}

uint64_t sub_10006B4F8()
{
  type metadata accessor for TPSUIAppController();
  unint64_t v1 = (void *)static TPSUIAppController.shared.getter();
  v0[2].receiver = v1;
  unint64_t v2 = (objc_class *)type metadata accessor for ContentFetcher();
  uint64_t v3 = (char *)objc_allocWithZone(v2);
  unint64_t v4 = &v3[OBJC_IVAR____TtC4Tips14ContentFetcher_continuation];
  uint64_t v5 = sub_10001C28C(&qword_1000CA238);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(void *)&v3[OBJC_IVAR____TtC4Tips14ContentFetcher_appController] = v1;
  v0[1].receiver = v3;
  v0[1].super_class = v2;
  id v6 = v1;
  v0[2].super_class = (Class)objc_msgSendSuper2(v0 + 1, "init");
  uint64_t v7 = (void *)swift_task_alloc();
  v0[3].receiver = v7;
  void *v7 = v0;
  v7[1] = sub_10006B640;
  return sub_10006A5E8();
}

uint64_t sub_10006B640()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10006B73C, 0, 0);
}

char *sub_10006B73C()
{
  id v1 = [*(id *)(v0 + 32) tipCollections];
  if (v1)
  {
    unint64_t v2 = v1;
    sub_10001BC1C();
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v3 >> 62)) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_4;
    }
LABEL_18:
    char v24 = *(void **)(v0 + 40);

    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  unint64_t v3 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
    goto LABEL_17;
  }
LABEL_3:
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    goto LABEL_18;
  }
LABEL_4:
  uint64_t result = sub_10001BC5C(0, v4 & ~(v4 >> 63), 0);
  if (v4 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v6 = 0;
  uint64_t v26 = v0;
  unint64_t v27 = v3 & 0xC000000000000001;
  unint64_t v7 = v3;
  uint64_t v8 = v4;
  do
  {
    if (v27) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v9 = *(id *)(v3 + 8 * v6 + 32);
    }
    uint64_t v10 = v9;
    id v11 = [v9 identifier:v26];
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;

    id v15 = [v10 featuredTitle];
    if (v15)
    {
      unint64_t v16 = v15;
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v19 = v18;
    }
    else
    {

      uint64_t v17 = 0;
      unint64_t v19 = 0xE000000000000000;
    }
    unint64_t v21 = _swiftEmptyArrayStorage[2];
    unint64_t v20 = _swiftEmptyArrayStorage[3];
    if (v21 >= v20 >> 1) {
      sub_10001BC5C((char *)(v20 > 1), v21 + 1, 1);
    }
    ++v6;
    _swiftEmptyArrayStorage[2] = v21 + 1;
    id v22 = &_swiftEmptyArrayStorage[4 * v21];
    v22[4] = v12;
    v22[5] = v14;
    v22[6] = v17;
    v22[7] = v19;
    unint64_t v3 = v7;
  }
  while (v8 != v6);
  uint64_t v0 = v26;
  uint64_t v23 = *(void **)(v26 + 40);

  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v25 = *(uint64_t (**)(void *))(v0 + 8);
  return (char *)v25(_swiftEmptyArrayStorage);
}

uint64_t sub_10006B9AC(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = type metadata accessor for TipsLog();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v6 = (uint64_t (__cdecl *)())((char *)&dword_1000CA258 + dword_1000CA258);
  uint64_t v4 = (void *)swift_task_alloc();
  v2[7] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10006BAAC;
  return v6();
}

uint64_t sub_10006BAAC(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 72) = a1;
    return _swift_task_switch(sub_10006BC04, 0, 0);
  }
}

uint64_t sub_10006BC04()
{
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v5 = (void *)v0[3];
  uint64_t v4 = v0[4];
  uint64_t v6 = v0[2];
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_10006B318(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static TipsLog.default.getter();
  _StringGuts.grow(_:)(49);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = v6;
  v8._object = v5;
  String.append(_:)(v8);
  v9._countAndFlagsBits = 0x7275746572202D20;
  v9._object = (void *)0xED000020676E696ELL;
  String.append(_:)(v9);
  v10._countAndFlagsBits = Array.description.getter();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  log(_:_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  id v11 = (uint64_t (*)(uint64_t))v0[1];
  return v11(v7);
}

uint64_t sub_10006BD8C(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for TipsLog();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return _swift_task_switch(sub_10006BE4C, 0, 0);
}

char *sub_10006BE4C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    type metadata accessor for TPSUIAppController();
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = (void *)static TPSUIAppController.shared.getter();
      NSString v5 = String._bridgeToObjectiveC()();
      id v6 = [v4 collectionForIdentifier:v5];

      swift_bridgeObjectRelease();
      if (v6)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
LABEL_9:
      uint64_t v7 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v7) {
        goto LABEL_24;
      }
      goto LABEL_10;
    }
  }
  else if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_24;
  }
LABEL_10:
  uint64_t result = sub_10001BC5C(0, v7 & ~(v7 >> 63), 0);
  if (v7 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v9 = 0;
  do
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v10 = (id)_swiftEmptyArrayStorage[v9 + 4];
    }
    id v11 = v10;
    id v12 = [v10 identifier];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    id v16 = [v11 featuredTitle];
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v20 = v19;
    }
    else
    {

      uint64_t v18 = 0;
      unint64_t v20 = 0xE000000000000000;
    }
    unint64_t v22 = _swiftEmptyArrayStorage[2];
    unint64_t v21 = _swiftEmptyArrayStorage[3];
    if (v22 >= v21 >> 1) {
      sub_10001BC5C((char *)(v21 > 1), v22 + 1, 1);
    }
    ++v9;
    _swiftEmptyArrayStorage[2] = v22 + 1;
    uint64_t v23 = &_swiftEmptyArrayStorage[4 * v22];
    v23[4] = v13;
    v23[5] = v15;
    v23[6] = v18;
    v23[7] = v20;
  }
  while (v7 != v9);
LABEL_24:
  swift_bridgeObjectRelease();
  uint64_t v25 = v31[4];
  uint64_t v24 = v31[5];
  uint64_t v26 = v31[3];
  static TipsLog.default.getter();
  _StringGuts.grow(_:)(49);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = Array.description.getter();
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  v28._countAndFlagsBits = 0x7275746572202D20;
  v28._object = (void *)0xED000020676E696ELL;
  String.append(_:)(v28);
  v29._countAndFlagsBits = Array.description.getter();
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  log(_:_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(void *))v31[1];
  return (char *)v30(_swiftEmptyArrayStorage);
}

uint64_t *sub_10006C248(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_10001C28C(&qword_1000C81C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_10001C28C(&qword_1000C81D8);
        memcpy(v4, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
      }
    }
    else
    {
      *uint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = a3[5];
    id v12 = (uint64_t *)((char *)v4 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *id v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[6];
    uint64_t v16 = a3[7];
    uint64_t v17 = (uint64_t *)((char *)v4 + v15);
    uint64_t v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v20 = *v18;
    unint64_t v19 = (void *)v18[1];
    void *v17 = v20;
    v17[1] = v19;
    unint64_t v21 = (uint64_t *)((char *)v4 + v16);
    unint64_t v22 = (uint64_t *)((char *)a2 + v16);
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
    void v21[2] = v22[2];
    id v24 = v19;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

void *sub_10006C4D8(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C81C8);
    sub_10001C28C(&qword_1000C81C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = sub_10001C28C(&qword_1000C81D8);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    sub_1000143B4((uint64_t)a1 + v9, &qword_1000C81D0);
    sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  uint64_t v16 = (void *)v15[1];
  uint64_t v17 = (void *)v14[1];
  v14[1] = v16;
  id v18 = v16;

  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)((char *)a1 + v19);
  unint64_t v21 = (char *)a2 + v19;
  void *v20 = *(void *)((char *)a2 + v19);
  v20[1] = *(void *)((char *)a2 + v19 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[2] = *((void *)v21 + 2);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_10006C770(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C81C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_10001C28C(&qword_1000C81D8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  uint64_t v15 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((void *)v16 + 2) = *((void *)v17 + 2);
  return a1;
}

char *sub_10006C9A8(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C81C8);
    uint64_t v6 = sub_10001C28C(&qword_1000C81C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_10001C28C(&qword_1000C81D8);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v10 = a3[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    sub_1000143B4((uint64_t)&a1[v10], &qword_1000C81D0);
    uint64_t v13 = sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for ColorScheme();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v19 = *(void *)v17;
  uint64_t v18 = *((void *)v17 + 1);
  uint64_t v20 = (void *)*((void *)v16 + 1);
  *(void *)uint64_t v16 = v19;
  *((void *)v16 + 1) = v18;

  uint64_t v21 = a3[7];
  unint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)unint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  *((void *)v22 + 2) = *((void *)v23 + 2);
  swift_release();
  return a1;
}

uint64_t sub_10006CC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006CC40);
}

uint64_t sub_10006CC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C81C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_10001C28C(&qword_1000C8658);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_10006CD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006CD74);
}

uint64_t sub_10006CD74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_10001C28C(&qword_1000C81C0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_10001C28C(&qword_1000C8658);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_10006CE90()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006CEAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v70 = a1;
  uint64_t v65 = type metadata accessor for LocalCoordinateSpace();
  __chkstk_darwin(v65);
  uint64_t v63 = (char *)v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DragGesture();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v66 = v3;
  uint64_t v67 = v4;
  __chkstk_darwin(v3);
  uint64_t v62 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001C28C(&qword_1000CA350);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v68 = v6;
  uint64_t v69 = v7;
  __chkstk_darwin(v6);
  uint64_t v64 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SearchResultsView();
  uint64_t v49 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v49 + 64);
  uint64_t v11 = v9 - 8;
  uint64_t v59 = v9 - 8;
  __chkstk_darwin(v9 - 8);
  uint64_t v71 = (uint64_t)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for KeyEquivalent();
  uint64_t v52 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v13 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10001C28C(&qword_1000CA358);
  uint64_t v50 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10001C28C(&qword_1000CA360);
  uint64_t v57 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v18 = (char *)v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_10001C28C(&qword_1000CA368);
  uint64_t v19 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v21 = (char *)v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_10001C28C(&qword_1000CA370);
  __chkstk_darwin(v53);
  uint64_t v51 = (char *)v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_10001C28C(&qword_1000CA378);
  uint64_t v60 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v58 = (char *)v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(int *)(v11 + 36);
  uint64_t v25 = v1;
  uint64_t v26 = (long long *)(v1 + v24);
  uint64_t v27 = *((void *)v26 + 2);
  long long v73 = *v26;
  uint64_t v74 = v27;
  sub_10001C28C(&qword_1000C9028);
  State.projectedValue.getter();
  uint64_t v72 = v1;
  uint64_t v48 = v1;
  sub_10001C28C(&qword_1000CA380);
  sub_100009170(&qword_1000CA388, &qword_1000CA380);
  List.init(selection:content:)();
  static KeyEquivalent.return.getter();
  uint64_t v28 = v71;
  sub_10006F074(v25, v71);
  uint64_t v29 = *(unsigned __int8 *)(v49 + 80);
  uint64_t v30 = (v29 + 16) & ~v29;
  uint64_t v49 = v30 + v10;
  v47[1] = v29 | 7;
  uint64_t v31 = swift_allocObject();
  sub_10006F0DC(v28, v31 + v30);
  uint64_t v32 = sub_100009170(&qword_1000CA390, &qword_1000CA358);
  View.onKeyPress(_:action:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v13, v54);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v16, v14);
  id v33 = [self systemBackgroundColor];
  *(void *)&long long v73 = Color.init(_:)();
  uint64_t v75 = v14;
  uint64_t v76 = v32;
  swift_getOpaqueTypeConformance2();
  uint64_t v34 = v55;
  View.scrollContentBackground<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v18, v34);
  LOBYTE(v34) = static Edge.Set.all.getter();
  uint64_t v35 = (uint64_t)v51;
  uint64_t v36 = v56;
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v51, v21, v56);
  *(unsigned char *)(v35 + *(int *)(v53 + 36)) = v34;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v36);
  static CoordinateSpaceProtocol<>.local.getter();
  uint64_t v37 = v62;
  DragGesture.init<A>(minimumDistance:coordinateSpace:)();
  uint64_t v38 = v71;
  sub_10006F074(v48, v71);
  uint64_t v39 = swift_allocObject();
  sub_10006F0DC(v38, v39 + v30);
  sub_10006F984(&qword_1000CA398, (void (*)(uint64_t))&type metadata accessor for DragGesture);
  sub_10006F984(&qword_1000CA3A0, (void (*)(uint64_t))&type metadata accessor for DragGesture.Value);
  NSDictionary v40 = v64;
  uint64_t v41 = v66;
  Gesture<>.onChanged(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v37, v41);
  static GestureMask.all.getter();
  sub_10006F224();
  sub_100009170(&qword_1000CA3B0, &qword_1000CA350);
  uint64_t v42 = v58;
  uint64_t v43 = v68;
  View.simultaneousGesture<A>(_:including:)();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v40, v43);
  sub_1000143B4(v35, &qword_1000CA370);
  uint64_t v44 = sub_10001C28C(&qword_1000CA320);
  uint64_t v45 = v70;
  sub_100014660(&qword_1000C81D0, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, v70 + *(int *)(v44 + 52));
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v45, v42, v61);
}

uint64_t sub_10006D8D4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SearchResultsView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1 + *(int *)(__chkstk_darwin(v4) + 24);
  id v9 = *(id *)(v8 + 8);
  unint64_t v10 = dispatch thunk of TipNavigationViewModel.tips.getter();
  if (v10 >> 62) {
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }

  swift_bridgeObjectRelease();
  uint64_t v48 = v5;
  if (v11)
  {
    uint64_t v12 = a1 + *(int *)(v4 + 28);
    uint64_t v13 = *(void *)(v12 + 16);
    long long v60 = *(_OWORD *)v12;
    uint64_t v61 = v13;
    id v14 = v9;
    sub_10001C28C(&qword_1000C9028);
    State.projectedValue.getter();
    uint64_t v58 = v63;
    uint64_t v59 = v62;
    uint64_t v56 = v65;
    uint64_t v57 = v64;
    sub_10006F074(a1, (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v55 = swift_allocObject();
    sub_10006F0DC((uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v55 + v15);
    type metadata accessor for SearchResultsViewModel();
    sub_10006F984((unint64_t *)&qword_1000C81B0, (void (*)(uint64_t))type metadata accessor for SearchResultsViewModel);
    uint64_t v16 = ObservedObject.init(wrappedValue:)();
    uint64_t v53 = v17;
    uint64_t v54 = v16;
    id v9 = *(id *)(v8 + 8);
    uint64_t v52 = 1;
    uint64_t v50 = sub_10006F7CC;
    uint64_t v51 = 3;
  }
  else
  {
    uint64_t v53 = 0;
    uint64_t v54 = 0;
    uint64_t v58 = 0;
    uint64_t v59 = 0;
    uint64_t v56 = 0;
    uint64_t v57 = 0;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    uint64_t v50 = 0;
    uint64_t v55 = 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v18 = v9;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v19 = dispatch thunk of SearchResultsModel.hasTopics.getter();

  swift_release();
  if (v19)
  {
    uint64_t v20 = *(void **)(v8 + 8);
    uint64_t v21 = a1 + *(int *)(v4 + 28);
    uint64_t v22 = *(void *)(v21 + 16);
    long long v60 = *(_OWORD *)v21;
    uint64_t v61 = v22;
    id v23 = v20;
    sub_10001C28C(&qword_1000C9028);
    State.projectedValue.getter();
    uint64_t v25 = v62;
    uint64_t v24 = v63;
    uint64_t v26 = v64;
    uint64_t v49 = v65;
    sub_10006F074(a1, (uint64_t)v7);
    unint64_t v27 = (*(unsigned __int8 *)(v48 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
    uint64_t v48 = swift_allocObject();
    sub_10006F0DC((uint64_t)v7, v48 + v27);
    type metadata accessor for SearchResultsViewModel();
    sub_10006F984((unint64_t *)&qword_1000C81B0, (void (*)(uint64_t))type metadata accessor for SearchResultsViewModel);
    uint64_t v28 = ObservedObject.init(wrappedValue:)();
    uint64_t v30 = v29;
    uint64_t v31 = sub_10006F7CC;
    uint64_t v32 = 1;
    uint64_t v33 = 3;
  }
  else
  {
    uint64_t v28 = 0;
    uint64_t v30 = 0;
    uint64_t v25 = 0;
    uint64_t v24 = 0;
    uint64_t v26 = 0;
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v33 = 0;
    uint64_t v32 = 0;
    uint64_t v31 = 0;
  }
  uint64_t v35 = v53;
  uint64_t v34 = v54;
  *a2 = v54;
  a2[1] = v35;
  uint64_t v53 = v35;
  uint64_t v54 = v34;
  uint64_t v36 = v59;
  a2[2] = v59;
  uint64_t v59 = v36;
  uint64_t v37 = v58;
  a2[3] = v58;
  uint64_t v58 = v37;
  uint64_t v38 = v57;
  a2[4] = v57;
  uint64_t v57 = v38;
  uint64_t v40 = v55;
  uint64_t v39 = v56;
  a2[5] = v56;
  uint64_t v55 = v40;
  uint64_t v56 = v39;
  uint64_t v41 = v51;
  a2[6] = v51;
  uint64_t v51 = v41;
  uint64_t v42 = v52;
  a2[7] = v52;
  uint64_t v52 = v42;
  uint64_t v44 = v49;
  uint64_t v43 = v50;
  a2[8] = v50;
  a2[9] = v40;
  uint64_t v50 = v43;
  a2[10] = v28;
  a2[11] = v30;
  a2[12] = v25;
  a2[13] = v24;
  a2[14] = v26;
  a2[15] = v44;
  a2[16] = v33;
  a2[17] = v32;
  uint64_t v45 = v48;
  a2[18] = v31;
  a2[19] = v45;
  uint64_t v46 = v28;
  sub_10006F7D0(v34, v35);
  sub_10006F7D0(v46, v30);
  sub_10006F83C(v46, v30);
  return sub_10006F83C(v54, v53);
}

uint64_t sub_10006DDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v46 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v42 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  __chkstk_darwin(v6);
  uint64_t v41 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SearchResultsView();
  uint64_t v9 = v8 - 8;
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v40 + 64);
  __chkstk_darwin(v8);
  uint64_t v39 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v47 = v11;
  uint64_t v48 = v12;
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v38 = (char *)&v37 - v16;
  uint64_t v17 = type metadata accessor for SearchResult.Item.Category();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(int *)(v9 + 36);
  uint64_t v37 = v2;
  uint64_t v22 = (long long *)(v2 + v21);
  id v23 = (uint64_t (*)(uint64_t))*((void *)v22 + 2);
  long long aBlock = *v22;
  uint64_t v50 = v23;
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  swift_bridgeObjectRetain();
  sub_10001C28C(&qword_1000C9028);
  State.wrappedValue.setter();
  uint64_t v24 = *(void **)(v2 + *(int *)(v9 + 32) + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v25 = v24;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  dispatch thunk of SearchResultsModel.updateSelection(to:)();

  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  sub_100012E0C();
  uint64_t v26 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  unint64_t v27 = v38;
  + infix(_:_:)();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v48 + 8);
  v48 += 8;
  v28(v15, v47);
  uint64_t v29 = v39;
  sub_10006F074(v37, v39);
  unint64_t v30 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  uint64_t v31 = swift_allocObject();
  sub_10006F0DC(v29, v31 + v30);
  uint64_t v52 = sub_10006F924;
  uint64_t v53 = v31;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v50 = sub_10000374C;
  uint64_t v51 = &unk_1000B9140;
  uint64_t v32 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v33 = v41;
  static DispatchQoS.unspecified.getter();
  *(void *)&long long aBlock = _swiftEmptyArrayStorage;
  sub_10006F984((unint64_t *)&qword_1000C84E8, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10001C28C(&qword_1000C84F0);
  sub_100009170((unint64_t *)&qword_1000C84F8, &qword_1000C84F0);
  uint64_t v34 = v42;
  uint64_t v35 = v43;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v32);

  (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v35);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v33, v45);
  return ((uint64_t (*)(char *, uint64_t))v28)(v27, v47);
}

uint64_t sub_10006E380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SearchResult.Item.Category();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SearchResultsView();
  uint64_t v9 = (long long *)(a1 + *(int *)(v8 + 28));
  uint64_t v10 = *((void *)v9 + 2);
  long long v22 = *v9;
  uint64_t v23 = v10;
  sub_10001C28C(&qword_1000C9028);
  State.wrappedValue.getter();
  if (v25)
  {
    uint64_t v11 = a1 + *(int *)(v8 + 24);
    uint64_t v21 = a2;
    uint64_t v12 = *(void **)(v11 + 8);
    swift_getKeyPath();
    swift_getKeyPath();
    id v13 = v12;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of SearchResultsModel.updateSelection(to:)();

    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v14 = *((void *)v9 + 2);
    long long v22 = *v9;
    uint64_t v23 = v14;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    State.wrappedValue.setter();
    uint64_t v15 = enum case for KeyPress.Result.handled(_:);
    uint64_t v16 = type metadata accessor for KeyPress.Result();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v21, v15, v16);
  }
  else
  {
    uint64_t v18 = enum case for KeyPress.Result.ignored(_:);
    uint64_t v19 = type metadata accessor for KeyPress.Result();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(a2, v18, v19);
  }
}

uint64_t sub_10006E5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a2 + *(int *)(type metadata accessor for SearchResultsView() + 24) + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v4 = (void (*)(uint64_t))dispatch thunk of SearchResultsModel.searchResultScrollHandler.getter();

  uint64_t result = swift_release();
  if (v4)
  {
    v4(result);
    return sub_100005470((uint64_t)v4);
  }
  return result;
}

double sub_10006E698@<D0>(uint64_t a1@<X8>)
{
  id v3 = *(void **)(v1 + *(int *)(type metadata accessor for SearchResultsView() + 24) + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v3;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v5 = dispatch thunk of SearchResultsModel.hasStartedSearch.getter();

  swift_release();
  if (v5)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v6 = v4;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    dispatch thunk of SearchResultsModel.searchTerm.getter();

    swift_release();
  }
  sub_10006F018();
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v8;
  *(_OWORD *)a1 = v8;
  *(unsigned char *)(a1 + 16) = v9;
  return result;
}

uint64_t sub_10006E800@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v28 = sub_10001C28C(&qword_1000CA318);
  __chkstk_darwin(v28);
  id v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for PlainListStyle();
  uint64_t v25 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  char v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10001C28C(&qword_1000CA320);
  __chkstk_darwin(v26);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10001C28C(&qword_1000CA328);
  uint64_t v8 = *(void *)(v27 - 8);
  uint64_t v9 = __chkstk_darwin(v27);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v13 = (char *)&v25 - v12;
  uint64_t v14 = *(void **)(v1 + *(int *)(type metadata accessor for SearchResultsView() + 24) + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v15 = v14;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v16 = dispatch thunk of SearchResultsModel.hasSearchResults.getter();

  swift_release();
  if (v16)
  {
    sub_10006CEAC((uint64_t)v7);
    PlainListStyle.init()();
    uint64_t v17 = sub_100009170(&qword_1000CA338, &qword_1000CA320);
    uint64_t v18 = v26;
    uint64_t v19 = v29;
    View.listStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v19);
    sub_1000143B4((uint64_t)v7, &qword_1000CA320);
    uint64_t v20 = v11;
    uint64_t v21 = v27;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v20, v27);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v3, v13, v21);
    swift_storeEnumTagMultiPayload();
    sub_10001C28C(&qword_1000CA330);
    *(void *)&long long v31 = v18;
    *((void *)&v31 + 1) = v19;
    uint64_t v32 = v17;
    uint64_t v33 = &protocol witness table for PlainListStyle;
    swift_getOpaqueTypeConformance2();
    sub_10006EF9C();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v21);
  }
  else
  {
    sub_10006E698((uint64_t)&v31);
    char v23 = v32;
    *(_OWORD *)id v3 = v31;
    v3[16] = v23;
    swift_storeEnumTagMultiPayload();
    sub_10001C28C(&qword_1000CA330);
    uint64_t v24 = sub_100009170(&qword_1000CA338, &qword_1000CA320);
    *(void *)&long long v31 = v26;
    *((void *)&v31 + 1) = v29;
    uint64_t v32 = v24;
    uint64_t v33 = &protocol witness table for PlainListStyle;
    swift_getOpaqueTypeConformance2();
    sub_10006EF9C();
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_10006ECA8()
{
  return State.wrappedValue.setter();
}

uint64_t sub_10006ED14@<X0>(uint64_t a1@<X8>)
{
  return sub_100014660(&qword_1000C92C8, (uint64_t (*)(void))&type metadata accessor for ContentSizeCategory, 0xD000000000000013, 0x80000001000A1390, a1);
}

uint64_t sub_10006ED4C@<X0>(uint64_t a1@<X8>)
{
  return sub_100014660(&qword_1000C99B8, (uint64_t (*)(void))&type metadata accessor for BackgroundProminence, 0xD000000000000014, 0x80000001000A13B0, a1);
}

uint64_t sub_10006ED84@<X0>(uint64_t a1@<X8>)
{
  return sub_100014660(&qword_1000CA3D0, (uint64_t (*)(void))&type metadata accessor for ScenePhase, 0x616850656E656353, 0xEA00000000006573, a1);
}

uint64_t sub_10006EDBC(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = static os_log_type_t.fault.getter();
  uint64_t v9 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    *(void *)(v10 + 4) = sub_10006F36C(1819242306, 0xE400000000000000, &v12);
    _os_log_impl((void *)&_mh_execute_header, v9, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  sub_10006FAC4(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v13;
}

unint64_t sub_10006EF9C()
{
  unint64_t result = qword_1000CA340;
  if (!qword_1000CA340)
  {
    sub_10001AD28(&qword_1000CA330);
    sub_10006F018();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA340);
  }
  return result;
}

unint64_t sub_10006F018()
{
  unint64_t result = qword_1000CA348;
  if (!qword_1000CA348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA348);
  }
  return result;
}

uint64_t sub_10006F06C@<X0>(void *a1@<X8>)
{
  return sub_10006D8D4(*(void *)(v1 + 16), a1);
}

uint64_t sub_10006F074(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchResultsView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006F0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchResultsView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006F140@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for SearchResultsView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10006E380(v4, a1);
}

uint64_t sub_10006F1B4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SearchResultsView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10006E5D4(a1, v4);
}

unint64_t sub_10006F224()
{
  unint64_t result = qword_1000CA3A8;
  if (!qword_1000CA3A8)
  {
    sub_10001AD28(&qword_1000CA370);
    sub_10001AD28(&qword_1000CA360);
    sub_10001AD28(&qword_1000CA358);
    sub_100009170(&qword_1000CA390, &qword_1000CA358);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100009170(&qword_1000C9020, &qword_1000C9010);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA3A8);
  }
  return result;
}

unint64_t sub_10006F36C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  unint64_t v6 = sub_10006F440(v12, 0, 0, 1, a1, a2);
  unint64_t v7 = v12[0];
  if (v6)
  {
    unint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_100055024((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_100055024((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10003AB18((uint64_t)v12);
  return v7;
}

unint64_t sub_10006F440(unint64_t *a1, void *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v10 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v10)
        {
          v12[0] = a5;
          v12[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          memcpy(__dst, v12, HIBYTE(a6) & 0xF);
          unint64_t result = 0;
          *((unsigned char *)__dst + v10) = 0;
          *a1 = (unint64_t)__dst;
          return result;
        }
      }
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    unint64_t result = (unint64_t)sub_10006F540(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    unint64_t result = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    unint64_t result = _StringObject.sharedUTF8.getter();
    if (!result)
    {
      __break(1u);
      return result;
    }
  }
  *a1 = result;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

char *sub_10006F540(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (char *)sub_10006F5D8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10006F6DC(0, *((void *)v2 + 2) + 1, 1, v2);
  }
  unint64_t v4 = *((void *)v2 + 2);
  unint64_t v3 = *((void *)v2 + 3);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10006F6DC((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v4 + 1;
  v2[v4 + 32] = 0;
  return v2;
}

void *sub_10006F5D8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_9;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_10006F674(v2, 0);
      unint64_t result = (void *)_StringGuts.copyUTF8(into:)();
      if (v5) {
        break;
      }
      if (result == (void *)v2) {
        return v3;
      }
      __break(1u);
LABEL_9:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_10006F674(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_10001C28C(&qword_1000CA3B8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_10006F6DC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10001C28C(&qword_1000CA3B8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unsigned __int8 v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10006F7D0(uint64_t a1, void *a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    id v3 = a2;
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10006F83C(uint64_t a1, void *a2)
{
  if (a2)
  {

    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10006F8AC(uint64_t a1, uint64_t a2)
{
  return sub_10006DDC4(a1, a2);
}

uint64_t sub_10006F924()
{
  type metadata accessor for SearchResultsView();

  return sub_10006ECA8();
}

uint64_t sub_10006F984(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10006F9D0()
{
  unint64_t result = qword_1000CA3C0;
  if (!qword_1000CA3C0)
  {
    sub_10001AD28(&qword_1000CA3C8);
    sub_10001AD28(&qword_1000CA320);
    type metadata accessor for PlainListStyle();
    sub_100009170(&qword_1000CA338, &qword_1000CA320);
    swift_getOpaqueTypeConformance2();
    sub_10006EF9C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA3C0);
  }
  return result;
}

uint64_t sub_10006FAC4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10006FAD0(uint64_t a1)
{
  uint64_t v43 = a1;
  uint64_t v1 = sub_10001C28C(&qword_1000CA3F0);
  uint64_t v44 = *(void *)(v1 - 8);
  uint64_t v45 = v1;
  __chkstk_darwin(v1);
  id v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001C28C(&qword_1000CA3F8);
  __chkstk_darwin(v4);
  sub_10001C38C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x20656D20776F6853;
  v5._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  unint64_t v46 = sub_10001C534();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x7370697420;
  v6._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v41 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v7 = v45;
  int64_t v8 = *(void (**)(char *, uint64_t))(v44 + 8);
  v44 += 8;
  v8(v3, v45);
  uint64_t v42 = v8;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0xD000000000000011;
  v9._object = (void *)0x80000001000A1450;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v40 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v8(v3, v7);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0xD000000000000010;
  v11._object = (void *)0x80000001000A1470;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v42(v3, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._object = (void *)0x80000001000A1490;
  v13._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v38 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  id v15 = v42;
  v42(v3, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0x7069742077656956;
  v16._object = (void *)0xEE0020726F662073;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v15(v3, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._countAndFlagsBits = 0x2077656956;
  v18._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._countAndFlagsBits = 0x7370697420;
  v19._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v20 = v45;
  v42(v3, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._object = (void *)0x80000001000A14B0;
  v21._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v23 = v20;
  uint64_t v24 = v20;
  uint64_t v25 = v42;
  v42(v3, v23);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v26._countAndFlagsBits = 0x49206F6420776F48;
  v26._object = (void *)0xED00002065737520;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v27._countAndFlagsBits = 63;
  v27._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v25(v3, v24);
  sub_10001C28C(&qword_1000CA400);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_10008FAC0;
  uint64_t v30 = v40;
  *(void *)(v29 + 32) = v41;
  *(void *)(v29 + 40) = v30;
  uint64_t v31 = v38;
  *(void *)(v29 + 48) = v39;
  *(void *)(v29 + 56) = v31;
  uint64_t v32 = v36;
  *(void *)(v29 + 64) = v37;
  *(void *)(v29 + 72) = v32;
  *(void *)(v29 + 80) = v35;
  *(void *)(v29 + 88) = v28;
  uint64_t v33 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_10007033C()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_10007038C()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_10001C534();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_10001C38C();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10001C28C(&qword_1000CA3E0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10008CF30;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1000704F4()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v8 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_10001C28C(&qword_1000CA3E8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10008FAD0;
  *(void *)(v9 + 32) = v0;
  *(void *)(v9 + 40) = v1;
  *(void *)(v9 + 48) = v2;
  *(void *)(v9 + 56) = v3;
  *(void *)(v9 + 64) = v4;
  *(void *)(v9 + 72) = v5;
  *(void *)(v9 + 80) = v6;
  *(void *)(v9 + 88) = v7;
  *(void *)(v9 + 96) = v8;
  uint64_t v10 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10007068C()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = sub_1000067E0();
  sub_10001C38C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v4 = static _AssistantIntent.Builder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10001C28C(&qword_1000CA3D8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10008CF30;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.Builder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

void *sub_1000707EC()
{
  return &_swiftEmptyArrayStorage;
}

ValueMetadata *type metadata accessor for CollectionAssistantIntent()
{
  return &type metadata for CollectionAssistantIntent;
}

double sub_100070808@<D0>(uint64_t a1@<X8>)
{
  IntentParameter.wrappedValue.getter();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_100070850@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = swift_getKeyPath();
  sub_10001C28C(&qword_1000CA3D0);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (int *)type metadata accessor for UserGuideSearchResultItemView();
  Text.Measurements.init()();
  uint64_t v7 = v6[10];
  State.init(wrappedValue:)();
  *(_OWORD *)((char *)a3 + v7) = v43;
  uint64_t v8 = v6[11];
  State.init(wrappedValue:)();
  *(_OWORD *)((char *)a3 + v8) = v43;
  uint64_t v9 = (char *)a3 + v6[12];
  type metadata accessor for CGSize(0);
  State.init(wrappedValue:)();
  *(_OWORD *)uint64_t v9 = v43;
  *((void *)v9 + 2) = v44;
  uint64_t v10 = (uint64_t *)((char *)a3 + v6[5]);
  type metadata accessor for SearchResultsViewModel();
  sub_100073340((unint64_t *)&qword_1000C81B0, (void (*)(uint64_t))type metadata accessor for SearchResultsViewModel);
  id v41 = a1;
  *uint64_t v10 = ObservedObject.init(wrappedValue:)();
  v10[1] = v11;
  uint64_t v42 = v6;
  *(uint64_t *)((char *)a3 + v6[6]) = (uint64_t)a2;
  id v12 = a2;
  dispatch thunk of UserGuideTopic.title.getter();
  sub_100016F88();
  uint64_t v13 = Text.init<A>(_:)();
  uint64_t v15 = v14;
  char v17 = v16;
  if (qword_1000C7FE0 != -1) {
    swift_once();
  }
  uint64_t v18 = Text.font(_:)();
  uint64_t v20 = v19;
  char v22 = v21;
  uint64_t v24 = v23;
  sub_100016FDC(v13, v15, v17 & 1);
  swift_bridgeObjectRelease();
  uint64_t v25 = (char *)a3 + v42[8];
  *(void *)uint64_t v25 = v18;
  *((void *)v25 + 1) = v20;
  v25[16] = v22 & 1;
  *((void *)v25 + 3) = v24;
  dispatch thunk of UserGuideTopic.body.getter();
  uint64_t v26 = Text.init<A>(_:)();
  uint64_t v28 = v27;
  char v30 = v29;
  if (qword_1000C7FE8 != -1) {
    swift_once();
  }
  char v31 = v30 & 1;
  uint64_t v32 = Text.font(_:)();
  uint64_t v34 = v33;
  char v36 = v35;
  uint64_t v38 = v37;

  sub_100016FDC(v26, v28, v31);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v40 = (char *)a3 + v42[9];
  *(void *)uint64_t v40 = v32;
  *((void *)v40 + 1) = v34;
  v40[16] = v36 & 1;
  *((void *)v40 + 3) = v38;
  return result;
}

uint64_t sub_100070B90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v2 = type metadata accessor for ScenePhase();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v55 = v2;
  uint64_t v56 = v3;
  __chkstk_darwin(v2);
  uint64_t v50 = (uint64_t)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UserGuideSearchResultItemView();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10001C28C(&qword_1000CA530);
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = v9;
  __chkstk_darwin(v9);
  uint64_t v44 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_10001C28C(&qword_1000CA508);
  __chkstk_darwin(v45);
  uint64_t v58 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001C28C(&qword_1000CA500);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v51 = v12;
  uint64_t v52 = v13;
  __chkstk_darwin(v12);
  uint64_t v48 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10001C28C(&qword_1000C9358);
  uint64_t v53 = *(void *)(v15 - 8);
  uint64_t v54 = v15;
  __chkstk_darwin(v15);
  uint64_t v49 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = static HorizontalAlignment.leading.getter();
  sub_100071404(v1, (uint64_t)v61);
  *(_OWORD *)((char *)&v63[8] + 7) = v61[8];
  *(_OWORD *)((char *)&v63[9] + 7) = v61[9];
  *(_OWORD *)((char *)&v63[10] + 7) = v61[10];
  *(void *)((char *)&v63[11] + 7) = v62;
  *(_OWORD *)((char *)&v63[4] + 7) = v61[4];
  *(_OWORD *)((char *)&v63[5] + 7) = v61[5];
  *(_OWORD *)((char *)&v63[6] + 7) = v61[6];
  *(_OWORD *)((char *)&v63[7] + 7) = v61[7];
  *(_OWORD *)((char *)v63 + 7) = v61[0];
  *(_OWORD *)((char *)&v63[1] + 7) = v61[1];
  *(_OWORD *)((char *)&v63[2] + 7) = v61[2];
  *(_OWORD *)((char *)&v63[3] + 7) = v61[3];
  *(_OWORD *)((char *)&v60[8] + 1) = v63[8];
  *(_OWORD *)((char *)&v60[9] + 1) = v63[9];
  *(_OWORD *)((char *)&v60[10] + 1) = v63[10];
  v60[11] = *(_OWORD *)((char *)&v63[10] + 15);
  *(_OWORD *)((char *)&v60[4] + 1) = v63[4];
  *(_OWORD *)((char *)&v60[5] + 1) = v63[5];
  *(_OWORD *)((char *)&v60[6] + 1) = v63[6];
  *(_OWORD *)((char *)&v60[7] + 1) = v63[7];
  *(_OWORD *)((char *)v60 + 1) = v63[0];
  *(_OWORD *)((char *)&v60[1] + 1) = v63[1];
  *(_OWORD *)((char *)&v60[2] + 1) = v63[2];
  char v64 = 0;
  *(void *)&long long v59 = v17;
  *((void *)&v59 + 1) = 0x4008000000000000;
  LOBYTE(v60[0]) = 0;
  *(_OWORD *)((char *)&v60[3] + 1) = v63[3];
  sub_100037B0C(v1, (uint64_t)v8);
  uint64_t v18 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = (v18 + 16) & ~v18;
  v43[1] = v18 | 7;
  v43[2] = v19 + v7;
  uint64_t v20 = swift_allocObject();
  sub_10007338C((uint64_t)v8, v20 + v19);
  sub_10001C28C(&qword_1000CA518);
  sub_1000732E4();
  char v21 = v44;
  View.readSize(onChange:)();
  swift_release();
  v65[10] = v60[9];
  v65[11] = v60[10];
  v65[12] = v60[11];
  v65[6] = v60[5];
  v65[7] = v60[6];
  v65[8] = v60[7];
  v65[9] = v60[8];
  v65[2] = v60[1];
  v65[3] = v60[2];
  v65[4] = v60[3];
  v65[5] = v60[4];
  v65[0] = v59;
  v65[1] = v60[0];
  sub_100073468((uint64_t)v65);
  uint64_t v22 = v1;
  sub_100037B0C(v1, (uint64_t)v8);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = (uint64_t)v8;
  sub_10007338C((uint64_t)v8, v23 + v19);
  uint64_t v26 = v46;
  uint64_t v25 = v47;
  uint64_t v27 = v58;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v58, v21, v47);
  uint64_t v28 = v45;
  char v29 = &v27[*(int *)(v45 + 36)];
  *(void *)char v29 = sub_100073558;
  *((void *)v29 + 1) = v23;
  *((void *)v29 + 2) = 0;
  *((void *)v29 + 3) = 0;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v25);
  uint64_t v30 = v50;
  sub_10006ED84(v50);
  sub_100037B0C(v22, v24);
  uint64_t v31 = swift_allocObject();
  sub_10007338C(v24, v31 + v19);
  unint64_t v32 = sub_100073234();
  uint64_t v33 = sub_100073340(&qword_1000CA528, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
  uint64_t v34 = v48;
  uint64_t v35 = v55;
  uint64_t v36 = (uint64_t)v58;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v30, v35);
  sub_1000143B4(v36, &qword_1000CA508);
  sub_1000735B4();
  static UIFont.defaultHyphenationFactor.getter();
  *(void *)&long long v59 = v28;
  *((void *)&v59 + 1) = v35;
  *(void *)&v60[0] = v32;
  *((void *)&v60[0] + 1) = v33;
  swift_getOpaqueTypeConformance2();
  uint64_t v37 = v49;
  uint64_t v38 = v51;
  View.hyphenationFactor(_:)();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v38);
  uint64_t v39 = static Alignment.leading.getter();
  double v41 = sub_10004CD98(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v57, 0.0, 1, INFINITY, 0, v39, v40);
  return (*(uint64_t (**)(char *, uint64_t, double))(v53 + 8))(v37, v54, v41);
}

uint64_t sub_1000712AC()
{
  uint64_t v0 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10001C28C(&qword_1000C9360);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100070B90((uint64_t)v6);
  static AccessibilityChildBehavior.combine.getter();
  sub_1000730F8();
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_1000143B4((uint64_t)v6, &qword_1000C9360);
}

uint64_t sub_100071404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = type metadata accessor for Font.Leading();
  uint64_t v67 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v66 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (int *)type metadata accessor for UserGuideSearchResultItemView();
  uint64_t v6 = a1 + v5[8];
  uint64_t v7 = *(void *)v6;
  uint64_t v8 = *(void *)(v6 + 8);
  int v9 = *(unsigned __int8 *)(v6 + 16);
  uint64_t v10 = *(void *)(v6 + 24);
  long long v87 = *(_OWORD *)(a1 + v5[10]);
  uint64_t v11 = v7;
  uint64_t v82 = v8;
  int v81 = v9;
  sub_100037CB8(v7, v8, v9);
  uint64_t v84 = v10;
  swift_bridgeObjectRetain();
  sub_10001C28C((uint64_t *)&unk_1000CA540);
  State.wrappedValue.getter();
  uint64_t v70 = v88;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = 0;
  uint64_t v13 = *(unsigned char **)(a1 + v5[5] + 8);
  if ((v13[qword_1000CD1A0] & 1) == 0) {
    uint64_t v12 = static Color.primary.getter();
  }
  uint64_t v79 = v12;
  uint64_t v83 = swift_getKeyPath();
  uint64_t v14 = a1 + v5[9];
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *(void *)(v14 + 8);
  int v17 = *(unsigned __int8 *)(v14 + 16);
  uint64_t v18 = *(void *)(v14 + 24);
  long long v87 = *(_OWORD *)(a1 + v5[11]);
  uint64_t v78 = v18;
  swift_bridgeObjectRetain();
  uint64_t v77 = v15;
  uint64_t v72 = v16;
  int v71 = v17;
  sub_100037CB8(v15, v16, v17);
  State.wrappedValue.getter();
  uint64_t v69 = v88;
  uint64_t v76 = swift_getKeyPath();
  uint64_t v19 = self;
  id v20 = [v19 secondaryLabelColor];
  uint64_t v75 = Color.init(_:)();
  uint64_t v74 = swift_getKeyPath();
  id v21 = [v13 footerForTopic:*(void *)(a1 + v5[6])];
  uint64_t v73 = v11;
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;

    *(void *)&long long v87 = v23;
    *((void *)&v87 + 1) = v25;
    sub_100016F88();
    uint64_t v26 = Text.init<A>(_:)();
    uint64_t v28 = v27;
    char v30 = v29 & 1;
    id v31 = [v19 tertiaryLabelColor];
    Color.init(_:)();
    uint64_t v32 = Text.foregroundColor(_:)();
    uint64_t v34 = v33;
    char v36 = v35;
    uint64_t v65 = v37;
    swift_release();
    char v38 = v36 & 1;
    sub_100016FDC(v26, v28, v30);
    swift_bridgeObjectRelease();
    static Font.footnote.getter();
    uint64_t v39 = v67;
    uint64_t v40 = v66;
    uint64_t v41 = v68;
    (*(void (**)(char *, void, uint64_t))(v67 + 104))(v66, enum case for Font.Leading.tight(_:), v68);
    Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
    uint64_t v68 = Text.font(_:)();
    uint64_t v67 = v42;
    char v44 = v43;
    uint64_t v66 = v45;
    swift_release();
    uint64_t v46 = v44 & 1;
    uint64_t v47 = v34;
    uint64_t v11 = v73;
    sub_100016FDC(v32, v47, v38);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v68 = 0;
    uint64_t v67 = 0;
    uint64_t v46 = 0;
    uint64_t v66 = 0;
  }
  char v48 = v81;
  LOBYTE(v87) = v81;
  LOBYTE(v88) = 0;
  char v49 = v71;
  char v86 = v71;
  char v85 = 0;
  uint64_t v50 = v11;
  uint64_t v51 = v82;
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v51;
  uint64_t v52 = v51;
  *(unsigned char *)(a2 + 16) = v48;
  char v53 = v48;
  uint64_t v54 = v79;
  uint64_t v55 = KeyPath;
  *(void *)(a2 + 24) = v84;
  *(void *)(a2 + 32) = v55;
  *(void *)(a2 + 40) = v70;
  *(unsigned char *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = v83;
  *(void *)(a2 + 64) = v54;
  *(_WORD *)(a2 + 72) = 256;
  uint64_t v57 = v77;
  uint64_t v56 = v78;
  uint64_t v58 = v72;
  *(void *)(a2 + 80) = v77;
  *(void *)(a2 + 88) = v58;
  *(unsigned char *)(a2 + 96) = v49;
  uint64_t v59 = v76;
  *(void *)(a2 + 104) = v56;
  *(void *)(a2 + 112) = v59;
  *(void *)(a2 + 120) = v69;
  *(unsigned char *)(a2 + 128) = 0;
  uint64_t v60 = v75;
  *(void *)(a2 + 136) = v74;
  *(void *)(a2 + 144) = v60;
  uint64_t v61 = v68;
  uint64_t v62 = v67;
  *(void *)(a2 + 152) = v68;
  *(void *)(a2 + 160) = v62;
  uint64_t v63 = (uint64_t)v66;
  *(void *)(a2 + 168) = v46;
  *(void *)(a2 + 176) = v63;
  sub_100037CB8(v50, v52, v53);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100037CB8(v57, v58, v49);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000172DC(v61, v62, v46, v63);
  sub_100017320(v61, v62, v46, v63);
  sub_100016FDC(v77, v58, v49);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100016FDC(v73, v82, v81);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000719AC(double a1, double a2)
{
  return sub_100071A5C(a1, a2);
}

uint64_t sub_100071A5C(double a1, double a2)
{
  uint64_t v5 = sub_10001C28C(&qword_1000CA538);
  uint64_t result = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 != 0.0 || a2 != 0.0)
  {
    uint64_t v9 = type metadata accessor for UserGuideSearchResultItemView();
    uint64_t v22 = v2 + *(int *)(v9 + 28);
    if (qword_1000C7FF0 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Text.WritingMode();
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    v11(v8, 1, 1, v10);
    Text.Measurements.size(of:in:writingMode:)();
    double v13 = v12;
    sub_1000143B4((uint64_t)v8, &qword_1000CA538);
    uint64_t v20 = v9;
    uint64_t v21 = v2;
    v11(v8, 1, 1, v10);
    Text.Measurements.size(of:in:writingMode:)();
    double v15 = v14;
    uint64_t result = sub_1000143B4((uint64_t)v8, &qword_1000CA538);
    double v16 = round(v15 / v13);
    if ((~*(void *)&v16 & 0x7FF0000000000000) != 0)
    {
      if (v16 > -9.22337204e18)
      {
        if (v16 < 9.22337204e18)
        {
          uint64_t v17 = (uint64_t)v16;
          if ((uint64_t)v16 >= 2)
          {
            uint64_t v19 = v20;
            uint64_t v18 = v21;
            long long v24 = *(_OWORD *)(v21 + *(int *)(v20 + 44));
            uint64_t v23 = 1;
            sub_10001C28C((uint64_t *)&unk_1000CA540);
            State.wrappedValue.setter();
            uint64_t v17 = 2;
            goto LABEL_12;
          }
          uint64_t v19 = v20;
          uint64_t v18 = v21;
          if (!__OFSUB__(3, v17))
          {
            long long v24 = *(_OWORD *)(v21 + *(int *)(v20 + 44));
            uint64_t v23 = 3 - v17;
            sub_10001C28C((uint64_t *)&unk_1000CA540);
            State.wrappedValue.setter();
LABEL_12:
            long long v24 = *(_OWORD *)(v18 + *(int *)(v19 + 40));
            uint64_t v23 = v17;
            sub_10001C28C((uint64_t *)&unk_1000CA540);
            return State.wrappedValue.setter();
          }
LABEL_17:
          __break(1u);
          return result;
        }
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_100071D4C()
{
  type metadata accessor for UserGuideSearchResultItemView();
  sub_10001C28C(&qword_1000C99A8);
  State.wrappedValue.getter();
  return sub_100071A5C(v1, v2);
}

uint64_t sub_100071DB8()
{
  uint64_t v0 = type metadata accessor for Font.Leading();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Font.body.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v4 = Font.bold()();
  uint64_t result = swift_release();
  qword_1000CA408 = v4;
  return result;
}

uint64_t sub_100071EDC()
{
  uint64_t result = static Font.footnote.getter();
  qword_1000CA410 = result;
  return result;
}

uint64_t sub_100071EFC()
{
  if (qword_1000C7FE0 != -1) {
    swift_once();
  }
  uint64_t result = Text.font(_:)();
  qword_1000CA418 = result;
  unk_1000CA420 = v1;
  byte_1000CA428 = v2 & 1;
  qword_1000CA430 = v3;
  return result;
}

uint64_t sub_100071F80()
{
  return EnvironmentValues.scenePhase.getter();
}

uint64_t sub_100071FA4()
{
  return EnvironmentValues.scenePhase.getter();
}

uint64_t sub_100071FC8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScenePhase();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.scenePhase.setter();
}

uint64_t type metadata accessor for UserGuideSearchResultItemView()
{
  uint64_t result = qword_1000CA498;
  if (!qword_1000CA498) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1000720E0(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_10001C28C(&qword_1000CA3D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *uint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = (void *)((char *)v4 + v9);
    double v12 = (void *)((char *)a2 + v9);
    double v13 = (void *)v12[1];
    double v14 = *(void **)((char *)a2 + v10);
    void *v11 = *v12;
    v11[1] = v13;
    *(void *)((char *)v4 + v10) = v14;
    uint64_t v15 = a3[7];
    double v16 = (char *)v4 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = type metadata accessor for Text.Measurements();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    id v20 = v13;
    id v21 = v14;
    v19(v16, v17, v18);
    uint64_t v22 = a3[8];
    uint64_t v23 = (char *)v4 + v22;
    long long v24 = (char *)a2 + v22;
    uint64_t v25 = *(void *)((char *)a2 + v22);
    uint64_t v26 = *(void *)((char *)a2 + v22 + 8);
    LOBYTE(v18) = *((unsigned char *)a2 + v22 + 16);
    sub_100037CB8(v25, v26, v18);
    *(void *)uint64_t v23 = v25;
    *((void *)v23 + 1) = v26;
    v23[16] = v18;
    *((void *)v23 + 3) = *((void *)v24 + 3);
    uint64_t v27 = a3[9];
    uint64_t v28 = (char *)v4 + v27;
    char v29 = (char *)a2 + v27;
    uint64_t v30 = *(void *)((char *)a2 + v27);
    uint64_t v31 = *(void *)((char *)a2 + v27 + 8);
    LOBYTE(v18) = *((unsigned char *)a2 + v27 + 16);
    swift_bridgeObjectRetain();
    sub_100037CB8(v30, v31, v18);
    *(void *)uint64_t v28 = v30;
    *((void *)v28 + 1) = v31;
    v28[16] = v18;
    *((void *)v28 + 3) = *((void *)v29 + 3);
    uint64_t v32 = a3[10];
    uint64_t v33 = a3[11];
    uint64_t v34 = (void *)((char *)v4 + v32);
    char v35 = (void *)((char *)a2 + v32);
    uint64_t v36 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v36;
    uint64_t v37 = (void *)((char *)v4 + v33);
    char v38 = (void *)((char *)a2 + v33);
    uint64_t v39 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v39;
    uint64_t v40 = a3[12];
    uint64_t v41 = (char *)v4 + v40;
    uint64_t v42 = (char *)a2 + v40;
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
    *((void *)v41 + 2) = *((void *)v42 + 2);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_10007233C(uint64_t a1, int *a2)
{
  sub_10001C28C(&qword_1000CA3D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for ScenePhase();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }

  uint64_t v5 = a1 + a2[7];
  uint64_t v6 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  sub_100016FDC(*(void *)(a1 + a2[8]), *(void *)(a1 + a2[8] + 8), *(unsigned char *)(a1 + a2[8] + 16));
  swift_bridgeObjectRelease();
  sub_100016FDC(*(void *)(a1 + a2[9]), *(void *)(a1 + a2[9] + 8), *(unsigned char *)(a1 + a2[9] + 16));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_10007249C(void *a1, void *a2, int *a3)
{
  sub_10001C28C(&qword_1000CA3D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ScenePhase();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v7);
  uint64_t v10 = (void *)((char *)a2 + v7);
  uint64_t v11 = (void *)v10[1];
  double v12 = *(void **)((char *)a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)((char *)a1 + v8) = v12;
  uint64_t v13 = a3[7];
  double v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Text.Measurements();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
  id v18 = v11;
  id v19 = v12;
  v17(v14, v15, v16);
  uint64_t v20 = a3[8];
  id v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *(void *)((char *)a2 + v20);
  uint64_t v24 = *(void *)((char *)a2 + v20 + 8);
  LOBYTE(v16) = *((unsigned char *)a2 + v20 + 16);
  sub_100037CB8(v23, v24, v16);
  *(void *)id v21 = v23;
  *((void *)v21 + 1) = v24;
  v21[16] = v16;
  *((void *)v21 + 3) = *((void *)v22 + 3);
  uint64_t v25 = a3[9];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)((char *)a2 + v25);
  uint64_t v29 = *(void *)((char *)a2 + v25 + 8);
  LOBYTE(v16) = *((unsigned char *)a2 + v25 + 16);
  swift_bridgeObjectRetain();
  sub_100037CB8(v28, v29, v16);
  *(void *)uint64_t v26 = v28;
  *((void *)v26 + 1) = v29;
  v26[16] = v16;
  *((void *)v26 + 3) = *((void *)v27 + 3);
  uint64_t v30 = a3[10];
  uint64_t v31 = a3[11];
  uint64_t v32 = (void *)((char *)a1 + v30);
  uint64_t v33 = (void *)((char *)a2 + v30);
  uint64_t v34 = v33[1];
  void *v32 = *v33;
  v32[1] = v34;
  char v35 = (void *)((char *)a1 + v31);
  uint64_t v36 = (void *)((char *)a2 + v31);
  uint64_t v37 = v36[1];
  *char v35 = *v36;
  v35[1] = v37;
  uint64_t v38 = a3[12];
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *((void *)v39 + 2) = *((void *)v40 + 2);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1000726AC(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000CA3D0);
    sub_10001C28C(&qword_1000CA3D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  *uint64_t v8 = *v9;
  uint64_t v10 = (void *)v9[1];
  uint64_t v11 = (void *)v8[1];
  v8[1] = v10;
  id v12 = v10;

  uint64_t v13 = a3[6];
  double v14 = *(void **)((char *)a2 + v13);
  uint64_t v15 = *(void **)((char *)a1 + v13);
  *(void *)((char *)a1 + v13) = v14;
  id v16 = v14;

  uint64_t v17 = a3[7];
  id v18 = (char *)a1 + v17;
  id v19 = (char *)a2 + v17;
  uint64_t v20 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  uint64_t v21 = a3[8];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)((char *)a2 + v21);
  uint64_t v25 = *(void *)((char *)a2 + v21 + 8);
  char v26 = *((unsigned char *)a2 + v21 + 16);
  sub_100037CB8(v24, v25, v26);
  uint64_t v27 = *(void *)v22;
  uint64_t v28 = *((void *)v22 + 1);
  char v29 = v22[16];
  *(void *)uint64_t v22 = v24;
  *((void *)v22 + 1) = v25;
  v22[16] = v26;
  sub_100016FDC(v27, v28, v29);
  *((void *)v22 + 3) = *((void *)v23 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[9];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = *(void *)((char *)a2 + v30);
  uint64_t v34 = *(void *)((char *)a2 + v30 + 8);
  char v35 = *((unsigned char *)a2 + v30 + 16);
  sub_100037CB8(v33, v34, v35);
  uint64_t v36 = *(void *)v31;
  uint64_t v37 = *((void *)v31 + 1);
  char v38 = v31[16];
  *(void *)uint64_t v31 = v33;
  *((void *)v31 + 1) = v34;
  v31[16] = v35;
  sub_100016FDC(v36, v37, v38);
  *((void *)v31 + 3) = *((void *)v32 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[10];
  uint64_t v40 = (void *)((char *)a1 + v39);
  uint64_t v41 = (void *)((char *)a2 + v39);
  *uint64_t v40 = *v41;
  v40[1] = v41[1];
  swift_retain();
  swift_release();
  uint64_t v42 = a3[11];
  char v43 = (void *)((char *)a1 + v42);
  char v44 = (void *)((char *)a2 + v42);
  void *v43 = *v44;
  v43[1] = v44[1];
  swift_retain();
  swift_release();
  uint64_t v45 = a3[12];
  uint64_t v46 = (void *)((char *)a1 + v45);
  uint64_t v47 = (void *)((char *)a2 + v45);
  *uint64_t v46 = *v47;
  v46[1] = v47[1];
  v46[2] = v47[2];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_100072948(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000CA3D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ScenePhase();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[8];
  uint64_t v14 = a3[9];
  long long v15 = *(_OWORD *)&a2[v13];
  long long v16 = *(_OWORD *)&a2[v13 + 16];
  uint64_t v17 = &a1[v13];
  *(_OWORD *)uint64_t v17 = v15;
  *((_OWORD *)v17 + 1) = v16;
  id v18 = &a1[v14];
  id v19 = &a2[v14];
  long long v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)id v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  uint64_t v21 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  *(_OWORD *)&a1[v21] = *(_OWORD *)&a2[v21];
  uint64_t v22 = a3[12];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  *((void *)v23 + 2) = *((void *)v24 + 2);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  return a1;
}

char *sub_100072AC8(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000CA3D0);
    uint64_t v6 = sub_10001C28C(&qword_1000CA3D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ScenePhase();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v12 = *(void *)v10;
  uint64_t v11 = *((void *)v10 + 1);
  uint64_t v13 = (void *)*((void *)v9 + 1);
  *(void *)uint64_t v9 = v12;
  *((void *)v9 + 1) = v11;

  uint64_t v14 = a3[6];
  long long v15 = *(void **)&a1[v14];
  *(void *)&a1[v14] = *(void *)&a2[v14];

  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  id v18 = &a2[v16];
  uint64_t v19 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = a3[8];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  LOBYTE(v20) = a2[v20 + 16];
  uint64_t v23 = *(void *)v21;
  uint64_t v24 = *((void *)v21 + 1);
  char v25 = v21[16];
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  v21[16] = v20;
  sub_100016FDC(v23, v24, v25);
  *((void *)v21 + 3) = *((void *)v22 + 3);
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  LOBYTE(v26) = a2[v26 + 16];
  uint64_t v29 = *(void *)v27;
  uint64_t v30 = *((void *)v27 + 1);
  char v31 = v27[16];
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  v27[16] = v26;
  sub_100016FDC(v29, v30, v31);
  *((void *)v27 + 3) = *((void *)v28 + 3);
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[10];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v36 = *(void *)v34;
  uint64_t v35 = *((void *)v34 + 1);
  *(void *)uint64_t v33 = v36;
  *((void *)v33 + 1) = v35;
  swift_release();
  uint64_t v37 = a3[11];
  char v38 = &a1[v37];
  uint64_t v39 = &a2[v37];
  uint64_t v41 = *(void *)v39;
  uint64_t v40 = *((void *)v39 + 1);
  *(void *)char v38 = v41;
  *((void *)v38 + 1) = v40;
  swift_release();
  uint64_t v42 = a3[12];
  char v43 = &a1[v42];
  char v44 = &a2[v42];
  *(_OWORD *)char v43 = *(_OWORD *)v44;
  *((void *)v43 + 2) = *((void *)v44 + 2);
  swift_release();
  return a1;
}

uint64_t sub_100072CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100072D08);
}

uint64_t sub_100072D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000CA438);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for Text.Measurements();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_100072E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100072E50);
}

uint64_t sub_100072E50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10001C28C(&qword_1000CA438);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for Text.Measurements();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_100072F84()
{
  sub_100073084();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Text.Measurements();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100073084()
{
  if (!qword_1000CA4A8)
  {
    type metadata accessor for ScenePhase();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000CA4A8);
    }
  }
}

uint64_t sub_1000730DC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000730F8()
{
  unint64_t result = qword_1000CA4F8;
  if (!qword_1000CA4F8)
  {
    sub_10001AD28(&qword_1000C9360);
    sub_10001AD28(&qword_1000CA500);
    sub_10001AD28(&qword_1000CA508);
    type metadata accessor for ScenePhase();
    sub_100073234();
    sub_100073340(&qword_1000CA528, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA4F8);
  }
  return result;
}

unint64_t sub_100073234()
{
  unint64_t result = qword_1000CA510;
  if (!qword_1000CA510)
  {
    sub_10001AD28(&qword_1000CA508);
    sub_10001AD28(&qword_1000CA518);
    sub_1000732E4();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA510);
  }
  return result;
}

unint64_t sub_1000732E4()
{
  unint64_t result = qword_1000CA520;
  if (!qword_1000CA520)
  {
    sub_10001AD28(&qword_1000CA518);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA520);
  }
  return result;
}

uint64_t sub_100073340(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007338C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UserGuideSearchResultItemView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000733F0(double a1, double a2)
{
  type metadata accessor for UserGuideSearchResultItemView();

  return sub_1000719AC(a1, a2);
}

uint64_t sub_100073468(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v3 = *(void *)(a1 + 112);
  char v4 = *(unsigned char *)(a1 + 120);
  uint64_t v8 = *(void *)(a1 + 184);
  uint64_t v9 = *(void *)(a1 + 176);
  uint64_t v6 = *(void *)(a1 + 200);
  uint64_t v7 = *(void *)(a1 + 192);
  sub_100016FDC(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100016FDC(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100017320(v9, v8, v7, v6);
  return a1;
}

uint64_t sub_100073560()
{
  return sub_100071D4C();
}

unint64_t sub_1000735B4()
{
  unint64_t result = qword_1000C89D0;
  if (!qword_1000C89D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000C89D0);
  }
  return result;
}

uint64_t sub_100073604()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_100073704()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC4Tips28TPSSharingActivityItemSource_assetsConfiguration);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  id v3 = [v2 cacheIdentifierForType:0];
  if (!v3)
  {

    goto LABEL_6;
  }
  char v4 = v3;
  id v5 = [self imageFromMemoryCacheForIdentifier:v3];

  if (!v5)
  {
LABEL_6:
    id v6 = [v2 identifierForType:0];
    if (v6)
    {
      uint64_t v7 = v6;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v8 = self;
      NSString v9 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v5 = [v8 getImageForIdentifier:v9];

      return v5;
    }
    return 0;
  }
  return v5;
}

id sub_1000738FC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TPSSharingActivityItemSource();
  return [super dealloc];
}

uint64_t type metadata accessor for TPSSharingActivityItemSource()
{
  return self;
}

id sub_1000739A0(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC4Tips28TPSSharingActivityItemSource_tip] = a1;
  id v3 = v1;
  id v4 = a1;
  id v5 = [v4 assetFileInfoManager];
  if (v5)
  {
    id v6 = v5;
    type metadata accessor for TPSUIAppController();
    uint64_t v7 = (void *)static TPSUIAppController.shared.getter();
    id v8 = [v4 fullContentAssets];
    id v9 = [v4 language];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v10 = [self currentTraitCollection];
    [v10 userInterfaceStyle];

    uint64_t v11 = dispatch thunk of TPSUIAppController.assetConfiguration(assets:language:sizeClass:style:assetFileInfoManager:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  *(void *)&v3[OBJC_IVAR____TtC4Tips28TPSSharingActivityItemSource_assetsConfiguration] = v11;

  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for TPSSharingActivityItemSource();
  return [super init];
}

id sub_100073B10()
{
  id v0 = [self mainBundle];
  id v1 = [v0 infoDictionary];

  if (!v1)
  {
    long long v13 = 0u;
    long long v14 = 0u;
    goto LABEL_11;
  }
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v2 + 16) || (unint64_t v3 = sub_100012140(0x656C646E75424643, 0xED0000736E6F6349), (v4 & 1) == 0))
  {
    long long v13 = 0u;
    long long v14 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_100055024(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v13);
  swift_bridgeObjectRelease();
  if (!*((void *)&v14 + 1)) {
    goto LABEL_11;
  }
  sub_10001C28C(&qword_1000C8950);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v12 + 16) && (unint64_t v5 = sub_100012140(0xD000000000000013, 0x80000001000A1580), (v6 & 1) != 0))
  {
    sub_100055024(*(void *)(v12 + 56) + 32 * v5, (uint64_t)&v13);
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v14 + 1)) {
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v12 + 16) && (unint64_t v9 = sub_100012140(0xD000000000000011, 0x80000001000A15A0), (v10 & 1) != 0))
  {
    sub_100055024(*(void *)(v12 + 56) + 32 * v9, (uint64_t)&v13);
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v14 + 1))
  {
LABEL_11:
    sub_10003AA74((uint64_t)&v13);
    return 0;
  }
  sub_10001C28C((uint64_t *)&unk_1000CA590);
  if (swift_dynamicCast())
  {
    if (*(void *)(v12 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v7 = [self imageNamed:v11];

      return v7;
    }
    swift_bridgeObjectRelease();
  }
  return 0;
}

id sub_100073DC0()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  char v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001C28C(&qword_1000C8710);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = sub_100073B10();
  if (v8)
  {
    unint64_t v9 = v8;
    id v10 = [objc_allocWithZone((Class)LPLinkMetadata) init];
    id v28 = [objc_allocWithZone((Class)NSItemProvider) initWithObject:v9];
    [v10 setIconProvider:];
    id v11 = sub_100073704();
    if (v11)
    {
      uint64_t v12 = v11;
      id v13 = [objc_allocWithZone((Class)NSItemProvider) initWithObject:v11];
      [v10 setImageProvider:v13];
    }
    long long v14 = *(void **)(v0 + OBJC_IVAR____TtC4Tips28TPSSharingActivityItemSource_tip);
    id v15 = [v14 title];
    [v10 setTitle:v15];

    sub_10004BB0C();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    {
      uint64_t v17 = 0;
    }
    else
    {
      URL._bridgeToObjectiveC()(v16);
      uint64_t v17 = v18;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    }
    [v10 setURL:v17];

    id v19 = [v14 bodyText];
    if (v19)
    {
      id v20 = v19;
    }
    else
    {
      id v25 = [v14 bodyContent];
      if (!v25) {
        goto LABEL_11;
      }
      uint64_t v26 = v25;
      id v20 = [self altTextRepresentationForContent:v25];

      if (!v20) {
        goto LABEL_11;
      }
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    URL.init(fileURLWithPath:)();
    swift_bridgeObjectRelease();
    URL._bridgeToObjectiveC()(v21);
    uint64_t v23 = v22;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    [v10 setOriginalURL:v23];

LABEL_11:
    return v10;
  }
  return 0;
}

uint64_t *sub_100074110(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ColorScheme();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    id v11 = (uint64_t *)((char *)a1 + v9);
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v14 = *v12;
    id v13 = (void *)v12[1];
    void *v11 = v14;
    v11[1] = v13;
    id v15 = *(void **)((char *)a2 + v10);
    *(uint64_t *)((char *)a1 + v10) = (uint64_t)v15;
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    id v16 = v13;
    id v17 = v15;
  }
  return a1;
}

void sub_100074250(uint64_t a1, uint64_t a2)
{
  sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }

  int v5 = *(void **)(a1 + *(int *)(a2 + 24));
}

void *sub_100074300(void *a1, void *a2, int *a3)
{
  sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)((char *)a1 + v7);
  uint64_t v10 = (void *)((char *)a2 + v7);
  uint64_t v12 = *v10;
  id v11 = (void *)v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  id v13 = *(void **)((char *)a2 + v8);
  *(void *)((char *)a1 + v8) = v13;
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  id v14 = v11;
  id v15 = v13;
  return a1;
}

void *sub_1000743F0(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C81D0);
    sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  *uint64_t v8 = *v9;
  uint64_t v10 = (void *)v9[1];
  id v11 = (void *)v8[1];
  v8[1] = v10;
  id v12 = v10;

  uint64_t v13 = a3[6];
  id v14 = *(void **)((char *)a2 + v13);
  id v15 = *(void **)((char *)a1 + v13);
  *(void *)((char *)a1 + v13) = v14;
  id v16 = v14;

  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

char *sub_100074514(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *sub_1000745FC(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C81D0);
    uint64_t v6 = sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ColorScheme();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v12 = *(void *)v10;
  uint64_t v11 = *((void *)v10 + 1);
  uint64_t v13 = (void *)*((void *)v9 + 1);
  *(void *)uint64_t v9 = v12;
  *((void *)v9 + 1) = v11;

  uint64_t v14 = a3[6];
  id v15 = *(void **)&a1[v14];
  *(void *)&a1[v14] = *(void *)&a2[v14];

  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

uint64_t sub_100074718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007472C);
}

uint64_t sub_10007472C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C8658);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1000747F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100074808);
}

uint64_t sub_100074808(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10001C28C(&qword_1000C8658);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for TipListItemView(uint64_t a1)
{
  return sub_10001BBC4(a1, qword_1000CA620);
}

void sub_1000748EC()
{
  sub_100079A3C(319, (unint64_t *)&qword_1000C86C8, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000749B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000749D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v20 = a1;
  uint64_t v21 = type metadata accessor for AccessibilityTraits();
  uint64_t v19 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v5 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001C28C(&qword_1000CA668);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10001C28C(&qword_1000CA670);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)unint64_t v10 = static VerticalAlignment.center.getter();
  *((void *)v10 + 1) = 0x4028000000000000;
  v10[16] = 0;
  uint64_t v15 = sub_10001C28C(&qword_1000CA678);
  sub_100074D34(v2, (uint64_t)&v10[*(int *)(v15 + 44)]);
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v16 = sub_100009170(&qword_1000CA680, &qword_1000CA668);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v18);
  sub_1000143B4((uint64_t)v10, &qword_1000CA668);
  static AccessibilityTraits.isButton.getter();
  uint64_t v22 = v8;
  uint64_t v23 = v16;
  swift_getOpaqueTypeConformance2();
  View.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_100074CEC@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static VerticalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v2 = sub_10001C28C(&qword_1000CA660);
  return sub_1000749D4(a1 + *(int *)(v2 + 44));
}

uint64_t sub_100074D34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v95 = a2;
  uint64_t v3 = sub_10001C28C(&qword_1000C8318);
  __chkstk_darwin(v3 - 8);
  uint64_t v83 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Font.TextStyle();
  uint64_t v81 = *(void *)(v5 - 8);
  uint64_t v82 = v5;
  __chkstk_darwin(v5);
  long long v80 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TipListItemTipBodyView(0);
  __chkstk_darwin(v7 - 8);
  long long v87 = (uint64_t *)((char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v90 = sub_10001C28C(&qword_1000CA688) - 8;
  __chkstk_darwin(v90);
  uint64_t KeyPath = (uint64_t)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_10001C28C(&qword_1000CA690) - 8;
  uint64_t v10 = __chkstk_darwin(v91);
  uint64_t v94 = (uint64_t)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v88 = (uint64_t)&v79 - v13;
  __chkstk_darwin(v12);
  uint64_t v96 = (uint64_t)&v79 - v14;
  uint64_t v15 = type metadata accessor for TipListItemTipImageView(0);
  uint64_t v16 = (int *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (uint64_t *)((char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v79 - v20;
  uint64_t v22 = (int *)type metadata accessor for TipListItemView(0);
  uint64_t v23 = v22[5];
  uint64_t v24 = v22[6];
  uint64_t v84 = a1;
  uint64_t v85 = a1 + v23;
  uint64_t v86 = v24;
  id v25 = *(void **)(a1 + v23 + 8);
  uint64_t v26 = *(void **)(a1 + v24);
  *uint64_t v19 = swift_getKeyPath();
  sub_10001C28C(&qword_1000C81D0);
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = (uint64_t *)((char *)v19 + v16[7]);
  *uint64_t v27 = swift_getKeyPath();
  sub_10001C28C(&qword_1000C99B8);
  swift_storeEnumTagMultiPayload();
  id v28 = (uint64_t *)((char *)v19 + v16[8]);
  type metadata accessor for TipListViewModel(0);
  sub_100003C54(&qword_1000C8C50, (void (*)(uint64_t))type metadata accessor for TipListViewModel);
  id v29 = v25;
  id v30 = v26;
  *id v28 = ObservedObject.init(wrappedValue:)();
  v28[1] = v31;
  *(uint64_t *)((char *)v19 + v16[9]) = (uint64_t)v30;
  uint64_t v92 = v21;
  uint64_t v93 = v19;
  sub_10007A824((uint64_t)v19, (uint64_t)v21, type metadata accessor for TipListItemTipImageView);
  uint64_t v32 = *(void **)(v84 + v86);
  uint64_t v33 = *(void *)(v84 + v22[7]);
  id v34 = *(id *)(v85 + 8);
  id v35 = v32;
  uint64_t v36 = v87;
  sub_1000756A8(v34, v35, v33, v87);
  LOBYTE(v16) = static Edge.Set.trailing.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  id v37 = v34;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  EdgeInsets.init(_all:)();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v46 = KeyPath;
  sub_100078388((uint64_t)v36, KeyPath, type metadata accessor for TipListItemTipBodyView);
  uint64_t v47 = v46 + *(int *)(v90 + 44);
  *(unsigned char *)uint64_t v47 = (_BYTE)v16;
  *(void *)(v47 + 8) = v39;
  *(void *)(v47 + 16) = v41;
  *(void *)(v47 + 24) = v43;
  *(void *)(v47 + 32) = v45;
  *(unsigned char *)(v47 + 40) = 0;
  sub_100078460((uint64_t)v36, type metadata accessor for TipListItemTipBodyView);
  uint64_t v48 = static HorizontalAlignment.listRowSeparatorLeading.getter();
  uint64_t v49 = v88;
  sub_100016FEC(v46, v88, &qword_1000CA688);
  uint64_t v50 = (uint64_t *)(v49 + *(int *)(v91 + 44));
  uint64_t *v50 = v48;
  v50[1] = (uint64_t)sub_10007598C;
  _OWORD v50[2] = 0;
  sub_1000143B4(v46, &qword_1000CA688);
  sub_100017278(v49, v96, &qword_1000CA690);
  swift_getKeyPath();
  swift_getKeyPath();
  id v51 = v37;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v118[0] == 1)
  {
    uint64_t v91 = Image.init(systemName:)();
    char v53 = v80;
    uint64_t v52 = v81;
    uint64_t v54 = v82;
    (*(void (**)(char *, void, uint64_t))(v81 + 104))(v80, enum case for Font.TextStyle.footnote(_:), v82);
    uint64_t v55 = type metadata accessor for Font.Design();
    uint64_t v56 = (uint64_t)v83;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v83, 1, 1, v55);
    static Font.system(_:design:weight:)();
    sub_1000143B4(v56, &qword_1000C8318);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
    static Font.Weight.bold.getter();
    uint64_t v90 = Font.weight(_:)();
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    id v57 = [self tertiaryLabelColor];
    uint64_t v58 = Color.init(_:)();
    uint64_t v59 = swift_getKeyPath();
    static Alignment.trailing.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v60 = v119;
    char v61 = v120;
    uint64_t v62 = v121;
    char v63 = v122;
    uint64_t v64 = v123;
    uint64_t v65 = v124;
    char v66 = static Edge.Set.leading.getter();
    EdgeInsets.init(_all:)();
    char v100 = v61;
    char v99 = v63;
    char v97 = 0;
    v103[0] = v91;
    v103[1] = KeyPath;
    v103[2] = v90;
    v103[3] = v59;
    v103[4] = v58;
    v103[5] = v60;
    char v104 = v61;
    *(_DWORD *)uint64_t v105 = *(_DWORD *)v102;
    *(_DWORD *)&v105[3] = *(_DWORD *)&v102[3];
    uint64_t v106 = v62;
    char v107 = v63;
    *(_DWORD *)&v108[3] = *(_DWORD *)&v101[3];
    *(_DWORD *)uint64_t v108 = *(_DWORD *)v101;
    uint64_t v109 = v64;
    uint64_t v110 = v65;
    char v111 = v66;
    *(_DWORD *)&v112[3] = *(_DWORD *)&v98[3];
    *(_DWORD *)uint64_t v112 = *(_DWORD *)v98;
    uint64_t v113 = v67;
    uint64_t v114 = v68;
    uint64_t v115 = v69;
    uint64_t v116 = v70;
    char v117 = 0;
    nullsub_1(v103);
  }
  else
  {
    sub_10007836C((uint64_t)v103);
  }
  sub_100017278((uint64_t)v103, (uint64_t)v118, &qword_1000CA698);
  uint64_t v72 = (uint64_t)v92;
  uint64_t v71 = (uint64_t)v93;
  sub_100078388((uint64_t)v92, (uint64_t)v93, type metadata accessor for TipListItemTipImageView);
  uint64_t v73 = v96;
  uint64_t v74 = v94;
  sub_100016FEC(v96, v94, &qword_1000CA690);
  sub_100017278((uint64_t)v118, (uint64_t)v101, &qword_1000CA698);
  uint64_t v75 = v95;
  sub_100078388(v71, v95, type metadata accessor for TipListItemTipImageView);
  uint64_t v76 = sub_10001C28C(&qword_1000CA6A0);
  sub_100016FEC(v74, v75 + *(int *)(v76 + 48), &qword_1000CA690);
  uint64_t v77 = v75 + *(int *)(v76 + 64);
  sub_100017278((uint64_t)v101, (uint64_t)v102, &qword_1000CA698);
  sub_100017278((uint64_t)v102, v77, &qword_1000CA698);
  sub_1000784C0((uint64_t)v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000783F0);
  sub_1000143B4(v73, &qword_1000CA690);
  sub_100078460(v72, type metadata accessor for TipListItemTipImageView);
  sub_100017278((uint64_t)v101, (uint64_t)v103, &qword_1000CA698);
  sub_1000784C0((uint64_t)v103, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10007852C);
  sub_1000143B4(v74, &qword_1000CA690);
  return sub_100078460(v71, type metadata accessor for TipListItemTipImageView);
}

uint64_t type metadata accessor for TipListItemTipBodyView(uint64_t a1)
{
  return sub_10001BBC4(a1, qword_1000CA700);
}

uint64_t type metadata accessor for TipListItemTipImageView(uint64_t a1)
{
  return sub_10001BBC4(a1, qword_1000CA7B8);
}

uint64_t sub_1000756A8@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  *a4 = swift_getKeyPath();
  sub_10001C28C(&qword_1000C99B8);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = (int *)type metadata accessor for TipListItemTipBodyView(0);
  uint64_t v8 = (uint64_t *)((char *)a4 + v7[5]);
  *uint64_t v8 = swift_getKeyPath();
  sub_10001C28C(&qword_1000CA3D0);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (char *)a4 + v7[6];
  *(void *)uint64_t v9 = swift_getKeyPath();
  v9[8] = 0;
  Text.Measurements.init()();
  uint64_t v10 = v7[12];
  State.init(wrappedValue:)();
  *(_OWORD *)((char *)a4 + v10) = v34;
  uint64_t v11 = v7[13];
  State.init(wrappedValue:)();
  *(_OWORD *)((char *)a4 + v11) = v34;
  uint64_t v12 = (char *)a4 + v7[14];
  type metadata accessor for CGSize(0);
  State.init(wrappedValue:)();
  *(_OWORD *)uint64_t v12 = v34;
  *((void *)v12 + 2) = v35;
  uint64_t v13 = (uint64_t *)((char *)a4 + v7[7]);
  type metadata accessor for TipListViewModel(0);
  sub_100003C54(&qword_1000C8C50, (void (*)(uint64_t))type metadata accessor for TipListViewModel);
  id v14 = a1;
  *uint64_t v13 = ObservedObject.init(wrappedValue:)();
  v13[1] = v15;
  *(uint64_t *)((char *)a4 + v7[8]) = (uint64_t)a2;
  id v31 = a2;
  uint64_t v32 = v14;
  id v16 = [v14 titleFor:];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100016F88();
  uint64_t v17 = Text.init<A>(_:)();
  uint64_t v19 = v18;
  char v21 = v20;
  if (qword_1000C7FF8 != -1) {
    swift_once();
  }
  uint64_t v22 = Text.font(_:)();
  uint64_t v24 = v23;
  char v26 = v25;
  uint64_t v28 = v27;

  sub_100016FDC(v17, v19, v21 & 1);
  uint64_t result = swift_bridgeObjectRelease();
  id v30 = (char *)a4 + v7[10];
  *(void *)id v30 = v22;
  *((void *)v30 + 1) = v24;
  v30[16] = v26 & 1;
  *((void *)v30 + 3) = v28;
  *(uint64_t *)((char *)a4 + v7[11]) = a3;
  return result;
}

uint64_t sub_10007598C()
{
  return ViewDimensions.subscript.getter();
}

uint64_t sub_1000759B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v93 = a1;
  uint64_t v92 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v92);
  uint64_t v75 = (char *)v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for BackgroundProminence();
  uint64_t v71 = *(void *)(v72 - 8);
  uint64_t v3 = __chkstk_darwin(v72);
  uint64_t v70 = (char *)v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v69 = (uint64_t)v68 - v5;
  uint64_t v6 = type metadata accessor for TipListItemTipImageView(0);
  __chkstk_darwin(v6);
  uint64_t v79 = (char *)v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10001C28C(&qword_1000C8710);
  __chkstk_darwin(v8 - 8);
  uint64_t v80 = (uint64_t)v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_10001C28C(&qword_1000C9588);
  uint64_t v86 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v78 = (char *)v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_10001C28C(&qword_1000CA858);
  uint64_t v85 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v77 = (char *)v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_10001C28C(&qword_1000CA860);
  __chkstk_darwin(v83);
  uint64_t v89 = (char *)v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_10001C28C(&qword_1000CA868);
  __chkstk_darwin(v84);
  uint64_t v74 = (char *)v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_10001C28C(&qword_1000CA870);
  __chkstk_darwin(v88);
  uint64_t v73 = (char *)v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_10001C28C(&qword_1000CA878);
  __chkstk_darwin(v90);
  uint64_t v91 = (char *)v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ColorScheme();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  char v20 = (char *)v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v68 - v21;
  uint64_t v23 = (int *)type metadata accessor for TipListViewModel.AssetConfiguration(0);
  __chkstk_darwin(v23);
  char v25 = (void *)((char *)v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68[1] = v6;
  uint64_t v26 = *(int *)(v6 + 24);
  uint64_t v27 = *(int *)(v6 + 28);
  uint64_t v28 = v1;
  uint64_t v76 = v1 + v26;
  id v29 = *(void **)(v1 + v26 + 8);
  uint64_t v81 = *(int **)(v1 + v27);
  id v30 = v29;
  sub_1000148E8((uint64_t)v22);
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v20, enum case for ColorScheme.dark(_:), v16);
  char v31 = static ColorScheme.== infix(_:_:)();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v17 + 8);
  v32(v20, v16);
  v32(v22, v16);
  uint64_t v33 = (uint64_t)v79;
  uint64_t v34 = v28;
  sub_10005D46C(v81, v31 & 1, v25);

  uint64_t v81 = v23;
  sub_100016FEC((uint64_t)v25 + v23[5], v80, &qword_1000C8710);
  swift_bridgeObjectRetain();
  uint64_t v35 = v78;
  RemoteImageView<>.init(identifier:url:isLoaded:)();
  sub_100009170(&qword_1000C9580, &qword_1000C9588);
  uint64_t v36 = v77;
  uint64_t v37 = v82;
  View.assetContentMode(_:)();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v35, v37);
  LODWORD(v37) = *(unsigned __int8 *)(*(void *)(v76 + 8) + qword_1000CD1A0);
  uint64_t v86 = v34;
  sub_100078388(v34, v33, type metadata accessor for TipListItemTipImageView);
  if (v37 != 1)
  {
    sub_100078460(v33, type metadata accessor for TipListItemTipImageView);
    uint64_t v44 = v75;
    uint64_t v45 = (uint64_t)v74;
    uint64_t v46 = (uint64_t)v73;
    goto LABEL_5;
  }
  uint64_t v38 = v69;
  sub_10006ED4C(v69);
  uint64_t v39 = v70;
  static BackgroundProminence.increased.getter();
  char v40 = static BackgroundProminence.== infix(_:_:)();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v71 + 8);
  uint64_t v42 = v39;
  uint64_t v43 = v72;
  v41(v42, v72);
  v41((char *)v38, v43);
  sub_100078460(v33, type metadata accessor for TipListItemTipImageView);
  uint64_t v44 = v75;
  uint64_t v45 = (uint64_t)v74;
  uint64_t v46 = (uint64_t)v73;
  if ((v40 & 1) == 0)
  {
LABEL_5:
    uint64_t v47 = &selRef_tertiarySystemFillColor;
    goto LABEL_6;
  }
  uint64_t v47 = &selRef_clearColor;
LABEL_6:
  id v48 = [self *v47];
  uint64_t v49 = Color.init(_:)();
  char v50 = static Edge.Set.all.getter();
  uint64_t v51 = v85;
  uint64_t v52 = (uint64_t)v89;
  uint64_t v53 = v87;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v89, v36, v87);
  uint64_t v54 = v52 + *(int *)(v83 + 36);
  *(void *)uint64_t v54 = v49;
  *(unsigned char *)(v54 + 8) = v50;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v36, v53);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_100016FEC(v52, v45, &qword_1000CA860);
  uint64_t v55 = (_OWORD *)(v45 + *(int *)(v84 + 36));
  long long v56 = v95;
  *uint64_t v55 = v94;
  v55[1] = v56;
  v55[2] = v96;
  sub_1000143B4(v52, &qword_1000CA860);
  id v57 = (char *)v44 + *(int *)(v92 + 20);
  uint64_t v58 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v59 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 104))(v57, v58, v59);
  __asm { FMOV            V0.2D, #10.0 }
  *uint64_t v44 = _Q0;
  uint64_t v65 = v46 + *(int *)(v88 + 36);
  sub_100078388((uint64_t)v44, v65, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v65 + *(int *)(sub_10001C28C(&qword_1000C8808) + 36)) = 256;
  sub_100016FEC(v45, v46, &qword_1000CA868);
  sub_100078460((uint64_t)v44, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1000143B4(v45, &qword_1000CA868);
  uint64_t v66 = (uint64_t)v91;
  sub_1000148E8((uint64_t)&v91[*(int *)(v90 + 52)]);
  sub_100017278(v46, v66, &qword_1000CA870);
  sub_100078460((uint64_t)v25, type metadata accessor for TipListViewModel.AssetConfiguration);
  return sub_100017278(v66, v93, &qword_1000CA878);
}

uint64_t sub_1000763E8()
{
  uint64_t v0 = type metadata accessor for Font.Leading();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Font.body.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v4 = Font.bold()();
  uint64_t result = swift_release();
  qword_1000CA5A0 = v4;
  return result;
}

uint64_t sub_10007650C()
{
  if (qword_1000C7FF8 != -1) {
    swift_once();
  }
  uint64_t result = Text.font(_:)();
  qword_1000CA5A8 = result;
  unk_1000CA5B0 = v1;
  byte_1000CA5B8 = v2 & 1;
  qword_1000CA5C0 = v3;
  return result;
}

uint64_t sub_100076590@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10001C28C(&qword_1000CA808);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10001C28C(&qword_1000C9368);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = static HorizontalAlignment.leading.getter();
  *((void *)v5 + 1) = 0x4008000000000000;
  v5[16] = 0;
  uint64_t v10 = sub_10001C28C(&qword_1000CA810);
  sub_100076798(v1, &v5[*(int *)(v10 + 44)]);
  sub_1000735B4();
  static UIFont.defaultHyphenationFactor.getter();
  sub_100009170(&qword_1000CA818, &qword_1000CA808);
  View.hyphenationFactor(_:)();
  sub_1000143B4((uint64_t)v5, &qword_1000CA808);
  uint64_t v11 = static Alignment.leading.getter();
  double v13 = sub_10004CDF4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, INFINITY, 0, v11, v12);
  return (*(uint64_t (**)(char *, uint64_t, double))(v7 + 8))(v9, v6, v13);
}

uint64_t sub_100076798@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  Swift::String v201 = a2;
  uint64_t v171 = type metadata accessor for Font.Leading();
  uint64_t v170 = *(void *)(v171 - 8);
  __chkstk_darwin(v171);
  Swift::String v169 = (char *)&v168 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = type metadata accessor for ScenePhase();
  uint64_t v199 = *(void *)(v200 - 8);
  __chkstk_darwin(v200);
  uint64_t v198 = (uint64_t)&v168 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001C28C(&qword_1000C9BF0);
  __chkstk_darwin(v5 - 8);
  uint64_t v187 = (char *)&v168 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001C28C(&qword_1000C8710);
  __chkstk_darwin(v7 - 8);
  Swift::String v183 = (char *)&v168 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v190 = (uint64_t (*)(void))type metadata accessor for ConstellationContentView();
  uint64_t v189 = *((void *)v190 - 1);
  __chkstk_darwin(v190);
  v188 = (char *)&v168 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = sub_10001C28C(&qword_1000CA820);
  __chkstk_darwin(v192);
  Swift::String v191 = (char *)&v168 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = sub_10001C28C(&qword_1000CA828);
  uint64_t v194 = *(void *)(v196 - 8);
  __chkstk_darwin(v196);
  uint64_t v193 = (char *)&v168 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = sub_10001C28C(&qword_1000CA830);
  __chkstk_darwin(v204);
  v195 = (char *)&v168 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10001C28C(&qword_1000CA838);
  uint64_t v212 = *(void *)(v13 - 8);
  uint64_t v213 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  Swift::String v207 = (char *)&v168 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  unint64_t v197 = (char *)&v168 - v17;
  __chkstk_darwin(v16);
  uint64_t v211 = (char *)&v168 - v18;
  uint64_t v19 = sub_10001C28C(&qword_1000C9BF8);
  __chkstk_darwin(v19 - 8);
  v177 = (char *)&v168 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = type metadata accessor for ConstellationContentParagraphStyle();
  uint64_t v174 = *(void *)(v172 - 8);
  __chkstk_darwin(v172);
  uint64_t v176 = (char *)&v168 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = type metadata accessor for ConstellationContentAttributes();
  uint64_t v22 = *(void *)(v206 - 8);
  __chkstk_darwin(v206);
  uint64_t v205 = (char *)&v168 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v209 = type metadata accessor for BackgroundProminence();
  uint64_t v203 = *(void *)(v209 - 8);
  uint64_t v24 = __chkstk_darwin(v209);
  Swift::String v186 = (char *)&v168 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v185 = (uint64_t)&v168 - v26;
  uint64_t v27 = (int *)type metadata accessor for TipListItemTipBodyView(0);
  uint64_t v179 = *((void *)v27 - 1);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v184 = (uint64_t)&v168 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v168 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v35 = (char *)&v168 - v34;
  uint64_t v180 = v36;
  uint64_t v37 = __chkstk_darwin(v33);
  uint64_t v39 = (char *)&v168 - v38;
  uint64_t v210 = a1 + *(int *)(v37 + 28);
  char v40 = *(void **)(v210 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v41 = v40;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  char v42 = v218;
  uint64_t v214 = a1;
  sub_100078388(a1, (uint64_t)v39, type metadata accessor for TipListItemTipBodyView);
  Swift::String v208 = v27;
  uint64_t v202 = v22;
  if (v42)
  {
    sub_100078460((uint64_t)v39, type metadata accessor for TipListItemTipBodyView);
    char v43 = 0;
  }
  else
  {
    uint64_t v44 = *(void **)&v39[v27[7] + 8];
    swift_getKeyPath();
    swift_getKeyPath();
    id v45 = v44;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    long long v46 = v218;
    id v47 = [*(id *)&v39[v27[8]] identifier];
    uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v50 = v49;

    if (!*((void *)&v46 + 1))
    {
      sub_100078460((uint64_t)v39, type metadata accessor for TipListItemTipBodyView);
      swift_bridgeObjectRelease();
      char v43 = 0;
      uint64_t v22 = v202;
      uint64_t v51 = v214;
      uint64_t v27 = v208;
      goto LABEL_10;
    }
    if (v46 == __PAIR128__(v50, v48)) {
      char v43 = 1;
    }
    else {
      char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    uint64_t v22 = v202;
    uint64_t v27 = v208;
    swift_bridgeObjectRelease();
    sub_100078460((uint64_t)v39, type metadata accessor for TipListItemTipBodyView);
    swift_bridgeObjectRelease();
  }
  uint64_t v51 = v214;
LABEL_10:
  int v52 = *(unsigned __int8 *)(*(void *)(v210 + 8) + qword_1000CD1A0);
  sub_100078388(v51, (uint64_t)v35, type metadata accessor for TipListItemTipBodyView);
  if (v52 == 1)
  {
    uint64_t v53 = &v35[v27[6]];
    uint64_t v54 = *(void *)v53;
    char v55 = v53[8];
    sub_1000788CC(*(void *)v53, v55);
    char v56 = sub_10006EDBC(v54, v55);
    char v57 = v55;
    uint64_t v51 = v214;
    sub_10006FAC4(v54, v57);
    sub_100078460((uint64_t)v35, type metadata accessor for TipListItemTipBodyView);
    sub_100078388(v51, (uint64_t)v32, type metadata accessor for TipListItemTipBodyView);
    if (v56)
    {
      uint64_t v58 = v185;
      sub_10006ED4C(v185);
      uint64_t v59 = v186;
      static BackgroundProminence.increased.getter();
      char v60 = static BackgroundProminence.== infix(_:_:)();
      char v61 = *(void (**)(char *, uint64_t))(v203 + 8);
      uint64_t v62 = v59;
      uint64_t v63 = v209;
      v61(v62, v209);
      v61((char *)v58, v63);
      uint64_t v51 = v214;
      sub_100078460((uint64_t)v32, type metadata accessor for TipListItemTipBodyView);
      char v64 = v60 | v43;
      goto LABEL_15;
    }
  }
  else
  {
    sub_100078460((uint64_t)v35, type metadata accessor for TipListItemTipBodyView);
    sub_100078388(v51, (uint64_t)v32, type metadata accessor for TipListItemTipBodyView);
  }
  sub_100078460((uint64_t)v32, type metadata accessor for TipListItemTipBodyView);
  char v64 = 0;
LABEL_15:
  uint64_t v65 = v51 + v27[10];
  uint64_t v66 = *(void *)v65;
  uint64_t v67 = *(void *)(v65 + 8);
  int v68 = *(unsigned __int8 *)(v65 + 16);
  uint64_t v69 = *(void *)(v65 + 24);
  long long v218 = *(_OWORD *)(v51 + v27[12]);
  Swift::String v186 = (char *)v66;
  uint64_t v185 = v67;
  int v182 = v68;
  sub_100037CB8(v66, v67, v68);
  uint64_t v209 = v69;
  swift_bridgeObjectRetain();
  uint64_t v203 = sub_10001C28C((uint64_t *)&unk_1000CA540);
  State.wrappedValue.getter();
  uint64_t v178 = v215;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v71 = *(void **)(v210 + 8);
  uint64_t v72 = v27[8];
  uint64_t v73 = *(void **)(v51 + v72);
  id v74 = [v71 bodyContentFor:v73];
  sub_10001C28C(&qword_1000C8950);
  uint64_t v75 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v181 = KeyPath;
  uint64_t v175 = v72;
  uint64_t v173 = v75;
  if (v64)
  {
    static Color.white.getter();
    uint64_t v76 = Color.opacity(_:)();
    swift_release();
  }
  else
  {
    uint64_t v76 = static Color.secondary.getter();
  }
  uint64_t v77 = v172;
  id v78 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  long long v218 = 0u;
  long long v219 = 0u;
  uint64_t v220 = 0;
  (*(void (**)(char *, void, uint64_t))(v174 + 104))(v176, enum case for ConstellationContentParagraphStyle.space(_:), v77);
  uint64_t v79 = (uint64_t *)(v51 + v27[13]);
  uint64_t v81 = *v79;
  uint64_t v80 = v79[1];
  uint64_t v174 = v81;
  uint64_t v215 = v81;
  uint64_t v216 = v80;
  uint64_t v172 = v80;
  swift_retain();
  State.wrappedValue.getter();
  uint64_t v82 = type metadata accessor for Locale.Language();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v177, 1, 1, v82);
  defaultParagraphSpacing.getter();
  uint64_t v83 = v205;
  v177 = (char *)v76;
  ConstellationContentAttributes.init(font:foregroundColor:accentColor:titleGradientStyle:textAlignment:paragraphSpacing:paragraphStyle:numberOfLines:lineBreakMode:symbolScale:useForegroundColorForSymbol:displayLinkStyle:typeSettingLanguage:supportsLinks:)();
  id v84 = [v73 language];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v85 = [v71 assetsBaseURLFor:v73];
  if (v85)
  {
    uint64_t v86 = v85;
    uint64_t v87 = v183;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v88 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v87, 0, 1, v88);
  }
  else
  {
    uint64_t v89 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v183, 1, 1, v89);
  }
  id v90 = [v73 assetFileInfoManager];
  uint64_t v91 = v187;
  uint64_t v92 = v206;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v187, v83, v206);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v91, 0, 1, v92);
  uint64_t v93 = (uint64_t *)(v214 + v208[14]);
  uint64_t v95 = v93[1];
  uint64_t v96 = v93[2];
  uint64_t v215 = *v93;
  uint64_t v94 = v215;
  uint64_t v216 = v95;
  uint64_t v217 = v96;
  sub_10001C28C(&qword_1000C99A8);
  State.wrappedValue.getter();
  uint64_t v215 = v94;
  uint64_t v216 = v95;
  uint64_t v217 = v96;
  State.wrappedValue.getter();
  char v97 = v188;
  ConstellationContentView.init(rawContent:language:assetsBaseURL:assetFileInfoManager:attributes:size:maxWidth:textIsSelectable:delegate:)();
  id v98 = [v73 identifier];
  uint64_t v99 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v101 = v100;

  uint64_t v215 = v174;
  uint64_t v216 = v172;
  State.wrappedValue.getter();
  uint64_t v102 = dispatch thunk of CustomStringConvertible.description.getter();
  char v104 = v103;
  uint64_t v215 = v99;
  uint64_t v216 = v101;
  swift_bridgeObjectRetain();
  v105._countAndFlagsBits = v102;
  v105._object = v104;
  String.append(_:)(v105);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v106 = v215;
  uint64_t v107 = v216;
  uint64_t v108 = v189;
  uint64_t v109 = (uint64_t)v191;
  uint64_t v110 = v190;
  (*(void (**)(char *, char *, uint64_t (*)(void)))(v189 + 16))(v191, v97, v190);
  char v111 = (uint64_t *)(v109 + *(int *)(v192 + 52));
  *char v111 = v106;
  v111[1] = v107;
  (*(void (**)(char *, uint64_t (*)(void)))(v108 + 8))(v97, v110);
  uint64_t v112 = v214;
  uint64_t v113 = v184;
  sub_100078388(v214, v184, type metadata accessor for TipListItemTipBodyView);
  uint64_t v114 = *(unsigned __int8 *)(v179 + 80);
  uint64_t v115 = (v114 + 16) & ~v114;
  uint64_t v203 = v114 | 7;
  uint64_t v189 = v115 + v180;
  uint64_t v116 = swift_allocObject();
  Swift::String v190 = type metadata accessor for TipListItemTipBodyView;
  sub_10007A824(v113, v116 + v115, type metadata accessor for TipListItemTipBodyView);
  sub_100009170(&qword_1000CA840, &qword_1000CA820);
  char v117 = v193;
  View.readSize(onChange:)();
  swift_release();
  sub_1000143B4(v109, &qword_1000CA820);
  sub_100078388(v112, v113, type metadata accessor for TipListItemTipBodyView);
  uint64_t v118 = swift_allocObject();
  uint64_t v119 = v190;
  sub_10007A824(v113, v118 + v115, v190);
  uint64_t v120 = v194;
  uint64_t v121 = (uint64_t)v195;
  uint64_t v122 = v196;
  (*(void (**)(char *, char *, uint64_t))(v194 + 16))(v195, v117, v196);
  uint64_t v123 = (void *)(v121 + *(int *)(v204 + 36));
  *uint64_t v123 = sub_10007A908;
  v123[1] = v118;
  v123[2] = 0;
  v123[3] = 0;
  (*(void (**)(char *, uint64_t))(v120 + 8))(v117, v122);
  uint64_t v124 = v214;
  uint64_t v125 = v198;
  sub_10006ED84(v198);
  sub_100078388(v124, v113, type metadata accessor for TipListItemTipBodyView);
  uint64_t v126 = swift_allocObject();
  sub_10007A824(v113, v126 + v115, v119);
  sub_10007A964();
  sub_100003C54(&qword_1000CA528, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
  uint64_t v127 = v197;
  uint64_t v128 = v200;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v199 + 8))(v125, v128);
  sub_1000143B4(v121, &qword_1000CA830);
  (*(void (**)(char *, char *, uint64_t))(v212 + 32))(v211, v127, v213);
  id v129 = [*(id *)(v210 + 8) footerFor:*(void *)(v124 + v175)];
  if (v129)
  {
    uint64_t v130 = v129;
    uint64_t v131 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v133 = v132;

    uint64_t v215 = v131;
    uint64_t v216 = v133;
    sub_100016F88();
    uint64_t v134 = Text.init<A>(_:)();
    uint64_t v136 = v135;
    char v138 = v137 & 1;
    id v139 = [self tertiaryLabelColor];
    Color.init(_:)();
    uint64_t v140 = Text.foregroundColor(_:)();
    uint64_t v142 = v141;
    char v144 = v143;
    swift_release();
    char v145 = v144 & 1;
    sub_100016FDC(v134, v136, v138);
    swift_bridgeObjectRelease();
    static Font.footnote.getter();
    uint64_t v146 = v170;
    Swift::String v147 = v169;
    uint64_t v148 = v171;
    (*(void (**)(char *, void, uint64_t))(v170 + 104))(v169, enum case for Font.Leading.tight(_:), v171);
    Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v146 + 8))(v147, v148);
    uint64_t v210 = Text.font(_:)();
    Swift::String v208 = v149;
    LOBYTE(v147) = v150;
    uint64_t v204 = v151;
    swift_release();
    uint64_t v214 = v147 & 1;
    sub_100016FDC(v140, v142, v145);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v210 = 0;
    Swift::String v208 = 0;
    uint64_t v214 = 0;
    uint64_t v204 = 0;
  }
  char v152 = v182;
  LOBYTE(v215) = v182;
  Swift::String v153 = *(void (**)(char *, char *, uint64_t))(v212 + 16);
  Swift::String v154 = v207;
  uint64_t v155 = v213;
  v153(v207, v211, v213);
  uint64_t v156 = v201;
  uint64_t v157 = (uint64_t)v186;
  uint64_t v158 = v185;
  *Swift::String v201 = v186;
  v156[1] = v158;
  *((unsigned char *)v156 + 16) = v152;
  uint64_t v159 = v181;
  v156[3] = v209;
  v156[4] = v159;
  v156[5] = v178;
  *((unsigned char *)v156 + 48) = 0;
  *(_WORD *)((char *)v156 + 49) = 256;
  uint64_t v160 = sub_10001C28C(&qword_1000CA850);
  v153((char *)v156 + *(int *)(v160 + 48), v154, v155);
  uint64_t v161 = (void *)((char *)v156 + *(int *)(v160 + 64));
  uint64_t v162 = v210;
  uint64_t v163 = (uint64_t)v208;
  *uint64_t v161 = v210;
  v161[1] = v163;
  LOBYTE(v160) = v214;
  uint64_t v164 = v204;
  v161[2] = v214;
  v161[3] = v164;
  sub_100037CB8(v157, v158, v152);
  swift_bridgeObjectRetain();
  sub_100037CB8(v157, v158, v152);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000172DC(v162, v163, v160, v164);
  swift_retain();
  swift_release();
  unint64_t v165 = *(void (**)(char *, uint64_t))(v212 + 8);
  uint64_t v166 = v213;
  v165(v211, v213);
  (*(void (**)(char *, uint64_t))(v202 + 8))(v205, v206);
  sub_100016FDC(v157, v158, v152);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100017320(v162, v163, v214, v164);
  v165(v207, v166);
  sub_100016FDC(v157, v158, v215);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100077F40(double a1, double a2)
{
  return sub_100077FF0(a1, a2);
}

uint64_t sub_100077FF0(double a1, double a2)
{
  uint64_t v5 = sub_10001C28C(&qword_1000CA538);
  uint64_t result = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 != 0.0 || a2 != 0.0)
  {
    uint64_t v9 = type metadata accessor for TipListItemTipBodyView(0);
    uint64_t v23 = v2 + *(int *)(v9 + 36);
    if (qword_1000C8000 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Text.WritingMode();
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    v11(v8, 1, 1, v10);
    Text.Measurements.size(of:in:writingMode:)();
    double v13 = v12;
    sub_1000143B4((uint64_t)v8, &qword_1000CA538);
    uint64_t v21 = v9;
    uint64_t v22 = v2;
    v11(v8, 1, 1, v10);
    Text.Measurements.size(of:in:writingMode:)();
    double v15 = v14;
    uint64_t result = sub_1000143B4((uint64_t)v8, &qword_1000CA538);
    double v16 = round(v15 / v13);
    if ((~*(void *)&v16 & 0x7FF0000000000000) != 0)
    {
      if (v16 > -9.22337204e18)
      {
        if (v16 < 9.22337204e18)
        {
          uint64_t v17 = (uint64_t)v16;
          uint64_t v19 = v21;
          uint64_t v18 = v22;
          uint64_t v20 = *(void *)(v22 + *(int *)(v21 + 44));
          if (v20 <= (uint64_t)v16)
          {
            long long v25 = *(_OWORD *)(v22 + *(int *)(v21 + 52));
            uint64_t v24 = 1;
            sub_10001C28C((uint64_t *)&unk_1000CA540);
            State.wrappedValue.setter();
            goto LABEL_12;
          }
          if (!__OFSUB__(v20, (uint64_t)v16))
          {
            long long v25 = *(_OWORD *)(v22 + *(int *)(v21 + 52));
            uint64_t v24 = v20 - (uint64_t)v16;
            sub_10001C28C((uint64_t *)&unk_1000CA540);
            State.wrappedValue.setter();
            uint64_t v20 = v17;
LABEL_12:
            long long v25 = *(_OWORD *)(v18 + *(int *)(v19 + 48));
            uint64_t v24 = v20;
            sub_10001C28C((uint64_t *)&unk_1000CA540);
            return State.wrappedValue.setter();
          }
LABEL_17:
          __break(1u);
          return result;
        }
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1000782DC()
{
  type metadata accessor for TipListItemTipBodyView(0);
  sub_10001C28C(&qword_1000C99A8);
  State.wrappedValue.getter();
  return sub_100077FF0(v1, v2);
}

double sub_10007836C(uint64_t a1)
{
  *(unsigned char *)(a1 + 128) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_100078388(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000783F0(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100078460(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000784C0(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 128);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), v4);
  return a1;
}

uint64_t sub_10007852C(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000785B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isFocused.getter();
  *a1 = result & 1;
  return result;
}

void *sub_1000785E0(void *a1, void *a2, int *a3)
{
  char v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    char v4 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_10001C28C(&qword_1000C99B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for BackgroundProminence();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *char v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)((char *)v4 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    sub_10001C28C(&qword_1000CA3D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    double v14 = (char *)v4 + v13;
    double v15 = (char *)a2 + v13;
    uint64_t v16 = *(void *)v15;
    char v17 = v15[8];
    sub_1000788CC(*(void *)v15, v17);
    *(void *)double v14 = v16;
    v14[8] = v17;
    uint64_t v18 = a3[7];
    uint64_t v19 = a3[8];
    uint64_t v20 = (void *)((char *)v4 + v18);
    uint64_t v21 = (void *)((char *)a2 + v18);
    uint64_t v22 = (void *)v21[1];
    uint64_t v23 = *(void **)((char *)a2 + v19);
    void *v20 = *v21;
    v20[1] = v22;
    *(void *)((char *)v4 + v19) = v23;
    uint64_t v24 = a3[9];
    long long v25 = (char *)v4 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = type metadata accessor for Text.Measurements();
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
    id v29 = v22;
    id v30 = v23;
    v28(v25, v26, v27);
    uint64_t v31 = a3[10];
    uint64_t v32 = (char *)v4 + v31;
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v34 = *(void *)((char *)a2 + v31);
    uint64_t v35 = *(void *)((char *)a2 + v31 + 8);
    LOBYTE(v27) = *((unsigned char *)a2 + v31 + 16);
    sub_100037CB8(v34, v35, v27);
    *(void *)uint64_t v32 = v34;
    *((void *)v32 + 1) = v35;
    v32[16] = v27;
    *((void *)v32 + 3) = *((void *)v33 + 3);
    uint64_t v36 = a3[12];
    *(void *)((char *)v4 + a3[11]) = *(void *)((char *)a2 + a3[11]);
    uint64_t v37 = (void *)((char *)v4 + v36);
    uint64_t v38 = (void *)((char *)a2 + v36);
    uint64_t v39 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v39;
    uint64_t v40 = a3[13];
    uint64_t v41 = a3[14];
    char v42 = (void *)((char *)v4 + v40);
    char v43 = (void *)((char *)a2 + v40);
    uint64_t v44 = v43[1];
    void *v42 = *v43;
    v42[1] = v44;
    id v45 = (char *)v4 + v41;
    long long v46 = (char *)a2 + v41;
    *(_OWORD *)id v45 = *(_OWORD *)v46;
    *((void *)v45 + 2) = *((void *)v46 + 2);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1000788CC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1000788D8(uint64_t a1, int *a2)
{
  sub_10001C28C(&qword_1000C99B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for BackgroundProminence();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_10001C28C(&qword_1000CA3D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ScenePhase();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  sub_10006FAC4(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));

  uint64_t v7 = a1 + a2[9];
  uint64_t v8 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  sub_100016FDC(*(void *)(a1 + a2[10]), *(void *)(a1 + a2[10] + 8), *(unsigned char *)(a1 + a2[10] + 16));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_100078A9C(void *a1, void *a2, int *a3)
{
  sub_10001C28C(&qword_1000C99B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for BackgroundProminence();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_10001C28C(&qword_1000CA3D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ScenePhase();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_1000788CC(*(void *)v13, v15);
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)((char *)a1 + v16);
  uint64_t v19 = (void *)((char *)a2 + v16);
  uint64_t v20 = (void *)v19[1];
  uint64_t v21 = *(void **)((char *)a2 + v17);
  void *v18 = *v19;
  v18[1] = v20;
  *(void *)((char *)a1 + v17) = v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = type metadata accessor for Text.Measurements();
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
  id v27 = v20;
  id v28 = v21;
  v26(v23, v24, v25);
  uint64_t v29 = a3[10];
  id v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = *(void *)((char *)a2 + v29);
  uint64_t v33 = *(void *)((char *)a2 + v29 + 8);
  LOBYTE(v25) = *((unsigned char *)a2 + v29 + 16);
  sub_100037CB8(v32, v33, v25);
  *(void *)id v30 = v32;
  *((void *)v30 + 1) = v33;
  v30[16] = v25;
  *((void *)v30 + 3) = *((void *)v31 + 3);
  uint64_t v34 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  uint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (void *)((char *)a2 + v34);
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v37;
  uint64_t v38 = a3[13];
  uint64_t v39 = a3[14];
  uint64_t v40 = (void *)((char *)a1 + v38);
  uint64_t v41 = (void *)((char *)a2 + v38);
  uint64_t v42 = v41[1];
  *uint64_t v40 = *v41;
  v40[1] = v42;
  char v43 = (char *)a1 + v39;
  uint64_t v44 = (char *)a2 + v39;
  *(_OWORD *)char v43 = *(_OWORD *)v44;
  *((void *)v43 + 2) = *((void *)v44 + 2);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_100078D3C(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C99B8);
    sub_10001C28C(&qword_1000C99B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for BackgroundProminence();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_1000143B4((uint64_t)a1 + v7, &qword_1000CA3D0);
    sub_10001C28C(&qword_1000CA3D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_1000788CC(*(void *)v13, v15);
  uint64_t v16 = *(void *)v12;
  char v17 = v12[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  sub_10006FAC4(v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  *uint64_t v19 = *v20;
  uint64_t v21 = (void *)v20[1];
  uint64_t v22 = (void *)v19[1];
  v19[1] = v21;
  id v23 = v21;

  uint64_t v24 = a3[8];
  uint64_t v25 = *(void **)((char *)a2 + v24);
  uint64_t v26 = *(void **)((char *)a1 + v24);
  *(void *)((char *)a1 + v24) = v25;
  id v27 = v25;

  uint64_t v28 = a3[9];
  uint64_t v29 = (char *)a1 + v28;
  id v30 = (char *)a2 + v28;
  uint64_t v31 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 24))(v29, v30, v31);
  uint64_t v32 = a3[10];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void *)((char *)a2 + v32);
  uint64_t v36 = *(void *)((char *)a2 + v32 + 8);
  LOBYTE(v12) = *((unsigned char *)a2 + v32 + 16);
  sub_100037CB8(v35, v36, (char)v12);
  uint64_t v37 = *(void *)v33;
  uint64_t v38 = *((void *)v33 + 1);
  char v39 = v33[16];
  *(void *)uint64_t v33 = v35;
  *((void *)v33 + 1) = v36;
  v33[16] = (char)v12;
  sub_100016FDC(v37, v38, v39);
  *((void *)v33 + 3) = *((void *)v34 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  uint64_t v40 = a3[12];
  uint64_t v41 = (void *)((char *)a1 + v40);
  uint64_t v42 = (void *)((char *)a2 + v40);
  void *v41 = *v42;
  v41[1] = v42[1];
  swift_retain();
  swift_release();
  uint64_t v43 = a3[13];
  uint64_t v44 = (void *)((char *)a1 + v43);
  id v45 = (void *)((char *)a2 + v43);
  *uint64_t v44 = *v45;
  v44[1] = v45[1];
  swift_retain();
  swift_release();
  uint64_t v46 = a3[14];
  id v47 = (void *)((char *)a1 + v46);
  uint64_t v48 = (void *)((char *)a2 + v46);
  *id v47 = *v48;
  v47[1] = v48[1];
  void v47[2] = v48[2];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_100079070(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C99B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for BackgroundProminence();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_10001C28C(&qword_1000CA3D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for ScenePhase();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  char v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(void *)char v15 = *(void *)v16;
  v15[8] = v16[8];
  *(_OWORD *)&a1[v14] = *(_OWORD *)&a2[v14];
  uint64_t v17 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  uint64_t v21 = a3[10];
  uint64_t v22 = a3[11];
  long long v23 = *(_OWORD *)&a2[v21];
  long long v24 = *(_OWORD *)&a2[v21 + 16];
  uint64_t v25 = &a1[v21];
  *(_OWORD *)uint64_t v25 = v23;
  *((_OWORD *)v25 + 1) = v24;
  *(void *)&a1[v22] = *(void *)&a2[v22];
  uint64_t v26 = a3[13];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  *(_OWORD *)&a1[v26] = *(_OWORD *)&a2[v26];
  uint64_t v27 = a3[14];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  *((void *)v28 + 2) = *((void *)v29 + 2);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  return a1;
}

char *sub_1000792A0(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C99B8);
    uint64_t v6 = sub_10001C28C(&qword_1000C99B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for BackgroundProminence();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_1000143B4((uint64_t)&a1[v8], &qword_1000CA3D0);
    uint64_t v11 = sub_10001C28C(&qword_1000CA3D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ScenePhase();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  char v15 = &a2[v13];
  uint64_t v16 = *(void *)v15;
  LOBYTE(v15) = v15[8];
  uint64_t v17 = *(void *)v14;
  char v18 = v14[8];
  *(void *)uint64_t v14 = v16;
  v14[8] = (char)v15;
  sub_10006FAC4(v17, v18);
  uint64_t v19 = a3[7];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v23 = *(void *)v21;
  uint64_t v22 = *((void *)v21 + 1);
  long long v24 = (void *)*((void *)v20 + 1);
  *(void *)uint64_t v20 = v23;
  *((void *)v20 + 1) = v22;

  uint64_t v25 = a3[8];
  uint64_t v26 = *(void **)&a1[v25];
  *(void *)&a1[v25] = *(void *)&a2[v25];

  uint64_t v27 = a3[9];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[10];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  LOBYTE(v31) = a2[v31 + 16];
  uint64_t v34 = *(void *)v32;
  uint64_t v35 = *((void *)v32 + 1);
  char v36 = v32[16];
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  v32[16] = v31;
  sub_100016FDC(v34, v35, v36);
  *((void *)v32 + 3) = *((void *)v33 + 3);
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  uint64_t v38 = &a1[v37];
  char v39 = &a2[v37];
  uint64_t v41 = *(void *)v39;
  uint64_t v40 = *((void *)v39 + 1);
  *(void *)uint64_t v38 = v41;
  *((void *)v38 + 1) = v40;
  swift_release();
  uint64_t v42 = a3[13];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  uint64_t v46 = *(void *)v44;
  uint64_t v45 = *((void *)v44 + 1);
  *(void *)uint64_t v43 = v46;
  *((void *)v43 + 1) = v45;
  swift_release();
  uint64_t v47 = a3[14];
  uint64_t v48 = &a1[v47];
  unint64_t v49 = &a2[v47];
  *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
  *((void *)v48 + 2) = *((void *)v49 + 2);
  swift_release();
  return a1;
}

uint64_t sub_100079574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100079588);
}

uint64_t sub_100079588(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C9A78);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_10001C28C(&qword_1000CA438);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[7] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = type metadata accessor for Text.Measurements();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[9];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_100079714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100079728);
}

uint64_t sub_100079728(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_10001C28C(&qword_1000C9A78);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_10001C28C(&qword_1000CA438);
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[7] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = type metadata accessor for Text.Measurements();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[9];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

void sub_1000798B4()
{
  sub_100079A3C(319, (unint64_t *)&unk_1000C9AE8, (void (*)(uint64_t))&type metadata accessor for BackgroundProminence);
  if (v0 <= 0x3F)
  {
    sub_100079A3C(319, (unint64_t *)&qword_1000CA4A8, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Text.Measurements();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100079A3C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *sub_100079A90(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ColorScheme();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_10001C28C(&qword_1000C99B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for BackgroundProminence();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)a1 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v18 = *v16;
    uint64_t v17 = (void *)v16[1];
    void *v15 = v18;
    v15[1] = v17;
    uint64_t v19 = *(void **)((char *)a2 + v14);
    *(uint64_t *)((char *)a1 + v14) = (uint64_t)v19;
    id v20 = v17;
    id v21 = v19;
  }
  return a1;
}

void sub_100079C64(uint64_t a1, int *a2)
{
  sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_10001C28C(&qword_1000C99B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for BackgroundProminence();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  uint64_t v7 = *(void **)(a1 + a2[7]);
}

void *sub_100079D88(void *a1, void *a2, int *a3)
{
  sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_10001C28C(&qword_1000C99B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for BackgroundProminence();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v16 = *v14;
  uint64_t v15 = (void *)v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  uint64_t v17 = *(void **)((char *)a2 + v12);
  *(void *)((char *)a1 + v12) = v17;
  id v18 = v15;
  id v19 = v17;
  return a1;
}

void *sub_100079F0C(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C81D0);
    sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_1000143B4((uint64_t)a1 + v7, &qword_1000C99B8);
    sub_10001C28C(&qword_1000C99B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for BackgroundProminence();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  uint64_t v14 = (void *)v13[1];
  uint64_t v15 = (void *)v12[1];
  v12[1] = v14;
  id v16 = v14;

  uint64_t v17 = a3[7];
  id v18 = *(void **)((char *)a2 + v17);
  id v19 = *(void **)((char *)a1 + v17);
  *(void *)((char *)a1 + v17) = v18;
  id v20 = v18;

  return a1;
}

char *sub_10007A0D4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_10001C28C(&qword_1000C99B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for BackgroundProminence();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  return a1;
}

char *sub_10007A258(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C81D0);
    uint64_t v6 = sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ColorScheme();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_1000143B4((uint64_t)&a1[v8], &qword_1000C99B8);
    uint64_t v11 = sub_10001C28C(&qword_1000C99B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for BackgroundProminence();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v17 = *(void *)v15;
  uint64_t v16 = *((void *)v15 + 1);
  id v18 = (void *)*((void *)v14 + 1);
  *(void *)uint64_t v14 = v17;
  *((void *)v14 + 1) = v16;

  uint64_t v19 = a3[7];
  id v20 = *(void **)&a1[v19];
  *(void *)&a1[v19] = *(void *)&a2[v19];

  return a1;
}

uint64_t sub_10007A420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007A434);
}

uint64_t sub_10007A434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C8658);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_10001C28C(&qword_1000C9A78);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_10007A554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007A568);
}

uint64_t sub_10007A568(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_10001C28C(&qword_1000C8658);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_10001C28C(&qword_1000C9A78);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_10007A684()
{
  sub_100079A3C(319, (unint64_t *)&qword_1000C86C8, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F)
  {
    sub_100079A3C(319, (unint64_t *)&unk_1000C9AE8, (void (*)(uint64_t))&type metadata accessor for BackgroundProminence);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10007A79C()
{
  return sub_100009170(&qword_1000CA7F8, &qword_1000CA800);
}

uint64_t sub_10007A7D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007A7F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007A824(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007A88C(double a1, double a2)
{
  type metadata accessor for TipListItemTipBodyView(0);

  return sub_100077F40(a1, a2);
}

uint64_t sub_10007A910()
{
  return sub_1000782DC();
}

unint64_t sub_10007A964()
{
  unint64_t result = qword_1000CA848;
  if (!qword_1000CA848)
  {
    sub_10001AD28(&qword_1000CA830);
    sub_10001AD28(&qword_1000CA820);
    sub_100009170(&qword_1000CA840, &qword_1000CA820);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA848);
  }
  return result;
}

unint64_t sub_10007AA44()
{
  unint64_t result = qword_1000CA880;
  if (!qword_1000CA880)
  {
    sub_10001AD28(&qword_1000C9370);
    sub_10001AD28(&qword_1000CA808);
    sub_100009170(&qword_1000CA818, &qword_1000CA808);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA880);
  }
  return result;
}

uint64_t sub_10007AB20()
{
  return sub_100009170(&qword_1000CA888, &qword_1000CA878);
}

uint64_t *sub_10007AB5C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10001C28C(&qword_1000C92C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)a1 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v18 = *v16;
    uint64_t v17 = (void *)v16[1];
    void *v15 = v18;
    v15[1] = v17;
    uint64_t v19 = *(void **)((char *)a2 + v14);
    *(uint64_t *)((char *)a1 + v14) = (uint64_t)v19;
    id v20 = v17;
    id v21 = v19;
  }
  return a1;
}

void *sub_10007AD30(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C92C8);
    sub_10001C28C(&qword_1000C92C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_1000143B4((uint64_t)a1 + v7, &qword_1000C81D0);
    sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  uint64_t v14 = (void *)v13[1];
  uint64_t v15 = (void *)v12[1];
  v12[1] = v14;
  id v16 = v14;

  uint64_t v17 = a3[7];
  uint64_t v18 = *(void **)((char *)a2 + v17);
  uint64_t v19 = *(void **)((char *)a1 + v17);
  *(void *)((char *)a1 + v17) = v18;
  id v20 = v18;

  return a1;
}

char *sub_10007AEF8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C92C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  return a1;
}

char *sub_10007B07C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000143B4((uint64_t)a1, &qword_1000C92C8);
    uint64_t v6 = sub_10001C28C(&qword_1000C92C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_1000143B4((uint64_t)&a1[v8], &qword_1000C81D0);
    uint64_t v11 = sub_10001C28C(&qword_1000C81D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ColorScheme();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v17 = *(void *)v15;
  uint64_t v16 = *((void *)v15 + 1);
  uint64_t v18 = (void *)*((void *)v14 + 1);
  *(void *)uint64_t v14 = v17;
  *((void *)v14 + 1) = v16;

  uint64_t v19 = a3[7];
  id v20 = *(void **)&a1[v19];
  *(void *)&a1[v19] = *(void *)&a2[v19];

  return a1;
}

uint64_t sub_10007B244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007B258);
}

uint64_t sub_10007B258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10001C28C(&qword_1000C9410);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_10001C28C(&qword_1000C8658);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_10007B378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007B38C);
}

uint64_t sub_10007B38C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_10001C28C(&qword_1000C9410);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_10001C28C(&qword_1000C8658);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_10007B4A8(uint64_t a1)
{
  uint64_t result = type metadata accessor for UserGuideListItemView();
  uint64_t v3 = *(void (**)(uint64_t))(*(void *)(a1 + *(int *)(result + 24) + 8)
                                      + OBJC_IVAR___CollectionListViewModel_userGuideHandler);
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + *(int *)(result + 28));
    swift_retain();
    v3(v4);
    return sub_100005470((uint64_t)v3);
  }
  return result;
}

uint64_t sub_10007B544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = static VerticalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v4 = sub_10001C28C(&qword_1000CA938);
  return sub_10007B9C0(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_10007B594(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(a1 - 8);
  sub_10007B6EC(v1, (uint64_t)&v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  sub_10007B8F4((uint64_t)&v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)], v5 + v4);
  uint64_t v8 = v1;
  sub_10001C28C(&qword_1000CA928);
  sub_100009170(&qword_1000CA930, &qword_1000CA928);
  return Button.init(action:label:)();
}

uint64_t sub_10007B6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UserGuideListItemView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007B750()
{
  uint64_t v1 = (int *)type metadata accessor for UserGuideListItemView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  sub_10001C28C(&qword_1000C92C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + v1[5];
  sub_10001C28C(&qword_1000C81D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10007B8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UserGuideListItemView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007B958()
{
  uint64_t v1 = *(void *)(type metadata accessor for UserGuideListItemView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_10007B4A8(v2);
}

uint64_t sub_10007B9B8@<X0>(uint64_t a1@<X8>)
{
  return sub_10007B544(*(void *)(v1 + 16), a1);
}

uint64_t sub_10007B9C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v74 = a2;
  uint64_t v67 = sub_10001C28C(&qword_1000CA940);
  __chkstk_darwin(v67);
  uint64_t v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10001C28C(&qword_1000CA948);
  __chkstk_darwin(v5 - 8);
  uint64_t v66 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10001C28C(&qword_1000CA950);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10001C28C(&qword_1000CA958);
  uint64_t v12 = v11 - 8;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v73 = (uint64_t)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v65 - v16;
  __chkstk_darwin(v15);
  uint64_t v69 = (uint64_t)&v65 - v18;
  uint64_t v19 = sub_10001C28C(&qword_1000C8318);
  __chkstk_darwin(v19 - 8);
  id v21 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for UserGuideListItemView();
  uint64_t v68 = *(int *)(v22 + 28);
  UserGuide.symbol.getter();
  uint64_t v23 = Image.init(_internalSystemName:)();
  uint64_t v72 = v23;
  uint64_t v24 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v21, 1, 1, v24);
  uint64_t v25 = static Font.system(size:weight:design:)();
  uint64_t v70 = v25;
  sub_1000143B4((uint64_t)v21, &qword_1000C8318);
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)&long long v77 = v23;
  *((void *)&v77 + 1) = KeyPath;
  *(void *)&long long v78 = v25;
  uint64_t v26 = a1;
  sub_10007BFB0(a1, (uint64_t *)&v77, (uint64_t)v4);
  sub_10007C3B8();
  uint64_t v27 = (uint64_t)v66;
  View.accessibilityHidden(_:)();
  sub_1000143B4((uint64_t)v4, &qword_1000CA940);
  LOBYTE(v23) = static Edge.Set.leading.getter();
  uint64_t v28 = *(void **)(v26 + *(int *)(v22 + 24) + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v29 = v28;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  EdgeInsets.init(_all:)();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  sub_100016FEC(v27, (uint64_t)v10, &qword_1000CA948);
  uint64_t v38 = &v10[*(int *)(v8 + 44)];
  *uint64_t v38 = v23;
  *((void *)v38 + 1) = v31;
  *((void *)v38 + 2) = v33;
  *((void *)v38 + 3) = v35;
  *((void *)v38 + 4) = v37;
  v38[40] = 0;
  sub_1000143B4(v27, &qword_1000CA948);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_100016FEC((uint64_t)v10, (uint64_t)v17, &qword_1000CA950);
  char v39 = &v17[*(int *)(v12 + 44)];
  long long v40 = v78;
  *(_OWORD *)char v39 = v77;
  *((_OWORD *)v39 + 1) = v40;
  *((_OWORD *)v39 + 2) = v79;
  sub_1000143B4((uint64_t)v10, &qword_1000CA950);
  uint64_t v41 = v69;
  sub_10007C4D4((uint64_t)v17, v69);
  uint64_t v75 = UserGuide.text.getter();
  uint64_t v76 = v42;
  sub_100016F88();
  uint64_t v43 = Text.init<A>(_:)();
  uint64_t v45 = v44;
  LOBYTE(v8) = v46 & 1;
  static Color.primary.getter();
  uint64_t v47 = Text.foregroundColor(_:)();
  uint64_t v49 = v48;
  LOBYTE(v25) = v50;
  uint64_t v52 = v51;
  swift_release();
  sub_100016FDC(v43, v45, v8);
  swift_bridgeObjectRelease();
  LOBYTE(v43) = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  uint64_t v61 = v73;
  sub_100016FEC(v41, v73, &qword_1000CA958);
  LOBYTE(v75) = v25 & 1;
  uint64_t v62 = v74;
  sub_100016FEC(v61, v74, &qword_1000CA958);
  uint64_t v63 = v62 + *(int *)(sub_10001C28C(&qword_1000CA988) + 48);
  *(void *)uint64_t v63 = v47;
  *(void *)(v63 + 8) = v49;
  *(unsigned char *)(v63 + 16) = v25 & 1;
  *(void *)(v63 + 24) = v52;
  *(unsigned char *)(v63 + 32) = v43;
  *(void *)(v63 + 40) = v54;
  *(void *)(v63 + 48) = v56;
  *(void *)(v63 + 56) = v58;
  *(void *)(v63 + 64) = v60;
  *(unsigned char *)(v63 + 72) = 0;
  sub_100037CB8(v47, v49, v25 & 1);
  swift_bridgeObjectRetain();
  sub_100037CB8(v47, v49, v25 & 1);
  swift_bridgeObjectRetain();
  swift_release();
  swift_release();
  swift_release();
  sub_100016FDC(v47, v49, v25 & 1);
  swift_bridgeObjectRelease();
  sub_1000143B4(v41, &qword_1000CA958);
  sub_100016FDC(v47, v49, v75);
  swift_bridgeObjectRelease();
  return sub_1000143B4(v61, &qword_1000CA958);
}

uint64_t sub_10007BFB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v22 = sub_10001C28C(&qword_1000CA990);
  __chkstk_darwin(v22);
  uint64_t v6 = (uint64_t *)((char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10001C28C(&qword_1000CA980);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)(a1 + *(int *)(type metadata accessor for UserGuideListItemView() + 24) + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v12 = v11;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v24 == 1)
  {
    uint64_t v13 = UserGuide.gradient.getter();
    __chkstk_darwin(v13);
    *(&v21 - 2) = (uint64_t)a2;
    static UnitPoint.topTrailing.getter();
    static UnitPoint.bottomLeading.getter();
    sub_10001C28C(&qword_1000C9578);
    sub_100018228();
    TipGradientView.init(_:startPoint:endPoint:gradientView:)();
    (*(void (**)(void *, char *, uint64_t))(v8 + 16))(v6, v10, v7);
    swift_storeEnumTagMultiPayload();
    sub_10001C28C(&qword_1000C95E8);
    sub_100009170(&qword_1000CA978, &qword_1000CA980);
    sub_10001D34C();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    uint64_t v15 = *a2;
    uint64_t v16 = a2[1];
    uint64_t v17 = a2[2];
    id v18 = [self systemBlueColor];
    uint64_t v19 = Color.init(_:)();
    uint64_t KeyPath = swift_getKeyPath();
    *uint64_t v6 = v15;
    v6[1] = v16;
    v6[2] = v17;
    v6[3] = KeyPath;
    v6[4] = v19;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10001C28C(&qword_1000C95E8);
    sub_100009170(&qword_1000CA978, &qword_1000CA980);
    sub_10001D34C();
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_10007C364@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v4;
  swift_retain();
  swift_retain();

  return swift_retain();
}

unint64_t sub_10007C3B8()
{
  unint64_t result = qword_1000CA960;
  if (!qword_1000CA960)
  {
    sub_10001AD28(&qword_1000CA940);
    sub_10007C42C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA960);
  }
  return result;
}

unint64_t sub_10007C42C()
{
  unint64_t result = qword_1000CA968;
  if (!qword_1000CA968)
  {
    sub_10001AD28(&qword_1000CA970);
    sub_100009170(&qword_1000CA978, &qword_1000CA980);
    sub_10001D34C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA968);
  }
  return result;
}

uint64_t sub_10007C4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001C28C(&qword_1000CA958);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007C544@<X0>(void *a1@<X8>)
{
  return sub_10007C364(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_10007C54C()
{
  return sub_100009170(&qword_1000CA998, &qword_1000CA9A0);
}

ValueMetadata *type metadata accessor for TipSearchResultsItemsView()
{
  return &type metadata for TipSearchResultsItemsView;
}

uint64_t sub_10007C598()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007C5B4()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v1 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t result = String.init(localized:table:bundle:locale:comment:)();
  qword_1000CD218 = result;
  unk_1000CD220 = v3;
  return result;
}

uint64_t sub_10007C6BC(long long *a1)
{
  uint64_t v2 = type metadata accessor for SearchResult.Item.Category();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v11 = *a1;
  uint64_t v6 = (void *)*((void *)&v11 + 1);
  swift_getKeyPath();
  swift_getKeyPath();
  id v7 = v6;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v8 = (void (*)(char *))dispatch thunk of SearchResultsModel.searchResultsSeeAllHandler.getter();
  swift_release();
  uint64_t result = sub_100037664((uint64_t)&v11);
  if (v8)
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for SearchResult.Item.Category.tip(_:), v2);
    v8(v5);
    sub_100005470((uint64_t)v8);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

uint64_t sub_10007C83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  swift_getKeyPath();
  uint64_t v10 = swift_allocObject();
  long long v11 = a5[3];
  *(_OWORD *)(v10 + 48) = a5[2];
  *(_OWORD *)(v10 + 64) = v11;
  *(_OWORD *)(v10 + 80) = a5[4];
  long long v12 = a5[1];
  *(_OWORD *)(v10 + 16) = *a5;
  *(_OWORD *)(v10 + 32) = v12;
  *(void *)(v10 + 96) = a1;
  *(void *)(v10 + 104) = a2;
  *(void *)(v10 + 112) = a3;
  *(void *)(v10 + 120) = a4;
  swift_unknownObjectRetain_n();
  sub_100037D5C((uint64_t)a5);
  sub_10001C28C(&qword_1000CAA60);
  sub_10001C28C(&qword_1000CAA40);
  sub_100009170(&qword_1000CAA68, &qword_1000CAA60);
  sub_10007D484();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_10007C984@<X0>(void **a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, unint64_t a5@<X5>, uint64_t a6@<X8>)
{
  unint64_t v69 = a5;
  uint64_t v70 = a4;
  uint64_t v60 = a3;
  uint64_t v68 = a6;
  uint64_t v8 = type metadata accessor for TipListItemView(0);
  uint64_t v9 = (int *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  long long v12 = (uint64_t *)((char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v59 - v13;
  uint64_t v72 = sub_10001C28C(&qword_1000CAA50);
  __chkstk_darwin(v72);
  uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10001C28C(&qword_1000CAA48);
  uint64_t v62 = *(void *)(v17 - 8);
  uint64_t v63 = v17;
  __chkstk_darwin(v17);
  uint64_t v71 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10001C28C(&qword_1000CAA70);
  uint64_t v66 = *(void *)(v19 - 8);
  uint64_t v67 = v19;
  __chkstk_darwin(v19);
  uint64_t v65 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_10001C28C(&qword_1000CAA40);
  __chkstk_darwin(v61);
  char v64 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *a1;
  v77[0] = *a2;
  uint64_t v23 = (void *)*((void *)&v77[0] + 1);
  *long long v12 = swift_getKeyPath();
  sub_10001C28C(&qword_1000C81D0);
  swift_storeEnumTagMultiPayload();
  char v24 = (uint64_t *)((char *)v12 + v9[7]);
  sub_100037AD8((uint64_t)v77);
  type metadata accessor for TipListViewModel(0);
  sub_10007D6B4(&qword_1000C8C50, (void (*)(uint64_t))type metadata accessor for TipListViewModel);
  id v25 = v22;
  uint64_t *v24 = ObservedObject.init(wrappedValue:)();
  v24[1] = v26;
  *(uint64_t *)((char *)v12 + v9[8]) = (uint64_t)v25;
  *(uint64_t *)((char *)v12 + v9[9]) = 3;
  sub_100049BA8((uint64_t)v12, (uint64_t)v14);
  id v27 = [v25 identifier];
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  swift_getKeyPath();
  swift_getKeyPath();
  id v31 = v23;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_100037664((uint64_t)v77);
  if (v73 == 1)
  {
    long long v32 = a2[2];
    long long v73 = a2[1];
    long long v74 = v32;
    sub_100037D5C((uint64_t)a2);
    sub_10001C28C(&qword_1000C82F0);
    Binding.wrappedValue.getter();
    if (v76)
    {
      if (v75 == v28 && v76 == v30)
      {
        sub_100037DC0((uint64_t)a2);
        swift_bridgeObjectRelease();
LABEL_8:
        id v34 = [self tintColor];
        uint64_t v35 = Color.init(uiColor:)();
        swift_bridgeObjectRelease();
        *(void *)&long long v73 = v35;
        swift_retain();
        uint64_t v36 = AnyView.init<A>(_:)();
        sub_10007D704((uint64_t)v14, (uint64_t)v16);
        swift_release();
        uint64_t v37 = v72;
        *(void *)&v16[*(int *)(v72 + 36)] = v36;
        goto LABEL_10;
      }
      char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_100037DC0((uint64_t)a2);
      swift_bridgeObjectRelease();
      if (v33) {
        goto LABEL_8;
      }
    }
    else
    {
      sub_100037DC0((uint64_t)a2);
    }
  }
  swift_bridgeObjectRelease();
  sub_10007D704((uint64_t)v14, (uint64_t)v16);
  uint64_t v37 = v72;
  *(void *)&v16[*(int *)(v72 + 36)] = 0;
LABEL_10:
  uint64_t result = sub_100049C0C((uint64_t)v14);
  uint64_t v39 = v70;
  int64_t v40 = v69 >> 1;
  uint64_t v41 = v71;
  if (v69 >> 1 != v70)
  {
    if (v40 <= v70)
    {
      __break(1u);
      goto LABEL_18;
    }
    uint64_t v42 = *(void **)(v60 + 8 * v70);
    sub_100037FDC();
    id v43 = v25;
    id v44 = v42;
    static NSObject.== infix(_:_:)();
  }
  static VerticalEdge.Set.top.getter();
  unint64_t v45 = sub_10007D564();
  View.listRowSeparator(_:edges:)();
  uint64_t result = sub_10007D768((uint64_t)v16);
  if (v40 == v39)
  {
LABEL_16:
    static VerticalEdge.Set.bottom.getter();
    *(void *)&long long v73 = v37;
    *((void *)&v73 + 1) = v45;
    swift_getOpaqueTypeConformance2();
    uint64_t v49 = v65;
    uint64_t v50 = v63;
    View.listRowSeparator(_:edges:)();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v41, v50);
    uint64_t v51 = swift_allocObject();
    long long v52 = a2[3];
    *(_OWORD *)(v51 + 48) = a2[2];
    *(_OWORD *)(v51 + 64) = v52;
    *(_OWORD *)(v51 + 80) = a2[4];
    long long v53 = a2[1];
    *(_OWORD *)(v51 + 16) = *a2;
    *(_OWORD *)(v51 + 32) = v53;
    *(void *)(v51 + 96) = v25;
    uint64_t v55 = v66;
    uint64_t v54 = v67;
    uint64_t v56 = (uint64_t)v64;
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v64, v49, v67);
    uint64_t v57 = (uint64_t (**)())(v56 + *(int *)(v61 + 36));
    char *v57 = sub_10007D828;
    v57[1] = (uint64_t (*)())v51;
    id v58 = v25;
    sub_100037D5C((uint64_t)a2);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v49, v54);
    return sub_10007D834(v56, v68);
  }
  if (v40 > v39)
  {
    char v46 = *(void **)(v60 + 8 * v40 - 8);
    sub_100037FDC();
    id v47 = v25;
    id v48 = v46;
    static NSObject.== infix(_:_:)();

    goto LABEL_16;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_10007D080(uint64_t a1, id a2)
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(a1 + 64);
  id v3 = [a2 identifier];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  v2(v4, v6);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10007D104()
{
  if (qword_1000C8008 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1000CD218;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_10007D16C()
{
  uint64_t v1 = sub_10001C28C(&qword_1000C8260);
  __chkstk_darwin(v1);
  long long v2 = v0[3];
  void v8[2] = v0[2];
  long long v9 = v2;
  long long v3 = v0[4];
  long long v4 = v0[1];
  v8[0] = *v0;
  v8[1] = v4;
  long long v10 = v3;
  long long v11 = v8[0];
  id v5 = *((id *)&v8[0] + 1);
  unint64_t v6 = dispatch thunk of TipNavigationViewModel.tips.getter();
  sub_100037664((uint64_t)&v11);
  sub_100037E24(v9, v6);
  swift_bridgeObjectRelease();
  sub_100037D5C((uint64_t)v8);
  sub_100035EB0();
  sub_100037DC0((uint64_t)v8);
  sub_10001C28C(&qword_1000CAA28);
  sub_1000376FC();
  sub_10007D410();
  Section<>.init(header:content:)();
  return swift_unknownObjectRelease();
}

uint64_t sub_10007D2E0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10007D330()
{
  unint64_t result = qword_1000CA9A8;
  if (!qword_1000CA9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CA9A8);
  }
  return result;
}

unint64_t sub_10007D384(uint64_t a1)
{
  unint64_t result = sub_10007D3AC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10007D3AC()
{
  unint64_t result = qword_1000CAA20;
  if (!qword_1000CAA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CAA20);
  }
  return result;
}

uint64_t sub_10007D400()
{
  return sub_10007C83C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(_OWORD **)(v0 + 48));
}

unint64_t sub_10007D410()
{
  unint64_t result = qword_1000CAA30;
  if (!qword_1000CAA30)
  {
    sub_10001AD28(&qword_1000CAA28);
    sub_10007D484();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CAA30);
  }
  return result;
}

unint64_t sub_10007D484()
{
  unint64_t result = qword_1000CAA38;
  if (!qword_1000CAA38)
  {
    sub_10001AD28(&qword_1000CAA40);
    sub_10001AD28(&qword_1000CAA48);
    sub_10001AD28(&qword_1000CAA50);
    sub_10007D564();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1000379E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CAA38);
  }
  return result;
}

unint64_t sub_10007D564()
{
  unint64_t result = qword_1000CAA58;
  if (!qword_1000CAA58)
  {
    sub_10001AD28(&qword_1000CAA50);
    sub_10007D6B4(&qword_1000C8F58, (void (*)(uint64_t))type metadata accessor for TipListItemView);
    sub_100009170(&qword_1000C82C0, &qword_1000C82C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CAA58);
  }
  return result;
}

uint64_t sub_10007D63C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_10007D69C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007C984(a1, (_OWORD *)(v2 + 16), *(void *)(v2 + 104), *(void *)(v2 + 112), *(void *)(v2 + 120), a2);
}

uint64_t sub_10007D6B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007D704(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TipListItemView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007D768(uint64_t a1)
{
  uint64_t v2 = sub_10001C28C(&qword_1000CAA50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10007D7C8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_10007D828()
{
  return sub_10007D080(v0 + 16, *(id *)(v0 + 96));
}

uint64_t sub_10007D834(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001C28C(&qword_1000CAA40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10007D8A8()
{
  unint64_t result = qword_1000CAA78;
  if (!qword_1000CAA78)
  {
    sub_10001AD28(&qword_1000CAA80);
    sub_1000376FC();
    sub_10007D410();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CAA78);
  }
  return result;
}

uint64_t sub_10007D930(uint64_t a1)
{
  return sub_10007D9C0(a1, qword_1000CAA88);
}

uint64_t sub_10007D954(uint64_t a1)
{
  return sub_10007D9C0(a1, qword_1000CAAA0);
}

uint64_t sub_10007D978(uint64_t a1)
{
  return sub_10007D9C0(a1, qword_1000CAAB8);
}

uint64_t sub_10007D99C(uint64_t a1)
{
  return sub_10007D9C0(a1, qword_1000CAAD0);
}

uint64_t sub_10007D9C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for PPTTestCase.Name();
  sub_1000687E0(v3, a2);
  sub_1000524A4(v3, (uint64_t)a2);
  return PPTTestCase.Name.init(_:)();
}

uint64_t sub_10007DA20@<X0>(void (*a1)(char *, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  id v58 = a1;
  uint64_t v54 = a2;
  uint64_t v4 = type metadata accessor for ScrollVerticallyTestSupport();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  id v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PPTTestCase.Name();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  long long v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10001C28C(&qword_1000CAB88);
  uint64_t v46 = *(void *)(v12 - 8);
  uint64_t v47 = v12;
  __chkstk_darwin(v12);
  uint64_t v57 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10001C28C(&qword_1000CAB90);
  uint64_t v49 = *(void *)(v14 - 8);
  uint64_t v50 = v14;
  __chkstk_darwin(v14);
  id v48 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10001C28C(&qword_1000CAB98);
  uint64_t v52 = *(void *)(v16 - 8);
  uint64_t v53 = v16;
  __chkstk_darwin(v16);
  uint64_t v51 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000C8010 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1000524A4(v8, (uint64_t)qword_1000CAA88);
  uint64_t v19 = v9 + 16;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v20(v11, v18, v8);
  sub_10007EC90(v2, (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v22 = (v21 + 16) & ~v21;
  uint64_t v59 = v21 | 7;
  uint64_t v60 = v22 + v6;
  uint64_t v23 = swift_allocObject();
  uint64_t v61 = v22;
  sub_10007ECF8((uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22);
  uint64_t v56 = v3;
  uint64_t v24 = sub_10001C28C(&qword_1000CABA0);
  uint64_t v25 = sub_100009170(&qword_1000CABA8, &qword_1000CABA0);
  View.onTest(_:handler:)();
  swift_release();
  id v27 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v26 = (char *)(v9 + 8);
  id v58 = v27;
  v27(v11, v8);
  if (qword_1000C8018 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_1000524A4(v8, (uint64_t)qword_1000CAAA0);
  v20(v11, v28, v8);
  sub_10007EC90(v56, (uint64_t)v7);
  uint64_t v29 = swift_allocObject();
  uint64_t v55 = v20;
  sub_10007ECF8((uint64_t)v7, v29 + v61);
  uint64_t v62 = v24;
  uint64_t v63 = v25;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v31 = v47;
  long long v32 = v48;
  char v33 = v57;
  View.onTest(_:handler:)();
  swift_release();
  v58(v11, v8);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v31);
  uint64_t v57 = v26;
  uint64_t v34 = v19;
  uint64_t v35 = (uint64_t)v7;
  if (qword_1000C8020 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_1000524A4(v8, (uint64_t)qword_1000CAAB8);
  v55(v11, v36, v8);
  uint64_t v37 = v56;
  sub_10007EC90(v56, v35);
  uint64_t v38 = swift_allocObject();
  sub_10007ECF8(v35, v38 + v61);
  uint64_t v62 = v31;
  uint64_t v63 = OpaqueTypeConformance2;
  uint64_t v39 = swift_getOpaqueTypeConformance2();
  uint64_t v40 = v50;
  uint64_t v41 = v51;
  uint64_t v47 = v34;
  View.onTest(_:handler:)();
  swift_release();
  v58(v11, v8);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v40);
  if (qword_1000C8028 != -1) {
    swift_once();
  }
  uint64_t v42 = sub_1000524A4(v8, (uint64_t)qword_1000CAAD0);
  v55(v11, v42, v8);
  sub_10007EC90(v37, v35);
  uint64_t v43 = swift_allocObject();
  sub_10007ECF8(v35, v43 + v61);
  uint64_t v62 = v40;
  uint64_t v63 = v39;
  swift_getOpaqueTypeConformance2();
  uint64_t v44 = v53;
  View.onTest(_:handler:)();
  swift_release();
  v58(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v41, v44);
}

uint64_t sub_10007E180(uint64_t a1)
{
  uint64_t v36 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v35 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  __chkstk_darwin(v3);
  uint64_t v34 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ScrollVerticallyTestSupport();
  uint64_t v29 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v29 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v28 = (uint64_t)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PPTTestCase();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = type metadata accessor for DispatchTime();
  uint64_t v32 = v10;
  uint64_t v27 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v30 = (char *)&v27 - v14;
  PPTTestCase.startTest()();
  sub_1000067A4(0, (unint64_t *)&qword_1000C84E0);
  uint64_t v31 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v27 + 8);
  v15(v13, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  uint64_t v16 = v28;
  sub_10007EC90(v33, v28);
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v18 = (v9 + *(unsigned __int8 *)(v29 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v19 + v17, (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  sub_10007ECF8(v16, v19 + v18);
  aBlock[4] = sub_10007EF34;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000374C;
  aBlock[3] = &unk_1000B9448;
  uint64_t v20 = _Block_copy(aBlock);
  swift_release();
  uint64_t v21 = v34;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100056128();
  sub_10001C28C(&qword_1000C84F0);
  sub_100009170((unint64_t *)&qword_1000C84F8, &qword_1000C84F0);
  uint64_t v22 = v35;
  uint64_t v23 = v36;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v25 = v30;
  uint64_t v24 = (void *)v31;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v23);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v38);
  return ((uint64_t (*)(char *, uint64_t))v15)(v25, v32);
}

uint64_t sub_10007E6B4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v9 = *(id *)(v4 + *a4);
  sub_1000067A4(0, (unint64_t *)&qword_1000C8878);
  id v5 = v9;
  sub_10001C28C(&qword_1000CAAE8);
  if (swift_dynamicCast())
  {
    sub_10007E914(v7, (uint64_t)v10);
    sub_10003AAD4(v10, v10[3]);
    dispatch thunk of PPTTestHost.runTest(_:options:)();
    return sub_10003AB18((uint64_t)v10);
  }
  else
  {
    uint64_t v8 = 0;
    memset(v7, 0, sizeof(v7));
    sub_10007E8B4((uint64_t)v7);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_10007E7F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;
  uint64_t v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  id v11 = a1;
  sub_10007E6B4(v7, v9, v10, a5);

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10007E8B4(uint64_t a1)
{
  uint64_t v2 = sub_10001C28C(&qword_1000CAAF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10007E914(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_10007E92C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrollViewProxy();
  id v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_10007E998(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScrollViewProxy();
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10007E9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrollViewProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10007EA60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrollViewProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10007EAC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrollViewProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10007EB28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrollViewProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10007EB8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007EBA0);
}

uint64_t sub_10007EBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrollViewProxy();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10007EC0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007EC20);
}

uint64_t sub_10007EC20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrollViewProxy();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_10007EC90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrollVerticallyTestSupport();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007ECF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrollVerticallyTestSupport();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007ED6C(uint64_t a1)
{
  return sub_10007E180(a1);
}

uint64_t sub_10007EDD0()
{
  uint64_t v1 = type metadata accessor for PPTTestCase();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for ScrollVerticallyTestSupport() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v3 | v7 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v11 = type metadata accessor for ScrollViewProxy();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v0 + v8, v11);

  return _swift_deallocObject(v0, v9, v10);
}

uint64_t sub_10007EF34()
{
  return PPTTestCase.performScrollTest(_:)();
}

uint64_t sub_10007EFF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007F0F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v3 = sub_10001C28C(&qword_1000CABB0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AttributeContainer();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v16 = a1;
  v9((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  type metadata accessor for AttributeScopes.UIKitAttributes();
  sub_10007F360();
  uint64_t v10 = Dictionary<>.init<A>(_:including:)();
  uint64_t v11 = swift_bridgeObjectRetain();
  sub_10007F3B8(v11, v10);
  AttributeContainer.init<A>(_:including:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  int v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  uint64_t v13 = v17;
  if (v12 != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v17, v5, v6);
  }
  sub_1000143B4((uint64_t)v5, &qword_1000CABB0);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v13, v16, v6);
}

unint64_t sub_10007F360()
{
  unint64_t result = qword_1000CABB8;
  if (!qword_1000CABB8)
  {
    type metadata accessor for AttributeScopes.UIKitAttributes();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000CABB8);
  }
  return result;
}

uint64_t sub_10007F3B8(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_10007F494(a1, (uint64_t)sub_10007F444, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

id sub_10007F444@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id v4 = *a1;
  sub_100055024((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  *a2 = v4;

  return v4;
}

uint64_t sub_10007F494(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v46 = a1;
  uint64_t v47 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v48 = v8;
  uint64_t v49 = 0;
  uint64_t v50 = v11 & v9;
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10007F7C0((uint64_t)&v44);
  int v12 = v44;
  if (!v44) {
    goto LABEL_27;
  }
  sub_10001C9D4(v45, v43);
  uint64_t v13 = *(void **)a5;
  unint64_t v15 = sub_100003FFC((uint64_t)v12);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v19 = v14;
  if (v13[3] >= v18)
  {
    if (a4)
    {
      if (v14) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_100054E5C();
      if (v19) {
        goto LABEL_12;
      }
    }
LABEL_14:
    uint64_t v23 = *(void **)a5;
    *(void *)(*(void *)a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(void *)(v23[6] + 8 * v15) = v12;
    sub_10001C9D4(v43, (_OWORD *)(v23[7] + 32 * v15));
    uint64_t v24 = v23[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    void v23[2] = v26;
LABEL_16:
    sub_10007F7C0((uint64_t)&v44);
    for (uint64_t i = v44; v44; uint64_t i = v44)
    {
      sub_10001C9D4(v45, v43);
      uint64_t v29 = *(void **)a5;
      unint64_t v31 = sub_100003FFC((uint64_t)i);
      uint64_t v32 = v29[2];
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33)) {
        goto LABEL_28;
      }
      char v35 = v30;
      if (v29[3] < v34)
      {
        sub_1000542B8(v34, 1);
        unint64_t v36 = sub_100003FFC((uint64_t)i);
        if ((v35 & 1) != (v37 & 1)) {
          goto LABEL_30;
        }
        unint64_t v31 = v36;
      }
      if (v35)
      {
        sub_100055024((uint64_t)v43, (uint64_t)v42);
        sub_10003AB18((uint64_t)v43);

        uint64_t v28 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v31);
        sub_10003AB18((uint64_t)v28);
        sub_10001C9D4(v42, v28);
      }
      else
      {
        uint64_t v38 = *(void **)a5;
        *(void *)(*(void *)a5 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        *(void *)(v38[6] + 8 * v31) = i;
        sub_10001C9D4(v43, (_OWORD *)(v38[7] + 32 * v31));
        uint64_t v39 = v38[2];
        BOOL v25 = __OFADD__(v39, 1);
        uint64_t v40 = v39 + 1;
        if (v25) {
          goto LABEL_29;
        }
        _OWORD v38[2] = v40;
      }
      sub_10007F7C0((uint64_t)&v44);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_10007F998();
    return swift_release();
  }
  sub_1000542B8(v18, a4 & 1);
  unint64_t v20 = sub_100003FFC((uint64_t)v12);
  if ((v19 & 1) == (v21 & 1))
  {
    unint64_t v15 = v20;
    if ((v19 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    sub_100055024((uint64_t)v43, (uint64_t)v42);
    sub_10003AB18((uint64_t)v43);

    uint64_t v22 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v15);
    sub_10003AB18((uint64_t)v22);
    sub_10001C9D4(v42, v22);
    goto LABEL_16;
  }
LABEL_30:
  type metadata accessor for Key(0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10007F7C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = *(void **)(*(void *)(v3 + 48) + 8 * v10);
    sub_100055024(*(void *)(v3 + 56) + 32 * v10, (uint64_t)v24 + 8);
    *(void *)&v24[0] = v11;
    id v12 = v11;
    goto LABEL_23;
  }
  int64_t v13 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v14 = (unint64_t)(v6 + 64) >> 6;
  if (v13 < v14)
  {
    unint64_t v15 = *(void *)(v4 + 8 * v13);
    if (v15)
    {
LABEL_7:
      uint64_t v9 = (v15 - 1) & v15;
      unint64_t v10 = __clz(__rbit64(v15)) + (v13 << 6);
      int64_t v7 = v13;
      goto LABEL_3;
    }
    int64_t v16 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v14)
    {
      unint64_t v15 = *(void *)(v4 + 8 * v16);
      if (v15)
      {
LABEL_10:
        int64_t v13 = v16;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v14)
      {
        unint64_t v15 = *(void *)(v4 + 8 * (v5 + 3));
        if (v15)
        {
          int64_t v13 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v16 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v14)
        {
          unint64_t v15 = *(void *)(v4 + 8 * v16);
          if (v15) {
            goto LABEL_10;
          }
          int64_t v13 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v14)
          {
            unint64_t v15 = *(void *)(v4 + 8 * v13);
            if (v15) {
              goto LABEL_7;
            }
            int64_t v7 = v14 - 1;
            int64_t v17 = v5 + 6;
            while (v14 != v17)
            {
              unint64_t v15 = *(void *)(v4 + 8 * v17++);
              if (v15)
              {
                int64_t v13 = v17 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  uint64_t v25 = 0;
  memset(v24, 0, sizeof(v24));
LABEL_23:
  *uint64_t v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  uint64_t v18 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_10007F9A0((uint64_t)v24, (uint64_t)v22);
  if (*(void *)&v22[0])
  {
    v20[0] = v22[0];
    v20[1] = v22[1];
    uint64_t v21 = v23;
    v18(v20);
    return sub_1000143B4((uint64_t)v20, &qword_1000CABC8);
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_10007F998()
{
  return swift_release();
}

uint64_t sub_10007F9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10001C28C(&qword_1000CABC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007FA08()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

id sub_10007FA3C()
{
  type metadata accessor for ResourceBundleClass();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = [self bundleForClass:ObjCClassFromMetadata];
  qword_1000CABD0 = (uint64_t)result;
  return result;
}

uint64_t sub_10007FA94()
{
  uint64_t v0 = type metadata accessor for ImageResource();
  sub_1000687E0(v0, qword_1000CD228);
  sub_1000524A4(v0, (uint64_t)qword_1000CD228);
  if (qword_1000C8030 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1000CABD0;
  return ImageResource.init(name:bundle:)();
}

void sub_10007FB44()
{
  sub_100023C7C();
  sub_100023C60((void *)&_mh_execute_header, v0, v1, "Tips App Starting...", v2, v3, v4, v5, v6);
}

void sub_10007FB78()
{
  sub_100023C7C();
  sub_100023C60((void *)&_mh_execute_header, v0, v1, "Tips App will terminate...", v2, v3, v4, v5, v6);
}

void sub_10007FBAC()
{
  sub_100023C7C();
  sub_100023C60((void *)&_mh_execute_header, v0, v1, "will enter foreground", v2, v3, v4, v5, v6);
}

void sub_10007FBE0()
{
  sub_100023C7C();
  sub_100023C60((void *)&_mh_execute_header, v0, v1, "did enter background", v2, v3, v4, v5, v6);
}

void sub_10007FC14(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 identifier];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Set current tip to %@.", (uint8_t *)&v4, 0xCu);
}

void sub_10007FCAC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10007FD18(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10007FD84(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

uint64_t static _AssistantIntentsProvider.uniqueEntities.getter()
{
  return static _AssistantIntentsProvider.uniqueEntities.getter();
}

uint64_t AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)()
{
  return AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
}

uint64_t AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)()
{
  return AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
}

Swift::Void __swiftcall AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t AppShortcutPhrase.init(stringInterpolation:)()
{
  return AppShortcutPhrase.init(stringInterpolation:)();
}

uint64_t static AppShortcutsBuilder.buildBlock(_:)()
{
  return static AppShortcutsBuilder.buildBlock(_:)();
}

uint64_t static AppShortcutsBuilder.buildExpression(_:)()
{
  return static AppShortcutsBuilder.buildExpression(_:)();
}

uint64_t static AppShortcutsProvider.updateAppShortcutParameters()()
{
  return static AppShortcutsProvider.updateAppShortcutParameters()();
}

uint64_t static AppShortcutsProvider.shortcutTileColor.getter()
{
  return static AppShortcutsProvider.shortcutTileColor.getter();
}

uint64_t type metadata accessor for AppShortcutPhraseToken()
{
  return type metadata accessor for AppShortcutPhraseToken();
}

uint64_t AppEntity.fullyQualifiedIdentifier.getter()
{
  return AppEntity.fullyQualifiedIdentifier.getter();
}

uint64_t static AppIntent.openAppWhenRun.getter()
{
  return static AppIntent.openAppWhenRun.getter();
}

uint64_t static AppIntent.description.getter()
{
  return static AppIntent.description.getter();
}

uint64_t AppIntent.systemContext.getter()
{
  return AppIntent.systemContext.getter();
}

uint64_t static AppIntent.isDiscoverable.getter()
{
  return static AppIntent.isDiscoverable.getter();
}

uint64_t static AppIntent.authenticationPolicy.getter()
{
  return static AppIntent.authenticationPolicy.getter();
}

uint64_t AppShortcut.init<A>(intent:phrases:shortTitle:systemImageName:)()
{
  return AppShortcut.init<A>(intent:phrases:shortTitle:systemImageName:)();
}

uint64_t type metadata accessor for AppShortcut()
{
  return type metadata accessor for AppShortcut();
}

uint64_t type metadata accessor for IntentDialog()
{
  return type metadata accessor for IntentDialog();
}

uint64_t IntentDialog.init(_:)()
{
  return IntentDialog.init(_:)();
}

uint64_t static IntentResult.result<>()()
{
  return static IntentResult.result<>()();
}

uint64_t IntentParameter.wrappedValue.getter()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t IntentParameter.wrappedValue.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t IntentParameter.projectedValue.getter()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)()
{
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t type metadata accessor for EntityIdentifier()
{
  return type metadata accessor for EntityIdentifier();
}

uint64_t _AssistantIntent.IntentProjection.subscript.getter()
{
  return _AssistantIntent.IntentProjection.subscript.getter();
}

uint64_t static _AssistantIntent.PhraseBuilder.buildBlock(_:)()
{
  return static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
}

uint64_t static _AssistantIntent.PhraseBuilder.buildExpression(_:)()
{
  return static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
}

uint64_t static _AssistantIntent.StringValueBuilder.buildBlock(_:)()
{
  return static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
}

uint64_t static _AssistantIntent.StringValueBuilder.buildExpression(_:)()
{
  return static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
}

uint64_t static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)()
{
  return static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
}

uint64_t static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)()
{
  return static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
}

uint64_t _AssistantIntent.Value.init<A>(for:builder:)()
{
  return _AssistantIntent.Value.init<A>(for:builder:)();
}

uint64_t type metadata accessor for _AssistantIntent.Value()
{
  return type metadata accessor for _AssistantIntent.Value();
}

uint64_t _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)()
{
  return _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
}

Swift::Void __swiftcall _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t _AssistantIntent.Phrase.init(stringInterpolation:)()
{
  return _AssistantIntent.Phrase.init(stringInterpolation:)();
}

uint64_t static _AssistantIntent.Builder.buildBlock(_:)()
{
  return static _AssistantIntent.Builder.buildBlock(_:)();
}

uint64_t static _AssistantIntent.Builder.buildExpression(_:)()
{
  return static _AssistantIntent.Builder.buildExpression(_:)();
}

uint64_t type metadata accessor for _AssistantIntent()
{
  return type metadata accessor for _AssistantIntent();
}

uint64_t _AssistantIntent.init<A>(_:phrases:parameterValues:)()
{
  return _AssistantIntent.init<A>(_:phrases:parameterValues:)();
}

uint64_t type metadata accessor for IntentSystemContext.Source()
{
  return type metadata accessor for IntentSystemContext.Source();
}

uint64_t IntentSystemContext.source.getter()
{
  return IntentSystemContext.source.getter();
}

uint64_t type metadata accessor for IntentSystemContext()
{
  return type metadata accessor for IntentSystemContext();
}

uint64_t DisplayRepresentation.Image.init(systemName:isTemplate:)()
{
  return DisplayRepresentation.Image.init(systemName:isTemplate:)();
}

uint64_t type metadata accessor for DisplayRepresentation.Image()
{
  return type metadata accessor for DisplayRepresentation.Image();
}

uint64_t DisplayRepresentation.init(title:subtitle:image:)()
{
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t static DynamicOptionsProvider.useForParameterResolution.getter()
{
  return static DynamicOptionsProvider.useForParameterResolution.getter();
}

uint64_t IntentParameterSummary.init(_:table:)()
{
  return IntentParameterSummary.init(_:table:)();
}

uint64_t ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)()
{
  return ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
}

Swift::Void __swiftcall ParameterSummaryString.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t ParameterSummaryString.init(stringInterpolation:)()
{
  return ParameterSummaryString.init(stringInterpolation:)();
}

uint64_t type metadata accessor for InputConnectionBehavior()
{
  return type metadata accessor for InputConnectionBehavior();
}

uint64_t static PersistentlyIdentifiable.persistentIdentifier.getter()
{
  return static PersistentlyIdentifiable.persistentIdentifier.getter();
}

uint64_t TypeDisplayRepresentation.init(name:numericFormat:)()
{
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t type metadata accessor for TypeDisplayRepresentation()
{
  return type metadata accessor for TypeDisplayRepresentation();
}

uint64_t type metadata accessor for AttributeScopes.UIKitAttributes()
{
  return type metadata accessor for AttributeScopes.UIKitAttributes();
}

uint64_t type metadata accessor for AttributedString.MarkdownParsingOptions.FailurePolicy()
{
  return type metadata accessor for AttributedString.MarkdownParsingOptions.FailurePolicy();
}

uint64_t type metadata accessor for AttributedString.MarkdownParsingOptions.InterpretedSyntax()
{
  return type metadata accessor for AttributedString.MarkdownParsingOptions.InterpretedSyntax();
}

uint64_t AttributedString.MarkdownParsingOptions.init(allowsExtendedAttributes:interpretedSyntax:failurePolicy:languageCode:)()
{
  return AttributedString.MarkdownParsingOptions.init(allowsExtendedAttributes:interpretedSyntax:failurePolicy:languageCode:)();
}

uint64_t type metadata accessor for AttributedString.MarkdownParsingOptions()
{
  return type metadata accessor for AttributedString.MarkdownParsingOptions();
}

uint64_t AttributedString.init(markdown:options:baseURL:)()
{
  return AttributedString.init(markdown:options:baseURL:)();
}

uint64_t type metadata accessor for AttributedString()
{
  return type metadata accessor for AttributedString();
}

uint64_t type metadata accessor for AttributeContainer()
{
  return type metadata accessor for AttributeContainer();
}

uint64_t AttributeContainer.init<A>(_:including:)()
{
  return AttributeContainer.init<A>(_:including:)();
}

uint64_t AttributeContainer.init(_:)()
{
  return AttributeContainer.init(_:)();
}

uint64_t LocalizedStringResource.init(stringLiteral:)()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t type metadata accessor for LocalizedStringResource.BundleDescription()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription();
}

uint64_t type metadata accessor for LocalizedStringResource()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)()
{
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
}

uint64_t LocalizedStringResource.init(_:table:locale:bundle:comment:)()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t AttributedStringProtocol.settingAttributes(_:)()
{
  return AttributedStringProtocol.settingAttributes(_:)();
}

uint64_t URL.init(fileURLWithPath:)()
{
  return URL.init(fileURLWithPath:)();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

uint64_t static Locale.current.getter()
{
  return static Locale.current.getter();
}

uint64_t type metadata accessor for Locale.Language()
{
  return type metadata accessor for Locale.Language();
}

uint64_t type metadata accessor for Locale()
{
  return type metadata accessor for Locale();
}

uint64_t ImageResource.init(name:bundle:)()
{
  return ImageResource.init(name:bundle:)();
}

uint64_t type metadata accessor for ImageResource()
{
  return type metadata accessor for ImageResource();
}

uint64_t os_log(_:dso:log:_:_:)()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t UIBackgroundConfiguration.customView.setter()
{
  return UIBackgroundConfiguration.customView.setter();
}

uint64_t UIBackgroundConfiguration.strokeColor.setter()
{
  return UIBackgroundConfiguration.strokeColor.setter();
}

uint64_t UIBackgroundConfiguration.backgroundColor.setter()
{
  return UIBackgroundConfiguration.backgroundColor.setter();
}

uint64_t type metadata accessor for UIConfigurationTextAttributesTransformer()
{
  return type metadata accessor for UIConfigurationTextAttributesTransformer();
}

uint64_t UIConfigurationTextAttributesTransformer.init(_:)()
{
  return UIConfigurationTextAttributesTransformer.init(_:)();
}

uint64_t dispatch thunk of TipsContentModel.assetConfiguration(for:assets:updatedColorScheme:)()
{
  return dispatch thunk of TipsContentModel.assetConfiguration(for:assets:updatedColorScheme:)();
}

uint64_t static TipsContentModel.shared()()
{
  return static TipsContentModel.shared()();
}

uint64_t dispatch thunk of TipsContentModel.assetURL(for:type:)()
{
  return dispatch thunk of TipsContentModel.assetURL(for:type:)();
}

uint64_t type metadata accessor for TipsContentModel()
{
  return type metadata accessor for TipsContentModel();
}

uint64_t static TipsWorkspace.openSensitive(_:)()
{
  return static TipsWorkspace.openSensitive(_:)();
}

uint64_t RemoteImageView.init(identifier:url:isLoaded:placeholder:)()
{
  return RemoteImageView.init(identifier:url:isLoaded:placeholder:)();
}

uint64_t RemoteImageView<>.init(identifier:url:isLoaded:)()
{
  return RemoteImageView<>.init(identifier:url:isLoaded:)();
}

uint64_t RemoteVideoView.init(viewModel:showReplayButtonAtVideoEnd:isImageLoaded:)()
{
  return RemoteVideoView.init(viewModel:showReplayButtonAtVideoEnd:isImageLoaded:)();
}

uint64_t type metadata accessor for RemoteVideoView()
{
  return type metadata accessor for RemoteVideoView();
}

uint64_t TipGradientView.init(_:startPoint:endPoint:gradientView:)()
{
  return TipGradientView.init(_:startPoint:endPoint:gradientView:)();
}

uint64_t TPSAppSearchQuery.init(searchTerm:origin:identifier:)()
{
  return TPSAppSearchQuery.init(searchTerm:origin:identifier:)();
}

uint64_t dispatch thunk of TPSAppSearchQuery.searchTerm.getter()
{
  return dispatch thunk of TPSAppSearchQuery.searchTerm.getter();
}

uint64_t type metadata accessor for TPSAppSearchQuery()
{
  return type metadata accessor for TPSAppSearchQuery();
}

uint64_t dispatch thunk of SearchResultsModel.hasStartedSearch.getter()
{
  return dispatch thunk of SearchResultsModel.hasStartedSearch.getter();
}

uint64_t dispatch thunk of SearchResultsModel.hasSearchResults.getter()
{
  return dispatch thunk of SearchResultsModel.hasSearchResults.getter();
}

uint64_t dispatch thunk of SearchResultsModel.searchResultsSeeAllHandler.getter()
{
  return dispatch thunk of SearchResultsModel.searchResultsSeeAllHandler.getter();
}

uint64_t dispatch thunk of SearchResultsModel.searchResultsSeeAllHandler.setter()
{
  return dispatch thunk of SearchResultsModel.searchResultsSeeAllHandler.setter();
}

uint64_t dispatch thunk of SearchResultsModel.searchResultsTopicsUpdated.setter()
{
  return dispatch thunk of SearchResultsModel.searchResultsTopicsUpdated.setter();
}

uint64_t dispatch thunk of SearchResultsModel.searchResultsUpdated.setter()
{
  return dispatch thunk of SearchResultsModel.searchResultsUpdated.setter();
}

uint64_t dispatch thunk of SearchResultsModel.searchResultsTipsUpdated.setter()
{
  return dispatch thunk of SearchResultsModel.searchResultsTipsUpdated.setter();
}

uint64_t dispatch thunk of SearchResultsModel.queryCount.getter()
{
  return dispatch thunk of SearchResultsModel.queryCount.getter();
}

uint64_t dispatch thunk of SearchResultsModel.queryCount.setter()
{
  return dispatch thunk of SearchResultsModel.queryCount.setter();
}

uint64_t dispatch thunk of SearchResultsModel.searchTerm.getter()
{
  return dispatch thunk of SearchResultsModel.searchTerm.getter();
}

uint64_t dispatch thunk of SearchResultsModel.searchQuery.getter()
{
  return dispatch thunk of SearchResultsModel.searchQuery.getter();
}

uint64_t dispatch thunk of SearchResultsModel.searchQuery.setter()
{
  return dispatch thunk of SearchResultsModel.searchQuery.setter();
}

uint64_t dispatch thunk of SearchResultsModel.updateSelection(to:)()
{
  return dispatch thunk of SearchResultsModel.updateSelection(to:)();
}

uint64_t dispatch thunk of SearchResultsModel.topicActionHandler.getter()
{
  return dispatch thunk of SearchResultsModel.topicActionHandler.getter();
}

uint64_t dispatch thunk of SearchResultsModel.topicActionHandler.setter()
{
  return dispatch thunk of SearchResultsModel.topicActionHandler.setter();
}

uint64_t dispatch thunk of SearchResultsModel.searchResultSelected.setter()
{
  return dispatch thunk of SearchResultsModel.searchResultSelected.setter();
}

uint64_t dispatch thunk of SearchResultsModel.searchResultScrollHandler.getter()
{
  return dispatch thunk of SearchResultsModel.searchResultScrollHandler.getter();
}

uint64_t dispatch thunk of SearchResultsModel.searchResultScrollHandler.setter()
{
  return dispatch thunk of SearchResultsModel.searchResultScrollHandler.setter();
}

uint64_t dispatch thunk of SearchResultsModel.searchResultEligibilityFilter.getter()
{
  return dispatch thunk of SearchResultsModel.searchResultEligibilityFilter.getter();
}

uint64_t dispatch thunk of SearchResultsModel.searchResultEligibilityFilter.setter()
{
  return dispatch thunk of SearchResultsModel.searchResultEligibilityFilter.setter();
}

uint64_t dispatch thunk of SearchResultsModel.searchResultUserGuideResolver.getter()
{
  return dispatch thunk of SearchResultsModel.searchResultUserGuideResolver.getter();
}

uint64_t dispatch thunk of SearchResultsModel.searchResultUserGuideResolver.setter()
{
  return dispatch thunk of SearchResultsModel.searchResultUserGuideResolver.setter();
}

uint64_t dispatch thunk of SearchResultsModel.searchResultCollectionResolver.getter()
{
  return dispatch thunk of SearchResultsModel.searchResultCollectionResolver.getter();
}

uint64_t dispatch thunk of SearchResultsModel.searchResultCollectionResolver.setter()
{
  return dispatch thunk of SearchResultsModel.searchResultCollectionResolver.setter();
}

uint64_t dispatch thunk of SearchResultsModel.reset()()
{
  return dispatch thunk of SearchResultsModel.reset()();
}

uint64_t dispatch thunk of SearchResultsModel.hasTopics.getter()
{
  return dispatch thunk of SearchResultsModel.hasTopics.getter();
}

uint64_t SearchResultsModel.init()()
{
  return SearchResultsModel.init()();
}

uint64_t type metadata accessor for SearchResultsModel()
{
  return type metadata accessor for SearchResultsModel();
}

uint64_t dispatch thunk of TPSUIAppController.assetConfiguration(assets:language:sizeClass:style:assetFileInfoManager:)()
{
  return dispatch thunk of TPSUIAppController.assetConfiguration(assets:language:sizeClass:style:assetFileInfoManager:)();
}

uint64_t static TPSUIAppController.shared.getter()
{
  return static TPSUIAppController.shared.getter();
}

uint64_t type metadata accessor for TPSUIAppController()
{
  return type metadata accessor for TPSUIAppController();
}

uint64_t dispatch thunk of DocumentAssetViewModel.updateWithTipAssetInfo(_:shouldReload:)()
{
  return dispatch thunk of DocumentAssetViewModel.updateWithTipAssetInfo(_:shouldReload:)();
}

uint64_t dispatch thunk of DocumentAssetViewModel.resetVideo()()
{
  return dispatch thunk of DocumentAssetViewModel.resetVideo()();
}

uint64_t dispatch thunk of DocumentAssetViewModel.load()()
{
  return dispatch thunk of DocumentAssetViewModel.load()();
}

uint64_t dispatch thunk of DocumentAssetViewModel.cancel()()
{
  return dispatch thunk of DocumentAssetViewModel.cancel()();
}

uint64_t dispatch thunk of DocumentAssetViewModel.$player.getter()
{
  return dispatch thunk of DocumentAssetViewModel.$player.getter();
}

uint64_t DocumentAssetViewModel.init(document:assetsInfo:contentModel:)()
{
  return DocumentAssetViewModel.init(document:assetsInfo:contentModel:)();
}

uint64_t dispatch thunk of DocumentAssetViewModel.playVideo()()
{
  return dispatch thunk of DocumentAssetViewModel.playVideo()();
}

uint64_t type metadata accessor for DocumentAssetViewModel()
{
  return type metadata accessor for DocumentAssetViewModel();
}

uint64_t dispatch thunk of TipNavigationViewModel.updateSelectedTip(_:forceUpdate:)()
{
  return dispatch thunk of TipNavigationViewModel.updateSelectedTip(_:forceUpdate:)();
}

uint64_t dispatch thunk of TipNavigationViewModel.currentTip.getter()
{
  return dispatch thunk of TipNavigationViewModel.currentTip.getter();
}

uint64_t dispatch thunk of TipNavigationViewModel.tips.getter()
{
  return dispatch thunk of TipNavigationViewModel.tips.getter();
}

uint64_t dispatch thunk of TipNavigationViewModel.tips.setter()
{
  return dispatch thunk of TipNavigationViewModel.tips.setter();
}

uint64_t dispatch thunk of TipNavigationViewModel.goBack()()
{
  return dispatch thunk of TipNavigationViewModel.goBack()();
}

uint64_t dispatch thunk of TipNavigationViewModel.goNext()()
{
  return dispatch thunk of TipNavigationViewModel.goNext()();
}

uint64_t dispatch thunk of TipNavigationViewModel.canGoBack.getter()
{
  return dispatch thunk of TipNavigationViewModel.canGoBack.getter();
}

uint64_t dispatch thunk of TipNavigationViewModel.canGoNext.getter()
{
  return dispatch thunk of TipNavigationViewModel.canGoNext.getter();
}

uint64_t defaultParagraphSpacing.getter()
{
  return defaultParagraphSpacing.getter();
}

uint64_t ConstellationContentView.init(rawContent:language:assetsBaseURL:assetFileInfoManager:attributes:size:maxWidth:textIsSelectable:delegate:)()
{
  return ConstellationContentView.init(rawContent:language:assetsBaseURL:assetFileInfoManager:attributes:size:maxWidth:textIsSelectable:delegate:)();
}

uint64_t type metadata accessor for ConstellationContentView()
{
  return type metadata accessor for ConstellationContentView();
}

uint64_t ConstellationContentAttributes.init(font:foregroundColor:accentColor:titleGradientStyle:textAlignment:paragraphSpacing:paragraphStyle:numberOfLines:lineBreakMode:symbolScale:useForegroundColorForSymbol:displayLinkStyle:typeSettingLanguage:supportsLinks:)()
{
  return ConstellationContentAttributes.init(font:foregroundColor:accentColor:titleGradientStyle:textAlignment:paragraphSpacing:paragraphStyle:numberOfLines:lineBreakMode:symbolScale:useForegroundColorForSymbol:displayLinkStyle:typeSettingLanguage:supportsLinks:)();
}

uint64_t type metadata accessor for ConstellationContentAttributes()
{
  return type metadata accessor for ConstellationContentAttributes();
}

uint64_t type metadata accessor for ConstellationContentParagraphStyle()
{
  return type metadata accessor for ConstellationContentParagraphStyle();
}

uint64_t AnyCancellable.store(in:)()
{
  return AnyCancellable.store(in:)();
}

uint64_t ObservableObject<>.objectWillChange.getter()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t Published.init(initialValue:)()
{
  return Published.init(initialValue:)();
}

uint64_t Published.projectedValue.getter()
{
  return Published.projectedValue.getter();
}

uint64_t static Published.subscript.getter()
{
  return static Published.subscript.getter();
}

uint64_t static Published.subscript.setter()
{
  return static Published.subscript.setter();
}

uint64_t type metadata accessor for Published()
{
  return type metadata accessor for Published();
}

uint64_t Publisher.compactMap<A>(_:)()
{
  return Publisher.compactMap<A>(_:)();
}

uint64_t Publisher.map<A>(_:)()
{
  return Publisher.map<A>(_:)();
}

uint64_t Publisher.filter(_:)()
{
  return Publisher.filter(_:)();
}

uint64_t Publisher<>.removeDuplicates()()
{
  return Publisher<>.removeDuplicates()();
}

uint64_t Publisher<>.sink(receiveValue:)()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t EdgeInsets.init(_all:)()
{
  return EdgeInsets.init(_all:)();
}

uint64_t type metadata accessor for Prominence()
{
  return type metadata accessor for Prominence();
}

uint64_t type metadata accessor for ScenePhase()
{
  return type metadata accessor for ScenePhase();
}

uint64_t AnyGradient.init(colors:locations:interpolations:)()
{
  return AnyGradient.init(colors:locations:interpolations:)();
}

uint64_t static ColorScheme.== infix(_:_:)()
{
  return static ColorScheme.== infix(_:_:)();
}

uint64_t type metadata accessor for ColorScheme()
{
  return type metadata accessor for ColorScheme();
}

uint64_t DragGesture.init<A>(minimumDistance:coordinateSpace:)()
{
  return DragGesture.init<A>(minimumDistance:coordinateSpace:)();
}

uint64_t type metadata accessor for DragGesture()
{
  return type metadata accessor for DragGesture();
}

uint64_t type metadata accessor for Environment.Content()
{
  return type metadata accessor for Environment.Content();
}

uint64_t static GestureMask.all.getter()
{
  return static GestureMask.all.getter();
}

uint64_t PPTTestCase.performScrollTest(_:)()
{
  return PPTTestCase.performScrollTest(_:)();
}

uint64_t type metadata accessor for PPTTestCase.Name()
{
  return type metadata accessor for PPTTestCase.Name();
}

uint64_t PPTTestCase.Name.init(_:)()
{
  return PPTTestCase.Name.init(_:)();
}

Swift::Void __swiftcall PPTTestCase.startTest()()
{
}

uint64_t type metadata accessor for PPTTestCase()
{
  return type metadata accessor for PPTTestCase();
}

uint64_t dispatch thunk of PPTTestHost.runTest(_:options:)()
{
  return dispatch thunk of PPTTestHost.runTest(_:options:)();
}

uint64_t static VerticalEdge.Set.all.getter()
{
  return static VerticalEdge.Set.all.getter();
}

uint64_t static VerticalEdge.Set.top.getter()
{
  return static VerticalEdge.Set.top.getter();
}

uint64_t static VerticalEdge.Set.bottom.getter()
{
  return static VerticalEdge.Set.bottom.getter();
}

uint64_t static ViewModifier._makeView(modifier:inputs:body:)()
{
  return static ViewModifier._makeView(modifier:inputs:body:)();
}

uint64_t static ViewModifier._makeViewList(modifier:inputs:body:)()
{
  return static ViewModifier._makeViewList(modifier:inputs:body:)();
}

uint64_t static ViewModifier._viewListCount(inputs:body:)()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t _FrameLayout.init(width:height:alignment:)()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t AnyShapeStyle.init<A>(_:)()
{
  return AnyShapeStyle.init<A>(_:)();
}

uint64_t type metadata accessor for DismissAction()
{
  return type metadata accessor for DismissAction();
}

uint64_t GeometryProxy.size.getter()
{
  return GeometryProxy.size.getter();
}

uint64_t GeometryProxy.frame<A>(in:)()
{
  return GeometryProxy.frame<A>(in:)();
}

uint64_t type metadata accessor for GeometryProxy()
{
  return type metadata accessor for GeometryProxy();
}

uint64_t static KeyEquivalent.return.getter()
{
  return static KeyEquivalent.return.getter();
}

uint64_t type metadata accessor for KeyEquivalent()
{
  return type metadata accessor for KeyEquivalent();
}

uint64_t withAnimation<A>(_:_:)()
{
  return withAnimation<A>(_:_:)();
}

uint64_t static EnvironmentKey._valuesEqual(_:_:)()
{
  return static EnvironmentKey._valuesEqual(_:_:)();
}

uint64_t InsetListStyle.init()()
{
  return InsetListStyle.init()();
}

uint64_t type metadata accessor for InsetListStyle()
{
  return type metadata accessor for InsetListStyle();
}

uint64_t LinearGradient.init(gradient:startPoint:endPoint:)()
{
  return LinearGradient.init(gradient:startPoint:endPoint:)();
}

uint64_t ObservedObject.init(wrappedValue:)()
{
  return ObservedObject.init(wrappedValue:)();
}

uint64_t ObservedObject.projectedValue.getter()
{
  return ObservedObject.projectedValue.getter();
}

uint64_t ObservedObject.Wrapper.subscript.getter()
{
  return ObservedObject.Wrapper.subscript.getter();
}

uint64_t PlainListStyle.init()()
{
  return PlainListStyle.init()();
}

uint64_t type metadata accessor for PlainListStyle()
{
  return type metadata accessor for PlainListStyle();
}

uint64_t ViewDimensions.subscript.getter()
{
  return ViewDimensions.subscript.getter();
}

uint64_t type metadata accessor for ModifiedContent()
{
  return type metadata accessor for ModifiedContent();
}

uint64_t ScrollViewProxy.scrollTo<A>(_:anchor:)()
{
  return ScrollViewProxy.scrollTo<A>(_:anchor:)();
}

uint64_t type metadata accessor for ScrollViewProxy()
{
  return type metadata accessor for ScrollViewProxy();
}

uint64_t type metadata accessor for RoundedRectangle()
{
  return type metadata accessor for RoundedRectangle();
}

uint64_t SidebarListStyle.init()()
{
  return SidebarListStyle.init()();
}

uint64_t type metadata accessor for SidebarListStyle()
{
  return type metadata accessor for SidebarListStyle();
}

uint64_t _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t EnvironmentValues.imageScale.getter()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t EnvironmentValues.imageScale.setter()
{
  return EnvironmentValues.imageScale.setter();
}

uint64_t EnvironmentValues.scenePhase.getter()
{
  return EnvironmentValues.scenePhase.getter();
}

uint64_t EnvironmentValues.scenePhase.setter()
{
  return EnvironmentValues.scenePhase.setter();
}

uint64_t EnvironmentValues.colorScheme.getter()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t EnvironmentValues.colorScheme.setter()
{
  return EnvironmentValues.colorScheme.setter();
}

uint64_t EnvironmentValues.sizeCategory.getter()
{
  return EnvironmentValues.sizeCategory.getter();
}

uint64_t EnvironmentValues.sizeCategory.setter()
{
  return EnvironmentValues.sizeCategory.setter();
}

uint64_t EnvironmentValues.listRowSpacing.getter()
{
  return EnvironmentValues.listRowSpacing.getter();
}

uint64_t EnvironmentValues.listRowSpacing.setter()
{
  return EnvironmentValues.listRowSpacing.setter();
}

uint64_t EnvironmentValues.foregroundColor.getter()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t EnvironmentValues.foregroundColor.setter()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t EnvironmentValues.listSectionSpacing.getter()
{
  return EnvironmentValues.listSectionSpacing.getter();
}

uint64_t EnvironmentValues.horizontalSizeClass.getter()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t EnvironmentValues.horizontalSizeClass.setter()
{
  return EnvironmentValues.horizontalSizeClass.setter();
}

uint64_t EnvironmentValues.symbolRenderingMode.getter()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t EnvironmentValues.backgroundProminence.getter()
{
  return EnvironmentValues.backgroundProminence.getter();
}

uint64_t EnvironmentValues.backgroundProminence.setter()
{
  return EnvironmentValues.backgroundProminence.setter();
}

uint64_t EnvironmentValues.multilineTextAlignment.getter()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t EnvironmentValues.multilineTextAlignment.setter()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t EnvironmentValues.font.getter()
{
  return EnvironmentValues.font.getter();
}

uint64_t EnvironmentValues.font.setter()
{
  return EnvironmentValues.font.setter();
}

uint64_t EnvironmentValues.dismiss.getter()
{
  return EnvironmentValues.dismiss.getter();
}

uint64_t EnvironmentValues.textCase.getter()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t EnvironmentValues.textCase.setter()
{
  return EnvironmentValues.textCase.setter();
}

uint64_t EnvironmentValues.isFocused.getter()
{
  return EnvironmentValues.isFocused.getter();
}

uint64_t EnvironmentValues.lineLimit.getter()
{
  return EnvironmentValues.lineLimit.getter();
}

uint64_t EnvironmentValues.lineLimit.setter()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t EnvironmentValues.init()()
{
  return EnvironmentValues.init()();
}

uint64_t type metadata accessor for EnvironmentValues()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t EnvironmentValues.subscript.getter()
{
  return EnvironmentValues.subscript.getter();
}

uint64_t EnvironmentValues.subscript.setter()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t static VerticalAlignment.firstTextLineCenter.getter()
{
  return static VerticalAlignment.firstTextLineCenter.getter();
}

uint64_t static VerticalAlignment.top.getter()
{
  return static VerticalAlignment.top.getter();
}

uint64_t static VerticalAlignment.center.getter()
{
  return static VerticalAlignment.center.getter();
}

uint64_t static ListSectionSpacing.compact.getter()
{
  return static ListSectionSpacing.compact.getter();
}

uint64_t type metadata accessor for ListSectionSpacing()
{
  return type metadata accessor for ListSectionSpacing();
}

uint64_t LocalizedStringKey.init(stringLiteral:)()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t type metadata accessor for RoundedCornerStyle()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t static AccessibilityTraits.isButton.getter()
{
  return static AccessibilityTraits.isButton.getter();
}

uint64_t static AccessibilityTraits.isHeader.getter()
{
  return static AccessibilityTraits.isHeader.getter();
}

uint64_t type metadata accessor for AccessibilityTraits()
{
  return type metadata accessor for AccessibilityTraits();
}

uint64_t type metadata accessor for ContentSizeCategory()
{
  return type metadata accessor for ContentSizeCategory();
}

uint64_t static HorizontalAlignment.listRowSeparatorLeading.getter()
{
  return static HorizontalAlignment.listRowSeparatorLeading.getter();
}

uint64_t static HorizontalAlignment.center.getter()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t static HorizontalAlignment.leading.getter()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t static SymbolRenderingMode.monochrome.getter()
{
  return static SymbolRenderingMode.monochrome.getter();
}

uint64_t static SymbolRenderingMode.multicolor.getter()
{
  return static SymbolRenderingMode.multicolor.getter();
}

uint64_t type metadata accessor for SymbolRenderingMode()
{
  return type metadata accessor for SymbolRenderingMode();
}

uint64_t UIHostingController.init(rootView:)()
{
  return UIHostingController.init(rootView:)();
}

uint64_t _ConditionalContent<>.init(storage:)()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t static BackgroundProminence.== infix(_:_:)()
{
  return static BackgroundProminence.== infix(_:_:)();
}

uint64_t static BackgroundProminence.increased.getter()
{
  return static BackgroundProminence.increased.getter();
}

uint64_t type metadata accessor for BackgroundProminence()
{
  return type metadata accessor for BackgroundProminence();
}

uint64_t type metadata accessor for LocalCoordinateSpace()
{
  return type metadata accessor for LocalCoordinateSpace();
}

uint64_t type metadata accessor for NamedCoordinateSpace()
{
  return type metadata accessor for NamedCoordinateSpace();
}

uint64_t InsetGroupedListStyle.init()()
{
  return InsetGroupedListStyle.init()();
}

uint64_t type metadata accessor for InsetGroupedListStyle()
{
  return type metadata accessor for InsetGroupedListStyle();
}

uint64_t static HierarchicalShapeStyle.primary.getter()
{
  return static HierarchicalShapeStyle.primary.getter();
}

uint64_t static HierarchicalShapeStyle.tertiary.getter()
{
  return static HierarchicalShapeStyle.tertiary.getter();
}

uint64_t static HierarchicalShapeStyle.secondary.getter()
{
  return static HierarchicalShapeStyle.secondary.getter();
}

uint64_t type metadata accessor for UserInterfaceSizeClass()
{
  return type metadata accessor for UserInterfaceSizeClass();
}

uint64_t static CoordinateSpaceProtocol<>.local.getter()
{
  return static CoordinateSpaceProtocol<>.local.getter();
}

uint64_t static CoordinateSpaceProtocol<>.named<A>(_:)()
{
  return static CoordinateSpaceProtocol<>.named<A>(_:)();
}

uint64_t static MatchedGeometryProperties.frame.getter()
{
  return static MatchedGeometryProperties.frame.getter();
}

uint64_t static AccessibilityChildBehavior.combine.getter()
{
  return static AccessibilityChildBehavior.combine.getter();
}

uint64_t type metadata accessor for AccessibilityChildBehavior()
{
  return type metadata accessor for AccessibilityChildBehavior();
}

uint64_t UIViewControllerRepresentable._resetUIViewController(_:coordinator:destroy:)()
{
  return UIViewControllerRepresentable._resetUIViewController(_:coordinator:destroy:)();
}

uint64_t static UIViewControllerRepresentable.dismantleUIViewController(_:coordinator:)()
{
  return static UIViewControllerRepresentable.dismantleUIViewController(_:coordinator:)();
}

uint64_t UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)()
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)();
}

uint64_t static UIViewControllerRepresentable._layoutOptions(_:)()
{
  return static UIViewControllerRepresentable._layoutOptions(_:)();
}

uint64_t UIViewControllerRepresentable._identifiedViewTree(in:)()
{
  return UIViewControllerRepresentable._identifiedViewTree(in:)();
}

uint64_t UIViewControllerRepresentable.body.getter()
{
  return UIViewControllerRepresentable.body.getter();
}

uint64_t UIViewControllerRepresentable<>.makeCoordinator()()
{
  return UIViewControllerRepresentable<>.makeCoordinator()();
}

uint64_t static Log.runtimeIssuesLog.getter()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t static Axis.Set.horizontal.getter()
{
  return static Axis.Set.horizontal.getter();
}

uint64_t Axis.Set.init(rawValue:)()
{
  return Axis.Set.init(rawValue:)();
}

uint64_t static Axis.Set.vertical.getter()
{
  return static Axis.Set.vertical.getter();
}

uint64_t static Edge.Set.horizontal.getter()
{
  return static Edge.Set.horizontal.getter();
}

uint64_t static Edge.Set.all.getter()
{
  return static Edge.Set.all.getter();
}

uint64_t static Edge.Set.top.getter()
{
  return static Edge.Set.top.getter();
}

uint64_t static Edge.Set.bottom.getter()
{
  return static Edge.Set.bottom.getter();
}

uint64_t static Edge.Set.leading.getter()
{
  return static Edge.Set.leading.getter();
}

uint64_t static Edge.Set.trailing.getter()
{
  return static Edge.Set.trailing.getter();
}

uint64_t static Edge.Set.vertical.getter()
{
  return static Edge.Set.vertical.getter();
}

uint64_t static Font.subheadline.getter()
{
  return static Font.subheadline.getter();
}

uint64_t static Font.body.getter()
{
  return static Font.body.getter();
}

uint64_t Font.bold()()
{
  return Font.bold()();
}

uint64_t static Font.title.getter()
{
  return static Font.title.getter();
}

uint64_t type metadata accessor for Font.Design()
{
  return type metadata accessor for Font.Design();
}

uint64_t static Font.Weight.bold.getter()
{
  return static Font.Weight.bold.getter();
}

uint64_t static Font.Weight.semibold.getter()
{
  return static Font.Weight.semibold.getter();
}

uint64_t static Font.system(size:weight:design:)()
{
  return static Font.system(size:weight:design:)();
}

uint64_t static Font.system(_:design:weight:)()
{
  return static Font.system(_:design:weight:)();
}

uint64_t Font.weight(_:)()
{
  return Font.weight(_:)();
}

uint64_t type metadata accessor for Font.Leading()
{
  return type metadata accessor for Font.Leading();
}

uint64_t static Font.callout.getter()
{
  return static Font.callout.getter();
}

uint64_t Font.leading(_:)()
{
  return Font.leading(_:)();
}

uint64_t static Font.footnote.getter()
{
  return static Font.footnote.getter();
}

uint64_t static Font.headline.getter()
{
  return static Font.headline.getter();
}

uint64_t type metadata accessor for Font.TextStyle()
{
  return type metadata accessor for Font.TextStyle();
}

uint64_t List.init(selection:content:)()
{
  return List.init(selection:content:)();
}

uint64_t type metadata accessor for List()
{
  return type metadata accessor for List();
}

uint64_t type metadata accessor for Text.WritingMode()
{
  return type metadata accessor for Text.WritingMode();
}

uint64_t Text.Measurements.size(of:in:writingMode:)()
{
  return Text.Measurements.size(of:in:writingMode:)();
}

uint64_t Text.Measurements.init()()
{
  return Text.Measurements.init()();
}

uint64_t type metadata accessor for Text.Measurements()
{
  return type metadata accessor for Text.Measurements();
}

uint64_t Text.foregroundColor(_:)()
{
  return Text.foregroundColor(_:)();
}

uint64_t Text.foregroundStyle<A>(_:)()
{
  return Text.foregroundStyle<A>(_:)();
}

uint64_t type metadata accessor for Text.Case()
{
  return type metadata accessor for Text.Case();
}

uint64_t Text.font(_:)()
{
  return Text.font(_:)();
}

uint64_t Text.init(_:tableName:bundle:comment:)()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t Text.init<A>(_:)()
{
  return Text.init<A>(_:)();
}

uint64_t View.appEntityIdentifier(_:)()
{
  return View.appEntityIdentifier(_:)();
}

uint64_t View.assetContentMode(_:)()
{
  return View.assetContentMode(_:)();
}

uint64_t View.readScrollOffset(onChange:)()
{
  return View.readScrollOffset(onChange:)();
}

uint64_t View.readSize(onChange:)()
{
  return View.readSize(onChange:)();
}

uint64_t static View._makeView(view:inputs:)()
{
  return static View._makeView(view:inputs:)();
}

uint64_t static View._makeViewList(view:inputs:)()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t View.background(ignoresSafeAreaEdges:)()
{
  return View.background(ignoresSafeAreaEdges:)();
}

uint64_t View.onKeyPress(_:action:)()
{
  return View.onKeyPress(_:action:)();
}

uint64_t View.environment<A>(_:_:)()
{
  return View.environment<A>(_:_:)();
}

uint64_t View.listPadding(_:_:)()
{
  return View.listPadding(_:_:)();
}

uint64_t View.onTapGesture(count:perform:)()
{
  return View.onTapGesture(count:perform:)();
}

uint64_t View.avoidsOrphans(_:)()
{
  return View.avoidsOrphans(_:)();
}

uint64_t static View._viewListCount(inputs:)()
{
  return static View._viewListCount(inputs:)();
}

uint64_t View.headerProminence(_:)()
{
  return View.headerProminence(_:)();
}

uint64_t View.listRowSeparator(_:edges:)()
{
  return View.listRowSeparator(_:edges:)();
}

uint64_t View.hyphenationFactor(_:)()
{
  return View.hyphenationFactor(_:)();
}

uint64_t View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)()
{
  return View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)();
}

uint64_t View.accessibilityHidden(_:)()
{
  return View.accessibilityHidden(_:)();
}

uint64_t View.simultaneousGesture<A>(_:including:)()
{
  return View.simultaneousGesture<A>(_:including:)();
}

uint64_t View.accessibilityElement(children:)()
{
  return View.accessibilityElement(children:)();
}

uint64_t View.accessibilityAddTraits(_:)()
{
  return View.accessibilityAddTraits(_:)();
}

uint64_t View.containerRelativeFrame(_:alignment:)()
{
  return View.containerRelativeFrame(_:alignment:)();
}

uint64_t View.scrollContentBackground<A>(_:)()
{
  return View.scrollContentBackground<A>(_:)();
}

uint64_t View.onTest(_:handler:)()
{
  return View.onTest(_:handler:)();
}

uint64_t View.onChange<A>(of:initial:_:)()
{
  return View.onChange<A>(of:initial:_:)();
}

{
  return View.onChange<A>(of:initial:_:)();
}

uint64_t View.listStyle<A>(_:)()
{
  return View.listStyle<A>(_:)();
}

uint64_t Color.init(uiColor:)()
{
  return Color.init(uiColor:)();
}

uint64_t static Color.blue.getter()
{
  return static Color.blue.getter();
}

uint64_t static Color.clear.getter()
{
  return static Color.clear.getter();
}

uint64_t static Color.green.getter()
{
  return static Color.green.getter();
}

uint64_t static Color.white.getter()
{
  return static Color.white.getter();
}

uint64_t Color.opacity(_:)()
{
  return Color.opacity(_:)();
}

uint64_t static Color.primary.getter()
{
  return static Color.primary.getter();
}

uint64_t static Color.secondary.getter()
{
  return static Color.secondary.getter();
}

uint64_t Color.init(_:)()
{
  return Color.init(_:)();
}

uint64_t Image.init(systemName:)()
{
  return Image.init(systemName:)();
}

uint64_t Image.init(_internalSystemName:)()
{
  return Image.init(_internalSystemName:)();
}

uint64_t type metadata accessor for Image.Scale()
{
  return type metadata accessor for Image.Scale();
}

uint64_t Image.init(_:)()
{
  return Image.init(_:)();
}

uint64_t State.init(wrappedValue:)()
{
  return State.init(wrappedValue:)();
}

uint64_t State.wrappedValue.getter()
{
  return State.wrappedValue.getter();
}

uint64_t State.wrappedValue.setter()
{
  return State.wrappedValue.setter();
}

uint64_t State.projectedValue.getter()
{
  return State.projectedValue.getter();
}

uint64_t Button.init(action:label:)()
{
  return Button.init(action:label:)();
}

uint64_t AnyView.init<A>(_:)()
{
  return AnyView.init<A>(_:)();
}

uint64_t Binding.wrappedValue.getter()
{
  return Binding.wrappedValue.getter();
}

uint64_t static Binding.constant(_:)()
{
  return static Binding.constant(_:)();
}

uint64_t ForEach<>.init(_:id:content:)()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t Gesture<>.onChanged(_:)()
{
  return Gesture<>.onChanged(_:)();
}

uint64_t Section<>.init(header:content:)()
{
  return Section<>.init(header:content:)();
}

uint64_t Section<>.collapsible(_:)()
{
  return Section<>.collapsible(_:)();
}

uint64_t Section<>.init(content:)()
{
  return Section<>.init(content:)();
}

uint64_t Gradient.init(colors:)()
{
  return Gradient.init(colors:)();
}

uint64_t type metadata accessor for KeyPress.Result()
{
  return type metadata accessor for KeyPress.Result();
}

uint64_t static Alignment.topLeading.getter()
{
  return static Alignment.topLeading.getter();
}

uint64_t static Alignment.center.getter()
{
  return static Alignment.center.getter();
}

uint64_t static Alignment.leading.getter()
{
  return static Alignment.leading.getter();
}

uint64_t static Alignment.trailing.getter()
{
  return static Alignment.trailing.getter();
}

uint64_t static Animation.default.getter()
{
  return static Animation.default.getter();
}

uint64_t Namespace.wrappedValue.getter()
{
  return Namespace.wrappedValue.getter();
}

uint64_t static UnitPoint.topTrailing.getter()
{
  return static UnitPoint.topTrailing.getter();
}

uint64_t static UnitPoint.bottomLeading.getter()
{
  return static UnitPoint.bottomLeading.getter();
}

uint64_t static UnitPoint.top.getter()
{
  return static UnitPoint.top.getter();
}

uint64_t static UnitPoint.center.getter()
{
  return static UnitPoint.center.getter();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t static DispatchTime.now()()
{
  return static DispatchTime.now()();
}

uint64_t type metadata accessor for DispatchTime()
{
  return type metadata accessor for DispatchTime();
}

uint64_t + infix(_:_:)()
{
  return + infix(_:_:)();
}

uint64_t static TipsLog.default.getter()
{
  return static TipsLog.default.getter();
}

uint64_t type metadata accessor for TipsLog()
{
  return type metadata accessor for TipsLog();
}

uint64_t type metadata accessor for SearchResult.Item.Value()
{
  return type metadata accessor for SearchResult.Item.Value();
}

uint64_t type metadata accessor for SearchResult.Item.Category()
{
  return type metadata accessor for SearchResult.Item.Category();
}

uint64_t TPSAssetsInfo.init(videoIdentifier:videoURL:imageIdentifier:imageURL:)()
{
  return TPSAssetsInfo.init(videoIdentifier:videoURL:imageIdentifier:imageURL:)();
}

uint64_t type metadata accessor for TPSAssetsInfo()
{
  return type metadata accessor for TPSAssetsInfo();
}

uint64_t dispatch thunk of UserGuideTopic.identifier.getter()
{
  return dispatch thunk of UserGuideTopic.identifier.getter();
}

uint64_t dispatch thunk of UserGuideTopic.body.getter()
{
  return dispatch thunk of UserGuideTopic.body.getter();
}

uint64_t dispatch thunk of UserGuideTopic.title.getter()
{
  return dispatch thunk of UserGuideTopic.title.getter();
}

uint64_t dispatch thunk of UserGuideTopic.topicId.getter()
{
  return dispatch thunk of UserGuideTopic.topicId.getter();
}

uint64_t dispatch thunk of UserGuideTopic.version.getter()
{
  return dispatch thunk of UserGuideTopic.version.getter();
}

uint64_t dispatch thunk of UserGuideTopic.productId.getter()
{
  return dispatch thunk of UserGuideTopic.productId.getter();
}

uint64_t type metadata accessor for UserGuideTopic()
{
  return type metadata accessor for UserGuideTopic();
}

uint64_t dispatch thunk of TPSAnalyticsChecklistSessionController.sessionEndSuggestedTipsCount.setter()
{
  return dispatch thunk of TPSAnalyticsChecklistSessionController.sessionEndSuggestedTipsCount.setter();
}

uint64_t dispatch thunk of TPSAnalyticsChecklistSessionController.sessionTipsCompleted.modify()
{
  return dispatch thunk of TPSAnalyticsChecklistSessionController.sessionTipsCompleted.modify();
}

uint64_t static TPSAnalyticsChecklistSessionController.sharedInstance.getter()
{
  return static TPSAnalyticsChecklistSessionController.sharedInstance.getter();
}

uint64_t dispatch thunk of TPSAnalyticsChecklistSessionController.sessionStartSuggestedTipCount.getter()
{
  return dispatch thunk of TPSAnalyticsChecklistSessionController.sessionStartSuggestedTipCount.getter();
}

uint64_t dispatch thunk of TPSAnalyticsChecklistSessionController.sessionStartSuggestedTipCount.setter()
{
  return dispatch thunk of TPSAnalyticsChecklistSessionController.sessionStartSuggestedTipCount.setter();
}

uint64_t type metadata accessor for TPSAnalyticsChecklistSessionController()
{
  return type metadata accessor for TPSAnalyticsChecklistSessionController();
}

uint64_t log(_:_:)()
{
  return log(_:_:)();
}

uint64_t logDebug(_:_:)()
{
  return logDebug(_:_:)();
}

uint64_t UserGuide.identifier.getter()
{
  return UserGuide.identifier.getter();
}

uint64_t UserGuide.displayName.getter()
{
  return UserGuide.displayName.getter();
}

uint64_t UserGuide.text.getter()
{
  return UserGuide.text.getter();
}

uint64_t UserGuide.symbol.getter()
{
  return UserGuide.symbol.getter();
}

uint64_t UserGuide.gradient.getter()
{
  return UserGuide.gradient.getter();
}

uint64_t type metadata accessor for UserGuide()
{
  return type metadata accessor for UserGuide();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Dictionary<>.init<A>(_:including:)()
{
  return Dictionary<>.init<A>(_:including:)();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t String.LocalizationValue.init(stringLiteral:)()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t type metadata accessor for String.LocalizationValue()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String.localizedStringWithFormat(_:_:)()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.init(format:_:)()
{
  return String.init(format:_:)();
}

uint64_t String.init(localized:table:bundle:locale:comment:)()
{
  return String.init(localized:table:bundle:locale:comment:)();
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Array.description.getter()
{
  return Array.description.getter();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t static Array.colorsFromGradient(_:)()
{
  return static Array.colorsFromGradient(_:)();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t CheckedContinuation.resume(returning:)()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t static MainActor.shared.getter()
{
  return static MainActor.shared.getter();
}

uint64_t type metadata accessor for MainActor()
{
  return type metadata accessor for MainActor();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

Swift::Void __swiftcall Task.cancel()()
{
}

NSSet __swiftcall Set._bridgeToObjectiveC()()
{
  return (NSSet)Set._bridgeToObjectiveC()();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static os_log_type_t.fault.getter()
{
  return static os_log_type_t.fault.getter();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t NSAttributedString.init(_:)()
{
  return NSAttributedString.init(_:)();
}

uint64_t static UIFont.defaultHyphenationFactor.getter()
{
  return static UIFont.defaultHyphenationFactor.getter();
}

uint64_t NSCoder.decodeObject<A>(of:forKey:)()
{
  return NSCoder.decodeObject<A>(of:forKey:)();
}

uint64_t static UIColor.colorForSystemColorString(_:)()
{
  return static UIColor.colorForSystemColorString(_:)();
}

UIImage_optional __swiftcall UIImage.init(systemImageName:)(Swift::String systemImageName)
{
  uint64_t v1 = (objc_class *)UIImage.init(systemImageName:)(systemImageName._countAndFlagsBits, systemImageName._object);
  result.value.super.Class isa = v1;
  result.is_nil = v2;
  return result;
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t UIButton.Configuration.background.modify()
{
  return UIButton.Configuration.background.modify();
}

uint64_t UIButton.Configuration.buttonSize.setter()
{
  return UIButton.Configuration.buttonSize.setter();
}

uint64_t type metadata accessor for UIButton.Configuration.CornerStyle()
{
  return type metadata accessor for UIButton.Configuration.CornerStyle();
}

uint64_t UIButton.Configuration.cornerStyle.setter()
{
  return UIButton.Configuration.cornerStyle.setter();
}

uint64_t UIButton.Configuration.imagePadding.setter()
{
  return UIButton.Configuration.imagePadding.setter();
}

uint64_t type metadata accessor for UIButton.Configuration.TitleAlignment()
{
  return type metadata accessor for UIButton.Configuration.TitleAlignment();
}

uint64_t UIButton.Configuration.imagePlacement.setter()
{
  return UIButton.Configuration.imagePlacement.setter();
}

uint64_t UIButton.Configuration.titleAlignment.setter()
{
  return UIButton.Configuration.titleAlignment.setter();
}

uint64_t UIButton.Configuration.baseBackgroundColor.setter()
{
  return UIButton.Configuration.baseBackgroundColor.setter();
}

uint64_t UIButton.Configuration.baseForegroundColor.setter()
{
  return UIButton.Configuration.baseForegroundColor.setter();
}

uint64_t UIButton.Configuration.titleTextAttributesTransformer.setter()
{
  return UIButton.Configuration.titleTextAttributesTransformer.setter();
}

uint64_t type metadata accessor for UIButton.Configuration.Size()
{
  return type metadata accessor for UIButton.Configuration.Size();
}

uint64_t UIButton.Configuration.image.setter()
{
  return UIButton.Configuration.image.setter();
}

uint64_t static UIButton.Configuration.plain()()
{
  return static UIButton.Configuration.plain()();
}

uint64_t UIButton.Configuration.title.setter()
{
  return UIButton.Configuration.title.setter();
}

uint64_t static UIButton.Configuration.filled()()
{
  return static UIButton.Configuration.filled()();
}

uint64_t type metadata accessor for UIButton.Configuration()
{
  return type metadata accessor for UIButton.Configuration();
}

uint64_t UIButton.configuration.setter()
{
  return UIButton.configuration.setter();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

uint64_t StringProtocol.localizedCaseInsensitiveContains<A>(_:)()
{
  return StringProtocol.localizedCaseInsensitiveContains<A>(_:)();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t __CocoaSet.startIndex.getter()
{
  return __CocoaSet.startIndex.getter();
}

uint64_t static __CocoaSet.Index.== infix(_:_:)()
{
  return static __CocoaSet.Index.== infix(_:_:)();
}

uint64_t __CocoaSet.Index.age.getter()
{
  return __CocoaSet.Index.age.getter();
}

uint64_t __CocoaSet.Index.element.getter()
{
  return __CocoaSet.Index.element.getter();
}

uint64_t __CocoaSet.element(at:)()
{
  return __CocoaSet.element(at:)();
}

uint64_t __CocoaSet.endIndex.getter()
{
  return __CocoaSet.endIndex.getter();
}

uint64_t static CommandLine.unsafeArgv.getter()
{
  return static CommandLine.unsafeArgv.getter();
}

uint64_t static CommandLine.argc.getter()
{
  return static CommandLine.argc.getter();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

Swift::Void __swiftcall _ArrayBuffer._typeCheckSlowPath(_:)(Swift::Int a1)
{
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t type metadata accessor for ContinuousClock.Instant()
{
  return type metadata accessor for ContinuousClock.Instant();
}

uint64_t ContinuousClock.init()()
{
  return ContinuousClock.init()();
}

uint64_t type metadata accessor for ContinuousClock()
{
  return type metadata accessor for ContinuousClock();
}

uint64_t dispatch thunk of InstantProtocol.advanced(by:)()
{
  return dispatch thunk of InstantProtocol.advanced(by:)();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t _CocoaArrayWrapper.subscript.getter()
{
  return _CocoaArrayWrapper.subscript.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t dispatch thunk of Clock.now.getter()
{
  return dispatch thunk of Clock.now.getter();
}

uint64_t Error.localizedDescription.getter()
{
  return Error.localizedDescription.getter();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t static Duration.seconds(_:)()
{
  return static Duration.seconds(_:)();
}

uint64_t AFDeviceSupportsSystemAssistantExperience()
{
  return _AFDeviceSupportsSystemAssistantExperience();
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  return _CGRectGetMaxX(rect);
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  return _CGRectGetMaxY(rect);
}

CGFloat CGRectGetMinX(CGRect rect)
{
  return _CGRectGetMinX(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return _CGRectIntersectsRect(rect1, rect2);
}

uint64_t MGCopyAnswer()
{
  return _MGCopyAnswer();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

uint64_t RPTGetBoundsForView()
{
  return _RPTGetBoundsForView();
}

BOOL UIAccessibilityIsReduceMotionEnabled(void)
{
  return _UIAccessibilityIsReduceMotionEnabled();
}

int UIApplicationMain(int argc, char **argv, NSString *principalClassName, NSString *delegateClassName)
{
  return _UIApplicationMain(argc, argv, principalClassName, delegateClassName);
}

BOOL UIContentSizeCategoryIsAccessibilityCategory(UIContentSizeCategory category)
{
  return _UIContentSizeCategoryIsAccessibilityCategory(category);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return _arc4random_uniform(__upper_bound);
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

uint64_t objc_loadClassref()
{
  return _objc_loadClassref();
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return _swift_getOpaqueTypeMetadata2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return [a1 URLWithString:];
}

id objc_msgSend__adjustScrollViewPagingDecelerationForSize_(void *a1, const char *a2, ...)
{
  return [a1 _adjustScrollViewPagingDecelerationForSize:];
}

id objc_msgSend__applicationIconImageForBundleIdentifier_format_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicationIconImageForBundleIdentifier:format:scale:");
}

id objc_msgSend__currentViewMethod(void *a1, const char *a2, ...)
{
  return _[a1 _currentViewMethod];
}

id objc_msgSend__interpageSpacing(void *a1, const char *a2, ...)
{
  return _[a1 _interpageSpacing];
}

id objc_msgSend__isAppContentLoaded(void *a1, const char *a2, ...)
{
  return _[a1 _isAppContentLoaded];
}

id objc_msgSend__launchTestName(void *a1, const char *a2, ...)
{
  return _[a1 _launchTestName];
}

id objc_msgSend__logTimeSpentBeforeCurrentTip_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logTimeSpentBeforeCurrentTip:");
}

id objc_msgSend__makeSearchResultsViewControllerWithViewModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_makeSearchResultsViewControllerWithViewModel:");
}

id objc_msgSend__manualScrollEdgeAppearanceProgress(void *a1, const char *a2, ...)
{
  return _[a1 _manualScrollEdgeAppearanceProgress];
}

id objc_msgSend__performScrollTest_iterations_delta_scrollAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performScrollTest:iterations:delta:scrollAxis:");
}

id objc_msgSend__setHyphenationFactor_(void *a1, const char *a2, ...)
{
  return [a1 _setHyphenationFactor:];
}

id objc_msgSend__setInteractiveTextSelectionDisabled_(void *a1, const char *a2, ...)
{
  return [a1 _setInteractiveTextSelectionDisabled:];
}

id objc_msgSend__setInterpageSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setInterpageSpacing:");
}

id objc_msgSend__setManualScrollEdgeAppearanceEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setManualScrollEdgeAppearanceEnabled:");
}

id objc_msgSend__setManualScrollEdgeAppearanceProgress_(void *a1, const char *a2, ...)
{
  return [a1 _setManualScrollEdgeAppearanceProgress:];
}

id objc_msgSend__showAccessibilityHUDItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showAccessibilityHUDItem:");
}

id objc_msgSend__systemImageNamed_(void *a1, const char *a2, ...)
{
  return [a1 _systemImageNamed:];
}

id objc_msgSend__updateParallaxForLayoutAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateParallaxForLayoutAttributes:");
}

id objc_msgSend_actionButton(void *a1, const char *a2, ...)
{
  return _[a1 actionButton];
}

id objc_msgSend_actionType(void *a1, const char *a2, ...)
{
  return _[a1 actionType];
}

id objc_msgSend_actionWithHandler_(void *a1, const char *a2, ...)
{
  return [a1 actionWithHandler:];
}

id objc_msgSend_actions(void *a1, const char *a2, ...)
{
  return _[a1 actions];
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return [a1 activateConstraints:];
}

id objc_msgSend_activityType(void *a1, const char *a2, ...)
{
  return _[a1 activityType];
}

id objc_msgSend_addAttribute_value_range_(void *a1, const char *a2, ...)
{
  return [a1 addAttribute:value:range:];
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return [a1 addChildViewController:];
}

id objc_msgSend_addDelegate_(void *a1, const char *a2, ...)
{
  return [a1 addDelegate:];
}

id objc_msgSend_addExecutionBlock_(void *a1, const char *a2, ...)
{
  return [a1 addExecutionBlock:];
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 addGestureRecognizer:];
}

id objc_msgSend_addKVOObject_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return [a1 addKVOObject:forKeyPath:options:context:];
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return [a1 addObject:];
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 addObjectsFromArray:];
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:selector:name:object:];
}

id objc_msgSend_addObserverForKey_using_(void *a1, const char *a2, ...)
{
  return [a1 addObserverForKey:using:];
}

id objc_msgSend_addOperation_(void *a1, const char *a2, ...)
{
  return [a1 addOperation:];
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return [a1 addSubview:];
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return [a1 addTarget:action:forControlEvents:];
}

id objc_msgSend_adjustedContentInset(void *a1, const char *a2, ...)
{
  return _[a1 adjustedContentInset];
}

id objc_msgSend_allowBookmarks(void *a1, const char *a2, ...)
{
  return _[a1 allowBookmarks];
}

id objc_msgSend_allowPaging(void *a1, const char *a2, ...)
{
  return _[a1 allowPaging];
}

id objc_msgSend_allowsTipsSharing(void *a1, const char *a2, ...)
{
  return _[a1 allowsTipsSharing];
}

id objc_msgSend_analyticsIncreaseCountViewForCollectionsViewDelay_(void *a1, const char *a2, ...)
{
  return [a1 analyticsIncreaseCountViewForCollectionsViewDelay];
}

id objc_msgSend_analyticsIncreaseCountViewForCurrentTipDelay_(void *a1, const char *a2, ...)
{
  return [a1 analyticsIncreaseCountViewForCurrentTipDelay];
}

id objc_msgSend_analyticsIncreaseCountViewForNilTipIDWithLaunchType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsIncreaseCountViewForNilTipIDWithLaunchType:");
}

id objc_msgSend_analyticsViewModeForTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 analyticsViewModeForTraitCollection:];
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateAlongsideTransition:];
}

id objc_msgSend_animationSource(void *a1, const char *a2, ...)
{
  return _[a1 animationSource];
}

id objc_msgSend_appBundleIDMap(void *a1, const char *a2, ...)
{
  return _[a1 appBundleIDMap];
}

id objc_msgSend_appController(void *a1, const char *a2, ...)
{
  return _[a1 appController];
}

id objc_msgSend_appController_loadingContent_(void *a1, const char *a2, ...)
{
  return [a1 appController:loadingContent:];
}

id objc_msgSend_appControllerContentUpdated_(void *a1, const char *a2, ...)
{
  return [a1 appControllerContentUpdated:];
}

id objc_msgSend_appDelegate(void *a1, const char *a2, ...)
{
  return _[a1 appDelegate];
}

id objc_msgSend_appInBackground(void *a1, const char *a2, ...)
{
  return _[a1 appInBackground];
}

id objc_msgSend_appSessionEndedWithType_(void *a1, const char *a2, ...)
{
  return [a1 appSessionEndedWithType:];
}

id objc_msgSend_appViewControllerViewWillAppear_(void *a1, const char *a2, ...)
{
  return [a1 appViewControllerViewWillAppear:];
}

id objc_msgSend_appViewControllerViewWillDisappear_(void *a1, const char *a2, ...)
{
  return [a1 appViewControllerViewWillDisappear:];
}

id objc_msgSend_appendAttributedString_(void *a1, const char *a2, ...)
{
  return [a1 appendAttributedString:];
}

id objc_msgSend_applicationDidBecomeActive(void *a1, const char *a2, ...)
{
  return _[a1 applicationDidBecomeActive];
}

id objc_msgSend_applicationDidEnterBackground(void *a1, const char *a2, ...)
{
  return _[a1 applicationDidEnterBackground];
}

id objc_msgSend_applicationState(void *a1, const char *a2, ...)
{
  return _[a1 applicationState];
}

id objc_msgSend_applicationWillEnterForeground(void *a1, const char *a2, ...)
{
  return _[a1 applicationWillEnterForeground];
}

id objc_msgSend_applicationWillTerminate(void *a1, const char *a2, ...)
{
  return _[a1 applicationWillTerminate];
}

id objc_msgSend_archivedDataWithRootObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 archivedDataWithRootObject:forKey:];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithCapacity:];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:count:];
}

id objc_msgSend_assetConfigurationForAssets_language_sizeClass_style_assetFileInfoManager_(void *a1, const char *a2, ...)
{
  return [a1 assetConfigurationForAssets:language:sizeClass:style:assetFileInfoManager:];
}

id objc_msgSend_assetFileInfoManager(void *a1, const char *a2, ...)
{
  return _[a1 assetFileInfoManager];
}

id objc_msgSend_assetHeight(void *a1, const char *a2, ...)
{
  return _[a1 assetHeight];
}

id objc_msgSend_assetPathFromAssetConfiguration_type_(void *a1, const char *a2, ...)
{
  return [a1 assetPathFromAssetConfiguration:type:];
}

id objc_msgSend_assetPrefetchingManager(void *a1, const char *a2, ...)
{
  return _[a1 assetPrefetchingManager];
}

id objc_msgSend_assetRatioType(void *a1, const char *a2, ...)
{
  return _[a1 assetRatioType];
}

id objc_msgSend_assetSizes(void *a1, const char *a2, ...)
{
  return _[a1 assetSizes];
}

id objc_msgSend_assetViewHeightConstraint(void *a1, const char *a2, ...)
{
  return _[a1 assetViewHeightConstraint];
}

id objc_msgSend_assetsConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 assetsConfiguration];
}

id objc_msgSend_attributedString(void *a1, const char *a2, ...)
{
  return _[a1 attributedString];
}

id objc_msgSend_attributedStringForConstellationContent_defaultAttributes_identifier_language_assetsBaseURL_assetFileInfoManager_supportsLinks_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributedStringForConstellationContent:defaultAttributes:identifier:language:assetsBaseURL:assetFileInfoManager:supportsLinks:error:");
}

id objc_msgSend_attributedStringForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 attributedStringForIdentifier:];
}

id objc_msgSend_attributedStringOperationQueue(void *a1, const char *a2, ...)
{
  return _[a1 attributedStringOperationQueue];
}

id objc_msgSend_attributedText(void *a1, const char *a2, ...)
{
  return _[a1 attributedText];
}

id objc_msgSend_autoplay_(void *a1, const char *a2, ...)
{
  return [a1 autoplay:];
}

id objc_msgSend_axis(void *a1, const char *a2, ...)
{
  return _[a1 axis];
}

id objc_msgSend_backgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 backgroundColor];
}

id objc_msgSend_baseURL(void *a1, const char *a2, ...)
{
  return _[a1 baseURL];
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 becomeFirstResponder];
}

id objc_msgSend_blackColor(void *a1, const char *a2, ...)
{
  return _[a1 blackColor];
}

id objc_msgSend_bodyContent(void *a1, const char *a2, ...)
{
  return _[a1 bodyContent];
}

id objc_msgSend_bodyContentProcessingCount(void *a1, const char *a2, ...)
{
  return _[a1 bodyContentProcessingCount];
}

id objc_msgSend_bodyFont(void *a1, const char *a2, ...)
{
  return _[a1 bodyFont];
}

id objc_msgSend_bodyText(void *a1, const char *a2, ...)
{
  return _[a1 bodyText];
}

id objc_msgSend_bookendAssetUnderTitle(void *a1, const char *a2, ...)
{
  return _[a1 bookendAssetUnderTitle];
}

id objc_msgSend_bookendsContentSidePadding(void *a1, const char *a2, ...)
{
  return _[a1 bookendsContentSidePadding];
}

id objc_msgSend_bookendsHeightMultiplier(void *a1, const char *a2, ...)
{
  return _[a1 bookendsHeightMultiplier];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _[a1 bottomAnchor];
}

id objc_msgSend_bottomPadding(void *a1, const char *a2, ...)
{
  return _[a1 bottomPadding];
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _[a1 bounds];
}

id objc_msgSend_bringSubviewToFront_(void *a1, const char *a2, ...)
{
  return [a1 bringSubviewToFront:];
}

id objc_msgSend_bundleID(void *a1, const char *a2, ...)
{
  return _[a1 bundleID];
}

id objc_msgSend_buttonWithType_(void *a1, const char *a2, ...)
{
  return [a1 buttonWithType:];
}

id objc_msgSend_cacheCellSize(void *a1, const char *a2, ...)
{
  return _[a1 cacheCellSize];
}

id objc_msgSend_cacheIdentifierForType_(void *a1, const char *a2, ...)
{
  return [a1 cacheIdentifierForType];
}

id objc_msgSend_cacheImage(void *a1, const char *a2, ...)
{
  return _[a1 cacheImage];
}

id objc_msgSend_cacheVideoIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 cacheVideoIdentifier];
}

id objc_msgSend_canDisplayColumn_(void *a1, const char *a2, ...)
{
  return [a1 canDisplayColumn:];
}

id objc_msgSend_canSearch(void *a1, const char *a2, ...)
{
  return _[a1 canSearch];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _[a1 cancel];
}

id objc_msgSend_cancelAssetFetches(void *a1, const char *a2, ...)
{
  return _[a1 cancelAssetFetches];
}

id objc_msgSend_cancelAssetsPrefetch(void *a1, const char *a2, ...)
{
  return _[a1 cancelAssetsPrefetch];
}

id objc_msgSend_cancelFootnoteParsingOperation(void *a1, const char *a2, ...)
{
  return _[a1 cancelFootnoteParsingOperation];
}

id objc_msgSend_cancelPreviousPerformRequestsWithTarget_(void *a1, const char *a2, ...)
{
  return [a1 cancelPreviousPerformRequestsWithTarget:];
}

id objc_msgSend_cancelPreviousPerformRequestsWithTarget_selector_object_(void *a1, const char *a2, ...)
{
  return [a1 cancelPreviousPerformRequestsWithTarget:selector:object:];
}

id objc_msgSend_cancelReplayButtonTimer(void *a1, const char *a2, ...)
{
  return _[a1 cancelReplayButtonTimer];
}

id objc_msgSend_cellAppearance(void *a1, const char *a2, ...)
{
  return _[a1 cellAppearance];
}

id objc_msgSend_cellContentLoaded_(void *a1, const char *a2, ...)
{
  return [a1 cellContentLoaded:];
}

id objc_msgSend_cellForCurrentTip(void *a1, const char *a2, ...)
{
  return _[a1 cellForCurrentTip];
}

id objc_msgSend_cellForItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 cellForItemAtIndexPath:];
}

id objc_msgSend_center(void *a1, const char *a2, ...)
{
  return _[a1 center];
}

id objc_msgSend_centerCell(void *a1, const char *a2, ...)
{
  return _[a1 centerCell];
}

id objc_msgSend_centerCellIndexPath(void *a1, const char *a2, ...)
{
  return _[a1 centerCellIndexPath];
}

id objc_msgSend_centerXAnchor(void *a1, const char *a2, ...)
{
  return _[a1 centerXAnchor];
}

id objc_msgSend_centerYAnchor(void *a1, const char *a2, ...)
{
  return _[a1 centerYAnchor];
}

id objc_msgSend_checklistCollection(void *a1, const char *a2, ...)
{
  return _[a1 checklistCollection];
}

id objc_msgSend_checklistCollectionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 checklistCollectionIdentifier];
}

id objc_msgSend_checklistViewModel(void *a1, const char *a2, ...)
{
  return _[a1 checklistViewModel];
}

id objc_msgSend_clearBadgeCount(void *a1, const char *a2, ...)
{
  return _[a1 clearBadgeCount];
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _[a1 clearColor];
}

id objc_msgSend_clientBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 clientBundleIdentifier];
}

id objc_msgSend_clientConditionID(void *a1, const char *a2, ...)
{
  return _[a1 clientConditionID];
}

id objc_msgSend_collection(void *a1, const char *a2, ...)
{
  return _[a1 collection];
}

id objc_msgSend_collectionForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 collectionForIdentifier:];
}

id objc_msgSend_collectionID(void *a1, const char *a2, ...)
{
  return _[a1 collectionID];
}

id objc_msgSend_collectionIDForTipID_(void *a1, const char *a2, ...)
{
  return [a1 collectionIDForTipID:];
}

id objc_msgSend_collectionId(void *a1, const char *a2, ...)
{
  return _[a1 collectionId];
}

id objc_msgSend_collectionIdentifierForCurrentUserType(void *a1, const char *a2, ...)
{
  return _[a1 collectionIdentifierForCurrentUserType];
}

id objc_msgSend_collectionIdentifierForTipIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 collectionIdentifierForTipIdentifier:];
}

id objc_msgSend_collectionIdentifierToUseForCollectionIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectionIdentifierToUseForCollectionIdentifiers:");
}

id objc_msgSend_collectionIdentifierViewed_(void *a1, const char *a2, ...)
{
  return [a1 collectionIdentifierViewed:];
}

id objc_msgSend_collectionIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 collectionIdentifiers];
}

id objc_msgSend_collectionListViewController(void *a1, const char *a2, ...)
{
  return _[a1 collectionListViewController];
}

id objc_msgSend_collectionSections(void *a1, const char *a2, ...)
{
  return _[a1 collectionSections];
}

id objc_msgSend_collectionView(void *a1, const char *a2, ...)
{
  return _[a1 collectionView];
}

id objc_msgSend_collections(void *a1, const char *a2, ...)
{
  return _[a1 collections];
}

id objc_msgSend_colorWithWhite_alpha_(void *a1, const char *a2, ...)
{
  return [a1 colorWithWhite:alpha:];
}

id objc_msgSend_commonInit(void *a1, const char *a2, ...)
{
  return _[a1 commonInit];
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return [a1 componentsSeparatedByString:];
}

id objc_msgSend_componentsWithString_(void *a1, const char *a2, ...)
{
  return [a1 componentsWithString:];
}

id objc_msgSend_componentsWithURL_(void *a1, const char *a2, ...)
{
  return [a1 componentsWithURL:];
}

id objc_msgSend_componentsWithURL_resolvingAgainstBaseURL_(void *a1, const char *a2, ...)
{
  return [a1 componentsWithURL:resolvingAgainstBaseURL:];
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _[a1 configuration];
}

id objc_msgSend_configureWithDefaultBackground(void *a1, const char *a2, ...)
{
  return _[a1 configureWithDefaultBackground];
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToAnchor:];
}

id objc_msgSend_constraintEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToAnchor:];
}

id objc_msgSend_constraintEqualToConstant_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToConstant:];
}

id objc_msgSend_constraintGreaterThanOrEqualToConstant_(void *a1, const char *a2, ...)
{
  return [a1 constraintGreaterThanOrEqualToConstant:];
}

id objc_msgSend_constraintLessThanOrEqualToAnchor_multiplier_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintLessThanOrEqualToAnchor:multiplier:constant:];
}

id objc_msgSend_constraintLessThanOrEqualToConstant_(void *a1, const char *a2, ...)
{
  return [a1 constraintLessThanOrEqualToConstant:];
}

id objc_msgSend_containsLinks(void *a1, const char *a2, ...)
{
  return _[a1 containsLinks];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return [a1 containsObject:];
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return [a1 containsString:];
}

id objc_msgSend_contentDelegate(void *a1, const char *a2, ...)
{
  return _[a1 contentDelegate];
}

id objc_msgSend_contentFinishedLoading(void *a1, const char *a2, ...)
{
  return _[a1 contentFinishedLoading];
}

id objc_msgSend_contentHasLoaded(void *a1, const char *a2, ...)
{
  return _[a1 contentHasLoaded];
}

id objc_msgSend_contentID(void *a1, const char *a2, ...)
{
  return _[a1 contentID];
}

id objc_msgSend_contentInsetAdjustmentBehavior(void *a1, const char *a2, ...)
{
  return _[a1 contentInsetAdjustmentBehavior];
}

id objc_msgSend_contentLabel(void *a1, const char *a2, ...)
{
  return _[a1 contentLabel];
}

id objc_msgSend_contentOffset(void *a1, const char *a2, ...)
{
  return _[a1 contentOffset];
}

id objc_msgSend_contentParallaxOffsetForViewFrame_visibleRect_(void *a1, const char *a2, ...)
{
  return [a1 contentParallaxOffsetForViewFrame:visibleRect:];
}

id objc_msgSend_contentParser(void *a1, const char *a2, ...)
{
  return _[a1 contentParser];
}

id objc_msgSend_contentSafeAreaInsets(void *a1, const char *a2, ...)
{
  return _[a1 contentSafeAreaInsets];
}

id objc_msgSend_contentScrollView(void *a1, const char *a2, ...)
{
  return _[a1 contentScrollView];
}

id objc_msgSend_contentSidePadding(void *a1, const char *a2, ...)
{
  return _[a1 contentSidePadding];
}

id objc_msgSend_contentSize(void *a1, const char *a2, ...)
{
  return _[a1 contentSize];
}

id objc_msgSend_contentTextView(void *a1, const char *a2, ...)
{
  return _[a1 contentTextView];
}

id objc_msgSend_contentType(void *a1, const char *a2, ...)
{
  return _[a1 contentType];
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return _[a1 contentView];
}

id objc_msgSend_continuePlayVideo(void *a1, const char *a2, ...)
{
  return _[a1 continuePlayVideo];
}

id objc_msgSend_continueSession(void *a1, const char *a2, ...)
{
  return _[a1 continueSession];
}

id objc_msgSend_continueVideoForCurrentTip(void *a1, const char *a2, ...)
{
  return _[a1 continueVideoForCurrentTip];
}

id objc_msgSend_convertRect_fromView_(void *a1, const char *a2, ...)
{
  return [a1 convertRect:fromView:];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_correlationID(void *a1, const char *a2, ...)
{
  return _[a1 correlationID];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_createFootnoteTextView(void *a1, const char *a2, ...)
{
  return _[a1 createFootnoteTextView];
}

id objc_msgSend_createSearchController(void *a1, const char *a2, ...)
{
  return _[a1 createSearchController];
}

id objc_msgSend_createViews(void *a1, const char *a2, ...)
{
  return _[a1 createViews];
}

id objc_msgSend_currentCollapsedDisplayColumn(void *a1, const char *a2, ...)
{
  return _[a1 currentCollapsedDisplayColumn];
}

id objc_msgSend_currentCollectionID(void *a1, const char *a2, ...)
{
  return _[a1 currentCollectionID];
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentDevice];
}

id objc_msgSend_currentDisplayMode(void *a1, const char *a2, ...)
{
  return _[a1 currentDisplayMode];
}

id objc_msgSend_currentDisplayTips(void *a1, const char *a2, ...)
{
  return _[a1 currentDisplayTips];
}

id objc_msgSend_currentNotificationCenter(void *a1, const char *a2, ...)
{
  return _[a1 currentNotificationCenter];
}

id objc_msgSend_currentPage(void *a1, const char *a2, ...)
{
  return _[a1 currentPage];
}

id objc_msgSend_currentSwipeEvent(void *a1, const char *a2, ...)
{
  return _[a1 currentSwipeEvent];
}

id objc_msgSend_currentTip(void *a1, const char *a2, ...)
{
  return _[a1 currentTip];
}

id objc_msgSend_dataCacheForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 dataCacheForIdentifier:];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_deactivateConstraints_(void *a1, const char *a2, ...)
{
  return [a1 deactivateConstraints:];
}

id objc_msgSend_default(void *a1, const char *a2, ...)
{
  return _[a1 default];
}

id objc_msgSend_defaultBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 defaultBackgroundColor];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultContext(void *a1, const char *a2, ...)
{
  return _[a1 defaultContext];
}

id objc_msgSend_defaultErrorTitleText(void *a1, const char *a2, ...)
{
  return _[a1 defaultErrorTitleText];
}

id objc_msgSend_defaultLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 defaultLabelColor];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultNavigationTitle(void *a1, const char *a2, ...)
{
  return _[a1 defaultNavigationTitle];
}

id objc_msgSend_defaultTextLabelFont(void *a1, const char *a2, ...)
{
  return _[a1 defaultTextLabelFont];
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _[a1 defaultWorkspace];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_dequeueReusableCellWithReuseIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableCellWithReuseIdentifier:forIndexPath:];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjects:forKeys:count:];
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return [a1 didMoveToParentViewController:];
}

id objc_msgSend_dismissPresentedSearchResultsViewController_(void *a1, const char *a2, ...)
{
  return [a1 dismissPresentedSearchResultsViewController:];
}

id objc_msgSend_dismissSearch(void *a1, const char *a2, ...)
{
  return _[a1 dismissSearch];
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return [a1 dismissViewControllerAnimated:YES completion:nil];
}

id objc_msgSend_displayCollectionID_tipID_(void *a1, const char *a2, ...)
{
  return [a1 displayCollectionID:tipID:];
}

id objc_msgSend_displayCollectionID_tipID_preferredColumn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayCollectionID:tipID:preferredColumn:");
}

id objc_msgSend_displayMode(void *a1, const char *a2, ...)
{
  return _[a1 displayMode];
}

id objc_msgSend_displayUserGuideWithIdentifier_topicId_version_platformIndependent_prefersLandingPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayUserGuideWithIdentifier:topicId:version:platformIndependent:prefersLandingPage:");
}

id objc_msgSend_downloadedVideoPath(void *a1, const char *a2, ...)
{
  return _[a1 downloadedVideoPath];
}

id objc_msgSend_edgeParallaxOffset(void *a1, const char *a2, ...)
{
  return _[a1 edgeParallaxOffset];
}

id objc_msgSend_eligibleToPlayVideo(void *a1, const char *a2, ...)
{
  return _[a1 eligibleToPlayVideo];
}

id objc_msgSend_endSession(void *a1, const char *a2, ...)
{
  return _[a1 endSession];
}

id objc_msgSend_ensureCurrentTipPositionWithViewSize_(void *a1, const char *a2, ...)
{
  return [a1 ensureCurrentTipPositionWithViewSize:];
}

id objc_msgSend_ensureCurrentTipVisible(void *a1, const char *a2, ...)
{
  return _[a1 ensureCurrentTipVisible];
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateObjectsUsingBlock:];
}

id objc_msgSend_event(void *a1, const char *a2, ...)
{
  return _[a1 event];
}

id objc_msgSend_eventWithContentID_collectionID_correlationID_clientConditionID_url_(void *a1, const char *a2, ...)
{
  return [a1 eventWithContentID:collectionID:correlationID:clientConditionID:url:];
}

id objc_msgSend_eventWithContentID_collectionID_correlationID_clientConditionID_viewMethod_viewMode_(void *a1, const char *a2, ...)
{
  return [a1 eventWithContentID:collectionID:correlationID:clientConditionID:viewMethod:viewMode:];
}

id objc_msgSend_eventWithContentID_collectionID_correlationID_launchType_(void *a1, const char *a2, ...)
{
  return [a1 eventWithContentID:collectionID:correlationID:launchType:];
}

id objc_msgSend_eventWithTipID_actionName_actionDirection_(void *a1, const char *a2, ...)
{
  return [a1 eventWithTipID:actionName:actionDirection:];
}

id objc_msgSend_eventWithTipID_animationFinished_animationSource_collectionID_correlationID_(void *a1, const char *a2, ...)
{
  return [a1 eventWithTipID:animationFinished:animationSource:collectionID:correlationID:];
}

id objc_msgSend_eventWithTipID_animationLoadTime_(void *a1, const char *a2, ...)
{
  return [a1 eventWithTipID:animationLoadTime:];
}

id objc_msgSend_eventWithTipID_collectionID_correlationID_(void *a1, const char *a2, ...)
{
  return [a1 eventWithTipID:collectionID:correlationID:];
}

id objc_msgSend_eventWithTipID_saved_correlationID_collectionID_(void *a1, const char *a2, ...)
{
  return [a1 eventWithTipID:saved:correlationID:collectionID:];
}

id objc_msgSend_eventWithTopicID_topicTitle_source_interfaceStyle_fromTopicID_externalURLString_(void *a1, const char *a2, ...)
{
  return [a1 eventWithTopicID:topicTitle:source:interfaceStyle:fromTopicID:externalURLString:];
}

id objc_msgSend_eyebrowText(void *a1, const char *a2, ...)
{
  return _[a1 eyebrowText];
}

id objc_msgSend_featuredCollection(void *a1, const char *a2, ...)
{
  return _[a1 featuredCollection];
}

id objc_msgSend_fetchImageWithIdentifier_path_(void *a1, const char *a2, ...)
{
  return [a1 fetchImageWithIdentifier:path:];
}

id objc_msgSend_finishedTest_(void *a1, const char *a2, ...)
{
  return [a1 finishedTest:];
}

id objc_msgSend_firstLaunchEvent(void *a1, const char *a2, ...)
{
  return _[a1 firstLaunchEvent];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_firstTip(void *a1, const char *a2, ...)
{
  return _[a1 firstTip];
}

id objc_msgSend_footNoteAttributedStringForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 footNoteAttributedStringForIdentifier:];
}

id objc_msgSend_footnoteBoldTextFont(void *a1, const char *a2, ...)
{
  return _[a1 footnoteBoldTextFont];
}

id objc_msgSend_footnoteBottomConstraint(void *a1, const char *a2, ...)
{
  return _[a1 footnoteBottomConstraint];
}

id objc_msgSend_footnoteContent(void *a1, const char *a2, ...)
{
  return _[a1 footnoteContent];
}

id objc_msgSend_footnoteContentParser(void *a1, const char *a2, ...)
{
  return _[a1 footnoteContentParser];
}

id objc_msgSend_footnoteContentTextOperation(void *a1, const char *a2, ...)
{
  return _[a1 footnoteContentTextOperation];
}

id objc_msgSend_footnoteContentTextOperationID(void *a1, const char *a2, ...)
{
  return _[a1 footnoteContentTextOperationID];
}

id objc_msgSend_footnoteFont(void *a1, const char *a2, ...)
{
  return _[a1 footnoteFont];
}

id objc_msgSend_footnoteItalicTextFont(void *a1, const char *a2, ...)
{
  return _[a1 footnoteItalicTextFont];
}

id objc_msgSend_footnoteTextView(void *a1, const char *a2, ...)
{
  return _[a1 footnoteTextView];
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _[a1 frame];
}

id objc_msgSend_frameLayoutGuide(void *a1, const char *a2, ...)
{
  return _[a1 frameLayoutGuide];
}

id objc_msgSend_fullContent(void *a1, const char *a2, ...)
{
  return _[a1 fullContent];
}

id objc_msgSend_fullContentAssets(void *a1, const char *a2, ...)
{
  return _[a1 fullContentAssets];
}

id objc_msgSend_fullTipContentManager(void *a1, const char *a2, ...)
{
  return _[a1 fullTipContentManager];
}

id objc_msgSend_getImageForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 getImageForIdentifier:];
}

id objc_msgSend_getUserGuideFromURL_(void *a1, const char *a2, ...)
{
  return [a1 getUserGuideFromURL:];
}

id objc_msgSend_getValuesFromOpenURLSchemeQueryItems_tipIdentifier_collectionIdentifier_referrer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getValuesFromOpenURLSchemeQueryItems:tipIdentifier:collectionIdentifier:referrer:");
}

id objc_msgSend_handleContinueCoreSpotlightSearchActivity_(void *a1, const char *a2, ...)
{
  return [a1 handleContinueCoreSpotlightSearchActivity:];
}

id objc_msgSend_handleCoreSpotlightItemActivity_(void *a1, const char *a2, ...)
{
  return [a1 handleCoreSpotlightItemActivity:];
}

id objc_msgSend_handleSearchWithSearchQuery_(void *a1, const char *a2, ...)
{
  return [a1 handleSearchWithSearchQuery:];
}

id objc_msgSend_handleTipsURL_(void *a1, const char *a2, ...)
{
  return [a1 handleTipsURL:];
}

id objc_msgSend_handleURL_(void *a1, const char *a2, ...)
{
  return [a1 handleURL:];
}

id objc_msgSend_handleUniversalLinkWithUserActivity_(void *a1, const char *a2, ...)
{
  return [a1 handleUniversalLinkWithUserActivity:];
}

id objc_msgSend_handleUserActivity_(void *a1, const char *a2, ...)
{
  return [a1 handleUserActivity:];
}

id objc_msgSend_hardwareChanged(void *a1, const char *a2, ...)
{
  return _[a1 hardwareChanged];
}

id objc_msgSend_hasActiveSession(void *a1, const char *a2, ...)
{
  return _[a1 hasActiveSession];
}

id objc_msgSend_hasContent(void *a1, const char *a2, ...)
{
  return _[a1 hasContent];
}

id objc_msgSend_hasDifferentColorAppearanceComparedToTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 hasDifferentColorAppearanceComparedToTraitCollection:];
}

id objc_msgSend_hasImage(void *a1, const char *a2, ...)
{
  return _[a1 hasImage];
}

id objc_msgSend_hasLoaded(void *a1, const char *a2, ...)
{
  return _[a1 hasLoaded];
}

id objc_msgSend_hasLocalVariant_(void *a1, const char *a2, ...)
{
  return [a1 hasLocalVariant:];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return [a1 hasPrefix:];
}

id objc_msgSend_hasStartedSearch(void *a1, const char *a2, ...)
{
  return _[a1 hasStartedSearch];
}

id objc_msgSend_hasVideo(void *a1, const char *a2, ...)
{
  return _[a1 hasVideo];
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return _[a1 heightAnchor];
}

id objc_msgSend_heightToWidthRatioFromSizes_mediaSizeType_defaultValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heightToWidthRatioFromSizes:mediaSizeType:defaultValue:");
}

id objc_msgSend_helpViewControllerWithTitle_identifier_version_(void *a1, const char *a2, ...)
{
  return [a1 helpViewControllerWithTitle:identifier:version:];
}

id objc_msgSend_heroAssetView(void *a1, const char *a2, ...)
{
  return _[a1 heroAssetView];
}

id objc_msgSend_heroImageUpdated(void *a1, const char *a2, ...)
{
  return _[a1 heroImageUpdated];
}

id objc_msgSend_hideColumn_(void *a1, const char *a2, ...)
{
  return [a1 hideColumn:];
}

id objc_msgSend_host(void *a1, const char *a2, ...)
{
  return _[a1 host];
}

id objc_msgSend_hudDelegate(void *a1, const char *a2, ...)
{
  return _[a1 hudDelegate];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_image(void *a1, const char *a2, ...)
{
  return _[a1 image];
}

id objc_msgSend_imageFromMemoryCacheForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 imageFromMemoryCacheForIdentifier:];
}

id objc_msgSend_imageLoadingFinished(void *a1, const char *a2, ...)
{
  return _[a1 imageLoadingFinished];
}

id objc_msgSend_imageNamed_(void *a1, const char *a2, ...)
{
  return [a1 imageNamed:];
}

id objc_msgSend_imagePath(void *a1, const char *a2, ...)
{
  return _[a1 imagePath];
}

id objc_msgSend_imageView(void *a1, const char *a2, ...)
{
  return _[a1 imageView];
}

id objc_msgSend_incrementCollectionsViewedCount(void *a1, const char *a2, ...)
{
  return _[a1 incrementCollectionsViewedCount];
}

id objc_msgSend_incrementTipsViewedCount(void *a1, const char *a2, ...)
{
  return _[a1 incrementTipsViewedCount];
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return [a1 indexOfObject:];
}

id objc_msgSend_indexPathForRow_inSection_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForRow:inSection:];
}

id objc_msgSend_indexPathsForVisibleItems(void *a1, const char *a2, ...)
{
  return _[a1 indexPathsForVisibleItems];
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return _[a1 infoDictionary];
}

id objc_msgSend_initAppearanceWithTraits_size_(void *a1, const char *a2, ...)
{
  return [a1 initAppearanceWithTraits:size:];
}

id objc_msgSend_initCellAppearanceWithTrait_size_(void *a1, const char *a2, ...)
{
  return [a1 initCellAppearanceWithTrait:size:];
}

id objc_msgSend_initWithActivityItems_applicationActivities_(void *a1, const char *a2, ...)
{
  return [a1 initWithActivityItems:applicationActivities:];
}

id objc_msgSend_initWithAppController_(void *a1, const char *a2, ...)
{
  return [a1 initWithAppController:];
}

id objc_msgSend_initWithAuthenticationContext_(void *a1, const char *a2, ...)
{
  return [a1 initWithAuthenticationContext:];
}

id objc_msgSend_initWithCustomView_(void *a1, const char *a2, ...)
{
  return [a1 initWithCustomView:];
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:];
}

id objc_msgSend_initWithFrame_collectionViewLayout_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:collectionViewLayout:];
}

id objc_msgSend_initWithImage_(void *a1, const char *a2, ...)
{
  return [a1 initWithImage:];
}

id objc_msgSend_initWithImage_style_target_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithImage:style:target:action:];
}

id objc_msgSend_initWithLessonURL_tipID_collectionID_correlationID_(void *a1, const char *a2, ...)
{
  return [a1 initWithLessonURL:tipID:collectionID:correlationID:];
}

id objc_msgSend_initWithObserver_(void *a1, const char *a2, ...)
{
  return [a1 initWithObserver:];
}

id objc_msgSend_initWithPlatformImage_(void *a1, const char *a2, ...)
{
  return [a1 initWithPlatformImage:];
}

id objc_msgSend_initWithRootViewController_(void *a1, const char *a2, ...)
{
  return [a1 initWithRootViewController:];
}

id objc_msgSend_initWithSearchResultsController_(void *a1, const char *a2, ...)
{
  return [a1 initWithSearchResultsController:];
}

id objc_msgSend_initWithSearchableItemUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithSearchableItemUniqueIdentifier:];
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:];
}

id objc_msgSend_initWithString_attributes_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:attributes:];
}

id objc_msgSend_initWithStyle_(void *a1, const char *a2, ...)
{
  return [a1 initWithStyle:];
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithTarget:action:];
}

id objc_msgSend_initWithTestName_scrollView_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 initWithTestName:scrollView:completionHandler:];
}

id objc_msgSend_initWithTestName_window_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 initWithTestName:window:completionHandler:];
}

id objc_msgSend_initWithTip_(void *a1, const char *a2, ...)
{
  return [a1 initWithTip:];
}

id objc_msgSend_initWithTip_appController_(void *a1, const char *a2, ...)
{
  return [a1 initWithTip:appController:];
}

id objc_msgSend_initWithTitle_image_imageInsets_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:image:imageInsets:];
}

id objc_msgSend_initWithType_localizedTitle_(void *a1, const char *a2, ...)
{
  return [a1 initWithType:localizedTitle:];
}

id objc_msgSend_initWithURL_(void *a1, const char *a2, ...)
{
  return [a1 initWithURL:];
}

id objc_msgSend_initWithURL_resolvingAgainstBaseURL_(void *a1, const char *a2, ...)
{
  return [a1 initWithURL:resolvingAgainstBaseURL:];
}

id objc_msgSend_initWithViewModel_(void *a1, const char *a2, ...)
{
  return [a1 initWithViewModel:];
}

id objc_msgSend_installCACommitCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 installCACommitCompletionBlock:];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_invalidateItemsAtIndexPaths_(void *a1, const char *a2, ...)
{
  return [a1 invalidateItemsAtIndexPaths:];
}

id objc_msgSend_invalidateLayout(void *a1, const char *a2, ...)
{
  return _[a1 invalidateLayout];
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return _[a1 isActive];
}

id objc_msgSend_isBookendsCompactLayout(void *a1, const char *a2, ...)
{
  return _[a1 isBookendsCompactLayout];
}

id objc_msgSend_isChecklist(void *a1, const char *a2, ...)
{
  return _[a1 isChecklist];
}

id objc_msgSend_isChecklistCollectionWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 isChecklistCollectionWithIdentifier:];
}

id objc_msgSend_isChecklistTip(void *a1, const char *a2, ...)
{
  return _[a1 isChecklistTip];
}

id objc_msgSend_isCollapsed(void *a1, const char *a2, ...)
{
  return _[a1 isCollapsed];
}

id objc_msgSend_isCollectionsViewVisible(void *a1, const char *a2, ...)
{
  return _[a1 isCollectionsViewVisible];
}

id objc_msgSend_isCompactLayout(void *a1, const char *a2, ...)
{
  return _[a1 isCompactLayout];
}

id objc_msgSend_isCompleted(void *a1, const char *a2, ...)
{
  return _[a1 isCompleted];
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isEnabled];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return [a1 isEqual:];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToString:];
}

id objc_msgSend_isHidden(void *a1, const char *a2, ...)
{
  return _[a1 isHidden];
}

id objc_msgSend_isInternalBuild(void *a1, const char *a2, ...)
{
  return _[a1 isInternalBuild];
}

id objc_msgSend_isInternalDevice(void *a1, const char *a2, ...)
{
  return _[a1 isInternalDevice];
}

id objc_msgSend_isIntro(void *a1, const char *a2, ...)
{
  return _[a1 isIntro];
}

id objc_msgSend_isNetworkError_(void *a1, const char *a2, ...)
{
  return [a1 isNetworkError:];
}

id objc_msgSend_isOutro(void *a1, const char *a2, ...)
{
  return _[a1 isOutro];
}

id objc_msgSend_isPadUI(void *a1, const char *a2, ...)
{
  return _[a1 isPadUI];
}

id objc_msgSend_isPhoneUI(void *a1, const char *a2, ...)
{
  return _[a1 isPhoneUI];
}

id objc_msgSend_isSavedWithTipIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 isSavedWithTipIdentifier:];
}

id objc_msgSend_isSearchViewControllerPresented(void *a1, const char *a2, ...)
{
  return _[a1 isSearchViewControllerPresented];
}

id objc_msgSend_isSharedVariant(void *a1, const char *a2, ...)
{
  return _[a1 isSharedVariant];
}

id objc_msgSend_isSiriSuggestion(void *a1, const char *a2, ...)
{
  return _[a1 isSiriSuggestion];
}

id objc_msgSend_isTip(void *a1, const char *a2, ...)
{
  return _[a1 isTip];
}

id objc_msgSend_labelColor(void *a1, const char *a2, ...)
{
  return _[a1 labelColor];
}

id objc_msgSend_labelHyphenationFactor(void *a1, const char *a2, ...)
{
  return _[a1 labelHyphenationFactor];
}

id objc_msgSend_labelStyle(void *a1, const char *a2, ...)
{
  return _[a1 labelStyle];
}

id objc_msgSend_language(void *a1, const char *a2, ...)
{
  return _[a1 language];
}

id objc_msgSend_lastDisplayedContent(void *a1, const char *a2, ...)
{
  return _[a1 lastDisplayedContent];
}

id objc_msgSend_lastFetchError(void *a1, const char *a2, ...)
{
  return _[a1 lastFetchError];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_lastRecordedLaunchType(void *a1, const char *a2, ...)
{
  return _[a1 lastRecordedLaunchType];
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _[a1 layer];
}

id objc_msgSend_layoutAttributesForItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 layoutAttributesForItemAtIndexPath:];
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 leadingAnchor];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_link(void *a1, const char *a2, ...)
{
  return _[a1 link];
}

id objc_msgSend_loadBodyContentIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 loadBodyContentIfNeeded];
}

id objc_msgSend_loadBookWithTitle_identifier_topicID_version_(void *a1, const char *a2, ...)
{
  return [a1 loadBookWithTitle:identifier:topicID:version:];
}

id objc_msgSend_loadContentIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 loadContentIfNeeded];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringForKey:value:table:];
}

id objc_msgSend_localizedStringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringWithFormat:];
}

id objc_msgSend_log(void *a1, const char *a2, ...)
{
  return _[a1 log];
}

id objc_msgSend_logAnalyticsEventForAppForeground(void *a1, const char *a2, ...)
{
  return _[a1 logAnalyticsEventForAppForeground];
}

id objc_msgSend_logAnalyticsEventForChecklistSession(void *a1, const char *a2, ...)
{
  return _[a1 logAnalyticsEventForChecklistSession];
}

id objc_msgSend_logAnimationFinished(void *a1, const char *a2, ...)
{
  return _[a1 logAnimationFinished];
}

id objc_msgSend_logEndSession(void *a1, const char *a2, ...)
{
  return _[a1 logEndSession];
}

id objc_msgSend_logSharedTipDisplayed_isEligible_(void *a1, const char *a2, ...)
{
  return [a1 logSharedTipDisplayed:isEligible:];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _[a1 mainScreen];
}

id objc_msgSend_mainUserGuide(void *a1, const char *a2, ...)
{
  return _[a1 mainUserGuide];
}

id objc_msgSend_mainViewController(void *a1, const char *a2, ...)
{
  return _[a1 mainViewController];
}

id objc_msgSend_makeKeyAndVisible(void *a1, const char *a2, ...)
{
  return _[a1 makeKeyAndVisible];
}

id objc_msgSend_mediaSizeType(void *a1, const char *a2, ...)
{
  return _[a1 mediaSizeType];
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return _[a1 model];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_na_firstObjectPassingTest_(void *a1, const char *a2, ...)
{
  return [a1 na_firstObjectPassingTest:];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _[a1 navigationController];
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _[a1 navigationItem];
}

id objc_msgSend_networkMonitorToken(void *a1, const char *a2, ...)
{
  return _[a1 networkMonitorToken];
}

id objc_msgSend_networkStateDidChange_(void *a1, const char *a2, ...)
{
  return [a1 networkStateDidChange:];
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _[a1 now];
}

id objc_msgSend_numOfActiveRemoteURLSessions(void *a1, const char *a2, ...)
{
  return _[a1 numOfActiveRemoteURLSessions];
}

id objc_msgSend_numberOfItemsInSection_(void *a1, const char *a2, ...)
{
  return [a1 numberOfItemsInSection:];
}

id objc_msgSend_numberOfPages(void *a1, const char *a2, ...)
{
  return _[a1 numberOfPages];
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return [a1 numberWithDouble:];
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndexedSubscript:];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return [a1 objectForKey:];
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectForKeyedSubscript:];
}

id objc_msgSend_openApplicationWithBundleID_(void *a1, const char *a2, ...)
{
  return [a1 openApplicationWithBundleID];
}

id objc_msgSend_openURL_options_(void *a1, const char *a2, ...)
{
  return [a1 openURL:options:];
}

id objc_msgSend_openURL_options_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 openURL:options:completionHandler:];
}

id objc_msgSend_outroTextLabelTopPadding(void *a1, const char *a2, ...)
{
  return _[a1 outroTextLabelTopPadding];
}

id objc_msgSend_outroWidthMultiplier(void *a1, const char *a2, ...)
{
  return _[a1 outroWidthMultiplier];
}

id objc_msgSend_overrideWidgetWithTip_(void *a1, const char *a2, ...)
{
  return [a1 overrideWidgetWithTip:];
}

id objc_msgSend_pageControl(void *a1, const char *a2, ...)
{
  return _[a1 pageControl];
}

id objc_msgSend_pageControlBottomConstraint(void *a1, const char *a2, ...)
{
  return _[a1 pageControlBottomConstraint];
}

id objc_msgSend_pageControlCancelLongPressedForHUD_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageControlCancelLongPressedForHUD:");
}

id objc_msgSend_pageControlLongPressedForHUD_withText_(void *a1, const char *a2, ...)
{
  return [a1 pageControlLongPressedForHUD:withText:];
}

id objc_msgSend_parallaxFactor(void *a1, const char *a2, ...)
{
  return _[a1 parallaxFactor];
}

id objc_msgSend_parallaxOffset(void *a1, const char *a2, ...)
{
  return _[a1 parallaxOffset];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pendingColumnSwitching(void *a1, const char *a2, ...)
{
  return _[a1 pendingColumnSwitching];
}

id objc_msgSend_pendingContentUpdate(void *a1, const char *a2, ...)
{
  return _[a1 pendingContentUpdate];
}

id objc_msgSend_pendingReload(void *a1, const char *a2, ...)
{
  return _[a1 pendingReload];
}

id objc_msgSend_performSelector_withObject_(void *a1, const char *a2, ...)
{
  return [a1 performSelector:withObject:];
}

id objc_msgSend_performSelector_withObject_afterDelay_(void *a1, const char *a2, ...)
{
  return [a1 performSelector:withObject:afterDelay:];
}

id objc_msgSend_performWithoutAnimation_(void *a1, const char *a2, ...)
{
  return [a1 performWithoutAnimation:];
}

id objc_msgSend_platformIndependent(void *a1, const char *a2, ...)
{
  return _[a1 platformIndependent];
}

id objc_msgSend_playVideo(void *a1, const char *a2, ...)
{
  return _[a1 playVideo];
}

id objc_msgSend_playerController(void *a1, const char *a2, ...)
{
  return _[a1 playerController];
}

id objc_msgSend_playerWithURL_(void *a1, const char *a2, ...)
{
  return [a1 playerWithURL:];
}

id objc_msgSend_popToRootViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return [a1 popToRootViewControllerAnimated:];
}

id objc_msgSend_popoverPresentationController(void *a1, const char *a2, ...)
{
  return _[a1 popoverPresentationController];
}

id objc_msgSend_preferredContentSizeCategory(void *a1, const char *a2, ...)
{
  return _[a1 preferredContentSizeCategory];
}

id objc_msgSend_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return [a1 preferredFontForTextStyle:];
}

id objc_msgSend_prefetchAssetsFromTip_tips_assetUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return [a1 prefetchAssetsFromTip:tips:assetUserInterfaceStyle:];
}

id objc_msgSend_prepareSharedTipForReuse(void *a1, const char *a2, ...)
{
  return _[a1 prepareSharedTipForReuse];
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return [a1 presentViewController:animated:completion:];
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentedViewController];
}

id objc_msgSend_productId(void *a1, const char *a2, ...)
{
  return _[a1 productId];
}

id objc_msgSend_proxyWithViewMethod_(void *a1, const char *a2, ...)
{
  return [a1 proxyWithViewMethod:];
}

id objc_msgSend_queryItemWithName_value_(void *a1, const char *a2, ...)
{
  return [a1 queryItemWithName:value:];
}

id objc_msgSend_queryItems(void *a1, const char *a2, ...)
{
  return _[a1 queryItems];
}

id objc_msgSend_queryWithSearchTerm_origin_(void *a1, const char *a2, ...)
{
  return [a1 queryWithSearchTerm:];
}

id objc_msgSend_reconfigureAllCollectionViewItems(void *a1, const char *a2, ...)
{
  return _[a1 reconfigureAllCollectionViewItems];
}

id objc_msgSend_reconfigureItemsAtIndexPaths_(void *a1, const char *a2, ...)
{
  return [a1 reconfigureItemsAtIndexPaths:];
}

id objc_msgSend_referrer(void *a1, const char *a2, ...)
{
  return _[a1 referrer];
}

id objc_msgSend_registerClass_forCellWithReuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 registerClass:forCellWithReuseIdentifier:];
}

id objc_msgSend_registerDefaults_(void *a1, const char *a2, ...)
{
  return [a1 registerDefaults:];
}

id objc_msgSend_registerForTraitChanges_withHandler_(void *a1, const char *a2, ...)
{
  return [a1 registerForTraitChanges:withHandler:];
}

id objc_msgSend_registerTraitChanges(void *a1, const char *a2, ...)
{
  return _[a1 registerTraitChanges];
}

id objc_msgSend_reloadAppGroupDefaults(void *a1, const char *a2, ...)
{
  return _[a1 reloadAppGroupDefaults];
}

id objc_msgSend_reloadData(void *a1, const char *a2, ...)
{
  return _[a1 reloadData];
}

id objc_msgSend_reloadDataCache(void *a1, const char *a2, ...)
{
  return _[a1 reloadDataCache];
}

id objc_msgSend_removeAllDataCache(void *a1, const char *a2, ...)
{
  return _[a1 removeAllDataCache];
}

id objc_msgSend_removeAllKVOObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllKVOObjects];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeCollection_(void *a1, const char *a2, ...)
{
  return [a1 removeCollection];
}

id objc_msgSend_removeContentParser(void *a1, const char *a2, ...)
{
  return _[a1 removeContentParser];
}

id objc_msgSend_removeDelegate_(void *a1, const char *a2, ...)
{
  return [a1 removeDelegate:];
}

id objc_msgSend_removeFootnoteContentParser(void *a1, const char *a2, ...)
{
  return _[a1 removeFootnoteContentParser];
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _[a1 removeFromSuperview];
}

id objc_msgSend_removeInlineMessageLabel(void *a1, const char *a2, ...)
{
  return _[a1 removeInlineMessageLabel];
}

id objc_msgSend_removeNotificationForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 removeNotificationForIdentifier:];
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return [a1 removeObject:];
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectAtIndex:];
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectForKey:];
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:name:object:];
}

id objc_msgSend_removeObserverForKey_(void *a1, const char *a2, ...)
{
  return [a1 removeObserverForKey];
}

id objc_msgSend_replayButton(void *a1, const char *a2, ...)
{
  return _[a1 replayButton];
}

id objc_msgSend_replayVideo(void *a1, const char *a2, ...)
{
  return _[a1 replayVideo];
}

id objc_msgSend_reset(void *a1, const char *a2, ...)
{
  return _[a1 reset];
}

id objc_msgSend_resetAttributedStringCache(void *a1, const char *a2, ...)
{
  return _[a1 resetAttributedStringCache];
}

id objc_msgSend_resetCacheDefaults(void *a1, const char *a2, ...)
{
  return _[a1 resetCacheDefaults];
}

id objc_msgSend_resetDataCache(void *a1, const char *a2, ...)
{
  return _[a1 resetDataCache];
}

id objc_msgSend_resetSearchController(void *a1, const char *a2, ...)
{
  return _[a1 resetSearchController];
}

id objc_msgSend_resetTips(void *a1, const char *a2, ...)
{
  return _[a1 resetTips];
}

id objc_msgSend_resetVideoPlayer(void *a1, const char *a2, ...)
{
  return _[a1 resetVideoPlayer];
}

id objc_msgSend_rightBarButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 rightBarButtonItem];
}

id objc_msgSend_row(void *a1, const char *a2, ...)
{
  return _[a1 row];
}

id objc_msgSend_runTest_options_(void *a1, const char *a2, ...)
{
  return [a1 runTest:options:];
}

id objc_msgSend_runTestWithParameters_(void *a1, const char *a2, ...)
{
  return [a1 runTestWithParameters:];
}

id objc_msgSend_safeAreaInsets(void *a1, const char *a2, ...)
{
  return _[a1 safeAreaInsets];
}

id objc_msgSend_saveBarButton(void *a1, const char *a2, ...)
{
  return _[a1 saveBarButton];
}

id objc_msgSend_savedTipsCollection(void *a1, const char *a2, ...)
{
  return _[a1 savedTipsCollection];
}

id objc_msgSend_savedTipsManager(void *a1, const char *a2, ...)
{
  return _[a1 savedTipsManager];
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _[a1 scale];
}

id objc_msgSend_scheduleNextRunLoop(void *a1, const char *a2, ...)
{
  return _[a1 scheduleNextRunLoop];
}

id objc_msgSend_scheme(void *a1, const char *a2, ...)
{
  return _[a1 scheme];
}

id objc_msgSend_scrollToItemAtIndexPath_atScrollPosition_animated_(void *a1, const char *a2, ...)
{
  return [a1 scrollToItemAtIndexPath:atScrollPosition:animated:];
}

id objc_msgSend_scrollToTop(void *a1, const char *a2, ...)
{
  return _[a1 scrollToTop];
}

id objc_msgSend_scrolledDeferredAction(void *a1, const char *a2, ...)
{
  return _[a1 scrolledDeferredAction];
}

id objc_msgSend_scrubVideoToFirstFrame(void *a1, const char *a2, ...)
{
  return _[a1 scrubVideoToFirstFrame];
}

id objc_msgSend_search(void *a1, const char *a2, ...)
{
  return _[a1 search];
}

id objc_msgSend_searchBar(void *a1, const char *a2, ...)
{
  return _[a1 searchBar];
}

id objc_msgSend_searchBarButton(void *a1, const char *a2, ...)
{
  return _[a1 searchBarButton];
}

id objc_msgSend_searchController(void *a1, const char *a2, ...)
{
  return _[a1 searchController];
}

id objc_msgSend_searchQuery(void *a1, const char *a2, ...)
{
  return _[a1 searchQuery];
}

id objc_msgSend_searchResultViewModel(void *a1, const char *a2, ...)
{
  return _[a1 searchResultViewModel];
}

id objc_msgSend_searchResultsNavigationController(void *a1, const char *a2, ...)
{
  return _[a1 searchResultsNavigationController];
}

id objc_msgSend_searchTerm(void *a1, const char *a2, ...)
{
  return _[a1 searchTerm];
}

id objc_msgSend_searchWithSearchQuery_(void *a1, const char *a2, ...)
{
  return [a1 searchWithSearchQuery:];
}

id objc_msgSend_secondaryBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 secondaryBackgroundColor];
}

id objc_msgSend_secondaryLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 secondaryLabelColor];
}

id objc_msgSend_setAccessibilityIgnoresInvertColors_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityIgnoresInvertColors:];
}

id objc_msgSend_setActionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setActionHandler:];
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return [a1 setActive:];
}

id objc_msgSend_setAdditionalBottomOffset_(void *a1, const char *a2, ...)
{
  return [a1 setAdditionalBottomOffset:];
}

id objc_msgSend_setAdjustsFontForContentSizeCategory_(void *a1, const char *a2, ...)
{
  return [a1 setAdjustsFontForContentSizeCategory:];
}

id objc_msgSend_setAlignment_(void *a1, const char *a2, ...)
{
  return [a1 setAlignment:];
}

id objc_msgSend_setAllowPaging_(void *a1, const char *a2, ...)
{
  return [a1 setAllowPaging:];
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return [a1 setAlpha:];
}

id objc_msgSend_setAlwaysBounceHorizontal_(void *a1, const char *a2, ...)
{
  return [a1 setAlwaysBounceHorizontal:];
}

id objc_msgSend_setAnimationSource_(void *a1, const char *a2, ...)
{
  return [a1 setAnimationSource:];
}

id objc_msgSend_setAppController_(void *a1, const char *a2, ...)
{
  return [a1 setAppController:];
}

id objc_msgSend_setAppInBackground_(void *a1, const char *a2, ...)
{
  return [a1 setAppInBackground:];
}

id objc_msgSend_setAppReferrer_(void *a1, const char *a2, ...)
{
  return [a1 setAppReferrer:];
}

id objc_msgSend_setAspectFillAsset_(void *a1, const char *a2, ...)
{
  return [a1 setAspectFillAsset:];
}

id objc_msgSend_setAssetViewHeightConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setAssetViewHeightConstraint];
}

id objc_msgSend_setAssetViewLayoutGuideCenterXConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setAssetViewLayoutGuideCenterXConstraint:];
}

id objc_msgSend_setAssetsConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 setAssetsConfiguration:];
}

id objc_msgSend_setAttributedText_(void *a1, const char *a2, ...)
{
  return [a1 setAttributedText:];
}

id objc_msgSend_setAuthenticationHandler_(void *a1, const char *a2, ...)
{
  return [a1 setAuthenticationHandler:];
}

id objc_msgSend_setAutocapitalizationType_(void *a1, const char *a2, ...)
{
  return [a1 setAutocapitalizationType:];
}

id objc_msgSend_setAutocorrectionType_(void *a1, const char *a2, ...)
{
  return [a1 setAutocorrectionType:];
}

id objc_msgSend_setAxis_(void *a1, const char *a2, ...)
{
  return [a1 setAxis:];
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundColor:];
}

id objc_msgSend_setBackgroundStyle_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundStyle:];
}

id objc_msgSend_setBadgeCount_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setBadgeCount:withCompletionHandler:];
}

id objc_msgSend_setBodyContentProcessingCount_(void *a1, const char *a2, ...)
{
  return [a1 setBodyContentProcessingCount:];
}

id objc_msgSend_setCacheVideoIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setCacheVideoIdentifier];
}

id objc_msgSend_setCategory_error_(void *a1, const char *a2, ...)
{
  return [a1 setCategory:error:];
}

id objc_msgSend_setChecklistCollection_(void *a1, const char *a2, ...)
{
  return [a1 setChecklistCollection:];
}

id objc_msgSend_setChecklistHandler_(void *a1, const char *a2, ...)
{
  return [a1 setChecklistHandler:];
}

id objc_msgSend_setClientConditionID_(void *a1, const char *a2, ...)
{
  return [a1 setClientConditionID:];
}

id objc_msgSend_setClipsToBounds_(void *a1, const char *a2, ...)
{
  return [a1 setClipsToBounds:];
}

id objc_msgSend_setCollection_(void *a1, const char *a2, ...)
{
  return [a1 setCollection:];
}

id objc_msgSend_setCollectionID_(void *a1, const char *a2, ...)
{
  return [a1 setCollectionID];
}

id objc_msgSend_setCollectionId_(void *a1, const char *a2, ...)
{
  return [a1 setCollectionId:];
}

id objc_msgSend_setCollectionListViewController_(void *a1, const char *a2, ...)
{
  return [a1 setCollectionListViewController:];
}

id objc_msgSend_setCollectionSections_(void *a1, const char *a2, ...)
{
  return [a1 setCollectionSections:];
}

id objc_msgSend_setCollections_(void *a1, const char *a2, ...)
{
  return [a1 setCollections:];
}

id objc_msgSend_setConstant_(void *a1, const char *a2, ...)
{
  return [a1 setConstant:];
}

id objc_msgSend_setContentCompressionResistancePriority_forAxis_(void *a1, const char *a2, ...)
{
  return [a1 setContentCompressionResistancePriority:forAxis:];
}

id objc_msgSend_setContentDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setContentDelegate:];
}

id objc_msgSend_setContentFinishedLoading_(void *a1, const char *a2, ...)
{
  return [a1 setContentFinishedLoading:];
}

id objc_msgSend_setContentID_(void *a1, const char *a2, ...)
{
  return [a1 setContentID];
}

id objc_msgSend_setContentInsetAdjustmentBehavior_(void *a1, const char *a2, ...)
{
  return [a1 setContentInsetAdjustmentBehavior:];
}

id objc_msgSend_setContentLabelConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setContentLabelConstraints:];
}

id objc_msgSend_setContentParser_(void *a1, const char *a2, ...)
{
  return [a1 setContentParser:];
}

id objc_msgSend_setContentSafeAreaInsets_(void *a1, const char *a2, ...)
{
  return [a1 setContentSafeAreaInsets:];
}

id objc_msgSend_setContentTextOperation_(void *a1, const char *a2, ...)
{
  return [a1 setContentTextOperation:];
}

id objc_msgSend_setContentTextOperationID_(void *a1, const char *a2, ...)
{
  return [a1 setContentTextOperationID];
}

id objc_msgSend_setContentTextViewConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setContentTextViewConstraints:];
}

id objc_msgSend_setCorrelationID_(void *a1, const char *a2, ...)
{
  return [a1 setCorrelationID:];
}

id objc_msgSend_setCurrentCollapsedDisplayColumn_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentCollapsedDisplayColumn:];
}

id objc_msgSend_setCurrentCollectionID_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentCollectionID:];
}

id objc_msgSend_setCurrentDisplayMode_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentDisplayMode:];
}

id objc_msgSend_setCurrentDisplayTips_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentDisplayTips:];
}

id objc_msgSend_setCurrentPage_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentPage:];
}

id objc_msgSend_setCurrentPageIndicatorTintColor_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentPageIndicatorTintColor:];
}

id objc_msgSend_setCurrentSwipeEvent_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentSwipeEvent:];
}

id objc_msgSend_setCurrentTip_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentTip:];
}

id objc_msgSend_setDataDetectorTypes_(void *a1, const char *a2, ...)
{
  return [a1 setDataDetectorTypes:];
}

id objc_msgSend_setDataSource_(void *a1, const char *a2, ...)
{
  return [a1 setDataSource:];
}

id objc_msgSend_setDefaultBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultBackgroundColor:];
}

id objc_msgSend_setDefaultSessionDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultSessionDelegate:];
}

id objc_msgSend_setDefinesPresentationContext_(void *a1, const char *a2, ...)
{
  return [a1 setDefinesPresentationContext:];
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDelegate:];
}

id objc_msgSend_setDirection_(void *a1, const char *a2, ...)
{
  return [a1 setDirection:];
}

id objc_msgSend_setDirectionalLockEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setDirectionalLockEnabled:];
}

id objc_msgSend_setDisplayChevron_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayChevron:];
}

id objc_msgSend_setEdgeParallaxOffset_(void *a1, const char *a2, ...)
{
  return [a1 setEdgeParallaxOffset:];
}

id objc_msgSend_setEditable_(void *a1, const char *a2, ...)
{
  return [a1 setEditable:];
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setEnabled:];
}

id objc_msgSend_setExcludedActivityTypes_(void *a1, const char *a2, ...)
{
  return [a1 setExcludedActivityTypes:];
}

id objc_msgSend_setFeaturedCollection_(void *a1, const char *a2, ...)
{
  return [a1 setFeaturedCollection:];
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return [a1 setFont:];
}

id objc_msgSend_setFootnoteBottomConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setFootnoteBottomConstraint:];
}

id objc_msgSend_setFootnoteContentParser_(void *a1, const char *a2, ...)
{
  return [a1 setFootnoteContentParser:];
}

id objc_msgSend_setFootnoteContentTextOperation_(void *a1, const char *a2, ...)
{
  return [a1 setFootnoteContentTextOperation:];
}

id objc_msgSend_setFootnoteContentTextOperationID_(void *a1, const char *a2, ...)
{
  return [a1 setFootnoteContentTextOperationID];
}

id objc_msgSend_setFootnoteTextView_(void *a1, const char *a2, ...)
{
  return [a1 setFootnoteTextView:];
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return [a1 setFrame:];
}

id objc_msgSend_setHasBodyContent_(void *a1, const char *a2, ...)
{
  return [a1 setHasBodyContent:];
}

id objc_msgSend_setHasLoaded_(void *a1, const char *a2, ...)
{
  return [a1 setHasLoaded:];
}

id objc_msgSend_setHasNotifiedDelegateContentLoaded_(void *a1, const char *a2, ...)
{
  return [a1 setHasNotifiedDelegateContentLoaded:];
}

id objc_msgSend_setHeightTracksTextView_(void *a1, const char *a2, ...)
{
  return [a1 setHeightTracksTextView:];
}

id objc_msgSend_setHeroImageUpdated_(void *a1, const char *a2, ...)
{
  return [a1 setHeroImageUpdated:];
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return [a1 setHidden:];
}

id objc_msgSend_setHidesNavigationBarDuringPresentation_(void *a1, const char *a2, ...)
{
  return [a1 setHidesNavigationBarDuringPresentation:];
}

id objc_msgSend_setHidesSearchBarWhenScrolling_(void *a1, const char *a2, ...)
{
  return [a1 setHidesSearchBarWhenScrolling:];
}

id objc_msgSend_setHudDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setHudDelegate:];
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return [a1 setImage:];
}

id objc_msgSend_setImageLoadingFinished_(void *a1, const char *a2, ...)
{
  return [a1 setImageLoadingFinished:];
}

id objc_msgSend_setImageParallaxMultiplier_(void *a1, const char *a2, ...)
{
  return [a1 setImageParallaxMultiplier:];
}

id objc_msgSend_setInvalidateFlowLayoutAttributes_(void *a1, const char *a2, ...)
{
  return [a1 setInvalidateFlowLayoutAttributes:];
}

id objc_msgSend_setInvalidateFlowLayoutDelegateMetrics_(void *a1, const char *a2, ...)
{
  return [a1 setInvalidateFlowLayoutDelegateMetrics:];
}

id objc_msgSend_setIsFirstLaunch_(void *a1, const char *a2, ...)
{
  return [a1 setIsFirstLaunch:];
}

id objc_msgSend_setIsSharedVariant_(void *a1, const char *a2, ...)
{
  return [a1 setIsSharedVariant:];
}

id objc_msgSend_setLargeTitleDisplayMode_(void *a1, const char *a2, ...)
{
  return [a1 setLargeTitleDisplayMode:];
}

id objc_msgSend_setLineBreakMode_(void *a1, const char *a2, ...)
{
  return [a1 setLineBreakMode:];
}

id objc_msgSend_setLineBreakStrategy_(void *a1, const char *a2, ...)
{
  return [a1 setLineBreakStrategy:];
}

id objc_msgSend_setLineFragmentPadding_(void *a1, const char *a2, ...)
{
  return [a1 setLineFragmentPadding:];
}

id objc_msgSend_setLoading_(void *a1, const char *a2, ...)
{
  return [a1 setLoading:];
}

id objc_msgSend_setMainViewController_(void *a1, const char *a2, ...)
{
  return [a1 setMainViewController:];
}

id objc_msgSend_setMaximumWindowSize_(void *a1, const char *a2, ...)
{
  return [a1 setMaximumWindowSize:];
}

id objc_msgSend_setMediaSizeType_(void *a1, const char *a2, ...)
{
  return [a1 setMediaSizeType:];
}

id objc_msgSend_setMinimumLineSpacing_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumLineSpacing:];
}

id objc_msgSend_setMinimumWindowSize_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumWindowSize:];
}

id objc_msgSend_setModalInPresentation_(void *a1, const char *a2, ...)
{
  return [a1 setModalInPresentation];
}

id objc_msgSend_setModalPresentationStyle_(void *a1, const char *a2, ...)
{
  return [a1 setModalPresentationStyle:];
}

id objc_msgSend_setModel_(void *a1, const char *a2, ...)
{
  return [a1 setModel:];
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsLayout];
}

id objc_msgSend_setNeedsTextView_(void *a1, const char *a2, ...)
{
  return [a1 setNeedsTextView:];
}

id objc_msgSend_setNeedsUpdateConstraints(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsUpdateConstraints];
}

id objc_msgSend_setNoImageBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setNoImageBackgroundColor:];
}

id objc_msgSend_setNoImageBackgroundColorOverride_(void *a1, const char *a2, ...)
{
  return [a1 setNoImageBackgroundColorOverride:];
}

id objc_msgSend_setNumberOfLines_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfLines:];
}

id objc_msgSend_setNumberOfPages_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfPages:];
}

id objc_msgSend_setNumberOfTapsRequired_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfTapsRequired:];
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKey:];
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKeyedSubscript:];
}

id objc_msgSend_setObscuresBackgroundDuringPresentation_(void *a1, const char *a2, ...)
{
  return [a1 setObscuresBackgroundDuringPresentation:];
}

id objc_msgSend_setOpaque_(void *a1, const char *a2, ...)
{
  return [a1 setOpaque:];
}

id objc_msgSend_setPageIndicatorTintColor_(void *a1, const char *a2, ...)
{
  return [a1 setPageIndicatorTintColor:];
}

id objc_msgSend_setPagingEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setPagingEnabled:];
}

id objc_msgSend_setParagraphSpacing_(void *a1, const char *a2, ...)
{
  return [a1 setParagraphSpacing:];
}

id objc_msgSend_setParallaxFactor_(void *a1, const char *a2, ...)
{
  return [a1 setParallaxFactor:];
}

id objc_msgSend_setParallaxOffset_(void *a1, const char *a2, ...)
{
  return [a1 setParallaxOffset:];
}

id objc_msgSend_setPassthroughViews_(void *a1, const char *a2, ...)
{
  return [a1 setPassthroughViews:];
}

id objc_msgSend_setPath_(void *a1, const char *a2, ...)
{
  return [a1 setPath:];
}

id objc_msgSend_setPendingAppLaunchEvent_(void *a1, const char *a2, ...)
{
  return [a1 setPendingAppLaunchEvent:];
}

id objc_msgSend_setPendingColumnSwitching_(void *a1, const char *a2, ...)
{
  return [a1 setPendingColumnSwitching];
}

id objc_msgSend_setPendingOpenUniversalURL_(void *a1, const char *a2, ...)
{
  return [a1 setPendingOpenUniversalURL:];
}

id objc_msgSend_setPendingReload_(void *a1, const char *a2, ...)
{
  return [a1 setPendingReload:];
}

id objc_msgSend_setPendingSharedTipVariantID_(void *a1, const char *a2, ...)
{
  return [a1 setPendingSharedTipVariantID];
}

id objc_msgSend_setPendingShowTipIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setPendingShowTipIdentifier];
}

id objc_msgSend_setPermittedArrowDirections_(void *a1, const char *a2, ...)
{
  return [a1 setPermittedArrowDirections:];
}

id objc_msgSend_setPlatformIndependent_(void *a1, const char *a2, ...)
{
  return [a1 setPlatformIndependent:];
}

id objc_msgSend_setPlayer_(void *a1, const char *a2, ...)
{
  return [a1 setPlayer:];
}

id objc_msgSend_setPopoverLayoutMargins_(void *a1, const char *a2, ...)
{
  return [a1 setPopoverLayoutMargins];
}

id objc_msgSend_setPreferredBehavioralStyle_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredBehavioralStyle:];
}

id objc_msgSend_setPreferredSplitBehavior_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredSplitBehavior:];
}

id objc_msgSend_setPreferredViewMethod_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredViewMethod:];
}

id objc_msgSend_setPrefersLandingViewOnLoad_(void *a1, const char *a2, ...)
{
  return [a1 setPrefersLandingViewOnLoad:];
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return [a1 setPriority:];
}

id objc_msgSend_setQueryItems_(void *a1, const char *a2, ...)
{
  return [a1 setQueryItems:];
}

id objc_msgSend_setReplayButton_(void *a1, const char *a2, ...)
{
  return [a1 setReplayButton:];
}

id objc_msgSend_setReplayGradientView_(void *a1, const char *a2, ...)
{
  return [a1 setReplayGradientView:];
}

id objc_msgSend_setRespectLoadingStatus_(void *a1, const char *a2, ...)
{
  return [a1 setRespectLoadingStatus:];
}

id objc_msgSend_setRightBarButtonItem_(void *a1, const char *a2, ...)
{
  return [a1 setRightBarButtonItem:];
}

id objc_msgSend_setRightBarButtonItems_(void *a1, const char *a2, ...)
{
  return [a1 setRightBarButtonItems:];
}

id objc_msgSend_setRootViewController_(void *a1, const char *a2, ...)
{
  return [a1 setRootViewController:];
}

id objc_msgSend_setSaveBarButton_(void *a1, const char *a2, ...)
{
  return [a1 setSaveBarButton:];
}

id objc_msgSend_setSavedTipsCollection_(void *a1, const char *a2, ...)
{
  return [a1 setSavedTipsCollection:];
}

id objc_msgSend_setScheme_(void *a1, const char *a2, ...)
{
  return [a1 setScheme:];
}

id objc_msgSend_setScrollDirection_(void *a1, const char *a2, ...)
{
  return [a1 setScrollDirection:];
}

id objc_msgSend_setScrollEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setScrollEnabled:];
}

id objc_msgSend_setScrollingBounds_(void *a1, const char *a2, ...)
{
  return [a1 setScrollingBounds:];
}

id objc_msgSend_setScrollingTipContent_(void *a1, const char *a2, ...)
{
  return [a1 setScrollingTipContent:];
}

id objc_msgSend_setSearchBarButton_(void *a1, const char *a2, ...)
{
  return [a1 setSearchBarButton:];
}

id objc_msgSend_setSearchController_(void *a1, const char *a2, ...)
{
  return [a1 setSearchController:];
}

id objc_msgSend_setSearchQuery_(void *a1, const char *a2, ...)
{
  return [a1 setSearchQuery:];
}

id objc_msgSend_setSearchResultsNavigationController_(void *a1, const char *a2, ...)
{
  return [a1 setSearchResultsNavigationController:];
}

id objc_msgSend_setSearchResultsUpdater_(void *a1, const char *a2, ...)
{
  return [a1 setSearchResultsUpdater:];
}

id objc_msgSend_setSelectedHelpTopicID_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedHelpTopicID];
}

id objc_msgSend_setSelectedTipIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedTipIdentifier:];
}

id objc_msgSend_setShadowColor_(void *a1, const char *a2, ...)
{
  return [a1 setShadowColor:];
}

id objc_msgSend_setShadowImage_(void *a1, const char *a2, ...)
{
  return [a1 setShadowImage:];
}

id objc_msgSend_setShadowOpacity_(void *a1, const char *a2, ...)
{
  return [a1 setShadowOpacity:];
}

id objc_msgSend_setShadowPathIsBounds_(void *a1, const char *a2, ...)
{
  return [a1 setShadowPathIsBounds:];
}

id objc_msgSend_setShadowRadius_(void *a1, const char *a2, ...)
{
  return [a1 setShadowRadius:];
}

id objc_msgSend_setShareBarButton_(void *a1, const char *a2, ...)
{
  return [a1 setShareBarButton:];
}

id objc_msgSend_setShortcutItems_(void *a1, const char *a2, ...)
{
  return [a1 setShortcutItems:];
}

id objc_msgSend_setShouldDisplayNavigationTitle_(void *a1, const char *a2, ...)
{
  return [a1 setShouldDisplayNavigationTitle:];
}

id objc_msgSend_setShouldFlick_(void *a1, const char *a2, ...)
{
  return [a1 setShouldFlick:];
}

id objc_msgSend_setShouldHoldOffVideo_(void *a1, const char *a2, ...)
{
  return [a1 setShouldHoldOffVideo:];
}

id objc_msgSend_setShouldLogAnimationFinished_(void *a1, const char *a2, ...)
{
  return [a1 setShouldLogAnimationFinished:];
}

id objc_msgSend_setShouldUseDefaultNavBar_(void *a1, const char *a2, ...)
{
  return [a1 setShouldUseDefaultNavBar:];
}

id objc_msgSend_setShowTopicViewOnLoad_(void *a1, const char *a2, ...)
{
  return [a1 setShowTopicViewOnLoad:];
}

id objc_msgSend_setShowsHorizontalScrollIndicator_(void *a1, const char *a2, ...)
{
  return [a1 setShowsHorizontalScrollIndicator:];
}

id objc_msgSend_setShowsVerticalScrollIndicator_(void *a1, const char *a2, ...)
{
  return [a1 setShowsVerticalScrollIndicator:];
}

id objc_msgSend_setSourceView_(void *a1, const char *a2, ...)
{
  return [a1 setSourceView:];
}

id objc_msgSend_setSplitViewController_(void *a1, const char *a2, ...)
{
  return [a1 setSplitViewController:];
}

id objc_msgSend_setStandardAppearance_(void *a1, const char *a2, ...)
{
  return [a1 setStandardAppearance:];
}

id objc_msgSend_setSwipeSpeedFactor_(void *a1, const char *a2, ...)
{
  return [a1 setSwipeSpeedFactor:];
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return [a1 setText:];
}

id objc_msgSend_setTextAlignment_(void *a1, const char *a2, ...)
{
  return [a1 setTextAlignment:];
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return [a1 setTextColor:];
}

id objc_msgSend_setTextContainerInset_(void *a1, const char *a2, ...)
{
  return [a1 setTextContainerInset:];
}

id objc_msgSend_setTimeSpent_(void *a1, const char *a2, ...)
{
  return [a1 setTimeSpent:];
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return [a1 setTintColor:];
}

id objc_msgSend_setTip_(void *a1, const char *a2, ...)
{
  return [a1 setTip:];
}

id objc_msgSend_setTip_withCellAppearance_(void *a1, const char *a2, ...)
{
  return [a1 setTip:withCellAppearance:];
}

id objc_msgSend_setTipID_(void *a1, const char *a2, ...)
{
  return [a1 setTipID];
}

id objc_msgSend_setTipId_(void *a1, const char *a2, ...)
{
  return [a1 setTipId:];
}

id objc_msgSend_setTipListViewController_(void *a1, const char *a2, ...)
{
  return [a1 setTipListViewController:];
}

id objc_msgSend_setTipSizes_(void *a1, const char *a2, ...)
{
  return [a1 setTipSizes:];
}

id objc_msgSend_setTips_(void *a1, const char *a2, ...)
{
  return [a1 setTips:];
}

id objc_msgSend_setTipsByCollectionViewController_(void *a1, const char *a2, ...)
{
  return [a1 setTipsByCollectionViewController:];
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return [a1 setTitle:];
}

id objc_msgSend_setTitleText_(void *a1, const char *a2, ...)
{
  return [a1 setTitleText:];
}

id objc_msgSend_setTopSafeAreaHeight_(void *a1, const char *a2, ...)
{
  return [a1 setTopSafeAreaHeight:];
}

id objc_msgSend_setTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 setTraitCollection:];
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setTranslatesAutoresizingMaskIntoConstraints:];
}

id objc_msgSend_setTryItViewController_(void *a1, const char *a2, ...)
{
  return [a1 setTryItViewController:];
}

id objc_msgSend_setUpdatingSize_(void *a1, const char *a2, ...)
{
  return [a1 setUpdatingSize:];
}

id objc_msgSend_setUseStandardNavBarBehavior_(void *a1, const char *a2, ...)
{
  return [a1 setUseStandardNavBarBehavior:];
}

id objc_msgSend_setUserGuideDisplayed_(void *a1, const char *a2, ...)
{
  return [a1 setUserGuideDisplayed:];
}

id objc_msgSend_setUserGuideHandler_(void *a1, const char *a2, ...)
{
  return [a1 setUserGuideHandler:];
}

id objc_msgSend_setUserGuides_(void *a1, const char *a2, ...)
{
  return [a1 setUserGuides:];
}

id objc_msgSend_setUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setUserInteractionEnabled:];
}

id objc_msgSend_setUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return [a1 setUserInterfaceStyle:];
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setValue:forKey:];
}

id objc_msgSend_setVideoDelayTime_(void *a1, const char *a2, ...)
{
  return [a1 setVideoDelayTime:];
}

id objc_msgSend_setVideoDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setVideoDelegate:];
}

id objc_msgSend_setVideoLoadingFinished_(void *a1, const char *a2, ...)
{
  return [a1 setVideoLoadingFinished:];
}

id objc_msgSend_setVideoPath_(void *a1, const char *a2, ...)
{
  return [a1 setVideoPath:];
}

id objc_msgSend_setViewCollapsed_(void *a1, const char *a2, ...)
{
  return [a1 setViewCollapsed:];
}

id objc_msgSend_setViewController_forColumn_(void *a1, const char *a2, ...)
{
  return [a1 setViewController:forColumn:];
}

id objc_msgSend_setViewCycleDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setViewCycleDelegate:];
}

id objc_msgSend_setViewNavigationCollapsed_(void *a1, const char *a2, ...)
{
  return [a1 setViewNavigationCollapsed:];
}

id objc_msgSend_setWindow_(void *a1, const char *a2, ...)
{
  return [a1 setWindow:];
}

id objc_msgSend_setupActionButtonConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 setupActionButtonConfiguration];
}

id objc_msgSend_setupActionButtonConfigurationWithTitle_foregroundColor_backgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setupActionButtonConfigurationWithTitle:foregroundColor:backgroundColor:];
}

id objc_msgSend_setupActionButtonConfigurationWithTitle_foregroundColor_backgroundColor_symbolName_fontWeight_(void *a1, const char *a2, ...)
{
  return [a1 setupActionButtonConfigurationWithTitle:foregroundColor:backgroundColor:symbolName:fontWeight:];
}

id objc_msgSend_setupActionButtonConfigurationWithTitle_isEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setupActionButtonConfigurationWithTitle:isEnabled:];
}

id objc_msgSend_setupCollectionListView(void *a1, const char *a2, ...)
{
  return _[a1 setupCollectionListView];
}

id objc_msgSend_setupReplayButtonConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 setupReplayButtonConfiguration];
}

id objc_msgSend_setupSearch(void *a1, const char *a2, ...)
{
  return _[a1 setupSearch];
}

id objc_msgSend_setupSearchResultSelectedHandler(void *a1, const char *a2, ...)
{
  return _[a1 setupSearchResultSelectedHandler];
}

id objc_msgSend_setupSearchViewModel(void *a1, const char *a2, ...)
{
  return _[a1 setupSearchViewModel];
}

id objc_msgSend_setupSharedTipMessaging(void *a1, const char *a2, ...)
{
  return _[a1 setupSharedTipMessaging];
}

id objc_msgSend_setupSplitView(void *a1, const char *a2, ...)
{
  return _[a1 setupSplitView];
}

id objc_msgSend_setupTipListView(void *a1, const char *a2, ...)
{
  return _[a1 setupTipListView];
}

id objc_msgSend_setupTipsByCollectionView(void *a1, const char *a2, ...)
{
  return _[a1 setupTipsByCollectionView];
}

id objc_msgSend_shareBarButton(void *a1, const char *a2, ...)
{
  return _[a1 shareBarButton];
}

id objc_msgSend_shareText(void *a1, const char *a2, ...)
{
  return _[a1 shareText];
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _[a1 sharedApplication];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedMonitor(void *a1, const char *a2, ...)
{
  return _[a1 sharedMonitor];
}

id objc_msgSend_shortTitle(void *a1, const char *a2, ...)
{
  return _[a1 shortTitle];
}

id objc_msgSend_shouldDisplayNavigationTitle(void *a1, const char *a2, ...)
{
  return _[a1 shouldDisplayNavigationTitle];
}

id objc_msgSend_shouldHoldOffVideo(void *a1, const char *a2, ...)
{
  return _[a1 shouldHoldOffVideo];
}

id objc_msgSend_shouldLogAnimationFinished(void *a1, const char *a2, ...)
{
  return _[a1 shouldLogAnimationFinished];
}

id objc_msgSend_showCollectionWithIdentifier_launchType_(void *a1, const char *a2, ...)
{
  return [a1 showCollectionWithIdentifier:launchType:];
}

id objc_msgSend_showCollectionsView(void *a1, const char *a2, ...)
{
  return _[a1 showCollectionsView];
}

id objc_msgSend_showColumn_(void *a1, const char *a2, ...)
{
  return [a1 showColumn:];
}

id objc_msgSend_showInlineLabelWithTitle_message_(void *a1, const char *a2, ...)
{
  return [a1 showInlineLabelWithTitle:message:];
}

id objc_msgSend_showInlineMessageForError_(void *a1, const char *a2, ...)
{
  return [a1 showInlineMessageForError:];
}

id objc_msgSend_showModalTipWithVariantID_(void *a1, const char *a2, ...)
{
  return [a1 showModalTipWithVariantID:];
}

id objc_msgSend_showPagingLabelOnLongPress(void *a1, const char *a2, ...)
{
  return _[a1 showPagingLabelOnLongPress];
}

id objc_msgSend_showTOCView(void *a1, const char *a2, ...)
{
  return _[a1 showTOCView];
}

id objc_msgSend_showTipWithID_launchType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showTipWithID:launchType:");
}

id objc_msgSend_showTipsView(void *a1, const char *a2, ...)
{
  return _[a1 showTipsView];
}

id objc_msgSend_size(void *a1, const char *a2, ...)
{
  return _[a1 size];
}

id objc_msgSend_sizeForNumberOfPages_(void *a1, const char *a2, ...)
{
  return [a1 sizeForNumberOfPages:];
}

id objc_msgSend_softwareWelcomeCollectionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 softwareWelcomeCollectionIdentifier];
}

id objc_msgSend_splitViewController(void *a1, const char *a2, ...)
{
  return _[a1 splitViewController];
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 standardUserDefaults];
}

id objc_msgSend_startSession(void *a1, const char *a2, ...)
{
  return _[a1 startSession];
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_stopSession(void *a1, const char *a2, ...)
{
  return _[a1 stopSession];
}

id objc_msgSend_stopVideoPlayer(void *a1, const char *a2, ...)
{
  return _[a1 stopVideoPlayer];
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _[a1 string];
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingFormat:];
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingString:];
}

id objc_msgSend_stringByRemovingPercentEncoding(void *a1, const char *a2, ...)
{
  return _[a1 stringByRemovingPercentEncoding];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringWithFormat:];
}

id objc_msgSend_summary(void *a1, const char *a2, ...)
{
  return _[a1 summary];
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _[a1 superview];
}

id objc_msgSend_supportedInterfaceOrientations(void *a1, const char *a2, ...)
{
  return _[a1 supportedInterfaceOrientations];
}

id objc_msgSend_syncCacheImmediately(void *a1, const char *a2, ...)
{
  return _[a1 syncCacheImmediately];
}

id objc_msgSend_synchronize(void *a1, const char *a2, ...)
{
  return _[a1 synchronize];
}

id objc_msgSend_systemBlueColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBlueColor];
}

id objc_msgSend_systemGray2Color(void *a1, const char *a2, ...)
{
  return _[a1 systemGray2Color];
}

id objc_msgSend_systemGrayColor(void *a1, const char *a2, ...)
{
  return _[a1 systemGrayColor];
}

id objc_msgSend_tertiaryLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 tertiaryLabelColor];
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _[a1 text];
}

id objc_msgSend_textColor(void *a1, const char *a2, ...)
{
  return _[a1 textColor];
}

id objc_msgSend_textContainer(void *a1, const char *a2, ...)
{
  return _[a1 textContainer];
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return [a1 timeIntervalSinceDate:];
}

id objc_msgSend_tip(void *a1, const char *a2, ...)
{
  return _[a1 tip];
}

id objc_msgSend_tipCollectionViewCell_linkTappedForURL_(void *a1, const char *a2, ...)
{
  return [a1 tipCollectionViewCell:linkTappedForURL:];
}

id objc_msgSend_tipCollectionViewCell_showSafariViewForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tipCollectionViewCell:showSafariViewForURL:");
}

id objc_msgSend_tipCollectionViewCell_showTryItModeForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tipCollectionViewCell:showTryItModeForURL:");
}

id objc_msgSend_tipCollectionViewCell_showUserGuideWithIdentifier_topicId_(void *a1, const char *a2, ...)
{
  return [a1 tipCollectionViewCell:showUserGuideWithIdentifier:topicId:];
}

id objc_msgSend_tipCollectionViewCell_showVideoForURL_(void *a1, const char *a2, ...)
{
  return [a1 tipCollectionViewCell:showVideoForURL:];
}

id objc_msgSend_tipCollectionViewCellCanDisplayAssets_(void *a1, const char *a2, ...)
{
  return [a1 tipCollectionViewCellCanDisplayAssets];
}

id objc_msgSend_tipCollectionViewCellContentLayoutChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tipCollectionViewCellContentLayoutChanged:");
}

id objc_msgSend_tipCollectionViewCellHandleTripleTapInternalGesture_(void *a1, const char *a2, ...)
{
  return [a1 tipCollectionViewCellHandleTripleTapInternalGesture:];
}

id objc_msgSend_tipForCorrelationIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 tipForCorrelationIdentifier:];
}

id objc_msgSend_tipForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 tipForIdentifier:];
}

id objc_msgSend_tipForIdentifier_includingCorrelation_(void *a1, const char *a2, ...)
{
  return [a1 tipForIdentifier:includingCorrelation:];
}

id objc_msgSend_tipForTipID_(void *a1, const char *a2, ...)
{
  return [a1 tipForTipID:];
}

id objc_msgSend_tipForVariantIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 tipForVariantIdentifier:];
}

id objc_msgSend_tipID(void *a1, const char *a2, ...)
{
  return _[a1 tipID];
}

id objc_msgSend_tipId(void *a1, const char *a2, ...)
{
  return _[a1 tipId];
}

id objc_msgSend_tipIntro(void *a1, const char *a2, ...)
{
  return _[a1 tipIntro];
}

id objc_msgSend_tipListViewController(void *a1, const char *a2, ...)
{
  return _[a1 tipListViewController];
}

id objc_msgSend_tipSizes(void *a1, const char *a2, ...)
{
  return _[a1 tipSizes];
}

id objc_msgSend_tipViewed_collectionIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 tipViewed:collectionIdentifier:];
}

id objc_msgSend_tips(void *a1, const char *a2, ...)
{
  return _[a1 tips];
}

id objc_msgSend_tipsAppActive(void *a1, const char *a2, ...)
{
  return _[a1 tipsAppActive];
}

id objc_msgSend_tipsByCollectionViewController(void *a1, const char *a2, ...)
{
  return _[a1 tipsByCollectionViewController];
}

id objc_msgSend_tipsByCollectionViewController_tipsForCollectionID_(void *a1, const char *a2, ...)
{
  return [a1 tipsByCollectionViewController:tipsForCollectionID:];
}

id objc_msgSend_tipsForCollectionIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 tipsForCollectionIdentifier:];
}

id objc_msgSend_tipsViewController_loadMainUserGuideWithIdentifier_topicId_(void *a1, const char *a2, ...)
{
  return [a1 tipsViewController:loadMainUserGuideWithIdentifier:topicId:];
}

id objc_msgSend_tipsViewController_showSharedTipWithTipIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tipsViewController:showSharedTipWithTipIdentifier:");
}

id objc_msgSend_tipsViewControllerContentUpdated_(void *a1, const char *a2, ...)
{
  return [a1 tipsViewControllerContentUpdated:];
}

id objc_msgSend_tipsViewControllerCurrentTipUpdated_(void *a1, const char *a2, ...)
{
  return [a1 tipsViewControllerCurrentTipUpdated:];
}

id objc_msgSend_tipsViewControllerShouldShowSearch_(void *a1, const char *a2, ...)
{
  return [a1 tipsViewControllerShouldShowSearch];
}

id objc_msgSend_tipsViewControllerShouldStartVideo_(void *a1, const char *a2, ...)
{
  return [a1 tipsViewControllerShouldStartVideo:];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_titleFont(void *a1, const char *a2, ...)
{
  return _[a1 titleFont];
}

id objc_msgSend_titleLabel(void *a1, const char *a2, ...)
{
  return _[a1 titleLabel];
}

id objc_msgSend_titleLabelCenterXConstraint(void *a1, const char *a2, ...)
{
  return _[a1 titleLabelCenterXConstraint];
}

id objc_msgSend_titleText(void *a1, const char *a2, ...)
{
  return _[a1 titleText];
}

id objc_msgSend_toggleSavedTipWithCorrelationId_tipIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 toggleSavedTipWithCorrelationId:tipIdentifier:];
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _[a1 topAnchor];
}

id objc_msgSend_topSafeAreaHeight(void *a1, const char *a2, ...)
{
  return _[a1 topSafeAreaHeight];
}

id objc_msgSend_topViewController(void *a1, const char *a2, ...)
{
  return _[a1 topViewController];
}

id objc_msgSend_topicId(void *a1, const char *a2, ...)
{
  return _[a1 topicId];
}

id objc_msgSend_topicIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 topicIdentifier];
}

id objc_msgSend_trackSession(void *a1, const char *a2, ...)
{
  return _[a1 trackSession];
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 trailingAnchor];
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _[a1 traitCollection];
}

id objc_msgSend_tryItViewController(void *a1, const char *a2, ...)
{
  return _[a1 tryItViewController];
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_unarchivedObjectOfClass_forKey_(void *a1, const char *a2, ...)
{
  return [a1 unarchivedObjectOfClass:forKey:];
}

id objc_msgSend_uniqueIdentifierForCurrentTip(void *a1, const char *a2, ...)
{
  return _[a1 uniqueIdentifierForCurrentTip];
}

id objc_msgSend_updateActionButton(void *a1, const char *a2, ...)
{
  return _[a1 updateActionButton];
}

id objc_msgSend_updateAppInBackground_(void *a1, const char *a2, ...)
{
  return [a1 updateAppInBackground:];
}

id objc_msgSend_updateAppShortcutSuggestions(void *a1, const char *a2, ...)
{
  return _[a1 updateAppShortcutSuggestions];
}

id objc_msgSend_updateAppearanceWithSize_(void *a1, const char *a2, ...)
{
  return [a1 updateAppearanceWithSize:];
}

id objc_msgSend_updateAssetIfAllowed(void *a1, const char *a2, ...)
{
  return _[a1 updateAssetIfAllowed];
}

id objc_msgSend_updateAssetViewBackground(void *a1, const char *a2, ...)
{
  return _[a1 updateAssetViewBackground];
}

id objc_msgSend_updateAssetsConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 updateAssetsConfiguration];
}

id objc_msgSend_updateAttributedString_forIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 updateAttributedString:forIdentifier:];
}

id objc_msgSend_updateAttributedStringWithCache(void *a1, const char *a2, ...)
{
  return _[a1 updateAttributedStringWithCache];
}

id objc_msgSend_updateBarAppearance(void *a1, const char *a2, ...)
{
  return _[a1 updateBarAppearance];
}

id objc_msgSend_updateBarButtonsForTip(void *a1, const char *a2, ...)
{
  return _[a1 updateBarButtonsForTip];
}

id objc_msgSend_updateCollectionListModelDynamicSections(void *a1, const char *a2, ...)
{
  return _[a1 updateCollectionListModelDynamicSections];
}

id objc_msgSend_updateContent(void *a1, const char *a2, ...)
{
  return _[a1 updateContent];
}

id objc_msgSend_updateContentBackgroundWithTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 updateContentBackgroundWithTraitCollection:];
}

id objc_msgSend_updateContentLabel(void *a1, const char *a2, ...)
{
  return _[a1 updateContentLabel];
}

id objc_msgSend_updateFonts(void *a1, const char *a2, ...)
{
  return _[a1 updateFonts];
}

id objc_msgSend_updateFootnoteAttributedString_forIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 updateFootnoteAttributedString:forIdentifier:];
}

id objc_msgSend_updateHeroHeightConstraint(void *a1, const char *a2, ...)
{
  return _[a1 updateHeroHeightConstraint];
}

id objc_msgSend_updateImageReadyStatus(void *a1, const char *a2, ...)
{
  return _[a1 updateImageReadyStatus];
}

id objc_msgSend_updateImageView(void *a1, const char *a2, ...)
{
  return _[a1 updateImageView];
}

id objc_msgSend_updateLayoutAttributesCache(void *a1, const char *a2, ...)
{
  return _[a1 updateLayoutAttributesCache];
}

id objc_msgSend_updateLoadingStatus(void *a1, const char *a2, ...)
{
  return _[a1 updateLoadingStatus];
}

id objc_msgSend_updateMediaSizeType(void *a1, const char *a2, ...)
{
  return _[a1 updateMediaSizeType];
}

id objc_msgSend_updateNavigationBarButtons(void *a1, const char *a2, ...)
{
  return _[a1 updateNavigationBarButtons];
}

id objc_msgSend_updateNavigationTitle_(void *a1, const char *a2, ...)
{
  return [a1 updateNavigationTitle:];
}

id objc_msgSend_updatePageControlToTip_(void *a1, const char *a2, ...)
{
  return [a1 updatePageControlToTip:];
}

id objc_msgSend_updatePagingScrollState(void *a1, const char *a2, ...)
{
  return _[a1 updatePagingScrollState];
}

id objc_msgSend_updateSavedTipsContent(void *a1, const char *a2, ...)
{
  return _[a1 updateSavedTipsContent];
}

id objc_msgSend_updateShortcutItems(void *a1, const char *a2, ...)
{
  return _[a1 updateShortcutItems];
}

id objc_msgSend_updateShouldHoldOffVideo(void *a1, const char *a2, ...)
{
  return _[a1 updateShouldHoldOffVideo];
}

id objc_msgSend_updateSupplementaryColumnForCollectionID_(void *a1, const char *a2, ...)
{
  return [a1 updateSupplementaryColumnForCollectionID:];
}

id objc_msgSend_updateTipForCell_startVideo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTipForCell:startVideo:");
}

id objc_msgSend_updateTips(void *a1, const char *a2, ...)
{
  return _[a1 updateTips];
}

id objc_msgSend_updateTipsForCurrentCollection(void *a1, const char *a2, ...)
{
  return _[a1 updateTipsForCurrentCollection];
}

id objc_msgSend_updateTitleTextForCollection_(void *a1, const char *a2, ...)
{
  return [a1 updateTitleTextForCollection:];
}

id objc_msgSend_updateVideoPath(void *a1, const char *a2, ...)
{
  return _[a1 updateVideoPath];
}

id objc_msgSend_updateViewCollapsed_(void *a1, const char *a2, ...)
{
  return [a1 updateViewCollapsed:];
}

id objc_msgSend_updateWithCollectionID_tipID_(void *a1, const char *a2, ...)
{
  return [a1 updateWithCollectionID:tipID:];
}

id objc_msgSend_updatingContent(void *a1, const char *a2, ...)
{
  return _[a1 updatingContent];
}

id objc_msgSend_userGuideDisplayed(void *a1, const char *a2, ...)
{
  return _[a1 userGuideDisplayed];
}

id objc_msgSend_userGuideWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 userGuideWithIdentifier:];
}

id objc_msgSend_userGuides(void *a1, const char *a2, ...)
{
  return _[a1 userGuides];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceIdiom];
}

id objc_msgSend_userInterfaceStyle(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceStyle];
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _[a1 value];
}

id objc_msgSend_version(void *a1, const char *a2, ...)
{
  return _[a1 version];
}

id objc_msgSend_videoHasFinished(void *a1, const char *a2, ...)
{
  return _[a1 videoHasFinished];
}

id objc_msgSend_videoLoadingFinished(void *a1, const char *a2, ...)
{
  return _[a1 videoLoadingFinished];
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _[a1 view];
}

id objc_msgSend_viewCollapsed(void *a1, const char *a2, ...)
{
  return _[a1 viewCollapsed];
}

id objc_msgSend_viewControllerForColumn_(void *a1, const char *a2, ...)
{
  return [a1 viewControllerForColumn:];
}

id objc_msgSend_viewControllers(void *a1, const char *a2, ...)
{
  return _[a1 viewControllers];
}

id objc_msgSend_viewCycleDelegate(void *a1, const char *a2, ...)
{
  return _[a1 viewCycleDelegate];
}

id objc_msgSend_viewMethod(void *a1, const char *a2, ...)
{
  return _[a1 viewMethod];
}

id objc_msgSend_viewModel(void *a1, const char *a2, ...)
{
  return _[a1 viewModel];
}

id objc_msgSend_viewNavigationCollapsed(void *a1, const char *a2, ...)
{
  return _[a1 viewNavigationCollapsed];
}

id objc_msgSend_viewWillAppear(void *a1, const char *a2, ...)
{
  return _[a1 viewWillAppear];
}

id objc_msgSend_visibleCells(void *a1, const char *a2, ...)
{
  return _[a1 visibleCells];
}

id objc_msgSend_webURLPath(void *a1, const char *a2, ...)
{
  return _[a1 webURLPath];
}

id objc_msgSend_webpageURL(void *a1, const char *a2, ...)
{
  return _[a1 webpageURL];
}

id objc_msgSend_whiteColor(void *a1, const char *a2, ...)
{
  return _[a1 whiteColor];
}

id objc_msgSend_widthAnchor(void *a1, const char *a2, ...)
{
  return _[a1 widthAnchor];
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _[a1 window];
}