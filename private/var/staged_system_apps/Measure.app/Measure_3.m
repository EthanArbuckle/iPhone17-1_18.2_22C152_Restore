void sub_1001C0184()
{
  uint64_t v0;
  id v1;
  void *v2;
  _OWORD v3[2];
  uint64_t v4;

  v3[0] = xmmword_100402B10;
  v3[1] = xmmword_100402B20;
  v4 = 0x4000000000000000;
  v1 = [self shutterButtonWithSpec:v3];
  v2 = *(void **)(v0 + qword_1004C7A68);
  *(void *)(v0 + qword_1004C7A68) = v1;
}

uint64_t sub_1001C01F4()
{
  [v0 bounds];
  double v2 = v1;
  if (qword_1004C2E78 != -1) {
    swift_once();
  }
  double v3 = *(double *)&qword_1004F8658;
  [v0 bounds];
  double Height = CGRectGetHeight(v14);
  if (qword_1004C2E70 != -1) {
    swift_once();
  }
  double v5 = (v2 - v3) * 0.5;
  double v6 = Height - *(double *)&qword_1004F8650;
  double v7 = *(double *)&qword_1004F8658;
  double v8 = v6 - *(double *)&qword_1004F8658 * 0.5;
  id v9 = objc_allocWithZone((Class)type metadata accessor for EditButton());
  v10 = sub_10008D480(2u, v5, v8, v7, v7);
  uint64_t v11 = *(void *)&v0[qword_1004C7A48];
  *(void *)&v0[qword_1004C7A48] = v10;

  return _objc_release_x1(v10, v11);
}

uint64_t sub_1001C032C()
{
  double v1 = sub_1001BFCFC();
  double v3 = v2;
  if (qword_1004C2E98 != -1) {
    swift_once();
  }
  double v4 = *(double *)&qword_1004F8678;
  id v5 = objc_allocWithZone((Class)type metadata accessor for UndoButton());
  sub_100203858(2, v1, v3, v4, v4);
  uint64_t v7 = *(void *)(v0 + qword_1004C7A50);
  *(void *)(v0 + qword_1004C7A50) = v6;

  return _objc_release_x1(v6, v7);
}

uint64_t sub_1001C03EC()
{
  double v1 = sub_10002F358();
  double v3 = v2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v0;
  id v5 = objc_allocWithZone((Class)type metadata accessor for HistoryButton());
  uint64_t v6 = v0;
  uint64_t v7 = sub_1000949E0(2, (uint64_t)sub_1001C11F0, v4, v1, v3, 80.0, 47.0);
  uint64_t v8 = *(void *)&v6[qword_1004C7A60];
  *(void *)&v6[qword_1004C7A60] = v7;

  return _objc_release_x1(v7, v8);
}

uint64_t sub_1001C04BC()
{
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  uint64_t v0 = *(void *)(v2 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0)
  {
    sub_100012894(&qword_1004CB958);
    sub_100108CC0();
    return Subject<>.send()();
  }
  return result;
}

void sub_1001C0544()
{
  void (*v2)(uint64_t *__return_ptr);
  char *v3;
  void *v4;
  uint64_t v5;

  double v1 = *(void **)(v0 + qword_1004C7A60);
  if (v1)
  {
    uint64_t v2 = *(void (**)(uint64_t *__return_ptr))(**(void **)(v0 + qword_1004D0768) + 144);
    swift_retain();
    double v3 = v1;
    v2(&v5);
    swift_release();
    uint64_t v4 = *(void **)&v3[OBJC_IVAR____TtC7Measure13HistoryButton_button];
    if (v4) {
      [v4 setEnabled:v5 > 0];
    }
  }
}

uint64_t sub_1001C0600()
{
  void (*v2)(uint64_t *__return_ptr, uint64_t);
  uint64_t v3;
  uint64_t result;
  uint64_t Strong;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void (*)(), uint64_t);
  uint64_t (*v11)(uint64_t *);
  void (*v12)(uint64_t *, void);
  uint64_t v13;
  uint64_t v14;
  char v15;

  uint64_t v1 = qword_1004D0768;
  uint64_t v2 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v0 + qword_1004D0768) + 144);
  double v3 = swift_retain();
  v2(&v14, v3);
  uint64_t result = swift_release();
  if (v15 == 1)
  {
    Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v6 = Strong;
      uint64_t v7 = *(uint64_t (**)(uint64_t))(**(void **)(Strong + 80) + 200);
      uint64_t v8 = swift_retain();
      id v9 = v7(v8);
      swift_release();
      v10 = *(void (**)(void (*)(), uint64_t))(*(void *)v9 + 280);
      swift_retain();
      v10(sub_10009384C, v6);
      swift_release();
      swift_release_n();
    }
    uint64_t v11 = *(uint64_t (**)(uint64_t *))(**(void **)(v0 + v1) + 400);
    swift_retain();
    v12 = (void (*)(uint64_t *, void))v11(&v14);
    *(unsigned char *)(v13 + 8) = 0;
    v12(&v14, 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001C07BC()
{
  uint64_t v9 = v0;
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  uint64_t v8 = v0;
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  uint64_t v7 = v0;
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + qword_1004D0768) + 200);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  uint64_t v6 = v0;
  (*(void (**)(uint64_t (*)(), unsigned char *))(*(void *)v3 + 296))(sub_1001C1188, v5);
  swift_release();
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  swift_retain();
  StateValue.ifUpdated(_:)();
  return swift_release();
}

void sub_1001C09BC(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t *__return_ptr);
  char *v4;
  void *v5;
  uint64_t v6;

  uint64_t v2 = *(void **)(a2 + qword_1004C7A60);
  if (v2)
  {
    uint64_t v3 = *(void (**)(uint64_t *__return_ptr))(**(void **)(a2 + qword_1004D0768) + 144);
    swift_retain();
    uint64_t v4 = v2;
    v3(&v6);
    swift_release();
    id v5 = *(void **)&v4[OBJC_IVAR____TtC7Measure13HistoryButton_button];
    if (v5) {
      [v5 setEnabled:v6 > 0];
    }
  }
}

id sub_1001C0A78(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = qword_1004D0768;
  sub_100012894(&qword_1004CB968);
  swift_getKeyPath();
  type metadata accessor for EditViewSpatial();
  uint64_t v11 = v4;
  *(void *)&v4[v10] = MutableStateBinding.__allocating_init(_:_:)();
  uint64_t v12 = qword_1004D0770;
  uint64_t v13 = sub_100012894(&qword_1004C5908);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_1004F8630;
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 272);
  swift_retain();
  *(void *)&v11[v12] = v16(KeyPath, v15);
  uint64_t v17 = qword_1004D0778;
  uint64_t v18 = sub_100012894(&qword_1004C6AA0);
  uint64_t v19 = swift_getKeyPath();
  uint64_t v20 = qword_1004F8630;
  v21 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 272);
  swift_retain();
  *(void *)&v11[v17] = v21(v19, v20);
  uint64_t v22 = qword_1004D0780;
  uint64_t v23 = sub_100012894(&qword_1004CB970);
  uint64_t v24 = swift_getKeyPath();
  uint64_t v25 = qword_1004F8630;
  v26 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 272);
  swift_retain();
  *(void *)&v11[v22] = v26(v24, v25);
  uint64_t v27 = qword_1004D0788;
  uint64_t v28 = sub_100012894(&qword_1004CB978);
  uint64_t v29 = swift_getKeyPath();
  uint64_t v30 = qword_1004F8630;
  v31 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 272);
  swift_retain();
  *(void *)&v11[v27] = v31(v29, v30);
  uint64_t v32 = qword_1004D0790;
  sub_100012894(&qword_1004CB958);
  swift_allocObject();
  *(void *)&v11[v32] = PassthroughSubject.init()();

  v34.receiver = v11;
  v34.super_class = ObjectType;
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_1001C0D10(double a1, double a2, double a3, double a4)
{
  return sub_1001C0A78(a1, a2, a3, a4);
}

id sub_1001C0D34(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = qword_1004D0768;
  sub_100012894(&qword_1004CB968);
  swift_getKeyPath();
  type metadata accessor for EditViewSpatial();
  id v5 = v1;
  *(void *)&v1[v4] = MutableStateBinding.__allocating_init(_:_:)();
  uint64_t v6 = qword_1004D0770;
  uint64_t v7 = sub_100012894(&qword_1004C5908);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1004F8630;
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 272);
  swift_retain();
  *(void *)&v5[v6] = v10(KeyPath, v9);
  uint64_t v11 = qword_1004D0778;
  uint64_t v12 = sub_100012894(&qword_1004C6AA0);
  uint64_t v13 = swift_getKeyPath();
  uint64_t v14 = qword_1004F8630;
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 272);
  swift_retain();
  *(void *)&v5[v11] = v15(v13, v14);
  uint64_t v16 = qword_1004D0780;
  uint64_t v17 = sub_100012894(&qword_1004CB970);
  uint64_t v18 = swift_getKeyPath();
  uint64_t v19 = qword_1004F8630;
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 272);
  swift_retain();
  *(void *)&v5[v16] = v20(v18, v19);
  uint64_t v21 = qword_1004D0788;
  uint64_t v22 = sub_100012894(&qword_1004CB978);
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = qword_1004F8630;
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 272);
  swift_retain();
  *(void *)&v5[v21] = v25(v23, v24);
  uint64_t v26 = qword_1004D0790;
  sub_100012894(&qword_1004CB958);
  swift_allocObject();
  *(void *)&v5[v26] = PassthroughSubject.init()();

  v29.receiver = v5;
  v29.super_class = ObjectType;
  [super initWithCoder:a1];

  return v27;
}

id sub_1001C0FB0(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1001C0D34(a3);
}

uint64_t sub_1001C0FD8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1001C1058()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t type metadata accessor for EditViewCompactSpatial()
{
  uint64_t result = qword_1004D07C0;
  if (!qword_1004D07C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001C1130()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1001C1180()
{
  return type metadata accessor for EditViewCompactSpatial();
}

uint64_t sub_1001C1188()
{
  return sub_1001C0600();
}

void sub_1001C11B0(uint64_t a1)
{
  sub_1001C09BC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1001C11B8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001C11F0()
{
  return sub_1001C04BC();
}

uint64_t sub_1001C11F8()
{
  return _swift_deallocObject(v0, 200, 7);
}

void sub_1001C1230()
{
  sub_1001BFEB8(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), *(double *)(v0 + 152), *(double *)(v0 + 160), *(double *)(v0 + 168), *(double *)(v0 + 176), *(double *)(v0 + 184), *(double *)(v0 + 192));
}

uint64_t sub_1001C1248(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001C1258()
{
  return swift_release();
}

id sub_1001C1274(char a1)
{
  void (*v5)(void *__return_ptr, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id result;
  uint64_t (*v12)(void *);
  void (*v13)(void *, void);
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *);
  id v17;
  void (*v18)(void *, void);
  void *v19;
  id v20;
  void v21[4];
  Swift::Int v22;

  uint64_t v2 = v1;
  uint64_t v4 = qword_1004D0C48;
  id v5 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)&v1[qword_1004D0C48] + 144);
  uint64_t v6 = swift_retain();
  v5(v21, v6);
  swift_release();
  uint64_t v7 = v21[0];
  uint64_t v8 = *(void *)&v2[qword_1004D0BC8];
  uint64_t v9 = *(void *)&v2[qword_1004D0BC8 + 8];
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1001C183C(v8, v9, v7);
  swift_bridgeObjectRelease();
  uint64_t result = (id)swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
    uint64_t v12 = *(uint64_t (**)(void *))(**(void **)&v2[v4] + 400);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v13 = (void (*)(void *, void))v12(v21);
    sub_1001C7A6C(&v22, v8, v9);
    swift_bridgeObjectRelease();
    v13(v21, 0);
    uint64_t result = (id)swift_release();
  }
  uint64_t v14 = qword_1004D0BD0;
  uint64_t v15 = *(void *)&v2[qword_1004D0BD0];
  if (v15)
  {
    uint64_t v16 = *(uint64_t (**)(void *))(**(void **)&v2[qword_1004D0C50] + 400);
    uint64_t v17 = *(id *)(v15 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
    swift_retain();
    uint64_t v18 = (void (*)(void *, void))v16(v21);
    swift_unknownObjectWeakAssign();

    v18(v21, 0);
    uint64_t result = (id)swift_release();
    uint64_t v19 = *(void **)&v2[v14];
    if (v19)
    {
      uint64_t v20 = v19;
      sub_1001B769C(a1, 0, 1);

      return [v2 layoutIfNeeded];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001C14AC(char a1)
{
  void (*v5)(void *__return_ptr, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t (*v11)(void *);
  void (*v12)(void *, void);
  void *Strong;
  void (*v14)(void *__return_ptr, uint64_t);
  uint64_t v15;
  uint64_t (*v16)(void *);
  void (*v17)(void *, void);
  void v19[4];
  Swift::Int v20;

  uint64_t v2 = v1;
  uint64_t v4 = qword_1004D0C48;
  id v5 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v1 + qword_1004D0C48) + 144);
  uint64_t v6 = swift_retain();
  v5(v19, v6);
  swift_release();
  uint64_t v7 = v19[0];
  uint64_t v8 = *(void *)(v2 + qword_1004D0BC8);
  uint64_t v9 = *(void *)(v2 + qword_1004D0BC8 + 8);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1001C183C(v8, v9, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
    uint64_t v11 = *(uint64_t (**)(void *))(**(void **)(v2 + v4) + 400);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v12 = (void (*)(void *, void))v11(v19);
    sub_1001C7A6C(&v20, v8, v9);
    swift_bridgeObjectRelease();
    v12(v19, 0);
    swift_release();
  }
  if (a1)
  {
    Strong = 0;
  }
  else
  {
    uint64_t v14 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v2 + qword_1004D0C50) + 144);
    uint64_t v15 = swift_retain();
    v14(v19, v15);
    swift_release();
    Strong = (void *)swift_unknownObjectWeakLoadStrong();
    sub_1001BCCBC((uint64_t)v19);
  }
  uint64_t v16 = *(uint64_t (**)(void *))(**(void **)(v2 + qword_1004D0C50) + 400);
  swift_retain();
  uint64_t v17 = (void (*)(void *, void))v16(v19);
  swift_unknownObjectWeakAssign();

  v17(v19, 0);
  return swift_release();
}

uint64_t sub_1001C16E4()
{
  void (*v3)(void *__return_ptr, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  uint64_t (*v10)(void *);
  void (*v11)(void *, void);
  void v12[4];

  uint64_t v1 = v0;
  uint64_t v2 = qword_1004D0C48;
  uint64_t v3 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v0 + qword_1004D0C48) + 144);
  uint64_t v4 = swift_retain();
  v3(v12, v4);
  swift_release();
  id v5 = v12[0];
  uint64_t v7 = *(void *)(v1 + qword_1004D0BC8);
  uint64_t v6 = *(void *)(v1 + qword_1004D0BC8 + 8);
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1001C183C(v7, v6, v5);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v8)
  {
    uint64_t v10 = *(uint64_t (**)(void *))(**(void **)(v1 + v2) + 400);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v11 = (void (*)(void *, void))v10(v12);
    sub_1001C84FC(v7, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11(v12, 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001C183C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

void sub_1001C1974()
{
  qword_1004D0BC0 = 0x406E000000000000;
}

void sub_1001C1984(uint64_t a1, uint64_t a2, int a3, char *a4, void *a5, uint64_t a6, void *a7, void *a8, double a9, double a10, double a11, double a12)
{
  uint64_t v13 = v12;
  v85 = a7;
  v86 = a8;
  uint64_t v77 = a2;
  uint64_t v78 = a6;
  v84 = a5;
  v81 = a4;
  int v83 = a3;
  uint64_t v76 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v73 = sub_100012894((uint64_t *)&unk_1004D0EB8);
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  v71 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = qword_1004D0BD0;
  *(void *)&v12[qword_1004D0BD0] = 0;
  uint64_t v19 = &v12[qword_1004D0BD8];
  *((void *)v19 + 1) = 0;
  v75 = v19;
  swift_unknownObjectWeakInit();
  *(void *)&v12[qword_1004D0BE0 + 8] = 0;
  swift_unknownObjectWeakInit();
  v12[qword_1004D0BE8] = 0;
  v74 = &v12[qword_1004D0BF8];
  swift_unknownObjectWeakInit();
  v79 = &v12[qword_1004D0C00];
  swift_unknownObjectWeakInit();
  *(void *)&v12[qword_1004D0C08] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v12[qword_1004D0C20] = 0;
  uint64_t v20 = qword_1004D0C28;
  uint64_t v21 = sub_100012894(&qword_1004CE600);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = qword_1004C2E30;
  uint64_t v24 = v13;
  if (v23 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_1004F8630;
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 272);
  swift_retain();
  *(void *)&v13[v20] = v26(KeyPath, v25);
  uint64_t v27 = qword_1004D0C30;
  sub_100012894(&qword_1004D0EC8);
  swift_getKeyPath();
  uint64_t v28 = (objc_class *)ObjectType;
  *(void *)&v24[v27] = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v29 = qword_1004D0C38;
  uint64_t v30 = sub_100012894((uint64_t *)&unk_1004C7F20);
  uint64_t v31 = swift_getKeyPath();
  uint64_t v32 = qword_1004F8630;
  v33 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 272);
  swift_retain();
  *(void *)&v24[v29] = v33(v31, v32);
  uint64_t v34 = qword_1004D0C40;
  uint64_t v35 = sub_100012894(&qword_1004C6AA0);
  uint64_t v36 = swift_getKeyPath();
  uint64_t v37 = qword_1004F8630;
  v38 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 272);
  swift_retain();
  *(void *)&v24[v34] = v38(v36, v37);
  uint64_t v39 = qword_1004D0C48;
  sub_100012894((uint64_t *)&unk_1004D0ED0);
  swift_getKeyPath();
  *(void *)&v24[v39] = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v40 = qword_1004D0C50;
  sub_100012894(&qword_1004CE630);
  swift_getKeyPath();
  *(void *)&v24[v40] = MutableStateValue.__allocating_init(_:_:)();
  *(void *)&v24[qword_1004D0C58] = 0;
  v24[qword_1004D0C60] = 0;
  swift_unknownObjectWeakInit();
  v24[qword_1004D0C70] = 1;
  v41 = (double *)&v24[qword_1004D0BF0];
  double *v41 = a9;
  v41[1] = a10;
  v41[2] = a11;
  v41[3] = a12;
  v42 = &v24[qword_1004D0BC8];
  uint64_t v43 = v77;
  *(void *)v42 = v76;
  *((void *)v42 + 1) = v43;
  v44 = v85;
  swift_unknownObjectWeakAssign();
  *((void *)v75 + 1) = v78;
  v45 = v84;
  swift_unknownObjectWeakAssign();
  v46 = v81;
  v47 = *(void **)(*(void *)&v81[OBJC_IVAR____TtC7Measure17CardContainerView_titleView]
                 + OBJC_IVAR____TtC7Measure13CardTitleView_editableTitleView);
  v48 = self;
  id v49 = v47;
  id v50 = [v48 mainBundle];
  v88._object = (void *)0xE000000000000000;
  v51._object = (void *)0x80000001004250B0;
  v51._countAndFlagsBits = 0xD00000000000001DLL;
  v52._countAndFlagsBits = 0;
  v52._object = (void *)0xE000000000000000;
  v88._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v51, (Swift::String_optional)0, (NSBundle)v50, v52, v88);

  NSString v53 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v49 setPlaceholder:v53];

  id v54 = objc_allocWithZone((Class)type metadata accessor for CardContainerController());
  id v55 = v46;
  v56 = sub_1001B8458(v55);
  v57 = *(void **)&v13[v80];
  *(void *)&v13[v80] = v56;

  v58 = v86;
  swift_unknownObjectWeakAssign();

  v87.receiver = v24;
  v87.super_class = v28;
  v59 = [super initWithFrame:a9, a10, a11, a12];
  sub_1001C20EC(v83 & 1);
  sub_1001C27BC();
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if (static UIDevice.isIPhone()())
  {
    uint64_t v60 = *(void *)&v59[qword_1004D0BD0];
    if (!v60) {
      goto LABEL_11;
    }
    v61 = *(void **)(v60 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
    v62 = v59;
    id v63 = v61;
    sub_100198B58(v62);
  }
  v64 = *(void **)&v59[qword_1004D0BD0];
  if (v64)
  {
    swift_beginAccess();
    id v65 = v64;
    sub_100012894(&qword_1004D01E8);
    v66 = v71;
    Published.projectedValue.getter();
    swift_endAccess();

    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_10002179C((unint64_t *)&unk_1004D0EE0, (uint64_t *)&unk_1004D0EB8);
    uint64_t v67 = v73;
    uint64_t v68 = Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v66, v67);
    *(void *)&v59[qword_1004D0C58] = v68;
    swift_release();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      v70 = (void *)Strong;

      swift_unknownObjectWeakInit();
      swift_unknownObjectWeakDestroy();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_11:
  __break(1u);
}

void sub_1001C20EC(char a1)
{
  uint64_t v2 = qword_1004D0BD0;
  uint64_t v3 = *(void *)&v1[qword_1004D0BD0];
  if (!v3)
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v4 = v1;
  [v1 addSubview:*(void *)(v3 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)];
  uint64_t v6 = *(void *)&v1[v2];
  if (!v6)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v7 = *(void **)(*(void *)(*(void *)(v6 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                            + OBJC_IVAR____TtC7Measure17CardContainerView_titleView)
                + OBJC_IVAR____TtC7Measure13CardTitleView_title);
  unint64_t v8 = &v1[qword_1004D0BD8];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v10 = (void *)Strong;
  v46 = v8;
  uint64_t v11 = *((void *)v8 + 1);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v11 + 64);
  id v14 = v7;
  v13(ObjectType, v11);

  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 setText:v15];

  uint64_t v16 = *(void *)&v4[v2];
  if (!v16)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  [*(id *)(*(void *)(*(void *)(v16 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_titleView)+ OBJC_IVAR____TtC7Measure13CardTitleView_rightItem) addTarget:v4 action:"closePlatter" forControlEvents:64];
  uint64_t v17 = *(void *)&v4[v2];
  if (!v17)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  [*(id *)(*(void *)(v17 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_copyCustomButton) addTarget:v4 action:"copyToPasteboard" forControlEvents:64];
  uint64_t v18 = *(void *)&v4[v2];
  if (!v18)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  [*(id *)(*(void *)(*(void *)(v18 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_titleView)+ OBJC_IVAR____TtC7Measure13CardTitleView_leftItem) addTarget:v4 action:"presentShareSheet" forControlEvents:64];
  if (a1)
  {
    id v19 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v4 action:"beginEditingTitleWithSender:"];
    uint64_t v20 = *(void *)&v4[v2];
    if (!v20)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    uint64_t v21 = v19;
    [*(id *)(*(void *)(*(void *)(v20 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_titleView)+ OBJC_IVAR____TtC7Measure13CardTitleView_title) addGestureRecognizer:v19];
    swift_unknownObjectWeakAssign();
  }
  uint64_t v22 = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v23 = &selRef_replaySensorDidFinishReplayingData;
  if (!v22)
  {
    if (*(void *)&v4[v2])
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain_n();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.setter();
      goto LABEL_25;
    }
LABEL_36:
    __break(1u);
    return;
  }
  uint64_t v24 = v22;
  [v22 setDataSource:v4];
  [v24 setDelegate:v4];
  [v24 setRowHeight:UITableViewAutomaticDimension];
  [v24 setEstimatedRowHeight:88.0];
  [v24 setScrollEnabled:0];
  [v24 setSeparatorInset:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  uint64_t v25 = self;
  id v26 = v24;
  id v27 = [v25 clearColor];
  [v26 setBackgroundColor:v27];

  type metadata accessor for DetailedPlatterCellTableViewCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v29 = String._bridgeToObjectiveC()();
  [v26 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v29];

  if (qword_1004C2848 != -1) {
    swift_once();
  }
  double v30 = *(double *)&qword_1004F7E78;
  [v4 bounds:v46];
  id v31 = [objc_allocWithZone((Class)UIView) initWithFrame:v30, 0.0, CGRectGetWidth(v48) - (v30 + v30), 0.5];
  if (qword_1004C31D0 != -1) {
    swift_once();
  }
  uint64_t v32 = (void *)qword_1004F8A68;
  id v33 = qword_1004F8A70;
  if (byte_1004F8A78)
  {
    char v34 = byte_1004F8A88;
    uint64_t v35 = qword_1004F8A80;
    char v36 = byte_1004D2600;
    id v37 = (id)qword_1004F8A68;
    LOBYTE(v37) = v36;
    uint64_t v23 = &selRef_replaySensorDidFinishReplayingData;
    id v38 = sub_100081B28((char)v37, v35, v34);
    sub_1000286C0(v32, v33, 1);
  }
  else
  {
    if (byte_1004D2600) {
      id v39 = qword_1004F8A70;
    }
    else {
      id v39 = (id)qword_1004F8A68;
    }
    id v38 = v39;
  }
  [v31 setBackgroundColor:v38];

  [v26 addSubview:v31];
  uint64_t v40 = *(void *)&v4[v2];
  if (!v40)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v41 = *(void **)(v40 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
  v42 = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v43 = *(void *)(v47 + 8);
  v44 = v41;

  *(void *)&v44[OBJC_IVAR____TtC7Measure17CardContainerView_internalSpatialPlatter + 8] = v43;
  swift_unknownObjectWeakAssign();

LABEL_25:
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if ((static UIDevice.isIPad()() & 1) == 0)
  {
    id v45 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v4 action:"closePlatter"];
    [v45 v23[269] v4];
    [v4 addGestureRecognizer:v45];
  }
}

void sub_1001C27BC()
{
  uint64_t v1 = v0;
  if (qword_1004C2800 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1004D0BD0;
  uint64_t v3 = *(void **)&v0[qword_1004D0BD0];
  if (!v3)
  {
    __break(1u);
    goto LABEL_24;
  }
  double v4 = *(double *)&qword_1004F7E18;
  id v5 = v3;
  sub_1001B737C(v1);

  uint64_t v6 = *(void *)&v1[v2];
  if (!v6)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  [*(id *)(v6 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView) setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v7 = *(void *)&v1[v2];
  if (!v7)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v7
                                                             + OBJC_IVAR____TtC7Measure23CardContainerController_containerView), "bottomAnchor"));
  id v9 = [v1 bottomAnchor];
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  char v10 = static UIDevice.isIPhone()();
  double v11 = -v4;
  if (v10) {
    double v11 = 0.0;
  }
  id v12 = [v8 constraintEqualToAnchor:v9 constant:v11];

  uint64_t v13 = qword_1004D0C08;
  id v14 = *(void **)&v1[qword_1004D0C08];
  *(void *)&v1[qword_1004D0C08] = v12;

  uint64_t v16 = *(void **)&v1[v13];
  if (!v16) {
    goto LABEL_26;
  }
  LODWORD(v15) = 1148846080;
  [v16 setPriority:v15];
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1003FD540;
  uint64_t v18 = *(void **)&v1[v13];
  if (!v18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v19 = v17;
  *(void *)(v17 + 32) = v18;
  uint64_t v20 = *(void *)&v1[v2];
  if (!v20)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v21 = *(void **)(v20 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
  id v22 = v18;
  id v23 = [v21 leftAnchor];
  id v24 = [v1 leftAnchor];
  char v25 = static UIDevice.isIPhone()();
  double v26 = 0.0;
  if ((v25 & 1) == 0) {
    double v26 = v4;
  }
  id v27 = [v23 constraintEqualToAnchor:v24 constant:v26];

  *(void *)(v19 + 40) = v27;
  char v28 = static UIDevice.isIPhone()();
  uint64_t v29 = *(void *)&v1[v2];
  if ((v28 & 1) == 0)
  {
    if (v29)
    {
      id v31 = [*(id *)(v29 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView) widthAnchor];
      if (qword_1004C27E0 != -1) {
        swift_once();
      }
      id v32 = [v31 constraintEqualToConstant:*(double *)&qword_1004F7DF8];
      goto LABEL_20;
    }
LABEL_30:
    __break(1u);
    return;
  }
  if (!v29)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  id v30 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v29
                                                              + OBJC_IVAR____TtC7Measure23CardContainerController_containerView), "widthAnchor"));
  id v31 = [v1 widthAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

LABEL_20:
  id v33 = self;
  *(void *)(v19 + 48) = v32;
  specialized Array._endMutation()();
  sub_10001C99C(0, (unint64_t *)&qword_1004CE690);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v33 activateConstraints:isa];
}

void sub_1001C2B8C(unsigned __int8 *a1)
{
  unsigned __int8 v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_1001C2BE8(v1);
  }
}

uint64_t sub_1001C2BE8(unsigned __int8 a1)
{
  unsigned int v2 = a1;
  BOOL v3 = a1 < 2u;
  double v4 = *(uint64_t (**)(unsigned char *))(**(void **)(v1 + qword_1004D0C30) + 400);
  swift_retain();
  id v5 = (void (*)(unsigned char *, void))v4(v11);
  *(unsigned char *)(v6 + 1) = v3;
  v5(v11, 0);
  uint64_t result = swift_release();
  if (v2 >= 2)
  {
    uint64_t v8 = v1 + qword_1004D0BE0;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v9 = *(void *)(v8 + 8);
      sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
      if (static UIDevice.isIPhone()())
      {
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v9 + 48))(ObjectType, v9);
      }
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1001C2D18()
{
  swift_bridgeObjectRelease();

  sub_10001FE1C(v0 + qword_1004D0BD8);
  sub_10001FE1C(v0 + qword_1004D0BE0);
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();

  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_unknownObjectWeakDestroy();
}

id sub_1001C2E4C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1001C2E94();
  v3.receiver = v0;
  v3.super_class = ObjectType;
  [super dealloc];
}

void sub_1001C2E94()
{
  uint64_t v1 = v0;
  unsigned int v2 = self;
  id v3 = [v2 defaultCenter];
  [v3 removeObserver:v1 name:UIKeyboardWillShowNotification object:0];

  id v4 = [v2 defaultCenter];
  [v4 removeObserver:v1 name:UIKeyboardWillHideNotification object:0];

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    [Strong removeTarget:v1 action:"dismissKeyboard:"];
    [v1 removeGestureRecognizer:v6];
  }
  swift_unknownObjectWeakAssign();
  uint64_t v7 = *(uint64_t (**)(unsigned char *))(**(void **)&v1[qword_1004D0C30] + 400);
  swift_retain();
  uint64_t v8 = (void (*)(unsigned char *, void))v7(v22);
  *uint64_t v9 = 0;
  v8(v22, 0);
  swift_release();
  uint64_t v10 = qword_1004D0BD0;
  uint64_t v11 = *(void *)&v1[qword_1004D0BD0];
  if (!v11)
  {
    __break(1u);
    goto LABEL_15;
  }
  *(unsigned char *)(v11 + OBJC_IVAR____TtC7Measure23CardContainerController_isDraggingEnabled) = 1;
  v1[qword_1004D0C20] = 0;
  uint64_t v12 = *(void *)&v1[v10];
  if (!v12)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  [*(id *)(*(void *)(*(void *)(v12 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_titleView)+ OBJC_IVAR____TtC7Measure13CardTitleView_editableTitleView) setDelegate:0];
  uint64_t v13 = *(void *)&v1[v10];
  if (!v13)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  [*(id *)(*(void *)(*(void *)(v13 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_titleView)+ OBJC_IVAR____TtC7Measure13CardTitleView_rightItem) removeTarget:v1 action:"closePlatter" forControlEvents:64];
  uint64_t v14 = *(void *)&v1[v10];
  if (!v14)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  [*(id *)(*(void *)(v14 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_copyCustomButton) removeTarget:v1 action:"copyToPasteboard" forControlEvents:64];
  uint64_t v15 = *(void *)&v1[v10];
  if (!v15)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  [*(id *)(*(void *)(*(void *)(v15 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_titleView)+ OBJC_IVAR____TtC7Measure13CardTitleView_leftItem) removeTarget:v1 action:"presentShareSheet" forControlEvents:64];
  uint64_t v16 = swift_unknownObjectWeakLoadStrong();
  if (v16)
  {
    uint64_t v17 = *(void *)&v1[v10];
    if (v17)
    {
      uint64_t v18 = (void *)v16;
      [*(id *)(*(void *)(*(void *)(v17 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_titleView)+ OBJC_IVAR____TtC7Measure13CardTitleView_title) removeGestureRecognizer:v16];

      goto LABEL_11;
    }
LABEL_19:
    __break(1u);
    return;
  }
LABEL_11:
  uint64_t v19 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v19)
  {
    uint64_t v20 = v19;
    [v19 setDelegate:0];
    [v20 setDataSource:0];
  }
  uint64_t v21 = *(void **)&v1[v10];
  *(void *)&v1[v10] = 0;
}

id sub_1001C320C(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v3 = a1;
  sub_1001C2E94();
  v5.receiver = v3;
  v5.super_class = ObjectType;
  return [super dealloc];
}

uint64_t sub_1001C3264(uint64_t a1)
{
  swift_bridgeObjectRelease();

  sub_10001FE1C(a1 + qword_1004D0BD8);
  sub_10001FE1C(a1 + qword_1004D0BE0);
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();

  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_unknownObjectWeakDestroy();
}

void sub_1001C33A4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1001C91CC();
}

void sub_1001C33CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + qword_1004D0BD8;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  id v4 = (void *)Strong;
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t ObjectType = swift_getObjectType();
  double v7 = (*(double (**)(uint64_t, uint64_t))(v5 + 88))(ObjectType, v5);

  if (v7 <= 0.0 || (*(unsigned char *)(v1 + qword_1004D0C60) & 1) != 0) {
    return;
  }
  if (qword_1004C2820 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1004D0BD0;
  uint64_t v9 = *(void *)(v1 + qword_1004D0BD0);
  if (!v9) {
    goto LABEL_29;
  }
  double v10 = *(double *)&qword_1004F7E38;
  uint64_t v11 = *(void **)(v9 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  uint64_t v12 = v11;
  if (static UIDevice.isIPhone()()) {
    uint64_t v13 = &OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView;
  }
  else {
    uint64_t v13 = &OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView;
  }
  [*(id *)&v12[*v13] bounds];
  double Height = CGRectGetHeight(v36);

  uint64_t v15 = *(void *)(v1 + v8);
  if (!v15) {
    goto LABEL_30;
  }
  double v16 = v10 + Height;
  id v17 = *(id *)(v15 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
  sub_10001D4A4((uint64_t)v17);
  double v19 = v18;

  double v20 = v16 + v19;
  double v21 = v7 + v16;
  if (v20 < v21)
  {
    uint64_t v22 = *(void *)(v1 + v8);
    if (!v22)
    {
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    *(unsigned char *)(*(void *)(v22 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
             + OBJC_IVAR____TtC7Measure17CardContainerView_shouldScrollviewBeAccountedByCardController) = 1;
    double v21 = v20;
  }
  if (!*(void *)(v1 + v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v35 != v21)
  {
    if (!*(void *)(v1 + v8))
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.setter();
    id v23 = *(void **)(v1 + v8);
    if (!v23)
    {
LABEL_35:
      __break(1u);
      return;
    }
    id v24 = v23;
    sub_1001B7844();
  }
  id v25 = [self currentTraitCollection];
  id v26 = [v25 preferredContentSizeCategory];

  LOBYTE(v25) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v25)
  {
    uint64_t v27 = swift_unknownObjectWeakLoadStrong();
    if (v27)
    {
      char v28 = (void *)v27;
      uint64_t v29 = *(void *)(v2 + 8);
      uint64_t v30 = swift_getObjectType();
      double v31 = (*(double (**)(uint64_t, uint64_t))(v29 + 96))(v30, v29);

      if (v31 > 0.0)
      {
        sub_1001C37E4(v1, v16, v20, v21);
        return;
      }
      goto LABEL_23;
    }
    goto LABEL_33;
  }
LABEL_23:
  id v32 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v32)
  {
    id v33 = v32;
    [v32 frame];
    if (v34 != 0.0) {
      sub_1001C37E4(v1, v16, v20, v21);
    }
  }
}

void sub_1001C378C(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  id v1 = v2.receiver;
  [super layoutSubviews];
  sub_1001C33CC();
}

void sub_1001C37E4(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t v8 = a1 + qword_1004D0BD8;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_15;
  }
  double v10 = (void *)Strong;
  uint64_t v11 = *(void *)(v8 + 8);
  uint64_t ObjectType = swift_getObjectType();
  double v13 = (*(double (**)(uint64_t, uint64_t))(v11 + 96))(ObjectType, v11);

  double v14 = v13 + a2;
  if (v14 > a3)
  {
    uint64_t v15 = *(void *)(a1 + qword_1004D0BD0);
    if (!v15)
    {
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    *(unsigned char *)(*(void *)(v15 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
             + OBJC_IVAR____TtC7Measure17CardContainerView_shouldScrollviewBeAccountedByCardController) = 1;
    double v14 = a3;
  }
  if (v14 == a4)
  {
    if (!*(void *)(a1 + qword_1004D0BD0))
    {
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    double v19 = v14 * 0.5;
    swift_retain();
    static Published.subscript.setter();
  }
  uint64_t v16 = qword_1004D0BD0;
  if (!*(void *)(a1 + qword_1004D0BD0))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v19 == v14)
  {
LABEL_13:
    *(unsigned char *)(a1 + qword_1004D0C60) = 1;
    return;
  }
  if (!*(void *)(a1 + v16)) {
    goto LABEL_18;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  id v17 = *(void **)(a1 + v16);
  if (v17)
  {
    id v18 = v17;
    sub_1001B7844();

    goto LABEL_13;
  }
LABEL_19:
  __break(1u);
}

void sub_1001C3A4C()
{
  id v1 = v0;
  uint64_t v2 = sub_100012894((uint64_t *)&unk_1004CE670);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for MeasurementHistoryItem();
  uint64_t v89 = *(void *)(v84 - 8);
  uint64_t v5 = *(void *)(v89 + 64);
  uint64_t v6 = __chkstk_darwin(v84);
  uint64_t v82 = (uint64_t)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v6);
  objc_super v87 = (char *)&v77 - v8;
  __chkstk_darwin(v7);
  double v10 = (char *)&v77 - v9;
  uint64_t v11 = type metadata accessor for MeasurementsHistory();
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  int v83 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  v86 = (char *)&v77 - v15;
  __chkstk_darwin(v14);
  id v17 = (uint64_t *)((char *)&v77 - v16);
  id v18 = self;
  id v19 = [v18 defaultCenter];
  [v19 removeObserver:v1 name:UIKeyboardWillShowNotification object:0];

  id v20 = [v18 defaultCenter];
  [v20 removeObserver:v1 name:UIKeyboardWillHideNotification object:0];

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v22 = Strong;
    [Strong removeTarget:v1 action:"dismissKeyboard:"];
    [v1 removeGestureRecognizer:v22];
  }
  swift_unknownObjectWeakAssign();
  id v23 = *(uint64_t (**)(uint64_t *))(**(void **)&v1[qword_1004D0C30] + 400);
  swift_retain();
  id v24 = (void (*)(uint64_t *, void))v23(v93);
  *id v25 = 0;
  v24(v93, 0);
  swift_release();
  uint64_t v26 = qword_1004D0BD0;
  uint64_t v27 = *(void *)&v1[qword_1004D0BD0];
  if (!v27) {
    goto LABEL_39;
  }
  *(unsigned char *)(v27 + OBJC_IVAR____TtC7Measure23CardContainerController_isDraggingEnabled) = 1;
  v1[qword_1004D0C20] = 0;
  uint64_t v85 = v26;
  uint64_t v28 = *(void *)&v1[v26];
  if (!v28)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v29 = *(char **)(v28 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
  uint64_t v30 = *(char **)&v29[OBJC_IVAR____TtC7Measure17CardContainerView_titleView];
  double v31 = *(void **)&v30[OBJC_IVAR____TtC7Measure13CardTitleView_editableTitleView];
  v92 = v29;
  id v32 = v30;
  id v33 = v31;
  id v34 = [v33 text];
  v81 = v10;
  if (v34)
  {
    double v35 = v34;
    if (static String._unconditionallyBridgeFromObjectiveC(_:)() || v36 != 0xE000000000000000)
    {
      id v37 = v33;
      id v38 = v4;
      char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v39 & 1) == 0)
      {
LABEL_16:
        id v43 = *(id *)&v32[OBJC_IVAR____TtC7Measure13CardTitleView_title];
        [v43 setText:v35];

        goto LABEL_17;
      }

      id v4 = v38;
      id v33 = v37;
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  id v40 = [v33 placeholder];
  if (!v40) {
    goto LABEL_18;
  }
  double v35 = v40;
  if (!static String._unconditionallyBridgeFromObjectiveC(_:)() && v41 == 0xE000000000000000)
  {

    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  id v37 = v33;
  id v38 = v4;
  char v42 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v42 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_17:

  id v4 = v38;
  id v33 = v37;
LABEL_18:
  id v90 = v33;
  v91 = v32;
  uint64_t v80 = v5;
  [v33 setDelegate:0];
  uint64_t v44 = qword_1004D0C28;
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  uint64_t v45 = *v17;
  swift_bridgeObjectRetain();
  sub_1000B9378((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for MeasurementsHistory);
  uint64_t v46 = *(void *)(v45 + 16);
  if (!v46)
  {
LABEL_26:
    swift_bridgeObjectRelease();
LABEL_35:
    uint64_t v73 = self;
    uint64_t v74 = swift_allocObject();
    *(void *)(v74 + 16) = v1;
    v93[4] = (uint64_t)sub_1001C8D14;
    v93[5] = v74;
    v93[0] = (uint64_t)_NSConcreteStackBlock;
    v93[1] = 1107296256;
    v93[2] = (uint64_t)sub_100049AB4;
    v93[3] = (uint64_t)&unk_1004928F8;
    v75 = _Block_copy(v93);
    uint64_t v76 = v1;
    swift_release();
    [v73 animateWithDuration:458754 delay:v75 options:0 animations:0.25 completion:0.0];
    _Block_release(v75);

    return;
  }
  Swift::String v88 = v4;
  unint64_t v47 = 0;
  uint64_t v48 = *(unsigned __int8 *)(v89 + 80);
  uint64_t v78 = ~v48;
  uint64_t v79 = v48;
  uint64_t v49 = (v48 + 32) & ~v48;
  uint64_t v51 = *(void *)&v1[qword_1004D0BC8];
  uint64_t v50 = *(void *)&v1[qword_1004D0BC8 + 8];
  uint64_t v52 = *(void *)(v89 + 72);
  while (1)
  {
    BOOL v53 = *(void *)(v45 + v49) == v51 && *(void *)(v45 + v49 + 8) == v50;
    if (v53 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      break;
    }
    ++v47;
    v49 += v52;
    if (v46 == v47) {
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v54 = *(void *)&v1[v85];
  if (v54)
  {
    id v55 = *(void **)(*(void *)(*(void *)(v54 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                               + OBJC_IVAR____TtC7Measure17CardContainerView_titleView)
                   + OBJC_IVAR____TtC7Measure13CardTitleView_title);
    swift_bridgeObjectRetain();
    id v56 = [v55 text];
    v58 = (uint64_t *)v86;
    uint64_t v57 = (uint64_t)v87;
    if (v56)
    {
      v59 = v56;
      uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v77 = v60;
    }
    else
    {
      swift_retain();
      StateValue.wrappedValue.getter();
      swift_release();
      uint64_t v61 = *v58;
      swift_bridgeObjectRetain();
      sub_1000B9378((uint64_t)v58, (uint64_t (*)(void))type metadata accessor for MeasurementsHistory);
      if (v47 >= *(void *)(v61 + 16))
      {
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      sub_1000297B8(v61 + v49, v57);
      swift_bridgeObjectRelease();
      uint64_t v62 = *(void *)(v57 + 24);
      uint64_t v85 = *(void *)(v57 + 16);
      uint64_t v77 = v62;
      swift_bridgeObjectRetain();
      sub_1000B9378(v57, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
    }
    uint64_t v89 = v44;
    swift_retain();
    StateValue.wrappedValue.getter();
    swift_release();
    uint64_t v63 = *v58;
    swift_bridgeObjectRetain();
    sub_1000B9378((uint64_t)v58, (uint64_t (*)(void))type metadata accessor for MeasurementsHistory);
    if (v47 >= *(void *)(v63 + 16))
    {
      __break(1u);
    }
    else
    {
      sub_1000297B8(v63 + v49, v57);
      swift_bridgeObjectRelease();
      uint64_t v64 = v57;
      id v65 = (int *)v84;
      sub_1000A30EC(v64 + *(int *)(v84 + 24), (uint64_t)v88);
      sub_1000B9378(v64, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
      swift_retain();
      v66 = (uint64_t *)v83;
      StateValue.wrappedValue.getter();
      swift_release();
      uint64_t v67 = *v66;
      swift_bridgeObjectRetain();
      sub_1000B9378((uint64_t)v66, (uint64_t (*)(void))type metadata accessor for MeasurementsHistory);
      if (v47 < *(void *)(v67 + 16))
      {
        uint64_t v68 = v82;
        sub_1000297B8(v67 + v49, v82);
        swift_bridgeObjectRelease();
        sub_100026A04(v68 + v65[7], (uint64_t)v93);
        sub_1001C8B04(v93);
        sub_1000B9378(v68, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
        v69 = v81;
        void *v81 = v51;
        v69[1] = v50;
        uint64_t v70 = v77;
        v69[2] = v85;
        v69[3] = v70;
        sub_1001C8D34((uint64_t)v88, (uint64_t)v69 + v65[6]);
        sub_100026A04((uint64_t)v93, (uint64_t)v69 + v65[7]);
        *((unsigned char *)v69 + v65[8]) = 1;
        sub_1000297B8((uint64_t)v69, v64);
        uint64_t v71 = (v79 + 24) & v78;
        uint64_t v72 = swift_allocObject();
        *(void *)(v72 + 16) = v47;
        sub_10009F928(v64, v72 + v71);
        swift_retain();
        StateValue.mutateImmediatelyNotifyAsync(_:)();
        swift_release();
        swift_release();
        sub_1000B9378((uint64_t)v69, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
        goto LABEL_35;
      }
    }
    __break(1u);
    goto LABEL_38;
  }
LABEL_41:
  __break(1u);
}

uint64_t sub_1001C4438(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)*a1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a1 = (uint64_t)v6;
  if (result)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = sub_100030BB0(v6);
  uint64_t v6 = (void *)result;
  *a1 = result;
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if (v6[2] <= a2)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v8 = type metadata accessor for MeasurementHistoryItem();
  uint64_t v11 = *(void *)(v8 - 8);
  sub_1000BE824(a3, (uint64_t)v6+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * a2);
  uint64_t v9 = (uint64_t)a1 + *(int *)(type metadata accessor for MeasurementsHistory() + 24);
  sub_10002B9C0(v9, (uint64_t *)&unk_1004D0EF0);
  sub_1000297B8(a3, v9);
  double v10 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56);

  return v10(v9, 0, 1, v8);
}

void sub_1001C4584(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + qword_1004D0BD0);
  if (v1)
  {
    uint64_t v2 = *(char **)(*(void *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                  + OBJC_IVAR____TtC7Measure17CardContainerView_titleView);
    uint64_t v3 = *(void **)&v2[OBJC_IVAR____TtC7Measure13CardTitleView_editableTitleView];
    id v4 = v2;
    [v3 setAlpha:0.0];
    [*(id *)&v4[OBJC_IVAR____TtC7Measure13CardTitleView_rightItem] setAlpha:1.0];
    [*(id *)&v4[OBJC_IVAR____TtC7Measure13CardTitleView_leftItem] setAlpha:1.0];
    [*(id *)&v4[OBJC_IVAR____TtC7Measure13CardTitleView_grabber] setAlpha:1.0];
    [*(id *)&v4[OBJC_IVAR____TtC7Measure13CardTitleView_title] setAlpha:1.0];
  }
  else
  {
    __break(1u);
  }
}

void sub_1001C4698(void *a1)
{
  void (*v4)(void *__return_ptr, uint64_t);
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  void *v14;
  char *v15;
  id v16;
  id v17;
  uint64_t (*v18)(void *);
  void (*v19)(void *, void);
  unsigned char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  char *v26;
  void aBlock[6];

  uint64_t v2 = v1;
  if ([a1 state] == (id)3)
  {
    uint64_t v3 = qword_1004D0C30;
    id v4 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)&v1[qword_1004D0C30] + 144);
    uint64_t v5 = swift_retain();
    v4(aBlock, v5);
    swift_release();
    if ((aBlock[0] & 0x10000) == 0)
    {
      uint64_t v6 = self;
      uint64_t v7 = [v6 defaultCenter];
      [v7 addObserver:v2 selector:"keyboardWillShowWithNotification:" name:UIKeyboardWillShowNotification object:0];

      uint64_t v8 = [v6 defaultCenter];
      [v8 addObserver:v2 selector:"keyboardWillHideWithNotification:" name:UIKeyboardWillHideNotification object:0];

      uint64_t v9 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v2 action:"dismissKeyboard:"];
      [v2 addGestureRecognizer:v9];
      swift_unknownObjectWeakAssign();
      double v10 = qword_1004D0BD0;
      uint64_t v11 = *(void *)&v2[qword_1004D0BD0];
      if (v11)
      {
        uint64_t v12 = *(char **)(v11 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
        uint64_t v13 = *(char **)&v12[OBJC_IVAR____TtC7Measure17CardContainerView_titleView];
        uint64_t v14 = *(void **)&v13[OBJC_IVAR____TtC7Measure13CardTitleView_editableTitleView];
        uint64_t v26 = v12;
        uint64_t v15 = v13;
        uint64_t v16 = v14;
        [v16 setDelegate:v2];
        [v16 setUserInteractionEnabled:1];
        id v17 = [*(id *)&v15[OBJC_IVAR____TtC7Measure13CardTitleView_title] text];
        [v16 setText:v17];

        [v16 becomeFirstResponder];
        id v18 = *(uint64_t (**)(void *))(**(void **)&v2[v3] + 400);
        swift_retain();
        id v19 = (void (*)(void *, void))v18(aBlock);
        *id v20 = 1;
        v19(aBlock, 0);
        swift_release();
        double v21 = *(void *)&v2[v10];
        if (v21)
        {
          *(unsigned char *)(v21 + OBJC_IVAR____TtC7Measure23CardContainerController_isDraggingEnabled) = 0;
          v2[qword_1004D0C20] = 1;
          uint64_t v22 = self;
          id v23 = swift_allocObject();
          *(void *)(v23 + 16) = v2;
          aBlock[4] = sub_1001C99BC;
          aBlock[5] = v23;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100049AB4;
          aBlock[3] = &unk_100492AB0;
          id v24 = _Block_copy(aBlock);
          id v25 = v2;
          swift_release();
          [v22 animateWithDuration:458754 delay:v24 options:0 animations:0.25 completion:0.0];
          _Block_release(v24);

          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
  }
}

void sub_1001C4A70(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + qword_1004D0BD0);
  if (v1)
  {
    uint64_t v2 = *(char **)(*(void *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                  + OBJC_IVAR____TtC7Measure17CardContainerView_titleView);
    uint64_t v3 = *(void **)&v2[OBJC_IVAR____TtC7Measure13CardTitleView_editableTitleView];
    id v4 = v2;
    [v3 setAlpha:1.0];
    [*(id *)&v4[OBJC_IVAR____TtC7Measure13CardTitleView_rightItem] setAlpha:0.0];
    [*(id *)&v4[OBJC_IVAR____TtC7Measure13CardTitleView_leftItem] setAlpha:0.0];
    [*(id *)&v4[OBJC_IVAR____TtC7Measure13CardTitleView_grabber] setAlpha:0.0];
    [*(id *)&v4[OBJC_IVAR____TtC7Measure13CardTitleView_title] setAlpha:0.0];
  }
  else
  {
    __break(1u);
  }
}

void sub_1001C4B84(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1001C4698(v4);
}

void sub_1001C4BEC(void *a1)
{
  uint64_t v2 = v1;
  id v3 = [a1 userInfo];
  if (!v3) {
    return;
  }
  id v4 = v3;
  uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  id v40 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v41 = v6;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v5 + 16) && (unint64_t v7 = sub_1000E23C4((uint64_t)&aBlock), (v8 & 1) != 0)) {
    sub_10005C070(*(void *)(v5 + 56) + 32 * v7, (uint64_t)&v38);
  }
  else {
    memset(&v38, 0, 32);
  }
  sub_1000E3CA0((uint64_t)&aBlock);
  if (!*(void *)&v38.d)
  {
    swift_bridgeObjectRelease();
    sub_10002B9C0((uint64_t)&v38, (uint64_t *)&unk_1004C7180);
    return;
  }
  sub_10001C99C(0, &qword_1004D0F08);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return;
  }
  id v9 = v40;
  [v40 CGRectValue];
  double v11 = v10;
  double v13 = v12;

  double v14 = sub_1001C94F8(v5);
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  v2[qword_1004D0BE8] = 0;
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if ((static UIDevice.isIPhone()() & 1) == 0)
  {
    uint64_t v27 = *(void **)&v2[qword_1004D0C08];
    if (v27)
    {
      uint64_t v28 = qword_1004C2800;
      id v29 = v27;
      if (v28 != -1) {
        swift_once();
      }
      [v29 setConstant:v13 + *(double *)&qword_1004F7E18, v38.a, v38.c];

      uint64_t v30 = *(void **)&v2[qword_1004D0BD0];
      if (v30)
      {
        id v31 = v30;
        sub_1001B8EC8();

        if (v14 <= 0.0) {
          uint64_t v32 = 458754;
        }
        else {
          uint64_t v32 = v16;
        }
        if (v14 <= 0.0) {
          double v33 = 0.25;
        }
        else {
          double v33 = v14;
        }
        id v34 = self;
        uint64_t v35 = swift_allocObject();
        *(void *)(v35 + 16) = v2;
        *(void *)&aBlock.tx = sub_1001C99E8;
        *(void *)&aBlock.ty = v35;
        *(void *)&aBlock.a = _NSConcreteStackBlock;
        *(void *)&aBlock.b = 1107296256;
        *(void *)&aBlock.c = sub_100049AB4;
        *(void *)&aBlock.d = &unk_100492A60;
        uint64_t v36 = _Block_copy(&aBlock);
        id v37 = v2;
        swift_release();
        [v34 animateWithDuration:v32 delay:v36 options:0 animations:v33 completion:0.0];
        _Block_release(v36);
        return;
      }
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      return;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v17 = qword_1004D0BD0;
  uint64_t v18 = *(void *)&v2[qword_1004D0BD0];
  if (!v18)
  {
    __break(1u);
    goto LABEL_30;
  }
  id v19 = *(char **)(v18 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);
  id v20 = *(void **)&v19[OBJC_IVAR____TtC7Measure17CardContainerView_draggableView];
  double v21 = v19;
  [v20 frame];
  [v21 convertPoint:0 toView:];
  double v23 = v22;

  if (qword_1004C2E50 != -1) {
    swift_once();
  }
  double v24 = v11 - (v23 + *(double *)&qword_1004D0BC0);
  if (v24 < 0.0)
  {
    uint64_t v25 = *(void *)&v2[v17];
    if (v25)
    {
      id v26 = objc_retain(*(id *)(*(void *)(v25 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                              + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView));
      [v26 transform];
      CGAffineTransformTranslate(&v38, &aBlock, 0.0, v24);
      CGAffineTransform aBlock = v38;
      [v26 setTransform:&aBlock];

      return;
    }
    goto LABEL_32;
  }
}

void sub_1001C5054(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1001C4BEC(v4);
}

void sub_1001C50BC(void *a1)
{
  uint64_t v2 = v1;
  if (v1[qword_1004D0BE8])
  {
    v1[qword_1004D0BE8] = 0;
    return;
  }
  if (v1[qword_1004D0C20] == 1)
  {
    id v3 = [a1 userInfo];
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
      if (static UIDevice.isIPhone()())
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = *(void *)&v2[qword_1004D0BD0];
        if (v6)
        {
          unint64_t v7 = *(void **)(*(void *)(v6 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                        + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView);
          uint64_t v26 = 0x3FF0000000000000;
          uint64_t v27 = 0;
          uint64_t v28 = 0;
          uint64_t v29 = 0x3FF0000000000000;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          [v7 setTransform:&v26];
          return;
        }
        __break(1u);
        goto LABEL_20;
      }
      uint64_t v8 = qword_1004D0C08;
      id v9 = *(void **)&v2[qword_1004D0C08];
      if (!v9)
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      [v9 constant];
      double v11 = *(void **)&v2[v8];
      if (!v11)
      {
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
      double v12 = v10;
      uint64_t v13 = qword_1004C2800;
      id v14 = v11;
      if (v13 != -1) {
        swift_once();
      }
      [v14 setConstant:-*(double *)&qword_1004F7E18];

      [v2 setNeedsLayout];
      [v2 layoutIfNeeded];
      uint64_t v15 = *(void **)&v2[qword_1004D0BD0];
      if (!v15) {
        goto LABEL_22;
      }
      id v16 = v15;
      sub_1001B8FDC();

      uint64_t v17 = *(void **)&v2[v8];
      if (!v17)
      {
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      [v17 setConstant:v12];
      [v2 setNeedsLayout];
      [v2 layoutIfNeeded];
      uint64_t v18 = *(void **)&v2[v8];
      if (!v18)
      {
LABEL_24:
        __break(1u);
        return;
      }
      [v18 setConstant:-*(double *)&qword_1004F7E18];
      double v19 = sub_1001C94F8(v5);
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      if (v19 <= 0.0)
      {
        uint64_t v21 = 458754;
        double v19 = 0.25;
      }
      double v22 = self;
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v2;
      uint64_t v30 = sub_1001C99AC;
      uint64_t v31 = v23;
      uint64_t v26 = (uint64_t)_NSConcreteStackBlock;
      uint64_t v27 = 1107296256;
      uint64_t v28 = sub_100049AB4;
      uint64_t v29 = (uint64_t)&unk_100492A10;
      double v24 = _Block_copy(&v26);
      uint64_t v25 = v2;
      swift_release();
      [v22 animateWithDuration:v21 delay:v24 options:0 animations:v19 completion:0.0];
      _Block_release(v24);
    }
  }
}

void sub_1001C5408(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1001C50BC(v4);
}

char *sub_1001C5470(char *result)
{
  uint64_t v1 = *(void *)&result[qword_1004D0BD0];
  if (v1) {
    return (char *)[*(id *)(*(void *)(*(void *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_titleView)+ OBJC_IVAR____TtC7Measure13CardTitleView_editableTitleView) resignFirstResponder];
  }
  __break(1u);
  return result;
}

void sub_1001C54C0(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1001C96F4();
}

void sub_1001C5520()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MeasurementsHistory();
  __chkstk_darwin(v2 - 8);
  id v4 = (uint64_t *)((char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_100012894((uint64_t *)&unk_1004D0EF0);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MeasurementHistoryItem();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  double v12 = (char **)((char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  id v14 = (char *)&v39 - v13;
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  uint64_t v15 = *v4;
  swift_bridgeObjectRetain();
  sub_1000B9378((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MeasurementsHistory);
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    char v39 = v14;
    uint64_t v40 = v1;
    uint64_t v17 = v15 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v18 = v1 + qword_1004D0BC8;
    uint64_t v19 = *(void *)(v1 + qword_1004D0BC8);
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1000297B8(v17, (uint64_t)v12);
      BOOL v22 = *v12 == v19 && v12[1] == v20;
      if (v22 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      sub_1000B9378((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
      v17 += v21;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        uint64_t v23 = 1;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    sub_10009F928((uint64_t)v12, (uint64_t)v7);
    uint64_t v23 = 0;
LABEL_11:
    id v14 = v39;
    uint64_t v1 = v40;
  }
  else
  {
    uint64_t v23 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v23, 1, v8);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10002B9C0((uint64_t)v7, (uint64_t *)&unk_1004D0EF0);
    return;
  }
  sub_10009F928((uint64_t)v7, (uint64_t)v14);
  uint64_t v24 = v1 + qword_1004D0BD8;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v26 = (void *)Strong;
  uint64_t v27 = *(void *)(v24 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v29 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 56))(v14, ObjectType, v27);

  if (!v29)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v30 = *(void *)(v1 + qword_1004D0BD0);
  if (!v30)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  id v31 = objc_retain(*(id *)(*(void *)(*(void *)(v30 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                                      + OBJC_IVAR____TtC7Measure17CardContainerView_titleView)
                          + OBJC_IVAR____TtC7Measure13CardTitleView_leftItem));
  [v31 frame];
  double Width = CGRectGetWidth(v41);
  [v31 frame];
  double Height = CGRectGetHeight(v42);
  id v34 = sub_100012EEC(v29, (uint64_t)v31, 0.0, 0.0, Width, Height);

  swift_unknownObjectWeakAssign();
  uint64_t v35 = swift_unknownObjectWeakLoadStrong();
  if (!v35)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v36 = (void *)v35;
  uint64_t v37 = swift_unknownObjectWeakLoadStrong();
  if (v37)
  {
    CGAffineTransform v38 = (void *)v37;
    [v36 presentViewController:v37 animated:1 completion:0];

    sub_1000B9378((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
    return;
  }
LABEL_25:
  __break(1u);
}

void sub_1001C5990(void *a1)
{
  id v1 = a1;
  sub_1001C5520();
}

uint64_t sub_1001C59D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MeasurementsHistory();
  __chkstk_darwin(v2 - 8);
  id v4 = (uint64_t *)((char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_100012894((uint64_t *)&unk_1004D0EF0);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MeasurementHistoryItem();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  double v12 = (uint64_t *)((char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  id v14 = (char *)&v38 - v13;
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  uint64_t v15 = *v4;
  swift_bridgeObjectRetain();
  sub_1000B9378((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MeasurementsHistory);
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v39 = v1;
    uint64_t v40 = v14;
    uint64_t v17 = v15 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v18 = *(void *)(v1 + qword_1004D0BC8);
    uint64_t v19 = *(void *)(v1 + qword_1004D0BC8 + 8);
    uint64_t v20 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1000297B8(v17, (uint64_t)v12);
      BOOL v21 = *v12 == v18 && v12[1] == v19;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      sub_1000B9378((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
      v17 += v20;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        uint64_t v22 = 1;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    sub_10009F928((uint64_t)v12, (uint64_t)v7);
    uint64_t v22 = 0;
LABEL_11:
    uint64_t v1 = v39;
    id v14 = v40;
  }
  else
  {
    uint64_t v22 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v22, 1, v8);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_10002B9C0((uint64_t)v7, (uint64_t *)&unk_1004D0EF0);
  }
  sub_10009F928((uint64_t)v7, (uint64_t)v14);
  uint64_t v24 = v1 + qword_1004D0BD8;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v25 = (void *)result;
    uint64_t v26 = *(void *)(v24 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v28 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 56))(v14, ObjectType, v26);

    if (v28)
    {
      id v29 = [self generalPasteboard];
      id v30 = v28;
      v41.value.super.Class isa = (Class)v28;
      UIPasteboard.set(attributedString:)(v41);

      uint64_t v31 = v1 + qword_1004D0BE0;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v32 = *(void *)(v31 + 8);
        uint64_t v33 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v32 + 32))(v33, v32);
        swift_unknownObjectRelease();
      }
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v34 = *(void *)(v31 + 8);
        uint64_t v35 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v34 + 24))(v35, v34);
        swift_unknownObjectRelease();
      }
      if (qword_1004C2C10 != -1) {
        swift_once();
      }
      uint64_t v36 = qword_1004F8458;

      sub_1000B9378((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
      uint64_t v37 = v36 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
      uint64_t result = swift_beginAccess();
      *(double *)(v37 + 56) = *(double *)(v37 + 56) + 1.0;
    }
    else
    {
      return sub_1000B9378((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1001C5E7C(void *a1)
{
  id v1 = a1;
  sub_1001C59D8();
}

uint64_t sub_1001C5EC4(char *a1)
{
  uint64_t v2 = &a1[qword_1004D0BE0];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = *((void *)v2 + 1);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 24);
    unint64_t v7 = a1;
    v6(ObjectType, v4);

    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1001C5F6C()
{
  id v1 = v0;
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  CGFloat v2 = *(double *)&v0[qword_1004D0BF0];
  CGFloat v3 = *(double *)&v0[qword_1004D0BF0 + 8];
  CGFloat v4 = *(double *)&v0[qword_1004D0BF0 + 16];
  CGFloat v5 = *(double *)&v0[qword_1004D0BF0 + 24];
  uint64_t v6 = qword_1004D0C70;
  if (v0[qword_1004D0C70])
  {
    char v7 = 0;
  }
  else
  {
    swift_retain();
    StateValue.wrappedValue.getter();
    swift_release();
    char v7 = v11 ^ 1;
  }
  uint64_t v8 = *(void **)&v0[qword_1004D0BD0];
  if (v8)
  {
    char v9 = v0[v6];
    id v10 = v8;
    sub_10001CC9C(v12, v1, v7 & 1, (uint64_t)v10, v9, v2, v3, v4, v5);

    *((unsigned char *)v1 + v6) = 0;
  }
  else
  {
    __break(1u);
  }
}

void sub_1001C6084()
{
  v0[qword_1004D0BE8] = v0[qword_1004D0C20];
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  CGFloat v1 = *(double *)&v0[qword_1004D0BF0];
  CGFloat v2 = *(double *)&v0[qword_1004D0BF0 + 8];
  CGFloat v3 = *(double *)&v0[qword_1004D0BF0 + 16];
  CGFloat v4 = *(double *)&v0[qword_1004D0BF0 + 24];
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  CGFloat v5 = *(void **)&v0[qword_1004D0BD0];
  if (v5)
  {
    id v6 = v5;
    sub_10001CC9C(v8, v0, v7 ^ 1, (uint64_t)v6, 0, v1, v2, v3, v4);
  }
  else
  {
    __break(1u);
  }
}

void sub_1001C618C()
{
  CGFloat v1 = v0;
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  if (BYTE3(v12[0]) == 1)
  {
    uint64_t v2 = *(void *)&v0[qword_1004D0BD0];
    if (!v2)
    {
      __break(1u);
      return;
    }
    [*(id *)(*(void *)(*(void *)(v2 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_titleView)+ OBJC_IVAR____TtC7Measure13CardTitleView_editableTitleView) resignFirstResponder];
  }
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  if (BYTE3(v12[0])) {
    double v3 = 0.0;
  }
  else {
    double v3 = 1.0;
  }
  [v0 alpha];
  if (v4 != v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v1;
    *(double *)(v5 + 24) = v3;
    id v6 = objc_allocWithZone((Class)UIViewPropertyAnimator);
    v12[4] = sub_10005C4C8;
    v12[5] = v5;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_100049AB4;
    v12[3] = &unk_100492970;
    char v7 = _Block_copy(v12);
    id v8 = v1;
    swift_release();
    id v9 = [v6 initWithDuration:v7 dampingRatio:0.5 animations:0.6];
    _Block_release(v7);
    [v9 setInterruptible:0];
    [v9 startAnimation];
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      char v11 = Strong;
      [Strong dismissViewControllerAnimated:1 completion:0];

      id v9 = v11;
    }
  }
}

void sub_1001C63C8()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    CGFloat v1 = (void *)Strong;
    swift_retain();
    StateValue.wrappedValue.getter();
    swift_release();
    if (v3 == 2 || (swift_retain(), StateValue.wrappedValue.getter(), swift_release(), v2 == 1)) {
      [v1 dismissViewControllerAnimated:0 completion:0];
    }
  }
}

uint64_t sub_1001C6484()
{
  return swift_release();
}

void sub_1001C6560(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + qword_1004D0C70) == 1)
  {
    sub_1001C5F6C();
  }
  else
  {
    sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
    if ((static UIDevice.isIPhone()() & 1) == 0) {
      sub_1001C6084();
    }
  }
}

void sub_1001C65CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v65 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MeasurementsHistory();
  __chkstk_darwin(v5 - 8);
  char v7 = (uint64_t *)((char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100012894((uint64_t *)&unk_1004D0EF0);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MeasurementHistoryItem();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (uint64_t *)((char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v66 = (uint64_t)&v58 - v16;
  uint64_t v17 = v1 + qword_1004D0BD8;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v63 = Strong;
    uint64_t v19 = *(void (***)(char *, uint64_t))(v17 + 8);
    id v64 = (id)swift_unknownObjectWeakLoadStrong();
    if (v64)
    {
      uint64_t v61 = v19;
      uint64_t v62 = v2;
      swift_retain();
      StateValue.wrappedValue.getter();
      swift_release();
      uint64_t v20 = *v7;
      swift_bridgeObjectRetain();
      sub_1000B9378((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MeasurementsHistory);
      uint64_t v21 = *(void *)(v20 + 16);
      if (v21)
      {
        uint64_t v59 = v3;
        uint64_t v60 = v17;
        uint64_t v22 = v20 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
        uint64_t v23 = v1 + qword_1004D0BC8;
        uint64_t v24 = *(void *)(v1 + qword_1004D0BC8);
        uint64_t v25 = *(void *)(v23 + 8);
        uint64_t v26 = *(void *)(v12 + 72);
        swift_bridgeObjectRetain();
        while (1)
        {
          sub_1000297B8(v22, (uint64_t)v15);
          BOOL v27 = *v15 == v24 && v15[1] == v25;
          if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          sub_1000B9378((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
          v22 += v26;
          if (!--v21)
          {
            swift_bridgeObjectRelease();
            uint64_t v28 = 1;
            goto LABEL_16;
          }
        }
        swift_bridgeObjectRelease();
        sub_10009F928((uint64_t)v15, (uint64_t)v10);
        uint64_t v28 = 0;
LABEL_16:
        uint64_t v17 = v60;
        uint64_t v3 = v59;
      }
      else
      {
        uint64_t v28 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v28, 1, v11);
      swift_bridgeObjectRelease();
      int v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
      uint64_t v31 = v61;
      if (v30 == 1)
      {

        sub_10002B9C0((uint64_t)v10, (uint64_t *)&unk_1004D0EF0);
        return;
      }
      uint64_t v32 = v66;
      sub_10009F928((uint64_t)v10, v66);
      uint64_t ObjectType = swift_getObjectType();
      ((void (*)(uint64_t, uint64_t, void (**)(char *, uint64_t)))v31[13])(v32, ObjectType, v31);
      uint64_t v34 = ((uint64_t (*)(uint64_t, void))v31[2])(ObjectType, v31);
      if ((v34 & 0x8000000000000000) == 0)
      {
        uint64_t v35 = v34;
        uint64_t v36 = v65;
        if (!v34)
        {
LABEL_32:
          sub_1000B9378(v66, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);

          return;
        }
        uint64_t v37 = v3;
        uint64_t v38 = 0;
        uint64_t v61 = (void (**)(char *, uint64_t))(v37 + 8);
        while (v35 != v38)
        {
          IndexPath.init(row:section:)();
          Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
          id v41 = [v64 cellForRowAtIndexPath:isa];

          if (!v41) {
            goto LABEL_34;
          }
          type metadata accessor for DetailedPlatterCellTableViewCell();
          uint64_t v42 = swift_dynamicCastClass();
          if (!v42)
          {

LABEL_34:
            (*v61)(v36, v62);
            sub_1000B9378(v66, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
            return;
          }
          uint64_t v43 = v42;
          uint64_t v44 = swift_unknownObjectWeakLoadStrong();
          if (!v44) {
            goto LABEL_38;
          }
          uint64_t v45 = (void *)v44;
          uint64_t v46 = v17;
          uint64_t v47 = *(void *)(v17 + 8);
          uint64_t v48 = swift_getObjectType();
          (*(void (**)(void *__return_ptr, char *, uint64_t, uint64_t, uint64_t))(v47 + 8))(v67, v36, v66, v48, v47);

          uint64_t v49 = *(void *)(v43 + OBJC_IVAR____TtC7Measure32DetailedPlatterCellTableViewCell_measureContent);
          uint64_t v50 = *(void **)(v49 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_title);
          NSString v51 = String._bridgeToObjectiveC()();
          [v50 setText:v51];

          uint64_t v52 = *(void **)(v49 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits);
          uint64_t v54 = v67[2];
          uint64_t v53 = v67[3];
          NSString v55 = String._bridgeToObjectiveC()();
          [v52 setText:v55];

          uint64_t v56 = v68;
          uint64_t v57 = v69;
          if (v54 == v68 && v53 == v69) {
            char v39 = 1;
          }
          else {
            char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
          ++v38;
          sub_10015E68C(v56, v57, v67[4], (NSString)v67[5], v70, v71, v72, v73, v39 & 1);
          sub_10008A5C4((uint64_t)v67);

          uint64_t v36 = v65;
          (*v61)(v65, v62);
          uint64_t v17 = v46;
          if (v35 == v38) {
            goto LABEL_32;
          }
        }
        __break(1u);
      }
      __break(1u);
LABEL_38:
      __break(1u);
    }
    else
    {
      id v29 = v63;
    }
  }
}

uint64_t sub_1001C6C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3 + qword_1004D0BD8;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = (void *)result;
    uint64_t v10 = *(void *)(v7 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(v22, a2, a3, ObjectType, v10);

    uint64_t v12 = *(void *)(a1 + OBJC_IVAR____TtC7Measure32DetailedPlatterCellTableViewCell_measureContent);
    uint64_t v13 = *(void **)(v12 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_title);
    NSString v14 = String._bridgeToObjectiveC()();
    [v13 setText:v14];

    uint64_t v15 = *(void **)(v12 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits);
    uint64_t v16 = v22[2];
    uint64_t v17 = v22[3];
    NSString v18 = String._bridgeToObjectiveC()();
    [v15 setText:v18];

    uint64_t v19 = v23;
    uint64_t v20 = v24;
    if (v16 == v23 && v17 == v24) {
      char v21 = 1;
    }
    else {
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    sub_10015E68C(v19, v20, v22[4], (NSString)v22[5], v25, v26, v27, v28, v21 & 1);
    return sub_10008A5C4((uint64_t)v22);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001C6E10(uint64_t a1, double a2, double a3)
{
  void (*v9)(char *__return_ptr, uint64_t);
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char v13[3];
  objc_super v14;

  uint64_t v4 = v3;
  v14.receiver = v4;
  v14.super_class = (Class)swift_getObjectType();
  uint64_t v8 = (char *)objc_msgSendSuper2(&v14, "hitTest:withEvent:", a1, a2, a3);
  if (!v8) {
    return (uint64_t)v8;
  }
  uint64_t v9 = *(void (**)(char *__return_ptr, uint64_t))(**(void **)&v4[qword_1004D0C30] + 144);
  uint64_t v10 = swift_retain();
  v9(v13, v10);
  swift_release();
  if (v13[0]) {
    return (uint64_t)v8;
  }
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  uint64_t result = static UIDevice.isIPhone()();
  if (result) {
    return (uint64_t)v8;
  }
  if (v8 == v4)
  {
    uint64_t v8 = v4;
    goto LABEL_9;
  }
  uint64_t v12 = *(void *)&v4[qword_1004D0BD0];
  if (v12)
  {
    if (v8 != *(char **)(v12 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)) {
      return (uint64_t)v8;
    }
LABEL_9:

    return 0;
  }
  __break(1u);
  return result;
}

id sub_1001C6F4C(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v9 = a5;
  id v10 = a1;
  uint64_t v11 = (void *)sub_1001C6E10((uint64_t)a5, a2, a3);

  return v11;
}

void sub_1001C6FC8()
{
}

uint64_t type metadata accessor for SpatialGenericPlatter()
{
  uint64_t result = qword_1004D0CA0;
  if (!qword_1004D0CA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001C7044()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1001C70E4()
{
  return type metadata accessor for SpatialGenericPlatter();
}

uint64_t sub_1001C70EC(void *a1, id a2)
{
  id v5 = [a2 view];
  id v6 = [a1 view];
  id v7 = v6;
  if (v5)
  {

    if (v7)
    {

      if (v5 == v7) {
        return 1;
      }
    }
  }
  else
  {
    if (!v6) {
      return 1;
    }
  }
  uint64_t result = (uint64_t)[a2 view];
  uint64_t v9 = *(void *)(v2 + qword_1004D0BD0);
  if (v9)
  {
    uint64_t v10 = result;
    if (result)
    {
      uint64_t v11 = *(void *)(v9 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView);

      return v10 == v11;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1001C72EC(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v58 = a1;
  uint64_t v5 = type metadata accessor for MeasurementsHistory();
  __chkstk_darwin(v5 - 8);
  id v7 = (uint64_t *)((char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100012894((uint64_t *)&unk_1004D0EF0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MeasurementHistoryItem();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (uint64_t *)((char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v54 - v16;
  NSString v18 = &v2[qword_1004D0BD8];
  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v20 = result;
    uint64_t v21 = *((void *)v18 + 1);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(ObjectType, v21);

    if (IndexPath.row.getter() < v23)
    {
      uint64_t v56 = v17;
      uint64_t v57 = a2;
      swift_retain();
      StateValue.wrappedValue.getter();
      swift_release();
      uint64_t v24 = *v7;
      swift_bridgeObjectRetain();
      sub_1000B9378((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MeasurementsHistory);
      uint64_t v25 = v3;
      uint64_t v26 = *(void *)(v24 + 16);
      NSString v55 = v25;
      if (v26)
      {
        uint64_t v54 = v23;
        uint64_t v27 = v24 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
        uint64_t v29 = *(void *)&v25[qword_1004D0BC8];
        uint64_t v28 = *(void *)&v25[qword_1004D0BC8 + 8];
        uint64_t v30 = *(void *)(v12 + 72);
        swift_bridgeObjectRetain();
        while (1)
        {
          sub_1000297B8(v27, (uint64_t)v15);
          BOOL v31 = *v15 == v29 && v15[1] == v28;
          if (v31 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          sub_1000B9378((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
          v27 += v30;
          if (!--v26)
          {
            swift_bridgeObjectRelease();
            uint64_t v32 = 1;
            uint64_t v23 = v54;
            goto LABEL_14;
          }
        }
        swift_bridgeObjectRelease();
        sub_10009F928((uint64_t)v15, (uint64_t)v10);
        uint64_t v32 = 0;
        uint64_t v23 = v54;
      }
      else
      {
        uint64_t v32 = 1;
      }
LABEL_14:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v32, 1, v11);
      swift_bridgeObjectRelease();
      int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
      uint64_t v34 = v57;
      if (v33 != 1)
      {
        uint64_t v36 = (uint64_t)v56;
        sub_10009F928((uint64_t)v10, (uint64_t)v56);
        uint64_t v37 = v23;
        NSString v38 = String._bridgeToObjectiveC()();
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        id v40 = [v58 dequeueReusableCellWithIdentifier:v38 forIndexPath:isa];

        type metadata accessor for DetailedPlatterCellTableViewCell();
        uint64_t v35 = (void *)swift_dynamicCastClassUnconditional();
        uint64_t v41 = v36;
        uint64_t v42 = v55;
        sub_1001C6C90((uint64_t)v35, v34, v41);
        if (IndexPath.row.getter() == v37 - 1)
        {
          id v43 = v40;
          [v42 bounds];
          [v35 setSeparatorInset:CGRectMake(0.0, CGRectGetWidth(v62), 0.0, 0.0)];
        }
        else
        {
          uint64_t v44 = qword_1004C2828;
          id v45 = v40;
          if (v44 != -1) {
            swift_once();
          }
          [v35 setSeparatorInset:xmmword_1004F7E40, *(double *)&qword_1004F7E50, *(double *)&qword_1004F7E58];
        }

        uint64_t v46 = self;
        id v47 = v40;
        id v48 = [v46 clearColor];
        [v35 setBackgroundColor:v48];

        [v35 setSelectionStyle:0];
        swift_getObjectType();
        id v49 = v47;
        uint64_t v60 = _typeName(_:qualified:)();
        uint64_t v61 = v50;
        v51._countAndFlagsBits = 45;
        v51._object = (void *)0xE100000000000000;
        String.append(_:)(v51);
        uint64_t v59 = IndexPath.row.getter();
        v52._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v52);
        swift_bridgeObjectRelease();
        NSString v53 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v35 setAccessibilityIdentifier:v53];

        sub_1000B9378((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
        return v35;
      }
      sub_10002B9C0((uint64_t)v10, (uint64_t *)&unk_1004D0EF0);
    }
    return [objc_allocWithZone((Class)UITableViewCell) init];
  }
  __break(1u);
  return result;
}

uint64_t sub_1001C7A5C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 240);
  return swift_retain();
}

uint64_t sub_1001C7A6C(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      NSString v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1001C7EFC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1001C7C1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100012894(&qword_1004D0EB0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *BOOL v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

Swift::Int sub_1001C7EFC(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1001C7C1C();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_1001C8098();
      goto LABEL_22;
    }
    sub_1001C824C();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  uint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_1001C8098()
{
  uint64_t v1 = v0;
  sub_100012894(&qword_1004D0EB0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    BOOL v19 = (void *)(*(void *)(v4 + 48) + v16);
    *BOOL v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1001C824C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100012894(&qword_1004D0EB0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1001C84FC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      int64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001C8098();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_1001C868C(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_1001C868C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v10 = Hasher._finalize()();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1001C8854@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 240);
  return swift_retain();
}

uint64_t sub_1001C8878()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001C88B0(unsigned __int8 *a1)
{
}

id sub_1001C88C8(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for MeasurementHistoryItem();
  sub_100026A04((uint64_t)a1 + *(int *)(v2 + 28), (uint64_t)v27);
  sub_100026A04((uint64_t)v27, (uint64_t)v28);
  int v3 = sub_100026A60((uint64_t)v28);
  if (v3)
  {
    if (v3 == 1)
    {
      uint64_t v4 = (const void *)sub_100026A6C((uint64_t)v28);
      memcpy(v26, v4, 0x1DEuLL);
      uint64_t v5 = *a1;
      uint64_t v6 = a1[1];
      uint64_t v8 = a1[2];
      uint64_t v7 = a1[3];
      objc_allocWithZone((Class)type metadata accessor for RectanglePlatterSpatial());
      sub_1001C8B04(v27);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v9 = sub_1000248C8(v5, v6, (uint64_t)v26, v8, v7);
      Swift::Int v10 = &off_100488680;
    }
    else
    {
      BOOL v16 = (const void *)sub_100026A6C((uint64_t)v28);
      memcpy(v26, v16, 0x346uLL);
      uint64_t v17 = *a1;
      uint64_t v18 = a1[1];
      uint64_t v20 = a1[2];
      uint64_t v19 = a1[3];
      objc_allocWithZone((Class)type metadata accessor for ObjectPlatterSpatial());
      sub_1001C8B04(v27);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v9 = sub_1001CFFE4(v17, v18, v26, v20, v19);
      Swift::Int v10 = &off_100492BC8;
    }
  }
  else
  {
    unint64_t v11 = (const void *)sub_100026A6C((uint64_t)v28);
    memcpy(v26, v11, 0x10DuLL);
    uint64_t v12 = *a1;
    uint64_t v13 = a1[1];
    uint64_t v15 = a1[2];
    uint64_t v14 = a1[3];
    objc_allocWithZone((Class)type metadata accessor for LinePlatterSpatial());
    sub_1001C8B04(v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_100087318(v12, v13, (uint64_t)v26, v15, v14);
    Swift::Int v10 = &off_10048B418;
  }
  swift_getObjectType();
  uint64_t v21 = (uint64_t (__cdecl *)())v10[10];
  id v22 = v9;
  uint64_t v23 = v21();

  id v24 = objc_allocWithZone((Class)type metadata accessor for CardContainerView());
  return sub_100198F88(v22, 0, v23);
}

uint64_t *sub_1001C8B04(uint64_t *a1)
{
  sub_100098C10(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23]);
  return a1;
}

uint64_t sub_1001C8CDC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001C8D14()
{
  sub_1001C4584(*(void *)(v0 + 16));
}

uint64_t sub_1001C8D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001C8D2C()
{
  return swift_release();
}

uint64_t sub_1001C8D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894((uint64_t *)&unk_1004CE670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001C8D9C()
{
  uint64_t v1 = type metadata accessor for MeasurementHistoryItem();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 24);
  uint64_t v6 = type metadata accessor for MeasurementCapture();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    v8(v5, v7);
    v8(v5 + *(int *)(v6 + 20), v7);
  }
  unint64_t v9 = (uint64_t *)(v0 + v3 + *(int *)(v1 + 28));
  sub_100027F20(*v9, v9[1], v9[2], v9[3], v9[4], v9[5], v9[6], v9[7], v9[8], v9[9], v9[10], v9[11], v9[12], v9[13], v9[14], v9[15], v9[16], v9[17], v9[18],
    v9[19]);

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1001C90CC(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for MeasurementHistoryItem() - 8);
  unint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1001C4438(a1, v4, v5);
}

void sub_1001C9140(uint64_t a1)
{
  sub_1001C6560(a1, *(void *)(v1 + 16));
}

void sub_1001C9148()
{
}

void sub_1001C9170()
{
}

uint64_t sub_1001C9194()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001C91CC()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  *(void *)&v0[qword_1004D0BD0] = 0;
  *(void *)&v0[qword_1004D0BD8 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[qword_1004D0BE0 + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[qword_1004D0BE8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v0[qword_1004D0C08] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v0[qword_1004D0C20] = 0;
  uint64_t v2 = qword_1004D0C28;
  uint64_t v3 = sub_100012894(&qword_1004CE600);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1004F8630;
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 272);
  swift_retain();
  *(void *)&v1[v2] = v6(KeyPath, v5);
  uint64_t v7 = qword_1004D0C30;
  sub_100012894(&qword_1004D0EC8);
  swift_getKeyPath();
  *(void *)&v1[v7] = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v8 = qword_1004D0C38;
  uint64_t v9 = sub_100012894((uint64_t *)&unk_1004C7F20);
  uint64_t v10 = swift_getKeyPath();
  uint64_t v11 = qword_1004F8630;
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 272);
  swift_retain();
  *(void *)&v1[v8] = v12(v10, v11);
  uint64_t v13 = qword_1004D0C40;
  uint64_t v14 = sub_100012894(&qword_1004C6AA0);
  uint64_t v15 = swift_getKeyPath();
  uint64_t v16 = qword_1004F8630;
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 272);
  swift_retain();
  *(void *)&v1[v13] = v17(v15, v16);
  uint64_t v18 = qword_1004D0C48;
  sub_100012894((uint64_t *)&unk_1004D0ED0);
  swift_getKeyPath();
  *(void *)&v1[v18] = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v19 = qword_1004D0C50;
  sub_100012894(&qword_1004CE630);
  swift_getKeyPath();
  *(void *)&v1[v19] = MutableStateValue.__allocating_init(_:_:)();
  *(void *)&v1[qword_1004D0C58] = 0;
  v1[qword_1004D0C60] = 0;
  swift_unknownObjectWeakInit();
  v1[qword_1004D0C70] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

double sub_1001C94F8(uint64_t a1)
{
  id v9 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v2 = sub_1000E23C4((uint64_t)v11), (v3 & 1) != 0))
  {
    sub_10005C070(*(void *)(a1 + 56) + 32 * v2, (uint64_t)&v12);
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  sub_1000E3CA0((uint64_t)v11);
  if (!*((void *)&v13 + 1))
  {
    sub_10002B9C0((uint64_t)&v12, (uint64_t *)&unk_1004C7180);
    goto LABEL_9;
  }
  sub_10001C99C(0, (unint64_t *)&qword_1004D0F00);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    double v5 = 0.0;
    goto LABEL_10;
  }
  [v9 doubleValue];
  double v5 = v4;

LABEL_10:
  id v10 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v6 = sub_1000E23C4((uint64_t)v11), (v7 & 1) != 0))
  {
    sub_10005C070(*(void *)(a1 + 56) + 32 * v6, (uint64_t)&v12);
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  sub_1000E3CA0((uint64_t)v11);
  if (*((void *)&v13 + 1))
  {
    sub_10001C99C(0, (unint64_t *)&qword_1004D0F00);
    if (swift_dynamicCast())
    {
      [v10 unsignedIntegerValue];
    }
  }
  else
  {
    sub_10002B9C0((uint64_t)&v12, (uint64_t *)&unk_1004C7180);
  }
  return v5;
}

uint64_t sub_1001C96F4()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  double v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  char v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  uint64_t v8 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  aBlock[4] = sub_1001C99A4;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_1004929C0;
  id v10 = _Block_copy(aBlock);
  id v11 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

char *sub_1001C99A4()
{
  return sub_1001C5470(*(char **)(v0 + 16));
}

id sub_1001C99AC()
{
  return [*(id *)(v0 + 16) layoutIfNeeded];
}

void sub_1001C99BC()
{
  sub_1001C4A70(*(void *)(v0 + 16));
}

uint64_t sub_1001C9A00()
{
  uint64_t v1 = v0;
  v0[9] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v2 = sub_100012894(&qword_1004C58E8);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v4 = qword_1004C2E30;
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1004F8630;
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 272);
  swift_retain();
  v1[10] = v6(KeyPath, v5);
  uint64_t v7 = sub_100012894(&qword_1004C3EF0);
  uint64_t v8 = swift_getKeyPath();
  uint64_t v9 = qword_1004F8630;
  id v10 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 272);
  swift_retain();
  v1[11] = v10(v8, v9);
  uint64_t v11 = swift_getKeyPath();
  uint64_t v12 = sub_100012894(&qword_1004C96C8);
  uint64_t v13 = qword_1004F8630;
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 272);
  swift_retain();
  v1[12] = v14(v11, v13);
  uint64_t v15 = sub_100012894(&qword_1004C6F48);
  uint64_t v16 = swift_getKeyPath();
  uint64_t v17 = qword_1004F8630;
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 272);
  swift_retain();
  v1[13] = v18(v16, v17);
  uint64_t v19 = sub_100012894(&qword_1004D1108);
  uint64_t v20 = swift_getKeyPath();
  uint64_t v21 = qword_1004F8630;
  id v22 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 272);
  swift_retain();
  v1[14] = v22(v20, v21);
  swift_release();
  return StateObserver.init(configuration:)();
}

uint64_t sub_1001C9C34(uint64_t a1)
{
  return sub_1001C9C70(a1);
}

uint64_t sub_1001C9C70(uint64_t a1)
{
  uint64_t v2 = v1;
  v1[9] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v4 = sub_100012894(&qword_1004C58E8);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = qword_1004C2E30;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1004F8630;
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 272);
  swift_retain();
  v2[10] = v8(KeyPath, v7);
  uint64_t v9 = sub_100012894(&qword_1004C3EF0);
  uint64_t v10 = swift_getKeyPath();
  uint64_t v11 = qword_1004F8630;
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 272);
  swift_retain();
  v2[11] = v12(v10, v11);
  uint64_t v13 = swift_getKeyPath();
  uint64_t v14 = sub_100012894(&qword_1004C96C8);
  uint64_t v15 = qword_1004F8630;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 272);
  swift_retain();
  v2[12] = v16(v13, v15);
  uint64_t v17 = sub_100012894(&qword_1004C6F48);
  uint64_t v18 = swift_getKeyPath();
  uint64_t v19 = qword_1004F8630;
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 272);
  swift_retain();
  v2[13] = v20(v18, v19);
  uint64_t v21 = sub_100012894(&qword_1004D1108);
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = qword_1004F8630;
  id v24 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 272);
  swift_retain();
  v2[14] = v24(v22, v23);
  swift_release();
  sub_10002B8B4(a1, (uint64_t)v27);
  uint64_t v25 = StateObserver.init(configuration:)();
  sub_100013218(a1);
  return v25;
}

void *sub_1001C9EB0()
{
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result didUpdate];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1001C9F08()
{
  sub_10001FE1C(v0 + 64);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1001C9F58()
{
  uint64_t v0 = StateObserver.deinit();
  sub_10001FE1C(v0 + 64);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AccessibilityStateObserverBridge()
{
  uint64_t result = qword_1004D0F38;
  if (!qword_1004D0F38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001CA014()
{
  return swift_initClassMetadata2();
}

id sub_1001CA06C()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for AccessibilityStateObserver()) init];
  qword_1004F8638 = (uint64_t)result;
  return result;
}

uint64_t sub_1001CA24C()
{
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  id v0 = v5;

  if (!v6) {
    return 0;
  }
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v6) + 0x2F0))();

  return v1;
}

uint64_t sub_1001CA32C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Measure26AccessibilityStateObserver_implementation);
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  long long v33 = v24;
  long long v34 = v25;
  long long v35 = v26;
  char v36 = v27;
  v29[2] = v20;
  long long v30 = v21;
  long long v31 = v22;
  long long v32 = v23;
  v29[0] = v18;
  v29[1] = v19;
  if (qword_1004C2D00 != -1) {
    swift_once();
  }
  if (byte_1004F8530 != 1 || BYTE1(v29[0]) != 1 || !(void)v30 || (v35 & 1) != 0)
  {
    sub_1000ED828((uint64_t)v29);
    return 0;
  }
  uint64_t v4 = *(uint64_t (**)(void))((swift_isaMask & *(void *)v30) + 0x250);
  id v5 = (id)v30;
  uint64_t result = v4();
  if ((result & 0xC000000000000001) != 0)
  {
    uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_12;
  }
  if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v6 = *(id *)(result + 32);
LABEL_12:
    uint64_t v7 = v6;
    uint64_t v8 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))((swift_isaMask & *v7) + 0x2B0))(v8);

    simd_float4x4.position.getter();
    float32x4_t v17 = v9;
    simd_float4x4.position.getter();
    float32x4_t v11 = vsubq_f32(v17, v10);
    float32x4_t v12 = vmulq_f32(v11, v11);
    float v13 = sqrtf(v12.f32[2] + vaddv_f32(*(float32x2_t *)v12.f32));
    uint64_t v14 = *(void (**)(uint64_t))(**(void **)(v1 + 96) + 144);
    uint64_t v15 = swift_retain();
    v14(v15);
    swift_release();
    id v16 = sub_1000B1320();
    sub_10012C948((uint64_t)v16, 0, 0, (uint64_t *)&v18, v13);

    sub_1000ED828((uint64_t)v29);
    uint64_t v2 = v19;
    long long v28 = v18;
    sub_1000DB4E0((uint64_t)&v28);
    return v2;
  }
  __break(1u);
  return result;
}

id sub_1001CA608(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }

  return v7;
}

uint64_t sub_1001CA688()
{
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  void v22[6] = v18;
  v22[7] = v19;
  v22[8] = v20;
  char v23 = v21;
  v22[2] = v14;
  v22[3] = v15;
  v22[4] = v16;
  v22[5] = v17;
  v22[0] = v12;
  v22[1] = v13;
  sub_1000ED828((uint64_t)v22);
  if (BYTE1(v22[0]) != 1) {
    return 0;
  }
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  long long v18 = v8;
  long long v19 = v9;
  long long v20 = v10;
  char v21 = v11;
  long long v14 = v4;
  long long v15 = v5;
  long long v16 = v6;
  long long v17 = v7;
  long long v12 = v2;
  long long v13 = v3;
  uint64_t v0 = *((void *)&v2 + 1);
  swift_bridgeObjectRetain();
  sub_1000ED828((uint64_t)&v12);
  return v0;
}

uint64_t sub_1001CA9B8()
{
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  swift_bridgeObjectRetain();
  sub_100012894(&qword_1004C4358);
  sub_100012894(&qword_1004C54D8);
  swift_dynamicCast();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001CABCC();
  uint64_t v0 = RangeReplaceableCollection<>.idToObjectMap.getter();
  swift_bridgeObjectRelease();
  return v0;
}

id sub_1001CAB64()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccessibilityStateObserver();
  return [super dealloc];
}

uint64_t type metadata accessor for AccessibilityStateObserver()
{
  return self;
}

unint64_t sub_1001CABCC()
{
  unint64_t result = qword_1004D1100;
  if (!qword_1004D1100)
  {
    sub_100016EF4(&qword_1004C54D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004D1100);
  }
  return result;
}

double sub_1001CAC3C()
{
  double result = -4294967300.0;
  qword_1004F8640 = 0xC1F0000000000000;
  return result;
}

double sub_1001CAC50()
{
  double result = -16777216.0;
  qword_1004F8648 = 0xC170000000000000;
  return result;
}

uint64_t sub_1001CAC64()
{
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  uint64_t result = static UIDevice.isIPad()();
  if (result)
  {
    uint64_t v1 = 0x404A000000000000;
LABEL_8:
    double v2 = *(double *)&v1;
    goto LABEL_9;
  }
  uint64_t result = static UIDevice.isIPhone()();
  if ((result & 1) == 0)
  {
    uint64_t v1 = 0x4053800000000000;
    goto LABEL_8;
  }
  uint64_t result = (uint64_t)[self jasperAvailable];
  double v2 = 78.0;
  if (result) {
    double v2 = 77.0;
  }
LABEL_9:
  qword_1004F8650 = *(void *)&v2;
  return result;
}

void sub_1001CAD04()
{
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if (static UIDevice.isIPad()())
  {
    unsigned int v0 = [self jasperAvailable];
    double v1 = 72.0;
    if (v0) {
      double v1 = 78.0;
    }
  }
  else if (static UIDevice.isIPhone()())
  {
    id v2 = [self mainScreen];
    [v2 _peripheryInsets];
    double v4 = v3;
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;

    if (v4 == UIEdgeInsetsZero.top && v6 == UIEdgeInsetsZero.left && v8 == UIEdgeInsetsZero.bottom)
    {
      double v1 = 78.0;
      if (v10 == UIEdgeInsetsZero.right) {
        double v1 = 72.0;
      }
    }
    else
    {
      double v1 = 78.0;
    }
  }
  else
  {
    double v1 = 72.0;
  }
  qword_1004F8658 = *(void *)&v1;
}

void sub_1001CAE3C()
{
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  char v0 = static UIDevice.isIPad()();
  double v1 = 16.0;
  if ((v0 & 1) == 0)
  {
    char v2 = static UIDevice.isIPhone()();
    double v1 = 6.0;
    if (v2)
    {
      id v3 = [self mainScreen];
      [v3 _peripheryInsets];
      double v5 = v4;
      double v7 = v6;
      double v9 = v8;
      double v11 = v10;

      double v1 = 27.0;
      if (v5 == UIEdgeInsetsZero.top && v7 == UIEdgeInsetsZero.left && v9 == UIEdgeInsetsZero.bottom)
      {
        double v1 = 27.0;
        if (v11 == UIEdgeInsetsZero.right) {
          double v1 = 6.0;
        }
      }
    }
  }
  qword_1004F8660 = *(void *)&v1;
}

void sub_1001CAF20()
{
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  char v0 = static UIDevice.isIPad()();
  double v1 = 16.0;
  if ((v0 & 1) == 0)
  {
    char v2 = static UIDevice.isIPhone()();
    double v1 = 6.0;
    if (v2)
    {
      id v3 = [self mainScreen];
      [v3 _peripheryInsets];
      double v5 = v4;
      double v7 = v6;
      double v9 = v8;
      double v11 = v10;

      if (v5 == UIEdgeInsetsZero.top && v7 == UIEdgeInsetsZero.left && v9 == UIEdgeInsetsZero.bottom)
      {
        double v1 = 44.0;
        if (v11 == UIEdgeInsetsZero.right) {
          double v1 = 6.0;
        }
      }
      else
      {
        double v1 = 44.0;
      }
    }
  }
  qword_1004F8668 = *(void *)&v1;
}

id sub_1001CB010()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithWhite:1.0 alpha:1.0];
  qword_1004F8670 = (uint64_t)result;
  return result;
}

uint64_t sub_1001CB04C()
{
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  uint64_t result = static UIDevice.isIPad()();
  if ((result & 1) != 0 || (uint64_t result = static UIDevice.isIPhone()(), (result & 1) == 0))
  {
    double v1 = 44.0;
  }
  else
  {
    uint64_t result = (uint64_t)[self jasperAvailable];
    double v1 = 44.0;
    if (result) {
      double v1 = 52.0;
    }
  }
  qword_1004F8678 = *(void *)&v1;
  return result;
}

void sub_1001CB0D8()
{
  qword_1004F8680 = 0x3FE3333333333333;
}

void sub_1001CB0EC()
{
  qword_1004F8688 = 0x3FF0000000000000;
}

void sub_1001CB0FC()
{
  qword_1004F8690 = 0x4030000000000000;
}

void sub_1001CB10C()
{
  qword_1004F8698 = 0x4030000000000000;
}

id sub_1001CB11C(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_systemBlueColor, &qword_1004F86A0);
}

id sub_1001CB130(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_systemBlueColor, &qword_1004F86A8);
}

id sub_1001CB144()
{
  if ([self jasperAvailable]) {
    id result = [self tableCellDefaultSelectionTintColor];
  }
  else {
    id result = [objc_allocWithZone((Class)UIColor) initWithWhite:0.0 alpha:0.1];
  }
  qword_1004F86B0 = (uint64_t)result;
  return result;
}

id sub_1001CB1C0()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithWhite:0.0 alpha:0.6];
  qword_1004F86B8 = (uint64_t)result;
  return result;
}

id sub_1001CB204()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithDisplayP3Red:1.0 green:1.0 blue:1.0 alpha:0.3];
  qword_1004F86C0 = (uint64_t)result;
  return result;
}

uint64_t sub_1001CB250()
{
  uint64_t result = CGSize.init(_:_:)();
  qword_1004F86C8 = v1;
  qword_1004F86D0 = v2;
  return result;
}

void sub_1001CB284()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0xE000000000000000;
  v1._object = (void *)0x8000000100423690;
  v1._countAndFlagsBits = 0xD000000000000012;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._countAndFlagsBits = 0;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_1004F86D8 = (__int128)v3;
}

UIFontTextStyle sub_1001CB328()
{
  qword_1004F86E8 = (uint64_t)UIFontTextStyleCaption2;
  return UIFontTextStyleCaption2;
}

void sub_1001CB340(uint64_t a1)
{
}

id sub_1001CB354(uint64_t a1)
{
  return sub_1001CC434(a1, &qword_1004C2F00, (void **)&qword_1004F86F0, (void **)&qword_1004F86F8);
}

id sub_1001CB380(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_grayColor, &qword_1004F8700);
}

void sub_1001CB394(uint64_t a1)
{
}

id sub_1001CB3A8()
{
  if (qword_1004C2F18 != -1) {
    swift_once();
  }
  id result = [(id)qword_1004F8708 colorWithAlphaComponent:0.7];
  qword_1004F8710 = (uint64_t)result;
  return result;
}

id sub_1001CB41C(uint64_t a1)
{
  return sub_1001CC434(a1, &qword_1004C2F20, (void **)&qword_1004F8710, (void **)&qword_1004F8718);
}

double sub_1001CB448()
{
  if (qword_1004C2EF8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1004F86E8;
  if (qword_1004C27C8 != -1) {
    swift_once();
  }
  UIContentSizeCategory v1 = (UIContentSizeCategory)(id)qword_1004F7DD8;
  char v2 = static UIContentSizeCategory.> infix(_:_:)();

  if (v2)
  {

    UIContentSizeCategory v1 = UIContentSizeCategoryAccessibilityLarge;
  }
  Swift::String v3 = self;
  id v4 = [self traitCollectionWithPreferredContentSizeCategory:v1];

  id v5 = [v3 preferredFontForTextStyle:v0 compatibleWithTraitCollection:v4];
  [v5 pointSize];
  double v7 = v6;

  double result = fmax(v7 * 0.4, 8.0);
  qword_1004F8720 = *(void *)&result;
  return result;
}

double sub_1001CB5B4()
{
  if (qword_1004C2F30 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1004F8720 * 0.25;
  *(double *)&qword_1004F8728 = *(double *)&qword_1004F8720 * 0.25;
  return result;
}

double sub_1001CB610()
{
  if (qword_1004C2EF8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1004F86E8;
  if (qword_1004C27C8 != -1) {
    swift_once();
  }
  UIContentSizeCategory v1 = (UIContentSizeCategory)(id)qword_1004F7DD8;
  char v2 = static UIContentSizeCategory.> infix(_:_:)();

  if (v2)
  {

    UIContentSizeCategory v1 = UIContentSizeCategoryAccessibilityLarge;
  }
  Swift::String v3 = self;
  id v4 = [self traitCollectionWithPreferredContentSizeCategory:v1];

  id v5 = [v3 preferredFontForTextStyle:v0 compatibleWithTraitCollection:v4];
  [v5 pointSize];
  double v7 = v6;

  double result = fmax(v7 * 0.9 * 1.4, 20.0);
  qword_1004F8730 = *(void *)&result;
  return result;
}

double sub_1001CB78C()
{
  if (qword_1004C2F40 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1004F8730 * 0.8;
  *(double *)&qword_1004F8738 = *(double *)&qword_1004F8730 * 0.8;
  return result;
}

double sub_1001CB7EC()
{
  if (qword_1004C2E70 != -1) {
    swift_once();
  }
  double v0 = *(double *)&qword_1004F8650;
  if (qword_1004C2E78 != -1) {
    swift_once();
  }
  double result = v0 + *(double *)&qword_1004F8658 * 0.5;
  *(double *)&qword_1004F8740 = result;
  return result;
}

void sub_1001CB88C()
{
  if (qword_1004C31A8 != -1) {
    swift_once();
  }
  double v0 = (void *)qword_1004F89A0;
  UIContentSizeCategory v1 = *(void **)algn_1004F89A8;
  if (byte_1004F89B0)
  {
    char v2 = byte_1004F89C0;
    uint64_t v3 = qword_1004F89B8;
    char v4 = byte_1004D2600;
    id v5 = (id)qword_1004F89A0;
    id v6 = sub_100081B28(v4, v3, v2);
    sub_1000286C0(v0, v1, 1);
  }
  else
  {
    if (byte_1004D2600) {
      id v7 = *(id *)algn_1004F89A8;
    }
    else {
      id v7 = (id)qword_1004F89A0;
    }
    id v6 = v7;
  }
  qword_1004F8748 = (uint64_t)v6;
}

void sub_1001CB96C(uint64_t a1)
{
}

void sub_1001CB980(uint64_t a1)
{
}

id sub_1001CB994(uint64_t a1)
{
  return sub_1001CC434(a1, &qword_1004C2F60, (void **)&qword_1004F8750, (void **)&qword_1004F8760);
}

id sub_1001CB9C0(uint64_t a1)
{
  return sub_1001CC434(a1, &qword_1004C2F70, (void **)&qword_1004F8760, (void **)&qword_1004F8768);
}

id sub_1001CB9EC(uint64_t a1)
{
  return sub_1001CC434(a1, &qword_1004C2F60, (void **)&qword_1004F8750, (void **)&qword_1004F8770);
}

id sub_1001CBA18(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_clearColor, &qword_1004F8778);
}

id sub_1001CBA2C(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_blackColor, &qword_1004F8780);
}

id sub_1001CBA40(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_blackColor, &qword_1004F8788);
}

id sub_1001CBA54(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_blackColor, &qword_1004F8790);
}

id sub_1001CBA68(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_blackColor, &qword_1004F8798);
}

id sub_1001CBA7C(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_clearColor, &qword_1004F87A0);
}

id sub_1001CBA90(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_blackColor, &qword_1004F87A8);
}

UIColor sub_1001CBAA4()
{
  sub_10001C99C(0, &qword_1004C5548);
  result.super.Class isa = UIColor.init(argb:)(0x157D7D7Du).super.isa;
  qword_1004F87B0 = (uint64_t)result.super.isa;
  return result;
}

id sub_1001CBAF0(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_clearColor, &qword_1004F87B8);
}

void sub_1001CBB04(uint64_t a1)
{
}

id sub_1001CBB18(uint64_t a1)
{
  return sub_1001CC434(a1, &qword_1004C2FD0, (void **)&qword_1004F87C0, (void **)&qword_1004F87C8);
}

id sub_1001CBB44(uint64_t a1)
{
  return sub_1001CC434(a1, &qword_1004C2FD0, (void **)&qword_1004F87C0, (void **)&qword_1004F87D0);
}

id sub_1001CBB70(uint64_t a1)
{
  return sub_1001CC434(a1, &qword_1004C2FD0, (void **)&qword_1004F87C0, (void **)&qword_1004F87D8);
}

id sub_1001CBB9C(uint64_t a1)
{
  return sub_1001CC434(a1, &qword_1004C2FD0, (void **)&qword_1004F87C0, (void **)&qword_1004F87E0);
}

id sub_1001CBBC8(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_blackColor, &qword_1004F87E8);
}

id sub_1001CBBDC(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_blackColor, &qword_1004F87F0);
}

id sub_1001CBBF0(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_blackColor, &qword_1004F87F8);
}

id sub_1001CBC04(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_blackColor, &qword_1004F8800);
}

id sub_1001CBC18(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_blackColor, &qword_1004F8808);
}

id sub_1001CBC2C(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_blackColor, &qword_1004F8810);
}

void sub_1001CBC40()
{
  double v0 = self;
  id v1 = [v0 systemFontOfSize:20.0 weight:UIFontWeightHeavy];
  id v2 = [v1 fontDescriptor];
  id v3 = sub_100200654();
  id v4 = [v0 fontWithDescriptor:v3 size:0.0];

  qword_1004F8818 = (uint64_t)v4;
}

double sub_1001CBCF4()
{
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if (static UIDevice.isIPad()())
  {
    double v0 = 1.4;
  }
  else
  {
    static UIDevice.isIPhone()();
    double v0 = 0.95;
  }
  double result = v0;
  qword_1004F8820 = *(void *)&v0;
  return result;
}

double sub_1001CBD58()
{
  if (qword_1004C3030 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1004F8820;
  qword_1004F8828 = qword_1004F8820;
  return result;
}

double sub_1001CBDAC()
{
  if (qword_1004C3030 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1004F8820 * 1.55;
  *(double *)&qword_1004F8830 = *(double *)&qword_1004F8820 * 1.55;
  return result;
}

double sub_1001CBE0C()
{
  if (qword_1004C3040 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1004F8830 * 0.92;
  *(double *)&qword_1004F8838 = *(double *)&qword_1004F8830 * 0.92;
  return result;
}

uint64_t sub_1001CBE6C()
{
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  uint64_t result = static UIDevice.isIPad()();
  if (result)
  {
    long long v1 = xmmword_100403040;
  }
  else
  {
    uint64_t result = static UIDevice.isIPhone()();
    long long v1 = xmmword_100403050;
  }
  xmmword_1004F8840 = v1;
  return result;
}

uint64_t sub_1001CBECC()
{
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  uint64_t result = static UIDevice.isIPad()();
  double v1 = -18.0;
  if ((result & 1) == 0)
  {
    uint64_t result = static UIDevice.isIPhone()();
    double v1 = -12.0;
  }
  qword_1004F8850 = 0;
  qword_1004F8858 = *(void *)&v1;
  return result;
}

double sub_1001CBF28()
{
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if (static UIDevice.isIPad()())
  {
    double v0 = 267.0;
  }
  else
  {
    static UIDevice.isIPhone()();
    double v0 = 149.0;
  }
  double result = v0;
  qword_1004F8860 = *(void *)&v0;
  qword_1004F8868 = 0;
  return result;
}

double sub_1001CBF94()
{
  double result = -35.0;
  xmmword_1004F8870 = xmmword_100403060;
  return result;
}

double sub_1001CBFA8()
{
  if (qword_1004C3060 != -1) {
    swift_once();
  }
  double v0 = *(double *)&qword_1004F8860;
  if (qword_1004C3068 != -1) {
    swift_once();
  }
  double result = v0 - *(double *)&xmmword_1004F8870;
  *(double *)&qword_1004F8880 = v0 - *(double *)&xmmword_1004F8870;
  return result;
}

uint64_t sub_1001CC040()
{
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  uint64_t result = static UIDevice.isIPad()();
  double v1 = 5.0;
  if ((result & 1) == 0)
  {
    uint64_t result = static UIDevice.isIPhone()();
    double v1 = 4.0;
  }
  qword_1004F8888 = *(void *)&v1;
  return result;
}

id sub_1001CC094()
{
  id result = [self systemFontOfSize:26.0 weight:UIFontWeightMedium];
  qword_1004F8890 = (uint64_t)result;
  return result;
}

id sub_1001CC0E0(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_redColor, &qword_1004F8898);
}

uint64_t sub_1001CC0F4()
{
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  uint64_t result = static UIDevice.isIPad()();
  if ((result & 1) != 0 || (uint64_t result = static UIDevice.isIPhone()(), (result & 1) == 0))
  {
    uint64_t v1 = 20;
  }
  else
  {
    uint64_t result = (uint64_t)[self jasperAvailable];
    uint64_t v1 = 20;
    if (result) {
      uint64_t v1 = 18;
    }
  }
  qword_1004F88A0 = v1;
  return result;
}

uint64_t sub_1001CC174()
{
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  uint64_t result = static UIDevice.isIPad()();
  uint64_t v1 = 0;
  if ((result & 1) == 0)
  {
    uint64_t result = static UIDevice.isIPhone()();
    uint64_t v1 = -15;
    if (result)
    {
      uint64_t result = (uint64_t)[self jasperAvailable];
      if (result) {
        uint64_t v1 = 70;
      }
    }
  }
  qword_1004F88A8 = v1;
  return result;
}

id sub_1001CC1F0()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithWhite:1.0 alpha:0.0];
  qword_1004F88B0 = (uint64_t)result;
  return result;
}

id sub_1001CC22C()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithWhite:1.0 alpha:0.0];
  qword_1004F88B8 = (uint64_t)result;
  return result;
}

void sub_1001CC268()
{
  id v0 = [self systemBackgroundColor];
  id v1 = sub_100081B28(0, 1, 1);

  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if (static UIDevice.isIPad()() & 1) != 0 || (static UIDevice.isIPhone()())
  {
    unsigned int v2 = [self jasperAvailable];
    double v3 = 0.4;
    if (v2) {
      double v3 = 1.0;
    }
  }
  else
  {
    double v3 = 0.4;
  }
  id v4 = [v1 colorWithAlphaComponent:v3];

  qword_1004F88C0 = (uint64_t)v4;
}

id sub_1001CC350()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithWhite:1.0 alpha:0.0];
  qword_1004F88C8 = (uint64_t)result;
  return result;
}

void sub_1001CC38C(uint64_t a1)
{
}

void sub_1001CC3A0(uint64_t a1, SEL *a2, void *a3)
{
  id v4 = [self *a2];
  id v5 = sub_100081B28(0, 1, 1);

  *a3 = v5;
}

id sub_1001CC408(uint64_t a1)
{
  return sub_1001CC434(a1, &qword_1004C30C0, (void **)&qword_1004F88D0, (void **)&qword_1004F88D8);
}

id sub_1001CC434(uint64_t a1, void *a2, void **a3, void **a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  id v6 = *a3;
  *a4 = *a3;

  return v6;
}

uint64_t sub_1001CC48C()
{
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if (static UIDevice.isIPad()())
  {
    int v0 = 1066192077;
  }
  else
  {
    uint64_t result = static UIDevice.isIPhone()();
    if ((result & 1) == 0)
    {
      float v3 = 0.55;
      goto LABEL_9;
    }
    int v0 = 1060320051;
  }
  float v2 = *(float *)&v0;
  uint64_t result = (uint64_t)[self jasperAvailable];
  float v3 = 0.55;
  if (result) {
    float v3 = v2;
  }
LABEL_9:
  dword_1004F88E0 = LODWORD(v3);
  return result;
}

uint64_t sub_1001CC538()
{
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if (static UIDevice.isIPad()() & 1) != 0 || (uint64_t result = static UIDevice.isIPhone()(), (result))
  {
    uint64_t result = (uint64_t)[self jasperAvailable];
    float v1 = 125.0;
    if (result) {
      float v1 = 130.0;
    }
  }
  else
  {
    float v1 = 125.0;
  }
  dword_1004F88E4 = LODWORD(v1);
  return result;
}

float sub_1001CC5C4()
{
  if (qword_1004C30D8 != -1) {
    swift_once();
  }
  float v0 = *(float *)&dword_1004F88E4;
  if (qword_1004C30D0 != -1) {
    swift_once();
  }
  float result = v0 * *(float *)&dword_1004F88E0;
  *(float *)&dword_1004F88E8 = v0 * *(float *)&dword_1004F88E0;
  return result;
}

float sub_1001CC65C()
{
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if (static UIDevice.isIPad()() & 1) != 0 || (float v0 = 4.0, (static UIDevice.isIPhone()()))
  {
    if ([self jasperAvailable]) {
      float v0 = 6.0;
    }
    else {
      float v0 = 4.0;
    }
  }
  if (qword_1004C30D0 != -1) {
    swift_once();
  }
  float result = v0 * *(float *)&dword_1004F88E0;
  *(float *)&dword_1004F88EC = v0 * *(float *)&dword_1004F88E0;
  return result;
}

float sub_1001CC71C(float a1)
{
  BOOL v1 = a1 < 1.0;
  float v2 = 1.0 / a1;
  float result = (float)(2.5 - (float)(a1 + a1)) + (float)((float)(a1 * a1) * 0.5);
  if (!v1) {
    return v2;
  }
  return result;
}

float sub_1001CC74C(float a1)
{
  return 1.0 / a1;
}

id sub_1001CC758()
{
  id result = [self jasperAvailable];
  BOOL v1 = sub_1001CC74C;
  if (result) {
    BOOL v1 = sub_1001CC71C;
  }
  qword_1004F88F0 = (uint64_t)v1;
  *(void *)algn_1004F88F8 = 0;
  return result;
}

float sub_1001CC7BC()
{
  if (qword_1004C30E0 != -1) {
    swift_once();
  }
  float v0 = *(float *)&dword_1004F88E8;
  if (qword_1004C30E8 != -1) {
    swift_once();
  }
  float result = (float)(v0 * 0.5) - (float)(*(float *)&dword_1004F88EC * 0.5);
  *(float *)&dword_1004F8900 = result;
  return result;
}

uint64_t sub_1001CC860()
{
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if (static UIDevice.isIPad()() & 1) != 0 || (result = static UIDevice.isIPhone()(), double v1 = 7.5, (result))
  {
    uint64_t result = (uint64_t)[self jasperAvailable];
    double v1 = 7.5;
    if (result) {
      double v1 = 13.0;
    }
  }
  qword_1004F8908 = *(void *)&v1;
  return result;
}

uint64_t sub_1001CC8DC()
{
  if (qword_1004C30D0 != -1) {
    swift_once();
  }
  float v0 = *(float *)&dword_1004F88E0;
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if (static UIDevice.isIPad()() & 1) != 0 || (result = static UIDevice.isIPhone()(), float v2 = 2.0, (result))
  {
    float v3 = v0 * 3.0;
    uint64_t result = (uint64_t)[self jasperAvailable];
    float v2 = 2.0;
    if (result) {
      float v2 = v3;
    }
  }
  dword_1004F8910 = LODWORD(v2);
  return result;
}

void sub_1001CC99C()
{
  qword_1004F8918 = (uint64_t)&off_100485A88;
}

void sub_1001CC9B0()
{
  qword_1004F8920 = (uint64_t)&off_100485950;
}

void sub_1001CC9C4()
{
  qword_1004F8928 = (uint64_t)&off_100485BC0;
}

void sub_1001CC9D8()
{
  id v0 = [self whiteColor];
  id v1 = [v0 colorWithAlphaComponent:0.7];

  qword_1004F8930 = (uint64_t)v1;
}

void sub_1001CCA48()
{
  sub_1001CCA68();
  qword_1004F8938 = v0;
}

void sub_1001CCA68()
{
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1003F9450;
  id v1 = self;
  id v2 = [v1 blackColor];
  float v3 = self;
  id v4 = [v3 effectCompositingColor:v2 withMode:0 alpha:0.55];

  if (!v4)
  {
    __break(1u);
    goto LABEL_6;
  }
  *(void *)(v0 + 32) = v4;
  id v5 = [v1 whiteColor];
  id v6 = [v3 effectCompositingColor:v5 withMode:0 alpha:0.14];

  if (!v6)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(void *)(v0 + 40) = v6;
  id v7 = [self mainScreen];
  UIRoundToScreenScale();
  double v9 = v8;

  id v10 = [self effectWithBlurRadius:v9];
  if (v10)
  {
    *(void *)(v0 + 48) = v10;
    *(void *)(v0 + 56) = [self colorEffectSaturate:1.8];
    specialized Array._endMutation()();
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1001CCC38()
{
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  char v0 = static UIDevice.isIPad()();
  uint64_t v1 = 0;
  if ((v0 & 1) == 0)
  {
    if (static UIDevice.isIPhone()())
    {
      id v2 = [self mainScreen];
      [v2 _peripheryInsets];
      double v4 = v3;
      double v6 = v5;
      double v8 = v7;
      double v10 = v9;

      if (v4 == UIEdgeInsetsZero.top && v6 == UIEdgeInsetsZero.left && v8 == UIEdgeInsetsZero.bottom)
      {
        uint64_t v1 = 83;
        if (v10 == UIEdgeInsetsZero.right) {
          uint64_t v1 = 49;
        }
      }
      else
      {
        uint64_t v1 = 83;
      }
    }
    else
    {
      uint64_t v1 = 49;
    }
  }
  qword_1004D1110 = v1;
}

float sub_1001CCD24()
{
  if (qword_1004C3138 != -1) {
    swift_once();
  }
  float result = ARCoachingResetButtonPortraitVerticalOffset + (float)qword_1004D1110;
  *(float *)&dword_1004F8940 = result;
  return result;
}

float sub_1001CCD8C()
{
  float result = ARCoachingResetButtonLandscapeVerticalOffset;
  dword_1004F8944 = ARCoachingResetButtonLandscapeVerticalOffset;
  return result;
}

uint64_t sub_1001CCDA4()
{
  if (qword_1004C2E88 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1004F8668;
  if (qword_1004C2E80 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1004F8660;
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  uint64_t result = static UIDevice.isIPad()();
  if ((result & 1) == 0)
  {
    uint64_t result = static UIDevice.isIPhone()();
    uint64_t v0 = v1;
  }
  qword_1004F8948 = v0;
  return result;
}

uint64_t sub_1001CCE6C()
{
  if (qword_1004C2E88 != -1) {
    swift_once();
  }
  double v0 = *(double *)&qword_1004F8668;
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  uint64_t result = static UIDevice.isIPad()();
  if ((result & 1) == 0)
  {
    double v0 = v0 + 47.0 + 18.0;
    uint64_t result = static UIDevice.isIPhone()();
  }
  qword_1004F8950 = *(void *)&v0;
  return result;
}

uint64_t sub_1001CCF10()
{
  if (qword_1004C3190 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1004F8988;
  if (qword_1004C3188 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1004F8980;
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  uint64_t result = static UIDevice.isIPad()();
  if ((result & 1) == 0)
  {
    uint64_t result = static UIDevice.isIPhone()();
    uint64_t v0 = v1;
  }
  qword_1004F8958 = v0;
  return result;
}

uint64_t sub_1001CCFD8()
{
  if (qword_1004C3188 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1004F8980;
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  uint64_t result = static UIDevice.isIPad()();
  if ((result & 1) == 0) {
    uint64_t result = static UIDevice.isIPhone()();
  }
  qword_1004F8960 = v0;
  return result;
}

double sub_1001CD064()
{
  if (qword_1004C3198 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1004F8990;
  qword_1004F8968 = qword_1004F8990;
  return result;
}

uint64_t sub_1001CD0B8()
{
  if (qword_1004C31A0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1004F8998;
  if (qword_1004C3198 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1004F8990;
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  uint64_t result = static UIDevice.isIPad()();
  if ((result & 1) == 0)
  {
    uint64_t result = static UIDevice.isIPhone()();
    uint64_t v0 = v1;
  }
  qword_1004F8970 = v0;
  return result;
}

double sub_1001CD180()
{
  if (qword_1004C2E78 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1004F8658 * 0.5 + 6.0;
  *(double *)&qword_1004F8978 = result;
  return result;
}

double sub_1001CD1E4()
{
  double result = 0.0078125;
  qword_1004F8980 = 0x3F80000000000000;
  return result;
}

float32x2_t sub_1001CD1F8(uint64_t a1)
{
  return sub_1001CD264(a1, &qword_1004C3188, (float32x2_t *)&qword_1004F8980, (float32x2_t *)&qword_1004F8988);
}

double sub_1001CD224()
{
  *(void *)&double result = 1065353216;
  qword_1004F8990 = 1065353216;
  return result;
}

float32x2_t sub_1001CD238(uint64_t a1)
{
  return sub_1001CD264(a1, &qword_1004C3198, (float32x2_t *)&qword_1004F8990, (float32x2_t *)&qword_1004F8998);
}

float32x2_t sub_1001CD264(uint64_t a1, void *a2, float32x2_t *a3, float32x2_t *a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  float32x2_t result = vsub_f32(0, *a3);
  *a4 = result;
  return result;
}

id sub_1001CD2B4()
{
  id result = [self systemBackgroundColor];
  qword_1004F89A0 = (uint64_t)result;
  *(void *)algn_1004F89A8 = 0;
  byte_1004F89B0 = 1;
  qword_1004F89B8 = 1;
  byte_1004F89C0 = 0;
  return result;
}

id sub_1001CD304()
{
  id result = [self systemBackgroundColor];
  qword_1004F89C8 = (uint64_t)result;
  unk_1004F89D0 = 0;
  byte_1004F89D8 = 1;
  qword_1004F89E0 = 0;
  byte_1004F89E8 = 1;
  return result;
}

id sub_1001CD354()
{
  id result = [self labelColor];
  qword_1004F89F0 = (uint64_t)result;
  *(void *)algn_1004F89F8 = 0;
  byte_1004F8A00 = 1;
  qword_1004F8A08 = 0;
  byte_1004F8A10 = 0;
  return result;
}

id sub_1001CD3A4()
{
  id result = [self labelColor];
  qword_1004F8A18 = (uint64_t)result;
  unk_1004F8A20 = 0;
  byte_1004F8A28 = 1;
  qword_1004F8A30 = 0;
  byte_1004F8A38 = 1;
  return result;
}

id sub_1001CD3F4()
{
  id result = [self secondaryLabelColor];
  qword_1004F8A40 = (uint64_t)result;
  *(void *)algn_1004F8A48 = 0;
  byte_1004F8A50 = 1;
  qword_1004F8A58 = 0;
  byte_1004F8A60 = 1;
  return result;
}

id sub_1001CD444()
{
  id result = [self separatorColor];
  qword_1004F8A68 = (uint64_t)result;
  unk_1004F8A70 = 0;
  byte_1004F8A78 = 1;
  qword_1004F8A80 = 0;
  byte_1004F8A88 = 1;
  return result;
}

void sub_1001CD494()
{
  if (qword_1004C2EF8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1004F86E8;
  if (qword_1004C27C8 != -1) {
    swift_once();
  }
  UIContentSizeCategory v1 = (UIContentSizeCategory)(id)qword_1004F7DD8;
  char v2 = static UIContentSizeCategory.> infix(_:_:)();

  if (v2)
  {

    UIContentSizeCategory v1 = UIContentSizeCategoryAccessibilityLarge;
  }
  double v3 = self;
  double v4 = self;
  id v5 = [v4 traitCollectionWithPreferredContentSizeCategory:v1];

  id v6 = [v3 preferredFontForTextStyle:v0 compatibleWithTraitCollection:v5];
  id v7 = [v6 fontDescriptor];

  id v8 = [v7 fontDescriptorWithSymbolicTraits:2];
  if (v8)
  {
    uint64_t v9 = qword_1004F86E8;
    UIContentSizeCategory v10 = (UIContentSizeCategory)(id)qword_1004F7DD8;
    char v11 = static UIContentSizeCategory.> infix(_:_:)();

    if (v11)
    {

      UIContentSizeCategory v10 = UIContentSizeCategoryAccessibilityLarge;
    }
    id v12 = [v4 traitCollectionWithPreferredContentSizeCategory:v10];

    id v13 = [v3 preferredFontForTextStyle:v9 compatibleWithTraitCollection:v12];
    [v13 pointSize];
    double v15 = v14;

    id v16 = [self mainScreen];
    [v16 scale];
    double v18 = v17;

    id v19 = [v3 fontWithDescriptor:v8 size:v15 * v18];
    id v20 = [v19 fontDescriptor];
    id v21 = sub_100200654();
    [v3 fontWithDescriptor:v21 size:0.0];
  }
  else
  {
    __break(1u);
  }
}

void sub_1001CD778()
{
  id v0 = [self preferredFontForTextStyle:UIFontTextStyleTitle1];
  id v1 = [v0 fontDescriptor];

  id v2 = [v1 fontDescriptorWithSymbolicTraits:2];
  if (v2)
  {
    sub_100012894(&qword_1004D1118);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1003F87F0;
    *(void *)(inited + 32) = UIFontDescriptorTraitsAttribute;
    sub_100012894(&qword_1004D1120);
    uint64_t v4 = swift_initStackObject();
    *(_OWORD *)(v4 + 16) = xmmword_1003F87F0;
    *(void *)(v4 + 32) = UIFontWeightTrait;
    *(UIFontWeight *)(v4 + 40) = UIFontWeightMedium;
    id v5 = UIFontDescriptorTraitsAttribute;
    id v6 = UIFontWeightTrait;
    unint64_t v7 = sub_1000E0FA8(v4);
    *(void *)(inited + 64) = sub_100012894(&qword_1004D1128);
    *(void *)(inited + 40) = v7;
    sub_1000E10B4(inited);
    type metadata accessor for AttributeName(0);
    sub_1001CD934();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v2 fontDescriptorByAddingAttributes:isa];
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1001CD934()
{
  unint64_t result = qword_1004C39C0;
  if (!qword_1004C39C0)
  {
    type metadata accessor for AttributeName(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C39C0);
  }
  return result;
}

id sub_1001CD98C()
{
  if (qword_1004C2EF8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1004F86E8;
  if (qword_1004C27C8 != -1) {
    swift_once();
  }
  UIContentSizeCategory v1 = (UIContentSizeCategory)(id)qword_1004F7DD8;
  char v2 = static UIContentSizeCategory.> infix(_:_:)();

  if (v2)
  {

    UIContentSizeCategory v1 = UIContentSizeCategoryAccessibilityLarge;
  }
  double v3 = self;
  id v4 = [self traitCollectionWithPreferredContentSizeCategory:v1];

  id v5 = [v3 preferredFontForTextStyle:v0 compatibleWithTraitCollection:v4];
  id v6 = [v5 fontDescriptor];
  sub_100012894(&qword_1004D1118);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003F87F0;
  *(void *)(inited + 32) = UIFontDescriptorTraitsAttribute;
  sub_100012894(&qword_1004D1120);
  uint64_t v8 = swift_initStackObject();
  *(_OWORD *)(v8 + 16) = xmmword_1003F87F0;
  *(void *)(v8 + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(v8 + 40) = UIFontWeightThin;
  uint64_t v9 = UIFontDescriptorTraitsAttribute;
  UIContentSizeCategory v10 = UIFontWeightTrait;
  unint64_t v11 = sub_1000E0FA8(v8);
  *(void *)(inited + 64) = sub_100012894(&qword_1004D1128);
  *(void *)(inited + 40) = v11;
  sub_1000E10B4(inited);
  type metadata accessor for AttributeName(0);
  sub_1001CD934();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v13 = [v6 fontDescriptorByAddingAttributes:isa];

  [v5 pointSize];
  double v15 = v14;
  id v16 = [self mainScreen];
  [v16 scale];
  double v18 = v17;

  id v19 = [v3 fontWithDescriptor:v13 size:v15 * v18 + v15 * v18];
  return v19;
}

id sub_1001CDC84@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 kPersonHeightCoachingEnabled];
  *a2 = (_BYTE)result;
  return result;
}

id sub_1001CDCB8(unsigned __int8 *a1, id *a2)
{
  return [*a2 setKPersonHeightCoachingEnabled:*a1];
}

uint64_t sub_1001CDCCC()
{
  swift_retain();
  StateValue.ifUpdated(_:)();

  return swift_release();
}

uint64_t sub_1001CDD28()
{
  void (*v18)(unint64_t *__return_ptr, uint64_t);
  uint64_t v19;
  void (*v20)(unint64_t *__return_ptr, uint64_t);
  uint64_t v21;
  unint64_t v22;
  uint64_t (*v23)(unint64_t *);
  void (*v24)(unint64_t *, void);
  unsigned char *v25;
  uint64_t (*v27)(unsigned char *);
  void (*v28)(unsigned char *, void);
  unsigned char *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  double v34;
  double v35;
  void (*v36)(char *, uint64_t);
  char v37;
  uint64_t (*v38)(unint64_t *);
  char *v39;
  void (*v40)(unint64_t *, void);
  char v41;
  uint64_t (*v42)(unint64_t *);
  unint64_t *v43;
  BOOL v44;
  BOOL v45;
  uint64_t v46;
  uint64_t (*v47)(void *);
  unsigned char *v48;
  uint64_t v49;
  char *v50;
  double v51;
  double v52;
  void (*v53)(char *, uint64_t);
  uint64_t (*v54)(void *);
  unsigned char *v55;
  uint64_t (*v56)(void *);
  unsigned char *v57;
  BOOL v58;
  BOOL v59;
  uint64_t (*v60)(unsigned char *);
  void (*v61)(unsigned char *, void);
  unsigned char *v62;
  uint64_t v63;
  unsigned int (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  char *v66;
  unsigned char v67[32];
  void v68[8];
  unint64_t v69[68];
  unsigned char v70[531];
  void v71[3];
  uint64_t v72;

  uint64_t v1 = v0;
  uint64_t v2 = sub_100012894((uint64_t *)&unk_1004C68F0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  id v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  unint64_t v7 = (char *)&v63 - v6;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  id v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  double v15 = (char *)&v63 - v14;
  __chkstk_darwin(v13);
  double v17 = (char *)&v63 - v16;
  swift_beginAccess();
  sub_1000735DC(v0 + 64, (uint64_t)v70, qword_1004C6B68);
  if (!*(void *)&v70[24]) {
    return sub_10002B9C0((uint64_t)v70, qword_1004C6B68);
  }
  uint64_t v66 = v12;
  sub_100021C48((long long *)v70, (uint64_t)v71);
  if (*(unsigned char *)(v0 + 128) != 1)
  {
    char v27 = *(uint64_t (**)(unsigned char *))(**(void **)(v0 + 104) + 400);
    swift_retain();
    long long v28 = (void (*)(unsigned char *, void))v27(v70);
    *int64_t v29 = 0;
    v28(v70, 0);
LABEL_29:
    swift_release();
    return sub_100013218((uint64_t)v71);
  }
  id v65 = v9;
  double v18 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(*sub_1000131D4(v71, v72)
                                                                                     + qword_1004C6388)
                                                                       + 144);
  id v19 = swift_retain();
  v18(v69, v19);
  swift_release();
  memcpy(v70, v69, sizeof(v70));
  sub_1000732CC((uint64_t)v70);
  id v20 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v0 + 120) + 144);
  id v21 = swift_retain();
  v20(v69, v21);
  swift_release();
  long long v22 = v69[0];
  if (v69[0] >> 62 == 2)
  {
    char v23 = *(uint64_t (**)(unint64_t *))(**(void **)(v0 + 104) + 400);
    swift_retain();
    long long v24 = (void (*)(unint64_t *, void))v23(v69);
    *long long v25 = 0;
    v24(v69, 0);
    swift_release();
    sub_10001F780(v22);
    return sub_100013218((uint64_t)v71);
  }
  sub_10001F780(v69[0]);
  long long v30 = v70[456];
  long long v31 = *sub_1000131D4(v71, v72) + qword_1004C6458;
  swift_beginAccess();
  sub_1000735DC(v31, (uint64_t)v7, (uint64_t *)&unk_1004C68F0);
  long long v32 = v65;
  long long v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
  id v63 = v65 + 48;
  id v64 = v33;
  if (v33(v7, 1, v8) == 1)
  {
    sub_10002B9C0((uint64_t)v7, (uint64_t *)&unk_1004C68F0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v17, v7, v8);
    Date.init()();
    Date.timeIntervalSince(_:)();
    long long v35 = v34;
    char v36 = *(void (**)(char *, uint64_t))(v32 + 8);
    v36(v15, v8);
    v36(v17, v8);
    if (v35 < 0.5) {
      uint64_t v37 = v30;
    }
    else {
      uint64_t v37 = 0;
    }
    if (v37)
    {
      NSString v38 = *(uint64_t (**)(unint64_t *))(**(void **)(v1 + 104) + 400);
      swift_retain();
      id v40 = (void (*)(unint64_t *, void))v38(v69);
      uint64_t v41 = 4;
LABEL_16:
      *char v39 = v41;
      id v43 = v69;
LABEL_28:
      v40(v43, 0);
      goto LABEL_29;
    }
  }
  sub_1000131D4(v71, v72);
  if ((sub_1000643EC() & v30) == 1)
  {
    uint64_t v42 = *(uint64_t (**)(unint64_t *))(**(void **)(v1 + 104) + 400);
    swift_retain();
    id v40 = (void (*)(unint64_t *, void))v42(v69);
    uint64_t v41 = 1;
    goto LABEL_16;
  }
  sub_1000131D4(v71, v72);
  uint64_t v44 = sub_1000642B0(0);
  sub_10002B8B4((uint64_t)v71, (uint64_t)v69);
  if (!v44)
  {
    sub_100013218((uint64_t)v69);
    uint64_t v46 = v65;
LABEL_22:
    id v49 = *sub_1000131D4(v71, v72) + qword_1004C6460;
    swift_beginAccess();
    sub_1000735DC(v49, (uint64_t)v5, (uint64_t *)&unk_1004C68F0);
    if (v64(v5, 1, v8) == 1)
    {
      sub_10002B9C0((uint64_t)v5, (uint64_t *)&unk_1004C68F0);
    }
    else
    {
      uint64_t v50 = v66;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v66, v5, v8);
      Date.init()();
      Date.timeIntervalSince(_:)();
      Swift::String v52 = v51;
      NSString v53 = *(void (**)(char *, uint64_t))(v46 + 8);
      v53(v15, v8);
      v53(v50, v8);
      if (v52 > 0.5)
      {
        uint64_t v54 = *(uint64_t (**)(void *))(**(void **)(v1 + 104) + 400);
        swift_retain();
        id v40 = (void (*)(unint64_t *, void))v54(v68);
        *NSString v55 = 3;
        goto LABEL_27;
      }
    }
    uint64_t v56 = *(uint64_t (**)(void *))(**(void **)(v1 + 104) + 400);
    swift_retain();
    id v40 = (void (*)(unint64_t *, void))v56(v68);
    void *v57 = 0;
    goto LABEL_27;
  }
  sub_1000131D4(v69, v69[3]);
  id v45 = sub_100064744(0.0);
  sub_100013218((uint64_t)v69);
  uint64_t v46 = v65;
  if ((v45 | v30 ^ 1)) {
    goto LABEL_22;
  }
  sub_1000131D4(v71, v72);
  type metadata accessor for PersonHeightInstrument();
  if (sub_10006BEF0(0.0))
  {
    id v47 = *(uint64_t (**)(void *))(**(void **)(v1 + 104) + 400);
    swift_retain();
    id v40 = (void (*)(unint64_t *, void))v47(v68);
    void *v48 = 1;
LABEL_27:
    id v43 = v68;
    goto LABEL_28;
  }
  sub_1000131D4(v71, v72);
  id v58 = sub_10006BF74(0.0);
  sub_10002B8B4((uint64_t)v71, (uint64_t)v68);
  if (!v58)
  {
    sub_100013218((uint64_t)v68);
    return sub_100013218((uint64_t)v71);
  }
  sub_1000131D4(v68, v68[3]);
  uint64_t v59 = sub_10006BFF8();
  sub_100013218((uint64_t)v68);
  if (!v59)
  {
    uint64_t v60 = *(uint64_t (**)(unsigned char *))(**(void **)(v1 + 104) + 400);
    swift_retain();
    uint64_t v61 = (void (*)(unsigned char *, void))v60(v67);
    char *v62 = 2;
    v61(v67, 0);
    goto LABEL_29;
  }
  return sub_100013218((uint64_t)v71);
}

uint64_t sub_1001CE5E4()
{
  uint64_t v1 = v0;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(void *)(v0 + 96) = 0;
  sub_100012894(&qword_1004D1280);
  swift_getKeyPath();
  swift_retain();
  *(void *)(v0 + 104) = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v2 = sub_100012894(&qword_1004C7170);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1004F8630;
  id v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 272);
  swift_retain();
  *(void *)(v1 + 112) = v5(KeyPath, v4);
  uint64_t v6 = swift_getKeyPath();
  uint64_t v7 = sub_100012894((uint64_t *)&unk_1004CEA40);
  uint64_t v8 = qword_1004F8630;
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 272);
  swift_retain();
  *(void *)(v1 + 120) = v9(v6, v8);
  *(unsigned char *)(v1 + 128) = 1;
  swift_release();
  uint64_t v10 = StateObserver.init(configuration:)();
  uint64_t v11 = self;
  swift_retain();
  id v12 = [v11 standardUserDefaults];
  swift_getKeyPath();
  swift_allocObject();
  swift_weakInit();
  sub_10005536C();
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  NSUserDefaults.performOnChange<A>(to:on:action:)();

  swift_release();
  swift_release();

  swift_release();
  return v10;
}

uint64_t sub_1001CE860(char *a1)
{
  char v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + 128) = v1;
    sub_1001CDD28();
    return swift_release();
  }
  return result;
}

void sub_1001CE8C8()
{
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 64) = 0u;
  *(_OWORD *)(inited + 80) = 0u;
  *(void *)(inited + 96) = 0;
  sub_100012894(&qword_1004D1280);
  swift_getKeyPath();
  *(void *)(inited + 104) = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v1 = sub_100012894(&qword_1004C7170);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1004F8630;
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 272);
  swift_retain();
  *(void *)(inited + 112) = v4(KeyPath, v3);
  uint64_t v5 = swift_getKeyPath();
  uint64_t v6 = sub_100012894((uint64_t *)&unk_1004CEA40);
  uint64_t v7 = qword_1004F8630;
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 272);
  swift_retain();
  *(void *)(inited + 120) = v8(v5, v7);
  *(unsigned char *)(inited + 128) = 1;
  swift_release();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1001CEA58()
{
  sub_10002B9C0(v0 + 64, qword_1004C6B68);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1001CEAA0()
{
  uint64_t v0 = StateObserver.deinit();
  sub_10002B9C0(v0 + 64, qword_1004C6B68);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PersonHeightCoachingController()
{
  uint64_t result = qword_1004D1158;
  if (!qword_1004D1158) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001CEB54()
{
  return swift_initClassMetadata2();
}

id sub_1001CEBC4@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 kPersonHeightCoachingEnabled];
  *a2 = (_BYTE)result;
  return result;
}

id sub_1001CEBF8(unsigned __int8 *a1, id *a2)
{
  return [*a2 setKPersonHeightCoachingEnabled:*a1];
}

uint64_t sub_1001CEC0C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001CEC44(char *a1)
{
  return sub_1001CE860(a1);
}

uint64_t sub_1001CEC4C@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100485500, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_1001CECAC(void *a1@<X8>)
{
  *a1 = &off_100485D88;
}

uint64_t sub_1001CECBC(void *a1)
{
  id v1 = [a1 type];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10007CEE0();
  uint64_t v2 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v3 = static String._fromSubstring(_:)();
    char v5 = v4;
    swift_bridgeObjectRelease();
    v6._countAndFlagsBits = v3;
    v6._object = v5;
    Swift::Int v7 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100485500, v6);
    swift_bridgeObjectRelease();
    if (v7 == 1) {
      unsigned int v8 = 1;
    }
    else {
      unsigned int v8 = 2;
    }
    if (v7) {
      return v8;
    }
    else {
      return 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 2;
  }
}

unsigned char *storeEnumTagSinglePayload for Tab(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001CEEA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Tab()
{
  return &type metadata for Tab;
}

unint64_t sub_1001CEEE4()
{
  unint64_t result = qword_1004D1288;
  if (!qword_1004D1288)
  {
    sub_100016EF4(&qword_1004D1290);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004D1288);
  }
  return result;
}

unint64_t sub_1001CEF44()
{
  unint64_t result = qword_1004D1298;
  if (!qword_1004D1298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004D1298);
  }
  return result;
}

id sub_1001CEF98(uint64_t a1, void *a2, void *a3, void *a4)
{
  Swift::Int v7 = *(uint64_t (**)(id, id, id))(a1 + 32);
  swift_retain();
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  uint64_t v11 = (void *)v7(v8, v9, v10);
  swift_release();

  return v11;
}

void sub_1001CF038()
{
  if (qword_1004C27E0 != -1) {
    swift_once();
  }
  double v0 = *(double *)&qword_1004F7DF8;
  if (qword_1004C27D8 != -1) {
    swift_once();
  }
  double v1 = *(double *)&qword_1004F7DF0;
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  char v2 = static UIDevice.isIPhone()();
  int v3 = self;
  unsigned int v4 = &selRef_systemBackgroundColor;
  if ((v2 & 1) == 0) {
    unsigned int v4 = &selRef_clearColor;
  }
  id v5 = [v3 *v4];
  if (qword_1004C2ED0 != -1) {
    swift_once();
  }
  id v6 = (id)qword_1004F86B0;
  char v7 = static UIDevice.isIPhone()();
  double v8 = 16.0;
  if (v7)
  {
    if (qword_1004C2840 != -1) {
      swift_once();
    }
    double v8 = *(double *)&qword_1004F7E70;
  }
  id v9 = sub_100043284(v5, v6, 0.0, 0.0, v0, v1, v8);
  aBlock[4] = sub_1001CF65C;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001CEF98;
  aBlock[3] = &unk_100492BA0;
  id v10 = _Block_copy(aBlock);
  id v11 = v9;
  [v11 setPointerStyleProvider:v10];
  _Block_release(v10);

  id v12 = self;
  id v13 = v11;
  id v14 = [v12 mainBundle];
  v42._object = (void *)0xE000000000000000;
  v15._object = (void *)0x8000000100423F90;
  v15._countAndFlagsBits = 0xD000000000000010;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v42._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v42);

  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v13 setTitle:v17 forState:0];

  uint64_t v18 = qword_1004C2EC0;
  id v19 = v13;
  if (v18 != -1) {
    swift_once();
  }
  [v19 setTitleColor:qword_1004F86A0 forState:0];

  uint64_t v20 = qword_1004C2EC8;
  id v21 = v19;
  if (v20 != -1) {
    swift_once();
  }
  [v21 setTitleColor:qword_1004F86A8 forState:1];

  id v22 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleHeadline];
  id v23 = [v21 titleLabel];
  if (v23)
  {
    long long v24 = v23;
    long long v25 = self;
    id v26 = [v25 preferredFontForTextStyle:UIFontTextStyleHeadline];
    id v27 = [v26 fontDescriptor];

    id v28 = [v27 fontDescriptorWithSymbolicTraits:2];
    if (!v28)
    {
      __break(1u);
      return;
    }
    id v29 = [v25 fontWithDescriptor:v28 size:0.0];

    id v30 = [v22 scaledFontForFont:v29 maximumPointSize:28.0];
    [v24 setFont:v30];
  }
  if (static UIDevice.isIPhone()())
  {
    long long v31 = v22;
    id v22 = v21;
  }
  else
  {
    [v21 bounds];
    id v32 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, CGRectGetWidth(v43), 0.5];
    if (qword_1004C31D0 != -1) {
      swift_once();
    }
    long long v33 = (void *)qword_1004F8A68;
    id v34 = qword_1004F8A70;
    if (byte_1004F8A78)
    {
      char v35 = byte_1004F8A88;
      uint64_t v36 = qword_1004F8A80;
      char v37 = byte_1004D2600;
      id v38 = (id)qword_1004F8A68;
      id v39 = sub_100081B28(v37, v36, v35);
      sub_1000286C0(v33, v34, 1);
    }
    else
    {
      if (byte_1004D2600) {
        id v40 = qword_1004F8A70;
      }
      else {
        id v40 = (id)qword_1004F8A68;
      }
      id v39 = v40;
    }
    [v32 setBackgroundColor:v39];

    [v21 addSubview:v32];
    long long v31 = v21;
  }
}

uint64_t sub_1001CF65C(uint64_t a1)
{
  uint64_t v2 = sub_100012894(&qword_1004C78A0);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UIPointerEffect();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (uint64_t *)((char *)&v21 - v10);
  id v12 = (int *)sub_100012894(&qword_1004CEF48);
  id v13 = (char *)v11 + v12[12];
  uint64_t v14 = v12[16];
  uint64_t v15 = v12[20];
  *id v11 = [objc_allocWithZone((Class)UITargetedPreview) initWithView:a1];
  uint64_t v16 = enum case for UIPointerEffect.TintMode.overlay(_:);
  uint64_t v17 = type metadata accessor for UIPointerEffect.TintMode();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v13, v16, v17);
  *((unsigned char *)v11 + v14) = 0;
  *((unsigned char *)v11 + v15) = 0;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v11, enum case for UIPointerEffect.hover(_:), v5);
  sub_10001C99C(0, (unint64_t *)&qword_1004C78A8);
  (*(void (**)(char *, void *, uint64_t))(v6 + 16))(v9, v11, v5);
  uint64_t v18 = type metadata accessor for UIPointerShape();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
  uint64_t v19 = UIPointerStyle.init(effect:shape:)();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v11, v5);
  return v19;
}

uint64_t type metadata accessor for PlatterCopyButton()
{
  return self;
}

uint64_t sub_1001CFA18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001CFA28()
{
  return swift_release();
}

void sub_1001CFA30(long long *a1)
{
  uint64_t v2 = *((void *)a1 + 5);
  uint64_t v3 = *((void *)a1 + 6);
  uint64_t v4 = *((void *)a1 + 7);
  uint64_t v5 = *((void *)a1 + 8);
  uint64_t v6 = *((void *)a1 + 10);
  uint64_t v7 = *((void *)a1 + 11);
  uint64_t v8 = *((void *)a1 + 12);
  uint64_t v65 = *((void *)a1 + 13);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v10 = (void *)Strong;
  uint64_t v61 = v5;
  uint64_t v63 = v4;
  id v11 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v11)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  long long v12 = a1[1];
  long long v75 = *a1;
  *(_OWORD *)uint64_t v76 = v12;
  *(void *)&v76[14] = *(void *)((char *)a1 + 30);
  NSString v13 = String._bridgeToObjectiveC()();
  [v11 setText:v13];

  uint64_t v14 = swift_unknownObjectWeakLoadStrong();
  if (!v14)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v15 = (void *)v14;
  uint64_t v16 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v16)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  sub_100026A8C((uint64_t)v76, (uint64_t)v77);
  sub_100026A8C((uint64_t)v77, (uint64_t)v78);
  if (v78[1]) {
    NSString v17 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v17 = 0;
  }
  [v16 setAccessibilityLabel:v17];

  uint64_t v18 = swift_unknownObjectWeakLoadStrong();
  if (!v18) {
    goto LABEL_42;
  }
  uint64_t v19 = (void *)v18;
  uint64_t v20 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v20)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v75 == __PAIR128__(v7, v6)) {
    char v21 = 1;
  }
  else {
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  sub_10015E448(v6, v7, v8, v65, v2, v3, v63, v61, v21 & 1);

  uint64_t v22 = *((void *)a1 + 20);
  uint64_t v23 = *((void *)a1 + 21);
  uint64_t v24 = *((void *)a1 + 22);
  uint64_t v25 = *((void *)a1 + 23);
  uint64_t v26 = *((void *)a1 + 25);
  uint64_t v27 = *((void *)a1 + 26);
  uint64_t v28 = *((void *)a1 + 27);
  uint64_t v66 = *((void *)a1 + 28);
  uint64_t v29 = swift_unknownObjectWeakLoadStrong();
  if (!v29) {
    goto LABEL_44;
  }
  id v30 = (void *)v29;
  uint64_t v62 = v25;
  uint64_t v64 = v24;
  long long v31 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v31)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  long long v32 = *(long long *)((char *)a1 + 136);
  long long v72 = *(long long *)((char *)a1 + 120);
  v73[0] = v32;
  *(void *)((char *)v73 + 14) = *(void *)((char *)a1 + 150);
  NSString v33 = String._bridgeToObjectiveC()();
  [v31 setText:v33];

  uint64_t v34 = swift_unknownObjectWeakLoadStrong();
  if (!v34)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  char v35 = (void *)v34;
  uint64_t v36 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v36)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  sub_100026A8C((uint64_t)v73, (uint64_t)v74);
  sub_100026A8C((uint64_t)v74, (uint64_t)v79);
  if (v79[1]) {
    NSString v37 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v37 = 0;
  }
  [v36 setAccessibilityLabel:v37];

  uint64_t v38 = swift_unknownObjectWeakLoadStrong();
  if (!v38) {
    goto LABEL_48;
  }
  id v39 = (void *)v38;
  id v40 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v40)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (v72 == __PAIR128__(v27, v26)) {
    char v41 = 1;
  }
  else {
    char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  sub_10015E448(v26, v27, v28, v66, v22, v23, v64, v62, v41 & 1);

  uint64_t v42 = *((void *)a1 + 35);
  uint64_t v43 = *((void *)a1 + 36);
  uint64_t v45 = *((void *)a1 + 37);
  uint64_t v44 = *((void *)a1 + 38);
  uint64_t v46 = *((void *)a1 + 40);
  uint64_t v47 = *((void *)a1 + 41);
  uint64_t v48 = *((void *)a1 + 42);
  uint64_t v67 = *((void *)a1 + 43);
  uint64_t v49 = swift_unknownObjectWeakLoadStrong();
  if (!v49) {
    goto LABEL_50;
  }
  uint64_t v50 = (void *)v49;
  uint64_t v68 = v44;
  Swift::String v51 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v51)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  long long v69 = a1[15];
  v70[0] = a1[16];
  *(void *)((char *)v70 + 14) = *(void *)((char *)a1 + 270);
  NSString v52 = String._bridgeToObjectiveC()();
  [v51 setText:v52];

  uint64_t v53 = swift_unknownObjectWeakLoadStrong();
  if (!v53)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v54 = (void *)v53;
  NSString v55 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v55)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  sub_100026A8C((uint64_t)v70, (uint64_t)v71);
  sub_100026A8C((uint64_t)v71, (uint64_t)v80);
  if (v80[1]) {
    NSString v56 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v56 = 0;
  }
  [v55 setAccessibilityLabel:v56];

  uint64_t v57 = swift_unknownObjectWeakLoadStrong();
  if (!v57) {
    goto LABEL_54;
  }
  id v58 = (void *)v57;
  uint64_t v59 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v59)
  {
LABEL_55:
    __break(1u);
    return;
  }
  if (v69 == __PAIR128__(v47, v46)) {
    char v60 = 1;
  }
  else {
    char v60 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  sub_10015E448(v46, v47, v48, v67, v42, v43, v45, v68, v60 & 1);
}

id sub_1001CFFE4(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_fullContentHeight] = 0;
  uint64_t v7 = &v5[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_numberOfRowsChangedCallback];
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  uint64_t v8 = OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_minContentViewHeight;
  *(void *)&v5[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_minContentViewHeight] = 0x407AA00000000000;
  id v9 = self;
  uint64_t v10 = v6;
  id v11 = [v9 currentTraitCollection];
  id v12 = [v11 preferredContentSizeCategory];

  LOBYTE(v11) = UIContentSizeCategory.isAccessibilityCategory.getter();
  double v13 = 88.0;
  if (v11) {
    double v13 = 222.0;
  }
  *(double *)&v10[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_tableRowHeight] = v13;
  *(void *)&v10[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_numberOfRows] = 4;
  uint64_t v14 = OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_sketchView;
  type metadata accessor for SketchObject();
  *(void *)&v10[v14] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v15 = OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_labelStrip;
  type metadata accessor for ObjectLabelStrip();
  *(void *)&v10[v15] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v16 = OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_tableView;
  *(void *)&v10[v16] = [objc_allocWithZone((Class)UITableView) init];
  uint64_t v17 = OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial__historyState;
  uint64_t v18 = sub_100012894(&qword_1004CE600);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_1004F8630;
  char v21 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 272);
  swift_retain();
  *(void *)&v10[v17] = v21(KeyPath, v20);
  uint64_t v22 = &v10[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_measurementID];
  *(void *)uint64_t v22 = a1;
  *((void *)v22 + 1) = a2;
  uint64_t v23 = &v10[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_title];
  *(void *)uint64_t v23 = a4;
  *((void *)v23 + 1) = a5;
  uint64_t v24 = *(void *)&v6[v8];
  type metadata accessor for CardContainerView.Configuration();
  uint64_t v25 = swift_allocObject();
  swift_beginAccess();
  Published.init(initialValue:)();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v35 = v24;
  Published.init(initialValue:)();
  swift_endAccess();
  *(void *)(v25 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration_velocityThreshold) = 0x408F400000000000;
  *(void *)(v25 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration_velocityUpperThreshold) = 0x40A7700000000000;
  *(void *)&v10[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_containerConfiguration] = v25;

  v34.receiver = v10;
  v34.super_class = ObjectType;
  id v26 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_1001CFA30(a3);
  sub_1001D1940((uint64_t)a3);
  sub_1001D0378();
  sub_1001D06D0();

  return v26;
}

void sub_1001D0378()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_labelStrip];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = (void *)Strong;
  uint64_t v4 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = self;
  id v6 = [v5 mainBundle];
  v24._object = (void *)0xE000000000000000;
  v7._countAndFlagsBits = 0x4C5F5443454A424FLL;
  v7._object = (void *)0xED00004854474E45;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v24._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v24);

  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v4 setText:v9];

  uint64_t v10 = swift_unknownObjectWeakLoadStrong();
  if (!v10)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v11 = (void *)v10;
  id v12 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v12)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v13 = [v5 mainBundle];
  v25._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0x575F5443454A424FLL;
  v14._object = (void *)0xEC00000048544449;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v25._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v25);

  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 setText:v16];

  uint64_t v17 = swift_unknownObjectWeakLoadStrong();
  if (!v17)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v18 = (void *)v17;
  uint64_t v19 = (void *)swift_unknownObjectWeakLoadStrong();

  if (v19)
  {
    id v20 = [v5 mainBundle];
    v26._object = (void *)0xE000000000000000;
    v21._countAndFlagsBits = 0x485F5443454A424FLL;
    v21._object = (void *)0xED00005448474945;
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    v26._countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v26);

    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v19 setText:v23];

    [v0 setAxis:1];
    [v0 addArrangedSubview:*(void *)&v0[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_sketchView]];
    [v0 addArrangedSubview:v1];
    [v0 addArrangedSubview:*(void *)&v0[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_tableView]];
    sub_10020A720(0, 2.0, 1.0, 1.0);
    return;
  }
LABEL_13:
  __break(1u);
}

void sub_1001D06D0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_sketchView);
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v2 = [v1 heightAnchor];
  id v3 = [self currentTraitCollection];
  id v4 = [v3 preferredContentSizeCategory];

  LOBYTE(v3) = UIContentSizeCategory.isAccessibilityCategory.getter();
  double v5 = 176.0;
  if (v3) {
    double v5 = 444.0;
  }
  id v6 = [v2 constraintEqualToConstant:v5];

  [v6 setActive:1];
}

void sub_1001D0814()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  __chkstk_darwin(v1);
  id v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = 0;
  uint64_t v20 = v0;
  double v5 = *(void **)(v0 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_tableView);
  Swift::String v7 = (void (**)(char *, uint64_t))(v6 + 8);
  do
  {
    IndexPath.init(row:section:)();
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v9 = [v5 cellForRowAtIndexPath:isa];

    if (!v9) {
      goto LABEL_10;
    }
    type metadata accessor for DetailedPlatterCellTableViewCell();
    uint64_t v10 = swift_dynamicCastClass();
    if (!v10)
    {

LABEL_10:
      (*v7)(v3, v1);
      return;
    }
    ++v4;
    uint64_t v11 = *(void *)(v10 + OBJC_IVAR____TtC7Measure32DetailedPlatterCellTableViewCell_measureContent);
    [*(id *)(v11 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits) setSelectedRange:0, 0];
    uint64_t v12 = *(void *)(v11 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels);
    [*(id *)(*(void *)(v12 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];
    [*(id *)(*(void *)(v12 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];

    (*v7)(v3, v1);
  }
  while (v4 != 4);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v14 = (void *)Strong;
    sub_1000F5388();

    uint64_t v15 = swift_unknownObjectWeakLoadStrong();
    if (v15)
    {
      NSString v16 = (void *)v15;
      sub_1000F5388();

      uint64_t v17 = swift_unknownObjectWeakLoadStrong();
      if (v17)
      {
        uint64_t v18 = (void *)v17;
        sub_1000F5388();

        return;
      }
      goto LABEL_14;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_14:
  __break(1u);
}

uint64_t type metadata accessor for ObjectPlatterSpatial()
{
  return self;
}

__n128 sub_1001D0BBC@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_1001D130C(a1, (uint64_t *)v6);
  long long v3 = v6[5];
  *(_OWORD *)(a2 + 64) = v6[4];
  *(_OWORD *)(a2 + 80) = v3;
  *(_OWORD *)(a2 + 96) = v6[6];
  long long v4 = v6[1];
  *(_OWORD *)a2 = v6[0];
  *(_OWORD *)(a2 + 16) = v4;
  __n128 result = (__n128)v6[3];
  *(_OWORD *)(a2 + 32) = v6[2];
  *(__n128 *)(a2 + 48) = result;
  return result;
}

uint64_t sub_1001D0C10()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_title);
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_1001D0C4C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_tableView);
  id v2 = v1;
  return v1;
}

uint64_t sub_1001D0C7C()
{
  return swift_retain();
}

double sub_1001D0C8C()
{
  [*(id *)(v0 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_sketchView) bounds];
  double Height = CGRectGetHeight(v3);
  [*(id *)(v0 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_labelStrip) bounds];
  return Height + CGRectGetHeight(v4);
}

double sub_1001D0CEC()
{
  return *(double *)(v0 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_fullContentHeight);
}

void sub_1001D0CFC(uint64_t a1)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  double v5 = (void *)(v1 + OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_title);
  *double v5 = v4;
  v5[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for MeasurementHistoryItem();
  sub_100026A04(a1 + *(int *)(v6 + 28), (uint64_t)v9);
  sub_100026A04((uint64_t)v9, (uint64_t)v10);
  if (sub_100026A60((uint64_t)v10) == 2)
  {
    Swift::String v7 = (const void *)sub_100026A6C((uint64_t)v10);
    memcpy(__dst, v7, 0x346uLL);
    sub_1001CFA30(__dst);
  }
}

id sub_1001D0DA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MeasurementHistoryItem();
  sub_100026A04(a1 + *(int *)(v2 + 28), (uint64_t)v59);
  sub_100026A04((uint64_t)v59, (uint64_t)v60);
  id v3 = 0;
  if (sub_100026A60((uint64_t)v60) == 2)
  {
    uint64_t v4 = (uint64_t *)sub_100026A6C((uint64_t)v60);
    sub_100012894(&qword_1004CE700);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1003F87F0;
    *(void *)(v5 + 32) = NSFontAttributeName;
    uint64_t v6 = self;
    Swift::String v7 = NSFontAttributeName;
    [v6 systemFontSize];
    *(void *)(v5 + 40) = [v6 systemFontOfSize:];
    unint64_t v8 = sub_1000E1418(v5);
    swift_bridgeObjectRetain();
    sub_100026E9C(v8);
    swift_bridgeObjectRelease();
    id v9 = objc_allocWithZone((Class)NSAttributedString);
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1000278E0();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v12 = [v9 initWithString:v10 attributes:isa];

    id v3 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v12];
    sub_100012894((uint64_t *)&unk_1004D2460);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1004032E0;
    Swift::String v14 = self;
    id v15 = [v14 mainBundle];
    v61._object = (void *)0xE000000000000000;
    v16._countAndFlagsBits = 0x4C5F5443454A424FLL;
    v16._object = (void *)0xED00004854474E45;
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v61._countAndFlagsBits = 0;
    Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v61);

    *(void *)(v13 + 56) = &type metadata for String;
    unint64_t v19 = sub_10001D424();
    *(void *)(v13 + 64) = v19;
    *(Swift::String *)(v13 + 32) = v18;
    uint64_t v21 = *v4;
    uint64_t v20 = v4[1];
    uint64_t v22 = v4[5];
    uint64_t v23 = v4[6];
    uint64_t v24 = v4[10];
    uint64_t v25 = v4[11];
    *(void *)(v13 + 96) = &type metadata for String;
    *(void *)(v13 + 104) = v19;
    *(void *)(v13 + 72) = v21;
    *(void *)(v13 + 80) = v20;
    *(void *)(v13 + 136) = &type metadata for String;
    *(void *)(v13 + 144) = v19;
    *(void *)(v13 + 112) = v22;
    *(void *)(v13 + 120) = v23;
    *(void *)(v13 + 176) = &type metadata for String;
    *(void *)(v13 + 184) = v19;
    *(void *)(v13 + 152) = v24;
    *(void *)(v13 + 160) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v26 = [v14 mainBundle];
    v62._object = (void *)0xE000000000000000;
    v27._countAndFlagsBits = 0x575F5443454A424FLL;
    v27._object = (void *)0xEC00000048544449;
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    v62._countAndFlagsBits = 0;
    Swift::String v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v62);

    *(void *)(v13 + 216) = &type metadata for String;
    *(void *)(v13 + 224) = v19;
    *(Swift::String *)(v13 + 192) = v29;
    uint64_t v31 = v4[15];
    uint64_t v30 = v4[16];
    uint64_t v32 = v4[20];
    uint64_t v33 = v4[21];
    uint64_t v34 = v4[25];
    uint64_t v35 = v4[26];
    *(void *)(v13 + 256) = &type metadata for String;
    *(void *)(v13 + 264) = v19;
    *(void *)(v13 + 232) = v31;
    *(void *)(v13 + 240) = v30;
    *(void *)(v13 + 296) = &type metadata for String;
    *(void *)(v13 + 304) = v19;
    *(void *)(v13 + 272) = v32;
    *(void *)(v13 + 280) = v33;
    *(void *)(v13 + 336) = &type metadata for String;
    *(void *)(v13 + 344) = v19;
    *(void *)(v13 + 312) = v34;
    *(void *)(v13 + 320) = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v36 = [v14 mainBundle];
    v63._object = (void *)0xE000000000000000;
    v37._countAndFlagsBits = 0x485F5443454A424FLL;
    v37._object = (void *)0xED00005448474945;
    v38._countAndFlagsBits = 0;
    v38._object = (void *)0xE000000000000000;
    v63._countAndFlagsBits = 0;
    Swift::String v39 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, (Swift::String_optional)0, (NSBundle)v36, v38, v63);

    *(void *)(v13 + 376) = &type metadata for String;
    *(void *)(v13 + 384) = v19;
    *(Swift::String *)(v13 + 352) = v39;
    uint64_t v41 = v4[30];
    uint64_t v40 = v4[31];
    uint64_t v42 = v4[35];
    uint64_t v43 = v4[36];
    uint64_t v44 = v4[40];
    uint64_t v45 = v4[41];
    *(void *)(v13 + 416) = &type metadata for String;
    *(void *)(v13 + 424) = v19;
    *(void *)(v13 + 392) = v41;
    *(void *)(v13 + 400) = v40;
    *(void *)(v13 + 456) = &type metadata for String;
    *(void *)(v13 + 464) = v19;
    *(void *)(v13 + 432) = v42;
    *(void *)(v13 + 440) = v43;
    *(void *)(v13 + 496) = &type metadata for String;
    *(void *)(v13 + 504) = v19;
    *(void *)(v13 + 472) = v44;
    *(void *)(v13 + 480) = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v46 = [v14 mainBundle];
    v64._object = (void *)0xE000000000000000;
    v47._countAndFlagsBits = 0x454D554C4F56;
    v47._object = (void *)0xE600000000000000;
    v48._countAndFlagsBits = 0;
    v48._object = (void *)0xE000000000000000;
    v64._countAndFlagsBits = 0;
    Swift::String v49 = NSLocalizedString(_:tableName:bundle:value:comment:)(v47, (Swift::String_optional)0, (NSBundle)v46, v48, v64);

    *(void *)(v13 + 536) = &type metadata for String;
    *(void *)(v13 + 544) = v19;
    *(Swift::String *)(v13 + 512) = v49;
    uint64_t v51 = v4[45];
    uint64_t v50 = v4[46];
    uint64_t v52 = v4[55];
    uint64_t v53 = v4[56];
    *(void *)(v13 + 576) = &type metadata for String;
    *(void *)(v13 + 584) = v19;
    *(void *)(v13 + 552) = v51;
    *(void *)(v13 + 560) = v50;
    *(void *)(v13 + 616) = &type metadata for String;
    *(void *)(v13 + 624) = v19;
    *(void *)(v13 + 592) = v52;
    *(void *)(v13 + 600) = v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v54._countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v54);
    swift_bridgeObjectRelease();
    id v55 = objc_allocWithZone((Class)NSAttributedString);
    NSString v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v57 = [v55 initWithString:v56];

    [v3 appendAttributedString:v57];
  }
  return v3;
}

uint64_t sub_1001D130C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MeasurementHistoryItem();
  sub_100026A04(a1 + *(int *)(v4 + 28), (uint64_t)v33);
  sub_100026A04((uint64_t)v33, (uint64_t)v34);
  uint64_t result = sub_100026A60((uint64_t)v34);
  if (result == 2)
  {
    uint64_t v6 = (void *)sub_100026A6C((uint64_t)v34);
    sub_100026A04((uint64_t)v33, (uint64_t)v32);
    uint64_t v7 = sub_100026A6C((uint64_t)v32);
    sub_1001D16BC(v7);
    switch(IndexPath.item.getter())
    {
      case 0:
        id v8 = [self mainBundle];
        v35._object = (void *)0xE000000000000000;
        v9._uint64_t countAndFlagsBits = 0x454D554C4F56;
        v9._object = (void *)0xE600000000000000;
        v10._uint64_t countAndFlagsBits = 0;
        v10._object = (void *)0xE000000000000000;
        v35._uint64_t countAndFlagsBits = 0;
        Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v35);
        uint64_t countAndFlagsBits = v11._countAndFlagsBits;
        object = v11._object;

        uint64_t v15 = v6[45];
        unint64_t v14 = v6[46];
        uint64_t v17 = v6[50];
        unint64_t v16 = v6[51];
        uint64_t v19 = v6[55];
        unint64_t v18 = v6[56];
        goto LABEL_9;
      case 1:
        id v20 = [self mainBundle];
        v36._object = (void *)0xE000000000000000;
        v21._object = (void *)0x800000010042BBB0;
        v21._uint64_t countAndFlagsBits = 0xD000000000000010;
        v22._uint64_t countAndFlagsBits = 0;
        v22._object = (void *)0xE000000000000000;
        v36._uint64_t countAndFlagsBits = 0;
        Swift::String v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v36);
        uint64_t countAndFlagsBits = v23._countAndFlagsBits;
        object = v23._object;

        uint64_t v15 = v6[60];
        unint64_t v14 = v6[61];
        uint64_t v17 = v6[65];
        unint64_t v16 = v6[66];
        uint64_t v19 = v6[70];
        unint64_t v18 = v6[71];
        goto LABEL_9;
      case 2:
        id v24 = [self mainBundle];
        v25._uint64_t countAndFlagsBits = 0xD000000000000016;
        v37._object = (void *)0xE000000000000000;
        v25._object = (void *)0x800000010042BB90;
        v26._uint64_t countAndFlagsBits = 0;
        v26._object = (void *)0xE000000000000000;
        v37._uint64_t countAndFlagsBits = 0;
        Swift::String v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v37);
        uint64_t countAndFlagsBits = v27._countAndFlagsBits;
        object = v27._object;

        uint64_t v15 = v6[75];
        unint64_t v14 = v6[76];
        uint64_t v17 = v6[80];
        unint64_t v16 = v6[81];
        uint64_t v19 = v6[85];
        unint64_t v18 = v6[86];
        goto LABEL_9;
      case 3:
        id v28 = [self mainBundle];
        v29._uint64_t countAndFlagsBits = 0xD000000000000017;
        v38._object = (void *)0xE000000000000000;
        v29._object = (void *)0x800000010042BB70;
        v30._uint64_t countAndFlagsBits = 0;
        v30._object = (void *)0xE000000000000000;
        v38._uint64_t countAndFlagsBits = 0;
        Swift::String v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v38);
        uint64_t countAndFlagsBits = v31._countAndFlagsBits;
        object = v31._object;

        uint64_t v15 = v6[90];
        unint64_t v14 = v6[91];
        uint64_t v17 = v6[95];
        unint64_t v16 = v6[96];
        uint64_t v19 = v6[100];
        unint64_t v18 = v6[101];
LABEL_9:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t result = (uint64_t)sub_100027D48(v33);
        break;
      default:
        uint64_t result = (uint64_t)sub_100027D48(v33);
        uint64_t countAndFlagsBits = 0;
        uint64_t v15 = 0;
        uint64_t v17 = 0;
        uint64_t v19 = 0;
        object = (void *)0xE000000000000000;
        unint64_t v14 = 0xE000000000000000;
        unint64_t v16 = 0xE000000000000000;
        unint64_t v18 = 0xE000000000000000;
        break;
    }
  }
  else
  {
    unint64_t v18 = 0xE800000000000000;
    uint64_t v19 = 0x7374696E75627573;
    unint64_t v16 = 0xE700000000000000;
    uint64_t v17 = 0x65736963657270;
    unint64_t v14 = 0xEA00000000007374;
    uint64_t v15 = 0x696E75206E69616DLL;
    object = (void *)0xE500000000000000;
    uint64_t countAndFlagsBits = 0x656C746954;
  }
  *a2 = countAndFlagsBits;
  a2[1] = (uint64_t)object;
  a2[2] = v15;
  a2[3] = v14;
  a2[4] = 0;
  a2[5] = 0;
  a2[6] = v17;
  a2[7] = v16;
  a2[8] = 0;
  a2[9] = 0;
  a2[10] = v19;
  a2[11] = v18;
  a2[12] = 0;
  a2[13] = 0;
  return result;
}

uint64_t sub_1001D16BC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001D1940(uint64_t a1)
{
  return a1;
}

void sub_1001D1BC0()
{
  uint64_t v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_fullContentHeight] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_numberOfRowsChangedCallback];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_minContentViewHeight] = 0x407AA00000000000;
  id v3 = [self currentTraitCollection];
  id v4 = [v3 preferredContentSizeCategory];

  LOBYTE(v3) = UIContentSizeCategory.isAccessibilityCategory.getter();
  double v5 = 88.0;
  if (v3) {
    double v5 = 222.0;
  }
  *(double *)&v1[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_tableRowHeight] = v5;
  *(void *)&v1[OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_numberOfRows] = 4;
  uint64_t v6 = OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_sketchView;
  type metadata accessor for SketchObject();
  *(void *)&v1[v6] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v7 = OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_labelStrip;
  type metadata accessor for ObjectLabelStrip();
  *(void *)&v1[v7] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v8 = OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial_tableView;
  *(void *)&v1[v8] = [objc_allocWithZone((Class)UITableView) init];
  uint64_t v9 = OBJC_IVAR____TtC7Measure20ObjectPlatterSpatial__historyState;
  uint64_t v10 = sub_100012894(&qword_1004CE600);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_1004F8630;
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 272);
  swift_retain();
  *(void *)&v1[v9] = v13(KeyPath, v12);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_1001D1DDC()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D1E10()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D1E24()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D1E58()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D1E6C()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D1EA0()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D1EB4()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D1EE8()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D1EFC()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D1F30()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D1F44()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D1F78()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D1F8C()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D1FC0()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D1FD4()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D2008()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D201C()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D2050()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D2064()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D2098()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D20AC()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D20E0()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D20F4()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D2128()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D213C()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D2170()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D2184()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D21B8()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1001D21CC()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_1001D21DC()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D21F0()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D2224()
{
  return swift_unknownObjectWeakAssign();
}

Class sub_1001D2238(uint64_t a1)
{
  if (*(void *)(a1 + qword_1004D13D8))
  {
    sub_10001C99C(0, (unint64_t *)&qword_1004CA030);
    swift_bridgeObjectRetain();
    v1.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v1.super.Class isa = 0;
  }

  return v1.super.isa;
}

uint64_t sub_1001D22B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_10001C99C(0, (unint64_t *)&qword_1004CA030);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v4 = 0;
  }
  *(void *)(a1 + qword_1004D13D8) = v4;

  return swift_bridgeObjectRelease();
}

id sub_1001D2330()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D2364()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D2378()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D23AC()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1001D23C0()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_1001D23D0()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D23E4()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D2418()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D242C()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D2460()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D2474()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D24A8()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D24BC()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D24F0()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D2504()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D2538()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D254C()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D2580()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D2594()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D25C8()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D25DC()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D2610()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D2624()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D2658()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D266C()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D26A0()
{
  return swift_unknownObjectWeakAssign();
}

id sub_1001D26B4()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1001D26E8()
{
  return swift_unknownObjectWeakAssign();
}

void sub_1001D26FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v33 = (void *)(v32 + qword_1004D1458);
  *uint64_t v33 = a1;
  v33[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = (void *)(v32 + qword_1004D1460);
  *uint64_t v34 = a9;
  v34[1] = a10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  Swift::String v35 = (void *)(v32 + qword_1004D1468);
  *Swift::String v35 = a17;
  v35[1] = a18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  Swift::String v36 = (void *)(v32 + qword_1004D1470);
  *Swift::String v36 = a25;
  v36[1] = a26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_50;
  }
  Swift::String v38 = (void *)Strong;
  sub_100012894((uint64_t *)&unk_1004D2460);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1003F8B80;
  *(void *)(v39 + 56) = &type metadata for String;
  unint64_t v40 = sub_10001D424();
  *(void *)(v39 + 32) = a9;
  *(void *)(v39 + 40) = a10;
  *(void *)(v39 + 96) = &type metadata for String;
  *(void *)(v39 + 104) = v40;
  *(void *)(v39 + 64) = v40;
  *(void *)(v39 + 72) = a17;
  *(void *)(v39 + 80) = a18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  NSString v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v38 setText:v41];

  uint64_t v42 = swift_unknownObjectWeakLoadStrong();
  if (!v42)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  uint64_t v43 = (void *)v42;
  v219 = self;
  id v44 = [v219 systemFontOfSize:60.0 weight:UIFontWeightRegular];
  [v43 setFont:v44];

  uint64_t v45 = swift_unknownObjectWeakLoadStrong();
  if (!v45)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  id v46 = (void *)v45;
  v220 = self;
  id v47 = [v220 mainBundle];
  v223._object = (void *)0x8000000100426F60;
  v48._uint64_t countAndFlagsBits = 0x4025207962204025;
  v48._object = (void *)0xE800000000000000;
  v49._uint64_t countAndFlagsBits = 0;
  v49._object = (void *)0xE000000000000000;
  v223._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v48, (Swift::String_optional)0, (NSBundle)v47, v49, v223);

  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_1003F8B80;
  *(void *)(v50 + 56) = &type metadata for String;
  *(void *)(v50 + 64) = v40;
  *(void *)(v50 + 32) = a11;
  *(void *)(v50 + 40) = a12;
  *(void *)(v50 + 96) = &type metadata for String;
  *(void *)(v50 + 104) = v40;
  *(void *)(v50 + 72) = a19;
  *(void *)(v50 + 80) = a20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v51 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v46 setAccessibilityLabel:v51];

  uint64_t v52 = swift_unknownObjectWeakLoadStrong();
  if (!v52)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v53 = (void *)v52;
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_1003F8B80;
  *(void *)(v54 + 56) = &type metadata for String;
  *(void *)(v54 + 64) = v40;
  *(void *)(v54 + 32) = a13;
  *(void *)(v54 + 40) = a14;
  *(void *)(v54 + 96) = &type metadata for String;
  *(void *)(v54 + 104) = v40;
  *(void *)(v54 + 72) = a21;
  *(void *)(v54 + 80) = a22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  NSString v55 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v53 setText:v55];

  uint64_t v56 = swift_unknownObjectWeakLoadStrong();
  if (!v56)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  id v57 = (void *)v56;
  sub_1001CD778();
  uint64_t v59 = v58;
  id v60 = [v219 fontWithDescriptor:v58 size:0.0];

  [v57 setFont:v60];
  uint64_t v61 = swift_unknownObjectWeakLoadStrong();
  if (!v61)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  Swift::String v62 = (void *)v61;
  id v63 = [v220 mainBundle];
  v224._object = (void *)0x8000000100426F60;
  v64._uint64_t countAndFlagsBits = 0x4025207962204025;
  v64._object = (void *)0xE800000000000000;
  v65._uint64_t countAndFlagsBits = 0;
  v65._object = (void *)0xE000000000000000;
  v224._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v64, (Swift::String_optional)0, (NSBundle)v63, v65, v224);

  uint64_t v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = xmmword_1003F8B80;
  *(void *)(v66 + 56) = &type metadata for String;
  *(void *)(v66 + 64) = v40;
  *(void *)(v66 + 32) = a15;
  *(void *)(v66 + 40) = a16;
  *(void *)(v66 + 96) = &type metadata for String;
  *(void *)(v66 + 104) = v40;
  *(void *)(v66 + 72) = a23;
  *(void *)(v66 + 80) = a24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v67 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v62 setAccessibilityLabel:v67];

  uint64_t v68 = swift_unknownObjectWeakLoadStrong();
  if (!v68)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  long long v69 = (void *)v68;
  uint64_t v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = xmmword_1003F8B80;
  *(void *)(v70 + 56) = &type metadata for String;
  *(void *)(v70 + 64) = v40;
  *(void *)(v70 + 32) = a1;
  *(void *)(v70 + 40) = a2;
  *(void *)(v70 + 96) = &type metadata for String;
  *(void *)(v70 + 104) = v40;
  *(void *)(v70 + 72) = a5;
  *(void *)(v70 + 80) = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  NSString v71 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v69 setText:v71];

  uint64_t v72 = swift_unknownObjectWeakLoadStrong();
  if (!v72)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v73 = (void *)v72;
  sub_1001CD778();
  long long v75 = v74;
  id v76 = [v219 fontWithDescriptor:v74 size:0.0];

  [v73 setFont:v76];
  uint64_t v77 = swift_unknownObjectWeakLoadStrong();
  if (!v77)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  uint64_t v78 = (void *)v77;
  uint64_t v79 = swift_allocObject();
  *(_OWORD *)(v79 + 16) = xmmword_1003F8B80;
  *(void *)(v79 + 56) = &type metadata for String;
  *(void *)(v79 + 64) = v40;
  *(void *)(v79 + 32) = a3;
  *(void *)(v79 + 40) = a4;
  *(void *)(v79 + 96) = &type metadata for String;
  *(void *)(v79 + 104) = v40;
  *(void *)(v79 + 72) = a7;
  *(void *)(v79 + 80) = a8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  NSString v80 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v78 setAccessibilityLabel:v80];

  uint64_t v81 = swift_unknownObjectWeakLoadStrong();
  if (!v81)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v82 = (void *)v81;
  NSString v83 = String._bridgeToObjectiveC()();
  [v82 setText:v83];

  uint64_t v84 = swift_unknownObjectWeakLoadStrong();
  if (!v84)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  uint64_t v85 = (void *)v84;
  id v86 = [v220 mainBundle];
  v225._object = (void *)0x8000000100426F60;
  v87._object = (void *)0x800000010042C480;
  v87._uint64_t countAndFlagsBits = 0xD000000000000013;
  v88._uint64_t countAndFlagsBits = 0;
  v88._object = (void *)0xE000000000000000;
  v225._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v87, (Swift::String_optional)0, (NSBundle)v86, v88, v225);

  uint64_t v89 = swift_allocObject();
  *(_OWORD *)(v89 + 16) = xmmword_1003F87F0;
  *(void *)(v89 + 56) = &type metadata for String;
  *(void *)(v89 + 64) = v40;
  *(void *)(v89 + 32) = a27;
  *(void *)(v89 + 40) = a28;
  swift_bridgeObjectRetain();
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v90 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v85 setAccessibilityLabel:v90];

  uint64_t v91 = swift_unknownObjectWeakLoadStrong();
  if (!v91)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  v92 = (void *)v91;
  NSString v93 = String._bridgeToObjectiveC()();
  [v92 setText:v93];

  uint64_t v94 = swift_unknownObjectWeakLoadStrong();
  if (!v94)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v95 = (void *)v94;
  id v96 = [v220 mainBundle];
  v226._object = (void *)0x8000000100426F60;
  v97._object = (void *)0x800000010042C480;
  v97._uint64_t countAndFlagsBits = 0xD000000000000013;
  v98._uint64_t countAndFlagsBits = 0;
  v98._object = (void *)0xE000000000000000;
  v226._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v97, (Swift::String_optional)0, (NSBundle)v96, v98, v226);

  uint64_t v99 = swift_allocObject();
  *(_OWORD *)(v99 + 16) = xmmword_1003F87F0;
  *(void *)(v99 + 56) = &type metadata for String;
  *(void *)(v99 + 64) = v40;
  *(void *)(v99 + 32) = a31;
  *(void *)(v99 + 40) = a32;
  swift_bridgeObjectRetain();
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v100 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v95 setAccessibilityLabel:v100];

  uint64_t v101 = swift_unknownObjectWeakLoadStrong();
  if (!v101)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  v102 = (void *)v101;
  v103 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v103)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v104 = v103;
  [v103 bounds];
  CGFloat v106 = v105;
  CGFloat v108 = v107;
  CGFloat v110 = v109;
  CGFloat v112 = v111;

  v227.origin.x = v106;
  v227.origin.y = v108;
  v227.size.width = v110;
  v227.size.height = v112;
  double Width = CGRectGetWidth(v227);
  v114 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v114)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  v115 = v114;
  [v114 bounds];
  CGFloat v117 = v116;
  CGFloat v119 = v118;
  CGFloat v121 = v120;
  CGFloat v123 = v122;

  v228.origin.x = v117;
  v228.origin.y = v119;
  v228.size.width = v121;
  v228.size.height = v123;
  double Height = CGRectGetHeight(v228);
  v125 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v125)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  v126 = v125;
  id v127 = [v125 font];

  if (!v127)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  [v127 lineHeight];
  double v129 = v128;

  [v102 setCenter:Width * 0.5, Height - v129 * 0.5];
  uint64_t v130 = swift_unknownObjectWeakLoadStrong();
  if (!v130)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  v131 = (void *)v130;
  v132 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v132)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  v133 = v132;
  [v132 bounds];
  CGFloat v135 = v134;
  CGFloat v137 = v136;
  CGFloat v139 = v138;
  CGFloat v141 = v140;

  v229.origin.x = v135;
  v229.origin.y = v137;
  v229.size.width = v139;
  v229.size.height = v141;
  double v142 = CGRectGetWidth(v229);
  v143 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v143)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  v144 = v143;
  id v145 = [v143 font];

  if (!v145)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  [v145 lineHeight];
  double v147 = v146;

  [v131 setCenter:v142 * 0.5, v147 * 0.5];
  uint64_t v148 = swift_unknownObjectWeakLoadStrong();
  if (!v148)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  v149 = (void *)v148;
  sub_1001CD778();
  v151 = v150;
  id v152 = [v219 fontWithDescriptor:v150 size:0.0];

  [v149 setFont:v152];
  uint64_t v153 = swift_unknownObjectWeakLoadStrong();
  if (!v153)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  v154 = (void *)v153;
  sub_1001CD778();
  v156 = v155;
  id v157 = [v219 fontWithDescriptor:v155 size:0.0];

  [v154 setFont:v157];
  uint64_t v158 = swift_unknownObjectWeakLoadStrong();
  if (!v158)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  v159 = (void *)v158;
  v160 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v160)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  v161 = v160;
  [v160 bounds];

  v162 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v162)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  v163 = v162;
  [v162 bounds];

  v164 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v164)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v165 = v164;
  [v164 bounds];

  CGSize.init(_:_:)();
  sub_1001D68E8(v159, v166);
  double v168 = v167;

  uint64_t v169 = swift_unknownObjectWeakLoadStrong();
  if (!v169)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  v170 = (void *)v169;
  v171 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v171)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v172 = v171;
  [v171 bounds];

  v173 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v173)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  v174 = v173;
  [v173 bounds];

  v175 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v175)
  {
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  v176 = v175;
  [v175 bounds];

  CGSize.init(_:_:)();
  sub_1001D68E8(v170, v177);
  double v179 = v178;

  if (v179 < v168) {
    double v168 = v179;
  }
  sub_1001CD778();
  v181 = v180;
  id v182 = [v219 fontWithDescriptor:v180 size:v168];
  v183 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v183) {
    goto LABEL_81;
  }
  v184 = v183;
  [v183 setFont:v182];

  v185 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v185)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  v186 = v185;
  [v185 setFont:v182];

  v187 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v187)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  v188 = v187;
  [v187 setFont:v182];

  uint64_t v189 = swift_unknownObjectWeakLoadStrong();
  if (!v189)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  v190 = (void *)v189;
  v191 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v191)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  v192 = v191;
  [v191 bounds];
  double v194 = v193;

  v195 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v195)
  {
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  v196 = v195;
  id v197 = [v195 font];

  if (!v197)
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  double v198 = v194 * 0.5;
  [v197 leading];
  double v200 = v199;

  [v190 setConstant:v198 - v200 * 0.5];
  v221 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v221)
  {
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  v201 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v201)
  {
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  v202 = v201;
  [v201 bounds];
  double v204 = v203;

  v205 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v205)
  {
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  v206 = v205;
  id v207 = [v205 font];

  if (!v207)
  {
LABEL_91:
    __break(1u);
    return;
  }
  double v208 = v204 * 0.5;
  [v207 leading];
  double v210 = v209;

  [v221 setConstant:v208 - v210 * 0.5];
}

uint64_t sub_1001D3810()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result) {
    __break(1u);
  }
  return result;
}

void sub_1001D383C()
{
  [v0 setNeedsLayout];
  [v0 layoutIfNeeded];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    [Strong bounds];
  }
  else
  {
    __break(1u);
  }
}

void sub_1001D38D0()
{
  uint64_t v2 = v0;
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [self nibWithNibName:v3 bundle:0];

  double v5 = (char *)[v4 instantiateWithOwner:v2 options:0];
  uint64_t v6 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!v6[2])
  {
    __break(1u);
LABEL_144:
    swift_once();
LABEL_19:
    NSString v41 = (void *)qword_1004F8A40;
    uint64_t v42 = *(void **)algn_1004F8A48;
    if (byte_1004F8A50)
    {
      char v43 = byte_1004F8A60;
      uint64_t v44 = qword_1004F8A58;
      char v45 = byte_1004D2600;
      id v46 = (id)qword_1004F8A40;
      id v47 = sub_100081B28(v45, v44, v43);
      sub_1000286C0(v41, v42, 1);
    }
    else
    {
      if (byte_1004D2600) {
        id v48 = *(id *)algn_1004F8A48;
      }
      else {
        id v48 = (id)qword_1004F8A40;
      }
      id v47 = v48;
    }
    [v6 setTextColor:v47];

    id v49 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleHeadline];
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      NSString v51 = (void *)Strong;
      uint64_t v52 = self;
      id v53 = [v52 preferredFontForTextStyle:UIFontTextStyleHeadline];
      id v54 = [v53 fontDescriptor];

      id v55 = [v54 fontDescriptorWithSymbolicTraits:2];
      if (v55)
      {
        id v56 = [v52 fontWithDescriptor:v55 size:0.0];

        id v57 = [v49 scaledFontForFont:v56 maximumPointSize:28.0];
        id v58 = &off_1004B7000;
        [v51 setFont:v57];

        uint64_t v59 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v59)
        {
          id v60 = v59;
          id v61 = [v59 font];

          if (v61)
          {
            [v61 descender];
            double v63 = v62;

            Swift::String v64 = (void *)swift_unknownObjectWeakLoadStrong();
            if (v64)
            {
              Swift::String v65 = v64;
              [v64 setConstant:v63];

              type metadata accessor for ViewController();
              id v66 = [v307 bundleForClass:swift_getObjCClassFromMetadata()];
              NSString v67 = String._bridgeToObjectiveC()();
              id v68 = [self imageNamed:v67 inBundle:v66 compatibleWithTraitCollection:0];

              if (v68)
              {
                id v69 = [v68 imageWithRenderingMode:2];
              }
              else
              {
                id v69 = 0;
              }
              id v309 = v52;
              v304 = v49;
              uint64_t v70 = swift_unknownObjectWeakLoadStrong();
              if (v70)
              {
                NSString v71 = (void *)v70;
                uint64_t v72 = (void *)qword_1004F8A40;
                uint64_t v73 = *(void **)algn_1004F8A48;
                if (byte_1004F8A50)
                {
                  char v74 = byte_1004F8A60;
                  id v75 = v69;
                  uint64_t v76 = qword_1004F8A58;
                  uint64_t v77 = v1;
                  char v78 = byte_1004D2600;
                  id v79 = (id)qword_1004F8A40;
                  LOBYTE(v79) = v78;
                  NSArray v1 = v77;
                  uint64_t v80 = v76;
                  id v69 = v75;
                  id v58 = &off_1004B7000;
                  id v81 = sub_100081B28((char)v79, v80, v74);
                  sub_1000286C0(v72, v73, 1);
                }
                else
                {
                  if (byte_1004D2600) {
                    id v82 = *(id *)algn_1004F8A48;
                  }
                  else {
                    id v82 = (id)qword_1004F8A40;
                  }
                  id v81 = v82;
                }
                [v71 setTintColor:v81];

                NSString v83 = (void *)swift_unknownObjectWeakLoadStrong();
                if (v83)
                {
                  uint64_t v84 = v83;
                  [v83 setImage:v69];

                  id v85 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
                  id v86 = (void *)swift_unknownObjectWeakLoadStrong();
                  if (v86)
                  {
                    Swift::String v87 = v86;
                    [v86 (SEL)v1[252]];
                    CGFloat v89 = v88;
                    CGFloat v91 = v90;
                    CGFloat v93 = v92;
                    CGFloat v95 = v94;

                    v316.origin.x = v89;
                    v316.origin.y = v91;
                    v316.size.width = v93;
                    v316.size.height = v95;
                    CGRectGetWidth(v316);
                    id v96 = (void *)swift_unknownObjectWeakLoadStrong();
                    if (v96)
                    {
                      Swift::String v97 = v96;
                      [v96 (SEL)v1[252]];
                      CGFloat v99 = v98;
                      CGFloat v101 = v100;
                      CGFloat v103 = v102;
                      CGFloat v105 = v104;

                      v317.origin.x = v99;
                      v317.origin.y = v101;
                      v317.size.width = v103;
                      v317.size.height = v105;
                      CGRectGetHeight(v317);
                      CGSize.init(_:_:)();
                      [v85 (SEL)v1[252]];
                      [v85 setBounds:];
                      CGFloat v106 = (void *)swift_unknownObjectWeakLoadStrong();
                      if (v106)
                      {
                        double v107 = v106;
                        [v106 center];
                        double v109 = v108;
                        double v111 = v110;

                        [v85 setCenter:v109, v111];
                        CGFloat v112 = self;
                        id v113 = [v112 clearColor];
                        [v85 setBackgroundColor:v113];

                        [v85 setUserInteractionEnabled:1];
                        v114 = (void *)swift_unknownObjectWeakLoadStrong();
                        if (v114)
                        {
                          v115 = v114;
                          v303 = v69;
                          [v114 addSubview:v85];

                          id v302 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v5 action:"close"];
                          [v85 addGestureRecognizer:];
                          uint64_t v116 = swift_unknownObjectWeakLoadStrong();
                          if (v116)
                          {
                            CGFloat v117 = (void *)v116;
                            id v118 = [v309 systemFontOfSize:60.0 weight:UIFontWeightRegular];
                            [v117 performSelector:v58[338] withObject:v118];

                            uint64_t v119 = swift_unknownObjectWeakLoadStrong();
                            if (v119)
                            {
                              double v120 = (void *)v119;
                              if (qword_1004C31C0 != -1) {
                                swift_once();
                              }
                              double v122 = (void *)qword_1004F8A18;
                              id v121 = qword_1004F8A20;
                              id v305 = v112;
                              if (byte_1004F8A28)
                              {
                                char v123 = byte_1004F8A38;
                                uint64_t v124 = qword_1004F8A30;
                                char v125 = byte_1004D2600;
                                id v126 = (id)qword_1004F8A18;
                                id v127 = sub_100081B28(v125, v124, v123);
                                sub_1000286C0(v122, v121, 1);
                              }
                              else
                              {
                                if (byte_1004D2600) {
                                  id v128 = qword_1004F8A20;
                                }
                                else {
                                  id v128 = (id)qword_1004F8A18;
                                }
                                id v127 = v128;
                              }
                              double v129 = &selRef_replaySensorDidFinishReplayingData;
                              [v120 setTextColor:v127];

                              uint64_t v130 = (void *)swift_unknownObjectWeakLoadStrong();
                              if (v130)
                              {
                                v131 = v130;
                                id v132 = [v130 font];

                                if (v132)
                                {
                                  [v132 descender];
                                  double v134 = v133;

                                  CGFloat v135 = (void *)swift_unknownObjectWeakLoadStrong();
                                  if (v135)
                                  {
                                    double v136 = v135;
                                    id v137 = [v135 font];

                                    if (v137)
                                    {
                                      [v137 leading];
                                      double v139 = v138;

                                      double v140 = (void *)swift_unknownObjectWeakLoadStrong();
                                      if (v140)
                                      {
                                        CGFloat v141 = v140;
                                        [v140 setConstant:v134 + v139];

                                        uint64_t v142 = swift_unknownObjectWeakLoadStrong();
                                        if (v142)
                                        {
                                          v143 = (void *)v142;
                                          sub_1001CD778();
                                          id v145 = v144;
                                          id v146 = [v309 fontWithDescriptor:v144 size:0.0];

                                          [v143 v58[338]:v146];
                                          uint64_t v147 = swift_unknownObjectWeakLoadStrong();
                                          if (v147)
                                          {
                                            uint64_t v148 = (void *)v147;
                                            v150 = (void *)qword_1004F8A40;
                                            v149 = *(void **)algn_1004F8A48;
                                            v301 = v85;
                                            if (byte_1004F8A50)
                                            {
                                              char v151 = byte_1004F8A60;
                                              uint64_t v152 = qword_1004F8A58;
                                              char v153 = byte_1004D2600;
                                              id v154 = (id)qword_1004F8A40;
                                              LOBYTE(v154) = v153;
                                              double v129 = &selRef_replaySensorDidFinishReplayingData;
                                              id v155 = sub_100081B28((char)v154, v152, v151);
                                              sub_1000286C0(v150, v149, 1);
                                            }
                                            else
                                            {
                                              if (byte_1004D2600) {
                                                id v156 = *(id *)algn_1004F8A48;
                                              }
                                              else {
                                                id v156 = (id)qword_1004F8A40;
                                              }
                                              id v155 = v156;
                                            }
                                            [v148 setTextColor:v155];

                                            id v157 = (void *)swift_unknownObjectWeakLoadStrong();
                                            uint64_t v158 = v309;
                                            if (v157)
                                            {
                                              v159 = v157;
                                              id v160 = [v157 v129[207]];

                                              if (v160)
                                              {
                                                [v160 descender];
                                                double v162 = v161;

                                                v163 = (void *)swift_unknownObjectWeakLoadStrong();
                                                if (v163)
                                                {
                                                  v164 = v163;
                                                  id v165 = [v163 v129[207]];

                                                  if (v165)
                                                  {
                                                    [v165 leading];
                                                    double v167 = v166;

                                                    double v168 = (void *)swift_unknownObjectWeakLoadStrong();
                                                    if (v168)
                                                    {
                                                      uint64_t v169 = v168;
                                                      [v168 setConstant:v162 + v167];

                                                      uint64_t v170 = swift_unknownObjectWeakLoadStrong();
                                                      if (v170)
                                                      {
                                                        v171 = (void *)v170;
                                                        sub_1001CD778();
                                                        v173 = v172;
                                                        id v174 = [v309 fontWithDescriptor:v172 size:0.0];

                                                        [v171 setTitle:v174];
                                                        uint64_t v175 = swift_unknownObjectWeakLoadStrong();
                                                        if (v175)
                                                        {
                                                          v176 = (void *)v175;
                                                          double v178 = (void *)qword_1004F8A40;
                                                          double v177 = *(void **)algn_1004F8A48;
                                                          if (byte_1004F8A50)
                                                          {
                                                            char v179 = byte_1004F8A60;
                                                            uint64_t v180 = qword_1004F8A58;
                                                            char v181 = byte_1004D2600;
                                                            id v182 = (id)qword_1004F8A40;
                                                            LOBYTE(v182) = v181;
                                                            uint64_t v158 = v309;
                                                            id v183 = sub_100081B28((char)v182, v180, v179);
                                                            sub_1000286C0(v178, v177, 1);
                                                          }
                                                          else
                                                          {
                                                            if (byte_1004D2600) {
                                                              id v184 = *(id *)algn_1004F8A48;
                                                            }
                                                            else {
                                                              id v184 = (id)qword_1004F8A40;
                                                            }
                                                            id v183 = v184;
                                                          }
                                                          [v176 setTextColor:v183];

                                                          uint64_t v185 = swift_unknownObjectWeakLoadStrong();
                                                          if (v185)
                                                          {
                                                            v186 = (void *)v185;
                                                            sub_1001CD778();
                                                            v188 = v187;
                                                            id v189 = [v158 fontWithDescriptor:v187 size:0.0];

                                                            [v186 v58[338]:v189];
                                                            uint64_t v190 = swift_unknownObjectWeakLoadStrong();
                                                            if (v190)
                                                            {
                                                              v191 = (void *)v190;
                                                              double v193 = (void *)qword_1004F8A40;
                                                              v192 = *(void **)algn_1004F8A48;
                                                              if (byte_1004F8A50)
                                                              {
                                                                char v194 = byte_1004F8A60;
                                                                uint64_t v195 = qword_1004F8A58;
                                                                char v196 = byte_1004D2600;
                                                                id v197 = (id)qword_1004F8A40;
                                                                id v198 = sub_100081B28(v196, v195, v194);
                                                                sub_1000286C0(v193, v192, 1);
                                                              }
                                                              else
                                                              {
                                                                if (byte_1004D2600) {
                                                                  id v199 = *(id *)algn_1004F8A48;
                                                                }
                                                                else {
                                                                  id v199 = (id)qword_1004F8A40;
                                                                }
                                                                id v198 = v199;
                                                              }
                                                              [v191 setTextColor:v198];

                                                              double v200 = (void *)swift_unknownObjectWeakLoadStrong();
                                                              if (v200)
                                                              {
                                                                v201 = v200;
                                                                [v200 setAdjustsFontForContentSizeCategory:0];

                                                                v202 = (void *)swift_unknownObjectWeakLoadStrong();
                                                                if (v202)
                                                                {
                                                                  double v203 = v202;
                                                                  [v202 setAdjustsFontSizeToFitWidth:0];

                                                                  uint64_t v204 = swift_unknownObjectWeakLoadStrong();
                                                                  if (v204)
                                                                  {
                                                                    v205 = (void *)v204;
                                                                    sub_1001CD778();
                                                                    id v207 = v206;
                                                                    id v208 = [v309 fontWithDescriptor:v206 size:0.0];

                                                                    [v205 performSelector:v58[338] withObject:v208];
                                                                    uint64_t v209 = swift_unknownObjectWeakLoadStrong();
                                                                    if (v209)
                                                                    {
                                                                      double v210 = (void *)v209;
                                                                      v212 = (void *)qword_1004F8A40;
                                                                      v211 = *(void **)algn_1004F8A48;
                                                                      if (byte_1004F8A50)
                                                                      {
                                                                        char v213 = byte_1004F8A60;
                                                                        uint64_t v214 = qword_1004F8A58;
                                                                        char v215 = byte_1004D2600;
                                                                        id v216 = (id)qword_1004F8A40;
                                                                        id v217 = sub_100081B28(v215, v214, v213);
                                                                        sub_1000286C0(v212, v211, 1);
                                                                      }
                                                                      else
                                                                      {
                                                                        if (byte_1004D2600) {
                                                                          id v218 = *(id *)algn_1004F8A48;
                                                                        }
                                                                        else {
                                                                          id v218 = (id)qword_1004F8A40;
                                                                        }
                                                                        id v217 = v218;
                                                                      }
                                                                      [v210 setTextColor:v217];

                                                                      v219 = (void *)swift_unknownObjectWeakLoadStrong();
                                                                      if (v219)
                                                                      {
                                                                        v220 = v219;
                                                                        [v219 setAdjustsFontForContentSizeCategory:0];

                                                                        v221 = (void *)swift_unknownObjectWeakLoadStrong();
                                                                        if (v221)
                                                                        {
                                                                          v222 = v221;
                                                                          [v221 setAdjustsFontSizeToFitWidth:0];

                                                                          uint64_t v223 = swift_unknownObjectWeakLoadStrong();
                                                                          if (v223)
                                                                          {
                                                                            Swift::String v224 = (void *)v223;
                                                                            Swift::String v225 = (void *)swift_unknownObjectWeakLoadStrong();
                                                                            if (v225)
                                                                            {
                                                                              Swift::String v226 = v225;
                                                                              [v225 bounds];
                                                                              double v228 = v227;

                                                                              CGRect v229 = (void *)swift_unknownObjectWeakLoadStrong();
                                                                              if (v229)
                                                                              {
                                                                                v230 = v229;
                                                                                id v231 = [v229 font];

                                                                                if (v231)
                                                                                {
                                                                                  double v232 = v228 * 0.5;
                                                                                  [v231 leading];
                                                                                  double v234 = v233;

                                                                                  [v224 setConstant:v232 - v234 * 0.5];
                                                                                  uint64_t v235 = swift_unknownObjectWeakLoadStrong();
                                                                                  if (v235)
                                                                                  {
                                                                                    v236 = (void *)v235;
                                                                                    v237 = (void *)swift_unknownObjectWeakLoadStrong();
                                                                                    if (v237)
                                                                                    {
                                                                                      v238 = v237;
                                                                                      [v237 bounds];
                                                                                      double v240 = v239;

                                                                                      v241 = (void *)swift_unknownObjectWeakLoadStrong();
                                                                                      if (v241)
                                                                                      {
                                                                                        v242 = v241;
                                                                                        id v243 = [v241 font];

                                                                                        if (v243)
                                                                                        {
                                                                                          double v244 = v240 * 0.5;
                                                                                          [v243 leading];
                                                                                          double v246 = v245;

                                                                                          [v236 setConstant:v244 - v246 * 0.5];
                                                                                          v247 = (void *)swift_unknownObjectWeakLoadStrong();
                                                                                          if (v247)
                                                                                          {
                                                                                            v248 = v247;
                                                                                            [v247 bounds];
                                                                                            double v250 = v249;
                                                                                            double v252 = v251;
                                                                                            double v254 = v253;
                                                                                            double v256 = v255;

                                                                                            id v257 = [v305 clearColor];
                                                                                            if (qword_1004C2ED0 != -1) {
                                                                                              swift_once();
                                                                                            }
                                                                                            v258 = (void *)qword_1004F86B0;
                                                                                            id v259 = objc_allocWithZone((Class)type metadata accessor for ButtonWithCustomBackgroundColor());
                                                                                            id v260 = sub_100043284(v257, v258, v250, v252, v254, v256, 16.0);
                                                                                            v261 = (unsigned char *)qword_1004D13E0;
                                                                                            v262 = v306;
                                                                                            v263 = *(void **)&v306[qword_1004D13E0];
                                                                                            *(void *)&v306[qword_1004D13E0] = v260;

                                                                                            v264 = *(void **)&v261[(void)v306];
                                                                                            if (!v264) {
                                                                                              goto LABEL_124;
                                                                                            }
                                                                                            id v265 = v264;
                                                                                            id v266 = [v307 mainBundle];
                                                                                            v314._object = (void *)0xE000000000000000;
                                                                                            v267._object = (void *)0x8000000100423F90;
                                                                                            v267._uint64_t countAndFlagsBits = 0xD000000000000010;
                                                                                            v268._uint64_t countAndFlagsBits = 0;
                                                                                            v268._object = (void *)0xE000000000000000;
                                                                                            v314._uint64_t countAndFlagsBits = 0;
                                                                                            NSLocalizedString(_:tableName:bundle:value:comment:)(v267, (Swift::String_optional)0, (NSBundle)v266, v268, v314);

                                                                                            NSString v269 = String._bridgeToObjectiveC()();
                                                                                            swift_bridgeObjectRelease();
                                                                                            [v265 setTitle:v269 forState:0];

                                                                                            v262 = v306;
                                                                                            v270 = *(void **)&v261[(void)v306];
                                                                                            if (!v270) {
                                                                                              goto LABEL_124;
                                                                                            }
                                                                                            uint64_t v271 = qword_1004C2EC0;
                                                                                            id v272 = v270;
                                                                                            if (v271 != -1) {
                                                                                              goto LABEL_151;
                                                                                            }
                                                                                            while (1)
                                                                                            {
                                                                                              [v272 setTitleColor:qword_1004F86A0 forState:0];

                                                                                              v273 = *(void **)&v261[(void)v262];
                                                                                              if (v273)
                                                                                              {
                                                                                                uint64_t v274 = qword_1004C2EC8;
                                                                                                id v275 = v273;
                                                                                                if (v274 != -1) {
                                                                                                  swift_once();
                                                                                                }
                                                                                                [v275 setTitleColor:qword_1004F86A8 forState:1];

                                                                                                v262 = v306;
                                                                                                v276 = *(void **)&v261[(void)v306];
                                                                                                if (v276)
                                                                                                {
                                                                                                  id v277 = [v276 titleLabel];
                                                                                                  if (v277)
                                                                                                  {
                                                                                                    v278 = v277;
                                                                                                    v279 = (void *)swift_unknownObjectWeakLoadStrong();
                                                                                                    if (!v279) {
                                                                                                      goto LABEL_208;
                                                                                                    }
                                                                                                    v280 = v279;
                                                                                                    id v281 = [v279 font];

                                                                                                    [v278 setFont:v281];
                                                                                                    v262 = v306;
                                                                                                  }
                                                                                                  v282 = *(void **)&v261[(void)v262];
                                                                                                  if (v282) {
                                                                                                    [v282 addTarget:v262 action:"copyMeasurement:" forControlEvents:64];
                                                                                                  }
                                                                                                }
                                                                                              }
LABEL_124:
                                                                                              v283 = (void *)swift_unknownObjectWeakLoadStrong();
                                                                                              if (!v283) {
                                                                                                goto LABEL_200;
                                                                                              }
                                                                                              if (!*(void *)&v261[(void)v262]) {
                                                                                                goto LABEL_201;
                                                                                              }
                                                                                              id v272 = v283;
                                                                                              [v283 addSubview:];

                                                                                              uint64_t v284 = *(void *)&v262[qword_1004D13D8];
                                                                                              v261 = (unsigned char *)&unk_1004D2000;
                                                                                              if (!v284) {
                                                                                                goto LABEL_202;
                                                                                              }
                                                                                              if ((unint64_t)v284 >> 62)
                                                                                              {
                                                                                                if (v284 >= 0) {
                                                                                                  id v272 = (id)(v284 & 0xFFFFFFFFFFFFFF8);
                                                                                                }
                                                                                                else {
                                                                                                  id v272 = *(id *)&v262[qword_1004D13D8];
                                                                                                }
                                                                                                swift_bridgeObjectRetain();
                                                                                                uint64_t v285 = _CocoaArrayWrapper.endIndex.getter();
                                                                                                if (!v285) {
                                                                                                  goto LABEL_149;
                                                                                                }
                                                                                              }
                                                                                              else
                                                                                              {
                                                                                                uint64_t v285 = *(void *)((v284 & 0xFFFFFFFFFFFFFF8) + 0x10);
                                                                                                swift_bridgeObjectRetain();
                                                                                                if (!v285) {
                                                                                                  goto LABEL_149;
                                                                                                }
                                                                                              }
                                                                                              if (v285 >= 1)
                                                                                              {
                                                                                                uint64_t v286 = 0;
                                                                                                id v308 = (id)(v284 & 0xC000000000000001);
                                                                                                v287 = &qword_1004C3000;
                                                                                                do
                                                                                                {
                                                                                                  if (v308) {
                                                                                                    id v297 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                                                                                                  }
                                                                                                  else {
                                                                                                    id v297 = *(id *)(v284 + 8 * v286 + 32);
                                                                                                  }
                                                                                                  id v310 = v297;
                                                                                                  if (v287[58] != -1) {
                                                                                                    swift_once();
                                                                                                  }
                                                                                                  v298 = (void *)qword_1004F8A68;
                                                                                                  id v299 = qword_1004F8A70;
                                                                                                  if (byte_1004F8A78)
                                                                                                  {
                                                                                                    char v288 = byte_1004F8A88;
                                                                                                    uint64_t v289 = v284;
                                                                                                    v290 = v287;
                                                                                                    uint64_t v291 = v285;
                                                                                                    uint64_t v292 = qword_1004F8A80;
                                                                                                    char v293 = byte_1004D2600;
                                                                                                    id v294 = (id)qword_1004F8A68;
                                                                                                    LOBYTE(v294) = v293;
                                                                                                    v261 = &unk_1004D2000;
                                                                                                    uint64_t v295 = v292;
                                                                                                    uint64_t v285 = v291;
                                                                                                    v287 = v290;
                                                                                                    uint64_t v284 = v289;
                                                                                                    id v296 = sub_100081B28((char)v294, v295, v288);
                                                                                                    sub_1000286C0(v298, v299, 1);
                                                                                                  }
                                                                                                  else
                                                                                                  {
                                                                                                    if (v261[1536]) {
                                                                                                      id v300 = qword_1004F8A70;
                                                                                                    }
                                                                                                    else {
                                                                                                      id v300 = (id)qword_1004F8A68;
                                                                                                    }
                                                                                                    id v296 = v300;
                                                                                                  }
                                                                                                  ++v286;
                                                                                                  [v310 setBackgroundColor:v296];
                                                                                                }
                                                                                                while (v285 != v286);
LABEL_149:
                                                                                                swift_bridgeObjectRelease();
                                                                                                [v306 setAlpha:0.0];
                                                                                                sub_1000AB180();
                                                                                                sub_1000F9278();

                                                                                                return;
                                                                                              }
                                                                                              __break(1u);
LABEL_151:
                                                                                              swift_once();
                                                                                            }
                                                                                          }
LABEL_199:
                                                                                          __break(1u);
LABEL_200:
                                                                                          __break(1u);
LABEL_201:
                                                                                          __break(1u);
LABEL_202:
                                                                                          __break(1u);
                                                                                          goto LABEL_203;
                                                                                        }
LABEL_198:
                                                                                        __break(1u);
                                                                                        goto LABEL_199;
                                                                                      }
LABEL_197:
                                                                                      __break(1u);
                                                                                      goto LABEL_198;
                                                                                    }
LABEL_196:
                                                                                    __break(1u);
                                                                                    goto LABEL_197;
                                                                                  }
LABEL_195:
                                                                                  __break(1u);
                                                                                  goto LABEL_196;
                                                                                }
LABEL_194:
                                                                                __break(1u);
                                                                                goto LABEL_195;
                                                                              }
LABEL_193:
                                                                              __break(1u);
                                                                              goto LABEL_194;
                                                                            }
LABEL_192:
                                                                            __break(1u);
                                                                            goto LABEL_193;
                                                                          }
LABEL_191:
                                                                          __break(1u);
                                                                          goto LABEL_192;
                                                                        }
LABEL_190:
                                                                        __break(1u);
                                                                        goto LABEL_191;
                                                                      }
LABEL_189:
                                                                      __break(1u);
                                                                      goto LABEL_190;
                                                                    }
LABEL_188:
                                                                    __break(1u);
                                                                    goto LABEL_189;
                                                                  }
LABEL_187:
                                                                  __break(1u);
                                                                  goto LABEL_188;
                                                                }
LABEL_186:
                                                                __break(1u);
                                                                goto LABEL_187;
                                                              }
LABEL_185:
                                                              __break(1u);
                                                              goto LABEL_186;
                                                            }
LABEL_184:
                                                            __break(1u);
                                                            goto LABEL_185;
                                                          }
LABEL_183:
                                                          __break(1u);
                                                          goto LABEL_184;
                                                        }
LABEL_182:
                                                        __break(1u);
                                                        goto LABEL_183;
                                                      }
LABEL_181:
                                                      __break(1u);
                                                      goto LABEL_182;
                                                    }
LABEL_180:
                                                    __break(1u);
                                                    goto LABEL_181;
                                                  }
LABEL_179:
                                                  __break(1u);
                                                  goto LABEL_180;
                                                }
LABEL_178:
                                                __break(1u);
                                                goto LABEL_179;
                                              }
LABEL_177:
                                              __break(1u);
                                              goto LABEL_178;
                                            }
LABEL_176:
                                            __break(1u);
                                            goto LABEL_177;
                                          }
LABEL_175:
                                          __break(1u);
                                          goto LABEL_176;
                                        }
LABEL_174:
                                        __break(1u);
                                        goto LABEL_175;
                                      }
LABEL_173:
                                      __break(1u);
                                      goto LABEL_174;
                                    }
LABEL_172:
                                    __break(1u);
                                    goto LABEL_173;
                                  }
LABEL_171:
                                  __break(1u);
                                  goto LABEL_172;
                                }
LABEL_170:
                                __break(1u);
                                goto LABEL_171;
                              }
LABEL_169:
                              __break(1u);
                              goto LABEL_170;
                            }
LABEL_168:
                            __break(1u);
                            goto LABEL_169;
                          }
LABEL_167:
                          __break(1u);
                          goto LABEL_168;
                        }
LABEL_166:
                        __break(1u);
                        goto LABEL_167;
                      }
LABEL_165:
                      __break(1u);
                      goto LABEL_166;
                    }
LABEL_164:
                    __break(1u);
                    goto LABEL_165;
                  }
LABEL_163:
                  __break(1u);
                  goto LABEL_164;
                }
LABEL_162:
                __break(1u);
                goto LABEL_163;
              }
LABEL_161:
              __break(1u);
              goto LABEL_162;
            }
LABEL_160:
            __break(1u);
            goto LABEL_161;
          }
LABEL_159:
          __break(1u);
          goto LABEL_160;
        }
LABEL_158:
        __break(1u);
        goto LABEL_159;
      }
LABEL_157:
      __break(1u);
      goto LABEL_158;
    }
LABEL_156:
    __break(1u);
    goto LABEL_157;
  }
  sub_10005C070((uint64_t)(v6 + 4), (uint64_t)v312);
  swift_bridgeObjectRelease();
  sub_10001C99C(0, (unint64_t *)&qword_1004CA030);
  int v7 = swift_dynamicCast();
  uint64_t v8 = v311;
  if (!v7) {
    uint64_t v8 = 0;
  }
  uint64_t v9 = qword_1004D1350;
  uint64_t v10 = *(void **)&v2[qword_1004D1350];
  *(void *)&v2[qword_1004D1350] = v8;

  Swift::String v11 = *(void **)&v2[v9];
  if (!v11
    || (double v5 = v2,
        id v12 = v11,
        NSArray v1 = &off_1004B7000,
        [v2 bounds],
        objc_msgSend(v12, "setFrame:"),
        v12,
        !*(void *)&v2[v9]))
  {
    __break(1u);
    goto LABEL_153;
  }
  [v2 addSubview:];
  id v13 = [self sharedApplication];
  id v14 = [v13 preferredContentSizeCategory];

  LOBYTE(v13) = UIContentSizeCategory.isAccessibilityCategory.getter();
  v306 = v2;
  if ((v13 & 1) == 0)
  {
LABEL_13:
    [v5 bounds];
    double Width = CGRectGetWidth(v315);
    sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
    char v30 = static UIDevice.isIPad()();
    Swift::String v31 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v31)
    {
      uint64_t v32 = v31;
      double v33 = Width + -48.0;
      if (v30) {
        double v33 = 375.0;
      }
      [v31 setConstant:v33];

      [v5 setNeedsLayout];
      [v5 layoutIfNeeded];
      uint64_t v34 = swift_unknownObjectWeakLoadStrong();
      if (v34)
      {
        Swift::String v35 = (void *)v34;
        id v307 = self;
        id v36 = [v307 mainBundle];
        v37._uint64_t countAndFlagsBits = 0xD000000000000022;
        v313._object = (void *)0xE000000000000000;
        v37._object = (void *)0x800000010042C4C0;
        v38._uint64_t countAndFlagsBits = 0;
        v38._object = (void *)0xE000000000000000;
        v313._uint64_t countAndFlagsBits = 0;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v37, (Swift::String_optional)0, (NSBundle)v36, v38, v313);

        NSString v39 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v35 setText:v39];

        uint64_t v40 = swift_unknownObjectWeakLoadStrong();
        if (v40)
        {
          uint64_t v6 = (void *)v40;
          if (qword_1004C31C8 == -1) {
            goto LABEL_19;
          }
          goto LABEL_144;
        }
LABEL_155:
        __break(1u);
        goto LABEL_156;
      }
LABEL_154:
      __break(1u);
      goto LABEL_155;
    }
LABEL_153:
    __break(1u);
    goto LABEL_154;
  }
  uint64_t v15 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v15)
  {
LABEL_203:
    __break(1u);
    goto LABEL_204;
  }
  unint64_t v16 = v15;
  [v15 constant];
  double v18 = v17;

  uint64_t v19 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v19)
  {
LABEL_204:
    __break(1u);
    goto LABEL_205;
  }
  id v20 = v19;
  [v19 constant];
  double v22 = v21;

  Swift::String v23 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v23)
  {
LABEL_205:
    __break(1u);
    goto LABEL_206;
  }
  id v24 = v23;
  [v23 setConstant:50.0];

  Swift::String v25 = (void *)swift_unknownObjectWeakLoadStrong();
  double v5 = v2;
  if (v25)
  {
    Swift::String v26 = v25;
    [v25 setConstant:69.5];

    Swift::String v27 = (void *)swift_unknownObjectWeakLoadStrong();
    if (!v27) {
      goto LABEL_207;
    }
    id v28 = v27;
    [v27 setConstant:50.0 - v18 + 69.5 - v22 + 356.0];

    goto LABEL_13;
  }
LABEL_206:
  __break(1u);
LABEL_207:
  __break(1u);
LABEL_208:
  __break(1u);
}

void sub_1001D51B0()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    [Strong center];
    uint64_t v4 = v3;
    uint64_t v6 = v5;

    int v7 = (void *)(v0 + qword_1004C86F8);
    *int v7 = v4;
    v7[1] = v6;
  }
  else
  {
    __break(1u);
  }
}

void sub_1001D521C()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
    return;
  }
  uint64_t v3 = (void *)Strong;
  if (qword_1004C31C8 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_1004F8A40;
  uint64_t v5 = *(void **)algn_1004F8A48;
  if (byte_1004F8A50)
  {
    char v6 = byte_1004F8A60;
    uint64_t v7 = qword_1004F8A58;
    char v8 = byte_1004D2600;
    id v9 = (id)qword_1004F8A40;
    id v10 = sub_100081B28(v8, v7, v6);
    sub_1000286C0(v4, v5, 1);
  }
  else
  {
    if (byte_1004D2600) {
      id v11 = *(id *)algn_1004F8A48;
    }
    else {
      id v11 = (id)qword_1004F8A40;
    }
    id v10 = v11;
  }
  [v3 setTextColor:v10];

  uint64_t v12 = swift_unknownObjectWeakLoadStrong();
  if (!v12) {
    goto LABEL_77;
  }
  id v13 = (void *)v12;
  id v14 = (void *)qword_1004F8A40;
  uint64_t v15 = *(void **)algn_1004F8A48;
  if (byte_1004F8A50)
  {
    char v16 = byte_1004F8A60;
    uint64_t v17 = qword_1004F8A58;
    char v18 = byte_1004D2600;
    id v19 = (id)qword_1004F8A40;
    id v20 = sub_100081B28(v18, v17, v16);
    sub_1000286C0(v14, v15, 1);
  }
  else
  {
    if (byte_1004D2600) {
      id v21 = *(id *)algn_1004F8A48;
    }
    else {
      id v21 = (id)qword_1004F8A40;
    }
    id v20 = v21;
  }
  [v13 setTintColor:v20];

  uint64_t v22 = swift_unknownObjectWeakLoadStrong();
  if (!v22) {
    goto LABEL_78;
  }
  Swift::String v23 = (void *)v22;
  if (qword_1004C31C0 != -1) {
    swift_once();
  }
  id v24 = (void *)qword_1004F8A18;
  id v25 = qword_1004F8A20;
  if (byte_1004F8A28)
  {
    char v26 = byte_1004F8A38;
    uint64_t v27 = qword_1004F8A30;
    char v28 = byte_1004D2600;
    id v29 = (id)qword_1004F8A18;
    id v30 = sub_100081B28(v28, v27, v26);
    sub_1000286C0(v24, v25, 1);
  }
  else
  {
    if (byte_1004D2600) {
      id v31 = qword_1004F8A20;
    }
    else {
      id v31 = (id)qword_1004F8A18;
    }
    id v30 = v31;
  }
  [v23 setTextColor:v30];

  uint64_t v32 = swift_unknownObjectWeakLoadStrong();
  if (!v32) {
    goto LABEL_79;
  }
  double v33 = (void *)v32;
  uint64_t v34 = (void *)qword_1004F8A40;
  Swift::String v35 = *(void **)algn_1004F8A48;
  if (byte_1004F8A50)
  {
    char v36 = byte_1004F8A60;
    uint64_t v37 = qword_1004F8A58;
    char v38 = byte_1004D2600;
    id v39 = (id)qword_1004F8A40;
    id v40 = sub_100081B28(v38, v37, v36);
    sub_1000286C0(v34, v35, 1);
  }
  else
  {
    if (byte_1004D2600) {
      id v41 = *(id *)algn_1004F8A48;
    }
    else {
      id v41 = (id)qword_1004F8A40;
    }
    id v40 = v41;
  }
  [v33 setTextColor:v40];

  uint64_t v42 = swift_unknownObjectWeakLoadStrong();
  if (!v42) {
    goto LABEL_80;
  }
  char v43 = (void *)v42;
  uint64_t v44 = (void *)qword_1004F8A40;
  char v45 = *(void **)algn_1004F8A48;
  if (byte_1004F8A50)
  {
    char v46 = byte_1004F8A60;
    uint64_t v47 = qword_1004F8A58;
    char v48 = byte_1004D2600;
    id v49 = (id)qword_1004F8A40;
    id v50 = sub_100081B28(v48, v47, v46);
    sub_1000286C0(v44, v45, 1);
  }
  else
  {
    if (byte_1004D2600) {
      id v51 = *(id *)algn_1004F8A48;
    }
    else {
      id v51 = (id)qword_1004F8A40;
    }
    id v50 = v51;
  }
  [v43 setTextColor:v50];

  uint64_t v52 = swift_unknownObjectWeakLoadStrong();
  if (!v52) {
    goto LABEL_81;
  }
  id v53 = (void *)v52;
  id v54 = (void *)qword_1004F8A40;
  id v55 = *(void **)algn_1004F8A48;
  if (byte_1004F8A50)
  {
    char v56 = byte_1004F8A60;
    uint64_t v57 = qword_1004F8A58;
    char v58 = byte_1004D2600;
    id v59 = (id)qword_1004F8A40;
    id v60 = sub_100081B28(v58, v57, v56);
    sub_1000286C0(v54, v55, 1);
  }
  else
  {
    if (byte_1004D2600) {
      id v61 = *(id *)algn_1004F8A48;
    }
    else {
      id v61 = (id)qword_1004F8A40;
    }
    id v60 = v61;
  }
  [v53 setTextColor:v60];

  uint64_t v62 = swift_unknownObjectWeakLoadStrong();
  if (!v62) {
    goto LABEL_82;
  }
  double v63 = (void *)v62;
  Swift::String v64 = (void *)qword_1004F8A40;
  Swift::String v65 = *(void **)algn_1004F8A48;
  if (byte_1004F8A50)
  {
    char v66 = byte_1004F8A60;
    uint64_t v67 = qword_1004F8A58;
    char v68 = byte_1004D2600;
    id v69 = (id)qword_1004F8A40;
    id v70 = sub_100081B28(v68, v67, v66);
    sub_1000286C0(v64, v65, 1);
  }
  else
  {
    if (byte_1004D2600) {
      id v71 = *(id *)algn_1004F8A48;
    }
    else {
      id v71 = (id)qword_1004F8A40;
    }
    id v70 = v71;
  }
  [v63 setTextColor:v70];

  unint64_t v72 = *(void *)(v1 + qword_1004D13D8);
  if (!v72) {
    goto LABEL_83;
  }
  if (v72 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v73 = _CocoaArrayWrapper.endIndex.getter();
    if (v73) {
      goto LABEL_57;
    }
  }
  else
  {
    uint64_t v73 = *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v73)
    {
LABEL_57:
      if (v73 >= 1)
      {
        uint64_t v74 = 0;
        unint64_t v93 = v72 & 0xC000000000000001;
        id v75 = &qword_1004F8A68;
        uint64_t v76 = &qword_1004C3000;
        uint64_t v77 = &off_1004B7000;
        do
        {
          if (v93) {
            id v87 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v87 = *(id *)(v72 + 8 * v74 + 32);
          }
          id v88 = v87;
          if (v76[58] != -1) {
            swift_once();
          }
          CGFloat v89 = (void *)*v75;
          double v90 = (void *)v75[1];
          id v94 = v88;
          if (v75[2])
          {
            char v92 = byte_1004F8A88;
            uint64_t v78 = qword_1004F8A80;
            id v79 = v76;
            uint64_t v80 = v75;
            unint64_t v81 = v72;
            uint64_t v82 = v73;
            char v83 = byte_1004D2600;
            id v84 = v89;
            LOBYTE(v84) = v83;
            uint64_t v73 = v82;
            unint64_t v72 = v81;
            id v75 = v80;
            uint64_t v76 = v79;
            uint64_t v85 = v78;
            uint64_t v77 = &off_1004B7000;
            id v86 = sub_100081B28((char)v84, v85, v92);
            sub_1000286C0(v89, v90, 1);
          }
          else
          {
            if (byte_1004D2600) {
              id v91 = v90;
            }
            else {
              id v91 = v89;
            }
            id v86 = v91;
          }
          ++v74;
          [v94 v77[331]:v86];
        }
        while (v73 != v74);
        goto LABEL_72;
      }
      __break(1u);
      goto LABEL_76;
    }
  }
LABEL_72:

  swift_bridgeObjectRelease();
}

void *sub_1001D58E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + qword_1004D1350) = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)(v5 + qword_1004D13D8) = 0;
  *(void *)(v5 + qword_1004D13E0) = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  id v11 = (void *)(v5 + qword_1004D1458);
  *id v11 = 0;
  v11[1] = 0xE000000000000000;
  uint64_t v12 = (void *)(v5 + qword_1004D1460);
  *uint64_t v12 = 0;
  v12[1] = 0xE000000000000000;
  id v13 = (void *)(v5 + qword_1004D1468);
  *id v13 = 0;
  v13[1] = 0xE000000000000000;
  id v14 = (void *)(v5 + qword_1004D1470);
  *id v14 = 0;
  v14[1] = 0xE000000000000000;
  *(void *)(v5 + qword_1004D1478) = 0x4038000000000000;
  *(_DWORD *)(v5 + qword_1004D1480) = 1136361472;

  return sub_1000AAB70(a1, a2, a3, a4, a5);
}

id sub_1001D5C2C(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[qword_1004D1350] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v1[qword_1004D13D8] = 0;
  *(void *)&v1[qword_1004D13E0] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v4 = &v1[qword_1004D1458];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0xE000000000000000;
  uint64_t v5 = &v1[qword_1004D1460];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0xE000000000000000;
  char v6 = &v1[qword_1004D1468];
  *(void *)char v6 = 0;
  *((void *)v6 + 1) = 0xE000000000000000;
  uint64_t v7 = &v1[qword_1004D1470];
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0xE000000000000000;
  *(void *)&v1[qword_1004D1478] = 0x4038000000000000;
  *(_DWORD *)&v1[qword_1004D1480] = 1136361472;
  v10.receiver = v1;
  v10.super_class = ObjectType;
  [super initWithCoder:a1];

  return v8;
}

id sub_1001D5F70(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1001D5C2C(a3);
}

uint64_t sub_1001D5F98()
{
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();

  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001D6218(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();

  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for RectangleLabelDetailsPlatter()
{
  uint64_t result = qword_1004D14B0;
  if (!qword_1004D14B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001D64F0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1001D65B0()
{
  return type metadata accessor for RectangleLabelDetailsPlatter();
}

double sub_1001D65B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + qword_1004C86F0;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v3 = *(void *)(v2 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 32))(ObjectType, v3);
    swift_unknownObjectRelease();
  }
  id v5 = [self generalPasteboard];
  id v6 = [self mainBundle];
  v26._object = (void *)0xE000000000000000;
  v7._uint64_t countAndFlagsBits = 0x4C414E4F47414944;
  v7._object = (void *)0xE800000000000000;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v26._uint64_t countAndFlagsBits = 0;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v26);

  sub_100012894((uint64_t *)&unk_1004D2460);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1003F8800;
  uint64_t v12 = *(void *)(v1 + qword_1004D1458);
  uint64_t v11 = *(void *)(v1 + qword_1004D1458 + 8);
  *(void *)(v10 + 56) = &type metadata for String;
  unint64_t v13 = sub_10001D424();
  *(void *)(v10 + 32) = v12;
  *(void *)(v10 + 40) = v11;
  uint64_t v14 = *(void *)(v1 + qword_1004D1460);
  uint64_t v15 = *(void *)(v1 + qword_1004D1460 + 8);
  *(void *)(v10 + 96) = &type metadata for String;
  *(void *)(v10 + 104) = v13;
  *(void *)(v10 + 64) = v13;
  *(void *)(v10 + 72) = v14;
  *(void *)(v10 + 80) = v15;
  uint64_t v16 = *(void *)(v1 + qword_1004D1468);
  uint64_t v17 = *(void *)(v1 + qword_1004D1468 + 8);
  *(void *)(v10 + 136) = &type metadata for String;
  *(void *)(v10 + 144) = v13;
  *(void *)(v10 + 112) = v16;
  *(void *)(v10 + 120) = v17;
  uint64_t v18 = *(void *)(v1 + qword_1004D1470);
  uint64_t v19 = *(void *)(v1 + qword_1004D1470 + 8);
  *(void *)(v10 + 176) = &type metadata for String;
  *(void *)(v10 + 184) = v13;
  *(void *)(v10 + 152) = v18;
  *(void *)(v10 + 160) = v19;
  *(void *)(v10 + 216) = &type metadata for String;
  *(void *)(v10 + 224) = v13;
  *(Swift::String *)(v10 + 192) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v5 setString:v20];

  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v21 = *(void *)(v2 + 8);
    uint64_t v22 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v22, v21);
    swift_unknownObjectRelease();
  }
  if (qword_1004C2C10 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_1004F8458;

  uint64_t v24 = v23 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  swift_beginAccess();
  double result = *(double *)(v24 + 56) + 1.0;
  *(double *)(v24 + 56) = result;
  return result;
}

void sub_1001D68E8(void *a1, double a2)
{
  sub_1001CD778();
  id v5 = v4;
  id v6 = self;
  id v7 = [v6 fontWithDescriptor:v5 size:0.0];

  [v7 pointSize];
  double v9 = v8;

  sub_1001CD778();
  uint64_t v11 = v10;
  id v12 = [v6 fontWithDescriptor:v10 size:0.0];

  [v12 pointSize];
  double v14 = v13;

  sub_1001CD778();
  uint64_t v16 = v15;
  id v17 = [a1 text];
  if (!v17) {
    goto LABEL_7;
  }
  uint64_t v18 = v17;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v19 < 1)
  {

LABEL_7:
    sub_1001CD778();
    id v31 = v30;
    id v32 = [v6 fontWithDescriptor:v30 size:0.0];

    [v32 pointSize];
    return;
  }
  sub_100012894(&qword_1004C9DF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003F87F0;
  *(void *)(inited + 32) = NSFontAttributeName;
  id v21 = v18;
  uint64_t v22 = NSFontAttributeName;
  sub_1001CD778();
  uint64_t v24 = v23;
  id v25 = [v6 fontWithDescriptor:v23 size:0.0];

  uint64_t v52 = sub_10001C99C(0, &qword_1004C4550);
  *(void *)(inited + 64) = v52;
  *(void *)(inited + 40) = v25;
  sub_1000E0F80(inited);
  type metadata accessor for Key(0);
  sub_1000278E0();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v21 sizeWithAttributes:isa];
  double v28 = v27;

  if (v28 > a2 && (double v29 = v9 * 0.2, v9 * 0.2 <= v14))
  {
    id v51 = v16;
    sub_100012894(&qword_1004C4548);
    while (1)
    {
      double v33 = v29 + (v14 - v29) * 0.5;
      id v34 = v21;
      id v35 = [v6 fontWithDescriptor:v51 size:v33];
      v55[4] = v52;
      v55[0] = v22;
      v55[1] = v35;
      char v36 = (void *)static _DictionaryStorage.allocate(capacity:)();
      sub_1001D6D8C((uint64_t)v55, (uint64_t)&v53);
      uint64_t v37 = v53;
      char v38 = v22;
      id v39 = v35;
      unint64_t v40 = sub_1000E214C(v37);
      if (v41) {
        break;
      }
      v36[(v40 >> 6) + 8] |= 1 << v40;
      *(void *)(v36[6] + 8 * v40) = v37;
      sub_100027938(&v54, (_OWORD *)(v36[7] + 32 * v40));
      uint64_t v42 = v36[2];
      BOOL v43 = __OFADD__(v42, 1);
      uint64_t v44 = v42 + 1;
      if (v43) {
        goto LABEL_23;
      }
      v36[2] = v44;
      sub_100012894(&qword_1004CA070);
      swift_arrayDestroy();
      Class v45 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_release();
      [v34 sizeWithAttributes:v45];
      double v47 = v46;

      double v48 = a2 - v47;
      if (v33 == v29 || v33 == v14)
      {

        return;
      }
      double v50 = v29 + (v14 - v29) * 0.5;
      if (v48 < 0.0 || (v50 = v14, double v29 = v29 + (v14 - v29) * 0.5, v48 > 0.0))
      {
        double v14 = v50;
        if (v29 <= v50) {
          continue;
        }
      }

      return;
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
  }
}

uint64_t sub_1001D6D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894(&qword_1004CA070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for InstrumentationState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *double result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001D6EC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InstrumentationState()
{
  return &type metadata for InstrumentationState;
}

uint64_t sub_1001D6EF8()
{
  uint64_t result = Contexts.UIKit.init()();
  qword_1004F8A90 = result;
  return result;
}

id sub_1001D6F18@<X0>(void *a1@<X8>)
{
  if (qword_1004C31D8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1004F8A90;
  *a1 = qword_1004F8A90;

  return v2;
}

unint64_t sub_1001D6F84(uint64_t a1)
{
  unint64_t result = sub_1001D6FAC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001D6FAC()
{
  unint64_t result = qword_1004D17D0;
  if (!qword_1004D17D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004D17D0);
  }
  return result;
}

void sub_1001D7000(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  sub_1001D728C();
}

uint64_t sub_1001D7078(uint64_t a1)
{
  int v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = qword_1004D17E0;
  sub_100012894((uint64_t *)&unk_1004D1980);
  swift_getKeyPath();
  uint64_t v5 = v3;
  *(void *)&v3[v4] = MutableStateValue.__allocating_init(_:_:)();

  sub_10002B8B4(a1, (uint64_t)v8);
  uint64_t v6 = StateObservingNSObject.init(configuration:)();
  sub_100013218(a1);
  return v6;
}

id sub_1001D7134(char *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = qword_1004D17E0;
  sub_100012894((uint64_t *)&unk_1004D1980);
  swift_getKeyPath();
  uint64_t v4 = a1;
  *(void *)&a1[v3] = MutableStateValue.__allocating_init(_:_:)();

  v6.receiver = v4;
  v6.super_class = ObjectType;
  return [super init];
}

uint64_t sub_1001D71CC()
{
  return swift_release();
}

uint64_t sub_1001D71DC()
{
  return swift_release();
}

uint64_t type metadata accessor for TabBarControllerDelegate()
{
  uint64_t result = qword_1004D1870;
  if (!qword_1004D1870) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001D7238()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1001D7280()
{
  return type metadata accessor for TabBarControllerDelegate();
}

void sub_1001D728C()
{
  self;
  if (swift_dynamicCastObjCClass())
  {
    uint64_t v1 = *(uint64_t (**)(unsigned char *))(**(void **)(v0 + qword_1004D17E0) + 400);
    swift_retain();
    uint64_t v2 = (void (*)(unsigned char *, void))v1(v9);
    *(unsigned char *)(v3 + 1) = 1;
    v2(v9, 0);
    swift_release();
    if (qword_1004C2B18 != -1) {
      swift_once();
    }
    unint64_t v4 = 0x800000010042C540;
    unint64_t v5 = 0xD000000000000018;
  }
  else
  {
    type metadata accessor for ViewController();
    if (!swift_dynamicCastClass()) {
      return;
    }
    objc_super v6 = *(uint64_t (**)(unsigned char *))(**(void **)(v0 + qword_1004D17E0) + 400);
    swift_retain();
    id v7 = (void (*)(unsigned char *, void))v6(v9);
    *(unsigned char *)(v8 + 1) = 0;
    v7(v9, 0);
    swift_release();
    if (qword_1004C2B18 != -1) {
      swift_once();
    }
    unint64_t v5 = 0xD00000000000001ALL;
    unint64_t v4 = 0x800000010042C520;
  }
  Log.debug(_:isPrivate:)(*(Swift::String *)&v5, 0);
}

uint64_t sub_1001D7488(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = sub_1000BEC00(a1, v3);
  __chkstk_darwin(v5);
  id v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  uint64_t v9 = sub_1001DE3C8((uint64_t)v7, v2, v3, v4);
  sub_100013218(a1);
  return v9;
}

uint64_t sub_1001D758C(void *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

uint64_t sub_1001D75B8()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  double v13 = sub_1001DE7D4;
  uint64_t v14 = v0;
  swift_retain();
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  swift_release();
  sub_10005536C();
  uint64_t v8 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_1001DE804;
  uint64_t v16 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_100492CD0;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001DEB04((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

void sub_1001D7928(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t *__return_ptr, uint64_t);
  uint64_t v4;
  unint64_t v5;
  void (*v7)(uint64_t *__return_ptr, uint64_t);
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void (*v19)(void);
  uint64_t v20[2];

  sub_1001D7C60();
  sub_1001D7F0C();
  uint64_t v3 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(a2 + 120) + 144);
  uint64_t v4 = swift_retain();
  v3(v20, v4);
  swift_release();
  uint64_t v5 = v20[0];
  if (!((unint64_t)v20[0] >> 62))
  {
    sub_1001D81D8();
LABEL_20:
    sub_10001F780(v5);
    return;
  }
  if ((unint64_t)v20[0] >> 62 != 3 || (v20[0] | 8) != 0xC000000000000008) {
    goto LABEL_20;
  }
  id v7 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(a2 + 112) + 144);
  uint64_t v8 = swift_retain();
  v7(v20, v8);
  swift_release();
  uint64_t v9 = sub_100201270(v20[0], v20[1]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20[0] = (uint64_t)_swiftEmptyArrayStorage;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10)
  {
    if (v10 < 1)
    {
      __break(1u);
      goto LABEL_37;
    }
    for (i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0) {
        uint64_t v12 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v12 = *(id *)(v9 + 8 * i + 32);
      }
      double v13 = v12;
      if ((*(uint64_t (**)(void))((swift_isaMask & *v12) + 0xD0))() == 9)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = v20[0];
    if (v20[0] < 0) {
      goto LABEL_33;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_33;
    }
  }
  if ((v14 & 0x4000000000000000) != 0)
  {
LABEL_33:
    swift_retain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    if (!v15) {
      goto LABEL_34;
    }
    goto LABEL_26;
  }
  uint64_t v15 = *(void *)(v14 + 16);
  swift_retain();
  if (v15)
  {
LABEL_26:
    if (v15 >= 1)
    {
      uint64_t v16 = 0;
      do
      {
        if ((v14 & 0xC000000000000001) != 0) {
          id v17 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v17 = *(id *)(v14 + 8 * v16 + 32);
        }
        uint64_t v18 = v17;
        ++v16;
        uint64_t v19 = (void (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *v17) + 0x160))();
        v19();

        swift_release();
      }
      while (v15 != v16);
      goto LABEL_34;
    }
LABEL_37:
    __break(1u);
    return;
  }
LABEL_34:
  swift_release_n();
}

uint64_t sub_1001D7C60()
{
  void (*v1)(_OWORD *__return_ptr, uint64_t);
  uint64_t v2;
  double *v3;
  uint64_t v4;
  uint64_t i;
  char *v6;
  void (*v7)(_OWORD *__return_ptr, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  long long v12;
  long long v13;
  uint64_t result;
  void (*v15)(_OWORD *__return_ptr, uint64_t);
  uint64_t v16;
  uint64_t v17;
  _OWORD v18[32];
  _OWORD __dst[32];
  void v20[7];
  _OWORD v21[3];
  uint64_t v22;

  uint64_t v1 = *(void (**)(_OWORD *__return_ptr, uint64_t))(**(void **)(v0 + 104) + 144);
  uint64_t v2 = swift_retain();
  v1(__dst, v2);
  swift_release();
  v21[0] = __dst[0];
  v21[1] = __dst[1];
  v21[2] = __dst[2];
  uint64_t v22 = *(void *)&__dst[3];
  sub_1000A5C28(v0 + 152, (uint64_t)v20);
  sub_1001DEA6C(v20, (void (*)(void, void, void, void, void, void, void))sub_1001DEA20);
  uint64_t v3 = sub_1000A51FC((uint64_t)v20);
  sub_1001DEA6C(v20, (void (*)(void, void, void, void, void, void, void))sub_1001D9990);
  sub_1001DEAAC((uint64_t)v21);
  uint64_t v4 = *((void *)v3 + 2);
  if (v4)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    for (i = 0; i != v4; ++i)
    {
      uint64_t v6 = (char *)v3 + i;
      sub_1001DB0D4(v6[32]);
    }
    swift_release();
    swift_bridgeObjectRelease_n();
    id v7 = *(void (**)(_OWORD *__return_ptr, uint64_t))(**(void **)(v0 + 104) + 144);
    uint64_t v8 = swift_retain();
    v7(__dst, v8);
    swift_release();
    uint64_t v10 = *((void *)&__dst[1] + 1);
    uint64_t v9 = *(void *)&__dst[1];
    uint64_t v11 = LODWORD(__dst[2]);
    uint64_t v12 = *(_OWORD *)((char *)&__dst[2] + 8);
    double v13 = __dst[0];
    goto LABEL_9;
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (qword_1004C29D8 != -1) {
    uint64_t result = swift_once();
  }
  if (qword_1004F8020)
  {
    swift_retain();
    swift_retain();
    StateValue.wrappedValue.getter();
    swift_release();
    memcpy(__dst, v18, sizeof(__dst));
    sub_100114D88((uint64_t)_swiftEmptyArrayStorage, (uint64_t *)__dst);
    sub_100016F7C((uint64_t)__dst);
    swift_release();
    sub_1001D99DC();
    sub_1001DA7B4();
    sub_1001DAF6C();
    uint64_t v15 = *(void (**)(_OWORD *__return_ptr, uint64_t))(**(void **)(v0 + 104) + 144);
    uint64_t v16 = swift_retain();
    v15(v18, v16);
    swift_release();
    uint64_t v10 = *((void *)&v18[1] + 1);
    uint64_t v9 = *(void *)&v18[1];
    uint64_t v11 = LODWORD(v18[2]);
    uint64_t v12 = *(_OWORD *)((char *)&v18[2] + 8);
    double v13 = v18[0];
LABEL_9:
    id v17 = *(void *)(v0 + 152);
    *(_OWORD *)(v0 + 152) = v13;
    *(void *)(v0 + 168) = v9;
    *(void *)(v0 + 176) = v10;
    *(void *)(v0 + 184) = v11;
    *(_OWORD *)(v0 + 192) = v12;
    return sub_1001D9990(v17);
  }
  __break(1u);
  return result;
}

void sub_1001D7F0C()
{
  void (*v2)(unint64_t *__return_ptr, uint64_t);
  uint64_t v3;
  char v4;
  void (*v5)(unint64_t *__return_ptr, uint64_t);
  uint64_t v6;
  void *v7;
  void *v8;
  void (*v9)(unint64_t *__return_ptr, uint64_t);
  uint64_t v10;
  unint64_t v11;
  void (*v12)(unint64_t *__return_ptr, uint64_t);
  uint64_t v13;
  void *v14;
  void *v15;
  void (*v16)(unint64_t *__return_ptr, uint64_t);
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(unint64_t *);
  unint64_t v23;
  void *v24;
  id v25;
  id v26;

  uint64_t v1 = v0;
  uint64_t v2 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v0 + 112) + 144);
  uint64_t v3 = swift_retain();
  v2(&v23, v3);
  swift_release();
  uint64_t v4 = sub_100200CD0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4)
  {
    uint64_t v5 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v0 + 96) + 144);
    uint64_t v6 = swift_retain();
    v5(&v23, v6);
    swift_release();
    id v7 = (void *)v23;
    uint64_t v8 = v24;

    if (!v8)
    {
      NSString v20 = *(void *)(v1 + 120);
      id v21 = 0xC000000000000000;
      goto LABEL_10;
    }
  }
  uint64_t v9 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v1 + 120) + 144);
  uint64_t v10 = swift_retain();
  v9(&v23, v10);
  swift_release();
  uint64_t v11 = v23;
  sub_10001F780(v23);
  if (v11 == 0xC000000000000000)
  {
    uint64_t v12 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v1 + 96) + 144);
    double v13 = swift_retain();
    v12(&v23, v13);
    swift_release();
    uint64_t v14 = (void *)v23;
    uint64_t v15 = v24;

    if (v15) {
      goto LABEL_8;
    }
    uint64_t v16 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v1 + 112) + 144);
    id v17 = swift_retain();
    v16(&v23, v17);
    swift_release();
    uint64_t v18 = sub_100201270(v23, (uint64_t)v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v19)
    {
LABEL_8:
      NSString v20 = *(void *)(v1 + 120);
      id v21 = 0xC000000000000008;
LABEL_10:
      uint64_t v23 = v21;
      uint64_t v22 = *(void (**)(unint64_t *))(*(void *)v20 + 392);
      swift_retain();
      v22(&v23);
      swift_release();
    }
  }
}

uint64_t sub_1001D81D8()
{
  void (*v1)(uint64_t *__return_ptr, uint64_t);
  uint64_t v2;
  unint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  void *v8;
  void *v9;
  void (*v10)(void);
  uint64_t v11[2];

  uint64_t v1 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v0 + 112) + 144);
  uint64_t v2 = swift_retain();
  v1(v11, v2);
  swift_release();
  uint64_t v3 = sub_100201270(v11[0], v11[1]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1001DE824(v3, (uint64_t)&off_100485DE0);
  swift_bridgeObjectRelease();
  if (!((unint64_t)v4 >> 62))
  {
    uint64_t v5 = *(void *)(((unint64_t)v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v5 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v5 >= 1)
  {
    id v7 = 0;
    do
    {
      if (((unint64_t)v4 & 0xC000000000000001) != 0) {
        uint64_t v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v8 = *(id *)&v4[v7 + 4];
      }
      uint64_t v9 = v8;
      ++v7;
      uint64_t v10 = (void (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *v8) + 0x148))();
      v10();

      swift_release();
    }
    while (v5 != v7);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_1001D8390(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t *__return_ptr, uint64_t);
  uint64_t v3;
  unint64_t v4;
  uint64_t v6[2];

  uint64_t v2 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(a2 + 112) + 144);
  uint64_t v3 = swift_retain();
  v2(v6, v3);
  swift_release();
  uint64_t v4 = sub_100201270(v6[0], v6[1]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001D844C(v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001D844C(unint64_t a1)
{
  uint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_59:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
LABEL_60:
    return swift_bridgeObjectRelease();
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_60;
  }
LABEL_3:
  uint64_t v3 = 0;
  uint64_t v38 = v2;
  unint64_t v39 = v1 & 0xC000000000000001;
  uint64_t v37 = v1 + 32;
  while (1)
  {
    if (v39) {
      uint64_t v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v9 = *(id *)(v37 + 8 * v3);
    }
    uint64_t v10 = v9;
    if (__OFADD__(v3++, 1))
    {
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    uint64_t v12 = (void (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *v9) + 0x178))();
    v12();
    swift_release();
    double v13 = *(uint64_t (**)(unsigned char *))(**(void **)(v40 + 112) + 400);
    swift_retain();
    uint64_t v14 = v13(v46);
    type metadata accessor for WorldLine();
    if (!swift_dynamicCastClass())
    {
      type metadata accessor for WorldRectangle();
      if (!swift_dynamicCastClass())
      {
        type metadata accessor for WorldPerson();
        if (!swift_dynamicCastClass()) {
          goto LABEL_64;
        }
      }
    }
    BOOL v43 = (void (*)(unsigned char *, void))v14;
    swift_getKeyPath();
    uint64_t v42 = (void (*)(unint64_t *, void))swift_modifyAtWritableKeyPath();
    uint64_t v16 = v15;
    unint64_t v17 = *v15;
    if ((unint64_t)*v15 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v1) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v1 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v1) {
        goto LABEL_7;
      }
    }
    unint64_t v41 = v17 & 0xC000000000000001;
    if ((v17 & 0xC000000000000001) != 0)
    {
      uint64_t v18 = v1;
      id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_53;
      }
      uint64_t v18 = v1;
      id v19 = *(id *)(v17 + 32);
    }
    NSString v20 = v19;
    uint64_t v1 = type metadata accessor for MeasureObject();
    char v21 = static NSObject.== infix(_:_:)();

    unint64_t v22 = 0;
    if ((v21 & 1) == 0) {
      break;
    }
LABEL_21:
    uint64_t v1 = *v16;
    int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *uint64_t v16 = v1;
    if (!isUniquelyReferenced_nonNull_bridgeObject || v1 < 0 || (v1 & 0x4000000000000000) != 0)
    {
      uint64_t v1 = sub_100030BAC(v1);
      *uint64_t v16 = v1;
    }
    uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
    unint64_t v5 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v22 >= v5) {
      goto LABEL_54;
    }
    unint64_t v6 = v5 - 1;
    unint64_t v7 = v4 + 8 * v22;
    uint64_t v8 = *(void **)(v7 + 32);
    memmove((void *)(v7 + 32), (const void *)(v7 + 40), 8 * (v5 - 1 - v22));
    *(void *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    uint64_t v1 = (uint64_t)v16;
    specialized Array._endMutation()();

LABEL_7:
    v42(&v44, 0);
    swift_release();
    v43(v46, 0);

    swift_release();
    if (v3 == v38) {
      return swift_bridgeObjectRelease();
    }
  }
  if (v18 == 1) {
    goto LABEL_7;
  }
  if (v41)
  {
    id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
      goto LABEL_58;
    }
    id v24 = *(id *)(v17 + 40);
  }
  id v25 = v24;
  char v26 = static NSObject.== infix(_:_:)();

  if (v26)
  {
    unint64_t v22 = 1;
    goto LABEL_21;
  }
  if (v18 == 2) {
    goto LABEL_7;
  }
  uint64_t v36 = v18;
  if (v41)
  {
    id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_37:
    double v28 = v27;
    char v29 = static NSObject.== infix(_:_:)();

    if ((v29 & 1) == 0)
    {
      uint64_t v30 = 2;
      while (1)
      {
        unint64_t v22 = v30 + 1;
        if (__OFADD__(v30, 1)) {
          goto LABEL_55;
        }
        if (v22 == v36) {
          goto LABEL_7;
        }
        if (v41)
        {
          id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v22 & 0x8000000000000000) != 0) {
            goto LABEL_56;
          }
          if (v22 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_57;
          }
          id v31 = *(id *)(v17 + 32 + 8 * v22);
        }
        id v32 = v31;
        char v33 = static NSObject.== infix(_:_:)();

        ++v30;
        if (v33) {
          goto LABEL_21;
        }
      }
    }
    unint64_t v22 = 2;
    goto LABEL_21;
  }
  if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
  {
    id v27 = *(id *)(v17 + 48);
    goto LABEL_37;
  }
  __break(1u);
LABEL_64:
  unint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  unint64_t v44 = 0xD00000000000001CLL;
  unint64_t v45 = 0x8000000100422390;
  swift_getObjectType();
  v35._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v35);
  swift_bridgeObjectRelease();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1001D8A14(uint64_t a1)
{
  void (*v15)(void *__return_ptr, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  char v30;
  void (*v31)(void);
  uint64_t (*v32)(void *);
  void (*v33)(void *, void);
  void (*v34)(uint64_t *, void);
  id v35;
  void (*v36)(void *__return_ptr, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t (*v42)(void);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v48;
  char v49;
  uint64_t (*v50)(void *);
  void (*v51)(void *, void);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(void);
  uint64_t v56;
  void (*v57)(void *);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  void *v66;
  uint64_t v67;
  int64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71[4];
  void v72[4];

  uint64_t v2 = v1;
  Swift::String v64 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  Swift::String v65 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  unint64_t v7 = v5;
  int64_t v8 = 0;
  char v66 = result;
  double v63 = v1;
  while (1)
  {
    if (v7)
    {
      uint64_t v67 = (v7 - 1) & v7;
      char v68 = v8;
      unint64_t v9 = __clz(__rbit64(v7)) | (v8 << 6);
      goto LABEL_23;
    }
    int64_t v10 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_87;
    }
    if (v10 >= v65) {
      return (void *)swift_release();
    }
    unint64_t v11 = *(void *)(v64 + 8 * v10);
    int64_t v12 = v8 + 1;
    if (!v11)
    {
      int64_t v12 = v8 + 2;
      if (v8 + 2 >= v65) {
        return (void *)swift_release();
      }
      unint64_t v11 = *(void *)(v64 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v8 + 3;
        if (v8 + 3 >= v65) {
          return (void *)swift_release();
        }
        unint64_t v11 = *(void *)(v64 + 8 * v12);
        if (!v11) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v67 = (v11 - 1) & v11;
    char v68 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_23:
    uint64_t v14 = (uint64_t *)(v66[6] + 16 * v9);
    id v69 = *v14;
    uint64_t v15 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v2 + 112) + 144);
    id v70 = v14[1];
    swift_bridgeObjectRetain();
    uint64_t v16 = swift_retain();
    v15(v72, v16);
    swift_release();
    unint64_t v17 = v72[1];
    uint64_t v18 = v72[2];
    v71[0] = v72[0];
    swift_bridgeObjectRetain();
    sub_100012894(&qword_1004C4358);
    sub_100012894(&qword_1004C4360);
    swift_dynamicCast();
    id v19 = v72[0];
    if (v72[0] >> 62)
    {
      type metadata accessor for MeasureObject();
      swift_bridgeObjectRetain();
      NSString v20 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      type metadata accessor for MeasureObject();
      NSString v20 = v19;
    }
    swift_bridgeObjectRelease();
    v71[0] = v17;
    swift_bridgeObjectRetain();
    sub_100012894(&qword_1004C54D8);
    swift_dynamicCast();
    char v21 = v72[0];
    if (v72[0] >> 62)
    {
      type metadata accessor for MeasureObject();
      swift_bridgeObjectRetain();
      unint64_t v22 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      type metadata accessor for MeasureObject();
      unint64_t v22 = v21;
    }
    swift_bridgeObjectRelease();
    v72[0] = v20;
    sub_1001225D4(v22);
    uint64_t v23 = v72[0];
    if ([self jasperAvailable])
    {
      v71[0] = v18;
      swift_bridgeObjectRetain();
      sub_100012894(&qword_1004C6900);
      swift_dynamicCast();
      id v24 = v72[0];
      if (v72[0] >> 62)
      {
        type metadata accessor for MeasureObject();
        swift_bridgeObjectRetain();
        id v25 = _bridgeCocoaArray<A>(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        type metadata accessor for MeasureObject();
        id v25 = v24;
      }
      swift_bridgeObjectRelease();
      v72[0] = v23;
      sub_1001225D4(v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v23 = v72[0];
      if (v72[0] >> 62)
      {
LABEL_31:
        swift_bridgeObjectRetain();
        char v26 = _CocoaArrayWrapper.endIndex.getter();
        goto LABEL_34;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v23 >> 62) {
        goto LABEL_31;
      }
    }
    char v26 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
LABEL_34:
    if (!v26) {
      goto LABEL_4;
    }
    if ((v23 & 0xC000000000000001) != 0) {
      id v27 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v27 = *(id *)(v23 + 32);
    }
    double v28 = v27;
    if ((*(uint64_t (**)(void))((swift_isaMask & *v27) + 0xB8))() == v69 && v29 == v70)
    {
LABEL_39:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0)
      {

        if (v26 != 1)
        {
          unint64_t v44 = 5;
          while (1)
          {
            uint64_t result = (v23 & 0xC000000000000001) != 0
                   ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
                   : *(id *)(v23 + 8 * v44);
            double v28 = result;
            unint64_t v45 = v44 - 3;
            if (__OFADD__(v44 - 4, 1)) {
              break;
            }
            if ((*(uint64_t (**)(void))((swift_isaMask & *result) + 0xB8))() == v69 && v46 == v70) {
              goto LABEL_39;
            }
            double v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v48) {
              goto LABEL_41;
            }

            ++v44;
            if (v45 == v26) {
              goto LABEL_4;
            }
          }
          __break(1u);
LABEL_87:
          __break(1u);
          goto LABEL_88;
        }
LABEL_4:
        swift_bridgeObjectRelease_n();
LABEL_5:
        uint64_t result = (void *)swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
LABEL_41:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for WorldRectangle();
    if (!swift_dynamicCastClass()) {
      goto LABEL_77;
    }
    id v31 = (void (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *v28) + 0x178))();
    v31();
    swift_release();
    id v32 = *(uint64_t (**)(void *))(**(void **)(v2 + 112) + 400);
    swift_retain();
    char v33 = (void (*)(void *, void))v32(v72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100201D68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v34 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
    sub_100069ECC((uint64_t)v28);

    v34(v71, 0);
    swift_release();
    v33(v72, 0);
    swift_release();
    uint64_t v36 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v2 + 88) + 144);
    uint64_t v37 = swift_retain();
    v36(v72, v37);
    swift_release();
    uint64_t v38 = v72[0];
    if (v72[0] >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
      if (!v39) {
        goto LABEL_76;
      }
    }
    else
    {
      unint64_t v39 = *(void *)((v72[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v39) {
        goto LABEL_76;
      }
    }
    if ((v38 & 0xC000000000000001) != 0) {
      uint64_t v40 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v40 = *(id *)(v38 + 32);
    }
    unint64_t v41 = v40;
    uint64_t v42 = *(uint64_t (**)(void))((swift_isaMask & *v40) + 0xB8);
    if (v42() != v69 || v43 != v70)
    {
      id v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v49) {
        goto LABEL_63;
      }

      uint64_t v2 = v63;
      if (v39 != 1)
      {
        char v58 = 5;
        while (1)
        {
          uint64_t result = (v38 & 0xC000000000000001) != 0
                 ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
                 : *(id *)(v38 + 8 * v58);
          unint64_t v41 = result;
          id v59 = v58 - 3;
          if (__OFADD__(v58 - 4, 1)) {
            break;
          }
          uint64_t v42 = *(uint64_t (**)(void))((swift_isaMask & *result) + 0xB8);
          if (v42() == v69 && v60 == v70) {
            goto LABEL_48;
          }
          uint64_t v62 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v62) {
            goto LABEL_63;
          }

          ++v58;
          uint64_t v2 = v63;
          if (v59 == v39) {
            goto LABEL_76;
          }
        }
LABEL_88:
        __break(1u);
        goto LABEL_89;
      }
LABEL_76:
      swift_bridgeObjectRelease_n();
LABEL_77:

      goto LABEL_5;
    }
LABEL_48:
    swift_bridgeObjectRelease();
LABEL_63:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    double v50 = *(uint64_t (**)(void *))(**(void **)(v63 + 88) + 400);
    swift_retain();
    id v51 = (void (*)(void *, void))v50(v72);
    uint64_t v52 = v42();
    uint64_t v2 = v63;
    sub_100030354(v52, v53);
    swift_bridgeObjectRelease();
    v51(v72, 0);
    long long v54 = swift_release();
    id v55 = (void (*)(void))(*(uint64_t (**)(uint64_t))((swift_isaMask & *v41) + 0x178))(v54);
    v55();
    swift_release();
    char v56 = *(void *)(v63 + 120);
    v72[0] = 0xC000000000000008;
    uint64_t v57 = *(void (**)(void *))(*(void *)v56 + 392);
    swift_retain();
    v57(v72);

    uint64_t result = (void *)swift_release();
LABEL_6:
    unint64_t v7 = v67;
    int64_t v8 = v68;
  }
  uint64_t v13 = v8 + 4;
  if (v8 + 4 >= v65) {
    return (void *)swift_release();
  }
  unint64_t v11 = *(void *)(v64 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v8 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v65) {
      return (void *)swift_release();
    }
    unint64_t v11 = *(void *)(v64 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_89:
  __break(1u);
  return result;
}

void sub_1001D9534(uint64_t a1)
{
  void (*v5)(void *__return_ptr, uint64_t);
  id v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  const char *v10;
  Swift::String v11;
  NSString v12;
  long long v13;
  void v14[3];

  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  if (!qword_1004F7FE0)
  {
    __break(1u);
    JUMPOUT(0x1001D9760);
  }
  uint64_t v2 = *(void *)(qword_1004F7FE0 + 24);
  if (v2)
  {
    uint64_t v3 = 0xD000000000000010;
    uint64_t v4 = *(void **)(v2 + qword_1004CD148);
    v14[1] = 2895028208;
    v14[2] = 0xA400000000000000;
    unint64_t v5 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(a1 + 120) + 144);
    unint64_t v6 = v4;
    unint64_t v7 = swift_retain();
    v5(v14, v7);
    swift_release();
    int64_t v8 = v14[0];
    unint64_t v9 = (void *)0x8000000100423B30;
    switch(v14[0] >> 62)
    {
      case 1:
        int64_t v10 = "Measuring Person";
        goto LABEL_8;
      case 2:
        uint64_t v3 = 0xD000000000000028;
        int64_t v10 = "Pointing at confirmed Person Measurement";
LABEL_8:
        unint64_t v9 = (void *)((unint64_t)(v10 - 32) | 0x8000000000000000);
        break;
      case 3:
        *((void *)&v13 + 1) = v14[0];
        *(void *)&uint64_t v13 = v14[0] + 0x4000000000000000;
        unint64_t v9 = (void *)0xE400000000000000;
        uint64_t v3 = 1701602377;
        switch((unint64_t)(v13 >> 3))
        {
          case 1uLL:
            unint64_t v9 = (void *)0xE900000000000067;
            uint64_t v3 = 0x6E69686372616553;
            break;
          case 2uLL:
            unint64_t v9 = (void *)0xEB00000000656E69;
            uint64_t v3 = 0x4C20676E69646441;
            break;
          case 3uLL:
            unint64_t v9 = (void *)0xEC000000746E696FLL;
            uint64_t v3 = 0x5020676E69766F4DLL;
            break;
          default:
            goto LABEL_9;
        }
        break;
      default:
        break;
    }
LABEL_9:
    v11._uint64_t countAndFlagsBits = v3;
    v11._object = v9;
    String.append(_:)(v11);
    swift_bridgeObjectRelease();
    sub_10001F780(v8);
    int64_t v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v6 setText:v12];
  }
}

uint64_t sub_1001D9780()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 152);

  return sub_1001D9990(v1);
}

uint64_t sub_1001D980C()
{
  uint64_t v0 = StateObserver.deinit();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1001D9990(*(void *)(v0 + 152));
  return v0;
}

uint64_t sub_1001D98A0()
{
  sub_1001D980C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MeasurementsStateReducer()
{
  uint64_t result = qword_1004D19B8;
  if (!qword_1004D19B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001D991C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1001D9990(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

BOOL sub_1001D99DC()
{
  void (*v2)(uint64_t *__return_ptr, uint64_t);
  uint64_t v3;
  long long v5;
  void (*v6)(uint64_t *__return_ptr, uint64_t);
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t i;
  void *v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t j;
  void *v17;
  void *v18;
  uint64_t (*v19)(void);
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  BOOL v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t *);
  void (*v29)(void, void);
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  char v41;
  void *v42;
  void *v43;
  uint64_t v44;
  char v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  char v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t);
  void (*v54)(void);
  uint64_t v55;
  void (*v56)(uint64_t *);
  uint64_t v57;
  void (*v58)(void);
  uint64_t (*v59)(uint64_t *);
  uint64_t v60;
  unint64_t *v61;
  unint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  char v66;
  id v67;
  void *v68;
  char v69;
  id v70;
  void *v71;
  char v72;
  id v73;
  void *v74;
  char v75;
  uint64_t v76;
  uint64_t k;
  void *v78;
  void *v79;
  uint64_t (*v80)(void);
  char v81;
  unint64_t v82;
  uint64_t v83;
  Swift::String v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  void (*v93)(void, void);
  void (*v94)(unint64_t *, void);
  void (*v95)(uint64_t *, void);
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99[2];

  uint64_t v1 = v0;
  uint64_t v2 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v0 + 120) + 144);
  uint64_t v3 = swift_retain();
  v2(v99, v3);
  swift_release();
  switch((unint64_t)v99[0] >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_10001F780(v99[0]);
      return 0;
    case 3uLL:
      *((void *)&v5 + 1) = v99[0];
      *(void *)&unint64_t v5 = v99[0] + 0x4000000000000000;
      if ((unint64_t)(v5 >> 3) < 2) {
        goto LABEL_6;
      }
      return 0;
    default:
      sub_10001F780(v99[0]);
LABEL_6:
      unint64_t v6 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v0 + 112) + 144);
      unint64_t v7 = swift_retain();
      v6(v99, v7);
      swift_release();
      int64_t v8 = sub_100201270(v99[0], v99[1]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v99[0] = (uint64_t)_swiftEmptyArrayStorage;
      if (v8 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      int64_t v10 = (unint64_t)&swift_isaMask;
      if (v9)
      {
        if (v9 < 1)
        {
          __break(1u);
LABEL_150:
          __break(1u);
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          Swift::String v97 = 0;
          double v98 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          _StringGuts.grow(_:)(30);
          swift_bridgeObjectRelease();
          Swift::String v97 = 0xD00000000000001CLL;
          double v98 = 0x8000000100422390;
          swift_getObjectType();
          v84._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
          String.append(_:)(v84);
          swift_bridgeObjectRelease();
          _assertionFailure(_:_:file:line:flags:)();
          __break(1u);
          JUMPOUT(0x1001DA7A4);
        }
        for (i = 0; i != v9; ++i)
        {
          if ((v8 & 0xC000000000000001) != 0) {
            int64_t v12 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            int64_t v12 = *(id *)(v8 + 8 * i + 32);
          }
          uint64_t v13 = v12;
          if ((*(uint64_t (**)(void))((swift_isaMask & *v12) + 0xD0))() == 6)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          else
          {
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v14 = v99[0];
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = (unint64_t)_swiftEmptyArrayStorage;
      }
      v99[0] = (uint64_t)_swiftEmptyArrayStorage;
      if ((v14 & 0x8000000000000000) == 0 && (v14 & 0x4000000000000000) == 0)
      {
        uint64_t v15 = *(void *)(v14 + 16);
        swift_retain();
        if (v15) {
          goto LABEL_23;
        }
LABEL_35:
        swift_release();
        char v21 = (unint64_t)_swiftEmptyArrayStorage;
        goto LABEL_36;
      }
      swift_retain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      if (!v15) {
        goto LABEL_35;
      }
LABEL_23:
      if (v15 < 1) {
        goto LABEL_150;
      }
      for (j = 0; j != v15; ++j)
      {
        if ((v14 & 0xC000000000000001) != 0) {
          unint64_t v17 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          unint64_t v17 = *(id *)(v14 + 8 * j + 32);
        }
        uint64_t v18 = v17;
        id v19 = (uint64_t (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *v17) + 0x100))();
        NSString v20 = v19();
        swift_release();
        if (v20)
        {
        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
      }
      swift_release();
      char v21 = v99[0];
LABEL_36:
      uint64_t v85 = v15;
      id v86 = v14;
      id v87 = v21;
      if ((v21 & 0x8000000000000000) != 0 || (v21 & 0x4000000000000000) != 0) {
        goto LABEL_132;
      }
      unint64_t v22 = *(void *)(v21 + 16);
      swift_retain();
      id v88 = v22;
      if (v22)
      {
        do
        {
          uint64_t v23 = 0;
          char v92 = v1;
          while (1)
          {
            id v24 = (v87 & 0xC000000000000001) != 0
                ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
                : *(id *)(v87 + 32 + 8 * v23);
            id v25 = v24;
            char v26 = __OFADD__(v23, 1);
            id v27 = v23 + 1;
            if (v26) {
              break;
            }
            id v96 = v27;
            double v28 = *(uint64_t (**)(uint64_t *))(**(void **)(v1 + 88) + 400);
            swift_retain();
            char v29 = (void (*)(void, void))v28(v99);
            id v31 = v30;
            id v32 = (*(uint64_t (**)(void))((*(void *)v10 & *v25) + 0xB8))();
            id v34 = v33;
            Swift::String v35 = *v31;
            if ((unint64_t)*v31 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
              if (!v36)
              {
LABEL_88:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_89;
              }
            }
            else
            {
              uint64_t v36 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v36) {
                goto LABEL_88;
              }
            }
            id v91 = v35 & 0xC000000000000001;
            unint64_t v93 = v29;
            if ((v35 & 0xC000000000000001) != 0) {
              uint64_t v37 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              uint64_t v37 = *(id *)(v35 + 32);
            }
            uint64_t v38 = v37;
            if ((*(uint64_t (**)(void))((*(void *)v10 & *v37) + 0xB8))() == v32 && v39 == v34)
            {
              int64_t v10 = 0;
              goto LABEL_59;
            }
            unint64_t v41 = _stringCompareWithSmolCheck(_:_:expecting:)();

            swift_bridgeObjectRelease();
            if (v41)
            {
              int64_t v10 = 0;
              goto LABEL_57;
            }
            uint64_t v1 = v92;
            if (v36 != 1)
            {
              if (v91) {
                BOOL v43 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                BOOL v43 = *(id *)(v35 + 40);
              }
              uint64_t v38 = v43;
              if ((*(uint64_t (**)(void))((swift_isaMask & *v43) + 0xB8))() == v32 && v44 == v34)
              {
                int64_t v10 = 1;
              }
              else
              {
                double v46 = _stringCompareWithSmolCheck(_:_:expecting:)();

                swift_bridgeObjectRelease();
                if (v46)
                {
                  int64_t v10 = 1;
LABEL_57:
                  char v29 = v93;
LABEL_60:
                  uint64_t v1 = v92;
                  swift_bridgeObjectRelease();
                  uint64_t v42 = (void *)sub_1000305A4(v10);
                  swift_bridgeObjectRelease();

LABEL_61:
                  int64_t v10 = (unint64_t)&swift_isaMask;
LABEL_89:
                  v29(v99, 0);
                  goto LABEL_90;
                }
                uint64_t v1 = v92;
                if (v36 == 2)
                {
LABEL_86:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_61;
                }
                double v47 = 6;
                while (1)
                {
                  int64_t v10 = v47 - 4;
                  CGFloat v89 = v47;
                  double v48 = v91
                      ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
                      : *(id *)(v35 + 8 * v47);
                  uint64_t v38 = v48;
                  if ((*(uint64_t (**)(void))((swift_isaMask & *v48) + 0xB8))() == v32 && v49 == v34) {
                    break;
                  }
                  id v51 = _stringCompareWithSmolCheck(_:_:expecting:)();

                  swift_bridgeObjectRelease();
                  if (v51) {
                    goto LABEL_57;
                  }
                  uint64_t v1 = v92;
                  char v29 = v93;
                  if (__OFADD__(v10, 1)) {
                    goto LABEL_130;
                  }
                  double v47 = v89 + 1;
                  if (v10 + 1 == v36) {
                    goto LABEL_86;
                  }
                }
              }
LABEL_59:
              char v29 = v93;
              swift_bridgeObjectRelease();

              goto LABEL_60;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            int64_t v10 = (unint64_t)&swift_isaMask;
            v29(v99, 0);
LABEL_90:
            uint64_t v52 = swift_release();
            uint64_t v53 = *(uint64_t (**)(uint64_t))((*(void *)v10 & *v25) + 0x178);
            long long v54 = (void (*)(void))v53(v52);
            v54();
            swift_release();
            id v55 = *(void *)(v1 + 120);
            v99[0] = 0xC000000000000008;
            char v56 = *(void (**)(uint64_t *))(*(void *)v55 + 392);
            swift_retain();
            v56(v99);
            uint64_t v57 = swift_release();
            char v58 = (void (*)(void))v53(v57);
            v58();
            swift_release();
            id v59 = *(uint64_t (**)(uint64_t *))(**(void **)(v1 + 112) + 400);
            swift_retain();
            id v60 = v59(v99);
            type metadata accessor for WorldLine();
            if (!swift_dynamicCastClass())
            {
              type metadata accessor for WorldRectangle();
              if (!swift_dynamicCastClass())
              {
                type metadata accessor for WorldPerson();
                if (!swift_dynamicCastClass()) {
                  goto LABEL_152;
                }
              }
            }
            CGFloat v95 = (void (*)(uint64_t *, void))v60;
            swift_getKeyPath();
            id v94 = (void (*)(unint64_t *, void))swift_modifyAtWritableKeyPath();
            uint64_t v62 = *v61;
            if (*v61 >> 62)
            {
              swift_bridgeObjectRetain();
              double v63 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              if (!v63) {
                goto LABEL_42;
              }
            }
            else
            {
              double v63 = *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (!v63) {
                goto LABEL_42;
              }
            }
            double v90 = v62 & 0xC000000000000001;
            if ((v62 & 0xC000000000000001) != 0)
            {
              Swift::String v64 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (!*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_126;
              }
              Swift::String v64 = *(id *)(v62 + 32);
            }
            Swift::String v65 = v64;
            type metadata accessor for MeasureObject();
            char v66 = static NSObject.== infix(_:_:)();

            int64_t v10 = 0;
            if ((v66 & 1) == 0)
            {
              if (v63 == 1) {
                goto LABEL_42;
              }
              if (v90)
              {
                uint64_t v67 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                if (*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
                  goto LABEL_131;
                }
                uint64_t v67 = *(id *)(v62 + 40);
              }
              char v68 = v67;
              id v69 = static NSObject.== infix(_:_:)();

              if (v69)
              {
                int64_t v10 = 1;
              }
              else
              {
                if (v63 == 2) {
                  goto LABEL_42;
                }
                if (v90)
                {
                  id v70 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else
                {
                  if (*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL) {
                    goto LABEL_151;
                  }
                  id v70 = *(id *)(v62 + 48);
                }
                id v71 = v70;
                unint64_t v72 = static NSObject.== infix(_:_:)();

                if ((v72 & 1) == 0)
                {
                  uint64_t v1 = 2;
                  while (1)
                  {
                    int64_t v10 = v1 + 1;
                    if (__OFADD__(v1, 1)) {
                      goto LABEL_127;
                    }
                    if (v10 == v63) {
                      goto LABEL_42;
                    }
                    if (v90)
                    {
                      uint64_t v73 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                    }
                    else
                    {
                      if ((v10 & 0x8000000000000000) != 0) {
                        goto LABEL_128;
                      }
                      if (v10 >= *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                        goto LABEL_129;
                      }
                      uint64_t v73 = *(id *)(v62 + 32 + 8 * v10);
                    }
                    uint64_t v74 = v73;
                    id v75 = static NSObject.== infix(_:_:)();

                    ++v1;
                    if (v75) {
                      goto LABEL_41;
                    }
                  }
                }
                int64_t v10 = 2;
              }
            }
LABEL_41:

LABEL_42:
            v94(&v97, 0);
            swift_release();
            v95(v99, 0);

            swift_release();
            uint64_t v23 = v96;
            uint64_t v1 = v92;
            int64_t v10 = (unint64_t)&swift_isaMask;
            if (v96 == v88) {
              goto LABEL_133;
            }
          }
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v76 = _CocoaArrayWrapper.endIndex.getter();
          swift_release();
          id v88 = v76;
        }
        while (v76);
      }
LABEL_133:
      swift_release_n();
      v99[0] = (uint64_t)_swiftEmptyArrayStorage;
      if (v85)
      {
        for (k = 0; k != v85; ++k)
        {
          if ((v86 & 0xC000000000000001) != 0) {
            uint64_t v78 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            uint64_t v78 = *(id *)(v86 + 8 * k + 32);
          }
          id v79 = v78;
          uint64_t v80 = (uint64_t (*)(void))(*(uint64_t (**)(void))((*(void *)v10 & *v78) + 0x100))();
          unint64_t v81 = v80();
          swift_release();
          if (v81)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          else
          {
          }
        }
        swift_release();
        uint64_t v82 = v99[0];
        if (v99[0] < 0) {
          goto LABEL_148;
        }
      }
      else
      {
        swift_release();
        uint64_t v82 = (unint64_t)_swiftEmptyArrayStorage;
        if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
        {
LABEL_148:
          swift_bridgeObjectRetain();
          char v83 = _CocoaArrayWrapper.endIndex.getter();
          swift_release();
          goto LABEL_147;
        }
      }
      if ((v82 & 0x4000000000000000) != 0) {
        goto LABEL_148;
      }
      char v83 = *(void *)(v82 + 16);
LABEL_147:
      swift_release();
      return v83 != 0;
  }
}

uint64_t sub_1001DA7B4()
{
  void (*v1)(uint64_t *__return_ptr, uint64_t);
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t i;
  void *v6;
  void *v7;
  uint64_t (*v8)(void);
  uint64_t (*v9)(void);
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void (*v22)(void);
  uint64_t (*v23)(uint64_t *);
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  id v27;
  void *v28;
  char v29;
  unint64_t v30;
  int isUniquelyReferenced_nonNull_bridgeObject;
  id v32;
  void *v33;
  char v34;
  id v35;
  void *v36;
  char v37;
  uint64_t v38;
  id v39;
  void *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  Swift::String v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void (*v51)(unint64_t *, void);
  void (*v52)(uint64_t *, void);
  unint64_t v53;
  unint64_t v54;
  uint64_t v55[2];

  uint64_t v1 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v0 + 112) + 144);
  uint64_t v2 = swift_retain();
  v1(v55, v2);
  swift_release();
  uint64_t v3 = sub_100201270(v55[0], v55[1]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v55[0] = (uint64_t)_swiftEmptyArrayStorage;
  if (v3 >> 62) {
    goto LABEL_75;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  if (!v4)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = (unint64_t)_swiftEmptyArrayStorage;
    double v46 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_76;
    }
LABEL_18:
    if ((v3 & 0x4000000000000000) == 0)
    {
      unint64_t v11 = *(void *)(v3 + 16);
      swift_retain();
      double v47 = v11;
      if (!v11) {
        return swift_release_n();
      }
      goto LABEL_20;
    }
LABEL_76:
    swift_retain();
    swift_bridgeObjectRetain();
    BOOL v43 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    double v47 = v43;
    if (!v43) {
      return swift_release_n();
    }
LABEL_20:
    int64_t v12 = 0;
    while (1)
    {
      if ((v46 & 0xC000000000000001) != 0) {
        id v19 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v19 = *(id *)(v46 + 32 + 8 * v12);
      }
      NSString v20 = v19;
      if (__OFADD__(v12++, 1))
      {
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
      unint64_t v22 = (void (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *v19) + 0x178))();
      v22();
      swift_release();
      uint64_t v23 = *(uint64_t (**)(uint64_t *))(**(void **)(v48 + 112) + 400);
      swift_retain();
      id v24 = v23(v55);
      type metadata accessor for WorldLine();
      if (!swift_dynamicCastClass())
      {
        type metadata accessor for WorldRectangle();
        if (!swift_dynamicCastClass())
        {
          type metadata accessor for WorldPerson();
          if (!swift_dynamicCastClass()) {
            goto LABEL_80;
          }
        }
      }
      uint64_t v52 = (void (*)(uint64_t *, void))v24;
      swift_getKeyPath();
      id v51 = (void (*)(unint64_t *, void))swift_modifyAtWritableKeyPath();
      uint64_t v3 = (unint64_t)v25;
      char v26 = *v25;
      if (*v25 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        double v50 = v42;
        if (!v42) {
          goto LABEL_24;
        }
      }
      else
      {
        double v50 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v50) {
          goto LABEL_24;
        }
      }
      id v49 = v26 & 0xC000000000000001;
      if ((v26 & 0xC000000000000001) != 0)
      {
        id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_69;
        }
        id v27 = *(id *)(v26 + 32);
      }
      double v28 = v27;
      type metadata accessor for MeasureObject();
      char v29 = static NSObject.== infix(_:_:)();

      uint64_t v30 = 0;
      if ((v29 & 1) == 0)
      {
        if (v50 == 1) {
          goto LABEL_24;
        }
        if (v49)
        {
          id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
            goto LABEL_74;
          }
          id v32 = *(id *)(v26 + 40);
        }
        char v33 = v32;
        id v34 = static NSObject.== infix(_:_:)();

        if (v34)
        {
          uint64_t v30 = 1;
        }
        else
        {
          if (v50 == 2) {
            goto LABEL_24;
          }
          if (v49)
          {
            Swift::String v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL) {
              goto LABEL_79;
            }
            Swift::String v35 = *(id *)(v26 + 48);
          }
          uint64_t v36 = v35;
          uint64_t v37 = static NSObject.== infix(_:_:)();

          if ((v37 & 1) == 0)
          {
            uint64_t v38 = 2;
            while (1)
            {
              uint64_t v30 = v38 + 1;
              if (__OFADD__(v38, 1)) {
                break;
              }
              if (v30 == v50) {
                goto LABEL_24;
              }
              if (v49)
              {
                unint64_t v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                if ((v30 & 0x8000000000000000) != 0) {
                  goto LABEL_72;
                }
                if (v30 >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_73;
                }
                unint64_t v39 = *(id *)(v26 + 32 + 8 * v30);
              }
              uint64_t v40 = v39;
              unint64_t v41 = static NSObject.== infix(_:_:)();

              ++v38;
              if (v41) {
                goto LABEL_38;
              }
            }
LABEL_71:
            __break(1u);
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
LABEL_74:
            __break(1u);
LABEL_75:
            swift_bridgeObjectRetain();
            uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            goto LABEL_3;
          }
          uint64_t v30 = 2;
        }
      }
LABEL_38:
      uint64_t v13 = *(void *)v3;
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *(void *)uint64_t v3 = v13;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v13 < 0 || (v13 & 0x4000000000000000) != 0)
      {
        uint64_t v13 = sub_100030BAC(v13);
        *(void *)uint64_t v3 = v13;
      }
      uint64_t v14 = v13 & 0xFFFFFFFFFFFFFF8;
      uint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v30 >= v15) {
        goto LABEL_70;
      }
      uint64_t v16 = v15 - 1;
      unint64_t v17 = v14 + 8 * v30;
      uint64_t v18 = *(void **)(v17 + 32);
      memmove((void *)(v17 + 32), (const void *)(v17 + 40), 8 * (v15 - 1 - v30));
      *(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
      specialized Array._endMutation()();

LABEL_24:
      v51(&v53, 0);
      swift_release();
      v52(v55, 0);

      swift_release();
      if (v12 == v47) {
        return swift_release_n();
      }
    }
  }
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        unint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        unint64_t v6 = *(id *)(v3 + 8 * i + 32);
      }
      unint64_t v7 = v6;
      int64_t v8 = *(uint64_t (**)(void))((swift_isaMask & *v6) + 0xD0);
      if (v8() == 5
        || v8() == 9
        || (unint64_t v9 = (uint64_t (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *v7) + 0x100))(),
            int64_t v10 = v9(),
            swift_release(),
            (v10 & 1) != 0))
      {
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v3 = v55[0];
    double v46 = v55[0];
    if (v55[0] < 0) {
      goto LABEL_76;
    }
    goto LABEL_18;
  }
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  uint64_t v53 = 0;
  long long v54 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  uint64_t v53 = 0xD00000000000001CLL;
  long long v54 = 0x8000000100422390;
  swift_getObjectType();
  v45._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v45);
  swift_bridgeObjectRelease();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1001DAF6C()
{
  void (*v1)(unint64_t *__return_ptr, uint64_t);
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  long long v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;

  uint64_t v1 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v0 + 120) + 144);
  uint64_t v2 = swift_retain();
  v1(&v10, v2);
  swift_release();
  uint64_t v3 = v10;
  switch(v10 >> 62)
  {
    case 1uLL:
      unint64_t v6 = sub_1001DD56C();
      if (!v6) {
        goto LABEL_9;
      }
      unint64_t v5 = (void *)v6;
      type metadata accessor for MeasureObject();
      if (static NSObject.== infix(_:_:)()) {
        goto LABEL_8;
      }
      goto LABEL_7;
    case 2uLL:
      goto LABEL_9;
    case 3uLL:
      *((void *)&v7 + 1) = v10;
      *(void *)&unint64_t v7 = v10 + 0x4000000000000000;
      if ((unint64_t)(v7 >> 3) < 2)
      {
        int64_t v8 = sub_1001DD56C();
        if (v8)
        {
          unint64_t v9 = (void *)v8;
          swift_retain();
          sub_1001DD794(v9);
          swift_release();
        }
      }
      return;
    default:
      uint64_t v4 = sub_1001DD56C();
      if (v4)
      {
        unint64_t v5 = (void *)v4;
        type metadata accessor for MeasureObject();
        if ((static NSObject.== infix(_:_:)() & 1) == 0) {
LABEL_7:
        }
          sub_1001DD794(v5);
LABEL_8:
      }
LABEL_9:
      sub_10001F780(v3);
      return;
  }
}

void sub_1001DB0D4(char a1)
{
  void (*v4)(uint64_t *__return_ptr, uint64_t);
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(void);
  void *v9;
  uint64_t (*v10)(uint64_t, double, double);
  void (*v11)(uint64_t *__return_ptr, uint64_t);
  uint64_t v12;
  double v13;
  double v14;
  uint64_t v15;
  char v16;
  uint64_t (*v17)(void);
  uint64_t (*v18)(void);
  uint64_t (*v19)(uint64_t *);
  void (*v20)(uint64_t *, void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(void);
  void *v25;
  void (*v26)(uint64_t *);
  void (*v27)(uint64_t *__return_ptr, uint64_t);
  uint64_t v28;
  void *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(void);
  uint64_t (*v34)(uint64_t *);
  void (*v35)(unsigned char *, void);
  id v36;
  void (*v37)(uint64_t *__return_ptr, uint64_t);
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t j;
  void *v42;
  void *v43;
  uint64_t (*v44)(uint64_t *);
  void (*v45)(uint64_t *, void);
  void (*v46)(uint64_t *__return_ptr, uint64_t);
  uint64_t v47;
  unint64_t v48;
  uint64_t (*v49)(uint64_t *);
  void (*v50)(uint64_t *, void);
  uint64_t *v51;
  unint64_t v52;
  void *v53;
  void (*v54)(uint64_t *);
  uint64_t (*v55)(void);
  void (*v56)(void);
  uint64_t (*v57)(uint64_t *);
  void (*v58)(uint64_t *, void);
  void (*v59)(uint64_t *, void);
  id v60;
  uint64_t v61;
  long long v62;
  void (*v63)(uint64_t *__return_ptr, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t i;
  void *v67;
  void *v68;
  unint64_t v69;
  uint64_t v70;
  void (*v71)(void);
  uint64_t (*v72)(uint64_t *);
  void (*v73)(uint64_t *, void);
  id v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  void *v79;
  void (*v80)(void);
  void (*v81)(void);
  uint64_t (*v82)(uint64_t *);
  void (*v83)(uint64_t *, void);
  void (*v84)(unsigned char *, void);
  id v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  void *v89;
  void (*v90)(void);
  void (*v91)(uint64_t *, void);
  void (*v92)(uint64_t *, void);
  uint64_t __src[64];
  unsigned char v94[32];
  uint64_t __dst[66];

  uint64_t v2 = (uint64_t)v1;
  uint64_t v4 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*v1[15] + 144);
  unint64_t v5 = swift_retain();
  v4(__dst, v5);
  swift_release();
  unint64_t v6 = __dst[0];
  sub_100012894(&qword_1004D1B18);
  switch(a1)
  {
    case 3:
      if (qword_1004C29D8 != -1) {
        swift_once();
      }
      if (!qword_1004F8020) {
        goto LABEL_98;
      }
      swift_retain();
      swift_retain();
      StateValue.wrappedValue.getter();
      swift_release();
      memcpy(__dst, __src, 0x200uLL);
      sub_100114D88((uint64_t)_swiftEmptyArrayStorage, __dst);
      sub_100016F7C((uint64_t)__dst);
      swift_release();
      sub_1001D99DC();
      sub_1001DA7B4();
      sub_1001DAF6C();
      goto LABEL_94;
    case 4:
      switch(v6 >> 62)
      {
        case 1uLL:
        case 2uLL:
          goto LABEL_94;
        case 3uLL:
          *((void *)&v62 + 1) = v6;
          *(void *)&uint64_t v62 = v6 + 0x4000000000000000;
          id v61 = v62 >> 3;
          if ((unint64_t)(v61 - 2) >= 2)
          {
            if (!v61) {
              return;
            }
            if (v61 != 1)
            {
LABEL_101:
              _diagnoseUnexpectedEnumCase<A>(type:)();
              __break(1u);
              JUMPOUT(0x1001DC4D4);
            }
            double v63 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*v1[14] + 144);
            Swift::String v64 = swift_retain();
            v63(__dst, v64);
            swift_release();
            uint64_t v30 = sub_100201270(__dst[0], __dst[1]);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            __dst[0] = (uint64_t)_swiftEmptyArrayStorage;
            if (!(v30 >> 62))
            {
              Swift::String v65 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (v65)
              {
LABEL_49:
                if (v65 < 1)
                {
                  __break(1u);
LABEL_97:
                  __break(1u);
LABEL_98:
                  __break(1u);
LABEL_99:
                  __break(1u);
                  goto LABEL_100;
                }
                for (i = 0; i != v65; ++i)
                {
                  if ((v30 & 0xC000000000000001) != 0) {
                    uint64_t v67 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else {
                    uint64_t v67 = *(id *)(v30 + 8 * i + 32);
                  }
                  char v68 = v67;
                  if ((*(uint64_t (**)(void))((swift_isaMask & *v67) + 0xD0))() == 5)
                  {
                    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
                    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                    specialized ContiguousArray._endMutation()();
                  }
                  else
                  {
                  }
                }
                swift_bridgeObjectRelease();
                id v75 = __dst[0];
LABEL_82:
                if ((v75 & 0x8000000000000000) != 0 || (v75 & 0x4000000000000000) != 0)
                {
                  swift_retain();
                  id v86 = _CocoaArrayWrapper.endIndex.getter();
                  if (!v86) {
                    goto LABEL_92;
                  }
                }
                else
                {
                  id v86 = *(void *)(v75 + 16);
                  swift_retain();
                  if (!v86) {
                    goto LABEL_92;
                  }
                }
                if (v86 >= 1)
                {
                  id v87 = 0;
                  do
                  {
                    if ((v75 & 0xC000000000000001) != 0) {
                      id v88 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                    }
                    else {
                      id v88 = *(id *)(v75 + 8 * v87 + 32);
                    }
                    CGFloat v89 = v88;
                    ++v87;
                    double v90 = (void (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *v88) + 0x148))();
                    v90();

                    swift_release();
                  }
                  while (v86 != v87);
LABEL_92:
                  swift_release_n();
                  sub_1001DC63C((uint64_t)&off_100485DB0);
                  sub_1001DC500((uint64_t)v1, 4);
LABEL_93:
                  sub_10001F780(v6);
                  goto LABEL_94;
                }
                goto LABEL_97;
              }
LABEL_81:
              swift_bridgeObjectRelease();
              id v75 = (unint64_t)_swiftEmptyArrayStorage;
              goto LABEL_82;
            }
LABEL_80:
            swift_bridgeObjectRetain();
            Swift::String v65 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v65) {
              goto LABEL_49;
            }
            goto LABEL_81;
          }
          sub_100078CF8(v6);
          sub_1001DC63C(0);
          sub_1001DC500((uint64_t)v1, 4);
LABEL_94:
          sub_10001F780(v6);
          return;
        default:
          unint64_t v17 = *(uint64_t (**)(void))((swift_isaMask & *(void *)v6) + 0x100);
          unint64_t v9 = (id)v6;
          uint64_t v18 = (uint64_t (*)(void))v17();
          LOBYTE(v17) = v18();
          swift_release();
          if ((v17 & 1) == 0)
          {
            id v19 = *(uint64_t (**)(uint64_t *))(*v1[11] + 400);
            swift_retain();
            NSString v20 = (void (*)(uint64_t *, void))v19(__dst);
            char v21 = (*(uint64_t (**)(void))((swift_isaMask & *v9) + 0xB8))();
            sub_100030354(v21, v22);
            swift_bridgeObjectRelease();
            v20(__dst, 0);
            uint64_t v23 = swift_release();
            id v24 = (void (*)(void))(*(uint64_t (**)(uint64_t))((swift_isaMask & *v9) + 0x178))(v23);
            v24();
            swift_release();
            id v25 = v1[15];
            __dst[0] = 0xC000000000000008;
            char v26 = *(void (**)(uint64_t *))(*v25 + 392);
            swift_retain();
            v26(__dst);
            swift_release();
            sub_1001DC500(v2, 4);
          }
          goto LABEL_18;
      }
    case 5:
      if (v6 >> 62) {
        goto LABEL_94;
      }
      int64_t v8 = *(uint64_t (**)(void))((swift_isaMask & *(void *)v6) + 0x118);
      unint64_t v9 = (id)v6;
      int64_t v10 = (uint64_t (*)(uint64_t, double, double))v8();
      unint64_t v11 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*v1[13] + 144);
      int64_t v12 = swift_retain();
      v11(__dst, v12);
      swift_release();
      uint64_t v13 = *(double *)&__dst[5];
      uint64_t v14 = *(double *)&__dst[6];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = swift_bridgeObjectRelease();
      uint64_t v16 = v10(v15, v13, v14);
      swift_release();
      if (v16) {
LABEL_18:
      }
        sub_1001DD070(v9);
      goto LABEL_42;
    case 6:
      unint64_t v7 = v6 >> 62;
      if (!(v6 >> 62))
      {
        id v55 = *(uint64_t (**)(void))((swift_isaMask & *(void *)v6) + 0x178);
        unint64_t v9 = (id)v6;
        char v56 = (void (*)(void))v55();
        v56();
        swift_release();
        uint64_t v57 = *(uint64_t (**)(uint64_t *))(*v1[14] + 400);
        swift_retain();
        char v58 = (void (*)(uint64_t *, void))v57(__dst);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100201D68();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v59 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
        sub_100069ECC((uint64_t)v9);

        v59(__src, 0);
        swift_release();
        v58(__dst, 0);
        swift_release();
        sub_1001DC500((uint64_t)v1, 6);
LABEL_42:
        sub_10001F780(v6);
        sub_10001F780(v6);

        return;
      }
      if (v7 == 1) {
        goto LABEL_94;
      }
      if (v7 == 3)
      {
LABEL_9:
        if (v6 == 0xC000000000000000) {
          return;
        }
      }
      sub_1001DC500((uint64_t)v1, a1);
      goto LABEL_94;
    case 7:
      goto LABEL_9;
    case 8:
      if (v6 == 0xC000000000000000) {
        return;
      }
      id v27 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*v1[14] + 144);
      sub_100078CF8(v6);
      double v28 = swift_retain();
      v27(__dst, v28);
      swift_release();
      char v29 = sub_100200938(1, __dst[0], __dst[1]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v29) {
        goto LABEL_93;
      }
      type metadata accessor for WorldLine();
      uint64_t v30 = (unint64_t)&swift_isaMask;
      if (!swift_dynamicCastClass())
      {
        type metadata accessor for WorldRectangle();
        id v70 = swift_dynamicCastClass();
        if (v70)
        {
          id v71 = (void (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *v29) + 0x178))();
          v71();
          swift_release();
          unint64_t v72 = *(uint64_t (**)(uint64_t *))(*v1[14] + 400);
          swift_retain();
          char v92 = (void (*)(uint64_t *, void))v72(__dst);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_100201D68();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v73 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
          sub_100069ECC((uint64_t)v29);

          v73(__src, 0);
          swift_release();
          v92(__dst, 0);
          id v70 = swift_release();
        }
        goto LABEL_77;
      }
      if (qword_1004C29D8 != -1) {
        swift_once();
      }
      if (!qword_1004F8020)
      {
LABEL_100:
        __break(1u);
        goto LABEL_101;
      }
      sub_100012894(&qword_1004C69B8);
      id v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1003F87F0;
      *(unsigned char *)(v31 + 32) = 8;
      swift_retain();
      swift_retain();
      StateValue.wrappedValue.getter();
      swift_release();
      memcpy(__dst, __src, 0x200uLL);
      sub_100114D88(v31, __dst);
      sub_100016F7C((uint64_t)__dst);
      swift_setDeallocating();
      swift_deallocClassInstance();
      id v32 = swift_release();
      char v33 = (void (*)(void))(*(uint64_t (**)(uint64_t))((swift_isaMask & *v29) + 0x178))(v32);
      v33();
      swift_release();
      id v34 = *(uint64_t (**)(uint64_t *))(*v1[14] + 400);
      swift_retain();
      id v91 = (void (*)(uint64_t *, void))v34(__src);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100201D68();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Swift::String v35 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
      sub_100069ECC((uint64_t)v29);

      v35(v94, 0);
      swift_release();
      v91(__src, 0);
      swift_release();
      uint64_t v37 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*v1[14] + 144);
      uint64_t v38 = swift_retain();
      v37(__src, v38);
      swift_release();
      unint64_t v39 = sub_100201270(__src[0], __src[1]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __src[0] = (uint64_t)_swiftEmptyArrayStorage;
      if (v39 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v40) {
          goto LABEL_27;
        }
      }
      else
      {
        uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v40)
        {
LABEL_27:
          if (v40 < 1)
          {
            __break(1u);
            goto LABEL_79;
          }
          for (j = 0; j != v40; ++j)
          {
            if ((v39 & 0xC000000000000001) != 0) {
              uint64_t v42 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              uint64_t v42 = *(id *)(v39 + 8 * j + 32);
            }
            BOOL v43 = v42;
            if ((*(uint64_t (**)(void))((swift_isaMask & *v42) + 0xD0))() == 9)
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
            }
            else
            {
            }
          }
          swift_bridgeObjectRelease();
          id v69 = __src[0];
LABEL_65:
          if ((v69 & 0x8000000000000000) != 0 || (v69 & 0x4000000000000000) != 0)
          {
            swift_retain();
            uint64_t v76 = _CocoaArrayWrapper.endIndex.getter();
            if (v76)
            {
LABEL_68:
              if (v76 >= 1)
              {
                uint64_t v77 = 0;
                do
                {
                  if ((v69 & 0xC000000000000001) != 0) {
                    uint64_t v78 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else {
                    uint64_t v78 = *(id *)(v69 + 8 * v77 + 32);
                  }
                  id v79 = v78;
                  ++v77;
                  uint64_t v80 = (void (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *v78) + 0x160))();
                  v80();

                  swift_release();
                }
                while (v76 != v77);
                goto LABEL_76;
              }
LABEL_79:
              __break(1u);
              goto LABEL_80;
            }
          }
          else
          {
            uint64_t v76 = *(void *)(v69 + 16);
            swift_retain();
            if (v76) {
              goto LABEL_68;
            }
          }
LABEL_76:
          id v70 = swift_release_n();
LABEL_77:
          unint64_t v81 = (void (*)(void))(*(uint64_t (**)(uint64_t))((swift_isaMask & *v29) + 0x178))(v70);
          v81();
          swift_release();
          uint64_t v82 = *(uint64_t (**)(uint64_t *))(*v1[14] + 400);
          swift_retain();
          char v83 = (void (*)(uint64_t *, void))v82(__src);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_100201D68();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v84 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
          sub_100069ECC((uint64_t)v29);

          v84(v94, 0);
          swift_release();
          v83(__src, 0);
          swift_release();
          sub_10001F780(v6);

          goto LABEL_94;
        }
      }
      swift_bridgeObjectRelease();
      id v69 = (unint64_t)_swiftEmptyArrayStorage;
      goto LABEL_65;
    case 9:
      unint64_t v44 = *(uint64_t (**)(uint64_t *))(*v1[11] + 400);
      swift_retain();
      unint64_t v45 = (void (*)(uint64_t *, void))v44(__dst);
      sub_100030924();
      v45(__dst, 0);
      swift_release();
      double v46 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*v1[14] + 144);
      double v47 = swift_retain();
      v46(__dst, v47);
      swift_release();
      double v48 = sub_100201270(__dst[0], __dst[1]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1001D844C(v48);
      swift_bridgeObjectRelease();
      id v49 = *(uint64_t (**)(uint64_t *))(*v1[14] + 400);
      swift_retain();
      double v50 = (void (*)(uint64_t *, void))v49(__dst);
      uint64_t v52 = sub_100201270(*v51, v51[1]);
      sub_100201584(v52);
      swift_bridgeObjectRelease();
      v50(__dst, 0);
      swift_release();
      if (qword_1004C29D8 != -1) {
        swift_once();
      }
      if (!qword_1004F7FF0) {
        goto LABEL_99;
      }
      swift_retain();
      sub_100122F20();
      swift_release();
      uint64_t v53 = v1[15];
      __dst[0] = 0xC000000000000000;
      long long v54 = *(void (**)(uint64_t *))(*v53 + 392);
      swift_retain();
      v54(__dst);
      sub_10001F780(v6);
LABEL_40:
      swift_release();
      return;
    default:
      *(unsigned char *)(swift_allocObject() + 16) = a1;
      swift_retain();
      StateValue.mutateImmediatelyNotifyAsync(_:)();
      sub_10001F780(v6);
      swift_release();
      goto LABEL_40;
  }
}

uint64_t sub_1001DC500(uint64_t a1, char a2)
{
  swift_retain();
  StateValue.wrappedValue.getter();
  uint64_t result = swift_release();
  if (LOBYTE(__dst[0]) <= 1u)
  {
    if (qword_1004C29D8 != -1) {
      uint64_t result = swift_once();
    }
    if (qword_1004F8020)
    {
      sub_100012894(&qword_1004C69B8);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_1003F87F0;
      *(unsigned char *)(v4 + 32) = a2;
      swift_retain();
      swift_retain();
      StateValue.wrappedValue.getter();
      swift_release();
      memcpy(__dst, v5, sizeof(__dst));
      sub_100114D88(v4, __dst);
      sub_100016F7C((uint64_t)__dst);
      swift_setDeallocating();
      swift_deallocClassInstance();
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1001DC63C(uint64_t a1)
{
  void (*v4)(uint64_t *__return_ptr, uint64_t);
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  BOOL v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  void (*v25)(uint64_t *__return_ptr, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  void (*v29)(uint64_t *__return_ptr, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t j;
  id v33;
  void *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t *, void);
  void *v39;
  uint64_t v40;
  void (*v41)(void);
  uint64_t v42;
  void (*v43)(uint64_t *);
  void *v44;
  void *v45;
  uint64_t (*v46)(uint64_t *);
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  char v58;
  void *v59;
  uint64_t v60;
  char v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  char v67;
  uint64_t v68;
  double *v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t *, void);
  uint64_t v74[2];

  uint64_t v2 = (double *)v1;
  uint64_t v4 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v1 + 112) + 144);
  unint64_t v5 = swift_retain();
  v4(v74, v5);
  swift_release();
  unint64_t v6 = sub_100201270(v74[0], v74[1]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v7 = (unint64_t)_swiftEmptyArrayStorage;
  v74[0] = (uint64_t)_swiftEmptyArrayStorage;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    int64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    int64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
LABEL_3:
      if (v8 >= 1)
      {
        for (i = 0; i != v8; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0) {
            int64_t v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            int64_t v10 = *(id *)(v6 + 8 * i + 32);
          }
          unint64_t v11 = v10;
          type metadata accessor for WorldLine();
          if (swift_dynamicCastClass())
          {
          }
          else
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
        }
        swift_bridgeObjectRelease();
        int64_t v12 = v74[0];
        v74[0] = (uint64_t)_swiftEmptyArrayStorage;
        if ((v12 & 0x8000000000000000) != 0) {
          goto LABEL_59;
        }
        goto LABEL_16;
      }
      __break(1u);
LABEL_62:
      swift_bridgeObjectRetain();
      id v31 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v31) {
        goto LABEL_63;
      }
LABEL_45:
      if (v31 < 1)
      {
        __break(1u);
        return result;
      }
      for (j = 0; j != v31; ++j)
      {
        if ((v6 & 0xC000000000000001) != 0) {
          char v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          char v33 = *(id *)(v6 + 8 * j + 32);
        }
        id v34 = v33;
        type metadata accessor for WorldLine();
        if (swift_dynamicCastClass())
        {
        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
      }
      swift_bridgeObjectRelease();
      Swift::String v35 = v74[0];
      id v70 = v74[0];
      if (v74[0] < 0) {
        goto LABEL_119;
      }
LABEL_64:
      if ((v35 & 0x4000000000000000) != 0) {
        goto LABEL_119;
      }
      uint64_t v36 = *(void *)(v35 + 16);
      swift_retain();
      unint64_t v72 = v36;
      if (!v36) {
        return swift_release_n();
      }
LABEL_66:
      uint64_t v37 = 0;
      while (1)
      {
        if ((v70 & 0xC000000000000001) != 0) {
          unint64_t v44 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          unint64_t v44 = *(id *)(v70 + 32 + 8 * v37);
        }
        unint64_t v45 = v44;
        unint64_t v17 = __OFADD__(v37++, 1);
        if (v17)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          swift_retain();
          unint64_t v72 = _CocoaArrayWrapper.endIndex.getter();
          if (!v72) {
            return swift_release_n();
          }
          goto LABEL_66;
        }
        double v46 = *(uint64_t (**)(uint64_t *))(**((void **)v2 + 11) + 400);
        swift_retain();
        uint64_t v73 = (void (*)(uint64_t *, void))v46(v74);
        double v48 = v47;
        id v49 = (*(uint64_t (**)(void))((*(void *)v7 & *v45) + 0xB8))();
        id v51 = v50;
        uint64_t v52 = *v48;
        if ((unint64_t)*v48 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v53 = _CocoaArrayWrapper.endIndex.getter();
          if (!v53)
          {
LABEL_114:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_115:
            v73(v74, 0);
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v53 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v53) {
            goto LABEL_114;
          }
        }
        id v71 = v52 & 0xC000000000000001;
        if ((v52 & 0xC000000000000001) != 0) {
          long long v54 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          long long v54 = *(id *)(v52 + 32);
        }
        id v55 = v54;
        if ((*(uint64_t (**)(void))((*(void *)v7 & *v54) + 0xB8))() == v49 && v56 == v51)
        {
          unint64_t v7 = 0;
        }
        else
        {
          char v58 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          if (v58)
          {
            unint64_t v7 = 0;
LABEL_85:
            uint64_t v2 = v69;
            uint64_t v38 = v73;
            goto LABEL_69;
          }
          if (v53 == 1) {
            goto LABEL_87;
          }
          uint64_t v2 = v69;
          if (v71) {
            id v59 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v59 = *(id *)(v52 + 40);
          }
          id v55 = v59;
          if ((*(uint64_t (**)(void))((swift_isaMask & *v59) + 0xB8))() == v49 && v60 == v51)
          {
            unint64_t v7 = 1;
          }
          else
          {
            uint64_t v62 = _stringCompareWithSmolCheck(_:_:expecting:)();

            swift_bridgeObjectRelease();
            if (v62)
            {
              unint64_t v7 = 1;
              goto LABEL_85;
            }
            if (v53 == 2)
            {
LABEL_87:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v2 = v69;
LABEL_88:
              unint64_t v7 = (unint64_t)&swift_isaMask;
              goto LABEL_115;
            }
            double v63 = 6;
            while (1)
            {
              unint64_t v7 = v63 - 4;
              char v68 = v63;
              Swift::String v64 = v71
                  ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
                  : *(id *)(v52 + 8 * v63);
              id v55 = v64;
              if ((*(uint64_t (**)(void))((swift_isaMask & *v64) + 0xB8))() == v49 && v65 == v51) {
                break;
              }
              uint64_t v67 = _stringCompareWithSmolCheck(_:_:expecting:)();

              swift_bridgeObjectRelease();
              if (v67) {
                goto LABEL_85;
              }
              uint64_t v2 = v69;
              if (__OFADD__(v7, 1)) {
                goto LABEL_118;
              }
              double v63 = v68 + 1;
              if (v7 + 1 == v53)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_88;
              }
            }
            uint64_t v2 = v69;
          }
        }
        swift_bridgeObjectRelease();

        uint64_t v38 = v73;
LABEL_69:
        swift_bridgeObjectRelease();
        unint64_t v39 = (void *)sub_1000305A4(v7);
        swift_bridgeObjectRelease();

        unint64_t v7 = (unint64_t)&swift_isaMask;
        v38(v74, 0);
LABEL_70:
        uint64_t v40 = swift_release();
        unint64_t v41 = (void (*)(void))(*(uint64_t (**)(uint64_t))((*(void *)v7 & *v45) + 0x178))(v40);
        v41();
        swift_release();
        uint64_t v42 = *((void *)v2 + 15);
        v74[0] = 0xC000000000000008;
        BOOL v43 = *(void (**)(uint64_t *))(*(void *)v42 + 392);
        swift_retain();
        v43(v74);

        swift_release();
        if (v37 == v72) {
          return swift_release_n();
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  int64_t v12 = (unint64_t)_swiftEmptyArrayStorage;
  v74[0] = (uint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
    goto LABEL_59;
  }
LABEL_16:
  if ((v12 & 0x4000000000000000) != 0) {
    goto LABEL_59;
  }
  uint64_t v13 = *(void *)(v12 + 16);
  swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v7 = (unint64_t)&swift_isaMask;
    id v69 = v2;
    if (!v13) {
      break;
    }
    uint64_t v14 = 0;
    uint64_t v2 = (double *)(v12 + 32);
    while (1)
    {
      if ((v12 & 0xC000000000000001) != 0)
      {
        uint64_t v15 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v14 >= *(void *)(v12 + 16)) {
          goto LABEL_57;
        }
        uint64_t v15 = *(id *)&v2[v14];
      }
      uint64_t v16 = v15;
      unint64_t v17 = __OFADD__(v14++, 1);
      if (v17) {
        goto LABEL_58;
      }
      if (!a1) {
        goto LABEL_21;
      }
      uint64_t v18 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v15) + 0xD0);
      id v19 = swift_bridgeObjectRetain();
      NSString v20 = v18(v19);
      char v21 = *(void *)(a1 + 16);
      if (!v21)
      {

        swift_bridgeObjectRelease();
        unint64_t v7 = (unint64_t)&swift_isaMask;
        goto LABEL_22;
      }
      unint64_t v7 = (unint64_t)&swift_isaMask;
      if (*(void *)(a1 + 32) != v20) {
        break;
      }
LABEL_20:
      swift_bridgeObjectRelease();
LABEL_21:
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
LABEL_22:
      if (v14 == v13)
      {
        id v24 = (double *)v74[0];
        uint64_t v2 = v69;
        goto LABEL_40;
      }
    }
    if (v21 == 1)
    {
LABEL_35:

      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    unint64_t v22 = 5;
    while (1)
    {
      uint64_t v23 = v22 - 3;
      if (__OFADD__(v22 - 4, 1)) {
        break;
      }
      if (*(void *)(a1 + 8 * v22) == v20) {
        goto LABEL_20;
      }
      ++v22;
      if (v23 == v21) {
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  }
  id v24 = _swiftEmptyArrayStorage;
LABEL_40:
  swift_release();
  swift_bridgeObjectRelease();
  sub_1001D844C((unint64_t)v24);
  swift_release();
  id v25 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**((void **)v2 + 11) + 144);
  char v26 = swift_retain();
  v25(v74, v26);
  swift_release();
  if ((unint64_t)v74[0] >> 62)
  {
    swift_bridgeObjectRetain();
    id v27 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v27 = *(void *)((v74[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (v27)
  {
    char v29 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**((void **)v2 + 11) + 144);
    uint64_t v30 = swift_retain();
    v29(v74, v30);
    uint64_t result = swift_release();
    unint64_t v6 = v74[0];
    v74[0] = (uint64_t)_swiftEmptyArrayStorage;
    if (!(v6 >> 62))
    {
      id v31 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v31) {
        goto LABEL_45;
      }
LABEL_63:
      swift_bridgeObjectRelease();
      Swift::String v35 = (unint64_t)_swiftEmptyArrayStorage;
      id v70 = (unint64_t)_swiftEmptyArrayStorage;
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
        goto LABEL_119;
      }
      goto LABEL_64;
    }
    goto LABEL_62;
  }
  return result;
}

id sub_1001DD070(void *a1)
{
  void (*v7)(uint64_t *__return_ptr, uint64_t);
  uint64_t v8;
  id result;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void (*v16)(uint64_t *__return_ptr, uint64_t);
  uint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(uint64_t *);
  void (*v20)(uint64_t *, void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(void);
  uint64_t v25;
  void (*v26)(uint64_t *);
  id v27;
  uint64_t (*v28)(uint64_t *);
  void *v29;
  void (*v30)(uint64_t *, void);
  void **v31;
  void *v32;
  uint64_t v34[6];

  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  __chkstk_darwin(v4);
  unint64_t v6 = (void **)((char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 16);
  unint64_t v7 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v1 + 120) + 144);
  int64_t v8 = swift_retain();
  v7(v34, v8);
  uint64_t result = (id)swift_release();
  int64_t v10 = v34[0];
  if (!((unint64_t)v34[0] >> 62))
  {
    if (qword_1004C29D8 != -1) {
      uint64_t result = (id)swift_once();
    }
    unint64_t v11 = (void *)qword_1004F7FE8;
    if (!qword_1004F7FE8)
    {
      __break(1u);
      return result;
    }
    int64_t v12 = qword_1004F7FE8 + qword_1004CF758;
    swift_beginAccess();
    sub_100090C7C(v12, (uint64_t)v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = *v6;
      uint64_t v14 = v11;
      uint64_t v15 = sub_1000FE9C0();

      sub_100079908(2, 0, 0, 1);
      sub_10001F780(v10);

      goto LABEL_9;
    }
    sub_100090CE0((uint64_t)v6);
  }
  sub_10001F780(v10);
LABEL_9:
  uint64_t v16 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v2 + 112) + 144);
  unint64_t v17 = swift_retain();
  v16(v34, v17);
  swift_release();
  uint64_t v18 = sub_100201270(v34[0], v34[1]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34[4] = (uint64_t)a1;
  v34[5] = v18;
  sub_100012894(&qword_1004C4358);
  sub_10002179C(&qword_1004D1B20, &qword_1004C4358);
  sub_1001DEB04(&qword_1004D1B28, (void (*)(uint64_t))&type metadata accessor for MeasureObject);
  RangeReplaceableCollection<>.removingFirst(_:)();
  swift_bridgeObjectRelease();
  sub_1001D844C(v34[0]);
  swift_bridgeObjectRelease();
  id v19 = *(uint64_t (**)(uint64_t *))(**(void **)(v2 + 88) + 400);
  swift_retain();
  NSString v20 = (void (*)(uint64_t *, void))v19(v34);
  char v21 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8))();
  sub_100030354(v21, v22);
  swift_bridgeObjectRelease();
  v20(v34, 0);
  uint64_t v23 = swift_release();
  id v24 = (void (*)(void))(*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x130))(v23);
  v24();
  swift_release();
  id v25 = *(void *)(v2 + 120);
  v34[0] = 0xC000000000000008;
  char v26 = *(void (**)(uint64_t *))(*(void *)v25 + 392);
  swift_retain();
  v26(v34);
  swift_release();
  uint64_t result = [self jasperAvailable];
  if (result)
  {
    type metadata accessor for WorldRectangle();
    uint64_t result = (id)swift_dynamicCastClass();
    if (result)
    {
      id v27 = result;
      double v28 = *(uint64_t (**)(uint64_t *))(**(void **)(v2 + 136) + 400);
      char v29 = a1;
      swift_retain();
      uint64_t v30 = (void (*)(uint64_t *, void))v28(v34);
      id v32 = *v31;
      *id v31 = v27;

      v30(v34, 0);
      return (id)swift_release();
    }
  }
  return result;
}

uint64_t sub_1001DD56C()
{
  void (*v1)(unint64_t *__return_ptr, uint64_t);
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t i;
  void *v6;
  void *v7;
  uint64_t result;
  unint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;

  uint64_t v1 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v0 + 88) + 144);
  uint64_t v2 = swift_retain();
  v1(&v13, v2);
  swift_release();
  uint64_t v3 = v13;
  uint64_t v13 = (unint64_t)_swiftEmptyArrayStorage;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v4)
    {
LABEL_3:
      if (v4 < 1)
      {
        __break(1u);
        goto LABEL_26;
      }
      for (i = 0; i != v4; ++i)
      {
        if ((v3 & 0xC000000000000001) != 0) {
          unint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          unint64_t v6 = *(id *)(v3 + 8 * i + 32);
        }
        unint64_t v7 = v6;
        if ((*(uint64_t (**)(void))((swift_isaMask & *v6) + 0xD0))() == 6)
        {
        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v9 = v13;
      if ((v13 & 0x8000000000000000) != 0) {
        goto LABEL_22;
      }
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v9 = (unint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
    goto LABEL_22;
  }
LABEL_16:
  if ((v9 & 0x4000000000000000) != 0)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    int64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_release();
    if (!v12) {
      goto LABEL_23;
    }
    goto LABEL_18;
  }
  if (!*(void *)(v9 + 16))
  {
LABEL_23:
    swift_release();
    return 0;
  }
LABEL_18:
  if ((v9 & 0xC000000000000001) != 0)
  {
LABEL_26:
    int64_t v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_21;
  }
  if (*(void *)(v9 + 16))
  {
    int64_t v10 = *(id *)(v9 + 32);
LABEL_21:
    unint64_t v11 = v10;
    swift_release();
    return (uint64_t)v11;
  }
  __break(1u);
  return result;
}

void sub_1001DD794(void *a1)
{
  void (*v7)(uint64_t *__return_ptr, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *__return_ptr, uint64_t);
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void);
  void *v21;
  void (*v22)(uint64_t *);
  void *v23;
  void *v24;
  uint64_t (*v26)(uint64_t *);
  void (*v27)(void, void);
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  char v36;
  void *v37;
  void *v38;
  uint64_t v39;
  char v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t (*v46)(void);
  void *v47;
  void (*v48)(void);
  uint64_t (*v49)(uint64_t *);
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t *);
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t *);
  void *v56;
  uint64_t (*v57)(uint64_t *);
  void *v58;
  void (*v59)(uint64_t *, void);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(void);
  Swift::String v64;
  void *v65;
  void (*v66)(void, void);
  char v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;

  unint64_t v4 = v1;
  unsigned int v6 = [self jasperAvailable];
  unint64_t v7 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v1 + 112) + 144);
  if (v6)
  {
    int64_t v8 = swift_retain();
    v7(&v75, v8);
    swift_release();
    unint64_t v9 = v77;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v10 = *(void *)(v1 + 112);
    unint64_t v11 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)v10 + 144);
    uint64_t i = *(void *)v10 + 144;
    int64_t v12 = swift_retain();
    v11(&v75, v12);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v13 = v76;
    swift_bridgeObjectRelease();
    id v75 = v9;
    sub_1001225D4(v13);
    uint64_t v14 = v75;
  }
  else
  {
    uint64_t v15 = swift_retain();
    v7(&v75, v15);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v14 = v76;
    swift_bridgeObjectRelease();
  }
  id v75 = (uint64_t)_swiftEmptyArrayStorage;
  if (v14 >> 62) {
    goto LABEL_74;
  }
  uint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_6:
  Swift::String v65 = a1;
  if (v16)
  {
    if (v16 < 1)
    {
      __break(1u);
      goto LABEL_88;
    }
    for (uint64_t i = 0; i != v16; ++i)
    {
      if ((v14 & 0xC000000000000001) != 0) {
        unint64_t v17 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        unint64_t v17 = *(id *)(v14 + 8 * i + 32);
      }
      a1 = v17;
      if ((*(uint64_t (**)(void))((swift_isaMask & *v17) + 0xD0))() == 6)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = v75;
    id v69 = v4;
    id v70 = v75;
    if (v75 < 0) {
      goto LABEL_75;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = (uint64_t)_swiftEmptyArrayStorage;
    id v69 = v4;
    id v70 = (uint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_75;
    }
  }
  if ((v18 & 0x4000000000000000) == 0)
  {
    uint64_t v14 = *(void *)(v18 + 16);
    swift_retain();
    id v71 = v14;
    if (!v14) {
      goto LABEL_76;
    }
    goto LABEL_21;
  }
LABEL_75:
  swift_retain();
  id v71 = _CocoaArrayWrapper.endIndex.getter();
  if (v71)
  {
LABEL_21:
    uint64_t v3 = 0;
    do
    {
      if ((v70 & 0xC000000000000001) != 0) {
        uint64_t v23 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v23 = *(id *)(v70 + 32 + 8 * v3);
      }
      id v24 = v23;
      if (__OFADD__(v3++, 1))
      {
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        swift_bridgeObjectRetain();
        uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      char v26 = *(uint64_t (**)(uint64_t *))(**(void **)(v4 + 88) + 400);
      swift_retain();
      id v27 = (void (*)(void, void))v26(&v75);
      char v29 = v28;
      unint64_t v72 = (*(uint64_t (**)(void))((swift_isaMask & *v24) + 0xB8))();
      uint64_t i = v30;
      id v31 = *v29;
      if ((unint64_t)*v29 >> 62)
      {
        swift_bridgeObjectRetain();
        a1 = (void *)_CocoaArrayWrapper.endIndex.getter();
        if (a1)
        {
LABEL_30:
          if ((v31 & 0xC000000000000001) != 0) {
            id v32 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v32 = *(id *)(v31 + 32);
          }
          char v33 = v32;
          if ((*(uint64_t (**)(void))((swift_isaMask & *v32) + 0xB8))() == v72 && v34 == i)
          {
            unint64_t v4 = 0;
          }
          else
          {
            char v68 = v31 & 0xC000000000000001;
            uint64_t v36 = _stringCompareWithSmolCheck(_:_:expecting:)();

            swift_bridgeObjectRelease();
            if (v36)
            {
              unint64_t v4 = 0;
              goto LABEL_40;
            }
            if (a1 == (void *)1)
            {
LABEL_43:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_41;
            }
            if (v68) {
              uint64_t v38 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              uint64_t v38 = *(id *)(v31 + 40);
            }
            char v33 = v38;
            if ((*(uint64_t (**)(void))((swift_isaMask & *v38) + 0xB8))() != v72 || v39 != i)
            {
              unint64_t v41 = _stringCompareWithSmolCheck(_:_:expecting:)();

              swift_bridgeObjectRelease();
              if (v41)
              {
                unint64_t v4 = 1;
              }
              else
              {
                if (a1 == (void *)2) {
                  goto LABEL_43;
                }
                uint64_t v42 = 6;
                char v66 = v27;
                while (1)
                {
                  unint64_t v4 = v42 - 4;
                  uint64_t v14 = v42;
                  if (v68) {
                    BOOL v43 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else {
                    BOOL v43 = *(id *)(v31 + 8 * v42);
                  }
                  char v33 = v43;
                  if ((*(uint64_t (**)(void))((swift_isaMask & *v43) + 0xB8))() == v72 && v44 == i)
                  {
                    id v27 = v66;
                    goto LABEL_39;
                  }
                  uint64_t v67 = _stringCompareWithSmolCheck(_:_:expecting:)();

                  swift_bridgeObjectRelease();
                  if (v67) {
                    break;
                  }
                  id v27 = v66;
                  if (__OFADD__(v4, 1)) {
                    goto LABEL_73;
                  }
                  uint64_t v42 = v14 + 1;
                  if ((void *)(v4 + 1) == a1) {
                    goto LABEL_43;
                  }
                }
                id v27 = v66;
              }
              goto LABEL_40;
            }
            unint64_t v4 = 1;
          }
LABEL_39:
          swift_bridgeObjectRelease();

LABEL_40:
          swift_bridgeObjectRelease();
          uint64_t v37 = (void *)sub_1000305A4(v4);
          swift_bridgeObjectRelease();

LABEL_41:
          unint64_t v4 = v69;
          goto LABEL_23;
        }
      }
      else
      {
        a1 = *(void **)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (a1) {
          goto LABEL_30;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_23:
      v27(&v75, 0);
      id v19 = swift_release();
      NSString v20 = (void (*)(void))(*(uint64_t (**)(uint64_t))((swift_isaMask & *v24) + 0x178))(v19);
      v20();
      swift_release();
      char v21 = *(void **)(v4 + 120);
      id v75 = 0xC000000000000008;
      uint64_t v14 = *v21 + 392;
      unint64_t v22 = *(void (**)(uint64_t *))v14;
      swift_retain();
      v22(&v75);

      swift_release();
    }
    while (v3 != v71);
  }
LABEL_76:
  swift_release_n();
  type metadata accessor for WorldRectangle();
  if (swift_dynamicCastClass())
  {
    double v46 = *(uint64_t (**)(void))((swift_isaMask & *v65) + 0xE8);
    double v47 = v65;
    double v48 = (void (*)(void))v46();
    v48();
    swift_release();
    id v49 = *(uint64_t (**)(uint64_t *))(**(void **)(v4 + 112) + 400);
    uint64_t i = v47;
    swift_retain();
    a1 = (void *)v49(&v75);
    uint64_t v3 = v50;
    swift_bridgeObjectRetain();
    sub_100012894(&qword_1004C4358);
    sub_100012894(&qword_1004C54D8);
    swift_dynamicCast();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_78:
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      *(void *)(v3 + 8) = v73;
      ((void (*)(uint64_t *, void))a1)(&v75, 0);
      swift_release();

LABEL_79:
      unint64_t v4 = v69;
LABEL_82:
      *(CFTimeInterval *)(v4 + 208) = CACurrentMediaTime();
      return;
    }
LABEL_88:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_78;
  }
  type metadata accessor for WorldLine();
  if (swift_dynamicCastClass())
  {
    id v51 = *(void *)(v4 + 120);
    id v75 = 0xC000000000000008;
    uint64_t v52 = *(void (**)(uint64_t *))(*(void *)v51 + 392);
    swift_retain();
    v52(&v75);
    swift_release();
    goto LABEL_82;
  }
  type metadata accessor for WorldPerson();
  uint64_t v53 = swift_dynamicCastClass();
  if (v53)
  {
    long long v54 = *(void *)(v4 + 120);
    id v75 = v53 | 0x4000000000000000;
    id v55 = *(void (**)(uint64_t *))(*(void *)v54 + 392);
    char v56 = v65;
    swift_retain();
    v55(&v75);
    swift_release();
    uint64_t v57 = *(uint64_t (**)(uint64_t *))(**(void **)(v4 + 112) + 400);
    char v58 = v56;
    swift_retain();
    id v59 = (void (*)(uint64_t *, void))v57(&v75);
    id v61 = v60;
    swift_bridgeObjectRetain();
    sub_100012894(&qword_1004C4358);
    sub_100012894(&qword_1004C6900);
    swift_dynamicCast();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_dynamicCast();
    swift_bridgeObjectRelease();
    *(void *)(v61 + 16) = v73;
    v59(&v75, 0);
    uint64_t v62 = swift_release();
    double v63 = (void (*)(void))(*(uint64_t (**)(uint64_t))((swift_isaMask & *v58) + 0xE8))(v62);
    v63();

    swift_release();
    goto LABEL_79;
  }
  id v75 = 0;
  uint64_t v76 = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  id v75 = 0xD000000000000016;
  uint64_t v76 = 0x800000010042C620;
  swift_getObjectType();
  v64._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v64);
  swift_bridgeObjectRelease();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1001DE3B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 248);
  return swift_retain();
}

uint64_t sub_1001DE3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v36[3] = a3;
  v36[4] = a4;
  unint64_t v7 = sub_100078D1C(v36);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(v7, a1, a3);
  uint64_t v8 = sub_100012894(&qword_1004C54B8);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v10 = qword_1004C2E30;
  swift_retain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1004F8630;
  int64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 272);
  swift_retain();
  *(void *)(a2 + 64) = v12(KeyPath, v11);
  uint64_t v13 = sub_100012894(&qword_1004C7170);
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = qword_1004F8630;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 272);
  swift_retain();
  *(void *)(a2 + 72) = v16(v14, v15);
  uint64_t v17 = sub_100012894(&qword_1004C6F48);
  uint64_t v18 = swift_getKeyPath();
  uint64_t v19 = qword_1004F8630;
  NSString v20 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 272);
  swift_retain();
  *(void *)(a2 + 80) = v20(v18, v19);
  sub_100012894(&qword_1004CBF00);
  swift_getKeyPath();
  *(void *)(a2 + 88) = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v21 = swift_getKeyPath();
  uint64_t v22 = sub_100012894(&qword_1004C3EE0);
  uint64_t v23 = qword_1004F8630;
  id v24 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 272);
  swift_retain();
  *(void *)(a2 + 96) = v24(v21, v23);
  uint64_t v25 = swift_getKeyPath();
  uint64_t v26 = sub_100012894((uint64_t *)&unk_1004CF6F0);
  uint64_t v27 = qword_1004F8630;
  double v28 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 272);
  swift_retain();
  *(void *)(a2 + 104) = v28(v25, v27);
  sub_100012894(&qword_1004CBF08);
  swift_getKeyPath();
  *(void *)(a2 + 112) = MutableStateValue.__allocating_init(_:_:)();
  sub_100012894(&qword_1004CBF10);
  swift_getKeyPath();
  *(void *)(a2 + 120) = MutableStateValue.__allocating_init(_:_:)();
  sub_100012894(&qword_1004CBF18);
  swift_getKeyPath();
  *(void *)(a2 + 128) = MutableStateValue.__allocating_init(_:_:)();
  sub_100012894(&qword_1004CBF20);
  swift_getKeyPath();
  *(void *)(a2 + 136) = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v29 = sub_100012894(&qword_1004CBF28);
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = qword_1004F8630;
  id v32 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 272);
  swift_retain();
  *(void *)(a2 + 144) = v32(v30, v31);
  *(_OWORD *)(a2 + 152) = 0u;
  *(_OWORD *)(a2 + 168) = 0u;
  *(_OWORD *)(a2 + 184) = 0u;
  *(_OWORD *)(a2 + 200) = 0u;
  swift_release();
  sub_10002B8B4((uint64_t)v36, (uint64_t)&v35);
  uint64_t v33 = StateObserver.init(configuration:)();
  sub_100013218((uint64_t)v36);
  return v33;
}

uint64_t sub_1001DE7B0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 248);
  return swift_retain();
}

void sub_1001DE7C4(uint64_t a1)
{
  sub_1001D7928(a1, v1);
}

uint64_t sub_1001DE7CC(uint64_t a1)
{
  return sub_1001D8390(a1, v1);
}

uint64_t sub_1001DE7D8(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

void sub_1001DE804()
{
  sub_1001D9534(v0);
}

uint64_t sub_1001DE80C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001DE81C()
{
  return swift_release();
}

double *sub_1001DE824(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  uint64_t v18 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_24;
  }
  for (uint64_t i = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v5 = 0;
    unint64_t v6 = v3 & 0xC000000000000001;
    uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8;
    uint64_t v8 = (double **)(v3 + 32);
    uint64_t v17 = (double **)(v3 + 32);
    while (1)
    {
      if (v6)
      {
        unint64_t v9 = (double *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v5 >= *(void *)(v7 + 16)) {
          goto LABEL_22;
        }
        unint64_t v9 = v8[v5];
      }
      uint64_t v10 = v9;
      if (__OFADD__(v5++, 1)) {
        goto LABEL_23;
      }
      unint64_t v3 = (unint64_t)v9;
      uint64_t v12 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v9) + 0xD0))();
      uint64_t v13 = *(void *)(a2 + 16);
      if (v13)
      {
        if (*(void *)(a2 + 32) == v12)
        {
LABEL_12:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          uint64_t v8 = v17;
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          unint64_t v3 = (unint64_t)&v18;
          specialized ContiguousArray._endMutation()();
          goto LABEL_5;
        }
        if (v13 != 1) {
          break;
        }
      }
LABEL_4:

LABEL_5:
      if (v5 == i) {
        return v18;
      }
    }
    uint64_t v14 = 5;
    while (1)
    {
      uint64_t v15 = v14 - 3;
      if (__OFADD__(v14 - 4, 1)) {
        break;
      }
      if (*(void *)(a2 + 8 * v14) == v12) {
        goto LABEL_12;
      }
      ++v14;
      if (v15 == v13) {
        goto LABEL_4;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    ;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1001DEA20(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_1001DEA6C(void *a1, void (*a2)(void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1001DEAAC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001DEAF4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001DEB04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001DEB4C()
{
  sub_100012894(&qword_1004C69B0);
  type metadata accessor for URLQueryItem();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1003F8B70;
  URLQueryItem.init(name:value:)();
  URLQueryItem.init(name:value:)();
  uint64_t result = URLQueryItem.init(name:value:)();
  qword_1004D1B30 = v0;
  return result;
}

uint64_t sub_1001DECAC(uint64_t a1)
{
  return sub_1001DECF4(a1, qword_1004D1B38);
}

uint64_t sub_1001DECD0(uint64_t a1)
{
  return sub_1001DECF4(a1, qword_1004D1B50);
}

uint64_t sub_1001DECF4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for URLQueryItem();
  sub_100021818(v3, a2);
  sub_1000217E0(v3, (uint64_t)a2);
  return URLQueryItem.init(name:value:)();
}

uint64_t sub_1001DED70(void *a1)
{
  uint64_t v2 = v1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = sub_100012894(&qword_1004C3F08);
  uint64_t v6 = qword_1004C2E30;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1004F8630;
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 272);
  swift_retain();
  *(void *)(v2 + 64) = v8(KeyPath, v7);
  *(void *)(v2 + 72) = a1;
  id v9 = a1;
  swift_release();
  uint64_t v10 = StateObserver.init(configuration:)();
  uint64_t v11 = *(void *)(v10 + 72);
  if (v11)
  {
    *(void *)(v11 + OBJC_IVAR____TtC7Measure14TapToRadarView_delegate + 8) = &off_100492D20;
    swift_unknownObjectWeakAssign();
  }
  swift_retain();
  sub_1001E07B8();
  swift_release();

  return v10;
}

void sub_1001DEEBC()
{
  uint64_t inited = swift_initStackObject();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v2 = sub_100012894(&qword_1004C3F08);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1004F8630;
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 272);
  swift_retain();
  *(void *)(inited + 64) = v4(KeyPath, v3);
  swift_release();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1001DEFBC()
{
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [self alertControllerWithTitle:v1 message:v2 preferredStyle:1];

  swift_retain();
  NSString v4 = String._bridgeToObjectiveC()();
  uint64_t v15 = sub_1001E06C8;
  uint64_t v16 = v0;
  uint64_t v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_100058CEC;
  uint64_t v14 = &unk_100492D30;
  uint64_t v5 = _Block_copy(&v11);
  swift_release();
  uint64_t v6 = self;
  id v7 = [v6 actionWithTitle:v4 style:0 handler:v5];
  _Block_release(v5);

  [v3 addAction:v7];
  swift_retain();
  NSString v8 = String._bridgeToObjectiveC()();
  uint64_t v15 = sub_1001E0718;
  uint64_t v16 = v0;
  uint64_t v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_100058CEC;
  uint64_t v14 = &unk_100492D58;
  id v9 = _Block_copy(&v11);
  swift_release();
  id v10 = [v6 actionWithTitle:v8 style:0 handler:v9];
  _Block_release(v9);

  [v3 addAction:v10];
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  if (*((void *)&xmmword_1004F7FD0 + 1))
  {
    [*((id *)&xmmword_1004F7FD0 + 1) presentViewController:v3 animated:1 completion:0];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1001DF280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005536C();
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = a3;
  void aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = a4;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v18);
}

uint64_t sub_1001DF514(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a2();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001DF574(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v29 = a2;
  uint64_t v33 = a1;
  uint64_t v37 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v40 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v36 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v32 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v29 - v16;
  sub_10005536C();
  uint64_t v30 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v12 + 8);
  v31(v15, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v8);
  unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = swift_allocObject();
  NSString v20 = v33;
  *(void *)(v19 + 16) = v33;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19 + v18, (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  uint64_t v21 = (void *)(v19 + ((v10 + v18 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v22 = v35;
  *uint64_t v21 = v34;
  v21[1] = v22;
  aBlock[4] = sub_1001E21F4;
  void aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_100492E70;
  uint64_t v23 = _Block_copy(aBlock);
  id v24 = v20;
  swift_bridgeObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
  uint64_t v26 = v36;
  uint64_t v25 = v37;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v27 = (void *)v30;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v26, v25);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v39);
  return ((uint64_t (*)(char *, uint64_t))v31)(v17, v32);
}

uint64_t sub_1001DF9F0(void *a1, uint64_t a2, void (*a3)(char *, unint64_t, void *), uint64_t a4)
{
  double v98 = a3;
  id v99 = a1;
  uint64_t v5 = type metadata accessor for URLComponents();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v86 = (char *)v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100012894((uint64_t *)&unk_1004CAEB0);
  __chkstk_darwin(v8 - 8);
  unint64_t v93 = (char *)v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)type metadata accessor for URL();
  uint64_t v11 = *(v10 - 1);
  uint64_t v12 = __chkstk_darwin(v10);
  CGFloat v89 = (char *)v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  double v100 = (char *)v84 - v14;
  uint64_t v15 = type metadata accessor for URLQueryItem();
  uint64_t v91 = *(void *)(v15 - 8);
  uint64_t v92 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v85 = (char *)v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v84 - v18;
  uint64_t v20 = sub_100012894(&qword_1004D1CA0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(string:)();
  uint64_t v87 = v6;
  uint64_t v23 = v6 + 48;
  id v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v24(v22, 1, v5))
  {
    if (qword_1004C31E0 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    URLComponents.queryItems.setter();
  }
  uint64_t v94 = v5;
  unsigned int v25 = v24(v22, 1, v5);
  id v96 = v24;
  if (!v25)
  {
    uint64_t v27 = v6 + 48;
    uint64_t v29 = (void (*)(Swift::String *, void))URLComponents.queryItems.modify();
    if (*v28)
    {
      uint64_t v30 = (void **)v28;
      uint64_t v95 = v11;
      id v88 = v22;
      if (qword_1004C31F0 != -1) {
        swift_once();
      }
      uint64_t v31 = v92;
      uint64_t v32 = sub_1000217E0(v92, (uint64_t)qword_1004D1B50);
      (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v19, v32, v31);
      uint64_t v33 = *v30;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v30 = v33;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v33 = (void *)sub_10006FA60(0, v33[2] + 1, 1, v33);
        *uint64_t v30 = v33;
      }
      unint64_t v36 = v33[2];
      unint64_t v35 = v33[3];
      if (v36 >= v35 >> 1)
      {
        uint64_t v33 = (void *)sub_10006FA60(v35 > 1, v36 + 1, 1, v33);
        *uint64_t v30 = v33;
      }
      uint64_t v23 = v27;
      v33[2] = v36 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v91 + 32))((unint64_t)v33+ ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))+ *(void *)(v91 + 72) * v36, v19, v92);
      v29(v102, 0);
      uint64_t v22 = v88;
      uint64_t v11 = v95;
    }
    else
    {
      v29(v102, 0);
    }
  }
  URL._bridgeToObjectiveC()(v26);
  uint64_t v38 = v37;
  v102[0]._uint64_t countAndFlagsBits = 0;
  id v39 = [v99 contentsOfDirectoryAtURL:v37 includingPropertiesForKeys:0 options:0 error:v102];

  uint64_t countAndFlagsBits = (void *)v102[0]._countAndFlagsBits;
  if (!v39)
  {
    id v56 = (id)v102[0]._countAndFlagsBits;
    uint64_t v57 = _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1004C2B60 != -1) {
      swift_once();
    }
    v102[0]._uint64_t countAndFlagsBits = 0;
    v102[0]._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(53);
    v58._uint64_t countAndFlagsBits = 0xD000000000000033;
    v58._object = (void *)0x800000010042C860;
    String.append(_:)(v58);
    uint64_t v101 = v57;
    sub_100012894(&qword_1004C7128);
    _print_unlocked<A, B>(_:_:)();
    Log.error(_:isPrivate:)(v102[0], 0);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    return sub_10002B9C0((uint64_t)v22, &qword_1004D1CA0);
  }
  uint64_t v90 = v23;
  uint64_t v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v42 = countAndFlagsBits;

  swift_bridgeObjectRetain();
  uint64_t v43 = sub_1001E0FEC(v41, (uint64_t)v98, a4);
  swift_bridgeObjectRelease();
  int64_t v44 = *(void *)(v43 + 16);
  id v99 = v10;
  uint64_t v95 = v11;
  if (v44)
  {
    id v88 = v22;
    v102[0]._uint64_t countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
    sub_1000BC040(0, v44, 0);
    double v98 = *(void (**)(char *, unint64_t, void *))(v11 + 16);
    unint64_t v45 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v84[1] = v43;
    unint64_t v46 = v43 + v45;
    uint64_t v97 = *(void *)(v11 + 72);
    double v47 = (void (**)(char *, id))(v11 + 8);
    do
    {
      double v48 = v100;
      v98(v100, v46, v10);
      uint64_t v49 = URL.path.getter();
      uint64_t v51 = v50;
      (*v47)(v48, v10);
      uint64_t v52 = (double *)v102[0]._countAndFlagsBits;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000BC040(0, *((void *)v52 + 2) + 1, 1);
        uint64_t v52 = (double *)v102[0]._countAndFlagsBits;
      }
      unint64_t v54 = *((void *)v52 + 2);
      unint64_t v53 = *((void *)v52 + 3);
      if (v54 >= v53 >> 1)
      {
        sub_1000BC040((double *)(v53 > 1), v54 + 1, 1);
        uint64_t v52 = (double *)v102[0]._countAndFlagsBits;
      }
      *((void *)v52 + 2) = v54 + 1;
      id v55 = &v52[2 * v54];
      *((void *)v55 + 4) = v49;
      *((void *)v55 + 5) = v51;
      v46 += v97;
      --v44;
      uint64_t v10 = v99;
    }
    while (v44);
    swift_bridgeObjectRelease();
    uint64_t v22 = v88;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v52 = _swiftEmptyArrayStorage;
  }
  v102[0]._uint64_t countAndFlagsBits = (uint64_t)v52;
  sub_100012894(&qword_1004D1CA8);
  sub_10002179C(&qword_1004D1CB0, &qword_1004D1CA8);
  uint64_t v59 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v61 = v60;
  swift_bridgeObjectRelease();
  if (v59 || v61 != 0xE000000000000000)
  {
    char v65 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v64 = v94;
    uint64_t v62 = v95;
    uint64_t v63 = (uint64_t)v93;
    if ((v65 & 1) != 0 || v96(v22, 1, v94))
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    uint64_t v77 = (void (*)(Swift::String *, void))URLComponents.queryItems.modify();
    if (*v76)
    {
      uint64_t v78 = (void **)v76;
      id v79 = v85;
      URLQueryItem.init(name:value:)();
      swift_bridgeObjectRelease();
      uint64_t v80 = *v78;
      char v81 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v78 = v80;
      if ((v81 & 1) == 0)
      {
        uint64_t v80 = (void *)sub_10006FA60(0, v80[2] + 1, 1, v80);
        *uint64_t v78 = v80;
      }
      unint64_t v83 = v80[2];
      unint64_t v82 = v80[3];
      if (v83 >= v82 >> 1)
      {
        uint64_t v80 = (void *)sub_10006FA60(v82 > 1, v83 + 1, 1, v80);
        *uint64_t v78 = v80;
      }
      uint64_t v10 = v99;
      v80[2] = v83 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v91 + 32))((unint64_t)v80+ ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))+ *(void *)(v91 + 72) * v83, v79, v92);
      v77(v102, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      v77(v102, 0);
      uint64_t v10 = v99;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v62 = v95;
    uint64_t v63 = (uint64_t)v93;
  }
  uint64_t v64 = v94;
LABEL_35:
  if (v96(v22, 1, v64))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, void *))(v62 + 56))(v63, 1, 1, v10);
LABEL_38:
    sub_10002B9C0(v63, (uint64_t *)&unk_1004CAEB0);
    if (qword_1004C2B60 != -1) {
      swift_once();
    }
    v68._uint64_t countAndFlagsBits = 0xD000000000000027;
    v68._object = (void *)0x800000010042C6D0;
    Log.error(_:isPrivate:)(v68, 0);
    return sub_10002B9C0((uint64_t)v22, &qword_1004D1CA0);
  }
  uint64_t v66 = v87;
  uint64_t v67 = v86;
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v86, v22, v64);
  URLComponents.url.getter();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v64);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void *))(v62 + 48))(v63, 1, v10) == 1) {
    goto LABEL_38;
  }
  id v70 = v89;
  (*(void (**)(char *, uint64_t, void *))(v62 + 32))(v89, v63, v10);
  id v71 = [self defaultWorkspace];
  if (v71)
  {
    uint64_t v73 = v71;
    URL._bridgeToObjectiveC()(v72);
    id v75 = v74;
    [v73 openURL:v74 configuration:0 completionHandler:0];

    id v70 = v89;
  }
  (*(void (**)(char *, void *))(v62 + 8))(v70, v10);
  return sub_10002B9C0((uint64_t)v22, &qword_1004D1CA0);
}

void sub_1001E05AC()
{
  swift_release();
  NSString v1 = *(void **)(v0 + 72);
}

uint64_t sub_1001E05DC()
{
  uint64_t v0 = StateObserver.deinit();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TapToRadarController()
{
  uint64_t result = qword_1004D1B90;
  if (!qword_1004D1B90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001E0678()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1001E06C8(uint64_t a1)
{
  return sub_1001DF280(a1, v1, (uint64_t)sub_1001E20B8, (uint64_t)&unk_100492DD0);
}

uint64_t sub_1001E0700(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001E0710()
{
  return swift_release();
}

uint64_t sub_1001E0718(uint64_t a1)
{
  return sub_1001DF280(a1, v1, (uint64_t)sub_1001E0788, (uint64_t)&unk_100492DA8);
}

uint64_t sub_1001E0750()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001E0788()
{
  return sub_1001DF514(v0, (void (*)(void))sub_1001E1A88);
}

void sub_1001E07B8()
{
  uint64_t v0 = sub_100012894((uint64_t *)&unk_1004CAEB0);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v62 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v68 = (uint64_t)&v54 - v3;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v67 = (char *)&v54 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v60 = (char *)&v54 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v54 - v13;
  uint64_t v15 = (void (**)(char *, uint64_t, uint64_t))[self defaultManager];
  if (qword_1004C2A30 != -1) {
    goto LABEL_32;
  }
  while (1)
  {
    uint64_t v16 = sub_1000217E0(v4, (uint64_t)qword_1004F80A0);
    id v70 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v71 = v5 + 16;
    v70(v14, v16, v4);
    URL.path.getter();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned int v18 = [v15 fileExistsAtPath:v17];

    if (!v18)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_29:

      return;
    }
    URL._bridgeToObjectiveC()(v19);
    uint64_t v21 = v20;
    v74[0] = 0;
    id v22 = [v15 contentsOfDirectoryAtURL:v20 includingPropertiesForKeys:0 options:0 error:v74];

    id v23 = v74[0];
    if (!v22)
    {
      id v37 = v74[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
      swift_errorRelease();
      return;
    }
    uint64_t v59 = v8;
    uint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    id v25 = v23;

    id v75 = (char *)_swiftEmptyArrayStorage;
    uint64_t v26 = *(void *)(v24 + 16);
    uint64_t v58 = v5;
    uint64_t v66 = v26;
    id v55 = v14;
    uint64_t v61 = v15;
    if (!v26) {
      break;
    }
    unint64_t v27 = 0;
    uint64_t v64 = v5 + 48;
    uint64_t v15 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    id v56 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v65 = v5 + 56;
    unint64_t v54 = (v5 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v28 = v68;
    uint64_t v14 = v60;
    uint64_t v63 = v24;
    uint64_t v57 = v4;
    while (v27 < *(void *)(v24 + 16))
    {
      unint64_t v29 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v30 = *(void *)(v5 + 72);
      v70((char *)v28, v24 + v29 + v30 * v27, v4);
      uint64_t v8 = *(char **)(v5 + 56);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v8)(v28, 0, 1, v4);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v28, 1, v4) == 1)
      {
        uint64_t v14 = v55;
        uint64_t v15 = v61;
        goto LABEL_21;
      }
      id v69 = v8;
      uint64_t v31 = *v15;
      (*v15)(v14, v28, v4);
      v74[0] = (id)URL.path.getter();
      v74[1] = v32;
      uint64_t v72 = 0x6461726F74706174;
      unint64_t v73 = 0xEA00000000007261;
      sub_10007CEE0();
      char v33 = StringProtocol.contains<A>(_:)();
      swift_bridgeObjectRelease();
      if (v33)
      {
        v31(v67, (uint64_t)v14, v4);
        uint64_t v34 = v75;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000BBD58(0, *((void *)v34 + 2) + 1, 1);
          uint64_t v34 = v75;
        }
        uint64_t v8 = v69;
        unint64_t v36 = *((void *)v34 + 2);
        unint64_t v35 = *((void *)v34 + 3);
        uint64_t v4 = v57;
        if (v36 >= v35 >> 1)
        {
          sub_1000BBD58(v35 > 1, v36 + 1, 1);
          uint64_t v34 = v75;
        }
        *((void *)v34 + 2) = v36 + 1;
        v31(&v34[v29 + v36 * v30], (uint64_t)v67, v4);
        id v75 = v34;
        uint64_t v5 = v58;
        uint64_t v14 = v60;
      }
      else
      {
        (*v56)(v14, v4);
        uint64_t v8 = v69;
      }
      ++v27;
      uint64_t v28 = v68;
      uint64_t v24 = v63;
      if (v66 == v27)
      {
        uint64_t v14 = v55;
        uint64_t v15 = v61;
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(v68, 1, 1, v4);
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_32:
    swift_once();
  }
  uint64_t v8 = *(char **)(v5 + 56);
  uint64_t v28 = v68;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(v68, 1, 1, v4);
LABEL_21:
  swift_bridgeObjectRelease();
  sub_10002B9C0(v28, (uint64_t *)&unk_1004CAEB0);
  uint64_t v38 = *((void *)v75 + 2);
  if (!v38)
  {
LABEL_28:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    swift_release();
    goto LABEL_29;
  }
  id v39 = &v75[(*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)];
  uint64_t v68 = *(void *)(v5 + 72);
  id v69 = (char *)(v5 + 56);
  uint64_t v40 = v5;
  uint64_t v41 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  id v42 = (void (**)(char *, char *, uint64_t))(v40 + 32);
  uint64_t v43 = (void (**)(char *, uint64_t))(v40 + 8);
  uint64_t v67 = v75;
  swift_bridgeObjectRetain();
  int64_t v44 = v59;
  while (1)
  {
    unint64_t v45 = v62;
    v70(v62, (uint64_t)v39, v4);
    ((void (*)(char *, void, uint64_t, uint64_t))v8)(v45, 0, 1, v4);
    if ((*v41)(v45, 1, v4) == 1) {
      goto LABEL_27;
    }
    (*v42)(v44, v45, v4);
    URL._bridgeToObjectiveC()(v46);
    double v48 = v47;
    v74[0] = 0;
    unsigned int v49 = [v61 removeItemAtURL:v47 error:v74];

    if (!v49) {
      break;
    }
    uint64_t v50 = *v43;
    id v51 = v74[0];
    v50(v44, v4);
    v39 += v68;
    if (!--v38)
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v8)(v62, 1, 1, v4);
LABEL_27:
      swift_release();
      uint64_t v5 = v58;
      uint64_t v14 = v55;
      uint64_t v15 = v61;
      goto LABEL_28;
    }
  }
  id v52 = v74[0];
  _convertNSErrorToError(_:)();

  swift_willThrow();
  unint64_t v53 = *v43;
  (*v43)(v44, v4);
  swift_release();
  v53(v55, v4);
  swift_release();

  swift_errorRelease();
}

uint64_t sub_1001E0FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v4 = sub_100012894((uint64_t *)&unk_1004CAEB0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v38 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v9);
  unint64_t v45 = _swiftEmptyArrayStorage;
  uint64_t v37 = *(void *)(a1 + 16);
  if (v37)
  {
    uint64_t v31 = (char *)v26 - v12;
    uint64_t v32 = v6;
    unint64_t v13 = 0;
    uint64_t v33 = a1;
    uint64_t v34 = v8 + 48;
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    unint64_t v27 = (uint64_t (**)(char *, uint64_t))(v8 + 8);
    uint64_t v28 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v35 = v8 + 56;
    uint64_t v36 = v8 + 16;
    v26[1] = (v8 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v30 = v8;
    while (v13 < *(void *)(a1 + 16))
    {
      unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v16 = *(void *)(v8 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, a1 + v15 + v16 * v13, v7);
      unint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v29(v6, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
        goto LABEL_15;
      }
      NSString v17 = *v14;
      unsigned int v18 = v14;
      uint64_t v19 = v7;
      uint64_t v20 = v31;
      v17(v31, v6, v19);
      uint64_t v43 = URL.path.getter();
      uint64_t v44 = v21;
      uint64_t v41 = v39;
      uint64_t v42 = v40;
      sub_10007CEE0();
      char v22 = StringProtocol.contains<A>(_:)();
      swift_bridgeObjectRelease();
      if (v22)
      {
        v17(v38, v20, v19);
        id v23 = v45;
        uint64_t v7 = v19;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000BBD58(0, *((void *)v23 + 2) + 1, 1);
          id v23 = v45;
        }
        unint64_t v25 = *((void *)v23 + 2);
        unint64_t v24 = *((void *)v23 + 3);
        uint64_t v14 = v28;
        if (v25 >= v24 >> 1)
        {
          sub_1000BBD58(v24 > 1, v25 + 1, 1);
          id v23 = v45;
        }
        *((void *)v23 + 2) = v25 + 1;
        uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v17)((char *)v23 + v15 + v25 * v16, v38, v7);
        unint64_t v45 = v23;
      }
      else
      {
        uint64_t result = (*v27)(v20, v19);
        uint64_t v7 = v19;
        uint64_t v14 = v18;
      }
      ++v13;
      uint64_t v6 = v32;
      a1 = v33;
      uint64_t v8 = v30;
      if (v37 == v13)
      {
        v29(v32, 1, 1, v7);
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
LABEL_15:
    swift_bridgeObjectRelease();
    sub_10002B9C0((uint64_t)v6, (uint64_t *)&unk_1004CAEB0);
    return (uint64_t)v45;
  }
  return result;
}

void sub_1001E13A8()
{
  uint64_t v0 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v56 + 64);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v48 - v12;
  __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v48 - v14;
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  if (!qword_1004F7FE8) {
    goto LABEL_17;
  }
  if (*(unsigned char *)(qword_1004F7FE8 + qword_1004F84C8) == 1)
  {
    NSString v16 = String._bridgeToObjectiveC()();
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [self alertControllerWithTitle:v16 message:v17 preferredStyle:1];

    NSString v19 = String._bridgeToObjectiveC()();
    uint64_t v61 = nullsub_1;
    uint64_t v62 = 0;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v58 = 1107296256;
    uint64_t v59 = sub_100058CEC;
    uint64_t v60 = &unk_100492E20;
    uint64_t v20 = _Block_copy(&aBlock);
    swift_release();
    id v21 = [self actionWithTitle:v19 style:0 handler:v20];
    _Block_release(v20);

    [v18 addAction:v21];
    if (*((void *)&xmmword_1004F7FD0 + 1))
    {
      [*((id *)&xmmword_1004F7FD0 + 1) presentViewController:v18 animated:1 completion:0];

      return;
    }
    goto LABEL_18;
  }
  uint64_t v53 = v0;
  id v54 = [self defaultManager];
  if (qword_1004C2A30 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1000217E0(v7, (uint64_t)qword_1004F80A0);
  id v23 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
  id v55 = v15;
  id v52 = v23;
  v23(v15, (char *)v22, v7);
  uint64_t aBlock = 0;
  unint64_t v58 = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  uint64_t aBlock = 0x6461726F74706174;
  unint64_t v58 = 0xEA00000000007261;
  Date.init()();
  Date.timeIntervalSince1970.getter();
  double v25 = v24;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((~*(void *)&v25 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v25 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v25 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  id v51 = v2;
  uint64_t v63 = (uint64_t)v25;
  v26._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  v27._uint64_t countAndFlagsBits = 1987013934;
  v27._object = (void *)0xE400000000000000;
  String.append(_:)(v27);
  uint64_t v28 = aBlock;
  unint64_t v29 = v58;
  uint64_t v30 = v55;
  URL.appendingPathComponent(_:)();
  uint64_t v49 = qword_1004F7FE8;
  uint64_t v50 = v13;
  if (qword_1004F7FE8)
  {
    uint64_t v31 = v52;
    v52(v10, v30, v7);
    uint64_t v32 = v56;
    unint64_t v33 = (*(unsigned __int8 *)(v56 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
    unint64_t v34 = (v8 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v54;
    (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v35 + v33, v10, v7);
    uint64_t v36 = (uint64_t *)(v35 + v34);
    *uint64_t v36 = v28;
    v36[1] = v29;
    uint64_t v37 = sub_100012894(&qword_1004CBE90);
    uint64_t v38 = *(int *)(v37 + 48);
    uint64_t v40 = v50;
    uint64_t v39 = (uint64_t)v51;
    uint64_t v41 = (uint64_t (**)())&v51[*(int *)(v37 + 64)];
    v31(v51, v50, v7);
    *(unsigned char *)(v39 + v38) = 1;
    void *v41 = sub_1001E20EC;
    v41[1] = (uint64_t (*)())v35;
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = (void *)v49;
    uint64_t v43 = v49 + qword_1004CF758;
    swift_beginAccess();
    uint64_t v44 = v42;
    id v45 = v54;
    swift_retain();
    sub_1001AB5B4(v39, v43);
    swift_endAccess();
    sub_1001A8460();
    uint64_t v46 = sub_100090CE0(v39);
    (*(void (**)(uint64_t))&v44[qword_1004CF788])(v46);

    swift_release();
    double v47 = *(void (**)(char *, uint64_t))(v32 + 8);
    v47(v40, v7);
    v47(v55, v7);
    return;
  }
LABEL_19:
  __break(1u);
}

uint64_t sub_1001E1A88()
{
  uint64_t v0 = type metadata accessor for URLComponents();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v41 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100012894((uint64_t *)&unk_1004CAEB0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v44 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v40 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URLQueryItem();
  uint64_t v43 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100012894(&qword_1004D1CA0);
  __chkstk_darwin(v11 - 8);
  unint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(string:)();
  uint64_t v42 = v1;
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48);
  if (!v14(v13, 1, v0))
  {
    if (qword_1004C31E0 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    URLComponents.queryItems.setter();
  }
  if (!v14(v13, 1, v0))
  {
    uint64_t v39 = v6;
    unint64_t v15 = (void (*)(unsigned char *, void))URLComponents.queryItems.modify();
    if (*v16)
    {
      NSString v17 = v16;
      uint64_t v38 = v15;
      if (qword_1004C31E8 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_1000217E0(v8, (uint64_t)qword_1004D1B38);
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v10, v18, v8);
      NSString v19 = (void *)*v17;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *NSString v17 = (size_t)v19;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        NSString v19 = (void *)sub_10006FA60(0, v19[2] + 1, 1, v19);
        *NSString v17 = (size_t)v19;
      }
      unint64_t v22 = v19[2];
      unint64_t v21 = v19[3];
      unint64_t v23 = v22 + 1;
      if (v22 >= v21 >> 1)
      {
        unint64_t v37 = v22 + 1;
        size_t v36 = sub_10006FA60(v21 > 1, v22 + 1, 1, v19);
        unint64_t v23 = v37;
        NSString v19 = (void *)v36;
        *NSString v17 = v36;
      }
      v19[2] = v23;
      (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))((unint64_t)v19+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v22, v10, v8);
      v38(v45, 0);
    }
    else
    {
      v15(v45, 0);
    }
    uint64_t v6 = v39;
  }
  if (v14(v13, 1, v0))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v5, 1, 1, v6);
LABEL_19:
    sub_10002B9C0((uint64_t)v5, (uint64_t *)&unk_1004CAEB0);
    if (qword_1004C2B60 != -1) {
      swift_once();
    }
    v27._uint64_t countAndFlagsBits = 0xD000000000000027;
    v27._object = (void *)0x800000010042C6D0;
    Log.error(_:isPrivate:)(v27, 0);
    return sub_10002B9C0((uint64_t)v13, &qword_1004D1CA0);
  }
  double v25 = v41;
  uint64_t v24 = v42;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v41, v13, v0);
  URLComponents.url.getter();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v0);
  uint64_t v26 = v44;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v5, 1, v6) == 1) {
    goto LABEL_19;
  }
  unint64_t v29 = v40;
  uint64_t v30 = v6;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v40, v5, v6);
  id v31 = [self defaultWorkspace];
  if (v31)
  {
    unint64_t v33 = v31;
    URL._bridgeToObjectiveC()(v32);
    uint64_t v35 = v34;
    [v33 openURL:v34 configuration:0 completionHandler:0];
  }
  (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v30);
  return sub_10002B9C0((uint64_t)v13, &qword_1004D1CA0);
}

uint64_t sub_1001E20B8()
{
  return sub_1001DF514(v0, sub_1001E13A8);
}

uint64_t sub_1001E20EC()
{
  return sub_1001E220C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1001DF574);
}

uint64_t sub_1001E2108()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1001E21F4()
{
  return sub_1001E220C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1001DF9F0);
}

uint64_t sub_1001E220C(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + v3;
  unint64_t v6 = (uint64_t *)(v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];

  return a1(v4, v5, v7, v8);
}

void *sub_1001E22E0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    NSString v16 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for MeasurementCapture();
    uint64_t v12 = *(void *)(v11 - 8);
    unint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100012894((uint64_t *)&unk_1004CE670);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v17 = type metadata accessor for URL();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      v18(v9, v10, v17);
      v18(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v19 = a3[7];
    uint64_t v20 = (char *)a1 + v19;
    unint64_t v21 = (char *)a2 + v19;
    uint64_t v60 = a2;
    uint64_t v129 = *((void *)v21 + 10);
    uint64_t v130 = *((void *)v21 + 9);
    uint64_t v127 = *((void *)v21 + 12);
    uint64_t v128 = *((void *)v21 + 11);
    uint64_t v125 = *((void *)v21 + 14);
    uint64_t v126 = *((void *)v21 + 13);
    uint64_t v123 = *((void *)v21 + 16);
    uint64_t v124 = *((void *)v21 + 15);
    uint64_t v121 = *((void *)v21 + 18);
    uint64_t v122 = *((void *)v21 + 17);
    uint64_t v119 = *((void *)v21 + 20);
    uint64_t v120 = *((void *)v21 + 19);
    uint64_t v117 = *((void *)v21 + 22);
    uint64_t v118 = *((void *)v21 + 21);
    uint64_t v115 = *((void *)v21 + 24);
    uint64_t v116 = *((void *)v21 + 23);
    uint64_t v113 = *((void *)v21 + 26);
    uint64_t v114 = *((void *)v21 + 25);
    uint64_t v111 = *((void *)v21 + 28);
    uint64_t v112 = *((void *)v21 + 27);
    uint64_t v110 = *((void *)v21 + 29);
    uint64_t v109 = *((void *)v21 + 30);
    uint64_t v108 = *((void *)v21 + 31);
    uint64_t v107 = *((void *)v21 + 32);
    uint64_t v106 = *((void *)v21 + 33);
    uint64_t v105 = *((void *)v21 + 34);
    uint64_t v104 = *((void *)v21 + 35);
    uint64_t v103 = *((void *)v21 + 36);
    uint64_t v102 = *((void *)v21 + 37);
    uint64_t v101 = *((void *)v21 + 38);
    uint64_t v100 = *((void *)v21 + 39);
    uint64_t v99 = *((void *)v21 + 40);
    uint64_t v98 = *((void *)v21 + 41);
    uint64_t v97 = *((void *)v21 + 42);
    uint64_t v96 = *((void *)v21 + 43);
    uint64_t v95 = *((void *)v21 + 44);
    uint64_t v94 = *((void *)v21 + 45);
    uint64_t v93 = *((void *)v21 + 46);
    uint64_t v92 = *((void *)v21 + 47);
    uint64_t v91 = *((void *)v21 + 48);
    uint64_t v90 = *((void *)v21 + 49);
    uint64_t v89 = *((void *)v21 + 50);
    uint64_t v88 = *((void *)v21 + 51);
    uint64_t v87 = *((void *)v21 + 52);
    uint64_t v86 = *((void *)v21 + 53);
    uint64_t v85 = *((void *)v21 + 54);
    uint64_t v84 = *((void *)v21 + 55);
    uint64_t v83 = *((void *)v21 + 56);
    uint64_t v82 = *((void *)v21 + 57);
    uint64_t v81 = *((void *)v21 + 58);
    uint64_t v80 = *((void *)v21 + 59);
    uint64_t v79 = *((void *)v21 + 60);
    uint64_t v78 = *((void *)v21 + 61);
    uint64_t v77 = *((void *)v21 + 62);
    uint64_t v76 = *((void *)v21 + 63);
    uint64_t v75 = *((void *)v21 + 64);
    uint64_t v74 = *((void *)v21 + 65);
    uint64_t v73 = *((void *)v21 + 66);
    uint64_t v72 = *((void *)v21 + 67);
    uint64_t v71 = *((void *)v21 + 68);
    uint64_t v59 = a1;
    uint64_t v70 = *((void *)v21 + 69);
    uint64_t v69 = *((void *)v21 + 70);
    uint64_t v68 = *((void *)v21 + 71);
    uint64_t v67 = *((void *)v21 + 72);
    uint64_t v66 = *((void *)v21 + 73);
    uint64_t v65 = *((void *)v21 + 74);
    uint64_t v64 = *((void *)v21 + 75);
    uint64_t v63 = *((void *)v21 + 76);
    uint64_t v62 = *((void *)v21 + 77);
    uint64_t v61 = *((void *)v21 + 78);
    uint64_t v32 = *((void *)v21 + 79);
    uint64_t v33 = *((void *)v21 + 80);
    uint64_t v34 = *((void *)v21 + 81);
    uint64_t v35 = *((void *)v21 + 82);
    uint64_t v36 = *((void *)v21 + 83);
    uint64_t v37 = *((void *)v21 + 84);
    uint64_t v38 = *((void *)v21 + 85);
    uint64_t v39 = *((void *)v21 + 86);
    uint64_t v40 = *((void *)v21 + 87);
    uint64_t v41 = *((void *)v21 + 88);
    uint64_t v42 = *((void *)v21 + 89);
    uint64_t v43 = *((void *)v21 + 90);
    uint64_t v44 = *((void *)v21 + 91);
    uint64_t v45 = *((void *)v21 + 92);
    uint64_t v46 = *((void *)v21 + 93);
    uint64_t v47 = *((void *)v21 + 94);
    uint64_t v48 = *((void *)v21 + 95);
    uint64_t v49 = *((void *)v21 + 96);
    uint64_t v50 = *((void *)v21 + 97);
    uint64_t v51 = *((void *)v21 + 98);
    uint64_t v52 = *((void *)v21 + 99);
    uint64_t v53 = *((void *)v21 + 100);
    uint64_t v54 = *((void *)v21 + 101);
    uint64_t v55 = *((void *)v21 + 102);
    uint64_t v56 = *((void *)v21 + 103);
    __int16 v57 = *((_WORD *)v21 + 418);
    int v58 = *((_DWORD *)v21 + 208);
    uint64_t v22 = *((void *)v21 + 8);
    uint64_t v23 = *(void *)v21;
    uint64_t v24 = *((void *)v21 + 1);
    uint64_t v25 = *((void *)v21 + 2);
    uint64_t v26 = *((void *)v21 + 3);
    uint64_t v27 = *((void *)v21 + 4);
    uint64_t v28 = *((void *)v21 + 5);
    uint64_t v29 = *((void *)v21 + 6);
    uint64_t v30 = *((void *)v21 + 7);
    sub_100098C10(*(void *)v21, v24, v25, v26, v27, v28, v29, v30, v22, v130, v129, v128, v127, v126, v125, v124, v123, v122, v121,
      v120,
      v119,
      v118,
      v117,
      v116);
    *(void *)uint64_t v20 = v23;
    *((void *)v20 + 1) = v24;
    *((void *)v20 + 2) = v25;
    *((void *)v20 + 3) = v26;
    *((void *)v20 + 4) = v27;
    *((void *)v20 + 5) = v28;
    *((void *)v20 + 6) = v29;
    *((void *)v20 + 7) = v30;
    *((void *)v20 + 8) = v22;
    NSString v16 = v59;
    *((void *)v20 + 9) = v130;
    *((void *)v20 + 10) = v129;
    *((void *)v20 + 11) = v128;
    *((void *)v20 + 12) = v127;
    *((void *)v20 + 13) = v126;
    *((void *)v20 + 14) = v125;
    *((void *)v20 + 15) = v124;
    *((void *)v20 + 16) = v123;
    *((void *)v20 + 17) = v122;
    *((void *)v20 + 18) = v121;
    *((void *)v20 + 19) = v120;
    *((void *)v20 + 20) = v119;
    *((void *)v20 + 21) = v118;
    *((void *)v20 + 22) = v117;
    *((void *)v20 + 23) = v116;
    *((void *)v20 + 24) = v115;
    *((void *)v20 + 25) = v114;
    *((void *)v20 + 26) = v113;
    *((void *)v20 + 27) = v112;
    *((void *)v20 + 28) = v111;
    *((void *)v20 + 29) = v110;
    *((void *)v20 + 30) = v109;
    *((void *)v20 + 31) = v108;
    *((void *)v20 + 32) = v107;
    *((void *)v20 + 33) = v106;
    *((void *)v20 + 34) = v105;
    *((void *)v20 + 35) = v104;
    *((void *)v20 + 36) = v103;
    *((void *)v20 + 37) = v102;
    *((void *)v20 + 38) = v101;
    *((void *)v20 + 39) = v100;
    *((void *)v20 + 40) = v99;
    *((void *)v20 + 41) = v98;
    *((void *)v20 + 42) = v97;
    *((void *)v20 + 43) = v96;
    *((void *)v20 + 44) = v95;
    *((void *)v20 + 45) = v94;
    *((void *)v20 + 46) = v93;
    *((void *)v20 + 47) = v92;
    *((void *)v20 + 48) = v91;
    *((void *)v20 + 49) = v90;
    *((void *)v20 + 50) = v89;
    *((void *)v20 + 51) = v88;
    *((void *)v20 + 52) = v87;
    *((void *)v20 + 53) = v86;
    *((void *)v20 + 54) = v85;
    *((void *)v20 + 55) = v84;
    *((void *)v20 + 56) = v83;
    *((void *)v20 + 57) = v82;
    *((void *)v20 + 58) = v81;
    *((void *)v20 + 59) = v80;
    *((void *)v20 + 60) = v79;
    *((void *)v20 + 61) = v78;
    *((void *)v20 + 62) = v77;
    *((void *)v20 + 63) = v76;
    *((void *)v20 + 64) = v75;
    *((void *)v20 + 65) = v74;
    *((void *)v20 + 66) = v73;
    *((void *)v20 + 67) = v72;
    *((void *)v20 + 68) = v71;
    *((void *)v20 + 69) = v70;
    *((void *)v20 + 70) = v69;
    *((void *)v20 + 71) = v68;
    *((void *)v20 + 72) = v67;
    *((void *)v20 + 73) = v66;
    *((void *)v20 + 74) = v65;
    *((void *)v20 + 75) = v64;
    *((void *)v20 + 76) = v63;
    *((void *)v20 + 77) = v62;
    *((void *)v20 + 78) = v61;
    *((void *)v20 + 79) = v32;
    *((void *)v20 + 80) = v33;
    *((void *)v20 + 81) = v34;
    *((void *)v20 + 82) = v35;
    *((void *)v20 + 83) = v36;
    *((void *)v20 + 84) = v37;
    *((void *)v20 + 85) = v38;
    *((void *)v20 + 86) = v39;
    *((void *)v20 + 87) = v40;
    *((void *)v20 + 88) = v41;
    *((void *)v20 + 89) = v42;
    *((void *)v20 + 90) = v43;
    *((void *)v20 + 91) = v44;
    *((void *)v20 + 92) = v45;
    *((void *)v20 + 93) = v46;
    *((void *)v20 + 94) = v47;
    *((void *)v20 + 95) = v48;
    *((void *)v20 + 96) = v49;
    *((void *)v20 + 97) = v50;
    *((void *)v20 + 98) = v51;
    *((void *)v20 + 99) = v52;
    *((void *)v20 + 100) = v53;
    *((void *)v20 + 101) = v54;
    *((void *)v20 + 102) = v55;
    *((void *)v20 + 103) = v56;
    *((_WORD *)v20 + 418) = v57;
    *((_DWORD *)v20 + 208) = v58;
    *((unsigned char *)v59 + a3[8]) = *((unsigned char *)v60 + a3[8]);
  }
  return v16;
}

uint64_t sub_1001E2D40(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for MeasurementCapture();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = type metadata accessor for URL();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    v7(v4, v6);
    v7(v4 + *(int *)(v5 + 20), v6);
  }
  uint64_t v8 = (uint64_t *)(a1 + *(int *)(a2 + 28));
  return sub_100027F20(*v8, v8[1], v8[2], v8[3], v8[4], v8[5], v8[6], v8[7], v8[8], v8[9], v8[10], v8[11], v8[12], v8[13], v8[14], v8[15], v8[16], v8[17], v8[18],
           v8[19]);
}

void *sub_1001E2FE4(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a3[6];
  uint64_t v8 = (char *)a1 + v6;
  uint64_t v9 = (char *)a2 + v6;
  uint64_t v10 = type metadata accessor for MeasurementCapture();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100012894((uint64_t *)&unk_1004CE670);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = type metadata accessor for URL();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    v15(v8, v9, v14);
    v15(&v8[*(int *)(v10 + 20)], &v9[*(int *)(v10 + 20)], v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v16 = a3[7];
  uint64_t v29 = a1;
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  __int16 v57 = a2;
  uint64_t v126 = *((void *)v18 + 10);
  uint64_t v127 = *((void *)v18 + 9);
  uint64_t v124 = *((void *)v18 + 12);
  uint64_t v125 = *((void *)v18 + 11);
  uint64_t v122 = *((void *)v18 + 14);
  uint64_t v123 = *((void *)v18 + 13);
  uint64_t v120 = *((void *)v18 + 16);
  uint64_t v121 = *((void *)v18 + 15);
  uint64_t v118 = *((void *)v18 + 18);
  uint64_t v119 = *((void *)v18 + 17);
  uint64_t v116 = *((void *)v18 + 20);
  uint64_t v117 = *((void *)v18 + 19);
  uint64_t v114 = *((void *)v18 + 22);
  uint64_t v115 = *((void *)v18 + 21);
  uint64_t v112 = *((void *)v18 + 24);
  uint64_t v113 = *((void *)v18 + 23);
  uint64_t v110 = *((void *)v18 + 26);
  uint64_t v111 = *((void *)v18 + 25);
  uint64_t v108 = *((void *)v18 + 28);
  uint64_t v109 = *((void *)v18 + 27);
  uint64_t v107 = *((void *)v18 + 29);
  uint64_t v106 = *((void *)v18 + 30);
  uint64_t v105 = *((void *)v18 + 31);
  uint64_t v104 = *((void *)v18 + 32);
  uint64_t v103 = *((void *)v18 + 33);
  uint64_t v102 = *((void *)v18 + 34);
  uint64_t v101 = *((void *)v18 + 35);
  uint64_t v100 = *((void *)v18 + 36);
  uint64_t v99 = *((void *)v18 + 37);
  uint64_t v98 = *((void *)v18 + 38);
  uint64_t v97 = *((void *)v18 + 39);
  uint64_t v96 = *((void *)v18 + 40);
  uint64_t v95 = *((void *)v18 + 41);
  uint64_t v94 = *((void *)v18 + 42);
  uint64_t v93 = *((void *)v18 + 43);
  uint64_t v92 = *((void *)v18 + 44);
  uint64_t v91 = *((void *)v18 + 45);
  uint64_t v90 = *((void *)v18 + 46);
  uint64_t v89 = *((void *)v18 + 47);
  uint64_t v88 = *((void *)v18 + 48);
  uint64_t v87 = *((void *)v18 + 49);
  uint64_t v86 = *((void *)v18 + 50);
  uint64_t v85 = *((void *)v18 + 51);
  uint64_t v84 = *((void *)v18 + 52);
  uint64_t v83 = *((void *)v18 + 53);
  uint64_t v82 = *((void *)v18 + 54);
  uint64_t v81 = *((void *)v18 + 55);
  uint64_t v80 = *((void *)v18 + 56);
  uint64_t v79 = *((void *)v18 + 57);
  uint64_t v78 = *((void *)v18 + 58);
  uint64_t v77 = *((void *)v18 + 59);
  uint64_t v76 = *((void *)v18 + 60);
  uint64_t v75 = *((void *)v18 + 61);
  uint64_t v74 = *((void *)v18 + 62);
  uint64_t v73 = *((void *)v18 + 63);
  uint64_t v72 = *((void *)v18 + 64);
  uint64_t v71 = *((void *)v18 + 65);
  uint64_t v70 = *((void *)v18 + 66);
  uint64_t v69 = *((void *)v18 + 67);
  uint64_t v68 = *((void *)v18 + 68);
  uint64_t v67 = *((void *)v18 + 69);
  uint64_t v66 = *((void *)v18 + 70);
  uint64_t v65 = *((void *)v18 + 71);
  uint64_t v64 = *((void *)v18 + 72);
  uint64_t v63 = *((void *)v18 + 73);
  uint64_t v62 = *((void *)v18 + 74);
  uint64_t v61 = *((void *)v18 + 75);
  uint64_t v60 = *((void *)v18 + 76);
  uint64_t v59 = *((void *)v18 + 77);
  uint64_t v58 = *((void *)v18 + 78);
  uint64_t v30 = *((void *)v18 + 79);
  uint64_t v31 = *((void *)v18 + 80);
  uint64_t v32 = *((void *)v18 + 81);
  uint64_t v33 = *((void *)v18 + 82);
  uint64_t v34 = *((void *)v18 + 83);
  uint64_t v35 = *((void *)v18 + 84);
  uint64_t v36 = *((void *)v18 + 85);
  uint64_t v37 = *((void *)v18 + 86);
  uint64_t v38 = *((void *)v18 + 87);
  uint64_t v39 = *((void *)v18 + 88);
  uint64_t v40 = *((void *)v18 + 89);
  uint64_t v41 = *((void *)v18 + 90);
  uint64_t v42 = *((void *)v18 + 91);
  uint64_t v43 = *((void *)v18 + 92);
  uint64_t v44 = *((void *)v18 + 93);
  uint64_t v45 = *((void *)v18 + 94);
  uint64_t v46 = *((void *)v18 + 95);
  uint64_t v47 = *((void *)v18 + 96);
  uint64_t v48 = *((void *)v18 + 97);
  uint64_t v49 = *((void *)v18 + 98);
  uint64_t v50 = *((void *)v18 + 99);
  uint64_t v51 = *((void *)v18 + 100);
  uint64_t v52 = *((void *)v18 + 101);
  uint64_t v53 = *((void *)v18 + 102);
  uint64_t v54 = *((void *)v18 + 103);
  __int16 v55 = *((_WORD *)v18 + 418);
  int v56 = *((_DWORD *)v18 + 208);
  uint64_t v19 = *((void *)v18 + 8);
  uint64_t v20 = *(void *)v18;
  uint64_t v21 = *((void *)v18 + 1);
  uint64_t v22 = *((void *)v18 + 2);
  uint64_t v23 = *((void *)v18 + 3);
  uint64_t v24 = *((void *)v18 + 4);
  uint64_t v25 = *((void *)v18 + 5);
  uint64_t v26 = *((void *)v18 + 6);
  uint64_t v27 = *((void *)v18 + 7);
  sub_100098C10(*(void *)v18, v21, v22, v23, v24, v25, v26, v27, v19, v127, v126, v125, v124, v123, v122, v121, v120, v119, v118,
    v117,
    v116,
    v115,
    v114,
    v113);
  *(void *)uint64_t v17 = v20;
  *((void *)v17 + 1) = v21;
  *((void *)v17 + 2) = v22;
  *((void *)v17 + 3) = v23;
  *((void *)v17 + 4) = v24;
  *((void *)v17 + 5) = v25;
  *((void *)v17 + 6) = v26;
  *((void *)v17 + 7) = v27;
  *((void *)v17 + 8) = v19;
  *((void *)v17 + 9) = v127;
  *((void *)v17 + 10) = v126;
  *((void *)v17 + 11) = v125;
  *((void *)v17 + 12) = v124;
  *((void *)v17 + 13) = v123;
  *((void *)v17 + 14) = v122;
  *((void *)v17 + 15) = v121;
  *((void *)v17 + 16) = v120;
  *((void *)v17 + 17) = v119;
  *((void *)v17 + 18) = v118;
  *((void *)v17 + 19) = v117;
  *((void *)v17 + 20) = v116;
  *((void *)v17 + 21) = v115;
  *((void *)v17 + 22) = v114;
  *((void *)v17 + 23) = v113;
  *((void *)v17 + 24) = v112;
  *((void *)v17 + 25) = v111;
  *((void *)v17 + 26) = v110;
  *((void *)v17 + 27) = v109;
  *((void *)v17 + 28) = v108;
  *((void *)v17 + 29) = v107;
  *((void *)v17 + 30) = v106;
  *((void *)v17 + 31) = v105;
  *((void *)v17 + 32) = v104;
  *((void *)v17 + 33) = v103;
  *((void *)v17 + 34) = v102;
  *((void *)v17 + 35) = v101;
  *((void *)v17 + 36) = v100;
  *((void *)v17 + 37) = v99;
  *((void *)v17 + 38) = v98;
  *((void *)v17 + 39) = v97;
  *((void *)v17 + 40) = v96;
  *((void *)v17 + 41) = v95;
  *((void *)v17 + 42) = v94;
  *((void *)v17 + 43) = v93;
  *((void *)v17 + 44) = v92;
  *((void *)v17 + 45) = v91;
  *((void *)v17 + 46) = v90;
  *((void *)v17 + 47) = v89;
  *((void *)v17 + 48) = v88;
  *((void *)v17 + 49) = v87;
  *((void *)v17 + 50) = v86;
  *((void *)v17 + 51) = v85;
  *((void *)v17 + 52) = v84;
  *((void *)v17 + 53) = v83;
  *((void *)v17 + 54) = v82;
  *((void *)v17 + 55) = v81;
  *((void *)v17 + 56) = v80;
  *((void *)v17 + 57) = v79;
  *((void *)v17 + 58) = v78;
  *((void *)v17 + 59) = v77;
  *((void *)v17 + 60) = v76;
  *((void *)v17 + 61) = v75;
  *((void *)v17 + 62) = v74;
  *((void *)v17 + 63) = v73;
  *((void *)v17 + 64) = v72;
  *((void *)v17 + 65) = v71;
  *((void *)v17 + 66) = v70;
  *((void *)v17 + 67) = v69;
  *((void *)v17 + 68) = v68;
  *((void *)v17 + 69) = v67;
  *((void *)v17 + 70) = v66;
  *((void *)v17 + 71) = v65;
  *((void *)v17 + 72) = v64;
  *((void *)v17 + 73) = v63;
  *((void *)v17 + 74) = v62;
  *((void *)v17 + 75) = v61;
  *((void *)v17 + 76) = v60;
  *((void *)v17 + 77) = v59;
  *((void *)v17 + 78) = v58;
  *((void *)v17 + 79) = v30;
  *((void *)v17 + 80) = v31;
  *((void *)v17 + 81) = v32;
  *((void *)v17 + 82) = v33;
  *((void *)v17 + 83) = v34;
  *((void *)v17 + 84) = v35;
  *((void *)v17 + 85) = v36;
  *((void *)v17 + 86) = v37;
  *((void *)v17 + 87) = v38;
  *((void *)v17 + 88) = v39;
  *((void *)v17 + 89) = v40;
  *((void *)v17 + 90) = v41;
  *((void *)v17 + 91) = v42;
  *((void *)v17 + 92) = v43;
  *((void *)v17 + 93) = v44;
  *((void *)v17 + 94) = v45;
  *((void *)v17 + 95) = v46;
  *((void *)v17 + 96) = v47;
  *((void *)v17 + 97) = v48;
  *((void *)v17 + 98) = v49;
  *((void *)v17 + 99) = v50;
  *((void *)v17 + 100) = v51;
  *((void *)v17 + 101) = v52;
  *((void *)v17 + 102) = v53;
  *((void *)v17 + 103) = v54;
  *((_WORD *)v17 + 418) = v55;
  *((_DWORD *)v17 + 208) = v56;
  uint64_t result = v29;
  *((unsigned char *)v29 + a3[8]) = *((unsigned char *)v57 + a3[8]);
  return result;
}

void *sub_1001E39F8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1;
  uint64_t v8 = (char *)a1 + v6;
  uint64_t v9 = (char *)a2 + v6;
  uint64_t v10 = type metadata accessor for MeasurementCapture();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      uint64_t v39 = type metadata accessor for URL();
      uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 24);
      v40(v8, v9, v39);
      v40(&v8[*(int *)(v10 + 20)], &v9[*(int *)(v10 + 20)], v39);
      goto LABEL_7;
    }
    sub_1001A35E4((uint64_t)v8);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v17 = sub_100012894((uint64_t *)&unk_1004CE670);
    memcpy(v8, v9, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  v16(v8, v9, v15);
  v16(&v8[*(int *)(v10 + 20)], &v9[*(int *)(v10 + 20)], v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 28);
  uint64_t v19 = (char *)v7 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v63 = a3;
  uint64_t v62 = a2;
  uint64_t v137 = *((void *)v20 + 8);
  uint64_t v135 = *((void *)v20 + 9);
  uint64_t v133 = *((void *)v20 + 10);
  uint64_t v131 = *((void *)v20 + 11);
  uint64_t v130 = *((void *)v20 + 12);
  uint64_t v129 = *((void *)v20 + 13);
  uint64_t v128 = *((void *)v20 + 14);
  uint64_t v127 = *((void *)v20 + 15);
  uint64_t v126 = *((void *)v20 + 16);
  uint64_t v125 = *((void *)v20 + 17);
  uint64_t v124 = *((void *)v20 + 18);
  uint64_t v123 = *((void *)v20 + 19);
  uint64_t v122 = *((void *)v20 + 20);
  uint64_t v121 = *((void *)v20 + 21);
  uint64_t v120 = *((void *)v20 + 22);
  uint64_t v119 = *((void *)v20 + 23);
  uint64_t v118 = *((void *)v20 + 24);
  uint64_t v117 = *((void *)v20 + 25);
  uint64_t v116 = *((void *)v20 + 26);
  uint64_t v115 = *((void *)v20 + 27);
  uint64_t v114 = *((void *)v20 + 28);
  uint64_t v113 = *((void *)v20 + 29);
  uint64_t v112 = *((void *)v20 + 30);
  uint64_t v111 = *((void *)v20 + 31);
  uint64_t v110 = *((void *)v20 + 32);
  uint64_t v109 = *((void *)v20 + 33);
  uint64_t v108 = *((void *)v20 + 34);
  uint64_t v107 = *((void *)v20 + 35);
  uint64_t v106 = *((void *)v20 + 36);
  uint64_t v105 = *((void *)v20 + 37);
  uint64_t v104 = *((void *)v20 + 38);
  uint64_t v103 = *((void *)v20 + 39);
  uint64_t v102 = *((void *)v20 + 40);
  uint64_t v101 = *((void *)v20 + 41);
  uint64_t v100 = *((void *)v20 + 42);
  uint64_t v99 = *((void *)v20 + 43);
  uint64_t v98 = *((void *)v20 + 44);
  uint64_t v97 = *((void *)v20 + 45);
  uint64_t v96 = *((void *)v20 + 46);
  uint64_t v95 = *((void *)v20 + 47);
  uint64_t v94 = *((void *)v20 + 48);
  uint64_t v93 = *((void *)v20 + 49);
  uint64_t v92 = *((void *)v20 + 50);
  uint64_t v91 = *((void *)v20 + 51);
  uint64_t v90 = *((void *)v20 + 52);
  uint64_t v89 = *((void *)v20 + 53);
  uint64_t v88 = *((void *)v20 + 54);
  uint64_t v87 = *((void *)v20 + 55);
  uint64_t v86 = *((void *)v20 + 56);
  uint64_t v85 = *((void *)v20 + 57);
  uint64_t v84 = *((void *)v20 + 58);
  uint64_t v83 = *((void *)v20 + 59);
  uint64_t v82 = *((void *)v20 + 60);
  uint64_t v81 = *((void *)v20 + 61);
  uint64_t v80 = *((void *)v20 + 62);
  uint64_t v79 = *((void *)v20 + 63);
  uint64_t v78 = *((void *)v20 + 64);
  uint64_t v77 = *((void *)v20 + 65);
  uint64_t v76 = *((void *)v20 + 66);
  uint64_t v75 = *((void *)v20 + 67);
  uint64_t v74 = *((void *)v20 + 68);
  uint64_t v73 = *((void *)v20 + 69);
  uint64_t v72 = *((void *)v20 + 70);
  uint64_t v71 = *((void *)v20 + 71);
  uint64_t v70 = *((void *)v20 + 72);
  uint64_t v69 = *((void *)v20 + 73);
  uint64_t v68 = *((void *)v20 + 74);
  uint64_t v67 = *((void *)v20 + 75);
  uint64_t v66 = *((void *)v20 + 76);
  uint64_t v65 = *((void *)v20 + 77);
  uint64_t v64 = *((void *)v20 + 78);
  uint64_t v43 = *((void *)v20 + 79);
  long long v44 = *((_OWORD *)v20 + 40);
  long long v45 = *((_OWORD *)v20 + 41);
  long long v46 = *((_OWORD *)v20 + 42);
  long long v47 = *((_OWORD *)v20 + 43);
  long long v48 = *((_OWORD *)v20 + 44);
  long long v49 = *((_OWORD *)v20 + 45);
  long long v50 = *((_OWORD *)v20 + 46);
  long long v51 = *((_OWORD *)v20 + 47);
  uint64_t v52 = *((void *)v20 + 96);
  uint64_t v53 = *((void *)v20 + 97);
  uint64_t v54 = *((void *)v20 + 98);
  uint64_t v55 = *((void *)v20 + 99);
  uint64_t v56 = *((void *)v20 + 100);
  uint64_t v57 = *((void *)v20 + 101);
  uint64_t v58 = *((void *)v20 + 102);
  uint64_t v59 = *((void *)v20 + 103);
  __int16 v60 = *((_WORD *)v20 + 418);
  int v61 = *((_DWORD *)v20 + 208);
  uint64_t v21 = v7;
  uint64_t v22 = *(void *)v20;
  uint64_t v23 = *((void *)v20 + 1);
  uint64_t v24 = *((void *)v20 + 2);
  uint64_t v25 = *((void *)v20 + 3);
  uint64_t v26 = *((void *)v20 + 4);
  uint64_t v27 = *((void *)v20 + 5);
  uint64_t v28 = *((void *)v20 + 6);
  uint64_t v29 = *((void *)v20 + 7);
  sub_100098C10(*(void *)v20, v23, v24, v25, v26, v27, v28, v29, v137, v135, v133, v131, v130, v129, v128, v127, v126, v125, v124,
    v123,
    v122,
    v121,
    v120,
    v119);
  uint64_t v30 = *(void *)v19;
  uint64_t v31 = *((void *)v19 + 1);
  *(void *)uint64_t v19 = v22;
  *((void *)v19 + 1) = v23;
  uint64_t v32 = *((void *)v19 + 2);
  uint64_t v33 = *((void *)v19 + 3);
  *((void *)v19 + 2) = v24;
  *((void *)v19 + 3) = v25;
  uint64_t v34 = *((void *)v19 + 4);
  uint64_t v35 = *((void *)v19 + 5);
  *((void *)v19 + 4) = v26;
  *((void *)v19 + 5) = v27;
  uint64_t v36 = *((void *)v19 + 6);
  uint64_t v37 = *((void *)v19 + 7);
  *((void *)v19 + 6) = v28;
  *((void *)v19 + 7) = v29;
  long long v41 = *((_OWORD *)v19 + 5);
  long long v42 = *((_OWORD *)v19 + 4);
  *((void *)v19 + 8) = v137;
  *((void *)v19 + 9) = v135;
  *((void *)v19 + 10) = v133;
  *((void *)v19 + 11) = v131;
  long long v136 = *((_OWORD *)v19 + 7);
  long long v138 = *((_OWORD *)v19 + 6);
  *((void *)v19 + 12) = v130;
  *((void *)v19 + 13) = v129;
  *((void *)v19 + 14) = v128;
  *((void *)v19 + 15) = v127;
  long long v132 = *((_OWORD *)v19 + 9);
  long long v134 = *((_OWORD *)v19 + 8);
  *((void *)v19 + 16) = v126;
  *((void *)v19 + 17) = v125;
  *((void *)v19 + 18) = v124;
  *((void *)v19 + 19) = v123;
  *((void *)v19 + 20) = v122;
  *((void *)v19 + 21) = v121;
  *((void *)v19 + 22) = v120;
  *((void *)v19 + 23) = v119;
  *((void *)v19 + 24) = v118;
  *((void *)v19 + 25) = v117;
  *((void *)v19 + 26) = v116;
  *((void *)v19 + 27) = v115;
  *((void *)v19 + 28) = v114;
  *((void *)v19 + 29) = v113;
  *((void *)v19 + 30) = v112;
  *((void *)v19 + 31) = v111;
  *((void *)v19 + 32) = v110;
  *((void *)v19 + 33) = v109;
  *((void *)v19 + 34) = v108;
  *((void *)v19 + 35) = v107;
  *((void *)v19 + 36) = v106;
  *((void *)v19 + 37) = v105;
  *((void *)v19 + 38) = v104;
  *((void *)v19 + 39) = v103;
  *((void *)v19 + 40) = v102;
  *((void *)v19 + 41) = v101;
  *((void *)v19 + 42) = v100;
  *((void *)v19 + 43) = v99;
  *((void *)v19 + 44) = v98;
  *((void *)v19 + 45) = v97;
  *((void *)v19 + 46) = v96;
  *((void *)v19 + 47) = v95;
  *((void *)v19 + 48) = v94;
  *((void *)v19 + 49) = v93;
  *((void *)v19 + 50) = v92;
  *((void *)v19 + 51) = v91;
  *((void *)v19 + 52) = v90;
  *((void *)v19 + 53) = v89;
  *((void *)v19 + 54) = v88;
  *((void *)v19 + 55) = v87;
  *((void *)v19 + 56) = v86;
  *((void *)v19 + 57) = v85;
  *((void *)v19 + 58) = v84;
  *((void *)v19 + 59) = v83;
  *((void *)v19 + 60) = v82;
  *((void *)v19 + 61) = v81;
  *((void *)v19 + 62) = v80;
  *((void *)v19 + 63) = v79;
  *((void *)v19 + 64) = v78;
  *((void *)v19 + 65) = v77;
  *((void *)v19 + 66) = v76;
  *((void *)v19 + 67) = v75;
  *((void *)v19 + 68) = v74;
  *((void *)v19 + 69) = v73;
  *((void *)v19 + 70) = v72;
  *((void *)v19 + 71) = v71;
  *((void *)v19 + 72) = v70;
  *((void *)v19 + 73) = v69;
  *((void *)v19 + 74) = v68;
  *((void *)v19 + 75) = v67;
  *((void *)v19 + 76) = v66;
  *((void *)v19 + 77) = v65;
  *((void *)v19 + 78) = v64;
  *((void *)v19 + 79) = v43;
  *((_OWORD *)v19 + 40) = v44;
  *((_OWORD *)v19 + 41) = v45;
  *((_OWORD *)v19 + 42) = v46;
  *((_OWORD *)v19 + 43) = v47;
  *((_OWORD *)v19 + 44) = v48;
  *((_OWORD *)v19 + 45) = v49;
  *((_OWORD *)v19 + 46) = v50;
  *((_OWORD *)v19 + 47) = v51;
  *((void *)v19 + 96) = v52;
  *((void *)v19 + 97) = v53;
  *((void *)v19 + 98) = v54;
  *((void *)v19 + 99) = v55;
  *((void *)v19 + 100) = v56;
  *((void *)v19 + 101) = v57;
  *((void *)v19 + 102) = v58;
  *((void *)v19 + 103) = v59;
  *((_WORD *)v19 + 418) = v60;
  *((_DWORD *)v19 + 208) = v61;
  sub_100027F20(v30, v31, v32, v33, v34, v35, v36, v37, v42, *((uint64_t *)&v42 + 1), v41, *((uint64_t *)&v41 + 1), v138, *((uint64_t *)&v138 + 1), v136, *((uint64_t *)&v136 + 1), v134, *((uint64_t *)&v134 + 1), v132,
    *((uint64_t *)&v132 + 1));
  *((unsigned char *)v21 + *(int *)(v63 + 32)) = *((unsigned char *)v62 + *(int *)(v63 + 32));
  return v21;
}

_OWORD *sub_1001E4688(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for MeasurementCapture();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100012894((uint64_t *)&unk_1004CE670);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = type metadata accessor for URL();
    int v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
    v14(v8, v9, v13);
    v14(&v8[*(int *)(v10 + 20)], &v9[*(int *)(v10 + 20)], v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  memcpy((char *)a1 + a3[7], (char *)a2 + a3[7], 0x346uLL);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_1001E4810(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for MeasurementCapture();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      uint64_t v74 = type metadata accessor for URL();
      uint64_t v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 40);
      v75(v9, v10, v74);
      v75(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v74);
      goto LABEL_7;
    }
    sub_1001A35E4((uint64_t)v9);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v18 = sub_100012894((uint64_t *)&unk_1004CE670);
    memcpy(v9, v10, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
  v17(v9, v10, v16);
  v17(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)v20;
  uint64_t v23 = *((void *)v20 + 1);
  uint64_t v24 = *((void *)v20 + 2);
  uint64_t v25 = *((void *)v20 + 3);
  uint64_t v26 = *((void *)v20 + 4);
  uint64_t v27 = *((void *)v20 + 5);
  uint64_t v28 = *((void *)v20 + 6);
  uint64_t v29 = *((void *)v20 + 7);
  long long v80 = *((_OWORD *)v20 + 5);
  long long v81 = *((_OWORD *)v20 + 4);
  long long v78 = *((_OWORD *)v20 + 7);
  long long v79 = *((_OWORD *)v20 + 6);
  long long v76 = *((_OWORD *)v20 + 9);
  long long v77 = *((_OWORD *)v20 + 8);
  long long v30 = *((_OWORD *)v21 + 1);
  long long v31 = *((_OWORD *)v21 + 2);
  long long v32 = *((_OWORD *)v21 + 3);
  long long v33 = *((_OWORD *)v21 + 4);
  long long v34 = *((_OWORD *)v21 + 5);
  long long v35 = *((_OWORD *)v21 + 6);
  long long v36 = *((_OWORD *)v21 + 7);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v30;
  long long v37 = *((_OWORD *)v21 + 8);
  long long v38 = *((_OWORD *)v21 + 9);
  *((_OWORD *)v20 + 2) = v31;
  *((_OWORD *)v20 + 3) = v32;
  long long v39 = *((_OWORD *)v21 + 10);
  long long v40 = *((_OWORD *)v21 + 11);
  *((_OWORD *)v20 + 4) = v33;
  *((_OWORD *)v20 + 5) = v34;
  long long v41 = *((_OWORD *)v21 + 12);
  long long v42 = *((_OWORD *)v21 + 13);
  *((_OWORD *)v20 + 6) = v35;
  *((_OWORD *)v20 + 7) = v36;
  long long v43 = *((_OWORD *)v21 + 14);
  long long v44 = *((_OWORD *)v21 + 15);
  *((_OWORD *)v20 + 8) = v37;
  *((_OWORD *)v20 + 9) = v38;
  long long v45 = *((_OWORD *)v21 + 16);
  long long v46 = *((_OWORD *)v21 + 17);
  *((_OWORD *)v20 + 10) = v39;
  *((_OWORD *)v20 + 11) = v40;
  long long v47 = *((_OWORD *)v21 + 18);
  long long v48 = *((_OWORD *)v21 + 19);
  *((_OWORD *)v20 + 12) = v41;
  *((_OWORD *)v20 + 13) = v42;
  long long v49 = *((_OWORD *)v21 + 20);
  long long v50 = *((_OWORD *)v21 + 21);
  *((_OWORD *)v20 + 14) = v43;
  *((_OWORD *)v20 + 15) = v44;
  long long v51 = *((_OWORD *)v21 + 22);
  long long v52 = *((_OWORD *)v21 + 23);
  *((_OWORD *)v20 + 16) = v45;
  *((_OWORD *)v20 + 17) = v46;
  long long v53 = *((_OWORD *)v21 + 24);
  long long v54 = *((_OWORD *)v21 + 25);
  *((_OWORD *)v20 + 18) = v47;
  *((_OWORD *)v20 + 19) = v48;
  long long v55 = *((_OWORD *)v21 + 26);
  long long v56 = *((_OWORD *)v21 + 27);
  *((_OWORD *)v20 + 20) = v49;
  *((_OWORD *)v20 + 21) = v50;
  long long v57 = *((_OWORD *)v21 + 28);
  long long v58 = *((_OWORD *)v21 + 29);
  *((_OWORD *)v20 + 22) = v51;
  *((_OWORD *)v20 + 23) = v52;
  long long v59 = *((_OWORD *)v21 + 30);
  long long v60 = *((_OWORD *)v21 + 31);
  *((_OWORD *)v20 + 24) = v53;
  *((_OWORD *)v20 + 25) = v54;
  long long v61 = *((_OWORD *)v21 + 32);
  long long v62 = *((_OWORD *)v21 + 33);
  *((_OWORD *)v20 + 26) = v55;
  *((_OWORD *)v20 + 27) = v56;
  *((_OWORD *)v20 + 28) = v57;
  *((_OWORD *)v20 + 29) = v58;
  *((_OWORD *)v20 + 30) = v59;
  *((_OWORD *)v20 + 31) = v60;
  *((_OWORD *)v20 + 32) = v61;
  *((_OWORD *)v20 + 33) = v62;
  long long v63 = *((_OWORD *)v21 + 35);
  *((_OWORD *)v20 + 34) = *((_OWORD *)v21 + 34);
  *((_OWORD *)v20 + 35) = v63;
  long long v64 = *((_OWORD *)v21 + 37);
  *((_OWORD *)v20 + 36) = *((_OWORD *)v21 + 36);
  *((_OWORD *)v20 + 37) = v64;
  long long v65 = *((_OWORD *)v21 + 39);
  *((_OWORD *)v20 + 38) = *((_OWORD *)v21 + 38);
  *((_OWORD *)v20 + 39) = v65;
  long long v66 = *((_OWORD *)v21 + 41);
  *((_OWORD *)v20 + 40) = *((_OWORD *)v21 + 40);
  *((_OWORD *)v20 + 41) = v66;
  long long v67 = *((_OWORD *)v21 + 43);
  *((_OWORD *)v20 + 42) = *((_OWORD *)v21 + 42);
  *((_OWORD *)v20 + 43) = v67;
  long long v68 = *((_OWORD *)v21 + 45);
  *((_OWORD *)v20 + 44) = *((_OWORD *)v21 + 44);
  *((_OWORD *)v20 + 45) = v68;
  long long v69 = *((_OWORD *)v21 + 47);
  *((_OWORD *)v20 + 46) = *((_OWORD *)v21 + 46);
  *((_OWORD *)v20 + 47) = v69;
  long long v70 = *((_OWORD *)v21 + 49);
  *((_OWORD *)v20 + 48) = *((_OWORD *)v21 + 48);
  *((_OWORD *)v20 + 49) = v70;
  long long v71 = *((_OWORD *)v21 + 51);
  *((_OWORD *)v20 + 50) = *((_OWORD *)v21 + 50);
  *((_OWORD *)v20 + 51) = v71;
  int v72 = *((_DWORD *)v21 + 208);
  *((_WORD *)v20 + 418) = *((_WORD *)v21 + 418);
  *((_DWORD *)v20 + 208) = v72;
  sub_100027F20(v22, v23, v24, v25, v26, v27, v28, v29, v81, *((uint64_t *)&v81 + 1), v80, *((uint64_t *)&v80 + 1), v79, *((uint64_t *)&v79 + 1), v78, *((uint64_t *)&v78 + 1), v77, *((uint64_t *)&v77 + 1), v76,
    *((uint64_t *)&v76 + 1));
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_1001E4CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E4CEC);
}

uint64_t sub_1001E4CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100012894((uint64_t *)&unk_1004CE670);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1001E4DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E4DB4);
}

uint64_t sub_1001E4DB4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100012894((uint64_t *)&unk_1004CE670);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MeasurementHistoryItem()
{
  uint64_t result = qword_1004D1D10;
  if (!qword_1004D1D10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001E4EAC()
{
  sub_1001E4F58();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1001E4F58()
{
  if (!qword_1004D1D20)
  {
    type metadata accessor for MeasurementCapture();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1004D1D20);
    }
  }
}

uint64_t sub_1001E4FB0(uint64_t a1, uint64_t a2)
{
  sub_100026A04(a1, (uint64_t)v4);
  sub_100026A04(a2, (uint64_t)v5);
  return sub_1001E5C68((uint64_t)v4) & 1;
}

uint64_t sub_1001E5000(uint64_t a1, long long *a2)
{
  long long v2 = *(_OWORD *)(a1 + 80);
  v12[4] = *(_OWORD *)(a1 + 64);
  v12[5] = v2;
  v13[0] = *(_OWORD *)(a1 + 96);
  *(void *)((char *)v13 + 14) = *(void *)(a1 + 110);
  long long v3 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v4;
  long long v5 = *a2;
  long long v6 = a2[1];
  long long v7 = a2[3];
  v14[2] = a2[2];
  v14[3] = v7;
  v14[0] = v5;
  v14[1] = v6;
  long long v8 = a2[4];
  long long v9 = a2[5];
  long long v10 = a2[6];
  *(void *)&v15[14] = *(void *)((char *)a2 + 110);
  v14[5] = v9;
  *(_OWORD *)int v15 = v10;
  v14[4] = v8;
  return sub_1001E518C((uint64_t)v12, (uint64_t)v14) & 1;
}

BOOL sub_1001E5084(void *__src, const void *a2)
{
  memcpy(v4, __src, 0x10DuLL);
  memcpy(__dst, a2, 0x10DuLL);
  return sub_1001E5328(v4, __dst);
}

uint64_t sub_1001E50DC(void *__src, const void *a2)
{
  memcpy(v4, __src, 0x1DEuLL);
  memcpy(__dst, a2, 0x1DEuLL);
  return sub_1001E62E4(v4, __dst) & 1;
}

uint64_t sub_1001E5134(void *__src, const void *a2)
{
  memcpy(v4, __src, 0x346uLL);
  memcpy(__dst, a2, 0x346uLL);
  return sub_1001E5794(v4, __dst) & 1;
}

uint64_t sub_1001E518C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  float v6 = *(float *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 36);
  int v8 = *(unsigned __int8 *)(a1 + 37);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  float v11 = *(float *)(a2 + 32);
  char v12 = *(unsigned char *)(a2 + 36);
  int v13 = *(unsigned __int8 *)(a2 + 37);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(), v15 = 0, (v14 & 1) != 0))
  {
    if (v5)
    {
      if (!v9) {
        goto LABEL_23;
      }
      if (v4 != v10 || v5 != v9)
      {
        char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
        char v15 = 0;
        if ((v16 & 1) == 0) {
          return v15 & 1;
        }
      }
    }
    else if (v9)
    {
      goto LABEL_23;
    }
    if (v7)
    {
      if ((v12 & 1) == 0) {
        goto LABEL_23;
      }
    }
    else
    {
      char v15 = 0;
      if ((v12 & 1) != 0 || v6 != v11) {
        return v15 & 1;
      }
    }
    if (v8 == 4)
    {
      if (v13 != 4) {
        goto LABEL_23;
      }
    }
    else
    {
      char v15 = 0;
      if (v13 == 4 || v8 != v13) {
        return v15 & 1;
      }
    }
    long long v17 = *(_OWORD *)(a1 + 56);
    long long v28 = *(_OWORD *)(a1 + 40);
    v29[0] = v17;
    *(void *)((char *)v29 + 14) = *(void *)(a1 + 70);
    long long v18 = *(_OWORD *)(a2 + 56);
    long long v26 = *(_OWORD *)(a2 + 40);
    v27[0] = v18;
    *(void *)((char *)v27 + 14) = *(void *)(a2 + 70);
    if (sub_10012C858((uint64_t)&v28, (uint64_t)&v26))
    {
      long long v19 = *(_OWORD *)(a1 + 96);
      long long v24 = *(_OWORD *)(a1 + 80);
      v25[0] = v19;
      *(void *)((char *)v25 + 14) = *(void *)(a1 + 110);
      long long v20 = *(_OWORD *)(a2 + 96);
      long long v22 = *(_OWORD *)(a2 + 80);
      v23[0] = v20;
      *(void *)((char *)v23 + 14) = *(void *)(a2 + 110);
      char v15 = sub_10012C858((uint64_t)&v24, (uint64_t)&v22);
      return v15 & 1;
    }
LABEL_23:
    char v15 = 0;
  }
  return v15 & 1;
}

BOOL sub_1001E5328(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3];
  float v8 = *((float *)a1 + 8);
  char v9 = *((unsigned char *)a1 + 36);
  int v10 = *((unsigned __int8 *)a1 + 37);
  long long v11 = *(_OWORD *)((char *)a1 + 54);
  *(_OWORD *)uint64_t v98 = *(_OWORD *)((char *)a1 + 38);
  *(_OWORD *)&v98[16] = v11;
  *(void *)&v98[32] = *(uint64_t *)((char *)a1 + 70);
  long long v12 = *(_OWORD *)((char *)a1 + 78);
  long long v13 = *(_OWORD *)((char *)a1 + 94);
  *(void *)&v97[32] = *(uint64_t *)((char *)a1 + 110);
  *(_OWORD *)uint64_t v97 = v12;
  *(_OWORD *)&v97[16] = v13;
  uint64_t v14 = *a2;
  uint64_t v15 = a2[1];
  uint64_t v17 = a2[2];
  uint64_t v16 = a2[3];
  float v18 = *((float *)a2 + 8);
  char v19 = *((unsigned char *)a2 + 36);
  int v20 = *((unsigned __int8 *)a2 + 37);
  long long v21 = *(_OWORD *)((char *)a2 + 38);
  long long v22 = *(_OWORD *)((char *)a2 + 54);
  *(void *)&v92[32] = *(uint64_t *)((char *)a2 + 70);
  *(_OWORD *)uint64_t v92 = v21;
  *(_OWORD *)&v92[16] = v22;
  long long v23 = *(_OWORD *)((char *)a2 + 78);
  long long v24 = *(_OWORD *)((char *)a2 + 94);
  *(void *)&v91[32] = *(uint64_t *)((char *)a2 + 110);
  *(_OWORD *)uint64_t v91 = v23;
  *(_OWORD *)&v91[16] = v24;
  if (v4 == v14 && v5 == v15 || (v25 = _stringCompareWithSmolCheck(_:_:expecting:)(), BOOL result = 0, (v25 & 1) != 0))
  {
    if (v7)
    {
      if (!v16) {
        return 0;
      }
      if (v6 != v17 || v7 != v16)
      {
        char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
        BOOL result = 0;
        if ((v27 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v16)
    {
      return 0;
    }
    if (v9)
    {
      if ((v19 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      if ((v19 & 1) != 0 || v8 != v18) {
        return result;
      }
    }
    if (v10 == 4)
    {
      if (v20 != 4) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      if (v20 == 4 || v10 != v20) {
        return result;
      }
    }
    long long v101 = *(_OWORD *)&v98[2];
    *(_OWORD *)uint64_t v102 = *(_OWORD *)&v98[18];
    *(void *)&v102[14] = *(void *)&v98[32];
    long long v95 = *(_OWORD *)&v92[2];
    v96[0] = *(_OWORD *)&v92[18];
    *(void *)((char *)v96 + 14) = *(void *)&v92[32];
    if ((sub_10012C858((uint64_t)&v101, (uint64_t)&v95) & 1) == 0) {
      return 0;
    }
    long long v99 = *(_OWORD *)&v97[2];
    v100[0] = *(_OWORD *)&v97[18];
    *(void *)((char *)v100 + 14) = *(void *)&v97[32];
    long long v93 = *(_OWORD *)&v91[2];
    v94[0] = *(_OWORD *)&v91[18];
    *(void *)((char *)v94 + 14) = *(void *)&v91[32];
    if ((sub_10012C858((uint64_t)&v99, (uint64_t)&v93) & 1) == 0) {
      return 0;
    }
    BOOL result = 0;
    if (*((float *)a1 + 32) != *((float *)a2 + 32)
      || *((float *)a1 + 33) != *((float *)a2 + 33)
      || *((float *)a1 + 34) != *((float *)a2 + 34))
    {
      return result;
    }
    uint64_t v28 = a1[18];
    uint64_t v29 = a1[19];
    uint64_t v30 = a1[20];
    uint64_t v31 = a1[21];
    uint64_t v32 = a1[22];
    uint64_t v33 = a1[23];
    uint64_t v34 = a1[24];
    uint64_t v35 = a1[25];
    uint64_t v37 = a1[26];
    uint64_t v36 = a1[27];
    uint64_t v38 = a1[28];
    uint64_t v39 = a1[29];
    uint64_t v40 = a1[30];
    uint64_t v41 = a1[31];
    unint64_t v42 = *((unsigned int *)a1 + 64) | ((unint64_t)*((unsigned __int16 *)a1 + 130) << 32);
    uint64_t v44 = a2[18];
    uint64_t v43 = a2[19];
    uint64_t v45 = a2[20];
    uint64_t v46 = a2[21];
    uint64_t v47 = a2[22];
    uint64_t v58 = a2[23];
    uint64_t v48 = a2[25];
    uint64_t v54 = a2[24];
    uint64_t v49 = a2[27];
    uint64_t v55 = a2[26];
    uint64_t v57 = a2[28];
    uint64_t v56 = a2[29];
    unint64_t v50 = *((unsigned int *)a2 + 64) | ((unint64_t)*((unsigned __int16 *)a2 + 130) << 32);
    uint64_t v52 = a2[30];
    uint64_t v51 = a2[31];
    if (v29)
    {
      if (v43)
      {
        v103[0] = a1[18];
        v103[1] = v29;
        v103[2] = v30;
        v103[3] = v31;
        char v105 = BYTE4(v32) & 1;
        int v104 = v32;
        char v106 = BYTE5(v32);
        uint64_t v107 = v33;
        uint64_t v108 = v34;
        uint64_t v109 = v35;
        uint64_t v110 = v37;
        char v112 = BYTE4(v36) & 1;
        int v111 = v36;
        char v113 = BYTE5(v36);
        uint64_t v114 = v38;
        uint64_t v115 = v39;
        uint64_t v116 = v40;
        uint64_t v117 = v41;
        char v119 = BYTE4(v42) & 1;
        int v118 = v42;
        char v120 = BYTE5(v42);
        uint64_t v59 = v44;
        uint64_t v60 = v43;
        uint64_t v61 = v45;
        uint64_t v62 = v46;
        BYTE4(v63) = BYTE4(v47) & 1;
        LODWORD(v63) = v47;
        BYTE5(v63) = BYTE5(v47);
        uint64_t v64 = v58;
        uint64_t v65 = v54;
        uint64_t v66 = v48;
        uint64_t v67 = v55;
        BYTE4(v68) = BYTE4(v49) & 1;
        LODWORD(v68) = v49;
        BYTE5(v68) = BYTE5(v49);
        uint64_t v69 = v57;
        uint64_t v70 = v56;
        uint64_t v71 = v52;
        uint64_t v72 = v51;
        LOBYTE(v74) = BYTE4(v50) & 1;
        int v73 = v50;
        HIBYTE(v74) = BYTE5(v50);
        if ((sub_1001E518C((uint64_t)v103, (uint64_t)&v59) & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
      }
    }
    else if (!v43)
    {
LABEL_34:
      char v53 = *((unsigned char *)a2 + 268);
      if ((*((unsigned char *)a1 + 268) & 1) == 0)
      {
        if (*((float *)a1 + 66) != *((float *)a2 + 66)) {
          char v53 = 1;
        }
        return (v53 & 1) == 0;
      }
      return (*((unsigned char *)a2 + 268) & 1) != 0;
    }
    uint64_t v59 = a1[18];
    uint64_t v60 = v29;
    uint64_t v61 = v30;
    uint64_t v62 = v31;
    uint64_t v63 = v32;
    uint64_t v64 = v33;
    uint64_t v65 = v34;
    uint64_t v66 = v35;
    uint64_t v67 = v37;
    uint64_t v68 = v36;
    uint64_t v69 = v38;
    uint64_t v70 = v39;
    uint64_t v71 = v40;
    uint64_t v72 = v41;
    int v73 = v42;
    __int16 v74 = WORD2(v42);
    uint64_t v75 = v44;
    uint64_t v76 = v43;
    uint64_t v77 = v45;
    uint64_t v78 = v46;
    uint64_t v79 = v47;
    uint64_t v80 = v58;
    uint64_t v81 = v54;
    uint64_t v82 = v48;
    uint64_t v83 = v55;
    uint64_t v84 = v49;
    uint64_t v85 = v57;
    uint64_t v86 = v56;
    uint64_t v87 = v52;
    uint64_t v88 = v51;
    int v89 = v50;
    __int16 v90 = WORD2(v50);
    sub_1000990D0(v28, v29);
    sub_1000990D0(v44, v43);
    sub_1001E6AF4(&v59);
    return 0;
  }
  return result;
}

uint64_t sub_1001E5794(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3];
  float v8 = *((float *)a1 + 8);
  char v9 = *((unsigned char *)a1 + 36);
  int v10 = *((unsigned __int8 *)a1 + 37);
  long long v11 = *(_OWORD *)((char *)a1 + 38);
  long long v12 = *(_OWORD *)((char *)a1 + 54);
  *(void *)&v115[32] = *(uint64_t *)((char *)a1 + 70);
  *(_OWORD *)uint64_t v115 = v11;
  *(_OWORD *)&v115[16] = v12;
  long long v13 = *(_OWORD *)((char *)a1 + 78);
  long long v14 = *(_OWORD *)((char *)a1 + 94);
  *(void *)&v114[32] = *(uint64_t *)((char *)a1 + 110);
  *(_OWORD *)&v114[16] = v14;
  *(_OWORD *)uint64_t v114 = v13;
  uint64_t v15 = *a2;
  uint64_t v16 = a2[1];
  uint64_t v18 = a2[2];
  uint64_t v17 = a2[3];
  float v19 = *((float *)a2 + 8);
  char v20 = *((unsigned char *)a2 + 36);
  int v21 = *((unsigned __int8 *)a2 + 37);
  long long v22 = *(_OWORD *)((char *)a2 + 38);
  long long v23 = *(_OWORD *)((char *)a2 + 54);
  *(void *)&v109[32] = *(uint64_t *)((char *)a2 + 70);
  *(_OWORD *)&v109[16] = v23;
  *(_OWORD *)uint64_t v109 = v22;
  long long v24 = *(_OWORD *)((char *)a2 + 78);
  long long v25 = *(_OWORD *)((char *)a2 + 94);
  *(void *)&v108[32] = *(uint64_t *)((char *)a2 + 110);
  *(_OWORD *)&v108[16] = v25;
  *(_OWORD *)uint64_t v108 = v24;
  if (v4 == v15 && v5 == v16 || (v26 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v27 = 0, (v26 & 1) != 0))
  {
    if (v7)
    {
      if (!v17) {
        goto LABEL_29;
      }
      if (v6 != v18 || v7 != v17)
      {
        char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
        char v27 = 0;
        if ((v28 & 1) == 0) {
          return v27 & 1;
        }
      }
    }
    else if (v17)
    {
      goto LABEL_29;
    }
    if (v9)
    {
      if ((v20 & 1) == 0) {
        goto LABEL_29;
      }
    }
    else
    {
      char v27 = 0;
      if ((v20 & 1) != 0 || v8 != v19) {
        return v27 & 1;
      }
    }
    if (v10 == 4)
    {
      if (v21 != 4) {
        goto LABEL_29;
      }
    }
    else
    {
      char v27 = 0;
      if (v21 == 4 || v10 != v21) {
        return v27 & 1;
      }
    }
    long long v118 = *(_OWORD *)&v115[2];
    v119[0] = *(_OWORD *)&v115[18];
    *(void *)((char *)v119 + 14) = *(void *)&v115[32];
    long long v112 = *(_OWORD *)&v109[2];
    v113[0] = *(_OWORD *)&v109[18];
    *(void *)((char *)v113 + 14) = *(void *)&v109[32];
    if (sub_10012C858((uint64_t)&v118, (uint64_t)&v112))
    {
      long long v116 = *(_OWORD *)&v114[2];
      v117[0] = *(_OWORD *)&v114[18];
      *(void *)((char *)v117 + 14) = *(void *)&v114[32];
      long long v110 = *(_OWORD *)&v108[2];
      v111[0] = *(_OWORD *)&v108[18];
      *(void *)((char *)v111 + 14) = *(void *)&v108[32];
      if (sub_10012C858((uint64_t)&v116, (uint64_t)&v110))
      {
        long long v29 = *(_OWORD *)(a1 + 25);
        v106[4] = *(_OWORD *)(a1 + 23);
        v106[5] = v29;
        v107[0] = *(_OWORD *)(a1 + 27);
        *(void *)((char *)v107 + 14) = *(uint64_t *)((char *)a1 + 230);
        long long v30 = *(_OWORD *)(a1 + 17);
        v106[0] = *(_OWORD *)(a1 + 15);
        v106[1] = v30;
        long long v31 = *(_OWORD *)(a1 + 21);
        v106[2] = *(_OWORD *)(a1 + 19);
        v106[3] = v31;
        long long v32 = *(_OWORD *)(a2 + 15);
        long long v33 = *(_OWORD *)(a2 + 17);
        long long v34 = *(_OWORD *)(a2 + 19);
        v104[3] = *(_OWORD *)(a2 + 21);
        v104[2] = v34;
        v104[1] = v33;
        v104[0] = v32;
        long long v35 = *(_OWORD *)(a2 + 23);
        long long v36 = *(_OWORD *)(a2 + 25);
        long long v37 = *(_OWORD *)(a2 + 27);
        *(void *)((char *)v105 + 14) = *(uint64_t *)((char *)a2 + 230);
        v105[0] = v37;
        v104[5] = v36;
        v104[4] = v35;
        if (sub_1001E518C((uint64_t)v106, (uint64_t)v104))
        {
          long long v38 = *((_OWORD *)a1 + 20);
          v102[4] = *((_OWORD *)a1 + 19);
          v102[5] = v38;
          v103[0] = *((_OWORD *)a1 + 21);
          long long v39 = *((_OWORD *)a1 + 16);
          v102[0] = *((_OWORD *)a1 + 15);
          v102[1] = v39;
          long long v40 = *((_OWORD *)a1 + 18);
          Swift::String v102[2] = *((_OWORD *)a1 + 17);
          v102[3] = v40;
          *(void *)((char *)v103 + 14) = *(uint64_t *)((char *)a1 + 350);
          long long v41 = *((_OWORD *)a2 + 15);
          long long v42 = *((_OWORD *)a2 + 16);
          long long v43 = *((_OWORD *)a2 + 17);
          v100[3] = *((_OWORD *)a2 + 18);
          _OWORD v100[2] = v43;
          v100[1] = v42;
          v100[0] = v41;
          long long v44 = *((_OWORD *)a2 + 19);
          long long v45 = *((_OWORD *)a2 + 20);
          long long v46 = *((_OWORD *)a2 + 21);
          *(void *)((char *)v101 + 14) = *(uint64_t *)((char *)a2 + 350);
          v101[0] = v46;
          v100[5] = v45;
          v100[4] = v44;
          if (sub_1001E518C((uint64_t)v102, (uint64_t)v100))
          {
            long long v47 = *(_OWORD *)(a1 + 55);
            v98[4] = *(_OWORD *)(a1 + 53);
            v98[5] = v47;
            v99[0] = *(_OWORD *)(a1 + 57);
            *(void *)((char *)v99 + 14) = *(uint64_t *)((char *)a1 + 470);
            long long v48 = *(_OWORD *)(a1 + 47);
            v98[0] = *(_OWORD *)(a1 + 45);
            v98[1] = v48;
            long long v49 = *(_OWORD *)(a1 + 51);
            v98[2] = *(_OWORD *)(a1 + 49);
            v98[3] = v49;
            long long v50 = *(_OWORD *)(a2 + 45);
            long long v51 = *(_OWORD *)(a2 + 47);
            long long v52 = *(_OWORD *)(a2 + 51);
            _OWORD v96[2] = *(_OWORD *)(a2 + 49);
            v96[3] = v52;
            v96[0] = v50;
            v96[1] = v51;
            long long v53 = *(_OWORD *)(a2 + 53);
            long long v54 = *(_OWORD *)(a2 + 55);
            long long v55 = *(_OWORD *)(a2 + 57);
            *(void *)((char *)v97 + 14) = *(uint64_t *)((char *)a2 + 470);
            v96[5] = v54;
            v97[0] = v55;
            v96[4] = v53;
            if (sub_1001E518C((uint64_t)v98, (uint64_t)v96))
            {
              long long v56 = *((_OWORD *)a1 + 35);
              v94[4] = *((_OWORD *)a1 + 34);
              v94[5] = v56;
              v95[0] = *((_OWORD *)a1 + 36);
              long long v57 = *((_OWORD *)a1 + 31);
              v94[0] = *((_OWORD *)a1 + 30);
              v94[1] = v57;
              long long v58 = *((_OWORD *)a1 + 33);
              _OWORD v94[2] = *((_OWORD *)a1 + 32);
              v94[3] = v58;
              *(void *)((char *)v95 + 14) = *(uint64_t *)((char *)a1 + 590);
              long long v59 = *((_OWORD *)a2 + 30);
              long long v60 = *((_OWORD *)a2 + 31);
              long long v61 = *((_OWORD *)a2 + 33);
              v92[2] = *((_OWORD *)a2 + 32);
              v92[3] = v61;
              v92[0] = v59;
              v92[1] = v60;
              long long v62 = *((_OWORD *)a2 + 34);
              long long v63 = *((_OWORD *)a2 + 35);
              long long v64 = *((_OWORD *)a2 + 36);
              *(void *)((char *)v93 + 14) = *(uint64_t *)((char *)a2 + 590);
              v92[5] = v63;
              v93[0] = v64;
              v92[4] = v62;
              if (sub_1001E518C((uint64_t)v94, (uint64_t)v92))
              {
                long long v65 = *(_OWORD *)(a1 + 85);
                v90[4] = *(_OWORD *)(a1 + 83);
                v90[5] = v65;
                v91[0] = *(_OWORD *)(a1 + 87);
                *(void *)((char *)v91 + 14) = *(uint64_t *)((char *)a1 + 710);
                long long v66 = *(_OWORD *)(a1 + 77);
                v90[0] = *(_OWORD *)(a1 + 75);
                v90[1] = v66;
                long long v67 = *(_OWORD *)(a1 + 81);
                v90[2] = *(_OWORD *)(a1 + 79);
                v90[3] = v67;
                long long v68 = *(_OWORD *)(a2 + 75);
                long long v69 = *(_OWORD *)(a2 + 77);
                long long v70 = *(_OWORD *)(a2 + 81);
                v88[2] = *(_OWORD *)(a2 + 79);
                v88[3] = v70;
                v88[0] = v68;
                v88[1] = v69;
                long long v71 = *(_OWORD *)(a2 + 83);
                long long v72 = *(_OWORD *)(a2 + 85);
                long long v73 = *(_OWORD *)(a2 + 87);
                *(void *)((char *)v89 + 14) = *(uint64_t *)((char *)a2 + 710);
                v88[5] = v72;
                v89[0] = v73;
                v88[4] = v71;
                if (sub_1001E518C((uint64_t)v90, (uint64_t)v88))
                {
                  long long v74 = *((_OWORD *)a1 + 50);
                  v86[4] = *((_OWORD *)a1 + 49);
                  v86[5] = v74;
                  v87[0] = *((_OWORD *)a1 + 51);
                  long long v75 = *((_OWORD *)a1 + 46);
                  v86[0] = *((_OWORD *)a1 + 45);
                  v86[1] = v75;
                  long long v76 = *((_OWORD *)a1 + 48);
                  v86[2] = *((_OWORD *)a1 + 47);
                  v86[3] = v76;
                  *(void *)((char *)v87 + 14) = *(uint64_t *)((char *)a1 + 830);
                  long long v77 = *((_OWORD *)a2 + 45);
                  long long v78 = *((_OWORD *)a2 + 46);
                  long long v79 = *((_OWORD *)a2 + 48);
                  void v84[2] = *((_OWORD *)a2 + 47);
                  v84[3] = v79;
                  v84[0] = v77;
                  v84[1] = v78;
                  long long v80 = *((_OWORD *)a2 + 49);
                  long long v81 = *((_OWORD *)a2 + 50);
                  long long v82 = *((_OWORD *)a2 + 51);
                  *(void *)&v85[14] = *(uint64_t *)((char *)a2 + 830);
                  v84[5] = v81;
                  *(_OWORD *)uint64_t v85 = v82;
                  v84[4] = v80;
                  char v27 = sub_1001E518C((uint64_t)v86, (uint64_t)v84);
                  return v27 & 1;
                }
              }
            }
          }
        }
      }
    }
LABEL_29:
    char v27 = 0;
  }
  return v27 & 1;
}

uint64_t sub_1001E5C68(uint64_t a1)
{
  uint64_t v1 = __chkstk_darwin(a1);
  uint64_t v3 = v2;
  sub_100026A04(v1, (uint64_t)v51);
  int v4 = sub_100026A60((uint64_t)v51);
  if (v4)
  {
    if (v4 == 1)
    {
      uint64_t v5 = sub_100026A6C((uint64_t)v51);
      uint64_t v6 = *(void *)v5;
      uint64_t v7 = *(void *)(v5 + 8);
      uint64_t v9 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      float v10 = *(float *)(v5 + 32);
      char v11 = *(unsigned char *)(v5 + 36);
      int v12 = *(unsigned __int8 *)(v5 + 37);
      long long v13 = *(_OWORD *)(v5 + 54);
      long long v56 = *(_OWORD *)(v5 + 38);
      long long v57 = v13;
      uint64_t v58 = *(void *)(v5 + 70);
      uint64_t v55 = *(void *)(v5 + 110);
      long long v14 = *(_OWORD *)(v5 + 78);
      long long v54 = *(_OWORD *)(v5 + 94);
      long long v53 = v14;
      *(void *)&__dst[7] = *(void *)(v5 + 230);
      __dst[6] = *(_OWORD *)(v5 + 214);
      long long v15 = *(_OWORD *)(v5 + 182);
      __dst[5] = *(_OWORD *)(v5 + 198);
      __dst[4] = v15;
      long long v16 = *(_OWORD *)(v5 + 150);
      __dst[3] = *(_OWORD *)(v5 + 166);
      __dst[2] = v16;
      long long v17 = *(_OWORD *)(v5 + 118);
      __dst[1] = *(_OWORD *)(v5 + 134);
      __dst[0] = v17;
      long long v18 = *(_OWORD *)(v5 + 238);
      long long v19 = *(_OWORD *)(v5 + 254);
      long long v20 = *(_OWORD *)(v5 + 286);
      v49[2] = *(_OWORD *)(v5 + 270);
      v49[3] = v20;
      v49[0] = v18;
      v49[1] = v19;
      long long v21 = *(_OWORD *)(v5 + 302);
      long long v22 = *(_OWORD *)(v5 + 318);
      long long v23 = *(_OWORD *)(v5 + 334);
      *(void *)&v49[7] = *(void *)(v5 + 350);
      v49[5] = v22;
      v49[6] = v23;
      v49[4] = v21;
      long long v24 = *(_OWORD *)(v5 + 358);
      long long v25 = *(_OWORD *)(v5 + 374);
      long long v26 = *(_OWORD *)(v5 + 390);
      *(_OWORD *)&v52[48] = *(_OWORD *)(v5 + 406);
      *(_OWORD *)&v52[32] = v26;
      *(_OWORD *)&v52[16] = v25;
      *(_OWORD *)long long v52 = v24;
      long long v27 = *(_OWORD *)(v5 + 422);
      long long v28 = *(_OWORD *)(v5 + 438);
      long long v29 = *(_OWORD *)(v5 + 454);
      *(void *)&v52[112] = *(void *)(v5 + 470);
      *(_OWORD *)&v52[96] = v29;
      *(_OWORD *)&v52[80] = v28;
      *(_OWORD *)&v52[64] = v27;
      sub_100026A04(v3, (uint64_t)v59);
      if (sub_100026A60((uint64_t)v59) != 1) {
        goto LABEL_34;
      }
      uint64_t v30 = sub_100026A6C((uint64_t)v59);
      uint64_t v31 = *(void *)v30;
      uint64_t v32 = *(void *)(v30 + 8);
      uint64_t v34 = *(void *)(v30 + 16);
      uint64_t v33 = *(void *)(v30 + 24);
      float v35 = *(float *)(v30 + 32);
      char v36 = *(unsigned char *)(v30 + 36);
      int v37 = *(unsigned __int8 *)(v30 + 37);
      long long v38 = *(_OWORD *)(v30 + 54);
      *(_OWORD *)long long v73 = *(_OWORD *)(v30 + 38);
      *(_OWORD *)&v73[16] = v38;
      *(void *)&v73[32] = *(void *)(v30 + 70);
      *(void *)&v72[32] = *(void *)(v30 + 110);
      long long v39 = *(_OWORD *)(v30 + 78);
      *(_OWORD *)&v72[16] = *(_OWORD *)(v30 + 94);
      *(_OWORD *)long long v72 = v39;
      *(void *)&v48[112] = *(void *)(v30 + 230);
      *(_OWORD *)&v48[80] = *(_OWORD *)(v30 + 198);
      *(_OWORD *)&v48[96] = *(_OWORD *)(v30 + 214);
      *(_OWORD *)&v48[48] = *(_OWORD *)(v30 + 166);
      *(_OWORD *)&v48[64] = *(_OWORD *)(v30 + 182);
      *(_OWORD *)&v48[16] = *(_OWORD *)(v30 + 134);
      *(_OWORD *)&v48[32] = *(_OWORD *)(v30 + 150);
      *(_OWORD *)long long v48 = *(_OWORD *)(v30 + 118);
      *(_OWORD *)&v47[32] = *(_OWORD *)(v30 + 270);
      *(_OWORD *)&v47[48] = *(_OWORD *)(v30 + 286);
      *(_OWORD *)long long v47 = *(_OWORD *)(v30 + 238);
      *(_OWORD *)&v47[16] = *(_OWORD *)(v30 + 254);
      *(void *)&v47[112] = *(void *)(v30 + 350);
      *(_OWORD *)&v47[80] = *(_OWORD *)(v30 + 318);
      *(_OWORD *)&v47[96] = *(_OWORD *)(v30 + 334);
      *(_OWORD *)&v47[64] = *(_OWORD *)(v30 + 302);
      *(_OWORD *)&v46[32] = *(_OWORD *)(v30 + 390);
      *(_OWORD *)&v46[48] = *(_OWORD *)(v30 + 406);
      *(_OWORD *)long long v46 = *(_OWORD *)(v30 + 358);
      *(_OWORD *)&v46[16] = *(_OWORD *)(v30 + 374);
      *(void *)&v46[112] = *(void *)(v30 + 470);
      *(_OWORD *)&v46[80] = *(_OWORD *)(v30 + 438);
      *(_OWORD *)&v46[96] = *(_OWORD *)(v30 + 454);
      *(_OWORD *)&v46[64] = *(_OWORD *)(v30 + 422);
      *(void *)&v61[32] = v58;
      *(_OWORD *)&v61[16] = v57;
      *(_OWORD *)long long v61 = v56;
      *(void *)&v60[32] = v55;
      *(_OWORD *)&v60[16] = v54;
      *(_OWORD *)long long v60 = v53;
      if ((v6 != v31 || v7 != v32) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_34;
      }
      if (v8)
      {
        if (!v33 || (v9 != v34 || v8 != v33) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          goto LABEL_34;
        }
      }
      else if (v33)
      {
        goto LABEL_34;
      }
      if (v11)
      {
        if ((v36 & 1) == 0) {
          goto LABEL_34;
        }
      }
      else if ((v36 & 1) != 0 || v10 != v35)
      {
        goto LABEL_34;
      }
      if (v12 == 4)
      {
        if (v37 != 4) {
          goto LABEL_34;
        }
      }
      else if (v37 == 4 || v12 != v37)
      {
        goto LABEL_34;
      }
      long long v64 = *(_OWORD *)&v61[2];
      v65[0] = *(_OWORD *)&v61[18];
      *(void *)((char *)v65 + 14) = *(void *)&v61[32];
      long long v76 = *(_OWORD *)&v73[2];
      v77[0] = *(_OWORD *)&v73[18];
      *(void *)((char *)v77 + 14) = *(void *)&v73[32];
      if (sub_10012C858((uint64_t)&v64, (uint64_t)&v76))
      {
        long long v62 = *(_OWORD *)&v60[2];
        v63[0] = *(_OWORD *)&v60[18];
        *(void *)((char *)v63 + 14) = *(void *)&v60[32];
        long long v74 = *(_OWORD *)&v72[2];
        v75[0] = *(_OWORD *)&v72[18];
        *(void *)((char *)v75 + 14) = *(void *)&v72[32];
        if (sub_10012C858((uint64_t)&v62, (uint64_t)&v74))
        {
          v66[4] = *(_OWORD *)((char *)&__dst[4] + 2);
          v66[5] = *(_OWORD *)((char *)&__dst[5] + 2);
          v67[0] = *(_OWORD *)((char *)&__dst[6] + 2);
          *(void *)((char *)v67 + 14) = *(void *)&__dst[7];
          v66[0] = *(_OWORD *)((char *)__dst + 2);
          v66[1] = *(_OWORD *)((char *)&__dst[1] + 2);
          v66[2] = *(_OWORD *)((char *)&__dst[2] + 2);
          v66[3] = *(_OWORD *)((char *)&__dst[3] + 2);
          v78[3] = *(_OWORD *)&v48[50];
          void v78[2] = *(_OWORD *)&v48[34];
          v78[1] = *(_OWORD *)&v48[18];
          v78[0] = *(_OWORD *)&v48[2];
          *(void *)((char *)v79 + 14) = *(void *)&v48[112];
          v79[0] = *(_OWORD *)&v48[98];
          v78[5] = *(_OWORD *)&v48[82];
          v78[4] = *(_OWORD *)&v48[66];
          if (sub_1001E518C((uint64_t)v66, (uint64_t)v78))
          {
            v68[4] = *(_OWORD *)((char *)&v49[4] + 2);
            v68[5] = *(_OWORD *)((char *)&v49[5] + 2);
            v69[0] = *(_OWORD *)((char *)&v49[6] + 2);
            *(void *)((char *)v69 + 14) = *(void *)&v49[7];
            v68[0] = *(_OWORD *)((char *)v49 + 2);
            v68[1] = *(_OWORD *)((char *)&v49[1] + 2);
            v68[2] = *(_OWORD *)((char *)&v49[2] + 2);
            v68[3] = *(_OWORD *)((char *)&v49[3] + 2);
            void v80[3] = *(_OWORD *)&v47[50];
            v80[2] = *(_OWORD *)&v47[34];
            v80[1] = *(_OWORD *)&v47[18];
            v80[0] = *(_OWORD *)&v47[2];
            *(void *)((char *)v81 + 14) = *(void *)&v47[112];
            v81[0] = *(_OWORD *)&v47[98];
            v80[5] = *(_OWORD *)&v47[82];
            v80[4] = *(_OWORD *)&v47[66];
            if (sub_1001E518C((uint64_t)v68, (uint64_t)v80))
            {
              v70[4] = *(_OWORD *)&v52[66];
              v70[5] = *(_OWORD *)&v52[82];
              v71[0] = *(_OWORD *)&v52[98];
              *(void *)((char *)v71 + 14) = *(void *)&v52[112];
              v70[0] = *(_OWORD *)&v52[2];
              v70[1] = *(_OWORD *)&v52[18];
              _OWORD v70[2] = *(_OWORD *)&v52[34];
              v70[3] = *(_OWORD *)&v52[50];
              v82[2] = *(_OWORD *)&v46[34];
              v82[3] = *(_OWORD *)&v46[50];
              v82[0] = *(_OWORD *)&v46[2];
              v82[1] = *(_OWORD *)&v46[18];
              *(void *)((char *)v83 + 14) = *(void *)&v46[112];
              v82[5] = *(_OWORD *)&v46[82];
              v83[0] = *(_OWORD *)&v46[98];
              v82[4] = *(_OWORD *)&v46[66];
              if (sub_1001E518C((uint64_t)v70, (uint64_t)v82))
              {
                char v42 = 1;
                return v42 & 1;
              }
            }
          }
        }
      }
LABEL_34:
      char v42 = 0;
      return v42 & 1;
    }
    long long v43 = (const void *)sub_100026A6C((uint64_t)v51);
    memcpy(v59, v43, 0x346uLL);
    sub_100026A04(v3, (uint64_t)v49);
    if (sub_100026A60((uint64_t)v49) != 2) {
      goto LABEL_34;
    }
    long long v44 = (const void *)sub_100026A6C((uint64_t)v49);
    memcpy(__dst, v44, 0x346uLL);
    char v42 = sub_1001E5794(v59, (uint64_t *)__dst);
  }
  else
  {
    long long v40 = (const void *)sub_100026A6C((uint64_t)v51);
    memcpy(__dst, v40, 0x10DuLL);
    sub_100026A04(v3, (uint64_t)v59);
    if (sub_100026A60((uint64_t)v59)) {
      goto LABEL_34;
    }
    long long v41 = (const void *)sub_100026A6C((uint64_t)v59);
    memcpy(v49, v41, 0x10DuLL);
    char v42 = sub_1001E5328((uint64_t *)__dst, (uint64_t *)v49);
  }
  return v42 & 1;
}

uint64_t sub_1001E62E4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3];
  float v8 = *((float *)a1 + 8);
  char v9 = *((unsigned char *)a1 + 36);
  int v10 = *((unsigned __int8 *)a1 + 37);
  long long v11 = *(_OWORD *)((char *)a1 + 38);
  long long v12 = *(_OWORD *)((char *)a1 + 54);
  *(void *)&v76[32] = *(uint64_t *)((char *)a1 + 70);
  *(_OWORD *)long long v76 = v11;
  *(_OWORD *)&v76[16] = v12;
  long long v13 = *(_OWORD *)((char *)a1 + 78);
  long long v14 = *(_OWORD *)((char *)a1 + 94);
  *(void *)&v75[32] = *(uint64_t *)((char *)a1 + 110);
  *(_OWORD *)long long v75 = v13;
  *(_OWORD *)&v75[16] = v14;
  uint64_t v15 = *a2;
  uint64_t v16 = a2[1];
  uint64_t v18 = a2[2];
  uint64_t v17 = a2[3];
  float v19 = *((float *)a2 + 8);
  char v20 = *((unsigned char *)a2 + 36);
  int v21 = *((unsigned __int8 *)a2 + 37);
  long long v22 = *(_OWORD *)((char *)a2 + 38);
  long long v23 = *(_OWORD *)((char *)a2 + 54);
  *(void *)&v70[32] = *(uint64_t *)((char *)a2 + 70);
  *(_OWORD *)long long v70 = v22;
  *(_OWORD *)&v70[16] = v23;
  long long v24 = *(_OWORD *)((char *)a2 + 78);
  long long v25 = *(_OWORD *)((char *)a2 + 94);
  *(void *)&v69[32] = *(uint64_t *)((char *)a2 + 110);
  *(_OWORD *)long long v69 = v24;
  *(_OWORD *)&v69[16] = v25;
  if (v4 == v15 && v5 == v16 || (v26 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v27 = 0, (v26 & 1) != 0))
  {
    if (v7)
    {
      if (!v17) {
        goto LABEL_26;
      }
      if (v6 != v18 || v7 != v17)
      {
        char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
        char v27 = 0;
        if ((v28 & 1) == 0) {
          return v27 & 1;
        }
      }
    }
    else if (v17)
    {
      goto LABEL_26;
    }
    if (v9)
    {
      if ((v20 & 1) == 0) {
        goto LABEL_26;
      }
    }
    else
    {
      char v27 = 0;
      if ((v20 & 1) != 0 || v8 != v19) {
        return v27 & 1;
      }
    }
    if (v10 == 4)
    {
      if (v21 != 4) {
        goto LABEL_26;
      }
    }
    else
    {
      char v27 = 0;
      if (v21 == 4 || v10 != v21) {
        return v27 & 1;
      }
    }
    long long v79 = *(_OWORD *)&v76[2];
    v80[0] = *(_OWORD *)&v76[18];
    *(void *)((char *)v80 + 14) = *(void *)&v76[32];
    long long v73 = *(_OWORD *)&v70[2];
    v74[0] = *(_OWORD *)&v70[18];
    *(void *)((char *)v74 + 14) = *(void *)&v70[32];
    if (sub_10012C858((uint64_t)&v79, (uint64_t)&v73))
    {
      long long v77 = *(_OWORD *)&v75[2];
      v78[0] = *(_OWORD *)&v75[18];
      *(void *)((char *)v78 + 14) = *(void *)&v75[32];
      long long v71 = *(_OWORD *)&v69[2];
      v72[0] = *(_OWORD *)&v69[18];
      *(void *)((char *)v72 + 14) = *(void *)&v69[32];
      if (sub_10012C858((uint64_t)&v77, (uint64_t)&v71))
      {
        long long v29 = *(_OWORD *)(a1 + 25);
        v67[4] = *(_OWORD *)(a1 + 23);
        v67[5] = v29;
        v68[0] = *(_OWORD *)(a1 + 27);
        *(void *)((char *)v68 + 14) = *(uint64_t *)((char *)a1 + 230);
        long long v30 = *(_OWORD *)(a1 + 17);
        v67[0] = *(_OWORD *)(a1 + 15);
        v67[1] = v30;
        long long v31 = *(_OWORD *)(a1 + 21);
        _OWORD v67[2] = *(_OWORD *)(a1 + 19);
        v67[3] = v31;
        long long v32 = *(_OWORD *)(a2 + 15);
        long long v33 = *(_OWORD *)(a2 + 17);
        long long v34 = *(_OWORD *)(a2 + 21);
        _OWORD v65[2] = *(_OWORD *)(a2 + 19);
        v65[3] = v34;
        v65[0] = v32;
        v65[1] = v33;
        long long v35 = *(_OWORD *)(a2 + 23);
        long long v36 = *(_OWORD *)(a2 + 25);
        long long v37 = *(_OWORD *)(a2 + 27);
        *(void *)((char *)v66 + 14) = *(uint64_t *)((char *)a2 + 230);
        v65[5] = v36;
        v66[0] = v37;
        v65[4] = v35;
        if (sub_1001E518C((uint64_t)v67, (uint64_t)v65))
        {
          long long v38 = *((_OWORD *)a1 + 20);
          v63[4] = *((_OWORD *)a1 + 19);
          v63[5] = v38;
          v64[0] = *((_OWORD *)a1 + 21);
          long long v39 = *((_OWORD *)a1 + 16);
          v63[0] = *((_OWORD *)a1 + 15);
          v63[1] = v39;
          long long v40 = *((_OWORD *)a1 + 18);
          _OWORD v63[2] = *((_OWORD *)a1 + 17);
          v63[3] = v40;
          *(void *)((char *)v64 + 14) = *(uint64_t *)((char *)a1 + 350);
          long long v41 = *((_OWORD *)a2 + 15);
          long long v42 = *((_OWORD *)a2 + 16);
          long long v43 = *((_OWORD *)a2 + 18);
          v61[2] = *((_OWORD *)a2 + 17);
          v61[3] = v43;
          v61[0] = v41;
          v61[1] = v42;
          long long v44 = *((_OWORD *)a2 + 19);
          long long v45 = *((_OWORD *)a2 + 20);
          long long v46 = *((_OWORD *)a2 + 21);
          *(void *)((char *)v62 + 14) = *(uint64_t *)((char *)a2 + 350);
          v61[5] = v45;
          v62[0] = v46;
          v61[4] = v44;
          if (sub_1001E518C((uint64_t)v63, (uint64_t)v61))
          {
            long long v47 = *(_OWORD *)(a1 + 55);
            v59[4] = *(_OWORD *)(a1 + 53);
            v59[5] = v47;
            v60[0] = *(_OWORD *)(a1 + 57);
            *(void *)((char *)v60 + 14) = *(uint64_t *)((char *)a1 + 470);
            long long v48 = *(_OWORD *)(a1 + 47);
            v59[0] = *(_OWORD *)(a1 + 45);
            v59[1] = v48;
            long long v49 = *(_OWORD *)(a1 + 51);
            v59[2] = *(_OWORD *)(a1 + 49);
            v59[3] = v49;
            long long v50 = *(_OWORD *)(a2 + 45);
            long long v51 = *(_OWORD *)(a2 + 47);
            long long v52 = *(_OWORD *)(a2 + 51);
            v57[2] = *(_OWORD *)(a2 + 49);
            v57[3] = v52;
            v57[0] = v50;
            v57[1] = v51;
            long long v53 = *(_OWORD *)(a2 + 53);
            long long v54 = *(_OWORD *)(a2 + 55);
            long long v55 = *(_OWORD *)(a2 + 57);
            *(void *)&v58[14] = *(uint64_t *)((char *)a2 + 470);
            v57[5] = v54;
            *(_OWORD *)uint64_t v58 = v55;
            v57[4] = v53;
            char v27 = sub_1001E518C((uint64_t)v59, (uint64_t)v57);
            return v27 & 1;
          }
        }
      }
    }
LABEL_26:
    char v27 = 0;
  }
  return v27 & 1;
}

uint64_t sub_1001E6630(void *a1, void *a2)
{
  uint64_t v48 = type metadata accessor for MeasurementCapture();
  uint64_t v4 = *(void *)(v48 - 8);
  uint64_t v5 = __chkstk_darwin(v48);
  uint64_t v46 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v47 = (uint64_t)&v41 - v8;
  __chkstk_darwin(v7);
  int v10 = (char *)&v41 - v9;
  uint64_t v11 = sub_100012894(&qword_1004D1D60);
  __chkstk_darwin(v11);
  long long v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100012894((uint64_t *)&unk_1004CE670);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  char v20 = (char *)&v41 - v19;
  __chkstk_darwin(v18);
  long long v22 = (char *)&v41 - v21;
  if (*a1 == *a2 && a1[1] == a2[1] || (char v23 = _stringCompareWithSmolCheck(_:_:expecting:)(), v24 = 0, (v23 & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3]
      || (v25 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v24 = 0, (v25 & 1) != 0))
    {
      long long v42 = v10;
      uint64_t v26 = type metadata accessor for MeasurementHistoryItem();
      sub_1000A30EC((uint64_t)a1 + *(int *)(v26 + 24), (uint64_t)v22);
      uint64_t v43 = v26;
      long long v44 = a2;
      sub_1000A30EC((uint64_t)a2 + *(int *)(v26 + 24), (uint64_t)v20);
      uint64_t v27 = (uint64_t)&v13[*(int *)(v11 + 48)];
      sub_1000A30EC((uint64_t)v22, (uint64_t)v13);
      sub_1000A30EC((uint64_t)v20, v27);
      char v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
      uint64_t v29 = v48;
      int v30 = v28(v13, 1, v48);
      long long v45 = v13;
      if (v30 == 1)
      {
        sub_10002B9C0((uint64_t)v20, (uint64_t *)&unk_1004CE670);
        sub_10002B9C0((uint64_t)v22, (uint64_t *)&unk_1004CE670);
        if (v28((char *)v27, 1, v29) == 1)
        {
          sub_10002B9C0((uint64_t)v45, (uint64_t *)&unk_1004CE670);
LABEL_15:
          uint64_t v38 = v43;
          sub_100026A04((uint64_t)a1 + *(int *)(v43 + 28), (uint64_t)v49);
          long long v39 = v44;
          sub_100026A04((uint64_t)v44 + *(int *)(v38 + 28), (uint64_t)&v50);
          if (sub_1001E5C68((uint64_t)v49))
          {
            char v24 = *((unsigned char *)a1 + *(int *)(v38 + 32)) ^ *((unsigned char *)v39 + *(int *)(v38 + 32)) ^ 1;
            return v24 & 1;
          }
LABEL_19:
          char v24 = 0;
          return v24 & 1;
        }
      }
      else
      {
        sub_1000A30EC((uint64_t)v13, (uint64_t)v17);
        if (v28((char *)v27, 1, v29) != 1)
        {
          uint64_t v33 = (uint64_t)v42;
          sub_10004019C(v27, (uint64_t)v42);
          char v34 = static URL.== infix(_:_:)();
          uint64_t v35 = v47;
          sub_1001A3580((uint64_t)v17, v47);
          uint64_t v36 = v46;
          sub_1001A3580(v33, v46);
          if (v34)
          {
            char v37 = static URL.== infix(_:_:)();
            sub_1001A35E4(v36);
            sub_1001A35E4(v35);
            sub_1001A35E4(v33);
            sub_10002B9C0((uint64_t)v20, (uint64_t *)&unk_1004CE670);
            sub_10002B9C0((uint64_t)v22, (uint64_t *)&unk_1004CE670);
            sub_1001A35E4((uint64_t)v17);
            sub_10002B9C0((uint64_t)v45, (uint64_t *)&unk_1004CE670);
            if ((v37 & 1) == 0) {
              goto LABEL_19;
            }
            goto LABEL_15;
          }
          sub_1001A35E4(v36);
          sub_1001A35E4(v35);
          sub_1001A35E4(v33);
          sub_10002B9C0((uint64_t)v20, (uint64_t *)&unk_1004CE670);
          sub_10002B9C0((uint64_t)v22, (uint64_t *)&unk_1004CE670);
          sub_1001A35E4((uint64_t)v17);
          uint64_t v32 = (uint64_t)v45;
          long long v31 = (uint64_t *)&unk_1004CE670;
LABEL_18:
          sub_10002B9C0(v32, v31);
          goto LABEL_19;
        }
        sub_10002B9C0((uint64_t)v20, (uint64_t *)&unk_1004CE670);
        sub_10002B9C0((uint64_t)v22, (uint64_t *)&unk_1004CE670);
        sub_1001A35E4((uint64_t)v17);
      }
      long long v31 = &qword_1004D1D60;
      uint64_t v32 = (uint64_t)v45;
      goto LABEL_18;
    }
  }
  return v24 & 1;
}

uint64_t *sub_1001E6AF4(uint64_t *a1)
{
  uint64_t v4 = a1[15];
  uint64_t v3 = a1[16];
  sub_1000283C4(*a1, a1[1]);
  sub_1000283C4(v4, v3);
  return a1;
}

uint64_t destroy for MeasurementFields()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MeasurementFields(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_WORD *)(a1 + 76) = *(_WORD *)(a2 + 76);
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MeasurementFields(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 37) = *(unsigned char *)(a2 + 37);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v5 = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v5;
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v6 = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = v6;
  *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
  return a1;
}

__n128 initializeWithTake for MeasurementFields(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 110) = *(void *)((char *)a2 + 110);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for MeasurementFields(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_WORD *)(a1 + 76) = *(_WORD *)(a2 + 76);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_WORD *)(a1 + 116) = *(_WORD *)(a2 + 116);
  return a1;
}

uint64_t getEnumTagSinglePayload for MeasurementFields(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 118)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MeasurementFields(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 116) = 0;
    *(_DWORD *)(result + 112) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 118) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 118) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MeasurementFields()
{
  return &type metadata for MeasurementFields;
}

uint64_t destroy for MeasurementDetail(uint64_t *a1)
{
  return sub_100027F20(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
           a1[19]);
}

uint64_t initializeWithCopy for MeasurementDetail(uint64_t a1, uint64_t a2)
{
  uint64_t v108 = *(void *)(a2 + 80);
  uint64_t v109 = *(void *)(a2 + 72);
  uint64_t v106 = *(void *)(a2 + 96);
  uint64_t v107 = *(void *)(a2 + 88);
  uint64_t v104 = *(void *)(a2 + 112);
  uint64_t v105 = *(void *)(a2 + 104);
  uint64_t v102 = *(void *)(a2 + 128);
  uint64_t v103 = *(void *)(a2 + 120);
  uint64_t v100 = *(void *)(a2 + 144);
  uint64_t v101 = *(void *)(a2 + 136);
  uint64_t v98 = *(void *)(a2 + 160);
  uint64_t v99 = *(void *)(a2 + 152);
  uint64_t v96 = *(void *)(a2 + 176);
  uint64_t v97 = *(void *)(a2 + 168);
  uint64_t v94 = *(void *)(a2 + 192);
  uint64_t v95 = *(void *)(a2 + 184);
  uint64_t v92 = *(void *)(a2 + 208);
  uint64_t v93 = *(void *)(a2 + 200);
  uint64_t v90 = *(void *)(a2 + 224);
  uint64_t v91 = *(void *)(a2 + 216);
  uint64_t v89 = *(void *)(a2 + 232);
  uint64_t v88 = *(void *)(a2 + 240);
  uint64_t v87 = *(void *)(a2 + 248);
  uint64_t v86 = *(void *)(a2 + 256);
  uint64_t v85 = *(void *)(a2 + 264);
  uint64_t v84 = *(void *)(a2 + 272);
  uint64_t v83 = *(void *)(a2 + 280);
  uint64_t v82 = *(void *)(a2 + 288);
  uint64_t v81 = *(void *)(a2 + 296);
  uint64_t v80 = *(void *)(a2 + 304);
  uint64_t v79 = *(void *)(a2 + 312);
  uint64_t v78 = *(void *)(a2 + 320);
  uint64_t v77 = *(void *)(a2 + 328);
  uint64_t v76 = *(void *)(a2 + 336);
  uint64_t v75 = *(void *)(a2 + 344);
  uint64_t v74 = *(void *)(a2 + 352);
  uint64_t v73 = *(void *)(a2 + 360);
  uint64_t v72 = *(void *)(a2 + 368);
  uint64_t v71 = *(void *)(a2 + 376);
  uint64_t v70 = *(void *)(a2 + 384);
  uint64_t v69 = *(void *)(a2 + 392);
  uint64_t v68 = *(void *)(a2 + 400);
  uint64_t v67 = *(void *)(a2 + 408);
  uint64_t v66 = *(void *)(a2 + 416);
  uint64_t v65 = *(void *)(a2 + 424);
  uint64_t v64 = *(void *)(a2 + 432);
  uint64_t v63 = *(void *)(a2 + 440);
  uint64_t v62 = *(void *)(a2 + 448);
  uint64_t v61 = *(void *)(a2 + 456);
  uint64_t v60 = *(void *)(a2 + 464);
  uint64_t v59 = *(void *)(a2 + 472);
  uint64_t v58 = *(void *)(a2 + 480);
  uint64_t v57 = *(void *)(a2 + 488);
  uint64_t v56 = *(void *)(a2 + 496);
  uint64_t v55 = *(void *)(a2 + 504);
  uint64_t v54 = *(void *)(a2 + 512);
  uint64_t v53 = *(void *)(a2 + 520);
  uint64_t v52 = *(void *)(a2 + 528);
  uint64_t v51 = *(void *)(a2 + 536);
  uint64_t v50 = *(void *)(a2 + 544);
  uint64_t v49 = *(void *)(a2 + 552);
  uint64_t v48 = *(void *)(a2 + 560);
  uint64_t v47 = *(void *)(a2 + 568);
  uint64_t v46 = *(void *)(a2 + 576);
  uint64_t v45 = *(void *)(a2 + 584);
  uint64_t v44 = *(void *)(a2 + 592);
  uint64_t v43 = *(void *)(a2 + 600);
  uint64_t v42 = *(void *)(a2 + 608);
  uint64_t v41 = *(void *)(a2 + 616);
  uint64_t v40 = *(void *)(a2 + 624);
  uint64_t v13 = *(void *)(a2 + 632);
  uint64_t v14 = *(void *)(a2 + 640);
  uint64_t v15 = *(void *)(a2 + 648);
  uint64_t v16 = *(void *)(a2 + 656);
  uint64_t v17 = *(void *)(a2 + 664);
  uint64_t v18 = *(void *)(a2 + 672);
  uint64_t v19 = *(void *)(a2 + 680);
  uint64_t v20 = *(void *)(a2 + 688);
  uint64_t v21 = *(void *)(a2 + 696);
  uint64_t v22 = *(void *)(a2 + 704);
  uint64_t v23 = *(void *)(a2 + 712);
  uint64_t v24 = *(void *)(a2 + 720);
  uint64_t v25 = *(void *)(a2 + 728);
  uint64_t v26 = *(void *)(a2 + 736);
  uint64_t v27 = *(void *)(a2 + 744);
  uint64_t v28 = *(void *)(a2 + 752);
  uint64_t v29 = *(void *)(a2 + 760);
  uint64_t v30 = *(void *)(a2 + 768);
  uint64_t v31 = *(void *)(a2 + 776);
  uint64_t v32 = *(void *)(a2 + 784);
  uint64_t v33 = *(void *)(a2 + 792);
  uint64_t v34 = *(void *)(a2 + 800);
  uint64_t v35 = *(void *)(a2 + 808);
  uint64_t v36 = *(void *)(a2 + 816);
  uint64_t v37 = *(void *)(a2 + 824);
  __int16 v38 = *(_WORD *)(a2 + 836);
  int v39 = *(_DWORD *)(a2 + 832);
  uint64_t v3 = *(void *)(a2 + 64);
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  sub_100098C10(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v3, v109, v108, v107, v106, v105, v104, v103, v102, v101, v100,
    v99,
    v98,
    v97,
    v96,
    v95);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v3;
  *(void *)(a1 + 72) = v109;
  *(void *)(a1 + 80) = v108;
  *(void *)(a1 + 88) = v107;
  *(void *)(a1 + 96) = v106;
  *(void *)(a1 + 104) = v105;
  *(void *)(a1 + 112) = v104;
  *(void *)(a1 + 120) = v103;
  *(void *)(a1 + 128) = v102;
  *(void *)(a1 + 136) = v101;
  *(void *)(a1 + 144) = v100;
  *(void *)(a1 + 152) = v99;
  *(void *)(a1 + 160) = v98;
  *(void *)(a1 + 168) = v97;
  *(void *)(a1 + 176) = v96;
  *(void *)(a1 + 184) = v95;
  *(void *)(a1 + 192) = v94;
  *(void *)(a1 + 200) = v93;
  *(void *)(a1 + 208) = v92;
  *(void *)(a1 + 216) = v91;
  *(void *)(a1 + 224) = v90;
  *(void *)(a1 + 232) = v89;
  *(void *)(a1 + 240) = v88;
  *(void *)(a1 + 248) = v87;
  *(void *)(a1 + 256) = v86;
  *(void *)(a1 + 264) = v85;
  *(void *)(a1 + 272) = v84;
  *(void *)(a1 + 280) = v83;
  *(void *)(a1 + 288) = v82;
  *(void *)(a1 + 296) = v81;
  *(void *)(a1 + 304) = v80;
  *(void *)(a1 + 312) = v79;
  *(void *)(a1 + 320) = v78;
  *(void *)(a1 + 328) = v77;
  *(void *)(a1 + 336) = v76;
  *(void *)(a1 + 344) = v75;
  *(void *)(a1 + 352) = v74;
  *(void *)(a1 + 360) = v73;
  *(void *)(a1 + 368) = v72;
  *(void *)(a1 + 376) = v71;
  *(void *)(a1 + 384) = v70;
  *(void *)(a1 + 392) = v69;
  *(void *)(a1 + 400) = v68;
  *(void *)(a1 + 408) = v67;
  *(void *)(a1 + 416) = v66;
  *(void *)(a1 + 424) = v65;
  *(void *)(a1 + 432) = v64;
  *(void *)(a1 + 440) = v63;
  *(void *)(a1 + 448) = v62;
  *(void *)(a1 + 456) = v61;
  *(void *)(a1 + 464) = v60;
  *(void *)(a1 + 472) = v59;
  *(void *)(a1 + 480) = v58;
  *(void *)(a1 + 488) = v57;
  *(void *)(a1 + 496) = v56;
  *(void *)(a1 + 504) = v55;
  *(void *)(a1 + 512) = v54;
  *(void *)(a1 + 520) = v53;
  *(void *)(a1 + 528) = v52;
  *(void *)(a1 + 536) = v51;
  *(void *)(a1 + 544) = v50;
  *(void *)(a1 + 552) = v49;
  *(void *)(a1 + 560) = v48;
  *(void *)(a1 + 568) = v47;
  *(void *)(a1 + 576) = v46;
  *(void *)(a1 + 584) = v45;
  *(void *)(a1 + 592) = v44;
  *(void *)(a1 + 600) = v43;
  *(void *)(a1 + 608) = v42;
  *(void *)(a1 + 616) = v41;
  *(void *)(a1 + 624) = v40;
  *(void *)(a1 + 632) = v13;
  *(void *)(a1 + 640) = v14;
  *(void *)(a1 + 648) = v15;
  *(void *)(a1 + 656) = v16;
  *(void *)(a1 + 664) = v17;
  *(void *)(a1 + 672) = v18;
  *(void *)(a1 + 680) = v19;
  *(void *)(a1 + 688) = v20;
  *(void *)(a1 + 696) = v21;
  *(void *)(a1 + 704) = v22;
  *(void *)(a1 + 712) = v23;
  *(void *)(a1 + 720) = v24;
  *(void *)(a1 + 728) = v25;
  *(void *)(a1 + 736) = v26;
  *(void *)(a1 + 744) = v27;
  *(void *)(a1 + 752) = v28;
  *(void *)(a1 + 760) = v29;
  *(void *)(a1 + 768) = v30;
  *(void *)(a1 + 776) = v31;
  *(void *)(a1 + 784) = v32;
  *(void *)(a1 + 792) = v33;
  *(void *)(a1 + 800) = v34;
  *(void *)(a1 + 808) = v35;
  *(void *)(a1 + 816) = v36;
  *(void *)(a1 + 824) = v37;
  *(_WORD *)(a1 + 836) = v38;
  *(_DWORD *)(a1 + 832) = v39;
  return a1;
}

uint64_t assignWithCopy for MeasurementDetail(uint64_t a1, uint64_t a2)
{
  uint64_t v113 = *(void *)a2;
  uint64_t v115 = *(void *)(a2 + 8);
  uint64_t v111 = *(void *)(a2 + 16);
  uint64_t v109 = *(void *)(a2 + 24);
  uint64_t v107 = *(void *)(a2 + 32);
  uint64_t v105 = *(void *)(a2 + 40);
  uint64_t v104 = *(void *)(a2 + 48);
  uint64_t v103 = *(void *)(a2 + 56);
  uint64_t v102 = *(void *)(a2 + 64);
  uint64_t v101 = *(void *)(a2 + 72);
  uint64_t v100 = *(void *)(a2 + 80);
  uint64_t v99 = *(void *)(a2 + 88);
  uint64_t v98 = *(void *)(a2 + 96);
  uint64_t v97 = *(void *)(a2 + 104);
  uint64_t v96 = *(void *)(a2 + 112);
  uint64_t v95 = *(void *)(a2 + 120);
  uint64_t v94 = *(void *)(a2 + 128);
  uint64_t v93 = *(void *)(a2 + 136);
  uint64_t v92 = *(void *)(a2 + 144);
  uint64_t v91 = *(void *)(a2 + 152);
  uint64_t v90 = *(void *)(a2 + 160);
  uint64_t v89 = *(void *)(a2 + 168);
  uint64_t v88 = *(void *)(a2 + 176);
  uint64_t v87 = *(void *)(a2 + 184);
  uint64_t v86 = *(void *)(a2 + 192);
  uint64_t v85 = *(void *)(a2 + 200);
  uint64_t v84 = *(void *)(a2 + 208);
  uint64_t v83 = *(void *)(a2 + 224);
  uint64_t v82 = *(void *)(a2 + 240);
  uint64_t v81 = *(void *)(a2 + 248);
  uint64_t v80 = *(void *)(a2 + 256);
  uint64_t v79 = *(void *)(a2 + 264);
  uint64_t v78 = *(void *)(a2 + 272);
  uint64_t v77 = *(void *)(a2 + 280);
  uint64_t v76 = *(void *)(a2 + 288);
  uint64_t v75 = *(void *)(a2 + 296);
  uint64_t v74 = *(void *)(a2 + 304);
  uint64_t v73 = *(void *)(a2 + 312);
  uint64_t v72 = *(void *)(a2 + 320);
  uint64_t v71 = *(void *)(a2 + 328);
  uint64_t v70 = *(void *)(a2 + 336);
  uint64_t v69 = *(void *)(a2 + 344);
  uint64_t v68 = *(void *)(a2 + 352);
  uint64_t v67 = *(void *)(a2 + 360);
  uint64_t v66 = *(void *)(a2 + 368);
  uint64_t v65 = *(void *)(a2 + 376);
  uint64_t v64 = *(void *)(a2 + 384);
  uint64_t v63 = *(void *)(a2 + 392);
  uint64_t v62 = *(void *)(a2 + 400);
  uint64_t v61 = *(void *)(a2 + 408);
  uint64_t v60 = *(void *)(a2 + 416);
  uint64_t v59 = *(void *)(a2 + 424);
  uint64_t v58 = *(void *)(a2 + 432);
  uint64_t v57 = *(void *)(a2 + 440);
  uint64_t v56 = *(void *)(a2 + 448);
  uint64_t v55 = *(void *)(a2 + 456);
  uint64_t v54 = *(void *)(a2 + 464);
  uint64_t v53 = *(void *)(a2 + 472);
  uint64_t v52 = *(void *)(a2 + 480);
  uint64_t v51 = *(void *)(a2 + 488);
  uint64_t v50 = *(void *)(a2 + 496);
  uint64_t v49 = *(void *)(a2 + 504);
  uint64_t v48 = *(void *)(a2 + 512);
  uint64_t v47 = *(void *)(a2 + 520);
  uint64_t v46 = *(void *)(a2 + 528);
  uint64_t v45 = *(void *)(a2 + 536);
  uint64_t v44 = *(void *)(a2 + 544);
  uint64_t v43 = *(void *)(a2 + 552);
  uint64_t v42 = *(void *)(a2 + 560);
  uint64_t v41 = *(void *)(a2 + 568);
  uint64_t v40 = *(void *)(a2 + 576);
  uint64_t v39 = *(void *)(a2 + 584);
  uint64_t v38 = *(void *)(a2 + 592);
  uint64_t v37 = *(void *)(a2 + 600);
  uint64_t v36 = *(void *)(a2 + 608);
  uint64_t v35 = *(void *)(a2 + 616);
  uint64_t v34 = *(void *)(a2 + 624);
  uint64_t v21 = *(void *)(a2 + 632);
  uint64_t v3 = *(void *)(a2 + 640);
  uint64_t v4 = *(void *)(a2 + 648);
  uint64_t v5 = *(void *)(a2 + 656);
  uint64_t v6 = *(void *)(a2 + 664);
  uint64_t v7 = *(void *)(a2 + 672);
  uint64_t v8 = *(void *)(a2 + 680);
  uint64_t v9 = *(void *)(a2 + 688);
  uint64_t v22 = *(void *)(a2 + 696);
  long long v23 = *(_OWORD *)(a2 + 704);
  long long v24 = *(_OWORD *)(a2 + 720);
  long long v25 = *(_OWORD *)(a2 + 736);
  long long v26 = *(_OWORD *)(a2 + 752);
  long long v27 = *(_OWORD *)(a2 + 768);
  long long v28 = *(_OWORD *)(a2 + 784);
  long long v29 = *(_OWORD *)(a2 + 800);
  uint64_t v30 = *(void *)(a2 + 816);
  uint64_t v31 = *(void *)(a2 + 824);
  __int16 v32 = *(_WORD *)(a2 + 836);
  int v33 = *(_DWORD *)(a2 + 832);
  uint64_t v10 = *(void *)(a2 + 232);
  uint64_t v11 = *(void *)(a2 + 216);
  sub_100098C10(*(void *)a2, v115, v111, v109, v107, v105, v104, v103, v102, v101, v100, v99, v98, v97, v96, v95, v94, v93, v92,
    v91,
    v90,
    v89,
    v88,
    v87);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  *(void *)a1 = v113;
  *(void *)(a1 + 8) = v115;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v111;
  *(void *)(a1 + 24) = v109;
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v107;
  *(void *)(a1 + 40) = v105;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v104;
  *(void *)(a1 + 56) = v103;
  long long v114 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)long long v116 = *(_OWORD *)(a1 + 64);
  *(void *)(a1 + 64) = v102;
  *(void *)(a1 + 72) = v101;
  *(void *)(a1 + 80) = v100;
  *(void *)(a1 + 88) = v99;
  long long v110 = *(_OWORD *)(a1 + 112);
  long long v112 = *(_OWORD *)(a1 + 96);
  *(void *)(a1 + 96) = v98;
  *(void *)(a1 + 104) = v97;
  *(void *)(a1 + 112) = v96;
  *(void *)(a1 + 120) = v95;
  long long v106 = *(_OWORD *)(a1 + 144);
  long long v108 = *(_OWORD *)(a1 + 128);
  *(void *)(a1 + 128) = v94;
  *(void *)(a1 + 136) = v93;
  *(void *)(a1 + 144) = v92;
  *(void *)(a1 + 152) = v91;
  *(void *)(a1 + 160) = v90;
  *(void *)(a1 + 168) = v89;
  *(void *)(a1 + 176) = v88;
  *(void *)(a1 + 184) = v87;
  *(void *)(a1 + 192) = v86;
  *(void *)(a1 + 200) = v85;
  *(void *)(a1 + 208) = v84;
  *(void *)(a1 + 216) = v11;
  *(void *)(a1 + 224) = v83;
  *(void *)(a1 + 232) = v10;
  *(void *)(a1 + 240) = v82;
  *(void *)(a1 + 248) = v81;
  *(void *)(a1 + 256) = v80;
  *(void *)(a1 + 264) = v79;
  *(void *)(a1 + 272) = v78;
  *(void *)(a1 + 280) = v77;
  *(void *)(a1 + 288) = v76;
  *(void *)(a1 + 296) = v75;
  *(void *)(a1 + 304) = v74;
  *(void *)(a1 + 312) = v73;
  *(void *)(a1 + 320) = v72;
  *(void *)(a1 + 328) = v71;
  *(void *)(a1 + 336) = v70;
  *(void *)(a1 + 344) = v69;
  *(void *)(a1 + 352) = v68;
  *(void *)(a1 + 360) = v67;
  *(void *)(a1 + 368) = v66;
  *(void *)(a1 + 376) = v65;
  *(void *)(a1 + 384) = v64;
  *(void *)(a1 + 392) = v63;
  *(void *)(a1 + 400) = v62;
  *(void *)(a1 + 408) = v61;
  *(void *)(a1 + 416) = v60;
  *(void *)(a1 + 424) = v59;
  *(void *)(a1 + 432) = v58;
  *(void *)(a1 + 440) = v57;
  *(void *)(a1 + 448) = v56;
  *(void *)(a1 + 456) = v55;
  *(void *)(a1 + 464) = v54;
  *(void *)(a1 + 472) = v53;
  *(void *)(a1 + 480) = v52;
  *(void *)(a1 + 488) = v51;
  *(void *)(a1 + 496) = v50;
  *(void *)(a1 + 504) = v49;
  *(void *)(a1 + 512) = v48;
  *(void *)(a1 + 520) = v47;
  *(void *)(a1 + 528) = v46;
  *(void *)(a1 + 536) = v45;
  *(void *)(a1 + 544) = v44;
  *(void *)(a1 + 552) = v43;
  *(void *)(a1 + 560) = v42;
  *(void *)(a1 + 568) = v41;
  *(void *)(a1 + 576) = v40;
  *(void *)(a1 + 584) = v39;
  *(void *)(a1 + 592) = v38;
  *(void *)(a1 + 600) = v37;
  *(void *)(a1 + 608) = v36;
  *(void *)(a1 + 616) = v35;
  *(void *)(a1 + 624) = v34;
  *(void *)(a1 + 632) = v21;
  *(void *)(a1 + 640) = v3;
  *(void *)(a1 + 648) = v4;
  *(void *)(a1 + 656) = v5;
  *(void *)(a1 + 664) = v6;
  *(void *)(a1 + 672) = v7;
  *(void *)(a1 + 680) = v8;
  *(void *)(a1 + 688) = v9;
  *(void *)(a1 + 696) = v22;
  *(_OWORD *)(a1 + 704) = v23;
  *(_OWORD *)(a1 + 720) = v24;
  *(_OWORD *)(a1 + 736) = v25;
  *(_OWORD *)(a1 + 752) = v26;
  *(_OWORD *)(a1 + 768) = v27;
  *(_OWORD *)(a1 + 784) = v28;
  *(_OWORD *)(a1 + 800) = v29;
  *(void *)(a1 + 816) = v30;
  *(void *)(a1 + 824) = v31;
  *(_WORD *)(a1 + 836) = v32;
  *(_DWORD *)(a1 + 832) = v33;
  sub_100027F20(v12, v13, v14, v15, v16, v17, v18, v19, v116[0], v116[1], v114, *((uint64_t *)&v114 + 1), v112, *((uint64_t *)&v112 + 1), v110, *((uint64_t *)&v110 + 1), v108, *((uint64_t *)&v108 + 1), v106,
    *((uint64_t *)&v106 + 1));
  return a1;
}

void *initializeWithTake for MeasurementDetail(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x346uLL);
}

uint64_t assignWithTake for MeasurementDetail(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v60 = *(_OWORD *)(a1 + 80);
  long long v61 = *(_OWORD *)(a1 + 64);
  long long v58 = *(_OWORD *)(a1 + 112);
  long long v59 = *(_OWORD *)(a1 + 96);
  long long v56 = *(_OWORD *)(a1 + 144);
  long long v57 = *(_OWORD *)(a1 + 128);
  long long v12 = *(_OWORD *)(a2 + 16);
  long long v13 = *(_OWORD *)(a2 + 32);
  long long v14 = *(_OWORD *)(a2 + 48);
  long long v15 = *(_OWORD *)(a2 + 64);
  long long v16 = *(_OWORD *)(a2 + 80);
  long long v17 = *(_OWORD *)(a2 + 96);
  long long v18 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  long long v19 = *(_OWORD *)(a2 + 128);
  long long v20 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 32) = v13;
  *(_OWORD *)(a1 + 48) = v14;
  long long v21 = *(_OWORD *)(a2 + 160);
  long long v22 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 64) = v15;
  *(_OWORD *)(a1 + 80) = v16;
  long long v23 = *(_OWORD *)(a2 + 192);
  long long v24 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 96) = v17;
  *(_OWORD *)(a1 + 112) = v18;
  long long v25 = *(_OWORD *)(a2 + 224);
  long long v26 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 128) = v19;
  *(_OWORD *)(a1 + 144) = v20;
  long long v27 = *(_OWORD *)(a2 + 256);
  long long v28 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 160) = v21;
  *(_OWORD *)(a1 + 176) = v22;
  long long v29 = *(_OWORD *)(a2 + 288);
  long long v30 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 192) = v23;
  *(_OWORD *)(a1 + 208) = v24;
  long long v31 = *(_OWORD *)(a2 + 320);
  long long v32 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 224) = v25;
  *(_OWORD *)(a1 + 240) = v26;
  long long v33 = *(_OWORD *)(a2 + 352);
  long long v34 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 256) = v27;
  *(_OWORD *)(a1 + 272) = v28;
  long long v35 = *(_OWORD *)(a2 + 384);
  long long v36 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 288) = v29;
  *(_OWORD *)(a1 + 304) = v30;
  long long v37 = *(_OWORD *)(a2 + 416);
  long long v38 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 320) = v31;
  *(_OWORD *)(a1 + 336) = v32;
  long long v39 = *(_OWORD *)(a2 + 448);
  long long v40 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 352) = v33;
  *(_OWORD *)(a1 + 368) = v34;
  long long v41 = *(_OWORD *)(a2 + 480);
  long long v42 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 384) = v35;
  *(_OWORD *)(a1 + 400) = v36;
  long long v43 = *(_OWORD *)(a2 + 512);
  long long v44 = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 416) = v37;
  *(_OWORD *)(a1 + 432) = v38;
  *(_OWORD *)(a1 + 448) = v39;
  *(_OWORD *)(a1 + 464) = v40;
  *(_OWORD *)(a1 + 480) = v41;
  *(_OWORD *)(a1 + 496) = v42;
  *(_OWORD *)(a1 + 512) = v43;
  *(_OWORD *)(a1 + 528) = v44;
  long long v45 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 560) = v45;
  long long v46 = *(_OWORD *)(a2 + 592);
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 592) = v46;
  long long v47 = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 624) = v47;
  long long v48 = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 656) = v48;
  long long v49 = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = v49;
  long long v50 = *(_OWORD *)(a2 + 720);
  *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 720) = v50;
  long long v51 = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 752) = v51;
  long long v52 = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 784) = v52;
  long long v53 = *(_OWORD *)(a2 + 816);
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 816) = v53;
  int v54 = *(_DWORD *)(a2 + 832);
  *(_WORD *)(a1 + 836) = *(_WORD *)(a2 + 836);
  *(_DWORD *)(a1 + 832) = v54;
  sub_100027F20(v4, v5, v6, v7, v8, v9, v10, v11, v61, *((uint64_t *)&v61 + 1), v60, *((uint64_t *)&v60 + 1), v59, *((uint64_t *)&v59 + 1), v58, *((uint64_t *)&v58 + 1), v57, *((uint64_t *)&v57 + 1), v56,
    *((uint64_t *)&v56 + 1));
  return a1;
}

uint64_t getEnumTagSinglePayload for MeasurementDetail(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 838)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)(a1 + 32) >> 33) & 0x7F | (*(void *)(a1 + 32) >> 41) & 0x7FFF80 | (*(void *)(a1 + 72) >> 18) & 0xC0000000 | (*(void *)(a1 + 72) >> 10) & 0x3F800000;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

void storeEnumTagSinglePayload for MeasurementDetail(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 824) = 0;
    *(_OWORD *)(a1 + 248) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_WORD *)(a1 + 836) = 0;
    *(_DWORD *)(a1 + 832) = 0;
    *(_OWORD *)(a1 + 808) = 0u;
    *(_OWORD *)(a1 + 792) = 0u;
    *(_OWORD *)(a1 + 776) = 0u;
    *(_OWORD *)(a1 + 760) = 0u;
    *(_OWORD *)(a1 + 744) = 0u;
    *(_OWORD *)(a1 + 728) = 0u;
    *(_OWORD *)(a1 + 712) = 0u;
    *(_OWORD *)(a1 + 696) = 0u;
    *(_OWORD *)(a1 + 680) = 0u;
    *(_OWORD *)(a1 + 664) = 0u;
    *(_OWORD *)(a1 + 648) = 0u;
    *(_OWORD *)(a1 + 632) = 0u;
    *(_OWORD *)(a1 + 616) = 0u;
    *(_OWORD *)(a1 + 600) = 0u;
    *(_OWORD *)(a1 + 584) = 0u;
    *(_OWORD *)(a1 + 568) = 0u;
    *(_OWORD *)(a1 + 552) = 0u;
    *(_OWORD *)(a1 + 536) = 0u;
    *(_OWORD *)(a1 + 520) = 0u;
    *(_OWORD *)(a1 + 504) = 0u;
    *(_OWORD *)(a1 + 488) = 0u;
    *(_OWORD *)(a1 + 472) = 0u;
    *(_OWORD *)(a1 + 456) = 0u;
    *(_OWORD *)(a1 + 440) = 0u;
    *(_OWORD *)(a1 + 424) = 0u;
    *(_OWORD *)(a1 + 408) = 0u;
    *(_OWORD *)(a1 + 392) = 0u;
    *(_OWORD *)(a1 + 376) = 0u;
    *(_OWORD *)(a1 + 360) = 0u;
    *(_OWORD *)(a1 + 344) = 0u;
    *(_OWORD *)(a1 + 328) = 0u;
    *(_OWORD *)(a1 + 312) = 0u;
    *(_OWORD *)(a1 + 296) = 0u;
    *(_OWORD *)(a1 + 280) = 0u;
    *(_OWORD *)(a1 + 264) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 838) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return;
      }
LABEL_8:
      unint64_t v3 = -a2;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 32) = (v3 << 41) & 0xFFFF000000000000 | ((v3 & 0x7F) << 33);
      *(_OWORD *)(a1 + 40) = 0u;
      *(_OWORD *)(a1 + 56) = 0u;
      *(void *)(a1 + 72) = (v3 << 18) & 0x3000000000000 | (((v3 >> 23) & 0x7F) << 33);
      bzero((void *)(a1 + 80), 0x2F6uLL);
      return;
    }
    *(unsigned char *)(a1 + 838) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
}

uint64_t sub_1001E8940(uint64_t result, char a2)
{
  uint64_t v2 = a2 & 3;
  uint64_t v3 = *(void *)(result + 72) & 0xFF01FFFFFFFFLL;
  uint64_t v4 = *(void *)(result + 112) & 0xFF01FFFFFFFFLL;
  uint64_t v5 = *(void *)(result + 272) & 0xFF01FFFFFFFFLL;
  uint64_t v6 = *(void *)(result + 312) & 0xFF01FFFFFFFFLL;
  uint64_t v7 = *(void *)(result + 352) & 0xFF01FFFFFFFFLL;
  uint64_t v8 = *(void *)(result + 392) & 0xFF01FFFFFFFFLL;
  uint64_t v9 = *(void *)(result + 432) & 0xFF01FFFFFFFFLL;
  uint64_t v10 = *(void *)(result + 472) & 0xFF01FFFFFFFFLL;
  uint64_t v11 = *(void *)(result + 512) & 0xFF01FFFFFFFFLL;
  uint64_t v12 = *(void *)(result + 552) & 0xFF01FFFFFFFFLL;
  uint64_t v13 = *(void *)(result + 592) & 0xFF01FFFFFFFFLL;
  uint64_t v14 = *(void *)(result + 632) & 0xFF01FFFFFFFFLL;
  uint64_t v15 = *(void *)(result + 672) & 0xFF01FFFFFFFFLL;
  uint64_t v16 = *(void *)(result + 712) & 0xFF01FFFFFFFFLL;
  uint64_t v17 = *(void *)(result + 752) & 0xFF01FFFFFFFFLL;
  uint64_t v18 = *(void *)(result + 792) & 0xFF01FFFFFFFFLL;
  unint64_t v19 = (*(unsigned int *)(result + 832) | ((unint64_t)*(unsigned __int16 *)(result + 836) << 32)) & 0xFFFFFF01FFFFFFFFLL;
  *(void *)(result + 32) &= 0xFF01FFFFFFFFuLL;
  *(void *)(result + 72) = v3;
  *(void *)(result + 112) = v4;
  *(void *)(result + 272) = v5;
  *(void *)(result + 312) = v6;
  *(void *)(result + 352) = v7;
  *(void *)(result + 392) = v8;
  *(void *)(result + 432) = v9;
  *(void *)(result + 472) = v10;
  *(void *)(result + 512) = v11;
  *(void *)(result + 552) = v12;
  *(void *)(result + 592) = v13;
  *(void *)(result + 632) = v14;
  *(void *)(result + 672) = v15;
  *(void *)(result + 712) = v16;
  *(void *)(result + 752) = v17;
  *(void *)(result + 792) = v18;
  *(_DWORD *)(result + 832) = v19;
  *(_WORD *)(result + 836) = (v19 | (v2 << 38)) >> 32;
  return result;
}

ValueMetadata *type metadata accessor for MeasurementDetail()
{
  return &type metadata for MeasurementDetail;
}

uint64_t destroy for ObjectTypeDetails()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ObjectTypeDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_WORD *)(a1 + 76) = *(_WORD *)(a2 + 76);
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  uint64_t v10 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v10;
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_WORD *)(a1 + 156) = *(_WORD *)(a2 + 156);
  uint64_t v11 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v11;
  uint64_t v12 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v12;
  int v13 = *(_DWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 196) = *(unsigned char *)(a2 + 196);
  *(_DWORD *)(a1 + 192) = v13;
  *(unsigned char *)(a1 + 197) = *(unsigned char *)(a2 + 197);
  uint64_t v14 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v14;
  uint64_t v15 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v15;
  int v16 = *(_DWORD *)(a2 + 232);
  *(unsigned char *)(a1 + 236) = *(unsigned char *)(a2 + 236);
  *(_DWORD *)(a1 + 232) = v16;
  *(unsigned char *)(a1 + 237) = *(unsigned char *)(a2 + 237);
  uint64_t v17 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v17;
  uint64_t v18 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v18;
  int v19 = *(_DWORD *)(a2 + 272);
  *(unsigned char *)(a1 + 276) = *(unsigned char *)(a2 + 276);
  *(_DWORD *)(a1 + 272) = v19;
  *(unsigned char *)(a1 + 277) = *(unsigned char *)(a2 + 277);
  uint64_t v20 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v20;
  uint64_t v21 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = v21;
  int v22 = *(_DWORD *)(a2 + 312);
  *(unsigned char *)(a1 + 316) = *(unsigned char *)(a2 + 316);
  *(_DWORD *)(a1 + 312) = v22;
  *(unsigned char *)(a1 + 317) = *(unsigned char *)(a2 + 317);
  uint64_t v23 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v23;
  uint64_t v24 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v24;
  int v25 = *(_DWORD *)(a2 + 352);
  *(unsigned char *)(a1 + 356) = *(unsigned char *)(a2 + 356);
  *(_DWORD *)(a1 + 352) = v25;
  *(unsigned char *)(a1 + 357) = *(unsigned char *)(a2 + 357);
  uint64_t v26 = *(void *)(a2 + 368);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = v26;
  uint64_t v27 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v27;
  int v28 = *(_DWORD *)(a2 + 392);
  *(unsigned char *)(a1 + 396) = *(unsigned char *)(a2 + 396);
  *(_DWORD *)(a1 + 392) = v28;
  *(unsigned char *)(a1 + 397) = *(unsigned char *)(a2 + 397);
  uint64_t v29 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = v29;
  uint64_t v30 = *(void *)(a2 + 424);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = v30;
  int v31 = *(_DWORD *)(a2 + 432);
  *(unsigned char *)(a1 + 436) = *(unsigned char *)(a2 + 436);
  *(_DWORD *)(a1 + 432) = v31;
  *(unsigned char *)(a1 + 437) = *(unsigned char *)(a2 + 437);
  uint64_t v32 = *(void *)(a2 + 448);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = v32;
  uint64_t v33 = *(void *)(a2 + 464);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = v33;
  int v34 = *(_DWORD *)(a2 + 472);
  *(unsigned char *)(a1 + 476) = *(unsigned char *)(a2 + 476);
  *(_DWORD *)(a1 + 472) = v34;
  *(unsigned char *)(a1 + 477) = *(unsigned char *)(a2 + 477);
  uint64_t v35 = *(void *)(a2 + 488);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = v35;
  uint64_t v36 = *(void *)(a2 + 504);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = v36;
  int v37 = *(_DWORD *)(a2 + 512);
  *(unsigned char *)(a1 + 516) = *(unsigned char *)(a2 + 516);
  *(_DWORD *)(a1 + 512) = v37;
  *(unsigned char *)(a1 + 517) = *(unsigned char *)(a2 + 517);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(unsigned char *)(a1 + 556) = *(unsigned char *)(a2 + 556);
  *(_DWORD *)(a1 + 552) = *(_DWORD *)(a2 + 552);
  *(unsigned char *)(a1 + 557) = *(unsigned char *)(a2 + 557);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(unsigned char *)(a1 + 596) = *(unsigned char *)(a2 + 596);
  *(_DWORD *)(a1 + 592) = *(_DWORD *)(a2 + 592);
  *(unsigned char *)(a1 + 597) = *(unsigned char *)(a2 + 597);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(unsigned char *)(a1 + 636) = *(unsigned char *)(a2 + 636);
  *(_DWORD *)(a1 + 632) = *(_DWORD *)(a2 + 632);
  *(unsigned char *)(a1 + 637) = *(unsigned char *)(a2 + 637);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(unsigned char *)(a1 + 676) = *(unsigned char *)(a2 + 676);
  *(_DWORD *)(a1 + 672) = *(_DWORD *)(a2 + 672);
  *(unsigned char *)(a1 + 677) = *(unsigned char *)(a2 + 677);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(unsigned char *)(a1 + 716) = *(unsigned char *)(a2 + 716);
  *(_DWORD *)(a1 + 712) = *(_DWORD *)(a2 + 712);
  *(unsigned char *)(a1 + 717) = *(unsigned char *)(a2 + 717);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  *(unsigned char *)(a1 + 756) = *(unsigned char *)(a2 + 756);
  *(_DWORD *)(a1 + 752) = *(_DWORD *)(a2 + 752);
  *(unsigned char *)(a1 + 757) = *(unsigned char *)(a2 + 757);
  *(void *)(a1 + 760) = *(void *)(a2 + 760);
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  *(unsigned char *)(a1 + 796) = *(unsigned char *)(a2 + 796);
  *(_DWORD *)(a1 + 792) = *(_DWORD *)(a2 + 792);
  *(unsigned char *)(a1 + 797) = *(unsigned char *)(a2 + 797);
  *(void *)(a1 + 800) = *(void *)(a2 + 800);
  *(void *)(a1 + 816) = *(void *)(a2 + 816);
  *(unsigned char *)(a1 + 836) = *(unsigned char *)(a2 + 836);
  *(_DWORD *)(a1 + 832) = *(_DWORD *)(a2 + 832);
  *(unsigned char *)(a1 + 837) = *(unsigned char *)(a2 + 837);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  *(void *)(a1 + 808) = *(void *)(a2 + 808);
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ObjectTypeDetails(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 37) = *(unsigned char *)(a2 + 37);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v5 = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v5;
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v6 = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = v6;
  *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v7 = *(_DWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 156) = *(unsigned char *)(a2 + 156);
  *(_DWORD *)(a1 + 152) = v7;
  *(unsigned char *)(a1 + 157) = *(unsigned char *)(a2 + 157);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v8 = *(_DWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 196) = *(unsigned char *)(a2 + 196);
  *(_DWORD *)(a1 + 192) = v8;
  *(unsigned char *)(a1 + 197) = *(unsigned char *)(a2 + 197);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v9 = *(_DWORD *)(a2 + 232);
  *(unsigned char *)(a1 + 236) = *(unsigned char *)(a2 + 236);
  *(_DWORD *)(a1 + 232) = v9;
  *(unsigned char *)(a1 + 237) = *(unsigned char *)(a2 + 237);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v10 = *(_DWORD *)(a2 + 272);
  *(unsigned char *)(a1 + 276) = *(unsigned char *)(a2 + 276);
  *(_DWORD *)(a1 + 272) = v10;
  *(unsigned char *)(a1 + 277) = *(unsigned char *)(a2 + 277);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v11 = *(_DWORD *)(a2 + 312);
  *(unsigned char *)(a1 + 316) = *(unsigned char *)(a2 + 316);
  *(_DWORD *)(a1 + 312) = v11;
  *(unsigned char *)(a1 + 317) = *(unsigned char *)(a2 + 317);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v12 = *(_DWORD *)(a2 + 352);
  *(unsigned char *)(a1 + 356) = *(unsigned char *)(a2 + 356);
  *(_DWORD *)(a1 + 352) = v12;
  *(unsigned char *)(a1 + 357) = *(unsigned char *)(a2 + 357);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v13 = *(_DWORD *)(a2 + 392);
  *(unsigned char *)(a1 + 396) = *(unsigned char *)(a2 + 396);
  *(_DWORD *)(a1 + 392) = v13;
  *(unsigned char *)(a1 + 397) = *(unsigned char *)(a2 + 397);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v14 = *(_DWORD *)(a2 + 432);
  *(unsigned char *)(a1 + 436) = *(unsigned char *)(a2 + 436);
  *(_DWORD *)(a1 + 432) = v14;
  *(unsigned char *)(a1 + 437) = *(unsigned char *)(a2 + 437);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v15 = *(_DWORD *)(a2 + 472);
  *(unsigned char *)(a1 + 476) = *(unsigned char *)(a2 + 476);
  *(_DWORD *)(a1 + 472) = v15;
  *(unsigned char *)(a1 + 477) = *(unsigned char *)(a2 + 477);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v16 = *(_DWORD *)(a2 + 512);
  *(unsigned char *)(a1 + 516) = *(unsigned char *)(a2 + 516);
  *(_DWORD *)(a1 + 512) = v16;
  *(unsigned char *)(a1 + 517) = *(unsigned char *)(a2 + 517);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v17 = *(_DWORD *)(a2 + 552);
  *(unsigned char *)(a1 + 556) = *(unsigned char *)(a2 + 556);
  *(_DWORD *)(a1 + 552) = v17;
  *(unsigned char *)(a1 + 557) = *(unsigned char *)(a2 + 557);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v18 = *(_DWORD *)(a2 + 592);
  *(unsigned char *)(a1 + 596) = *(unsigned char *)(a2 + 596);
  *(_DWORD *)(a1 + 592) = v18;
  *(unsigned char *)(a1 + 597) = *(unsigned char *)(a2 + 597);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v19 = *(_DWORD *)(a2 + 632);
  *(unsigned char *)(a1 + 636) = *(unsigned char *)(a2 + 636);
  *(_DWORD *)(a1 + 632) = v19;
  *(unsigned char *)(a1 + 637) = *(unsigned char *)(a2 + 637);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v20 = *(_DWORD *)(a2 + 672);
  *(unsigned char *)(a1 + 676) = *(unsigned char *)(a2 + 676);
  *(_DWORD *)(a1 + 672) = v20;
  *(unsigned char *)(a1 + 677) = *(unsigned char *)(a2 + 677);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v21 = *(_DWORD *)(a2 + 712);
  *(unsigned char *)(a1 + 716) = *(unsigned char *)(a2 + 716);
  *(_DWORD *)(a1 + 712) = v21;
  *(unsigned char *)(a1 + 717) = *(unsigned char *)(a2 + 717);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v22 = *(_DWORD *)(a2 + 752);
  *(unsigned char *)(a1 + 756) = *(unsigned char *)(a2 + 756);
  *(_DWORD *)(a1 + 752) = v22;
  *(unsigned char *)(a1 + 757) = *(unsigned char *)(a2 + 757);
  *(void *)(a1 + 760) = *(void *)(a2 + 760);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v23 = *(_DWORD *)(a2 + 792);
  *(unsigned char *)(a1 + 796) = *(unsigned char *)(a2 + 796);
  *(_DWORD *)(a1 + 792) = v23;
  *(unsigned char *)(a1 + 797) = *(unsigned char *)(a2 + 797);
  *(void *)(a1 + 800) = *(void *)(a2 + 800);
  *(void *)(a1 + 808) = *(void *)(a2 + 808);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 816) = *(void *)(a2 + 816);
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v24 = *(_DWORD *)(a2 + 832);
  *(unsigned char *)(a1 + 836) = *(unsigned char *)(a2 + 836);
  *(_DWORD *)(a1 + 832) = v24;
  *(unsigned char *)(a1 + 837) = *(unsigned char *)(a2 + 837);
  return a1;
}

void *initializeWithTake for ObjectTypeDetails(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x346uLL);
}

uint64_t assignWithTake for ObjectTypeDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_WORD *)(a1 + 76) = *(_WORD *)(a2 + 76);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_WORD *)(a1 + 116) = *(_WORD *)(a2 + 116);
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_WORD *)(a1 + 156) = *(_WORD *)(a2 + 156);
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v13;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  *(_WORD *)(a1 + 196) = *(_WORD *)(a2 + 196);
  uint64_t v14 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v15;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
  *(_WORD *)(a1 + 236) = *(_WORD *)(a2 + 236);
  uint64_t v16 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v17;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_WORD *)(a1 + 276) = *(_WORD *)(a2 + 276);
  uint64_t v18 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = v19;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
  *(_WORD *)(a1 + 316) = *(_WORD *)(a2 + 316);
  uint64_t v20 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v21;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 352) = *(_DWORD *)(a2 + 352);
  *(_WORD *)(a1 + 356) = *(_WORD *)(a2 + 356);
  uint64_t v22 = *(void *)(a2 + 368);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v23;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 392) = *(_DWORD *)(a2 + 392);
  *(_WORD *)(a1 + 396) = *(_WORD *)(a2 + 396);
  uint64_t v24 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(a2 + 424);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = v25;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 432) = *(_DWORD *)(a2 + 432);
  *(_WORD *)(a1 + 436) = *(_WORD *)(a2 + 436);
  uint64_t v26 = *(void *)(a2 + 448);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(a2 + 464);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = v27;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 472) = *(_DWORD *)(a2 + 472);
  *(_WORD *)(a1 + 476) = *(_WORD *)(a2 + 476);
  uint64_t v28 = *(void *)(a2 + 488);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(a2 + 504);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = v29;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 512) = *(_DWORD *)(a2 + 512);
  *(_WORD *)(a1 + 516) = *(_WORD *)(a2 + 516);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 552) = *(_DWORD *)(a2 + 552);
  *(_WORD *)(a1 + 556) = *(_WORD *)(a2 + 556);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 592) = *(_DWORD *)(a2 + 592);
  *(_WORD *)(a1 + 596) = *(_WORD *)(a2 + 596);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 632) = *(_DWORD *)(a2 + 632);
  *(_WORD *)(a1 + 636) = *(_WORD *)(a2 + 636);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 672) = *(_DWORD *)(a2 + 672);
  *(_WORD *)(a1 + 676) = *(_WORD *)(a2 + 676);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 712) = *(_DWORD *)(a2 + 712);
  *(_WORD *)(a1 + 716) = *(_WORD *)(a2 + 716);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 752) = *(_DWORD *)(a2 + 752);
  *(_WORD *)(a1 + 756) = *(_WORD *)(a2 + 756);
  *(void *)(a1 + 760) = *(void *)(a2 + 760);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 792) = *(_DWORD *)(a2 + 792);
  *(_WORD *)(a1 + 796) = *(_WORD *)(a2 + 796);
  *(void *)(a1 + 800) = *(void *)(a2 + 800);
  *(void *)(a1 + 808) = *(void *)(a2 + 808);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 816) = *(void *)(a2 + 816);
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 832) = *(_DWORD *)(a2 + 832);
  *(_WORD *)(a1 + 836) = *(_WORD *)(a2 + 836);
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectTypeDetails(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 838)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectTypeDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 824) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 836) = 0;
    *(_DWORD *)(result + 832) = 0;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 838) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 838) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectTypeDetails()
{
  return &type metadata for ObjectTypeDetails;
}

uint64_t destroy for SurfaceTypeDetails()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SurfaceTypeDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_WORD *)(a1 + 76) = *(_WORD *)(a2 + 76);
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  uint64_t v10 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v10;
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_WORD *)(a1 + 156) = *(_WORD *)(a2 + 156);
  uint64_t v11 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v11;
  uint64_t v12 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v12;
  int v13 = *(_DWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 196) = *(unsigned char *)(a2 + 196);
  *(_DWORD *)(a1 + 192) = v13;
  *(unsigned char *)(a1 + 197) = *(unsigned char *)(a2 + 197);
  uint64_t v14 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v14;
  uint64_t v15 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v15;
  int v16 = *(_DWORD *)(a2 + 232);
  *(unsigned char *)(a1 + 236) = *(unsigned char *)(a2 + 236);
  *(_DWORD *)(a1 + 232) = v16;
  *(unsigned char *)(a1 + 237) = *(unsigned char *)(a2 + 237);
  uint64_t v17 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v17;
  uint64_t v18 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v18;
  int v19 = *(_DWORD *)(a2 + 272);
  *(unsigned char *)(a1 + 276) = *(unsigned char *)(a2 + 276);
  *(_DWORD *)(a1 + 272) = v19;
  *(unsigned char *)(a1 + 277) = *(unsigned char *)(a2 + 277);
  uint64_t v20 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v20;
  uint64_t v21 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = v21;
  int v22 = *(_DWORD *)(a2 + 312);
  *(unsigned char *)(a1 + 316) = *(unsigned char *)(a2 + 316);
  *(_DWORD *)(a1 + 312) = v22;
  *(unsigned char *)(a1 + 317) = *(unsigned char *)(a2 + 317);
  uint64_t v23 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v23;
  uint64_t v24 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v24;
  int v25 = *(_DWORD *)(a2 + 352);
  *(unsigned char *)(a1 + 356) = *(unsigned char *)(a2 + 356);
  *(_DWORD *)(a1 + 352) = v25;
  *(unsigned char *)(a1 + 357) = *(unsigned char *)(a2 + 357);
  uint64_t v26 = *(void *)(a2 + 368);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = v26;
  uint64_t v27 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v27;
  int v28 = *(_DWORD *)(a2 + 392);
  *(unsigned char *)(a1 + 396) = *(unsigned char *)(a2 + 396);
  *(_DWORD *)(a1 + 392) = v28;
  *(unsigned char *)(a1 + 397) = *(unsigned char *)(a2 + 397);
  uint64_t v29 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = v29;
  uint64_t v30 = *(void *)(a2 + 424);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = v30;
  int v31 = *(_DWORD *)(a2 + 432);
  *(unsigned char *)(a1 + 436) = *(unsigned char *)(a2 + 436);
  *(_DWORD *)(a1 + 432) = v31;
  *(unsigned char *)(a1 + 437) = *(unsigned char *)(a2 + 437);
  uint64_t v32 = *(void *)(a2 + 448);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = v32;
  uint64_t v33 = *(void *)(a2 + 464);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = v33;
  int v34 = *(_DWORD *)(a2 + 472);
  *(unsigned char *)(a1 + 476) = *(unsigned char *)(a2 + 476);
  *(_DWORD *)(a1 + 472) = v34;
  *(unsigned char *)(a1 + 477) = *(unsigned char *)(a2 + 477);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SurfaceTypeDetails(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 37) = *(unsigned char *)(a2 + 37);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v5 = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v5;
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v6 = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = v6;
  *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v7 = *(_DWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 156) = *(unsigned char *)(a2 + 156);
  *(_DWORD *)(a1 + 152) = v7;
  *(unsigned char *)(a1 + 157) = *(unsigned char *)(a2 + 157);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v8 = *(_DWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 196) = *(unsigned char *)(a2 + 196);
  *(_DWORD *)(a1 + 192) = v8;
  *(unsigned char *)(a1 + 197) = *(unsigned char *)(a2 + 197);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v9 = *(_DWORD *)(a2 + 232);
  *(unsigned char *)(a1 + 236) = *(unsigned char *)(a2 + 236);
  *(_DWORD *)(a1 + 232) = v9;
  *(unsigned char *)(a1 + 237) = *(unsigned char *)(a2 + 237);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v10 = *(_DWORD *)(a2 + 272);
  *(unsigned char *)(a1 + 276) = *(unsigned char *)(a2 + 276);
  *(_DWORD *)(a1 + 272) = v10;
  *(unsigned char *)(a1 + 277) = *(unsigned char *)(a2 + 277);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v11 = *(_DWORD *)(a2 + 312);
  *(unsigned char *)(a1 + 316) = *(unsigned char *)(a2 + 316);
  *(_DWORD *)(a1 + 312) = v11;
  *(unsigned char *)(a1 + 317) = *(unsigned char *)(a2 + 317);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v12 = *(_DWORD *)(a2 + 352);
  *(unsigned char *)(a1 + 356) = *(unsigned char *)(a2 + 356);
  *(_DWORD *)(a1 + 352) = v12;
  *(unsigned char *)(a1 + 357) = *(unsigned char *)(a2 + 357);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v13 = *(_DWORD *)(a2 + 392);
  *(unsigned char *)(a1 + 396) = *(unsigned char *)(a2 + 396);
  *(_DWORD *)(a1 + 392) = v13;
  *(unsigned char *)(a1 + 397) = *(unsigned char *)(a2 + 397);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v14 = *(_DWORD *)(a2 + 432);
  *(unsigned char *)(a1 + 436) = *(unsigned char *)(a2 + 436);
  *(_DWORD *)(a1 + 432) = v14;
  *(unsigned char *)(a1 + 437) = *(unsigned char *)(a2 + 437);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v15 = *(_DWORD *)(a2 + 472);
  *(unsigned char *)(a1 + 476) = *(unsigned char *)(a2 + 476);
  *(_DWORD *)(a1 + 472) = v15;
  *(unsigned char *)(a1 + 477) = *(unsigned char *)(a2 + 477);
  return a1;
}

void *initializeWithTake for SurfaceTypeDetails(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1DEuLL);
}

uint64_t assignWithTake for SurfaceTypeDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_WORD *)(a1 + 76) = *(_WORD *)(a2 + 76);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_WORD *)(a1 + 116) = *(_WORD *)(a2 + 116);
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_WORD *)(a1 + 156) = *(_WORD *)(a2 + 156);
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v13;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  *(_WORD *)(a1 + 196) = *(_WORD *)(a2 + 196);
  uint64_t v14 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v15;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
  *(_WORD *)(a1 + 236) = *(_WORD *)(a2 + 236);
  uint64_t v16 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v17;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_WORD *)(a1 + 276) = *(_WORD *)(a2 + 276);
  uint64_t v18 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = v19;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
  *(_WORD *)(a1 + 316) = *(_WORD *)(a2 + 316);
  uint64_t v20 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 344);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = v21;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 352) = *(_DWORD *)(a2 + 352);
  *(_WORD *)(a1 + 356) = *(_WORD *)(a2 + 356);
  uint64_t v22 = *(void *)(a2 + 368);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v23;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 392) = *(_DWORD *)(a2 + 392);
  *(_WORD *)(a1 + 396) = *(_WORD *)(a2 + 396);
  uint64_t v24 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(a2 + 424);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = v25;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 432) = *(_DWORD *)(a2 + 432);
  *(_WORD *)(a1 + 436) = *(_WORD *)(a2 + 436);
  uint64_t v26 = *(void *)(a2 + 448);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(a2 + 464);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = v27;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 472) = *(_DWORD *)(a2 + 472);
  *(_WORD *)(a1 + 476) = *(_WORD *)(a2 + 476);
  return a1;
}

uint64_t getEnumTagSinglePayload for SurfaceTypeDetails(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 478)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SurfaceTypeDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 476) = 0;
    *(_DWORD *)(result + 472) = 0;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 478) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 478) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SurfaceTypeDetails()
{
  return &type metadata for SurfaceTypeDetails;
}

uint64_t destroy for LineTypeDetails(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 152);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for LineTypeDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_WORD *)(a1 + 76) = *(_WORD *)(a2 + 76);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  uint64_t v10 = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10)
  {
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v10;
    uint64_t v11 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = v11;
    *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
    *(_WORD *)(a1 + 180) = *(_WORD *)(a2 + 180);
    uint64_t v12 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = v12;
    uint64_t v13 = *(void *)(a2 + 208);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = v13;
    *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
    *(_WORD *)(a1 + 220) = *(_WORD *)(a2 + 220);
    uint64_t v14 = *(void *)(a2 + 232);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = v14;
    uint64_t v15 = *(void *)(a2 + 248);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = v15;
    *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
    *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
    *(unsigned char *)(a1 + 261) = *(unsigned char *)(a2 + 261);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v16 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v16;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(void *)(a1 + 254) = *(void *)(a2 + 254);
    long long v17 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v17;
    long long v18 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v18;
  }
  *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
  *(unsigned char *)(a1 + 268) = *(unsigned char *)(a2 + 268);
  return a1;
}

uint64_t assignWithCopy for LineTypeDetails(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 37) = *(unsigned char *)(a2 + 37);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v5 = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v5;
  *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v6 = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = v6;
  *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  uint64_t v7 = (_OWORD *)(a1 + 144);
  uint64_t v8 = (long long *)(a2 + 144);
  uint64_t v9 = *(void *)(a2 + 152);
  if (*(void *)(a1 + 152))
  {
    if (v9)
    {
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v10 = *(_DWORD *)(a2 + 176);
      *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
      *(_DWORD *)(a1 + 176) = v10;
      *(unsigned char *)(a1 + 181) = *(unsigned char *)(a2 + 181);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v11 = *(_DWORD *)(a2 + 216);
      *(unsigned char *)(a1 + 220) = *(unsigned char *)(a2 + 220);
      *(_DWORD *)(a1 + 216) = v11;
      *(unsigned char *)(a1 + 221) = *(unsigned char *)(a2 + 221);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v12 = *(_DWORD *)(a2 + 256);
      *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
      *(_DWORD *)(a1 + 256) = v12;
      *(unsigned char *)(a1 + 261) = *(unsigned char *)(a2 + 261);
    }
    else
    {
      sub_1001EB104(a1 + 144);
      long long v16 = *(_OWORD *)(a2 + 192);
      long long v18 = *v8;
      long long v17 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 192) = v16;
      *uint64_t v7 = v18;
      *(_OWORD *)(a1 + 160) = v17;
      long long v20 = *(_OWORD *)(a2 + 224);
      long long v19 = *(_OWORD *)(a2 + 240);
      long long v21 = *(_OWORD *)(a2 + 208);
      *(void *)(a1 + 254) = *(void *)(a2 + 254);
      *(_OWORD *)(a1 + 224) = v20;
      *(_OWORD *)(a1 + 240) = v19;
      *(_OWORD *)(a1 + 208) = v21;
    }
  }
  else if (v9)
  {
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    int v13 = *(_DWORD *)(a2 + 176);
    *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
    *(_DWORD *)(a1 + 176) = v13;
    *(unsigned char *)(a1 + 181) = *(unsigned char *)(a2 + 181);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    int v14 = *(_DWORD *)(a2 + 216);
    *(unsigned char *)(a1 + 220) = *(unsigned char *)(a2 + 220);
    *(_DWORD *)(a1 + 216) = v14;
    *(unsigned char *)(a1 + 221) = *(unsigned char *)(a2 + 221);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    int v15 = *(_DWORD *)(a2 + 256);
    *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
    *(_DWORD *)(a1 + 256) = v15;
    *(unsigned char *)(a1 + 261) = *(unsigned char *)(a2 + 261);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v22 = *v8;
    long long v23 = *(_OWORD *)(a2 + 160);
    long long v24 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v24;
    *uint64_t v7 = v22;
    *(_OWORD *)(a1 + 160) = v23;
    long long v25 = *(_OWORD *)(a2 + 208);
    long long v26 = *(_OWORD *)(a2 + 224);
    long long v27 = *(_OWORD *)(a2 + 240);
    *(void *)(a1 + 254) = *(void *)(a2 + 254);
    *(_OWORD *)(a1 + 224) = v26;
    *(_OWORD *)(a1 + 240) = v27;
    *(_OWORD *)(a1 + 208) = v25;
  }
  int v28 = *(_DWORD *)(a2 + 264);
  *(unsigned char *)(a1 + 268) = *(unsigned char *)(a2 + 268);
  *(_DWORD *)(a1 + 264) = v28;
  return a1;
}

uint64_t sub_1001EB104(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for LineTypeDetails(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x10DuLL);
}

uint64_t assignWithTake for LineTypeDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_WORD *)(a1 + 76) = *(_WORD *)(a2 + 76);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_WORD *)(a1 + 116) = *(_WORD *)(a2 + 116);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  if (!*(void *)(a1 + 152)) {
    goto LABEL_5;
  }
  uint64_t v10 = *(void *)(a2 + 152);
  if (!v10)
  {
    sub_1001EB104(a1 + 144);
LABEL_5:
    long long v16 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v16;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(void *)(a1 + 254) = *(void *)(a2 + 254);
    long long v17 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v17;
    long long v18 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v18;
    goto LABEL_6;
  }
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v11;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(_WORD *)(a1 + 180) = *(_WORD *)(a2 + 180);
  uint64_t v12 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v13;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(_WORD *)(a1 + 220) = *(_WORD *)(a2 + 220);
  uint64_t v14 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v15;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  *(_WORD *)(a1 + 260) = *(_WORD *)(a2 + 260);
LABEL_6:
  *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
  *(unsigned char *)(a1 + 268) = *(unsigned char *)(a2 + 268);
  return a1;
}

uint64_t getEnumTagSinglePayload for LineTypeDetails(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 269)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LineTypeDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 268) = 0;
    *(_DWORD *)(result + 264) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 269) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 269) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LineTypeDetails()
{
  return &type metadata for LineTypeDetails;
}

unsigned char *storeEnumTagSinglePayload for SessionResetEvent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001EB498);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionResetEvent()
{
  return &type metadata for SessionResetEvent;
}

uint64_t sub_1001EB4D0()
{
  uint64_t result = Contexts.UIKit.init()();
  qword_1004F8A98 = result;
  return result;
}

id sub_1001EB4F0@<X0>(void *a1@<X8>)
{
  if (qword_1004C31F8 != -1) {
    swift_once();
  }
  unint64_t v2 = (void *)qword_1004F8A98;
  *a1 = qword_1004F8A98;

  return v2;
}

unint64_t sub_1001EB55C(uint64_t a1)
{
  unint64_t result = sub_1001EB584();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001EB584()
{
  unint64_t result = qword_1004D1D90;
  if (!qword_1004D1D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004D1D90);
  }
  return result;
}

uint64_t sub_1001EB5DC(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC7Measure14TapToRadarView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v10 = OBJC_IVAR____TtC7Measure14TapToRadarView_rtlFormat;
  uint64_t v11 = self;
  uint64_t v12 = v4;
  id v13 = [v11 sharedApplication];
  id v14 = [v13 userInterfaceLayoutDirection];

  v4[v10] = v14 == (id)1;
  v26.receiver = v12;
  v26.super_class = ObjectType;
  id v15 = [super initWithFrame:a1, a2, a3, a4];
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [self imageNamed:v16];

  if (v17)
  {
    [v15 setImage:v17 forState:0];
  }
  [v15 addTarget:v15 action:"fileRadar" forControlEvents:64];
  [v15 sizeToFit];
  uint64_t v18 = self;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v15;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1001EC0A4;
  *(void *)(v20 + 24) = v19;
  v25[4] = sub_100039980;
  v25[5] = v20;
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 1107296256;
  _OWORD v25[2] = sub_1000FA194;
  v25[3] = &unk_100493288;
  long long v21 = _Block_copy(v25);
  id v22 = v15;
  swift_retain();
  swift_release();
  [(id)v18 performWithoutAnimation:v21];
  _Block_release(v21);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v18)
  {
    __break(1u);
  }
  else
  {
    id v24 = [self defaultCenter];
    [v24 addObserver:v22 selector:"updateForCurrentOrientation" name:UIDeviceOrientationDidChangeNotification object:0];
    swift_release();

    return (uint64_t)v22;
  }
  return result;
}

void sub_1001EB904()
{
  uint64_t v1 = v0;
  id v2 = [v0 superview];
  if (v2)
  {
    int v3 = v2;
    [v2 frame];
    CGFloat v5 = v4;
    CGFloat v7 = v6;
    double v9 = v8;
    double v11 = v10;

    if (qword_1004C2E88 != -1) {
      swift_once();
    }
    double v12 = *(double *)&qword_1004F8668;
    id v13 = [self currentDevice];
    id v14 = [v13 orientation];

    double v15 = 0.0;
    switch((unint64_t)v14)
    {
      case 1uLL:
        v33.origin.x = v5;
        v33.origin.y = v7;
        v33.size.width = v9;
        v33.size.height = v11;
        double Height = CGRectGetHeight(v33);
        [v1 frame];
        double v18 = Height + v17 * -0.5 - (v12 + v12);
        if (*((unsigned char *)v1 + OBJC_IVAR____TtC7Measure14TapToRadarView_rtlFormat))
        {
          double v19 = v12;
        }
        else
        {
          [v1 frame];
          double v19 = v9 + v24 * -0.5 - (v12 + v12);
        }
        break;
      case 2uLL:
        double v15 = 3.14159265;
        if (*((unsigned char *)v1 + OBJC_IVAR____TtC7Measure14TapToRadarView_rtlFormat) == 1)
        {
          [v1 frame];
          double v19 = v9 + v20 * -0.5 - (v12 + v12);
        }
        else
        {
          double v19 = v12;
        }
        double v18 = v12;
        break;
      case 3uLL:
        double v18 = v12;
        if ((*((unsigned char *)v1 + OBJC_IVAR____TtC7Measure14TapToRadarView_rtlFormat) & 1) == 0)
        {
          [v1 frame];
          double v18 = v11 + v21 * -0.5 - (v12 + v12);
        }
        double v15 = *(double *)CGFloat.piDiv2.unsafeMutableAddressor();
        double v19 = v12;
        break;
      case 4uLL:
        [v1 frame];
        double v19 = v9 + v22 * -0.5 - (v12 + v12);
        double v23 = -0.0;
        if (*((unsigned char *)v1 + OBJC_IVAR____TtC7Measure14TapToRadarView_rtlFormat)) {
          double v23 = v9;
        }
        double v18 = v12 + v23;
        double v15 = -*(double *)CGFloat.piDiv2.unsafeMutableAddressor();
        break;
      default:
        double v19 = 0.0;
        double v18 = 0.0;
        break;
    }
    sub_100012BE0();
    if (static UIDevice.isIPhone()())
    {
      if ([self jasperAvailable])
      {
        double v25 = *(double *)&qword_1004F8668 * 3.0 + 49.0;
        if (qword_1004C2EE8 != -1) {
          swift_once();
        }
        double v26 = v25 + *(double *)&qword_1004F86D0 + *(double *)&qword_1004F86D0;
      }
      else
      {
        double v26 = *(double *)&qword_1004F8668 + 49.0;
      }
      if (*((unsigned char *)v1 + OBJC_IVAR____TtC7Measure14TapToRadarView_rtlFormat) == 1)
      {
        [v1 frame];
        double v12 = v9 - v27 - v12;
      }
      [v1 frame];
      [v1 setFrame:v12, v11 - v26];
    }
    else
    {
      [v1 frame];
      [v1 setFrame:v19, v18];
    }
    int v28 = self;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v1;
    *(double *)(v29 + 24) = v15;
    v32[4] = sub_1001EC048;
    v32[5] = v29;
    v32[0] = _NSConcreteStackBlock;
    v32[1] = 1107296256;
    v32[2] = sub_100049AB4;
    v32[3] = &unk_100493210;
    uint64_t v30 = _Block_copy(v32);
    id v31 = v1;
    swift_release();
    [v28 animateWithDuration:0 delay:v30 options:0 animations:0.25 completion:0.25];
    _Block_release(v30);
  }
}

void sub_1001EBEEC(void *a1, CGFloat a2)
{
  id v3 = [a1 layer];
  CGAffineTransformMakeRotation((CGAffineTransform *)&v4, a2);
  *(_OWORD *)&m.a = *(_OWORD *)&v4.m11;
  *(_OWORD *)&m.c = *(_OWORD *)&v4.m13;
  *(_OWORD *)&m.tx = *(_OWORD *)&v4.m21;
  CATransform3DMakeAffineTransform(&v4, &m);
  [v3 setTransform:&v4];
}

uint64_t type metadata accessor for TapToRadarView()
{
  return self;
}

uint64_t sub_1001EC010()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001EC048()
{
  sub_1001EBEEC(*(void **)(v0 + 16), *(CGFloat *)(v0 + 24));
}

uint64_t sub_1001EC054(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001EC064()
{
  return swift_release();
}

uint64_t sub_1001EC06C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001EC0A4()
{
}

uint64_t sub_1001EC0C8()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001EC0E0()
{
  qword_1004D1DD0 = 0x404C000000000000;
}

void sub_1001EC0F0()
{
  qword_1004D1DD8 = 0x4028000000000000;
}

void sub_1001EC100()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_sketchView];
  uint64_t v2 = self;
  id v3 = [v2 lightGrayColor];
  [v1 setBackgroundColor:v3];

  id v4 = [self currentTraitCollection];
  id v5 = [v4 preferredContentSizeCategory];

  LOBYTE(v4) = UIContentSizeCategory.isAccessibilityCategory.getter();
  id v122 = v1;
  if ((v4 & 1) == 0)
  {
    uint64_t v87 = *(void **)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_cellTitle];
    uint64_t v88 = self;
    id v89 = [v88 preferredFontForTextStyle:UIFontTextStyleBody];
    id v90 = [v89 fontDescriptor];

    id v91 = [v90 fontDescriptorWithSymbolicTraits:2];
    if (!v91)
    {
LABEL_51:
      __break(1u);
      return;
    }
    id v92 = [v88 fontWithDescriptor:v91 size:0.0];

    [v87 setFont:v92];
    uint64_t v93 = *(void *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_lengthLabels];
    uint64_t v94 = (uint64_t *)(v93 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_marginConstraints);
    swift_beginAccess();
    uint64_t v95 = *v94;
    if ((unint64_t)*v94 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v96 = _CocoaArrayWrapper.endIndex.getter();
      if (!v96) {
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v96 = *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v96) {
        goto LABEL_22;
      }
    }
    if (v96 < 1)
    {
      __break(1u);
      goto LABEL_42;
    }
    for (uint64_t i = 0; i != v96; ++i)
    {
      if ((v95 & 0xC000000000000001) != 0) {
        id v98 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v98 = *(id *)(v95 + 8 * i + 32);
      }
      uint64_t v99 = v98;
      [v98 setConstant:0.0];
    }
LABEL_22:
    swift_bridgeObjectRelease_n();
    uint64_t v100 = *(void *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_widthLabels];
    uint64_t v101 = (uint64_t *)(v100 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_marginConstraints);
    swift_beginAccess();
    uint64_t v102 = *v101;
    if ((unint64_t)*v101 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v103 = _CocoaArrayWrapper.endIndex.getter();
      if (!v103) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v103 = *(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v103) {
        goto LABEL_31;
      }
    }
    if (v103 >= 1)
    {
      for (uint64_t j = 0; j != v103; ++j)
      {
        if ((v102 & 0xC000000000000001) != 0) {
          id v105 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v105 = *(id *)(v102 + 8 * j + 32);
        }
        long long v106 = v105;
        [v105 setConstant:0.0];
      }
LABEL_31:
      swift_bridgeObjectRelease_n();
      uint64_t v107 = *(void *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_heightLabels];
      long long v108 = (uint64_t *)(v107 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_marginConstraints);
      swift_beginAccess();
      uint64_t v109 = *v108;
      if ((unint64_t)*v108 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v110 = _CocoaArrayWrapper.endIndex.getter();
        if (v110)
        {
LABEL_33:
          if (v110 >= 1)
          {
            for (uint64_t k = 0; k != v110; ++k)
            {
              if ((v109 & 0xC000000000000001) != 0) {
                id v112 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v112 = *(id *)(v109 + 8 * k + 32);
              }
              uint64_t v113 = v112;
              [v112 setConstant:0.0];
            }
            goto LABEL_40;
          }
LABEL_43:
          __break(1u);
          goto LABEL_44;
        }
      }
      else
      {
        uint64_t v110 = *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (v110) {
          goto LABEL_33;
        }
      }
LABEL_40:
      swift_bridgeObjectRelease_n();
      id v114 = [v0 contentView];
      [v114 addSubview:v122];

      id v115 = [v0 contentView];
      [v115 addSubview:v87];

      id v116 = [v0 contentView];
      [v116 addSubview:v93];

      id v117 = [v0 contentView];
      [v117 addSubview:v100];

      id v118 = [v0 contentView];
      [v118 addSubview:v107];

      return;
    }
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleCellTitle];
  uint64_t v7 = OBJC_IVAR____TtC7Measure24AccessibilitySingleStack_label;
  double v8 = *(void **)(v6 + OBJC_IVAR____TtC7Measure24AccessibilitySingleStack_label);
  double v9 = self;
  id v10 = v8;
  id v11 = [v9 preferredFontForTextStyle:UIFontTextStyleBody];
  id v12 = [v11 fontDescriptor];

  id v13 = [v12 fontDescriptorWithSymbolicTraits:2];
  if (!v13)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  id v14 = [v9 fontWithDescriptor:v13 size:0.0];

  [v10 setFont:v14];
  uint64_t v120 = v6;
  id v15 = *(id *)(v6 + v7);
  id v16 = [v2 labelColor];
  [v15 setTextColor:v16];

  uint64_t v17 = *(void *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleLengthLabel];
  uint64_t v18 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel;
  id v19 = *(id *)(v17 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel);
  id v20 = [v9 preferredFontForTextStyle:UIFontTextStyleBody];
  id v21 = [v20 fontDescriptor];

  id v22 = [v21 fontDescriptorWithSymbolicTraits:2];
  if (!v22)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  id v23 = [v9 fontWithDescriptor:v22 size:0.0];

  [v19 setFont:v23];
  uint64_t v24 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel;
  id v25 = *(id *)(v17 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel);
  id v26 = [v9 preferredFontForTextStyle:UIFontTextStyleLargeTitle];
  [v25 setFont:v26];

  uint64_t v27 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel;
  id v28 = *(id *)(v17 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel);
  id v29 = [v9 preferredFontForTextStyle:UIFontTextStyleSubheadline];
  id v30 = [v29 fontDescriptor];

  id v31 = [v30 fontDescriptorWithSymbolicTraits:2];
  if (!v31)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  id v32 = [v9 fontWithDescriptor:v31 size:0.0];

  [v28 setFont:v32];
  id v33 = *(id *)(v17 + v18);
  id v34 = [v2 secondaryLabelColor];
  [v33 setTextColor:v34];

  id v35 = *(id *)(v17 + v24);
  id v36 = [v2 labelColor];
  [v35 setTextColor:v36];

  uint64_t v119 = v17;
  id v37 = *(id *)(v17 + v27);
  id v38 = [v2 secondaryLabelColor];
  [v37 setTextColor:v38];

  uint64_t v121 = v0;
  uint64_t v39 = *(void *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleWidthLabel];
  uint64_t v40 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel;
  id v41 = *(id *)(v39 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel);
  id v42 = [v9 preferredFontForTextStyle:UIFontTextStyleBody];
  id v43 = [v42 fontDescriptor];

  id v44 = [v43 fontDescriptorWithSymbolicTraits:2];
  if (!v44)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  id v45 = [v9 fontWithDescriptor:v44 size:0.0];

  [v41 setFont:v45];
  uint64_t v46 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel;
  id v47 = *(id *)(v39 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel);
  id v48 = [v9 preferredFontForTextStyle:UIFontTextStyleLargeTitle];
  [v47 setFont:v48];

  uint64_t v49 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel;
  id v50 = *(id *)(v39 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel);
  id v51 = [v9 preferredFontForTextStyle:UIFontTextStyleSubheadline];
  id v52 = [v51 fontDescriptor];

  id v53 = [v52 fontDescriptorWithSymbolicTraits:2];
  if (!v53)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  id v54 = [v9 fontWithDescriptor:v53 size:0.0];

  [v50 setFont:v54];
  id v55 = *(id *)(v39 + v40);
  id v56 = [v2 secondaryLabelColor];
  [v55 setTextColor:v56];

  id v57 = *(id *)(v39 + v46);
  id v58 = [v2 labelColor];
  [v57 setTextColor:v58];

  id v59 = *(id *)(v39 + v49);
  id v60 = [v2 secondaryLabelColor];
  [v59 setTextColor:v60];

  uint64_t v61 = *(void *)&v121[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleHeightLabel];
  uint64_t v62 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel;
  id v63 = *(id *)(v61 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel);
  id v64 = [v9 preferredFontForTextStyle:UIFontTextStyleBody];
  id v65 = [v64 fontDescriptor];

  id v66 = [v65 fontDescriptorWithSymbolicTraits:2];
  if (!v66)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  id v67 = [v9 fontWithDescriptor:v66 size:0.0];

  [v63 setFont:v67];
  uint64_t v68 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel;
  id v69 = *(id *)(v61 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel);
  id v70 = [v9 preferredFontForTextStyle:UIFontTextStyleLargeTitle];
  [v69 setFont:v70];

  uint64_t v71 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel;
  id v72 = *(id *)(v61 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel);
  id v73 = [v9 preferredFontForTextStyle:UIFontTextStyleSubheadline];
  id v74 = [v73 fontDescriptor];

  id v75 = [v74 fontDescriptorWithSymbolicTraits:2];
  if (!v75)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  id v76 = [v9 fontWithDescriptor:v75 size:0.0];

  [v72 setFont:v76];
  id v77 = *(id *)(v61 + v62);
  id v78 = [v2 secondaryLabelColor];
  [v77 setTextColor:v78];

  id v79 = *(id *)(v61 + v68);
  id v80 = [v2 labelColor];
  [v79 setTextColor:v80];

  id v81 = *(id *)(v61 + v71);
  id v82 = [v2 secondaryLabelColor];
  [v81 setTextColor:v82];

  id v83 = [v121 contentView];
  [v83 addSubview:v122];

  id v84 = [v121 contentView];
  [v84 addSubview:v120];

  id v85 = [v121 contentView];
  [v85 addSubview:v119];

  id v86 = [v121 contentView];
  [v86 addSubview:v39];

  id v123 = [v121 contentView];
  [v123 addSubview:v61];
}

void sub_1001ED054()
{
  id v1 = [self currentTraitCollection];
  id v2 = [v1 preferredContentSizeCategory];

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v1)
  {
    id v3 = *(void **)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_sketchView];
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v4 = *(void **)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleCellTitle];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v125 = *(id *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleLengthLabel];
    [v125 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v130 = *(id *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleWidthLabel];
    [v130 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v127 = *(id *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleHeightLabel];
    [v127 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v129 = self;
    sub_100012894((uint64_t *)&unk_1004CEA00);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_100403A90;
    id v6 = [v3 leadingAnchor];
    id v7 = [v0 contentView];
    id v8 = [v7 leadingAnchor];

    if (qword_1004C27E8 != -1) {
      swift_once();
    }
    id v9 = [v6 constraintEqualToAnchor:v8 constant:*(double *)&qword_1004F7E00];

    *(void *)(v5 + 32) = v9;
    id v10 = [v3 topAnchor];
    id v11 = [v0 contentView];
    id v12 = [v11 topAnchor];

    id v13 = [v10 constraintEqualToAnchor:v12 constant:*(double *)&qword_1004F7E00];
    *(void *)(v5 + 40) = v13;
    id v14 = [v3 widthAnchor];
    if (qword_1004C3200 != -1) {
      swift_once();
    }
    id v15 = [v14 constraintEqualToConstant:*(double *)&qword_1004D1DD0];

    *(void *)(v5 + 48) = v15;
    id v16 = [v3 heightAnchor];
    id v17 = [v3 widthAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    *(void *)(v5 + 56) = v18;
    id v19 = [v4 leadingAnchor];
    id v20 = [v0 contentView];
    id v21 = [v20 leadingAnchor];

    id v22 = [v19 constraintEqualToAnchor:v21 constant:*(double *)&qword_1004F7E00];
    *(void *)(v5 + 64) = v22;
    id v23 = [v4 topAnchor];
    id v24 = [v3 bottomAnchor];
    id v25 = [v23 constraintEqualToAnchor:v24 constant:*(double *)&qword_1004F7E00];

    *(void *)(v5 + 72) = v25;
    id v26 = [v4 trailingAnchor];
    id v27 = [v0 contentView];
    id v28 = [v27 trailingAnchor];

    id v29 = [v26 constraintEqualToAnchor:v28];
    *(void *)(v5 + 80) = v29;
    id v30 = [v125 leadingAnchor];
    id v31 = [v0 contentView];
    id v32 = [v31 leadingAnchor];

    id v33 = [v30 constraintEqualToAnchor:v32 constant:*(double *)&qword_1004F7E00];
    *(void *)(v5 + 88) = v33;
    id v34 = [v125 topAnchor];
    id v35 = [v4 bottomAnchor];
    if (qword_1004C27F0 != -1) {
      swift_once();
    }
    id v36 = [v34 constraintEqualToAnchor:v35 constant:*(double *)&qword_1004F7E08];

    *(void *)(v5 + 96) = v36;
    id v37 = [v125 trailingAnchor];
    id v38 = [v0 contentView];
    id v39 = [v38 trailingAnchor];

    id v40 = [v37 constraintEqualToAnchor:v39];
    *(void *)(v5 + 104) = v40;
    id v41 = [v130 leadingAnchor];
    id v42 = [v0 contentView];
    id v43 = [v42 leadingAnchor];

    id v44 = [v41 constraintEqualToAnchor:v43 constant:*(double *)&qword_1004F7E00];
    *(void *)(v5 + 112) = v44;
    id v45 = [v130 topAnchor];
    id v46 = [v125 bottomAnchor];
    id v47 = [v45 constraintEqualToAnchor:v46 constant:*(double *)&qword_1004F7E08];

    *(void *)(v5 + 120) = v47;
    id v48 = [v130 trailingAnchor];
    id v49 = [v0 contentView];
    id v50 = [v49 trailingAnchor];

    id v51 = [v48 constraintEqualToAnchor:v50];
    *(void *)(v5 + 128) = v51;
    id v52 = [v127 leadingAnchor];
    id v53 = [v0 contentView];
    id v54 = [v53 leadingAnchor];

    id v55 = [v52 constraintEqualToAnchor:v54 constant:*(double *)&qword_1004F7E00];
    *(void *)(v5 + 136) = v55;
    id v56 = [v127 topAnchor];
    id v57 = [v130 bottomAnchor];
    id v58 = [v56 constraintEqualToAnchor:v57 constant:*(double *)&qword_1004F7E08];

    *(void *)(v5 + 144) = v58;
    id v59 = [v127 trailingAnchor];
    id v60 = [v0 contentView];
    id v61 = [v60 trailingAnchor];

    id v62 = [v59 constraintEqualToAnchor:v61];
    *(void *)(v5 + 152) = v62;
    id v63 = [v127 bottomAnchor];
    id v64 = [v0 contentView];
    id v65 = [v64 bottomAnchor];

    id v66 = [v63 constraintEqualToAnchor:v65 constant:-*(double *)&qword_1004F7E00];
  }
  else
  {
    id v67 = *(void **)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_cellTitle];
    [v67 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v68 = *(void **)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_sketchView];
    [v68 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v124 = *(char **)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_lengthLabels];
    [v124 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v126 = *(id *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_widthLabels];
    [v126 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v128 = *(id *)&v0[OBJC_IVAR____TtC7Measure17ObjectHistoryCell_heightLabels];
    [v128 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v129 = self;
    sub_100012894((uint64_t *)&unk_1004CEA00);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_100403A90;
    id v69 = [v68 leadingAnchor];
    id v70 = [v0 contentView];
    id v71 = [v70 leadingAnchor];

    if (qword_1004C27E8 != -1) {
      swift_once();
    }
    id v72 = [v69 constraintEqualToAnchor:v71 constant:*(double *)&qword_1004F7E00];

    *(void *)(v5 + 32) = v72;
    id v73 = [v68 topAnchor];
    id v74 = [v0 contentView];
    id v75 = [v74 topAnchor];

    id v76 = [v73 constraintEqualToAnchor:v75 constant:*(double *)&qword_1004F7E00];
    *(void *)(v5 + 40) = v76;
    id v77 = [v68 widthAnchor];
    if (qword_1004C3200 != -1) {
      swift_once();
    }
    id v78 = [v77 constraintEqualToConstant:*(double *)&qword_1004D1DD0];

    *(void *)(v5 + 48) = v78;
    id v79 = [v68 heightAnchor];
    id v80 = [v68 widthAnchor];
    id v81 = [v79 constraintEqualToAnchor:v80];

    *(void *)(v5 + 56) = v81;
    id v82 = [v67 leadingAnchor];
    id v83 = [v68 trailingAnchor];
    id v84 = [v82 constraintEqualToAnchor:v83 constant:*(double *)&qword_1004F7E00];

    *(void *)(v5 + 64) = v84;
    id v85 = [v67 topAnchor];
    id v86 = [v0 contentView];
    id v87 = [v86 topAnchor];

    if (qword_1004C3208 != -1) {
      swift_once();
    }
    id v88 = [v85 constraintEqualToAnchor:v87 constant:*(double *)&qword_1004D1DD8];

    *(void *)(v5 + 72) = v88;
    id v89 = [v67 trailingAnchor];
    id v90 = [*(id *)&v124[OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels] leadingAnchor];
    id v91 = [v89 constraintEqualToAnchor:v90 constant:-*(double *)&qword_1004F7E00];

    *(void *)(v5 + 80) = v91;
    id v92 = [v124 leadingAnchor];
    id v93 = [v68 trailingAnchor];
    id v94 = [v92 constraintEqualToAnchor:v93 constant:*(double *)&qword_1004F7E00];

    *(void *)(v5 + 88) = v94;
    id v95 = [v124 topAnchor];
    id v96 = [v67 bottomAnchor];
    id v97 = [v95 constraintEqualToAnchor:v96 constant:*(double *)&qword_1004F7E00];

    *(void *)(v5 + 96) = v97;
    id v98 = [v124 trailingAnchor];
    id v99 = [v0 contentView];
    id v100 = [v99 trailingAnchor];

    id v101 = [v98 constraintEqualToAnchor:v100];
    *(void *)(v5 + 104) = v101;
    id v102 = [v126 leadingAnchor];
    id v103 = [v68 trailingAnchor];
    id v104 = [v102 constraintEqualToAnchor:v103 constant:*(double *)&qword_1004F7E00];

    *(void *)(v5 + 112) = v104;
    id v105 = [v126 topAnchor];
    id v106 = [v124 bottomAnchor];
    id v107 = [v105 constraintEqualToAnchor:v106 constant:*(double *)&qword_1004F7E00];

    *(void *)(v5 + 120) = v107;
    id v108 = [v126 trailingAnchor];
    id v109 = [v0 contentView];
    id v110 = [v109 trailingAnchor];

    id v111 = [v108 constraintEqualToAnchor:v110];
    *(void *)(v5 + 128) = v111;
    id v112 = [v128 leadingAnchor];
    id v113 = [v68 trailingAnchor];
    id v114 = [v112 constraintEqualToAnchor:v113 constant:*(double *)&qword_1004F7E00];

    *(void *)(v5 + 136) = v114;
    id v115 = [v128 topAnchor];
    id v116 = [v126 bottomAnchor];
    id v117 = [v115 constraintEqualToAnchor:v116 constant:*(double *)&qword_1004F7E00];

    *(void *)(v5 + 144) = v117;
    id v118 = [v128 trailingAnchor];
    id v119 = [v0 contentView];
    id v120 = [v119 trailingAnchor];

    id v121 = [v118 constraintEqualToAnchor:v120];
    *(void *)(v5 + 152) = v121;
    id v63 = [v128 bottomAnchor];
    id v122 = [v0 contentView];
    id v65 = [v122 bottomAnchor];

    id v66 = [v63 constraintEqualToAnchor:v65 constant:-*(double *)&qword_1004F7E00];
  }
  id v123 = v66;

  *(void *)(v5 + 160) = v123;
  specialized Array._endMutation()();
  sub_100029878();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v129 activateConstraints:isa];
}

id sub_1001EE318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_sketchView;
  type metadata accessor for SketchObject();
  id v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v10 = v4;
  *(void *)&v4[v8] = [v9 init];
  uint64_t v11 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_cellTitle;
  *(void *)&v10[v11] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v12 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_lengthLabels;
  id v13 = (objc_class *)type metadata accessor for MeasureTableViewCellCommonContentView();
  *(void *)&v10[v12] = [objc_allocWithZone(v13) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v14 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_widthLabels;
  *(void *)&v10[v14] = [objc_allocWithZone(v13) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v15 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_heightLabels;
  *(void *)&v10[v15] = [objc_allocWithZone(v13) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v16 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleCellTitle;
  *(void *)&v10[v16] = [objc_allocWithZone((Class)type metadata accessor for AccessibilitySingleStack()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v17 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleLengthLabel;
  id v18 = (objc_class *)type metadata accessor for AccessibilityTripleStack();
  *(void *)&v10[v17] = [objc_allocWithZone(v18) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v19 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleWidthLabel;
  *(void *)&v10[v19] = [objc_allocWithZone(v18) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v20 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleHeightLabel;
  *(void *)&v10[v20] = [objc_allocWithZone(v18) initWithFrame:0.0, 0.0, 0.0, 0.0];

  if (a3)
  {
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v21 = 0;
  }
  v25.receiver = v10;
  v25.super_class = ObjectType;
  id v22 = [super initWithStyle:a1 reuseIdentifier:v21];

  id v23 = v22;
  sub_1001EC100();
  sub_1001ED054();

  return v23;
}

id sub_1001EE5CC(void *a1)
{
  id v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_sketchView;
  type metadata accessor for SketchObject();
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v7 = v2;
  *(void *)&v2[v5] = [v6 init];
  uint64_t v8 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_cellTitle;
  *(void *)&v7[v8] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v9 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_lengthLabels;
  id v10 = (objc_class *)type metadata accessor for MeasureTableViewCellCommonContentView();
  *(void *)&v7[v9] = [objc_allocWithZone(v10) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v11 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_widthLabels;
  *(void *)&v7[v11] = [objc_allocWithZone(v10) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v12 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_heightLabels;
  *(void *)&v7[v12] = [objc_allocWithZone(v10) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v13 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleCellTitle;
  *(void *)&v7[v13] = [objc_allocWithZone((Class)type metadata accessor for AccessibilitySingleStack()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v14 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleLengthLabel;
  uint64_t v15 = (objc_class *)type metadata accessor for AccessibilityTripleStack();
  *(void *)&v7[v14] = [objc_allocWithZone(v15) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v16 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleWidthLabel;
  *(void *)&v7[v16] = [objc_allocWithZone(v15) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v17 = OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleHeightLabel;
  *(void *)&v7[v17] = [objc_allocWithZone(v15) initWithFrame:0.0, 0.0, 0.0, 0.0];

  v22.receiver = v7;
  v22.super_class = ObjectType;
  [super initWithCoder:a1];
  id v19 = v18;
  if (v18)
  {
    id v20 = v18;
    sub_1001EC100();
    sub_1001ED054();
  }
  return v19;
}

uint64_t sub_1001EE828(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MeasurementHistoryItem();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  id v7 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000297B8(a1, (uint64_t)v7);
  sub_100026A04((uint64_t)&v7[*(int *)(v5 + 36)], (uint64_t)v103);
  sub_100026A04((uint64_t)v103, (uint64_t)v104);
  if (sub_100026A60((uint64_t)v104) == 2)
  {
    uint64_t v8 = (uint64_t *)sub_100026A6C((uint64_t)v104);
    id v9 = [self currentTraitCollection];
    id v10 = [v9 preferredContentSizeCategory];

    char v11 = UIContentSizeCategory.isAccessibilityCategory.getter();
    id v102 = v7;
    if (v11)
    {
      uint64_t v12 = *(void **)(*(void *)(v2 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleCellTitle)
                     + OBJC_IVAR____TtC7Measure24AccessibilitySingleStack_label);
      NSString v13 = String._bridgeToObjectiveC()();
      [v12 setText:v13];

      NSString v14 = String._bridgeToObjectiveC()();
      [v12 setAccessibilityLabel:v14];

      uint64_t v15 = self;
      id v16 = [v15 mainBundle];
      v105._object = (void *)0xE000000000000000;
      v17._uint64_t countAndFlagsBits = 0x4C5F5443454A424FLL;
      v17._object = (void *)0xED00004854474E45;
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      v105._uint64_t countAndFlagsBits = 0;
      Swift::String v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v105);

      id v20 = [v15 mainBundle];
      v106._object = (void *)0xE000000000000000;
      v21._uint64_t countAndFlagsBits = 0x4C5F5443454A424FLL;
      v21._object = (void *)0xED00004854474E45;
      v22._uint64_t countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      v106._uint64_t countAndFlagsBits = 0;
      Swift::String v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v106);

      sub_10014DA7C(v19._countAndFlagsBits, (uint64_t)v19._object, v23._countAndFlagsBits, v23._object, v8[5], v8[6], v8[7], v8[8], v8[10], v8[11], v8[12], v8[13]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v24 = [v15 mainBundle];
      v107._object = (void *)0xE000000000000000;
      v25._uint64_t countAndFlagsBits = 0x575F5443454A424FLL;
      v25._object = (void *)0xEC00000048544449;
      v26._uint64_t countAndFlagsBits = 0;
      v26._object = (void *)0xE000000000000000;
      v107._uint64_t countAndFlagsBits = 0;
      Swift::String v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v107);

      id v28 = [v15 mainBundle];
      v108._object = (void *)0xE000000000000000;
      v29._uint64_t countAndFlagsBits = 0x4C5F5443454A424FLL;
      v29._object = (void *)0xED00004854474E45;
      v30._uint64_t countAndFlagsBits = 0;
      v30._object = (void *)0xE000000000000000;
      v108._uint64_t countAndFlagsBits = 0;
      Swift::String v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v108);

      sub_10014DA7C(v27._countAndFlagsBits, (uint64_t)v27._object, v31._countAndFlagsBits, v31._object, v8[20], v8[21], v8[22], v8[23], v8[25], v8[26], v8[27], v8[28]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v32 = [v15 mainBundle];
      v109._object = (void *)0xE000000000000000;
      v33._uint64_t countAndFlagsBits = 0x485F5443454A424FLL;
      v33._object = (void *)0xED00005448474945;
      v34._uint64_t countAndFlagsBits = 0;
      v34._object = (void *)0xE000000000000000;
      v109._uint64_t countAndFlagsBits = 0;
      Swift::String v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v32, v34, v109);

      id v36 = [v15 mainBundle];
      v110._object = (void *)0xE000000000000000;
      v37._uint64_t countAndFlagsBits = 0x485F5443454A424FLL;
      v37._object = (void *)0xED00005448474945;
      v38._uint64_t countAndFlagsBits = 0;
      v38._object = (void *)0xE000000000000000;
      v110._uint64_t countAndFlagsBits = 0;
      Swift::String v39 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, (Swift::String_optional)0, (NSBundle)v36, v38, v110);

      sub_10014DA7C(v35._countAndFlagsBits, (uint64_t)v35._object, v39._countAndFlagsBits, v39._object, v8[35], v8[36], v8[37], v8[38], v8[40], v8[41], v8[42], v8[43]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v40 = (uint64_t)v102;
    }
    else
    {
      id v41 = *(void **)(v2 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_cellTitle);
      NSString v42 = String._bridgeToObjectiveC()();
      [v41 setText:v42];

      uint64_t v101 = v2;
      uint64_t v43 = *(void *)(v2 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_lengthLabels);
      id v44 = *(void **)(v43 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_title);
      id v45 = self;
      id v46 = v44;
      id v100 = v45;
      id v47 = [v45 mainBundle];
      v111._object = (void *)0xE000000000000000;
      v48._uint64_t countAndFlagsBits = 0x4C5F5443454A424FLL;
      v48._object = (void *)0xED00004854474E45;
      v49._uint64_t countAndFlagsBits = 0;
      v49._object = (void *)0xE000000000000000;
      v111._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v48, (Swift::String_optional)0, (NSBundle)v47, v49, v111);

      NSString v50 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v46 setText:v50];

      uint64_t v51 = *v8;
      uint64_t v52 = v8[1];
      uint64_t v53 = v8[5];
      uint64_t v54 = v8[6];
      uint64_t v55 = v8[7];
      NSString v98 = (NSString)v8[8];
      uint64_t v99 = v55;
      uint64_t v56 = v8[10];
      uint64_t v96 = v8[11];
      uint64_t v97 = v56;
      uint64_t v57 = v8[13];
      uint64_t v95 = v8[12];
      id v58 = *(void **)(v43 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits);
      NSString v59 = String._bridgeToObjectiveC()();
      [v58 setText:v59];

      if (v51 == v53 && v52 == v54) {
        char v60 = 1;
      }
      else {
        char v60 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      sub_10015E68C(v53, v54, v99, v98, v97, v96, v95, v57, v60 & 1);
      uint64_t v61 = *(void *)(v101 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_widthLabels);
      id v62 = *(id *)(v61 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_title);
      id v63 = [v100 mainBundle];
      v112._object = (void *)0xE000000000000000;
      v64._uint64_t countAndFlagsBits = 0x575F5443454A424FLL;
      v64._object = (void *)0xEC00000048544449;
      v65._uint64_t countAndFlagsBits = 0;
      v65._object = (void *)0xE000000000000000;
      v112._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v64, (Swift::String_optional)0, (NSBundle)v63, v65, v112);

      NSString v66 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v62 setText:v66];

      uint64_t v68 = v8[15];
      uint64_t v67 = v8[16];
      uint64_t v69 = v8[20];
      uint64_t v70 = v8[21];
      uint64_t v71 = v8[22];
      NSString v98 = (NSString)v8[23];
      uint64_t v99 = v71;
      uint64_t v72 = v8[25];
      uint64_t v96 = v8[26];
      uint64_t v97 = v72;
      uint64_t v73 = v8[28];
      uint64_t v95 = v8[27];
      id v74 = *(void **)(v61 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits);
      NSString v75 = String._bridgeToObjectiveC()();
      [v74 setText:v75];

      if (v68 == v69 && v67 == v70) {
        char v76 = 1;
      }
      else {
        char v76 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      sub_10015E68C(v69, v70, v99, v98, v97, v96, v95, v73, v76 & 1);
      uint64_t v77 = *(void *)(v101 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_heightLabels);
      id v78 = *(id *)(v77 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_title);
      id v79 = [v100 mainBundle];
      v113._object = (void *)0xE000000000000000;
      v80._uint64_t countAndFlagsBits = 0x485F5443454A424FLL;
      v80._object = (void *)0xED00005448474945;
      v81._uint64_t countAndFlagsBits = 0;
      v81._object = (void *)0xE000000000000000;
      v113._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v80, (Swift::String_optional)0, (NSBundle)v79, v81, v113);

      NSString v82 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v78 setText:v82];

      uint64_t v84 = v8[30];
      uint64_t v83 = v8[31];
      uint64_t v85 = v8[35];
      uint64_t v86 = v8[36];
      uint64_t v87 = v8[37];
      id v100 = (id)v8[38];
      uint64_t v101 = v87;
      uint64_t v88 = v8[40];
      uint64_t v89 = v8[42];
      NSString v98 = (NSString)v8[41];
      uint64_t v99 = v88;
      uint64_t v90 = v8[43];
      id v91 = *(void **)(v77 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits);
      NSString v92 = String._bridgeToObjectiveC()();
      [v91 setText:v92];

      if (v84 == v85 && v83 == v86) {
        char v93 = 1;
      }
      else {
        char v93 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      uint64_t v40 = (uint64_t)v102;
      sub_10015E68C(v85, v86, v101, v100, v99, (uint64_t)v98, v89, v90, v93 & 1);
    }
    return sub_10002981C(v40);
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ObjectHistoryCell()
{
  return self;
}

id sub_1001EF3AC()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_lengthLabels);
  [*(id *)(v1 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits) setSelectedRange:0, 0];
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels);
  [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];
  [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_widthLabels);
  [*(id *)(v3 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits) setSelectedRange:0, 0];
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels);
  [*(id *)(*(void *)(v4 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];
  [*(id *)(*(void *)(v4 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_heightLabels);
  [*(id *)(v5 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits) setSelectedRange:0, 0];
  uint64_t v6 = *(void *)(v5 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels);
  [*(id *)(*(void *)(v6 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];
  [*(id *)(*(void *)(v6 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];
  [*(id *)(*(void *)(v0 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleCellTitle)+ OBJC_IVAR____TtC7Measure24AccessibilitySingleStack_label) setSelectedRange:0, 0];
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleLengthLabel);
  [*(id *)(v7 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel) setSelectedRange:0, 0];
  [*(id *)(v7 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel) setSelectedRange:0, 0];
  [*(id *)(v7 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel) setSelectedRange:0, 0];
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleWidthLabel);
  [*(id *)(v8 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel) setSelectedRange:0, 0];
  [*(id *)(v8 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel) setSelectedRange:0, 0];
  [*(id *)(v8 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel) setSelectedRange:0, 0];
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC7Measure17ObjectHistoryCell_accessibleHeightLabel);
  [*(id *)(v9 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel) setSelectedRange:0, 0];
  [*(id *)(v9 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel) setSelectedRange:0, 0];
  id v10 = *(void **)(v9 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel);

  return [v10 setSelectedRange:0, 0];
}

unsigned char *storeEnumTagSinglePayload for TelemetryValue.SessionSummary(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001EF768);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TelemetryValue.SessionSummary()
{
  return &type metadata for TelemetryValue.SessionSummary;
}

void sub_1001EF7A0(uint64_t a1, char a2)
{
}

BOOL sub_1001EF7D4(char *a1, char *a2)
{
  return sub_100113638(*a1, *a2);
}

Swift::Int sub_1001EF7E0()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1001EF7A0((uint64_t)v3, v1);
  return Hasher._finalize()();
}

void sub_1001EF828(uint64_t a1)
{
  sub_1001EF7A0(a1, *v1);
}

Swift::Int sub_1001EF830()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1001EF7A0((uint64_t)v3, v1);
  return Hasher._finalize()();
}

uint64_t sub_1001EF874@<X0>(double *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001EF910(*a1);
  *a2 = result;
  return result;
}

double sub_1001EF8A0@<D0>(double *a1@<X8>)
{
  double result = dbl_100403C08[*v1];
  *a1 = result;
  return result;
}

unint64_t sub_1001EF8BC()
{
  unint64_t result = qword_1004D1E50;
  if (!qword_1004D1E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004D1E50);
  }
  return result;
}

uint64_t sub_1001EF910(double a1)
{
  if (a1 == 1.0) {
    return 0;
  }
  if (a1 == 2.0) {
    return 1;
  }
  if (a1 == 3.0) {
    return 2;
  }
  if (a1 == 4.0) {
    return 3;
  }
  if (a1 == 5.0) {
    return 4;
  }
  if (a1 == 6.0) {
    return 5;
  }
  if (a1 == 7.0) {
    return 6;
  }
  if (a1 == 8.0) {
    return 7;
  }
  if (a1 == 9.0) {
    return 8;
  }
  if (a1 == 10.0) {
    return 9;
  }
  if (a1 == 11.0) {
    return 10;
  }
  if (a1 == 12.0) {
    return 11;
  }
  if (a1 == 14.0) {
    unsigned int v2 = 13;
  }
  else {
    unsigned int v2 = 14;
  }
  if (a1 == 13.0) {
    return 12;
  }
  else {
    return v2;
  }
}

char *sub_1001EFA28()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC7Measure11GrabberView_backgroundView;
  id v3 = objc_allocWithZone((Class)_UIGrabber);
  unsigned int v4 = v0;
  *(void *)&v0[v2] = [v3 init];

  [*(id *)&v0[v2] frame];
  v9.receiver = v4;
  v9.super_class = ObjectType;
  uint64_t v5 = (char *)[super initWithFrame:];
  uint64_t v6 = *(void *)&v5[OBJC_IVAR____TtC7Measure11GrabberView_backgroundView];
  uint64_t v7 = v5;
  [v7 addSubview:v6];
  sub_1001EFAF0();

  return v7;
}

void sub_1001EFAF0()
{
  char v1 = *(void **)&v0[OBJC_IVAR____TtC7Measure11GrabberView_backgroundView];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v2 = self;
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1003F94A0;
  id v4 = [v1 bottomAnchor];
  id v5 = [v0 bottomAnchor];
  id v6 = [v4 constraintEqualToAnchor:v5];

  *(void *)(v3 + 32) = v6;
  id v7 = [v1 centerXAnchor];
  id v8 = [v0 centerXAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8];

  *(void *)(v3 + 40) = v9;
  specialized Array._endMutation()();
  sub_100029878();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

uint64_t type metadata accessor for GrabberView()
{
  return self;
}

void *sub_1001EFE68(uint64_t a1, CGFloat a2, CGFloat a3, double a4)
{
  uint64_t v5 = v4;
  sub_1001F138C(&v15.a);
  CGAffineTransform v14 = v15;
  v16.x = a2;
  v16.y = a3;
  CGPoint v10 = CGPointApplyAffineTransform(v16, &v14);
  id v11 = [self shapeNodeWithCircleOfRadius:a4];
  [v11 setFillColor:a1];
  unint64_t result = *(void **)(v5 + qword_1004D1F98);
  if (result)
  {
    [result addChild:v11];
    [v11 setPosition:v10.x, v10.y];
    id v13 = v11;
    *(void *)&v14.a = sub_1001F14A8();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)&v14.a & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)&v14.a & 0xFFFFFFFFFFFFFF8)
                                                                                    + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    *(CGFloat *)(v5 + qword_1004D1F90) = v14.a;

    return (void *)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001EFFE0()
{
  uint64_t v1 = v0 + qword_1004D1EB8;
  if (*(unsigned char *)(v0 + qword_1004D1EB8 + 32))
  {
    uint64_t v2 = qword_1004D1EB0;
    [*(id *)(v0 + qword_1004D1EB0) position];
    if (qword_1004C3060 != -1) {
      swift_once();
    }
    static CGPoint.+ infix(_:_:)();
    if (qword_1004C3078 != -1) {
      swift_once();
    }
    static CGPoint.+ infix(_:_:)();
    [*(id *)(v0 + v2) position];
    if (qword_1004C3068 != -1) {
      swift_once();
    }
    static CGPoint.+ infix(_:_:)();
    static CGPoint.+ infix(_:_:)();
    uint64_t result = CGRect.init(p1:p2:)();
    *(void *)uint64_t v1 = v4;
    *(void *)(v1 + 8) = v5;
    *(void *)(v1 + 16) = v6;
    *(void *)(v1 + 24) = v7;
    *(unsigned char *)(v1 + 32) = 0;
  }
  return result;
}

uint64_t sub_1001F0190()
{
  uint64_t v1 = v0 + qword_1004D1EC0;
  if (*(unsigned char *)(v0 + qword_1004D1EC0 + 32))
  {
    uint64_t v2 = qword_1004D1EB0;
    [*(id *)(v0 + qword_1004D1EB0) position];
    if (qword_1004C3060 != -1) {
      swift_once();
    }
    static CGPoint.+ infix(_:_:)();
    if (qword_1004C3078 != -1) {
      swift_once();
    }
    static CGPoint.+ infix(_:_:)();
    [*(id *)(v0 + v2) position];
    if (qword_1004C3068 != -1) {
      swift_once();
    }
    static CGPoint.+ infix(_:_:)();
    static CGPoint.+ infix(_:_:)();
    uint64_t result = CGRect.init(p1:p2:)();
    *(void *)uint64_t v1 = v4;
    *(void *)(v1 + 8) = v5;
    *(void *)(v1 + 16) = v6;
    *(void *)(v1 + 24) = v7;
    *(unsigned char *)(v1 + 32) = 0;
  }
  return result;
}

id sub_1001F0354(uint64_t *a1, double (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    double v6 = a2();
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;
    if (qword_1004C3078 != -1) {
      swift_once();
    }
    id v13 = [self bezierPathWithRoundedRect:v6 cornerRadius:v8 v10, v12, *(double *)&qword_1004F8888 * 0.5];
    id v14 = [v13 CGPath];

    CGAffineTransform v15 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v14;
    id v5 = v14;

    uint64_t v4 = 0;
  }
  id v16 = v4;
  return v5;
}

id sub_1001F0478(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)SKShapeNode) init];
  [v2 setLineWidth:0.0];
  id v3 = sub_1001F0354(&qword_1004D1EC8, (double (*)(void))sub_1001EFFE0);
  [v2 setPath:v3];

  uint64_t v4 = *(void **)(a1 + qword_1004D1E88);
  sub_1001EFFE0();
  CGFloat Width = CGRectGetWidth(v14);
  CGFloat Height = CGRectGetHeight(*(CGRect *)(a1 + qword_1004D1EB8));
  v6.f64[0] = Width;
  v6.f64[1] = Height;
  double v7 = COERCE_DOUBLE(vcvt_f32_f64(v6));
  id v8 = objc_allocWithZone((Class)SKUniform);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 initWithName:v9 vectorFloat2:v7];

  [v4 addUniform:v10];
  [v2 setFillShader:v4];
  id v11 = [self whiteColor];
  [v2 setFillColor:v11];

  return v2;
}

id sub_1001F0614()
{
  uint64_t v1 = qword_1004D1EE0;
  id v2 = *(void **)(v0 + qword_1004D1EE0);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1004D1EE0);
  }
  else
  {
    sub_1001F0674();
    uint64_t v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1001F0674()
{
  id v0 = [objc_allocWithZone((Class)SKEffectNode) init];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self filterWithName:v1];

  if (v2)
  {
    [v2 setDefaults];
    id v3 = v2;
    Class isa = Double._bridgeToObjectiveC()().super.super.isa;
    NSString v5 = String._bridgeToObjectiveC()();
    [v3 setValue:isa forKey:v5];

    [v0 setFilter:v3];
    [v0 setShouldEnableEffects:1];
  }
  else
  {
    __break(1u);
  }
}

id sub_1001F07A8(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)SKShapeNode) init];
  [v2 setLineWidth:0.0];
  id v3 = sub_1001F0354(&qword_1004D1ED0, (double (*)(void))sub_1001F0190);
  [v2 setPath:v3];

  uint64_t v4 = *(void **)(a1 + qword_1004D1E90);
  sub_1001F0190();
  CGFloat Width = CGRectGetWidth(v14);
  CGFloat Height = CGRectGetHeight(*(CGRect *)(a1 + qword_1004D1EC0));
  v6.f64[0] = Width;
  v6.f64[1] = Height;
  double v7 = COERCE_DOUBLE(vcvt_f32_f64(v6));
  id v8 = objc_allocWithZone((Class)SKUniform);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 initWithName:v9 vectorFloat2:v7];

  [v4 addUniform:v10];
  [v2 setFillShader:v4];
  id v11 = [self whiteColor];
  [v2 setFillColor:v11];

  return v2;
}

void sub_1001F0944()
{
  id v0 = [objc_allocWithZone((Class)SKEffectNode) init];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self filterWithName:v1];

  if (v2)
  {
    [v2 setDefaults];
    id v3 = v2;
    Class isa = Int._bridgeToObjectiveC()().super.super.isa;
    NSString v5 = String._bridgeToObjectiveC()();
    [v3 setValue:isa forKey:v5];

    [v0 setFilter:v3];
    [v0 setShouldEnableEffects:1];
    id v6 = v0;
    id v7 = sub_1001F0EAC(&qword_1004D1EE8, (uint64_t (*)(uint64_t))sub_1001F07A8);
    [v7 zPosition];
    double v9 = v8;

    [v6 setZPosition:v9];
  }
  else
  {
    __break(1u);
  }
}

id sub_1001F0AE8()
{
  id v0 = [objc_allocWithZone((Class)SKShapeNode) init];
  [v0 setLineCap:1];
  if (qword_1004C3078 != -1) {
    swift_once();
  }
  [v0 setLineWidth:*(double *)&qword_1004F8888];
  id v1 = [self darkGrayColor];
  [v0 setStrokeColor:v1];

  id v2 = sub_1001F0354(&qword_1004D1EC8, (double (*)(void))sub_1001EFFE0);
  [v0 setPath:v2];

  [v0 setBlendMode:3];
  id v3 = sub_1001F0EAC(&qword_1004D1EE8, (uint64_t (*)(uint64_t))sub_1001F07A8);
  [v3 zPosition];
  double v5 = v4;

  [v0 setZPosition:v5 + -2.0];
  return v0;
}

id sub_1001F0C74()
{
  uint64_t v1 = qword_1004D1F00;
  id v2 = *(void **)(v0 + qword_1004D1F00);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1004D1F00);
  }
  else
  {
    NSString v4 = String._bridgeToObjectiveC()();
    id v5 = [self labelNodeWithText:v4];

    id v6 = objc_allocWithZone((Class)NSAttributedString);
    id v7 = v5;
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [v6 initWithString:v8];

    [v7 setAttributedText:v9];
    [v7 setHorizontalAlignmentMode:2];

    id v10 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v7;
    id v3 = v7;

    id v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_1001F0D88()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [self labelNodeWithText:v0];

  id v2 = objc_allocWithZone((Class)NSAttributedString);
  id v3 = v1;
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 initWithString:v4];

  [v3 setAttributedText:v5];
  id v6 = v3;
  id v7 = sub_1001F0C74();
  [v7 zPosition];
  double v9 = v8;

  [v6 setZPosition:v9 + -1.0];
  [v6 setHorizontalAlignmentMode:2];

  return v6;
}

id sub_1001F0EAC(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  NSString v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2(v2);
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    NSString v4 = 0;
  }
  id v8 = v4;
  return v5;
}

void sub_1001F0F10()
{
  id v0 = [objc_allocWithZone((Class)SKEffectNode) init];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self filterWithName:v1];

  if (v2)
  {
    [v2 setDefaults];
    id v3 = v2;
    Class isa = Double._bridgeToObjectiveC()().super.super.isa;
    NSString v5 = String._bridgeToObjectiveC()();
    [v3 setValue:isa forKey:v5];

    [v0 setFilter:v3];
    [v0 setShouldEnableEffects:1];
    id v6 = v0;
    id v7 = sub_1001F0C74();
    [v7 zPosition];
    double v9 = v8;

    [v6 setZPosition:v9 + -1.0];
  }
  else
  {
    __break(1u);
  }
}

id sub_1001F10A0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    id v5 = [objc_allocWithZone((Class)SKNode) init];
    id v6 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    id v4 = v5;

    id v3 = 0;
  }
  id v7 = v3;
  return v4;
}

void sub_1001F1110(uint64_t a1)
{
  id v2 = sub_1001F0C74();
  id v3 = (uint64_t *)(a1 + qword_1004D1F28);
  uint64_t v4 = *(void *)(a1 + qword_1004D1F28);
  uint64_t v5 = *(void *)(a1 + qword_1004D1F28 + 8);
  id v7 = *(void **)(a1 + qword_1004D1F28 + 16);
  id v6 = *(void **)(a1 + qword_1004D1F28 + 24);
  id v8 = *(id *)(a1 + qword_1004D1F28 + 32);
  swift_bridgeObjectRetain();
  id v9 = v7;
  id v10 = v6;
  id v11 = sub_1001F772C(v4, v5, v9, v6);

  swift_bridgeObjectRelease();
  [v2 setAttributedText:v11];

  id v12 = sub_1001F0EAC(&qword_1004D1F08, (uint64_t (*)(uint64_t))sub_1001F0D88);
  uint64_t v13 = *v3;
  uint64_t v14 = v3[1];
  CGAffineTransform v15 = (void *)v3[2];
  id v16 = (void *)v3[3];
  Swift::String v17 = (void *)v3[4];
  id v18 = v17;
  swift_bridgeObjectRetain();
  id v19 = v15;
  id v20 = v16;
  id v21 = sub_1001F772C(v13, v14, v19, v17);

  swift_bridgeObjectRelease();
  [v12 setAttributedText:v21];
}

void sub_1001F1284(void *a1@<X8>)
{
  id v3 = (uint64_t *)(v1 + qword_1004D1F40);
  if ((*(unsigned char *)(v1 + qword_1004D1F40 + 48) & 1) == 0)
  {
    uint64_t v11 = v3[4];
    uint64_t v10 = v3[5];
    uint64_t v9 = v3[2];
    uint64_t v8 = v3[3];
    uint64_t v7 = *v3;
    uint64_t v6 = v3[1];
    goto LABEL_6;
  }
  uint64_t v4 = *(void *)MeasureCore.shared.unsafeMutableAddressor();
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 112);
  if (v5)
  {
    swift_beginAccess();
    if (*(void *)(v5 + 208))
    {
      swift_retain();
      ADProcessor.transformer.getter();
      swift_release();
      ADTransformer.viewToAD.getter();
      uint64_t v7 = v12;
      uint64_t v6 = v13;
      uint64_t v9 = v14;
      uint64_t v8 = v15;
      uint64_t v11 = v16;
      uint64_t v10 = v17;
      swift_release();
      *id v3 = v12;
      v3[1] = v13;
      v3[2] = v14;
      v3[3] = v15;
      v3[4] = v16;
      v3[5] = v17;
      *((unsigned char *)v3 + 48) = 0;
LABEL_6:
      *a1 = v7;
      a1[1] = v6;
      a1[2] = v9;
      a1[3] = v8;
      a1[4] = v11;
      a1[5] = v10;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

CGAffineTransform *sub_1001F138C@<X0>(CGFloat *a1@<X8>)
{
  uint64_t v3 = v1 + qword_1004D1F50;
  if (*(unsigned char *)(v1 + qword_1004D1F50 + 48))
  {
    CGAffineTransformMakeScale(&t1, 1.0, -1.0);
    long long v17 = *(_OWORD *)&t1.c;
    long long v18 = *(_OWORD *)&t1.a;
    CGFloat tx = t1.tx;
    CGFloat ty = t1.ty;
    [*(id *)(v1 + qword_1004D1EA0) frame];
    CGFloat Height = CGRectGetHeight(v22);
    CGAffineTransformMakeTranslation(&t1, 0.0, Height);
    long long v7 = *(_OWORD *)&t1.a;
    long long v8 = *(_OWORD *)&t1.c;
    long long v9 = *(_OWORD *)&t1.tx;
    *(_OWORD *)&t1.CGFloat a = v18;
    *(_OWORD *)&t1.CGFloat c = v17;
    t1.CGFloat tx = tx;
    t1.CGFloat ty = ty;
    *(_OWORD *)&t2.CGFloat a = v7;
    *(_OWORD *)&t2.CGFloat c = v8;
    *(_OWORD *)&t2.CGFloat tx = v9;
    CGAffineTransformConcat(&v19, &t1, &t2);
    CGAffineTransform t1 = v19;
    uint64_t result = CGAffineTransformInvert(&t2, &t1);
    CGFloat a = t2.a;
    CGFloat b = t2.b;
    CGFloat c = t2.c;
    CGFloat d = t2.d;
    CGFloat v16 = t2.tx;
    CGFloat v15 = t2.ty;
    *(CGFloat *)uint64_t v3 = t2.a;
    *(CGFloat *)(v3 + 8) = b;
    *(CGFloat *)(v3 + 16) = c;
    *(CGFloat *)(v3 + 24) = d;
    *(CGFloat *)(v3 + 32) = v16;
    *(CGFloat *)(v3 + 40) = v15;
    *(unsigned char *)(v3 + 48) = 0;
  }
  else
  {
    CGFloat v16 = *(double *)(v3 + 32);
    CGFloat v15 = *(double *)(v3 + 40);
    CGFloat c = *(double *)(v3 + 16);
    CGFloat d = *(double *)(v3 + 24);
    CGFloat a = *(double *)v3;
    CGFloat b = *(double *)(v3 + 8);
  }
  *a1 = a;
  a1[1] = b;
  a1[2] = c;
  a1[3] = d;
  a1[4] = v16;
  a1[5] = v15;
  return result;
}

double *sub_1001F14A8()
{
  if (*(void *)(v0 + qword_1004D1F90))
  {
    uint64_t v1 = *(double **)(v0 + qword_1004D1F90);
  }
  else
  {
    uint64_t v1 = _swiftEmptyArrayStorage;
    *(void *)(v0 + qword_1004D1F90) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1001F14F8(void *a1)
{
  uint64_t v70 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v75 = *(void *)(v2 - 8);
  uint64_t v76 = v2;
  __chkstk_darwin(v2);
  uint64_t v73 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for DispatchQoS();
  uint64_t v72 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v5 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = qword_1004D1E88;
  long long v7 = v1;
  NSString v8 = String._bridgeToObjectiveC()();
  long long v9 = self;
  id v10 = [v9 shaderWithFileNamed:v8];

  *(void *)&v1[v6] = v10;
  uint64_t v11 = qword_1004D1E90;
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v9 shaderWithFileNamed:v12];

  *(void *)&v7[v11] = v13;
  uint64_t v14 = &v7[qword_1004D1E98];
  *(void *)uint64_t v14 = 0xD000000000000012;
  *((void *)v14 + 1) = 0x800000010042CEF0;
  uint64_t v15 = qword_1004D1EA8;
  *(void *)&v7[v15] = [objc_allocWithZone((Class)SKNode) init];
  uint64_t v16 = qword_1004D1EB0;
  *(void *)&v7[v16] = [objc_allocWithZone((Class)SKNode) init];
  long long v17 = &v7[qword_1004D1EB8];
  *(_OWORD *)long long v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  v17[32] = 1;
  long long v18 = &v7[qword_1004D1EC0];
  *(_OWORD *)long long v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  v18[32] = 1;
  *(void *)&v7[qword_1004D1EC8] = 0;
  *(void *)&v7[qword_1004D1ED0] = 0;
  *(void *)&v7[qword_1004D1ED8] = 0;
  *(void *)&v7[qword_1004D1EE0] = 0;
  *(void *)&v7[qword_1004D1EE8] = 0;
  *(void *)&v7[qword_1004D1EF0] = 0;
  *(void *)&v7[qword_1004D1EF8] = 0;
  *(void *)&v7[qword_1004D1F00] = 0;
  *(void *)&v7[qword_1004D1F08] = 0;
  *(void *)&v7[qword_1004D1F10] = 0;
  *(void *)&v7[qword_1004D1F18] = 0;
  *(void *)&v7[qword_1004D1F20] = 0;
  CGAffineTransform v19 = &v7[qword_1004D1F28];
  if (qword_1004C3028 != -1) {
    swift_once();
  }
  id v20 = (void *)qword_1004F8818;
  id v21 = self;
  id v22 = v20;
  id v23 = [v21 whiteColor];
  id v24 = [v21 darkGrayColor];
  *(void *)CGAffineTransform v19 = 0;
  *((void *)v19 + 1) = 0xE000000000000000;
  *((void *)v19 + 2) = v22;
  *((void *)v19 + 3) = v23;
  *((void *)v19 + 4) = v24;
  v7[qword_1004D1F30] = 0;
  uint64_t v25 = qword_1004D1F38;
  LOBYTE(aBlock[0]) = 0;
  sub_100012894(&qword_1004C6AF8);
  swift_allocObject();
  *(void *)&v7[v25] = Synchronized.init(wrappedValue:)();
  Swift::String v26 = &v7[qword_1004D1F40];
  *((_OWORD *)v26 + 1) = 0u;
  *((_OWORD *)v26 + 2) = 0u;
  *(_OWORD *)Swift::String v26 = 0u;
  v26[48] = 1;
  Swift::String v27 = &v7[qword_1004D1F48];
  *((_OWORD *)v27 + 1) = 0u;
  *((_OWORD *)v27 + 2) = 0u;
  *(_OWORD *)Swift::String v27 = 0u;
  v27[48] = 1;
  id v28 = &v7[qword_1004D1F50];
  *(_OWORD *)id v28 = 0u;
  *((_OWORD *)v28 + 1) = 0u;
  *((_OWORD *)v28 + 2) = 0u;
  v28[48] = 1;
  uint64_t v29 = qword_1004D1F58;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = sub_100012894(qword_1004CDAF0);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v32 = qword_1004F8630;
  Swift::String v33 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 272);
  swift_retain();
  *(void *)&v7[v29] = v33(KeyPath, v32);
  uint64_t v34 = qword_1004D1F60;
  uint64_t v35 = swift_getKeyPath();
  uint64_t v36 = sub_100012894(&qword_1004CB2C0);
  uint64_t v37 = qword_1004F8630;
  Swift::String v38 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 272);
  swift_retain();
  *(void *)&v7[v34] = v38(v35, v37);
  uint64_t v39 = qword_1004D1F68;
  uint64_t v40 = sub_100012894(&qword_1004C7170);
  uint64_t v41 = swift_getKeyPath();
  uint64_t v42 = qword_1004F8630;
  uint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 272);
  swift_retain();
  *(void *)&v7[v39] = v43(v41, v42);
  uint64_t v44 = qword_1004D1F70;
  uint64_t v45 = swift_getKeyPath();
  uint64_t v46 = sub_100012894(&qword_1004C96C8);
  uint64_t v47 = qword_1004F8630;
  Swift::String v48 = *(uint64_t (**)(uint64_t, uint64_t))(v46 + 272);
  swift_retain();
  *(void *)&v7[v44] = v48(v45, v47);
  uint64_t v49 = qword_1004D1F78;
  uint64_t v50 = swift_getKeyPath();
  uint64_t v51 = sub_100012894((uint64_t *)&unk_1004C6A90);
  uint64_t v52 = qword_1004F8630;
  uint64_t v53 = *(uint64_t (**)(uint64_t, uint64_t))(v51 + 272);
  swift_retain();
  *(void *)&v7[v49] = v53(v50, v52);
  uint64_t v54 = qword_1004D1F80;
  LOBYTE(aBlock[0]) = 0;
  swift_allocObject();
  *(void *)&v7[v54] = Synchronized.init(wrappedValue:)();
  uint64_t v55 = &v7[qword_1004D1F88];
  *(void *)uint64_t v55 = 0;
  *((void *)v55 + 1) = 0;
  *(void *)&v7[qword_1004D1F90] = 0;
  uint64_t v56 = qword_1004D1F98;
  *(void *)&v7[qword_1004D1F98] = 0;
  uint64_t v57 = &v7[qword_1004D1FA0];
  *(void *)uint64_t v57 = 0;
  *((void *)v57 + 1) = 0xE000000000000000;
  id v58 = v70;
  *(void *)&v7[qword_1004D1EA0] = v70;
  id v59 = v58;
  id v60 = [v59 overlaySKScene];
  uint64_t v61 = *(void **)&v7[v56];
  *(void *)&v7[v56] = v60;

  v79.receiver = v7;
  v79.super_class = ObjectType;
  id v62 = [super init];
  id v63 = (void *)Contexts.UIKit.init()();
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = v62;
  aBlock[4] = sub_1001F767C;
  void aBlock[5] = v64;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_100493448;
  Swift::String v65 = _Block_copy(aBlock);
  id v66 = v62;
  static DispatchQoS.unspecified.getter();
  uint64_t v77 = _swiftEmptyArrayStorage;
  sub_1001F8A80((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_100039BEC();
  uint64_t v67 = v73;
  uint64_t v68 = v76;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();

  _Block_release(v65);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v67, v68);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v5, v74);
  swift_release();
  return v66;
}

void sub_1001F1D74()
{
  uint64_t v1 = *(void **)(v0 + qword_1004D1F98);
  if (v1)
  {
    uint64_t v2 = qword_1004D1EA8;
    uint64_t v3 = *(void *)(v0 + qword_1004D1EA8);
    id v30 = v1;
    [v30 addChild:v3];
    uint64_t v4 = *(void **)(v0 + v2);
    uint64_t v5 = qword_1004D1EB0;
    [v4 addChild:*(void *)(v0 + qword_1004D1EB0)];
    id v6 = sub_1001F10A0(&qword_1004D1F18);
    id v7 = sub_1001F0C74();
    [v6 addChild:v7];

    id v8 = *(id *)(v0 + v5);
    id v9 = sub_1001F10A0(&qword_1004D1F18);
    [v8 addChild:v9];

    id v10 = sub_1001F0C74();
    if (qword_1004C3058 != -1) {
      swift_once();
    }
    [v10 setPosition:*(double *)&qword_1004F8850, *(double *)&qword_1004F8858];

    id v11 = sub_1001F10A0(&qword_1004D1F18);
    if (qword_1004C3050 != -1) {
      swift_once();
    }
    [v11 setPosition:xmmword_1004F8840];

    id v12 = sub_1001F0EAC(&qword_1004D1EF0, (uint64_t (*)(uint64_t))sub_1001F0944);
    id v13 = sub_1001F0EAC(&qword_1004D1EE8, (uint64_t (*)(uint64_t))sub_1001F07A8);
    [v12 addChild:v13];

    id v14 = *(id *)(v0 + v5);
    id v15 = sub_1001F0EAC(&qword_1004D1EF0, (uint64_t (*)(uint64_t))sub_1001F0944);
    [v14 addChild:v15];

    id v16 = *(id *)(v0 + v5);
    id v17 = sub_1001F0614();
    [v16 addChild:v17];

    id v18 = sub_1001F0614();
    id v19 = sub_1001F0EAC(&qword_1004D1ED8, (uint64_t (*)(uint64_t))sub_1001F0478);
    [v18 addChild:v19];

    id v20 = sub_1001F10A0(&qword_1004D1F20);
    id v21 = sub_1001F0EAC(&qword_1004D1F08, (uint64_t (*)(uint64_t))sub_1001F0D88);
    [v20 addChild:v21];

    id v22 = sub_1001F0EAC(&qword_1004D1F10, (uint64_t (*)(uint64_t))sub_1001F0F10);
    id v23 = sub_1001F10A0(&qword_1004D1F20);
    [v22 addChild:v23];

    id v24 = sub_1001F0EAC(&qword_1004D1F10, (uint64_t (*)(uint64_t))sub_1001F0F10);
    id v25 = sub_1001F0EAC(&qword_1004D1EF8, (uint64_t (*)(uint64_t))sub_1001F0AE8);
    [v24 addChild:v25];

    id v26 = *(id *)(v0 + v5);
    id v27 = sub_1001F0EAC(&qword_1004D1F10, (uint64_t (*)(uint64_t))sub_1001F0F10);
    [v26 addChild:v27];

    id v28 = sub_1001F0EAC(&qword_1004D1F08, (uint64_t (*)(uint64_t))sub_1001F0D88);
    [v28 setPosition:*(double *)&qword_1004F8850, *(double *)&qword_1004F8858];

    id v29 = sub_1001F10A0(&qword_1004D1F20);
    [v29 setPosition:xmmword_1004F8840];
  }
}

void sub_1001F21D8()
{
  id v1 = objc_allocWithZone(v0);
  sub_1001F21F8();
}

void sub_1001F21F8()
{
  id v1 = v0;
  uint64_t v2 = qword_1004D1E88;
  NSString v3 = String._bridgeToObjectiveC()();
  uint64_t v4 = self;
  id v5 = [v4 shaderWithFileNamed:v3];

  *(void *)&v1[v2] = v5;
  uint64_t v6 = qword_1004D1E90;
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v4 shaderWithFileNamed:v7];

  *(void *)&v1[v6] = v8;
  id v9 = &v1[qword_1004D1E98];
  *id v9 = 0xD000000000000012;
  v9[1] = 0x800000010042CEF0;
  uint64_t v10 = qword_1004D1EA8;
  *(void *)&v1[v10] = [objc_allocWithZone((Class)SKNode) init];
  uint64_t v11 = qword_1004D1EB0;
  *(void *)&v1[v11] = [objc_allocWithZone((Class)SKNode) init];
  id v12 = &v1[qword_1004D1EB8];
  *(_OWORD *)id v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  v12[32] = 1;
  id v13 = &v1[qword_1004D1EC0];
  *(_OWORD *)id v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  v13[32] = 1;
  *(void *)&v1[qword_1004D1EC8] = 0;
  *(void *)&v1[qword_1004D1ED0] = 0;
  *(void *)&v1[qword_1004D1ED8] = 0;
  *(void *)&v1[qword_1004D1EE0] = 0;
  *(void *)&v1[qword_1004D1EE8] = 0;
  *(void *)&v1[qword_1004D1EF0] = 0;
  *(void *)&v1[qword_1004D1EF8] = 0;
  *(void *)&v1[qword_1004D1F00] = 0;
  *(void *)&v1[qword_1004D1F08] = 0;
  *(void *)&v1[qword_1004D1F10] = 0;
  *(void *)&v1[qword_1004D1F18] = 0;
  *(void *)&v1[qword_1004D1F20] = 0;
  id v14 = &v1[qword_1004D1F28];
  if (qword_1004C3028 != -1) {
    swift_once();
  }
  id v15 = (void *)qword_1004F8818;
  id v16 = self;
  id v17 = v15;
  id v18 = [v16 whiteColor];
  id v19 = [v16 darkGrayColor];
  *id v14 = 0;
  v14[1] = 0xE000000000000000;
  v14[2] = v17;
  v14[3] = v18;
  v14[4] = v19;
  v1[qword_1004D1F30] = 0;
  uint64_t v20 = qword_1004D1F38;
  sub_100012894(&qword_1004C6AF8);
  swift_allocObject();
  *(void *)&v1[v20] = Synchronized.init(wrappedValue:)();
  id v21 = &v1[qword_1004D1F40];
  *((_OWORD *)v21 + 1) = 0u;
  *((_OWORD *)v21 + 2) = 0u;
  *(_OWORD *)id v21 = 0u;
  v21[48] = 1;
  id v22 = &v1[qword_1004D1F48];
  *((_OWORD *)v22 + 1) = 0u;
  *((_OWORD *)v22 + 2) = 0u;
  *(_OWORD *)id v22 = 0u;
  v22[48] = 1;
  id v23 = &v1[qword_1004D1F50];
  *(_OWORD *)id v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *((_OWORD *)v23 + 2) = 0u;
  v23[48] = 1;
  uint64_t v24 = qword_1004D1F58;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v26 = sub_100012894(qword_1004CDAF0);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v27 = qword_1004F8630;
  id v28 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 272);
  swift_retain();
  *(void *)&v1[v24] = v28(KeyPath, v27);
  uint64_t v29 = qword_1004D1F60;
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = sub_100012894(&qword_1004CB2C0);
  uint64_t v32 = qword_1004F8630;
  Swift::String v33 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 272);
  swift_retain();
  *(void *)&v1[v29] = v33(v30, v32);
  uint64_t v34 = qword_1004D1F68;
  uint64_t v35 = sub_100012894(&qword_1004C7170);
  uint64_t v36 = swift_getKeyPath();
  uint64_t v37 = qword_1004F8630;
  Swift::String v38 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 272);
  swift_retain();
  *(void *)&v1[v34] = v38(v36, v37);
  uint64_t v39 = qword_1004D1F70;
  uint64_t v40 = swift_getKeyPath();
  uint64_t v41 = sub_100012894(&qword_1004C96C8);
  uint64_t v42 = qword_1004F8630;
  uint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t))(v41 + 272);
  swift_retain();
  *(void *)&v1[v39] = v43(v40, v42);
  uint64_t v44 = qword_1004D1F78;
  uint64_t v45 = swift_getKeyPath();
  uint64_t v46 = sub_100012894((uint64_t *)&unk_1004C6A90);
  uint64_t v47 = qword_1004F8630;
  Swift::String v48 = *(uint64_t (**)(uint64_t, uint64_t))(v46 + 272);
  swift_retain();
  *(void *)&v1[v44] = v48(v45, v47);
  uint64_t v49 = qword_1004D1F80;
  swift_allocObject();
  *(void *)&v1[v49] = Synchronized.init(wrappedValue:)();
  uint64_t v50 = &v1[qword_1004D1F88];
  *uint64_t v50 = 0;
  v50[1] = 0;
  *(void *)&v1[qword_1004D1F90] = 0;
  *(void *)&v1[qword_1004D1F98] = 0;
  uint64_t v51 = &v1[qword_1004D1FA0];
  *uint64_t v51 = 0;
  v51[1] = 0xE000000000000000;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1001F27B8()
{
  return swift_release();
}

void sub_1001F281C(void *__src, uint64_t a2)
{
  memcpy(__dst, __src, sizeof(__dst));
  uint64_t v3 = qword_1004D1EB0;
  id v4 = *(id *)(a2 + qword_1004D1EB0);
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 actionForKey:v5];

  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  if ((((v6 == 0) ^ v12) & 1) == 0)
  {
    id v7 = *(id *)(a2 + v3);
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [v7 actionForKey:v8];

    if (v9) {
    BOOL v12 = v9 != 0;
    }
    swift_retain();
    Synchronized.wrappedValue.setter();
    swift_release();
  }
  uint64_t v10 = sub_1000A3850();
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    sub_1001F29D8();
    sub_1001F2D40();
    swift_retain();
    Synchronized.wrappedValue.getter();
    swift_release();
    if (v12) {
      sub_1001F3594(v11);
    }
  }
}

void sub_1001F29D8()
{
  void (*v2)(void *__return_ptr, uint64_t);
  uint64_t v3;
  void *v4;
  void (*v5)(unsigned char *__return_ptr, uint64_t);
  uint64_t v6;
  float v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  void *v14;
  CGPoint v15;
  id v16;
  uint64_t v17;
  id v18;
  CGAffineTransform v19;
  unsigned char v20[512];
  _OWORD v21[32];
  unsigned char v22[512];
  void __src[68];
  void __dst[68];
  CGPoint v25;
  CGPoint v26;

  uint64_t v1 = v0;
  uint64_t v2 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v0 + qword_1004D1F58) + 144);
  uint64_t v3 = swift_retain();
  v2(__src, v3);
  swift_release();
  memcpy(__dst, __src, 0x213uLL);
  sub_1000732CC((uint64_t)__dst);
  if ((__dst[60] & 1) == 0)
  {
    swift_retain();
    StateValue.wrappedValue.getter();
    swift_release();
    memcpy(__src, v22, 0x200uLL);
    id v4 = (void *)sub_1000A3850();
    sub_100016F7C((uint64_t)__src);
    if (v4)
    {

      NSString v5 = *(void (**)(unsigned char *__return_ptr, uint64_t))(**(void **)(v1 + qword_1004D1F78) + 144);
      id v6 = swift_retain();
      v5(v22, v6);
      swift_release();
      if ((v22[96] & 1) == 0)
      {
        id v7 = -COERCE_FLOAT(vdupq_n_s64(*(unint64_t *)(v22 + 88)).i32[2]);
        NSString v8 = (float)(v7 - *(float *)Float.piDiv2.unsafeMutableAddressor());
        if (qword_1004C3078 != -1) {
          swift_once();
        }
        id v9 = *(double *)&qword_1004F8888 + 1.0;
        CGAffineTransformMakeRotation((CGAffineTransform *)v22, v8);
        v25.x = 0.0;
        v25.y = v9;
        CGPointApplyAffineTransform(v25, (CGAffineTransform *)v22);
        type metadata accessor for MeasureCamera();
        swift_retain();
        StateValue.wrappedValue.getter();
        swift_release();
        memcpy(v21, v22, sizeof(v21));
        sub_100016F7C((uint64_t)v21);
        swift_retain();
        StateValue.wrappedValue.getter();
        swift_release();
        memcpy(v22, v20, sizeof(v22));
        sub_100016F7C((uint64_t)v22);
        static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
        CGPoint.init(_:)();
        static CGPoint.- infix(_:_:)();
        uint64_t v11 = v10;
        id v13 = v12;
        id v14 = self;
        sub_1001F138C((CGFloat *)v20);
        id v19 = *(CGAffineTransform *)v20;
        v26.x = v11;
        v26.y = v13;
        id v15 = CGPointApplyAffineTransform(v26, &v19);
        id v16 = [v14 moveTo:v15.x, v15.y, 0.0];
        id v17 = qword_1004D1EA8;
        [*(id *)(v1 + qword_1004D1EA8) runAction:v16];
        id v18 = [v14 rotateToAngle:v8 duration:0.0];
        [*(id *)(v1 + v17) runAction:v18];
      }
    }
  }
}

uint64_t sub_1001F2D40()
{
  void (*v10)(Swift::String *__return_ptr, uint64_t);
  uint64_t v11;
  uint64_t result;
  void (*v13)(Swift::String *__return_ptr, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void (*v16)(Swift::String *__return_ptr, uint64_t);
  uint64_t v17;
  void (*v18)(Swift::String *__return_ptr, uint64_t);
  uint64_t v19;
  void (*v20)(Swift::String *__return_ptr, uint64_t);
  uint64_t v21;
  void (*v22)(Swift::String *__return_ptr, uint64_t);
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  id v26;
  NSString v27;
  uint64_t v28;
  id v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double *v40;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v42;
  unint64_t v43;
  double *v44;
  uint64_t v45;
  id v46;
  NSString v47;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  void v55[3];
  uint64_t v56;
  uint64_t v57;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v60;
  Swift::String v61[34];
  unsigned char v62[544];

  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_100012894(&qword_1004CC360);
  id v60 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v60 + 64);
  uint64_t v5 = __chkstk_darwin(v3 - 8);
  id v6 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  NSString v8 = (char *)v55 - v7;
  uint64_t v9 = qword_1004D1F58;
  uint64_t v10 = *(void (**)(Swift::String *__return_ptr, uint64_t))(**(void **)&v0[qword_1004D1F58] + 144);
  uint64_t v11 = swift_retain();
  v10(v61, v11);
  swift_release();
  memcpy(v62, v61, 0x213uLL);
  uint64_t result = sub_1000732CC((uint64_t)v62);
  if ((v62[456] & 1) == 0)
  {
    id v13 = *(void (**)(Swift::String *__return_ptr, uint64_t))(**(void **)&v0[v9] + 144);
    id v14 = swift_retain();
    v13(v61, v14);
    uint64_t result = swift_release();
    if (v61[31]._countAndFlagsBits)
    {
      uint64_t countAndFlagsBits = v61[31]._countAndFlagsBits;
      object = v61[30]._object;
      id v15 = qword_1004D1F60;
      id v16 = *(void (**)(Swift::String *__return_ptr, uint64_t))(**(void **)&v0[qword_1004D1F60] + 144);
      id v17 = swift_retain();
      v16(v61, v17);
      swift_release();
      if ((v61[4]._countAndFlagsBits & 1) == 0)
      {
        id v18 = *(void (**)(Swift::String *__return_ptr, uint64_t))(**(void **)&v0[v15] + 144);
        id v19 = swift_retain();
        v18(v61, v19);
        uint64_t result = swift_release();
        if (v61[4]._countAndFlagsBits)
        {
          __break(1u);
          goto LABEL_30;
        }
        simd_float4x4.position.getter();
      }
      uint64_t v20 = *(void (**)(Swift::String *__return_ptr, uint64_t))(**(void **)&v0[v15] + 144);
      id v21 = swift_retain();
      v20(v61, v21);
      swift_release();
      if (((uint64_t)v61[9]._object & 1) != 0
        || (id v22 = *(void (**)(Swift::String *__return_ptr, uint64_t))(**(void **)&v0[v15] + 144),
            id v23 = swift_retain(),
            v22(v61, v23),
            uint64_t result = swift_release(),
            ((uint64_t)v61[9]._object & 1) == 0))
      {
        uint64_t v24 = *(void (**)(uint64_t))(**(void **)&v0[qword_1004D1F70] + 144);
        id v25 = swift_retain();
        v24(v25);
        swift_release();
        uint64_t v26 = sub_1000B1320();
        sub_1001F7920((uint64_t)v26, &v61[0]._countAndFlagsBits);
        swift_bridgeObjectRelease();
        uint64_t v27 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v1 set_accessibilitySpeakableHeight:v27];

        id v28 = qword_1004D1F30;
        if (v1[qword_1004D1F30]) {
          return swift_bridgeObjectRelease();
        }
        uint64_t v29 = sub_1001F3F4C();
        if (!v29) {
          return swift_bridgeObjectRelease();
        }
        uint64_t v57 = ObjectType;
        v55[0] = v29;
        if (qword_1004C2B20 != -1) {
          swift_once();
        }
        v55[2] = qword_1004F82E8;
        uint64_t v56 = qword_1004F82E0;
        v55[1] = qword_1004F82F0;
        v61[0]._uint64_t countAndFlagsBits = 0;
        v61[0]._object = (void *)0xE000000000000000;
        _StringGuts.grow(_:)(71);
        v30._object = (void *)0x800000010042CF10;
        v30._uint64_t countAndFlagsBits = 0xD000000000000013;
        String.append(_:)(v30);
        Float.write<A>(to:)();
        v31._uint64_t countAndFlagsBits = 0xD000000000000016;
        v31._object = (void *)0x800000010042CF30;
        String.append(_:)(v31);
        Float.write<A>(to:)();
        v32._uint64_t countAndFlagsBits = 0xD000000000000017;
        v32._object = (void *)0x800000010042CF50;
        String.append(_:)(v32);
        Float.write<A>(to:)();
        v33._uint64_t countAndFlagsBits = 46;
        v33._object = (void *)0xE100000000000000;
        String.append(_:)(v33);
        Log.default(_:isPrivate:)(v61[0], 0);
        swift_bridgeObjectRelease();
        sub_100012894((uint64_t *)&unk_1004CEA00);
        uint64_t v34 = swift_allocObject();
        *(_OWORD *)(v34 + 16) = xmmword_1003F8B20;
        *(void *)(v34 + 32) = v1;
        v61[0]._uint64_t countAndFlagsBits = v34;
        specialized Array._endMutation()();
        sub_1001F8A80(&qword_1004D2238, (void (*)(uint64_t))type metadata accessor for PersonHeightView);
        uint64_t v35 = v1;
        uint64_t result = MeasurementEvent.init(name:results:)();
        if (qword_1004C29D8 != -1) {
          uint64_t result = swift_once();
        }
        if (qword_1004F7FE8)
        {
          uint64_t v36 = *(void *)(qword_1004F7FE8 + qword_1004F84C0);
          if (v36)
          {
            uint64_t v57 = v28;
            sub_1001F8750((uint64_t)v8, (uint64_t)v6);
            uint64_t v37 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
            id v60 = swift_allocObject();
            sub_1001F88FC((uint64_t)v6, v60 + v37);
            Swift::String v38 = v36 + OBJC_IVAR____TtC7Measure15ResultsReporter_report;
            uint64_t v39 = *(int *)(type metadata accessor for Report(0) + 20);
            uint64_t v40 = *(double **)(v38 + v39);
            swift_retain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v38 + v39) = v40;
            uint64_t v56 = (uint64_t)v35;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t v40 = sub_10006ED78(0, *((void *)v40 + 2) + 1, 1, v40);
              *(void *)(v38 + v39) = v40;
            }
            uint64_t v43 = *((void *)v40 + 2);
            uint64_t v42 = *((void *)v40 + 3);
            id v28 = v57;
            if (v43 >= v42 >> 1)
            {
              uint64_t v40 = sub_10006ED78((double *)(v42 > 1), v43 + 1, 1, v40);
              *(void *)(v38 + v39) = v40;
            }
            *((void *)v40 + 2) = v43 + 1;
            uint64_t v44 = &v40[2 * v43];
            uint64_t v45 = v60;
            *((void *)v44 + 4) = sub_1001F8964;
            *((void *)v44 + 5) = v45;
            sub_1000E8A7C();
            swift_release();
            uint64_t v35 = (char *)v56;
          }
          uint64_t v46 = *(id *)&v35[qword_1004D1EB0];
          uint64_t v47 = String._bridgeToObjectiveC()();
          Swift::String v48 = (void *)v55[0];
          [v46 runAction:v55[0] withKey:v47];

          [v35 toggleViewVisibilityWithIsVisible:1];
          sub_1001F86F0((uint64_t)v8);
          v1[v28] = 1;
          uint64_t v49 = &v35[qword_1004D1F88];
          uint64_t v50 = countAndFlagsBits;
          *(void *)uint64_t v49 = object;
          *((void *)v49 + 1) = v50;
          return swift_bridgeObjectRelease();
        }
LABEL_31:
        __break(1u);
        return result;
      }
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
  }
  uint64_t v51 = qword_1004D1F30;
  if (v1[qword_1004D1F30] == 1)
  {
    uint64_t v52 = (uint64_t *)&v1[qword_1004D1F88];
    uint64_t v53 = *(void *)&v1[qword_1004D1F88 + 8];
    if (v53)
    {
      uint64_t v54 = *v52;
      swift_bridgeObjectRetain();
      [v1 toggleViewVisibilityWithIsVisible:0];
      v1[v51] = 0;
      if (qword_1004C2C10 != -1) {
        swift_once();
      }
      sub_100146070(v54, v53);
      swift_bridgeObjectRelease();
      *uint64_t v52 = 0;
      v52[1] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1001F3594(void *a1)
{
  void (*v8)(unsigned char *__return_ptr);
  id v9;
  void *v10;
  int64_t Width;
  float *v12;
  id v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  id v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  long long v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  float *v28;
  double v29;
  uint64_t v30;
  float v31;
  float v32;
  uint64_t v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  CGPoint v39;
  double v40;
  double *v43;
  unint64_t v44;
  char *v45;
  float v46;
  double *v47;
  uint64_t v48;
  CGFloat *v49;
  CGFloat v50;
  CGFloat v51;
  long long v52;
  CGFloat v53;
  CGPoint v54;
  double v55;
  float v56;
  float v57;
  float v58;
  double v59;
  id v60;
  id v61;
  double v62;
  double v63;
  id v64;
  double v65;
  double v66;
  double v67;
  id v68;
  void *v69;
  uint64_t v70;
  double *v71;
  unsigned __int8 *BaseAddress;
  id v73;
  id v74;
  CGAffineTransform v75;
  unsigned char v76[512];
  unsigned char v77[512];
  unsigned char __src[531];
  void __dst[68];
  _OWORD v80[4];
  uint64_t vars8;
  CGPoint v82;
  CGPoint v83;
  CGPoint v84;
  CGPoint v85;
  CGPoint v86;

  uint64_t v2 = v1;
  id v4 = [a1 segmentationBuffer];
  if (!v4) {
    return;
  }
  uint64_t v74 = v4;
  id v5 = [a1 sceneDepth];
  if (!v5 || (id v6 = v5, v73 = [v5 depthMap], v6, !v73))
  {
    uint64_t v10 = v74;
LABEL_8:

    return;
  }
  uint64_t v7 = *(void **)&v1[qword_1004D1F98];
  if (!v7)
  {

    uint64_t v10 = v73;
    goto LABEL_8;
  }
  NSString v8 = *(void (**)(unsigned char *__return_ptr))(**(void **)&v1[qword_1004D1F58] + 144);
  swift_retain();
  uint64_t v9 = v7;
  v8(__src);
  swift_release();
  memcpy(__dst, __src, 0x213uLL);
  sub_1000732CC((uint64_t)__dst);
  if (__dst[60])
  {
  }
  else
  {
    CVPixelBufferLockBaseAddress((CVPixelBufferRef)v74, 1uLL);
    CGFloat Width = CVPixelBufferGetWidth((CVPixelBufferRef)v74);
    BaseAddress = (unsigned __int8 *)CVPixelBufferGetBaseAddress((CVPixelBufferRef)v74);
    CVPixelBufferLockBaseAddress((CVPixelBufferRef)v73, 1uLL);
    BOOL v12 = (float *)CVPixelBufferGetBaseAddress((CVPixelBufferRef)v73);
    id v13 = sub_1001F0EAC(&qword_1004D1ED8, (uint64_t (*)(uint64_t))sub_1001F0478);
    if (qword_1004C3068 != -1) {
LABEL_63:
    }
      swift_once();
    [v13 convertPoint:v9 toNode:xmmword_1004F8870];
    id v15 = v14;
    id v17 = v16;

    sub_1001F138C((CGFloat *)v80);
    *(_OWORD *)__srCGFloat c = v80[0];
    *(_OWORD *)&__src[16] = v80[1];
    *(_OWORD *)&__src[32] = v80[2];
    CGAffineTransformInvert((CGAffineTransform *)v77, (CGAffineTransform *)__src);
    *(_OWORD *)__srCGFloat c = *(_OWORD *)v77;
    *(_OWORD *)&__src[16] = *(_OWORD *)&v77[16];
    *(_OWORD *)&__src[32] = *(_OWORD *)&v77[32];
    v82.x = v15;
    v82.y = v17;
    CGPointApplyAffineTransform(v82, (CGAffineTransform *)__src);
    id v18 = sub_1001F0EAC(&qword_1004D1ED8, (uint64_t (*)(uint64_t))sub_1001F0478);
    if (qword_1004C3060 != -1) {
      swift_once();
    }
    [v18 convertPoint:v9 toNode:*(double *)&qword_1004F8860, *(double *)&qword_1004F8868];
    uint64_t v20 = v19;
    id v22 = v21;

    id v23 = *(_OWORD *)&v2[qword_1004D1F50 + 16];
    *(_OWORD *)__srCGFloat c = *(_OWORD *)&v2[qword_1004D1F50];
    *(_OWORD *)&__src[16] = v23;
    *(_OWORD *)&__src[32] = *(_OWORD *)&v2[qword_1004D1F50 + 32];
    CGAffineTransformInvert((CGAffineTransform *)v77, (CGAffineTransform *)__src);
    *(_OWORD *)__srCGFloat c = *(_OWORD *)v77;
    *(_OWORD *)&__src[16] = *(_OWORD *)&v77[16];
    *(_OWORD *)&__src[32] = *(_OWORD *)&v77[32];
    v83.x = v20;
    v83.y = v22;
    CGPointApplyAffineTransform(v83, (CGAffineTransform *)__src);
    static CGPoint.- infix(_:_:)();
    CGPoint.normalized()();
    id v25 = v24;
    uint64_t v27 = v26;
    id v28 = (float *)Float.piDiv2.unsafeMutableAddressor();
    CGAffineTransformMakeRotation((CGAffineTransform *)__src, *v28);
    v84.x = v25;
    v84.y = v27;
    CGPointApplyAffineTransform(v84, (CGAffineTransform *)__src);
    if (qword_1004C3238 != -1) {
      swift_once();
    }
    uint64_t v69 = v9;
    if ((*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80) & 1) == 0)
    {
      CGRectGetHeight(*(CGRect *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 48));
      uint64_t v71 = sub_1001F83E4();
      type metadata accessor for MeasureCamera();
      swift_retain();
      StateValue.wrappedValue.getter();
      swift_release();
      memcpy(v77, __src, sizeof(v77));
      sub_100016F7C((uint64_t)v77);
      swift_retain();
      StateValue.wrappedValue.getter();
      swift_release();
      memcpy(__src, v76, 0x200uLL);
      sub_100016F7C((uint64_t)__src);
      static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
      CGPoint.init(_:)();
      uint64_t v29 = (double)Width;
      uint64_t v30 = -1;
      uint64_t v31 = 0.0;
      CGFloat Width = 0xC3E0000000000001;
      uint64_t v32 = 0.0;
LABEL_20:
      uint64_t v34 = -1;
      while (1)
      {
        CGPoint.divide(by:)();
        static CGPoint.+ infix(_:_:)();
        uint64_t v36 = v35;
        Swift::String v38 = v37;
        id v13 = v2;
        sub_1001F1284(v76);
        uint64_t v75 = *(CGAffineTransform *)v76;
        v85.x = v36;
        v85.y = v38;
        uint64_t v39 = CGPointApplyAffineTransform(v85, &v75);
        uint64_t v40 = round(v39.x) + round(v39.y) * v29;
        if ((~*(void *)&v40 & 0x7FF0000000000000) == 0) {
          break;
        }
        if (v40 <= -9.22337204e18) {
          goto LABEL_53;
        }
        if (v40 >= 9.22337204e18) {
          goto LABEL_54;
        }
        if (v39.x >= 0.0 && v39.x < 256.0 && v39.y >= 0.0 && v39.y < 192.0)
        {
          uint64_t v32 = v32 + v12[(uint64_t)v40];
          uint64_t v31 = v31 + 1.0;
        }
        if (++v34 == 2)
        {
          if (v30++ != 1) {
            goto LABEL_20;
          }
          uint64_t v43 = v71;
          uint64_t v70 = *((void *)v71 + 2);
          if (v70)
          {
            uint64_t v44 = 0;
            uint64_t v45 = &v2[qword_1004D1F40];
            uint64_t v9 = (id)0xC3E0000000000001;
            uint64_t v46 = v32 / v31;
            while (1)
            {
              if (v44 >= *((void *)v43 + 2))
              {
LABEL_62:
                __break(1u);
                goto LABEL_63;
              }
              uint64_t v47 = sub_1001F6098();
              id v13 = v47;
              Swift::String v48 = *((void *)v47 + 2);
              if (v48) {
                break;
              }
LABEL_38:
              ++v44;
              swift_bridgeObjectRelease();
              uint64_t v43 = v71;
              if (v44 == v70) {
                goto LABEL_55;
              }
            }
            CGFloat Width = qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits;
            uint64_t v49 = v47 + 5;
            while ((*(unsigned char *)(Width + 80) & 1) == 0)
            {
              uint64_t v51 = *(v49 - 1);
              uint64_t v50 = *v49;
              v86.x = v51;
              v86.y = *v49;
              if (!CGRectContainsPoint(*(CGRect *)(Width + 48), v86)) {
                goto LABEL_38;
              }
              uint64_t v52 = *((_OWORD *)v45 + 1);
              *(_OWORD *)&v75.CGFloat a = *(_OWORD *)v45;
              *(_OWORD *)&v75.CGFloat c = v52;
              *(_OWORD *)&v75.CGFloat tx = *((_OWORD *)v45 + 2);
              uint64_t v53 = v51;
              *(CGFloat *)&uint64_t v52 = v50;
              uint64_t v54 = CGPointApplyAffineTransform(*(CGPoint *)((char *)&v52 - 8), &v75);
              uint64_t v55 = round(v54.x) + round(v54.y) * v29;
              if ((~*(void *)&v55 & 0x7FF0000000000000) == 0)
              {
                __break(1u);
LABEL_60:
                __break(1u);
LABEL_61:
                __break(1u);
                goto LABEL_62;
              }
              if (v55 <= -9.22337204e18) {
                goto LABEL_60;
              }
              if (v55 >= 9.22337204e18) {
                goto LABEL_61;
              }
              if (BaseAddress[(uint64_t)v55] >= 2u && vabds_f32(v12[(uint64_t)v55], v46) < 0.2)
              {
                swift_bridgeObjectRelease();
                goto LABEL_55;
              }
              v49 += 2;
              if (!--v48) {
                goto LABEL_38;
              }
            }
            __break(1u);
            goto LABEL_65;
          }
LABEL_55:
          swift_bridgeObjectRelease();
          static CGPoint.distance(_:_:)();
          uint64_t v57 = v56;
          if (qword_1004C3070 != -1) {
            swift_once();
          }
          id v58 = *(double *)&qword_1004F8880;
          id v59 = (float)(v57 / v58);
          id v60 = sub_1001F0EAC(&qword_1004D1ED8, (uint64_t (*)(uint64_t))sub_1001F0478);
          uint64_t v61 = [v60 fillColor];

          UIColor.rgba.getter();
          id v63 = v62;
          uint64_t v64 = sub_1001F0EAC(&qword_1004D1ED8, (uint64_t (*)(uint64_t))sub_1001F0478);
          UIColor.rgba.getter();
          id v66 = v65;
          UIColor.rgba.getter();
          uint64_t v68 = [objc_allocWithZone((Class)UIColor) initWithRed:v66 green:(v63 + v59) * 0.5 blue:v67 alpha:1.0];
          [v64 setFillColor:v68];

          CVPixelBufferUnlockBaseAddress((CVPixelBufferRef)v73, 1uLL);
          CVPixelBufferUnlockBaseAddress((CVPixelBufferRef)v74, 1uLL);

          return;
        }
      }
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
LABEL_65:
    __break(1u);
  }
}

id sub_1001F3F4C()
{
  void (*v2)(void *__return_ptr, void);
  uint64_t v3;
  void (*v4)(void *__return_ptr, void);
  uint64_t v5;
  id v6;
  int v7;
  double v8;
  void *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  id v26;
  uint64_t v27;
  void *v28;
  char *v29;
  id v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  void *v35;
  char *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  Class isa;
  uint64_t v50;
  Class v51;
  id v52;
  uint64_t v53;
  Class v54;
  id v55;
  uint64_t v56;
  Class v57;
  id v58;
  uint64_t v59;
  Class v60;
  uint64_t v61;
  Class v62;
  id v63;
  uint64_t v64;
  Class v65;
  id v66;
  uint64_t v67;
  Class v68;
  id v69;
  uint64_t v70;
  Class v71;
  id v72;
  uint64_t v73;
  id v74;
  id v75;
  Class v76;
  id v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  id v82;
  Class v83;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  void aBlock[64];
  _OWORD v127[32];
  void v128[64];
  _OWORD v129[32];
  void v130[68];
  void __src[68];
  void __dst[68];

  uint64_t v1 = qword_1004D1F58;
  uint64_t v2 = *(void (**)(void *__return_ptr, void))(**(void **)&v0[qword_1004D1F58] + 144);
  uint64_t v3 = swift_retain();
  v2(__src, v3);
  swift_release();
  memcpy(__dst, __src, 0x213uLL);
  sub_1000732CC((uint64_t)__dst);
  if (__dst[60]) {
    return 0;
  }
  id v4 = *(void (**)(void *__return_ptr, void))(**(void **)&v0[v1] + 144);
  id v5 = swift_retain();
  v4(v130, v5);
  swift_release();
  memcpy(__src, v130, 0x213uLL);
  sub_1000732CC((uint64_t)__src);
  if (__src[57]) {
    return 0;
  }
  uint64_t v7 = HIDWORD(__src[56]);
  type metadata accessor for MeasureCamera();
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(v127, v130, sizeof(v127));
  sub_100016F7C((uint64_t)v127);
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(v128, v130, sizeof(v128));
  sub_100016F7C((uint64_t)v128);
  static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
  CGPoint.init(_:)();
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(v129, v130, sizeof(v129));
  sub_100016F7C((uint64_t)v129);
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(v130, aBlock, 0x200uLL);
  sub_100016F7C((uint64_t)v130);
  static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
  CGPoint.init(_:)();
  static CGPoint.- infix(_:_:)();
  NSString v8 = -CGPoint.length()();
  uint64_t v9 = self;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v0;
  aBlock[4] = sub_1001F89E4;
  void aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000EE160;
  aBlock[3] = &unk_1004934C0;
  uint64_t v11 = _Block_copy(aBlock);
  BOOL v12 = v0;
  swift_release();
  id v125 = [v9 customActionWithDuration:v11 actionBlock:0.0];
  _Block_release(v11);
  id v122 = [v9 moveTo:0.0 duration:v8];
  id v116 = [v9 fadeAlphaTo:0.0 duration:0.0];
  id v118 = [v9 moveTo:0.0 duration:0.0];
  aBlock[4] = sub_1001F52A4;
  void aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001F52C0;
  aBlock[3] = &unk_1004934E8;
  id v13 = _Block_copy(aBlock);
  [v118 setTimingFunction:v13];
  _Block_release(v13);
  id v14 = swift_allocObject();
  *(void *)(v14 + 16) = v12;
  aBlock[4] = sub_1001F89EC;
  void aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000EE160;
  aBlock[3] = &unk_100493538;
  id v15 = _Block_copy(aBlock);
  id v16 = v12;
  swift_release();
  uint64_t v124 = [v9 customActionWithDuration:v15 actionBlock:0.0];
  _Block_release(v15);
  id v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = v7;
  *(void *)(v17 + 24) = v16;
  aBlock[4] = sub_1001F8A2C;
  void aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000EE160;
  aBlock[3] = &unk_100493588;
  id v18 = _Block_copy(aBlock);
  id v19 = v16;
  swift_release();
  Swift::String v107 = [v9 customActionWithDuration:v18 actionBlock:1.4];
  _Block_release(v18);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  aBlock[4] = sub_1001F8A38;
  void aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000EE160;
  aBlock[3] = &unk_1004935D8;
  id v21 = _Block_copy(aBlock);
  id v22 = v19;
  swift_release();
  Swift::String v110 = [v9 customActionWithDuration:v21 actionBlock:0.0];
  _Block_release(v21);
  id v23 = swift_allocObject();
  *(void *)(v23 + 16) = v22;
  aBlock[4] = sub_1001F8A40;
  void aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000EE160;
  aBlock[3] = &unk_100493628;
  uint64_t v24 = _Block_copy(aBlock);
  id v25 = v22;
  swift_release();
  uint64_t v26 = [v9 customActionWithDuration:v24 actionBlock:0.0];
  _Block_release(v24);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v25;
  aBlock[4] = sub_1001F8A48;
  void aBlock[5] = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000EE160;
  aBlock[3] = &unk_100493678;
  id v28 = _Block_copy(aBlock);
  uint64_t v29 = v25;
  swift_release();
  uint64_t v30 = [v9 customActionWithDuration:v28 actionBlock:0.0];
  _Block_release(v28);
  id v103 = [v9 waitForDuration:0.05];
  id v100 = [v9 fadeInWithDuration:0.4];
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v29;
  aBlock[4] = sub_1001F8A50;
  void aBlock[5] = v31;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000EE160;
  aBlock[3] = &unk_1004936C8;
  uint64_t v32 = _Block_copy(aBlock);
  Swift::String v33 = v29;
  swift_release();
  id v120 = [v9 customActionWithDuration:v32 actionBlock:0.4];
  _Block_release(v32);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v33;
  aBlock[4] = sub_1001F8A58;
  void aBlock[5] = v34;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000EE160;
  aBlock[3] = &unk_100493718;
  uint64_t v35 = _Block_copy(aBlock);
  uint64_t v36 = v33;
  swift_release();
  Swift::String v112 = [v9 customActionWithDuration:v35 actionBlock:0.4];
  _Block_release(v35);
  aBlock[4] = sub_1001F5C8C;
  void aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001F52C0;
  aBlock[3] = &unk_100493740;
  uint64_t v37 = _Block_copy(aBlock);
  [v112 setTimingFunction:v37];
  _Block_release(v37);
  Swift::String v105 = [v9 waitForDuration:0.37];
  Swift::String v38 = swift_allocObject();
  *(void *)(v38 + 16) = v36;
  aBlock[4] = sub_1001F8A60;
  void aBlock[5] = v38;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000EE160;
  aBlock[3] = &unk_100493790;
  uint64_t v39 = _Block_copy(aBlock);
  uint64_t v40 = v36;
  swift_release();
  NSString v98 = [v9 customActionWithDuration:v39 actionBlock:0.25];
  _Block_release(v39);
  id v94 = [v9 waitForDuration:0.1];
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v40;
  aBlock[4] = sub_1001F8A68;
  void aBlock[5] = v41;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000EE160;
  aBlock[3] = &unk_1004937E0;
  uint64_t v42 = _Block_copy(aBlock);
  uint64_t v43 = v40;
  swift_release();
  id v91 = [v9 customActionWithDuration:v42 actionBlock:0.11];
  _Block_release(v42);
  uint64_t v89 = [v9 waitForDuration:0.07];
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v43;
  aBlock[4] = sub_1001F8A70;
  void aBlock[5] = v44;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000EE160;
  aBlock[3] = &unk_100493830;
  uint64_t v45 = _Block_copy(aBlock);
  uint64_t v46 = v43;
  swift_release();
  uint64_t v47 = [v9 customActionWithDuration:v45 actionBlock:0.08];
  _Block_release(v45);
  sub_100012894((uint64_t *)&unk_1004CEA00);
  Swift::String v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_1003FA960;
  *(void *)(v48 + 32) = v26;
  *(void *)(v48 + 40) = v30;
  *(void *)(v48 + 48) = v110;
  *(void *)(v48 + 56) = v116;
  *(void *)(v48 + 64) = v125;
  aBlock[0] = v48;
  specialized Array._endMutation()();
  sub_10001C99C(0, (unint64_t *)&unk_1004D2240);
  id v115 = v26;
  id v114 = v30;
  Swift::String v111 = v110;
  id v117 = v116;
  Swift::String v109 = v125;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v97 = [v9 group:isa];

  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_1003F94A0;
  *(void *)(v50 + 32) = v118;
  *(void *)(v50 + 40) = v107;
  aBlock[0] = v50;
  specialized Array._endMutation()();
  id v119 = v118;
  Swift::String v108 = v107;
  uint64_t v51 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v52 = [v9 group:v51];

  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1003F94A0;
  *(void *)(v53 + 32) = v122;
  *(void *)(v53 + 40) = v52;
  aBlock[0] = v53;
  specialized Array._endMutation()();
  id v123 = v122;
  id v102 = v52;
  uint64_t v54 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v55 = [v9 sequence:v54];

  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_1003F94A0;
  *(void *)(v56 + 32) = v103;
  *(void *)(v56 + 40) = v100;
  aBlock[0] = v56;
  specialized Array._endMutation()();
  id v104 = v103;
  uint64_t v101 = v100;
  uint64_t v57 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v58 = [v9 sequence:v57];

  id v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = xmmword_1003F94A0;
  *(void *)(v59 + 32) = v55;
  *(void *)(v59 + 40) = v58;
  aBlock[0] = v59;
  specialized Array._endMutation()();
  uint64_t v96 = v55;
  char v93 = v58;
  id v60 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v87 = [v9 group:v60];

  uint64_t v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_1003F9450;
  *(void *)(v61 + 32) = v94;
  *(void *)(v61 + 40) = v91;
  *(void *)(v61 + 48) = v89;
  *(void *)(v61 + 56) = v47;
  aBlock[0] = v61;
  specialized Array._endMutation()();
  uint64_t v95 = v94;
  NSString v92 = v91;
  uint64_t v90 = v89;
  uint64_t v88 = v47;
  id v62 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v63 = [v9 sequence:v62];

  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_1003F94A0;
  *(void *)(v64 + 32) = v98;
  *(void *)(v64 + 40) = v63;
  aBlock[0] = v64;
  specialized Array._endMutation()();
  uint64_t v99 = v98;
  uint64_t v86 = v63;
  Swift::String v65 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v66 = [v9 group:v65];

  uint64_t v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = xmmword_1003F94A0;
  *(void *)(v67 + 32) = v105;
  *(void *)(v67 + 40) = v66;
  aBlock[0] = v67;
  specialized Array._endMutation()();
  Swift::String v106 = v105;
  uint64_t v85 = v66;
  uint64_t v68 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v69 = [v9 sequence:v68];

  uint64_t v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = xmmword_1003F94A0;
  *(void *)(v70 + 32) = v112;
  *(void *)(v70 + 40) = v120;
  aBlock[0] = v70;
  specialized Array._endMutation()();
  Swift::String v113 = v112;
  id v121 = v120;
  uint64_t v71 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v72 = [v9 group:v71];

  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_1003F94A0;
  *(void *)(v73 + 32) = v72;
  *(void *)(v73 + 40) = v69;
  aBlock[0] = v73;
  specialized Array._endMutation()();
  uint64_t v74 = v72;
  uint64_t v75 = v69;
  uint64_t v76 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v77 = [v9 group:v76];

  id v78 = swift_allocObject();
  *(_OWORD *)(v78 + 16) = xmmword_1003F9450;
  *(void *)(v78 + 32) = v97;
  *(void *)(v78 + 40) = v87;
  *(void *)(v78 + 48) = v77;
  *(void *)(v78 + 56) = v124;
  aBlock[0] = v78;
  specialized Array._endMutation()();
  objc_super v79 = v97;
  Swift::String v80 = v87;
  Swift::String v81 = v77;
  NSString v82 = v124;
  uint64_t v83 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [v9 sequence:v83];

  return v6;
}

uint64_t sub_1001F5254()
{
  return swift_release();
}

float sub_1001F52A4(float a1)
{
  return sqrtf(1.0 - (float)((float)(a1 + -1.0) * (float)(a1 + -1.0)));
}

float sub_1001F52C0(uint64_t a1, float a2)
{
  uint64_t v3 = *(float (**)(uint64_t, float))(a1 + 32);
  uint64_t v4 = swift_retain();
  float v5 = v3(v4, a2);
  swift_release();
  return v5;
}

uint64_t sub_1001F5310(uint64_t a1, uint64_t a2)
{
  swift_retain();
  Synchronized.wrappedValue.setter();
  swift_release();
  id v3 = sub_1001F0EAC(&qword_1004D1ED8, (uint64_t (*)(uint64_t))sub_1001F0478);
  id v4 = [v3 fillColor];

  id v5 = sub_1001F0EAC(&qword_1004D1ED8, (uint64_t (*)(uint64_t))sub_1001F0478);
  UIColor.rgba.getter();
  double v7 = v6;
  UIColor.rgba.getter();
  id v9 = [objc_allocWithZone((Class)UIColor) initWithRed:v7 green:0.0 blue:v8 alpha:1.0];
  [v5 setFillColor:v9];

  uint64_t v10 = *(uint64_t (**)(uint64_t))(**(void **)(a2 + qword_1004D1F58) + 200);
  uint64_t v11 = swift_retain();
  uint64_t v12 = v10(v11);
  swift_release();
  (*(void (**)(uint64_t (*)(uint64_t), void))(*(void *)v12 + 280))(sub_1001F8DCC, 0);

  return swift_release();
}

void sub_1001F54D8(uint64_t a1, char *a2)
{
  id v3 = *(void (**)(uint64_t))(**(void **)&a2[qword_1004D1F70] + 144);
  uint64_t v4 = swift_retain();
  v3(v4);
  swift_release();
  id v5 = sub_1000B1320();
  sub_1001F7920((uint64_t)v5, (uint64_t *)&v15);
  double v6 = v15;
  uint64_t v7 = v16;
  swift_bridgeObjectRelease();
  double v8 = (void ***)&a2[qword_1004D1F28];
  *double v8 = v6;
  v8[1] = (void **)v7;
  swift_bridgeObjectRelease();
  id v9 = self;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  id v19 = sub_1001F8A78;
  uint64_t v20 = v10;
  id v15 = _NSConcreteStackBlock;
  uint64_t v16 = 1107296256;
  id v17 = sub_100049AB4;
  id v18 = &unk_100493880;
  uint64_t v11 = _Block_copy(&v15);
  uint64_t v12 = a2;
  swift_release();
  id v13 = [v9 runBlock:v11];
  _Block_release(v11);
  id v14 = sub_1001F0C74();
  [v14 runAction:v13];
}

void sub_1001F569C()
{
  id v0 = sub_1001F10A0(&qword_1004D1F18);
  if (qword_1004C3038 != -1) {
    swift_once();
  }
  [v0 setScale:*(double *)&qword_1004F8828];

  id v1 = sub_1001F10A0(&qword_1004D1F20);
  [v1 setScale:*(double *)&qword_1004F8828];
}

void sub_1001F5758()
{
  id v0 = sub_1001F0614();
  id v1 = [v0 filter];

  if (!v1)
  {
    __break(1u);
    goto LABEL_7;
  }
  Class isa = Int._bridgeToObjectiveC()().super.super.isa;
  NSString v3 = String._bridgeToObjectiveC()();
  [v1 setValue:isa forKey:v3];

  id v4 = sub_1001F0EAC(&qword_1004D1EF0, (uint64_t (*)(uint64_t))sub_1001F0944);
  id v5 = [v4 filter];

  if (!v5)
  {
LABEL_7:
    __break(1u);
    return;
  }
  Class v6 = Int._bridgeToObjectiveC()().super.super.isa;
  id v7 = String._bridgeToObjectiveC()();
  [v5 setValue:v6 forKey:v7];
}

void sub_1001F58B4()
{
  id v0 = sub_1001F0EAC(&qword_1004D1ED8, (uint64_t (*)(uint64_t))sub_1001F0478);
  id v1 = [v0 fillColor];

  id v2 = sub_1001F0EAC(&qword_1004D1ED8, (uint64_t (*)(uint64_t))sub_1001F0478);
  UIColor.rgba.getter();
  id v4 = [objc_allocWithZone((Class)UIColor) initWithRed:1.0 green:1.0 blue:v3 alpha:1.0];
  [v2 setFillColor:v4];

  id v5 = sub_1001F0EAC(&qword_1004D1EE8, (uint64_t (*)(uint64_t))sub_1001F07A8);
  id v6 = [v5 fillColor];

  id v7 = sub_1001F0EAC(&qword_1004D1EE8, (uint64_t (*)(uint64_t))sub_1001F07A8);
  UIColor.rgba.getter();
  double v9 = v8;
  UIColor.rgba.getter();
  id v11 = [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:v9 blue:v10 alpha:1.0];
  [v7 setFillColor:v11];
}

void sub_1001F5A7C()
{
  id v0 = sub_1001F0614();
  id v1 = [v0 filter];

  if (v1)
  {
    Class isa = Float._bridgeToObjectiveC()().super.super.isa;
    id v3 = String._bridgeToObjectiveC()();
    [v1 setValue:isa forKey:v3];
  }
  else
  {
    __break(1u);
  }
}

void sub_1001F5B5C(double a1)
{
  float v1 = a1;
  float v2 = (float)(v1 / -0.4) + 1.0;
  id v3 = sub_1001F0EAC(&qword_1004D1ED8, (uint64_t (*)(uint64_t))sub_1001F0478);
  id v4 = [v3 fillColor];

  id v5 = sub_1001F0EAC(&qword_1004D1ED8, (uint64_t (*)(uint64_t))sub_1001F0478);
  UIColor.rgba.getter();
  double v7 = v6;
  UIColor.rgba.getter();
  id v9 = [objc_allocWithZone((Class)UIColor) initWithRed:v2 green:v7 blue:v8 alpha:1.0];
  [v5 setFillColor:v9];
}

float sub_1001F5C8C(float a1)
{
  return powf(a1, 4.0);
}

void sub_1001F5C94(double a1)
{
  float v1 = a1;
  float v2 = v1 * 4.0;
  id v3 = sub_1001F0EAC(&qword_1004D1EE8, (uint64_t (*)(uint64_t))sub_1001F07A8);
  id v4 = [v3 fillColor];

  id v5 = sub_1001F0EAC(&qword_1004D1EE8, (uint64_t (*)(uint64_t))sub_1001F07A8);
  UIColor.rgba.getter();
  double v7 = v6;
  UIColor.rgba.getter();
  id v9 = [objc_allocWithZone((Class)UIColor) initWithRed:v2 green:v7 blue:v8 alpha:1.0];
  [v5 setFillColor:v9];

  id v10 = sub_1001F0EAC(&qword_1004D1EF0, (uint64_t (*)(uint64_t))sub_1001F0944);
  id v11 = [v10 filter];

  if (v11)
  {
    Class isa = Float._bridgeToObjectiveC()().super.super.isa;
    id v13 = String._bridgeToObjectiveC()();
    [v11 setValue:isa forKey:v13];
  }
  else
  {
    __break(1u);
  }
}

void sub_1001F5E60(double a1)
{
  if (qword_1004C3038 != -1) {
    swift_once();
  }
  double v2 = *(double *)&qword_1004F8828;
  double v3 = *(double *)&qword_1004F8828;
  if (qword_1004C3040 != -1)
  {
    swift_once();
    double v3 = *(double *)&qword_1004F8828;
  }
  double v4 = v2 + (*(double *)&qword_1004F8830 - v3) * a1 / 0.11;
  id v5 = sub_1001F10A0(&qword_1004D1F18);
  [v5 setScale:v4];

  id v6 = sub_1001F10A0(&qword_1004D1F20);
  [v6 setScale:v4];
}

void sub_1001F5F80(double a1)
{
  if (qword_1004C3040 != -1) {
    swift_once();
  }
  double v2 = *(double *)&qword_1004F8830;
  if (qword_1004C3048 != -1) {
    swift_once();
  }
  double v3 = v2 + (v2 - *(double *)&qword_1004F8838) * a1 / -0.08;
  id v4 = sub_1001F10A0(&qword_1004D1F18);
  [v4 setScale:v3];

  id v5 = sub_1001F10A0(&qword_1004D1F20);
  [v5 setScale:v3];
}

double *sub_1001F6098()
{
  CGPoint.multiply(by:)();
  CGPoint.divide(by:)();
  CGPoint.add(_:)();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  id v4 = sub_10006E718(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
  unint64_t v6 = *((void *)v4 + 2);
  unint64_t v5 = *((void *)v4 + 3);
  unint64_t v7 = v6 + 1;
  if (v6 >= v5 >> 1) {
    id v4 = sub_10006E718((double *)(v5 > 1), v6 + 1, 1, (uint64_t)v4);
  }
  *((void *)v4 + 2) = v7;
  double v8 = &v4[2 * v6];
  *((void *)v8 + 4) = v1;
  *((void *)v8 + 5) = v3;
  CGPoint.multiply(by:)();
  CGPoint.divide(by:)();
  CGPoint.add(_:)();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  unint64_t v13 = *((void *)v4 + 3);
  unint64_t v14 = v6 + 2;
  if ((uint64_t)(v6 + 2) > (uint64_t)(v13 >> 1)) {
    id v4 = sub_10006E718((double *)(v13 > 1), v6 + 2, 1, (uint64_t)v4);
  }
  *((void *)v4 + 2) = v14;
  id v15 = &v4[2 * v7];
  *((void *)v15 + 4) = v10;
  *((void *)v15 + 5) = v12;
  CGPoint.multiply(by:)();
  CGPoint.divide(by:)();
  CGPoint.add(_:)();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  unint64_t v20 = *((void *)v4 + 3);
  unint64_t v21 = v6 + 3;
  if ((uint64_t)(v6 + 3) > (uint64_t)(v20 >> 1)) {
    id v4 = sub_10006E718((double *)(v20 > 1), v6 + 3, 1, (uint64_t)v4);
  }
  *((void *)v4 + 2) = v21;
  id v22 = &v4[2 * v14];
  *((void *)v22 + 4) = v17;
  *((void *)v22 + 5) = v19;
  CGPoint.multiply(by:)();
  CGPoint.divide(by:)();
  CGPoint.add(_:)();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  unint64_t v27 = *((void *)v4 + 3);
  unint64_t v28 = v6 + 4;
  if ((uint64_t)(v6 + 4) > (uint64_t)(v27 >> 1)) {
    id v4 = sub_10006E718((double *)(v27 > 1), v6 + 4, 1, (uint64_t)v4);
  }
  *((void *)v4 + 2) = v28;
  uint64_t v29 = &v4[2 * v21];
  *((void *)v29 + 4) = v24;
  *((void *)v29 + 5) = v26;
  CGPoint.multiply(by:)();
  CGPoint.divide(by:)();
  CGPoint.add(_:)();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  unint64_t v34 = *((void *)v4 + 3);
  if ((uint64_t)(v6 + 5) > (uint64_t)(v34 >> 1)) {
    id v4 = sub_10006E718((double *)(v34 > 1), v6 + 5, 1, (uint64_t)v4);
  }
  *((void *)v4 + 2) = v6 + 5;
  uint64_t v35 = &v4[2 * v28];
  *((void *)v35 + 4) = v31;
  *((void *)v35 + 5) = v33;
  return v4;
}

id sub_1001F6368()
{
  swift_bridgeObjectRetain();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_1001F63C8(uint64_t a1)
{
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v3 = (uint64_t *)(a1 + qword_1004D1FA0);
  *uint64_t v3 = v2;
  v3[1] = v4;

  return swift_bridgeObjectRelease();
}

id sub_1001F6418(char a1)
{
  uint64_t v3 = *(void **)(v1 + qword_1004D1EA8);
  uint64_t v4 = "setHidden:";
  if (a1)
  {
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v7 = v1;
    [v3 setHidden:1];
    double v8 = *(uint64_t (**)(uint64_t))(**(void **)(v1 + qword_1004D1F58) + 200);
    uint64_t v9 = swift_retain();
    uint64_t v10 = v8(v9);
    swift_release();
    (*(void (**)(uint64_t (*)(uint64_t), void))(*(void *)v10 + 280))(sub_1001F65F0, 0);
    swift_release();
    id v11 = sub_1001F10A0(&qword_1004D1F18);
    [v11 removeAllActions];

    id v12 = sub_1001F0C74();
    [v12 removeAllActions];

    id v13 = sub_1001F0EAC(&qword_1004D1EE8, (uint64_t (*)(uint64_t))sub_1001F07A8);
    [v13 removeAllActions];

    id v14 = sub_1001F0EAC(&qword_1004D1ED8, (uint64_t (*)(uint64_t))sub_1001F0478);
    [v14 removeAllActions];

    uint64_t v3 = *(void **)(v7 + qword_1004D1EB0);
    uint64_t v4 = "removeAllActions";
  }
  return [v3 v4:v5];
}

uint64_t sub_1001F65F0(uint64_t result)
{
  *(unsigned char *)(result + 530) = 0;
  return result;
}

void sub_1001F65F8(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_1001F6418(a3);
}

void sub_1001F664C()
{
}

uint64_t sub_1001F667C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + qword_1004D1F28 + 24);
  uint64_t v2 = *(void **)(v0 + qword_1004D1F28 + 32);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001F68B0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + qword_1004D1F28 + 24);
  uint64_t v3 = *(void **)(a1 + qword_1004D1F28 + 32);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for PersonHeightView()
{
  uint64_t result = qword_1004D1FD0;
  if (!qword_1004D1FD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001F6B34()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1001F6C0C()
{
  return type metadata accessor for PersonHeightView();
}

void destroy for PersonHeightView.AttributedText(uint64_t a1)
{
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for PersonHeightView.AttributedText(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  id v4 = (void *)a2[2];
  uint64_t v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  unint64_t v6 = (void *)a2[4];
  a1[4] = v6;
  swift_bridgeObjectRetain();
  id v7 = v4;
  id v8 = v5;
  id v9 = v6;
  return a1;
}

void *assignWithCopy for PersonHeightView.AttributedText(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = (void *)a2[2];
  uint64_t v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  id v7 = (void *)a1[3];
  id v8 = (void *)a2[3];
  a1[3] = v8;
  id v9 = v8;

  uint64_t v10 = (void *)a1[4];
  id v11 = (void *)a2[4];
  a1[4] = v11;
  id v12 = v11;

  return a1;
}

uint64_t assignWithTake for PersonHeightView.AttributedText(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for PersonHeightView.AttributedText(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonHeightView.AttributedText(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonHeightView.AttributedText()
{
  return &type metadata for PersonHeightView.AttributedText;
}

uint64_t sub_1001F6E40(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10011352C(*a1, *a2);
}

Swift::Int sub_1001F6E4C()
{
  return sub_10015AE1C();
}

uint64_t sub_1001F6E54()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1001F6EF0()
{
  return sub_10015AF28();
}

unint64_t sub_1001F6EF8@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001F8CE4(*a1);
  *a2 = result;
  return result;
}

void sub_1001F6F28(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEC00000074686769;
  unint64_t v4 = 0x800000010041DAC0;
  unint64_t v5 = 0xD000000000000010;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000011;
    unint64_t v4 = 0x800000010041DAE0;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x65486E6F73726550;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1001F6F94()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000011;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x65486E6F73726550;
  }
}

unint64_t sub_1001F6FFC@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001F8CE4(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001F7024(uint64_t a1)
{
  unint64_t v2 = sub_1001F76D8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001F7060(uint64_t a1)
{
  unint64_t v2 = sub_1001F76D8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001F709C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = a4;
  uint64_t v8 = sub_100012894(&qword_1004D2228);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000131D4(a1, a1[3]);
  sub_1001F76D8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if ((a2 & 0x100000000) != 0 || (char v15 = 0, KeyedEncodingContainer.encode(_:forKey:)(), !v4))
  {
    if ((a3 & 0x100000000) != 0 || (char v16 = 1, KeyedEncodingContainer.encode(_:forKey:)(), !v4))
    {
      if ((v14 & 0x100000000) == 0)
      {
        char v17 = 2;
        KeyedEncodingContainer.encode(_:forKey:)();
      }
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1001F7244(void *a1)
{
  return sub_1001F709C(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32), v1[2] | ((unint64_t)*((unsigned __int8 *)v1 + 12) << 32), v1[4] | ((unint64_t)*((unsigned __int8 *)v1 + 20) << 32));
}

void sub_1001F72A0(uint64_t a1@<X8>)
{
  id v3 = *v1;
  unint64_t v4 = sub_1001F8564((uint64_t)v3);
  uint64_t v6 = v5;
  uint64_t v8 = v7;

  *(_DWORD *)a1 = v4;
  *(unsigned char *)(a1 + 4) = BYTE4(v4) & 1;
  *(_DWORD *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 12) = BYTE4(v6) & 1;
  *(_DWORD *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 20) = BYTE4(v8) & 1;
}

uint64_t sub_1001F7314()
{
  uint64_t v0 = sub_100012894(&qword_1004CC7A8);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  unint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v18 - v5;
  uint64_t v7 = self;
  id v8 = [v7 meters];
  sub_10001C99C(0, &qword_1004CC7B0);
  Measurement.init(value:unit:)();
  id v9 = [v7 inches];
  Measurement<>.converted(to:)();

  Measurement.value.getter();
  double v11 = v10;
  id v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v4, v0);
  *(float *)&double v11 = v11;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v12)(v6, v0);
  float v14 = ceilf(*(float *)&v11);
  float v15 = v14 / 12.0;
  if ((~COERCE_INT(v14 / 12.0) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v15 <= -9.2234e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v15 >= 9.2234e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v16 = 12 * (uint64_t)v15;
  if ((unsigned __int128)((uint64_t)v15 * (__int128)12) >> 64 != v16 >> 63)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  float v17 = roundf(v14 - (float)v16);
  if (v17 == 12.0) {
    float v17 = 0.0;
  }
  return v17 < 10.0;
}

unint64_t sub_1001F7550()
{
  unint64_t result = qword_1004D2200;
  if (!qword_1004D2200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004D2200);
  }
  return result;
}

uint64_t sub_1001F75A4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 80);
  return swift_retain();
}

uint64_t sub_1001F75B4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 96);
  return swift_retain();
}

uint64_t sub_1001F75C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 216);
  return swift_retain();
}

uint64_t sub_1001F75D4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 216);
  return swift_retain();
}

uint64_t sub_1001F75E4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 184);
  return swift_retain();
}

uint64_t sub_1001F75F4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 184);
  return swift_retain();
}

uint64_t sub_1001F7604@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 80);
  return swift_retain();
}

uint64_t sub_1001F7614@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 160);
  return swift_retain();
}

uint64_t sub_1001F7624@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 160);
  return swift_retain();
}

uint64_t sub_1001F7634@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 96);
  return swift_retain();
}

uint64_t sub_1001F7644()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1001F767C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1001F1D74();

  return [v1 toggleViewVisibilityWithIsVisible:0];
}

uint64_t sub_1001F76C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001F76D0()
{
  return swift_release();
}

unint64_t sub_1001F76D8()
{
  unint64_t result = qword_1004D2230;
  if (!qword_1004D2230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004D2230);
  }
  return result;
}

id sub_1001F772C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  sub_100012894(&qword_1004C9DF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003F87F0;
  *(void *)(inited + 32) = NSFontAttributeName;
  *(void *)(inited + 64) = sub_10001C99C(0, &qword_1004C4550);
  *(void *)(inited + 40) = a3;
  uint64_t v7 = NSFontAttributeName;
  id v8 = a3;
  sub_1000E0F80(inited);
  if (a4)
  {
    uint64_t v19 = sub_10001C99C(0, &qword_1004C5548);
    *(void *)&long long v18 = a4;
    sub_100027938(&v18, v17);
    id v9 = NSForegroundColorAttributeName;
    id v10 = a4;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1000D4E58(v17, v9, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
  }
  id v12 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1001F8A80((unint64_t *)&qword_1004C39E0, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v15 = [v12 initWithString:v13 attributes:isa];
  swift_bridgeObjectRelease();

  return v15;
}

void sub_1001F7920(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100012894(&qword_1004CC7A8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v102 - v9;
  id v11 = [self standardUserDefaults];
  uint64_t v12 = *(void *)(Defaults.measurementBias.unsafeMutableAddressor() + 8);
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 floatForKey:v13];

  Swift::String v111 = a2;
  if (a1 == 1)
  {
    float v14 = self;
    id v15 = [v14 meters];
    sub_10001C99C(0, &qword_1004CC7B0);
    Measurement.init(value:unit:)();
    id v16 = [v14 centimeters];
    Measurement<>.converted(to:)();

    Measurement.value.getter();
    double v18 = v17;
    uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
    v19(v8, v4);
    v19(v10, v4);
    *(float *)&double v18 = v18;
    float v20 = ceilf(*(float *)&v18);
    *(void *)&long long v110 = Float.description.getter();
    if (qword_1004C2BA0 != -1) {
      swift_once();
    }
    unint64_t v21 = (void *)qword_1004F83F8;
    id v22 = objc_allocWithZone((Class)NSDecimalNumber);
    *(float *)&double v23 = v20;
    id v24 = [v22 initWithFloat:v23];
    id v25 = [v21 stringFromNumber:v24];

    if (v25)
    {
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v28 = v27;

      uint64_t v29 = self;
      id v30 = [v29 mainBundle];
      v112._object = (void *)0xE000000000000000;
      v31._uint64_t countAndFlagsBits = 0x6D63204025;
      v31._object = (void *)0xE500000000000000;
      v32._uint64_t countAndFlagsBits = 0;
      v32._object = (void *)0xE000000000000000;
      v112._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v31, (Swift::String_optional)0, (NSBundle)v30, v32, v112);

      sub_100012894((uint64_t *)&unk_1004D2460);
      uint64_t v33 = swift_allocObject();
      long long v109 = xmmword_1003F87F0;
      *(_OWORD *)(v33 + 16) = xmmword_1003F87F0;
      *(void *)(v33 + 56) = &type metadata for String;
      *(void *)(v33 + 64) = sub_10001D424();
      *(void *)(v33 + 32) = v26;
      *(void *)(v33 + 40) = v28;
      uint64_t v34 = String.init(format:_:)();
      uint64_t v36 = v35;
      swift_bridgeObjectRelease();
      id v37 = [v29 mainBundle];
      v113._object = (void *)0xE000000000000000;
      v38._uint64_t countAndFlagsBits = 0x69746E6563204025;
      v38._object = (void *)0xEE0073726574656DLL;
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      v113._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v37, v39, v113);

      uint64_t v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = v109;
      *(void *)(v40 + 56) = &type metadata for Float;
      *(void *)(v40 + 64) = &protocol witness table for Float;
      *(float *)(v40 + 32) = v20;
      uint64_t v41 = static String.localizedStringWithFormat(_:_:)();
      uint64_t v43 = v42;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      NSString v44 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v44 floatValue];
      float v46 = v45;

      char v47 = 1;
LABEL_27:
      uint64_t v101 = v111;
      *Swift::String v111 = v34;
      v101[1] = v36;
      _OWORD v101[2] = v41;
      v101[3] = v43;
      *((float *)v101 + 8) = v46;
      *((unsigned char *)v101 + 36) = v47;
      return;
    }
    goto LABEL_36;
  }
  if (!a1)
  {
    Swift::String v48 = self;
    id v49 = [v48 meters];
    sub_10001C99C(0, &qword_1004CC7B0);
    Measurement.init(value:unit:)();
    id v50 = [v48 inches];
    Measurement<>.converted(to:)();

    Measurement.value.getter();
    double v52 = v51;
    uint64_t v55 = *(void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v54 = v5 + 8;
    uint64_t v53 = (uint64_t)v55;
    v55(v8, v4);
    float v56 = v52;
    v55(v10, v4);
    float v57 = ceilf(v56);
    float v58 = v57 / 12.0;
    if ((~COERCE_INT(v57 / 12.0) & 0x7F800000) != 0)
    {
      if (v58 > -9.2234e18)
      {
        if (v58 < 9.2234e18)
        {
          uint64_t v59 = 12 * (uint64_t)v58;
          if ((unsigned __int128)((uint64_t)v58 * (__int128)12) >> 64 == v59 >> 63)
          {
            float v60 = roundf(v57 - (float)v59);
            if (v60 == 12.0) {
              float v56 = 0.0;
            }
            else {
              float v56 = v60;
            }
            if (v60 == 12.0) {
              uint64_t v53 = (uint64_t)v58 + 1;
            }
            else {
              uint64_t v53 = (uint64_t)v58;
            }
            LOBYTE(v50) = sub_1001F7314();
            sub_100012894((uint64_t *)&unk_1004D2460);
            uint64_t v61 = swift_allocObject();
            long long v110 = xmmword_1003F87F0;
            *(_OWORD *)(v61 + 16) = xmmword_1003F87F0;
            *(void *)(v61 + 56) = &type metadata for Int;
            *(void *)(v61 + 64) = &protocol witness table for Int;
            *(void *)(v61 + 32) = v53;
            uint64_t v54 = String.init(format:_:)();
            uint64_t v12 = v62;
            if (qword_1004C2BA0 == -1)
            {
LABEL_18:
              id v63 = (void *)qword_1004F83F8;
              id v64 = [objc_allocWithZone((Class)NSDecimalNumber) initWithInteger:v53];
              id v65 = [v63 stringFromNumber:v64];

              if (!v65)
              {
LABEL_37:
                __break(1u);
LABEL_38:
                __break(1u);
                goto LABEL_39;
              }
              uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              *(void *)&long long v109 = v67;

              if (((v56 >= 10.0) & v50) != 0) {
                float v68 = v56 + -10.0;
              }
              else {
                float v68 = v56;
              }
              uint64_t v69 = swift_allocObject();
              *(_OWORD *)(v69 + 16) = v110;
              if ((~LODWORD(v68) & 0x7F800000) != 0)
              {
                if (v68 > -9.2234e18)
                {
                  if (v68 < 9.2234e18)
                  {
                    uint64_t v103 = v66;
                    uint64_t v107 = v54;
                    uint64_t v108 = v12;
                    *(void *)&long long v110 = v53;
                    *(void *)(v69 + 56) = &type metadata for Int;
                    *(void *)(v69 + 64) = &protocol witness table for Int;
                    uint64_t v104 = (uint64_t)v68;
                    *(void *)(v69 + 32) = (uint64_t)v68;
                    uint64_t v105 = String.init(format:_:)();
                    uint64_t v106 = v70;
                    uint64_t v71 = (void *)qword_1004F83F8;
                    id v72 = objc_allocWithZone((Class)NSDecimalNumber);
                    *(float *)&double v73 = v68;
                    id v74 = [v72 initWithFloat:v73];
                    id v75 = [v71 stringFromNumber:v74];

                    if (v75)
                    {
                      uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                      uint64_t v78 = v77;

                      objc_super v79 = self;
                      id v80 = [v79 mainBundle];
                      v81.value._uint64_t countAndFlagsBits = 0xD000000000000014;
                      v114._object = (void *)0xE000000000000000;
                      v81.value._object = (void *)0x8000000100427090;
                      v82._uint64_t countAndFlagsBits = 0x20B280E240243125;
                      v82._object = (void *)0xAFB380E240243225;
                      v83._uint64_t countAndFlagsBits = 0;
                      v83._object = (void *)0xE000000000000000;
                      v114._uint64_t countAndFlagsBits = 0;
                      NSLocalizedString(_:tableName:bundle:value:comment:)(v82, v81, (NSBundle)v80, v83, v114);

                      uint64_t v84 = swift_allocObject();
                      long long v102 = xmmword_1003F8B80;
                      *(_OWORD *)(v84 + 16) = xmmword_1003F8B80;
                      *(void *)(v84 + 56) = &type metadata for String;
                      unint64_t v85 = sub_10001D424();
                      uint64_t v86 = v109;
                      *(void *)(v84 + 32) = v103;
                      *(void *)(v84 + 40) = v86;
                      *(void *)(v84 + 96) = &type metadata for String;
                      *(void *)(v84 + 104) = v85;
                      *(void *)(v84 + 64) = v85;
                      *(void *)(v84 + 72) = v76;
                      *(void *)(v84 + 80) = v78;
                      uint64_t v34 = String.init(format:_:)();
                      uint64_t v36 = v87;
                      swift_bridgeObjectRelease();
                      id v88 = [v79 mainBundle];
                      v115._object = (void *)0xE000000000000000;
                      v89._object = (void *)0x80000001004270B0;
                      v89._uint64_t countAndFlagsBits = 0xD000000000000011;
                      v90._uint64_t countAndFlagsBits = 0;
                      v90._object = (void *)0xE000000000000000;
                      v115._uint64_t countAndFlagsBits = 0;
                      NSLocalizedString(_:tableName:bundle:value:comment:)(v89, (Swift::String_optional)0, (NSBundle)v88, v90, v115);

                      uint64_t v91 = swift_allocObject();
                      *(_OWORD *)(v91 + 16) = v102;
                      *(void *)(v91 + 56) = &type metadata for Int;
                      *(void *)(v91 + 32) = v110;
                      *(void *)(v91 + 96) = &type metadata for Int;
                      *(void *)(v91 + 104) = &protocol witness table for Int;
                      uint64_t v92 = v104;
                      *(void *)(v91 + 64) = &protocol witness table for Int;
                      *(void *)(v91 + 72) = v92;
                      uint64_t v41 = static String.localizedStringWithFormat(_:_:)();
                      uint64_t v43 = v93;
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      NSString v94 = String._bridgeToObjectiveC()();
                      swift_bridgeObjectRelease();
                      [v94 floatValue];
                      float v96 = v95;

                      float v97 = v96 * 12.0;
                      NSString v98 = String._bridgeToObjectiveC()();
                      swift_bridgeObjectRelease();
                      [v98 floatValue];
                      float v100 = v99;

                      float v46 = v97 + v100;
                      char v47 = 2;
                      goto LABEL_27;
                    }
                    goto LABEL_38;
                  }
                  goto LABEL_35;
                }
              }
              else
              {
                __break(1u);
              }
              __break(1u);
LABEL_35:
              __break(1u);
LABEL_36:
              __break(1u);
              goto LABEL_37;
            }
LABEL_32:
            swift_once();
            goto LABEL_18;
          }
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_30;
  }
LABEL_39:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

double *sub_1001F83E4()
{
  CGPoint.multiply(by:)();
  CGPoint.divide(by:)();
  CGPoint.subtract(_:)();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = sub_10006E718(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
  unint64_t v6 = *((void *)v4 + 2);
  unint64_t v5 = *((void *)v4 + 3);
  if (v6 >= v5 >> 1) {
    uint64_t v4 = sub_10006E718((double *)(v5 > 1), v6 + 1, 1, (uint64_t)v4);
  }
  *((void *)v4 + 2) = v6 + 1;
  uint64_t v7 = &v4[2 * v6];
  *((void *)v7 + 4) = v1;
  *((void *)v7 + 5) = v3;
  for (uint64_t i = 1; i != 101; ++i)
  {
    CGPoint.multiply(by:)();
    CGPoint.divide(by:)();
    CGPoint.subtract(_:)();
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    unint64_t v14 = *((void *)v4 + 2);
    unint64_t v13 = *((void *)v4 + 3);
    if (v14 >= v13 >> 1) {
      uint64_t v4 = sub_10006E718((double *)(v13 > 1), v14 + 1, 1, (uint64_t)v4);
    }
    *((void *)v4 + 2) = v14 + 1;
    id v15 = &v4[2 * v14];
    *((void *)v15 + 4) = v10;
    *((void *)v15 + 5) = v12;
  }
  return v4;
}

unint64_t sub_1001F8564(uint64_t a1)
{
  void (*v3)(void *__return_ptr, uint64_t);
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  void (*v7)(void *__return_ptr, uint64_t);
  uint64_t v8;
  void (*v9)(void *__return_ptr, uint64_t);
  uint64_t v10;
  void v12[68];
  _DWORD __dst[136];
  void __src[68];

  uint64_t v2 = qword_1004D1F58;
  uint64_t v3 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(a1 + qword_1004D1F58) + 144);
  uint64_t v4 = swift_retain();
  v3(__src, v4);
  swift_release();
  memcpy(__dst, __src, 0x213uLL);
  sub_1000732CC((uint64_t)__dst);
  unint64_t v5 = __dst[113];
  unint64_t v6 = __dst[114];
  uint64_t v7 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(a1 + v2) + 144);
  id v8 = swift_retain();
  v7(v12, v8);
  swift_release();
  memcpy(__src, v12, 0x213uLL);
  sub_1000732CC((uint64_t)__src);
  uint64_t v9 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(a1 + qword_1004D1F60) + 144);
  uint64_t v10 = swift_retain();
  v9(v12, v10);
  swift_release();
  return v5 | ((unint64_t)v6 << 32);
}

void sub_1001F86E8(void *a1)
{
  sub_1001F281C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1001F86F0(uint64_t a1)
{
  uint64_t v2 = sub_100012894(&qword_1004CC360);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001F8750(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894(&qword_1004CC360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001F87B8()
{
  uint64_t v1 = (int *)(sub_100012894(&qword_1004CC360) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v6 + v1[11];
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1001F88FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894(&qword_1004CC360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001F8964(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100012894(&qword_1004CC360) - 8);
  return sub_100113A00(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_1001F89E4()
{
  return sub_1001F5254();
}

uint64_t sub_1001F89EC(uint64_t a1)
{
  return sub_1001F5310(a1, *(void *)(v1 + 16));
}

uint64_t sub_1001F89F4()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001F8A2C(uint64_t a1)
{
  sub_1001F54D8(a1, *(char **)(v1 + 24));
}

void sub_1001F8A38()
{
}

void sub_1001F8A40()
{
}

void sub_1001F8A48()
{
}

void sub_1001F8A50()
{
}

void sub_1001F8A58(double a1)
{
}

void sub_1001F8A60(double a1)
{
}

void sub_1001F8A68(double a1)
{
}

void sub_1001F8A70(double a1)
{
}

void sub_1001F8A78()
{
  sub_1001F1110(*(void *)(v0 + 16));
}

uint64_t sub_1001F8A80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PersonHeightView.ResultRepresentation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001F8B94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonHeightView.ResultRepresentation.CodingKeys()
{
  return &type metadata for PersonHeightView.ResultRepresentation.CodingKeys;
}

ValueMetadata *type metadata accessor for PersonHeightView.ResultRepresentation()
{
  return &type metadata for PersonHeightView.ResultRepresentation;
}

unint64_t sub_1001F8BE0()
{
  unint64_t result = qword_1004D2248;
  if (!qword_1004D2248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004D2248);
  }
  return result;
}

unint64_t sub_1001F8C38()
{
  unint64_t result = qword_1004D2250;
  if (!qword_1004D2250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004D2250);
  }
  return result;
}

unint64_t sub_1001F8C90()
{
  unint64_t result = qword_1004D2258;
  if (!qword_1004D2258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004D2258);
  }
  return result;
}

unint64_t sub_1001F8CE4(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100485E18, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t type metadata accessor for TouchableSpriteNode()
{
  return self;
}

void sub_1001F8ECC()
{
  id v1 = [self currentTraitCollection];
  id v2 = [v1 preferredContentSizeCategory];

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if ((v1 & 1) == 0)
  {
    uint64_t v56 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_cellTitle;
    float v57 = *(void **)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_cellTitle);
    float v58 = self;
    id v59 = v57;
    id v60 = [v58 preferredFontForTextStyle:UIFontTextStyleBody];
    id v61 = [v60 fontDescriptor];

    id v62 = [v61 fontDescriptorWithSymbolicTraits:2];
    if (!v62)
    {
LABEL_37:
      __break(1u);
      return;
    }
    id v63 = [v58 fontWithDescriptor:v62 size:0.0];

    [v59 setFont:v63];
    uint64_t v64 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels;
    id v65 = *(char **)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels);
    uint64_t v66 = &v65[OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_marginConstraints];
    swift_beginAccess();
    unint64_t v67 = *(void *)v66;
    Swift::String v90 = (char *)v56;
    if (v67 >> 62)
    {
      swift_bridgeObjectRetain_n();
      double v73 = v65;
      uint64_t v68 = _CocoaArrayWrapper.endIndex.getter();
      if (!v68) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v68 = *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      uint64_t v69 = v65;
      if (!v68) {
        goto LABEL_20;
      }
    }
    if (v68 < 1)
    {
      __break(1u);
      goto LABEL_31;
    }
    for (uint64_t i = 0; i != v68; ++i)
    {
      if ((v67 & 0xC000000000000001) != 0) {
        id v71 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v71 = *(id *)(v67 + 8 * i + 32);
      }
      id v72 = v71;
      [v71 setConstant:0.0];
    }
LABEL_20:
    swift_bridgeObjectRelease_n();

    uint64_t v74 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels;
    id v75 = *(char **)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels);
    uint64_t v76 = &v75[OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_marginConstraints];
    swift_beginAccess();
    unint64_t v77 = *(void *)v76;
    if (v77 >> 62)
    {
      swift_bridgeObjectRetain_n();
      Swift::String v83 = v75;
      uint64_t v78 = _CocoaArrayWrapper.endIndex.getter();
      if (v78)
      {
LABEL_22:
        if (v78 >= 1)
        {
          for (uint64_t j = 0; j != v78; ++j)
          {
            if ((v77 & 0xC000000000000001) != 0) {
              id v81 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v81 = *(id *)(v77 + 8 * j + 32);
            }
            Swift::String v82 = v81;
            [v81 setConstant:0.0];
          }
          goto LABEL_29;
        }
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v78 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      objc_super v79 = v75;
      if (v78) {
        goto LABEL_22;
      }
    }
LABEL_29:
    swift_bridgeObjectRelease_n();

    id v84 = [v0 contentView];
    [v84 addSubview:*(void *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView)];

    id v85 = [v0 contentView];
    [v85 addSubview:*(void *)&v90[(void)v0]];

    id v86 = [v0 contentView];
    [v86 addSubview:*(void *)((char *)v0 + v64)];

    id v87 = [v0 contentView];
    [v87 addSubview:*(void *)((char *)v0 + v74)];

    return;
  }
  uint64_t v3 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle;
  unsigned int v4 = *(void **)(*(void *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle)
                + OBJC_IVAR____TtC7Measure24AccessibilitySingleStack_label);
  uint64_t v5 = self;
  id v6 = v4;
  id v7 = [v5 preferredFontForTextStyle:UIFontTextStyleBody];
  id v8 = [v7 fontDescriptor];

  id v9 = [v8 fontDescriptorWithSymbolicTraits:2];
  if (!v9)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  id v10 = [v5 fontWithDescriptor:v9 size:0.0];

  [v6 setFont:v10];
  uint64_t v88 = v3;
  uint64_t v11 = *(void **)(*(void *)((char *)v0 + v3) + OBJC_IVAR____TtC7Measure24AccessibilitySingleStack_label);
  uint64_t v12 = self;
  id v13 = v11;
  id v14 = [v12 labelColor];
  [v13 setTextColor:v14];

  uint64_t v15 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel;
  id v16 = objc_retain(*(id *)(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel)
                          + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel));
  id v17 = [v5 preferredFontForTextStyle:UIFontTextStyleBody];
  id v18 = [v17 fontDescriptor];

  id v19 = [v18 fontDescriptorWithSymbolicTraits:2];
  if (!v19)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  id v20 = [v5 fontWithDescriptor:v19 size:0.0];

  [v16 setFont:v20];
  id v21 = objc_retain(*(id *)(*(void *)((char *)v0 + v15)
                          + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel));
  id v22 = [v5 preferredFontForTextStyle:UIFontTextStyleLargeTitle];
  [v21 setFont:v22];

  id v23 = objc_retain(*(id *)(*(void *)((char *)v0 + v15)
                          + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel));
  id v24 = [v5 preferredFontForTextStyle:UIFontTextStyleSubheadline];
  id v25 = [v24 fontDescriptor];

  id v26 = [v25 fontDescriptorWithSymbolicTraits:2];
  if (!v26)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  id v27 = [v5 fontWithDescriptor:v26 size:0.0];

  [v23 setFont:v27];
  id v28 = *(id *)(*(void *)((char *)v0 + v15) + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel);
  id v29 = [v12 secondaryLabelColor];
  [v28 setTextColor:v29];

  id v30 = objc_retain(*(id *)(*(void *)((char *)v0 + v15)
                          + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel));
  id v31 = [v12 labelColor];
  [v30 setTextColor:v31];

  id v32 = objc_retain(*(id *)(*(void *)((char *)v0 + v15)
                          + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel));
  id v33 = [v12 secondaryLabelColor];
  [v32 setTextColor:v33];

  uint64_t v34 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel;
  id v35 = objc_retain(*(id *)(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel)
                          + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel));
  id v36 = [v5 preferredFontForTextStyle:UIFontTextStyleBody];
  id v37 = [v36 fontDescriptor];

  id v38 = [v37 fontDescriptorWithSymbolicTraits:2];
  if (!v38)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  id v39 = [v5 fontWithDescriptor:v38 size:0.0];

  [v35 setFont:v39];
  id v40 = objc_retain(*(id *)(*(void *)((char *)v0 + v34)
                          + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel));
  id v41 = [v5 preferredFontForTextStyle:UIFontTextStyleLargeTitle];
  [v40 setFont:v41];

  id v42 = objc_retain(*(id *)(*(void *)((char *)v0 + v34)
                          + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel));
  id v43 = [v5 preferredFontForTextStyle:UIFontTextStyleSubheadline];
  id v44 = [v43 fontDescriptor];

  id v45 = [v44 fontDescriptorWithSymbolicTraits:2];
  if (!v45)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  id v46 = [v5 fontWithDescriptor:v45 size:0.0];

  [v42 setFont:v46];
  id v47 = *(id *)(*(void *)((char *)v0 + v34) + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel);
  id v48 = [v12 secondaryLabelColor];
  [v47 setTextColor:v48];

  id v49 = objc_retain(*(id *)(*(void *)((char *)v0 + v34)
                          + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel));
  id v50 = [v12 labelColor];
  [v49 setTextColor:v50];

  id v51 = objc_retain(*(id *)(*(void *)((char *)v0 + v34)
                          + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel));
  id v52 = [v12 secondaryLabelColor];
  [v51 setTextColor:v52];

  id v53 = [v0 contentView];
  [v53 addSubview:*(void *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView)];

  id v54 = [v0 contentView];
  [v54 addSubview:*(void *)((char *)v0 + v88)];

  id v55 = [v0 contentView];
  [v55 addSubview:*(void *)((char *)v0 + v15)];

  id v89 = [v0 contentView];
  [v89 addSubview:*(void *)((char *)v0 + v34)];
}

void sub_1001F9ABC()
{
  id v1 = [self currentTraitCollection];
  id v2 = [v1 preferredContentSizeCategory];

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if ((v1 & 1) == 0)
  {
    uint64_t v61 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_cellTitle;
    [*(id *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_cellTitle) setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v62 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView;
    [*(id *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView) setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v63 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels;
    [*(id *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels) setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v64 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels;
    [*(id *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels) setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v123 = v63;
    id v65 = [*(id *)((char *)v0 + v63) topAnchor];
    id v66 = [*(id *)((char *)v0 + v61) bottomAnchor];
    if (qword_1004C27E8 != -1) {
      swift_once();
    }
    id v67 = [v65 constraintEqualToAnchor:v66 constant:*(double *)&qword_1004F7E00];

    LODWORD(v68) = 1148813312;
    [v67 setPriority:v68];
    id v126 = (char *)v64;
    id v69 = [*(id *)((char *)v0 + v64) bottomAnchor];
    id v70 = [v0 contentView];
    id v71 = [v70 bottomAnchor];

    id v72 = [v69 constraintEqualToAnchor:v71 constant:-*(double *)&qword_1004F7E00];
    double v73 = *(void **)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_bottomContentAnchor);
    uint64_t v121 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_bottomContentAnchor;
    *(void *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_bottomContentAnchor) = v72;

    sub_100012894((uint64_t *)&unk_1004CEA00);
    uint64_t v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = xmmword_100404050;
    id v75 = [*(id *)((char *)v0 + v62) leadingAnchor];
    id v76 = [v0 contentView];
    id v77 = [v76 leadingAnchor];

    id v78 = [v75 constraintEqualToAnchor:v77 constant:*(double *)&qword_1004F7E00];
    *(void *)(v74 + 32) = v78;
    id v79 = [*(id *)((char *)v0 + v62) topAnchor];
    id v80 = [v0 contentView];
    id v81 = [v80 topAnchor];

    id v82 = [v79 constraintEqualToAnchor:v81 constant:*(double *)&qword_1004F7E00];
    *(void *)(v74 + 40) = v82;
    id v83 = [*(id *)((char *)v0 + v62) widthAnchor];
    if (qword_1004C3210 != -1) {
      swift_once();
    }
    id v84 = [v83 constraintEqualToConstant:*(double *)&qword_1004D2290];

    *(void *)(v74 + 48) = v84;
    id v85 = [*(id *)((char *)v0 + v62) heightAnchor];
    id v86 = [*(id *)((char *)v0 + v62) widthAnchor];
    id v87 = [v85 constraintEqualToAnchor:v86];

    *(void *)(v74 + 56) = v87;
    id v88 = [*(id *)((char *)v0 + v61) leadingAnchor];
    id v89 = [*(id *)((char *)v0 + v62) trailingAnchor];
    id v90 = [v88 constraintEqualToAnchor:v89 constant:*(double *)&qword_1004F7E00];

    *(void *)(v74 + 64) = v90;
    id v91 = [*(id *)((char *)v0 + v61) topAnchor];
    id v92 = [v0 contentView];
    id v93 = [v92 topAnchor];

    if (qword_1004C3218 != -1) {
      swift_once();
    }
    id v94 = [v91 constraintEqualToAnchor:v93 constant:*(double *)&qword_1004D2298];

    *(void *)(v74 + 72) = v94;
    id v95 = [*(id *)((char *)v0 + v61) trailingAnchor];
    id v96 = [*(id *)(*(void *)((char *)v0 + v123)+ OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels) leadingAnchor];
    id v97 = [v95 constraintEqualToAnchor:v96 constant:-*(double *)&qword_1004F7E00];

    *(void *)(v74 + 80) = v97;
    id v98 = [*(id *)((char *)v0 + v123) leadingAnchor];
    id v99 = [*(id *)((char *)v0 + v62) trailingAnchor];
    id v100 = [v98 constraintEqualToAnchor:v99 constant:*(double *)&qword_1004F7E00];

    *(void *)(v74 + 88) = v100;
    *(void *)(v74 + 96) = v67;
    uint64_t v101 = *(void **)((char *)v0 + v123);
    id v119 = v67;
    id v102 = [v101 trailingAnchor];
    id v103 = [v0 contentView];
    id v104 = [v103 trailingAnchor];

    id v105 = [v102 constraintEqualToAnchor:v104];
    *(void *)(v74 + 104) = v105;
    id v106 = [*(id *)&v126[(void)v0] leadingAnchor];
    id v107 = [*(id *)((char *)v0 + v62) trailingAnchor];
    id v108 = [v106 constraintEqualToAnchor:v107 constant:*(double *)&qword_1004F7E00];

    *(void *)(v74 + 112) = v108;
    id v109 = [*(id *)&v126[(void)v0] topAnchor];
    id v110 = [*(id *)((char *)v0 + v123) bottomAnchor];
    id v111 = [v109 constraintEqualToAnchor:v110 constant:*(double *)&qword_1004F7E00];

    *(void *)(v74 + 120) = v111;
    id v112 = [*(id *)&v126[(void)v0] trailingAnchor];
    id v113 = [v0 contentView];
    id v114 = [v113 trailingAnchor];

    id v115 = [v112 constraintEqualToAnchor:v114];
    *(void *)(v74 + 128) = v115;
    id v116 = *(void **)((char *)v0 + v121);
    if (v116)
    {
      id v117 = self;
      *(void *)(v74 + 136) = v116;
      specialized Array._endMutation()();
      sub_100029878();
      id v118 = v116;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v117 activateConstraints:isa];

      goto LABEL_18;
    }
LABEL_22:
    __break(1u);
    return;
  }
  uint64_t v3 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView;
  [*(id *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView) setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v4 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle;
  [*(id *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle) setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v120 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel;
  [*(id *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel) setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v5 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel;
  [*(id *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel) setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v122 = v5;
  id v6 = [*(id *)((char *)v0 + v5) bottomAnchor];
  id v7 = [v0 contentView];
  id v8 = [v7 bottomAnchor];

  if (qword_1004C27E8 != -1) {
    swift_once();
  }
  id v9 = [v6 constraintEqualToAnchor:v8 constant:-*(double *)&qword_1004F7E00];

  id v10 = *(void **)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_bottomContentAnchor);
  uint64_t v124 = (char *)OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_bottomContentAnchor;
  *(void *)((char *)v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_bottomContentAnchor) = v9;

  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100404050;
  id v12 = [*(id *)((char *)v0 + v3) leadingAnchor];
  id v13 = [v0 contentView];
  id v14 = [v13 leadingAnchor];

  id v15 = [v12 constraintEqualToAnchor:v14 constant:*(double *)&qword_1004F7E00];
  *(void *)(v11 + 32) = v15;
  id v16 = [*(id *)((char *)v0 + v3) topAnchor];
  id v17 = [v0 contentView];
  id v18 = [v17 topAnchor];

  id v19 = [v16 constraintEqualToAnchor:v18 constant:*(double *)&qword_1004F7E00];
  *(void *)(v11 + 40) = v19;
  id v20 = [*(id *)((char *)v0 + v3) widthAnchor];
  if (qword_1004C3210 != -1) {
    swift_once();
  }
  id v21 = [v20 constraintEqualToConstant:*(double *)&qword_1004D2290];

  *(void *)(v11 + 48) = v21;
  id v22 = [*(id *)((char *)v0 + v3) heightAnchor];
  id v23 = [*(id *)((char *)v0 + v3) widthAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23];

  *(void *)(v11 + 56) = v24;
  id v25 = [*(id *)((char *)v0 + v4) leadingAnchor];
  id v26 = [v0 contentView];
  id v27 = [v26 leadingAnchor];

  id v28 = [v25 constraintEqualToAnchor:v27 constant:*(double *)&qword_1004F7E00];
  *(void *)(v11 + 64) = v28;
  id v29 = [*(id *)((char *)v0 + v4) topAnchor];
  id v30 = [*(id *)((char *)v0 + v3) bottomAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30 constant:*(double *)&qword_1004F7E00];

  *(void *)(v11 + 72) = v31;
  id v32 = [*(id *)((char *)v0 + v4) trailingAnchor];
  id v33 = [v0 contentView];
  id v34 = [v33 trailingAnchor];

  id v35 = [v32 constraintEqualToAnchor:v34];
  *(void *)(v11 + 80) = v35;
  id v36 = [*(id *)((char *)v0 + v120) leadingAnchor];
  id v37 = [v0 contentView];
  id v38 = [v37 leadingAnchor];

  id v39 = [v36 constraintEqualToAnchor:v38 constant:*(double *)&qword_1004F7E00];
  *(void *)(v11 + 88) = v39;
  id v40 = [*(id *)((char *)v0 + v120) topAnchor];
  id v41 = [*(id *)((char *)v0 + v4) bottomAnchor];
  if (qword_1004C27F0 != -1) {
    swift_once();
  }
  id v42 = [v40 constraintEqualToAnchor:v41 constant:*(double *)&qword_1004F7E08];

  *(void *)(v11 + 96) = v42;
  id v43 = [*(id *)((char *)v0 + v120) trailingAnchor];
  id v44 = [v0 contentView];
  id v45 = [v44 trailingAnchor];

  id v46 = [v43 constraintEqualToAnchor:v45];
  *(void *)(v11 + 104) = v46;
  id v47 = [*(id *)((char *)v0 + v122) leadingAnchor];
  id v48 = [v0 contentView];
  id v49 = [v48 leadingAnchor];

  id v50 = [v47 constraintEqualToAnchor:v49 constant:*(double *)&qword_1004F7E00];
  *(void *)(v11 + 112) = v50;
  id v51 = [*(id *)((char *)v0 + v122) topAnchor];
  id v52 = [*(id *)((char *)v0 + v120) bottomAnchor];
  id v53 = [v51 constraintEqualToAnchor:v52 constant:*(double *)&qword_1004F7E08];

  *(void *)(v11 + 120) = v53;
  id v54 = [*(id *)((char *)v0 + v122) trailingAnchor];
  id v55 = [v0 contentView];
  id v56 = [v55 trailingAnchor];

  id v57 = [v54 constraintEqualToAnchor:v56];
  *(void *)(v11 + 128) = v57;
  float v58 = *(void **)&v124[(void)v0];
  if (!v58)
  {
    __break(1u);
    goto LABEL_22;
  }
  id v59 = self;
  *(void *)(v11 + 136) = v58;
  specialized Array._endMutation()();
  sub_100029878();
  id v60 = v58;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v59 activateConstraints:isa];
LABEL_18:
}

void sub_1001FAB34()
{
  id v1 = *(char **)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels);
  id v2 = *(void **)&v1[OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits];
  uint64_t v3 = v1;
  [v2 setSelectedRange:0, 0];
  uint64_t v4 = *(void *)&v3[OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels];
  [*(id *)(*(void *)(v4 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];
  [*(id *)(*(void *)(v4 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];

  uint64_t v5 = *(char **)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels);
  id v6 = *(void **)&v5[OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits];
  id v7 = v5;
  [v6 setSelectedRange:0, 0];
  uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels];
  [*(id *)(*(void *)(v8 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];
  [*(id *)(*(void *)(v8 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];

  [*(id *)(*(void *)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle)+ OBJC_IVAR____TtC7Measure24AccessibilitySingleStack_label) setSelectedRange:0, 0];
  id v9 = *(char **)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel);
  id v10 = *(void **)&v9[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel];
  uint64_t v11 = v9;
  [v10 setSelectedRange:0, 0];
  [*(id *)&v11[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel] setSelectedRange:0, 0];
  [*(id *)&v11[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel] setSelectedRange:0, 0];

  id v12 = *(char **)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel);
  id v13 = *(void **)&v12[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel];
  id v14 = v12;
  [v13 setSelectedRange:0, 0];
  [*(id *)&v14[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel] setSelectedRange:0, 0];
  [*(id *)&v14[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel] setSelectedRange:0, 0];
}

void sub_1001FADC0()
{
  qword_1004D2290 = 0x404C000000000000;
}

void sub_1001FADD0()
{
  qword_1004D2298 = 0x4028000000000000;
}

id sub_1001FADE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView;
  type metadata accessor for SketchSurfaceHistory();
  id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v8 = v3;
  *(void *)&v3[v6] = [v7 init];
  uint64_t v9 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_cellTitle;
  *(void *)&v8[v9] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v10 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels;
  uint64_t v11 = (objc_class *)type metadata accessor for MeasureTableViewCellCommonContentView();
  *(void *)&v8[v10] = [objc_allocWithZone(v11) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v12 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels;
  *(void *)&v8[v12] = [objc_allocWithZone(v11) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v13 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle;
  *(void *)&v8[v13] = [objc_allocWithZone((Class)type metadata accessor for AccessibilitySingleStack()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v14 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel;
  id v15 = (objc_class *)type metadata accessor for AccessibilityTripleStack();
  *(void *)&v8[v14] = [objc_allocWithZone(v15) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v16 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel;
  *(void *)&v8[v16] = [objc_allocWithZone(v15) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v8[OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_bottomContentAnchor] = 0;

  if (a3)
  {
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v17 = 0;
  }
  v21.receiver = v8;
  v21.super_class = (Class)type metadata accessor for BaseRectangleHistoryCell();
  id v18 = [super initWithStyle:a1 reuseIdentifier:v17];

  id v19 = v18;
  sub_1001F8ECC();
  sub_1001F9ABC();

  return v19;
}

id sub_1001FB034(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView;
  type metadata accessor for SketchSurfaceHistory();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_cellTitle;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v7 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels;
  uint64_t v8 = (objc_class *)type metadata accessor for MeasureTableViewCellCommonContentView();
  *(void *)&v5[v7] = [objc_allocWithZone(v8) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v9 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels;
  *(void *)&v5[v9] = [objc_allocWithZone(v8) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v10 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle;
  *(void *)&v5[v10] = [objc_allocWithZone((Class)type metadata accessor for AccessibilitySingleStack()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v11 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel;
  uint64_t v12 = (objc_class *)type metadata accessor for AccessibilityTripleStack();
  *(void *)&v5[v11] = [objc_allocWithZone(v12) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v13 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel;
  *(void *)&v5[v13] = [objc_allocWithZone(v12) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v5[OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_bottomContentAnchor] = 0;

  v18.receiver = v5;
  v18.super_class = (Class)type metadata accessor for BaseRectangleHistoryCell();
  [super initWithCoder:a1];
  id v15 = v14;
  if (v14)
  {
    id v16 = v14;
    sub_1001F8ECC();
    sub_1001F9ABC();
  }
  return v15;
}

void sub_1001FB230()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView;
  [*(id *)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView) removeFromSuperview];
  uint64_t v2 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_cellTitle;
  [*(id *)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_cellTitle) removeFromSuperview];
  uint64_t v3 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels;
  [*(id *)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels) removeFromSuperview];
  uint64_t v4 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels;
  [*(id *)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels) removeFromSuperview];
  uint64_t v5 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle;
  [*(id *)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle) removeFromSuperview];
  uint64_t v6 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel;
  [*(id *)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel) removeFromSuperview];
  uint64_t v7 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel;
  [*(id *)(v0 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel) removeFromSuperview];
  type metadata accessor for SketchSurfaceHistory();
  id v8 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v9 = *(void **)(v0 + v1);
  *(void *)(v0 + v1) = v8;

  id v10 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v11 = *(void **)(v0 + v2);
  *(void *)(v0 + v2) = v10;

  uint64_t v12 = (objc_class *)type metadata accessor for MeasureTableViewCellCommonContentView();
  id v13 = [objc_allocWithZone(v12) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v14 = *(void **)(v0 + v3);
  *(void *)(v0 + v3) = v13;

  id v15 = [objc_allocWithZone(v12) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v16 = *(void **)(v0 + v4);
  *(void *)(v0 + v4) = v15;

  id v17 = [objc_allocWithZone((Class)type metadata accessor for AccessibilitySingleStack()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  objc_super v18 = *(void **)(v0 + v5);
  *(void *)(v0 + v5) = v17;

  id v19 = (objc_class *)type metadata accessor for AccessibilityTripleStack();
  id v20 = [objc_allocWithZone(v19) initWithFrame:0.0, 0.0, 0.0, 0.0];
  objc_super v21 = *(void **)(v0 + v6);
  *(void *)(v0 + v6) = v20;

  id v22 = [objc_allocWithZone(v19) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v23 = *(void **)(v0 + v7);
  *(void *)(v0 + v7) = v22;

  sub_1001F8ECC();

  sub_1001F9ABC();
}

id sub_1001FB494()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseRectangleHistoryCell();
  return [super dealloc];
}

uint64_t type metadata accessor for BaseRectangleHistoryCell()
{
  return self;
}

id sub_1001FB67C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TransformLayerView();
  return [super dealloc];
}

uint64_t type metadata accessor for TransformLayerView()
{
  return self;
}

unint64_t sub_1001FB6D4()
{
  unint64_t result = qword_1004D2330;
  if (!qword_1004D2330)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1004D2330);
  }
  return result;
}

void sub_1001FB714(uint64_t *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_totalCountLabel);
  uint64_t v4 = a1[7];
  v5._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 0x203A6C61746F54;
  v6._object = (void *)0xE700000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v3 setText:v7];

  id v8 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel);
  uint64_t v9 = *a1;
  v10._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 2128928;
  v11._object = (void *)0xE300000000000000;
  String.append(_:)(v11);
  if (v4)
  {
    sub_100012894((uint64_t *)&unk_1004D2460);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1003F87F0;
    *(void *)(v12 + 56) = &type metadata for Float;
    *(void *)(v12 + 64) = &protocol witness table for Float;
    *(float *)(v12 + 32) = (float)((float)v9 * 100.0) / (float)v4;
    uint64_t v13 = String.init(format:_:)();
    unint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    unint64_t v15 = 0xE000000000000000;
  }
  unint64_t v16 = v15;
  String.append(_:)(*(Swift::String *)&v13);
  swift_bridgeObjectRelease();
  v17._uint64_t countAndFlagsBits = 540689473;
  v17._object = (void *)0xE400000000000000;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v8 setText:v18];

  id v19 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_arkitCountLabel);
  uint64_t v20 = a1[1];
  v21._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = 2128928;
  v22._object = (void *)0xE300000000000000;
  String.append(_:)(v22);
  if (v4)
  {
    sub_100012894((uint64_t *)&unk_1004D2460);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1003F87F0;
    *(void *)(v23 + 56) = &type metadata for Float;
    *(void *)(v23 + 64) = &protocol witness table for Float;
    *(float *)(v23 + 32) = (float)((float)v20 * 100.0) / (float)v4;
    uint64_t v24 = String.init(format:_:)();
    unint64_t v26 = v25;
  }
  else
  {
    uint64_t v24 = 0;
    unint64_t v26 = 0xE000000000000000;
  }
  unint64_t v27 = v26;
  String.append(_:)(*(Swift::String *)&v24);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = 0x203A74694B5241;
  v28._object = (void *)0xE700000000000000;
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v19 setText:v29];

  id v30 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_localCountLabel);
  uint64_t v31 = a1[2];
  v32._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v32);
  swift_bridgeObjectRelease();
  v33._uint64_t countAndFlagsBits = 2128928;
  v33._object = (void *)0xE300000000000000;
  String.append(_:)(v33);
  if (v4)
  {
    sub_100012894((uint64_t *)&unk_1004D2460);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1003F87F0;
    *(void *)(v34 + 56) = &type metadata for Float;
    *(void *)(v34 + 64) = &protocol witness table for Float;
    *(float *)(v34 + 32) = (float)((float)v31 * 100.0) / (float)v4;
    uint64_t v35 = String.init(format:_:)();
    unint64_t v37 = v36;
  }
  else
  {
    uint64_t v35 = 0;
    unint64_t v37 = 0xE000000000000000;
  }
  unint64_t v38 = v37;
  String.append(_:)(*(Swift::String *)&v35);
  swift_bridgeObjectRelease();
  v39._uint64_t countAndFlagsBits = 0x203A6C61636F4CLL;
  v39._object = (void *)0xE700000000000000;
  String.append(_:)(v39);
  swift_bridgeObjectRelease();
  NSString v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v30 setText:v40];

  id v41 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_patchCountLabel);
  uint64_t v42 = a1[3];
  v43._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v43);
  swift_bridgeObjectRelease();
  v44._uint64_t countAndFlagsBits = 2128928;
  v44._object = (void *)0xE300000000000000;
  String.append(_:)(v44);
  unint64_t v45 = 0xE000000000000000;
  if (v4)
  {
    sub_100012894((uint64_t *)&unk_1004D2460);
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_1003F87F0;
    *(void *)(v46 + 56) = &type metadata for Float;
    *(void *)(v46 + 64) = &protocol witness table for Float;
    *(float *)(v46 + 32) = (float)((float)v42 * 100.0) / (float)v4;
    uint64_t v47 = String.init(format:_:)();
    unint64_t v49 = v48;
  }
  else
  {
    uint64_t v47 = 0;
    unint64_t v49 = 0xE000000000000000;
  }
  unint64_t v50 = v49;
  String.append(_:)(*(Swift::String *)&v47);
  swift_bridgeObjectRelease();
  v51._uint64_t countAndFlagsBits = 0x203A6863746150;
  v51._object = (void *)0xE700000000000000;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  NSString v52 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v41 setText:v52];

  id v53 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_fallbackCountLabel);
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  uint64_t v54 = a1[5];
  v55._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v55);
  swift_bridgeObjectRelease();
  v56._uint64_t countAndFlagsBits = 2128928;
  v56._object = (void *)0xE300000000000000;
  String.append(_:)(v56);
  if (v4)
  {
    sub_100012894((uint64_t *)&unk_1004D2460);
    uint64_t v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = xmmword_1003F87F0;
    *(void *)(v57 + 56) = &type metadata for Float;
    *(void *)(v57 + 64) = &protocol witness table for Float;
    *(float *)(v57 + 32) = (float)((float)v54 * 100.0) / (float)v4;
    uint64_t v58 = String.init(format:_:)();
    unint64_t v45 = v59;
  }
  else
  {
    uint64_t v58 = 0;
  }
  unint64_t v60 = v45;
  String.append(_:)(*(Swift::String *)&v58);
  swift_bridgeObjectRelease();
  v61._uint64_t countAndFlagsBits = 0x6B6361626C6C6146;
  v61._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v61);
  swift_bridgeObjectRelease();
  NSString v62 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v53 setText:v62];

  uint64_t v63 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_inferredCountLabel);
  unint64_t v64 = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  uint64_t v65 = a1[4];
  v66._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v66);
  swift_bridgeObjectRelease();
  v67._uint64_t countAndFlagsBits = 2128928;
  v67._object = (void *)0xE300000000000000;
  String.append(_:)(v67);
  if (v4)
  {
    sub_100012894((uint64_t *)&unk_1004D2460);
    uint64_t v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = xmmword_1003F87F0;
    *(void *)(v68 + 56) = &type metadata for Float;
    *(void *)(v68 + 64) = &protocol witness table for Float;
    *(float *)(v68 + 32) = (float)((float)v65 * 100.0) / (float)v4;
    uint64_t v69 = String.init(format:_:)();
    unint64_t v71 = v70;
  }
  else
  {
    uint64_t v69 = 0;
    unint64_t v71 = 0xE000000000000000;
  }
  unint64_t v72 = v71;
  String.append(_:)(*(Swift::String *)&v69);
  swift_bridgeObjectRelease();
  v73._uint64_t countAndFlagsBits = 0x6465727265666E49;
  v73._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v73);
  swift_bridgeObjectRelease();
  NSString v74 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v63 setText:v74];

  id v75 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_prevCountLabel);
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  uint64_t v76 = a1[6];
  v77._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v77);
  swift_bridgeObjectRelease();
  v78._uint64_t countAndFlagsBits = 2128928;
  v78._object = (void *)0xE300000000000000;
  String.append(_:)(v78);
  if (v4)
  {
    sub_100012894((uint64_t *)&unk_1004D2460);
    uint64_t v79 = swift_allocObject();
    *(_OWORD *)(v79 + 16) = xmmword_1003F87F0;
    *(void *)(v79 + 56) = &type metadata for Float;
    *(void *)(v79 + 64) = &protocol witness table for Float;
    *(float *)(v79 + 32) = (float)((float)v76 * 100.0) / (float)v4;
    uint64_t v80 = String.init(format:_:)();
    unint64_t v64 = v81;
  }
  else
  {
    uint64_t v80 = 0;
  }
  unint64_t v82 = v64;
  String.append(_:)(*(Swift::String *)&v80);
  swift_bridgeObjectRelease();
  v83._uint64_t countAndFlagsBits = 0x73756F6976657250;
  v83._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v83);
  swift_bridgeObjectRelease();
  NSString v84 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v75 setText:v84];

  sub_1001FC950();
}

UIColor sub_1001FC184()
{
  sub_10001C99C(0, &qword_1004C5548);
  result.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 1.0).super.isa;
  qword_1004D2338 = (uint64_t)result.super.isa;
  return result;
}

void sub_1001FC1D8()
{
  qword_1004D2340 = 0x4028000000000000;
}

char *sub_1001FC1E8(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_maxWidth] = 0;
  id v9 = objc_allocWithZone((Class)UILabel);
  Swift::String v10 = v4;
  id v11 = [v9 initWithFrame:a1, a2, a3, a4];
  if (qword_1004C3220 != -1) {
    swift_once();
  }
  [v11 setTextColor:qword_1004D2338];
  [v11 setTextAlignment:0];
  uint64_t v12 = self;
  if (qword_1004C3228 != -1) {
    swift_once();
  }
  id v13 = [v12 systemFontOfSize:*(double *)&qword_1004D2340];
  [v11 setFont:v13];

  *(void *)&v10[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_totalCountLabel] = v11;
  id v14 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v14 setTextColor:qword_1004D2338];
  [v14 setTextAlignment:0];
  id v15 = [v12 systemFontOfSize:*(double *)&qword_1004D2340];
  [v14 setFont:v15];

  *(void *)&v10[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel] = v14;
  id v16 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v16 setTextColor:qword_1004D2338];
  [v16 setTextAlignment:0];
  id v17 = [v12 systemFontOfSize:*(double *)&qword_1004D2340];
  [v16 setFont:v17];

  *(void *)&v10[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_arkitCountLabel] = v16;
  id v18 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v18 setTextColor:qword_1004D2338];
  [v18 setTextAlignment:0];
  id v19 = [v12 systemFontOfSize:*(double *)&qword_1004D2340];
  [v18 setFont:v19];

  *(void *)&v10[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_localCountLabel] = v18;
  id v20 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v20 setTextColor:qword_1004D2338];
  [v20 setTextAlignment:0];
  id v21 = [v12 systemFontOfSize:*(double *)&qword_1004D2340];
  [v20 setFont:v21];

  *(void *)&v10[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_patchCountLabel] = v20;
  id v22 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v22 setTextColor:qword_1004D2338];
  [v22 setTextAlignment:0];
  id v23 = [v12 systemFontOfSize:*(double *)&qword_1004D2340];
  [v22 setFont:v23];

  *(void *)&v10[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_fallbackCountLabel] = v22;
  id v24 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v24 setTextColor:qword_1004D2338];
  [v24 setTextAlignment:0];
  id v25 = [v12 systemFontOfSize:*(double *)&qword_1004D2340];
  [v24 setFont:v25];

  *(void *)&v10[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_inferredCountLabel] = v24;
  id v26 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v26 setTextColor:qword_1004D2338];
  [v26 setTextAlignment:0];
  id v27 = [v12 systemFontOfSize:*(double *)&qword_1004D2340];
  [v26 setFont:v27];

  *(void *)&v10[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_prevCountLabel] = v26;
  v36.receiver = v10;
  v36.super_class = ObjectType;
  Swift::String v28 = (char *)objc_msgSendSuper2(&v36, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v29 = *(void *)&v28[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_totalCountLabel];
  id v30 = v28;
  [v30 addSubview:v29];
  [v30 addSubview:*(void *)&v30[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_adCountLabel]];
  [v30 addSubview:*(void *)&v30[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_localCountLabel]];
  [v30 addSubview:*(void *)&v30[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_arkitCountLabel]];
  [v30 addSubview:*(void *)&v30[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_patchCountLabel]];
  [v30 addSubview:*(void *)&v30[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_inferredCountLabel]];
  [v30 addSubview:*(void *)&v30[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_fallbackCountLabel]];
  [v30 addSubview:*(void *)&v30[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_prevCountLabel]];
  id v31 = [v30 layer];
  LODWORD(v32) = 1.0;
  [v31 setShadowOpacity:v32];

  id v33 = [v30 layer];
  [v33 setShadowOffset:0.0, 0.0];

  [v30 setUserInteractionEnabled:0];
  return v30;
}

void sub_1001FC950()
{
  uint64_t v1 = v0;
  id v2 = [v0 superview];
  if (!v2) {
    return;
  }
  uint64_t v3 = v2;
  [v2 frame];
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;

  id v12 = [v1 subviews];
  uint64_t v53 = sub_10001C99C(0, (unint64_t *)&qword_1004CA030);
  unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    if (!v14) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v14) {
      goto LABEL_12;
    }
  }
  if (v14 < 1)
  {
    __break(1u);
    goto LABEL_56;
  }
  for (uint64_t i = 0; i != v14; ++i)
  {
    if ((v13 & 0xC000000000000001) != 0) {
      id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v16 = *(id *)(v13 + 8 * i + 32);
    }
    id v17 = v16;
    [v16 sizeToFit:v53];
  }
LABEL_12:
  swift_bridgeObjectRelease_n();
  id v18 = &selRef_replaySensorDidFinishReplayingData;
  id v19 = [v1 subviews];
  unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v20 >> 62))
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v21) {
      goto LABEL_14;
    }
LABEL_21:
    double v23 = 0.0;
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
  if (!v21) {
    goto LABEL_21;
  }
LABEL_14:
  if (v21 < 1)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v22 = 0;
  double v23 = 0.0;
  do
  {
    if ((v20 & 0xC000000000000001) != 0) {
      id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v24 = *(id *)(v20 + 8 * v22 + 32);
    }
    id v25 = v24;
    ++v22;
    [v24 frame:v53];
    double v27 = v26;

    double v23 = v23 + v27;
  }
  while (v21 != v22);
LABEL_22:
  swift_bridgeObjectRelease_n();
  uint64_t v28 = OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_maxWidth;
  double v29 = *(double *)&v1[OBJC_IVAR____TtC7Measure23PlaneSelectionStatsView_maxWidth];
  id v30 = [v1 subviews];
  unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v31 >> 62))
  {
    uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v32) {
      goto LABEL_24;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v32) {
    goto LABEL_34;
  }
LABEL_24:
  sub_1000BBDF4(0, v32 & ~(v32 >> 63), 0);
  if (v32 < 0)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  for (uint64_t j = 0; j != v32; ++j)
  {
    if ((v31 & 0xC000000000000001) != 0) {
      id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v34 = *(id *)(v31 + 8 * j + 32);
    }
    uint64_t v35 = v34;
    [v34 frame:v53];
    double v37 = v36;

    double v39 = _swiftEmptyArrayStorage[2];
    double v38 = _swiftEmptyArrayStorage[3];
    if (*(void *)&v39 >= *(void *)&v38 >> 1) {
      sub_1000BBDF4((char *)(*(void *)&v38 > 1uLL), *(void *)&v39 + 1, 1);
    }
    *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v39 + 1;
    _swiftEmptyArrayStorage[*(void *)&v39 + 4] = v37;
  }
  swift_bridgeObjectRelease();
  id v18 = &selRef_replaySensorDidFinishReplayingData;
LABEL_35:
  *(double *)&uint64_t v40 = COERCE_DOUBLE(sub_1000582A0((uint64_t)_swiftEmptyArrayStorage));
  char v42 = v41;
  swift_bridgeObjectRelease();
  double v43 = *(double *)&v40;
  if (v42) {
    double v43 = 0.0;
  }
  if (v43 >= v29)
  {
    if ((~*(void *)&v43 & 0x7FF0000000000000) != 0)
    {
      double v29 = v43;
    }
    else if ((*(void *)&v43 & 0xFFFFFFFFFFFFFLL) == 0)
    {
      double v29 = v43;
    }
  }
  *(double *)&v1[v28] = v29;
  v55.origin.x = v5;
  v55.origin.y = v7;
  v55.size.width = v9;
  v55.size.height = v11;
  [v1 setFrame:CGRectMake(0.0, CGRectGetMidY(v55) + v23 * -0.5, *(double *)&v1[v28], v23)];
  id v44 = [v1 v18[216]];
  unint64_t v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v45 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v46)
    {
LABEL_45:
      if (v46 >= 1)
      {
        uint64_t v47 = 0;
        double v48 = 0.0;
        do
        {
          if ((v45 & 0xC000000000000001) != 0) {
            id v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v49 = *(id *)(v45 + 8 * v47 + 32);
          }
          unint64_t v50 = v49;
          ++v47;
          [v49 frame:v53];
          [v50 setFrame:];
          [v50 frame];
          double v52 = v51;

          double v48 = v48 + v52;
        }
        while (v46 != v47);
        goto LABEL_52;
      }
LABEL_58:
      __break(1u);
      return;
    }
  }
  else
  {
    uint64_t v46 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v46) {
      goto LABEL_45;
    }
  }
LABEL_52:

  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for PlaneSelectionStatsView()
{
  return self;
}

id sub_1001FCFE8(__n128 a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8)
{
  CGFloat v9 = (__n128 *)&v8[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms];
  *CGFloat v9 = a1;
  v9[1] = a2;
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = a5;
  v9[5] = a6;
  v9[6] = a7;
  v9[7] = a8;
  simd_float4x4.position.getter();
  SCNVector3.init(_:)();
  int v11 = v10;
  int v13 = v12;
  int v15 = v14;
  type metadata accessor for SCNVector3(0);
  uint64_t v17 = v16;
  uint64_t v30 = v16;
  int v27 = v11;
  int v28 = v13;
  int v29 = v15;
  sub_1001FEF00((uint64_t)&v27, 0x3050656E696CLL, 0xE600000000000000, (SEL *)&selRef_setValue_forKeyPath_);
  sub_10001C9D8((uint64_t)&v27);
  simd_float4x4.position.getter();
  SCNVector3.init(_:)();
  uint64_t v30 = v17;
  int v27 = v18;
  int v28 = v19;
  int v29 = v20;
  sub_1001FEF00((uint64_t)&v27, 0x3150656E696CLL, 0xE600000000000000, (SEL *)&selRef_setValue_forKeyPath_);
  id result = (id)sub_10001C9D8((uint64_t)&v27);
  if (v8[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_shouldRenderNumbers] == 1)
  {
    if (v8[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_shouldHide]) {
      char v22 = 1;
    }
    else {
      char v22 = sub_1001FF4FC();
    }
    [v8 setHidden:v22 & 1, *(_OWORD *)&a1, *(_OWORD *)&a2, *(_OWORD *)&a3, *(_OWORD *)&a4];
    return sub_1001FE070();
  }
  return result;
}

uint64_t sub_1001FD140(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_1001FD168(uint64_t a1, void *a2)
{
  id v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t sub_1001FD1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v26 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  int v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v11);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v24 = *(void *)(v12 - 8);
  uint64_t v25 = v12;
  uint64_t result = __chkstk_darwin(v12);
  int v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v2 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString) != a1
    || *(void *)(v2 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString + 8) != a2)
  {
    uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
    if ((result & 1) == 0)
    {
      v22[1] = sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_10003FD08((unint64_t *)&qword_1004C6B50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
      sub_100012894(&qword_1004CF220);
      uint64_t v23 = v5;
      sub_10003FD50((unint64_t *)&qword_1004C6B60, &qword_1004CF220);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v7);
      uint64_t v17 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
      uint64_t v18 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_100200244;
      void aBlock[5] = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100049AB4;
      aBlock[3] = &unk_1004939F8;
      int v19 = _Block_copy(aBlock);
      swift_retain();
      static DispatchQoS.unspecified.getter();
      int v28 = _swiftEmptyArrayStorage;
      sub_10003FD08((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100012894((uint64_t *)&unk_1004C68E0);
      sub_10003FD50((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
      int v20 = v26;
      uint64_t v21 = v23;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v19);

      (*(void (**)(char *, uint64_t))(v27 + 8))(v20, v21);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v15, v25);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

void sub_1001FD680()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (char *)Strong;
    uint64_t v40 = v4;
    uint64_t v41 = v1;
    uint64_t v42 = v0;
    uint64_t v38 = OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_isMaterialAActive;
    uint64_t v39 = v5;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_isMaterialAActive) == 1)
    {
      id v37 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(Strong
                                                                  + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialB), "diffuse"));
      uint64_t v10 = *(void *)&v9[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString];
      uint64_t v11 = *(void *)&v9[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString + 8];
      uint64_t v12 = qword_1004C2E40;
      swift_bridgeObjectRetain();
      if (v12 != -1) {
        swift_once();
      }
      int v13 = (void *)qword_1004D0740;
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v10;
      *(void *)(v14 + 24) = v11;
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = sub_10020064C;
      *(void *)(v15 + 24) = v14;
      uint64_t v47 = sub_100200650;
      uint64_t v48 = v15;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v44 = 1107296256;
      uint64_t v16 = &v45;
      unint64_t v45 = sub_1001FD168;
      uint64_t v46 = &unk_100493B38;
      uint64_t v17 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      id v18 = [v13 imageWithActions:v17];
      _Block_release(v17);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0)
      {
        id v20 = v37;
        [v37 setContents:v18];

        sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
        uint64_t v21 = (void *)static OS_dispatch_queue.main.getter();
        uint64_t v22 = swift_allocObject();
        *(void *)(v22 + 16) = v9;
        uint64_t v47 = sub_100200328;
        uint64_t v48 = v22;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v44 = 1107296256;
        uint64_t v23 = &unk_100493B88;
LABEL_10:
        unint64_t v45 = sub_100049AB4;
        uint64_t v46 = v23;
        id v33 = _Block_copy(&aBlock);
        id v34 = v9;
        swift_release();
        static DispatchQoS.unspecified.getter();
        uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
        sub_10003FD08((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100012894((uint64_t *)&unk_1004C68E0);
        sub_10003FD50((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
        uint64_t v35 = v42;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v33);

        (*(void (**)(char *, uint64_t))(v41 + 8))(v3, v35);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v40);
        v9[v38] = (v9[v38] & 1) == 0;

        return;
      }
      __break(1u);
    }
    else
    {
      id v37 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(Strong
                                                                  + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialA), "diffuse"));
      uint64_t v16 = *(void ***)&v9[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString];
      uint64_t v11 = *(void *)&v9[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString + 8];
      uint64_t v24 = qword_1004C2E40;
      swift_bridgeObjectRetain();
      if (v24 == -1)
      {
LABEL_8:
        uint64_t v25 = (void *)qword_1004D0740;
        uint64_t v26 = swift_allocObject();
        *(void *)(v26 + 16) = v16;
        *(void *)(v26 + 24) = v11;
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = sub_1001B54E0;
        *(void *)(v27 + 24) = v26;
        uint64_t v47 = sub_100200274;
        uint64_t v48 = v27;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v44 = 1107296256;
        unint64_t v45 = sub_1001FD168;
        uint64_t v46 = &unk_100493A70;
        int v28 = _Block_copy(&aBlock);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_release();
        id v29 = [v25 imageWithActions:v28];
        _Block_release(v28);
        char v30 = swift_isEscapingClosureAtFileLocation();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        if (v30)
        {
          __break(1u);
          return;
        }
        id v31 = v37;
        [v37 setContents:v29];

        sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
        uint64_t v21 = (void *)static OS_dispatch_queue.main.getter();
        uint64_t v32 = swift_allocObject();
        *(void *)(v32 + 16) = v9;
        uint64_t v47 = sub_1002002D4;
        uint64_t v48 = v32;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v44 = 1107296256;
        uint64_t v23 = &unk_100493AC0;
        goto LABEL_10;
      }
    }
    swift_once();
    goto LABEL_8;
  }
}

void sub_1001FDDC4(unsigned __int8 a1)
{
  if (v1[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_lastNumbersOrientation] != a1)
  {
    uint64_t v2 = v1;
    [v1 simdTransform];
    *(double *)v7.i64 = sub_100080F08(v4, v5, v6);
    float32x4_t v24 = v7;
    sub_1001B64AC(a1);
    int32x4_t v9 = (int32x4_t)vnegq_f32(v8);
    int8x16_t v10 = (int8x16_t)vtrn2q_s32((int32x4_t)v8, vtrn1q_s32((int32x4_t)v8, v9));
    float32x4_t v11 = (float32x4_t)vrev64q_s32((int32x4_t)v8);
    v11.i32[0] = v9.i32[1];
    v11.i32[3] = v9.i32[2];
    float32x4_t v25 = vaddq_f32(vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v8, (int8x16_t)v9, 8uLL), *(float32x2_t *)v24.f32, 1), (float32x4_t)vextq_s8(v10, v10, 8uLL), v24.f32[0]), vmlaq_laneq_f32(vmulq_laneq_f32(v8, v24, 3), v11, v24, 2));
    uint64_t v12 = (float *)Float.piDiv2.unsafeMutableAddressor();
    __float2 v13 = __sincosf_stret(*v12 * -0.5);
    int32x4_t v14 = (int32x4_t)vmulq_n_f32((float32x4_t)xmmword_1003FB560, v13.__sinval);
    v14.i32[3] = LODWORD(v13.__cosval);
    int32x4_t v15 = (int32x4_t)vnegq_f32((float32x4_t)v14);
    int8x16_t v16 = (int8x16_t)vtrn2q_s32(v14, vtrn1q_s32(v14, v15));
    float32x4_t v17 = (float32x4_t)vrev64q_s32(v14);
    v17.i32[0] = v15.i32[1];
    v17.i32[3] = v15.i32[2];
    id v18 = *(void **)&v1[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_number];
    [v18 setSimdOrientation:*(double *)vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32((float32x4_t)v14, v25, 3), v17, v25, 2), vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v14, (int8x16_t)v15, 8uLL), *(float32x2_t *)v25.f32, 1), (float32x4_t)vextq_s8(v16, v16, 8uLL), v25.f32[0])).i64];
    sub_10001C99C(0, &qword_1004C4028);
    SCNBoundingVolume.boundingBox.getter();
    int v19 = v28;
    float v20 = (float)(*(float *)&v27 + *((float *)&v28 + 1)) * 0.5;
    switch(a1)
    {
      case 1u:
      case 3u:
        int v19 = v26;
        break;
      default:
        break;
    }
    int v26 = 1065353216;
    uint64_t v28 = 0;
    uint64_t v27 = 0;
    int v29 = 1065353216;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = 1065353216;
    int v33 = v19;
    float v34 = v20;
    uint64_t v35 = 0x3F80000000000000;
    [v18 setPivot:&v26 *(_OWORD *)&v25];
    if (((a1 - 1) & 0xFD) != 0) {
      float v21 = 0.5;
    }
    else {
      float v21 = 0.0;
    }
    id v22 = [*(id *)&v2[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialA] diffuse];
    int v26 = 1065353216;
    uint64_t v28 = 0;
    uint64_t v27 = 0;
    int v29 = 1056964608;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v30 = 0;
    int v33 = 0;
    float v34 = v21;
    uint64_t v35 = 0x3F80000000000000;
    [v22 setContentsTransform:&v26];

    id v23 = [*(id *)&v2[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialB] diffuse];
    int v26 = 1065353216;
    uint64_t v28 = 0;
    uint64_t v27 = 0;
    int v29 = 1056964608;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v30 = 0;
    int v33 = 0;
    float v34 = v21;
    uint64_t v35 = 0x3F80000000000000;
    [v23 setContentsTransform:&v26];
  }
}

id sub_1001FE070()
{
  uint64_t v1 = v0;
  simd_float4x4.position.getter();
  float32x4_t v41 = v2;
  simd_float4x4.position.getter();
  float32x4_t v4 = vsubq_f32(v41, v3);
  float32x4_t v5 = vmulq_f32(v4, v4);
  float v6 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v5, 2), vaddq_f32(v5, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v5.f32, 1))).f32[0]);
  if (qword_1004C2D08 != -1) {
    swift_once();
  }
  [v0 simdTransform];
  int8x16_t v43 = v8;
  int8x16_t v44 = v7;
  __n128 v42 = v9;
  uint64_t v10 = OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_lastNumbersOrientation;
  sub_1001B64AC(v0[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_lastNumbersOrientation]);
  float32x4_t v45 = v11;
  float v12 = *(float *)Float.piDiv2.unsafeMutableAddressor();
  simd_float4x4.position.getter();
  float32x4_t v40 = v13;
  simd_float4x4.position.getter();
  float32x4_t v15 = vsubq_f32(v40, v14);
  float32x4_t v16 = vmulq_f32(v15, v15);
  float v17 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v16, 2), vaddq_f32(v16, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v16.f32, 1))).f32[0]);
  id v18 = *(void (**)(uint64_t))(**(void **)&v0[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber__unitState]
                                       + 144);
  uint64_t v19 = swift_retain();
  v18(v19);
  swift_release();
  id v20 = sub_1000B1320();
  uint64_t v22 = sub_1001FF784((uint64_t)v20, v17);
  if (v6 > 0.00000011921)
  {
    id v23 = (uint64_t *)&v0[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString];
    uint64_t v24 = *(void *)&v0[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString];
    uint64_t v25 = *(void *)&v0[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString + 8];
    *id v23 = v22;
    v23[1] = v21;
    sub_1001FD1B4(v24, v25);
  }
  swift_bridgeObjectRelease();
  int v26 = *(void **)&v0[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_number];
  uint64_t v27 = v1[v10];
  sub_10001C99C(0, &qword_1004C4028);
  SCNBoundingVolume.boundingBox.getter();
  int v28 = v49;
  switch(v27)
  {
    case 1:
    case 3:
      int v28 = v47;
      break;
    default:
      break;
  }
  float v29 = (float)(*(float *)&v48 + *((float *)&v49 + 1)) * 0.5;
  *(double *)v30.i64 = sub_100080F08(v44, v43, v42);
  int32x4_t v31 = (int32x4_t)vnegq_f32(v45);
  int8x16_t v32 = (int8x16_t)vtrn2q_s32((int32x4_t)v45, vtrn1q_s32((int32x4_t)v45, v31));
  float32x4_t v33 = (float32x4_t)vrev64q_s32((int32x4_t)v45);
  v33.i32[0] = v31.i32[1];
  v33.i32[3] = v31.i32[2];
  float32x4_t v46 = vaddq_f32(vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v45, (int8x16_t)v31, 8uLL), *(float32x2_t *)v30.f32, 1), (float32x4_t)vextq_s8(v32, v32, 8uLL), v30.f32[0]), vmlaq_laneq_f32(vmulq_laneq_f32(v45, v30, 3), v33, v30, 2));
  __float2 v34 = __sincosf_stret(v12 * -0.5);
  float32x4_t v35 = vmulq_n_f32((float32x4_t)xmmword_1003FB560, v34.__sinval);
  v35.i32[3] = LODWORD(v34.__cosval);
  int32x4_t v36 = (int32x4_t)vnegq_f32(v35);
  int8x16_t v37 = (int8x16_t)vtrn2q_s32((int32x4_t)v35, vtrn1q_s32((int32x4_t)v35, v36));
  float32x4_t v38 = (float32x4_t)vrev64q_s32((int32x4_t)v35);
  v38.i32[0] = v36.i32[1];
  v38.i32[3] = v36.i32[2];
  v46.i64[0] = vaddq_f32(vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v35, (int8x16_t)v36, 8uLL), *(float32x2_t *)v46.f32, 1), (float32x4_t)vextq_s8(v37, v37, 8uLL), v46.f32[0]), vmlaq_laneq_f32(vmulq_laneq_f32(v35, v46, 3), v38, v46, 2)).u64[0];
  int v47 = 1065353216;
  uint64_t v49 = 0;
  uint64_t v48 = 0;
  int v50 = 1065353216;
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  uint64_t v53 = 1065353216;
  int v54 = v28;
  float v55 = v29;
  uint64_t v56 = 0x3F80000000000000;
  [v26 setPivot:&v47 *(_OWORD *)&v40];
  [v26 setSimdOrientation:*(double *)v46.i64];
  return [v26 setSimdPosition:0.0];
}

char *sub_1001FE3FC(__n128 a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v8[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_isMaterialAActive] = 1;
  uint64_t v10 = v8;
  id v11 = sub_1001B4A50(9);
  [v11 copy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
  if (swift_dynamicCast()) {
    id v12 = v53;
  }
  else {
    id v12 = [objc_allocWithZone((Class)SCNMaterial) init];
  }
  uint64_t v13 = OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialA;
  *(void *)&v10[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialA] = v12;
  id v14 = sub_1001B4A50(9);
  [v14 copy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  if (swift_dynamicCast()) {
    id v15 = v53;
  }
  else {
    id v15 = [objc_allocWithZone((Class)SCNMaterial) init];
  }
  *(void *)&v10[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialB] = v15;
  float32x4_t v16 = &v10[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString];
  *float32x4_t v16 = 0;
  v16[1] = 0xE000000000000000;
  uint64_t v17 = OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber__unitState;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = sub_100012894(&qword_1004C96C8);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_1004F8630;
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 272);
  swift_retain();
  *(void *)&v10[v17] = v21(KeyPath, v20);
  uint64_t v22 = OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber__orientationState;
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = sub_100012894((uint64_t *)&unk_1004C7450);
  uint64_t v25 = qword_1004F8630;
  int v26 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 272);
  swift_retain();
  *(void *)&v10[v22] = v26(v23, v25);
  v10[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_lastNumbersOrientation] = 2;
  v10[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_shouldHide] = 1;
  v10[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_isOcclusionInitialized] = 0;
  v10[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_shouldRenderNumbers] = 0;
  uint64_t v27 = (__n128 *)&v10[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_endTransforms];
  *uint64_t v27 = a1;
  v27[1] = a2;
  _OWORD v27[2] = a3;
  v27[3] = a4;
  v27[4] = a5;
  v27[5] = a6;
  v27[6] = a7;
  v27[7] = a8;
  id v28 = [self planeWithWidth:400.0 height:125.0];
  *(void *)&v10[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_plane] = v28;
  [v28 setFirstMaterial:*(void *)&v10[v13]];
  id v29 = [self nodeWithGeometry:v28];
  *(void *)&v10[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_number] = v29;

  v52.receiver = v10;
  v52.super_class = ObjectType;
  float32x4_t v30 = (char *)objc_msgSendSuper2(&v52, "init");
  [v30 setHidden:1];
  [v30 addChildNode:*(void *)&v30[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_number]];
  sub_1001FE070();
  if (((v30[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_lastNumbersOrientation] - 1) & 0xFD) != 0) {
    float v31 = 0.5;
  }
  else {
    float v31 = 0.0;
  }
  id v32 = [*(id *)&v30[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialA] diffuse:a1, a2, a3, a4, a5, a6, a7, a8];
  *(_DWORD *)int8x16_t v43 = 1065353216;
  uint64_t v44 = 0;
  *(void *)&v43[4] = 0;
  int v45 = 1056964608;
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  float32x4_t v46 = 0;
  int v49 = 0;
  float v50 = v31;
  uint64_t v51 = 0x3F80000000000000;
  [v32 setContentsTransform:v43];

  id v33 = [*(id *)&v30[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialB] diffuse];
  *(_DWORD *)int8x16_t v43 = 1065353216;
  uint64_t v44 = 0;
  *(void *)&v43[4] = 0;
  int v45 = 1056964608;
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  float32x4_t v46 = 0;
  int v49 = 0;
  float v50 = v31;
  uint64_t v51 = 0x3F80000000000000;
  [v33 setContentsTransform:v43];

  float32x4_t v46 = &type metadata for CGFloat;
  *(void *)int8x16_t v43 = 0x3FF0000000000000;
  sub_1001FEF00((uint64_t)v43, 0x6D754E646E457369, 0xEB00000000726562, (SEL *)&selRef_setValue_forKeyPath_);
  sub_10001C9D8((uint64_t)v43);
  if (qword_1004C2D20 != -1) {
    swift_once();
  }
  float32x4_t v46 = &type metadata for Float;
  *(_DWORD *)int8x16_t v43 = dword_1004F853C;
  sub_1001FEF00((uint64_t)v43, 0xD000000000000012, 0x80000001004201C0, (SEL *)&selRef_setValue_forKeyPath_);

  sub_10001C9D8((uint64_t)v43);
  return v30;
}

uint64_t sub_1001FE980()
{
  uint64_t v1 = v0;
  if (![self jasperAvailable]
    || (float32x4_t v2 = self,
        id v3 = [v2 standardUserDefaults],
        unsigned int v4 = [v3 isLineOcclusionEnabled],
        v3,
        !v4)
    || (uint64_t v5 = *(void *)MeasureCore.shared.unsafeMutableAddressor(),
        swift_beginAccess(),
        (uint64_t v6 = *(void *)(v5 + 112)) == 0))
  {
    v47[3] = &type metadata for CGFloat;
    v47[0] = 0;
    sub_1001FEF00((uint64_t)v47, 0xD000000000000010, 0x8000000100420300, (SEL *)&selRef_setValue_forKeyPath_);
    return sub_10001C9D8((uint64_t)v47);
  }
  uint64_t v7 = qword_1004C2FC0;
  swift_retain();
  if (v7 != -1) {
    swift_once();
  }
  UIColor.rgba.getter();
  long long v46 = 0u;
  int8x16_t v8 = (uint64_t *)(v6 + 208);
  long long v44 = 0u;
  long long v45 = 0u;
  uint64_t result = swift_beginAccess();
  if (!*(void *)(v6 + 208))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  swift_retain();
  ADProcessor.transformer.getter();
  swift_release();
  Transformer.clipToCameraNormalized.getter();
  swift_release();
  simd_float3x3.copy(from:)();
  id v10 = [v2 standardUserDefaults];
  unsigned int v11 = [v10 isLineOcclusionEnabled];

  double v12 = 0.0;
  if (v11) {
    double v12 = 1.0;
  }
  int8x16_t v43 = &type metadata for CGFloat;
  unint64_t v40 = *(void *)&v12;
  sub_1001FEF00((uint64_t)&v40, 0xD000000000000010, 0x8000000100420300, (SEL *)&selRef_setValue_forKeyPath_);
  sub_10001C9D8((uint64_t)&v40);
  SCNVector4.init(_:_:_:_:)();
  unsigned int v14 = v13;
  unsigned int v16 = v15;
  int v18 = v17;
  int v20 = v19;
  type metadata accessor for SCNVector4(0);
  int8x16_t v43 = v21;
  unint64_t v40 = __PAIR64__(v16, v14);
  int v41 = v18;
  int v42 = v20;
  sub_1001FEF00((uint64_t)&v40, 0x646564756C63636FLL, 0xED0000726F6C6F43, (SEL *)&selRef_setValue_forKeyPath_);
  sub_10001C9D8((uint64_t)&v40);
  int8x16_t v43 = &type metadata for CGFloat;
  unint64_t v40 = 0x3FB99999A0000000;
  sub_1001FEF00((uint64_t)&v40, 0x636E6172656C6F74, 0xE900000000000065, (SEL *)&selRef_setValue_forKeyPath_);
  sub_10001C9D8((uint64_t)&v40);
  SCNVector3.init(_:)();
  unsigned int v23 = v22;
  unsigned int v25 = v24;
  int v27 = v26;
  type metadata accessor for SCNVector3(0);
  id v29 = v28;
  int8x16_t v43 = v28;
  unint64_t v40 = __PAIR64__(v25, v23);
  int v41 = v27;
  sub_1001FEF00((uint64_t)&v40, 0xD000000000000012, 0x8000000100420320, (SEL *)&selRef_setValue_forKey_);
  sub_10001C9D8((uint64_t)&v40);
  SCNVector3.init(_:)();
  int8x16_t v43 = v29;
  unint64_t v40 = __PAIR64__(v31, v30);
  int v41 = v32;
  sub_1001FEF00((uint64_t)&v40, 0xD000000000000012, 0x8000000100420340, (SEL *)&selRef_setValue_forKey_);
  sub_10001C9D8((uint64_t)&v40);
  SCNVector3.init(_:)();
  int8x16_t v43 = v29;
  unint64_t v40 = __PAIR64__(v34, v33);
  int v41 = v35;
  sub_1001FEF00((uint64_t)&v40, 0xD000000000000012, 0x8000000100420360, (SEL *)&selRef_setValue_forKey_);
  uint64_t result = sub_10001C9D8((uint64_t)&v40);
  uint64_t v36 = *v8;
  if (!*v8) {
    goto LABEL_16;
  }
  swift_beginAccess();
  if (*(unsigned char *)(v36 + 242) == 1)
  {
    swift_beginAccess();
    uint64_t v37 = *(void *)(v36 + 256);
    swift_unknownObjectRetain();
  }
  else
  {
    swift_retain();
    uint64_t v37 = ADProcessor.outputDepthTexture.getter();
    swift_release();
  }
  unint64_t v40 = v37;
  swift_unknownObjectRetain_n();
  sub_100012894((uint64_t *)&unk_1004C7460);
  uint64_t v38 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  id v39 = [self materialPropertyWithContents:v38];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  int8x16_t v43 = (void *)sub_10001C99C(0, (unint64_t *)&unk_1004D2480);
  unint64_t v40 = (unint64_t)v39;
  sub_1001FEF00((uint64_t)&v40, 0x7275747865546461, 0xE900000000000065, (SEL *)&selRef_setValue_forKey_);
  swift_release();
  swift_unknownObjectRelease();
  uint64_t result = sub_10001C9D8((uint64_t)&v40);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_isOcclusionInitialized) = 1;
  return result;
}

void sub_1001FEF00(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v7 = *(void **)(v4 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialA);
  sub_1000352CC(a1, (uint64_t)v26);
  uint64_t v8 = v27;
  if (v27)
  {
    __n128 v9 = sub_1000131D4(v26, v27);
    v25[1] = v25;
    uint64_t v10 = *(void *)(v8 - 8);
    __chkstk_darwin(v9);
    double v12 = a4;
    unsigned int v13 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v10 + 16))(v13);
    uint64_t v14 = _bridgeAnythingToObjectiveC<A>(_:)();
    unsigned int v15 = v13;
    a4 = v12;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v8);
    sub_100013218((uint64_t)v26);
  }
  else
  {
    uint64_t v14 = 0;
  }
  NSString v16 = String._bridgeToObjectiveC()();
  [v7 *a4:v14, v16];
  swift_unknownObjectRelease();

  int v17 = *(void **)(v4 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialB);
  sub_1000352CC(a1, (uint64_t)v26);
  uint64_t v18 = v27;
  if (v27)
  {
    int v19 = sub_1000131D4(v26, v27);
    uint64_t v20 = *(void *)(v18 - 8);
    __chkstk_darwin(v19);
    unsigned int v22 = (char *)v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v20 + 16))(v22);
    uint64_t v23 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v18);
    sub_100013218((uint64_t)v26);
  }
  else
  {
    uint64_t v23 = 0;
  }
  NSString v24 = String._bridgeToObjectiveC()();
  [v17 *a4:v23, v24];
  swift_unknownObjectRelease();
}

void sub_1001FF1E0()
{
  void (*v1)(uint64_t *__return_ptr, uint64_t);
  uint64_t v2;
  float v3;
  float v4;
  uint64_t v5;

  uint64_t v1 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v0
                                                                           + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber__orientationState)
                                                             + 144);
  float32x4_t v2 = swift_retain();
  v1(&v5, v2);
  swift_release();
  switch(v5)
  {
    case 2:
      SIMD3<>.forward.unsafeMutableAddressor();
      break;
    case 3:
      id v3 = *(float *)Float.piDiv2.unsafeMutableAddressor();
      SIMD3<>.forward.unsafeMutableAddressor();
      uint64_t v4 = 0.5;
      goto LABEL_6;
    case 4:
      id v3 = *(float *)Float.piDiv2.unsafeMutableAddressor();
      SIMD3<>.forward.unsafeMutableAddressor();
      uint64_t v4 = -0.5;
LABEL_6:
      __sincosf_stret(v3 * v4);
      break;
    default:
      vmulq_f32(*(float32x4_t *)SIMD3<>.forward.unsafeMutableAddressor(), (float32x4_t)0);
      break;
  }
}

void sub_1001FF310()
{
  sub_1001FE070();
  sub_1001FF1E0();
  float32x4_t v22 = v1;
  type metadata accessor for MeasureCamera();
  simd_float4x4.position.getter();
  static ComputedCameraProperties.shared.getter();
  static MeasureCamera.viewSpacePoint(fromWorldSpace:view:)();
  int32x4_t v2 = (int32x4_t)vmulq_f32(v22, (float32x4_t)xmmword_1003F9A60);
  int32x4_t v3 = (int32x4_t)vnegq_f32((float32x4_t)v2);
  int8x16_t v4 = (int8x16_t)vtrn2q_s32(v2, vtrn1q_s32(v2, v3));
  float32x4_t v20 = (float32x4_t)vextq_s8((int8x16_t)v2, (int8x16_t)v3, 8uLL);
  float32x4_t v21 = (float32x4_t)vextq_s8(v4, v4, 8uLL);
  float32x4_t v6 = (float32x4_t)vrev64q_s32(v2);
  v6.i32[0] = v3.i32[1];
  v6.i32[3] = v3.i32[2];
  float32x4_t v18 = v6;
  int32x4_t v7 = (int32x4_t)vmlaq_laneq_f32(vmlaq_n_f32(vmulq_lane_f32(v20, *(float32x2_t *)v5.f32, 1), v21, v5.f32[0]), v6, v5, 2);
  int32x4_t v8 = (int32x4_t)vnegq_f32((float32x4_t)v7);
  int8x16_t v9 = (int8x16_t)vtrn2q_s32(v7, vtrn1q_s32(v7, v8));
  float32x4_t v10 = (float32x4_t)vrev64q_s32(v7);
  v10.i32[0] = v8.i32[1];
  v10.i32[3] = v8.i32[2];
  float32x4_t v19 = vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32((float32x4_t)v7, v22, 3), v10, v22, 2), vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v7, (int8x16_t)v8, 8uLL), *(float32x2_t *)v22.f32, 1), (float32x4_t)vextq_s8(v9, v9, 8uLL), v22.f32[0]));
  simd_float4x4.position.getter();
  static ComputedCameraProperties.shared.getter();
  static MeasureCamera.viewSpacePoint(fromWorldSpace:view:)();
  int32x4_t v12 = (int32x4_t)vmlaq_laneq_f32(vmlaq_n_f32(vmulq_lane_f32(v20, *(float32x2_t *)v11.f32, 1), v21, v11.f32[0]), v18, v11, 2);
  int32x4_t v13 = (int32x4_t)vnegq_f32((float32x4_t)v12);
  int8x16_t v14 = (int8x16_t)vtrn2q_s32(v12, vtrn1q_s32(v12, v13));
  float32x4_t v15 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v12, (int8x16_t)v13, 8uLL), *(float32x2_t *)v22.f32, 1), (float32x4_t)vextq_s8(v14, v14, 8uLL), v22.f32[0]);
  float32x4_t v16 = (float32x4_t)vrev64q_s32(v12);
  v16.i32[0] = v13.i32[1];
  v16.i32[3] = v13.i32[2];
  if (vsubq_f32(vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32((float32x4_t)v12, v22, 3), v16, v22, 2), v15), v19).f32[0] <= 0.0) {
    unsigned __int8 v17 = 2;
  }
  else {
    unsigned __int8 v17 = 3;
  }
  sub_1001FDDC4(v17);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_lastNumbersOrientation) = v17;
}

uint64_t sub_1001FF4FC()
{
  simd_float4x4.position.getter();
  float32x4_t v9 = v0;
  uint64_t result = simd_float4x4.position.getter();
  float32x4_t v3 = vsubq_f32(v9, v2);
  float32x4_t v4 = vmulq_f32(v3, v3);
  float v5 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v4, 2), vaddq_f32(v4, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v4.f32, 1))).f32[0]);
  if (qword_1004C2D18 != -1) {
    uint64_t result = swift_once();
  }
  float v6 = v5 - *(float *)&dword_1004F8538;
  if (qword_1004C2D10 != -1) {
    uint64_t result = swift_once();
  }
  float v7 = floorf(v6 / *(float *)&dword_1004F8534);
  if ((~LODWORD(v7) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v7 <= -9.2234e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v7 < 9.2234e18)
  {
    if (qword_1004C2D48 == -1) {
      goto LABEL_9;
    }
    goto LABEL_18;
  }
LABEL_17:
  __break(1u);
LABEL_18:
  uint64_t result = swift_once();
LABEL_9:
  if (qword_1004F8558)
  {
    if ((uint64_t)v7 != 0x8000000000000000 || qword_1004F8558 != -1) {
      return (uint64_t)v7 % qword_1004F8558 == 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for LineDivisionsEndNumber()
{
  return self;
}

uint64_t sub_1001FF784(uint64_t a1, float a2)
{
  uint64_t v5 = sub_100012894(&qword_1004CC7A8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  float32x4_t v9 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  float32x4_t v11 = (char *)&v88 - v10;
  id v12 = [self standardUserDefaults];
  Defaults.measurementBias.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 floatForKey:v13];

  if (!a1)
  {
    int8x16_t v14 = self;
    id v15 = [v14 meters];
    sub_10001C99C(0, &qword_1004CC7B0);
    Measurement.init(value:unit:)();
    id v16 = [v14 inches];
    Measurement<>.converted(to:)();

    Measurement.value.getter();
    double v18 = v17;
    float32x4_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
    v19(v9, v5);
    float v20 = v18;
    v19(v11, v5);
    if (v20 <= 12.0 || v20 >= 36.0)
    {
      float v22 = a2;
      uint64_t v23 = 0;
LABEL_9:
      sub_10012C948(v23, 0, 0, &v91._countAndFlagsBits, v22);
      uint64_t countAndFlagsBits = v91._countAndFlagsBits;
      sub_100026A8C((uint64_t)&v92, (uint64_t)v93);
      sub_1000DB4E0((uint64_t)v93);
      return countAndFlagsBits;
    }
    float v26 = roundf(v20 + v20) * 0.5;
    float v27 = floorf(v26);
    if ((~LODWORD(v27) & 0x7F800000) != 0)
    {
      if (v27 > -9.2234e18)
      {
        if (v27 < 9.2234e18)
        {
          float v28 = floorf(v20 / 12.0);
          if ((~LODWORD(v28) & 0x7F800000) != 0)
          {
            if (v28 > -9.2234e18)
            {
              if (v28 < 9.2234e18)
              {
                uint64_t v2 = (uint64_t)v28;
                uint64_t v29 = 12 * (uint64_t)v28;
                if ((unsigned __int128)((uint64_t)v28 * (__int128)12) >> 64 == v29 >> 63)
                {
                  float v20 = v20 - (float)v29;
                  float v30 = roundf(v20);
                  if (v30 == 12.0) {
                    a2 = 0.0;
                  }
                  else {
                    a2 = v30;
                  }
                  if (qword_1004C2BA0 == -1)
                  {
LABEL_22:
                    unsigned int v31 = (void *)qword_1004F83F8;
                    id v32 = objc_allocWithZone((Class)NSDecimalNumber);
                    *(float *)&double v33 = a2;
                    id v34 = [v32 initWithFloat:v33];
                    id v35 = [v31 stringFromNumber:v34];

                    if (v35)
                    {
                      float v36 = floorf(v20);
                      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                      uint64_t v39 = v38;

                      unint64_t v40 = (void *)qword_1004F83F8;
                      id v41 = objc_allocWithZone((Class)NSDecimalNumber);
                      *(float *)&double v42 = v36;
                      id v43 = [v41 initWithFloat:v42];
                      id v44 = [v40 stringFromNumber:v43];

                      if (v44)
                      {
                        float v45 = v26 - (float)(uint64_t)v27;
                        uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                        unint64_t v48 = v47;

                        float v49 = roundf(v26);
                        if (v45 <= 0.00000011921 || v49 >= 36.0)
                        {
                          swift_bridgeObjectRelease();
                          id v54 = [self mainBundle];
                          v95._object = (void *)0xE000000000000000;
                          v55._uint64_t countAndFlagsBits = 0x9D80E24025;
                          v55._object = (void *)0xA500000000000000;
                          v56._uint64_t countAndFlagsBits = 0;
                          v56._object = (void *)0xE000000000000000;
                          v95._uint64_t countAndFlagsBits = 0;
                          NSLocalizedString(_:tableName:bundle:value:comment:)(v55, (Swift::String_optional)0, (NSBundle)v54, v56, v95);

                          sub_100012894((uint64_t *)&unk_1004D2460);
                          uint64_t v57 = swift_allocObject();
                          *(_OWORD *)(v57 + 16) = xmmword_1003F87F0;
                          *(void *)(v57 + 56) = &type metadata for String;
                          *(void *)(v57 + 64) = sub_10001D424();
                          *(void *)(v57 + 32) = v37;
                          *(void *)(v57 + 40) = v39;
                        }
                        else
                        {
                          swift_bridgeObjectRelease();
                          if (v36 <= 0.0)
                          {
                            swift_bridgeObjectRelease();
                            id v58 = [self mainBundle];
                            unint64_t v48 = 0xE000000000000000;
                            v96._object = (void *)0xE000000000000000;
                            v59._uint64_t countAndFlagsBits = 0x9D80E2BDC24025;
                            v59._object = (void *)0xA700000000000000;
                            v60._uint64_t countAndFlagsBits = 0;
                            v60._object = (void *)0xE000000000000000;
                            v96._uint64_t countAndFlagsBits = 0;
                            NSLocalizedString(_:tableName:bundle:value:comment:)(v59, (Swift::String_optional)0, (NSBundle)v58, v60, v96);

                            sub_100012894((uint64_t *)&unk_1004D2460);
                            uint64_t v53 = swift_allocObject();
                            *(_OWORD *)(v53 + 16) = xmmword_1003F87F0;
                            *(void *)(v53 + 56) = &type metadata for String;
                            *(void *)(v53 + 64) = sub_10001D424();
                            *(void *)(v53 + 32) = 0;
                          }
                          else
                          {
                            id v50 = [self mainBundle];
                            v94._object = (void *)0xE000000000000000;
                            v51._uint64_t countAndFlagsBits = 0x9D80E2BDC24025;
                            v51._object = (void *)0xA700000000000000;
                            v52._uint64_t countAndFlagsBits = 0;
                            v52._object = (void *)0xE000000000000000;
                            v94._uint64_t countAndFlagsBits = 0;
                            NSLocalizedString(_:tableName:bundle:value:comment:)(v51, (Swift::String_optional)0, (NSBundle)v50, v52, v94);

                            sub_100012894((uint64_t *)&unk_1004D2460);
                            uint64_t v53 = swift_allocObject();
                            *(_OWORD *)(v53 + 16) = xmmword_1003F87F0;
                            *(void *)(v53 + 56) = &type metadata for String;
                            *(void *)(v53 + 64) = sub_10001D424();
                            *(void *)(v53 + 32) = v46;
                          }
                          *(void *)(v53 + 40) = v48;
                        }
                        uint64_t countAndFlagsBits = String.init(format:_:)();
                        uint64_t v62 = v61;
                        swift_bridgeObjectRelease();
                        uint64_t v63 = (void *)qword_1004F83F8;
                        id v64 = objc_allocWithZone((Class)NSDecimalNumber);
                        uint64_t v90 = v2;
                        id v65 = [v64 initWithInteger:v2];
                        id v66 = [v63 stringFromNumber:v65];

                        if (v66)
                        {
                          uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                          uint64_t v69 = v68;

                          id v89 = self;
                          id v70 = [v89 mainBundle];
                          v97._object = (void *)0xE000000000000000;
                          v71.value._object = (void *)0x8000000100427090;
                          v72._uint64_t countAndFlagsBits = 0xB280E240243125;
                          v72._object = (void *)0xA700000000000000;
                          v71.value._uint64_t countAndFlagsBits = 0xD000000000000014;
                          v73._uint64_t countAndFlagsBits = 0;
                          v73._object = (void *)0xE000000000000000;
                          v97._uint64_t countAndFlagsBits = 0;
                          NSLocalizedString(_:tableName:bundle:value:comment:)(v72, v71, (NSBundle)v70, v73, v97);

                          sub_100012894((uint64_t *)&unk_1004D2460);
                          uint64_t v74 = swift_allocObject();
                          *(_OWORD *)(v74 + 16) = xmmword_1003F87F0;
                          *(void *)(v74 + 56) = &type metadata for String;
                          unint64_t v75 = sub_10001D424();
                          *(void *)(v74 + 64) = v75;
                          *(void *)(v74 + 32) = v67;
                          *(void *)(v74 + 40) = v69;
                          uint64_t v76 = String.init(format:_:)();
                          uint64_t v78 = v77;
                          swift_bridgeObjectRelease();
                          if (a2 <= 0.0)
                          {
                            if (v90 < 1)
                            {
                              swift_bridgeObjectRelease();
                              if (v45 <= 0.00000011921)
                              {
                                swift_bridgeObjectRelease();
                                id v84 = [v89 mainBundle];
                                v99._object = (void *)0xE000000000000000;
                                v85._uint64_t countAndFlagsBits = 0x9D80E2BDC2203CLL;
                                v85._object = (void *)0xA700000000000000;
                                v86._uint64_t countAndFlagsBits = 0;
                                v86._object = (void *)0xE000000000000000;
                                v99._uint64_t countAndFlagsBits = 0;
                                Swift::String v87 = NSLocalizedString(_:tableName:bundle:value:comment:)(v85, (Swift::String_optional)0, (NSBundle)v84, v86, v99);

                                Swift::String v91 = v87;
                                return String.init<A>(_:)();
                              }
                              return countAndFlagsBits;
                            }
                            if (v45 <= 0.00000011921)
                            {
                              swift_bridgeObjectRelease();
                              return v76;
                            }
                          }
                          else if (v90 <= 0)
                          {
                            swift_bridgeObjectRelease();
                            return countAndFlagsBits;
                          }
                          id v79 = [v89 mainBundle];
                          v98._object = (void *)0xE000000000000000;
                          v80.value._object = (void *)0x8000000100427090;
                          v81._uint64_t countAndFlagsBits = 0x2432252040243125;
                          v81._object = (void *)0xE900000000000040;
                          v80.value._uint64_t countAndFlagsBits = 0xD000000000000014;
                          v82._uint64_t countAndFlagsBits = 0;
                          v82._object = (void *)0xE000000000000000;
                          v98._uint64_t countAndFlagsBits = 0;
                          NSLocalizedString(_:tableName:bundle:value:comment:)(v81, v80, (NSBundle)v79, v82, v98);

                          uint64_t v83 = swift_allocObject();
                          *(_OWORD *)(v83 + 16) = xmmword_1003F8B80;
                          *(void *)(v83 + 56) = &type metadata for String;
                          *(void *)(v83 + 64) = v75;
                          *(void *)(v83 + 32) = v76;
                          *(void *)(v83 + 40) = v78;
                          *(void *)(v83 + 96) = &type metadata for String;
                          *(void *)(v83 + 104) = v75;
                          *(void *)(v83 + 72) = countAndFlagsBits;
                          *(void *)(v83 + 80) = v62;
                          uint64_t countAndFlagsBits = String.init(format:_:)();
                          swift_bridgeObjectRelease();
                          return countAndFlagsBits;
                        }
                        goto LABEL_51;
                      }
                    }
                    else
                    {
                      __break(1u);
                    }
                    __break(1u);
LABEL_51:
                    __break(1u);
                    goto LABEL_52;
                  }
LABEL_48:
                  swift_once();
                  goto LABEL_22;
                }
LABEL_47:
                __break(1u);
                goto LABEL_48;
              }
LABEL_46:
              __break(1u);
              goto LABEL_47;
            }
LABEL_45:
            __break(1u);
            goto LABEL_46;
          }
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_43;
  }
  if (a1 == 1)
  {
    float v22 = a2;
    uint64_t v23 = 1;
    goto LABEL_9;
  }
LABEL_52:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10020020C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100200244()
{
}

uint64_t sub_10020024C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10020025C()
{
  return swift_release();
}

uint64_t sub_100200264()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100200274()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10020029C()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1002002D4()
{
  return sub_100200334(&OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialA);
}

uint64_t sub_1002002E0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100200318()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_100200328()
{
  return sub_100200334(&OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialB);
}

id sub_100200334(void *a1)
{
  return [*(id *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_plane) setFirstMaterial:*(void *)(*(void *)(v1 + 16) + *a1)];
}

void sub_100200364()
{
  uint64_t v1 = v0;
  v0[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_isMaterialAActive] = 1;
  id v2 = sub_1001B4A50(9);
  [v2 copy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
  if (swift_dynamicCast()) {
    id v3 = v17;
  }
  else {
    id v3 = [objc_allocWithZone((Class)SCNMaterial) init];
  }
  *(void *)&v1[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialA] = v3;
  id v4 = sub_1001B4A50(9);
  [v4 copy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  if (swift_dynamicCast()) {
    id v5 = v17;
  }
  else {
    id v5 = [objc_allocWithZone((Class)SCNMaterial) init];
  }
  *(void *)&v1[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_materialB] = v5;
  uint64_t v6 = &v1[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_currentString];
  *uint64_t v6 = 0;
  v6[1] = 0xE000000000000000;
  uint64_t v7 = OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber__unitState;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v9 = sub_100012894(&qword_1004C96C8);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1004F8630;
  float32x4_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 272);
  swift_retain();
  *(void *)&v1[v7] = v11(KeyPath, v10);
  uint64_t v12 = OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber__orientationState;
  uint64_t v13 = swift_getKeyPath();
  uint64_t v14 = sub_100012894((uint64_t *)&unk_1004C7450);
  uint64_t v15 = qword_1004F8630;
  id v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 272);
  swift_retain();
  *(void *)&v1[v12] = v16(v13, v15);
  v1[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_lastNumbersOrientation] = 2;
  v1[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_shouldHide] = 1;
  v1[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_isOcclusionInitialized] = 0;
  v1[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_shouldRenderNumbers] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_100200654()
{
  sub_100012894(&qword_1004D2490);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1003F87F0;
  sub_100012894(&qword_1004D2498);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003F8B80;
  *(void *)(inited + 32) = UIFontFeatureTypeIdentifierKey;
  *(void *)(inited + 40) = 6;
  *(void *)(inited + 48) = UIFontFeatureSelectorIdentifierKey;
  *(void *)(inited + 56) = 0;
  id v3 = UIFontFeatureTypeIdentifierKey;
  id v4 = UIFontFeatureSelectorIdentifierKey;
  *(void *)(v1 + 32) = sub_1000E0D74(inited);
  sub_100012894(&qword_1004D24A0);
  uint64_t v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_1003F87F0;
  *(void *)(v5 + 32) = UIFontDescriptorFeatureSettingsAttribute;
  *(void *)(v5 + 40) = v1;
  uint64_t v6 = UIFontDescriptorFeatureSettingsAttribute;
  unint64_t v7 = sub_1000E0E74(v5);
  sub_100026AF4(v7);
  type metadata accessor for AttributeName(0);
  sub_1001CD934();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  sub_100026AF4(v7);
  swift_bridgeObjectRelease();
  Class v9 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v10 = [v0 fontDescriptorByAddingAttributes:v9];

  return v10;
}

ValueMetadata *type metadata accessor for Measurements()
{
  return &type metadata for Measurements;
}

uint64_t sub_10020082C()
{
  return swift_bridgeObjectRetain();
}

BOOL sub_100200834(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100201270(a1, a2);
  uint64_t v5 = sub_1001DE824(v4, (uint64_t)&off_1004856B8);
  swift_bridgeObjectRelease();
  if ((unint64_t)v5 >> 62) {
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v6 = *(void *)(((unint64_t)v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v6) {
    return 0;
  }
  unint64_t v8 = sub_100201270(a1, a2);
  Class v9 = sub_1001DE824(v8, (uint64_t)&off_1004856E0);
  swift_bridgeObjectRelease();
  if ((unint64_t)v9 >> 62) {
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v10 = *(void *)(((unint64_t)v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v10 != 0;
}

void *sub_100200938(char a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = a3;
  uint64_t v5 = a2;
  unint64_t v7 = sub_100201270(a2, a3);
  unint64_t v8 = v7;
  unint64_t v9 = v7 >> 62;
  if (a1)
  {
    if (v9) {
      goto LABEL_50;
    }
    uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (1)
    {
      id v3 = &swift_isaMask;
      if (!v10) {
        goto LABEL_26;
      }
      if ((v8 & 0xC000000000000001) != 0) {
        float32x4_t v11 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        float32x4_t v11 = *(id *)(v8 + 32);
      }
      uint64_t v12 = v11;
      if ((*(uint64_t (**)(void))((swift_isaMask & *v11) + 0xD0))() == 3)
      {
LABEL_8:
        swift_bridgeObjectRelease_n();
        return v12;
      }

      if (v10 == 1)
      {
LABEL_26:
        swift_bridgeObjectRelease_n();
        unint64_t v20 = sub_100201270(v5, v4);
        unint64_t v8 = v20;
        if (v20 >> 62)
        {
LABEL_58:
          unint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
          if (!v21) {
            goto LABEL_59;
          }
        }
        else
        {
          unint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v21) {
            goto LABEL_59;
          }
        }
        unint64_t v4 = v8 & 0xC000000000000001;
        uint64_t v5 = v8 & 0xFFFFFFFFFFFFFF8;
        while (1)
        {
          BOOL v14 = __OFSUB__(v21--, 1);
          if (v14) {
            break;
          }
          if (v4)
          {
            float v22 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if ((v21 & 0x8000000000000000) != 0) {
              goto LABEL_48;
            }
            if (v21 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_49;
            }
            float v22 = *(id *)(v8 + 32 + 8 * v21);
          }
          uint64_t v12 = v22;
          type metadata accessor for WorldLine();
          if (swift_dynamicCastClass())
          {
            uint64_t v23 = (*(uint64_t (**)(void))((*v3 & *v12) + 0xD0))();
            if (!v23 || v23 == 2 || v23 == 9 || v23 == 7) {
              goto LABEL_17;
            }
          }
          else
          {
            type metadata accessor for WorldRectangle();
            if (swift_dynamicCastClass())
            {
              uint64_t v24 = (*(uint64_t (**)(void))((*v3 & *v12) + 0xD0))();
              if (v24 == 9 || v24 == 5) {
                goto LABEL_17;
              }
            }
          }

          if (!v21) {
            goto LABEL_59;
          }
        }
        __break(1u);
      }
      else
      {
        uint64_t v17 = 5;
        while (1)
        {
          double v18 = (v8 & 0xC000000000000001) != 0
              ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
              : *(id *)(v8 + 8 * v17);
          uint64_t v12 = v18;
          uint64_t v19 = v17 - 3;
          if (__OFADD__(v17 - 4, 1)) {
            break;
          }
          if ((*(uint64_t (**)(void))((swift_isaMask & *v18) + 0xD0))() == 3) {
            goto LABEL_8;
          }

          ++v17;
          if (v19 == v10) {
            goto LABEL_26;
          }
        }
      }
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    }
  }
  if (!v9)
  {
    uint64_t v13 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13) {
      goto LABEL_11;
    }
LABEL_59:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  if (!v13) {
    goto LABEL_59;
  }
LABEL_11:
  BOOL v14 = __OFSUB__(v13, 1);
  unint64_t v15 = v13 - 1;
  if (v14)
  {
    __break(1u);
  }
  else if ((v8 & 0xC000000000000001) == 0)
  {
    if ((v15 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v15 < *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v16 = *(id *)(v8 + 8 * v15 + 32);
      goto LABEL_16;
    }
    __break(1u);
    goto LABEL_58;
  }
  id v16 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_16:
  uint64_t v12 = v16;
LABEL_17:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100200CD0()
{
  swift_bridgeObjectRetain_n();
  sub_100012894(&qword_1004C4358);
  sub_100012894(&qword_1004C4360);
  swift_dynamicCast();
  unint64_t v0 = v19;
  swift_bridgeObjectRelease();
  if (!(v19 >> 62))
  {
    uint64_t v1 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v1) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_33;
    }
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v1) {
    goto LABEL_15;
  }
LABEL_3:
  if (v1 < 1)
  {
    __break(1u);
    goto LABEL_35;
  }
  for (uint64_t i = 0; i != v1; ++i)
  {
    if ((v19 & 0xC000000000000001) != 0) {
      id v3 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v3 = *(id *)(v19 + 8 * i + 32);
    }
    unint64_t v4 = v3;
    if ((*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xD0))() == 1)
    {
    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
  }
  swift_bridgeObjectRelease();
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
    goto LABEL_33;
  }
LABEL_16:
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
  {
    uint64_t v5 = _swiftEmptyArrayStorage[2];
    goto LABEL_18;
  }
LABEL_33:
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
LABEL_18:
  swift_release();
  if (!v5)
  {
    swift_bridgeObjectRetain_n();
    sub_100012894(&qword_1004C54D8);
    swift_dynamicCast();
    unint64_t v0 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t result = swift_bridgeObjectRelease();
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
      uint64_t v8 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v8) {
        goto LABEL_22;
      }
      goto LABEL_36;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_22:
      if (v8 < 1) {
        goto LABEL_64;
      }
      for (uint64_t j = 0; j != v8; ++j)
      {
        if ((v0 & 0xC000000000000001) != 0) {
          uint64_t v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v10 = *(id *)(v0 + 8 * j + 32);
        }
        float32x4_t v11 = v10;
        if ((*(uint64_t (**)(void))((swift_isaMask & *v10) + 0xD0))() == 1)
        {
        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
      }
      swift_bridgeObjectRelease();
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
        goto LABEL_62;
      }
LABEL_37:
      if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
      {
        uint64_t v12 = _swiftEmptyArrayStorage[2];
LABEL_39:
        swift_release();
        BOOL v6 = v12 == 0;
        goto LABEL_40;
      }
LABEL_62:
      swift_bridgeObjectRetain();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
      goto LABEL_39;
    }
LABEL_36:
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_62;
    }
    goto LABEL_37;
  }
  BOOL v6 = 0;
LABEL_40:
  unsigned int v13 = [self jasperAvailable] ^ 1;
  uint64_t result = v13 & v6;
  if ((v13 & 1) == 0 && v6)
  {
    swift_bridgeObjectRetain_n();
    sub_100012894(&qword_1004C6900);
    swift_dynamicCast();
    uint64_t result = swift_bridgeObjectRelease();
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_44;
      }
    }
    else
    {
      uint64_t v14 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v14)
      {
LABEL_44:
        if (v14 >= 1)
        {
          for (uint64_t k = 0; k != v14; ++k)
          {
            if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
              id v16 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v16 = (id)_swiftEmptyArrayStorage[k + 4];
            }
            uint64_t v17 = v16;
            if ((*(uint64_t (**)(void))((swift_isaMask & *v16) + 0xD0))())
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
            }
            else
            {
            }
          }
          swift_bridgeObjectRelease();
          if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
            goto LABEL_61;
          }
LABEL_57:
          if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
          {
            uint64_t v18 = _swiftEmptyArrayStorage[2];
LABEL_59:
            swift_release();
            return v18 == 0;
          }
LABEL_61:
          swift_bridgeObjectRetain();
          uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
          swift_release();
          goto LABEL_59;
        }
        __break(1u);
LABEL_64:
        __break(1u);
        return result;
      }
    }
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_61;
    }
    goto LABEL_57;
  }
  return result;
}

unint64_t sub_100201270(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain_n();
  sub_100012894(&qword_1004C4358);
  sub_100012894(&qword_1004C4360);
  swift_dynamicCast();
  swift_bridgeObjectRelease();
  if (v8 >> 62)
  {
    type metadata accessor for MeasureObject();
    swift_bridgeObjectRetain();
    unint64_t v3 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for MeasureObject();
    unint64_t v3 = v8;
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = a2;
  swift_bridgeObjectRetain_n();
  sub_100012894(&qword_1004C54D8);
  swift_dynamicCast();
  swift_bridgeObjectRelease();
  if (v8 >> 62)
  {
    type metadata accessor for MeasureObject();
    swift_bridgeObjectRetain();
    unint64_t v4 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for MeasureObject();
    unint64_t v4 = v8;
  }
  swift_bridgeObjectRelease();
  sub_1001225D4(v4);
  if (objc_msgSend(self, "jasperAvailable", v7))
  {
    swift_bridgeObjectRetain_n();
    sub_100012894(&qword_1004C6900);
    swift_dynamicCast();
    swift_bridgeObjectRelease();
    if (v3 >> 62)
    {
      type metadata accessor for MeasureObject();
      swift_bridgeObjectRetain();
      unint64_t v5 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      type metadata accessor for MeasureObject();
      unint64_t v5 = v3;
    }
    swift_bridgeObjectRelease();
    sub_1001225D4(v5);
  }
  return v3;
}

uint64_t sub_1002014FC()
{
  return swift_bridgeObjectRetain();
}

id sub_100201504()
{
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  id result = (id)*((void *)&xmmword_1004F8000 + 1);
  if (*((void *)&xmmword_1004F8000 + 1))
  {
    id v1 = (id)*((void *)&xmmword_1004F8000 + 1);
    qword_1004F8AA0 = Contexts.PrivateQueue.init(_:)();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100201584(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  if (a1 >> 62)
  {
LABEL_59:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
LABEL_60:
    return swift_bridgeObjectRelease();
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_60;
  }
LABEL_3:
  uint64_t v5 = 0;
  uint64_t v37 = v2;
  unint64_t v38 = v3 & 0xC000000000000001;
  uint64_t v35 = v3 + 32;
  uint64_t v36 = v4;
  while (1)
  {
    if (v38) {
      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v12 = *(id *)(v35 + 8 * v5);
    }
    unsigned int v13 = v12;
    if (__OFADD__(v5++, 1))
    {
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    uint64_t v3 = *(void *)(v2 + 8);
    type metadata accessor for WorldLine();
    if (!swift_dynamicCastClass())
    {
      type metadata accessor for WorldRectangle();
      if (!swift_dynamicCastClass())
      {
        type metadata accessor for WorldPerson();
        if (!swift_dynamicCastClass()) {
          goto LABEL_64;
        }
      }
    }
    swift_getKeyPath();
    unint64_t v40 = (void (*)(unint64_t *, void))swift_modifyAtWritableKeyPath();
    id v16 = v15;
    unint64_t v17 = *v15;
    if ((unint64_t)*v15 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v18) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v18) {
        goto LABEL_7;
      }
    }
    unint64_t v39 = v17 & 0xC000000000000001;
    if ((v17 & 0xC000000000000001) != 0)
    {
      id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_53;
      }
      id v19 = *(id *)(v17 + 32);
    }
    unint64_t v20 = v19;
    uint64_t v3 = type metadata accessor for MeasureObject();
    char v21 = static NSObject.== infix(_:_:)();

    unint64_t v22 = 0;
    if ((v21 & 1) == 0) {
      break;
    }
LABEL_21:
    uint64_t v6 = *v16;
    int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *id v16 = v6;
    if (!isUniquelyReferenced_nonNull_bridgeObject || v6 < 0 || (v6 & 0x4000000000000000) != 0)
    {
      uint64_t v6 = sub_100030BAC(v6);
      *id v16 = v6;
    }
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    unint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v22 >= v8) {
      goto LABEL_54;
    }
    unint64_t v9 = v8 - 1;
    unint64_t v10 = v7 + 8 * v22;
    float32x4_t v11 = *(void **)(v10 + 32);
    memmove((void *)(v10 + 32), (const void *)(v10 + 40), 8 * (v8 - 1 - v22));
    *(void *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    uint64_t v3 = (uint64_t)v16;
    specialized Array._endMutation()();

LABEL_7:
    v40(&v41, 0);

    swift_release();
    uint64_t v2 = v37;
    if (v5 == v36) {
      return swift_bridgeObjectRelease();
    }
  }
  if (v18 == 1) {
    goto LABEL_7;
  }
  if (v39)
  {
    id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
      goto LABEL_58;
    }
    id v24 = *(id *)(v17 + 40);
  }
  unsigned int v25 = v24;
  char v26 = static NSObject.== infix(_:_:)();

  if (v26)
  {
    unint64_t v22 = 1;
    goto LABEL_21;
  }
  if (v18 == 2) {
    goto LABEL_7;
  }
  if (v39)
  {
    id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_37:
    float v28 = v27;
    char v29 = static NSObject.== infix(_:_:)();

    if ((v29 & 1) == 0)
    {
      uint64_t v30 = 2;
      while (1)
      {
        unint64_t v22 = v30 + 1;
        if (__OFADD__(v30, 1)) {
          goto LABEL_55;
        }
        if (v22 == v18) {
          goto LABEL_7;
        }
        if (v39)
        {
          id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v22 & 0x8000000000000000) != 0) {
            goto LABEL_56;
          }
          if (v22 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_57;
          }
          id v31 = *(id *)(v17 + 32 + 8 * v22);
        }
        id v32 = v31;
        uint64_t v2 = static NSObject.== infix(_:_:)();

        ++v30;
        if (v2) {
          goto LABEL_21;
        }
      }
    }
    unint64_t v22 = 2;
    goto LABEL_21;
  }
  if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
  {
    id v27 = *(id *)(v17 + 48);
    goto LABEL_37;
  }
  __break(1u);
LABEL_64:
  unint64_t v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  unint64_t v41 = 0xD00000000000001CLL;
  unint64_t v42 = 0x8000000100422390;
  swift_getObjectType();
  v34._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_100201A6C@<X0>(void *a1@<X8>)
{
  if (qword_1004C3230 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1004F8AA0;
  *a1 = qword_1004F8AA0;

  return v2;
}

uint64_t sub_100201AD8(uint64_t *a1, uint64_t *a2)
{
  return sub_100201BA8(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

unint64_t sub_100201AF4(uint64_t a1)
{
  unint64_t result = sub_100201B1C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100201B1C()
{
  unint64_t result = qword_1004D24D0[0];
  if (!qword_1004D24D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1004D24D0);
  }
  return result;
}

uint64_t sub_100201B70()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_100201B9C()
{
  return sub_100201B70();
}

uint64_t sub_100201BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v12 = sub_1000858D8(a1, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v13 = sub_1000858D8(a2, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v14 = sub_1000858D8(a3, a6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14 & 1;
}

uint64_t sub_100201C94()
{
  sub_100012894(&qword_1004C4360);
  sub_100012894(&qword_1004C4358);
  swift_dynamicCast();
  sub_100012894(&qword_1004C54D8);
  swift_dynamicCast();
  sub_100012894(&qword_1004C6900);
  swift_dynamicCast();
  return v1;
}

uint64_t sub_100201D68()
{
  type metadata accessor for WorldLine();
  if (swift_dynamicCastClass()
    || (type metadata accessor for WorldRectangle(), swift_dynamicCastClass())
    || (type metadata accessor for WorldPerson(), swift_dynamicCastClass()))
  {
    return swift_getKeyPath();
  }
  else
  {
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease();
    swift_getObjectType();
    v1._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
    String.append(_:)(v1);
    swift_bridgeObjectRelease();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100201EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_100201EB4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100201F44(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1002020A0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1002022B8);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        id v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for Lifted()
{
  return sub_10002F124();
}

void UIInterfaceOrientation.description.getter()
{
}

void sub_100202404()
{
}

id sub_10020240C()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for UIKitContext()) init];
  qword_1004F8AA8 = (uint64_t)result;
  return result;
}

uint64_t sub_10020243C()
{
  uint64_t v10 = 0;
  unint64_t v1 = *(NSObject **)&v0[OBJC_IVAR____TtC7Measure12UIKitContext_contextQueue];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &v10;
  *(void *)(v2 + 24) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_100203680;
  *(void *)(v3 + 24) = v2;
  aBlock[4] = sub_1000949B8;
  void aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000FA194;
  aBlock[3] = &unk_100493F00;
  uint64_t v4 = _Block_copy(aBlock);
  unsigned int v5 = v0;
  swift_retain();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = v10;
    if (v10)
    {
      swift_release();
      return v8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1002025A8(uint64_t a1)
{
  return sub_100202764(a1, (uint64_t)&unk_100493DA8, (uint64_t)sub_100203570, (uint64_t)&unk_100493DC0);
}

uint64_t sub_1002025D0()
{
  uint64_t v10 = 0;
  unint64_t v1 = *(NSObject **)&v0[OBJC_IVAR____TtC7Measure12UIKitContext_contextQueue];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &v10;
  *(void *)(v2 + 24) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_100203664;
  *(void *)(v3 + 24) = v2;
  aBlock[4] = sub_100039980;
  void aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000FA194;
  aBlock[3] = &unk_100493E88;
  uint64_t v4 = _Block_copy(aBlock);
  unsigned int v5 = v0;
  swift_retain();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = v10;
    if (v10)
    {
      swift_release();
      return v8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10020273C(uint64_t a1)
{
  return sub_100202764(a1, (uint64_t)&unk_100493DF8, (uint64_t)sub_1002035D8, (uint64_t)&unk_100493E10);
}

uint64_t sub_100202764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  BOOL v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  int v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchWorkItemFlags.barrier.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v4;
  *(void *)(v14 + 24) = a1;
  aBlock[4] = v18;
  void aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = v19;
  int v15 = _Block_copy(aBlock);
  id v16 = v4;
  static DispatchQoS.unspecified.getter();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

id sub_100202984()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v1 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = &v0[OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits];
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_OWORD *)v7 + 2) = 0u;
  *((_OWORD *)v7 + 3) = 0u;
  *((_OWORD *)v7 + 4) = 0u;
  v7[80] = 1;
  uint64_t v13 = OBJC_IVAR____TtC7Measure12UIKitContext_contextQueue;
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  uint64_t v16 = 0;
  unint64_t v17 = 0xE000000000000000;
  uint64_t v8 = v0;
  _StringGuts.grow(_:)(19);
  if (qword_1004C2A18 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1004F8070;
  unint64_t v10 = *(void *)algn_1004F8078;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = v9;
  unint64_t v17 = v10;
  v11._object = (void *)0x800000010042D2C0;
  v11._uint64_t countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v11);
  static DispatchQoS.userInitiated.getter();
  static OS_dispatch_queue.Attributes.concurrent.getter();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v1);
  *(void *)&v8[v13] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v8[OBJC_IVAR____TtC7Measure12UIKitContext__observationMap] = _swiftEmptyDictionarySingleton;
  *(void *)&v8[OBJC_IVAR____TtC7Measure12UIKitContext__valueMap] = _swiftEmptyDictionarySingleton;

  v15.receiver = v8;
  v15.super_class = ObjectType;
  return [super init];
}

Swift::Int sub_100202CCC()
{
  uint64_t v1 = *(void **)(v0 + 8);
  Hasher.init(_seed:)();
  type metadata accessor for AnyKeyPath();
  dispatch thunk of Hashable.hash(into:)();
  id v2 = v1;
  NSObject.hash(into:)();

  return Hasher._finalize()();
}

void sub_100202D48()
{
  uint64_t v1 = *(void **)(v0 + 8);
  type metadata accessor for AnyKeyPath();
  dispatch thunk of Hashable.hash(into:)();
  id v2 = v1;
  NSObject.hash(into:)();
}

Swift::Int sub_100202DB4()
{
  uint64_t v1 = *(void **)(v0 + 8);
  Hasher.init(_seed:)();
  type metadata accessor for AnyKeyPath();
  dispatch thunk of Hashable.hash(into:)();
  id v2 = v1;
  NSObject.hash(into:)();

  return Hasher._finalize()();
}

uint64_t sub_100202E2C()
{
  if ((static AnyKeyPath.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  sub_10001C99C(0, (unint64_t *)&qword_1004C4568);
  return static NSObject.== infix(_:_:)() & 1;
}

uint64_t sub_100202EAC(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  unint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_100203724;
  void aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_100493F50;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = v1;
  id v14 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_100039BEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v17);
}

id sub_100203140(uint64_t a1, id a2)
{
  [a2 center];
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  [a2 frame];
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  id result = [a2 bounds];
  uint64_t v17 = a1 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits;
  *(void *)uint64_t v17 = v5;
  *(void *)(v17 + 8) = v7;
  *(void *)(v17 + 16) = v9;
  *(void *)(v17 + 24) = v11;
  *(void *)(v17 + 32) = v13;
  *(void *)(v17 + 40) = v15;
  *(void *)(v17 + 48) = v18;
  *(void *)(v17 + 56) = v19;
  *(void *)(v17 + 64) = v20;
  *(void *)(v17 + 72) = v21;
  *(unsigned char *)(v17 + 80) = 0;
  return result;
}

uint64_t KeyPath.description.getter()
{
  uint64_t v0 = dispatch thunk of AnyKeyPath._kvcKeyPathString.getter();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    dispatch thunk of static AnyKeyPath._rootAndValueType.getter();
    sub_100012894((uint64_t *)&unk_1004D29A0);
    uint64_t v9 = String.init<A>(describing:)();
    v4._uint64_t countAndFlagsBits = 15917;
    v4._object = (void *)0xE200000000000000;
    String.append(_:)(v4);
    uint64_t v5 = v2;
    uint64_t v6 = v3;
  }
  else
  {
    dispatch thunk of static AnyKeyPath._rootAndValueType.getter();
    sub_100012894((uint64_t *)&unk_1004D29A0);
    uint64_t v9 = String.init<A>(describing:)();
    v7._uint64_t countAndFlagsBits = 15917;
    v7._object = (void *)0xE200000000000000;
    String.append(_:)(v7);
    dispatch thunk of static AnyKeyPath._rootAndValueType.getter();
    uint64_t v5 = String.init<A>(describing:)();
  }
  String.append(_:)(*(Swift::String *)&v5);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100203324()
{
  return KeyPath.description.getter();
}

uint64_t type metadata accessor for UIKitContext()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for UIKitContext.InstanceKeyPath(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  id v4 = v3;
  return a1;
}

void destroy for UIKitContext.InstanceKeyPath(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void **)(a1 + 8);
}

void *assignWithCopy for UIKitContext.InstanceKeyPath(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  id v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for UIKitContext.InstanceKeyPath(uint64_t a1, _OWORD *a2)
{
  swift_release();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for UIKitContext.InstanceKeyPath()
{
  return &type metadata for UIKitContext.InstanceKeyPath;
}

__n128 initializeWithCopy for UIKitContext.SceneViewTraits(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for UIKitContext.SceneViewTraits(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for UIKitContext.SceneViewTraits(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 80) = v3;
  return result;
}

ValueMetadata *type metadata accessor for UIKitContext.SceneViewTraits()
{
  return &type metadata for UIKitContext.SceneViewTraits;
}

unint64_t sub_100203518()
{
  unint64_t result = qword_1004D25A0;
  if (!qword_1004D25A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004D25A0);
  }
  return result;
}

uint64_t sub_100203570()
{
  return sub_1002035E4(&OBJC_IVAR____TtC7Measure12UIKitContext__observationMap);
}

uint64_t sub_10020357C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10020358C()
{
  return swift_release();
}

uint64_t sub_100203598()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002035D8()
{
  return sub_1002035E4(&OBJC_IVAR____TtC7Measure12UIKitContext__valueMap);
}

uint64_t sub_1002035E4(void *a1)
{
  *(void *)(*(void *)(v1 + 16) + *a1) = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10020362C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100203664()
{
  return sub_10020368C(&OBJC_IVAR____TtC7Measure12UIKitContext__valueMap);
}

uint64_t sub_100203670()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100203680()
{
  return sub_10020368C(&OBJC_IVAR____TtC7Measure12UIKitContext__observationMap);
}

uint64_t sub_10020368C(void *a1)
{
  **(void **)(v1 + 16) = *(void *)(*(void *)(v1 + 24) + *a1);
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002036D4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002036E4()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_100203724()
{
  return sub_100203140(*(void *)(v0 + 16), *(id *)(v0 + 24));
}

void sub_100203858(char a1, double a2, double a3, double a4, double a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR____TtC7Measure10UndoButton_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v5[OBJC_IVAR____TtC7Measure10UndoButton_undoButton] = 0;
  v5[OBJC_IVAR____TtC7Measure10UndoButton_isEnabled] = 0;
  v5[OBJC_IVAR____TtC7Measure10UndoButton_controlType] = 0;
  v60.receiver = v5;
  v60.super_class = ObjectType;
  uint64_t v12 = (char *)[super initWithFrame:a2, a3, a4, a5];
  uint64_t v13 = v12;
  v12[OBJC_IVAR____TtC7Measure10UndoButton_controlType] = a1;
  if (a1 == 1)
  {
    id v31 = objc_allocWithZone((Class)UIPointerInteraction);
    id v32 = v13;
    id v33 = [v31 initWithDelegate:v32];
    [v32 addInteraction:v33];

LABEL_13:
    char v35 = sub_100204568();
    if (v35) {
      uint64_t v36 = 0xD000000000000011;
    }
    else {
      uint64_t v36 = 0xD000000000000010;
    }
    if (v35) {
      uint64_t v37 = 0x800000010042D3A0;
    }
    else {
      uint64_t v37 = 0x800000010042D380;
    }
    [v13 bounds];
    double v39 = v38;
    double v41 = v40;
    double v43 = v42;
    double v45 = v44;
    CGSize.init(_:_:)();
    uint64_t v46 = (objc_class *)type metadata accessor for BlurredButton();
    v59.receiver = objc_allocWithZone(v46);
    v59.super_class = v46;
    unint64_t v47 = UIFontTextStyleSubheadline;
    id v48 = [super initWithFrame:v39, v41, v43, v45];
    [v48 bounds];
    sub_100043F08((uint64_t)v48, v49, v50, v51, v52, v36, v37, (uint64_t)v47, 0);
    swift_bridgeObjectRelease();

    uint64_t v53 = OBJC_IVAR____TtC7Measure10UndoButton_undoButton;
    id v54 = *(void **)&v13[OBJC_IVAR____TtC7Measure10UndoButton_undoButton];
    *(void *)&v13[OBJC_IVAR____TtC7Measure10UndoButton_undoButton] = v48;

    if (*(void *)&v13[v53])
    {
      [v13 addSubview:];
      Swift::String v55 = *(void **)&v13[v53];
      if (v55) {
        [v55 addTarget:v13 action:"undoFrom:" forControlEvents:64];
      }
      goto LABEL_22;
    }
    __break(1u);
    goto LABEL_26;
  }
  if (a1)
  {
    Swift::String v34 = v12;
    goto LABEL_13;
  }
  type metadata accessor for ViewController();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v15 = self;
  uint64_t v16 = v13;
  id v17 = [v15 bundleForClass:ObjCClassFromMetadata];
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [self imageNamed:v18 inBundle:v17 compatibleWithTraitCollection:0];

  if (!v19)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  id v20 = [v19 CGImage];
  if (!v20)
  {
LABEL_28:
    __break(1u);
    return;
  }
  uint64_t v21 = v20;
  [v19 scale];
  double v23 = v22;
  if (sub_100204568()) {
    uint64_t v24 = 4;
  }
  else {
    uint64_t v24 = 0;
  }
  id v25 = [objc_allocWithZone((Class)UIImage) initWithCGImage:v21 scale:v24 orientation:v23];

  id v26 = [v25 imageWithRenderingMode:2];
  id v27 = [objc_allocWithZone((Class)ASVRoundedButton) initWithImage:v26 buttonStyle:0 textStyle:0 controlStyle:1];
  uint64_t v28 = OBJC_IVAR____TtC7Measure10UndoButton_undoButton;
  char v29 = *(void **)&v16[OBJC_IVAR____TtC7Measure10UndoButton_undoButton];
  *(void *)&v16[OBJC_IVAR____TtC7Measure10UndoButton_undoButton] = v27;

  uint64_t v30 = *(void **)&v16[v28];
  if (!v30 || ([v30 addTarget:v16 action:"undoFrom:" forControlEvents:64], !*(void *)&v16[v28]))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  [v16 addSubview:];
  sub_100203D28();
  sub_100203E84();

LABEL_22:
  Swift::String v56 = *(void **)&v13[OBJC_IVAR____TtC7Measure10UndoButton_undoButton];
  if (v56) {
    [v56 setEnabled:v13[OBJC_IVAR____TtC7Measure10UndoButton_isEnabled]];
  }
  swift_getMetatypeMetadata();
  uint64_t v57 = v13;
  String.init<A>(describing:)();
  NSString v58 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v57 setAccessibilityIdentifier:v58];
}

void sub_100203D28()
{
  id v1 = [self defaultCenter];
  if (qword_1004C3240 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1004F8AB0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  v7[4] = sub_100204A10;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1000F910C;
  v7[3] = &unk_100494030;
  long long v4 = _Block_copy(v7);
  id v5 = v0;
  swift_release();
  id v6 = [v1 addObserverForName:v2 object:0 queue:0 usingBlock:v4];
  _Block_release(v4);
  swift_unknownObjectRelease();
}

void sub_100203E84()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC7Measure10UndoButton_undoButton);
  if (v1)
  {
    self;
    uint64_t v2 = swift_dynamicCastObjCClass();
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      uint64_t v4 = qword_1004C31B8;
      id v14 = v1;
      if (v4 != -1) {
        swift_once();
      }
      id v5 = (void *)qword_1004F89F0;
      id v6 = *(void **)algn_1004F89F8;
      if (byte_1004F8A00)
      {
        char v7 = byte_1004F8A10;
        uint64_t v8 = qword_1004F8A08;
        char v9 = byte_1004D2600;
        id v10 = (id)qword_1004F89F0;
        id v11 = sub_100081B28(v9, v8, v7);
        sub_1000286C0(v5, v6, 1);
      }
      else
      {
        if (byte_1004D2600) {
          id v12 = *(id *)algn_1004F89F8;
        }
        else {
          id v12 = (id)qword_1004F89F0;
        }
        id v11 = v12;
      }
      [v3 setTintColor:v11];

      if (byte_1004D2600) {
        uint64_t v13 = 2;
      }
      else {
        uint64_t v13 = 1;
      }
      [v3 setControlStyle:v13];
    }
  }
}

uint64_t type metadata accessor for UndoButton()
{
  return self;
}

uint64_t sub_1002040B4(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  id v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  aBlock[4] = sub_100204A30;
  void aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_100494080;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = a2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_100039BEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unsigned char *storeEnumTagSinglePayload for ControlUIType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002044D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlUIType()
{
  return &type metadata for ControlUIType;
}

unint64_t sub_100204514()
{
  unint64_t result = qword_1004D25F8;
  if (!qword_1004D25F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004D25F8);
  }
  return result;
}

uint64_t sub_100204568()
{
  uint64_t v0 = self;
  id v1 = [v0 preferredLanguages];
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (*(void *)(v2 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v4 = [v0 characterDirectionForLanguage:v3];

    if (v4 == (id)2) {
      return 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return 0;
}

double sub_100204634()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Measure10UndoButton_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v2 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
    swift_unknownObjectRelease();
  }
  if (qword_1004C2B40 != -1) {
    swift_once();
  }
  v4._object = (void *)0x800000010042D320;
  v4._uint64_t countAndFlagsBits = 0xD000000000000013;
  Log.default(_:isPrivate:)(v4, 0);
  if (qword_1004C2C10 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1004F8458 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  swift_beginAccess();
  double result = *(double *)(v5 + 8) + 1.0;
  *(double *)(v5 + 8) = result;
  return result;
}

uint64_t sub_100204764()
{
  uint64_t v1 = sub_100012894(&qword_1004C78A0);
  __chkstk_darwin(v1 - 8);
  NSString v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UIPointerEffect();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v8 = [objc_allocWithZone((Class)UIPreviewParameters) init];
  [v0 bounds];
  CGRect.center.getter();
  [v0 bounds];
  CGRect.init(centerPoint:size:)();
  id v13 = [self bezierPathWithOvalInRect:v9, v10, v11, v12];
  [v8 setVisiblePath:v13];

  sub_10001C99C(0, (unint64_t *)&qword_1004C78A8);
  *uint64_t v7 = [objc_allocWithZone((Class)UITargetedPreview) initWithView:v0 parameters:v8];
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for UIPointerEffect.lift(_:), v4);
  uint64_t v14 = type metadata accessor for UIPointerShape();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v3, 1, 1, v14);
  uint64_t v15 = UIPointerStyle.init(effect:shape:)();

  return v15;
}

uint64_t sub_1002049D8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100204A10(uint64_t a1)
{
  return sub_1002040B4(a1, *(void **)(v1 + 16));
}

uint64_t sub_100204A18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100204A28()
{
  return swift_release();
}

void sub_100204A30()
{
}

uint64_t sub_100204A60()
{
  _StringGuts.grow(_:)(40);
  if (qword_1004C2A18 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v0._object = (void *)0x800000010042D3C0;
  v0._uint64_t countAndFlagsBits = 0xD000000000000026;
  String.append(_:)(v0);
  NSString v1 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1004F8AB0 = (uint64_t)v1;
  return result;
}

void sub_100204B34(void *a1)
{
  NSString v1 = (void *)qword_1004D2608;
  qword_1004D2608 = (uint64_t)a1;
  id v2 = a1;

  if (!qword_1004D2608)
  {
    __break(1u);
    goto LABEL_15;
  }
  id v3 = [(id)qword_1004D2608 userInterfaceStyle];
  if ((unint64_t)v3 < 2)
  {
    if ((byte_1004D2600 & 1) == 0) {
      return;
    }
    char v4 = 0;
    goto LABEL_9;
  }
  if (v3 != (id)2)
  {
LABEL_15:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  if (byte_1004D2600) {
    return;
  }
  char v4 = 1;
LABEL_9:
  byte_1004D2600 = v4;
  id v5 = [self defaultCenter];
  id v6 = v5;
  if (qword_1004C3240 != -1)
  {
    swift_once();
    id v5 = v6;
  }
  [v5 postNotificationName:qword_1004F8AB0 object:0];
}

uint64_t type metadata accessor for UserInterfaceStyleObserverView()
{
  return self;
}

void sub_100204E80(char a1, double a2)
{
  double v5 = 1.0;
  if ((a1 & 1) == 0)
  {
    id v6 = *(void **)&v2[qword_1004D26D0];
    double v5 = 0.0;
    if (v6) {
      [v6 setAlpha:0.0];
    }
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v2;
  *(double *)(v7 + 24) = v5;
  *(unsigned char *)(v7 + 32) = a1 & 1;
  id v8 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  v12[4] = sub_10001F844;
  v12[5] = v7;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_100049AB4;
  v12[3] = &unk_1004941E8;
  double v9 = _Block_copy(v12);
  double v10 = v2;
  swift_release();
  id v11 = [v8 initWithDuration:v9 dampingRatio:a2 animations:1.0];
  _Block_release(v9);
  [v11 setInterruptible:0];
  [v11 startAnimation];
}

uint64_t sub_100204FEC(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a2 + 32;
  if (a1) {
    uint64_t v5 = 0x6C6576656CLL;
  }
  else {
    uint64_t v5 = 0x6572757361656DLL;
  }
  if (a1) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  while (1)
  {
    uint64_t v7 = *(unsigned char *)(v4 + v3) ? 0x6C6576656CLL : 0x6572757361656DLL;
    unint64_t v8 = *(unsigned char *)(v4 + v3) ? 0xE500000000000000 : 0xE700000000000000;
    if (v7 == v5 && v8 == v6) {
      break;
    }
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10) {
      return v3;
    }
    if (v2 == ++v3) {
      return 0;
    }
  }
  swift_bridgeObjectRelease_n();
  return v3;
}

uint64_t sub_1002050FC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = a1;
  if (*(unsigned __int8 *)(a2 + 32) == a1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v5 = v2 - 1;
  while (v5 != result)
  {
    int v6 = *(unsigned __int8 *)(a2 + 33 + result++);
    if (v6 == v3) {
      return result;
    }
  }
  return 0;
}

uint64_t sub_100205160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = *(void *)(a4 + 16);
  if (!v29) {
    return 0;
  }
  uint64_t v4 = 0;
  uint64_t v30 = a4 + 32;
  while (1)
  {
    uint64_t v32 = v4;
    uint64_t v5 = (void *)(v30 + 24 * v4);
    uint64_t v6 = v5[1];
    uint64_t v7 = v5[2];
    uint64_t v34 = v7;
    if (v6) {
      break;
    }
    if (!a2) {
      goto LABEL_12;
    }
LABEL_4:
    uint64_t v4 = v32 + 1;
    if (v32 + 1 == v29) {
      return 0;
    }
  }
  if (!a2) {
    goto LABEL_4;
  }
  if (*v5 != a1 || v6 != a2)
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v7 = v34;
    if ((v9 & 1) == 0) {
      goto LABEL_4;
    }
  }
LABEL_12:
  uint64_t v10 = *(void *)(v7 + 16);
  if (v10 != *(void *)(a3 + 16)) {
    goto LABEL_4;
  }
  if (v10 && v7 != a3)
  {
    for (uint64_t i = 0; ; i += 48)
    {
      uint64_t v14 = *(void *)(v7 + i + 48);
      uint64_t v13 = *(void *)(v7 + i + 56);
      uint64_t v15 = *(void *)(v7 + i + 64);
      int v16 = *(unsigned __int8 *)(v7 + i + 72);
      uint64_t v18 = *(void *)(a3 + i + 48);
      uint64_t v17 = *(void *)(a3 + i + 56);
      uint64_t v19 = *(void *)(a3 + i + 64);
      int v20 = *(unsigned __int8 *)(a3 + i + 72);
      if (*(void *)(v7 + i + 32) != *(void *)(a3 + i + 32) || *(void *)(v7 + i + 40) != *(void *)(a3 + i + 40))
      {
        char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t v7 = v34;
        if ((v22 & 1) == 0) {
          break;
        }
      }
      if (v13)
      {
        if (!v17) {
          goto LABEL_4;
        }
        if (v14 != v18 || v13 != v17)
        {
          char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t v7 = v34;
          if ((v24 & 1) == 0) {
            goto LABEL_4;
          }
        }
      }
      else if (v17)
      {
        goto LABEL_4;
      }
      if (v16)
      {
        if (v15)
        {
          if (v19) {
            int v25 = v20;
          }
          else {
            int v25 = 0;
          }
          if (v25 != 1) {
            goto LABEL_4;
          }
        }
        else
        {
          if (v19) {
            char v12 = 0;
          }
          else {
            char v12 = v20;
          }
          if ((v12 & 1) == 0) {
            goto LABEL_4;
          }
        }
      }
      else
      {
        if (v20) {
          goto LABEL_4;
        }
        if (*(float *)&v15 != *(float *)&v19 || *((float *)&v15 + 1) != *((float *)&v19 + 1)) {
          goto LABEL_4;
        }
      }
      if (!--v10) {
        return v32;
      }
    }
    goto LABEL_4;
  }
  return v32;
}

id sub_100205358()
{
  uint64_t v1 = qword_1004D2640;
  uint64_t v2 = *(void **)(v0 + qword_1004D2640);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1004D2640);
  }
  else
  {
    type metadata accessor for OverlayMetalView();
    id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1002053D0()
{
  uint64_t v1 = qword_1004D2648;
  uint64_t v2 = *(void **)(v0 + qword_1004D2648);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1004D2648);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = [objc_allocWithZone((Class)NonRotatingARSCNView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v5 setAutoresizingMask:36];
    [v5 setLockedOrientation:*(void *)effectiveStatusBarOrientation.unsafeMutableAddressor()];
    [v5 setAutomaticallyOccludesVirtualContent:0];
    id v6 = objc_allocWithZone((Class)SCNScene);
    id v7 = v5;
    id v8 = [v6 init];
    [v7 setScene:v8];

    if (qword_1004C29D8 != -1) {
      swift_once();
    }
    id v9 = [v7 sceneRenderingQueue];
    uint64_t v10 = (void *)*((void *)&xmmword_1004F8000 + 1);
    *((void *)&xmmword_1004F8000 + 1) = v9;

    if ([self jasperAvailable])
    {
      id v11 = sub_100205358();
      [v7 addSubview:v11];

      id v12 = sub_100205358();
      [v7 sendSubviewToBack:v12];
    }
    sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
    if ((static UIDevice.isIPad()() & 1) != 0 && (static UIDevice.isDeviceQualified(family:minVersion:)() & 1) == 0) {
      [v7 setPreferredFramesPerSecond:30];
    }
    uint64_t v13 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v7;
    id v3 = v7;

    uint64_t v2 = 0;
  }
  id v14 = v2;
  return v3;
}

void sub_1002055F0()
{
  void (*v3)(uint64_t *__return_ptr);
  id v4;
  char v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  unsigned __int8 v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;

  uint64_t v1 = *(void **)&v0[qword_1004D26D8];
  if (v1)
  {
    uint64_t v2 = v0;
    id v3 = *(void (**)(uint64_t *__return_ptr))(**(void **)&v0[qword_1004D2708] + 144);
    swift_retain();
    uint64_t v4 = v1;
    v3(&v17);
    swift_release();
    if ((v17 & 0x100) != 0)
    {
      id v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v5 & 1) == 0)
      {
        id v6 = qword_1004D26F8;
        if (*(void *)&v2[qword_1004D26F8])
        {
          if ((objc_msgSend(v4, "isDescendantOfView:") & 1) == 0)
          {
            id v7 = *(void **)&v2[v6];
            if (v7)
            {
              [v7 addSubview:v4];
              id v8 = [v2 view];
              if (v8)
              {
                id v9 = *(void *)&v2[v6];
                if (v9)
                {
                  uint64_t v10 = v8;
                  [v8 bringSubviewToFront:v9];
                  goto LABEL_21;
                }
LABEL_34:
                __break(1u);
                return;
              }
LABEL_33:
              __break(1u);
              goto LABEL_34;
            }
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
LABEL_23:

          return;
        }
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (qword_1004C29D8 != -1) {
      swift_once();
    }
    if ((void)xmmword_1004F8000)
    {
      id v11 = [(id)xmmword_1004F8000 view];
      if (v11)
      {
        id v12 = v11;
        uint64_t v13 = [v4 isDescendantOfView:v11];

        if (v13) {
          goto LABEL_23;
        }
        if ((void)xmmword_1004F8000)
        {
          id v14 = [(id)xmmword_1004F8000 view];
          if (v14)
          {
            uint64_t v15 = v14;
            [v14 addSubview:v4];

            if ((void)xmmword_1004F8000)
            {
              int v16 = [(id)xmmword_1004F8000 view];
              if (v16)
              {
                uint64_t v10 = v16;
                [v16 bringSubviewToFront:v4];
LABEL_21:

                if (*(void *)&v2[qword_1004D26A8])
                {
                  swift_retain();
                  sub_10015979C(1, 0, (uint64_t)nullsub_1, 0);
                  swift_release();
                }
                goto LABEL_23;
              }
              goto LABEL_30;
            }
LABEL_29:
            __break(1u);
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_27;
  }
}

void sub_100205890(uint64_t a1, id a2)
{
  id v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (uint64_t *)((char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  *id v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_6;
  }
  swift_retain();
  a2 = a2;
  if (*(void *)(sub_10020243C() + 16))
  {
    sub_1000E272C(a1, a2);
    if (v11)
    {

      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();

  if (qword_1004C2AD8 != -1) {
    goto LABEL_11;
  }
LABEL_6:
  v50._uint64_t countAndFlagsBits = 0;
  v50._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  v50._uint64_t countAndFlagsBits = 0x6E6976726573624FLL;
  v50._object = (void *)0xEA00000000002067;
  v12._uint64_t countAndFlagsBits = KeyPath.description.getter();
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 544108320;
  v13._object = (void *)0xE400000000000000;
  String.append(_:)(v13);
  id v14 = [a2 description];
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  v18._uint64_t countAndFlagsBits = v15;
  v18._object = v17;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  Log.debug(_:isPrivate:)(v50, 0);
  swift_bridgeObjectRelease();
  v50._uint64_t countAndFlagsBits = (uint64_t)a2;
  swift_retain();
  id v19 = a2;
  swift_getAtKeyPath();
  v50._uint64_t countAndFlagsBits = 0;
  v50._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(29);
  v20._object = (void *)0x800000010042D760;
  v20._uint64_t countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v20);
  v21._uint64_t countAndFlagsBits = KeyPath.description.getter();
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = 544108320;
  v22._object = (void *)0xE400000000000000;
  String.append(_:)(v22);
  id v23 = [v19 description];
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v26 = v25;

  v27._uint64_t countAndFlagsBits = v24;
  v27._object = v26;
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = 8250;
  v28._object = (void *)0xE200000000000000;
  String.append(_:)(v28);
  id v29 = v52;
  *(void *)&v48[0] = v52;
  type metadata accessor for UIContentSizeCategory(0);
  uint64_t v31 = v30;
  _print_unlocked<A, B>(_:_:)();
  Log.debug(_:isPrivate:)(v50, 0);
  swift_bridgeObjectRelease();
  uint64_t v51 = v31;
  v50._uint64_t countAndFlagsBits = (uint64_t)v29;
  swift_retain();
  id v32 = v19;
  id v33 = v29;
  uint64_t v34 = sub_1002025D0();
  uint64_t v49 = v34;
  if (v31)
  {
    uint64_t v35 = v34;
    sub_100027938(&v50, v48);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v47 = v35;
    sub_1000D6750(v48, a1, v32, isUniquelyReferenced_nonNull_native);
    uint64_t v37 = v47;

    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10002B9C0((uint64_t)&v50, (uint64_t *)&unk_1004C7180);
    sub_1000A8C50(a1, v32, v48);

    swift_release();
    sub_10002B9C0((uint64_t)v48, (uint64_t *)&unk_1004C7180);
    uint64_t v37 = v49;
  }
  sub_10020273C(v37);
  v50._uint64_t countAndFlagsBits = (uint64_t)v32;
  double v38 = (void *)swift_allocObject();
  v38[2] = a1;
  v38[3] = v3;
  v38[4] = a1;
  v38[5] = v32;
  swift_retain_n();
  id v39 = v32;
  v3;
  double v40 = (void *)_KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
  swift_release();
  swift_retain();
  id v41 = v39;
  id v42 = v40;
  uint64_t v43 = sub_10020243C();
  char v44 = swift_isUniquelyReferenced_nonNull_native();
  v50._uint64_t countAndFlagsBits = v43;
  sub_1000D65C8((uint64_t)v42, a1, v41, v44);
  uint64_t countAndFlagsBits = v50._countAndFlagsBits;

  swift_release();
  swift_bridgeObjectRelease();
  sub_1002025A8(countAndFlagsBits);

  swift_release();
}

id sub_100205E3C(uint64_t a1)
{
  return *(id *)(a1 + qword_1004D26B0);
}

void sub_100205E4C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = *(id *)(a1 + qword_1004D26B0);
  *(void *)(a1 + qword_1004D26B0) = a3;
  id v3 = a3;
}

id sub_100205E94(uint64_t a1)
{
  return *(id *)(a1 + qword_1004D26B8);
}

void sub_100205EA4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = *(id *)(a1 + qword_1004D26B8);
  *(void *)(a1 + qword_1004D26B8) = a3;
  id v3 = a3;
}

id sub_100205EEC(uint64_t a1)
{
  return *(id *)(a1 + qword_1004D26C8);
}

id sub_100205EFC()
{
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  id result = [self jasperAvailable];
  if (result)
  {
    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    StateValue.ifUpdated(_:)();
    swift_release();
    return (id)swift_release();
  }
  return result;
}

void sub_100205FE8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    uint64_t v2 = qword_1004D2668;
    id v3 = *(void **)(Strong + qword_1004D2668);
    if (v3)
    {
      [v3 invalidate];
      id v4 = *(void **)&v1[v2];
      *(void *)&v1[v2] = 0;
    }
    id v5 = *(uint64_t (**)(unsigned char *))(**(void **)&v1[qword_1004D2660] + 400);
    swift_retain();
    uint64_t v6 = (void (*)(unsigned char *, void))v5(v15);
    *(_OWORD *)uint64_t v7 = 0u;
    *(_OWORD *)(v7 + 16) = 0u;
    *(unsigned char *)(v7 + 32) = 1;
    v6(v15, 0);
    swift_release();
    uint64_t v8 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v8)
    {
      id v9 = [self displayLinkWithTarget:v1 selector:"caDisplayLinkCallback"];
      char v10 = *(void **)&v1[v2];
      *(void *)&v1[v2] = v9;

      char v11 = *(void **)&v1[v2];
      if (!v11)
      {
        __break(1u);
        return;
      }
      Swift::String v12 = self;
      id v13 = v11;
      id v14 = (char *)[v12 mainRunLoop];
      [v13 addToRunLoop:v14 forMode:NSDefaultRunLoopMode];

      uint64_t v1 = v14;
    }
  }
}

uint64_t sub_1002061B0()
{
  return 1;
}

void sub_1002061B8(void *a1)
{
  uint64_t v1 = qword_1004D26F0;
  if ((*((unsigned char *)a1 + qword_1004D26F0) & 1) == 0)
  {
    id v4 = a1;
    id v3 = sub_1002053D0();
    [v4 setView:v3];

    *((unsigned char *)a1 + v1) = 1;
  }
}

_UNKNOWN **sub_100206254(void *a1)
{
  void (*v16)(void *__return_ptr, uint64_t);
  uint64_t v17;
  uint64_t (*v18)(void *);
  void (*v19)(void *, void);
  void *v20;
  void v21[4];

  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  char v3 = static UIDevice.isIPad()();
  if (v3) {
    id result = &off_100485E80;
  }
  else {
    id result = &off_100485EC0;
  }
  id v5 = (uint64_t *)&unk_100485E90;
  if ((v3 & 1) == 0) {
    id v5 = (uint64_t *)&unk_100485ED0;
  }
  uint64_t v6 = *v5;
  if (!v6) {
    goto LABEL_20;
  }
  BOOL v7 = (v3 & 1) == 0;
  if (v3) {
    uint64_t v8 = &off_100485E80;
  }
  else {
    uint64_t v8 = &off_100485EC0;
  }
  id v9 = &unk_100485EE0;
  if (!v7) {
    id v9 = &unk_100485EA0;
  }
  if (v8[4] == a1)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    char v10 = *(uint64_t (**)(void *))(**(void **)(v1 + qword_1004D2710) + 400);
    swift_retain();
    char v11 = (void (*)(void *, void))v10(v21);
    *Swift::String v12 = a1;
    v11(v21, 0);
    return (_UNKNOWN **)swift_release();
  }
  if (v6 == 1)
  {
LABEL_20:
    id result = (_UNKNOWN **)swift_bridgeObjectRelease();
    if (!a1)
    {
      uint64_t v15 = qword_1004D2710;
      int v16 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v1 + qword_1004D2710) + 144);
      uint64_t v17 = swift_retain();
      v16(v21, v17);
      id result = (_UNKNOWN **)swift_release();
      if (!v21[0])
      {
        Swift::String v18 = *(uint64_t (**)(void *))(**(void **)(v1 + v15) + 400);
        swift_retain();
        id v19 = (void (*)(void *, void))v18(v21);
        *Swift::String v20 = 1;
        v19(v21, 0);
        return (_UNKNOWN **)swift_release();
      }
    }
  }
  else
  {
    uint64_t v13 = 1;
    while (1)
    {
      uint64_t v14 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        break;
      }
      if ((void *)v9[v13] == a1) {
        goto LABEL_13;
      }
      ++v13;
      if (v14 == v6) {
        goto LABEL_20;
      }
    }
    __break(1u);
  }
  return result;
}

void sub_10020645C(void *a1)
{
  uint64_t v2 = self;
  id v5 = a1;
  id v3 = [v2 currentDevice];
  id v4 = [v3 orientation];

  sub_100206254(v4);
}

uint64_t sub_1002064EC()
{
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

id sub_1002066BC()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if ([self jasperAvailable])
  {
    uint64_t v2 = qword_1004D2668;
    id v3 = *(void **)&v0[qword_1004D2668];
    if (v3)
    {
      [v3 invalidate];
      id v4 = *(void **)&v0[v2];
      *(void *)&v0[v2] = 0;
    }
  }
  v6.receiver = v0;
  v6.super_class = ObjectType;
  return [super dealloc];
}

id sub_10020674C(void *a1)
{
  id v1 = a1;
  return sub_1002066BC();
}

uint64_t sub_100206774(uint64_t a1)
{
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void sub_100206950(char a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)swift_getObjectType();
  [super viewWillDisappear:a1 & 1];
  if ([self jasperAvailable])
  {
    uint64_t v3 = qword_1004D2668;
    id v4 = *(void **)&v1[qword_1004D2668];
    if (v4)
    {
      [v4 invalidate];
      id v5 = *(void **)&v1[v3];
      *(void *)&v1[v3] = 0;
    }
  }
}

void sub_1002069DC(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_100206950(a3);
}

void sub_100206A30()
{
  id v1 = v0;
  v252.receiver = v0;
  v252.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  if (qword_1004C3238 != -1) {
    swift_once();
  }
  id v2 = sub_1002053D0();
  sub_100202EAC(v2);

  uint64_t KeyPath = swift_getKeyPath();
  id v4 = [self sharedApplication];
  sub_100205890(KeyPath, v4);
  swift_release();

  id v5 = self;
  id v6 = [v5 defaultCenter];
  [v6 addObserver:v1 selector:"updateForCurrentOrientation" name:UIDeviceOrientationDidChangeNotification object:0];

  id v7 = sub_1002053D0();
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  BOOL v8 = sub_10020A504(qword_1004F7FF8);
  id v9 = [self mainScreen];
  [v9 _referenceBounds];
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  double Width = v16;

  if (!v8)
  {
    v253.origin.x = v11;
    v253.origin.y = v13;
    v253.size.width = v15;
    v253.size.height = Width;
    CGFloat Height = CGRectGetHeight(v253);
    v254.origin.x = v11;
    v254.origin.y = v13;
    v254.size.width = v15;
    v254.size.height = Width;
    double Width = CGRectGetWidth(v254);
    double v11 = 0.0;
    double v13 = 0.0;
    double v15 = Height;
  }
  [v7 setFrame:v11, v13, v15, Width];

  id v19 = sub_1002053D0();
  [v19 setAutoenablesDefaultLighting:0];

  id v20 = sub_1002053D0();
  [v20 setAntialiasingMode:2];

  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if (static UIDevice.shouldLockFramerate()())
  {
    id v21 = sub_1002053D0();
    [v21 setPreferredFramesPerSecond:30];
  }
  id v22 = [v1 view];
  if (!v22)
  {
    __break(1u);
    goto LABEL_77;
  }
  id v23 = v22;
  id v24 = sub_1002053D0();
  type metadata accessor for DebugVisualizer();
  swift_allocObject();
  sub_100076548(v23, v24);
  qword_1004F7FE0 = v25;
  swift_release();
  id v26 = sub_1002053D0();
  [v26 center];

  SIMD2<>.init(_:)();
  uint64_t v28 = v27;
  id v29 = *(uint64_t (**)(uint64_t))(**(void **)&v1[qword_1004D2700] + 200);
  uint64_t v30 = swift_retain();
  uint64_t v31 = v29(v30);
  swift_release();
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v28;
  *(_DWORD *)(v32 + 24) = 1106247680;
  (*(void (**)(double (*)(uint64_t), uint64_t))(*(void *)v31 + 280))(sub_10020A524, v32);
  swift_release();
  swift_release();
  type metadata accessor for ShaderCache();
  id v33 = sub_1002053D0();
  sub_1001B1518(v33);

  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v1;
  uint64_t v35 = (objc_class *)type metadata accessor for ActionView();
  uint64_t v36 = (char *)objc_allocWithZone(v35);
  *(void *)&v36[OBJC_IVAR____TtC7Measure10ActionView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v37 = (uint64_t (**)(double, double))&v36[OBJC_IVAR____TtC7Measure10ActionView_shouldPreventManipulatingPoint];
  *uint64_t v37 = sub_10020A570;
  v37[1] = (uint64_t (*)(double, double))v34;
  v251.receiver = v36;
  v251.super_class = v35;
  double v38 = v1;
  swift_retain();
  id v39 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v39 setAutoresizingMask:18];

  swift_release();
  uint64_t v40 = qword_1004D26F8;
  id v41 = *(void **)&v38[qword_1004D26F8];
  *(void *)&v38[qword_1004D26F8] = v39;

  uint64_t v249 = v40;
  id v42 = *(void **)&v38[v40];
  if (!v42)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  id v43 = v42;
  id v44 = sub_1002053D0();
  [v44 bounds];
  double v46 = v45;
  double v48 = v47;
  double v50 = v49;
  double v52 = v51;

  [v43 setFrame:v46, v48, v50, v52];
  id v53 = [v38 view];
  if (!v53)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  uint64_t v54 = v40;
  if (!*(void *)&v38[v40])
  {
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  Swift::String v55 = v53;
  [v53 addSubview:];

  Swift::String v56 = (void *)qword_1004F8028;
  qword_1004F8028 = *(void *)&v38[v40];
  id v57 = (id)qword_1004F8028;

  char v58 = static UIDevice.isIPhone()();
  objc_super v59 = *(void **)&v38[v40];
  if (v58)
  {
    if (!v59)
    {
LABEL_106:
      __break(1u);
      goto LABEL_107;
    }
    [v59 bounds];
    uint64_t v62 = *(void **)&v38[v40];
    if (!v62)
    {
LABEL_107:
      __break(1u);
      goto LABEL_108;
    }
    double v63 = v60;
    double v64 = v61;
    [v62 bounds];
    double v65 = CGRectGetWidth(v255);
    id v66 = *(void **)&v38[v40];
    if (!v66)
    {
LABEL_108:
      __break(1u);
      goto LABEL_109;
    }
    double v67 = v65;
    [v66 bounds];
    double v68 = CGRectGetHeight(v256);
    id v69 = [v38 tabBarController];
    if (!v69)
    {
LABEL_109:
      __break(1u);
      goto LABEL_110;
    }
    id v70 = v69;
    id v71 = [v69 tabBar];

    [v71 frame];
    CGFloat v73 = v72;
    CGFloat v75 = v74;
    CGFloat v77 = v76;
    CGFloat v79 = v78;

    v257.origin.x = v73;
    v257.origin.y = v75;
    v257.size.width = v77;
    v257.size.height = v79;
    double v80 = v68 - CGRectGetHeight(v257);
    id v81 = [self mainScreen];
    [v81 _peripheryInsets];
    double v83 = v82;

    double v84 = v80 - v83;
  }
  else
  {
    if (!v59)
    {
LABEL_110:
      __break(1u);
      goto LABEL_111;
    }
    [v59 bounds];
    double v63 = v85;
    double v64 = v86;
    double v67 = v87;
    double v84 = v88;
  }
  id v89 = self;
  unsigned int v90 = [v89 jasperAvailable];
  Swift::String v91 = *(void **)&v38[v40];
  if (v90)
  {
    if (!v91)
    {
LABEL_111:
      __break(1u);
      goto LABEL_112;
    }
    id v92 = v91;
    id v93 = sub_1002053D0();
    id v94 = objc_allocWithZone((Class)type metadata accessor for LabelView());
    Swift::String v95 = v38;
    Swift::String v96 = (char *)sub_1000DEE7C(v92, v93, v67, v84);
    Swift::String v97 = *(void **)&v96[OBJC_IVAR____TtC7Measure9LabelView_activityPresentingViewController];
    *(void *)&v96[OBJC_IVAR____TtC7Measure9LabelView_activityPresentingViewController] = v95;

    Swift::String v98 = *(void **)&v95[qword_1004D26B8];
    *(void *)&v95[qword_1004D26B8] = v96;
    uint64_t v54 = v40;
  }
  else
  {
    if (!v91)
    {
LABEL_112:
      __break(1u);
      goto LABEL_113;
    }
    id v99 = v91;
    id v100 = sub_1002053D0();
    id v101 = objc_allocWithZone((Class)type metadata accessor for LabelView());
    id v102 = sub_1000DEE7C(v99, v100, v67, v84);
    Swift::String v98 = *(void **)&v38[qword_1004D26B8];
    *(void *)&v38[qword_1004D26B8] = v102;
  }

  id v103 = *(void **)&v38[v54];
  if (!v103) {
    goto LABEL_80;
  }
  [v103 frame];
  id v104 = sub_1002053D0();
  id v105 = [v104 scene];

  id v106 = objc_allocWithZone((Class)type metadata accessor for LineView());
  id v107 = sub_1000F8F18(v105);
  uint64_t v108 = qword_1004D26C0;
  id v109 = *(void **)&v38[qword_1004D26C0];
  *(void *)&v38[qword_1004D26C0] = v107;

  id v110 = *(void **)&v38[v54];
  if (!v110)
  {
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  [v110 frame];
  id v115 = [objc_allocWithZone((Class)type metadata accessor for ReticleView()) initWithFrame:v111, v112, v113, v114];
  uint64_t v116 = qword_1004D26B0;
  id v117 = *(void **)&v38[qword_1004D26B0];
  *(void *)&v38[qword_1004D26B0] = v115;

  unsigned int v118 = [v89 jasperAvailable];
  char v119 = static UIDevice.isIPad()();
  id v248 = v89;
  if (v118)
  {
    if (v119)
    {
      id v120 = [objc_allocWithZone((Class)type metadata accessor for EditViewSpatial()) initWithFrame:v63, v64, v67, v84];
      uint64_t v121 = *(void **)&v38[qword_1004D26C8];
      *(void *)&v38[qword_1004D26C8] = v120;
      uint64_t v122 = (char *)v120;

      uint64_t v123 = *(void **)&v38[qword_1004D26B8];
      if (v123)
      {
        aBlock[0] = *(void *)&v122[qword_1004CB508];
        uint64_t v124 = v123;
        sub_100012894(&qword_1004CB958);
        sub_10020A5B8();
        *(void *)&v124[OBJC_IVAR____TtC7Measure9LabelView_historyPressedPublisher] = Publisher.eraseToAnyPublisher()();

        swift_release();
      }
      id v125 = sub_1002053D0();
      [v125 bounds];
      double v127 = v126;
      double v129 = v128;
      double v131 = v130;
      double v133 = v132;

      uint64_t v134 = qword_1004CB508;
    }
    else
    {
      id v136 = [objc_allocWithZone((Class)type metadata accessor for EditViewCompactSpatial()) initWithFrame:v63, v64, v67, v84];
      uint64_t v137 = *(void **)&v38[qword_1004D26C8];
      *(void *)&v38[qword_1004D26C8] = v136;
      uint64_t v122 = (char *)v136;

      long long v138 = *(void **)&v38[qword_1004D26B8];
      if (v138)
      {
        aBlock[0] = *(void *)&v122[qword_1004D0790];
        double v139 = v138;
        sub_100012894(&qword_1004CB958);
        sub_10020A5B8();
        *(void *)&v139[OBJC_IVAR____TtC7Measure9LabelView_historyPressedPublisher] = Publisher.eraseToAnyPublisher()();

        swift_release();
      }
      id v140 = sub_1002053D0();
      [v140 bounds];
      double v127 = v141;
      double v129 = v142;
      double v131 = v143;
      double v133 = v144;

      uint64_t v134 = qword_1004D0790;
    }
    aBlock[0] = *(void *)&v122[v134];
    sub_100012894(&qword_1004CB958);
    sub_10020A5B8();
    id v145 = (void **)Publisher.eraseToAnyPublisher()();
    objc_allocWithZone((Class)type metadata accessor for HistoryViewCoordinator());
    id v146 = v38;
    uint64_t v147 = sub_10016EA14(v146, v145, 0, v127, v129, v131, v133);

    uint64_t v148 = *(void **)&v146[qword_1004D2650];
    *(void *)&v146[qword_1004D2650] = v147;
  }
  else
  {
    if (v119) {
      uint64_t v135 = (objc_class *)type metadata accessor for EditViewRegular();
    }
    else {
      uint64_t v135 = (objc_class *)type metadata accessor for EditViewCompact();
    }
    id v149 = [objc_allocWithZone(v135) initWithFrame:v63, v64, v67, v84];
    uint64_t v148 = *(void **)&v38[qword_1004D26C8];
    *(void *)&v38[qword_1004D26C8] = v149;
  }

  id v150 = sub_1002053D0();
  id v151 = [v150 session];

  id v152 = objc_allocWithZone((Class)type metadata accessor for CoachingView());
  sub_100049C2C(v151, v63, v64, v67, v84);
  uint64_t v153 = qword_1004D26D0;
  id v154 = *(void **)&v38[qword_1004D26D0];
  *(void *)&v38[qword_1004D26D0] = v155;

  uint64_t v247 = v153;
  id v156 = *(void **)&v38[v153];
  if (!v156) {
    goto LABEL_82;
  }
  id v157 = self;
  id v158 = v156;
  id v159 = [v157 standardUserDefaults];
  Defaults.disableAllCoaching.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v160 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v161 = [v159 BOOLForKey:v160];

  [v158 setHidden:v161];
  uint64_t v162 = qword_1004D26C8;
  v163 = (void *)qword_1004F8030;
  qword_1004F8030 = *(void *)&v38[qword_1004D26C8];
  id v164 = (id)qword_1004F8030;

  id v165 = sub_1002053D0();
  [v165 frame];
  double v167 = v166;
  double v169 = v168;
  double v171 = v170;
  double v173 = v172;

  id v174 = [objc_allocWithZone((Class)type metadata accessor for PrivacyView()) initWithFrame:v167, v169, v171, v173];
  uint64_t v175 = qword_1004D26D8;
  v176 = *(void **)&v38[qword_1004D26D8];
  *(void *)&v38[qword_1004D26D8] = v174;

  double v177 = *(void **)&v38[v249];
  if (!v177)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  if (!*(void *)&v38[v116])
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  [v177 addSubview:];
  double v178 = *(void **)&v38[v249];
  if (!v178)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  if (!*(void *)&v38[v162])
  {
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  [v178 addSubview:];
  char v179 = *(void **)&v38[v249];
  if (!v179)
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  if (!*(void *)&v38[v153])
  {
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  [v179 addSubview:];
  if ([v89 jasperAvailable])
  {
    uint64_t v180 = *(void **)&v38[v249];
    if (!v180)
    {
LABEL_113:
      __break(1u);
      goto LABEL_114;
    }
    uint64_t v181 = *(void *)&v38[qword_1004D2650];
    if (!v181)
    {
LABEL_114:
      __break(1u);
      goto LABEL_115;
    }
    [v180 addSubview:*(void *)(v181 + qword_1004CE010)];
  }
  uint64_t v182 = qword_1004F7FF0;
  if (!qword_1004F7FF0) {
    goto LABEL_89;
  }
  id v183 = *(void **)&v38[v116];
  if (!v183)
  {
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  uint64_t v245 = v162;
  uint64_t v243 = v175;
  type metadata accessor for ReticleController();
  swift_allocObject();
  swift_retain();
  id v184 = v183;
  uint64_t v185 = sub_1001A13FC(v184);

  uint64_t v244 = qword_1004D2670;
  *(void *)&v38[qword_1004D2670] = v185;
  swift_release();
  id v186 = sub_1002053D0();
  v187 = *(void **)&v38[v249];
  if (!v187)
  {
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v188 = v186;
  type metadata accessor for ActionController();
  swift_allocObject();
  id v189 = v38;
  id v190 = v187;
  uint64_t v191 = sub_10001F358(v188, v190, v189);

  *(void *)&v189[qword_1004D2678] = v191;
  swift_release();
  v192 = *(void **)&v38[v108];
  if (!v192)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  type metadata accessor for LineController();
  swift_allocObject();
  id v193 = v192;
  uint64_t v194 = sub_1000ED49C(v193);

  uint64_t v195 = qword_1004D2680;
  *(void *)&v189[qword_1004D2680] = v194;
  swift_release();
  if (!*(void *)&v189[v195])
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  uint64_t v196 = swift_retain();
  uint64_t v246 = v182;
  sub_100209C0C(v196, v182);
  swift_release();
  qword_1004F8018 = *(void *)&v189[v195];
  swift_retain();
  swift_release();
  uint64_t v197 = qword_1004D26B8;
  id v198 = *(void **)&v189[qword_1004D26B8];
  if (!v198)
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  type metadata accessor for LabelController();
  swift_allocObject();
  id v199 = v189;
  id v200 = v198;
  uint64_t v201 = sub_1000AA24C(v200, v199);

  uint64_t v202 = qword_1004D2688;
  *(void *)&v199[qword_1004D2688] = v201;
  swift_release();
  if (!*(void *)&v199[v202])
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  double v203 = v5;
  uint64_t v204 = swift_retain();
  sub_100209CDC(v204, v246);
  swift_release();
  qword_1004F8010 = *(void *)&v199[v202];
  swift_retain();
  swift_release();
  id v205 = sub_1002053D0();
  sub_100012894((uint64_t *)&unk_1004D2970);
  uint64_t v206 = swift_allocObject();
  *(_OWORD *)(v206 + 16) = xmmword_1003F8B80;
  id v207 = *(void **)&v189[v197];
  if (!v207)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  uint64_t v208 = v206;
  *(void *)(v206 + 32) = v207;
  *(void *)(v206 + 40) = &off_10048D440;
  uint64_t v209 = *(void **)&v38[v108];
  if (!v209)
  {
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  *(void *)(v206 + 48) = v209;
  *(void *)(v206 + 56) = &off_10048DCD0;
  type metadata accessor for CaptureController();
  swift_allocObject();
  id v210 = v207;
  id v211 = v209;
  uint64_t v212 = sub_10003F858(v205, v208);

  uint64_t v213 = qword_1004D2690;
  *(void *)&v199[qword_1004D2690] = v212;
  swift_release();
  uint64_t v214 = v203;
  if ([v248 jasperAvailable])
  {
    if (!*(void *)&v199[v213])
    {
LABEL_115:
      __break(1u);
      goto LABEL_116;
    }
    if (!*(void *)&v189[v197])
    {
LABEL_116:
      __break(1u);
      return;
    }
    swift_unknownObjectUnownedAssign();
  }
  char v215 = *(void **)&v38[v245];
  if (!v215) {
    goto LABEL_98;
  }
  uint64_t v216 = *(void *)&v199[v213];
  if (!v216)
  {
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  type metadata accessor for EditController();
  swift_allocObject();
  id v217 = v215;
  swift_retain();
  uint64_t v218 = sub_10008EBC0(v217, v216);
  uint64_t v219 = qword_1004D2698;
  *(void *)&v199[qword_1004D2698] = v218;
  swift_release();
  id v220 = sub_1002053D0();
  v221 = *(void **)&v38[v247];
  if (!v221)
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  v222 = v220;
  type metadata accessor for CoachingController();
  swift_allocObject();
  id v223 = v221;
  sub_100048BD8(v222, v223);
  uint64_t v225 = v224;

  Swift::String v226 = *(void **)&v38[v247];
  if (!v226)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  id v227 = v226;
  sub_100209E7C((uint64_t)v227, v225);

  if (!*(void *)&v38[v244])
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  uint64_t v228 = swift_retain();
  sub_100209F4C(v228, v225);
  swift_release();
  if (!*(void *)&v199[v219])
  {
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
  uint64_t v229 = swift_retain();
  sub_10020A01C(v229, v225);
  swift_release();
  uint64_t v230 = swift_retain();
  sub_100209DAC(v230, v246);
  *(void *)&v199[qword_1004D26A0] = v225;
  swift_release();
  id v231 = *(void **)&v38[v243];
  if (!v231)
  {
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  double v232 = *(void **)&v38[v249];
  if (!v232)
  {
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
  type metadata accessor for PrivacyController();
  swift_allocObject();
  id v233 = v232;
  id v234 = v231;
  uint64_t v235 = sub_100159D30(v234);

  *(void *)&v199[qword_1004D26A8] = v235;
  swift_release();
  id v236 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v199 action:"onTapOnSceneViewFrom:"];
  [v236 setDelegate:v199];
  id v237 = sub_1002053D0();
  [v237 addGestureRecognizer:v236];

  if ([v248 internalInstall]) {
    sub_100208024();
  }
  id v238 = [v214 defaultCenter:v243];
  uint64_t v239 = swift_allocObject();
  *(void *)(v239 + 16) = v199;
  aBlock[4] = sub_10020A598;
  void aBlock[5] = v239;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000F910C;
  aBlock[3] = &unk_100494170;
  double v240 = _Block_copy(aBlock);
  v241 = v199;
  swift_release();
  id v242 = [v238 addObserverForName:UIContentSizeCategoryDidChangeNotification object:0 queue:0 usingBlock:v240];
  _Block_release(v240);
  swift_release();
  swift_release();

  swift_unknownObjectRelease();
}

uint64_t sub_100207E8C(double a1, double a2)
{
  id v4 = sub_1002053D0();
  id v5 = [v4 overlaySKScene];

  if (v5)
  {
    [v5 convertPointFromView:a1];
    id v6 = [v5 nodesAtPoint:];
    sub_10001C99C(0, (unint64_t *)&unk_1004D2960);
    unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v7 >> 62) {
      goto LABEL_15;
    }
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v8)
    {
      uint64_t v9 = 4;
      while (1)
      {
        id v10 = (v7 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)(v7 + 8 * v9);
        double v11 = v10;
        uint64_t v12 = v9 - 3;
        if (__OFADD__(v9 - 4, 1)) {
          break;
        }
        type metadata accessor for TouchableSpriteNode();
        if (swift_dynamicCastClass())
        {
          swift_bridgeObjectRelease();

          return 1;
        }

        ++v9;
        if (v12 == v8) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_15:
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
LABEL_11:

    swift_bridgeObjectRelease();
  }
  return 0;
}

void sub_100208024()
{
  id v1 = v0;
  if (qword_1004C3248 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1004F8AC0;
  uint64_t v40 = qword_1004F8AC0;
  uint64_t v3 = qword_1004C3250;
  swift_bridgeObjectRetain_n();
  if (v3 != -1) {
    swift_once();
  }
  unint64_t v4 = sub_100205160(xmmword_1004F8AD0, *((uint64_t *)&xmmword_1004F8AD0 + 1), qword_1004F8AE0, v2);
  char v6 = v5;
  swift_bridgeObjectRelease();
  if (v6)
  {
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_100030880(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  uint64_t v7 = v40;
  uint64_t v8 = (objc_class *)type metadata accessor for DefaultsViewController();
  uint64_t v9 = (char *)objc_allocWithZone(v8);
  *(void *)&v9[OBJC_IVAR____TtC7Measure22DefaultsViewController_cancellables] = _swiftEmptyArrayStorage;
  *(void *)&v9[OBJC_IVAR____TtC7Measure22DefaultsViewController_groups] = v7;
  v39.receiver = v9;
  v39.super_class = v8;
  swift_bridgeObjectRetain();
  id v10 = [super initWithStyle:2];
  NSString v11 = String._bridgeToObjectiveC()();
  [v10 setTitle:v11];

  uint64_t v12 = (void *)xmmword_1004F7FD0;
  *(void *)&xmmword_1004F7FD0 = v10;

  id v13 = [objc_allocWithZone((Class)UIView) init];
  id v14 = [v1 view];
  if (!v14) {
    goto LABEL_15;
  }
  double v15 = v14;
  [v14 bounds];
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  CGFloat v23 = v22;

  v41.origin.x = v17;
  v41.origin.y = v19;
  v41.size.width = v21;
  v41.size.height = v23;
  double Width = CGRectGetWidth(v41);
  if (qword_1004C2E80 != -1) {
    swift_once();
  }
  [v13 setFrame:CGRectMake(0.0, 0.0, Width - (*(double *)&qword_1004F8660 + *(double *)&qword_1004F8660) + -160.0, 44.0)];
  id v25 = [v1 view];
  if (!v25) {
    goto LABEL_16;
  }
  id v26 = v25;
  [v25 bounds];
  CGFloat v28 = v27;
  CGFloat v30 = v29;
  CGFloat v32 = v31;
  CGFloat v34 = v33;

  v42.origin.x = v28;
  v42.origin.y = v30;
  v42.size.width = v32;
  v42.size.height = v34;
  CGFloat v35 = CGRectGetWidth(v42) * 0.5;
  [v13 bounds];
  [v13 setCenter:v35, CGRectGetHeight(v43) * 0.5];
  id v36 = [v1 view];
  if (v36)
  {
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    [v37 addSubview:v13];

    id v38 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v1 action:"showDebugController"];
    [v38 setNumberOfTouchesRequired:2];
    [v13 addGestureRecognizer:v38];

    return;
  }
LABEL_17:
  __break(1u);
}

void sub_100208410(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100012894((uint64_t *)&unk_1004D0EF0);
  __chkstk_darwin(v3 - 8);
  char v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = qword_1004D2650;
  uint64_t v7 = *(void **)(a2 + qword_1004D2650);
  if (v7)
  {
    uint64_t v8 = self;
    uint64_t v9 = v7;
    if ([v8 jasperAvailable]) {
      [*(id *)&v9[qword_1004CE010] removeFromSuperview];
    }
    id v10 = sub_10016E77C();
    [v9 copy];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    type metadata accessor for HistoryViewCoordinator();
    if (swift_dynamicCast())
    {
      NSString v11 = v25;
      uint64_t v24 = qword_1004CE108;
      *((unsigned char *)v25 + qword_1004CE108) = 1;
      uint64_t v12 = *(void **)(a2 + v6);
      *(void *)(a2 + v6) = v11;
      id v13 = v11;

      if ([v8 jasperAvailable])
      {
        id v14 = *(void **)(a2 + qword_1004D26F8);
        if (!v14)
        {
          __break(1u);
          return;
        }
        [v14 addSubview:*(void *)&v13[qword_1004CE010]];
      }
      uint64_t v15 = *((void *)v10 + 2);
      if (v15)
      {
        CGFloat v23 = v11;
        uint64_t v16 = type metadata accessor for MeasurementHistoryItem();
        uint64_t v17 = *(void *)(v16 - 8);
        unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
        CGFloat v19 = (void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
        uint64_t v20 = *(void *)(v17 + 72);
        swift_bridgeObjectRetain();
        uint64_t v21 = (uint64_t)v10 + v18 + v20 * (v15 - 1);
        do
        {
          --v15;
          sub_10020A614(v21, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
          (*v19)(v5, 0, 1, v16);
          sub_1001746A4((uint64_t)v5);
          sub_10002B9C0((uint64_t)v5, (uint64_t *)&unk_1004D0EF0);
          v21 -= v20;
        }
        while (v15);

        swift_bridgeObjectRelease_n();
        NSString v11 = v23;
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      *((unsigned char *)v11 + v24) = 0;
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
}

void sub_1002086F0(void *a1)
{
  id v1 = a1;
  sub_100206A30();
}

uint64_t sub_100208738(char a1)
{
  v12.receiver = v1;
  v12.super_class = (Class)swift_getObjectType();
  [super viewDidAppear:a1 & 1];
  id v3 = sub_1002053D0();
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (v4) {
    [v4 lockRendererOrientation];
  }

  id v5 = sub_1002053D0();
  [v5 setNeedsLayout];

  id v6 = sub_1002053D0();
  [v6 layoutIfNeeded];

  uint64_t v7 = *(uint64_t (**)(unsigned char *))(**(void **)&v1[qword_1004D2708] + 400);
  swift_retain();
  uint64_t v8 = (void (*)(unsigned char *, void))v7(v11);
  *(unsigned char *)(v9 + 2) = 1;
  v8(v11, 0);
  return swift_release();
}

void sub_100208868(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_100208738(a3);
}

uint64_t sub_1002088BC(void *a1, uint64_t a2, uint64_t a3)
{
  v10.receiver = a1;
  v10.super_class = (Class)swift_getObjectType();
  id v4 = (char *)v10.receiver;
  [super viewDidDisappear:a3];
  id v5 = *(uint64_t (**)(unsigned char *))(**(void **)&v4[qword_1004D2708] + 400);
  swift_retain();
  id v6 = (void (*)(unsigned char *, void))v5(v9);
  *(unsigned char *)(v7 + 2) = 0;
  v6(v9, 0);

  return swift_release();
}

id sub_10020899C(uint64_t a1)
{
  id result = *(id *)(a1 + qword_1004D26D8);
  if (result) {
    return [result removeFromSuperview];
  }
  return result;
}

id sub_1002089BC(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  return [super didReceiveMemoryWarning];
}

void sub_1002089FC(char *a1, char a2, double a3)
{
  id v6 = *(void **)&a1[qword_1004D26B0];
  if (v6) {
    [v6 setAlpha:a3];
  }
  uint64_t v7 = *(void **)&a1[qword_1004D26C8];
  if (v7) {
    [v7 setAlpha:a3];
  }
  if (![self jasperAvailable]) {
    goto LABEL_19;
  }
  uint64_t v8 = *(void *)&a1[qword_1004D2650];
  if (v8) {
    [*(id *)(v8 + qword_1004CE010) setAlpha:a3];
  }
  id v9 = [a1 view];
  if (!v9) {
    goto LABEL_26;
  }
  objc_super v10 = v9;
  sub_100176288();
  unint64_t v12 = v11;

  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13)
    {
LABEL_11:
      if (v13 >= 1)
      {
        for (uint64_t i = 0; i != v13; ++i)
        {
          if ((v12 & 0xC000000000000001) != 0) {
            id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v15 = *(id *)(v12 + 8 * i + 32);
          }
          uint64_t v16 = v15;
          [v15 setAlpha:a3];
        }
        goto LABEL_18;
      }
      __break(1u);
LABEL_26:
      __break(1u);
      return;
    }
  }
LABEL_18:
  swift_bridgeObjectRelease();
LABEL_19:
  if (a2)
  {
    uint64_t v17 = *(void **)&a1[qword_1004D26D0];
    if (v17)
    {
      [v17 setAlpha:a3];
    }
  }
}

void sub_100208BE4(void *a1)
{
  objc_super v2 = v1;
  uint64_t v4 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  __chkstk_darwin(v4);
  id v6 = (void **)((char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v7 = sub_1002053D0();
  [a1 locationInView:v7];
  uint64_t v9 = v8;
  uint64_t v11 = v10;

  if ([self jasperAvailable])
  {
    swift_retain();
    StateValue.wrappedValue.getter();
    swift_release();
    uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
    sub_1001BCCBC((uint64_t)v41);
    if (Strong)
    {
      id v13 = *(id *)&Strong[OBJC_IVAR____TtC7Measure17CardContainerView_draggableView];

      id v14 = sub_1002053D0();
      [v14 convertPoint:v13 toCoordinateSpace:*(double *)&v9, *(double *)&v11];
      double v16 = v15;
      double v18 = v17;

      LOBYTE(v14) = [v13 pointInside:0 withEvent:v16, v18];
      if (v14) {
        return;
      }
    }
  }
  id v19 = sub_1002053D0();
  id v20 = [v19 overlaySKScene];

  if (v20)
  {
    [v20 convertPointFromView:v9, v11];
    id v21 = [v20 nodesAtPoint:];
    sub_10001C99C(0, (unint64_t *)&unk_1004D2960);
    unint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v22 >> 62)
    {
LABEL_22:
      swift_bridgeObjectRetain();
      uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v23)
      {
LABEL_7:
        v39[0] = v2;
        v39[1] = v4;
        uint64_t v40 = v6;
        char v24 = 0;
        uint64_t v25 = 4;
        objc_super v2 = &OBJC_IVAR____TtC7Measure19TouchableSpriteNode_delegate;
        do
        {
          uint64_t v4 = v25 - 4;
          if ((v22 & 0xC000000000000001) != 0) {
            id v26 = (void **)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v26 = (void **)*(id *)(v22 + 8 * v25);
          }
          id v6 = v26;
          uint64_t v27 = v25 - 3;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_22;
          }
          type metadata accessor for TouchableSpriteNode();
          if (swift_dynamicCastClass())
          {
            uint64_t v28 = swift_unknownObjectWeakLoadStrong();
            double v29 = v6;
            swift_unknownObjectRelease();
            if (v28)
            {
              if (!swift_unknownObjectWeakLoadStrong())
              {
                __break(1u);
                goto LABEL_33;
              }
              char v24 = sub_1000DBDD0();

              swift_unknownObjectRelease();
            }
            else
            {

              char v24 = 0;
            }
          }
          else
          {
          }
          ++v25;
        }
        while (v27 != v23);

        swift_bridgeObjectRelease();
        id v6 = v40;
        objc_super v2 = (uint64_t *)v39[0];
        if ((v24 & 1) == 0) {
          goto LABEL_24;
        }
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v23) {
        goto LABEL_7;
      }
    }

    swift_bridgeObjectRelease();
  }
LABEL_24:
  CGFloat v30 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v2 + qword_1004D2700) + 200);
  uint64_t v31 = swift_retain();
  uint64_t v32 = v30(v31);
  swift_release();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v9;
  *(void *)(v33 + 24) = v11;
  (*(void (**)(unint64_t (*)(uint64_t), uint64_t))(*(void *)v32 + 416))(sub_10020A480, v33);
  swift_release();
  swift_release();
LABEL_25:
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  CGFloat v34 = (void *)qword_1004F7FE8;
  if (qword_1004F7FE8)
  {
    uint64_t v35 = qword_1004F7FE8 + qword_1004CF758;
    swift_beginAccess();
    sub_10020A614(v35, (uint64_t)v6, type metadata accessor for DebugSessionCoordinator.RecordReplayState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      id v36 = *v6;
      id v37 = v34;
      id v38 = sub_1000FE9C0();

      sub_100079908(0, v9, v11, 0);
    }
    else
    {
      sub_100090CE0((uint64_t)v6);
    }
  }
  else
  {
LABEL_33:
    __break(1u);
  }
}

void sub_1002090F4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_100208BE4(v4);
}

uint64_t sub_10020915C(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  char v9 = sub_10020A35C(v7);

  return v9 & 1;
}

id sub_1002091BC(void *a1)
{
  objc_super v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[qword_1004D2640] = 0;
  *(void *)&v1[qword_1004D2648] = 0;
  *(void *)&v1[qword_1004D2650] = 0;
  uint64_t v5 = qword_1004D2658;
  uint64_t v6 = sub_100012894((uint64_t *)&unk_1004D2920);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = qword_1004C2E30;
  char v9 = v2;
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1004F8630;
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 272);
  swift_retain();
  *(void *)&v9[v5] = v11(KeyPath, v10);
  uint64_t v12 = qword_1004D2660;
  sub_100012894(&qword_1004CBF30);
  swift_getKeyPath();
  type metadata accessor for MainLoop();
  *(void *)&v9[v12] = MutableStateValue.__allocating_init(_:_:)();
  *(void *)&v9[qword_1004D2668] = 0;
  *(void *)&v9[qword_1004D2670] = 0;
  *(void *)&v9[qword_1004D2678] = 0;
  *(void *)&v9[qword_1004D2680] = 0;
  *(void *)&v9[qword_1004D2688] = 0;
  *(void *)&v9[qword_1004D2690] = 0;
  *(void *)&v9[qword_1004D2698] = 0;
  *(void *)&v9[qword_1004D26A0] = 0;
  *(void *)&v9[qword_1004D26A8] = 0;
  *(void *)&v9[qword_1004D26B0] = 0;
  *(void *)&v9[qword_1004D26B8] = 0;
  *(void *)&v9[qword_1004D26C0] = 0;
  *(void *)&v9[qword_1004D26C8] = 0;
  *(void *)&v9[qword_1004D26D0] = 0;
  *(void *)&v9[qword_1004D26D8] = 0;
  *(void *)&v9[qword_1004D26E0] = 0;
  uint64_t v13 = qword_1004D26E8;
  type metadata accessor for MotionObserver();
  uint64_t v14 = swift_allocObject();
  *(void *)&v9[v13] = sub_1002099F4(v14);
  v9[qword_1004D26F0] = 0;
  *(void *)&v9[qword_1004D26F8] = 0;
  uint64_t v15 = qword_1004D2700;
  sub_100012894((uint64_t *)&unk_1004D2930);
  swift_getKeyPath();
  *(void *)&v9[v15] = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v16 = qword_1004D2708;
  sub_100012894(&qword_1004CBF38);
  swift_getKeyPath();
  *(void *)&v9[v16] = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v17 = qword_1004D2710;
  sub_100012894((uint64_t *)&unk_1004D2940);
  swift_getKeyPath();
  *(void *)&v9[v17] = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v18 = qword_1004D2718;
  uint64_t v19 = sub_100012894(&qword_1004C6F48);
  uint64_t v20 = swift_getKeyPath();
  uint64_t v21 = qword_1004F8630;
  unint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 272);
  swift_retain();
  *(void *)&v9[v18] = v22(v20, v21);

  v25.receiver = v9;
  v25.super_class = ObjectType;
  id v23 = [super initWithCoder:a1];

  return v23;
}

id sub_100209510(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1002091BC(a3);
}

uint64_t type metadata accessor for ViewController()
{
  uint64_t result = qword_1004D2748;
  if (!qword_1004D2748) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100209584()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100209610()
{
  return type metadata accessor for ViewController();
}

void sub_100209704()
{
  uint64_t v1 = v0;
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  sub_1001BCCBC((uint64_t)v27);
  if (Strong)
  {
    id v3 = *(id *)&Strong[OBJC_IVAR____TtC7Measure17CardContainerView_draggableView];

    id v4 = [v3 superview];
    if (v4)
    {
      uint64_t v5 = v4;
      id v6 = [v3 layer];
      id v7 = [v6 presentationLayer];

      if (!v7) {
        id v7 = [v3 layer];
      }
      [v7 frame];
      double v9 = v8;
      double v11 = v10;
      double v13 = v12;
      double v15 = v14;

      [v5 convertRect:0 toView:v9, v11, v13, v15];
      uint64_t v17 = v16;
      uint64_t v19 = v18;
      uint64_t v21 = v20;
      uint64_t v23 = v22;
      char v24 = *(uint64_t (**)(unsigned char *))(**(void **)(v1 + qword_1004D2660) + 400);
      swift_retain();
      objc_super v25 = (void (*)(unsigned char *, void))v24(v27);
      *(void *)uint64_t v26 = v17;
      *(void *)(v26 + 8) = v19;
      *(void *)(v26 + 16) = v21;
      *(void *)(v26 + 24) = v23;
      *(unsigned char *)(v26 + 32) = 0;
      v25(v27, 0);

      swift_release();
    }
    else
    {
    }
  }
}

uint64_t sub_100209954()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10020998C()
{
}

uint64_t sub_100209994@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 136);
  return swift_retain();
}

uint64_t sub_1002099A4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 104);
  return swift_retain();
}

uint64_t sub_1002099B4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 296);
  return swift_retain();
}

uint64_t sub_1002099C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 296);
  return swift_retain();
}

uint64_t sub_1002099D4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 280);
  return swift_retain();
}

uint64_t sub_1002099E4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 280);
  return swift_retain();
}

uint64_t sub_1002099F4(uint64_t a1)
{
  id v6 = &type metadata for Configurations.Default;
  id v7 = &protocol witness table for Configurations.Default;
  v4[0] = 0;
  sub_100012894((uint64_t *)&unk_1004D2950);
  swift_allocObject();
  swift_retain();
  *(void *)(a1 + 64) = CurrentValueSubject.init(_:)();
  sub_100012894(&qword_1004CCFF0);
  swift_getKeyPath();
  *(void *)(a1 + 72) = MutableStateValue.__allocating_init(_:_:)();
  *(void *)(a1 + 80) = [objc_allocWithZone((Class)CMMotionManager) init];
  *(unsigned char *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  swift_release();
  sub_10002B8B4((uint64_t)v5, (uint64_t)v4);
  uint64_t v2 = StateObserver.init(configuration:)();
  sub_100013218((uint64_t)v5);
  return v2;
}

uint64_t sub_100209B1C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 136);
  return swift_retain();
}

uint64_t sub_100209B2C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 104);
  return swift_retain();
}

uint64_t sub_100209B3C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for WeakLinesRendererDelegate();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v3 + 24) = &off_10048C918;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

uint64_t sub_100209C0C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for WeakLinesRendererDelegate();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v3 + 24) = &off_10048DA40;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

uint64_t sub_100209CDC(uint64_t a1, uint64_t a2)
{
  type metadata accessor for WeakLinesRendererDelegate();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v3 + 24) = &off_10048C298;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

uint64_t sub_100209DAC(uint64_t a1, uint64_t a2)
{
  type metadata accessor for WeakLinesRendererDelegate();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v3 + 24) = &off_1004893F8;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

uint64_t sub_100209E7C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for WeakCoachingControllerDelegate();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v3 + 24) = &off_100489608;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a2 + 160) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 160) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

uint64_t sub_100209F4C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for WeakCoachingControllerDelegate();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v3 + 24) = &off_100491640;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a2 + 160) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 160) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

uint64_t sub_10020A01C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for WeakCoachingControllerDelegate();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v3 + 24) = &off_10048B6F0;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a2 + 160) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 160) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

uint64_t sub_10020A0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (qword_1004C2AD8 != -1) {
    swift_once();
  }
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  *((void *)&v20 + 1) = 0x800000010042D780;
  v7._uint64_t countAndFlagsBits = KeyPath.description.getter();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 0x203A6F7420;
  v8._object = (void *)0xE500000000000000;
  String.append(_:)(v8);
  sub_100012894(&qword_1004D2990);
  NSKeyValueObservedChange.newValue.getter();
  sub_100012894(&qword_1004D2998);
  v9._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 0xD000000000000012;
  v10._object = (void *)0x800000010042D780;
  Log.debug(_:isPrivate:)(v10, 0);
  swift_bridgeObjectRelease();
  NSKeyValueObservedChange.newValue.getter();
  if (*(void *)&v18[0])
  {
    type metadata accessor for UIContentSizeCategory(0);
    *((void *)&v21 + 1) = v11;
    *(void *)&long long v20 = *(void *)&v18[0];
    BOOL v12 = v11 == 0;
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
    BOOL v12 = 1;
  }
  swift_retain();
  id v13 = a5;
  uint64_t v14 = sub_1002025D0();
  uint64_t v19 = v14;
  if (v12)
  {
    sub_10002B9C0((uint64_t)&v20, (uint64_t *)&unk_1004C7180);
    sub_1000A8C50(a4, v13, v18);

    swift_release();
    sub_10002B9C0((uint64_t)v18, (uint64_t *)&unk_1004C7180);
    uint64_t v15 = v19;
  }
  else
  {
    uint64_t v15 = v14;
    sub_100027938(&v20, v18);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1000D6750(v18, a4, v13, isUniquelyReferenced_nonNull_native);

    swift_release();
    swift_bridgeObjectRelease();
  }
  return sub_10020273C(v15);
}

uint64_t sub_10020A35C(void *a1)
{
  id v3 = [a1 view];
  if (v3)
  {
    id v4 = v3;
    id v5 = [a1 view];
    if (v5)
    {
      id v6 = v5;
      self;
      if (swift_dynamicCastObjCClass())
      {

        return 0;
      }
    }
    if ([self jasperAvailable]
      && (Swift::String v8 = *(char **)(v1 + qword_1004D2650)) != 0)
    {
      Swift::String v9 = *(void **)&v8[qword_1004CE010];
      Swift::String v10 = v8;
      id v11 = v9;
      unsigned __int8 v12 = [v4 isDescendantOfView:v11];

      if (v12) {
        return 0;
      }
    }
    else
    {
    }
  }
  return 1;
}

uint64_t sub_10020A470()
{
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10020A480(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  unint64_t result = sub_1000A4FD8(5uLL);
  *(void *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = v4;
  return result;
}

const char *sub_10020A4BC()
{
  return "preferredContentSizeCategory";
}

id sub_10020A4C8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 preferredContentSizeCategory];
  *a2 = result;
  return result;
}

BOOL sub_10020A504(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 2;
}

uint64_t sub_10020A514()
{
  return _swift_deallocObject(v0, 28, 7);
}

double sub_10020A524(uint64_t a1)
{
  double result = *(double *)(v1 + 16);
  int v3 = *(_DWORD *)(v1 + 24);
  *(double *)(a1 + 24) = result;
  *(_DWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_10020A538()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10020A570(double a1, double a2)
{
  return sub_100207E8C(a1, a2) & 1;
}

void sub_10020A598(uint64_t a1)
{
  sub_100208410(a1, *(void *)(v1 + 16));
}

uint64_t sub_10020A5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10020A5B0()
{
  return swift_release();
}

unint64_t sub_10020A5B8()
{
  unint64_t result = qword_1004D2980;
  if (!qword_1004D2980)
  {
    sub_100016EF4(&qword_1004CB958);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004D2980);
  }
  return result;
}

uint64_t sub_10020A614(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10020A67C()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10020A6CC(uint64_t a1, uint64_t a2)
{
  return sub_10020A0EC(a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_10020A6DC()
{
  return _swift_deallocObject(v0, 33, 7);
}

void sub_10020A720(char a1, double a2, double a3, double a4)
{
  Swift::String v7 = v4;
  uint64_t v9 = sub_10020BEDC(3, a2, a3, a4);
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  sub_10020BFE8(v9, v10, v12, &v209);
  uint64_t v14 = v209;
  uint64_t v15 = v210;
  uint64_t v195 = v212;
  uint64_t v191 = v215;
  uint64_t v192 = v214;
  uint64_t v16 = v217;
  uint64_t v193 = v216;
  uint64_t v17 = v219;
  uint64_t v188 = v213;
  uint64_t v189 = v218;
  uint64_t v18 = v220;
  uint64_t v180 = v221;
  uint64_t v181 = v211;
  uint64_t v179 = v222;
  uint64_t v190 = v223;
  uint64_t v187 = v224;
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v19 = v9 + v13;
  if (__OFADD__(v9, v13))
  {
    __break(1u);
    goto LABEL_72;
  }
  uint64_t v20 = v19 + v11;
  if (__OFADD__(v19, v11))
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  BOOL v21 = __OFADD__(v11, v9);
  v9 += v11;
  if (v21)
  {
LABEL_73:
    __break(1u);
LABEL_74:
    swift_once();
    uint64_t v20 = v207;
    goto LABEL_8;
  }
  double v6 = (double)v9;
  if (v20 < 1) {
    double v5 = 140.0;
  }
  else {
    double v5 = v6 * 242.487113 / (double)v20;
  }
  uint64_t v207 = v19 + v11;
  if (qword_1004C2878 != -1) {
    goto LABEL_74;
  }
LABEL_8:
  uint64_t v185 = v14;
  uint64_t v186 = v16;
  uint64_t v184 = v15;
  char v177 = a1;
  uint64_t v22 = qword_1004F7EA8;
  if (qword_1004C2880 != -1)
  {
    swift_once();
    uint64_t v20 = v207;
  }
  double v23 = *(double *)&qword_1004F7EB0;
  uint64_t v206 = v9;
  uint64_t v209 = v9;
  uint64_t v210 = v20;
  uint64_t v211 = *(void *)&v5;
  uint64_t v212 = 0x4061800000000000;
  uint64_t v213 = qword_1004F7EB0;
  uint64_t v214 = qword_1004F7EB0;
  id v183 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v24 = [objc_allocWithZone((Class)CALayer) init];
  uint64_t v25 = OBJC_IVAR____TtC7Measure12SketchObject_backgroundLines;
  uint64_t v26 = *(void **)&v7[OBJC_IVAR____TtC7Measure12SketchObject_backgroundLines];
  *(void *)&v7[OBJC_IVAR____TtC7Measure12SketchObject_backgroundLines] = v24;

  uint64_t v27 = *(void **)&v7[v25];
  if (!v27)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  id v28 = v27;
  double v29 = sub_10020C098(v16, v189, v17, v18, (uint64_t)&v209);
  id v30 = sub_100017240(v29, 1, 0, 0);

  [v28 addSublayer:v30];
  uint64_t v31 = *(void **)&v7[v25];
  if (!v31)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  id v32 = v31;
  uint64_t v33 = sub_10020C098(v17, v18, v181, v195, (uint64_t)&v209);
  id v34 = sub_100017240(v33, 1, 0, 0);

  [v32 addSublayer:v34];
  uint64_t v35 = *(void **)&v7[v25];
  if (!v35)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  id v36 = v35;
  id v37 = sub_10020C098(v17, v18, v180, v179, (uint64_t)&v209);
  id v38 = sub_100017240(v37, 1, 0, 0);

  [v36 addSublayer:v38];
  uint64_t v39 = sub_10020C1C4(v185, v15, v181, v195, v188, v192, v191, v193, v16, v189, v180, v179, v190, v187);
  uint64_t v182 = v40;
  id v41 = [objc_allocWithZone((Class)CALayer) init];
  CGRect v42 = *(void **)&v7[OBJC_IVAR____TtC7Measure12SketchObject_foregroundLines];
  uint64_t v205 = OBJC_IVAR____TtC7Measure12SketchObject_foregroundLines;
  *(void *)&v7[OBJC_IVAR____TtC7Measure12SketchObject_foregroundLines] = v41;

  id v43 = [objc_allocWithZone((Class)CALayer) init];
  uint64_t v44 = OBJC_IVAR____TtC7Measure12SketchObject_topSurface;
  double v45 = *(void **)&v7[OBJC_IVAR____TtC7Measure12SketchObject_topSurface];
  *(void *)&v7[OBJC_IVAR____TtC7Measure12SketchObject_topSurface] = v43;

  id v46 = [objc_allocWithZone((Class)CALayer) init];
  double v47 = *(void **)&v7[OBJC_IVAR____TtC7Measure12SketchObject_shortSideSurface];
  uint64_t v197 = OBJC_IVAR____TtC7Measure12SketchObject_shortSideSurface;
  *(void *)&v7[OBJC_IVAR____TtC7Measure12SketchObject_shortSideSurface] = v46;

  id v48 = [objc_allocWithZone((Class)CALayer) init];
  double v49 = *(void **)&v7[OBJC_IVAR____TtC7Measure12SketchObject_longSideSurface];
  uint64_t v196 = OBJC_IVAR____TtC7Measure12SketchObject_longSideSurface;
  *(void *)&v7[OBJC_IVAR____TtC7Measure12SketchObject_longSideSurface] = v48;

  uint64_t v50 = *(void *)(v39 + 16);
  uint64_t v178 = v25;
  uint64_t v194 = v44;
  if (v50)
  {
    double v51 = (char *)(swift_bridgeObjectRetain() + 66);
    double v52 = &off_1004B7000;
    while (1)
    {
      Swift::String v56 = *(void **)&v7[v205];
      if (!v56) {
        break;
      }
      id v57 = v7;
      uint64_t v58 = *(void *)(v51 - 34);
      uint64_t v59 = *(void *)(v51 - 26);
      uint64_t v60 = *(void *)(v51 - 18);
      uint64_t v61 = *(void *)(v51 - 10);
      char v199 = *(v51 - 1);
      char v200 = *(v51 - 2);
      char v198 = *v51;
      id v62 = v56;
      uint64_t v202 = v59;
      uint64_t v203 = v58;
      uint64_t v201 = v60;
      double v63 = sub_10020C098(v58, v59, v60, v61, (uint64_t)&v209);
      id v64 = [objc_allocWithZone((Class)CAShapeLayer) init];
      id v65 = [v63 CGPath];
      [v64 setPath:v65];

      id v66 = [self clearColor];
      double v67 = v52;
      id v68 = [v66 (SEL)v52[228]];

      [v64 setFillColor:v68];
      if (qword_1004C2858 != -1) {
        swift_once();
      }
      id v69 = [(id)qword_1004F7E88 (SEL)v67[228]];
      [v64 setStrokeColor:v69];

      double v52 = v67;
      if (qword_1004C2870 != -1) {
        swift_once();
      }
      [v64 setLineWidth:*(double *)&qword_1004F7EA0];

      [v62 addSublayer:v64];
      Swift::String v7 = v57;
      if ((v200 & 1) == 0)
      {
        id v70 = *(void **)&v57[v194];
        if (!v70) {
          goto LABEL_80;
        }
        id v71 = v70;
        double v72 = sub_10020C098(v203, v202, v201, v61, (uint64_t)&v209);
        id v73 = sub_100017240(v72, 0, 0, 0);

        [v71 addSublayer:v73];
        double v52 = &off_1004B7000;
      }
      if ((v199 & 1) == 0)
      {
        double v74 = *(void **)&v57[v197];
        if (!v74) {
          goto LABEL_81;
        }
        id v75 = v74;
        double v76 = sub_10020C098(v203, v202, v201, v61, (uint64_t)&v209);
        id v77 = sub_100017240(v76, 0, 0, 0);

        [v75 addSublayer:v77];
        double v52 = &off_1004B7000;
      }
      if ((v198 & 1) == 0)
      {
        double v78 = *(void **)&v57[v196];
        if (!v78) {
          goto LABEL_82;
        }
        id v53 = v78;
        uint64_t v54 = sub_10020C098(v203, v202, v201, v61, (uint64_t)&v209);
        id v55 = sub_100017240(v54, 0, 0, 0);

        [v53 addSublayer:v55];
      }
      v51 += 40;
      if (!--v50)
      {
        swift_bridgeObjectRelease();
        uint64_t v44 = v194;
        goto LABEL_32;
      }
    }
    __break(1u);
    goto LABEL_76;
  }
LABEL_32:
  double v204 = *(double *)&v22;
  swift_bridgeObjectRelease();
  uint64_t v79 = *(void *)(v182 + 16);
  uint64_t v80 = v195;
  uint64_t v81 = v207;
  if (v79)
  {
    double v82 = (double)v207;
    double v83 = (char *)(v182 + 50);
    while (1)
    {
      double v86 = *(void **)&v7[v205];
      if (!v86) {
        break;
      }
      double v87 = 0.0;
      double v88 = (double)*(uint64_t *)(v83 - 18);
      double v89 = 0.0;
      if (v206 >= 1) {
        double v89 = v23 + v5 * v88 / v6;
      }
      double v90 = (double)*(uint64_t *)(v83 - 10);
      if (v81 >= 1) {
        double v87 = v23 + v90 * 140.0 / v82;
      }
      char v91 = *(v83 - 2);
      char v92 = *(v83 - 1);
      char v93 = *v83;
      id v94 = v86;
      id v95 = sub_100017A14(0, v89, v87);
      [v94 addSublayer:v95];

      Swift::String v96 = *(void **)&v7[v44];
      if (!v96) {
        goto LABEL_77;
      }
      double v97 = 0.0;
      double v98 = 0.0;
      if (v206 >= 1) {
        double v98 = v23 + v5 * v88 / v6;
      }
      if (v207 >= 1) {
        double v97 = v23 + v90 * 140.0 / v82;
      }
      id v99 = v96;
      id v100 = sub_100017A14(v91, v98, v97);
      [v99 addSublayer:v100];

      id v101 = *(void **)&v7[v197];
      if (!v101) {
        goto LABEL_78;
      }
      double v102 = 0.0;
      double v103 = 0.0;
      if (v206 >= 1) {
        double v103 = v23 + v5 * v88 / v6;
      }
      if (v207 >= 1) {
        double v102 = v23 + v90 * 140.0 / v82;
      }
      id v104 = v101;
      id v105 = sub_100017A14(v92, v103, v102);
      [v104 addSublayer:v105];

      id v106 = *(void **)&v7[v196];
      if (!v106) {
        goto LABEL_79;
      }
      double v107 = 0.0;
      double v108 = 0.0;
      uint64_t v80 = v195;
      if (v206 >= 1) {
        double v108 = v23 + v5 * v88 / v6;
      }
      if (v207 >= 1) {
        double v107 = v23 + v90 * 140.0 / v82;
      }
      v83 += 24;
      id v84 = v106;
      id v85 = sub_100017A14(v93, v108, v107);
      [v84 addSublayer:v85];

      --v79;
      uint64_t v81 = v207;
      if (!v79) {
        goto LABEL_55;
      }
    }
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
LABEL_55:
  swift_bridgeObjectRelease();
  id v109 = *(void **)&v7[v44];
  if (!v109)
  {
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  id v110 = v109;
  double v111 = sub_10020C3D0(v185, v184, v181, v80, v188, v192, v191, v193, (uint64_t)&v209);
  id v112 = sub_100017240(v111, 0, 1, 0);

  [v110 addSublayer:v112];
  double v113 = *(void **)&v7[v44];
  if (!v113)
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  id v114 = v113;
  id v115 = sub_10020C3D0(v185, v184, v181, v195, v188, v192, v191, v193, (uint64_t)&v209);
  id v116 = sub_100017240(v115, 0, 1, 1);

  [v114 addSublayer:v116];
  id v117 = *(void **)&v7[v197];
  if (!v117)
  {
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  id v118 = v117;
  char v119 = sub_10020C3D0(v191, v193, v188, v192, v180, v179, v190, v187, (uint64_t)&v209);
  id v120 = sub_100017240(v119, 0, 1, 0);

  [v118 addSublayer:v120];
  uint64_t v121 = *(void **)&v7[v197];
  if (!v121)
  {
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  id v122 = v121;
  uint64_t v123 = sub_10020C3D0(v191, v193, v188, v192, v180, v179, v190, v187, (uint64_t)&v209);
  id v124 = sub_100017240(v123, 0, 1, 1);

  [v122 addSublayer:v124];
  id v125 = *(void **)&v7[v196];
  if (!v125)
  {
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  id v126 = v125;
  double v127 = sub_10020C3D0(v185, v184, v191, v193, v190, v187, v186, v189, (uint64_t)&v209);
  id v128 = sub_100017240(v127, 0, 1, 0);

  [v126 addSublayer:v128];
  double v129 = *(void **)&v7[v196];
  if (!v129)
  {
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  id v130 = v129;
  double v131 = sub_10020C3D0(v185, v184, v191, v193, v190, v187, v186, v189, (uint64_t)&v209);
  id v132 = sub_100017240(v131, 0, 1, 1);

  [v130 addSublayer:v132];
  id v133 = [v183 layer];
  if (!*(void *)&v7[v178])
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  uint64_t v134 = v133;
  [v133 addSublayer:];

  id v135 = [v183 layer];
  if (!*(void *)&v7[v205])
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  id v136 = v135;
  [v135 addSublayer:];

  id v137 = [v183 layer];
  if (!*(void *)&v7[v194])
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  long long v138 = v137;
  [v137 addSublayer:];

  id v139 = [v183 layer];
  if (!*(void *)&v7[v197])
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  id v140 = v139;
  [v139 addSublayer:];

  id v141 = [v183 layer];
  if (!*(void *)&v7[v196])
  {
LABEL_96:
    __break(1u);
    return;
  }
  double v142 = v141;
  [v141 addSublayer:];

  [*(id *)&v7[v194] setHidden:1];
  [*(id *)&v7[v197] setHidden:1];
  [*(id *)&v7[v196] setHidden:1];
  [v7 addSubview:v183];
  [v183 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v143 = [v183 widthAnchor];
  id v144 = [v143 constraintEqualToConstant:v5 + v204];

  [v144 setActive:1];
  id v145 = [v183 heightAnchor];
  id v146 = [v145 constraintEqualToConstant:v204 + 140.0];

  [v146 setActive:1];
  uint64_t v147 = (objc_class *)type metadata accessor for SketchLabel();
  id v148 = objc_allocWithZone(v147);
  id v149 = sub_100158BA8(76, 0xE100000000000000);
  [v7 addSubview:v149];
  [v149 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v150 = [v149 rightAnchor];
  id v151 = [v183 rightAnchor];
  id v152 = [v150 constraintEqualToAnchor:v151 constant:-5.0];

  [v152 setActive:1];
  id v153 = [v149 centerYAnchor];
  id v154 = [v183 centerYAnchor];
  id v155 = [v153 constraintEqualToAnchor:v154 constant:(v204 + 140.0) * -0.37];

  [v155 setActive:1];
  id v156 = objc_allocWithZone(v147);
  id v157 = sub_100158BA8(87, 0xE100000000000000);
  [v7 addSubview:v157];
  [v157 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v158 = [v157 centerXAnchor];
  id v159 = [v183 leftAnchor];
  id v160 = [v158 constraintEqualToAnchor:v159];

  [v160 setActive:1];
  id v161 = [v157 centerYAnchor];
  id v162 = [v183 topAnchor];
  id v163 = [v161 constraintEqualToAnchor:v162 constant:4.0];

  [v163 setActive:1];
  id v164 = [v157 topAnchor];
  id v165 = [v7 topAnchor];
  id v166 = [v164 constraintEqualToAnchor:v165 constant:10.0];

  [v166 setActive:1];
  id v167 = objc_allocWithZone(v147);
  uint64_t v208 = sub_100158BA8(72, 0xE100000000000000);
  [v7 addSubview:v208];
  [v208 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v168 = [v208 rightAnchor];
  id v169 = [v183 leftAnchor];
  if (qword_1004C2898 != -1) {
    swift_once();
  }
  id v170 = [v168 constraintEqualToAnchor:v169 constant:-*(double *)&qword_1004F7EC8];

  [v170 setActive:1];
  id v171 = [v208 centerYAnchor];
  id v172 = [v183 centerYAnchor];
  id v173 = [v171 constraintEqualToAnchor:v172 constant:(v204 + 140.0) * -0.1];

  [v173 setActive:1];
  id v174 = [v7 centerXAnchor];
  id v175 = [v183 centerXAnchor];
  id v176 = [v174 constraintEqualToAnchor:v175];

  [v176 setActive:1];
  sub_10020BB54(v177);
}

id sub_10020BB54(char a1)
{
  int v3 = self;
  [v3 begin];
  [v3 setDisableActions:1];
  uint64_t v4 = OBJC_IVAR____TtC7Measure12SketchObject_foregroundLines;
  [*(id *)(v1 + OBJC_IVAR____TtC7Measure12SketchObject_foregroundLines) setHidden:1];
  uint64_t v5 = OBJC_IVAR____TtC7Measure12SketchObject_topSurface;
  [*(id *)(v1 + OBJC_IVAR____TtC7Measure12SketchObject_topSurface) setHidden:1];
  uint64_t v6 = OBJC_IVAR____TtC7Measure12SketchObject_shortSideSurface;
  [*(id *)(v1 + OBJC_IVAR____TtC7Measure12SketchObject_shortSideSurface) setHidden:1];
  uint64_t v7 = OBJC_IVAR____TtC7Measure12SketchObject_longSideSurface;
  [*(id *)(v1 + OBJC_IVAR____TtC7Measure12SketchObject_longSideSurface) setHidden:1];
  switch(a1)
  {
    case 1:
      Swift::String v8 = *(void **)(v1 + v5);
      if (v8) {
        goto LABEL_7;
      }
      break;
    case 2:
      Swift::String v8 = *(void **)(v1 + v7);
      if (v8) {
        goto LABEL_7;
      }
      break;
    case 3:
      Swift::String v8 = *(void **)(v1 + v6);
      if (v8) {
        goto LABEL_7;
      }
      break;
    default:
      Swift::String v8 = *(void **)(v1 + v4);
      if (v8) {
LABEL_7:
      }
        [v8 setHidden:0];
      break;
  }

  return [v3 commit];
}

id sub_10020BD54(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Measure12SketchObject_topSurface] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Measure12SketchObject_longSideSurface] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Measure12SketchObject_shortSideSurface] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Measure12SketchObject_backgroundLines] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Measure12SketchObject_foregroundLines] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SketchObject();
  [super initWithCoder:a1];

  return v3;
}

id sub_10020BE08()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SketchObject();
  return [super dealloc];
}

uint64_t type metadata accessor for SketchObject()
{
  return self;
}

uint64_t sub_10020BEDC(uint64_t result, double a2, double a3, double a4)
{
  if (a3 <= 0.0 || a3 > a2) {
    return 2;
  }
  uint64_t v5 = result;
  if ((unint64_t)(result - 0x2000000000000000) >> 62 != 3)
  {
    __break(1u);
    goto LABEL_21;
  }
  double v6 = round(a2 / a3 * (double)result);
  if ((~*(void *)&v6 & 0x7FF0000000000000) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v6 >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v7 = (uint64_t)v6;
  if ((uint64_t)v6 <= result) {
    uint64_t v7 = result;
  }
  if (3 * result >= v7) {
    unint64_t result = v7;
  }
  else {
    result *= 3;
  }
  double v8 = round(a4 / a3 * (double)v5 + a4 / a3 * (double)v5);
  if ((~*(void *)&v8 & 0x7FF0000000000000) == 0) {
    goto LABEL_24;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v8 >= 9.22337204e18) {
LABEL_26:
  }
    __break(1u);
  return result;
}

uint64_t sub_10020BFE8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (a2 == 0x8000000000000000)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v4 = -a2;
  if (__OFSUB__(0, -a2))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (__OFADD__(a2, v4))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v5 = a2 + result;
  if (__OFADD__(a2, result))
  {
LABEL_14:
    __break(1u);
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v6 = result;
  uint64_t v7 = result;
  if (__OFSUB__(v5, a2))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  BOOL v8 = __OFSUB__(result, v4);
  uint64_t v9 = result + a2;
  if (v8)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (__OFADD__(a2, a3))
  {
LABEL_17:
    __break(1u);
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(result, a3))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  unint64_t result = v9 + a3;
  if (!__OFADD__(v9, a3))
  {
    *a4 = 0;
    a4[1] = a2;
    a4[2] = a2;
    a4[3] = 0;
    a4[4] = v5;
    a4[5] = v6;
    a4[6] = v7;
    a4[7] = v9;
    a4[8] = 0;
    a4[9] = a2 + a3;
    a4[10] = a2;
    a4[11] = a3;
    a4[12] = v5;
    a4[13] = v6 + a3;
    a4[14] = v7;
    a4[15] = result;
    return result;
  }
LABEL_19:
  __break(1u);
  return result;
}

void *sub_10020C098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v10 = [objc_allocWithZone((Class)UIBezierPath) init];
  uint64_t v11 = v10;
  double v12 = *(double *)(a5 + 16);
  uint64_t v14 = *(void *)a5;
  uint64_t v13 = *(void *)(a5 + 8);
  double v15 = *(double *)(a5 + 32);
  double v16 = 0.0;
  double v17 = (double)*(uint64_t *)a5;
  double v18 = 0.0;
  if (*(uint64_t *)a5 >= 1) {
    double v18 = v12 * (double)a1 / v17 + v15;
  }
  double v19 = *(double *)(a5 + 24);
  double v20 = *(double *)(a5 + 40);
  double v21 = (double)v13;
  if (v13 >= 1) {
    double v16 = v19 * (double)a2 / v21 + v20;
  }
  [v10 moveToPoint:v18, v16];
  double v22 = 0.0;
  double v23 = 0.0;
  if (v14 >= 1) {
    double v23 = v12 * (double)a3 / v17 + v15;
  }
  if (v13 >= 1) {
    double v22 = v19 * (double)a4 / v21 + v20;
  }
  [v11 addLineToPoint:v23, v22];
  return v11;
}

uint64_t sub_10020C1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_100012894(&qword_1004D2A00);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1003F92E0;
  *(void *)(v21 + 32) = a1;
  *(void *)(v21 + 40) = a2;
  *(void *)(v21 + 48) = a3;
  *(void *)(v21 + 56) = a4;
  *(_WORD *)(v21 + 64) = 1;
  *(unsigned char *)(v21 + 66) = 0;
  *(void *)(v21 + 72) = a1;
  *(void *)(v21 + 80) = a2;
  *(void *)(v21 + 88) = a9;
  *(void *)(v21 + 96) = a10;
  *(_WORD *)(v21 + 104) = 0;
  *(unsigned char *)(v21 + 106) = 1;
  *(void *)(v21 + 112) = a1;
  *(void *)(v21 + 120) = a2;
  *(void *)(v21 + 128) = a7;
  *(void *)(v21 + 136) = a8;
  *(_WORD *)(v21 + 144) = 1;
  *(unsigned char *)(v21 + 146) = 1;
  *(void *)(v21 + 152) = a3;
  *(void *)(v21 + 160) = a4;
  *(void *)(v21 + 168) = a5;
  *(void *)(v21 + 176) = a6;
  *(_WORD *)(v21 + 184) = 1;
  *(unsigned char *)(v21 + 186) = 0;
  *(void *)(v21 + 192) = a9;
  *(void *)(v21 + 200) = a10;
  *(void *)(v21 + 208) = a13;
  *(void *)(v21 + 216) = a14;
  *(_WORD *)(v21 + 224) = 0;
  *(unsigned char *)(v21 + 226) = 1;
  *(void *)(v21 + 232) = a7;
  *(void *)(v21 + 240) = a8;
  *(void *)(v21 + 248) = a5;
  *(void *)(v21 + 256) = a6;
  *(_WORD *)(v21 + 264) = 257;
  *(unsigned char *)(v21 + 266) = 0;
  *(void *)(v21 + 272) = a7;
  *(void *)(v21 + 280) = a8;
  *(void *)(v21 + 288) = a13;
  *(void *)(v21 + 296) = a14;
  *(_WORD *)(v21 + 304) = 256;
  *(unsigned char *)(v21 + 306) = 1;
  *(void *)(v21 + 312) = a13;
  *(void *)(v21 + 320) = a14;
  *(void *)(v21 + 328) = a11;
  *(void *)(v21 + 336) = a12;
  *(_WORD *)(v21 + 344) = 256;
  *(unsigned char *)(v21 + 346) = 0;
  *(void *)(v21 + 352) = a5;
  *(void *)(v21 + 360) = a6;
  *(void *)(v21 + 368) = a11;
  *(void *)(v21 + 376) = a12;
  *(_WORD *)(v21 + 384) = 256;
  *(unsigned char *)(v21 + 386) = 0;
  sub_100012894(&qword_1004D2A08);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1003F92B0;
  *(void *)(v22 + 32) = a1;
  *(void *)(v22 + 40) = a2;
  *(_WORD *)(v22 + 48) = 1;
  *(unsigned char *)(v22 + 50) = 1;
  *(void *)(v22 + 56) = a3;
  *(void *)(v22 + 64) = a4;
  *(_WORD *)(v22 + 72) = 1;
  *(unsigned char *)(v22 + 74) = 0;
  *(void *)(v22 + 80) = a5;
  *(void *)(v22 + 88) = a6;
  *(_WORD *)(v22 + 96) = 257;
  *(unsigned char *)(v22 + 98) = 0;
  *(void *)(v22 + 104) = a7;
  *(void *)(v22 + 112) = a8;
  *(_WORD *)(v22 + 120) = 257;
  *(unsigned char *)(v22 + 122) = 1;
  *(void *)(v22 + 128) = a9;
  *(void *)(v22 + 136) = a10;
  *(_WORD *)(v22 + 144) = 0;
  *(unsigned char *)(v22 + 146) = 1;
  *(void *)(v22 + 152) = a11;
  *(void *)(v22 + 160) = a12;
  *(_WORD *)(v22 + 168) = 256;
  *(unsigned char *)(v22 + 170) = 0;
  *(void *)(v22 + 176) = a13;
  *(void *)(v22 + 184) = a14;
  *(_WORD *)(v22 + 192) = 256;
  *(unsigned char *)(v22 + 194) = 1;
  return v21;
}

void *sub_10020C3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v15 = [objc_allocWithZone((Class)UIBezierPath) init];
  double v16 = v15;
  double v17 = *(double *)(a9 + 16);
  uint64_t v18 = *(void *)a9;
  uint64_t v19 = *(void *)(a9 + 8);
  double v20 = *(double *)(a9 + 32);
  double v21 = 0.0;
  double v22 = (double)a1;
  double v23 = (double)*(uint64_t *)a9;
  double v24 = 0.0;
  if (*(uint64_t *)a9 >= 1) {
    double v24 = v17 * v22 / v23 + v20;
  }
  double v25 = *(double *)(a9 + 24);
  double v26 = *(double *)(a9 + 40);
  double v27 = (double)a2;
  double v28 = (double)v19;
  if (v19 >= 1) {
    double v21 = v25 * v27 / v28 + v26;
  }
  [v15 moveToPoint:v24, v21, a7];
  double v29 = 0.0;
  double v30 = 0.0;
  if (v18 >= 1) {
    double v30 = v17 * (double)a3 / v23 + v20;
  }
  if (v19 >= 1) {
    double v29 = v25 * (double)a4 / v28 + v26;
  }
  [v16 addLineToPoint:v30, v29];
  double v31 = 0.0;
  double v32 = 0.0;
  if (v18 >= 1) {
    double v32 = v17 * (double)a5 / v23 + v20;
  }
  if (v19 >= 1) {
    double v31 = v25 * (double)a6 / v28 + v26;
  }
  [v16 addLineToPoint:v32, v31];
  double v33 = 0.0;
  double v34 = 0.0;
  if (v18 >= 1) {
    double v34 = v17 * (double)v39 / v23 + v20;
  }
  if (v19 >= 1) {
    double v33 = v25 * (double)a8 / v28 + v26;
  }
  [v16 addLineToPoint:v34, v33];
  double v35 = 0.0;
  double v36 = 0.0;
  if (v18 >= 1) {
    double v36 = v17 * v22 / v23 + v20;
  }
  if (v19 >= 1) {
    double v35 = v25 * v27 / v28 + v26;
  }
  [v16 addLineToPoint:v36, v35];
  return v16;
}

__n128 initializeBufferWithCopyOfBuffer for SketchObject.ObjectPoint(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SketchObject.ObjectPoint(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 19)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SketchObject.ObjectPoint(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 19) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 19) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SketchObject.ObjectPoint()
{
  return &type metadata for SketchObject.ObjectPoint;
}

__n128 initializeWithCopy for SketchObject.ObjectLine(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 31) = *(_DWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for SketchObject.ObjectLine(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 35)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SketchObject.ObjectLine(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 34) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 35) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 35) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SketchObject.ObjectLine()
{
  return &type metadata for SketchObject.ObjectLine;
}

uint64_t sub_10020C770(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)a1 + 112))();
  if (result)
  {
    sub_10020C7F4(result);
    return swift_release();
  }
  return result;
}

void sub_10020C7F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  BOOL v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  BOOL v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (id *)WorldAnchor.arSession.unsafeMutableAddressor();
  swift_beginAccess();
  if (*v9)
  {
    id v10 = [*v9 currentFrame];
    if (v10)
    {
      uint64_t v11 = v10;
      id v12 = [v10 camera];

      if (v12)
      {
        uint64_t v13 = qword_1004C3238;
        id v14 = v12;
        if (v13 != -1) {
          swift_once();
        }
        if (*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80))
        {
          __break(1u);
        }
        else
        {
          SIMD2<>.init(_:)();
          effectiveStatusBarOrientation.unsafeMutableAddressor();
          ComputedCameraProperties.init(camera:viewportSize:orientation:)();
          sub_10005536C();
          uint64_t v15 = static OS_dispatch_queue.main.getter();
          id v21 = v14;
          double v16 = (void *)v15;
          uint64_t v17 = swift_allocObject();
          swift_weakInit();
          uint64_t v18 = (void *)swift_allocObject();
          _OWORD v18[2] = v17;
          v18[3] = a1;
          memcpy(v18 + 4, v24, 0x1E0uLL);
          v23[4] = sub_10020EF90;
          v23[5] = v18;
          v23[0] = _NSConcreteStackBlock;
          v23[1] = 1107296256;
          _OWORD v23[2] = sub_100049AB4;
          v23[3] = &unk_1004944D8;
          uint64_t v19 = _Block_copy(v23);
          swift_retain();
          swift_release();
          static DispatchQoS.unspecified.getter();
          v23[0] = _swiftEmptyArrayStorage;
          sub_100039B94();
          sub_100012894((uint64_t *)&unk_1004C68E0);
          sub_100039BEC();
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v19);

          (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v2);
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        }
      }
    }
  }
}

uint64_t sub_10020CBA8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = __chkstk_darwin(v7);
  uint64_t v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 16) == 1)
  {
    sub_10005536C();
    id v12 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v13 = swift_allocObject();
    swift_weakInit();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = a1;
    aBlock[4] = sub_10020EF48;
    void aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100049AB4;
    aBlock[3] = &unk_100494488;
    uint64_t v15 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100039B94();
    sub_100012894((uint64_t *)&unk_1004C68E0);
    sub_100039BEC();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  return result;
}

void sub_10020CE5C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    uint64_t v5 = (id *)WorldAnchor.arSession.unsafeMutableAddressor();
    swift_beginAccess();
    if (*v5
      && (id v6 = [*v5 currentFrame]) != 0
      && (uint64_t v7 = v6, v8 = [v6 camera], v7, v8))
    {
      uint64_t v9 = (*(uint64_t (**)(void))(*(void *)a2 + 216))();
      if (v9)
      {
        uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v9 + 160))(v9);
        swift_release();
        id v11 = v10;
        uint64_t v12 = NSObject.hashValue.getter();

        uint64_t v13 = (uint64_t *)(v4 + 24);
        swift_beginAccess();
        if (!*(void *)(*(void *)(v4 + 24) + 16) || (sub_1000E24BC(v12), (v14 & 1) == 0))
        {
          swift_endAccess();
          id v15 = v11;
          uint64_t v16 = NSObject.hashValue.getter();

          v17._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
          String.append(_:)(v17);
          swift_bridgeObjectRelease();
          swift_beginAccess();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v84 = *v13;
          *uint64_t v13 = 0x8000000000000000;
          sub_1000D6B94(0x2320656E616C70, 0xE700000000000000, v16, isUniquelyReferenced_nonNull_native);
          *uint64_t v13 = v84;
          swift_bridgeObjectRelease();
        }
        swift_endAccess();
        uint64_t v19 = *(void (**)(void))(*(void *)a2 + 368);
        id v20 = *(id *)(v4 + 64);
        v19();
        simd_float4x4.position.getter();
        double v80 = v21;
        [v11 transform];
        simd_float4x4.up.getter();
        float32x2_t v78 = v22;
        id v23 = *(id *)(v4 + 88);
        sub_1000538E4(v23, v80, v78, 0.1, 1.0);
        double v25 = v24;

        uint64_t v26 = (*(uint64_t (**)(void))(*(void *)a2 + 448))();
        swift_beginAccess();
        id v27 = v25;
        char v28 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v85 = *(void *)(v4 + 48);
        *(void *)(v4 + 48) = 0x8000000000000000;
        sub_1000D6B6C((uint64_t)v27, v26, v28);
        *(void *)(v4 + 48) = v85;
        swift_bridgeObjectRelease();
        swift_endAccess();

        swift_bridgeObjectRelease();
      }
      uint64_t v29 = (*(uint64_t (**)(void))(*(void *)a2 + 376))();
      if ((v30 & 1) == 0)
      {
        float32x2_t v31 = (float32x2_t)v29;
        double v32 = *(void (**)(id, uint64_t))(*(void *)a2 + 368);
        id v33 = *(id *)(v4 + 64);
        v32(v33, v34);
        simd_float4x4.position.getter();
        double v79 = v35;
        id v36 = *(id *)(v4 + 80);
        sub_1000538E4(v36, v79, vsub_f32(0, v31), 0.1, 1.0);
        id v38 = v37;

        uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 448))(v39, v40);
        swift_beginAccess();
        id v42 = v38;
        char v43 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v86 = *(void *)(v4 + 56);
        *(void *)(v4 + 56) = 0x8000000000000000;
        sub_1000D6B6C((uint64_t)v42, v41, v43);
        *(void *)(v4 + 56) = v86;
        swift_bridgeObjectRelease();
        swift_endAccess();

        swift_bridgeObjectRelease();
      }
      uint64_t v44 = *(void **)(v4 + 72);
      uint64_t v45 = qword_1004C3238;
      id v46 = v8;
      id v47 = v44;
      if (v45 != -1) {
        swift_once();
      }
      if (*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80))
      {
        __break(1u);
      }
      else
      {

        SIMD2<>.init(_:)();
        effectiveStatusBarOrientation.unsafeMutableAddressor();
        ComputedCameraProperties.init(camera:viewportSize:orientation:)();
        uint64_t v48 = type metadata accessor for MeasureCamera();
        (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 368))(v48, v49);
        simd_float4x4.position.getter();
        static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
        float v52 = 0.0;
        if ((LODWORD(v50) & 0x7FFFFF) != 0) {
          float v53 = 0.0;
        }
        else {
          float v53 = v50;
        }
        if ((~LODWORD(v50) & 0x7F800000) != 0) {
          float v53 = v50;
        }
        float v54 = v51;
        if ((LODWORD(v51) & 0x7FFFFF) == 0) {
          float v52 = v51;
        }
        if ((~LODWORD(v51) & 0x7F800000) == 0) {
          float v54 = v52;
        }
        id v55 = [objc_allocWithZone((Class)UILabel) initWithFrame:v53, v54, 100.0, 100.0];
        sub_10020D8EC(a2);
        NSString v56 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v55 setText:v56];

        id v57 = self;
        id v58 = [v57 yellowColor];
        [v55 setTextColor:v58];

        id v59 = [v57 blackColor];
        [v55 setShadowColor:v59];

        [v55 setShadowOffset:1.0, 1.0];
        [v55 setNumberOfLines:0];
        NSString v60 = String._bridgeToObjectiveC()();
        uint64_t v61 = self;
        id v62 = [v61 fontWithName:v60 size:10.0];

        [v55 setFont:v62];
        id v63 = [*(id *)(v4 + 72) addSubview:v55];
        id v64 = *(uint64_t (**)(id))(*(void *)a2 + 448);
        uint64_t v65 = v64(v63);
        swift_beginAccess();
        id v66 = v55;
        char v67 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v81 = *(void *)(v4 + 32);
        *(void *)(v4 + 32) = 0x8000000000000000;
        sub_1000D69E8((uint64_t)v66, v65, v67);
        *(void *)(v4 + 32) = v81;
        swift_bridgeObjectRelease();
        swift_endAccess();
        sub_10020D8EC(a2);
        NSString v68 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v66 setText:v68];

        id v69 = [v57 yellowColor];
        [v66 setTextColor:v69];

        [v66 setNumberOfLines:0];
        NSString v70 = String._bridgeToObjectiveC()();
        id v71 = [v61 fontWithName:v70 size:10.0];

        [v66 setFont:v71];
        uint64_t v72 = v64([*(id *)(v4 + 72) addSubview:v66]);
        swift_beginAccess();
        id v73 = v66;
        char v74 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v82 = *(void *)(v4 + 32);
        *(void *)(v4 + 32) = 0x8000000000000000;
        sub_1000D69E8((uint64_t)v73, v72, v74);
        *(void *)(v4 + 32) = v82;
        swift_bridgeObjectRelease();
        uint64_t v75 = swift_endAccess();
        uint64_t v76 = v64((id)v75);
        swift_beginAccess();
        char v77 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v83 = *(void *)(v4 + 40);
        *(void *)(v4 + 40) = 0x8000000000000000;
        sub_1000D68B8(0, v76, v77);
        *(void *)(v4 + 40) = v83;
        swift_bridgeObjectRelease();
        swift_endAccess();

        swift_release();
      }
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_10020D8EC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t result = (*(uint64_t (**)(void))(*(void *)a1 + 216))();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = *(unsigned __int8 *)(result + 48);
    unint64_t v7 = 0xE500000000000000;
    uint64_t v8 = 0x74694B7261;
    switch(v6)
    {
      case 1:
        unint64_t v7 = 0xE800000000000000;
        uint64_t v8 = 0x6465727265666E69;
        break;
      case 2:
        unint64_t v7 = 0xE800000000000000;
        uint64_t v8 = 0x6B6361626C6C6166;
        break;
      case 3:
        uint64_t v8 = 0x6C61636F6CLL;
        break;
      case 4:
        unint64_t v7 = 0xE800000000000000;
        uint64_t v8 = 0x73756F6976657270;
        break;
      case 5:
        uint64_t v8 = 0x6863746170;
        break;
      case 6:
        unint64_t v7 = 0xEA00000000006874;
        uint64_t v8 = 0x706544656C707061;
        break;
      default:
        break;
    }
    unint64_t v9 = v7;
    String.append(_:)(*(Swift::String *)&v8);
    swift_bridgeObjectRelease();
    v10._uint64_t countAndFlagsBits = 10;
    v10._object = (void *)0xE100000000000000;
    String.append(_:)(v10);
    v11._uint64_t countAndFlagsBits = 0x203A65707974;
    v11._object = (void *)0xE600000000000000;
    String.append(_:)(v11);
    swift_bridgeObjectRelease();
    v12._uint64_t countAndFlagsBits = 0x203A6C6562616CLL;
    v12._object = (void *)0xE700000000000000;
    String.append(_:)(v12);
    LOBYTE(v55) = (*(uint64_t (**)(void))(*(void *)v5 + 192))();
    _print_unlocked<A, B>(_:_:)();
    v13._uint64_t countAndFlagsBits = 10;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    v14._uint64_t countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    v15._uint64_t countAndFlagsBits = 0x6E656469666E6F63;
    v15._object = (void *)0xEC000000203A6563;
    String.append(_:)(v15);
    (*(void (**)(uint64_t))(*(void *)a1 + 192))(v16);
    Float.write<A>(to:)();
    v17._uint64_t countAndFlagsBits = 10;
    v17._object = (void *)0xE100000000000000;
    String.append(_:)(v17);
    v18._uint64_t countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    v19._uint64_t countAndFlagsBits = 0x6E6F63656E616C70;
    v19._object = (void *)0xEB00000000203A66;
    String.append(_:)(v19);
    (*(void (**)(uint64_t))(*(void *)v5 + 232))(v20);
    Float.write<A>(to:)();
    v21._uint64_t countAndFlagsBits = 10;
    v21._object = (void *)0xE100000000000000;
    String.append(_:)(v21);
    v22._uint64_t countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    String.append(_:)(v22);
    uint64_t v23 = swift_bridgeObjectRelease();
    uint64_t v24 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 448))(v23);
    swift_beginAccess();
    uint64_t v25 = *(void *)(v1 + 40);
    if (*(void *)(v25 + 16) && (unint64_t v26 = sub_1000E24BC(v24), (v27 & 1) != 0))
    {
      uint64_t v28 = *(void *)(*(void *)(v25 + 56) + 8 * v26);
      swift_endAccess();
      uint64_t v55 = v28;
      v29._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v29);
      swift_bridgeObjectRelease();
      v30._uint64_t countAndFlagsBits = 10;
      v30._object = (void *)0xE100000000000000;
      String.append(_:)(v30);
      v31._uint64_t countAndFlagsBits = 0x2320657461647075;
      v31._object = (void *)0xE800000000000000;
      String.append(_:)(v31);
      uint64_t v32 = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = swift_endAccess();
    }
    id v33 = (id)(*(uint64_t (**)(uint64_t))(*(void *)v5 + 160))(v32);
    uint64_t v34 = NSObject.hashValue.getter();

    swift_beginAccess();
    uint64_t v35 = *(void *)(v2 + 24);
    if (*(void *)(v35 + 16) && (unint64_t v36 = sub_1000E24BC(v34), (v37 & 1) != 0))
    {
      id v38 = (uint64_t *)(*(void *)(v35 + 56) + 16 * v36);
      uint64_t v39 = *v38;
      uint64_t v40 = (void *)v38[1];
      swift_endAccess();
      swift_bridgeObjectRetain();
      v41._uint64_t countAndFlagsBits = v39;
      v41._object = v40;
      String.append(_:)(v41);
      swift_bridgeObjectRelease();
      v42._uint64_t countAndFlagsBits = 10;
      v42._object = (void *)0xE100000000000000;
      String.append(_:)(v42);
    }
    else
    {
      swift_endAccess();
    }
    self;
    uint64_t v43 = swift_dynamicCastObjCClass();
    if (v43)
    {
      uint64_t v44 = (void *)v43;
      id v45 = v33;
      v46._uint64_t countAndFlagsBits = 2130895;
      v46._object = (void *)0xA300000000000000;
      String.append(_:)(v46);
      [v44 uncertaintyAlongNormal:v55];
      Float.write<A>(to:)();
      v47._uint64_t countAndFlagsBits = 10;
      v47._object = (void *)0xE100000000000000;
      String.append(_:)(v47);
      v48._uint64_t countAndFlagsBits = 0;
      v48._object = (void *)0xE000000000000000;
      String.append(_:)(v48);

      uint64_t v43 = swift_bridgeObjectRelease();
    }
    char v49 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 168))(v43);
    BOOL v50 = (v49 & 1) == 0;
    if (v49) {
      uint64_t v51 = 1702195828;
    }
    else {
      uint64_t v51 = 0x65736C6166;
    }
    if (v50) {
      unint64_t v52 = 0xE500000000000000;
    }
    else {
      unint64_t v52 = 0xE400000000000000;
    }
    unint64_t v53 = v52;
    String.append(_:)(*(Swift::String *)&v51);
    swift_bridgeObjectRelease();
    v54._uint64_t countAndFlagsBits = 0x203A6F747561;
    v54._object = (void *)0xE600000000000000;
    String.append(_:)(v54);
    swift_release();

    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_10020DF2C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v35 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  uint64_t result = __chkstk_darwin(v6);
  unint64_t v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 16) == 1)
  {
    Swift::String v10 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 448);
    v31[1] = *(void *)a1 + 448;
    uint64_t v32 = v10;
    uint64_t v11 = v10(result);
    swift_beginAccess();
    Swift::String v12 = (void *)sub_1000A8D74(v11);
    uint64_t v13 = swift_endAccess();
    if (v12)
    {
      sub_10005536C();
      Swift::String v14 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v12;
      uint64_t v40 = sub_10020EFB4;
      uint64_t v41 = v15;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v37 = 1107296256;
      id v38 = sub_100049AB4;
      uint64_t v39 = &unk_100494410;
      uint64_t v16 = _Block_copy(&aBlock);
      id v17 = v12;
      swift_release();
      static DispatchQoS.unspecified.getter();
      uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
      sub_100039B94();
      sub_100012894((uint64_t *)&unk_1004C68E0);
      sub_100039BEC();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v16);

      (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v3);
      uint64_t v13 = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v9, v34);
    }
    uint64_t v18 = v32(v13);
    swift_beginAccess();
    Swift::String v19 = (void *)sub_1000A8D74(v18);
    uint64_t v20 = swift_endAccess();
    if (v19)
    {
      sub_10005536C();
      Swift::String v21 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = v19;
      uint64_t v40 = sub_10020EEC0;
      uint64_t v41 = v22;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v37 = 1107296256;
      id v38 = sub_100049AB4;
      uint64_t v39 = &unk_1004943C0;
      uint64_t v23 = _Block_copy(&aBlock);
      id v24 = v19;
      swift_release();
      static DispatchQoS.unspecified.getter();
      uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
      sub_100039B94();
      sub_100012894((uint64_t *)&unk_1004C68E0);
      sub_100039BEC();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v23);

      (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v3);
      uint64_t v20 = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v9, v34);
    }
    uint64_t v25 = v32(v20);
    swift_beginAccess();
    unint64_t v26 = (void *)sub_1000A8D5C(v25);
    uint64_t result = swift_endAccess();
    if (v26)
    {
      sub_10005536C();
      char v27 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v26;
      uint64_t v40 = sub_10020EE98;
      uint64_t v41 = v28;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v37 = 1107296256;
      id v38 = sub_100049AB4;
      uint64_t v39 = &unk_100494370;
      Swift::String v29 = _Block_copy(&aBlock);
      id v30 = v26;
      swift_release();
      static DispatchQoS.unspecified.getter();
      uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
      sub_100039B94();
      sub_100012894((uint64_t *)&unk_1004C68E0);
      sub_100039BEC();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v29);

      (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v3);
      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v9, v34);
    }
  }
  return result;
}

void *sub_10020E564(void *result)
{
  if (*(unsigned char *)(v1 + 16) == 1)
  {
    uint64_t v2 = (uint64_t (**)(void))(*result + 448);
    uint64_t v3 = *v2;
    uint64_t v4 = (*v2)();
    uint64_t v5 = v3();
    uint64_t v6 = (uint64_t *)(v1 + 40);
    swift_beginAccess();
    uint64_t v7 = *(void *)(v1 + 40);
    if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1000E24BC(v5), (v9 & 1) != 0)) {
      uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
    }
    else {
      uint64_t v10 = 0;
    }
    uint64_t result = (void *)swift_endAccess();
    if (__OFADD__(v10, 1))
    {
      __break(1u);
    }
    else
    {
      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v12 = *v6;
      *uint64_t v6 = 0x8000000000000000;
      sub_1000D68B8(v10 + 1, v4, isUniquelyReferenced_nonNull_native);
      *uint64_t v6 = v12;
      swift_bridgeObjectRelease();
      return (void *)swift_endAccess();
    }
  }
  return result;
}

void sub_10020E698(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v4 = Strong;
  type metadata accessor for MeasureCamera();
  uint64_t v5 = (void (**)(void))(*(void *)a2 + 368);
  uint64_t v6 = *v5;
  (*v5)();
  simd_float4x4.position.getter();
  static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
  CGPoint v70 = (CGPoint)vcvtq_f64_f32(v7);
  [*(id *)(v4 + 72) frame];
  BOOL v67 = CGRectContainsPoint(v74, v70);
  unint64_t v8 = *(uint64_t (**)(void))(*(void *)a2 + 448);
  uint64_t v9 = v8();
  swift_beginAccess();
  uint64_t v10 = *(void *)(v4 + 48);
  if (*(void *)(v10 + 16) && (unint64_t v11 = sub_1000E24BC(v9), (v12 & 1) != 0))
  {
    id v71 = *(void **)(*(void *)(v10 + 56) + 8 * v11);
    id v13 = v71;
  }
  else
  {
    id v71 = 0;
  }
  uint64_t v14 = swift_endAccess();
  uint64_t v15 = ((uint64_t (*)(uint64_t))v8)(v14);
  swift_beginAccess();
  uint64_t v16 = *(void *)(v4 + 56);
  if (*(void *)(v16 + 16) && (unint64_t v17 = sub_1000E24BC(v15), (v18 & 1) != 0))
  {
    NSString v68 = *(void **)(*(void *)(v16 + 56) + 8 * v17);
    id v19 = v68;
  }
  else
  {
    NSString v68 = 0;
  }
  uint64_t v20 = swift_endAccess();
  uint64_t v21 = ((uint64_t (*)(uint64_t))v8)(v20);
  swift_beginAccess();
  uint64_t v22 = *(void *)(v4 + 32);
  if (*(void *)(v22 + 16) && (unint64_t v23 = sub_1000E24BC(v21), (v24 & 1) != 0))
  {
    uint64_t v25 = *(void **)(*(void *)(v22 + 56) + 8 * v23);
    id v26 = v25;
  }
  else
  {
    uint64_t v25 = 0;
  }
  uint64_t v27 = swift_endAccess();
  if (v71)
  {
    uint64_t v28 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 216))(v27);
    if (v28)
    {
      uint64_t v65 = v25;
      Swift::String v29 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v28 + 160))(v28);
      swift_release();
      [v71 removeFromSuperlayer];
      id v30 = *(id *)(v4 + 64);
      id v66 = v6;
      v6();
      simd_float4x4.position.getter();
      double v62 = v31;
      [v29 transform];
      simd_float4x4.up.getter();
      float32x2_t v61 = v32;
      id v33 = *(id *)(v4 + 88);
      sub_1000538E4(v33, v62, v61, 0.1, 1.0);
      uint64_t v35 = v34;

      uint64_t v36 = swift_bridgeObjectRelease();
      id v71 = v35;
      uint64_t v37 = ((uint64_t (*)(uint64_t))v8)(v36);
      swift_beginAccess();
      id v38 = v35;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v72 = *(void *)(v4 + 48);
      *(void *)(v4 + 48) = 0x8000000000000000;
      sub_1000D6B6C((uint64_t)v38, v37, isUniquelyReferenced_nonNull_native);
      *(void *)(v4 + 48) = v72;
      swift_bridgeObjectRelease();
      swift_endAccess();
      id v40 = v38;
      [v40 setHidden:!v67];

      uint64_t v41 = v68;
      if (!v68) {
        goto LABEL_24;
      }
      goto LABEL_20;
    }
  }
  uint64_t v41 = v68;
  if (v68)
  {
    uint64_t v65 = v25;
    id v66 = v6;
LABEL_20:
    Swift::String v42 = (void (**)(void))(*(void *)a2 + 376);
    uint64_t v43 = *v42;
    (*v42)();
    if (v44)
    {
      uint64_t v6 = v66;
LABEL_25:
      uint64_t v25 = v65;
      goto LABEL_26;
    }
    [v41 removeFromSuperlayer];
    id v69 = v41;
    id v45 = *(id *)(v4 + 64);
    v66();
    uint64_t v46 = simd_float4x4.position.getter();
    double v64 = v47;
    float32x2_t v48 = (float32x2_t)((uint64_t (*)(uint64_t))v43)(v46);
    if (v49)
    {
      __break(1u);
      return;
    }
    float32x2_t v63 = vsub_f32(0, v48);
    id v50 = *(id *)(v4 + 80);
    sub_1000538E4(v50, v64, v63, 0.1, 1.0);
    unint64_t v52 = v51;

    uint64_t v53 = swift_bridgeObjectRelease();
    uint64_t v54 = ((uint64_t (*)(uint64_t))v8)(v53);
    swift_beginAccess();
    id v55 = v52;
    char v56 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v73 = *(void *)(v4 + 56);
    *(void *)(v4 + 56) = 0x8000000000000000;
    sub_1000D6B6C((uint64_t)v55, v54, v56);
    *(void *)(v4 + 56) = v73;
    swift_bridgeObjectRelease();
    swift_endAccess();
    [v55 setHidden:!v67];
    uint64_t v41 = v52;
LABEL_24:
    uint64_t v6 = v66;
    goto LABEL_25;
  }
LABEL_26:
  if (v25)
  {
    id v57 = v25;
    v6();
    simd_float4x4.position.getter();
    static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
    [v57 setFrame:v59, v58, 100.0];
    sub_10020D8EC(a2);
    NSString v60 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v57 setText:v60];

    [v57 setHidden:!v67];
  }
  swift_release();
}

id *sub_10020ED3C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_10020ED9C()
{
  sub_10020ED3C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WorldAnchorDebugVisual()
{
  return self;
}

uint64_t sub_10020EDF4(uint64_t a1)
{
  return sub_10020CBA8(a1);
}

void *sub_10020EE18(void *a1)
{
  return sub_10020E564(a1);
}

uint64_t sub_10020EE3C(uint64_t a1)
{
  return sub_10020DF2C(a1);
}

uint64_t sub_10020EE60()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_10020EE98()
{
  return [*(id *)(v0 + 16) removeFromSuperview];
}

uint64_t sub_10020EEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10020EEB8()
{
  return swift_release();
}

id sub_10020EEC0()
{
  return [*(id *)(v0 + 16) removeFromSuperlayer];
}

uint64_t sub_10020EED0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10020EF08()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10020EF48()
{
  sub_10020CE5C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10020EF50()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 512, 15);
}

void sub_10020EF90()
{
  sub_10020E698(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10020EFC8()
{
  sub_100012894(&qword_1004C69A0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1004046A0;
  if (qword_1004C3250 != -1) {
    swift_once();
  }
  uint64_t v1 = *((void *)&xmmword_1004F8AD0 + 1);
  uint64_t v2 = qword_1004F8AE0;
  *(void *)(v0 + 32) = xmmword_1004F8AD0;
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = qword_1004C3258;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = *((void *)&xmmword_1004F8AF0 + 1);
  uint64_t v5 = qword_1004F8B00;
  *(void *)(v0 + 56) = xmmword_1004F8AF0;
  *(void *)(v0 + 64) = v4;
  *(void *)(v0 + 72) = v5;
  uint64_t v6 = qword_1004C3260;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = *((void *)&xmmword_1004F8B10 + 1);
  uint64_t v8 = qword_1004F8B20;
  *(void *)(v0 + 80) = xmmword_1004F8B10;
  *(void *)(v0 + 88) = v7;
  *(void *)(v0 + 96) = v8;
  uint64_t v9 = qword_1004C3268;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v10 = *((void *)&xmmword_1004F8B30 + 1);
  uint64_t v11 = qword_1004F8B40;
  *(void *)(v0 + 104) = xmmword_1004F8B30;
  *(void *)(v0 + 112) = v10;
  *(void *)(v0 + 120) = v11;
  uint64_t v12 = qword_1004C3270;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = unk_1004F8B50;
  uint64_t v14 = qword_1004F8B58;
  *(void *)(v0 + 128) = qword_1004F8B48;
  *(void *)(v0 + 136) = v13;
  *(void *)(v0 + 144) = v14;
  uint64_t v15 = qword_1004C3278;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = *((void *)&xmmword_1004F8B60 + 1);
  uint64_t v17 = qword_1004F8B70;
  *(void *)(v0 + 152) = xmmword_1004F8B60;
  *(void *)(v0 + 160) = v16;
  *(void *)(v0 + 168) = v17;
  uint64_t v18 = qword_1004C3280;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = unk_1004F8B80;
  uint64_t v20 = qword_1004F8B88;
  *(void *)(v0 + 176) = qword_1004F8B78;
  *(void *)(v0 + 184) = v19;
  *(void *)(v0 + 192) = v20;
  uint64_t v21 = qword_1004C3288;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21 != -1) {
    swift_once();
  }
  uint64_t v22 = *(void *)algn_1004F8B98;
  uint64_t v23 = qword_1004F8BA0;
  *(void *)(v0 + 200) = qword_1004F8B90;
  *(void *)(v0 + 208) = v22;
  *(void *)(v0 + 216) = v23;
  uint64_t v24 = qword_1004C3290;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v25 = unk_1004F8BB0;
  uint64_t v26 = qword_1004F8BB8;
  *(void *)(v0 + 224) = qword_1004F8BA8;
  *(void *)(v0 + 232) = v25;
  *(void *)(v0 + 240) = v26;
  uint64_t v27 = qword_1004C3298;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27 != -1) {
    swift_once();
  }
  uint64_t v28 = *(void *)algn_1004F8BC8;
  uint64_t v29 = qword_1004F8BD0;
  *(void *)(v0 + 248) = qword_1004F8BC0;
  *(void *)(v0 + 256) = v28;
  *(void *)(v0 + 264) = v29;
  uint64_t v30 = qword_1004C32A0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30 != -1) {
    swift_once();
  }
  uint64_t v31 = unk_1004F8BE0;
  uint64_t v32 = qword_1004F8BE8;
  *(void *)(v0 + 272) = qword_1004F8BD8;
  *(void *)(v0 + 280) = v31;
  *(void *)(v0 + 288) = v32;
  uint64_t v33 = qword_1004C32A8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v33 != -1) {
    swift_once();
  }
  uint64_t v34 = *((void *)&xmmword_1004F8BF0 + 1);
  uint64_t v35 = qword_1004F8C00;
  *(void *)(v0 + 296) = xmmword_1004F8BF0;
  *(void *)(v0 + 304) = v34;
  *(void *)(v0 + 312) = v35;
  uint64_t v36 = qword_1004C32B0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v36 != -1) {
    swift_once();
  }
  uint64_t v37 = *((void *)&xmmword_1004F8C10 + 1);
  uint64_t v38 = qword_1004F8C20;
  *(void *)(v0 + 320) = xmmword_1004F8C10;
  *(void *)(v0 + 328) = v37;
  *(void *)(v0 + 336) = v38;
  uint64_t v39 = qword_1004C32B8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v39 != -1) {
    swift_once();
  }
  uint64_t v40 = *((void *)&xmmword_1004F8C30 + 1);
  uint64_t v41 = qword_1004F8C40;
  *(void *)(v0 + 344) = xmmword_1004F8C30;
  *(void *)(v0 + 352) = v40;
  *(void *)(v0 + 360) = v41;
  uint64_t v42 = qword_1004C32C0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v42 != -1) {
    swift_once();
  }
  uint64_t v43 = *((void *)&xmmword_1004F8C50 + 1);
  uint64_t v44 = qword_1004F8C60;
  *(void *)(v0 + 368) = xmmword_1004F8C50;
  *(void *)(v0 + 376) = v43;
  *(void *)(v0 + 384) = v44;
  uint64_t v45 = qword_1004C32C8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v45 != -1) {
    swift_once();
  }
  uint64_t v46 = *((void *)&xmmword_1004F8C70 + 1);
  uint64_t v47 = qword_1004F8C80;
  *(void *)(v0 + 392) = xmmword_1004F8C70;
  *(void *)(v0 + 400) = v46;
  *(void *)(v0 + 408) = v47;
  uint64_t v48 = qword_1004C32D0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v48 != -1) {
    swift_once();
  }
  uint64_t v49 = *((void *)&xmmword_1004F8C90 + 1);
  uint64_t v50 = qword_1004F8CA0;
  *(void *)(v0 + 416) = xmmword_1004F8C90;
  *(void *)(v0 + 424) = v49;
  *(void *)(v0 + 432) = v50;
  uint64_t v51 = qword_1004C32D8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v51 != -1) {
    swift_once();
  }
  uint64_t v52 = *((void *)&xmmword_1004F8CB0 + 1);
  uint64_t v53 = qword_1004F8CC0;
  *(void *)(v0 + 440) = xmmword_1004F8CB0;
  *(void *)(v0 + 448) = v52;
  *(void *)(v0 + 456) = v53;
  uint64_t v54 = qword_1004C32E0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v54 != -1) {
    swift_once();
  }
  uint64_t v55 = *((void *)&xmmword_1004F8CD0 + 1);
  uint64_t v56 = qword_1004F8CE0;
  *(void *)(v0 + 464) = xmmword_1004F8CD0;
  *(void *)(v0 + 472) = v55;
  *(void *)(v0 + 480) = v56;
  qword_1004F8AC0 = v0;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

double sub_10020F664()
{
  double result = 1.27967851e-152;
  xmmword_1004F8AD0 = xmmword_1004046B0;
  qword_1004F8AE0 = (uint64_t)&_swiftEmptyArrayStorage;
  return result;
}

double sub_10020F688()
{
  *(void *)&double result = 1668507981;
  xmmword_1004F8AF0 = xmmword_1004046C0;
  qword_1004F8B00 = (uint64_t)&off_100485EF8;
  return result;
}

double sub_10020F6AC()
{
  double result = 6.52464239e179;
  xmmword_1004F8B10 = xmmword_1004046D0;
  qword_1004F8B20 = (uint64_t)&off_100485F48;
  return result;
}

double sub_10020F6D0()
{
  double result = 1.24010713e180;
  xmmword_1004F8B30 = xmmword_1004046E0;
  qword_1004F8B40 = (uint64_t)&off_100485FF8;
  return result;
}

void sub_10020F6F4()
{
  qword_1004F8B48 = 0xD000000000000010;
  unk_1004F8B50 = 0x800000010042D980;
  qword_1004F8B58 = (uint64_t)&off_100486048;
}

double sub_10020F728()
{
  double result = 1.24009431e180;
  xmmword_1004F8B60 = xmmword_1004046F0;
  qword_1004F8B70 = (uint64_t)&off_100486128;
  return result;
}

void sub_10020F74C()
{
  qword_1004F8B78 = 0xD000000000000013;
  unk_1004F8B80 = 0x800000010042D960;
  qword_1004F8B88 = (uint64_t)&off_1004862C8;
}

void sub_10020F780()
{
  qword_1004F8B90 = 0xD000000000000024;
  *(void *)algn_1004F8B98 = 0x800000010042D930;
  qword_1004F8BA0 = (uint64_t)&off_100486438;
}

void sub_10020F7B4()
{
  qword_1004F8BA8 = 0xD00000000000001BLL;
  unk_1004F8BB0 = 0x800000010042D910;
  qword_1004F8BB8 = (uint64_t)&off_1004864E8;
}

void sub_10020F7E8()
{
  qword_1004F8BC0 = 0xD00000000000001BLL;
  *(void *)algn_1004F8BC8 = 0x800000010042D8F0;
  qword_1004F8BD0 = (uint64_t)&off_100486598;
}

void sub_10020F81C()
{
  qword_1004F8BD8 = 0xD000000000000016;
  unk_1004F8BE0 = 0x800000010042D8D0;
  qword_1004F8BE8 = (uint64_t)&off_1004867C8;
}

double sub_10020F850()
{
  double result = 7.47319099e252;
  xmmword_1004F8BF0 = xmmword_100404700;
  qword_1004F8C00 = (uint64_t)&off_1004868A8;
  return result;
}

double sub_10020F874()
{
  double result = 5.42901698e213;
  xmmword_1004F8C10 = xmmword_100404710;
  qword_1004F8C20 = (uint64_t)&off_100486928;
  return result;
}

double sub_10020F898()
{
  *(void *)&double result = 0x7365646F4DLL;
  xmmword_1004F8C30 = xmmword_100404720;
  qword_1004F8C40 = (uint64_t)&off_1004869A8;
  return result;
}

double sub_10020F8BC()
{
  double result = 4.82338309e228;
  xmmword_1004F8C50 = xmmword_100404730;
  qword_1004F8C60 = (uint64_t)&off_1004869F8;
  return result;
}

double sub_10020F8E0()
{
  *(void *)&double result = 19533;
  xmmword_1004F8C70 = xmmword_100404740;
  qword_1004F8C80 = (uint64_t)&off_100486B08;
  return result;
}

double sub_10020F904()
{
  double result = 2.79565582e39;
  xmmword_1004F8C90 = xmmword_100404750;
  qword_1004F8CA0 = (uint64_t)&off_100486BE8;
  return result;
}

double sub_10020F928()
{
  double result = 9.08366775e223;
  xmmword_1004F8CB0 = xmmword_100404760;
  qword_1004F8CC0 = (uint64_t)&off_100486CF8;
  return result;
}

double sub_10020F94C()
{
  double result = 1.04272728e-306;
  xmmword_1004F8CD0 = xmmword_100404770;
  qword_1004F8CE0 = (uint64_t)&off_100486D48;
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void *sub_10020F994(void *a1)
{
  *a1 = off_100494510;
  sub_1002D6AE8(v3, &off_100494550);
  if (v4) {
    sub_1002D6888(v3);
  }
  return a1;
}

uint64_t sub_10020FA00(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 8)) {
    sub_1002D6888((unsigned char *)a1);
  }
  return a1;
}

void *sub_10020FA38(void *a1)
{
  *a1 = off_100494510;
  sub_1002D6AE8(v3, &off_100494570);
  if (v4) {
    sub_1002D6888(v3);
  }
  return a1;
}

void *sub_10020FAA8(void *a1)
{
  *a1 = off_100494510;
  sub_1002D6AE8(v3, &off_100494570);
  if (v4) {
    sub_1002D6888(v3);
  }
  return a1;
}

void sub_10020FB18(void *a1)
{
  *a1 = off_100494510;
  sub_1002D6AE8(v1, &off_100494570);
  if (v2) {
    sub_1002D6888(v1);
  }
  operator delete();
}

void sub_10020FB9C(uint64_t a1, char **a2)
{
  sub_1002D6AE8(v7, &off_100494590);
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  sub_1002BAB8C((uint64_t)v6, a2, 1u, (uint64_t)&v9);
  sub_1002D1A1C(&v9);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a1 + 56))(v5, a1);
  uint64_t v4 = sub_1002BB038((uint64_t)v6, (uint64_t)v5);
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  *(unsigned char *)sub_1002D19D8(&v9, 1) = 123;
  sub_1002BB038(v4, (uint64_t)&v9);
  sub_1002D1A1C(&v9);
  sub_1002D1A1C(v5);
  (*(void (**)(uint64_t, unsigned char *))(*(void *)a1 + 24))(a1, v6);
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  *(unsigned char *)sub_1002D19D8(&v9, 1) = 125;
  sub_1002BB038((uint64_t)v6, (uint64_t)&v9);
  sub_1002D1A1C(&v9);
  sub_1002BAB88(v6);
  if (v8) {
    sub_1002D6888(v7);
  }
}

void sub_10020FCE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1002D1A1C((uint64_t *)(v4 - 32));
  sub_1002BAB88(va);
  sub_10020FA00(v4 - 48);
  _Unwind_Resume(a1);
}

void sub_10020FD5C(void *a1@<X8>)
{
  sub_1002D6AE8(v3, &off_1004945B0);
  *a1 = 0;
  a1[1] = 0;
  uint64_t v2 = sub_1002D19D8(a1, 9);
  *(unsigned char *)(v2 + 8) = 116;
  *(void *)uint64_t v2 = *(void *)"my_object";
  if (v4) {
    sub_1002D6888(v3);
  }
}

void sub_10020FDD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10020FDF0()
{
  return 0;
}

void *sub_10020FDF8(size_t size)
{
  memptr = 0;
  if (malloc_type_posix_memalign(&memptr, 0x40uLL, size, 0x47698D01uLL))
  {
    memptr = 0;
    goto LABEL_3;
  }
  double result = memptr;
  if (!memptr)
  {
LABEL_3:
    sub_1002D1F78(v4, "Failed to allocate %llu bytes", size);
    sub_1002D2278(-4, v4, "OutOfMemoryError", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/alloc.cpp", 55);
  }
  return result;
}

void sub_10020FEA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1002D1A1C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10020FEC0(uint64_t a1, unsigned int a2, unsigned char *a3, uint64_t a4)
{
  char v6 = a2;
  uint64_t v8 = *(unsigned int *)(a1 + 4);
  if ((int)v8 >= 3)
  {
    uint64_t v10 = *(int32x4_t **)(a1 + 64);
    if (v8 >= 8)
    {
      uint64_t v11 = v8 & 0x7FFFFFF8;
      uint64_t v12 = v10 + 1;
      v13.i64[0] = 0x100000001;
      v13.i64[1] = 0x100000001;
      uint64_t v14 = v8 & 0xFFFFFFF8;
      v15.i64[0] = 0x100000001;
      v15.i64[1] = 0x100000001;
      do
      {
        int32x4_t v13 = vmulq_s32(v12[-1], v13);
        int32x4_t v15 = vmulq_s32(*v12, v15);
        v12 += 2;
        v14 -= 8;
      }
      while (v14);
      int8x16_t v16 = (int8x16_t)vmulq_s32(v15, v13);
      *(int32x2_t *)v16.i8 = vmul_s32(*(int32x2_t *)v16.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v16, v16, 8uLL));
      int v9 = v16.i32[0] * v16.i32[1];
      if (v11 == v8) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v11 = 0;
      int v9 = 1;
    }
    uint64_t v17 = v8 - v11;
    uint64_t v18 = &v10->i32[v11];
    do
    {
      int v19 = *v18++;
      v9 *= v19;
      --v17;
    }
    while (v17);
  }
  else
  {
    int v9 = *(_DWORD *)(a1 + 12) * *(_DWORD *)(a1 + 8);
  }
LABEL_10:
  int v20 = (a2 >> 3) & 0x1FF;
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, unsigned char *, uint64_t, _DWORD *, void))sub_100235C68(*(_DWORD *)a1 & 7, a2);
  uint64_t v22 = *(void *)(a1 + 16);
  if (v20 < v9) {
    int v23 = v20 + 1;
  }
  else {
    int v23 = v9;
  }
  v42[0] = v23;
  v42[1] = 1;
  uint64_t result = v21(v22, 1, 0, 1, a3, 1, v42, 0);
  char v25 = v6 & 7;
  unint64_t v26 = (unint64_t)(v20 + 1) << ((0xFA50u >> (2 * (v6 & 7))) & 3);
  if (v20 >= v9)
  {
    if (v9 != 1)
    {
      v41[0] = 0;
      v41[1] = 0;
      *(void *)sub_1002D19D8(v41, 8) = 0x31203D3D206E6373;
      sub_1002D2278(-215, v41, "convertAndUnrollScalar", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/arithm.cpp", 68);
    }
    unint64_t v27 = (0x88442211uLL >> (4 * v25)) & 0xF;
    if (v27 < v26)
    {
      uint64_t v28 = a3;
      unint64_t v29 = v26;
      do
      {
        v28[v27] = *v28;
        --v29;
        ++v28;
      }
      while (v27 != v29);
    }
  }
  if (v26 * a4 > v26)
  {
    unint64_t v30 = (a4 - 1) * v26;
    if (v30 < 8 || v26 < 0x20)
    {
      unint64_t v32 = v26;
      goto LABEL_34;
    }
    if (v30 < 0x20)
    {
      unint64_t v31 = 0;
      goto LABEL_29;
    }
    unint64_t v31 = v30 & 0xFFFFFFFFFFFFFFE0;
    unint64_t v33 = v30 & 0xFFFFFFFFFFFFFFE0;
    uint64_t v34 = a3;
    do
    {
      long long v35 = v34[1];
      uint64_t v36 = (_OWORD *)((char *)v34 + v26);
      *uint64_t v36 = *v34;
      v36[1] = v35;
      v34 += 2;
      v33 -= 32;
    }
    while (v33);
    if (v30 != v31)
    {
      if ((v30 & 0x18) == 0)
      {
        unint64_t v32 = v31 + v26;
        goto LABEL_34;
      }
LABEL_29:
      unint64_t v32 = (v30 & 0xFFFFFFFFFFFFFFF8) + v26;
      uint64_t v37 = &a3[v31];
      unint64_t v38 = v31 - (v30 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        *(void *)((char *)v37 + v26) = *v37;
        ++v37;
        v38 += 8;
      }
      while (v38);
      if (v30 == (v30 & 0xFFFFFFFFFFFFFFF8)) {
        return result;
      }
LABEL_34:
      unint64_t v39 = v26 * a4 - v32;
      uint64_t v40 = &a3[v32];
      do
      {
        *uint64_t v40 = v40[-v26];
        ++v40;
        --v39;
      }
      while (v39);
    }
  }
  return result;
}

void sub_10021015C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1002D1A1C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_100210174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1002D6AE8(v9, &off_1004945E0);
  uint64_t v8 = sub_100210218;
  sub_10021021C(a1, a2, a3, a4, (void (**)(void, void, void, uint64_t, void, uint64_t))&v8, 1, 9);
  if (v10) {
    sub_1002D6888(v9);
  }
}

void sub_100210204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_10020FA00((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10021021C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (**a5)(void, void, void, uint64_t, void, uint64_t), int a6, int a7)
{
  int v11 = sub_10029A230((_DWORD *)a1);
  int v148 = sub_10029A230((_DWORD *)a2);
  unsigned int v12 = sub_10029AB74((int *)a1, -1);
  unsigned int v144 = sub_10029AB74((int *)a2, -1);
  int v13 = sub_10029C9C4(a1, -1);
  int v14 = sub_10029C9C4(a2, -1);
  int v15 = v14;
  if (v13 > 2)
  {
    int32x2_t v194 = 0;
    if (v14 <= 2) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_10029A23C(a1, 0xFFFFFFFF, (uint64_t)&v194);
    if (v15 <= 2)
    {
LABEL_3:
      sub_10029A23C(a2, 0xFFFFFFFF, (uint64_t)&v193);
      goto LABEL_6;
    }
  }
  int32x2_t v193 = 0;
LABEL_6:
  BOOL v16 = v15 < 3;
  BOOL v17 = v13 < 3;
  BOOL v150 = sub_10029D69C(a4);
  unsigned int v147 = v12 & 7;
  unsigned int v18 = (v12 >> 3) & 0x1FF;
  unsigned int v19 = v18 + 1;
  int v20 = v17 && v16;
  signed int v21 = v18 + 1;
  if (v20 != 1) {
    goto LABEL_71;
  }
  signed int v21 = v18 + 1;
  if (v11 != v148) {
    goto LABEL_71;
  }
  BOOL v23 = v194.i32[0] == v193.i32[0] && v194.i32[1] == v193.i32[1] && v12 == v144;
  BOOL v24 = v150;
  if (!v23) {
    BOOL v24 = 0;
  }
  signed int v21 = v18 + 1;
  if (!v24)
  {
LABEL_71:
    if (a7 != 12)
    {
      int v49 = v11 == 0x20000;
      if (v148 == 0x20000) {
        ++v49;
      }
      if (v49 != 1)
      {
        char v50 = sub_10029C604(a1, a2);
        char v51 = v12 == v144 ? v50 : 0;
        if (v51)
        {
          if ((sub_10029C604(a1, a2) & 1) == 0)
          {
            long long v202 = 0uLL;
            qmemcpy((void *)sub_1002D19D8(&v202, 41), "psrc1->sameSize(*psrc2) && type1 == type2", 41);
            sub_1002D2278(-215, (uint64_t *)&v202, "binary_op", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/arithm.cpp", 230);
          }
          char v52 = 0;
          goto LABEL_129;
        }
      }
      if ((int)sub_10029C9C4(a1, -1) <= 2 && sub_10029D8F8(a1, -1))
      {
        sub_10029A23C(a1, 0xFFFFFFFF, (uint64_t)&v202);
        BOOL v53 = v11 != 0x20000 && v148 == 0x20000;
        BOOL v54 = DWORD1(v202) == 1 || v202 == 1;
        if (v54 && !v53)
        {
          unsigned int v55 = (v144 >> 3) & 0x1FF;
          BOOL v56 = v202 == v55 + 1;
          BOOL v57 = DWORD1(v202) == 1;
          if (DWORD1(v202) != 1) {
            BOOL v56 = 0;
          }
          if (DWORD1(v202) == v55 + 1) {
            BOOL v57 = 1;
          }
          if (v202 != 1) {
            BOOL v57 = 0;
          }
          if (v57 || v56 || (void)v202 == 0x400000001 && (int v58 = sub_10029AB74((int *)a1, -1), v55 <= 3) && v58 == 6)
          {
            unsigned int v12 = v144;
            unsigned int v147 = v144 & 7;
            int32x2_t v59 = v194;
            char v52 = 1;
            int32x2_t v194 = v193;
            int32x2_t v193 = v59;
            unsigned int v19 = v55 + 1;
            signed int v21 = v55 + 1;
            uint64_t v60 = a1;
            goto LABEL_130;
          }
        }
      }
      if ((int)sub_10029C9C4(a2, -1) > 2 || !sub_10029D8F8(a2, -1)) {
        goto LABEL_127;
      }
      sub_10029A23C(a2, 0xFFFFFFFF, (uint64_t)&v202);
      BOOL v61 = v148 != 0x20000 && v11 == 0x20000;
      BOOL v62 = DWORD1(v202) == 1 || v202 == 1;
      if (!v62 || v61) {
        goto LABEL_127;
      }
      BOOL v63 = v202 == v19;
      BOOL v64 = DWORD1(v202) == 1;
      if (DWORD1(v202) != 1) {
        BOOL v63 = 0;
      }
      if (DWORD1(v202) == v19) {
        BOOL v64 = 1;
      }
      if (v202 != 1) {
        BOOL v64 = 0;
      }
      if (!v64 && !v63)
      {
        if ((void)v202 != 0x400000001 || (int v65 = sub_10029AB74((int *)a2, -1), v18 > 3) || v65 != 6)
        {
LABEL_127:
          long long v202 = 0uLL;
          qmemcpy((void *)sub_1002D19D8(&v202, 130), "The operation is neither 'array op array' (where arrays have the same size and type), nor 'array op scalar', nor 'scalar op array'", 130);
          sub_1002D2278(-209, (uint64_t *)&v202, "binary_op", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/arithm.cpp", 225);
        }
      }
    }
    char v52 = 1;
LABEL_129:
    uint64_t v60 = a2;
    a2 = a1;
LABEL_130:
    unint64_t v66 = v19 << ((0xFA50u >> (2 * (v12 & 7))) & 3);
    unint64_t v173 = v66;
    if (v150)
    {
      BOOL v67 = 0;
      BOOL v68 = 0;
    }
    else
    {
      if (sub_10029AB74((int *)a4, -1) > 1 || (sub_10029C604(a4, a2) & 1) == 0)
      {
        long long v202 = 0uLL;
        qmemcpy((void *)sub_1002D19D8(&v202, 52), "(mtype == 0 || mtype == 1) && _mask.sameSize(*psrc1)", 52);
        sub_1002D2278(-215, (uint64_t *)&v202, "binary_op", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/arithm.cpp", 241);
      }
      BOOL v67 = sub_100253D78(v173);
      if (sub_10029C604(a3, a2)) {
        BOOL v68 = sub_10029AB74((int *)a3, -1) != v12;
      }
      else {
        BOOL v68 = 1;
      }
    }
    *(void *)&long long v202 = &v203;
    *((void *)&v202 + 1) = 1032;
    sub_10029FADC((int *)a3, (char *)a2, v12);
    if (!v150 && v68)
    {
      *(void *)&long long v165 = 0;
      LODWORD(v183) = -1056833530;
      *((void *)&v183 + 1) = &v165;
      *(void *)&long long v184 = 0x100000001;
      LODWORD(v174) = 0;
      *((void *)&v174 + 1) = 0;
      *(void *)&long long v175 = 0;
      sub_10029FDD8(a3, (uint64_t)&v183, (uint64_t)&v174);
    }
    if (sub_10029A230((_DWORD *)a2) == 0x10000)
    {
      uint64_t v69 = *(void *)(a2 + 8);
      long long v70 = *(_OWORD *)(v69 + 16);
      long long v183 = *(_OWORD *)v69;
      long long v184 = v70;
      long long v185 = *(_OWORD *)(v69 + 32);
      uint64_t v71 = *(void *)(v69 + 56);
      uint64_t v186 = *(void *)(v69 + 48);
      uint64_t v187 = v71;
      uint64_t v188 = (char *)&v183 + 8;
      uint64_t v189 = &v190;
      uint64_t v191 = 0;
      uint64_t v190 = 0;
      if (v71) {
        atomic_fetch_add((atomic_uint *volatile)(v71 + 20), 1u);
      }
      if (*(int *)(v69 + 4) > 2)
      {
        DWORD1(v183) = 0;
        sub_1002931A8((uint64_t)&v183, v69);
      }
      else
      {
        uint64_t v72 = *(void **)(v69 + 72);
        uint64_t v73 = v189;
        *(void *)uint64_t v189 = *v72;
        v73[1] = v72[1];
      }
    }
    else
    {
      sub_100299554(a2, -1, (uint64_t)&v183);
    }
    if (sub_10029A230((_DWORD *)v60) == 0x10000)
    {
      uint64_t v74 = *(void *)(v60 + 8);
      long long v75 = *(_OWORD *)(v74 + 16);
      long long v174 = *(_OWORD *)v74;
      long long v175 = v75;
      long long v176 = *(_OWORD *)(v74 + 32);
      uint64_t v76 = *(void *)(v74 + 56);
      uint64_t v177 = *(void *)(v74 + 48);
      uint64_t v178 = v76;
      uint64_t v179 = (char *)&v174 + 8;
      uint64_t v180 = &v181;
      uint64_t v181 = 0;
      uint64_t v182 = 0;
      if (v76) {
        atomic_fetch_add((atomic_uint *volatile)(v76 + 20), 1u);
      }
      if (*(int *)(v74 + 4) > 2)
      {
        DWORD1(v174) = 0;
        sub_1002931A8((uint64_t)&v174, v74);
      }
      else
      {
        char v77 = *(void **)(v74 + 72);
        float32x2_t v78 = v180;
        *(void *)uint64_t v180 = *v77;
        v78[1] = v77[1];
      }
    }
    else
    {
      sub_100299554(v60, -1, (uint64_t)&v174);
    }
    if (sub_10029A230((_DWORD *)a3) == 0x10000)
    {
      uint64_t v79 = *(void *)(a3 + 8);
      long long v80 = *(_OWORD *)(v79 + 16);
      long long v165 = *(_OWORD *)v79;
      long long v166 = v80;
      long long v167 = *(_OWORD *)(v79 + 32);
      uint64_t v81 = *(void *)(v79 + 56);
      uint64_t v168 = *(void *)(v79 + 48);
      uint64_t v169 = v81;
      id v170 = (char *)&v165 + 8;
      id v171 = v172;
      v172[0] = 0;
      v172[1] = 0;
      if (v81) {
        atomic_fetch_add((atomic_uint *volatile)(v81 + 20), 1u);
      }
      if (*(int *)(v79 + 4) > 2)
      {
        DWORD1(v165) = 0;
        sub_1002931A8((uint64_t)&v165, v79);
      }
      else
      {
        uint64_t v82 = *(void **)(v79 + 72);
        uint64_t v83 = v171;
        *(void *)id v171 = *v82;
        v83[1] = v82[1];
      }
    }
    else
    {
      sub_100299554(a3, -1, (uint64_t)&v165);
    }
    if (sub_10029A230((_DWORD *)a4) == 0x10000)
    {
      uint64_t v84 = *(void *)(a4 + 8);
      long long v85 = *(_OWORD *)(v84 + 16);
      long long v157 = *(_OWORD *)v84;
      long long v158 = v85;
      long long v159 = *(_OWORD *)(v84 + 32);
      uint64_t v86 = *(void *)(v84 + 56);
      uint64_t v160 = *(void *)(v84 + 48);
      uint64_t v161 = v86;
      id v162 = (char *)&v157 + 8;
      id v163 = v164;
      v164[0] = 0;
      v164[1] = 0;
      if (v86) {
        atomic_fetch_add((atomic_uint *volatile)(v86 + 20), 1u);
      }
      if (*(int *)(v84 + 4) > 2)
      {
        DWORD1(v157) = 0;
        sub_1002931A8((uint64_t)&v157, v84);
      }
      else
      {
        double v87 = *(void **)(v84 + 72);
        double v88 = v163;
        *(void *)id v163 = *v87;
        v88[1] = v87[1];
      }
    }
    else
    {
      sub_100299554(a4, -1, (uint64_t)&v157);
    }
    if (a6) {
      signed int v89 = v173;
    }
    else {
      signed int v89 = v21;
    }
    if (a6) {
      uint64_t v90 = 0;
    }
    else {
      uint64_t v90 = v147;
    }
    char v91 = a5[v90];
    unint64_t v92 = ((int)v66 + 1023) / v66;
    if (v52)
    {
      uint64_t v197 = &v183;
      char v198 = &v165;
      char v199 = &v157;
      char v200 = 0;
      long long v195 = 0uLL;
      *(void *)&long long v196 = 0;
      sub_10029127C((uint64_t)v154, (uint64_t *)&v197, (uint64_t)&v195, -1);
      unint64_t v93 = v156;
      if (v156 < v92) {
        unint64_t v92 = v156;
      }
      unint64_t v94 = (v92 << !v150) * v173 + 32;
      if (*((void *)&v202 + 1) >= v94)
      {
        *((void *)&v202 + 1) = (v92 << !v150) * v173 + 32;
        id v95 = (long long *)v202;
      }
      else
      {
        id v95 = &v203;
        if ((long long *)v202 != &v203)
        {
          if ((void)v202) {
            operator delete[]();
          }
          id v95 = &v203;
          *(void *)&long long v202 = &v203;
        }
        *((void *)&v202 + 1) = (v92 << !v150) * v173 + 32;
        if (v94 >= 0x409) {
          operator new[]();
        }
      }
      unint64_t v98 = v173;
      sub_10020FEC0((uint64_t)&v174, v183 & 0xFFF, v95, v92);
      if (v93)
      {
        if (v150)
        {
          for (unint64_t i = 0; i < v155; ++i)
          {
            unint64_t v100 = 0;
            uint64_t v102 = *((void *)&v195 + 1);
            uint64_t v101 = v195;
            do
            {
              if (v93 - v100 >= v92) {
                int v103 = v92;
              }
              else {
                int v103 = v93 - v100;
              }
              ((void (*)(uint64_t, void, long long *, void, uint64_t, void, void, uint64_t, void))v91)(v101, 0, v95, 0, v102, 0, (v89 * v103), 1, 0);
              uint64_t v104 = v103 * (int)v173;
              uint64_t v101 = v195 + v104;
              uint64_t v102 = *((void *)&v195 + 1) + v104;
              *(void *)&long long v195 = v195 + v104;
              *((void *)&v195 + 1) += v104;
              v100 += v92;
            }
            while (v100 < v93);
            sub_1002912C8((uint64_t)v154);
          }
        }
        else
        {
          unint64_t v116 = 0;
          unint64_t v117 = ((unint64_t)v95 + v98 * v92 + 15) & 0xFFFFFFFFFFFFFFF0;
          while (v116 < v155)
          {
            unint64_t v151 = v116;
            unint64_t v118 = 0;
            uint64_t v119 = v195;
            do
            {
              if (v93 - v118 >= v92) {
                unint64_t v120 = v92;
              }
              else {
                unint64_t v120 = v93 - v118;
              }
              ((void (*)(uint64_t, void, long long *, void, unint64_t, void, void, uint64_t, void))v91)(v119, 0, v95, 0, v117, 0, (v89 * v120), 1, 0);
              v152[0] = v120;
              v152[1] = 1;
              v67(v117, 0, v196, 0, *((void *)&v195 + 1), 0, v152, &v173);
              *(void *)&long long v196 = v196 + v120;
              uint64_t v121 = (int)v120 * (int)v173;
              uint64_t v119 = v195 + v121;
              *(void *)&long long v195 = v195 + v121;
              *((void *)&v195 + 1) += v121;
              v118 += v92;
            }
            while (v118 < v93);
            unint64_t v116 = v151 + 1;
            sub_1002912C8((uint64_t)v154);
          }
        }
      }
      else
      {
        uint64_t v115 = -1;
        while (++v115 < v155)
          sub_1002912C8((uint64_t)v154);
      }
      goto LABEL_266;
    }
    uint64_t v197 = &v183;
    char v198 = &v174;
    char v199 = &v165;
    char v200 = &v157;
    uint64_t v201 = 0;
    long long v195 = 0u;
    long long v196 = 0u;
    sub_10029127C((uint64_t)v154, (uint64_t *)&v197, (uint64_t)&v195, -1);
    unint64_t v96 = v156;
    unint64_t v97 = v156;
    if ((v156 * v89) >> 31) {
      unint64_t v97 = 0x7FFFFFFF / v89;
    }
    if (v150)
    {
      if (!v156)
      {
LABEL_255:
        uint64_t v128 = -1;
        while (++v128 < v155)
          sub_1002912C8((uint64_t)v154);
LABEL_266:
        if (v161 && atomic_fetch_add((atomic_uint *volatile)(v161 + 20), 0xFFFFFFFF) == 1) {
          sub_1002932F4((uint64_t)&v157);
        }
        uint64_t v161 = 0;
        long long v158 = 0u;
        long long v159 = 0u;
        if (SDWORD1(v157) >= 1)
        {
          uint64_t v135 = 0;
          id v136 = v162;
          do
            *(_DWORD *)&v136[4 * v135++] = 0;
          while (v135 < SDWORD1(v157));
        }
        if (v163 != v164) {
          j__free(v163);
        }
        if (v169 && atomic_fetch_add((atomic_uint *volatile)(v169 + 20), 0xFFFFFFFF) == 1) {
          sub_1002932F4((uint64_t)&v165);
        }
        uint64_t v169 = 0;
        long long v166 = 0u;
        long long v167 = 0u;
        if (SDWORD1(v165) >= 1)
        {
          uint64_t v137 = 0;
          long long v138 = v170;
          do
            *(_DWORD *)&v138[4 * v137++] = 0;
          while (v137 < SDWORD1(v165));
        }
        if (v171 != v172) {
          j__free(v171);
        }
        if (v178 && atomic_fetch_add((atomic_uint *volatile)(v178 + 20), 0xFFFFFFFF) == 1) {
          sub_1002932F4((uint64_t)&v174);
        }
        uint64_t v178 = 0;
        long long v175 = 0u;
        long long v176 = 0u;
        if (SDWORD1(v174) >= 1)
        {
          uint64_t v139 = 0;
          id v140 = v179;
          do
            *(_DWORD *)&v140[4 * v139++] = 0;
          while (v139 < SDWORD1(v174));
        }
        if (v180 != &v181) {
          j__free(v180);
        }
        if (v187 && atomic_fetch_add((atomic_uint *volatile)(v187 + 20), 0xFFFFFFFF) == 1) {
          sub_1002932F4((uint64_t)&v183);
        }
        uint64_t v187 = 0;
        long long v184 = 0u;
        long long v185 = 0u;
        if (SDWORD1(v183) >= 1)
        {
          uint64_t v141 = 0;
          double v142 = v188;
          do
            *(_DWORD *)&v142[4 * v141++] = 0;
          while (v141 < SDWORD1(v183));
        }
        if (v189 != &v190) {
          j__free(v189);
        }
        if ((long long *)v202 != &v203 && (void)v202 != 0) {
          operator delete[]();
        }
        return;
      }
    }
    else
    {
      if (v97 >= v92) {
        unint64_t v97 = ((int)v66 + 1023) / v66;
      }
      if (*((void *)&v202 + 1) >= v173 * v97)
      {
        *((void *)&v202 + 1) = v173 * v97;
        id v105 = (long long *)v202;
        if (!v156) {
          goto LABEL_255;
        }
      }
      else
      {
        id v105 = &v203;
        if ((long long *)v202 != &v203)
        {
          if ((void)v202) {
            operator delete[]();
          }
          *(void *)&long long v202 = &v203;
        }
        *((void *)&v202 + 1) = v173 * v97;
        if (v173 * v97 >= 0x409) {
          operator new[]();
        }
        if (!v156) {
          goto LABEL_255;
        }
      }
      if (!v150)
      {
        for (unint64_t j = 0; j < v155; ++j)
        {
          unint64_t v130 = 0;
          id v132 = (long long *)*((void *)&v195 + 1);
          uint64_t v131 = v195;
          do
          {
            if (v96 - v130 >= v97) {
              unint64_t v133 = v97;
            }
            else {
              unint64_t v133 = v96 - v130;
            }
            ((void (*)(uint64_t, void, long long *, void, long long *, void, void, uint64_t, void))v91)(v131, 0, v132, 0, v105, 0, (v89 * v133), 1, 0);
            v153[0] = v133;
            v153[1] = 1;
            v67((uint64_t)v105, 0, *((void *)&v196 + 1), 0, v196, 0, v153, &v173);
            uint64_t v134 = (int)v133 * (int)v173;
            uint64_t v131 = v195 + v134;
            id v132 = (long long *)(*((void *)&v195 + 1) + v134);
            *(void *)&long long v195 = v195 + v134;
            *((void *)&v195 + 1) += v134;
            *((void *)&v196 + 1) += v133;
            *(void *)&long long v196 = v196 + v134;
            v130 += v97;
          }
          while (v130 < v96);
          sub_1002912C8((uint64_t)v154);
        }
        goto LABEL_266;
      }
    }
    for (unint64_t k = 0; k < v155; ++k)
    {
      unint64_t v107 = 0;
      id v109 = (long long *)*((void *)&v195 + 1);
      uint64_t v108 = v195;
      unint64_t v110 = v96;
      uint64_t v111 = v196;
      do
      {
        unint64_t v112 = v110 - v97;
        if (v110 >= v97) {
          int v113 = v97;
        }
        else {
          int v113 = v110;
        }
        ((void (*)(uint64_t, void, long long *, void, uint64_t, void, void, uint64_t, void))v91)(v108, 0, v109, 0, v111, 0, (v89 * v113), 1, 0);
        uint64_t v114 = v113 * (int)v173;
        uint64_t v108 = v195 + v114;
        id v109 = (long long *)(*((void *)&v195 + 1) + v114);
        *(void *)&long long v195 = v195 + v114;
        *((void *)&v195 + 1) += v114;
        uint64_t v111 = v196 + v114;
        *(void *)&long long v196 = v196 + v114;
        v107 += v97;
        unint64_t v110 = v112;
      }
      while (v107 < v96);
      sub_1002912C8((uint64_t)v154);
    }
    goto LABEL_266;
  }
  int32x2_t v192 = v194;
  sub_10029E6D4(a3, &v192, v12, -1, 0, 0);
  char v25 = &a5[v12 & 7];
  if (a6) {
    signed int v21 = v19 << ((0xFA50u >> (2 * (v12 & 7))) & 3);
  }
  else {
    signed int v21 = v18 + 1;
  }
  if (a6) {
    char v25 = a5;
  }
  unint64_t v26 = *v25;
  if (sub_10029A230((_DWORD *)a1) == 0x10000)
  {
    uint64_t v27 = *(void *)(a1 + 8);
    long long v28 = *(_OWORD *)(v27 + 16);
    long long v202 = *(_OWORD *)v27;
    long long v203 = v28;
    long long v204 = *(_OWORD *)(v27 + 32);
    uint64_t v29 = *(void *)(v27 + 56);
    uint64_t v205 = *(void *)(v27 + 48);
    uint64_t v206 = v29;
    uint64_t v207 = (char *)&v202 + 8;
    uint64_t v208 = v209;
    v209[1] = 0;
    v209[0] = 0;
    if (v29) {
      atomic_fetch_add((atomic_uint *volatile)(v29 + 20), 1u);
    }
    if (*(int *)(v27 + 4) > 2)
    {
      DWORD1(v202) = 0;
      sub_1002931A8((uint64_t)&v202, v27);
    }
    else
    {
      unint64_t v30 = *(void **)(v27 + 72);
      unint64_t v31 = v208;
      *(void *)uint64_t v208 = *v30;
      v31[1] = v30[1];
    }
  }
  else
  {
    sub_100299554(a1, -1, (uint64_t)&v202);
  }
  if (sub_10029A230((_DWORD *)a2) == 0x10000)
  {
    uint64_t v32 = *(void *)(a2 + 8);
    long long v33 = *(_OWORD *)(v32 + 16);
    long long v183 = *(_OWORD *)v32;
    long long v184 = v33;
    long long v185 = *(_OWORD *)(v32 + 32);
    uint64_t v34 = *(void *)(v32 + 56);
    uint64_t v186 = *(void *)(v32 + 48);
    uint64_t v187 = v34;
    uint64_t v188 = (char *)&v183 + 8;
    uint64_t v189 = &v190;
    uint64_t v191 = 0;
    uint64_t v190 = 0;
    if (v34) {
      atomic_fetch_add((atomic_uint *volatile)(v34 + 20), 1u);
    }
    if (*(int *)(v32 + 4) > 2)
    {
      DWORD1(v183) = 0;
      sub_1002931A8((uint64_t)&v183, v32);
    }
    else
    {
      long long v35 = *(void **)(v32 + 72);
      uint64_t v36 = v189;
      *(void *)uint64_t v189 = *v35;
      v36[1] = v35[1];
    }
  }
  else
  {
    sub_100299554(a2, -1, (uint64_t)&v183);
  }
  if (sub_10029A230((_DWORD *)a3) == 0x10000)
  {
    uint64_t v37 = *(void *)(a3 + 8);
    long long v38 = *(_OWORD *)(v37 + 16);
    long long v174 = *(_OWORD *)v37;
    long long v175 = v38;
    long long v176 = *(_OWORD *)(v37 + 32);
    uint64_t v39 = *(void *)(v37 + 56);
    uint64_t v177 = *(void *)(v37 + 48);
    uint64_t v178 = v39;
    uint64_t v179 = (char *)&v174 + 8;
    uint64_t v180 = &v181;
    uint64_t v181 = 0;
    uint64_t v182 = 0;
    if (v39) {
      atomic_fetch_add((atomic_uint *volatile)(v39 + 20), 1u);
    }
    if (*(int *)(v37 + 4) > 2)
    {
      DWORD1(v174) = 0;
      sub_1002931A8((uint64_t)&v174, v37);
    }
    else
    {
      uint64_t v40 = *(void **)(v37 + 72);
      uint64_t v41 = v180;
      *(void *)uint64_t v180 = *v40;
      v41[1] = v40[1];
    }
  }
  else
  {
    sub_100299554(a3, -1, (uint64_t)&v174);
  }
  int v42 = HIDWORD(v202);
  if ((v202 & v183 & v174 & 0x4000) != 0
    && DWORD2(v202) * HIDWORD(v202) == SDWORD2(v202) * (uint64_t)SHIDWORD(v202))
  {
    int v42 = DWORD2(v202) * HIDWORD(v202);
  }
  if (v21 * (uint64_t)v42 != v21 * v42)
  {
    if (v178 && atomic_fetch_add((atomic_uint *volatile)(v178 + 20), 0xFFFFFFFF) == 1) {
      sub_1002932F4((uint64_t)&v174);
    }
    uint64_t v178 = 0;
    long long v175 = 0u;
    long long v176 = 0u;
    if (SDWORD1(v174) >= 1)
    {
      uint64_t v43 = 0;
      uint64_t v44 = v179;
      do
        *(_DWORD *)&v44[4 * v43++] = 0;
      while (v43 < SDWORD1(v174));
    }
    if (v180 != &v181) {
      j__free(v180);
    }
    if (v187 && atomic_fetch_add((atomic_uint *volatile)(v187 + 20), 0xFFFFFFFF) == 1) {
      sub_1002932F4((uint64_t)&v183);
    }
    uint64_t v187 = 0;
    long long v184 = 0u;
    long long v185 = 0u;
    if (SDWORD1(v183) >= 1)
    {
      uint64_t v45 = 0;
      uint64_t v46 = v188;
      do
        *(_DWORD *)&v46[4 * v45++] = 0;
      while (v45 < SDWORD1(v183));
    }
    if (v189 != &v190) {
      j__free(v189);
    }
    if (v206 && atomic_fetch_add((atomic_uint *volatile)(v206 + 20), 0xFFFFFFFF) == 1) {
      sub_1002932F4((uint64_t)&v202);
    }
    uint64_t v206 = 0;
    long long v203 = 0u;
    long long v204 = 0u;
    if (SDWORD1(v202) >= 1)
    {
      uint64_t v47 = 0;
      uint64_t v48 = v207;
      do
        *(_DWORD *)&v48[4 * v47++] = 0;
      while (v47 < SDWORD1(v202));
    }
    if (v208 != v209) {
      j__free(v208);
    }
    goto LABEL_71;
  }
  v26(v203, v209[0], v184, v190, v175, v181);
  if (v178 && atomic_fetch_add((atomic_uint *volatile)(v178 + 20), 0xFFFFFFFF) == 1) {
    sub_1002932F4((uint64_t)&v174);
  }
  uint64_t v178 = 0;
  long long v175 = 0u;
  long long v176 = 0u;
  if (SDWORD1(v174) >= 1)
  {
    uint64_t v122 = 0;
    uint64_t v123 = v179;
    do
      *(_DWORD *)&v123[4 * v122++] = 0;
    while (v122 < SDWORD1(v174));
  }
  if (v180 != &v181) {
    j__free(v180);
  }
  if (v187 && atomic_fetch_add((atomic_uint *volatile)(v187 + 20), 0xFFFFFFFF) == 1) {
    sub_1002932F4((uint64_t)&v183);
  }
  uint64_t v187 = 0;
  long long v184 = 0u;
  long long v185 = 0u;
  if (SDWORD1(v183) >= 1)
  {
    uint64_t v124 = 0;
    id v125 = v188;
    do
      *(_DWORD *)&v125[4 * v124++] = 0;
    while (v124 < SDWORD1(v183));
  }
  if (v189 != &v190) {
    j__free(v189);
  }
  if (v206 && atomic_fetch_add((atomic_uint *volatile)(v206 + 20), 0xFFFFFFFF) == 1) {
    sub_1002932F4((uint64_t)&v202);
  }
  uint64_t v206 = 0;
  long long v203 = 0u;
  long long v204 = 0u;
  if (SDWORD1(v202) >= 1)
  {
    uint64_t v126 = 0;
    double v127 = v207;
    do
      *(_DWORD *)&v127[4 * v126++] = 0;
    while (v126 < SDWORD1(v202));
  }
  if (v208 != v209) {
    j__free(v208);
  }
}

void sub_1002116B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  sub_1000094F4((uint64_t)&a27);
  sub_1000094F4((uint64_t)&a39);
  sub_1000094F4((uint64_t)&a53);
  sub_1000094F4((uint64_t)&a65);
  if (STACK[0x290] != a14)
  {
    if (STACK[0x290]) {
      operator delete[]();
    }
  }
  _Unwind_Resume(a1);
}

void sub_100211840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1002D6AE8(v9, &off_100494600);
  uint64_t v8 = sub_1002118E4;
  sub_10021021C(a1, a2, a3, a4, (void (**)(void, void, void, uint64_t, void, uint64_t))&v8, 1, 10);
  if (v10) {
    sub_1002D6888(v9);
  }
}

void sub_1002118D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_10020FA00((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002118E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1002D6AE8(v9, &off_100494620);
  uint64_t v8 = sub_10021198C;
  sub_10021021C(a1, a2, a3, a4, (void (**)(void, void, void, uint64_t, void, uint64_t))&v8, 1, 11);
  if (v10) {
    sub_1002D6888(v9);
  }
}

void sub_100211978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_10020FA00((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100211990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1002D6AE8(v7, &off_100494640);
  char v6 = sub_100211A30;
  sub_10021021C(a1, a1, a2, a3, (void (**)(void, void, void, uint64_t, void, uint64_t))&v6, 1, 12);
  if (v8) {
    sub_1002D6888(v7);
  }
}

void sub_100211A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_10020FA00((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100211A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1002D6AE8(v7, &off_100494660);
  char v6 = sub_1002A02C4();
  sub_10021021C(a1, a2, a3, (uint64_t)v6, (void (**)(void, void, void, uint64_t, void, uint64_t))off_1004D2B90, 0, 14);
  if (v8) {
    sub_1002D6888(v7);
  }
}

void sub_100211AB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100211ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1002D6AE8(v7, &off_100494680);
  char v6 = sub_1002A02C4();
  sub_10021021C(a1, a2, a3, (uint64_t)v6, (void (**)(void, void, void, uint64_t, void, uint64_t))off_1004D2BD0, 0, 13);
  if (v8) {
    sub_1002D6888(v7);
  }
}

void sub_100211B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100211B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1002D6AE8(v16, &off_1004946A0);
  int v13 = 33619968;
  uint64_t v14 = a3;
  uint64_t v15 = 0;
  uint64_t v12 = 0;
  int v10 = 16842752;
  uint64_t v11 = a1;
  uint64_t v9 = 0;
  int v7 = 16842752;
  uint64_t v8 = a2;
  char v6 = sub_1002A02C4();
  sub_10021021C((uint64_t)&v10, (uint64_t)&v7, (uint64_t)&v13, (uint64_t)v6, (void (**)(void, void, void, uint64_t, void, uint64_t))off_1004D2B90, 0, 14);
  if (v17) {
    sub_1002D6888(v16);
  }
}

void sub_100211C14(_Unwind_Exception *a1)
{
  sub_10020FA00(v1 - 48);
  _Unwind_Resume(a1);
}

void sub_100211C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1002D6AE8(v16, &off_1004946C0);
  int v13 = 33619968;
  uint64_t v14 = a3;
  uint64_t v15 = 0;
  uint64_t v12 = 0;
  int v10 = 16842752;
  uint64_t v11 = a1;
  uint64_t v9 = 0;
  int v7 = 16842752;
  uint64_t v8 = a2;
  char v6 = sub_1002A02C4();
  sub_10021021C((uint64_t)&v10, (uint64_t)&v7, (uint64_t)&v13, (uint64_t)v6, (void (**)(void, void, void, uint64_t, void, uint64_t))off_1004D2BD0, 0, 13);
  if (v17) {
    sub_1002D6888(v16);
  }
}

void sub_100211CD8(_Unwind_Exception *a1)
{
  sub_10020FA00(v1 - 48);
  _Unwind_Resume(a1);
}

void sub_100211CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  sub_1002D6AE8(v10, &off_1004946E0);
  sub_100211D94(a1, a2, a3, a4, a5, (uint64_t)off_1004D2C10, 0, 0);
  if (v11) {
    sub_1002D6888(v10);
  }
}

void sub_100211D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100211D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, char a7, uint64_t a8)
{
  int v229 = sub_10029A230((_DWORD *)a1);
  int v227 = sub_10029A230((_DWORD *)a2);
  BOOL v213 = sub_10029D69C(a4);
  unsigned int v12 = sub_10029AB74((int *)a1, -1);
  unsigned int v13 = sub_10029AB74((int *)a2, -1);
  int v14 = sub_10029C9C4(a1, -1);
  int v15 = sub_10029C9C4(a2, -1);
  int v16 = v15;
  uint64_t v216 = a4;
  int v218 = a5;
  if (v14 > 2)
  {
    uint64_t v287 = 0;
    if (v15 <= 2) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v286 = 0;
    goto LABEL_6;
  }
  sub_10029A23C(a1, 0xFFFFFFFF, (uint64_t)&v287);
  if (v16 > 2) {
    goto LABEL_5;
  }
LABEL_3:
  sub_10029A23C(a2, 0xFFFFFFFF, (uint64_t)&v286);
LABEL_6:
  unsigned int v17 = (v13 >> 3) & 0x1FF;
  unsigned int v234 = v17 + 1;
  if ((int)sub_10029C9C4(a1, -1) <= 2
    && sub_10029D8F8(a1, -1)
    && ((sub_10029A23C(a1, 0xFFFFFFFF, (uint64_t)&v295), v295 == 1) || DWORD1(v295) == 1)
    && (v229 == 0x20000 || v227 != 0x20000))
  {
    BOOL v31 = v295 == v234;
    BOOL v32 = DWORD1(v295) == 1;
    if (DWORD1(v295) != 1) {
      BOOL v31 = 0;
    }
    if (DWORD1(v295) == v234) {
      BOOL v32 = 1;
    }
    if (v295 != 1) {
      BOOL v32 = 0;
    }
    int v18 = 1;
    if (!v32 && !v31)
    {
      int v18 = 0;
      if ((void)v295 == 0x400000001)
      {
        int v33 = sub_10029AB74((int *)a1, -1);
        int v18 = v17 < 4 && v33 == 6;
      }
    }
  }
  else
  {
    int v18 = 0;
  }
  unsigned int v19 = (v12 >> 3) & 0x1FF;
  unsigned int v210 = v19 + 1;
  if ((int)sub_10029C9C4(a2, -1) <= 2
    && sub_10029D8F8(a2, -1)
    && ((sub_10029A23C(a2, 0xFFFFFFFF, (uint64_t)&v295), v295 == 1) || DWORD1(v295) == 1)
    && (v229 != 0x20000 || v227 == 0x20000))
  {
    BOOL v159 = v295 == v210;
    BOOL v160 = DWORD1(v295) == 1;
    if (DWORD1(v295) != 1) {
      BOOL v159 = 0;
    }
    if (DWORD1(v295) == v210) {
      BOOL v160 = 1;
    }
    if (v295 != 1) {
      BOOL v160 = 0;
    }
    int v20 = 1;
    if (!v160 && !v159)
    {
      int v20 = 0;
      if ((void)v295 == 0x400000001)
      {
        int v161 = sub_10029AB74((int *)a2, -1);
        int v20 = v19 < 4 && v161 == 6;
      }
    }
  }
  else
  {
    int v20 = 0;
  }
  if (v229 == v227 || !v19)
  {
    BOOL v24 = v287 == v286 && HIDWORD(v287) == HIDWORD(v286) && v14 < 3 && v16 < 3 && v12 == v13;
    BOOL v25 = v213;
    if (!v24) {
      BOOL v25 = 0;
    }
    if (v25)
    {
      if ((sub_10029E6C8((_DWORD *)a3) & 1) == 0 && (v218 < 0 || (v218 & 7) == (v12 & 7)))
      {
        if (v18 == v20)
        {
LABEL_43:
          sub_10029FADC((int *)a3, (char *)a1, v12);
          if (sub_10029A230((_DWORD *)a1) == 0x10000)
          {
            uint64_t v26 = *(void *)(a1 + 8);
            long long v27 = *(_OWORD *)(v26 + 16);
            long long v295 = *(_OWORD *)v26;
            long long v296 = v27;
            long long v297 = *(_OWORD *)(v26 + 32);
            uint64_t v28 = *(void *)(v26 + 56);
            uint64_t v298 = *(void *)(v26 + 48);
            uint64_t v299 = v28;
            id v300 = (char *)&v295 + 8;
            v301 = &v302;
            uint64_t v303 = 0;
            uint64_t v302 = 0;
            if (v28) {
              atomic_fetch_add((atomic_uint *volatile)(v28 + 20), 1u);
            }
            if (*(int *)(v26 + 4) > 2)
            {
              DWORD1(v295) = 0;
              sub_1002931A8((uint64_t)&v295, v26);
            }
            else
            {
              uint64_t v29 = *(void **)(v26 + 72);
              unint64_t v30 = v301;
              *(void *)v301 = *v29;
              v30[1] = v29[1];
            }
          }
          else
          {
            sub_100299554(a1, -1, (uint64_t)&v295);
          }
          if (sub_10029A230((_DWORD *)a2) == 0x10000)
          {
            uint64_t v188 = *(void *)(a2 + 8);
            long long v189 = *(_OWORD *)(v188 + 16);
            long long v277 = *(_OWORD *)v188;
            long long v278 = v189;
            long long v279 = *(_OWORD *)(v188 + 32);
            uint64_t v190 = *(void *)(v188 + 56);
            uint64_t v280 = *(void *)(v188 + 48);
            uint64_t v281 = v190;
            v282 = (char *)&v277 + 8;
            v283 = &v284;
            uint64_t v285 = 0;
            uint64_t v284 = 0;
            if (v190) {
              atomic_fetch_add((atomic_uint *volatile)(v190 + 20), 1u);
            }
            if (*(int *)(v188 + 4) > 2)
            {
              DWORD1(v277) = 0;
              sub_1002931A8((uint64_t)&v277, v188);
            }
            else
            {
              uint64_t v191 = *(void **)(v188 + 72);
              int32x2_t v192 = v283;
              *(void *)v283 = *v191;
              v192[1] = v191[1];
            }
          }
          else
          {
            sub_100299554(a2, -1, (uint64_t)&v277);
          }
          if (sub_10029A230((_DWORD *)a3) == 0x10000)
          {
            uint64_t v193 = *(void *)(a3 + 8);
            long long v194 = *(_OWORD *)(v193 + 16);
            long long v268 = *(_OWORD *)v193;
            long long v269 = v194;
            long long v270 = *(_OWORD *)(v193 + 32);
            uint64_t v195 = *(void *)(v193 + 56);
            uint64_t v271 = *(void *)(v193 + 48);
            uint64_t v272 = v195;
            v273 = (char *)&v268 + 8;
            uint64_t v274 = &v275;
            uint64_t v276 = 0;
            uint64_t v275 = 0;
            if (v195) {
              atomic_fetch_add((atomic_uint *volatile)(v195 + 20), 1u);
            }
            if (*(int *)(v193 + 4) > 2)
            {
              DWORD1(v268) = 0;
              sub_1002931A8((uint64_t)&v268, v193);
            }
            else
            {
              long long v196 = *(void **)(v193 + 72);
              uint64_t v197 = v274;
              *(void *)uint64_t v274 = *v196;
              v197[1] = v196[1];
            }
          }
          else
          {
            sub_100299554(a3, -1, (uint64_t)&v268);
          }
          uint64_t v198 = DWORD2(v295);
          unint64_t v199 = (((unint64_t)v295 >> 3) & 0x1FF) + 1;
          if ((v295 & v277 & v268 & 0x4000) != 0
            && (uint64_t v200 = SHIDWORD(v295) * (uint64_t)(int)v199 * SDWORD2(v295), v200 == (int)v200))
          {
            uint64_t v198 = 1;
          }
          else
          {
            uint64_t v200 = (HIDWORD(v295) * v199);
          }
          (*(void (**)(void, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 8 * (v12 & 7)))(v296, v302, v278, v284, v269, v275, v200, v198, a8);
          if (v272 && atomic_fetch_add((atomic_uint *volatile)(v272 + 20), 0xFFFFFFFF) == 1) {
            sub_1002932F4((uint64_t)&v268);
          }
          uint64_t v272 = 0;
          long long v269 = 0u;
          long long v270 = 0u;
          if (SDWORD1(v268) >= 1)
          {
            uint64_t v201 = 0;
            long long v202 = v273;
            do
              *(_DWORD *)&v202[4 * v201++] = 0;
            while (v201 < SDWORD1(v268));
          }
          if (v274 != &v275) {
            j__free(v274);
          }
          if (v281 && atomic_fetch_add((atomic_uint *volatile)(v281 + 20), 0xFFFFFFFF) == 1) {
            sub_1002932F4((uint64_t)&v277);
          }
          uint64_t v281 = 0;
          long long v278 = 0u;
          long long v279 = 0u;
          if (SDWORD1(v277) >= 1)
          {
            uint64_t v203 = 0;
            long long v204 = v282;
            do
              *(_DWORD *)&v204[4 * v203++] = 0;
            while (v203 < SDWORD1(v277));
          }
          if (v283 != &v284) {
            j__free(v283);
          }
          if (v299 && atomic_fetch_add((atomic_uint *volatile)(v299 + 20), 0xFFFFFFFF) == 1) {
            sub_1002932F4((uint64_t)&v295);
          }
          uint64_t v299 = 0;
          long long v296 = 0u;
          long long v297 = 0u;
          if (SDWORD1(v295) >= 1)
          {
            uint64_t v205 = 0;
            uint64_t v206 = v300;
            do
              *(_DWORD *)&v206[4 * v205++] = 0;
            while (v205 < SDWORD1(v295));
          }
          if (v301 != &v302) {
            j__free(v301);
          }
          return;
        }
      }
      else if (sub_10029E6C8((_DWORD *)a3) {
             && sub_10029AB74((int *)a3, -1) == v12
      }
             && ((v18 ^ v20) & 1) == 0)
      {
        goto LABEL_43;
      }
    }
  }
  int v35 = v13 & 7;
  if (v14 != v16 || v287 != v286 || v19 != v17) {
    goto LABEL_413;
  }
  if (v229 == 0x20000)
  {
    BOOL v36 = HIDWORD(v287) == 4 || HIDWORD(v287) == 1;
    BOOL v37 = v36;
    if (v287 == 1 && v37) {
      goto LABEL_413;
    }
  }
  if (v227 != 0x20000)
  {
    int v41 = 0;
    int v220 = 0;
    int v42 = v13 & 7;
    unsigned int v214 = v13;
    unsigned int v234 = v19 + 1;
    int v35 = v12 & 7;
    unsigned int v13 = v12;
    uint64_t v40 = a2;
    a2 = a1;
    goto LABEL_135;
  }
  if (v287 == 0x400000001)
  {
LABEL_413:
    if ((int)sub_10029C9C4(a1, -1) > 2) {
      goto LABEL_84;
    }
    if (!sub_10029D8F8(a1, -1)) {
      goto LABEL_84;
    }
    sub_10029A23C(a1, 0xFFFFFFFF, (uint64_t)&v295);
    if (v295 != 1 && DWORD1(v295) != 1) {
      goto LABEL_84;
    }
    if (v229 != 0x20000 && v227 == 0x20000) {
      goto LABEL_84;
    }
    BOOL v163 = v295 == v234;
    BOOL v164 = DWORD1(v295) == 1;
    if (DWORD1(v295) != 1) {
      BOOL v163 = 0;
    }
    if (DWORD1(v295) == v234) {
      BOOL v164 = 1;
    }
    if (v295 != 1) {
      BOOL v164 = 0;
    }
    if (!v164 && !v163)
    {
      if ((void)v295 != 0x400000001 || (int v165 = sub_10029AB74((int *)a1, -1), v17 > 3) || v165 != 6)
      {
LABEL_84:
        if ((int)sub_10029C9C4(a2, -1) > 2) {
          goto LABEL_90;
        }
        if (!sub_10029D8F8(a2, -1)) {
          goto LABEL_90;
        }
        sub_10029A23C(a2, 0xFFFFFFFF, (uint64_t)&v295);
        if (v295 != 1 && DWORD1(v295) != 1) {
          goto LABEL_90;
        }
        if (v229 == 0x20000 && v227 != 0x20000) {
          goto LABEL_90;
        }
        BOOL v166 = v295 == v210;
        BOOL v167 = DWORD1(v295) == 1;
        if (DWORD1(v295) != 1) {
          BOOL v166 = 0;
        }
        if (DWORD1(v295) == v210) {
          BOOL v167 = 1;
        }
        if (v295 != 1) {
          BOOL v167 = 0;
        }
        if (!v167 && !v166)
        {
          if ((void)v295 != 0x400000001 || (int v168 = sub_10029AB74((int *)a2, -1), v19 > 3) || v168 != 6)
          {
LABEL_90:
            long long v295 = 0uLL;
            qmemcpy((void *)sub_1002D19D8(&v295, 153), "The operation is neither 'array op array' (where arrays have the same size and the same number of channels), nor 'array op scalar', nor 'scalar op array'", 153);
            sub_1002D2278(-209, (uint64_t *)&v295, "arithm_op", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/arithm.cpp", 659);
          }
        }
        int v220 = 0;
        unsigned int v38 = v17 + 1;
        unsigned int v39 = v13;
        unsigned int v234 = v19 + 1;
        int v35 = v12 & 7;
        unsigned int v13 = v12;
        uint64_t v40 = a2;
        a2 = a1;
        unsigned int v214 = v39;
        if (v39 != 6)
        {
LABEL_94:
          long long v295 = 0uLL;
          qmemcpy((void *)sub_1002D19D8(&v295, 50), "type2 == 6 && (sz2.height == 1 || sz2.height == 4)", 50);
          sub_1002D2278(-215, (uint64_t *)&v295, "arithm_op", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/arithm.cpp", 661);
        }
        goto LABEL_92;
      }
    }
  }
  else
  {
    int v41 = 0;
    if (v287 != 0x100000001)
    {
      int v42 = v13 & 7;
      unsigned int v214 = v13;
      unsigned int v234 = v19 + 1;
      int v35 = v12 & 7;
      unsigned int v13 = v12;
      uint64_t v40 = a2;
      a2 = a1;
      int v220 = 0;
      goto LABEL_135;
    }
    if ((sub_100215548((int *)a1, v13, v229, 0x20000) & 1) == 0) {
      goto LABEL_84;
    }
  }
  uint64_t v169 = v287;
  uint64_t v287 = v286;
  uint64_t v286 = v169;
  int v220 = 1;
  unsigned int v38 = v19 + 1;
  unsigned int v170 = v12;
  uint64_t v40 = a1;
  unsigned int v214 = v170;
  if (v170 != 6) {
    goto LABEL_94;
  }
LABEL_92:
  if (HIDWORD(v286) != 1 && HIDWORD(v286) != 4) {
    goto LABEL_94;
  }
  if (a7)
  {
    int v41 = 1;
    int v42 = 6;
  }
  else
  {
    if (sub_10029A230((_DWORD *)v40) == 0x10000)
    {
      uint64_t v43 = *(void *)(v40 + 8);
      long long v44 = *(_OWORD *)(v43 + 16);
      long long v295 = *(_OWORD *)v43;
      long long v296 = v44;
      long long v297 = *(_OWORD *)(v43 + 32);
      uint64_t v45 = *(void *)(v43 + 56);
      uint64_t v298 = *(void *)(v43 + 48);
      uint64_t v299 = v45;
      id v300 = (char *)&v295 + 8;
      v301 = &v302;
      uint64_t v303 = 0;
      uint64_t v302 = 0;
      if (v45) {
        atomic_fetch_add((atomic_uint *volatile)(v45 + 20), 1u);
      }
      if (*(int *)(v43 + 4) > 2)
      {
        DWORD1(v295) = 0;
        sub_1002931A8((uint64_t)&v295, v43);
      }
      else
      {
        uint64_t v46 = *(void **)(v43 + 72);
        uint64_t v47 = v301;
        *(void *)v301 = *v46;
        v47[1] = v46[1];
      }
    }
    else
    {
      sub_100299554(v40, -1, (uint64_t)&v295);
    }
    uint64_t v48 = (double *)v296;
    if (HIDWORD(v286) == 1 && v286 == 1) {
      uint64_t v50 = v38;
    }
    else {
      uint64_t v50 = v234;
    }
    int v51 = 0x7FFFFFFF;
    int v52 = 0x80000000;
    while (1)
    {
      uint64_t v53 = (uint64_t)rint(*v48);
      if (*v48 != (double)(int)v53) {
        break;
      }
      if (v52 <= (int)v53) {
        int v52 = v53;
      }
      if (v51 >= (int)v53) {
        int v51 = v53;
      }
      ++v48;
      if (!--v50)
      {
        if (v51 < 0 || v52 >= 256)
        {
          if (v51 < -128 || v52 >= 128)
          {
            if (v51 < 0 || v52 >= 0x10000)
            {
              if (v52 >= 0x8000 || v51 <= -32769) {
                int v42 = 4;
              }
              else {
                int v42 = 3;
              }
            }
            else
            {
              int v42 = 2;
            }
          }
          else
          {
            int v42 = 1;
          }
        }
        else
        {
          int v42 = 0;
        }
        goto LABEL_126;
      }
    }
    BOOL v54 = v35 != 5 && v35 >= 4;
    if (v54) {
      int v42 = 6;
    }
    else {
      int v42 = 5;
    }
LABEL_126:
    if (v299 && atomic_fetch_add((atomic_uint *volatile)(v299 + 20), 0xFFFFFFFF) == 1) {
      sub_1002932F4((uint64_t)&v295);
    }
    uint64_t v299 = 0;
    long long v296 = 0u;
    long long v297 = 0u;
    if (SDWORD1(v295) >= 1)
    {
      uint64_t v55 = 0;
      BOOL v56 = v300;
      do
        *(_DWORD *)&v56[4 * v55++] = 0;
      while (v55 < SDWORD1(v295));
    }
    if (v301 != &v302) {
      j__free(v301);
    }
    int v41 = 1;
  }
LABEL_135:
  char v57 = v218;
  if (v218 < 0)
  {
    if (sub_10029E6C8((_DWORD *)a3))
    {
      char v57 = sub_10029AB74((int *)a3, -1);
    }
    else
    {
      if (v13 == v214) {
        char v58 = 1;
      }
      else {
        char v58 = v41;
      }
      char v57 = v13;
      if ((v58 & 1) == 0)
      {
        long long v295 = 0uLL;
        qmemcpy((void *)sub_1002D19D8(&v295, 136), "When the input arrays in add/subtract/multiply/divide functions have different types, the output array type must be explicitly specified", 136);
        sub_1002D2278(-5, (uint64_t *)&v295, "arithm_op", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/arithm.cpp", 683);
      }
    }
  }
  int v59 = v57 & 7;
  if (v35 == v42 && v59 == v35)
  {
    unsigned int v60 = 8 * v234 - 8;
    int v61 = v59 | v60;
    if (v213)
    {
LABEL_146:
      sub_10029FADC((int *)a3, (char *)a2, v61);
      goto LABEL_189;
    }
  }
  else if (a7)
  {
    if (v42 <= v35) {
      int v62 = v35;
    }
    else {
      int v62 = v42;
    }
    if (v62 <= v59) {
      int v62 = v57 & 7;
    }
    if (v62 <= 5) {
      LOBYTE(v42) = 5;
    }
    else {
      LOBYTE(v42) = v62;
    }
    unsigned int v60 = 8 * v234 - 8;
    int v61 = v59 | v60;
    if (v213) {
      goto LABEL_146;
    }
  }
  else
  {
    if (v35 > 1 || v42 >= 2)
    {
      if (v35 <= v42) {
        int v63 = v42;
      }
      else {
        int v63 = v35;
      }
      if (v42 < 5 && v35 < 5) {
        int v63 = 4;
      }
    }
    else
    {
      int v63 = 3;
    }
    if (v63 <= v59) {
      LOBYTE(v63) = v57 & 7;
    }
    if (v42 < 5 || v35 < 5) {
      char v66 = 4;
    }
    else {
      char v66 = v63;
    }
    if (v59 <= 4) {
      LOBYTE(v42) = v66;
    }
    else {
      LOBYTE(v42) = v63;
    }
    unsigned int v60 = 8 * v234 - 8;
    int v61 = v59 | v60;
    if (v213) {
      goto LABEL_146;
    }
  }
  if (sub_10029AB74((int *)v216, -1) > 1 || (sub_10029C604(v216, a2) & 1) == 0)
  {
    long long v295 = 0uLL;
    qmemcpy((void *)sub_1002D19D8(&v295, 132), "(mtype == (((0) & ((1 << 3) - 1)) + (((1)-1) << 3)) || mtype == (((1) & ((1 << 3) - 1)) + (((1)-1) << 3))) && _mask.sameSize(*psrc1)", 132);
    sub_1002D2278(-215, (uint64_t *)&v295, "arithm_op", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/arithm.cpp", 715);
  }
  if (!sub_10029C604(a3, a2))
  {
    sub_10029FADC((int *)a3, (char *)a2, v61);
    goto LABEL_188;
  }
  BOOL v67 = sub_10029AB74((int *)a3, -1) == v61;
  sub_10029FADC((int *)a3, (char *)a2, v61);
  if (!v67)
  {
LABEL_188:
    *(void *)&long long v268 = 0;
    LODWORD(v295) = -1056833530;
    *((void *)&v295 + 1) = &v268;
    *(void *)&long long v296 = 0x100000001;
    LODWORD(v277) = 0;
    *(void *)&long long v278 = 0;
    *((void *)&v277 + 1) = 0;
    sub_10029FDD8(a3, (uint64_t)&v295, (uint64_t)&v277);
  }
LABEL_189:
  unsigned int v68 = v60 & 0xFFFFFFF8 | v42 & 7;
  if (v13 != v68)
  {
    uint64_t v69 = sub_100235C68(v13, v60 & 0xF8 | v42 & 7);
    uint64_t v224 = (void (*)(void, void, void, void, void, void, void, void))v69;
    if (v214 == v13) {
      goto LABEL_196;
    }
LABEL_193:
    if (v214 == v68) {
      uint64_t v224 = 0;
    }
    else {
      uint64_t v224 = (void (*)(void, void, void, void, void, void, void, void))sub_100235C68(v214, v60 & 0xF8 | v42 & 7);
    }
    goto LABEL_196;
  }
  uint64_t v69 = 0;
  uint64_t v224 = 0;
  if (v214 != v13) {
    goto LABEL_193;
  }
LABEL_196:
  if (v61 == v68) {
    uint64_t v219 = 0;
  }
  else {
    uint64_t v219 = (void (*)(void, void, void, void, void, void, void, void))sub_100235C68(v60 & 0xF8 | v42 & 7, v61);
  }
  int v70 = ((v60 >> 3) & 0x1FF) + 1;
  unint64_t v267 = (v70 << ((0xFA50u >> (2 * v59)) & 3));
  uint64_t v212 = sub_100253D78(v267);
  if (sub_10029A230((_DWORD *)a2) == 0x10000)
  {
    uint64_t v71 = *(void *)(a2 + 8);
    long long v72 = *(_OWORD *)(v71 + 16);
    long long v277 = *(_OWORD *)v71;
    long long v278 = v72;
    long long v279 = *(_OWORD *)(v71 + 32);
    uint64_t v73 = *(void *)(v71 + 56);
    uint64_t v280 = *(void *)(v71 + 48);
    uint64_t v281 = v73;
    v282 = (char *)&v277 + 8;
    v283 = &v284;
    uint64_t v285 = 0;
    uint64_t v284 = 0;
    if (v73) {
      atomic_fetch_add((atomic_uint *volatile)(v73 + 20), 1u);
    }
    if (*(int *)(v71 + 4) > 2)
    {
      DWORD1(v277) = 0;
      sub_1002931A8((uint64_t)&v277, v71);
    }
    else
    {
      uint64_t v74 = *(void **)(v71 + 72);
      long long v75 = v283;
      *(void *)v283 = *v74;
      v75[1] = v74[1];
    }
  }
  else
  {
    sub_100299554(a2, -1, (uint64_t)&v277);
  }
  if (sub_10029A230((_DWORD *)v40) == 0x10000)
  {
    uint64_t v76 = *(void *)(v40 + 8);
    long long v77 = *(_OWORD *)(v76 + 16);
    long long v268 = *(_OWORD *)v76;
    long long v269 = v77;
    long long v270 = *(_OWORD *)(v76 + 32);
    uint64_t v78 = *(void *)(v76 + 56);
    uint64_t v271 = *(void *)(v76 + 48);
    uint64_t v272 = v78;
    v273 = (char *)&v268 + 8;
    uint64_t v274 = &v275;
    uint64_t v276 = 0;
    uint64_t v275 = 0;
    if (v78) {
      atomic_fetch_add((atomic_uint *volatile)(v78 + 20), 1u);
    }
    if (*(int *)(v76 + 4) > 2)
    {
      DWORD1(v268) = 0;
      sub_1002931A8((uint64_t)&v268, v76);
    }
    else
    {
      uint64_t v79 = *(void **)(v76 + 72);
      long long v80 = v274;
      *(void *)uint64_t v274 = *v79;
      v80[1] = v79[1];
    }
  }
  else
  {
    sub_100299554(v40, -1, (uint64_t)&v268);
  }
  if (sub_10029A230((_DWORD *)a3) == 0x10000)
  {
    uint64_t v81 = *(void *)(a3 + 8);
    long long v82 = *(_OWORD *)(v81 + 16);
    long long v259 = *(_OWORD *)v81;
    long long v260 = v82;
    long long v261 = *(_OWORD *)(v81 + 32);
    uint64_t v83 = *(void *)(v81 + 56);
    uint64_t v262 = *(void *)(v81 + 48);
    uint64_t v263 = v83;
    v264 = (char *)&v259 + 8;
    id v265 = v266;
    v266[0] = 0;
    v266[1] = 0;
    if (v83) {
      atomic_fetch_add((atomic_uint *volatile)(v83 + 20), 1u);
    }
    if (*(int *)(v81 + 4) > 2)
    {
      DWORD1(v259) = 0;
      sub_1002931A8((uint64_t)&v259, v81);
    }
    else
    {
      uint64_t v84 = *(void **)(v81 + 72);
      long long v85 = v265;
      *(void *)id v265 = *v84;
      v85[1] = v84[1];
    }
  }
  else
  {
    sub_100299554(a3, -1, (uint64_t)&v259);
  }
  uint64_t v228 = (void (*)(void, void, void, void, void, void, void, void))v69;
  if (sub_10029A230((_DWORD *)v216) == 0x10000)
  {
    uint64_t v86 = *(void *)(v216 + 8);
    long long v87 = *(_OWORD *)(v86 + 16);
    long long v251 = *(_OWORD *)v86;
    long long v252 = v87;
    long long v253 = *(_OWORD *)(v86 + 32);
    uint64_t v88 = *(void *)(v86 + 56);
    uint64_t v254 = *(void *)(v86 + 48);
    uint64_t v255 = v88;
    CGRect v256 = (char *)&v251 + 8;
    CGRect v257 = v258;
    v258[0] = 0;
    v258[1] = 0;
    if (v88) {
      atomic_fetch_add((atomic_uint *volatile)(v88 + 20), 1u);
    }
    if (*(int *)(v86 + 4) > 2)
    {
      DWORD1(v251) = 0;
      sub_1002931A8((uint64_t)&v251, v86);
    }
    else
    {
      signed int v89 = *(void **)(v86 + 72);
      uint64_t v90 = v257;
      *(void *)CGRect v257 = *v89;
      v90[1] = v89[1];
    }
  }
  else
  {
    sub_100299554(v216, -1, (uint64_t)&v251);
  }
  unsigned int v91 = v42 & 7;
  uint64_t v230 = (((v13 >> 3) & 0x1FF) + 1) << ((0xFA50u >> (2 * (v13 & 7))) & 3);
  uint64_t v92 = (v70 << ((0xFA50u >> (2 * (v42 & 7))) & 3));
  unint64_t v93 = ((int)v92 + 1023) / v92;
  *(void *)&long long v295 = &v296;
  *((void *)&v295 + 1) = 1032;
  if (v69) {
    uint64_t v94 = v92;
  }
  else {
    uint64_t v94 = 0;
  }
  if (v224) {
    int v95 = 1;
  }
  else {
    int v95 = v41;
  }
  if (v95) {
    uint64_t v96 = v92;
  }
  else {
    uint64_t v96 = 0;
  }
  uint64_t v97 = v96 + v94;
  if (v219) {
    uint64_t v98 = v92;
  }
  else {
    uint64_t v98 = 0;
  }
  unint64_t v99 = v267;
  if (v213) {
    unint64_t v99 = 0;
  }
  uint64_t v100 = v97 + v98 + v99;
  double v232 = *(void (**)(void, void))(a6 + 8 * v91);
  if (v41)
  {
    v290 = &v277;
    uint64_t v291 = &v259;
    uint64_t v292 = &v251;
    char v293 = 0;
    long long v288 = 0uLL;
    *(void *)&long long v289 = 0;
    sub_10029127C((uint64_t)v248, (uint64_t *)&v290, (uint64_t)&v288, -1);
    unint64_t v101 = v250;
    if (v250 >= v93) {
      unint64_t v102 = ((int)v92 + 1023) / v92;
    }
    else {
      unint64_t v102 = v250;
    }
    unint64_t v103 = v102 * v100 + 64;
    if (*((void *)&v295 + 1) >= v103)
    {
      *((void *)&v295 + 1) = v102 * v100 + 64;
      uint64_t v104 = (long long *)v295;
    }
    else
    {
      uint64_t v104 = &v296;
      if ((long long *)v295 != &v296)
      {
        if ((void)v295) {
          operator delete[]();
        }
        uint64_t v104 = &v296;
        *(void *)&long long v295 = &v296;
      }
      *((void *)&v295 + 1) = v102 * v100 + 64;
      if (v103 >= 0x409) {
        operator new[]();
      }
    }
    unint64_t v110 = v102 * v92;
    if (v69) {
      uint64_t v111 = (long long *)(((unint64_t)v104 + v102 * v92 + 15) & 0xFFFFFFFFFFFFFFF0);
    }
    else {
      uint64_t v111 = v104;
    }
    if (v69) {
      unint64_t v112 = v104;
    }
    else {
      unint64_t v112 = 0;
    }
    uint64_t v225 = v112;
    sub_10020FEC0((uint64_t)&v268, v68, v111, v102);
    if (v101)
    {
      if (v219) {
        char v113 = 1;
      }
      else {
        char v113 = !v213;
      }
      if (v113)
      {
        unint64_t v114 = ((unint64_t)v111 + v110 + 15) & 0xFFFFFFFFFFFFFFF0;
        if (v213)
        {
          if (v220) {
            uint64_t v115 = v111;
          }
          else {
            uint64_t v115 = v225;
          }
          if (v220) {
            unint64_t v116 = v225;
          }
          else {
            unint64_t v116 = v111;
          }
          if (v69)
          {
            unint64_t v117 = 0;
            while (v117 < v249)
            {
              unint64_t v222 = v117;
              unint64_t v118 = 0;
              unint64_t v120 = *((void *)&v288 + 1);
              uint64_t v119 = v288;
              do
              {
                if (v101 - v118 >= v102) {
                  unint64_t v121 = v102;
                }
                else {
                  unint64_t v121 = v101 - v118;
                }
                int v240 = v234 * v121;
                int v241 = 1;
                v228(v119, 1, 0, 1, v225, 1, &v240, 0);
                ((void (*)(long long *, uint64_t, long long *, uint64_t, unint64_t, uint64_t, void, uint64_t, uint64_t))v232)(v115, 1, v116, 1, v114, 1, v234 * v121, 1, a8);
                int v238 = v234 * v121;
                int v239 = 1;
                v219(v114, 1, 0, 1, v120, 1, &v238, 0);
                uint64_t v119 = v288 + v121 * v230;
                unint64_t v120 = *((void *)&v288 + 1) + v267 * v121;
                *(void *)&long long v288 = v119;
                *((void *)&v288 + 1) = v120;
                v118 += v102;
              }
              while (v118 < v101);
              unint64_t v117 = v222 + 1;
              sub_1002912C8((uint64_t)v248);
            }
          }
          else
          {
            for (unint64_t i = 0; i < v249; ++i)
            {
              unint64_t v172 = 0;
              unint64_t v174 = *((void *)&v288 + 1);
              unint64_t v173 = (unsigned char *)v288;
              do
              {
                if (v101 - v172 >= v102) {
                  unint64_t v175 = v102;
                }
                else {
                  unint64_t v175 = v101 - v172;
                }
                if (v220) {
                  long long v176 = v111;
                }
                else {
                  long long v176 = v173;
                }
                if (v220) {
                  uint64_t v177 = v173;
                }
                else {
                  uint64_t v177 = v111;
                }
                ((void (*)(long long *, uint64_t, long long *, uint64_t, unint64_t, uint64_t, void, uint64_t, uint64_t))v232)((long long *)v176, 1, (long long *)v177, 1, v114, 1, v234 * v175, 1, a8);
                int v238 = v234 * v175;
                int v239 = 1;
                v219(v114, 1, 0, 1, v174, 1, &v238, 0);
                unint64_t v173 = (unsigned char *)(v288 + v175 * v230);
                unint64_t v174 = *((void *)&v288 + 1) + v267 * v175;
                *(void *)&long long v288 = v173;
                *((void *)&v288 + 1) = v174;
                v172 += v102;
              }
              while (v172 < v101);
              sub_1002912C8((uint64_t)v248);
            }
          }
        }
        else
        {
          unint64_t v149 = 0;
          while (v149 < v249)
          {
            unint64_t v226 = v149;
            unint64_t v150 = 0;
            unint64_t v152 = *((void *)&v288 + 1);
            unint64_t v151 = (long long *)v288;
            do
            {
              if (v101 - v150 >= v102) {
                unint64_t v153 = v102;
              }
              else {
                unint64_t v153 = v101 - v150;
              }
              if (v228)
              {
                int v240 = v234 * v153;
                int v241 = 1;
                v228(v151, 1, 0, 1, v104, 1, &v240, 0);
                unint64_t v151 = v104;
              }
              if (v220) {
                id v154 = v111;
              }
              else {
                id v154 = v151;
              }
              if (v220) {
                unint64_t v155 = v151;
              }
              else {
                unint64_t v155 = v111;
              }
              ((void (*)(long long *, uint64_t, long long *, uint64_t, unint64_t, uint64_t, void, uint64_t, uint64_t))v232)(v154, 1, v155, 1, v114, 1, v234 * v153, 1, a8);
              if (v219)
              {
                v236[0] = v234 * v153;
                v236[1] = 1;
                v219(v114, 1, 0, 1, (v114 + v110 + 15) & 0xFFFFFFFFFFFFFFF0, 1, v236, 0);
                uint64_t v156 = v289;
                int v235 = v153;
                long long v157 = &v235;
                unint64_t v158 = (v114 + v110 + 15) & 0xFFFFFFFFFFFFFFF0;
              }
              else
              {
                uint64_t v156 = v289;
                int v237 = v153;
                long long v157 = &v237;
                unint64_t v158 = ((unint64_t)v111 + v110 + 15) & 0xFFFFFFFFFFFFFFF0;
              }
              v157[1] = 1;
              ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))v212)(v158, 1, v156, 1, v152, 1);
              *(void *)&long long v289 = v289 + v153;
              unint64_t v151 = (long long *)(v288 + v153 * v230);
              unint64_t v152 = *((void *)&v288 + 1) + v267 * v153;
              *(void *)&long long v288 = v151;
              *((void *)&v288 + 1) = v152;
              v150 += v102;
            }
            while (v150 < v101);
            unint64_t v149 = v226 + 1;
            sub_1002912C8((uint64_t)v248);
          }
        }
      }
      else
      {
        for (unint64_t j = 0; j < v249; ++j)
        {
          unint64_t v143 = 0;
          unint64_t v145 = *((void *)&v288 + 1);
          unsigned int v144 = (long long *)v288;
          do
          {
            if (v101 - v143 >= v102) {
              unint64_t v146 = v102;
            }
            else {
              unint64_t v146 = v101 - v143;
            }
            if (v228)
            {
              int v240 = v234 * v146;
              int v241 = 1;
              v228(v144, 1, 0, 1, v104, 1, &v240, 0);
              unsigned int v144 = v104;
            }
            if (v220) {
              unsigned int v147 = v111;
            }
            else {
              unsigned int v147 = v144;
            }
            if (v220) {
              int v148 = v144;
            }
            else {
              int v148 = v111;
            }
            ((void (*)(long long *, uint64_t, long long *, uint64_t, unint64_t, uint64_t, void, uint64_t, uint64_t))v232)(v147, 1, v148, 1, v145, 1, v234 * v146, 1, a8);
            unsigned int v144 = (long long *)(v288 + v146 * v230);
            unint64_t v145 = *((void *)&v288 + 1) + v267 * v146;
            *(void *)&long long v288 = v144;
            *((void *)&v288 + 1) = v145;
            v143 += v102;
          }
          while (v143 < v101);
          sub_1002912C8((uint64_t)v248);
        }
      }
    }
    else
    {
      uint64_t v141 = -1;
      while (++v141 < v249)
        sub_1002912C8((uint64_t)v248);
    }
    goto LABEL_446;
  }
  v290 = &v277;
  uint64_t v291 = &v268;
  uint64_t v292 = &v259;
  char v293 = &v251;
  uint64_t v294 = 0;
  long long v288 = 0u;
  long long v289 = 0u;
  sub_10029127C((uint64_t)v248, (uint64_t *)&v290, (uint64_t)&v288, -1);
  if (v69) {
    int v105 = 1;
  }
  else {
    int v105 = !v213;
  }
  if (v224) {
    int v105 = 1;
  }
  if (v219) {
    int v105 = 1;
  }
  if (v250 >= v93) {
    unint64_t v106 = ((int)v92 + 1023) / v92;
  }
  else {
    unint64_t v106 = v250;
  }
  unint64_t v221 = v250;
  if (v105) {
    unint64_t v107 = v106;
  }
  else {
    unint64_t v107 = v250;
  }
  unint64_t v108 = v107 * v100 + 64;
  if (*((void *)&v295 + 1) >= v108)
  {
    *((void *)&v295 + 1) = v107 * v100 + 64;
    id v109 = (long long *)v295;
  }
  else
  {
    id v109 = &v296;
    if ((long long *)v295 != &v296)
    {
      if ((void)v295) {
        operator delete[]();
      }
      id v109 = &v296;
      *(void *)&long long v295 = &v296;
    }
    *((void *)&v295 + 1) = v107 * v100 + 64;
    if (v108 >= 0x409) {
      operator new[]();
    }
  }
  unint64_t v122 = v107 * v92;
  unint64_t v123 = ((unint64_t)v109 + v107 * v92 + 15) & 0xFFFFFFFFFFFFFFF0;
  if (!v69) {
    unint64_t v123 = (unint64_t)v109;
  }
  if (v224) {
    unint64_t v124 = (v123 + v122 + 15) & 0xFFFFFFFFFFFFFFF0;
  }
  else {
    unint64_t v124 = v123;
  }
  if (!v224) {
    unint64_t v123 = 0;
  }
  unint64_t v211 = v123;
  if (v219) {
    char v125 = 1;
  }
  else {
    char v125 = !v213;
  }
  char v217 = v125;
  if (v250)
  {
    unint64_t v126 = 0;
    int v215 = (((v214 >> 3) & 0x1FF) + 1) << ((0xFA50u >> (2 * (v214 & 7))) & 3);
    unint64_t v127 = v124;
    unint64_t v209 = (v124 + v122 + 15) & 0xFFFFFFFFFFFFFFF0;
    while (1)
    {
      if (v126 >= v249) {
        goto LABEL_446;
      }
      unint64_t v207 = v126;
      unint64_t v128 = 0;
      uint64_t v130 = *((void *)&v288 + 1);
      double v129 = (long long *)v288;
      unint64_t v131 = v221;
      uint64_t v132 = v289;
      do
      {
        int v133 = v131;
        BOOL v54 = v131 >= v107;
        v131 -= v107;
        if (v54) {
          int v134 = v107;
        }
        else {
          int v134 = v133;
        }
        if (v228)
        {
          v247[0] = v234 * v134;
          v247[1] = 1;
          v228(v129, 1, 0, 1, v109, 1, v247, 0);
          uint64_t v135 = v109;
          if ((void)v288 == *((void *)&v288 + 1)) {
            id v136 = v109;
          }
          else {
            id v136 = (_OWORD *)v130;
          }
          if ((void)v288 == *((void *)&v288 + 1)) {
            goto LABEL_333;
          }
        }
        else
        {
          uint64_t v135 = v129;
          if (v129 == (long long *)v130) {
            id v136 = v129;
          }
          else {
            id v136 = (_OWORD *)v130;
          }
          if (v129 == (long long *)v130) {
            goto LABEL_333;
          }
        }
        if (v224)
        {
          v246[0] = v234 * v134;
          v246[1] = 1;
          v224(v130, 1, 0, 1, v211, 1, v246, 0);
          id v136 = (_OWORD *)v211;
        }
LABEL_333:
        if (v217)
        {
          ((void (*)(long long *, uint64_t, _OWORD *, uint64_t, unint64_t, void, void, uint64_t, uint64_t))v232)(v135, 1, v136, 1, v127, 0, v234 * v134, 1, a8);
          if (v213)
          {
            v245[0] = v234 * v134;
            v245[1] = 1;
            v219(v127, 1, 0, 1, v132, 1, v245, 0);
          }
          else
          {
            if (v219)
            {
              v243[0] = v234 * v134;
              v243[1] = 1;
              v219(v127, 1, 0, 1, v209, 1, v243, 0);
              uint64_t v137 = *((void *)&v289 + 1);
              int v242 = v134;
              long long v138 = &v242;
              unint64_t v139 = v209;
            }
            else
            {
              uint64_t v137 = *((void *)&v289 + 1);
              int v244 = v134;
              long long v138 = &v244;
              unint64_t v139 = v127;
            }
            v138[1] = 1;
            ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v212)(v139, 1, v137, 1, v132, 1);
            *((void *)&v289 + 1) += v134;
          }
        }
        else
        {
          v232(v135, 1);
        }
        double v129 = (long long *)(v288 + v134 * (uint64_t)(int)v230);
        uint64_t v130 = *((void *)&v288 + 1) + v134 * (uint64_t)v215;
        *(void *)&long long v288 = v129;
        *((void *)&v288 + 1) = v130;
        uint64_t v132 = v289 + v267 * v134;
        *(void *)&long long v289 = v132;
        v128 += v107;
      }
      while (v128 < v221);
      unint64_t v126 = v207 + 1;
      sub_1002912C8((uint64_t)v248);
    }
  }
  uint64_t v140 = -1;
  while (++v140 < v249)
    sub_1002912C8((uint64_t)v248);
LABEL_446:
  if ((long long *)v295 != &v296 && (void)v295 != 0) {
    operator delete[]();
  }
  if (v255 && atomic_fetch_add((atomic_uint *volatile)(v255 + 20), 0xFFFFFFFF) == 1) {
    sub_1002932F4((uint64_t)&v251);
  }
  uint64_t v255 = 0;
  long long v252 = 0u;
  long long v253 = 0u;
  if (SDWORD1(v251) >= 1)
  {
    uint64_t v179 = 0;
    uint64_t v180 = v256;
    do
      *(_DWORD *)&v180[4 * v179++] = 0;
    while (v179 < SDWORD1(v251));
  }
  if (v257 != v258) {
    j__free(v257);
  }
  if (v263 && atomic_fetch_add((atomic_uint *volatile)(v263 + 20), 0xFFFFFFFF) == 1) {
    sub_1002932F4((uint64_t)&v259);
  }
  uint64_t v263 = 0;
  long long v260 = 0u;
  long long v261 = 0u;
  if (SDWORD1(v259) >= 1)
  {
    uint64_t v181 = 0;
    uint64_t v182 = v264;
    do
      *(_DWORD *)&v182[4 * v181++] = 0;
    while (v181 < SDWORD1(v259));
  }
  if (v265 != v266) {
    j__free(v265);
  }
  if (v272 && atomic_fetch_add((atomic_uint *volatile)(v272 + 20), 0xFFFFFFFF) == 1) {
    sub_1002932F4((uint64_t)&v268);
  }
  uint64_t v272 = 0;
  long long v269 = 0u;
  long long v270 = 0u;
  if (SDWORD1(v268) >= 1)
  {
    uint64_t v183 = 0;
    long long v184 = v273;
    do
      *(_DWORD *)&v184[4 * v183++] = 0;
    while (v183 < SDWORD1(v268));
  }
  if (v274 != &v275) {
    j__free(v274);
  }
  if (v281 && atomic_fetch_add((atomic_uint *volatile)(v281 + 20), 0xFFFFFFFF) == 1) {
    sub_1002932F4((uint64_t)&v277);
  }
  uint64_t v281 = 0;
  long long v278 = 0u;
  long long v279 = 0u;
  if (SDWORD1(v277) >= 1)
  {
    uint64_t v185 = 0;
    uint64_t v186 = v282;
    do
      *(_DWORD *)&v186[4 * v185++] = 0;
    while (v185 < SDWORD1(v277));
  }
  if (v283 != &v284) {
    j__free(v283);
  }
}

void sub_100213CCC(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_10000B6A8(a1);
  }
  _Unwind_Resume(a1);
}

void sub_100213E2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (STACK[0x310] != a10 && STACK[0x310] != 0) {
    operator delete[]();
  }
  sub_1000094F4((uint64_t)&a45);
  sub_1000094F4((uint64_t)&a57);
  sub_1000094F4((uint64_t)&a71);
  sub_1000094F4((uint64_t)&STACK[0x250]);
  _Unwind_Resume(a1);
}

void sub_100213E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  sub_1002D6AE8(v10, &off_100494700);
  sub_100211D94(a1, a2, a3, a4, a5, (uint64_t)off_1004D2C50, 0, 0);
  if (v11) {
    sub_1002D6888(v10);
  }
}

void sub_100213F14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100213F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1002D6AE8(v7, &off_100494720);
  char v6 = sub_1002A02C4();
  sub_100211D94(a1, a2, a3, (uint64_t)v6, -1, (uint64_t)off_1004D2C90, 0, 0);
  if (v8) {
    sub_1002D6888(v7);
  }
}

void sub_100213FB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100213FC4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, double a5)
{
  double v12 = a5;
  sub_1002D6AE8(v10, &off_100494740);
  uint64_t v9 = sub_1002A02C4();
  sub_100211D94(a1, a2, a3, (uint64_t)v9, a4, (uint64_t)off_1004D2CD0, 1, (uint64_t)&v12);
  if (v11) {
    sub_1002D6888(v10);
  }
}

void sub_100214054(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10020FA00((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100214068(uint64_t a1, uint64_t a2, uint64_t a3, int a4, double a5)
{
  double v12 = a5;
  sub_1002D6AE8(v10, &off_100494760);
  uint64_t v9 = sub_1002A02C4();
  sub_100211D94(a1, a2, a3, (uint64_t)v9, a4, (uint64_t)off_1004D2DE8, 1, (uint64_t)&v12);
  if (v11) {
    sub_1002D6888(v10);
  }
}

void sub_1002140F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10020FA00((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10021410C(uint64_t a1, uint64_t a2, int a3, double a4)
{
  double v10 = a4;
  sub_1002D6AE8(v8, &off_100494780);
  int v7 = sub_1002A02C4();
  sub_100211D94(a1, a1, a2, (uint64_t)v7, a3, (uint64_t)off_1004D2E28, 1, (uint64_t)&v10);
  if (v9) {
    sub_1002D6888(v8);
  }
}

void sub_100214198(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10020FA00((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002141AC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, double a5, double a6, double a7)
{
  sub_1002D6AE8(v15, &off_1004947A0);
  *(double *)unsigned int v17 = a5;
  *(double *)&v17[1] = a6;
  *(double *)&_OWORD v17[2] = a7;
  int v14 = sub_1002A02C4();
  sub_100211D94(a1, a2, a3, (uint64_t)v14, a4, (uint64_t)off_1004D2D10, 1, (uint64_t)v17);
  if (v16) {
    sub_1002D6888(v15);
  }
}

void sub_100214284(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_10000B6A8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002142A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1002142B4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v130 = a4;
  sub_1002D6AE8(v128, &off_1004947C0);
  if (a4 >= 6)
  {
    *(void *)unint64_t v139 = 0;
    *(void *)&v139[8] = 0;
    qmemcpy((void *)sub_1002D19D8(v139, 92), "op == CMP_LT || op == CMP_LE || op == CMP_EQ || op == CMP_NE || op == CMP_GE || op == CMP_GT", 92);
    sub_1002D2278(-215, (uint64_t *)v139, "compare", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/arithm.cpp", 1234);
  }
  int v8 = sub_10029A230((_DWORD *)a1);
  int v9 = sub_10029A230((_DWORD *)a2);
  int v10 = v8 == 0x20000;
  if (v9 == 0x20000) {
    ++v10;
  }
  if (v10 != 1
    && sub_10029C604(a1, a2)
    && (int v11 = sub_10029AB74((int *)a1, -1), v11 == sub_10029AB74((int *)a2, -1)))
  {
    char v12 = 0;
  }
  else
  {
    unsigned int v13 = sub_10029AB74((int *)a2, -1);
    int v14 = sub_10029A230((_DWORD *)a1);
    int v15 = sub_10029A230((_DWORD *)a2);
    if ((int)sub_10029C9C4(a1, -1) <= 2
      && sub_10029D8F8(a1, -1)
      && ((sub_10029A23C(a1, 0xFFFFFFFF, (uint64_t)v139), *(_DWORD *)v139 == 1) || *(_DWORD *)&v139[4] == 1)
      && (v14 == 0x20000 || v15 != 0x20000))
    {
      unsigned int v80 = (v13 >> 3) & 0x1FF;
      BOOL v81 = *(_DWORD *)v139 == v80 + 1;
      if (*(_DWORD *)&v139[4] != 1) {
        BOOL v81 = 0;
      }
      BOOL v82 = *(_DWORD *)&v139[4] == v80 + 1 || *(_DWORD *)&v139[4] == 1;
      if (*(_DWORD *)v139 != 1) {
        BOOL v82 = 0;
      }
      int v16 = 1;
      if (!v82 && !v81)
      {
        int v16 = 0;
        if (*(_DWORD *)v139 == 1 && *(_DWORD *)&v139[4] == 4)
        {
          int v83 = sub_10029AB74((int *)a1, -1);
          int v16 = v80 < 4 && v83 == 6;
        }
      }
    }
    else
    {
      int v16 = 0;
    }
    unsigned int v17 = sub_10029AB74((int *)a1, -1);
    int v18 = sub_10029A230((_DWORD *)a2);
    int v19 = sub_10029A230((_DWORD *)a1);
    if ((int)sub_10029C9C4(a2, -1) <= 2
      && sub_10029D8F8(a2, -1)
      && ((sub_10029A23C(a2, 0xFFFFFFFF, (uint64_t)v139), *(_DWORD *)v139 == 1) || *(_DWORD *)&v139[4] == 1)
      && (v18 == 0x20000 || v19 != 0x20000))
    {
      unsigned int v85 = (v17 >> 3) & 0x1FF;
      BOOL v86 = *(_DWORD *)v139 == v85 + 1;
      if (*(_DWORD *)&v139[4] != 1) {
        BOOL v86 = 0;
      }
      BOOL v87 = *(_DWORD *)&v139[4] == v85 + 1 || *(_DWORD *)&v139[4] == 1;
      BOOL v88 = *(_DWORD *)v139 == 1 && v87;
      int v20 = 1;
      if (!v88 && !v86)
      {
        int v20 = 0;
        if (*(_DWORD *)v139 == 1 && *(_DWORD *)&v139[4] == 4)
        {
          int v89 = sub_10029AB74((int *)a2, -1);
          int v20 = v85 < 4 && v89 == 6;
        }
      }
    }
    else
    {
      int v20 = 0;
    }
    if (v16 && (v20 & 1) == 0)
    {
      if ((v130 - 2) >= 3)
      {
        if (v130 == 1) {
          int v21 = 3;
        }
        else {
          int v21 = v130;
        }
      }
      else
      {
        int v21 = dword_100404870[v130 - 2];
      }
      int v130 = v21;
      sub_1002142B4(a2, a1, a3);
      goto LABEL_170;
    }
    if (v16 == v20)
    {
      *(void *)unint64_t v139 = 0;
      *(void *)&v139[8] = 0;
      qmemcpy((void *)sub_1002D19D8(v139, 139), "The operation is neither 'array op array' (where arrays have the same size and the same type), nor 'array op scalar', nor 'scalar op array'", 139);
      sub_1002D2278(-209, (uint64_t *)v139, "compare", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/arithm.cpp", 1256);
    }
    char v12 = 1;
  }
  int v22 = sub_10029A230((_DWORD *)a1);
  int v23 = sub_10029A230((_DWORD *)a2);
  if (sub_10029A230((_DWORD *)a1) == 0x10000)
  {
    uint64_t v24 = *(void *)(a1 + 8);
    long long v25 = *(_OWORD *)(v24 + 16);
    long long v120 = *(_OWORD *)v24;
    long long v121 = v25;
    long long v122 = *(_OWORD *)(v24 + 32);
    uint64_t v26 = *(void *)(v24 + 56);
    *(void *)&long long v123 = *(void *)(v24 + 48);
    *((void *)&v123 + 1) = v26;
    unint64_t v124 = (uint64_t *)&v120 + 1;
    char v125 = &v126;
    uint64_t v126 = 0;
    uint64_t v127 = 0;
    if (v26) {
      atomic_fetch_add((atomic_uint *volatile)(v26 + 20), 1u);
    }
    if (*(int *)(v24 + 4) > 2)
    {
      DWORD1(v120) = 0;
      sub_1002931A8((uint64_t)&v120, v24);
    }
    else
    {
      long long v27 = *(uint64_t **)(v24 + 72);
      uint64_t v28 = v125;
      uint64_t *v125 = *v27;
      v28[1] = v27[1];
    }
  }
  else
  {
    sub_100299554(a1, -1, (uint64_t)&v120);
  }
  if (sub_10029A230((_DWORD *)a2) == 0x10000)
  {
    uint64_t v29 = *(void *)(a2 + 8);
    long long v30 = *(_OWORD *)(v29 + 16);
    long long v112 = *(_OWORD *)v29;
    long long v31 = *(_OWORD *)(v29 + 32);
    long long v113 = v30;
    long long v114 = v31;
    uint64_t v32 = *(void *)(v29 + 56);
    *(void *)&long long v115 = *(void *)(v29 + 48);
    *((void *)&v115 + 1) = v32;
    unint64_t v116 = (uint64_t *)&v112 + 1;
    unint64_t v117 = &v118;
    uint64_t v118 = 0;
    uint64_t v119 = 0;
    if (v32) {
      atomic_fetch_add((atomic_uint *volatile)(v32 + 20), 1u);
    }
    if (*(int *)(v29 + 4) > 2)
    {
      DWORD1(v112) = 0;
      sub_1002931A8((uint64_t)&v112, v29);
    }
    else
    {
      int v33 = *(uint64_t **)(v29 + 72);
      uint64_t v34 = v117;
      *unint64_t v117 = *v33;
      v34[1] = v33[1];
    }
  }
  else
  {
    sub_100299554(a2, -1, (uint64_t)&v112);
  }
  if (v22 != v23 || SDWORD1(v120) > 2 || SDWORD1(v112) >= 3)
  {
    __int16 v36 = v120;
    char v37 = v112;
    int v35 = v124;
    goto LABEL_60;
  }
  int v35 = v124;
  __int16 v36 = v120;
  char v37 = v112;
  if (*((_DWORD *)v124 + 1) != *((_DWORD *)v116 + 1)
    || (__int32 v38 = *(_DWORD *)v124, *(_DWORD *)v124 != *(_DWORD *)v116)
    || (((unsigned __int16)v112 ^ (unsigned __int16)v120) & 0xFFF) != 0)
  {
LABEL_60:
    sub_100295520((int *)a3, SDWORD1(v120), v35, v36 & 0xFF8, 0xFFFFFFFF, 0, 0);
    sub_1002977F4((uint64_t)&v120, 1, 0, (uint64_t)v139);
    if (*((void *)&v123 + 1)
      && atomic_fetch_add((atomic_uint *volatile)(*((void *)&v123 + 1) + 20), 0xFFFFFFFF) == 1)
    {
      sub_1002932F4((uint64_t)&v120);
    }
    if (SDWORD1(v120) >= 1)
    {
      uint64_t v44 = 0;
      uint64_t v45 = v124;
      do
        *((_DWORD *)v45 + v44++) = 0;
      while (v44 < SDWORD1(v120));
    }
    long long v120 = *(_OWORD *)v139;
    long long v121 = *(_OWORD *)&v139[16];
    long long v122 = *(_OWORD *)&v139[32];
    long long v123 = *(_OWORD *)&v139[48];
    if (v125 == &v126)
    {
      uint64_t v46 = v141;
      if (*(int *)&v139[4] <= 2) {
        goto LABEL_68;
      }
    }
    else
    {
      j__free(v125);
      unint64_t v124 = (uint64_t *)&v120 + 1;
      char v125 = &v126;
      uint64_t v46 = v141;
      if (*(int *)&v139[4] <= 2)
      {
LABEL_68:
        uint64_t v126 = *v46;
        uint64_t v127 = v46[1];
        goto LABEL_71;
      }
    }
    unint64_t v124 = v140;
    char v125 = v46;
    uint64_t v46 = &v142;
    uint64_t v140 = (uint64_t *)&v139[8];
    uint64_t v141 = &v142;
LABEL_71:
    *(_DWORD *)unint64_t v139 = 1124007936;
    memset(&v139[4], 0, 60);
    if (v46 != &v142) {
      j__free(v46);
    }
    sub_1002977F4((uint64_t)&v112, 1, 0, (uint64_t)v139);
    if (*((void *)&v115 + 1)
      && atomic_fetch_add((atomic_uint *volatile)(*((void *)&v115 + 1) + 20), 0xFFFFFFFF) == 1)
    {
      sub_1002932F4((uint64_t)&v112);
    }
    if (SDWORD1(v112) >= 1)
    {
      uint64_t v47 = 0;
      uint64_t v48 = v116;
      do
        *((_DWORD *)v48 + v47++) = 0;
      while (v47 < SDWORD1(v112));
    }
    long long v112 = *(_OWORD *)v139;
    long long v113 = *(_OWORD *)&v139[16];
    long long v114 = *(_OWORD *)&v139[32];
    long long v115 = *(_OWORD *)&v139[48];
    if (v117 == &v118)
    {
      int v49 = v141;
      if (*(int *)&v139[4] <= 2) {
        goto LABEL_81;
      }
    }
    else
    {
      j__free(v117);
      unint64_t v116 = (uint64_t *)&v112 + 1;
      unint64_t v117 = &v118;
      int v49 = v141;
      if (*(int *)&v139[4] <= 2)
      {
LABEL_81:
        uint64_t v118 = *v49;
        uint64_t v119 = v49[1];
        goto LABEL_84;
      }
    }
    unint64_t v116 = v140;
    unint64_t v117 = v49;
    int v49 = &v142;
    uint64_t v140 = (uint64_t *)&v139[8];
    uint64_t v141 = &v142;
LABEL_84:
    *(_DWORD *)unint64_t v139 = 1124007936;
    memset(&v139[4], 0, 60);
    if (v49 != &v142) {
      j__free(v49);
    }
    if (sub_10029A230((_DWORD *)a3) == 0x10000)
    {
      uint64_t v50 = *(void *)(a3 + 8);
      long long v51 = *(_OWORD *)(v50 + 16);
      *(_OWORD *)unint64_t v139 = *(_OWORD *)v50;
      *(_OWORD *)&v139[16] = v51;
      *(_OWORD *)&v139[32] = *(_OWORD *)(v50 + 32);
      uint64_t v52 = *(void *)(v50 + 56);
      *(void *)&v139[48] = *(void *)(v50 + 48);
      *(void *)&v139[56] = v52;
      uint64_t v140 = (uint64_t *)&v139[8];
      uint64_t v141 = &v142;
      uint64_t v142 = 0;
      uint64_t v143 = 0;
      if (v52) {
        atomic_fetch_add((atomic_uint *volatile)(v52 + 20), 1u);
      }
      if (*(int *)(v50 + 4) > 2)
      {
        *(_DWORD *)&v139[4] = 0;
        sub_1002931A8((uint64_t)v139, v50);
      }
      else
      {
        uint64_t v53 = *(uint64_t **)(v50 + 72);
        BOOL v54 = v141;
        *uint64_t v141 = *v53;
        v54[1] = v53[1];
      }
    }
    else
    {
      sub_100299554(a3, -1, (uint64_t)v139);
    }
    sub_1002977F4((uint64_t)v139, 1, 0, (uint64_t)v103);
    if (*(void *)&v139[56] && atomic_fetch_add((atomic_uint *volatile)(*(void *)&v139[56] + 20), 0xFFFFFFFF) == 1) {
      sub_1002932F4((uint64_t)v139);
    }
    *(void *)&v139[56] = 0;
    memset(&v139[16], 0, 32);
    if (*(int *)&v139[4] >= 1)
    {
      uint64_t v55 = 0;
      BOOL v56 = v140;
      do
        *((_DWORD *)v56 + v55++) = 0;
      while (v55 < *(int *)&v139[4]);
    }
    if (v141 != &v142) {
      j__free(v141);
    }
    uint64_t v57 = v36 & 7;
    if (SDWORD1(v120) >= 1 && (unint64_t v58 = v125[DWORD1(v120) - 1]) != 0)
    {
      int v59 = off_1004947E0[v36 & 7];
      if (v12) {
        goto LABEL_104;
      }
    }
    else
    {
      unint64_t v58 = 1;
      int v59 = off_1004947E0[v36 & 7];
      if (v12)
      {
LABEL_104:
        v151[0] = (uint64_t)&v120;
        v151[1] = (uint64_t)v103;
        v151[2] = 0;
        uint64_t v150 = 0;
        uint64_t v149 = 0;
        sub_10029127C((uint64_t)&v144, v151, (uint64_t)&v149, -1);
        unint64_t v60 = v148;
        if ((v58 + 1023) / v58 >= v148) {
          unint64_t v61 = v148;
        }
        else {
          unint64_t v61 = (v58 + 1023) / v58;
        }
        *(void *)unint64_t v139 = &v139[16];
        *(void *)&v139[8] = v61 * v58;
        if (v61 * v58 >= 0x409) {
          operator new[]();
        }
        if (v57 >= 5)
        {
          sub_10020FEC0((uint64_t)&v112, v57, &v139[16], v61);
          goto LABEL_111;
        }
        double v102 = 0.0;
        uint64_t v69 = (void (*)(void, uint64_t, void, uint64_t, double *, uint64_t, uint64_t *, void))sub_100235C68(v37 & 7, 6);
        uint64_t v101 = 0x100000001;
        v69(v113, 1, 0, 1, &v102, 1, &v101, 0);
        if (v102 >= dbl_1004047F0[v57])
        {
          if (v102 <= dbl_100404830[v57])
          {
            int v100 = (uint64_t)rint(v102);
            if (v102 != (double)v100)
            {
              if ((v130 & 0xFFFFFFFE) == 2)
              {
                int v91 = (int)v102;
                if (v102 > (double)(int)v102) {
                  ++v91;
                }
              }
              else
              {
                if (v130 != 4 && v130 != 1)
                {
                  if (v130 == 5) {
                    int v99 = 255;
                  }
                  else {
                    int v99 = 0;
                  }
                  *(double *)&long long v131 = (double)v99;
                  *((double *)&v131 + 1) = (double)v99;
                  *(double *)&long long v132 = (double)v99;
                  *((double *)&v132 + 1) = (double)v99;
                  sub_100255390((uint64_t)v103, (uint64_t)&v131);
LABEL_135:
                  if (*(unsigned char **)v139 != &v139[16] && *(void *)v139) {
                    goto LABEL_145;
                  }
                  goto LABEL_146;
                }
                int v91 = (int)v102 - (v102 < (double)(int)v102);
              }
              int v100 = v91;
            }
            *(void *)&long long v132 = &v100;
            *((void *)&v132 + 1) = &v100;
            uint64_t v134 = 0;
            uint64_t v135 = 0;
            id v136 = (char *)&v131 + 8;
            uint64_t v137 = &v138;
            long long v131 = xmmword_1004047B0;
            int64x2_t v138 = vdupq_n_s64(4uLL);
            *(void *)&long long v133 = &v101;
            *((void *)&v133 + 1) = &v101;
            sub_10020FEC0((uint64_t)&v131, v57, &v139[16], v61);
            if (v135 && atomic_fetch_add((atomic_uint *volatile)(v135 + 20), 0xFFFFFFFF) == 1) {
              sub_1002932F4((uint64_t)&v131);
            }
            uint64_t v135 = 0;
            long long v132 = 0u;
            long long v133 = 0u;
            if (SDWORD1(v131) >= 1)
            {
              uint64_t v97 = 0;
              uint64_t v98 = v136;
              do
                *(_DWORD *)&v98[4 * v97++] = 0;
              while (v97 < SDWORD1(v131));
            }
            if (v137 != &v138) {
              j__free(v137);
            }
LABEL_111:
            if (v60)
            {
              for (unint64_t i = 0; i < v147; ++i)
              {
                unint64_t v63 = 0;
                uint64_t v64 = v149;
                uint64_t v65 = v150;
                do
                {
                  if (v60 - v63 >= v61) {
                    unint64_t v66 = v61;
                  }
                  else {
                    unint64_t v66 = v60 - v63;
                  }
                  v59(v64, 0, (int)&v139[16], 0, v65, 0, v66, 1, (uint64_t)&v130);
                  uint64_t v64 = v149 + (int)v66 * v58;
                  uint64_t v149 = v64;
                  uint64_t v65 = v150 + (int)v66;
                  uint64_t v150 = v65;
                  v63 += v61;
                }
                while (v63 < v60);
                sub_1002912C8((uint64_t)&v144);
              }
            }
            else
            {
              uint64_t v72 = -1;
              while (++v72 < v147)
                sub_1002912C8((uint64_t)&v144);
            }
            if (*(unsigned char **)v139 != &v139[16] && *(void *)v139 != 0) {
LABEL_145:
            }
              operator delete[]();
LABEL_146:
            if (v107 && atomic_fetch_add((atomic_uint *volatile)(v107 + 20), 0xFFFFFFFF) == 1) {
              sub_1002932F4((uint64_t)v103);
            }
            uint64_t v107 = 0;
            long long v105 = 0u;
            long long v106 = 0u;
            if (v104 >= 1)
            {
              uint64_t v74 = 0;
              uint64_t v75 = v108;
              do
                *(_DWORD *)(v75 + 4 * v74++) = 0;
              while (v74 < v104);
            }
            if (v109 != &v110) {
              j__free(v109);
            }
            goto LABEL_154;
          }
          double v71 = 255.0;
          if ((v130 - 3) >= 3) {
            double v71 = 0.0;
          }
        }
        else
        {
          BOOL v70 = (v130 - 1) < 2 || v130 == 5;
          double v71 = 255.0;
          if (!v70) {
            double v71 = 0.0;
          }
        }
        *(double *)&long long v131 = v71;
        *((double *)&v131 + 1) = v71;
        *(double *)&long long v132 = v71;
        *((double *)&v132 + 1) = v71;
        sub_100255390((uint64_t)v103, (uint64_t)&v131);
        goto LABEL_135;
      }
    }
    *(void *)&long long v131 = &v120;
    *((void *)&v131 + 1) = &v112;
    *(void *)&long long v132 = v103;
    *((void *)&v132 + 1) = 0;
    uint64_t v145 = 0;
    uint64_t v144 = 0;
    uint64_t v146 = 0;
    sub_10029127C((uint64_t)v139, (uint64_t *)&v131, (uint64_t)&v144, -1);
    uint64_t v67 = *(unsigned int *)&v139[40];
    uint64_t v68 = -1;
    while ((unint64_t)++v68 < *(void *)&v139[32])
    {
      v59(v144, 0, v145, 0, v146, 0, v67, 1, (uint64_t)&v130);
      sub_1002912C8((uint64_t)v139);
    }
    goto LABEL_146;
  }
  v111.i32[0] = *((_DWORD *)v124 + 1);
  v111.i32[1] = v38;
  sub_10029E6D4(a3, &v111, v120 & 0xFF8, -1, 0, 0);
  if (sub_10029A230((_DWORD *)a3) == 0x10000)
  {
    uint64_t v39 = *(void *)(a3 + 8);
    long long v40 = *(_OWORD *)(v39 + 16);
    *(_OWORD *)unint64_t v139 = *(_OWORD *)v39;
    *(_OWORD *)&v139[16] = v40;
    *(_OWORD *)&v139[32] = *(_OWORD *)(v39 + 32);
    uint64_t v41 = *(void *)(v39 + 56);
    *(void *)&v139[48] = *(void *)(v39 + 48);
    *(void *)&v139[56] = v41;
    uint64_t v140 = (uint64_t *)&v139[8];
    uint64_t v141 = &v142;
    uint64_t v142 = 0;
    uint64_t v143 = 0;
    if (v41) {
      atomic_fetch_add((atomic_uint *volatile)(v41 + 20), 1u);
    }
    if (*(int *)(v39 + 4) > 2)
    {
      *(_DWORD *)&v139[4] = 0;
      sub_1002931A8((uint64_t)v139, v39);
    }
    else
    {
      int v42 = *(uint64_t **)(v39 + 72);
      uint64_t v43 = v141;
      *uint64_t v141 = *v42;
      v43[1] = v42[1];
    }
  }
  else
  {
    sub_100299554(a3, -1, (uint64_t)v139);
  }
  uint64_t v92 = DWORD2(v120);
  unint64_t v93 = (((unint64_t)v120 >> 3) & 0x1FF) + 1;
  if ((v120 & v112 & *(_DWORD *)v139 & 0x4000) != 0
    && (uint64_t v94 = SHIDWORD(v120) * (uint64_t)(int)v93 * SDWORD2(v120), v94 == (int)v94))
  {
    uint64_t v92 = 1;
  }
  else
  {
    uint64_t v94 = (HIDWORD(v120) * v93);
  }
  off_1004947E0[v120 & 7](v121, v126, v113, v118, *(void *)&v139[16], v142, v94, v92, (uint64_t)&v130);
  if (*(void *)&v139[56] && atomic_fetch_add((atomic_uint *volatile)(*(void *)&v139[56] + 20), 0xFFFFFFFF) == 1) {
    sub_1002932F4((uint64_t)v139);
  }
  *(void *)&v139[56] = 0;
  memset(&v139[16], 0, 32);
  if (*(int *)&v139[4] >= 1)
  {
    uint64_t v95 = 0;
    uint64_t v96 = v140;
    do
      *((_DWORD *)v96 + v95++) = 0;
    while (v95 < *(int *)&v139[4]);
  }
  if (v141 != &v142) {
    j__free(v141);
  }
LABEL_154:
  if (*((void *)&v115 + 1)
    && atomic_fetch_add((atomic_uint *volatile)(*((void *)&v115 + 1) + 20), 0xFFFFFFFF) == 1)
  {
    sub_1002932F4((uint64_t)&v112);
  }
  *((void *)&v115 + 1) = 0;
  long long v113 = 0u;
  long long v114 = 0u;
  if (SDWORD1(v112) >= 1)
  {
    uint64_t v76 = 0;
    long long v77 = v116;
    do
      *((_DWORD *)v77 + v76++) = 0;
    while (v76 < SDWORD1(v112));
  }
  if (v117 != &v118) {
    j__free(v117);
  }
  if (*((void *)&v123 + 1)
    && atomic_fetch_add((atomic_uint *volatile)(*((void *)&v123 + 1) + 20), 0xFFFFFFFF) == 1)
  {
    sub_1002932F4((uint64_t)&v120);
  }
  *((void *)&v123 + 1) = 0;
  long long v121 = 0u;
  long long v122 = 0u;
  if (SDWORD1(v120) >= 1)
  {
    uint64_t v78 = 0;
    uint64_t v79 = v124;
    do
      *((_DWORD *)v79 + v78++) = 0;
    while (v78 < SDWORD1(v120));
  }
  if (v125 != &v126) {
    j__free(v125);
  }
LABEL_170:
  if (v129) {
    sub_1002D6888(v128);
  }
}

void sub_100215350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52)
{
  uint64_t v55 = *(void *)(v52 + 320);
  if (v55 != v53 && v55 != 0) {
    operator delete[]();
  }
  sub_1000094F4((uint64_t)&a14);
  sub_1000094F4((uint64_t)&a27);
  sub_1000094F4((uint64_t)&a39);
  sub_10020FA00((uint64_t)&a52);
  _Unwind_Resume(a1);
}

uint64_t sub_100215548(int *a1, unsigned int a2, int a3, int a4)
{
  if ((int)sub_10029C9C4((uint64_t)a1, -1) > 2) {
    return 0;
  }
  uint64_t result = sub_10029D8F8((uint64_t)a1, -1);
  if (result)
  {
    sub_10029A23C((uint64_t)a1, 0xFFFFFFFF, (uint64_t)&v14);
    if (v14 == 1 || v15 == 1)
    {
      if (a3 == 0x20000 || a4 != 0x20000)
      {
        unsigned int v9 = (a2 >> 3) & 0x1FF;
        BOOL v10 = v14 == v9 + 1;
        if (v15 != 1) {
          BOOL v10 = 0;
        }
        BOOL v11 = v15 == v9 + 1 || v15 == 1;
        if (v14 != 1) {
          BOOL v11 = 0;
        }
        uint64_t result = 1;
        if (!v11 && !v10)
        {
          uint64_t result = 0;
          if (v14 == 1 && v15 == 4)
          {
            int v12 = sub_10029AB74(a1, -1);
            return v9 < 4 && v12 == 6;
          }
        }
      }
      else
      {
        return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100215688(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  if (a8)
  {
    uint64_t v8 = a7 - 4;
    while (a7 < 32)
    {
      uint64_t v9 = 0;
      if ((int)v8 >= 0) {
        goto LABEL_10;
      }
LABEL_13:
      if ((int)v9 < a7)
      {
        do
        {
          *(unsigned char *)(a5 + v9) = byte_100406966[*(unsigned __int8 *)(a3 + v9)
                                             + 256
                                             + (unint64_t)*(unsigned __int8 *)(result + v9)];
          ++v9;
        }
        while (a7 != v9);
      }
      result += a2;
      a3 += a4;
      a5 += a6;
      if (!--a8) {
        return result;
      }
    }
    uint64_t v10 = 16;
    do
    {
      uint8x16_t v11 = vqaddq_u8(*(uint8x16_t *)(result + v10), *(uint8x16_t *)(a3 + v10));
      int v12 = (uint8x16_t *)(a5 + v10);
      v12[-1] = vqaddq_u8(*(uint8x16_t *)(result + v10 - 16), *(uint8x16_t *)(a3 + v10 - 16));
      *int v12 = v11;
      uint64_t v13 = v10 + 16;
      v10 += 32;
    }
    while (v13 <= a7 - 32);
    uint64_t v9 = (v10 - 16);
    if ((int)v9 > (int)v8) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v14 = v9 << 32;
    do
    {
      uint64_t v15 = (v14 >> 32) | 1;
      char v16 = byte_100406966[*(unsigned __int8 *)(a3 + v15) + 256 + (unint64_t)*(unsigned __int8 *)(result + v15)];
      *(unsigned char *)(a5 + v9) = byte_100406966[*(unsigned __int8 *)(a3 + v9)
                                         + 256
                                         + (unint64_t)*(unsigned __int8 *)(result + v9)];
      *(unsigned char *)(a5 + v15) = v16;
      uint64_t v17 = (v14 >> 32) | 3;
      char v18 = byte_100406966[*(unsigned __int8 *)(a3 + v17) + 256 + (unint64_t)*(unsigned __int8 *)(result + v17)];
      *(unsigned char *)(a5 + ((v14 >> 32) | 2)) = byte_100406966[*(unsigned __int8 *)(a3 + ((v14 >> 32) | 2))
                                                        + 256
                                                        + (unint64_t)*(unsigned __int8 *)(result
                                                                                               + ((v14 >> 32) | 2))];
      *(unsigned char *)(a5 + v17) = v18;
      v9 += 4;
      v14 += 0x400000000;
    }
    while (v9 <= v8);
    uint64_t v9 = v9;
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1002157E4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  if (a8)
  {
    uint64_t v8 = 0;
    uint64_t v9 = a7 - 4;
    uint64_t v10 = result;
    uint64_t v11 = a3;
    uint64_t v12 = a5;
    do
    {
      if (a7 >= 32)
      {
        uint64_t v13 = 0;
        do
        {
          int8x16_t v14 = vqaddq_s8(*(int8x16_t *)(v10 + v13 + 16), *(int8x16_t *)(v11 + v13 + 16));
          uint64_t v15 = (int8x16_t *)(v12 + v13);
          *uint64_t v15 = vqaddq_s8(*(int8x16_t *)(v10 + v13), *(int8x16_t *)(v11 + v13));
          v15[1] = v14;
          v13 += 32;
        }
        while (v13 <= a7 - 32);
        uint64_t v13 = v13;
        if ((int)v13 > (int)v9) {
          goto LABEL_31;
        }
      }
      else
      {
        uint64_t v13 = 0;
        if ((int)v9 < 0) {
          goto LABEL_31;
        }
      }
      uint64_t v16 = v13 << 32;
      do
      {
        int v17 = *(char *)(v10 + v13) + *(char *)(v11 + v13);
        if (v17 >= 127) {
          int v17 = 127;
        }
        if (v17 <= -128) {
          LOBYTE(v17) = 0x80;
        }
        uint64_t v18 = v16 >> 32;
        uint64_t v19 = (v16 >> 32) | 1;
        int v20 = *(char *)(v10 + v19) + *(char *)(v11 + v19);
        if (v20 >= 127) {
          int v20 = 127;
        }
        *(unsigned char *)(v12 + v13) = v17;
        if (v20 <= -128) {
          char v21 = 0x80;
        }
        else {
          char v21 = v20;
        }
        *(unsigned char *)(v12 + v19) = v21;
        uint64_t v22 = v18 | 2;
        int v23 = *(char *)(v10 + (v18 | 2)) + *(char *)(v11 + (v18 | 2));
        if (v23 >= 127) {
          int v23 = 127;
        }
        if (v23 <= -128) {
          LOBYTE(v23) = 0x80;
        }
        uint64_t v24 = v18 | 3;
        int v25 = *(char *)(v10 + v24) + *(char *)(v11 + v24);
        if (v25 >= 127) {
          int v25 = 127;
        }
        *(unsigned char *)(v12 + v22) = v23;
        if (v25 <= -128) {
          char v26 = 0x80;
        }
        else {
          char v26 = v25;
        }
        *(unsigned char *)(v12 + v24) = v26;
        v13 += 4;
        v16 += 0x400000000;
      }
      while (v13 <= v9);
      uint64_t v13 = v13;
LABEL_31:
      if ((int)v13 < a7)
      {
        unint64_t v27 = a7 - v13;
        if (v27 < 8)
        {
          uint64_t v28 = v13;
          goto LABEL_34;
        }
        if ((unint64_t)(a5 + v8 * a6 - (result + v8 * a2)) < 0x20)
        {
          uint64_t v28 = v13;
          goto LABEL_34;
        }
        if ((unint64_t)(a5 + v8 * a6 - (a3 + v8 * a4)) < 0x20)
        {
          uint64_t v28 = v13;
          goto LABEL_34;
        }
        if (v27 >= 0x20)
        {
          unint64_t v30 = v27 & 0xFFFFFFFFFFFFFFE0;
          uint64_t v31 = v13;
          unint64_t v32 = v27 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            int8x16_t v33 = vqaddq_s8(*(int8x16_t *)(v10 + v31 + 16), *(int8x16_t *)(v11 + v31 + 16));
            uint64_t v34 = (int8x16_t *)(v12 + v31);
            *uint64_t v34 = vqaddq_s8(*(int8x16_t *)(v10 + v31), *(int8x16_t *)(v11 + v31));
            v34[1] = v33;
            v31 += 32;
            v32 -= 32;
          }
          while (v32);
          if (v27 == v30) {
            goto LABEL_3;
          }
          if ((v27 & 0x18) == 0)
          {
            uint64_t v28 = v30 + v13;
            do
            {
LABEL_34:
              int v29 = *(char *)(v10 + v28) + *(char *)(v11 + v28);
              if (v29 >= 127) {
                int v29 = 127;
              }
              if (v29 <= -128) {
                LOBYTE(v29) = 0x80;
              }
              *(unsigned char *)(v12 + v28++) = v29;
            }
            while (a7 != v28);
            goto LABEL_3;
          }
        }
        else
        {
          unint64_t v30 = 0;
        }
        uint64_t v28 = (v27 & 0xFFFFFFFFFFFFFFF8) + v13;
        unint64_t v35 = v30 - (v27 & 0xFFFFFFFFFFFFFFF8);
        uint64_t v36 = v30 + v13;
        do
        {
          *(int8x8_t *)(v12 + v36) = vqadd_s8(*(int8x8_t *)(v10 + v36), *(int8x8_t *)(v11 + v36));
          v36 += 8;
          v35 += 8;
        }
        while (v35);
        if (v27 != (v27 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_34;
        }
      }
LABEL_3:
      v10 += a2;
      v11 += a4;
      v12 += a6;
      ++v8;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_100215A78(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  if (a8)
  {
    uint64_t v8 = 0;
    uint64_t v9 = a7 - 4;
    v10.i64[0] = 0xFFFF0000FFFFLL;
    v10.i64[1] = 0xFFFF0000FFFFLL;
    uint64_t v11 = result;
    uint64_t v12 = a3;
    uint64_t v13 = a5;
    do
    {
      if (a7 >= 16)
      {
        uint64_t v14 = 0;
        uint64_t v15 = 16;
        do
        {
          uint16x8_t v16 = vqaddq_u16(*(uint16x8_t *)(v11 + v15), *(uint16x8_t *)(v12 + v15));
          int v17 = (uint16x8_t *)(v13 + v15);
          v17[-1] = vqaddq_u16(*(uint16x8_t *)(v11 + v15 - 16), *(uint16x8_t *)(v12 + v15 - 16));
          *int v17 = v16;
          v14 += 16;
          v15 += 32;
        }
        while (v14 <= a7 - 16);
        uint64_t v14 = v14;
        if ((int)v14 <= (int)v9)
        {
LABEL_10:
          uint64_t v18 = v14 << 32;
          do
          {
            int v19 = *(unsigned __int16 *)(v12 + 2 * v14) + *(unsigned __int16 *)(v11 + 2 * v14);
            if (v19 >= 0xFFFF) {
              LOWORD(v19) = -1;
            }
            uint64_t v20 = v18 >> 31;
            uint64_t v21 = (v18 >> 31) | 2;
            int v22 = *(unsigned __int16 *)(v12 + v21) + *(unsigned __int16 *)(v11 + v21);
            if (v22 >= 0xFFFF) {
              LOWORD(v22) = -1;
            }
            *(_WORD *)(v13 + 2 * v14) = v19;
            *(_WORD *)(v13 + v21) = v22;
            uint64_t v23 = v20 | 4;
            int v24 = *(unsigned __int16 *)(v12 + (v20 | 4)) + *(unsigned __int16 *)(v11 + (v20 | 4));
            if (v24 >= 0xFFFF) {
              LOWORD(v24) = -1;
            }
            uint64_t v25 = v20 | 6;
            int v26 = *(unsigned __int16 *)(v12 + v25) + *(unsigned __int16 *)(v11 + v25);
            *(_WORD *)(v13 + v23) = v24;
            if (v26 >= 0xFFFF) {
              __int16 v27 = -1;
            }
            else {
              __int16 v27 = v26;
            }
            *(_WORD *)(v13 + v25) = v27;
            v14 += 4;
            v18 += 0x400000000;
          }
          while (v14 <= v9);
          uint64_t v14 = v14;
        }
      }
      else
      {
        uint64_t v14 = 0;
        if ((int)v9 >= 0) {
          goto LABEL_10;
        }
      }
      if ((int)v14 < a7)
      {
        unint64_t v28 = a7 - v14;
        if (v28 < 0x10) {
          goto LABEL_36;
        }
        uint64_t v30 = 2 * v14;
        uint64_t v31 = a5 + v8 * a6 + 2 * v14;
        if ((unint64_t)(v31 - (result + v8 * a2 + 2 * v14)) < 0x20) {
          goto LABEL_36;
        }
        if ((unint64_t)(v31 - (a3 + v8 * a4 + v30)) < 0x20) {
          goto LABEL_36;
        }
        v14 += v28 & 0xFFFFFFFFFFFFFFF0;
        unint64_t v32 = v28 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          int16x8_t v33 = vuzp1q_s16((int16x8_t)vminq_s32((int32x4_t)vaddl_u16(*(uint16x4_t *)(v12 + v30 + 16), *(uint16x4_t *)(v11 + v30 + 16)), v10), (int16x8_t)vminq_s32((int32x4_t)vaddl_high_u16(*(uint16x8_t *)(v12 + v30 + 16), *(uint16x8_t *)(v11 + v30 + 16)), v10));
          uint64_t v34 = (int16x8_t *)(v13 + v30);
          *uint64_t v34 = vuzp1q_s16((int16x8_t)vminq_s32((int32x4_t)vaddl_u16(*(uint16x4_t *)(v12 + v30), *(uint16x4_t *)(v11 + v30)), v10), (int16x8_t)vminq_s32((int32x4_t)vaddl_high_u16(*(uint16x8_t *)(v12 + v30), *(uint16x8_t *)(v11 + v30)), v10));
          v34[1] = v33;
          v30 += 32;
          v32 -= 16;
        }
        while (v32);
        if (v28 != (v28 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_36:
          do
          {
            int v29 = *(unsigned __int16 *)(v12 + 2 * v14) + *(unsigned __int16 *)(v11 + 2 * v14);
            if (v29 >= 0xFFFF) {
              LOWORD(v29) = -1;
            }
            *(_WORD *)(v13 + 2 * v14++) = v29;
          }
          while (a7 != v14);
        }
      }
      v11 += a2;
      v12 += a4;
      v13 += a6;
      ++v8;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_100215CB0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  if (a8)
  {
    uint64_t v8 = 0;
    uint64_t v9 = a7 - 4;
    uint64_t v10 = result;
    uint64_t v11 = a3;
    uint64_t v12 = a5;
    do
    {
      if (a7 >= 16)
      {
        uint64_t v14 = 0;
        uint64_t v13 = 0;
        do
        {
          int16x8_t v15 = vqaddq_s16(*(int16x8_t *)(v10 + v14 + 16), *(int16x8_t *)(v11 + v14 + 16));
          uint16x8_t v16 = (int16x8_t *)(v12 + v14);
          *uint16x8_t v16 = vqaddq_s16(*(int16x8_t *)(v10 + v14), *(int16x8_t *)(v11 + v14));
          v16[1] = v15;
          v13 += 16;
          v14 += 32;
        }
        while (v13 <= a7 - 16);
        uint64_t v13 = v13;
        if ((int)v13 <= (int)v9)
        {
LABEL_10:
          uint64_t v17 = v13 << 32;
          do
          {
            int v18 = *(__int16 *)(v10 + 2 * v13) + *(__int16 *)(v11 + 2 * v13);
            if (v18 >= 0x7FFF) {
              int v18 = 0x7FFF;
            }
            if (v18 <= -32768) {
              LOWORD(v18) = 0x8000;
            }
            uint64_t v19 = v17 >> 31;
            uint64_t v20 = (v17 >> 31) | 2;
            int v21 = *(__int16 *)(v10 + v20) + *(__int16 *)(v11 + v20);
            if (v21 >= 0x7FFF) {
              int v21 = 0x7FFF;
            }
            *(_WORD *)(v12 + 2 * v13) = v18;
            if (v21 <= -32768) {
              __int16 v22 = 0x8000;
            }
            else {
              __int16 v22 = v21;
            }
            *(_WORD *)(v12 + v20) = v22;
            uint64_t v23 = v19 | 4;
            int v24 = *(__int16 *)(v10 + (v19 | 4)) + *(__int16 *)(v11 + (v19 | 4));
            if (v24 >= 0x7FFF) {
              int v24 = 0x7FFF;
            }
            if (v24 <= -32768) {
              LOWORD(v24) = 0x8000;
            }
            uint64_t v25 = v19 | 6;
            int v26 = *(__int16 *)(v10 + v25) + *(__int16 *)(v11 + v25);
            if (v26 >= 0x7FFF) {
              int v26 = 0x7FFF;
            }
            *(_WORD *)(v12 + v23) = v24;
            if (v26 <= -32768) {
              __int16 v27 = 0x8000;
            }
            else {
              __int16 v27 = v26;
            }
            *(_WORD *)(v12 + v25) = v27;
            v13 += 4;
            v17 += 0x400000000;
          }
          while (v13 <= v9);
          uint64_t v13 = v13;
        }
      }
      else
      {
        uint64_t v13 = 0;
        if ((int)v9 >= 0) {
          goto LABEL_10;
        }
      }
      if ((int)v13 < a7)
      {
        unint64_t v28 = a7 - v13;
        if (v28 < 0x10) {
          goto LABEL_47;
        }
        uint64_t v30 = 2 * v13;
        uint64_t v31 = a5 + v8 * a6 + 2 * v13;
        if ((unint64_t)(v31 - (result + v8 * a2 + 2 * v13)) < 0x20) {
          goto LABEL_47;
        }
        if ((unint64_t)(v31 - (a3 + v8 * a4 + v30)) < 0x20) {
          goto LABEL_47;
        }
        v13 += v28 & 0xFFFFFFFFFFFFFFF0;
        unint64_t v32 = v28 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          int16x8_t v33 = vqaddq_s16(*(int16x8_t *)(v10 + v30 + 16), *(int16x8_t *)(v11 + v30 + 16));
          uint64_t v34 = (int16x8_t *)(v12 + v30);
          *uint64_t v34 = vqaddq_s16(*(int16x8_t *)(v10 + v30), *(int16x8_t *)(v11 + v30));
          v34[1] = v33;
          v30 += 32;
          v32 -= 16;
        }
        while (v32);
        if (v28 != (v28 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_47:
          do
          {
            int v29 = *(__int16 *)(v10 + 2 * v13) + *(__int16 *)(v11 + 2 * v13);
            if (v29 >= 0x7FFF) {
              int v29 = 0x7FFF;
            }
            if (v29 <= -32768) {
              LOWORD(v29) = 0x8000;
            }
            *(_WORD *)(v12 + 2 * v13++) = v29;
          }
          while (a7 != v13);
        }
      }
      v10 += a2;
      v11 += a4;
      v12 += a6;
      ++v8;
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_100215EF0(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v85 = a5;
  unint64_t v86 = a3;
  unint64_t v87 = result;
  if (!a8) {
    return result;
  }
  int v8 = a8 - 1;
  unint64_t v9 = (a7 - 4);
  if (a7 >= 8)
  {
    uint64_t v13 = 0;
    unint64_t v15 = a5;
    unint64_t v14 = a3;
    uint16x8_t v16 = (_DWORD *)(a5 + 32);
    uint64_t v17 = (int *)(a3 + 32);
    unint64_t v18 = result;
    unint64_t v19 = result + 32;
    while (1)
    {
      uint64_t result = 0;
      unint64_t v20 = 0;
      int v21 = v8;
      __int16 v22 = (int *)v19;
      uint64_t v23 = v17;
      int v24 = v16;
      do
      {
        int32x4_t v25 = vaddq_s32(*(int32x4_t *)(v14 + result), *(int32x4_t *)(v18 + result));
        int v26 = v24;
        __int16 v27 = v23;
        unint64_t v28 = v22;
        int32x4_t v29 = vaddq_s32(*(int32x4_t *)(v14 + result + 16), *(int32x4_t *)(v18 + result + 16));
        uint64_t v30 = (int32x4_t *)(v15 + result);
        v20 += 8;
        result += 32;
        *uint64_t v30 = v25;
        v30[1] = v29;
        int v24 = v26 + 8;
        v23 += 8;
        v22 += 8;
      }
      while (v20 <= (a7 - 8));
      if ((int)v9 >= (int)v20)
      {
        uint64_t result = 0;
        do
        {
          int v32 = *v28;
          v28 += 4;
          int v31 = v32;
          int v33 = *v27;
          v27 += 4;
          unint64_t v34 = (unint64_t)((v20 + result) & 0xFFFFFFFC) >> 2;
          uint64_t v35 = (16 * (v34 & 0x3FFFFFFF)) | 4;
          int v36 = *(_DWORD *)(v14 + v35) + *(_DWORD *)(v18 + v35);
          *int v26 = v33 + v31;
          v26 += 4;
          *(_DWORD *)(v15 + v35) = v36;
          *(int32x2_t *)(v15 + ((16 * (v34 & 0x3FFFFFFF)) | 8)) = vadd_s32(*(int32x2_t *)(v14 + ((16 * (v34 & 0x3FFFFFFF)) | 8)), *(int32x2_t *)(v18 + ((16 * (v34 & 0x3FFFFFFF)) | 8)));
          result += 4;
        }
        while (v20 + result <= v9);
        unint64_t v20 = (v20 + result);
        if ((int)v20 < a7)
        {
LABEL_20:
          uint64_t result = a7 - v20;
          if (result < 0xC) {
            goto LABEL_64;
          }
          uint64_t v37 = 4 * v20;
          uint64_t v38 = v85 + v13 * a6 + 4 * v20;
          if (v38 - (v87 + v13 * a2 + 4 * v20) < 0x20) {
            goto LABEL_64;
          }
          if (v38 - (v86 + v13 * a4 + v37) < 0x20) {
            goto LABEL_64;
          }
          v20 += result & 0xFFFFFFFFFFFFFFF8;
          unint64_t v39 = result & 0xFFFFFFFFFFFFFFF8;
          do
          {
            int32x4_t v40 = vaddq_s32(*(int32x4_t *)(v14 + v37 + 16), *(int32x4_t *)(v18 + v37 + 16));
            uint64_t v41 = (int32x4_t *)(v15 + v37);
            int32x4_t *v41 = vaddq_s32(*(int32x4_t *)(v14 + v37), *(int32x4_t *)(v18 + v37));
            v41[1] = v40;
            v37 += 32;
            v39 -= 8;
          }
          while (v39);
          if (result != (result & 0xFFFFFFFFFFFFFFF8))
          {
LABEL_64:
            do
            {
              uint64_t result = 4 * v20;
              *(_DWORD *)(v15 + 4 * v20) = *(_DWORD *)(v14 + 4 * v20) + *(_DWORD *)(v18 + 4 * v20);
              ++v20;
            }
            while (a7 != v20);
          }
        }
      }
      else
      {
        unint64_t v20 = v20;
        if ((int)v20 < a7) {
          goto LABEL_20;
        }
      }
      v18 += a2;
      v14 += a4;
      v15 += a6;
      int v8 = v21 - 1;
      ++v13;
      uint16x8_t v16 = (_DWORD *)((char *)v16 + a6);
      uint64_t v17 = (int *)((char *)v17 + a4);
      v19 += a2;
      if (!v21) {
        return result;
      }
    }
  }
  if (a7 >= 4)
  {
    uint64_t v42 = 0;
    unint64_t v84 = a5 + 16;
    unint64_t v83 = result + 16;
    unint64_t v80 = a3 + 16;
    unint64_t v43 = (v9 & 0xFFFFFFFC) + 5;
    if (v43 <= a7) {
      unint64_t v43 = a7;
    }
    unint64_t v44 = v43 - (v9 & 0xFFFFFFFC) - 4;
    uint64_t v45 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
    uint64_t v82 = (v9 >> 2) + 1;
    unint64_t v81 = v44 & 0xFFFFFFFFFFFFFFF8;
    while (1)
    {
      int v46 = v8;
      uint64_t v47 = v42 * a6;
      uint64_t v48 = v42 * a2;
      uint64_t v49 = v42 * a4;
      if (v9 < 0xC) {
        break;
      }
      unint64_t v50 = 0;
      unint64_t v53 = v85 + v45 + v47;
      BOOL v55 = a5 < v86 + v45 + v49 && a3 < v53;
      if (result < v53 && a5 < v87 + v45 + v48)
      {
        uint64_t v52 = 4;
        unint64_t v51 = 0;
LABEL_49:
        unint64_t v64 = v50 - 1;
        uint64_t v63 = v52 - 4;
        uint64_t v65 = 4 * v51;
        unint64_t v66 = a3;
        unint64_t v67 = result;
        unint64_t v68 = a5;
        do
        {
          int v69 = *(_DWORD *)(v67 + v65 + 4);
          int v70 = *(_DWORD *)(v66 + v65 + 4);
          *(_DWORD *)(v68 + v65) = *(_DWORD *)(v66 + v65) + *(_DWORD *)(v67 + v65);
          int v71 = v70 + v69;
          uint64_t v72 = (_DWORD *)(v68 + v65);
          v72[1] = v71;
          int v73 = *(_DWORD *)(v66 + v65 + 12) + *(_DWORD *)(v67 + v65 + 12);
          v51 += 4;
          ++v64;
          v63 += 4;
          _OWORD v72[2] = *(_DWORD *)(v66 + v65 + 8) + *(_DWORD *)(v67 + v65 + 8);
          v72[3] = v73;
          v68 += 16;
          v67 += 16;
          v66 += 16;
        }
        while (v51 <= v9);
        goto LABEL_51;
      }
      uint64_t v52 = 4;
      unint64_t v51 = 0;
      if (v55) {
        goto LABEL_49;
      }
      uint64_t v57 = 0;
      uint64_t v58 = v82 & 0x7FFFFFFC;
      do
      {
        int32x4_t v59 = vaddq_s32(*(int32x4_t *)(a3 + v57 + 16), *(int32x4_t *)(result + v57 + 16));
        int32x4_t v60 = vaddq_s32(*(int32x4_t *)(a3 + v57), *(int32x4_t *)(result + v57));
        int32x4_t v61 = vaddq_s32(*(int32x4_t *)(a3 + v57 + 48), *(int32x4_t *)(result + v57 + 48));
        int v62 = (int32x4_t *)(a5 + v57);
        _OWORD v62[2] = vaddq_s32(*(int32x4_t *)(a3 + v57 + 32), *(int32x4_t *)(result + v57 + 32));
        v62[3] = v61;
        int32x4_t *v62 = v60;
        v62[1] = v59;
        v57 += 64;
        v58 -= 4;
      }
      while (v58);
      unint64_t v50 = v82 & 0x7FFFFFFC;
      uint64_t v52 = (16 * ((v50 >> 2) & 0x1FFFFFFF)) | 4;
      uint64_t v63 = 4 * v50;
      unint64_t v51 = v63;
      unint64_t v64 = v50 - 1;
      if (v82 != v50) {
        goto LABEL_49;
      }
LABEL_51:
      if ((int)v51 < a7)
      {
        if (v44 < 0xC
          || (uint64_t v75 = 16 * v64 + v84 + v47, v75 - (16 * v64 + v83 + v48) < 0x20)
          || v75 - (16 * v64 + v80 + v49) < 0x20)
        {
          unint64_t v74 = v63;
        }
        else
        {
          unint64_t v76 = v44 & 0xFFFFFFFFFFFFFFF8;
          unint64_t v74 = v63 + v81;
          uint64_t v77 = 4 * v63;
          do
          {
            int32x4_t v78 = vaddq_s32(*(int32x4_t *)(a3 + v77 + 16), *(int32x4_t *)(result + v77 + 16));
            uint64_t v79 = (int32x4_t *)(a5 + v77);
            int32x4_t *v79 = vaddq_s32(*(int32x4_t *)(a3 + v77), *(int32x4_t *)(result + v77));
            v79[1] = v78;
            v77 += 32;
            v76 -= 8;
          }
          while (v76);
          if (v44 == v81) {
            goto LABEL_31;
          }
        }
        do
        {
          *(_DWORD *)(a5 + 4 * v74) = *(_DWORD *)(a3 + 4 * v74) + *(_DWORD *)(result + 4 * v74);
          ++v74;
        }
        while (v74 < a7);
      }
LABEL_31:
      result += a2;
      a3 += a4;
      a5 += a6;
      int v8 = v46 - 1;
      ++v42;
      if (!v46) {
        return result;
      }
    }
    unint64_t v50 = 0;
    unint64_t v51 = 0;
    uint64_t v52 = 4;
    goto LABEL_49;
  }
  if (a7 >= 1)
  {
    uint64_t v10 = (_DWORD *)(a5 + 8);
    uint64_t v11 = (_DWORD *)(a3 + 8);
    uint64_t v12 = (_DWORD *)(result + 4);
    do
    {
      *(v10 - 2) = *(v11 - 2) + *(v12 - 1);
      if (a7 != 1)
      {
        *(v10 - 1) = *(v11 - 1) + *v12;
        if (a7 != 2) {
          _DWORD *v10 = *v11 + v12[1];
        }
      }
      uint64_t v10 = (_DWORD *)((char *)v10 + a6);
      uint64_t v11 = (_DWORD *)((char *)v11 + a4);
      uint64_t v12 = (_DWORD *)((char *)v12 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_100216458(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  if (!a8) {
    return result;
  }
  unint64_t v8 = a5;
  int v9 = a8 - 1;
  unint64_t v10 = (a7 - 4);
  if (a7 >= 8)
  {
    uint64_t v14 = 0;
    unint64_t v15 = (float *)(a5 + 32);
    uint16x8_t v16 = (float *)(a3 + 32);
    uint64_t v17 = (float *)(result + 32);
    unint64_t v18 = result;
    unint64_t v19 = a3;
    unint64_t v20 = a5;
    while (1)
    {
      uint64_t v21 = 0;
      unint64_t v22 = 0;
      int v23 = v9;
      int v24 = v17;
      int32x4_t v25 = v16;
      int v26 = v15;
      do
      {
        float32x4_t v27 = vaddq_f32(*(float32x4_t *)(v18 + v21), *(float32x4_t *)(v19 + v21));
        unint64_t v28 = v26;
        int32x4_t v29 = v25;
        uint64_t v30 = v24;
        float32x4_t v31 = vaddq_f32(*(float32x4_t *)(v18 + v21 + 16), *(float32x4_t *)(v19 + v21 + 16));
        int v32 = (float32x4_t *)(v20 + v21);
        v22 += 8;
        v21 += 32;
        *int v32 = v27;
        v32[1] = v31;
        v26 += 8;
        int32x4_t v25 = v29 + 8;
        v24 += 8;
      }
      while (v22 <= (a7 - 8));
      if ((int)v10 >= (int)v22)
      {
        uint64_t v33 = 0;
        do
        {
          float v34 = *v30;
          v30 += 4;
          float v35 = v34;
          float v36 = *v29;
          v29 += 4;
          unint64_t v37 = (unint64_t)((v22 + v33) & 0xFFFFFFFC) >> 2;
          uint64_t v38 = (16 * (v37 & 0x3FFFFFFF)) | 4;
          float v39 = *(float *)(v18 + v38);
          float v40 = *(float *)(v19 + v38);
          *unint64_t v28 = v35 + v36;
          v28 += 4;
          *(float *)(v20 + v38) = v39 + v40;
          *(float32x2_t *)(v20 + ((16 * (v37 & 0x3FFFFFFF)) | 8)) = vadd_f32(*(float32x2_t *)(v18+ ((16 * (v37 & 0x3FFFFFFF)) | 8)), *(float32x2_t *)(v19+ ((16 * (v37 & 0x3FFFFFFF)) | 8)));
          v33 += 4;
        }
        while (v22 + v33 <= v10);
        unint64_t v22 = (v22 + v33);
        if ((int)v22 < a7)
        {
LABEL_20:
          unint64_t v41 = a7 - v22;
          if (v41 < 0xC) {
            goto LABEL_64;
          }
          uint64_t v42 = 4 * v22;
          uint64_t v43 = v8 + v14 * a6 + 4 * v22;
          if (v43 - (result + v14 * a2 + 4 * v22) < 0x20) {
            goto LABEL_64;
          }
          if (v43 - (a3 + v14 * a4 + v42) < 0x20) {
            goto LABEL_64;
          }
          v22 += v41 & 0xFFFFFFFFFFFFFFF8;
          unint64_t v44 = v41 & 0xFFFFFFFFFFFFFFF8;
          do
          {
            float32x4_t v45 = vaddq_f32(*(float32x4_t *)(v18 + v42 + 16), *(float32x4_t *)(v19 + v42 + 16));
            int v46 = (float32x4_t *)(v20 + v42);
            float32x4_t *v46 = vaddq_f32(*(float32x4_t *)(v18 + v42), *(float32x4_t *)(v19 + v42));
            v46[1] = v45;
            v42 += 32;
            v44 -= 8;
          }
          while (v44);
          if (v41 != (v41 & 0xFFFFFFFFFFFFFFF8))
          {
LABEL_64:
            do
            {
              *(float *)(v20 + 4 * v22) = *(float *)(v18 + 4 * v22) + *(float *)(v19 + 4 * v22);
              ++v22;
            }
            while (a7 != v22);
          }
        }
      }
      else
      {
        unint64_t v22 = v22;
        if ((int)v22 < a7) {
          goto LABEL_20;
        }
      }
      v18 += a2;
      v19 += a4;
      v20 += a6;
      int v9 = v23 - 1;
      ++v14;
      unint64_t v15 = (float *)((char *)v15 + a6);
      uint16x8_t v16 = (float *)((char *)v16 + a4);
      uint64_t v17 = (float *)((char *)v17 + a2);
      if (!v23) {
        return result;
      }
    }
  }
  if (a7 >= 4)
  {
    uint64_t v47 = 0;
    unint64_t v91 = a5 + 16;
    unint64_t v90 = result + 16;
    unint64_t v87 = a3 + 16;
    unint64_t v48 = (v10 & 0xFFFFFFFC) + 5;
    if (v48 <= a7) {
      unint64_t v48 = a7;
    }
    uint64_t v49 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
    uint64_t v89 = (v10 >> 2) + 1;
    unint64_t v92 = v48 - (v10 & 0xFFFFFFFC) - 4;
    unint64_t v88 = v92 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v50 = result;
    unint64_t v51 = a3;
    unint64_t v93 = result;
    unint64_t v52 = a3;
    unint64_t v53 = a5;
    while (1)
    {
      int v54 = v9;
      uint64_t v55 = v47 * a6;
      uint64_t v56 = v47 * a2;
      uint64_t v57 = v47 * a4;
      if (v10 < 0xC) {
        break;
      }
      unint64_t v58 = 0;
      unint64_t v61 = v8 + v49 + v55;
      BOOL v63 = a5 < a3 + v49 + v57 && v51 < v61;
      if (v50 < v61 && a5 < result + v49 + v56)
      {
        uint64_t v60 = 4;
        unint64_t v59 = 0;
LABEL_49:
        unint64_t v72 = v58 - 1;
        uint64_t v71 = v60 - 4;
        uint64_t v73 = 4 * v59;
        unint64_t v74 = v51;
        unint64_t v75 = v50;
        unint64_t v76 = a5;
        do
        {
          float v77 = *(float *)(v75 + v73 + 4);
          float v78 = *(float *)(v74 + v73 + 4);
          *(float *)(v76 + v73) = *(float *)(v75 + v73) + *(float *)(v74 + v73);
          uint64_t v79 = (float *)(v76 + v73);
          v79[1] = v77 + v78;
          float v80 = *(float *)(v75 + v73 + 12) + *(float *)(v74 + v73 + 12);
          v59 += 4;
          ++v72;
          v71 += 4;
          _OWORD v79[2] = *(float *)(v75 + v73 + 8) + *(float *)(v74 + v73 + 8);
          v79[3] = v80;
          v76 += 16;
          v75 += 16;
          v74 += 16;
        }
        while (v59 <= v10);
        goto LABEL_51;
      }
      uint64_t v60 = 4;
      unint64_t v59 = 0;
      if (v63) {
        goto LABEL_49;
      }
      uint64_t v65 = 0;
      uint64_t v66 = v89 & 0x7FFFFFFC;
      do
      {
        float32x4_t v67 = vaddq_f32(*(float32x4_t *)(v50 + v65 + 16), *(float32x4_t *)(v51 + v65 + 16));
        float32x4_t v68 = vaddq_f32(*(float32x4_t *)(v50 + v65), *(float32x4_t *)(v51 + v65));
        float32x4_t v69 = vaddq_f32(*(float32x4_t *)(v50 + v65 + 48), *(float32x4_t *)(v51 + v65 + 48));
        int v70 = (float32x4_t *)(a5 + v65);
        _OWORD v70[2] = vaddq_f32(*(float32x4_t *)(v50 + v65 + 32), *(float32x4_t *)(v51 + v65 + 32));
        v70[3] = v69;
        float32x4_t *v70 = v68;
        v70[1] = v67;
        v65 += 64;
        v66 -= 4;
      }
      while (v66);
      unint64_t v58 = v89 & 0x7FFFFFFC;
      uint64_t v60 = (16 * ((v58 >> 2) & 0x1FFFFFFF)) | 4;
      uint64_t v71 = 4 * v58;
      unint64_t v59 = v71;
      unint64_t v72 = v58 - 1;
      if (v89 != v58) {
        goto LABEL_49;
      }
LABEL_51:
      if ((int)v59 < a7)
      {
        if (v92 < 0xC
          || (uint64_t v82 = 16 * v72 + v91 + v55, v82 - (16 * v72 + v90 + v56) < 0x20)
          || v82 - (16 * v72 + v87 + v57) < 0x20)
        {
          unint64_t v81 = v71;
        }
        else
        {
          unint64_t v83 = v92 & 0xFFFFFFFFFFFFFFF8;
          unint64_t v81 = v71 + v88;
          uint64_t v84 = 4 * v71;
          do
          {
            float32x4_t v85 = vaddq_f32(*(float32x4_t *)(v50 + v84 + 16), *(float32x4_t *)(v51 + v84 + 16));
            unint64_t v86 = (float32x4_t *)(a5 + v84);
            float32x4_t *v86 = vaddq_f32(*(float32x4_t *)(v50 + v84), *(float32x4_t *)(v51 + v84));
            v86[1] = v85;
            v84 += 32;
            v83 -= 8;
          }
          while (v83);
          if (v92 == v88) {
            goto LABEL_31;
          }
        }
        do
        {
          *(float *)(a5 + 4 * v81) = *(float *)(v50 + 4 * v81) + *(float *)(v51 + 4 * v81);
          ++v81;
        }
        while (v81 < a7);
      }
LABEL_31:
      v50 += a2;
      v51 += a4;
      a5 += a6;
      int v9 = v54 - 1;
      ++v47;
      uint64_t result = v93;
      a3 = v52;
      unint64_t v8 = v53;
      if (!v54) {
        return result;
      }
    }
    unint64_t v58 = 0;
    unint64_t v59 = 0;
    uint64_t v60 = 4;
    goto LABEL_49;
  }
  if (a7 >= 1)
  {
    uint64_t v11 = (float *)(a5 + 8);
    uint64_t v12 = (float *)(a3 + 8);
    uint64_t v13 = (float *)(result + 4);
    do
    {
      *(v11 - 2) = *(v13 - 1) + *(v12 - 2);
      if (a7 != 1)
      {
        *(v11 - 1) = *v13 + *(v12 - 1);
        if (a7 != 2) {
          *uint64_t v11 = v13[1] + *v12;
        }
      }
      uint64_t v11 = (float *)((char *)v11 + a6);
      uint64_t v12 = (float *)((char *)v12 + a4);
      uint64_t v13 = (float *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_1002169D0(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  if (!a8) {
    return result;
  }
  unint64_t v8 = a3;
  unint64_t v9 = result;
  unint64_t v10 = (a7 - 4);
  if (a7 >= 4)
  {
    uint64_t v14 = 0;
    int v15 = a8 - 1;
    uint64_t v16 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
    uint64_t v53 = v16 + a5 + 32;
    uint64_t v52 = v16 + result + 32;
    uint64_t v50 = v16 + a3 + 32;
    unint64_t v17 = (v10 & 0xFFFFFFFC) + 5;
    if (v17 <= a7) {
      unint64_t v17 = a7;
    }
    uint64_t v18 = 32 * (v10 >> 2) + 32;
    uint64_t v51 = (v10 >> 2) + 1;
    unint64_t v54 = v17 - (v10 & 0xFFFFFFFC) - 4;
    unint64_t v49 = v17 & 3;
    unint64_t v19 = a5 + 16;
    unint64_t v20 = a5;
    while (1)
    {
      int v21 = v15;
      uint64_t v22 = v14 * a6;
      uint64_t v23 = v14 * a2;
      uint64_t v24 = v14 * a4;
      if (v10 >= 0xC)
      {
        unint64_t v25 = 0;
        unint64_t v26 = a5 + v18 + v22;
        BOOL v28 = v20 < v8 + v18 + v24 && a3 < v26;
        if ((result >= v26 || v20 >= v9 + v18 + v23) && !v28)
        {
          uint64_t v30 = 0;
          uint64_t v31 = v51 & 0x7FFFFFFE;
          do
          {
            float64x2_t v32 = vaddq_f64(*(float64x2_t *)(result + v30 + 16), *(float64x2_t *)(a3 + v30 + 16));
            float64x2_t v33 = vaddq_f64(*(float64x2_t *)(result + v30), *(float64x2_t *)(a3 + v30));
            float64x2_t v34 = vaddq_f64(*(float64x2_t *)(result + v30 + 48), *(float64x2_t *)(a3 + v30 + 48));
            float v35 = (float64x2_t *)(v20 + v30);
            v35[2] = vaddq_f64(*(float64x2_t *)(result + v30 + 32), *(float64x2_t *)(a3 + v30 + 32));
            v35[3] = v34;
            *float v35 = v33;
            v35[1] = v32;
            v30 += 64;
            v31 -= 2;
          }
          while (v31);
          unint64_t v25 = 4 * (v51 & 0x7FFFFFFE);
          if (v51 == (v51 & 0x7FFFFFFE)) {
            goto LABEL_32;
          }
        }
      }
      else
      {
        unint64_t v25 = 0;
      }
      uint64_t v36 = 8 * v25;
      unint64_t v37 = v19;
      unint64_t v38 = a3;
      unint64_t v39 = result;
      do
      {
        double v40 = *(double *)(v39 + v36 + 8) + *(double *)(v38 + v36 + 8);
        unint64_t v41 = v37 + v36;
        *(double *)(v41 - 16) = *(double *)(v39 + v36) + *(double *)(v38 + v36);
        *(double *)(v41 - 8) = v40;
        double v42 = *(double *)(v39 + v36 + 24);
        double v43 = *(double *)(v38 + v36 + 24);
        *(double *)(v37 + v36) = *(double *)(v39 + v36 + 16) + *(double *)(v38 + v36 + 16);
        v25 += 4;
        *(double *)(v41 + 8) = v42 + v43;
        v39 += 32;
        v38 += 32;
        v37 += 32;
      }
      while (v25 <= v10);
LABEL_32:
      if ((int)v25 < a7)
      {
        unint64_t v44 = (v10 & 0xFFFFFFFC) + 4;
        if (v54 < 6) {
          goto LABEL_43;
        }
        unint64_t v44 = (v10 & 0xFFFFFFFC) + 4;
        if ((unint64_t)(v53 + v22 - (v52 + v23)) < 0x20) {
          goto LABEL_43;
        }
        unint64_t v44 = (v10 & 0xFFFFFFFC) + 4;
        if ((unint64_t)(v53 + v22 - (v50 + v24)) < 0x20) {
          goto LABEL_43;
        }
        uint64_t v45 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
        unint64_t v46 = v54 - v49;
        do
        {
          float64x2_t v47 = vaddq_f64(*(float64x2_t *)(result + v45 + 48), *(float64x2_t *)(a3 + v45 + 48));
          unint64_t v48 = (float64x2_t *)(v20 + v45);
          _OWORD v48[2] = vaddq_f64(*(float64x2_t *)(result + v45 + 32), *(float64x2_t *)(a3 + v45 + 32));
          v48[3] = v47;
          v45 += 32;
          v46 -= 4;
        }
        while (v46);
        unint64_t v44 = (v10 & 0xFFFFFFFC) + 4 + v54 - v49;
        if (v49)
        {
LABEL_43:
          do
          {
            *(double *)(v20 + 8 * v44) = *(double *)(result + 8 * v44) + *(double *)(a3 + 8 * v44);
            ++v44;
          }
          while (v44 < a7);
        }
      }
      result += a2;
      a3 += a4;
      v20 += a6;
      int v15 = v21 - 1;
      ++v14;
      v19 += a6;
      if (!v21) {
        return result;
      }
    }
  }
  if (a7 >= 1)
  {
    uint64_t v11 = (double *)(a5 + 16);
    uint64_t v12 = (double *)(a3 + 16);
    uint64_t v13 = (double *)(result + 8);
    do
    {
      *(v11 - 2) = *(v13 - 1) + *(v12 - 2);
      if (a7 != 1)
      {
        *(v11 - 1) = *v13 + *(v12 - 1);
        if (a7 != 2) {
          *uint64_t v11 = v13[1] + *v12;
        }
      }
      uint64_t v11 = (double *)((char *)v11 + a6);
      uint64_t v12 = (double *)((char *)v12 + a4);
      uint64_t v13 = (double *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_100216D20(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  if (a8)
  {
    uint64_t v8 = a7 - 4;
    while (a7 < 32)
    {
      uint64_t v9 = 0;
      if ((int)v8 >= 0) {
        goto LABEL_10;
      }
LABEL_13:
      if ((int)v9 < a7)
      {
        do
        {
          *(unsigned char *)(a5 + v9) = byte_100406966[(*(unsigned __int8 *)(result + v9) | 0x100)
                                             - *(unsigned __int8 *)(a3 + v9)];
          ++v9;
        }
        while (a7 != v9);
      }
      result += a2;
      a3 += a4;
      a5 += a6;
      if (!--a8) {
        return result;
      }
    }
    uint64_t v10 = 16;
    do
    {
      uint8x16_t v11 = vqsubq_u8(*(uint8x16_t *)(result + v10), *(uint8x16_t *)(a3 + v10));
      uint64_t v12 = (uint8x16_t *)(a5 + v10);
      v12[-1] = vqsubq_u8(*(uint8x16_t *)(result + v10 - 16), *(uint8x16_t *)(a3 + v10 - 16));
      *uint64_t v12 = v11;
      uint64_t v13 = v10 + 16;
      v10 += 32;
    }
    while (v13 <= a7 - 32);
    uint64_t v9 = (v10 - 16);
    if ((int)v9 > (int)v8) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v14 = v9 << 32;
    do
    {
      uint64_t v15 = (v14 >> 32) | 1;
      char v16 = byte_100406966[(*(unsigned __int8 *)(result + v15) | 0x100) - *(unsigned __int8 *)(a3 + v15)];
      *(unsigned char *)(a5 + v9) = byte_100406966[(*(unsigned __int8 *)(result + v9) | 0x100) - *(unsigned __int8 *)(a3 + v9)];
      *(unsigned char *)(a5 + v15) = v16;
      uint64_t v17 = (v14 >> 32) | 3;
      char v18 = byte_100406966[(*(unsigned __int8 *)(result + v17) | 0x100) - *(unsigned __int8 *)(a3 + v17)];
      *(unsigned char *)(a5 + ((v14 >> 32) | 2)) = byte_100406966[(*(unsigned __int8 *)(result + ((v14 >> 32) | 2)) | 0x100)
                                                        - *(unsigned __int8 *)(a3 + ((v14 >> 32) | 2))];
      *(unsigned char *)(a5 + v17) = v18;
      v9 += 4;
      v14 += 0x400000000;
    }
    while (v9 <= v8);
    uint64_t v9 = v9;
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_100216E7C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  if (a8)
  {
    uint64_t v8 = 0;
    uint64_t v9 = a7 - 4;
    uint64_t v10 = result;
    uint64_t v11 = a3;
    uint64_t v12 = a5;
    do
    {
      if (a7 >= 32)
      {
        uint64_t v13 = 0;
        do
        {
          int8x16_t v14 = vqsubq_s8(*(int8x16_t *)(v10 + v13 + 16), *(int8x16_t *)(v11 + v13 + 16));
          uint64_t v15 = (int8x16_t *)(v12 + v13);
          *uint64_t v15 = vqsubq_s8(*(int8x16_t *)(v10 + v13), *(int8x16_t *)(v11 + v13));
          v15[1] = v14;
          v13 += 32;
        }
        while (v13 <= a7 - 32);
        uint64_t v13 = v13;
        if ((int)v13 > (int)v9) {
          goto LABEL_31;
        }
      }
      else
      {
        uint64_t v13 = 0;
        if ((int)v9 < 0) {
          goto LABEL_31;
        }
      }
      uint64_t v16 = v13 << 32;
      do
      {
        int v17 = *(char *)(v10 + v13) - *(char *)(v11 + v13);
        if (v17 >= 127) {
          int v17 = 127;
        }
        if (v17 <= -128) {
          LOBYTE(v17) = 0x80;
        }
        uint64_t v18 = v16 >> 32;
        uint64_t v19 = (v16 >> 32) | 1;
        int v20 = *(char *)(v10 + v19) - *(char *)(v11 + v19);
        if (v20 >= 127) {
          int v20 = 127;
        }
        *(unsigned char *)(v12 + v13) = v17;
        if (v20 <= -128) {
          char v21 = 0x80;
        }
        else {
          char v21 = v20;
        }
        *(unsigned char *)(v12 + v19) = v21;
        uint64_t v22 = v18 | 2;
        int v23 = *(char *)(v10 + (v18 | 2)) - *(char *)(v11 + (v18 | 2));
        if (v23 >= 127) {
          int v23 = 127;
        }
        if (v23 <= -128) {
          LOBYTE(v23) = 0x80;
        }
        uint64_t v24 = v18 | 3;
        int v25 = *(char *)(v10 + v24) - *(char *)(v11 + v24);
        if (v25 >= 127) {
          int v25 = 127;
        }
        *(unsigned char *)(v12 + v22) = v23;
        if (v25 <= -128) {
          char v26 = 0x80;
        }
        else {
          char v26 = v25;
        }
        *(unsigned char *)(v12 + v24) = v26;
        v13 += 4;
        v16 += 0x400000000;
      }
      while (v13 <= v9);
      uint64_t v13 = v13;
LABEL_31:
      if ((int)v13 < a7)
      {
        unint64_t v27 = a7 - v13;
        if (v27 < 8)
        {
          uint64_t v28 = v13;
          goto LABEL_34;
        }
        if ((unint64_t)(a5 + v8 * a6 - (result + v8 * a2)) < 0x20)
        {
          uint64_t v28 = v13;
          goto LABEL_34;
        }
        if ((unint64_t)(a5 + v8 * a6 - (a3 + v8 * a4)) < 0x20)
        {
          uint64_t v28 = v13;
          goto LABEL_34;
        }
        if (v27 >= 0x20)
        {
          unint64_t v30 = v27 & 0xFFFFFFFFFFFFFFE0;
          uint64_t v31 = v13;
          unint64_t v32 = v27 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            int8x16_t v33 = vqsubq_s8(*(int8x16_t *)(v10 + v31 + 16), *(int8x16_t *)(v11 + v31 + 16));
            float64x2_t v34 = (int8x16_t *)(v12 + v31);
            *float64x2_t v34 = vqsubq_s8(*(int8x16_t *)(v10 + v31), *(int8x16_t *)(v11 + v31));
            v34[1] = v33;
            v31 += 32;
            v32 -= 32;
          }
          while (v32);
          if (v27 == v30) {
            goto LABEL_3;
          }
          if ((v27 & 0x18) == 0)
          {
            uint64_t v28 = v30 + v13;
            do
            {
LABEL_34:
              int v29 = *(char *)(v10 + v28) - *(char *)(v11 + v28);
              if (v29 >= 127) {
                int v29 = 127;
              }
              if (v29 <= -128) {
                LOBYTE(v29) = 0x80;
              }
              *(unsigned char *)(v12 + v28++) = v29;
            }
            while (a7 != v28);
            goto LABEL_3;
          }
        }
        else
        {
          unint64_t v30 = 0;
        }
        uint64_t v28 = (v27 & 0xFFFFFFFFFFFFFFF8) + v13;
        unint64_t v35 = v30 - (v27 & 0xFFFFFFFFFFFFFFF8);
        uint64_t v36 = v30 + v13;
        do
        {
          *(int8x8_t *)(v12 + v36) = vqsub_s8(*(int8x8_t *)(v10 + v36), *(int8x8_t *)(v11 + v36));
          v36 += 8;
          v35 += 8;
        }
        while (v35);
        if (v27 != (v27 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_34;
        }
      }
LABEL_3:
      v10 += a2;
      v11 += a4;
      v12 += a6;
      ++v8;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_100217110(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  if (a8)
  {
    uint64_t v8 = 0;
    uint64_t v9 = a7 - 4;
    uint64_t v10 = result;
    uint64_t v11 = a3;
    uint64_t v12 = a5;
    while (a7 < 16)
    {
      uint64_t v13 = 0;
      if ((int)v9 >= 0) {
        goto LABEL_10;
      }
LABEL_13:
      if ((int)v13 < a7)
      {
        unint64_t v24 = a7 - v13;
        if (v24 < 0x10) {
          goto LABEL_25;
        }
        uint64_t v26 = 2 * v13;
        uint64_t v27 = a5 + v8 * a6 + 2 * v13;
        if ((unint64_t)(v27 - (result + v8 * a2 + 2 * v13)) < 0x20) {
          goto LABEL_25;
        }
        if ((unint64_t)(v27 - (a3 + v8 * a4 + v26)) < 0x20) {
          goto LABEL_25;
        }
        v13 += v24 & 0xFFFFFFFFFFFFFFF0;
        unint64_t v28 = v24 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          int16x8_t v29 = vuzp1q_s16((int16x8_t)vmaxq_s32((int32x4_t)vsubl_u16(*(uint16x4_t *)(v10 + v26 + 16), *(uint16x4_t *)(v11 + v26 + 16)), (int32x4_t)0), (int16x8_t)vmaxq_s32((int32x4_t)vsubl_high_u16(*(uint16x8_t *)(v10 + v26 + 16), *(uint16x8_t *)(v11 + v26 + 16)), (int32x4_t)0));
          unint64_t v30 = (int16x8_t *)(v12 + v26);
          *unint64_t v30 = vuzp1q_s16((int16x8_t)vmaxq_s32((int32x4_t)vsubl_u16(*(uint16x4_t *)(v10 + v26), *(uint16x4_t *)(v11 + v26)), (int32x4_t)0), (int16x8_t)vmaxq_s32((int32x4_t)vsubl_high_u16(*(uint16x8_t *)(v10 + v26), *(uint16x8_t *)(v11 + v26)), (int32x4_t)0));
          v30[1] = v29;
          v26 += 32;
          v28 -= 16;
        }
        while (v28);
        if (v24 != (v24 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_25:
          do
          {
            int v25 = *(unsigned __int16 *)(v10 + 2 * v13) - *(unsigned __int16 *)(v11 + 2 * v13);
            *(_WORD *)(v12 + 2 * v13++) = v25 & ~(unsigned __int16)(v25 >> 31);
          }
          while (a7 != v13);
        }
      }
      v10 += a2;
      v11 += a4;
      v12 += a6;
      ++v8;
      if (!--a8) {
        return result;
      }
    }
    uint64_t v13 = 0;
    uint64_t v14 = 16;
    do
    {
      uint16x8_t v15 = vqsubq_u16(*(uint16x8_t *)(v10 + v14), *(uint16x8_t *)(v11 + v14));
      uint64_t v16 = (uint16x8_t *)(v12 + v14);
      v16[-1] = vqsubq_u16(*(uint16x8_t *)(v10 + v14 - 16), *(uint16x8_t *)(v11 + v14 - 16));
      *uint64_t v16 = v15;
      v13 += 16;
      v14 += 32;
    }
    while (v13 <= a7 - 16);
    uint64_t v13 = v13;
    if ((int)v13 > (int)v9) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v17 = v13 << 32;
    do
    {
      int v18 = *(unsigned __int16 *)(v10 + 2 * v13) - *(unsigned __int16 *)(v11 + 2 * v13);
      uint64_t v19 = (v17 >> 31) | 2;
      int v20 = *(unsigned __int16 *)(v10 + v19) - *(unsigned __int16 *)(v11 + v19);
      *(_WORD *)(v12 + 2 * v13) = v18 & ~(unsigned __int16)(v18 >> 31);
      *(_WORD *)(v12 + v19) = v20 & ~(unsigned __int16)(v20 >> 31);
      uint64_t v21 = (v17 >> 31) | 4;
      int v22 = *(unsigned __int16 *)(v10 + v21) - *(unsigned __int16 *)(v11 + v21);
      uint64_t v23 = (v17 >> 31) | 6;
      LODWORD(v19) = *(unsigned __int16 *)(v10 + v23) - *(unsigned __int16 *)(v11 + v23);
      *(_WORD *)(v12 + v21) = v22 & ~(unsigned __int16)(v22 >> 31);
      *(_WORD *)(v12 + v23) = v19 & ~(unsigned __int16)((int)v19 >> 31);
      v13 += 4;
      v17 += 0x400000000;
    }
    while (v13 <= v9);
    uint64_t v13 = v13;
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_100217328(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  if (a8)
  {
    uint64_t v8 = 0;
    uint64_t v9 = a7 - 4;
    uint64_t v10 = result;
    uint64_t v11 = a3;
    uint64_t v12 = a5;
    do
    {
      if (a7 >= 16)
      {
        uint64_t v14 = 0;
        uint64_t v13 = 0;
        do
        {
          int16x8_t v15 = vqsubq_s16(*(int16x8_t *)(v10 + v14 + 16), *(int16x8_t *)(v11 + v14 + 16));
          uint64_t v16 = (int16x8_t *)(v12 + v14);
          *uint64_t v16 = vqsubq_s16(*(int16x8_t *)(v10 + v14), *(int16x8_t *)(v11 + v14));
          v16[1] = v15;
          v13 += 16;
          v14 += 32;
        }
        while (v13 <= a7 - 16);
        uint64_t v13 = v13;
        if ((int)v13 <= (int)v9)
        {
LABEL_10:
          uint64_t v17 = v13 << 32;
          do
          {
            int v18 = *(__int16 *)(v10 + 2 * v13) - *(__int16 *)(v11 + 2 * v13);
            if (v18 >= 0x7FFF) {
              int v18 = 0x7FFF;
            }
            if (v18 <= -32768) {
              LOWORD(v18) = 0x8000;
            }
            uint64_t v19 = v17 >> 31;
            uint64_t v20 = (v17 >> 31) | 2;
            int v21 = *(__int16 *)(v10 + v20) - *(__int16 *)(v11 + v20);
            if (v21 >= 0x7FFF) {
              int v21 = 0x7FFF;
            }
            *(_WORD *)(v12 + 2 * v13) = v18;
            if (v21 <= -32768) {
              __int16 v22 = 0x8000;
            }
            else {
              __int16 v22 = v21;
            }
            *(_WORD *)(v12 + v20) = v22;
            uint64_t v23 = v19 | 4;
            int v24 = *(__int16 *)(v10 + (v19 | 4)) - *(__int16 *)(v11 + (v19 | 4));
            if (v24 >= 0x7FFF) {
              int v24 = 0x7FFF;
            }
            if (v24 <= -32768) {
              LOWORD(v24) = 0x8000;
            }
            uint64_t v25 = v19 | 6;
            int v26 = *(__int16 *)(v10 + v25) - *(__int16 *)(v11 + v25);
            if (v26 >= 0x7FFF) {
              int v26 = 0x7FFF;
            }
            *(_WORD *)(v12 + v23) = v24;
            if (v26 <= -32768) {
              __int16 v27 = 0x8000;
            }
            else {
              __int16 v27 = v26;
            }
            *(_WORD *)(v12 + v25) = v27;
            v13 += 4;
            v17 += 0x400000000;
          }
          while (v13 <= v9);
          uint64_t v13 = v13;
        }
      }
      else
      {
        uint64_t v13 = 0;
        if ((int)v9 >= 0) {
          goto LABEL_10;
        }
      }
      if ((int)v13 < a7)
      {
        unint64_t v28 = a7 - v13;
        if (v28 < 0x10) {
          goto LABEL_47;
        }
        uint64_t v30 = 2 * v13;
        uint64_t v31 = a5 + v8 * a6 + 2 * v13;
        if ((unint64_t)(v31 - (result + v8 * a2 + 2 * v13)) < 0x20) {
          goto LABEL_47;
        }
        if ((unint64_t)(v31 - (a3 + v8 * a4 + v30)) < 0x20) {
          goto LABEL_47;
        }
        v13 += v28 & 0xFFFFFFFFFFFFFFF0;
        unint64_t v32 = v28 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          int16x8_t v33 = vqsubq_s16(*(int16x8_t *)(v10 + v30 + 16), *(int16x8_t *)(v11 + v30 + 16));
          float64x2_t v34 = (int16x8_t *)(v12 + v30);
          *float64x2_t v34 = vqsubq_s16(*(int16x8_t *)(v10 + v30), *(int16x8_t *)(v11 + v30));
          v34[1] = v33;
          v30 += 32;
          v32 -= 16;
        }
        while (v32);
        if (v28 != (v28 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_47:
          do
          {
            int v29 = *(__int16 *)(v10 + 2 * v13) - *(__int16 *)(v11 + 2 * v13);
            if (v29 >= 0x7FFF) {
              int v29 = 0x7FFF;
            }
            if (v29 <= -32768) {
              LOWORD(v29) = 0x8000;
            }
            *(_WORD *)(v12 + 2 * v13++) = v29;
          }
          while (a7 != v13);
        }
      }
      v10 += a2;
      v11 += a4;
      v12 += a6;
      ++v8;
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_100217568(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v85 = a5;
  unint64_t v86 = a3;
  unint64_t v87 = result;
  if (!a8) {
    return result;
  }
  int v8 = a8 - 1;
  unint64_t v9 = (a7 - 4);
  if (a7 >= 8)
  {
    uint64_t v13 = 0;
    unint64_t v15 = a5;
    unint64_t v14 = a3;
    uint64_t v16 = (_DWORD *)(a5 + 32);
    uint64_t v17 = (int *)(a3 + 32);
    unint64_t v18 = result;
    unint64_t v19 = result + 32;
    while (1)
    {
      uint64_t result = 0;
      unint64_t v20 = 0;
      int v21 = v8;
      __int16 v22 = (int *)v19;
      uint64_t v23 = v17;
      int v24 = v16;
      do
      {
        int32x4_t v25 = vsubq_s32(*(int32x4_t *)(v18 + result), *(int32x4_t *)(v14 + result));
        int v26 = v24;
        __int16 v27 = v23;
        unint64_t v28 = v22;
        int32x4_t v29 = vsubq_s32(*(int32x4_t *)(v18 + result + 16), *(int32x4_t *)(v14 + result + 16));
        uint64_t v30 = (int32x4_t *)(v15 + result);
        v20 += 8;
        result += 32;
        *uint64_t v30 = v25;
        v30[1] = v29;
        int v24 = v26 + 8;
        v23 += 8;
        v22 += 8;
      }
      while (v20 <= (a7 - 8));
      if ((int)v9 >= (int)v20)
      {
        uint64_t result = 0;
        do
        {
          int v32 = *v28;
          v28 += 4;
          int v31 = v32;
          int v33 = *v27;
          v27 += 4;
          unint64_t v34 = (unint64_t)((v20 + result) & 0xFFFFFFFC) >> 2;
          uint64_t v35 = (16 * (v34 & 0x3FFFFFFF)) | 4;
          int v36 = *(_DWORD *)(v18 + v35) - *(_DWORD *)(v14 + v35);
          *int v26 = v31 - v33;
          v26 += 4;
          *(_DWORD *)(v15 + v35) = v36;
          *(int32x2_t *)(v15 + ((16 * (v34 & 0x3FFFFFFF)) | 8)) = vsub_s32(*(int32x2_t *)(v18 + ((16 * (v34 & 0x3FFFFFFF)) | 8)), *(int32x2_t *)(v14 + ((16 * (v34 & 0x3FFFFFFF)) | 8)));
          result += 4;
        }
        while (v20 + result <= v9);
        unint64_t v20 = (v20 + result);
        if ((int)v20 < a7)
        {
LABEL_20:
          uint64_t result = a7 - v20;
          if (result < 0xC) {
            goto LABEL_64;
          }
          uint64_t v37 = 4 * v20;
          uint64_t v38 = v85 + v13 * a6 + 4 * v20;
          if (v38 - (v87 + v13 * a2 + 4 * v20) < 0x20) {
            goto LABEL_64;
          }
          if (v38 - (v86 + v13 * a4 + v37) < 0x20) {
            goto LABEL_64;
          }
          v20 += result & 0xFFFFFFFFFFFFFFF8;
          unint64_t v39 = result & 0xFFFFFFFFFFFFFFF8;
          do
          {
            int32x4_t v40 = vsubq_s32(*(int32x4_t *)(v18 + v37 + 16), *(int32x4_t *)(v14 + v37 + 16));
            unint64_t v41 = (int32x4_t *)(v15 + v37);
            int32x4_t *v41 = vsubq_s32(*(int32x4_t *)(v18 + v37), *(int32x4_t *)(v14 + v37));
            v41[1] = v40;
            v37 += 32;
            v39 -= 8;
          }
          while (v39);
          if (result != (result & 0xFFFFFFFFFFFFFFF8))
          {
LABEL_64:
            do
            {
              uint64_t result = 4 * v20;
              *(_DWORD *)(v15 + 4 * v20) = *(_DWORD *)(v18 + 4 * v20) - *(_DWORD *)(v14 + 4 * v20);
              ++v20;
            }
            while (a7 != v20);
          }
        }
      }
      else
      {
        unint64_t v20 = v20;
        if ((int)v20 < a7) {
          goto LABEL_20;
        }
      }
      v18 += a2;
      v14 += a4;
      v15 += a6;
      int v8 = v21 - 1;
      ++v13;
      uint64_t v16 = (_DWORD *)((char *)v16 + a6);
      uint64_t v17 = (int *)((char *)v17 + a4);
      v19 += a2;
      if (!v21) {
        return result;
      }
    }
  }
  if (a7 >= 4)
  {
    uint64_t v42 = 0;
    unint64_t v84 = a5 + 16;
    unint64_t v83 = result + 16;
    unint64_t v80 = a3 + 16;
    unint64_t v43 = (v9 & 0xFFFFFFFC) + 5;
    if (v43 <= a7) {
      unint64_t v43 = a7;
    }
    unint64_t v44 = v43 - (v9 & 0xFFFFFFFC) - 4;
    uint64_t v45 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
    uint64_t v82 = (v9 >> 2) + 1;
    unint64_t v81 = v44 & 0xFFFFFFFFFFFFFFF8;
    while (1)
    {
      int v46 = v8;
      uint64_t v47 = v42 * a6;
      uint64_t v48 = v42 * a2;
      uint64_t v49 = v42 * a4;
      if (v9 < 0xC) {
        break;
      }
      unint64_t v50 = 0;
      unint64_t v53 = v85 + v45 + v47;
      BOOL v55 = a5 < v86 + v45 + v49 && a3 < v53;
      if (result < v53 && a5 < v87 + v45 + v48)
      {
        uint64_t v52 = 4;
        unint64_t v51 = 0;
LABEL_49:
        unint64_t v64 = v50 - 1;
        uint64_t v63 = v52 - 4;
        uint64_t v65 = 4 * v51;
        unint64_t v66 = a3;
        unint64_t v67 = result;
        unint64_t v68 = a5;
        do
        {
          int v69 = *(_DWORD *)(v67 + v65 + 4);
          int v70 = *(_DWORD *)(v66 + v65 + 4);
          *(_DWORD *)(v68 + v65) = *(_DWORD *)(v67 + v65) - *(_DWORD *)(v66 + v65);
          int v71 = v69 - v70;
          unint64_t v72 = (_DWORD *)(v68 + v65);
          v72[1] = v71;
          int v73 = *(_DWORD *)(v67 + v65 + 12) - *(_DWORD *)(v66 + v65 + 12);
          v51 += 4;
          ++v64;
          v63 += 4;
          _OWORD v72[2] = *(_DWORD *)(v67 + v65 + 8) - *(_DWORD *)(v66 + v65 + 8);
          v72[3] = v73;
          v68 += 16;
          v67 += 16;
          v66 += 16;
        }
        while (v51 <= v9);
        goto LABEL_51;
      }
      uint64_t v52 = 4;
      unint64_t v51 = 0;
      if (v55) {
        goto LABEL_49;
      }
      uint64_t v57 = 0;
      uint64_t v58 = v82 & 0x7FFFFFFC;
      do
      {
        int32x4_t v59 = vsubq_s32(*(int32x4_t *)(result + v57 + 16), *(int32x4_t *)(a3 + v57 + 16));
        int32x4_t v60 = vsubq_s32(*(int32x4_t *)(result + v57), *(int32x4_t *)(a3 + v57));
        int32x4_t v61 = vsubq_s32(*(int32x4_t *)(result + v57 + 48), *(int32x4_t *)(a3 + v57 + 48));
        int v62 = (int32x4_t *)(a5 + v57);
        _OWORD v62[2] = vsubq_s32(*(int32x4_t *)(result + v57 + 32), *(int32x4_t *)(a3 + v57 + 32));
        v62[3] = v61;
        int32x4_t *v62 = v60;
        v62[1] = v59;
        v57 += 64;
        v58 -= 4;
      }
      while (v58);
      unint64_t v50 = v82 & 0x7FFFFFFC;
      uint64_t v52 = (16 * ((v50 >> 2) & 0x1FFFFFFF)) | 4;
      uint64_t v63 = 4 * v50;
      unint64_t v51 = v63;
      unint64_t v64 = v50 - 1;
      if (v82 != v50) {
        goto LABEL_49;
      }
LABEL_51:
      if ((int)v51 < a7)
      {
        if (v44 < 0xC
          || (uint64_t v75 = 16 * v64 + v84 + v47, v75 - (16 * v64 + v83 + v48) < 0x20)
          || v75 - (16 * v64 + v80 + v49) < 0x20)
        {
          unint64_t v74 = v63;
        }
        else
        {
          unint64_t v76 = v44 & 0xFFFFFFFFFFFFFFF8;
          unint64_t v74 = v63 + v81;
          uint64_t v77 = 4 * v63;
          do
          {
            int32x4_t v78 = vsubq_s32(*(int32x4_t *)(result + v77 + 16), *(int32x4_t *)(a3 + v77 + 16));
            uint64_t v79 = (int32x4_t *)(a5 + v77);
            int32x4_t *v79 = vsubq_s32(*(int32x4_t *)(result + v77), *(int32x4_t *)(a3 + v77));
            v79[1] = v78;
            v77 += 32;
            v76 -= 8;
          }
          while (v76);
          if (v44 == v81) {
            goto LABEL_31;
          }
        }
        do
        {
          *(_DWORD *)(a5 + 4 * v74) = *(_DWORD *)(result + 4 * v74) - *(_DWORD *)(a3 + 4 * v74);
          ++v74;
        }
        while (v74 < a7);
      }
LABEL_31:
      result += a2;
      a3 += a4;
      a5 += a6;
      int v8 = v46 - 1;
      ++v42;
      if (!v46) {
        return result;
      }
    }
    unint64_t v50 = 0;
    unint64_t v51 = 0;
    uint64_t v52 = 4;
    goto LABEL_49;
  }
  if (a7 >= 1)
  {
    uint64_t v10 = (_DWORD *)(a5 + 8);
    uint64_t v11 = (_DWORD *)(a3 + 8);
    uint64_t v12 = (_DWORD *)(result + 4);
    do
    {
      *(v10 - 2) = *(v12 - 1) - *(v11 - 2);
      if (a7 != 1)
      {
        *(v10 - 1) = *v12 - *(v11 - 1);
        if (a7 != 2) {
          _DWORD *v10 = v12[1] - *v11;
        }
      }
      uint64_t v10 = (_DWORD *)((char *)v10 + a6);
      uint64_t v11 = (_DWORD *)((char *)v11 + a4);
      uint64_t v12 = (_DWORD *)((char *)v12 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_100217AD0(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  if (!a8) {
    return result;
  }
  unint64_t v8 = a5;
  int v9 = a8 - 1;
  unint64_t v10 = (a7 - 4);
  if (a7 >= 8)
  {
    uint64_t v14 = 0;
    unint64_t v15 = (float *)(a5 + 32);
    uint64_t v16 = (float *)(a3 + 32);
    uint64_t v17 = (float *)(result + 32);
    unint64_t v18 = result;
    unint64_t v19 = a3;
    unint64_t v20 = a5;
    while (1)
    {
      uint64_t v21 = 0;
      unint64_t v22 = 0;
      int v23 = v9;
      int v24 = v17;
      int32x4_t v25 = v16;
      int v26 = v15;
      do
      {
        float32x4_t v27 = vsubq_f32(*(float32x4_t *)(v18 + v21), *(float32x4_t *)(v19 + v21));
        unint64_t v28 = v26;
        int32x4_t v29 = v25;
        uint64_t v30 = v24;
        float32x4_t v31 = vsubq_f32(*(float32x4_t *)(v18 + v21 + 16), *(float32x4_t *)(v19 + v21 + 16));
        int v32 = (float32x4_t *)(v20 + v21);
        v22 += 8;
        v21 += 32;
        *int v32 = v27;
        v32[1] = v31;
        v26 += 8;
        int32x4_t v25 = v29 + 8;
        v24 += 8;
      }
      while (v22 <= (a7 - 8));
      if ((int)v10 >= (int)v22)
      {
        uint64_t v33 = 0;
        do
        {
          float v34 = *v30;
          v30 += 4;
          float v35 = v34;
          float v36 = *v29;
          v29 += 4;
          unint64_t v37 = (unint64_t)((v22 + v33) & 0xFFFFFFFC) >> 2;
          uint64_t v38 = (16 * (v37 & 0x3FFFFFFF)) | 4;
          float v39 = *(float *)(v18 + v38);
          float v40 = *(float *)(v19 + v38);
          *unint64_t v28 = v35 - v36;
          v28 += 4;
          *(float *)(v20 + v38) = v39 - v40;
          *(float32x2_t *)(v20 + ((16 * (v37 & 0x3FFFFFFF)) | 8)) = vsub_f32(*(float32x2_t *)(v18+ ((16 * (v37 & 0x3FFFFFFF)) | 8)), *(float32x2_t *)(v19+ ((16 * (v37 & 0x3FFFFFFF)) | 8)));
          v33 += 4;
        }
        while (v22 + v33 <= v10);
        unint64_t v22 = (v22 + v33);
        if ((int)v22 < a7)
        {
LABEL_20:
          unint64_t v41 = a7 - v22;
          if (v41 < 0xC) {
            goto LABEL_64;
          }
          uint64_t v42 = 4 * v22;
          uint64_t v43 = v8 + v14 * a6 + 4 * v22;
          if (v43 - (result + v14 * a2 + 4 * v22) < 0x20) {
            goto LABEL_64;
          }
          if (v43 - (a3 + v14 * a4 + v42) < 0x20) {
            goto LABEL_64;
          }
          v22 += v41 & 0xFFFFFFFFFFFFFFF8;
          unint64_t v44 = v41 & 0xFFFFFFFFFFFFFFF8;
          do
          {
            float32x4_t v45 = vsubq_f32(*(float32x4_t *)(v18 + v42 + 16), *(float32x4_t *)(v19 + v42 + 16));
            int v46 = (float32x4_t *)(v20 + v42);
            float32x4_t *v46 = vsubq_f32(*(float32x4_t *)(v18 + v42), *(float32x4_t *)(v19 + v42));
            v46[1] = v45;
            v42 += 32;
            v44 -= 8;
          }
          while (v44);
          if (v41 != (v41 & 0xFFFFFFFFFFFFFFF8))
          {
LABEL_64:
            do
            {
              *(float *)(v20 + 4 * v22) = *(float *)(v18 + 4 * v22) - *(float *)(v19 + 4 * v22);
              ++v22;
            }
            while (a7 != v22);
          }
        }
      }
      else
      {
        unint64_t v22 = v22;
        if ((int)v22 < a7) {
          goto LABEL_20;
        }
      }
      v18 += a2;
      v19 += a4;
      v20 += a6;
      int v9 = v23 - 1;
      ++v14;
      unint64_t v15 = (float *)((char *)v15 + a6);
      uint64_t v16 = (float *)((char *)v16 + a4);
      uint64_t v17 = (float *)((char *)v17 + a2);
      if (!v23) {
        return result;
      }
    }
  }
  if (a7 >= 4)
  {
    uint64_t v47 = 0;
    unint64_t v91 = a5 + 16;
    unint64_t v90 = result + 16;
    unint64_t v87 = a3 + 16;
    unint64_t v48 = (v10 & 0xFFFFFFFC) + 5;
    if (v48 <= a7) {
      unint64_t v48 = a7;
    }
    uint64_t v49 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
    uint64_t v89 = (v10 >> 2) + 1;
    unint64_t v92 = v48 - (v10 & 0xFFFFFFFC) - 4;
    unint64_t v88 = v92 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v50 = result;
    unint64_t v51 = a3;
    unint64_t v93 = result;
    unint64_t v52 = a3;
    unint64_t v53 = a5;
    while (1)
    {
      int v54 = v9;
      uint64_t v55 = v47 * a6;
      uint64_t v56 = v47 * a2;
      uint64_t v57 = v47 * a4;
      if (v10 < 0xC) {
        break;
      }
      unint64_t v58 = 0;
      unint64_t v61 = v8 + v49 + v55;
      BOOL v63 = a5 < a3 + v49 + v57 && v51 < v61;
      if (v50 < v61 && a5 < result + v49 + v56)
      {
        uint64_t v60 = 4;
        unint64_t v59 = 0;
LABEL_49:
        unint64_t v72 = v58 - 1;
        uint64_t v71 = v60 - 4;
        uint64_t v73 = 4 * v59;
        unint64_t v74 = v51;
        unint64_t v75 = v50;
        unint64_t v76 = a5;
        do
        {
          float v77 = *(float *)(v75 + v73 + 4);
          float v78 = *(float *)(v74 + v73 + 4);
          *(float *)(v76 + v73) = *(float *)(v75 + v73) - *(float *)(v74 + v73);
          uint64_t v79 = (float *)(v76 + v73);
          v79[1] = v77 - v78;
          float v80 = *(float *)(v75 + v73 + 12) - *(float *)(v74 + v73 + 12);
          v59 += 4;
          ++v72;
          v71 += 4;
          _OWORD v79[2] = *(float *)(v75 + v73 + 8) - *(float *)(v74 + v73 + 8);
          v79[3] = v80;
          v76 += 16;
          v75 += 16;
          v74 += 16;
        }
        while (v59 <= v10);
        goto LABEL_51;
      }
      uint64_t v60 = 4;
      unint64_t v59 = 0;
      if (v63) {
        goto LABEL_49;
      }
      uint64_t v65 = 0;
      uint64_t v66 = v89 & 0x7FFFFFFC;
      do
      {
        float32x4_t v67 = vsubq_f32(*(float32x4_t *)(v50 + v65 + 16), *(float32x4_t *)(v51 + v65 + 16));
        float32x4_t v68 = vsubq_f32(*(float32x4_t *)(v50 + v65), *(float32x4_t *)(v51 + v65));
        float32x4_t v69 = vsubq_f32(*(float32x4_t *)(v50 + v65 + 48), *(float32x4_t *)(v51 + v65 + 48));
        int v70 = (float32x4_t *)(a5 + v65);
        _OWORD v70[2] = vsubq_f32(*(float32x4_t *)(v50 + v65 + 32), *(float32x4_t *)(v51 + v65 + 32));
        v70[3] = v69;
        float32x4_t *v70 = v68;
        v70[1] = v67;
        v65 += 64;
        v66 -= 4;
      }
      while (v66);
      unint64_t v58 = v89 & 0x7FFFFFFC;
      uint64_t v60 = (16 * ((v58 >> 2) & 0x1FFFFFFF)) | 4;
      uint64_t v71 = 4 * v58;
      unint64_t v59 = v71;
      unint64_t v72 = v58 - 1;
      if (v89 != v58) {
        goto LABEL_49;
      }
LABEL_51:
      if ((int)v59 < a7)
      {
        if (v92 < 0xC
          || (uint64_t v82 = 16 * v72 + v91 + v55, v82 - (16 * v72 + v90 + v56) < 0x20)
          || v82 - (16 * v72 + v87 + v57) < 0x20)
        {
          unint64_t v81 = v71;
        }
        else
        {
          unint64_t v83 = v92 & 0xFFFFFFFFFFFFFFF8;
          unint64_t v81 = v71 + v88;
          uint64_t v84 = 4 * v71;
          do
          {
            float32x4_t v85 = vsubq_f32(*(float32x4_t *)(v50 + v84 + 16), *(float32x4_t *)(v51 + v84 + 16));
            unint64_t v86 = (float32x4_t *)(a5 + v84);
            float32x4_t *v86 = vsubq_f32(*(float32x4_t *)(v50 + v84), *(float32x4_t *)(v51 + v84));
            v86[1] = v85;
            v84 += 32;
            v83 -= 8;
          }
          while (v83);
          if (v92 == v88) {
            goto LABEL_31;
          }
        }
        do
        {
          *(float *)(a5 + 4 * v81) = *(float *)(v50 + 4 * v81) - *(float *)(v51 + 4 * v81);
          ++v81;
        }
        while (v81 < a7);
      }
LABEL_31:
      v50 += a2;
      v51 += a4;
      a5 += a6;
      int v9 = v54 - 1;
      ++v47;
      uint64_t result = v93;
      a3 = v52;
      unint64_t v8 = v53;
      if (!v54) {
        return result;
      }
    }
    unint64_t v58 = 0;
    unint64_t v59 = 0;
    uint64_t v60 = 4;
    goto LABEL_49;
  }
  if (a7 >= 1)
  {
    uint64_t v11 = (float *)(a5 + 8);
    uint64_t v12 = (float *)(a3 + 8);
    uint64_t v13 = (float *)(result + 4);
    do
    {
      *(v11 - 2) = *(v13 - 1) - *(v12 - 2);
      if (a7 != 1)
      {
        *(v11 - 1) = *v13 - *(v12 - 1);
        if (a7 != 2) {
          *uint64_t v11 = v13[1] - *v12;
        }
      }
      uint64_t v11 = (float *)((char *)v11 + a6);
      uint64_t v12 = (float *)((char *)v12 + a4);
      uint64_t v13 = (float *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_100218048(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  if (!a8) {
    return result;
  }
  unint64_t v8 = a3;
  unint64_t v9 = result;
  unint64_t v10 = (a7 - 4);
  if (a7 >= 4)
  {
    uint64_t v14 = 0;
    int v15 = a8 - 1;
    uint64_t v16 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
    uint64_t v53 = v16 + a5 + 32;
    uint64_t v52 = v16 + result + 32;
    uint64_t v50 = v16 + a3 + 32;
    unint64_t v17 = (v10 & 0xFFFFFFFC) + 5;
    if (v17 <= a7) {
      unint64_t v17 = a7;
    }
    uint64_t v18 = 32 * (v10 >> 2) + 32;
    uint64_t v51 = (v10 >> 2) + 1;
    unint64_t v54 = v17 - (v10 & 0xFFFFFFFC) - 4;
    unint64_t v49 = v17 & 3;
    unint64_t v19 = a5 + 16;
    unint64_t v20 = a5;
    while (1)
    {
      int v21 = v15;
      uint64_t v22 = v14 * a6;
      uint64_t v23 = v14 * a2;
      uint64_t v24 = v14 * a4;
      if (v10 >= 0xC)
      {
        unint64_t v25 = 0;
        unint64_t v26 = a5 + v18 + v22;
        BOOL v28 = v20 < v8 + v18 + v24 && a3 < v26;
        if ((result >= v26 || v20 >= v9 + v18 + v23) && !v28)
        {
          uint64_t v30 = 0;
          uint64_t v31 = v51 & 0x7FFFFFFE;
          do
          {
            float64x2_t v32 = vsubq_f64(*(float64x2_t *)(result + v30 + 16), *(float64x2_t *)(a3 + v30 + 16));
            float64x2_t v33 = vsubq_f64(*(float64x2_t *)(result + v30), *(float64x2_t *)(a3 + v30));
            float64x2_t v34 = vsubq_f64(*(float64x2_t *)(result + v30 + 48), *(float64x2_t *)(a3 + v30 + 48));
            float v35 = (float64x2_t *)(v20 + v30);
            v35[2] = vsubq_f64(*(float64x2_t *)(result + v30 + 32), *(float64x2_t *)(a3 + v30 + 32));
            v35[3] = v34;
            *float v35 = v33;
            v35[1] = v32;
            v30 += 64;
            v31 -= 2;
          }
          while (v31);
          unint64_t v25 = 4 * (v51 & 0x7FFFFFFE);
          if (v51 == (v51 & 0x7FFFFFFE)) {
            goto LABEL_32;
          }
        }
      }
      else
      {
        unint64_t v25 = 0;
      }
      uint64_t v36 = 8 * v25;
      unint64_t v37 = v19;
      unint64_t v38 = a3;
      unint64_t v39 = result;
      do
      {
        double v40 = *(double *)(v39 + v36 + 8) - *(double *)(v38 + v36 + 8);
        unint64_t v41 = v37 + v36;
        *(double *)(v41 - 16) = *(double *)(v39 + v36) - *(double *)(v38 + v36);
        *(double *)(v41 - 8) = v40;
        double v42 = *(double *)(v39 + v36 + 24);
        double v43 = *(double *)(v38 + v36 + 24);
        *(double *)(v37 + v36) = *(double *)(v39 + v36 + 16) - *(double *)(v38 + v36 + 16);
        v25 += 4;
        *(double *)(v41 + 8) = v42 - v43;
        v39 += 32;
        v38 += 32;
        v37 += 32;
      }
      while (v25 <= v10);
LABEL_32:
      if ((int)v25 < a7)
      {
        unint64_t v44 = (v10 & 0xFFFFFFFC) + 4;
        if (v54 < 6) {
          goto LABEL_43;
        }
        unint64_t v44 = (v10 & 0xFFFFFFFC) + 4;
        if ((unint64_t)(v53 + v22 - (v52 + v23)) < 0x20) {
          goto LABEL_43;
        }
        unint64_t v44 = (v10 & 0xFFFFFFFC) + 4;
        if ((unint64_t)(v53 + v22 - (v50 + v24)) < 0x20) {
          goto LABEL_43;
        }
        uint64_t v45 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
        unint64_t v46 = v54 - v49;
        do
        {
          float64x2_t v47 = vsubq_f64(*(float64x2_t *)(result + v45 + 48), *(float64x2_t *)(a3 + v45 + 48));
          unint64_t v48 = (float64x2_t *)(v20 + v45);
          _OWORD v48[2] = vsubq_f64(*(float64x2_t *)(result + v45 + 32), *(float64x2_t *)(a3 + v45 + 32));
          v48[3] = v47;
          v45 += 32;
          v46 -= 4;
        }
        while (v46);
        unint64_t v44 = (v10 & 0xFFFFFFFC) + 4 + v54 - v49;
        if (v49)
        {
LABEL_43:
          do
          {
            *(double *)(v20 + 8 * v44) = *(double *)(result + 8 * v44) - *(double *)(a3 + 8 * v44);
            ++v44;
          }
          while (v44 < a7);
        }
      }
      result += a2;
      a3 += a4;
      v20 += a6;
      int v15 = v21 - 1;
      ++v14;
      v19 += a6;
      if (!v21) {
        return result;
      }
    }
  }
  if (a7 >= 1)
  {
    uint64_t v11 = (double *)(a5 + 16);
    uint64_t v12 = (double *)(a3 + 16);
    uint64_t v13 = (double *)(result + 8);
    do
    {
      *(v11 - 2) = *(v13 - 1) - *(v12 - 2);
      if (a7 != 1)
      {
        *(v11 - 1) = *v13 - *(v12 - 1);
        if (a7 != 2) {
          *uint64_t v11 = v13[1] - *v12;
        }
      }
      uint64_t v11 = (double *)((char *)v11 + a6);
      uint64_t v12 = (double *)((char *)v12 + a4);
      uint64_t v13 = (double *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_100218398(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  if (a8)
  {
    uint64_t v8 = a7 - 4;
    while (a7 < 32)
    {
      uint64_t v9 = 0;
      if ((int)v8 >= 0) {
        goto LABEL_10;
      }
LABEL_13:
      if ((int)v9 < a7)
      {
        do
        {
          *(unsigned char *)(a5 + v9) = byte_100406966[*(unsigned __int8 *)(a3 + v9) - *(unsigned __int8 *)(result + v9) + 256]
                              + *(unsigned char *)(result + v9);
          ++v9;
        }
        while (a7 != v9);
      }
      result += a2;
      a3 += a4;
      a5 += a6;
      if (!--a8) {
        return result;
      }
    }
    uint64_t v10 = 16;
    do
    {
      uint8x16_t v11 = vmaxq_u8(*(uint8x16_t *)(result + v10), *(uint8x16_t *)(a3 + v10));
      uint64_t v12 = (uint8x16_t *)(a5 + v10);
      v12[-1] = vmaxq_u8(*(uint8x16_t *)(result + v10 - 16), *(uint8x16_t *)(a3 + v10 - 16));
      *uint64_t v12 = v11;
      uint64_t v13 = v10 + 16;
      v10 += 32;
    }
    while (v13 <= a7 - 32);
    uint64_t v9 = (v10 - 16);
    if ((int)v9 > (int)v8) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v14 = v9 << 32;
    do
    {
      uint64_t v15 = (v14 >> 32) | 1;
      char v16 = byte_100406966[*(unsigned __int8 *)(a3 + v15) - *(unsigned __int8 *)(result + v15) + 256]
          + *(unsigned char *)(result + v15);
      *(unsigned char *)(a5 + v9) = byte_100406966[*(unsigned __int8 *)(a3 + v9) - *(unsigned __int8 *)(result + v9) + 256]
                          + *(unsigned char *)(result + v9);
      *(unsigned char *)(a5 + v15) = v16;
      uint64_t v17 = (v14 >> 32) | 3;
      uint64_t v18 = *(unsigned __int8 *)(result + v17);
      LOBYTE(v15) = byte_100406966[*(unsigned __int8 *)(a3 + v17) - v18 + 256];
      *(unsigned char *)(a5 + ((v14 >> 32) | 2)) = byte_100406966[*(unsigned __int8 *)(a3 + ((v14 >> 32) | 2))
                                                        - *(unsigned __int8 *)(result + ((v14 >> 32) | 2))
                                                        + 256]
                                         + *(unsigned char *)(result + ((v14 >> 32) | 2));
      *(unsigned char *)(a5 + v17) = v15 + v18;
      v9 += 4;
      v14 += 0x400000000;
    }
    while (v9 <= v8);
    uint64_t v9 = v9;
    goto LABEL_13;
  }
  return result;
}

unint64_t sub_100218510(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v107 = a5;
  unint64_t v109 = result;
  if (!a8) {
    return result;
  }
  uint64_t v8 = a7 - 4;
  uint64_t v9 = a7;
  if (a7 >= 32)
  {
    uint64_t v16 = 0;
    unint64_t v18 = a5;
    unint64_t v17 = a3;
    unint64_t v19 = (unsigned char *)(v107 + 32);
    unint64_t v20 = (char *)(a3 + 32);
    unint64_t v21 = result;
    unint64_t v22 = result + 32;
    while (1)
    {
      uint64_t v23 = 0;
      unint64_t v24 = v107 + v16 * a6;
      uint64_t v25 = 0x2000000000;
      unint64_t v26 = (char *)v22;
      float32x4_t v27 = v20;
      BOOL v28 = v19;
      do
      {
        int8x16_t v29 = vmaxq_s8(*(int8x16_t *)(v21 + v23), *(int8x16_t *)(v17 + v23));
        uint64_t v30 = v28;
        uint64_t v31 = v25;
        float64x2_t v32 = v27;
        float64x2_t v33 = v26;
        int8x16_t v34 = vmaxq_s8(*(int8x16_t *)(v21 + v23 + 16), *(int8x16_t *)(v17 + v23 + 16));
        float v35 = (int8x16_t *)(v18 + v23);
        v23 += 32;
        v28 += 32;
        *float v35 = v29;
        v35[1] = v34;
        v25 += 0x2000000000;
        float32x4_t v27 = v32 + 32;
        v26 += 32;
      }
      while (v23 <= a7 - 32);
      if ((int)v8 >= (int)v23)
      {
        do
        {
          int v37 = *v33;
          v33 += 4;
          int v36 = v37;
          int v39 = *v32;
          v32 += 4;
          char v38 = v39;
          uint64_t v40 = v31 >> 32;
          uint64_t v41 = (v31 >> 32) | 1;
          int v42 = *(char *)(v21 + v41);
          if (v36 <= v39) {
            LOBYTE(v36) = v38;
          }
          int v43 = *(char *)(v17 + v41);
          *uint64_t v30 = v36;
          v30 += 4;
          if (v42 <= v43) {
            LOBYTE(v42) = v43;
          }
          *(unsigned char *)(v18 + v41) = v42;
          uint64_t v44 = v40 | 2;
          int v45 = *(char *)(v21 + (v40 | 2));
          int v46 = *(char *)(v17 + (v40 | 2));
          uint64_t v47 = v40 | 3;
          int v48 = *(char *)(v21 + v47);
          if (v45 <= v46) {
            LOBYTE(v45) = v46;
          }
          int v49 = *(char *)(v17 + v47);
          *(unsigned char *)(v18 + v44) = v45;
          if (v48 <= v49) {
            char v50 = v49;
          }
          else {
            char v50 = v48;
          }
          *(unsigned char *)(v18 + v47) = v50;
          v23 += 4;
          v31 += 0x400000000;
        }
        while (v23 <= v8);
      }
      unint64_t v51 = v23;
      uint64_t result = a7;
      if ((int)v23 >= a7) {
        goto LABEL_17;
      }
      unint64_t v52 = a7 - (unint64_t)v23;
      if (v52 < 8)
      {
        unint64_t v53 = v51;
        goto LABEL_34;
      }
      if (v24 - (v109 + v16 * a2) < 0x20)
      {
        unint64_t v53 = v51;
        goto LABEL_34;
      }
      if (v24 - (a3 + v16 * a4) < 0x20)
      {
        unint64_t v53 = v51;
        goto LABEL_34;
      }
      if (v52 >= 0x20)
      {
        unint64_t v55 = v52 & 0xFFFFFFFFFFFFFFE0;
        uint64_t result = v51;
        unint64_t v56 = v52 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          int8x16_t v57 = vmaxq_s8(*(int8x16_t *)(v21 + result + 16), *(int8x16_t *)(v17 + result + 16));
          unint64_t v58 = (int8x16_t *)(v18 + result);
          int8x16_t *v58 = vmaxq_s8(*(int8x16_t *)(v21 + result), *(int8x16_t *)(v17 + result));
          v58[1] = v57;
          result += 32;
          v56 -= 32;
        }
        while (v56);
        if (v52 == v55) {
          goto LABEL_17;
        }
        if ((v52 & 0x18) == 0)
        {
          unint64_t v53 = v55 + v51;
          do
          {
LABEL_34:
            LODWORD(result) = *(char *)(v21 + v53);
            int v54 = *(char *)(v17 + v53);
            if ((int)result <= v54) {
              uint64_t result = v54;
            }
            else {
              uint64_t result = result;
            }
            *(unsigned char *)(v18 + v53++) = result;
          }
          while (a7 != v53);
          goto LABEL_17;
        }
      }
      else
      {
        unint64_t v55 = 0;
      }
      uint64_t result = v52 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v53 = (v52 & 0xFFFFFFFFFFFFFFF8) + v51;
      unint64_t v59 = v55 - (v52 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v60 = v55 + v51;
      do
      {
        *(int8x8_t *)(v18 + v60) = vmax_s8(*(int8x8_t *)(v21 + v60), *(int8x8_t *)(v17 + v60));
        v60 += 8;
        v59 += 8;
      }
      while (v59);
      if (v52 != result) {
        goto LABEL_34;
      }
LABEL_17:
      v21 += a2;
      v17 += a4;
      v18 += a6;
      ++v16;
      v19 += a6;
      v20 += a4;
      v22 += a2;
      if (!--a8) {
        return result;
      }
    }
  }
  if (a7 >= 4)
  {
    uint64_t v61 = 0;
    unint64_t v62 = a3;
    unint64_t v63 = a5 + 4;
    unint64_t v64 = result;
    unint64_t v106 = result + 4;
    unint64_t v105 = a3 + 4;
    if (v8 <= 3) {
      unint64_t v65 = 3;
    }
    else {
      unint64_t v65 = v8;
    }
    unint64_t v66 = v9 - (v65 & 0x7FFFFFFC) - 4;
    uint64_t v67 = (v65 & 0x7FFFFFFC) + 4;
    uint64_t v68 = (v65 >> 2) + 1;
    unint64_t v104 = v66 & 0xFFFFFFFFFFFFFFE0;
    unint64_t v103 = v66 & 0xFFFFFFFFFFFFFFF8;
    while (1)
    {
      uint64_t v69 = v61 * a6;
      uint64_t v70 = v61 * a2;
      uint64_t v71 = v61 * a4;
      if (v65 >= 0x3C)
      {
        uint64_t v72 = 0;
        unint64_t v87 = v107 + v67 + v69;
        BOOL v89 = a5 < a3 + v67 + v71 && v62 < v87;
        uint64_t v73 = 0;
        if ((v64 >= v87 || a5 >= v109 + v67 + v70) && !v89)
        {
          uint64_t v91 = 0;
          uint64_t v92 = 0;
          uint64_t v93 = v68 & 0x3FFFFFF0;
          do
          {
            int8x16_t v94 = vmaxq_s8(*(int8x16_t *)(v64 + v91 + 16), *(int8x16_t *)(v62 + v91 + 16));
            int8x16_t v95 = vmaxq_s8(*(int8x16_t *)(v64 + v91), *(int8x16_t *)(v62 + v91));
            int8x16_t v96 = vmaxq_s8(*(int8x16_t *)(v64 + v91 + 48), *(int8x16_t *)(v62 + v91 + 48));
            uint64_t result = a5 - 3 + ((v92 >> 32) | 3);
            *(int8x16_t *)(result + 32) = vmaxq_s8(*(int8x16_t *)(v64 + v91 + 32), *(int8x16_t *)(v62 + v91 + 32));
            *(int8x16_t *)(result + 48) = v96;
            *(int8x16_t *)uint64_t result = v95;
            *(int8x16_t *)(result + 16) = v94;
            v92 += 0x4000000000;
            v91 += 64;
            v93 -= 16;
          }
          while (v93);
          uint64_t v72 = v68 & 0x3FFFFFF0;
          uint64_t v74 = v72 - 1;
          uint64_t v73 = 4 * v72;
          if (v68 == v72) {
            goto LABEL_72;
          }
        }
      }
      else
      {
        uint64_t v72 = 0;
        uint64_t v73 = 0;
      }
      uint64_t v74 = v72 - 1;
      uint64_t v75 = v73 << 32;
      do
      {
        int v76 = *(char *)(v64 + v73);
        if (v76 <= *(char *)(v62 + v73)) {
          LOBYTE(v76) = *(unsigned char *)(v62 + v73);
        }
        uint64_t v77 = v75 >> 32;
        uint64_t v78 = (v75 >> 32) | 1;
        int v79 = *(char *)(v62 + v78);
        if (*(char *)(v64 + v78) > v79) {
          LOBYTE(v79) = *(unsigned char *)(v64 + v78);
        }
        *(unsigned char *)(a5 + v73) = v76;
        *(unsigned char *)(a5 + v78) = v79;
        uint64_t v80 = v77 | 2;
        LODWORD(result) = *(char *)(v64 + (v77 | 2));
        int v81 = *(char *)(v62 + (v77 | 2));
        if ((int)result <= v81) {
          uint64_t result = v81;
        }
        else {
          uint64_t result = result;
        }
        uint64_t v82 = v77 | 3;
        int v83 = *(char *)(v64 + v82);
        if (v83 <= *(char *)(v62 + v82)) {
          LOBYTE(v83) = *(unsigned char *)(v62 + v82);
        }
        *(unsigned char *)(a5 + v80) = result;
        *(unsigned char *)(a5 + v82) = v83;
        v73 += 4;
        ++v74;
        v75 += 0x400000000;
      }
      while (v73 <= v8);
LABEL_72:
      if ((int)v73 < a7)
      {
        uint64_t v84 = v73 & 0xFFFFFFFC;
        if (v66 < 8)
        {
          uint64_t v85 = v84;
          goto LABEL_75;
        }
        uint64_t result = v106 + v70;
        uint64_t v97 = 4 * v74 + v63 + v69;
        if (v97 - (4 * v74 + result) < 0x20)
        {
          uint64_t v85 = v84;
          goto LABEL_75;
        }
        if (v97 - (4 * v74 + v105 + v71) < 0x20)
        {
          uint64_t v85 = v84;
          goto LABEL_75;
        }
        if (v66 >= 0x20)
        {
          uint64_t v98 = v84;
          unint64_t v99 = v66 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            int8x16_t v100 = vmaxq_s8(*(int8x16_t *)(v64 + v98 + 16), *(int8x16_t *)(v62 + v98 + 16));
            uint64_t v101 = (int8x16_t *)(a5 + v98);
            *uint64_t v101 = vmaxq_s8(*(int8x16_t *)(v64 + v98), *(int8x16_t *)(v62 + v98));
            v101[1] = v100;
            v98 += 32;
            v99 -= 32;
          }
          while (v99);
          if (v66 == v104) {
            goto LABEL_58;
          }
          uint64_t result = v66 & 0xFFFFFFFFFFFFFFE0;
          if ((v66 & 0x18) == 0)
          {
            uint64_t v85 = v84 + v104;
            do
            {
LABEL_75:
              int v86 = *(char *)(v64 + v85);
              if (v86 <= *(char *)(v62 + v85)) {
                LOBYTE(v86) = *(unsigned char *)(v62 + v85);
              }
              *(unsigned char *)(a5 + v85++) = v86;
            }
            while (v9 != v85);
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t result = 0;
        }
        uint64_t v85 = v84 + v103;
        unint64_t v102 = result - (v66 & 0xFFFFFFFFFFFFFFF8);
        result += v84;
        do
        {
          *(int8x8_t *)(a5 + result) = vmax_s8(*(int8x8_t *)(v64 + result), *(int8x8_t *)(v62 + result));
          result += 8;
          v102 += 8;
        }
        while (v102);
        if (v66 != v103) {
          goto LABEL_75;
        }
      }
LABEL_58:
      v64 += a2;
      v62 += a4;
      a5 += a6;
      ++v61;
      if (!--a8) {
        return result;
      }
    }
  }
  if (a7 >= 1)
  {
    uint64_t v10 = (unsigned char *)(a5 + 2);
    uint8x16_t v11 = (unsigned char *)(a3 + 2);
    uint64_t v12 = (char *)(result + 1);
    do
    {
      int v13 = *(v12 - 1);
      if (v13 <= (char)*(v11 - 2)) {
        LOBYTE(v13) = *(v11 - 2);
      }
      *(v10 - 2) = v13;
      if (a7 != 1)
      {
        int v14 = *v12;
        if (v14 <= (char)*(v11 - 1)) {
          LOBYTE(v14) = *(v11 - 1);
        }
        *(v10 - 1) = v14;
        if (a7 != 2)
        {
          int v15 = v12[1];
          if (v15 <= (char)*v11) {
            LOBYTE(v15) = *v11;
          }
          unsigned char *v10 = v15;
        }
      }
      v10 += a6;
      v11 += a4;
      v12 += a2;
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_100218B70(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v111 = a5;
  unint64_t v112 = a3;
  unint64_t v113 = result;
  if (!a8) {
    return result;
  }
  int v8 = a8 - 1;
  unint64_t v9 = (a7 - 4);
  unint64_t v10 = (a7 - 16);
  if (a7 >= 16)
  {
    uint64_t v17 = 0;
    unint64_t v19 = a3;
    unint64_t v18 = result;
    unint64_t v20 = result + 32;
    unint64_t v21 = (unsigned __int16 *)(a3 + 32);
    unint64_t v22 = a5;
    uint64_t v23 = (_WORD *)(a5 + 32);
    uint64_t v24 = a7;
    uint64_t v110 = a6;
    while (1)
    {
      uint64_t v25 = 0;
      unint64_t v26 = 0;
      int v27 = v8;
      unint64_t v28 = v111 + v17 * a6;
      uint64_t v29 = a2;
      unint64_t v30 = v113 + v17 * a2;
      uint64_t v31 = 0x1000000000;
      float64x2_t v32 = v23;
      float64x2_t v33 = v21;
      int8x16_t v34 = (unsigned __int16 *)v20;
      uint64_t v35 = a4;
      unint64_t v36 = v112 + v17 * a4;
      do
      {
        uint16x8_t v37 = vmaxq_u16(*(uint16x8_t *)(v18 + v25), *(uint16x8_t *)(v19 + v25));
        uint64_t v38 = v31;
        int v39 = v34;
        uint64_t v40 = v33;
        uint64_t v41 = v32;
        uint16x8_t v42 = vmaxq_u16(*(uint16x8_t *)(v18 + v25 + 16), *(uint16x8_t *)(v19 + v25 + 16));
        int v43 = (uint16x8_t *)(v22 + v25);
        v26 += 16;
        v25 += 32;
        v31 += 0x1000000000;
        *int v43 = v37;
        v43[1] = v42;
        int8x16_t v34 = v39 + 16;
        v33 += 16;
        v32 += 16;
      }
      while (v26 <= v10);
      if ((int)v9 >= (int)v26) {
        break;
      }
      unint64_t v26 = v26;
      uint64_t result = a7;
      if ((int)v26 < a7) {
        goto LABEL_34;
      }
LABEL_17:
      a2 = v29;
      v18 += v29;
      a4 = v35;
      v19 += v35;
      a6 = v110;
      v22 += v110;
      int v8 = v27 - 1;
      ++v17;
      v20 += v29;
      unint64_t v21 = (unsigned __int16 *)((char *)v21 + a4);
      uint64_t v23 = (_WORD *)((char *)v23 + v110);
      if (!v27) {
        return result;
      }
    }
    uint64_t v44 = 0;
    do
    {
      unsigned int v46 = *v39;
      v39 += 4;
      unsigned int v45 = v46;
      unsigned int v48 = *v40;
      v40 += 4;
      __int16 v47 = v48;
      if (v45 <= v48) {
        LOWORD(v45) = v47;
      }
      uint64_t v49 = v38 >> 31;
      uint64_t v50 = (v38 >> 31) | 2;
      unsigned int v51 = *(unsigned __int16 *)(v19 + v50);
      if (*(unsigned __int16 *)(v18 + v50) > v51) {
        LOWORD(v51) = *(_WORD *)(v18 + v50);
      }
      _WORD *v41 = v45;
      v41 += 4;
      *(_WORD *)(v22 + v50) = v51;
      uint64_t v52 = v49 | 4;
      unsigned int v53 = *(unsigned __int16 *)(v18 + (v49 | 4));
      if (v53 <= *(unsigned __int16 *)(v19 + (v49 | 4))) {
        LOWORD(v53) = *(_WORD *)(v19 + (v49 | 4));
      }
      uint64_t v54 = v49 | 6;
      unsigned int v55 = *(unsigned __int16 *)(v18 + v54);
      if (v55 <= *(unsigned __int16 *)(v19 + v54)) {
        LOWORD(v55) = *(_WORD *)(v19 + v54);
      }
      *(_WORD *)(v22 + v52) = v53;
      *(_WORD *)(v22 + v54) = v55;
      v38 += 0x400000000;
      v44 += 4;
    }
    while (v26 + v44 <= v9);
    unint64_t v26 = (v26 + v44);
    uint64_t result = a7;
    if ((int)v26 >= a7) {
      goto LABEL_17;
    }
LABEL_34:
    uint64_t result = v24 - v26;
    if (v24 - v26 < 0x10) {
      goto LABEL_90;
    }
    uint64_t v56 = 2 * v26;
    unint64_t v57 = v28 + 2 * v26;
    if (v57 - (v30 + 2 * v26) < 0x20) {
      goto LABEL_90;
    }
    if (v57 - (v36 + v56) < 0x20) {
      goto LABEL_90;
    }
    v26 += result & 0xFFFFFFFFFFFFFFF0;
    unint64_t v58 = result & 0xFFFFFFFFFFFFFFF0;
    do
    {
      uint16x8_t v59 = vmaxq_u16(*(uint16x8_t *)(v18 + v56 + 16), *(uint16x8_t *)(v19 + v56 + 16));
      unint64_t v60 = (uint16x8_t *)(v22 + v56);
      *unint64_t v60 = vmaxq_u16(*(uint16x8_t *)(v18 + v56), *(uint16x8_t *)(v19 + v56));
      v60[1] = v59;
      v56 += 32;
      v58 -= 16;
    }
    while (v58);
    if (result != (result & 0xFFFFFFFFFFFFFFF0))
    {
LABEL_90:
      do
      {
        uint64_t result = 2 * v26;
        unsigned int v61 = *(unsigned __int16 *)(v18 + 2 * v26);
        if (v61 <= *(unsigned __int16 *)(v19 + 2 * v26)) {
          LOWORD(v61) = *(_WORD *)(v19 + 2 * v26);
        }
        *(_WORD *)(v22 + 2 * v26++) = v61;
      }
      while (v24 != v26);
    }
    goto LABEL_17;
  }
  if (a7 >= 4)
  {
    uint64_t v62 = 0;
    unint64_t v63 = a7;
    unint64_t v109 = a5 + 8;
    unint64_t v108 = result + 8;
    unint64_t v105 = a3 + 8;
    unint64_t v64 = (v9 & 0xFFFFFFFC) + 5;
    if (v64 <= a7) {
      unint64_t v64 = a7;
    }
    unint64_t v65 = v64 - (v9 & 0xFFFFFFFC) - 4;
    uint64_t v66 = ((2 * (a7 - 4)) & 0x1FFFFFFF8) + 8;
    uint64_t v107 = (v9 >> 2) + 1;
    unint64_t v106 = v65 & 0xFFFFFFFFFFFFFFF0;
    while (1)
    {
      int v67 = v8;
      uint64_t v68 = v62 * a6;
      uint64_t v69 = v62 * a2;
      uint64_t v70 = v62 * a4;
      if (v9 >= 0x1C)
      {
        unint64_t v71 = 0;
        unint64_t v74 = v111 + v66 + v68;
        BOOL v76 = a5 < v112 + v66 + v70 && a3 < v74;
        uint64_t v73 = 4;
        if (result >= v74 || a5 >= v113 + v66 + v69)
        {
          unint64_t v72 = 0;
          if (!v76)
          {
            uint64_t v78 = 0;
            uint64_t v79 = v107 & 0x7FFFFFF8;
            do
            {
              uint16x8_t v80 = vmaxq_u16(*(uint16x8_t *)(result + v78 + 16), *(uint16x8_t *)(a3 + v78 + 16));
              uint16x8_t v81 = vmaxq_u16(*(uint16x8_t *)(result + v78), *(uint16x8_t *)(a3 + v78));
              uint16x8_t v82 = vmaxq_u16(*(uint16x8_t *)(result + v78 + 48), *(uint16x8_t *)(a3 + v78 + 48));
              int v83 = (uint16x8_t *)(a5 + v78);
              v83[2] = vmaxq_u16(*(uint16x8_t *)(result + v78 + 32), *(uint16x8_t *)(a3 + v78 + 32));
              _OWORD v83[3] = v82;
              *int v83 = v81;
              v83[1] = v80;
              v78 += 64;
              v79 -= 8;
            }
            while (v79);
            unint64_t v71 = v107 & 0x7FFFFFF8;
            unint64_t v84 = v71 - 1;
            uint64_t v73 = (32 * ((v71 >> 3) & 0xFFFFFFF)) | 4;
            unint64_t v72 = 4 * v71;
            unint64_t v85 = v72;
            if (v107 == v71) {
              goto LABEL_75;
            }
          }
        }
        else
        {
          unint64_t v72 = 0;
        }
      }
      else
      {
        unint64_t v71 = 0;
        unint64_t v72 = 0;
        uint64_t v73 = 4;
      }
      unint64_t v84 = v71 - 1;
      unint64_t v85 = v73 - 4;
      uint64_t v86 = 2 * v72;
      unint64_t v87 = result;
      unint64_t v88 = a5;
      unint64_t v89 = a3;
      do
      {
        unsigned int v90 = *(unsigned __int16 *)(v89 + v86);
        if (*(unsigned __int16 *)(v87 + v86) > v90) {
          LOWORD(v90) = *(_WORD *)(v87 + v86);
        }
        unint64_t v91 = v87 + v86;
        unsigned int v92 = *(unsigned __int16 *)(v87 + v86 + 2);
        unint64_t v93 = v89 + v86;
        if (v92 <= *(unsigned __int16 *)(v89 + v86 + 2)) {
          LOWORD(v92) = *(_WORD *)(v89 + v86 + 2);
        }
        *(_WORD *)(v88 + v86) = v90;
        unint64_t v94 = v88 + v86;
        *(_WORD *)(v88 + v86 + 2) = v92;
        unsigned int v95 = *(unsigned __int16 *)(v91 + 4);
        if (v95 <= *(unsigned __int16 *)(v93 + 4)) {
          LOWORD(v95) = *(_WORD *)(v93 + 4);
        }
        unsigned int v96 = *(unsigned __int16 *)(v91 + 6);
        unsigned int v97 = *(unsigned __int16 *)(v93 + 6);
        if (v96 <= v97) {
          LOWORD(v96) = v97;
        }
        v72 += 4;
        ++v84;
        v85 += 4;
        *(_WORD *)(v94 + 4) = v95;
        *(_WORD *)(v94 + 6) = v96;
        v89 += 8;
        v88 += 8;
        v87 += 8;
      }
      while (v72 <= v9);
LABEL_75:
      if ((int)v72 < a7)
      {
        if (v65 < 0x10
          || (uint64_t v100 = 8 * v84 + v109 + v68, v100 - (8 * v84 + v108 + v69) < 0x20)
          || v100 - (8 * v84 + v105 + v70) < 0x20)
        {
          unint64_t v98 = v85;
          do
          {
LABEL_78:
            unsigned int v99 = *(unsigned __int16 *)(result + 2 * v98);
            if (v99 <= *(unsigned __int16 *)(a3 + 2 * v98)) {
              LOWORD(v99) = *(_WORD *)(a3 + 2 * v98);
            }
            *(_WORD *)(a5 + 2 * v98++) = v99;
          }
          while (v98 < v63);
          goto LABEL_47;
        }
        unint64_t v101 = v65 & 0xFFFFFFFFFFFFFFF0;
        unint64_t v98 = v85 + v106;
        uint64_t v102 = 2 * v85;
        do
        {
          uint16x8_t v103 = vmaxq_u16(*(uint16x8_t *)(result + v102 + 16), *(uint16x8_t *)(a3 + v102 + 16));
          unint64_t v104 = (uint16x8_t *)(a5 + v102);
          uint16x8_t *v104 = vmaxq_u16(*(uint16x8_t *)(result + v102), *(uint16x8_t *)(a3 + v102));
          v104[1] = v103;
          v102 += 32;
          v101 -= 16;
        }
        while (v101);
        if (v65 != v106) {
          goto LABEL_78;
        }
      }
LABEL_47:
      result += a2;
      a3 += a4;
      a5 += a6;
      int v8 = v67 - 1;
      ++v62;
      if (!v67) {
        return result;
      }
    }
  }
  if (a7 >= 1)
  {
    uint8x16_t v11 = (_WORD *)(a5 + 4);
    uint64_t v12 = (_WORD *)(a3 + 4);
    int v13 = (unsigned __int16 *)(result + 2);
    do
    {
      unsigned int v14 = *(v13 - 1);
      if (v14 <= (unsigned __int16)*(v12 - 2)) {
        LOWORD(v14) = *(v12 - 2);
      }
      *(v11 - 2) = v14;
      if (a7 != 1)
      {
        unsigned int v15 = *v13;
        if (v15 <= (unsigned __int16)*(v12 - 1)) {
          LOWORD(v15) = *(v12 - 1);
        }
        *(v11 - 1) = v15;
        if (a7 != 2)
        {
          unsigned int v16 = v13[1];
          if (v16 <= (unsigned __int16)*v12) {
            LOWORD(v16) = *v12;
          }
          *uint8x16_t v11 = v16;
        }
      }
      uint8x16_t v11 = (_WORD *)((char *)v11 + a6);
      uint64_t v12 = (_WORD *)((char *)v12 + a4);
      int v13 = (unsigned __int16 *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_100219154(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v111 = a5;
  unint64_t v112 = a3;
  unint64_t v113 = result;
  if (!a8) {
    return result;
  }
  int v8 = a8 - 1;
  unint64_t v9 = (a7 - 4);
  unint64_t v10 = (a7 - 16);
  if (a7 >= 16)
  {
    uint64_t v17 = 0;
    unint64_t v19 = a3;
    unint64_t v18 = result;
    unint64_t v20 = result + 32;
    unint64_t v21 = (__int16 *)(a3 + 32);
    unint64_t v22 = a5;
    uint64_t v23 = (_WORD *)(a5 + 32);
    uint64_t v24 = a7;
    uint64_t v110 = a6;
    while (1)
    {
      uint64_t v25 = 0;
      unint64_t v26 = 0;
      int v27 = v8;
      unint64_t v28 = v111 + v17 * a6;
      uint64_t v29 = a2;
      unint64_t v30 = v113 + v17 * a2;
      uint64_t v31 = 0x1000000000;
      float64x2_t v32 = v23;
      float64x2_t v33 = v21;
      int8x16_t v34 = (__int16 *)v20;
      uint64_t v35 = a4;
      unint64_t v36 = v112 + v17 * a4;
      do
      {
        int16x8_t v37 = vmaxq_s16(*(int16x8_t *)(v18 + v25), *(int16x8_t *)(v19 + v25));
        uint64_t v38 = v31;
        int v39 = v34;
        uint64_t v40 = v33;
        uint64_t v41 = v32;
        int16x8_t v42 = vmaxq_s16(*(int16x8_t *)(v18 + v25 + 16), *(int16x8_t *)(v19 + v25 + 16));
        int v43 = (int16x8_t *)(v22 + v25);
        v26 += 16;
        v25 += 32;
        v31 += 0x1000000000;
        *int v43 = v37;
        v43[1] = v42;
        int8x16_t v34 = v39 + 16;
        v33 += 16;
        v32 += 16;
      }
      while (v26 <= v10);
      if ((int)v9 >= (int)v26) {
        break;
      }
      unint64_t v26 = v26;
      uint64_t result = a7;
      if ((int)v26 < a7) {
        goto LABEL_34;
      }
LABEL_17:
      a2 = v29;
      v18 += v29;
      a4 = v35;
      v19 += v35;
      a6 = v110;
      v22 += v110;
      int v8 = v27 - 1;
      ++v17;
      v20 += v29;
      unint64_t v21 = (__int16 *)((char *)v21 + a4);
      uint64_t v23 = (_WORD *)((char *)v23 + v110);
      if (!v27) {
        return result;
      }
    }
    uint64_t v44 = 0;
    do
    {
      int v46 = *v39;
      v39 += 4;
      int v45 = v46;
      int v48 = *v40;
      v40 += 4;
      __int16 v47 = v48;
      if (v45 <= v48) {
        LOWORD(v45) = v47;
      }
      uint64_t v49 = v38 >> 31;
      uint64_t v50 = (v38 >> 31) | 2;
      int v51 = *(__int16 *)(v19 + v50);
      if (*(__int16 *)(v18 + v50) > v51) {
        LOWORD(v51) = *(_WORD *)(v18 + v50);
      }
      _WORD *v41 = v45;
      v41 += 4;
      *(_WORD *)(v22 + v50) = v51;
      uint64_t v52 = v49 | 4;
      int v53 = *(__int16 *)(v18 + (v49 | 4));
      if (v53 <= *(__int16 *)(v19 + (v49 | 4))) {
        LOWORD(v53) = *(_WORD *)(v19 + (v49 | 4));
      }
      uint64_t v54 = v49 | 6;
      int v55 = *(__int16 *)(v18 + v54);
      if (v55 <= *(__int16 *)(v19 + v54)) {
        LOWORD(v55) = *(_WORD *)(v19 + v54);
      }
      *(_WORD *)(v22 + v52) = v53;
      *(_WORD *)(v22 + v54) = v55;
      v38 += 0x400000000;
      v44 += 4;
    }
    while (v26 + v44 <= v9);
    unint64_t v26 = (v26 + v44);
    uint64_t result = a7;
    if ((int)v26 >= a7) {
      goto LABEL_17;
    }
LABEL_34:
    uint64_t result = v24 - v26;
    if (v24 - v26 < 0x10) {
      goto LABEL_90;
    }
    uint64_t v56 = 2 * v26;
    unint64_t v57 = v28 + 2 * v26;
    if (v57 - (v30 + 2 * v26) < 0x20) {
      goto LABEL_90;
    }
    if (v57 - (v36 + v56) < 0x20) {
      goto LABEL_90;
    }
    v26 += result & 0xFFFFFFFFFFFFFFF0;
    unint64_t v58 = result & 0xFFFFFFFFFFFFFFF0;
    do
    {
      int16x8_t v59 = vmaxq_s16(*(int16x8_t *)(v18 + v56 + 16), *(int16x8_t *)(v19 + v56 + 16));
      unint64_t v60 = (int16x8_t *)(v22 + v56);
      *unint64_t v60 = vmaxq_s16(*(int16x8_t *)(v18 + v56), *(int16x8_t *)(v19 + v56));
      v60[1] = v59;
      v56 += 32;
      v58 -= 16;
    }
    while (v58);
    if (result != (result & 0xFFFFFFFFFFFFFFF0))
    {
LABEL_90:
      do
      {
        uint64_t result = 2 * v26;
        int v61 = *(__int16 *)(v18 + 2 * v26);
        if (v61 <= *(__int16 *)(v19 + 2 * v26)) {
          LOWORD(v61) = *(_WORD *)(v19 + 2 * v26);
        }
        *(_WORD *)(v22 + 2 * v26++) = v61;
      }
      while (v24 != v26);
    }
    goto LABEL_17;
  }
  if (a7 >= 4)
  {
    uint64_t v62 = 0;
    unint64_t v63 = a7;
    unint64_t v109 = a5 + 8;
    unint64_t v108 = result + 8;
    unint64_t v105 = a3 + 8;
    unint64_t v64 = (v9 & 0xFFFFFFFC) + 5;
    if (v64 <= a7) {
      unint64_t v64 = a7;
    }
    unint64_t v65 = v64 - (v9 & 0xFFFFFFFC) - 4;
    uint64_t v66 = ((2 * (a7 - 4)) & 0x1FFFFFFF8) + 8;
    uint64_t v107 = (v9 >> 2) + 1;
    unint64_t v106 = v65 & 0xFFFFFFFFFFFFFFF0;
    while (1)
    {
      int v67 = v8;
      uint64_t v68 = v62 * a6;
      uint64_t v69 = v62 * a2;
      uint64_t v70 = v62 * a4;
      if (v9 >= 0x1C)
      {
        unint64_t v71 = 0;
        unint64_t v74 = v111 + v66 + v68;
        BOOL v76 = a5 < v112 + v66 + v70 && a3 < v74;
        uint64_t v73 = 4;
        if (result >= v74 || a5 >= v113 + v66 + v69)
        {
          unint64_t v72 = 0;
          if (!v76)
          {
            uint64_t v78 = 0;
            uint64_t v79 = v107 & 0x7FFFFFF8;
            do
            {
              int16x8_t v80 = vmaxq_s16(*(int16x8_t *)(result + v78 + 16), *(int16x8_t *)(a3 + v78 + 16));
              int16x8_t v81 = vmaxq_s16(*(int16x8_t *)(result + v78), *(int16x8_t *)(a3 + v78));
              int16x8_t v82 = vmaxq_s16(*(int16x8_t *)(result + v78 + 48), *(int16x8_t *)(a3 + v78 + 48));
              int v83 = (int16x8_t *)(a5 + v78);
              v83[2] = vmaxq_s16(*(int16x8_t *)(result + v78 + 32), *(int16x8_t *)(a3 + v78 + 32));
              _OWORD v83[3] = v82;
              *int v83 = v81;
              v83[1] = v80;
              v78 += 64;
              v79 -= 8;
            }
            while (v79);
            unint64_t v71 = v107 & 0x7FFFFFF8;
            unint64_t v84 = v71 - 1;
            uint64_t v73 = (32 * ((v71 >> 3) & 0xFFFFFFF)) | 4;
            unint64_t v72 = 4 * v71;
            unint64_t v85 = v72;
            if (v107 == v71) {
              goto LABEL_75;
            }
          }
        }
        else
        {
          unint64_t v72 = 0;
        }
      }
      else
      {
        unint64_t v71 = 0;
        unint64_t v72 = 0;
        uint64_t v73 = 4;
      }
      unint64_t v84 = v71 - 1;
      unint64_t v85 = v73 - 4;
      uint64_t v86 = 2 * v72;
      unint64_t v87 = result;
      unint64_t v88 = a5;
      unint64_t v89 = a3;
      do
      {
        int v90 = *(__int16 *)(v89 + v86);
        if (*(__int16 *)(v87 + v86) > v90) {
          LOWORD(v90) = *(_WORD *)(v87 + v86);
        }
        unint64_t v91 = v87 + v86;
        int v92 = *(__int16 *)(v87 + v86 + 2);
        unint64_t v93 = v89 + v86;
        if (v92 <= *(__int16 *)(v89 + v86 + 2)) {
          LOWORD(v92) = *(_WORD *)(v89 + v86 + 2);
        }
        *(_WORD *)(v88 + v86) = v90;
        unint64_t v94 = v88 + v86;
        *(_WORD *)(v88 + v86 + 2) = v92;
        int v95 = *(__int16 *)(v91 + 4);
        if (v95 <= *(__int16 *)(v93 + 4)) {
          LOWORD(v95) = *(_WORD *)(v93 + 4);
        }
        int v96 = *(__int16 *)(v91 + 6);
        int v97 = *(__int16 *)(v93 + 6);
        if (v96 <= v97) {
          LOWORD(v96) = v97;
        }
        v72 += 4;
        ++v84;
        v85 += 4;
        *(_WORD *)(v94 + 4) = v95;
        *(_WORD *)(v94 + 6) = v96;
        v89 += 8;
        v88 += 8;
        v87 += 8;
      }
      while (v72 <= v9);
LABEL_75:
      if ((int)v72 < a7)
      {
        if (v65 < 0x10
          || (uint64_t v100 = 8 * v84 + v109 + v68, v100 - (8 * v84 + v108 + v69) < 0x20)
          || v100 - (8 * v84 + v105 + v70) < 0x20)
        {
          unint64_t v98 = v85;
          do
          {
LABEL_78:
            int v99 = *(__int16 *)(result + 2 * v98);
            if (v99 <= *(__int16 *)(a3 + 2 * v98)) {
              LOWORD(v99) = *(_WORD *)(a3 + 2 * v98);
            }
            *(_WORD *)(a5 + 2 * v98++) = v99;
          }
          while (v98 < v63);
          goto LABEL_47;
        }
        unint64_t v101 = v65 & 0xFFFFFFFFFFFFFFF0;
        unint64_t v98 = v85 + v106;
        uint64_t v102 = 2 * v85;
        do
        {
          int16x8_t v103 = vmaxq_s16(*(int16x8_t *)(result + v102 + 16), *(int16x8_t *)(a3 + v102 + 16));
          unint64_t v104 = (int16x8_t *)(a5 + v102);
          int16x8_t *v104 = vmaxq_s16(*(int16x8_t *)(result + v102), *(int16x8_t *)(a3 + v102));
          v104[1] = v103;
          v102 += 32;
          v101 -= 16;
        }
        while (v101);
        if (v65 != v106) {
          goto LABEL_78;
        }
      }
LABEL_47:
      result += a2;
      a3 += a4;
      a5 += a6;
      int v8 = v67 - 1;
      ++v62;
      if (!v67) {
        return result;
      }
    }
  }
  if (a7 >= 1)
  {
    uint8x16_t v11 = (_WORD *)(a5 + 4);
    uint64_t v12 = (__int16 *)(a3 + 4);
    int v13 = (__int16 *)(result + 2);
    do
    {
      int v14 = *(v13 - 1);
      if (v14 <= *(v12 - 2)) {
        LOWORD(v14) = *(v12 - 2);
      }
      *(v11 - 2) = v14;
      if (a7 != 1)
      {
        int v15 = *v13;
        if (v15 <= *(v12 - 1)) {
          LOWORD(v15) = *(v12 - 1);
        }
        *(v11 - 1) = v15;
        if (a7 != 2)
        {
          int v16 = v13[1];
          if (v16 <= *v12) {
            LOWORD(v16) = *v12;
          }
          *uint8x16_t v11 = v16;
        }
      }
      uint8x16_t v11 = (_WORD *)((char *)v11 + a6);
      uint64_t v12 = (__int16 *)((char *)v12 + a4);
      int v13 = (__int16 *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_100219738(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v100 = a5;
  unint64_t v101 = a3;
  if (!a8) {
    return result;
  }
  int v8 = a8 - 1;
  unint64_t v9 = (a7 - 4);
  if (a7 >= 8)
  {
    uint64_t v16 = 0;
    unint64_t v18 = a5;
    unint64_t v17 = a3;
    unint64_t v19 = (_DWORD *)(a5 + 32);
    unint64_t v20 = (int *)(a3 + 32);
    unint64_t v21 = (int *)(result + 32);
    unint64_t v22 = result;
    while (1)
    {
      uint64_t v23 = 0;
      unint64_t v24 = 0;
      int v25 = v8;
      unint64_t v26 = v21;
      int v27 = v20;
      unint64_t v28 = v19;
      do
      {
        int32x4_t v29 = vmaxq_s32(*(int32x4_t *)(v22 + v23), *(int32x4_t *)(v17 + v23));
        unint64_t v30 = v28;
        uint64_t v31 = v27;
        float64x2_t v32 = v26;
        int32x4_t v33 = vmaxq_s32(*(int32x4_t *)(v22 + v23 + 16), *(int32x4_t *)(v17 + v23 + 16));
        int8x16_t v34 = (int32x4_t *)(v18 + v23);
        v24 += 8;
        v23 += 32;
        *int8x16_t v34 = v29;
        v34[1] = v33;
        unint64_t v28 = v30 + 8;
        v27 += 8;
        v26 += 8;
      }
      while (v24 <= (a7 - 8));
      if ((int)v9 >= (int)v24) {
        break;
      }
      unint64_t v24 = v24;
      if ((int)v24 < a7) {
        goto LABEL_30;
      }
LABEL_17:
      v22 += a2;
      v17 += a4;
      v18 += a6;
      int v8 = v25 - 1;
      ++v16;
      unint64_t v19 = (_DWORD *)((char *)v19 + a6);
      unint64_t v20 = (int *)((char *)v20 + a4);
      unint64_t v21 = (int *)((char *)v21 + a2);
      if (!v25) {
        return result;
      }
    }
    uint64_t v35 = 0;
    do
    {
      int v37 = *v32;
      v32 += 4;
      int v36 = v37;
      int v39 = *v31;
      v31 += 4;
      int v38 = v39;
      if (v36 <= v39) {
        int v36 = v38;
      }
      unint64_t v40 = (unint64_t)((v24 + v35) & 0xFFFFFFFC) >> 2;
      uint64_t v41 = (16 * (v40 & 0x3FFFFFFF)) | 4;
      int v42 = *(_DWORD *)(v22 + v41);
      if (v42 <= *(_DWORD *)(v17 + v41)) {
        int v42 = *(_DWORD *)(v17 + v41);
      }
      *unint64_t v30 = v36;
      v30 += 4;
      *(_DWORD *)(v18 + v41) = v42;
      *(int32x2_t *)(v18 + ((16 * (v40 & 0x3FFFFFFF)) | 8)) = vmax_s32(*(int32x2_t *)(v22 + ((16 * (v40 & 0x3FFFFFFF)) | 8)), *(int32x2_t *)(v17 + ((16 * (v40 & 0x3FFFFFFF)) | 8)));
      v35 += 4;
    }
    while (v24 + v35 <= v9);
    unint64_t v24 = (v24 + v35);
    if ((int)v24 >= a7) {
      goto LABEL_17;
    }
LABEL_30:
    unint64_t v43 = a7 - v24;
    if (v43 < 0xC) {
      goto LABEL_86;
    }
    uint64_t v44 = 4 * v24;
    uint64_t v45 = v100 + v16 * a6 + 4 * v24;
    if (v45 - (result + v16 * a2 + 4 * v24) < 0x20) {
      goto LABEL_86;
    }
    if (v45 - (v101 + v16 * a4 + v44) < 0x20) {
      goto LABEL_86;
    }
    v24 += v43 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v46 = v43 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      int32x4_t v47 = vmaxq_s32(*(int32x4_t *)(v22 + v44 + 16), *(int32x4_t *)(v17 + v44 + 16));
      int v48 = (int32x4_t *)(v18 + v44);
      int32x4_t *v48 = vmaxq_s32(*(int32x4_t *)(v22 + v44), *(int32x4_t *)(v17 + v44));
      v48[1] = v47;
      v44 += 32;
      v46 -= 8;
    }
    while (v46);
    if (v43 != (v43 & 0xFFFFFFFFFFFFFFF8))
    {
LABEL_86:
      do
      {
        int v49 = *(_DWORD *)(v22 + 4 * v24);
        if (v49 <= *(_DWORD *)(v17 + 4 * v24)) {
          int v49 = *(_DWORD *)(v17 + 4 * v24);
        }
        *(_DWORD *)(v18 + 4 * v24++) = v49;
      }
      while (a7 != v24);
    }
    goto LABEL_17;
  }
  if (a7 >= 4)
  {
    uint64_t v50 = 0;
    unint64_t v98 = a5 + 16;
    unint64_t v97 = result + 16;
    unint64_t v94 = a3 + 16;
    unint64_t v51 = (v9 & 0xFFFFFFFC) + 5;
    if (v51 <= a7) {
      unint64_t v51 = a7;
    }
    uint64_t v52 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
    uint64_t v96 = (v9 >> 2) + 1;
    unint64_t v99 = v51 - (v9 & 0xFFFFFFFC) - 4;
    unint64_t v95 = v99 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v53 = result;
    unint64_t v54 = result;
    while (1)
    {
      int v55 = v8;
      uint64_t v56 = v50 * a6;
      uint64_t v57 = v50 * a2;
      uint64_t v58 = v50 * a4;
      if (v9 >= 0xC)
      {
        unint64_t v59 = 0;
        unint64_t v62 = v100 + v52 + v56;
        BOOL v64 = a5 < v101 + v52 + v58 && a3 < v62;
        if (v53 >= v62 || a5 >= result + v52 + v57)
        {
          uint64_t v61 = 4;
          unint64_t v60 = 0;
          if (!v64)
          {
            uint64_t v66 = 0;
            uint64_t v67 = v96 & 0x7FFFFFFC;
            do
            {
              int32x4_t v68 = vmaxq_s32(*(int32x4_t *)(v53 + v66 + 16), *(int32x4_t *)(a3 + v66 + 16));
              int32x4_t v69 = vmaxq_s32(*(int32x4_t *)(v53 + v66), *(int32x4_t *)(a3 + v66));
              int32x4_t v70 = vmaxq_s32(*(int32x4_t *)(v53 + v66 + 48), *(int32x4_t *)(a3 + v66 + 48));
              unint64_t v71 = (int32x4_t *)(a5 + v66);
              _OWORD v71[2] = vmaxq_s32(*(int32x4_t *)(v53 + v66 + 32), *(int32x4_t *)(a3 + v66 + 32));
              v71[3] = v70;
              int32x4_t *v71 = v69;
              v71[1] = v68;
              v66 += 64;
              v67 -= 4;
            }
            while (v67);
            unint64_t v59 = v96 & 0x7FFFFFFC;
            uint64_t v61 = (16 * ((v59 >> 2) & 0x1FFFFFFF)) | 4;
            uint64_t v72 = 4 * v59;
            unint64_t v60 = v72;
            unint64_t v73 = v59 - 1;
            if (v96 == v59) {
              goto LABEL_71;
            }
          }
        }
        else
        {
          uint64_t v61 = 4;
          unint64_t v60 = 0;
        }
      }
      else
      {
        unint64_t v59 = 0;
        unint64_t v60 = 0;
        uint64_t v61 = 4;
      }
      unint64_t v73 = v59 - 1;
      uint64_t v72 = v61 - 4;
      uint64_t v74 = 4 * v60;
      unint64_t v75 = a3;
      unint64_t v76 = v53;
      unint64_t v77 = a5;
      do
      {
        int v78 = *(_DWORD *)(v76 + v74);
        if (v78 <= *(_DWORD *)(v75 + v74)) {
          int v78 = *(_DWORD *)(v75 + v74);
        }
        unint64_t v79 = v76 + v74;
        unint64_t v80 = v75 + v74;
        int v81 = *(_DWORD *)(v75 + v74 + 4);
        if (*(_DWORD *)(v76 + v74 + 4) > v81) {
          int v81 = *(_DWORD *)(v76 + v74 + 4);
        }
        *(_DWORD *)(v77 + v74) = v78;
        unint64_t v82 = v77 + v74;
        *(_DWORD *)(v77 + v74 + 4) = v81;
        int v83 = *(_DWORD *)(v79 + 8);
        int v84 = *(_DWORD *)(v79 + 12);
        int v85 = *(_DWORD *)(v80 + 8);
        int v86 = *(_DWORD *)(v80 + 12);
        if (v83 <= v85) {
          int v83 = v85;
        }
        if (v84 <= v86) {
          int v84 = v86;
        }
        v60 += 4;
        ++v73;
        v72 += 4;
        *(_DWORD *)(v82 + 8) = v83;
        *(_DWORD *)(v82 + 12) = v84;
        v77 += 16;
        v76 += 16;
        v75 += 16;
      }
      while (v60 <= v9);
LABEL_71:
      if ((int)v60 < a7)
      {
        if (v99 < 0xC
          || (uint64_t v89 = 16 * v73 + v98 + v56, v89 - (16 * v73 + v97 + v57) < 0x20)
          || v89 - (16 * v73 + v94 + v58) < 0x20)
        {
          unint64_t v87 = v72;
          do
          {
LABEL_74:
            int v88 = *(_DWORD *)(v53 + 4 * v87);
            if (v88 <= *(_DWORD *)(a3 + 4 * v87)) {
              int v88 = *(_DWORD *)(a3 + 4 * v87);
            }
            *(_DWORD *)(a5 + 4 * v87++) = v88;
          }
          while (v87 < a7);
          goto LABEL_43;
        }
        unint64_t v90 = v99 & 0xFFFFFFFFFFFFFFF8;
        unint64_t v87 = v72 + v95;
        uint64_t v91 = 4 * v72;
        do
        {
          int32x4_t v92 = vmaxq_s32(*(int32x4_t *)(v53 + v91 + 16), *(int32x4_t *)(a3 + v91 + 16));
          unint64_t v93 = (int32x4_t *)(a5 + v91);
          *unint64_t v93 = vmaxq_s32(*(int32x4_t *)(v53 + v91), *(int32x4_t *)(a3 + v91));
          v93[1] = v92;
          v91 += 32;
          v90 -= 8;
        }
        while (v90);
        if (v99 != v95) {
          goto LABEL_74;
        }
      }
LABEL_43:
      v53 += a2;
      a3 += a4;
      a5 += a6;
      int v8 = v55 - 1;
      ++v50;
      uint64_t result = v54;
      if (!v55) {
        return result;
      }
    }
  }
  if (a7 >= 1)
  {
    unint64_t v10 = (_DWORD *)(a5 + 8);
    uint8x16_t v11 = (int *)(a3 + 8);
    uint64_t v12 = (int *)(result + 4);
    do
    {
      int v13 = *(v12 - 1);
      if (v13 <= *(v11 - 2)) {
        int v13 = *(v11 - 2);
      }
      *(v10 - 2) = v13;
      if (a7 != 1)
      {
        int v14 = *v12;
        if (*v12 <= *(v11 - 1)) {
          int v14 = *(v11 - 1);
        }
        *(v10 - 1) = v14;
        if (a7 != 2)
        {
          int v15 = v12[1];
          if (v15 <= *v11) {
            int v15 = *v11;
          }
          _DWORD *v10 = v15;
        }
      }
      unint64_t v10 = (_DWORD *)((char *)v10 + a6);
      uint8x16_t v11 = (int *)((char *)v11 + a4);
      uint64_t v12 = (int *)((char *)v12 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_100219CD4(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  if (!a8) {
    return result;
  }
  unint64_t v8 = a5;
  int v9 = a8 - 1;
  unint64_t v10 = (a7 - 4);
  if (a7 >= 8)
  {
    uint64_t v17 = 0;
    unint64_t v18 = (float *)(a5 + 32);
    unint64_t v19 = (float *)(a3 + 32);
    unint64_t v20 = (float *)(result + 32);
    unint64_t v21 = result;
    unint64_t v22 = a3;
    unint64_t v23 = a5;
    while (1)
    {
      uint64_t v24 = 0;
      unint64_t v25 = 0;
      int v26 = v9;
      int v27 = v20;
      unint64_t v28 = v19;
      int32x4_t v29 = v18;
      do
      {
        float32x4_t v30 = vmaxq_f32(*(float32x4_t *)(v21 + v24), *(float32x4_t *)(v22 + v24));
        uint64_t v31 = v29;
        float64x2_t v32 = v28;
        int32x4_t v33 = v27;
        float32x4_t v34 = vmaxq_f32(*(float32x4_t *)(v21 + v24 + 16), *(float32x4_t *)(v22 + v24 + 16));
        uint64_t v35 = (float32x4_t *)(v23 + v24);
        v25 += 8;
        v24 += 32;
        *uint64_t v35 = v30;
        v35[1] = v34;
        v29 += 8;
        unint64_t v28 = v32 + 8;
        v27 += 8;
      }
      while (v25 <= (a7 - 8));
      if ((int)v10 >= (int)v25) {
        break;
      }
      unint64_t v25 = v25;
      if ((int)v25 < a7) {
        goto LABEL_30;
      }
LABEL_17:
      v21 += a2;
      v22 += a4;
      v23 += a6;
      int v9 = v26 - 1;
      ++v17;
      unint64_t v18 = (float *)((char *)v18 + a6);
      unint64_t v19 = (float *)((char *)v19 + a4);
      unint64_t v20 = (float *)((char *)v20 + a2);
      if (!v26) {
        return result;
      }
    }
    uint64_t v36 = 0;
    do
    {
      float v37 = *v33;
      v33 += 4;
      float v38 = v37;
      float v39 = *v32;
      v32 += 4;
      float v40 = v39;
      if (v38 < v39) {
        float v38 = v40;
      }
      unint64_t v41 = (unint64_t)((v25 + v36) & 0xFFFFFFFC) >> 2;
      uint64_t v42 = (16 * (v41 & 0x3FFFFFFF)) | 4;
      float v43 = *(float *)(v21 + v42);
      if (v43 < *(float *)(v22 + v42)) {
        float v43 = *(float *)(v22 + v42);
      }
      *uint64_t v31 = v38;
      v31 += 4;
      *(float *)(v23 + v42) = v43;
      uint64_t v44 = (16 * (v41 & 0x3FFFFFFF)) | 8;
      *(int8x8_t *)(v23 + v44) = vbsl_s8((int8x8_t)vcgt_f32(*(float32x2_t *)(v22 + v44), *(float32x2_t *)(v21 + v44)), *(int8x8_t *)(v22 + v44), *(int8x8_t *)(v21 + v44));
      v36 += 4;
    }
    while (v25 + v36 <= v10);
    unint64_t v25 = (v25 + v36);
    if ((int)v25 >= a7) {
      goto LABEL_17;
    }
LABEL_30:
    unint64_t v45 = a7 - v25;
    if (v45 < 0xC) {
      goto LABEL_86;
    }
    uint64_t v46 = 4 * v25;
    uint64_t v47 = v8 + v17 * a6 + 4 * v25;
    if (v47 - (result + v17 * a2 + 4 * v25) < 0x20) {
      goto LABEL_86;
    }
    if (v47 - (a3 + v17 * a4 + v46) < 0x20) {
      goto LABEL_86;
    }
    v25 += v45 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v48 = v45 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      int8x16_t v49 = vbslq_s8((int8x16_t)vcgtq_f32(*(float32x4_t *)(v22 + v46 + 16), *(float32x4_t *)(v21 + v46 + 16)), *(int8x16_t *)(v22 + v46 + 16), *(int8x16_t *)(v21 + v46 + 16));
      uint64_t v50 = (int8x16_t *)(v23 + v46);
      *uint64_t v50 = vbslq_s8((int8x16_t)vcgtq_f32(*(float32x4_t *)(v22 + v46), *(float32x4_t *)(v21 + v46)), *(int8x16_t *)(v22 + v46), *(int8x16_t *)(v21 + v46));
      v50[1] = v49;
      v46 += 32;
      v48 -= 8;
    }
    while (v48);
    if (v45 != (v45 & 0xFFFFFFFFFFFFFFF8))
    {
LABEL_86:
      do
      {
        float v51 = *(float *)(v21 + 4 * v25);
        if (v51 < *(float *)(v22 + 4 * v25)) {
          float v51 = *(float *)(v22 + 4 * v25);
        }
        *(float *)(v23 + 4 * v25++) = v51;
      }
      while (a7 != v25);
    }
    goto LABEL_17;
  }
  if (a7 >= 4)
  {
    uint64_t v52 = 0;
    unint64_t v99 = a5 + 16;
    unint64_t v98 = result + 16;
    unint64_t v95 = a3 + 16;
    unint64_t v53 = (v10 & 0xFFFFFFFC) + 5;
    if (v53 <= a7) {
      unint64_t v53 = a7;
    }
    uint64_t v54 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
    uint64_t v97 = (v10 >> 2) + 1;
    unint64_t v100 = v53 - (v10 & 0xFFFFFFFC) - 4;
    unint64_t v96 = v100 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v55 = result;
    unint64_t v56 = a3;
    unint64_t v101 = result;
    unint64_t v57 = a3;
    unint64_t v58 = a5;
    while (1)
    {
      int v59 = v9;
      uint64_t v60 = v52 * a6;
      uint64_t v61 = v52 * a2;
      uint64_t v62 = v52 * a4;
      if (v10 >= 0xC)
      {
        unint64_t v63 = 0;
        unint64_t v66 = v8 + v54 + v60;
        BOOL v68 = a5 < a3 + v54 + v62 && v56 < v66;
        if (v55 >= v66 || a5 >= result + v54 + v61)
        {
          uint64_t v65 = 4;
          unint64_t v64 = 0;
          if (!v68)
          {
            uint64_t v70 = 0;
            uint64_t v71 = v97 & 0x7FFFFFFC;
            do
            {
              uint64_t v72 = (const float *)(v55 + v70);
              float32x4x4_t v102 = vld4q_f32(v72);
              unint64_t v73 = (const float *)(v56 + v70);
              float32x4x4_t v103 = vld4q_f32(v73);
              v104.val[0] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v103.val[0], v102.val[0]), (int8x16_t)v103.val[0], (int8x16_t)v102.val[0]);
              v104.val[1] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v103.val[1], v102.val[1]), (int8x16_t)v103.val[1], (int8x16_t)v102.val[1]);
              v104.val[2] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v103.val[2], v102.val[2]), (int8x16_t)v103.val[2], (int8x16_t)v102.val[2]);
              v104.val[3] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v103.val[3], v102.val[3]), (int8x16_t)v103.val[3], (int8x16_t)v102.val[3]);
              uint64_t v74 = (float *)(a5 + v70);
              vst4q_f32(v74, v104);
              v70 += 64;
              v71 -= 4;
            }
            while (v71);
            unint64_t v63 = v97 & 0x7FFFFFFC;
            uint64_t v65 = (16 * ((v63 >> 2) & 0x1FFFFFFF)) | 4;
            uint64_t v75 = 4 * v63;
            unint64_t v64 = v75;
            unint64_t v76 = v63 - 1;
            if (v97 == v63) {
              goto LABEL_71;
            }
          }
        }
        else
        {
          uint64_t v65 = 4;
          unint64_t v64 = 0;
        }
      }
      else
      {
        unint64_t v63 = 0;
        unint64_t v64 = 0;
        uint64_t v65 = 4;
      }
      unint64_t v76 = v63 - 1;
      uint64_t v75 = v65 - 4;
      uint64_t v77 = 4 * v64;
      unint64_t v78 = v56;
      unint64_t v79 = v55;
      unint64_t v80 = a5;
      do
      {
        float v81 = *(float *)(v79 + v77);
        if (v81 < *(float *)(v78 + v77)) {
          float v81 = *(float *)(v78 + v77);
        }
        unint64_t v82 = v79 + v77;
        float v83 = *(float *)(v79 + v77 + 4);
        unint64_t v84 = v78 + v77;
        if (v83 < *(float *)(v78 + v77 + 4)) {
          float v83 = *(float *)(v78 + v77 + 4);
        }
        *(float *)(v80 + v77) = v81;
        unint64_t v85 = v80 + v77;
        *(float *)(v80 + v77 + 4) = v83;
        float v86 = *(float *)(v82 + 8);
        float v87 = *(float *)(v82 + 12);
        if (v86 < *(float *)(v84 + 8)) {
          float v86 = *(float *)(v84 + 8);
        }
        if (v87 < *(float *)(v84 + 12)) {
          float v87 = *(float *)(v84 + 12);
        }
        v64 += 4;
        ++v76;
        v75 += 4;
        *(float *)(v85 + 8) = v86;
        *(float *)(v85 + 12) = v87;
        v80 += 16;
        v79 += 16;
        v78 += 16;
      }
      while (v64 <= v10);
LABEL_71:
      if ((int)v64 < a7)
      {
        if (v100 < 0xC
          || (uint64_t v90 = 16 * v76 + v99 + v60, v90 - (16 * v76 + v98 + v61) < 0x20)
          || v90 - (16 * v76 + v95 + v62) < 0x20)
        {
          unint64_t v88 = v75;
          do
          {
LABEL_74:
            float v89 = *(float *)(v55 + 4 * v88);
            if (v89 < *(float *)(v56 + 4 * v88)) {
              float v89 = *(float *)(v56 + 4 * v88);
            }
            *(float *)(a5 + 4 * v88++) = v89;
          }
          while (v88 < a7);
          goto LABEL_43;
        }
        unint64_t v91 = v100 & 0xFFFFFFFFFFFFFFF8;
        unint64_t v88 = v75 + v96;
        uint64_t v92 = 4 * v75;
        do
        {
          int8x16_t v93 = vbslq_s8((int8x16_t)vcgtq_f32(*(float32x4_t *)(v56 + v92 + 16), *(float32x4_t *)(v55 + v92 + 16)), *(int8x16_t *)(v56 + v92 + 16), *(int8x16_t *)(v55 + v92 + 16));
          unint64_t v94 = (int8x16_t *)(a5 + v92);
          *unint64_t v94 = vbslq_s8((int8x16_t)vcgtq_f32(*(float32x4_t *)(v56 + v92), *(float32x4_t *)(v55 + v92)), *(int8x16_t *)(v56 + v92), *(int8x16_t *)(v55 + v92));
          v94[1] = v93;
          v92 += 32;
          v91 -= 8;
        }
        while (v91);
        if (v100 != v96) {
          goto LABEL_74;
        }
      }
LABEL_43:
      v55 += a2;
      v56 += a4;
      a5 += a6;
      int v9 = v59 - 1;
      ++v52;
      uint64_t result = v101;
      a3 = v57;
      unint64_t v8 = v58;
      if (!v59) {
        return result;
      }
    }
  }
  if (a7 >= 1)
  {
    uint8x16_t v11 = (float *)(a5 + 8);
    uint64_t v12 = (float *)(a3 + 8);
    int v13 = (float *)(result + 4);
    do
    {
      float v14 = *(v13 - 1);
      if (v14 < *(v12 - 2)) {
        float v14 = *(v12 - 2);
      }
      *(v11 - 2) = v14;
      if (a7 != 1)
      {
        float v15 = *v13;
        if (*v13 < *(v12 - 1)) {
          float v15 = *(v12 - 1);
        }
        *(v11 - 1) = v15;
        if (a7 != 2)
        {
          float v16 = v13[1];
          if (v16 < *v12) {
            float v16 = *v12;
          }
          *uint8x16_t v11 = v16;
        }
      }
      uint8x16_t v11 = (float *)((char *)v11 + a6);
      uint64_t v12 = (float *)((char *)v12 + a4);
      int v13 = (float *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_10021A29C(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  if (!a8) {
    return result;
  }
  unint64_t v8 = a3;
  unint64_t v9 = result;
  unint64_t v10 = (a7 - 4);
  if (a7 >= 4)
  {
    uint64_t v17 = 0;
    int v18 = a8 - 1;
    uint64_t v19 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
    uint64_t v61 = v19 + a5 + 32;
    uint64_t v60 = v19 + result + 32;
    uint64_t v58 = v19 + a3 + 32;
    unint64_t v20 = (v10 & 0xFFFFFFFC) + 5;
    if (v20 <= a7) {
      unint64_t v20 = a7;
    }
    uint64_t v21 = 32 * (v10 >> 2) + 32;
    uint64_t v59 = (v10 >> 2) + 1;
    unint64_t v62 = v20 - (v10 & 0xFFFFFFFC) - 4;
    unint64_t v57 = v20 & 3;
    unint64_t v22 = a5 + 16;
    unint64_t v23 = a5;
    while (1)
    {
      int v24 = v18;
      uint64_t v25 = v17 * a6;
      uint64_t v26 = v17 * a2;
      uint64_t v27 = v17 * a4;
      if (v10 < 4) {
        break;
      }
      unint64_t v28 = 0;
      unint64_t v29 = a5 + v21 + v25;
      BOOL v31 = v23 < v8 + v21 + v27 && a3 < v29;
      if (result < v29 && v23 < v9 + v21 + v26) {
        goto LABEL_36;
      }
      if (v31) {
        goto LABEL_36;
      }
      uint64_t v33 = 0;
      uint64_t v34 = v59 & 0x7FFFFFFE;
      do
      {
        uint64_t v35 = (const double *)(result + v33);
        float64x2x4_t v63 = vld4q_f64(v35);
        uint64_t v36 = (const double *)(a3 + v33);
        float64x2x4_t v64 = vld4q_f64(v36);
        v65.val[0] = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v64.val[0], v63.val[0]), (int8x16_t)v64.val[0], (int8x16_t)v63.val[0]);
        v65.val[1] = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v64.val[1], v63.val[1]), (int8x16_t)v64.val[1], (int8x16_t)v63.val[1]);
        v65.val[2] = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v64.val[2], v63.val[2]), (int8x16_t)v64.val[2], (int8x16_t)v63.val[2]);
        v65.val[3] = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v64.val[3], v63.val[3]), (int8x16_t)v64.val[3], (int8x16_t)v63.val[3]);
        float v37 = (double *)(v23 + v33);
        vst4q_f64(v37, v65);
        v33 += 64;
        v34 -= 2;
      }
      while (v34);
      unint64_t v28 = 4 * (v59 & 0x7FFFFFFE);
      if (v59 != (v59 & 0x7FFFFFFE)) {
        goto LABEL_36;
      }
LABEL_47:
      if ((int)v28 < a7)
      {
        unint64_t v51 = (v10 & 0xFFFFFFFC) + 4;
        if (v62 < 6) {
          goto LABEL_60;
        }
        unint64_t v51 = (v10 & 0xFFFFFFFC) + 4;
        if ((unint64_t)(v61 + v25 - (v60 + v26)) < 0x20) {
          goto LABEL_60;
        }
        unint64_t v51 = (v10 & 0xFFFFFFFC) + 4;
        if ((unint64_t)(v61 + v25 - (v58 + v27)) < 0x20) {
          goto LABEL_60;
        }
        uint64_t v52 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
        unint64_t v53 = v62 - v57;
        do
        {
          int8x16_t v54 = vbslq_s8((int8x16_t)vcgtq_f64(*(float64x2_t *)(a3 + v52 + 48), *(float64x2_t *)(result + v52 + 48)), *(int8x16_t *)(a3 + v52 + 48), *(int8x16_t *)(result + v52 + 48));
          unint64_t v55 = (int8x16_t *)(v23 + v52);
          v55[2] = vbslq_s8((int8x16_t)vcgtq_f64(*(float64x2_t *)(a3 + v52 + 32), *(float64x2_t *)(result + v52 + 32)), *(int8x16_t *)(a3 + v52 + 32), *(int8x16_t *)(result + v52 + 32));
          v55[3] = v54;
          v52 += 32;
          v53 -= 4;
        }
        while (v53);
        unint64_t v51 = (v10 & 0xFFFFFFFC) + 4 + v62 - v57;
        if (v57)
        {
LABEL_60:
          do
          {
            double v56 = *(double *)(result + 8 * v51);
            if (v56 < *(double *)(a3 + 8 * v51)) {
              double v56 = *(double *)(a3 + 8 * v51);
            }
            *(double *)(v23 + 8 * v51++) = v56;
          }
          while (v51 < a7);
        }
      }
      result += a2;
      a3 += a4;
      v23 += a6;
      int v18 = v24 - 1;
      ++v17;
      v22 += a6;
      if (!v24) {
        return result;
      }
    }
    unint64_t v28 = 0;
LABEL_36:
    uint64_t v38 = 8 * v28;
    unint64_t v39 = v22;
    unint64_t v40 = a3;
    unint64_t v41 = result;
    do
    {
      double v42 = *(double *)(v41 + v38);
      if (v42 < *(double *)(v40 + v38)) {
        double v42 = *(double *)(v40 + v38);
      }
      unint64_t v43 = v41 + v38;
      double v44 = *(double *)(v41 + v38 + 8);
      unint64_t v45 = v40 + v38;
      if (v44 < *(double *)(v40 + v38 + 8)) {
        double v44 = *(double *)(v40 + v38 + 8);
      }
      unint64_t v46 = v39 + v38;
      *(double *)(v46 - 16) = v42;
      *(double *)(v46 - 8) = v44;
      double v47 = *(double *)(v43 + 16);
      double v48 = *(double *)(v43 + 24);
      double v49 = *(double *)(v45 + 24);
      if (v47 < *(double *)(v45 + 16)) {
        double v47 = *(double *)(v45 + 16);
      }
      *(double *)(v39 + v38) = v47;
      v28 += 4;
      if (v48 >= v49) {
        double v50 = v48;
      }
      else {
        double v50 = v49;
      }
      *(double *)(v46 + 8) = v50;
      v41 += 32;
      v40 += 32;
      v39 += 32;
    }
    while (v28 <= v10);
    goto LABEL_47;
  }
  if (a7 >= 1)
  {
    uint8x16_t v11 = (double *)(a5 + 16);
    uint64_t v12 = (double *)(a3 + 16);
    int v13 = (double *)(result + 8);
    do
    {
      double v14 = *(v13 - 1);
      if (v14 < *(v12 - 2)) {
        double v14 = *(v12 - 2);
      }
      *(v11 - 2) = v14;
      if (a7 != 1)
      {
        double v15 = *v13;
        if (*v13 < *(v12 - 1)) {
          double v15 = *(v12 - 1);
        }
        *(v11 - 1) = v15;
        if (a7 != 2)
        {
          double v16 = v13[1];
          if (v16 < *v12) {
            double v16 = *v12;
          }
          *uint8x16_t v11 = v16;
        }
      }
      uint8x16_t v11 = (double *)((char *)v11 + a6);
      uint64_t v12 = (double *)((char *)v12 + a4);
      int v13 = (double *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_10021A624(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  if (a8)
  {
    uint64_t v8 = a7 - 4;
    while (a7 < 32)
    {
      uint64_t v9 = 0;
      if ((int)v8 >= 0) {
        goto LABEL_10;
      }
LABEL_13:
      if ((int)v9 < a7)
      {
        do
        {
          *(unsigned char *)(a5 + v9) = *(unsigned char *)(result + v9)
                              - byte_100406966[(*(unsigned __int8 *)(result + v9) | 0x100)
                                             - *(unsigned __int8 *)(a3 + v9)];
          ++v9;
        }
        while (a7 != v9);
      }
      result += a2;
      a3 += a4;
      a5 += a6;
      if (!--a8) {
        return result;
      }
    }
    uint64_t v10 = 16;
    do
    {
      uint8x16_t v11 = vminq_u8(*(uint8x16_t *)(result + v10), *(uint8x16_t *)(a3 + v10));
      uint64_t v12 = (uint8x16_t *)(a5 + v10);
      v12[-1] = vminq_u8(*(uint8x16_t *)(result + v10 - 16), *(uint8x16_t *)(a3 + v10 - 16));
      *uint64_t v12 = v11;
      uint64_t v13 = v10 + 16;
      v10 += 32;
    }
    while (v13 <= a7 - 32);
    uint64_t v9 = (v10 - 16);
    if ((int)v9 > (int)v8) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v14 = v9 << 32;
    do
    {
      uint64_t v15 = (v14 >> 32) | 1;
      uint64_t v16 = *(unsigned __int8 *)(result + v15);
      char v17 = byte_100406966[(v16 | 0x100) - *(unsigned __int8 *)(a3 + v15)];
      *(unsigned char *)(a5 + v9) = *(unsigned char *)(result + v9)
                          - byte_100406966[(*(unsigned __int8 *)(result + v9) | 0x100) - *(unsigned __int8 *)(a3 + v9)];
      *(unsigned char *)(a5 + v15) = v16 - v17;
      uint64_t v18 = (v14 >> 32) | 3;
      uint64_t v19 = *(unsigned __int8 *)(result + v18);
      char v20 = byte_100406966[(v19 | 0x100) - *(unsigned __int8 *)(a3 + v18)];
      *(unsigned char *)(a5 + ((v14 >> 32) | 2)) = *(unsigned char *)(result + ((v14 >> 32) | 2))
                                         - byte_100406966[(*(unsigned __int8 *)(result + ((v14 >> 32) | 2)) | 0x100)
                                                        - *(unsigned __int8 *)(a3 + ((v14 >> 32) | 2))];
      *(unsigned char *)(a5 + v18) = v19 - v20;
      v9 += 4;
      v14 += 0x400000000;
    }
    while (v9 <= v8);
    uint64_t v9 = v9;
    goto LABEL_13;
  }
  return result;
}

unint64_t sub_10021A79C(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v107 = a5;
  unint64_t v109 = result;
  if (!a8) {
    return result;
  }
  uint64_t v8 = a7 - 4;
  uint64_t v9 = a7;
  if (a7 >= 32)
  {
    uint64_t v16 = 0;
    unint64_t v18 = a5;
    unint64_t v17 = a3;
    uint64_t v19 = (unsigned char *)(v107 + 32);
    char v20 = (char *)(a3 + 32);
    unint64_t v21 = result;
    unint64_t v22 = result + 32;
    while (1)
    {
      uint64_t v23 = 0;
      unint64_t v24 = v107 + v16 * a6;
      uint64_t v25 = 0x2000000000;
      uint64_t v26 = (char *)v22;
      uint64_t v27 = v20;
      unint64_t v28 = v19;
      do
      {
        int8x16_t v29 = vminq_s8(*(int8x16_t *)(v21 + v23), *(int8x16_t *)(v17 + v23));
        float32x4_t v30 = v28;
        uint64_t v31 = v25;
        float64x2_t v32 = v27;
        uint64_t v33 = v26;
        int8x16_t v34 = vminq_s8(*(int8x16_t *)(v21 + v23 + 16), *(int8x16_t *)(v17 + v23 + 16));
        uint64_t v35 = (int8x16_t *)(v18 + v23);
        v23 += 32;
        v28 += 32;
        *uint64_t v35 = v29;
        v35[1] = v34;
        v25 += 0x2000000000;
        uint64_t v27 = v32 + 32;
        v26 += 32;
      }
      while (v23 <= a7 - 32);
      if ((int)v8 >= (int)v23)
      {
        do
        {
          int v37 = *v33;
          v33 += 4;
          int v36 = v37;
          int v39 = *v32;
          v32 += 4;
          char v38 = v39;
          uint64_t v40 = v31 >> 32;
          uint64_t v41 = (v31 >> 32) | 1;
          int v42 = *(char *)(v21 + v41);
          if (v39 < v36) {
            LOBYTE(v36) = v38;
          }
          int v43 = *(char *)(v17 + v41);
          *float32x4_t v30 = v36;
          v30 += 4;
          if (v43 < v42) {
            LOBYTE(v42) = v43;
          }
          *(unsigned char *)(v18 + v41) = v42;
          uint64_t v44 = v40 | 2;
          int v45 = *(char *)(v21 + (v40 | 2));
          int v46 = *(char *)(v17 + (v40 | 2));
          uint64_t v47 = v40 | 3;
          int v48 = *(char *)(v21 + v47);
          if (v46 < v45) {
            LOBYTE(v45) = v46;
          }
          int v49 = *(char *)(v17 + v47);
          *(unsigned char *)(v18 + v44) = v45;
          if (v49 >= v48) {
            char v50 = v48;
          }
          else {
            char v50 = v49;
          }
          *(unsigned char *)(v18 + v47) = v50;
          v23 += 4;
          v31 += 0x400000000;
        }
        while (v23 <= v8);
      }
      unint64_t v51 = v23;
      uint64_t result = a7;
      if ((int)v23 >= a7) {
        goto LABEL_17;
      }
      unint64_t v52 = a7 - (unint64_t)v23;
      if (v52 < 8)
      {
        unint64_t v53 = v51;
        goto LABEL_34;
      }
      if (v24 - (v109 + v16 * a2) < 0x20)
      {
        unint64_t v53 = v51;
        goto LABEL_34;
      }
      if (v24 - (a3 + v16 * a4) < 0x20)
      {
        unint64_t v53 = v51;
        goto LABEL_34;
      }
      if (v52 >= 0x20)
      {
        unint64_t v55 = v52 & 0xFFFFFFFFFFFFFFE0;
        uint64_t result = v51;
        unint64_t v56 = v52 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          int8x16_t v57 = vminq_s8(*(int8x16_t *)(v17 + result + 16), *(int8x16_t *)(v21 + result + 16));
          uint64_t v58 = (int8x16_t *)(v18 + result);
          int8x16_t *v58 = vminq_s8(*(int8x16_t *)(v17 + result), *(int8x16_t *)(v21 + result));
          v58[1] = v57;
          result += 32;
          v56 -= 32;
        }
        while (v56);
        if (v52 == v55) {
          goto LABEL_17;
        }
        if ((v52 & 0x18) == 0)
        {
          unint64_t v53 = v55 + v51;
          do
          {
LABEL_34:
            LODWORD(result) = *(char *)(v21 + v53);
            int v54 = *(char *)(v17 + v53);
            if (v54 >= (int)result) {
              uint64_t result = result;
            }
            else {
              uint64_t result = v54;
            }
            *(unsigned char *)(v18 + v53++) = result;
          }
          while (a7 != v53);
          goto LABEL_17;
        }
      }
      else
      {
        unint64_t v55 = 0;
      }
      uint64_t result = v52 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v53 = (v52 & 0xFFFFFFFFFFFFFFF8) + v51;
      unint64_t v59 = v55 - (v52 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v60 = v55 + v51;
      do
      {
        *(int8x8_t *)(v18 + v60) = vmin_s8(*(int8x8_t *)(v17 + v60), *(int8x8_t *)(v21 + v60));
        v60 += 8;
        v59 += 8;
      }
      while (v59);
      if (v52 != result) {
        goto LABEL_34;
      }
LABEL_17:
      v21 += a2;
      v17 += a4;
      v18 += a6;
      ++v16;
      v19 += a6;
      v20 += a4;
      v22 += a2;
      if (!--a8) {
        return result;
      }
    }
  }
  if (a7 >= 4)
  {
    uint64_t v61 = 0;
    unint64_t v62 = a3;
    unint64_t v63 = a5 + 4;
    unint64_t v64 = result;
    unint64_t v106 = result + 4;
    unint64_t v105 = a3 + 4;
    if (v8 <= 3) {
      unint64_t v65 = 3;
    }
    else {
      unint64_t v65 = v8;
    }
    unint64_t v66 = v9 - (v65 & 0x7FFFFFFC) - 4;
    uint64_t v67 = (v65 & 0x7FFFFFFC) + 4;
    uint64_t v68 = (v65 >> 2) + 1;
    unint64_t v104 = v66 & 0xFFFFFFFFFFFFFFE0;
    unint64_t v103 = v66 & 0xFFFFFFFFFFFFFFF8;
    while (1)
    {
      uint64_t v69 = v61 * a6;
      uint64_t v70 = v61 * a2;
      uint64_t v71 = v61 * a4;
      if (v65 >= 0x3C)
      {
        uint64_t v72 = 0;
        unint64_t v87 = v107 + v67 + v69;
        BOOL v89 = a5 < a3 + v67 + v71 && v62 < v87;
        uint64_t v73 = 0;
        if ((v64 >= v87 || a5 >= v109 + v67 + v70) && !v89)
        {
          uint64_t v91 = 0;
          uint64_t v92 = 0;
          uint64_t v93 = v68 & 0x3FFFFFF0;
          do
          {
            int8x16_t v94 = vminq_s8(*(int8x16_t *)(v62 + v91 + 16), *(int8x16_t *)(v64 + v91 + 16));
            int8x16_t v95 = vminq_s8(*(int8x16_t *)(v62 + v91), *(int8x16_t *)(v64 + v91));
            int8x16_t v96 = vminq_s8(*(int8x16_t *)(v62 + v91 + 48), *(int8x16_t *)(v64 + v91 + 48));
            uint64_t result = a5 - 3 + ((v92 >> 32) | 3);
            *(int8x16_t *)(result + 32) = vminq_s8(*(int8x16_t *)(v62 + v91 + 32), *(int8x16_t *)(v64 + v91 + 32));
            *(int8x16_t *)(result + 48) = v96;
            *(int8x16_t *)uint64_t result = v95;
            *(int8x16_t *)(result + 16) = v94;
            v92 += 0x4000000000;
            v91 += 64;
            v93 -= 16;
          }
          while (v93);
          uint64_t v72 = v68 & 0x3FFFFFF0;
          uint64_t v74 = v72 - 1;
          uint64_t v73 = 4 * v72;
          if (v68 == v72) {
            goto LABEL_72;
          }
        }
      }
      else
      {
        uint64_t v72 = 0;
        uint64_t v73 = 0;
      }
      uint64_t v74 = v72 - 1;
      uint64_t v75 = v73 << 32;
      do
      {
        int v76 = *(char *)(v64 + v73);
        if (*(char *)(v62 + v73) < v76) {
          LOBYTE(v76) = *(unsigned char *)(v62 + v73);
        }
        uint64_t v77 = v75 >> 32;
        uint64_t v78 = (v75 >> 32) | 1;
        int v79 = *(char *)(v62 + v78);
        if (v79 >= *(char *)(v64 + v78)) {
          LOBYTE(v79) = *(unsigned char *)(v64 + v78);
        }
        *(unsigned char *)(a5 + v73) = v76;
        *(unsigned char *)(a5 + v78) = v79;
        uint64_t v80 = v77 | 2;
        LODWORD(result) = *(char *)(v64 + (v77 | 2));
        int v81 = *(char *)(v62 + (v77 | 2));
        if (v81 >= (int)result) {
          uint64_t result = result;
        }
        else {
          uint64_t result = v81;
        }
        uint64_t v82 = v77 | 3;
        int v83 = *(char *)(v64 + v82);
        if (*(char *)(v62 + v82) < v83) {
          LOBYTE(v83) = *(unsigned char *)(v62 + v82);
        }
        *(unsigned char *)(a5 + v80) = result;
        *(unsigned char *)(a5 + v82) = v83;
        v73 += 4;
        ++v74;
        v75 += 0x400000000;
      }
      while (v73 <= v8);
LABEL_72:
      if ((int)v73 < a7)
      {
        uint64_t v84 = v73 & 0xFFFFFFFC;
        if (v66 < 8)
        {
          uint64_t v85 = v84;
          goto LABEL_75;
        }
        uint64_t result = v106 + v70;
        uint64_t v97 = 4 * v74 + v63 + v69;
        if (v97 - (4 * v74 + result) < 0x20)
        {
          uint64_t v85 = v84;
          goto LABEL_75;
        }
        if (v97 - (4 * v74 + v105 + v71) < 0x20)
        {
          uint64_t v85 = v84;
          goto LABEL_75;
        }
        if (v66 >= 0x20)
        {
          uint64_t v98 = v84;
          unint64_t v99 = v66 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            int8x16_t v100 = vminq_s8(*(int8x16_t *)(v62 + v98 + 16), *(int8x16_t *)(v64 + v98 + 16));
            unint64_t v101 = (int8x16_t *)(a5 + v98);
            *unint64_t v101 = vminq_s8(*(int8x16_t *)(v62 + v98), *(int8x16_t *)(v64 + v98));
            v101[1] = v100;
            v98 += 32;
            v99 -= 32;
          }
          while (v99);
          if (v66 == v104) {
            goto LABEL_58;
          }
          uint64_t result = v66 & 0xFFFFFFFFFFFFFFE0;
          if ((v66 & 0x18) == 0)
          {
            uint64_t v85 = v84 + v104;
            do
            {
LABEL_75:
              int v86 = *(char *)(v64 + v85);
              if (*(char *)(v62 + v85) < v86) {
                LOBYTE(v86) = *(unsigned char *)(v62 + v85);
              }
              *(unsigned char *)(a5 + v85++) = v86;
            }
            while (v9 != v85);
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t result = 0;
        }
        uint64_t v85 = v84 + v103;
        unint64_t v102 = result - (v66 & 0xFFFFFFFFFFFFFFF8);
        result += v84;
        do
        {
          *(int8x8_t *)(a5 + result) = vmin_s8(*(int8x8_t *)(v62 + result), *(int8x8_t *)(v64 + result));
          result += 8;
          v102 += 8;
        }
        while (v102);
        if (v66 != v103) {
          goto LABEL_75;
        }
      }
LABEL_58:
      v64 += a2;
      v62 += a4;
      a5 += a6;
      ++v61;
      if (!--a8) {
        return result;
      }
    }
  }
  if (a7 >= 1)
  {
    uint64_t v10 = (unsigned char *)(a5 + 2);
    uint8x16_t v11 = (unsigned char *)(a3 + 2);
    uint64_t v12 = (char *)(result + 1);
    do
    {
      int v13 = *(v12 - 1);
      if ((char)*(v11 - 2) < v13) {
        LOBYTE(v13) = *(v11 - 2);
      }
      *(v10 - 2) = v13;
      if (a7 != 1)
      {
        int v14 = *v12;
        if ((char)*(v11 - 1) < v14) {
          LOBYTE(v14) = *(v11 - 1);
        }
        *(v10 - 1) = v14;
        if (a7 != 2)
        {
          int v15 = v12[1];
          if ((char)*v11 < v15) {
            LOBYTE(v15) = *v11;
          }
          unsigned char *v10 = v15;
        }
      }
      v10 += a6;
      v11 += a4;
      v12 += a2;
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_10021ADFC(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v111 = a5;
  unint64_t v112 = a3;
  unint64_t v113 = result;
  if (!a8) {
    return result;
  }
  int v8 = a8 - 1;
  unint64_t v9 = (a7 - 4);
  unint64_t v10 = (a7 - 16);
  if (a7 >= 16)
  {
    uint64_t v17 = 0;
    unint64_t v19 = a3;
    unint64_t v18 = result;
    unint64_t v20 = result + 32;
    unint64_t v21 = (unsigned __int16 *)(a3 + 32);
    unint64_t v22 = a5;
    uint64_t v23 = (_WORD *)(a5 + 32);
    uint64_t v24 = a7;
    uint64_t v110 = a6;
    while (1)
    {
      uint64_t v25 = 0;
      unint64_t v26 = 0;
      int v27 = v8;
      unint64_t v28 = v111 + v17 * a6;
      uint64_t v29 = a2;
      unint64_t v30 = v113 + v17 * a2;
      uint64_t v31 = 0x1000000000;
      float64x2_t v32 = v23;
      uint64_t v33 = v21;
      int8x16_t v34 = (unsigned __int16 *)v20;
      uint64_t v35 = a4;
      unint64_t v36 = v112 + v17 * a4;
      do
      {
        uint16x8_t v37 = vminq_u16(*(uint16x8_t *)(v18 + v25), *(uint16x8_t *)(v19 + v25));
        uint64_t v38 = v31;
        int v39 = v34;
        uint64_t v40 = v33;
        uint64_t v41 = v32;
        uint16x8_t v42 = vminq_u16(*(uint16x8_t *)(v18 + v25 + 16), *(uint16x8_t *)(v19 + v25 + 16));
        int v43 = (uint16x8_t *)(v22 + v25);
        v26 += 16;
        v25 += 32;
        v31 += 0x1000000000;
        *int v43 = v37;
        v43[1] = v42;
        int8x16_t v34 = v39 + 16;
        v33 += 16;
        v32 += 16;
      }
      while (v26 <= v10);
      if ((int)v9 >= (int)v26) {
        break;
      }
      unint64_t v26 = v26;
      uint64_t result = a7;
      if ((int)v26 < a7) {
        goto LABEL_34;
      }
LABEL_17:
      a2 = v29;
      v18 += v29;
      a4 = v35;
      v19 += v35;
      a6 = v110;
      v22 += v110;
      int v8 = v27 - 1;
      ++v17;
      v20 += v29;
      unint64_t v21 = (unsigned __int16 *)((char *)v21 + a4);
      uint64_t v23 = (_WORD *)((char *)v23 + v110);
      if (!v27) {
        return result;
      }
    }
    uint64_t v44 = 0;
    do
    {
      unsigned int v46 = *v39;
      v39 += 4;
      unsigned int v45 = v46;
      unsigned int v48 = *v40;
      v40 += 4;
      __int16 v47 = v48;
      if (v48 < v45) {
        LOWORD(v45) = v47;
      }
      uint64_t v49 = v38 >> 31;
      uint64_t v50 = (v38 >> 31) | 2;
      unsigned int v51 = *(unsigned __int16 *)(v19 + v50);
      if (v51 >= *(unsigned __int16 *)(v18 + v50)) {
        LOWORD(v51) = *(_WORD *)(v18 + v50);
      }
      _WORD *v41 = v45;
      v41 += 4;
      *(_WORD *)(v22 + v50) = v51;
      uint64_t v52 = v49 | 4;
      unsigned int v53 = *(unsigned __int16 *)(v18 + (v49 | 4));
      if (*(unsigned __int16 *)(v19 + (v49 | 4)) < v53) {
        LOWORD(v53) = *(_WORD *)(v19 + (v49 | 4));
      }
      uint64_t v54 = v49 | 6;
      unsigned int v55 = *(unsigned __int16 *)(v18 + v54);
      if (*(unsigned __int16 *)(v19 + v54) < v55) {
        LOWORD(v55) = *(_WORD *)(v19 + v54);
      }
      *(_WORD *)(v22 + v52) = v53;
      *(_WORD *)(v22 + v54) = v55;
      v38 += 0x400000000;
      v44 += 4;
    }
    while (v26 + v44 <= v9);
    unint64_t v26 = (v26 + v44);
    uint64_t result = a7;
    if ((int)v26 >= a7) {
      goto LABEL_17;
    }
LABEL_34:
    uint64_t result = v24 - v26;
    if (v24 - v26 < 0x10) {
      goto LABEL_90;
    }
    uint64_t v56 = 2 * v26;
    unint64_t v57 = v28 + 2 * v26;
    if (v57 - (v30 + 2 * v26) < 0x20) {
      goto LABEL_90;
    }
    if (v57 - (v36 + v56) < 0x20) {
      goto LABEL_90;
    }
    v26 += result & 0xFFFFFFFFFFFFFFF0;
    unint64_t v58 = result & 0xFFFFFFFFFFFFFFF0;
    do
    {
      uint16x8_t v59 = vminq_u16(*(uint16x8_t *)(v19 + v56 + 16), *(uint16x8_t *)(v18 + v56 + 16));
      unint64_t v60 = (uint16x8_t *)(v22 + v56);
      *unint64_t v60 = vminq_u16(*(uint16x8_t *)(v19 + v56), *(uint16x8_t *)(v18 + v56));
      v60[1] = v59;
      v56 += 32;
      v58 -= 16;
    }
    while (v58);
    if (result != (result & 0xFFFFFFFFFFFFFFF0))
    {
LABEL_90:
      do
      {
        uint64_t result = 2 * v26;
        unsigned int v61 = *(unsigned __int16 *)(v18 + 2 * v26);
        if (*(unsigned __int16 *)(v19 + 2 * v26) < v61) {
          LOWORD(v61) = *(_WORD *)(v19 + 2 * v26);
        }
        *(_WORD *)(v22 + 2 * v26++) = v61;
      }
      while (v24 != v26);
    }
    goto LABEL_17;
  }
  if (a7 >= 4)
  {
    uint64_t v62 = 0;
    unint64_t v63 = a7;
    unint64_t v109 = a5 + 8;
    unint64_t v108 = result + 8;
    unint64_t v105 = a3 + 8;
    unint64_t v64 = (v9 & 0xFFFFFFFC) + 5;
    if (v64 <= a7) {
      unint64_t v64 = a7;
    }
    unint64_t v65 = v64 - (v9 & 0xFFFFFFFC) - 4;
    uint64_t v66 = ((2 * (a7 - 4)) & 0x1FFFFFFF8) + 8;
    uint64_t v107 = (v9 >> 2) + 1;
    unint64_t v106 = v65 & 0xFFFFFFFFFFFFFFF0;
    while (1)
    {
      int v67 = v8;
      uint64_t v68 = v62 * a6;
      uint64_t v69 = v62 * a2;
      uint64_t v70 = v62 * a4;
      if (v9 >= 0x1C)
      {
        unint64_t v71 = 0;
        unint64_t v74 = v111 + v66 + v68;
        BOOL v76 = a5 < v112 + v66 + v70 && a3 < v74;
        uint64_t v73 = 4;
        if (result >= v74 || a5 >= v113 + v66 + v69)
        {
          unint64_t v72 = 0;
          if (!v76)
          {
            uint64_t v78 = 0;
            uint64_t v79 = v107 & 0x7FFFFFF8;
            do
            {
              uint16x8_t v80 = vminq_u16(*(uint16x8_t *)(a3 + v78 + 16), *(uint16x8_t *)(result + v78 + 16));
              uint16x8_t v81 = vminq_u16(*(uint16x8_t *)(a3 + v78), *(uint16x8_t *)(result + v78));
              uint16x8_t v82 = vminq_u16(*(uint16x8_t *)(a3 + v78 + 48), *(uint16x8_t *)(result + v78 + 48));
              int v83 = (uint16x8_t *)(a5 + v78);
              v83[2] = vminq_u16(*(uint16x8_t *)(a3 + v78 + 32), *(uint16x8_t *)(result + v78 + 32));
              _OWORD v83[3] = v82;
              *int v83 = v81;
              v83[1] = v80;
              v78 += 64;
              v79 -= 8;
            }
            while (v79);
            unint64_t v71 = v107 & 0x7FFFFFF8;
            unint64_t v84 = v71 - 1;
            uint64_t v73 = (32 * ((v71 >> 3) & 0xFFFFFFF)) | 4;
            unint64_t v72 = 4 * v71;
            unint64_t v85 = v72;
            if (v107 == v71) {
              goto LABEL_75;
            }
          }
        }
        else
        {
          unint64_t v72 = 0;
        }
      }
      else
      {
        unint64_t v71 = 0;
        unint64_t v72 = 0;
        uint64_t v73 = 4;
      }
      unint64_t v84 = v71 - 1;
      unint64_t v85 = v73 - 4;
      uint64_t v86 = 2 * v72;
      unint64_t v87 = result;
      unint64_t v88 = a5;
      unint64_t v89 = a3;
      do
      {
        unsigned int v90 = *(unsigned __int16 *)(v89 + v86);
        if (v90 >= *(unsigned __int16 *)(v87 + v86)) {
          LOWORD(v90) = *(_WORD *)(v87 + v86);
        }
        unint64_t v91 = v87 + v86;
        unsigned int v92 = *(unsigned __int16 *)(v87 + v86 + 2);
        unint64_t v93 = v89 + v86;
        if (*(unsigned __int16 *)(v89 + v86 + 2) < v92) {
          LOWORD(v92) = *(_WORD *)(v89 + v86 + 2);
        }
        *(_WORD *)(v88 + v86) = v90;
        unint64_t v94 = v88 + v86;
        *(_WORD *)(v88 + v86 + 2) = v92;
        unsigned int v95 = *(unsigned __int16 *)(v91 + 4);
        if (*(unsigned __int16 *)(v93 + 4) < v95) {
          LOWORD(v95) = *(_WORD *)(v93 + 4);
        }
        unsigned int v96 = *(unsigned __int16 *)(v91 + 6);
        unsigned int v97 = *(unsigned __int16 *)(v93 + 6);
        if (v97 < v96) {
          LOWORD(v96) = v97;
        }
        v72 += 4;
        ++v84;
        v85 += 4;
        *(_WORD *)(v94 + 4) = v95;
        *(_WORD *)(v94 + 6) = v96;
        v89 += 8;
        v88 += 8;
        v87 += 8;
      }
      while (v72 <= v9);
LABEL_75:
      if ((int)v72 < a7)
      {
        if (v65 < 0x10
          || (uint64_t v100 = 8 * v84 + v109 + v68, v100 - (8 * v84 + v108 + v69) < 0x20)
          || v100 - (8 * v84 + v105 + v70) < 0x20)
        {
          unint64_t v98 = v85;
          do
          {
LABEL_78:
            unsigned int v99 = *(unsigned __int16 *)(result + 2 * v98);
            if (*(unsigned __int16 *)(a3 + 2 * v98) < v99) {
              LOWORD(v99) = *(_WORD *)(a3 + 2 * v98);
            }
            *(_WORD *)(a5 + 2 * v98++) = v99;
          }
          while (v98 < v63);
          goto LABEL_47;
        }
        unint64_t v101 = v65 & 0xFFFFFFFFFFFFFFF0;
        unint64_t v98 = v85 + v106;
        uint64_t v102 = 2 * v85;
        do
        {
          uint16x8_t v103 = vminq_u16(*(uint16x8_t *)(a3 + v102 + 16), *(uint16x8_t *)(result + v102 + 16));
          unint64_t v104 = (uint16x8_t *)(a5 + v102);
          uint16x8_t *v104 = vminq_u16(*(uint16x8_t *)(a3 + v102), *(uint16x8_t *)(result + v102));
          v104[1] = v103;
          v102 += 32;
          v101 -= 16;
        }
        while (v101);
        if (v65 != v106) {
          goto LABEL_78;
        }
      }
LABEL_47:
      result += a2;
      a3 += a4;
      a5 += a6;
      int v8 = v67 - 1;
      ++v62;
      if (!v67) {
        return result;
      }
    }
  }
  if (a7 >= 1)
  {
    uint8x16_t v11 = (_WORD *)(a5 + 4);
    uint64_t v12 = (_WORD *)(a3 + 4);
    int v13 = (unsigned __int16 *)(result + 2);
    do
    {
      unsigned int v14 = *(v13 - 1);
      if ((unsigned __int16)*(v12 - 2) < v14) {
        LOWORD(v14) = *(v12 - 2);
      }
      *(v11 - 2) = v14;
      if (a7 != 1)
      {
        unsigned int v15 = *v13;
        if ((unsigned __int16)*(v12 - 1) < v15) {
          LOWORD(v15) = *(v12 - 1);
        }
        *(v11 - 1) = v15;
        if (a7 != 2)
        {
          unsigned int v16 = v13[1];
          if ((unsigned __int16)*v12 < v16) {
            LOWORD(v16) = *v12;
          }
          *uint8x16_t v11 = v16;
        }
      }
      uint8x16_t v11 = (_WORD *)((char *)v11 + a6);
      uint64_t v12 = (_WORD *)((char *)v12 + a4);
      int v13 = (unsigned __int16 *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_10021B3E0(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v111 = a5;
  unint64_t v112 = a3;
  unint64_t v113 = result;
  if (!a8) {
    return result;
  }
  int v8 = a8 - 1;
  unint64_t v9 = (a7 - 4);
  unint64_t v10 = (a7 - 16);
  if (a7 >= 16)
  {
    uint64_t v17 = 0;
    unint64_t v19 = a3;
    unint64_t v18 = result;
    unint64_t v20 = result + 32;
    unint64_t v21 = (__int16 *)(a3 + 32);
    unint64_t v22 = a5;
    uint64_t v23 = (_WORD *)(a5 + 32);
    uint64_t v24 = a7;
    uint64_t v110 = a6;
    while (1)
    {
      uint64_t v25 = 0;
      unint64_t v26 = 0;
      int v27 = v8;
      unint64_t v28 = v111 + v17 * a6;
      uint64_t v29 = a2;
      unint64_t v30 = v113 + v17 * a2;
      uint64_t v31 = 0x1000000000;
      float64x2_t v32 = v23;
      uint64_t v33 = v21;
      int8x16_t v34 = (__int16 *)v20;
      uint64_t v35 = a4;
      unint64_t v36 = v112 + v17 * a4;
      do
      {
        int16x8_t v37 = vminq_s16(*(int16x8_t *)(v18 + v25), *(int16x8_t *)(v19 + v25));
        uint64_t v38 = v31;
        int v39 = v34;
        uint64_t v40 = v33;
        uint64_t v41 = v32;
        int16x8_t v42 = vminq_s16(*(int16x8_t *)(v18 + v25 + 16), *(int16x8_t *)(v19 + v25 + 16));
        int v43 = (int16x8_t *)(v22 + v25);
        v26 += 16;
        v25 += 32;
        v31 += 0x1000000000;
        *int v43 = v37;
        v43[1] = v42;
        int8x16_t v34 = v39 + 16;
        v33 += 16;
        v32 += 16;
      }
      while (v26 <= v10);
      if ((int)v9 >= (int)v26) {
        break;
      }
      unint64_t v26 = v26;
      uint64_t result = a7;
      if ((int)v26 < a7) {
        goto LABEL_34;
      }
LABEL_17:
      a2 = v29;
      v18 += v29;
      a4 = v35;
      v19 += v35;
      a6 = v110;
      v22 += v110;
      int v8 = v27 - 1;
      ++v17;
      v20 += v29;
      unint64_t v21 = (__int16 *)((char *)v21 + a4);
      uint64_t v23 = (_WORD *)((char *)v23 + v110);
      if (!v27) {
        return result;
      }
    }
    uint64_t v44 = 0;
    do
    {
      int v46 = *v39;
      v39 += 4;
      int v45 = v46;
      int v48 = *v40;
      v40 += 4;
      __int16 v47 = v48;
      if (v48 < v45) {
        LOWORD(v45) = v47;
      }
      uint64_t v49 = v38 >> 31;
      uint64_t v50 = (v38 >> 31) | 2;
      int v51 = *(__int16 *)(v19 + v50);
      if (v51 >= *(__int16 *)(v18 + v50)) {
        LOWORD(v51) = *(_WORD *)(v18 + v50);
      }
      _WORD *v41 = v45;
      v41 += 4;
      *(_WORD *)(v22 + v50) = v51;
      uint64_t v52 = v49 | 4;
      int v53 = *(__int16 *)(v18 + (v49 | 4));
      if (*(__int16 *)(v19 + (v49 | 4)) < v53) {
        LOWORD(v53) = *(_WORD *)(v19 + (v49 | 4));
      }
      uint64_t v54 = v49 | 6;
      int v55 = *(__int16 *)(v18 + v54);
      if (*(__int16 *)(v19 + v54) < v55) {
        LOWORD(v55) = *(_WORD *)(v19 + v54);
      }
      *(_WORD *)(v22 + v52) = v53;
      *(_WORD *)(v22 + v54) = v55;
      v38 += 0x400000000;
      v44 += 4;
    }
    while (v26 + v44 <= v9);
    unint64_t v26 = (v26 + v44);
    uint64_t result = a7;
    if ((int)v26 >= a7) {
      goto LABEL_17;
    }
LABEL_34:
    uint64_t result = v24 - v26;
    if (v24 - v26 < 0x10) {
      goto LABEL_90;
    }
    uint64_t v56 = 2 * v26;
    unint64_t v57 = v28 + 2 * v26;
    if (v57 - (v30 + 2 * v26) < 0x20) {
      goto LABEL_90;
    }
    if (v57 - (v36 + v56) < 0x20) {
      goto LABEL_90;
    }
    v26 += result & 0xFFFFFFFFFFFFFFF0;
    unint64_t v58 = result & 0xFFFFFFFFFFFFFFF0;
    do
    {
      int16x8_t v59 = vminq_s16(*(int16x8_t *)(v19 + v56 + 16), *(int16x8_t *)(v18 + v56 + 16));
      unint64_t v60 = (int16x8_t *)(v22 + v56);
      *unint64_t v60 = vminq_s16(*(int16x8_t *)(v19 + v56), *(int16x8_t *)(v18 + v56));
      v60[1] = v59;
      v56 += 32;
      v58 -= 16;
    }
    while (v58);
    if (result != (result & 0xFFFFFFFFFFFFFFF0))
    {
LABEL_90:
      do
      {
        uint64_t result = 2 * v26;
        int v61 = *(__int16 *)(v18 + 2 * v26);
        if (*(__int16 *)(v19 + 2 * v26) < v61) {
          LOWORD(v61) = *(_WORD *)(v19 + 2 * v26);
        }
        *(_WORD *)(v22 + 2 * v26++) = v61;
      }
      while (v24 != v26);
    }
    goto LABEL_17;
  }
  if (a7 >= 4)
  {
    uint64_t v62 = 0;
    unint64_t v63 = a7;
    unint64_t v109 = a5 + 8;
    unint64_t v108 = result + 8;
    unint64_t v105 = a3 + 8;
    unint64_t v64 = (v9 & 0xFFFFFFFC) + 5;
    if (v64 <= a7) {
      unint64_t v64 = a7;
    }
    unint64_t v65 = v64 - (v9 & 0xFFFFFFFC) - 4;
    uint64_t v66 = ((2 * (a7 - 4)) & 0x1FFFFFFF8) + 8;
    uint64_t v107 = (v9 >> 2) + 1;
    unint64_t v106 = v65 & 0xFFFFFFFFFFFFFFF0;
    while (1)
    {
      int v67 = v8;
      uint64_t v68 = v62 * a6;
      uint64_t v69 = v62 * a2;
      uint64_t v70 = v62 * a4;
      if (v9 >= 0x1C)
      {
        unint64_t v71 = 0;
        unint64_t v74 = v111 + v66 + v68;
        BOOL v76 = a5 < v112 + v66 + v70 && a3 < v74;
        uint64_t v73 = 4;
        if (result >= v74 || a5 >= v113 + v66 + v69)
        {
          unint64_t v72 = 0;
          if (!v76)
          {
            uint64_t v78 = 0;
            uint64_t v79 = v107 & 0x7FFFFFF8;
            do
            {
              int16x8_t v80 = vminq_s16(*(int16x8_t *)(a3 + v78 + 16), *(int16x8_t *)(result + v78 + 16));
              int16x8_t v81 = vminq_s16(*(int16x8_t *)(a3 + v78), *(int16x8_t *)(result + v78));
              int16x8_t v82 = vminq_s16(*(int16x8_t *)(a3 + v78 + 48), *(int16x8_t *)(result + v78 + 48));
              int v83 = (int16x8_t *)(a5 + v78);
              v83[2] = vminq_s16(*(int16x8_t *)(a3 + v78 + 32), *(int16x8_t *)(result + v78 + 32));
              _OWORD v83[3] = v82;
              *int v83 = v81;
              v83[1] = v80;
              v78 += 64;
              v79 -= 8;
            }
            while (v79);
            unint64_t v71 = v107 & 0x7FFFFFF8;
            unint64_t v84 = v71 - 1;
            uint64_t v73 = (32 * ((v71 >> 3) & 0xFFFFFFF)) | 4;
            unint64_t v72 = 4 * v71;
            unint64_t v85 = v72;
            if (v107 == v71) {
              goto LABEL_75;
            }
          }
        }
        else
        {
          unint64_t v72 = 0;
        }
      }
      else
      {
        unint64_t v71 = 0;
        unint64_t v72 = 0;
        uint64_t v73 = 4;
      }
      unint64_t v84 = v71 - 1;
      unint64_t v85 = v73 - 4;
      uint64_t v86 = 2 * v72;
      unint64_t v87 = result;
      unint64_t v88 = a5;
      unint64_t v89 = a3;
      do
      {
        int v90 = *(__int16 *)(v89 + v86);
        if (v90 >= *(__int16 *)(v87 + v86)) {
          LOWORD(v90) = *(_WORD *)(v87 + v86);
        }
        unint64_t v91 = v87 + v86;
        int v92 = *(__int16 *)(v87 + v86 + 2);
        unint64_t v93 = v89 + v86;
        if (*(__int16 *)(v89 + v86 + 2) < v92) {
          LOWORD(v92) = *(_WORD *)(v89 + v86 + 2);
        }
        *(_WORD *)(v88 + v86) = v90;
        unint64_t v94 = v88 + v86;
        *(_WORD *)(v88 + v86 + 2) = v92;
        int v95 = *(__int16 *)(v91 + 4);
        if (*(__int16 *)(v93 + 4) < v95) {
          LOWORD(v95) = *(_WORD *)(v93 + 4);
        }
        int v96 = *(__int16 *)(v91 + 6);
        int v97 = *(__int16 *)(v93 + 6);
        if (v97 < v96) {
          LOWORD(v96) = v97;
        }
        v72 += 4;
        ++v84;
        v85 += 4;
        *(_WORD *)(v94 + 4) = v95;
        *(_WORD *)(v94 + 6) = v96;
        v89 += 8;
        v88 += 8;
        v87 += 8;
      }
      while (v72 <= v9);
LABEL_75:
      if ((int)v72 < a7)
      {
        if (v65 < 0x10
          || (uint64_t v100 = 8 * v84 + v109 + v68, v100 - (8 * v84 + v108 + v69) < 0x20)
          || v100 - (8 * v84 + v105 + v70) < 0x20)
        {
          unint64_t v98 = v85;
          do
          {
LABEL_78:
            int v99 = *(__int16 *)(result + 2 * v98);
            if (*(__int16 *)(a3 + 2 * v98) < v99) {
              LOWORD(v99) = *(_WORD *)(a3 + 2 * v98);
            }
            *(_WORD *)(a5 + 2 * v98++) = v99;
          }
          while (v98 < v63);
          goto LABEL_47;
        }
        unint64_t v101 = v65 & 0xFFFFFFFFFFFFFFF0;
        unint64_t v98 = v85 + v106;
        uint64_t v102 = 2 * v85;
        do
        {
          int16x8_t v103 = vminq_s16(*(int16x8_t *)(a3 + v102 + 16), *(int16x8_t *)(result + v102 + 16));
          unint64_t v104 = (int16x8_t *)(a5 + v102);
          int16x8_t *v104 = vminq_s16(*(int16x8_t *)(a3 + v102), *(int16x8_t *)(result + v102));
          v104[1] = v103;
          v102 += 32;
          v101 -= 16;
        }
        while (v101);
        if (v65 != v106) {
          goto LABEL_78;
        }
      }
LABEL_47:
      result += a2;
      a3 += a4;
      a5 += a6;
      int v8 = v67 - 1;
      ++v62;
      if (!v67) {
        return result;
      }
    }
  }
  if (a7 >= 1)
  {
    uint8x16_t v11 = (_WORD *)(a5 + 4);
    uint64_t v12 = (__int16 *)(a3 + 4);
    int v13 = (__int16 *)(result + 2);
    do
    {
      int v14 = *(v13 - 1);
      if (*(v12 - 2) < v14) {
        LOWORD(v14) = *(v12 - 2);
      }
      *(v11 - 2) = v14;
      if (a7 != 1)
      {
        int v15 = *v13;
        if (*(v12 - 1) < v15) {
          LOWORD(v15) = *(v12 - 1);
        }
        *(v11 - 1) = v15;
        if (a7 != 2)
        {
          int v16 = v13[1];
          if (*v12 < v16) {
            LOWORD(v16) = *v12;
          }
          *uint8x16_t v11 = v16;
        }
      }
      uint8x16_t v11 = (_WORD *)((char *)v11 + a6);
      uint64_t v12 = (__int16 *)((char *)v12 + a4);
      int v13 = (__int16 *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_10021B9C4(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  unint64_t v100 = a5;
  unint64_t v101 = a3;
  if (!a8) {
    return result;
  }
  int v8 = a8 - 1;
  unint64_t v9 = (a7 - 4);
  if (a7 >= 8)
  {
    uint64_t v16 = 0;
    unint64_t v18 = a5;
    unint64_t v17 = a3;
    unint64_t v19 = (_DWORD *)(a5 + 32);
    unint64_t v20 = (int *)(a3 + 32);
    unint64_t v21 = (int *)(result + 32);
    unint64_t v22 = result;
    while (1)
    {
      uint64_t v23 = 0;
      unint64_t v24 = 0;
      int v25 = v8;
      unint64_t v26 = v21;
      int v27 = v20;
      unint64_t v28 = v19;
      do
      {
        int32x4_t v29 = vminq_s32(*(int32x4_t *)(v22 + v23), *(int32x4_t *)(v17 + v23));
        unint64_t v30 = v28;
        uint64_t v31 = v27;
        float64x2_t v32 = v26;
        int32x4_t v33 = vminq_s32(*(int32x4_t *)(v22 + v23 + 16), *(int32x4_t *)(v17 + v23 + 16));
        int8x16_t v34 = (int32x4_t *)(v18 + v23);
        v24 += 8;
        v23 += 32;
        *int8x16_t v34 = v29;
        v34[1] = v33;
        unint64_t v28 = v30 + 8;
        v27 += 8;
        v26 += 8;
      }
      while (v24 <= (a7 - 8));
      if ((int)v9 >= (int)v24) {
        break;
      }
      unint64_t v24 = v24;
      if ((int)v24 < a7) {
        goto LABEL_30;
      }
LABEL_17:
      v22 += a2;
      v17 += a4;
      v18 += a6;
      int v8 = v25 - 1;
      ++v16;
      unint64_t v19 = (_DWORD *)((char *)v19 + a6);
      unint64_t v20 = (int *)((char *)v20 + a4);
      unint64_t v21 = (int *)((char *)v21 + a2);
      if (!v25) {
        return result;
      }
    }
    uint64_t v35 = 0;
    do
    {
      int v37 = *v32;
      v32 += 4;
      int v36 = v37;
      int v39 = *v31;
      v31 += 4;
      int v38 = v39;
      if (v39 < v36) {
        int v36 = v38;
      }
      unint64_t v40 = (unint64_t)((v24 + v35) & 0xFFFFFFFC) >> 2;
      uint64_t v41 = (16 * (v40 & 0x3FFFFFFF)) | 4;
      int v42 = *(_DWORD *)(v22 + v41);
      if (*(_DWORD *)(v17 + v41) < v42) {
        int v42 = *(_DWORD *)(v17 + v41);
      }
      *unint64_t v30 = v36;
      v30 += 4;
      *(_DWORD *)(v18 + v41) = v42;
      *(int32x2_t *)(v18 + ((16 * (v40 & 0x3FFFFFFF)) | 8)) = vmin_s32(*(int32x2_t *)(v17 + ((16 * (v40 & 0x3FFFFFFF)) | 8)), *(int32x2_t *)(v22 + ((16 * (v40 & 0x3FFFFFFF)) | 8)));
      v35 += 4;
    }
    while (v24 + v35 <= v9);
    unint64_t v24 = (v24 + v35);
    if ((int)v24 >= a7) {
      goto LABEL_17;
    }
LABEL_30:
    unint64_t v43 = a7 - v24;
    if (v43 < 0xC) {
      goto LABEL_86;
    }
    uint64_t v44 = 4 * v24;
    uint64_t v45 = v100 + v16 * a6 + 4 * v24;
    if (v45 - (result + v16 * a2 + 4 * v24) < 0x20) {
      goto LABEL_86;
    }
    if (v45 - (v101 + v16 * a4 + v44) < 0x20) {
      goto LABEL_86;
    }
    v24 += v43 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v46 = v43 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      int32x4_t v47 = vminq_s32(*(int32x4_t *)(v17 + v44 + 16), *(int32x4_t *)(v22 + v44 + 16));
      int v48 = (int32x4_t *)(v18 + v44);
      int32x4_t *v48 = vminq_s32(*(int32x4_t *)(v17 + v44), *(int32x4_t *)(v22 + v44));
      v48[1] = v47;
      v44 += 32;
      v46 -= 8;
    }
    while (v46);
    if (v43 != (v43 & 0xFFFFFFFFFFFFFFF8))
    {
LABEL_86:
      do
      {
        int v49 = *(_DWORD *)(v22 + 4 * v24);
        if (*(_DWORD *)(v17 + 4 * v24) < v49) {
          int v49 = *(_DWORD *)(v17 + 4 * v24);
        }
        *(_DWORD *)(v18 + 4 * v24++) = v49;
      }
      while (a7 != v24);
    }
    goto LABEL_17;
  }
  if (a7 >= 4)
  {
    uint64_t v50 = 0;
    unint64_t v98 = a5 + 16;
    unint64_t v97 = result + 16;
    unint64_t v94 = a3 + 16;
    unint64_t v51 = (v9 & 0xFFFFFFFC) + 5;
    if (v51 <= a7) {
      unint64_t v51 = a7;
    }
    uint64_t v52 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
    uint64_t v96 = (v9 >> 2) + 1;
    unint64_t v99 = v51 - (v9 & 0xFFFFFFFC) - 4;
    unint64_t v95 = v99 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v53 = result;
    unint64_t v54 = result;
    while (1)
    {
      int v55 = v8;
      uint64_t v56 = v50 * a6;
      uint64_t v57 = v50 * a2;
      uint64_t v58 = v50 * a4;
      if (v9 >= 0xC)
      {
        unint64_t v59 = 0;
        unint64_t v62 = v100 + v52 + v56;
        BOOL v64 = a5 < v101 + v52 + v58 && a3 < v62;
        if (v53 >= v62 || a5 >= result + v52 + v57)
        {
          uint64_t v61 = 4;
          unint64_t v60 = 0;
          if (!v64)
          {
            uint64_t v66 = 0;
            uint64_t v67 = v96 & 0x7FFFFFFC;
            do
            {
              int32x4_t v68 = vminq_s32(*(int32x4_t *)(a3 + v66 + 16), *(int32x4_t *)(v53 + v66 + 16));
              int32x4_t v69 = vminq_s32(*(int32x4_t *)(a3 + v66), *(int32x4_t *)(v53 + v66));
              int32x4_t v70 = vminq_s32(*(int32x4_t *)(a3 + v66 + 48), *(int32x4_t *)(v53 + v66 + 48));
              unint64_t v71 = (int32x4_t *)(a5 + v66);
              _OWORD v71[2] = vminq_s32(*(int32x4_t *)(a3 + v66 + 32), *(int32x4_t *)(v53 + v66 + 32));
              v71[3] = v70;
              int32x4_t *v71 = v69;
              v71[1] = v68;
              v66 += 64;
              v67 -= 4;
            }
            while (v67);
            unint64_t v59 = v96 & 0x7FFFFFFC;
            uint64_t v61 = (16 * ((v59 >> 2) & 0x1FFFFFFF)) | 4;
            uint64_t v72 = 4 * v59;
            unint64_t v60 = v72;
            unint64_t v73 = v59 - 1;
            if (v96 == v59) {
              goto LABEL_71;
            }
          }
        }
        else
        {
          uint64_t v61 = 4;
          unint64_t v60 = 0;
        }
      }
      else
      {
        unint64_t v59 = 0;
        unint64_t v60 = 0;
        uint64_t v61 = 4;
      }
      unint64_t v73 = v59 - 1;
      uint64_t v72 = v61 - 4;
      uint64_t v74 = 4 * v60;
      unint64_t v75 = a3;
      unint64_t v76 = v53;
      unint64_t v77 = a5;
      do
      {
        int v78 = *(_DWORD *)(v76 + v74);
        if (*(_DWORD *)(v75 + v74) < v78) {
          int v78 = *(_DWORD *)(v75 + v74);
        }
        unint64_t v79 = v76 + v74;
        unint64_t v80 = v75 + v74;
        int v81 = *(_DWORD *)(v75 + v74 + 4);
        if (v81 >= *(_DWORD *)(v76 + v74 + 4)) {
          int v81 = *(_DWORD *)(v76 + v74 + 4);
        }
        *(_DWORD *)(v77 + v74) = v78;
        unint64_t v82 = v77 + v74;
        *(_DWORD *)(v77 + v74 + 4) = v81;
        int v83 = *(_DWORD *)(v79 + 8);
        int v84 = *(_DWORD *)(v79 + 12);
        int v85 = *(_DWORD *)(v80 + 8);
        int v86 = *(_DWORD *)(v80 + 12);
        if (v85 < v83) {
          int v83 = v85;
        }
        if (v86 < v84) {
          int v84 = v86;
        }
        v60 += 4;
        ++v73;
        v72 += 4;
        *(_DWORD *)(v82 + 8) = v83;
        *(_DWORD *)(v82 + 12) = v84;
        v77 += 16;
        v76 += 16;
        v75 += 16;
      }
      while (v60 <= v9);
LABEL_71:
      if ((int)v60 < a7)
      {
        if (v99 < 0xC
          || (uint64_t v89 = 16 * v73 + v98 + v56, v89 - (16 * v73 + v97 + v57) < 0x20)
          || v89 - (16 * v73 + v94 + v58) < 0x20)
        {
          unint64_t v87 = v72;
          do
          {
LABEL_74:
            int v88 = *(_DWORD *)(v53 + 4 * v87);
            if (*(_DWORD *)(a3 + 4 * v87) < v88) {
              int v88 = *(_DWORD *)(a3 + 4 * v87);
            }
            *(_DWORD *)(a5 + 4 * v87++) = v88;
          }
          while (v87 < a7);
          goto LABEL_43;
        }
        unint64_t v90 = v99 & 0xFFFFFFFFFFFFFFF8;
        unint64_t v87 = v72 + v95;
        uint64_t v91 = 4 * v72;
        do
        {
          int32x4_t v92 = vminq_s32(*(int32x4_t *)(a3 + v91 + 16), *(int32x4_t *)(v53 + v91 + 16));
          unint64_t v93 = (int32x4_t *)(a5 + v91);
          *unint64_t v93 = vminq_s32(*(int32x4_t *)(a3 + v91), *(int32x4_t *)(v53 + v91));
          v93[1] = v92;
          v91 += 32;
          v90 -= 8;
        }
        while (v90);
        if (v99 != v95) {
          goto LABEL_74;
        }
      }
LABEL_43:
      v53 += a2;
      a3 += a4;
      a5 += a6;
      int v8 = v55 - 1;
      ++v50;
      uint64_t result = v54;
      if (!v55) {
        return result;
      }
    }
  }
  if (a7 >= 1)
  {
    unint64_t v10 = (_DWORD *)(a5 + 8);
    uint8x16_t v11 = (int *)(a3 + 8);
    uint64_t v12 = (int *)(result + 4);
    do
    {
      int v13 = *(v12 - 1);
      if (*(v11 - 2) < v13) {
        int v13 = *(v11 - 2);
      }
      *(v10 - 2) = v13;
      if (a7 != 1)
      {
        int v14 = *v12;
        if (*(v11 - 1) < *v12) {
          int v14 = *(v11 - 1);
        }
        *(v10 - 1) = v14;
        if (a7 != 2)
        {
          int v15 = v12[1];
          if (*v11 < v15) {
            int v15 = *v11;
          }
          _DWORD *v10 = v15;
        }
      }
      unint64_t v10 = (_DWORD *)((char *)v10 + a6);
      uint8x16_t v11 = (int *)((char *)v11 + a4);
      uint64_t v12 = (int *)((char *)v12 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_10021BF60(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  if (!a8) {
    return result;
  }
  unint64_t v8 = a5;
  int v9 = a8 - 1;
  unint64_t v10 = (a7 - 4);
  if (a7 >= 8)
  {
    uint64_t v17 = 0;
    unint64_t v18 = (float *)(a5 + 32);
    unint64_t v19 = (float *)(a3 + 32);
    unint64_t v20 = (float *)(result + 32);
    unint64_t v21 = result;
    unint64_t v22 = a3;
    unint64_t v23 = a5;
    while (1)
    {
      uint64_t v24 = 0;
      unint64_t v25 = 0;
      int v26 = v9;
      int v27 = v20;
      unint64_t v28 = v19;
      int32x4_t v29 = v18;
      do
      {
        float32x4_t v30 = vminq_f32(*(float32x4_t *)(v21 + v24), *(float32x4_t *)(v22 + v24));
        uint64_t v31 = v29;
        float64x2_t v32 = v28;
        int32x4_t v33 = v27;
        float32x4_t v34 = vminq_f32(*(float32x4_t *)(v21 + v24 + 16), *(float32x4_t *)(v22 + v24 + 16));
        uint64_t v35 = (float32x4_t *)(v23 + v24);
        v25 += 8;
        v24 += 32;
        *uint64_t v35 = v30;
        v35[1] = v34;
        v29 += 8;
        unint64_t v28 = v32 + 8;
        v27 += 8;
      }
      while (v25 <= (a7 - 8));
      if ((int)v10 >= (int)v25) {
        break;
      }
      unint64_t v25 = v25;
      if ((int)v25 < a7) {
        goto LABEL_30;
      }
LABEL_17:
      v21 += a2;
      v22 += a4;
      v23 += a6;
      int v9 = v26 - 1;
      ++v17;
      unint64_t v18 = (float *)((char *)v18 + a6);
      unint64_t v19 = (float *)((char *)v19 + a4);
      unint64_t v20 = (float *)((char *)v20 + a2);
      if (!v26) {
        return result;
      }
    }
    uint64_t v36 = 0;
    do
    {
      float v37 = *v33;
      v33 += 4;
      float v38 = v37;
      float v39 = *v32;
      v32 += 4;
      float v40 = v39;
      if (v39 < v38) {
        float v38 = v40;
      }
      unint64_t v41 = (unint64_t)((v25 + v36) & 0xFFFFFFFC) >> 2;
      uint64_t v42 = (16 * (v41 & 0x3FFFFFFF)) | 4;
      float v43 = *(float *)(v21 + v42);
      if (*(float *)(v22 + v42) < v43) {
        float v43 = *(float *)(v22 + v42);
      }
      *uint64_t v31 = v38;
      v31 += 4;
      *(float *)(v23 + v42) = v43;
      uint64_t v44 = (16 * (v41 & 0x3FFFFFFF)) | 8;
      *(int8x8_t *)(v23 + v44) = vbsl_s8((int8x8_t)vcgt_f32(*(float32x2_t *)(v21 + v44), *(float32x2_t *)(v22 + v44)), *(int8x8_t *)(v22 + v44), *(int8x8_t *)(v21 + v44));
      v36 += 4;
    }
    while (v25 + v36 <= v10);
    unint64_t v25 = (v25 + v36);
    if ((int)v25 >= a7) {
      goto LABEL_17;
    }
LABEL_30:
    unint64_t v45 = a7 - v25;
    if (v45 < 0xC) {
      goto LABEL_86;
    }
    uint64_t v46 = 4 * v25;
    uint64_t v47 = v8 + v17 * a6 + 4 * v25;
    if (v47 - (result + v17 * a2 + 4 * v25) < 0x20) {
      goto LABEL_86;
    }
    if (v47 - (a3 + v17 * a4 + v46) < 0x20) {
      goto LABEL_86;
    }
    v25 += v45 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v48 = v45 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      int8x16_t v49 = vbslq_s8((int8x16_t)vcgtq_f32(*(float32x4_t *)(v21 + v46 + 16), *(float32x4_t *)(v22 + v46 + 16)), *(int8x16_t *)(v22 + v46 + 16), *(int8x16_t *)(v21 + v46 + 16));
      uint64_t v50 = (int8x16_t *)(v23 + v46);
      *uint64_t v50 = vbslq_s8((int8x16_t)vcgtq_f32(*(float32x4_t *)(v21 + v46), *(float32x4_t *)(v22 + v46)), *(int8x16_t *)(v22 + v46), *(int8x16_t *)(v21 + v46));
      v50[1] = v49;
      v46 += 32;
      v48 -= 8;
    }
    while (v48);
    if (v45 != (v45 & 0xFFFFFFFFFFFFFFF8))
    {
LABEL_86:
      do
      {
        float v51 = *(float *)(v21 + 4 * v25);
        if (*(float *)(v22 + 4 * v25) < v51) {
          float v51 = *(float *)(v22 + 4 * v25);
        }
        *(float *)(v23 + 4 * v25++) = v51;
      }
      while (a7 != v25);
    }
    goto LABEL_17;
  }
  if (a7 >= 4)
  {
    uint64_t v52 = 0;
    unint64_t v99 = a5 + 16;
    unint64_t v98 = result + 16;
    unint64_t v95 = a3 + 16;
    unint64_t v53 = (v10 & 0xFFFFFFFC) + 5;
    if (v53 <= a7) {
      unint64_t v53 = a7;
    }
    uint64_t v54 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
    uint64_t v97 = (v10 >> 2) + 1;
    unint64_t v100 = v53 - (v10 & 0xFFFFFFFC) - 4;
    unint64_t v96 = v100 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v55 = result;
    unint64_t v56 = a3;
    unint64_t v101 = result;
    unint64_t v57 = a3;
    unint64_t v58 = a5;
    while (1)
    {
      int v59 = v9;
      uint64_t v60 = v52 * a6;
      uint64_t v61 = v52 * a2;
      uint64_t v62 = v52 * a4;
      if (v10 >= 0xC)
      {
        unint64_t v63 = 0;
        unint64_t v66 = v8 + v54 + v60;
        BOOL v68 = a5 < a3 + v54 + v62 && v56 < v66;
        if (v55 >= v66 || a5 >= result + v54 + v61)
        {
          uint64_t v65 = 4;
          unint64_t v64 = 0;
          if (!v68)
          {
            uint64_t v70 = 0;
            uint64_t v71 = v97 & 0x7FFFFFFC;
            do
            {
              uint64_t v72 = (const float *)(v55 + v70);
              float32x4x4_t v102 = vld4q_f32(v72);
              unint64_t v73 = (const float *)(v56 + v70);
              float32x4x4_t v103 = vld4q_f32(v73);
              v104.val[0] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v102.val[0], v103.val[0]), (int8x16_t)v103.val[0], (int8x16_t)v102.val[0]);
              v104.val[1] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v102.val[1], v103.val[1]), (int8x16_t)v103.val[1], (int8x16_t)v102.val[1]);
              v104.val[2] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v102.val[2], v103.val[2]), (int8x16_t)v103.val[2], (int8x16_t)v102.val[2]);
              v104.val[3] = (float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v102.val[3], v103.val[3]), (int8x16_t)v103.val[3], (int8x16_t)v102.val[3]);
              uint64_t v74 = (float *)(a5 + v70);
              vst4q_f32(v74, v104);
              v70 += 64;
              v71 -= 4;
            }
            while (v71);
            unint64_t v63 = v97 & 0x7FFFFFFC;
            uint64_t v65 = (16 * ((v63 >> 2) & 0x1FFFFFFF)) | 4;
            uint64_t v75 = 4 * v63;
            unint64_t v64 = v75;
            unint64_t v76 = v63 - 1;
            if (v97 == v63) {
              goto LABEL_71;
            }
          }
        }
        else
        {
          uint64_t v65 = 4;
          unint64_t v64 = 0;
        }
      }
      else
      {
        unint64_t v63 = 0;
        unint64_t v64 = 0;
        uint64_t v65 = 4;
      }
      unint64_t v76 = v63 - 1;
      uint64_t v75 = v65 - 4;
      uint64_t v77 = 4 * v64;
      unint64_t v78 = v56;
      unint64_t v79 = v55;
      unint64_t v80 = a5;
      do
      {
        float v81 = *(float *)(v79 + v77);
        if (*(float *)(v78 + v77) < v81) {
          float v81 = *(float *)(v78 + v77);
        }
        unint64_t v82 = v79 + v77;
        float v83 = *(float *)(v79 + v77 + 4);
        unint64_t v84 = v78 + v77;
        if (*(float *)(v78 + v77 + 4) < v83) {
          float v83 = *(float *)(v78 + v77 + 4);
        }
        *(float *)(v80 + v77) = v81;
        unint64_t v85 = v80 + v77;
        *(float *)(v80 + v77 + 4) = v83;
        float v86 = *(float *)(v82 + 8);
        float v87 = *(float *)(v82 + 12);
        if (*(float *)(v84 + 8) < v86) {
          float v86 = *(float *)(v84 + 8);
        }
        if (*(float *)(v84 + 12) < v87) {
          float v87 = *(float *)(v84 + 12);
        }
        v64 += 4;
        ++v76;
        v75 += 4;
        *(float *)(v85 + 8) = v86;
        *(float *)(v85 + 12) = v87;
        v80 += 16;
        v79 += 16;
        v78 += 16;
      }
      while (v64 <= v10);
LABEL_71:
      if ((int)v64 < a7)
      {
        if (v100 < 0xC
          || (uint64_t v90 = 16 * v76 + v99 + v60, v90 - (16 * v76 + v98 + v61) < 0x20)
          || v90 - (16 * v76 + v95 + v62) < 0x20)
        {
          unint64_t v88 = v75;
          do
          {
LABEL_74:
            float v89 = *(float *)(v55 + 4 * v88);
            if (*(float *)(v56 + 4 * v88) < v89) {
              float v89 = *(float *)(v56 + 4 * v88);
            }
            *(float *)(a5 + 4 * v88++) = v89;
          }
          while (v88 < a7);
          goto LABEL_43;
        }
        unint64_t v91 = v100 & 0xFFFFFFFFFFFFFFF8;
        unint64_t v88 = v75 + v96;
        uint64_t v92 = 4 * v75;
        do
        {
          int8x16_t v93 = vbslq_s8((int8x16_t)vcgtq_f32(*(float32x4_t *)(v55 + v92 + 16), *(float32x4_t *)(v56 + v92 + 16)), *(int8x16_t *)(v56 + v92 + 16), *(int8x16_t *)(v55 + v92 + 16));
          unint64_t v94 = (int8x16_t *)(a5 + v92);
          *unint64_t v94 = vbslq_s8((int8x16_t)vcgtq_f32(*(float32x4_t *)(v55 + v92), *(float32x4_t *)(v56 + v92)), *(int8x16_t *)(v56 + v92), *(int8x16_t *)(v55 + v92));
          v94[1] = v93;
          v92 += 32;
          v91 -= 8;
        }
        while (v91);
        if (v100 != v96) {
          goto LABEL_74;
        }
      }
LABEL_43:
      v55 += a2;
      v56 += a4;
      a5 += a6;
      int v9 = v59 - 1;
      ++v52;
      uint64_t result = v101;
      a3 = v57;
      unint64_t v8 = v58;
      if (!v59) {
        return result;
      }
    }
  }
  if (a7 >= 1)
  {
    uint8x16_t v11 = (float *)(a5 + 8);
    uint64_t v12 = (float *)(a3 + 8);
    int v13 = (float *)(result + 4);
    do
    {
      float v14 = *(v13 - 1);
      if (*(v12 - 2) < v14) {
        float v14 = *(v12 - 2);
      }
      *(v11 - 2) = v14;
      if (a7 != 1)
      {
        float v15 = *v13;
        if (*(v12 - 1) < *v13) {
          float v15 = *(v12 - 1);
        }
        *(v11 - 1) = v15;
        if (a7 != 2)
        {
          float v16 = v13[1];
          if (*v12 < v16) {
            float v16 = *v12;
          }
          *uint8x16_t v11 = v16;
        }
      }
      uint8x16_t v11 = (float *)((char *)v11 + a6);
      uint64_t v12 = (float *)((char *)v12 + a4);
      int v13 = (float *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_10021C528(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  if (!a8) {
    return result;
  }
  unint64_t v8 = a3;
  unint64_t v9 = result;
  unint64_t v10 = (a7 - 4);
  if (a7 >= 4)
  {
    uint64_t v17 = 0;
    int v18 = a8 - 1;
    uint64_t v19 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
    uint64_t v61 = v19 + a5 + 32;
    uint64_t v60 = v19 + result + 32;
    uint64_t v58 = v19 + a3 + 32;
    unint64_t v20 = (v10 & 0xFFFFFFFC) + 5;
    if (v20 <= a7) {
      unint64_t v20 = a7;
    }
    uint64_t v21 = 32 * (v10 >> 2) + 32;
    uint64_t v59 = (v10 >> 2) + 1;
    unint64_t v62 = v20 - (v10 & 0xFFFFFFFC) - 4;
    unint64_t v57 = v20 & 3;
    unint64_t v22 = a5 + 16;
    unint64_t v23 = a5;
    while (1)
    {
      int v24 = v18;
      uint64_t v25 = v17 * a6;
      uint64_t v26 = v17 * a2;
      uint64_t v27 = v17 * a4;
      if (v10 < 4) {
        break;
      }
      unint64_t v28 = 0;
      unint64_t v29 = a5 + v21 + v25;
      BOOL v31 = v23 < v8 + v21 + v27 && a3 < v29;
      if (result < v29 && v23 < v9 + v21 + v26) {
        goto LABEL_36;
      }
      if (v31) {
        goto LABEL_36;
      }
      uint64_t v33 = 0;
      uint64_t v34 = v59 & 0x7FFFFFFE;
      do
      {
        uint64_t v35 = (const double *)(result + v33);
        float64x2x4_t v63 = vld4q_f64(v35);
        uint64_t v36 = (const double *)(a3 + v33);
        float64x2x4_t v64 = vld4q_f64(v36);
        v65.val[0] = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v63.val[0], v64.val[0]), (int8x16_t)v64.val[0], (int8x16_t)v63.val[0]);
        v65.val[1] = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v63.val[1], v64.val[1]), (int8x16_t)v64.val[1], (int8x16_t)v63.val[1]);
        v65.val[2] = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v63.val[2], v64.val[2]), (int8x16_t)v64.val[2], (int8x16_t)v63.val[2]);
        v65.val[3] = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v63.val[3], v64.val[3]), (int8x16_t)v64.val[3], (int8x16_t)v63.val[3]);
        float v37 = (double *)(v23 + v33);
        vst4q_f64(v37, v65);
        v33 += 64;
        v34 -= 2;
      }
      while (v34);
      unint64_t v28 = 4 * (v59 & 0x7FFFFFFE);
      if (v59 != (v59 & 0x7FFFFFFE)) {
        goto LABEL_36;
      }
LABEL_47:
      if ((int)v28 < a7)
      {
        unint64_t v51 = (v10 & 0xFFFFFFFC) + 4;
        if (v62 < 6) {
          goto LABEL_60;
        }
        unint64_t v51 = (v10 & 0xFFFFFFFC) + 4;
        if ((unint64_t)(v61 + v25 - (v60 + v26)) < 0x20) {
          goto LABEL_60;
        }
        unint64_t v51 = (v10 & 0xFFFFFFFC) + 4;
        if ((unint64_t)(v61 + v25 - (v58 + v27)) < 0x20) {
          goto LABEL_60;
        }
        uint64_t v52 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
        unint64_t v53 = v62 - v57;
        do
        {
          int8x16_t v54 = vbslq_s8((int8x16_t)vcgtq_f64(*(float64x2_t *)(result + v52 + 48), *(float64x2_t *)(a3 + v52 + 48)), *(int8x16_t *)(a3 + v52 + 48), *(int8x16_t *)(result + v52 + 48));
          unint64_t v55 = (int8x16_t *)(v23 + v52);
          v55[2] = vbslq_s8((int8x16_t)vcgtq_f64(*(float64x2_t *)(result + v52 + 32), *(float64x2_t *)(a3 + v52 + 32)), *(int8x16_t *)(a3 + v52 + 32), *(int8x16_t *)(result + v52 + 32));
          v55[3] = v54;
          v52 += 32;
          v53 -= 4;
        }
        while (v53);
        unint64_t v51 = (v10 & 0xFFFFFFFC) + 4 + v62 - v57;
        if (v57)
        {
LABEL_60:
          do
          {
            double v56 = *(double *)(result + 8 * v51);
            if (*(double *)(a3 + 8 * v51) < v56) {
              double v56 = *(double *)(a3 + 8 * v51);
            }
            *(double *)(v23 + 8 * v51++) = v56;
          }
          while (v51 < a7);
        }
      }
      result += a2;
      a3 += a4;
      v23 += a6;
      int v18 = v24 - 1;
      ++v17;
      v22 += a6;
      if (!v24) {
        return result;
      }
    }
    unint64_t v28 = 0;
LABEL_36:
    uint64_t v38 = 8 * v28;
    unint64_t v39 = v22;
    unint64_t v40 = a3;
    unint64_t v41 = result;
    do
    {
      double v42 = *(double *)(v41 + v38);
      if (*(double *)(v40 + v38) < v42) {
        double v42 = *(double *)(v40 + v38);
      }
      unint64_t v43 = v41 + v38;
      double v44 = *(double *)(v41 + v38 + 8);
      unint64_t v45 = v40 + v38;
      if (*(double *)(v40 + v38 + 8) < v44) {
        double v44 = *(double *)(v40 + v38 + 8);
      }
      unint64_t v46 = v39 + v38;
      *(double *)(v46 - 16) = v42;
      *(double *)(v46 - 8) = v44;
      double v47 = *(double *)(v43 + 16);
      double v48 = *(double *)(v43 + 24);
      double v49 = *(double *)(v45 + 24);
      if (*(double *)(v45 + 16) < v47) {
        double v47 = *(double *)(v45 + 16);
      }
      *(double *)(v39 + v38) = v47;
      v28 += 4;
      if (v49 >= v48) {
        double v50 = v48;
      }
      else {
        double v50 = v49;
      }
      *(double *)(v46 + 8) = v50;
      v41 += 32;
      v40 += 32;
      v39 += 32;
    }
    while (v28 <= v10);
    goto LABEL_47;
  }
  if (a7 >= 1)
  {
    uint8x16_t v11 = (double *)(a5 + 16);
    uint64_t v12 = (double *)(a3 + 16);
    int v13 = (double *)(result + 8);
    do
    {
      double v14 = *(v13 - 1);
      if (*(v12 - 2) < v14) {
        double v14 = *(v12 - 2);
      }
      *(v11 - 2) = v14;
      if (a7 != 1)
      {
        double v15 = *v13;
        if (*(v12 - 1) < *v13) {
          double v15 = *(v12 - 1);
        }
        *(v11 - 1) = v15;
        if (a7 != 2)
        {
          double v16 = v13[1];
          if (*v12 < v16) {
            double v16 = *v12;
          }
          *uint8x16_t v11 = v16;
        }
      }
      uint8x16_t v11 = (double *)((char *)v11 + a6);
      uint64_t v12 = (double *)((char *)v12 + a4);
      int v13 = (double *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_10021C8B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  if (a8)
  {
    uint64_t v8 = 0;
    uint64_t v9 = a7 - 4;
    uint64_t v10 = result;
    uint64_t v11 = a3;
    uint64_t v12 = a5;
    do
    {
      if (a7 >= 32)
      {
        uint64_t v14 = 16;
        do
        {
          uint8x16_t v15 = vabdq_u8(*(uint8x16_t *)(v10 + v14), *(uint8x16_t *)(v11 + v14));
          double v16 = (uint8x16_t *)(v12 + v14);
          v16[-1] = vabdq_u8(*(uint8x16_t *)(v10 + v14 - 16), *(uint8x16_t *)(v11 + v14 - 16));
          *double v16 = v15;
          uint64_t v17 = v14 + 16;
          v14 += 32;
        }
        while (v17 <= a7 - 32);
        uint64_t v13 = (v14 - 16);
        if ((int)v13 > (int)v9) {
          goto LABEL_22;
        }
      }
      else
      {
        uint64_t v13 = 0;
        if ((int)v9 < 0) {
          goto LABEL_22;
        }
      }
      uint64_t v18 = v13 << 32;
      do
      {
        unsigned int v19 = *(unsigned __int8 *)(v10 + v13);
        unsigned int v20 = *(unsigned __int8 *)(v11 + v13);
        char v21 = v20 - v19;
        BOOL v22 = v19 >= v20;
        unsigned int v23 = v19 - v20;
        if (v23 == 0 || !v22) {
          LOBYTE(v23) = v21;
        }
        uint64_t v24 = v18 >> 32;
        uint64_t v25 = (v18 >> 32) | 1;
        unsigned int v26 = *(unsigned __int8 *)(v10 + v25);
        unsigned int v27 = *(unsigned __int8 *)(v11 + v25);
        char v28 = v27 - v26;
        BOOL v22 = v26 >= v27;
        unsigned int v29 = v26 - v27;
        if (v29 == 0 || !v22) {
          LOBYTE(v29) = v28;
        }
        *(unsigned char *)(v12 + v13) = v23;
        *(unsigned char *)(v12 + v25) = v29;
        uint64_t v30 = v24 | 2;
        unsigned int v31 = *(unsigned __int8 *)(v10 + (v24 | 2));
        unsigned int v32 = *(unsigned __int8 *)(v11 + (v24 | 2));
        char v33 = v32 - v31;
        BOOL v22 = v31 >= v32;
        unsigned int v34 = v31 - v32;
        if (v34 == 0 || !v22) {
          LOBYTE(v34) = v33;
        }
        uint64_t v35 = v24 | 3;
        unsigned int v36 = *(unsigned __int8 *)(v10 + v35);
        unsigned int v37 = *(unsigned __int8 *)(v11 + v35);
        char v38 = v37 - v36;
        BOOL v22 = v36 >= v37;
        unsigned int v39 = v36 - v37;
        *(unsigned char *)(v12 + v30) = v34;
        if (v39 != 0 && v22) {
          char v40 = v39;
        }
        else {
          char v40 = v38;
        }
        *(unsigned char *)(v12 + v35) = v40;
        v13 += 4;
        v18 += 0x400000000;
      }
      while (v13 <= v9);
      uint64_t v13 = v13;
LABEL_22:
      if ((int)v13 < a7)
      {
        unint64_t v41 = a7 - v13;
        if (v41 < 8)
        {
          uint64_t v42 = v13;
          goto LABEL_25;
        }
        if ((unint64_t)(a5 + v8 * a6 - (result + v8 * a2)) < 0x20)
        {
          uint64_t v42 = v13;
          goto LABEL_25;
        }
        if ((unint64_t)(a5 + v8 * a6 - (a3 + v8 * a4)) < 0x20)
        {
          uint64_t v42 = v13;
          goto LABEL_25;
        }
        if (v41 >= 0x20)
        {
          unint64_t v47 = v41 & 0xFFFFFFFFFFFFFFE0;
          uint64_t v48 = v13;
          unint64_t v49 = v41 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            uint8x16_t v50 = vabdq_u8(*(uint8x16_t *)(v10 + v48 + 16), *(uint8x16_t *)(v11 + v48 + 16));
            unint64_t v51 = (uint8x16_t *)(v12 + v48);
            *unint64_t v51 = vabdq_u8(*(uint8x16_t *)(v10 + v48), *(uint8x16_t *)(v11 + v48));
            v51[1] = v50;
            v48 += 32;
            v49 -= 32;
          }
          while (v49);
          if (v41 == v47) {
            goto LABEL_3;
          }
          if ((v41 & 0x18) == 0)
          {
            uint64_t v42 = v47 + v13;
            do
            {
LABEL_25:
              unsigned int v43 = *(unsigned __int8 *)(v10 + v42);
              unsigned int v44 = *(unsigned __int8 *)(v11 + v42);
              char v45 = v44 - v43;
              BOOL v22 = v43 >= v44;
              unsigned int v46 = v43 - v44;
              if (v46 == 0 || !v22) {
                LOBYTE(v46) = v45;
              }
              *(unsigned char *)(v12 + v42++) = v46;
            }
            while (a7 != v42);
            goto LABEL_3;
          }
        }
        else
        {
          unint64_t v47 = 0;
        }
        uint64_t v42 = (v41 & 0xFFFFFFFFFFFFFFF8) + v13;
        unint64_t v52 = v47 - (v41 & 0xFFFFFFFFFFFFFFF8);
        uint64_t v53 = v47 + v13;
        do
        {
          *(uint8x8_t *)(v12 + v53) = vabd_u8(*(uint8x8_t *)(v10 + v53), *(uint8x8_t *)(v11 + v53));
          v53 += 8;
          v52 += 8;
        }
        while (v52);
        if (v41 != (v41 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_25;
        }
      }
LABEL_3:
      v10 += a2;
      v11 += a4;
      v12 += a6;
      ++v8;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_10021CB14(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  if (a8)
  {
    uint64_t v8 = 0;
    uint64_t v9 = a7 - 4;
    v10.i64[0] = 0x7F0000007FLL;
    v10.i64[1] = 0x7F0000007FLL;
    uint64_t v11 = result;
    uint64_t v12 = a3;
    uint64_t v13 = a5;
    do
    {
      if (a7 >= 32)
      {
        uint64_t v15 = 16;
        do
        {
          int8x16_t v16 = vqabsq_s8(vqsubq_s8(*(int8x16_t *)(v11 + v15), *(int8x16_t *)(v12 + v15)));
          uint64_t v17 = (int8x16_t *)(v13 + v15);
          v17[-1] = vqabsq_s8(vqsubq_s8(*(int8x16_t *)(v11 + v15 - 16), *(int8x16_t *)(v12 + v15 - 16)));
          *uint64_t v17 = v16;
          uint64_t v18 = v15 + 16;
          v15 += 32;
        }
        while (v18 <= a7 - 32);
        uint64_t v14 = (v15 - 16);
        if ((int)v14 > (int)v9)
        {
LABEL_6:
          if ((int)v14 >= a7) {
            goto LABEL_3;
          }
          goto LABEL_31;
        }
      }
      else
      {
        uint64_t v14 = 0;
        if ((int)v9 < 0) {
          goto LABEL_6;
        }
      }
      uint64_t v19 = v14 << 32;
      do
      {
        int v20 = *(char *)(v11 + v14) - *(char *)(v12 + v14);
        if (v20 < 0) {
          int v20 = *(char *)(v12 + v14) - *(char *)(v11 + v14);
        }
        uint64_t v21 = v19 >> 32;
        uint64_t v22 = (v19 >> 32) | 1;
        if (v20 >= 127) {
          LOBYTE(v20) = 127;
        }
        int v23 = *(char *)(v11 + v22) - *(char *)(v12 + v22);
        if (v23 < 0) {
          int v23 = *(char *)(v12 + v22) - *(char *)(v11 + v22);
        }
        if (v23 >= 127) {
          LOBYTE(v23) = 127;
        }
        *(unsigned char *)(v13 + v14) = v20;
        *(unsigned char *)(v13 + v22) = v23;
        uint64_t v24 = v21 | 2;
        int v25 = *(char *)(v11 + (v21 | 2)) - *(char *)(v12 + (v21 | 2));
        if (v25 < 0) {
          int v25 = *(char *)(v12 + (v21 | 2)) - *(char *)(v11 + (v21 | 2));
        }
        uint64_t v26 = v21 | 3;
        if (v25 >= 127) {
          LOBYTE(v25) = 127;
        }
        int v27 = *(char *)(v11 + v26) - *(char *)(v12 + v26);
        if (v27 < 0) {
          int v27 = *(char *)(v12 + v26) - *(char *)(v11 + v26);
        }
        *(unsigned char *)(v13 + v24) = v25;
        if (v27 >= 127) {
          char v28 = 127;
        }
        else {
          char v28 = v27;
        }
        *(unsigned char *)(v13 + v26) = v28;
        v14 += 4;
        v19 += 0x400000000;
      }
      while (v14 <= v9);
      uint64_t v14 = v14;
      if ((int)v14 >= a7) {
        goto LABEL_3;
      }
LABEL_31:
      unint64_t v29 = a7 - v14;
      if (v29 < 8)
      {
        uint64_t v30 = v14;
        goto LABEL_49;
      }
      if ((unint64_t)(a5 + v8 * a6 - (result + v8 * a2)) < 0x10
        || (unint64_t)(a5 + v8 * a6 - (a3 + v8 * a4)) < 0x10)
      {
        uint64_t v30 = v14;
        goto LABEL_49;
      }
      if (v29 >= 0x10)
      {
        unint64_t v32 = v29 & 0xFFFFFFFFFFFFFFF0;
        uint64_t v36 = v14;
        unint64_t v37 = v29 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          uint8x16_t v38 = (uint8x16_t)vabdq_s8(*(int8x16_t *)(v11 + v36), *(int8x16_t *)(v12 + v36));
          uint16x8_t v39 = vmovl_u8(*(uint8x8_t *)v38.i8);
          uint16x8_t v40 = vmovl_high_u8(v38);
          v43.val[3] = (int8x16_t)vminq_s32((int32x4_t)vmovl_high_u16(v40), v10);
          v43.val[2] = (int8x16_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v40.i8), v10);
          v43.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmovl_high_u16(v39), v10);
          v43.val[0] = (int8x16_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v39.i8), v10);
          *(int8x16_t *)(v13 + v36) = vqtbl4q_s8(v43, (int8x16_t)xmmword_1004047C0);
          v36 += 16;
          v37 -= 16;
        }
        while (v37);
        if (v29 == v32) {
          goto LABEL_3;
        }
        if ((v29 & 8) == 0)
        {
          uint64_t v30 = v32 + v14;
          do
          {
LABEL_49:
            int v41 = *(char *)(v11 + v30) - *(char *)(v12 + v30);
            if (v41 < 0) {
              int v41 = *(char *)(v12 + v30) - *(char *)(v11 + v30);
            }
            if (v41 >= 127) {
              LOBYTE(v41) = 127;
            }
            *(unsigned char *)(v13 + v30++) = v41;
          }
          while (a7 != v30);
          goto LABEL_3;
        }
      }
      else
      {
        unint64_t v32 = 0;
      }
      uint64_t v30 = (v29 & 0xFFFFFFFFFFFFFFF8) + v14;
      unint64_t v33 = v32 - (v29 & 0xFFFFFFFFFFFFFFF8);
      uint64_t v34 = v32 + v14;
      do
      {
        uint16x8_t v35 = (uint16x8_t)vabdl_s8(*(int8x8_t *)(v11 + v34), *(int8x8_t *)(v12 + v34));
        v42.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmovl_high_u16(v35), v10);
        v42.val[0] = (int8x16_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v35.i8), v10);
        *(void *)(v13 + v34) = vqtbl2q_s8(v42, (int8x16_t)xmmword_1004047D0).u64[0];
        v34 += 8;
        v33 += 8;
      }
      while (v33);
      if (v29 != (v29 & 0xFFFFFFFFFFFFFFF8)) {
        goto LABEL_49;
      }
LABEL_3:
      v11 += a2;
      v12 += a4;
      v13 += a6;
      ++v8;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_10021CDD0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  if (a8)
  {
    uint64_t v8 = 0;
    uint64_t v9 = a7 - 4;
    uint64_t v10 = result;
    uint64_t v11 = a3;
    uint64_t v12 = a5;
    do
    {
      if (a7 >= 16)
      {
        uint64_t v13 = 0;
        uint64_t v14 = 16;
        do
        {
          uint16x8_t v15 = vabdq_u16(*(uint16x8_t *)(v10 + v14), *(uint16x8_t *)(v11 + v14));
          int8x16_t v16 = (uint16x8_t *)(v12 + v14);
          v16[-1] = vabdq_u16(*(uint16x8_t *)(v10 + v14 - 16), *(uint16x8_t *)(v11 + v14 - 16));
          *int8x16_t v16 = v15;
          v13 += 16;
          v14 += 32;
        }
        while (v13 <= a7 - 16);
        uint64_t v13 = v13;
        if ((int)v13 <= (int)v9)
        {
LABEL_10:
          uint64_t v17 = v13 << 32;
          do
          {
            unsigned int v18 = *(unsigned __int16 *)(v10 + 2 * v13);
            unsigned int v19 = *(unsigned __int16 *)(v11 + 2 * v13);
            __int16 v20 = v19 - v18;
            BOOL v21 = v18 >= v19;
            unsigned int v22 = v18 - v19;
            if (v22 == 0 || !v21) {
              LOWORD(v22) = v20;
            }
            uint64_t v23 = v17 >> 31;
            uint64_t v24 = (v17 >> 31) | 2;
            unsigned int v25 = *(unsigned __int16 *)(v10 + v24);
            unsigned int v26 = *(unsigned __int16 *)(v11 + v24);
            __int16 v27 = v26 - v25;
            BOOL v21 = v25 >= v26;
            unsigned int v28 = v25 - v26;
            if (v28 == 0 || !v21) {
              LOWORD(v28) = v27;
            }
            *(_WORD *)(v12 + 2 * v13) = v22;
            *(_WORD *)(v12 + v24) = v28;
            uint64_t v29 = v23 | 4;
            unsigned int v30 = *(unsigned __int16 *)(v10 + (v23 | 4));
            unsigned int v31 = *(unsigned __int16 *)(v11 + (v23 | 4));
            __int16 v32 = v31 - v30;
            BOOL v21 = v30 >= v31;
            unsigned int v33 = v30 - v31;
            if (v33 == 0 || !v21) {
              LOWORD(v33) = v32;
            }
            uint64_t v34 = v23 | 6;
            unsigned int v35 = *(unsigned __int16 *)(v10 + v34);
            unsigned int v36 = *(unsigned __int16 *)(v11 + v34);
            __int16 v37 = v36 - v35;
            BOOL v21 = v35 >= v36;
            unsigned int v38 = v35 - v36;
            *(_WORD *)(v12 + v29) = v33;
            if (v38 != 0 && v21) {
              __int16 v39 = v38;
            }
            else {
              __int16 v39 = v37;
            }
            *(_WORD *)(v12 + v34) = v39;
            v13 += 4;
            v17 += 0x400000000;
          }
          while (v13 <= v9);
          uint64_t v13 = v13;
        }
      }
      else
      {
        uint64_t v13 = 0;
        if ((int)v9 >= 0) {
          goto LABEL_10;
        }
      }
      if ((int)v13 < a7)
      {
        unint64_t v40 = a7 - v13;
        if (v40 < 0x10) {
          goto LABEL_36;
        }
        uint64_t v45 = 2 * v13;
        uint64_t v46 = a5 + v8 * a6 + 2 * v13;
        if ((unint64_t)(v46 - (result + v8 * a2 + 2 * v13)) < 0x20) {
          goto LABEL_36;
        }
        if ((unint64_t)(v46 - (a3 + v8 * a4 + v45)) < 0x20) {
          goto LABEL_36;
        }
        v13 += v40 & 0xFFFFFFFFFFFFFFF0;
        unint64_t v47 = v40 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          uint16x8_t v48 = vabdq_u16(*(uint16x8_t *)(v10 + v45 + 16), *(uint16x8_t *)(v11 + v45 + 16));
          unint64_t v49 = (uint16x8_t *)(v12 + v45);
          *unint64_t v49 = vabdq_u16(*(uint16x8_t *)(v10 + v45), *(uint16x8_t *)(v11 + v45));
          v49[1] = v48;
          v45 += 32;
          v47 -= 16;
        }
        while (v47);
        if (v40 != (v40 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_36:
          do
          {
            unsigned int v41 = *(unsigned __int16 *)(v10 + 2 * v13);
            unsigned int v42 = *(unsigned __int16 *)(v11 + 2 * v13);
            __int16 v43 = v42 - v41;
            BOOL v21 = v41 >= v42;
            unsigned int v44 = v41 - v42;
            if (v44 == 0 || !v21) {
              LOWORD(v44) = v43;
            }
            *(_WORD *)(v12 + 2 * v13++) = v44;
          }
          while (a7 != v13);
        }
      }
      v10 += a2;
      v11 += a4;
      v12 += a6;
      ++v8;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_10021CFE4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  if (a8)
  {
    uint64_t v8 = 0;
    uint64_t v9 = a7 - 4;
    v10.i64[0] = 0x7F0000007FLL;
    v10.i64[1] = 0x7F0000007FLL;
    uint64_t v11 = result;
    uint64_t v12 = a3;
    uint64_t v13 = a5;
    do
    {
      if (a7 >= 16)
      {
        uint64_t v14 = 0;
        uint64_t v15 = 16;
        do
        {
          int16x8_t v16 = vqabsq_s16(vqsubq_s16(*(int16x8_t *)(v11 + v15), *(int16x8_t *)(v12 + v15)));
          uint64_t v17 = (int16x8_t *)(v13 + v15);
          v17[-1] = vqabsq_s16(vqsubq_s16(*(int16x8_t *)(v11 + v15 - 16), *(int16x8_t *)(v12 + v15 - 16)));
          *uint64_t v17 = v16;
          v14 += 16;
          v15 += 32;
        }
        while (v14 <= a7 - 16);
        uint64_t v14 = v14;
        if ((int)v14 <= (int)v9)
        {
LABEL_10:
          uint64_t v18 = v14 << 32;
          do
          {
            int v19 = *(__int16 *)(v11 + 2 * v14) - *(__int16 *)(v12 + 2 * v14);
            if (v19 < 0) {
              int v19 = *(__int16 *)(v12 + 2 * v14) - *(__int16 *)(v11 + 2 * v14);
            }
            uint64_t v20 = v18 >> 31;
            uint64_t v21 = (v18 >> 31) | 2;
            if (v19 >= 0x7FFF) {
              LOWORD(v19) = 0x7FFF;
            }
            int v22 = *(__int16 *)(v11 + v21) - *(__int16 *)(v12 + v21);
            if (v22 < 0) {
              int v22 = *(__int16 *)(v12 + v21) - *(__int16 *)(v11 + v21);
            }
            if (v22 >= 0x7FFF) {
              LOWORD(v22) = 0x7FFF;
            }
            *(_WORD *)(v13 + 2 * v14) = v19;
            *(_WORD *)(v13 + v21) = v22;
            uint64_t v23 = v20 | 4;
            int v24 = *(__int16 *)(v11 + (v20 | 4)) - *(__int16 *)(v12 + (v20 | 4));
            if (v24 < 0) {
              int v24 = *(__int16 *)(v12 + (v20 | 4)) - *(__int16 *)(v11 + (v20 | 4));
            }
            uint64_t v25 = v20 | 6;
            if (v24 >= 0x7FFF) {
              LOWORD(v24) = 0x7FFF;
            }
            int v26 = *(__int16 *)(v11 + v25) - *(__int16 *)(v12 + v25);
            if (v26 < 0) {
              int v26 = *(__int16 *)(v12 + v25) - *(__int16 *)(v11 + v25);
            }
            *(_WORD *)(v13 + v23) = v24;
            if (v26 >= 0x7FFF) {
              __int16 v27 = 0x7FFF;
            }
            else {
              __int16 v27 = v26;
            }
            *(_WORD *)(v13 + v25) = v27;
            v14 += 4;
            v18 += 0x400000000;
          }
          while (v14 <= v9);
          uint64_t v14 = v14;
        }
      }
      else
      {
        uint64_t v14 = 0;
        if ((int)v9 >= 0) {
          goto LABEL_10;
        }
      }
      if ((int)v14 < a7)
      {
        unint64_t v28 = a7 - v14;
        if (v28 < 0x10) {
          goto LABEL_46;
        }
        uint64_t v30 = 2 * v14;
        uint64_t v31 = a5 + v8 * a6 + 2 * v14;
        if ((unint64_t)(v31 - (result + v8 * a2 + 2 * v14)) < 0x20) {
          goto LABEL_46;
        }
        if ((unint64_t)(v31 - (a3 + v8 * a4 + v30)) < 0x20) {
          goto LABEL_46;
        }
        v14 += v28 & 0xFFFFFFFFFFFFFFF0;
        unint64_t v32 = v28 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          uint16x8_t v33 = (uint16x8_t)vabdq_s16(*(int16x8_t *)(v11 + v30), *(int16x8_t *)(v12 + v30));
          uint16x8_t v34 = (uint16x8_t)vabdq_s16(*(int16x8_t *)(v11 + v30 + 16), *(int16x8_t *)(v12 + v30 + 16));
          unsigned int v35 = (int16x8_t *)(v13 + v30);
          *unsigned int v35 = vuzp1q_s16((int16x8_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v33.i8), v10), (int16x8_t)vminq_s32((int32x4_t)vmovl_high_u16(v33), v10));
          v35[1] = vuzp1q_s16((int16x8_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v34.i8), v10), (int16x8_t)vminq_s32((int32x4_t)vmovl_high_u16(v34), v10));
          v30 += 32;
          v32 -= 16;
        }
        while (v32);
        if (v28 != (v28 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_46:
          do
          {
            int v29 = *(__int16 *)(v11 + 2 * v14) - *(__int16 *)(v12 + 2 * v14);
            if (v29 < 0) {
              int v29 = *(__int16 *)(v12 + 2 * v14) - *(__int16 *)(v11 + 2 * v14);
            }
            if (v29 >= 0x7FFF) {
              LOWORD(v29) = 0x7FFF;
            }
            *(_WORD *)(v13 + 2 * v14++) = v29;
          }
          while (a7 != v14);
        }
      }
      v11 += a2;
      v12 += a4;
      v13 += a6;
      ++v8;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_10021D240(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v47 = result;
  if (a8)
  {
    uint64_t v8 = 0;
    uint64_t v9 = a7 - 8;
    uint64_t v10 = a7 - 4;
    uint64_t v11 = result;
    uint64_t v12 = a5;
    uint64_t v13 = a5 + 12;
    uint64_t v14 = a3;
    uint64_t v15 = a3 + 12;
    uint64_t v16 = result + 12;
    uint64_t v17 = a5 + 4;
    uint64_t v18 = a3 + 4;
    uint64_t v19 = result + 4;
    uint64_t v20 = a7;
    int v52 = a7;
    uint64_t v50 = a4;
    uint64_t v51 = a6;
    uint64_t v49 = a2;
    do
    {
      if (a7 >= 8)
      {
        uint64_t v22 = 0;
        uint64_t v23 = 0;
        do
        {
          int32x4_t v24 = vabdq_s32(*(int32x4_t *)(v11 + v22 + 16), *(int32x4_t *)(v14 + v22 + 16));
          uint64_t v25 = (int32x4_t *)(v12 + v22);
          *uint64_t v25 = vabdq_s32(*(int32x4_t *)(v11 + v22), *(int32x4_t *)(v14 + v22));
          v25[1] = v24;
          v23 += 8;
          v22 += 32;
        }
        while (v23 <= v9);
        uint64_t v21 = v23;
        if ((int)v23 <= (int)v10)
        {
LABEL_10:
          uint64_t v53 = v8;
          uint64_t v26 = 0;
          uint64_t v27 = (4 * v21) & 0x3FFFFFFF0;
          uint64_t v28 = v13 + v27;
          uint64_t v29 = v15 + v27;
          uint64_t v30 = v16 + v27;
          uint64_t v31 = (4 * v21) & 0x3FFFFFFF8;
          uint64_t v32 = v17 + v31;
          uint64_t v33 = v18 + v31;
          uint64_t v34 = v19 + v31;
          do
          {
            int v35 = *(_DWORD *)(v11 + 4 * v21 + 4 * v26) - *(_DWORD *)(v14 + 4 * v21 + 4 * v26);
            if (v35 < 0) {
              int v35 = *(_DWORD *)(v14 + 4 * v21 + 4 * v26) - *(_DWORD *)(v11 + 4 * v21 + 4 * v26);
            }
            int v36 = *(_DWORD *)(v34 + 4 * v26) - *(_DWORD *)(v33 + 4 * v26);
            if (v36 < 0) {
              int v36 = *(_DWORD *)(v33 + 4 * v26) - *(_DWORD *)(v34 + 4 * v26);
            }
            *(_DWORD *)(v12 + 4 * v21 + 4 * v26) = v35;
            *(_DWORD *)(v32 + 4 * v26) = v36;
            uint64_t v37 = (4 * (v21 + v26)) | 8;
            int v38 = *(_DWORD *)(v11 + v37) - *(_DWORD *)(v14 + v37);
            if (v38 < 0) {
              int v38 = *(_DWORD *)(v14 + v37) - *(_DWORD *)(v11 + v37);
            }
            int v39 = *(_DWORD *)(v30 + 4 * v26) - *(_DWORD *)(v29 + 4 * v26);
            *(_DWORD *)(v12 + v37) = v38;
            if (v39 < 0) {
              int v39 = -v39;
            }
            *(_DWORD *)(v28 + 4 * v26) = v39;
            v26 += 4;
            uint64_t result = v21 + v26;
          }
          while (v21 + v26 <= v10);
          uint64_t v21 = (v21 + v26);
          a7 = v52;
          a4 = v50;
          a6 = v51;
          a2 = v49;
          uint64_t v8 = v53;
        }
      }
      else
      {
        uint64_t v21 = 0;
        if ((int)v10 >= 0) {
          goto LABEL_10;
        }
      }
      if ((int)v21 < a7)
      {
        uint64_t v40 = v20 - v21;
        if ((unint64_t)(v20 - v21) < 8) {
          goto LABEL_36;
        }
        uint64_t v41 = 4 * v21;
        uint64_t v42 = a5 + v8 * a6 + 4 * v21;
        if ((unint64_t)(v42 - (v47 + v8 * a2 + 4 * v21)) < 0x20) {
          goto LABEL_36;
        }
        uint64_t result = a3;
        if ((unint64_t)(v42 - (a3 + v8 * a4 + v41)) < 0x20) {
          goto LABEL_36;
        }
        v21 += v40 & 0xFFFFFFFFFFFFFFF8;
        unint64_t v43 = v40 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          int32x4_t v44 = vabdq_s32(*(int32x4_t *)(v11 + v41 + 16), *(int32x4_t *)(v14 + v41 + 16));
          uint64_t v45 = (int32x4_t *)(v12 + v41);
          int32x4_t *v45 = vabdq_s32(*(int32x4_t *)(v11 + v41), *(int32x4_t *)(v14 + v41));
          v45[1] = v44;
          v41 += 32;
          v43 -= 8;
        }
        while (v43);
        if (v40 != (v40 & 0xFFFFFFFFFFFFFFF8))
        {
LABEL_36:
          do
          {
            LODWORD(result) = *(_DWORD *)(v11 + 4 * v21) - *(_DWORD *)(v14 + 4 * v21);
            if ((int)result >= 0) {
              uint64_t result = result;
            }
            else {
              uint64_t result = (*(_DWORD *)(v14 + 4 * v21) - *(_DWORD *)(v11 + 4 * v21));
            }
            *(_DWORD *)(v12 + 4 * v21++) = result;
          }
          while (v20 != v21);
        }
      }
      v11 += a2;
      v14 += a4;
      v12 += a6;
      ++v8;
      v13 += a6;
      v15 += a4;
      v16 += a2;
      v17 += a6;
      v18 += a4;
      v19 += a2;
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_10021D4E4(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  if (!a8) {
    return result;
  }
  unint64_t v8 = a5;
  int v9 = a8 - 1;
  unint64_t v10 = (a7 - 4);
  if (a7 >= 8)
  {
    uint64_t v14 = 0;
    uint64_t v15 = (float *)(a5 + 32);
    uint64_t v16 = (float *)(a3 + 32);
    uint64_t v17 = (float *)(result + 32);
    unint64_t v18 = result;
    unint64_t v19 = a3;
    unint64_t v20 = a5;
    while (1)
    {
      uint64_t v21 = 0;
      unint64_t v22 = 0;
      int v23 = v9;
      int32x4_t v24 = v17;
      uint64_t v25 = v16;
      uint64_t v26 = v15;
      do
      {
        float32x4_t v27 = vabdq_f32(*(float32x4_t *)(v18 + v21), *(float32x4_t *)(v19 + v21));
        uint64_t v28 = v26;
        uint64_t v29 = v25;
        uint64_t v30 = v24;
        float32x4_t v31 = vabdq_f32(*(float32x4_t *)(v18 + v21 + 16), *(float32x4_t *)(v19 + v21 + 16));
        uint64_t v32 = (float32x4_t *)(v20 + v21);
        v22 += 8;
        v21 += 32;
        *uint64_t v32 = v27;
        v32[1] = v31;
        v26 += 8;
        uint64_t v25 = v29 + 8;
        v24 += 8;
      }
      while (v22 <= (a7 - 8));
      if ((int)v10 >= (int)v22)
      {
        uint64_t v33 = 0;
        do
        {
          float v34 = *v30;
          v30 += 4;
          float v35 = v34;
          float v36 = *v29;
          v29 += 4;
          unint64_t v37 = (unint64_t)((v22 + v33) & 0xFFFFFFFC) >> 2;
          uint64_t v38 = (16 * (v37 & 0x3FFFFFFF)) | 4;
          float v39 = vabds_f32(*(float *)(v18 + v38), *(float *)(v19 + v38));
          *uint64_t v28 = vabds_f32(v35, v36);
          v28 += 4;
          *(float *)(v20 + v38) = v39;
          *(float32x2_t *)(v20 + ((16 * (v37 & 0x3FFFFFFF)) | 8)) = vabd_f32(*(float32x2_t *)(v18+ ((16 * (v37 & 0x3FFFFFFF)) | 8)), *(float32x2_t *)(v19+ ((16 * (v37 & 0x3FFFFFFF)) | 8)));
          v33 += 4;
        }
        while (v22 + v33 <= v10);
        unint64_t v22 = (v22 + v33);
        if ((int)v22 < a7)
        {
LABEL_20:
          unint64_t v40 = a7 - v22;
          if (v40 < 0xC) {
            goto LABEL_64;
          }
          uint64_t v41 = 4 * v22;
          uint64_t v42 = v8 + v14 * a6 + 4 * v22;
          if (v42 - (result + v14 * a2 + 4 * v22) < 0x20) {
            goto LABEL_64;
          }
          if (v42 - (a3 + v14 * a4 + v41) < 0x20) {
            goto LABEL_64;
          }
          v22 += v40 & 0xFFFFFFFFFFFFFFF8;
          unint64_t v43 = v40 & 0xFFFFFFFFFFFFFFF8;
          do
          {
            float32x4_t v44 = vabdq_f32(*(float32x4_t *)(v18 + v41 + 16), *(float32x4_t *)(v19 + v41 + 16));
            uint64_t v45 = (float32x4_t *)(v20 + v41);
            float32x4_t *v45 = vabdq_f32(*(float32x4_t *)(v18 + v41), *(float32x4_t *)(v19 + v41));
            v45[1] = v44;
            v41 += 32;
            v43 -= 8;
          }
          while (v43);
          if (v40 != (v40 & 0xFFFFFFFFFFFFFFF8))
          {
LABEL_64:
            do
            {
              *(float *)(v20 + 4 * v22) = vabds_f32(*(float *)(v18 + 4 * v22), *(float *)(v19 + 4 * v22));
              ++v22;
            }
            while (a7 != v22);
          }
        }
      }
      else
      {
        unint64_t v22 = v22;
        if ((int)v22 < a7) {
          goto LABEL_20;
        }
      }
      v18 += a2;
      v19 += a4;
      v20 += a6;
      int v9 = v23 - 1;
      ++v14;
      uint64_t v15 = (float *)((char *)v15 + a6);
      uint64_t v16 = (float *)((char *)v16 + a4);
      uint64_t v17 = (float *)((char *)v17 + a2);
      if (!v23) {
        return result;
      }
    }
  }
  if (a7 >= 4)
  {
    uint64_t v46 = 0;
    unint64_t v90 = a5 + 16;
    unint64_t v89 = result + 16;
    unint64_t v86 = a3 + 16;
    unint64_t v47 = (v10 & 0xFFFFFFFC) + 5;
    if (v47 <= a7) {
      unint64_t v47 = a7;
    }
    uint64_t v48 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
    uint64_t v88 = (v10 >> 2) + 1;
    unint64_t v91 = v47 - (v10 & 0xFFFFFFFC) - 4;
    unint64_t v87 = v91 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v49 = result;
    unint64_t v50 = a3;
    unint64_t v92 = result;
    unint64_t v51 = a3;
    unint64_t v52 = a5;
    while (1)
    {
      int v53 = v9;
      uint64_t v54 = v46 * a6;
      uint64_t v55 = v46 * a2;
      uint64_t v56 = v46 * a4;
      if (v10 < 0xC) {
        break;
      }
      unint64_t v57 = 0;
      unint64_t v60 = v8 + v48 + v54;
      BOOL v62 = a5 < a3 + v48 + v56 && v50 < v60;
      if (v49 < v60 && a5 < result + v48 + v55)
      {
        uint64_t v59 = 4;
        unint64_t v58 = 0;
LABEL_49:
        unint64_t v71 = v57 - 1;
        uint64_t v70 = v59 - 4;
        uint64_t v72 = 4 * v58;
        unint64_t v73 = v50;
        unint64_t v74 = v49;
        unint64_t v75 = a5;
        do
        {
          float v76 = *(float *)(v74 + v72 + 4);
          float v77 = *(float *)(v73 + v72 + 4);
          *(float *)(v75 + v72) = vabds_f32(*(float *)(v74 + v72), *(float *)(v73 + v72));
          unint64_t v78 = (float *)(v75 + v72);
          v78[1] = vabds_f32(v76, v77);
          float v79 = vabds_f32(*(float *)(v74 + v72 + 12), *(float *)(v73 + v72 + 12));
          v58 += 4;
          ++v71;
          v70 += 4;
          _OWORD v78[2] = vabds_f32(*(float *)(v74 + v72 + 8), *(float *)(v73 + v72 + 8));
          v78[3] = v79;
          v75 += 16;
          v74 += 16;
          v73 += 16;
        }
        while (v58 <= v10);
        goto LABEL_51;
      }
      uint64_t v59 = 4;
      unint64_t v58 = 0;
      if (v62) {
        goto LABEL_49;
      }
      uint64_t v64 = 0;
      uint64_t v65 = v88 & 0x7FFFFFFC;
      do
      {
        unint64_t v66 = (float32x4_t *)(a5 + v64);
        float32x4_t v67 = vabdq_f32(*(float32x4_t *)(v49 + v64 + 16), *(float32x4_t *)(v50 + v64 + 16));
        float32x4_t v68 = vabdq_f32(*(float32x4_t *)(v49 + v64), *(float32x4_t *)(v50 + v64));
        float32x4_t v69 = vabdq_f32(*(float32x4_t *)(v49 + v64 + 48), *(float32x4_t *)(v50 + v64 + 48));
        _OWORD v66[2] = vabdq_f32(*(float32x4_t *)(v49 + v64 + 32), *(float32x4_t *)(v50 + v64 + 32));
        v66[3] = v69;
        float32x4_t *v66 = v68;
        v66[1] = v67;
        v64 += 64;
        v65 -= 4;
      }
      while (v65);
      unint64_t v57 = v88 & 0x7FFFFFFC;
      uint64_t v59 = (16 * ((v57 >> 2) & 0x1FFFFFFF)) | 4;
      uint64_t v70 = 4 * v57;
      unint64_t v58 = v70;
      unint64_t v71 = v57 - 1;
      if (v88 != v57) {
        goto LABEL_49;
      }
LABEL_51:
      if ((int)v58 < a7)
      {
        if (v91 < 0xC
          || (uint64_t v81 = 16 * v71 + v90 + v54, v81 - (16 * v71 + v89 + v55) < 0x20)
          || v81 - (16 * v71 + v86 + v56) < 0x20)
        {
          unint64_t v80 = v70;
        }
        else
        {
          unint64_t v82 = v91 & 0xFFFFFFFFFFFFFFF8;
          unint64_t v80 = v70 + v87;
          uint64_t v83 = 4 * v70;
          do
          {
            float32x4_t v84 = vabdq_f32(*(float32x4_t *)(v49 + v83 + 16), *(float32x4_t *)(v50 + v83 + 16));
            unint64_t v85 = (float32x4_t *)(a5 + v83);
            float32x4_t *v85 = vabdq_f32(*(float32x4_t *)(v49 + v83), *(float32x4_t *)(v50 + v83));
            v85[1] = v84;
            v83 += 32;
            v82 -= 8;
          }
          while (v82);
          if (v91 == v87) {
            goto LABEL_31;
          }
        }
        do
        {
          *(float *)(a5 + 4 * v80) = vabds_f32(*(float *)(v49 + 4 * v80), *(float *)(v50 + 4 * v80));
          ++v80;
        }
        while (v80 < a7);
      }
LABEL_31:
      v49 += a2;
      v50 += a4;
      a5 += a6;
      int v9 = v53 - 1;
      ++v46;
      uint64_t result = v92;
      a3 = v51;
      unint64_t v8 = v52;
      if (!v53) {
        return result;
      }
    }
    unint64_t v57 = 0;
    unint64_t v58 = 0;
    uint64_t v59 = 4;
    goto LABEL_49;
  }
  if (a7 >= 1)
  {
    uint64_t v11 = (float *)(a5 + 8);
    uint64_t v12 = (float *)(a3 + 8);
    uint64_t v13 = (float *)(result + 4);
    do
    {
      *(v11 - 2) = vabds_f32(*(v13 - 1), *(v12 - 2));
      if (a7 != 1)
      {
        *(v11 - 1) = vabds_f32(*v13, *(v12 - 1));
        if (a7 != 2) {
          *uint64_t v11 = vabds_f32(v13[1], *v12);
        }
      }
      uint64_t v11 = (float *)((char *)v11 + a6);
      uint64_t v12 = (float *)((char *)v12 + a4);
      uint64_t v13 = (float *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_10021DA5C(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  if (!a8) {
    return result;
  }
  unint64_t v8 = a3;
  unint64_t v9 = result;
  unint64_t v10 = (a7 - 4);
  if (a7 >= 4)
  {
    uint64_t v14 = 0;
    int v15 = a8 - 1;
    uint64_t v16 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
    uint64_t v53 = v16 + a5 + 32;
    uint64_t v52 = v16 + result + 32;
    uint64_t v50 = v16 + a3 + 32;
    unint64_t v17 = (v10 & 0xFFFFFFFC) + 5;
    if (v17 <= a7) {
      unint64_t v17 = a7;
    }
    uint64_t v18 = 32 * (v10 >> 2) + 32;
    uint64_t v51 = (v10 >> 2) + 1;
    unint64_t v54 = v17 - (v10 & 0xFFFFFFFC) - 4;
    unint64_t v49 = v17 & 3;
    unint64_t v19 = a5 + 16;
    unint64_t v20 = a5;
    while (1)
    {
      int v21 = v15;
      uint64_t v22 = v14 * a6;
      uint64_t v23 = v14 * a2;
      uint64_t v24 = v14 * a4;
      if (v10 >= 4)
      {
        unint64_t v25 = 0;
        unint64_t v26 = a5 + v18 + v22;
        BOOL v28 = v20 < v8 + v18 + v24 && a3 < v26;
        if ((result >= v26 || v20 >= v9 + v18 + v23) && !v28)
        {
          uint64_t v30 = 0;
          uint64_t v31 = v51 & 0x7FFFFFFE;
          do
          {
            uint64_t v32 = (float64x2_t *)(v20 + v30);
            float64x2_t v33 = vabdq_f64(*(float64x2_t *)(result + v30 + 16), *(float64x2_t *)(a3 + v30 + 16));
            float64x2_t v34 = vabdq_f64(*(float64x2_t *)(result + v30), *(float64x2_t *)(a3 + v30));
            float64x2_t v35 = vabdq_f64(*(float64x2_t *)(result + v30 + 48), *(float64x2_t *)(a3 + v30 + 48));
            v32[2] = vabdq_f64(*(float64x2_t *)(result + v30 + 32), *(float64x2_t *)(a3 + v30 + 32));
            v32[3] = v35;
            *uint64_t v32 = v34;
            v32[1] = v33;
            v30 += 64;
            v31 -= 2;
          }
          while (v31);
          unint64_t v25 = 4 * (v51 & 0x7FFFFFFE);
          if (v51 == (v51 & 0x7FFFFFFE)) {
            goto LABEL_32;
          }
        }
      }
      else
      {
        unint64_t v25 = 0;
      }
      uint64_t v36 = 8 * v25;
      unint64_t v37 = v19;
      unint64_t v38 = a3;
      unint64_t v39 = result;
      do
      {
        double v40 = vabdd_f64(*(double *)(v39 + v36 + 8), *(double *)(v38 + v36 + 8));
        unint64_t v41 = v37 + v36;
        *(double *)(v41 - 16) = vabdd_f64(*(double *)(v39 + v36), *(double *)(v38 + v36));
        *(double *)(v41 - 8) = v40;
        double v42 = *(double *)(v39 + v36 + 24);
        double v43 = *(double *)(v38 + v36 + 24);
        *(double *)(v37 + v36) = vabdd_f64(*(double *)(v39 + v36 + 16), *(double *)(v38 + v36 + 16));
        v25 += 4;
        *(double *)(v41 + 8) = vabdd_f64(v42, v43);
        v39 += 32;
        v38 += 32;
        v37 += 32;
      }
      while (v25 <= v10);
LABEL_32:
      if ((int)v25 < a7)
      {
        unint64_t v44 = (v10 & 0xFFFFFFFC) + 4;
        if (v54 < 6) {
          goto LABEL_43;
        }
        unint64_t v44 = (v10 & 0xFFFFFFFC) + 4;
        if ((unint64_t)(v53 + v22 - (v52 + v23)) < 0x20) {
          goto LABEL_43;
        }
        unint64_t v44 = (v10 & 0xFFFFFFFC) + 4;
        if ((unint64_t)(v53 + v22 - (v50 + v24)) < 0x20) {
          goto LABEL_43;
        }
        uint64_t v45 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
        unint64_t v46 = v54 - v49;
        do
        {
          float64x2_t v47 = vabdq_f64(*(float64x2_t *)(result + v45 + 48), *(float64x2_t *)(a3 + v45 + 48));
          uint64_t v48 = (float64x2_t *)(v20 + v45);
          _OWORD v48[2] = vabdq_f64(*(float64x2_t *)(result + v45 + 32), *(float64x2_t *)(a3 + v45 + 32));
          v48[3] = v47;
          v45 += 32;
          v46 -= 4;
        }
        while (v46);
        unint64_t v44 = (v10 & 0xFFFFFFFC) + 4 + v54 - v49;
        if (v49)
        {
LABEL_43:
          do
          {
            *(double *)(v20 + 8 * v44) = vabdd_f64(*(double *)(result + 8 * v44), *(double *)(a3 + 8 * v44));
            ++v44;
          }
          while (v44 < a7);
        }
      }
      result += a2;
      a3 += a4;
      v20 += a6;
      int v15 = v21 - 1;
      ++v14;
      v19 += a6;
      if (!v21) {
        return result;
      }
    }
  }
  if (a7 >= 1)
  {
    uint64_t v11 = (double *)(a5 + 16);
    uint64_t v12 = (double *)(a3 + 16);
    uint64_t v13 = (double *)(result + 8);
    do
    {
      *(v11 - 2) = vabdd_f64(*(v13 - 1), *(v12 - 2));
      if (a7 != 1)
      {
        *(v11 - 1) = vabdd_f64(*v13, *(v12 - 1));
        if (a7 != 2) {
          *uint64_t v11 = vabdd_f64(v13[1], *v12);
        }
      }
      uint64_t v11 = (double *)((char *)v11 + a6);
      uint64_t v12 = (double *)((char *)v12 + a4);
      uint64_t v13 = (double *)((char *)v13 + a2);
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_10021DDA8(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unint64_t v102 = result;
  if (!a8) {
    return result;
  }
  uint64_t v8 = a6;
  uint64_t v9 = a4;
  int v10 = a8 - 1;
  unint64_t v11 = (a7 - 4);
  unint64_t v12 = (a7 - 32);
  uint64_t v104 = a2;
  if ((int)a7 >= 32)
  {
    uint64_t v16 = 0;
    unint64_t v18 = a3;
    unint64_t v17 = result;
    unint64_t v19 = result + 32;
    unint64_t v20 = (char *)(a3 + 32);
    unint64_t v21 = a5;
    unint64_t v22 = a5 + 32;
    uint64_t v23 = a7;
    while (1)
    {
      uint64_t v24 = a7;
      int v25 = v10;
      unint64_t v26 = a5 + v16 * v8;
      uint64_t v27 = 0x2000000000;
      int v28 = 32;
      unint64_t v29 = v102 + v16 * a2;
      unint64_t v30 = v22;
      uint64_t v31 = v20;
      uint64_t v32 = (char *)v19;
      uint64_t v33 = 16;
      unint64_t v34 = a3 + v16 * v9;
      do
      {
        uint64_t v35 = v27;
        uint64_t v36 = v32;
        unint64_t v37 = v31;
        uint64_t result = v30;
        unint64_t v38 = (int8x16_t *)(v21 + v33);
        uint64_t v39 = v33 + 32;
        int8x16_t v40 = vandq_s8(*(int8x16_t *)(v18 + v33), *(int8x16_t *)(v17 + v33));
        unint64_t v41 = v33 + 16;
        v27 += 0x2000000000;
        v32 += 32;
        v31 += 32;
        v38[-1] = vandq_s8(*(int8x16_t *)(v18 + v33 - 16), *(int8x16_t *)(v17 + v33 - 16));
        *unint64_t v38 = v40;
        unint64_t v30 = result + 32;
        v28 += 32;
        v33 += 32;
      }
      while (v41 <= v12);
      unint64_t v42 = v39 - 16;
      if ((int)v11 >= (int)v39 - 16)
      {
        do
        {
          char v44 = *v36;
          v36 += 4;
          char v43 = v44;
          char v45 = *v37;
          v37 += 4;
          uint64_t v46 = (v35 >> 32) | 1;
          char v47 = *(unsigned char *)(v18 + v46) & *(unsigned char *)(v17 + v46);
          *(unsigned char *)uint64_t result = v45 & v43;
          result += 4;
          *(unsigned char *)(v21 + v46) = v47;
          uint64_t v48 = (v35 >> 32) | 3;
          char v49 = *(unsigned char *)(v17 + v48);
          char v50 = *(unsigned char *)(v18 + v48);
          *(unsigned char *)(v21 + ((v35 >> 32) | 2)) = *(unsigned char *)(v18 + ((v35 >> 32) | 2)) & *(unsigned char *)(v17 + ((v35 >> 32) | 2));
          *(unsigned char *)(v21 + v48) = v50 & v49;
          v42 += 4;
          v35 += 0x400000000;
        }
        while (v42 <= v11);
      }
      a7 = v24;
      uint64_t v9 = a4;
      if ((int)v42 >= (int)v24) {
        goto LABEL_11;
      }
      unint64_t v51 = v23 - v42;
      if (v51 >= 8)
      {
        if (v26 - v29 < 0x20)
        {
          unint64_t v52 = v42;
        }
        else if (v26 - v34 < 0x20)
        {
          unint64_t v52 = v42;
        }
        else
        {
          if (v51 < 0x20)
          {
            uint64_t v53 = 0;
LABEL_31:
            unint64_t v52 = (v51 & 0xFFFFFFFFFFFFFFF8) + v42;
            uint64_t result = v53 - (v51 & 0xFFFFFFFFFFFFFFF8);
            uint64_t v57 = v53 + v42;
            do
            {
              *(int8x8_t *)(v21 + v57) = vand_s8(*(int8x8_t *)(v18 + v57), *(int8x8_t *)(v17 + v57));
              v57 += 8;
              result += 8;
            }
            while (result);
            if (v51 == (v51 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_11;
            }
            goto LABEL_19;
          }
          uint64_t v53 = v51 & 0xFFFFFFFFFFFFFFE0;
          uint64_t result = v42;
          unint64_t v54 = v51 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            int8x16_t v55 = vandq_s8(*(int8x16_t *)(v18 + result + 16), *(int8x16_t *)(v17 + result + 16));
            uint64_t v56 = (int8x16_t *)(v21 + result);
            int8x16_t *v56 = vandq_s8(*(int8x16_t *)(v18 + result), *(int8x16_t *)(v17 + result));
            v56[1] = v55;
            result += 32;
            v54 -= 32;
          }
          while (v54);
          if (v51 == v53) {
            goto LABEL_11;
          }
          if ((v51 & 0x18) != 0) {
            goto LABEL_31;
          }
          unint64_t v52 = v53 + v42;
        }
      }
      else
      {
        unint64_t v52 = v42;
      }
      do
      {
LABEL_19:
        uint64_t result = (*(unsigned char *)(v18 + v52) & *(unsigned char *)(v17 + v52));
        *(unsigned char *)(v21 + v52) = *(unsigned char *)(v18 + v52) & *(unsigned char *)(v17 + v52);
        ++v52;
      }
      while (v23 != v52);
LABEL_11:
      a2 = v104;
      v17 += v104;
      v18 += a4;
      uint64_t v8 = a6;
      v21 += a6;
      int v10 = v25 - 1;
      ++v16;
      v19 += v104;
      v20 += a4;
      v22 += a6;
      if (!v25) {
        return result;
      }
    }
  }
  if ((int)a7 >= 4)
  {
    uint64_t v58 = 0;
    unint64_t v60 = a5;
    unint64_t v59 = a3;
    unint64_t v61 = result;
    unint64_t v62 = result + 4;
    unint64_t v98 = a3 + 4;
    uint64_t v63 = v11 & 0xFFFFFFFC;
    uint64_t v64 = v63 + 5;
    if (v63 + 5 <= (unint64_t)a7) {
      uint64_t v64 = a7;
    }
    unint64_t v65 = v64 - v63 - 4;
    uint64_t v66 = v63 + 4;
    uint64_t v67 = (v11 >> 2) + 1;
    unint64_t v97 = v65 & 0xFFFFFFFFFFFFFFE0;
    unint64_t v96 = v65 & 0xFFFFFFFFFFFFFFF8;
    while (1)
    {
      int v68 = v10;
      uint64_t v69 = v58 * v8;
      uint64_t v70 = v58 * a2;
      uint64_t v71 = v58 * v9;
      if (v11 < 0x3C) {
        break;
      }
      unint64_t v72 = 0;
      unint64_t v80 = a5 + v66 + v69;
      BOOL v82 = v60 < a3 + v66 + v71 && v59 < v80;
      uint64_t result = 4;
      unint64_t v73 = 0;
      if (v61 < v80 && v60 < v102 + v66 + v70) {
        goto LABEL_42;
      }
      if (v82) {
        goto LABEL_42;
      }
      uint64_t v84 = 0;
      uint64_t v85 = v67 & 0x7FFFFFF0;
      do
      {
        int8x16_t v86 = vandq_s8(*(int8x16_t *)(v59 + v84 + 16), *(int8x16_t *)(v61 + v84 + 16));
        int8x16_t v87 = vandq_s8(*(int8x16_t *)(v59 + v84), *(int8x16_t *)(v61 + v84));
        int8x16_t v88 = vandq_s8(*(int8x16_t *)(v59 + v84 + 48), *(int8x16_t *)(v61 + v84 + 48));
        unint64_t v89 = (int8x16_t *)(v60 + v84);
        _OWORD v89[2] = vandq_s8(*(int8x16_t *)(v59 + v84 + 32), *(int8x16_t *)(v61 + v84 + 32));
        v89[3] = v88;
        *unint64_t v89 = v87;
        v89[1] = v86;
        v84 += 64;
        v85 -= 16;
      }
      while (v85);
      unint64_t v72 = v67 & 0x7FFFFFF0;
      uint64_t result = (((v72 >> 4) & 0x7FFFFFF) << 6) | 4;
      unint64_t v73 = 4 * v72;
      unint64_t v74 = v72 - 1;
      unint64_t v75 = v73;
      if (v67 != v72) {
        goto LABEL_42;
      }
LABEL_44:
      uint64_t v9 = a4;
      if ((int)v73 < (int)a7)
      {
        if (v65 < 8
          || (uint64_t v90 = 4 * v74 + a5 + 4 + v69, v90 - (4 * v74 + v62 + v70) < 0x20)
          || v90 - (4 * v74 + v98 + v71) < 0x20)
        {
          unint64_t v79 = v75;
        }
        else if (v65 >= 0x20)
        {
          unint64_t v92 = v75;
          uint64_t result = v65 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            int8x16_t v93 = vandq_s8(*(int8x16_t *)(v59 + v92 + 16), *(int8x16_t *)(v61 + v92 + 16));
            unint64_t v94 = (int8x16_t *)(v60 + v92);
            *unint64_t v94 = vandq_s8(*(int8x16_t *)(v59 + v92), *(int8x16_t *)(v61 + v92));
            v94[1] = v93;
            v92 += 32;
            result -= 32;
          }
          while (result);
          if (v65 == v97) {
            goto LABEL_39;
          }
          unint64_t v91 = v65 & 0xFFFFFFFFFFFFFFE0;
          if ((v65 & 0x18) != 0) {
            goto LABEL_73;
          }
          unint64_t v79 = v75 + v97;
        }
        else
        {
          unint64_t v91 = 0;
LABEL_73:
          unint64_t v79 = v75 + v96;
          unint64_t v95 = v91 - (v65 & 0xFFFFFFFFFFFFFFF8);
          uint64_t result = v91 + v75;
          do
          {
            *(int8x8_t *)(v60 + result) = vand_s8(*(int8x8_t *)(v59 + result), *(int8x8_t *)(v61 + result));
            result += 8;
            v95 += 8;
          }
          while (v95);
          if (v65 == v96) {
            goto LABEL_39;
          }
        }
        do
        {
          uint64_t result = *(unsigned __int8 *)(v59 + v79);
          *(unsigned char *)(v60 + v79) = result & *(unsigned char *)(v61 + v79);
          ++v79;
        }
        while (v79 < a7);
      }
LABEL_39:
      a2 = v104;
      v61 += v104;
      v59 += a4;
      v60 += v8;
      int v10 = v68 - 1;
      ++v58;
      if (!v68) {
        return result;
      }
    }
    unint64_t v72 = 0;
    unint64_t v73 = 0;
    uint64_t result = 4;
LABEL_42:
    unint64_t v74 = v72 - 1;
    unint64_t v75 = result - 4;
    do
    {
      char v76 = *(unsigned char *)(v59 + v73 + 1) & *(unsigned char *)(v61 + v73 + 1);
      float v77 = (unsigned char *)(v60 + v73);
      *float v77 = *(unsigned char *)(v59 + v73) & *(unsigned char *)(v61 + v73);
      v77[1] = v76;
      uint64_t result = (*(unsigned char *)(v59 + v73 + 2) & *(unsigned char *)(v61 + v73 + 2));
      char v78 = *(unsigned char *)(v59 + v73 + 3) & *(unsigned char *)(v61 + v73 + 3);
      _OWORD v77[2] = *(unsigned char *)(v59 + v73 + 2) & *(unsigned char *)(v61 + v73 + 2);
      v77[3] = v78;
      v73 += 4;
      ++v74;
      v75 += 4;
    }
    while (v73 <= v11);
    goto LABEL_44;
  }
  if ((int)a7 >= 1)
  {
    uint64_t v13 = (unsigned char *)(a5 + 2);
    uint64_t v14 = (unsigned char *)(a3 + 2);
    int v15 = (unsigned char *)(result + 1);
    do
    {
      *(v13 - 2) = *(v14 - 2) & *(v15 - 1);
      if (a7 != 1)
      {
        *(v13 - 1) = *(v14 - 1) & *v15;
        if (a7 != 2) {
          *uint64_t v13 = *v14 & v15[1];
        }
      }
      v13 += a6;
      v14 += a4;
      v15 += a2;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_10021E3F4(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v104 = result;
  if (!a8) {
    return result;
  }
  uint64_t v8 = a6;
  uint64_t v9 = a4;
  int v10 = a8 - 1;
  unint64_t v11 = (a7 - 4);
  unint64_t v12 = (a7 - 32);
  uint64_t v106 = a2;
  if ((int)a7 >= 32)
  {
    uint64_t v16 = 0;
    unint64_t v18 = a3;
    uint64_t v17 = result;
    uint64_t v19 = result + 32;
    unint64_t v20 = (char *)(a3 + 32);
    unint64_t v21 = a5;
    uint64_t v22 = a5 + 32;
    uint64_t v23 = a7;
    while (1)
    {
      uint64_t v24 = a7;
      int v25 = v10;
      unint64_t v26 = a5 + v16 * v8;
      uint64_t v27 = 0x2000000000;
      int v28 = 32;
      uint64_t v29 = v104 + v16 * a2;
      uint64_t v30 = v22;
      uint64_t v31 = v20;
      uint64_t v32 = (char *)v19;
      uint64_t v33 = 16;
      unint64_t v34 = a3 + v16 * v9;
      do
      {
        uint64_t v35 = v27;
        uint64_t v36 = v32;
        unint64_t v37 = v31;
        uint64_t result = v30;
        unint64_t v38 = (int8x16_t *)(v21 + v33);
        uint64_t v39 = v33 + 32;
        int8x16_t v40 = vorrq_s8(*(int8x16_t *)(v18 + v33), *(int8x16_t *)(v17 + v33));
        unint64_t v41 = v33 + 16;
        v27 += 0x2000000000;
        v32 += 32;
        v31 += 32;
        v38[-1] = vorrq_s8(*(int8x16_t *)(v18 + v33 - 16), *(int8x16_t *)(v17 + v33 - 16));
        *unint64_t v38 = v40;
        uint64_t v30 = result + 32;
        v28 += 32;
        v33 += 32;
      }
      while (v41 <= v12);
      unint64_t v42 = v39 - 16;
      if ((int)v11 >= (int)v39 - 16)
      {
        do
        {
          char v44 = *v36;
          v36 += 4;
          char v43 = v44;
          char v45 = *v37;
          v37 += 4;
          uint64_t v46 = (v35 >> 32) | 1;
          char v47 = *(unsigned char *)(v18 + v46) | *(unsigned char *)(v17 + v46);
          *(unsigned char *)uint64_t result = v45 | v43;
          result += 4;
          *(unsigned char *)(v21 + v46) = v47;
          uint64_t v48 = (v35 >> 32) | 3;
          char v49 = *(unsigned char *)(v17 + v48);
          char v50 = *(unsigned char *)(v18 + v48);
          *(unsigned char *)(v21 + ((v35 >> 32) | 2)) = *(unsigned char *)(v18 + ((v35 >> 32) | 2)) | *(unsigned char *)(v17 + ((v35 >> 32) | 2));
          *(unsigned char *)(v21 + v48) = v50 | v49;
          v42 += 4;
          v35 += 0x400000000;
        }
        while (v42 <= v11);
      }
      a7 = v24;
      uint64_t v9 = a4;
      if ((int)v42 >= (int)v24) {
        goto LABEL_11;
      }
      unint64_t v51 = v23 - v42;
      if (v51 >= 8)
      {
        if (v26 - v29 < 0x20)
        {
          unint64_t v52 = v42;
        }
        else if (v26 - v34 < 0x20)
        {
          unint64_t v52 = v42;
        }
        else
        {
          if (v51 < 0x20)
          {
            uint64_t v54 = 0;
LABEL_31:
            unint64_t v52 = (v51 & 0xFFFFFFFFFFFFFFF8) + v42;
            uint64_t result = v54 - (v51 & 0xFFFFFFFFFFFFFFF8);
            uint64_t v58 = v54 + v42;
            do
            {
              *(int8x8_t *)(v21 + v58) = vorr_s8(*(int8x8_t *)(v18 + v58), *(int8x8_t *)(v17 + v58));
              v58 += 8;
              result += 8;
            }
            while (result);
            if (v51 == (v51 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_11;
            }
            goto LABEL_19;
          }
          uint64_t v54 = v51 & 0xFFFFFFFFFFFFFFE0;
          uint64_t result = v42;
          unint64_t v55 = v51 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            int8x16_t v56 = vorrq_s8(*(int8x16_t *)(v18 + result + 16), *(int8x16_t *)(v17 + result + 16));
            uint64_t v57 = (int8x16_t *)(v21 + result);
            int8x16_t *v57 = vorrq_s8(*(int8x16_t *)(v18 + result), *(int8x16_t *)(v17 + result));
            v57[1] = v56;
            result += 32;
            v55 -= 32;
          }
          while (v55);
          if (v51 == v54) {
            goto LABEL_11;
          }
          if ((v51 & 0x18) != 0) {
            goto LABEL_31;
          }
          unint64_t v52 = v54 + v42;
        }
      }
      else
      {
        unint64_t v52 = v42;
      }
      do
      {
LABEL_19:
        int v53 = *(unsigned __int8 *)(v18 + v52);
        uint64_t result = v53 | *(unsigned __int8 *)(v17 + v52);
        *(unsigned char *)(v21 + v52) = v53 | *(unsigned char *)(v17 + v52);
        ++v52;
      }
      while (v23 != v52);
LABEL_11:
      a2 = v106;
      v17 += v106;
      v18 += a4;
      uint64_t v8 = a6;
      v21 += a6;
      int v10 = v25 - 1;
      ++v16;
      v19 += v106;
      v20 += a4;
      v22 += a6;
      if (!v25) {
        return result;
      }
    }
  }
  if ((int)a7 >= 4)
  {
    uint64_t v59 = 0;
    unint64_t v61 = a5;
    unint64_t v60 = a3;
    unint64_t v62 = result;
    uint64_t v63 = result + 4;
    unint64_t v100 = a3 + 4;
    uint64_t v64 = v11 & 0xFFFFFFFC;
    uint64_t v65 = v64 + 5;
    if (v64 + 5 <= (unint64_t)a7) {
      uint64_t v65 = a7;
    }
    unint64_t v66 = v65 - v64 - 4;
    uint64_t v67 = v64 + 4;
    uint64_t v68 = (v11 >> 2) + 1;
    unint64_t v99 = v66 & 0xFFFFFFFFFFFFFFE0;
    unint64_t v98 = v66 & 0xFFFFFFFFFFFFFFF8;
    while (1)
    {
      int v69 = v10;
      uint64_t v70 = v59 * v8;
      uint64_t v71 = v59 * a2;
      uint64_t v72 = v59 * v9;
      if (v11 < 0x3C) {
        break;
      }
      unint64_t v73 = 0;
      unint64_t v82 = a5 + v67 + v70;
      BOOL v84 = v61 < a3 + v67 + v72 && v60 < v82;
      uint64_t result = 4;
      unint64_t v74 = 0;
      if (v62 < v82 && v61 < v104 + v67 + v71) {
        goto LABEL_42;
      }
      if (v84) {
        goto LABEL_42;
      }
      uint64_t v86 = 0;
      uint64_t v87 = v68 & 0x7FFFFFF0;
      do
      {
        int8x16_t v88 = vorrq_s8(*(int8x16_t *)(v60 + v86 + 16), *(int8x16_t *)(v62 + v86 + 16));
        int8x16_t v89 = vorrq_s8(*(int8x16_t *)(v60 + v86), *(int8x16_t *)(v62 + v86));
        int8x16_t v90 = vorrq_s8(*(int8x16_t *)(v60 + v86 + 48), *(int8x16_t *)(v62 + v86 + 48));
        unint64_t v91 = (int8x16_t *)(v61 + v86);
        _OWORD v91[2] = vorrq_s8(*(int8x16_t *)(v60 + v86 + 32), *(int8x16_t *)(v62 + v86 + 32));
        v91[3] = v90;
        int8x16_t *v91 = v89;
        v91[1] = v88;
        v86 += 64;
        v87 -= 16;
      }
      while (v87);
      unint64_t v73 = v68 & 0x7FFFFFF0;
      uint64_t result = (((v73 >> 4) & 0x7FFFFFF) << 6) | 4;
      unint64_t v74 = 4 * v73;
      unint64_t v75 = v73 - 1;
      uint64_t v76 = v74;
      if (v68 != v73) {
        goto LABEL_42;
      }
LABEL_44:
      uint64_t v9 = a4;
      if ((int)v74 < (int)a7)
      {
        if (v66 < 8
          || (uint64_t v92 = 4 * v75 + a5 + 4 + v70, v92 - (4 * v75 + v63 + v71) < 0x20)
          || v92 - (4 * v75 + v100 + v72) < 0x20)
        {
          unint64_t v81 = v76;
        }
        else if (v66 >= 0x20)
        {
          uint64_t v94 = v76;
          uint64_t result = v66 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            int8x16_t v95 = vorrq_s8(*(int8x16_t *)(v60 + v94 + 16), *(int8x16_t *)(v62 + v94 + 16));
            unint64_t v96 = (int8x16_t *)(v61 + v94);
            *unint64_t v96 = vorrq_s8(*(int8x16_t *)(v60 + v94), *(int8x16_t *)(v62 + v94));
            v96[1] = v95;
            v94 += 32;
            result -= 32;
          }
          while (result);
          if (v66 == v99) {
            goto LABEL_39;
          }
          unint64_t v93 = v66 & 0xFFFFFFFFFFFFFFE0;
          if ((v66 & 0x18) != 0) {
            goto LABEL_73;
          }
          unint64_t v81 = v76 + v99;
        }
        else
        {
          unint64_t v93 = 0;
LABEL_73:
          unint64_t v81 = v76 + v98;
          unint64_t v97 = v93 - (v66 & 0xFFFFFFFFFFFFFFF8);
          uint64_t result = v93 + v76;
          do
          {
            *(int8x8_t *)(v61 + result) = vorr_s8(*(int8x8_t *)(v60 + result), *(int8x8_t *)(v62 + result));
            result += 8;
            v97 += 8;
          }
          while (v97);
          if (v66 == v98) {
            goto LABEL_39;
          }
        }
        do
        {
          uint64_t result = *(unsigned __int8 *)(v60 + v81);
          *(unsigned char *)(v61 + v81) = result | *(unsigned char *)(v62 + v81);
          ++v81;
        }
        while (v81 < a7);
      }
LABEL_39:
      a2 = v106;
      v62 += v106;
      v60 += a4;
      v61 += v8;
      int v10 = v69 - 1;
      ++v59;
      if (!v69) {
        return result;
      }
    }
    unint64_t v73 = 0;
    unint64_t v74 = 0;
    uint64_t result = 4;
LABEL_42:
    unint64_t v75 = v73 - 1;
    uint64_t v76 = result - 4;
    do
    {
      char v77 = *(unsigned char *)(v60 + v74 + 1) | *(unsigned char *)(v62 + v74 + 1);
      char v78 = (unsigned char *)(v61 + v74);
      *char v78 = *(unsigned char *)(v60 + v74) | *(unsigned char *)(v62 + v74);
      v78[1] = v77;
      int v79 = *(unsigned __int8 *)(v60 + v74 + 2);
      uint64_t result = v79 | *(unsigned __int8 *)(v62 + v74 + 2);
      char v80 = *(unsigned char *)(v60 + v74 + 3) | *(unsigned char *)(v62 + v74 + 3);
      _OWORD v78[2] = v79 | *(unsigned char *)(v62 + v74 + 2);
      v78[3] = v80;
      v74 += 4;
      ++v75;
      v76 += 4;
    }
    while (v74 <= v11);
    goto LABEL_44;
  }
  if ((int)a7 >= 1)
  {
    uint64_t v13 = (unsigned char *)(a5 + 2);
    uint64_t v14 = (unsigned char *)(a3 + 2);
    int v15 = (unsigned char *)(result + 1);
    do
    {
      *(v13 - 2) = *(v14 - 2) | *(v15 - 1);
      if (a7 != 1)
      {
        *(v13 - 1) = *(v14 - 1) | *v15;
        if (a7 != 2) {
          *uint64_t v13 = *v14 | v15[1];
        }
      }
      v13 += a6;
      v14 += a4;
      v15 += a2;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_10021EA40(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v104 = result;
  if (!a8) {
    return result;
  }
  uint64_t v8 = a6;
  uint64_t v9 = a4;
  int v10 = a8 - 1;
  unint64_t v11 = (a7 - 4);
  unint64_t v12 = (a7 - 32);
  uint64_t v106 = a2;
  if ((int)a7 >= 32)
  {
    uint64_t v16 = 0;
    unint64_t v18 = a3;
    uint64_t v17 = result;
    uint64_t v19 = result + 32;
    unint64_t v20 = (char *)(a3 + 32);
    unint64_t v21 = a5;
    uint64_t v22 = a5 + 32;
    uint64_t v23 = a7;
    while (1)
    {
      uint64_t v24 = a7;
      int v25 = v10;
      unint64_t v26 = a5 + v16 * v8;
      uint64_t v27 = 0x2000000000;
      int v28 = 32;
      uint64_t v29 = v104 + v16 * a2;
      uint64_t v30 = v22;
      uint64_t v31 = v20;
      uint64_t v32 = (char *)v19;
      uint64_t v33 = 16;
      unint64_t v34 = a3 + v16 * v9;
      do
      {
        uint64_t v35 = v27;
        uint64_t v36 = v32;
        unint64_t v37 = v31;
        uint64_t result = v30;
        unint64_t v38 = (int8x16_t *)(v21 + v33);
        uint64_t v39 = v33 + 32;
        int8x16_t v40 = veorq_s8(*(int8x16_t *)(v18 + v33), *(int8x16_t *)(v17 + v33));
        unint64_t v41 = v33 + 16;
        v27 += 0x2000000000;
        v32 += 32;
        v31 += 32;
        v38[-1] = veorq_s8(*(int8x16_t *)(v18 + v33 - 16), *(int8x16_t *)(v17 + v33 - 16));
        *unint64_t v38 = v40;
        uint64_t v30 = result + 32;
        v28 += 32;
        v33 += 32;
      }
      while (v41 <= v12);
      unint64_t v42 = v39 - 16;
      if ((int)v11 >= (int)v39 - 16)
      {
        do
        {
          char v44 = *v36;
          v36 += 4;
          char v43 = v44;
          char v45 = *v37;
          v37 += 4;
          uint64_t v46 = (v35 >> 32) | 1;
          char v47 = *(unsigned char *)(v18 + v46) ^ *(unsigned char *)(v17 + v46);
          *(unsigned char *)uint64_t result = v45 ^ v43;
          result += 4;
          *(unsigned char *)(v21 + v46) = v47;
          uint64_t v48 = (v35 >> 32) | 3;
          char v49 = *(unsigned char *)(v17 + v48);
          char v50 = *(unsigned char *)(v18 + v48);
          *(unsigned char *)(v21 + ((v35 >> 32) | 2)) = *(unsigned char *)(v18 + ((v35 >> 32) | 2)) ^ *(unsigned char *)(v17 + ((v35 >> 32) | 2));
          *(unsigned char *)(v21 + v48) = v50 ^ v49;
          v42 += 4;
          v35 += 0x400000000;
        }
        while (v42 <= v11);
      }
      a7 = v24;
      uint64_t v9 = a4;
      if ((int)v42 >= (int)v24) {
        goto LABEL_11;
      }
      unint64_t v51 = v23 - v42;
      if (v51 >= 8)
      {
        if (v26 - v29 < 0x20)
        {
          unint64_t v52 = v42;
        }
        else if (v26 - v34 < 0x20)
        {
          unint64_t v52 = v42;
        }
        else
        {
          if (v51 < 0x20)
          {
            uint64_t v54 = 0;
LABEL_31:
            unint64_t v52 = (v51 & 0xFFFFFFFFFFFFFFF8) + v42;
            uint64_t result = v54 - (v51 & 0xFFFFFFFFFFFFFFF8);
            uint64_t v58 = v54 + v42;
            do
            {
              *(int8x8_t *)(v21 + v58) = veor_s8(*(int8x8_t *)(v18 + v58), *(int8x8_t *)(v17 + v58));
              v58 += 8;
              result += 8;
            }
            while (result);
            if (v51 == (v51 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_11;
            }
            goto LABEL_19;
          }
          uint64_t v54 = v51 & 0xFFFFFFFFFFFFFFE0;
          uint64_t result = v42;
          unint64_t v55 = v51 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            int8x16_t v56 = veorq_s8(*(int8x16_t *)(v18 + result + 16), *(int8x16_t *)(v17 + result + 16));
            uint64_t v57 = (int8x16_t *)(v21 + result);
            int8x16_t *v57 = veorq_s8(*(int8x16_t *)(v18 + result), *(int8x16_t *)(v17 + result));
            v57[1] = v56;
            result += 32;
            v55 -= 32;
          }
          while (v55);
          if (v51 == v54) {
            goto LABEL_11;
          }
          if ((v51 & 0x18) != 0) {
            goto LABEL_31;
          }
          unint64_t v52 = v54 + v42;
        }
      }
      else
      {
        unint64_t v52 = v42;
      }
      do
      {
LABEL_19:
        int v53 = *(unsigned __int8 *)(v18 + v52);
        uint64_t result = v53 ^ *(unsigned __int8 *)(v17 + v52);
        *(unsigned char *)(v21 + v52) = v53 ^ *(unsigned char *)(v17 + v52);
        ++v52;
      }
      while (v23 != v52);
LABEL_11:
      a2 = v106;
      v17 += v106;
      v18 += a4;
      uint64_t v8 = a6;
      v21 += a6;
      int v10 = v25 - 1;
      ++v16;
      v19 += v106;
      v20 += a4;
      v22 += a6;
      if (!v25) {
        return result;
      }
    }
  }
  if ((int)a7 >= 4)
  {
    uint64_t v59 = 0;
    unint64_t v61 = a5;
    unint64_t v60 = a3;
    unint64_t v62 = result;
    uint64_t v63 = result + 4;
    unint64_t v100 = a3 + 4;
    uint64_t v64 = v11 & 0xFFFFFFFC;
    uint64_t v65 = v64 + 5;
    if (v64 + 5 <= (unint64_t)a7) {
      uint64_t v65 = a7;
    }
    unint64_t v66 = v65 - v64 - 4;
    uint64_t v67 = v64 + 4;
    uint64_t v68 = (v11 >> 2) + 1;
    unint64_t v99 = v66 & 0xFFFFFFFFFFFFFFE0;
    unint64_t v98 = v66 & 0xFFFFFFFFFFFFFFF8;
    while (1)
    {
      int v69 = v10;
      uint64_t v70 = v59 * v8;
      uint64_t v71 = v59 * a2;
      uint64_t v72 = v59 * v9;
      if (v11 < 0x3C) {
        break;
      }
      unint64_t v73 = 0;
      unint64_t v82 = a5 + v67 + v70;
      BOOL v84 = v61 < a3 + v67 + v72 && v60 < v82;
      uint64_t result = 4;
      unint64_t v74 = 0;
      if (v62 < v82 && v61 < v104 + v67 + v71) {
        goto LABEL_42;
      }
      if (v84) {
        goto LABEL_42;
      }
      uint64_t v86 = 0;
      uint64_t v87 = v68 & 0x7FFFFFF0;
      do
      {
        int8x16_t v88 = veorq_s8(*(int8x16_t *)(v60 + v86 + 16), *(int8x16_t *)(v62 + v86 + 16));
        int8x16_t v89 = veorq_s8(*(int8x16_t *)(v60 + v86), *(int8x16_t *)(v62 + v86));
        int8x16_t v90 = veorq_s8(*(int8x16_t *)(v60 + v86 + 48), *(int8x16_t *)(v62 + v86 + 48));
        unint64_t v91 = (int8x16_t *)(v61 + v86);
        _OWORD v91[2] = veorq_s8(*(int8x16_t *)(v60 + v86 + 32), *(int8x16_t *)(v62 + v86 + 32));
        v91[3] = v90;
        int8x16_t *v91 = v89;
        v91[1] = v88;
        v86 += 64;
        v87 -= 16;
      }
      while (v87);
      unint64_t v73 = v68 & 0x7FFFFFF0;
      uint64_t result = (((v73 >> 4) & 0x7FFFFFF) << 6) | 4;
      unint64_t v74 = 4 * v73;
      unint64_t v75 = v73 - 1;
      uint64_t v76 = v74;
      if (v68 != v73) {
        goto LABEL_42;
      }
LABEL_44:
      uint64_t v9 = a4;
      if ((int)v74 < (int)a7)
      {
        if (v66 < 8
          || (uint64_t v92 = 4 * v75 + a5 + 4 + v70, v92 - (4 * v75 + v63 + v71) < 0x20)
          || v92 - (4 * v75 + v100 + v72) < 0x20)
        {
          unint64_t v81 = v76;
        }
        else if (v66 >= 0x20)
        {
          uint64_t v94 = v76;
          uint64_t result = v66 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            int8x16_t v95 = veorq_s8(*(int8x16_t *)(v60 + v94 + 16), *(int8x16_t *)(v62 + v94 + 16));
            unint64_t v96 = (int8x16_t *)(v61 + v94);
            *unint64_t v96 = veorq_s8(*(int8x16_t *)(v60 + v94), *(int8x16_t *)(v62 + v94));
            v96[1] = v95;
            v94 += 32;
            result -= 32;
          }
          while (result);
          if (v66 == v99) {
            goto LABEL_39;
          }
          unint64_t v93 = v66 & 0xFFFFFFFFFFFFFFE0;
          if ((v66 & 0x18) != 0) {
            goto LABEL_73;
          }
          unint64_t v81 = v76 + v99;
        }
        else
        {
          unint64_t v93 = 0;
LABEL_73:
          unint64_t v81 = v76 + v98;
          unint64_t v97 = v93 - (v66 & 0xFFFFFFFFFFFFFFF8);
          uint64_t result = v93 + v76;
          do
          {
            *(int8x8_t *)(v61 + result) = veor_s8(*(int8x8_t *)(v60 + result), *(int8x8_t *)(v62 + result));
            result += 8;
            v97 += 8;
          }
          while (v97);
          if (v66 == v98) {
            goto LABEL_39;
          }
        }
        do
        {
          uint64_t result = *(unsigned __int8 *)(v60 + v81);
          *(unsigned char *)(v61 + v81) = result ^ *(unsigned char *)(v62 + v81);
          ++v81;
        }
        while (v81 < a7);
      }
LABEL_39:
      a2 = v106;
      v62 += v106;
      v60 += a4;
      v61 += v8;
      int v10 = v69 - 1;
      ++v59;
      if (!v69) {
        return result;
      }
    }
    unint64_t v73 = 0;
    unint64_t v74 = 0;
    uint64_t result = 4;
LABEL_42:
    unint64_t v75 = v73 - 1;
    uint64_t v76 = result - 4;
    do
    {
      char v77 = *(unsigned char *)(v60 + v74 + 1) ^ *(unsigned char *)(v62 + v74 + 1);
      char v78 = (unsigned char *)(v61 + v74);
      *char v78 = *(unsigned char *)(v60 + v74) ^ *(unsigned char *)(v62 + v74);
      v78[1] = v77;
      int v79 = *(unsigned __int8 *)(v60 + v74 + 2);
      uint64_t result = v79 ^ *(unsigned __int8 *)(v62 + v74 + 2);
      char v80 = *(unsigned char *)(v60 + v74 + 3) ^ *(unsigned char *)(v62 + v74 + 3);
      _OWORD v78[2] = v79 ^ *(unsigned char *)(v62 + v74 + 2);
      v78[3] = v80;
      v74 += 4;
      ++v75;
      v76 += 4;
    }
    while (v74 <= v11);
    goto LABEL_44;
  }
  if ((int)a7 >= 1)
  {
    uint64_t v13 = (unsigned char *)(a5 + 2);
    uint64_t v14 = (unsigned char *)(a3 + 2);
    int v15 = (unsigned char *)(result + 1);
    do
    {
      *(v13 - 2) = *(v14 - 2) ^ *(v15 - 1);
      if (a7 != 1)
      {
        *(v13 - 1) = *(v14 - 1) ^ *v15;
        if (a7 != 2) {
          *uint64_t v13 = *v14 ^ v15[1];
        }
      }
      v13 += a6;
      v14 += a4;
      v15 += a2;
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_10021F08C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8)
{
  if (!a8) {
    return result;
  }
  int v8 = a8 - 1;
  unint64_t v9 = (a7 - 4);
  if (a7 >= 32)
  {
    uint64_t v12 = 0;
    uint64_t v13 = (char *)(result + 32);
    uint64_t v14 = (unsigned char *)(a5 + 32);
    unint64_t v15 = result;
    unint64_t v16 = a5;
    while (1)
    {
      unint64_t v17 = 0;
      int v18 = v8;
      uint64_t v19 = 0x2000000000;
      unint64_t v20 = v14;
      unint64_t v21 = v13;
      do
      {
        uint64_t v22 = v19;
        uint64_t v23 = v21;
        uint64_t v24 = v20;
        int8x16_t v25 = vmvnq_s8(*(int8x16_t *)(v15 + v17));
        int8x16_t v26 = vmvnq_s8(*(int8x16_t *)(v15 + v17 + 16));
        uint64_t v27 = (int8x16_t *)(v16 + v17);
        v17 += 32;
        *uint64_t v27 = v25;
        v27[1] = v26;
        uint64_t v19 = v22 + 0x2000000000;
        v21 += 32;
        v20 += 32;
      }
      while (v17 <= (a7 - 32));
      if ((int)v9 >= (int)v17) {
        break;
      }
      uint64_t v28 = v17;
      if ((int)v17 < a7) {
        goto LABEL_20;
      }
LABEL_11:
      v15 += a2;
      v16 += a6;
      int v8 = v18 - 1;
      ++v12;
      v13 += a2;
      v14 += a6;
      if (!v18) {
        return result;
      }
    }
    uint64_t v29 = 0;
    do
    {
      char v30 = *v23;
      v23 += 4;
      uint64_t v31 = (v22 >> 32) | 1;
      char v32 = ~*(unsigned char *)(v15 + v31);
      *uint64_t v24 = ~v30;
      v24 += 4;
      *(unsigned char *)(v16 + v31) = v32;
      uint64_t v33 = (v22 >> 32) | 3;
      char v34 = ~*(unsigned char *)(v15 + v33);
      *(unsigned char *)(v16 + ((v22 >> 32) | 2)) = ~*(unsigned char *)(v15 + ((v22 >> 32) | 2));
      *(unsigned char *)(v16 + v33) = v34;
      v22 += 0x400000000;
      v29 += 4;
    }
    while (v17 + v29 <= v9);
    uint64_t v28 = (v17 + v29);
    if ((int)v28 >= a7) {
      goto LABEL_11;
    }
LABEL_20:
    unint64_t v35 = a7 - v28;
    if (v35 < 8)
    {
      uint64_t v36 = v28;
      goto LABEL_35;
    }
    if (a5 + v12 * a6 - (result + v12 * a2) < 0x20)
    {
      uint64_t v36 = v28;
      goto LABEL_35;
    }
    if (v35 >= 0x20)
    {
      unint64_t v37 = v35 & 0xFFFFFFFFFFFFFFE0;
      uint64_t v38 = v28;
      unint64_t v39 = v35 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        int8x16_t v40 = vmvnq_s8(*(int8x16_t *)(v15 + v38 + 16));
        unint64_t v41 = (int8x16_t *)(v16 + v38);
        int8x16_t *v41 = vmvnq_s8(*(int8x16_t *)(v15 + v38));
        v41[1] = v40;
        v38 += 32;
        v39 -= 32;
      }
      while (v39);
      if (v35 == v37) {
        goto LABEL_11;
      }
      if ((v35 & 0x18) == 0)
      {
        uint64_t v36 = v37 + v28;
        do
        {
LABEL_35:
          *(unsigned char *)(v16 + v36) = ~*(unsigned char *)(v15 + v36);
          ++v36;
        }
        while (a7 != v36);
        goto LABEL_11;
      }
    }
    else
    {
      unint64_t v37 = 0;
    }
    uint64_t v36 = (v35 & 0xFFFFFFFFFFFFFFF8) + v28;
    unint64_t v42 = v37 - (v35 & 0xFFFFFFFFFFFFFFF8);
    uint64_t v43 = v37 + v28;
    do
    {
      *(int8x8_t *)(v16 + v43) = vmvn_s8(*(int8x8_t *)(v15 + v43));
      v43 += 8;
      v42 += 8;
    }
    while (v42);
    if (v35 == (v35 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }
  if (a7 >= 4)
  {
    uint64_t v44 = 0;
    uint64_t v45 = v9 & 0xFFFFFFFC;
    uint64_t v46 = v45 + 5;
    if (v45 + 5 <= (unint64_t)a7) {
      uint64_t v46 = a7;
    }
    unint64_t v47 = v46 - v45 - 4;
    uint64_t v48 = v45 + 4;
    uint64_t v49 = (v9 >> 2) + 1;
    unint64_t v79 = v47 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v80 = v47 & 0xFFFFFFFFFFFFFFE0;
    unint64_t v50 = result;
    unint64_t v51 = a5;
    while (1)
    {
      int v52 = v8;
      uint64_t v53 = v44 * a6;
      uint64_t v54 = v44 * a2;
      if (v9 < 0x3C) {
        break;
      }
      if (v51 < result + v48 + v54 && v50 < a5 + v48 + v53) {
        break;
      }
      uint64_t v56 = 0;
      uint64_t v57 = v49 & 0x7FFFFFF0;
      do
      {
        uint64_t v58 = (const char *)(v50 + v56);
        int8x16x4_t v81 = vld4q_s8(v58);
        v82.val[0] = vmvnq_s8(v81.val[0]);
        v82.val[1] = vmvnq_s8(v81.val[1]);
        v82.val[2] = vmvnq_s8(v81.val[2]);
        v82.val[3] = vmvnq_s8(v81.val[3]);
        uint64_t v59 = (char *)(v51 + v56);
        vst4q_s8(v59, v82);
        v56 += 64;
        v57 -= 16;
      }
      while (v57);
      unint64_t v60 = v49 & 0x7FFFFFF0;
      uint64_t v61 = (((v60 >> 4) & 0x7FFFFFF) << 6) | 4;
      uint64_t v62 = 4 * v60;
      unint64_t v63 = v60 - 1;
      unint64_t v64 = v62;
      if (v49 != v60) {
        goto LABEL_53;
      }
      if ((int)(4 * (v49 & 0x7FFFFFF0)) < a7) {
        goto LABEL_56;
      }
LABEL_40:
      v50 += a2;
      v51 += a6;
      int v8 = v52 - 1;
      ++v44;
      if (!v52) {
        return result;
      }
    }
    unint64_t v60 = 0;
    uint64_t v62 = 0;
    uint64_t v61 = 4;
LABEL_53:
    unint64_t v63 = v60 - 1;
    unint64_t v64 = v61 - 4;
    uint64_t v65 = v62 + 3;
    do
    {
      char v66 = ~*(unsigned char *)(v50 + v65 - 2);
      uint64_t v67 = (unsigned char *)(v51 + v65);
      *(v67 - 3) = ~*(unsigned char *)(v50 + v65 - 3);
      *(v67 - 2) = v66;
      char v68 = ~*(unsigned char *)(v50 + v65);
      *(v67 - 1) = ~*(unsigned char *)(v50 + v65 - 1);
      *uint64_t v67 = v68;
      ++v63;
      v64 += 4;
      int v69 = v65 + 4;
      unint64_t v70 = v65 + 1;
      v65 += 4;
    }
    while (v70 <= v9);
    if (v69 - 3 >= a7) {
      goto LABEL_40;
    }
LABEL_56:
    if (v47 < 8 || 4 * v63 + a5 + v53 - (4 * v63 + result + v54) < 0x20)
    {
      unint64_t v71 = v64;
      goto LABEL_59;
    }
    if (v47 >= 0x20)
    {
      unint64_t v73 = v64;
      unint64_t v74 = v47 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        int8x16_t v75 = vmvnq_s8(*(int8x16_t *)(v50 + v73 + 16));
        uint64_t v76 = (int8x16_t *)(v51 + v73);
        *uint64_t v76 = vmvnq_s8(*(int8x16_t *)(v50 + v73));
        v76[1] = v75;
        v73 += 32;
        v74 -= 32;
      }
      while (v74);
      if (v47 == v80) {
        goto LABEL_40;
      }
      unint64_t v72 = v47 & 0xFFFFFFFFFFFFFFE0;
      if ((v47 & 0x18) == 0)
      {
        unint64_t v71 = v64 + v80;
        do
        {
LABEL_59:
          *(unsigned char *)(v51 + v71) = ~*(unsigned char *)(v50 + v71);
          ++v71;
        }
        while (v71 < a7);
        goto LABEL_40;
      }
    }
    else
    {
      unint64_t v72 = 0;
    }
    unint64_t v71 = v64 + v79;
    unint64_t v77 = v72 - (v47 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v78 = v72 + v64;
    do
    {
      *(int8x8_t *)(v51 + v78) = vmvn_s8(*(int8x8_t *)(v50 + v78));
      v78 += 8;
      v77 += 8;
    }
    while (v77);
    if (v47 == v79) {
      goto LABEL_40;
    }
    goto LABEL_59;
  }
  if (a7 >= 1)
  {
    int v10 = (unsigned char *)(result + 2);
    unint64_t v11 = (unsigned char *)(a5 + 2);
    do
    {
      *(v11 - 2) = ~*(v10 - 2);
      if (a7 != 1)
      {
        *(v11 - 1) = ~*(v10 - 1);
        if (a7 != 2) {
          *unint64_t v11 = ~*v10;
        }
      }
      v10 += a2;
      v11 += a6;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint8x16_t *sub_10021F5A4(uint8x16_t *result, uint64_t a2, uint8x16_t *a3, uint64_t a4, int8x16_t *a5, uint64_t a6, int a7, int a8, int *a9)
{
  int v9 = *a9;
  if ((*a9 & 0xFFFFFFFE) != 2)
  {
    int v10 = result;
    uint64_t v11 = a2;
    switch(v9)
    {
      case 0:
      case 5:
        if (v9) {
          unsigned int v12 = 255;
        }
        else {
          unsigned int v12 = 0;
        }
        if (!a8) {
          return result;
        }
        int v13 = a8 - 1;
        unint64_t v14 = (a7 - 16);
        if (a7 < 16)
        {
          if (a7 >= 1)
          {
            do
            {
              uint64_t v15 = 0;
              int v16 = v13;
              do
              {
                if (result->u8[v15] == a3->u8[v15]) {
                  char v17 = ~(_BYTE)v12;
                }
                else {
                  char v17 = v12;
                }
                a5->i8[v15++] = v17;
              }
              while (a7 != v15);
              uint64_t result = (uint8x16_t *)((char *)result + a2);
              a3 = (uint8x16_t *)((char *)a3 + a4);
              a5 = (int8x16_t *)((char *)a5 + a6);
              --v13;
            }
            while (v16);
          }
          return result;
        }
        int8x16_t v65 = vdupq_n_s8(v12);
        uint64_t v66 = v14 & 0xFFFFFFF0;
        if (v66 + 17 <= (unint64_t)a7) {
          uint64_t v67 = a7;
        }
        else {
          uint64_t v67 = (v14 & 0xFFFFFFF0) + 17;
        }
        unint64_t v68 = v67 - 16 - v66;
        unint64_t v69 = v67 & 0xF;
        int8x16_t v70 = (int8x16_t)vdupq_n_s32(v12);
        uint64_t v71 = v67 & 7;
        uint64_t v114 = (v67 & 0x1FFFFFFF8) - v66 - 16;
        uint64_t v110 = (v67 & 0x1FFFFFFF0) - v66 - 16;
        unint64_t v72 = a5 + 1;
        unint64_t v73 = a3 + 1;
        unint64_t v74 = result + 1;
        uint64_t v112 = v67 - 16 - v71 - v66;
        int8x16_t v75 = a5;
        uint64_t v76 = result;
        unint64_t v77 = a3;
        break;
      case 1:
      case 4:
        goto LABEL_20;
      default:
        return result;
    }
    while (1)
    {
      unint64_t v78 = 0;
      int v79 = v13;
      unint64_t v80 = v74;
      int8x16x4_t v81 = v73;
      int8x16x4_t v82 = v72;
      do
      {
        uint64_t v83 = v82;
        BOOL v84 = v81;
        *(int8x16_t *)((char *)a5 + v78) = veorq_s8(v65, vceqq_s8(*(int8x16_t *)((char *)result + v78), *(int8x16_t *)((char *)a3 + v78)));
        uint64_t v85 = v80;
        v78 += 16;
        ++v82;
        ++v81;
        ++v80;
      }
      while (v78 <= v14);
      if ((int)v78 >= a7) {
        goto LABEL_63;
      }
      if (v68 < 8
        || (unint64_t)((char *)v75 - (char *)v76) < 0x10
        || (unint64_t)((char *)v75 - (char *)v77) < 0x10)
      {
        goto LABEL_68;
      }
      if (v68 >= 0x10)
      {
        unint64_t v88 = v68 - v69;
        int8x16_t v89 = v85;
        int8x16_t v90 = v84;
        unint64_t v91 = v83;
        do
        {
          uint8x16_t v92 = *v89++;
          uint8x16_t v93 = v92;
          uint8x16_t v94 = *v90++;
          uint16x8_t v95 = vmovl_u8(*(uint8x8_t *)v94.i8);
          uint16x8_t v96 = vmovl_u8(*(uint8x8_t *)v93.i8);
          uint16x8_t v97 = vmovl_high_u8(v94);
          uint16x8_t v98 = vmovl_high_u8(v93);
          v118.val[3] = veorq_s8(v70, (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v98), (int32x4_t)vmovl_high_u16(v97)));
          v118.val[2] = veorq_s8(v70, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v98.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v97.i8)));
          v118.val[1] = veorq_s8(v70, (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v96), (int32x4_t)vmovl_high_u16(v95)));
          v118.val[0] = veorq_s8(v70, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v96.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v95.i8)));
          *v91++ = vqtbl4q_s8(v118, (int8x16_t)xmmword_1004047C0);
          v88 -= 16;
        }
        while (v88);
        if (!v69) {
          goto LABEL_63;
        }
        unint64_t v87 = v68 - v69;
        if (v69 < 8)
        {
          v78 += v110;
          do
          {
LABEL_68:
            if (result->u8[v78] == a3->u8[v78]) {
              char v86 = ~(_BYTE)v12;
            }
            else {
              char v86 = v12;
            }
            a5->i8[v78++] = v86;
          }
          while (v78 < a7);
          goto LABEL_63;
        }
      }
      else
      {
        unint64_t v87 = 0;
      }
      v78 += v114;
      unint64_t v99 = (uint64_t *)((char *)v83->i64 + v87);
      unint64_t v100 = (uint8x8_t *)&v84->i8[v87];
      unint64_t v101 = (uint8x8_t *)&v85->i8[v87];
      uint64_t v102 = v112 - v87;
      do
      {
        uint8x8_t v103 = *v101++;
        uint8x8_t v104 = v103;
        uint8x8_t v105 = *v100++;
        uint16x8_t v106 = vmovl_u8(v105);
        uint16x8_t v107 = vmovl_u8(v104);
        int8x16_t v108 = (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v107), (int32x4_t)vmovl_high_u16(v106));
        v116.val[0] = veorq_s8(v70, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v107.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v106.i8)));
        v116.val[1] = veorq_s8(v70, v108);
        *v99++ = vqtbl2q_s8(v116, (int8x16_t)xmmword_1004047D0).u64[0];
        v102 -= 8;
      }
      while (v102);
      if (v71) {
        goto LABEL_68;
      }
LABEL_63:
      uint64_t result = (uint8x16_t *)((char *)result + a2);
      a3 = (uint8x16_t *)((char *)a3 + a4);
      a5 = (int8x16_t *)((char *)a5 + a6);
      int v13 = v79 - 1;
      unint64_t v77 = (uint8x16_t *)((char *)v77 + a4);
      uint64_t v76 = (uint8x16_t *)((char *)v76 + a2);
      int8x16_t v75 = (int8x16_t *)((char *)v75 + a6);
      unint64_t v72 = (int8x16_t *)((char *)v72 + a6);
      unint64_t v73 = (uint8x16_t *)((char *)v73 + a4);
      unint64_t v74 = (uint8x16_t *)((char *)v74 + a2);
      if (!v79) {
        return result;
      }
    }
  }
  if (v9 == 2) {
    int v9 = 4;
  }
  else {
    int v9 = 1;
  }
  int v10 = a3;
  uint64_t v11 = a4;
  a3 = result;
  a4 = a2;
LABEL_20:
  if (v9 == 1) {
    unsigned int v18 = 0;
  }
  else {
    unsigned int v18 = 255;
  }
  if (a8)
  {
    int v19 = a8 - 1;
    unint64_t v20 = (a7 - 16);
    if (a7 < 16)
    {
      if (a7 >= 1)
      {
        do
        {
          uint64_t v21 = 0;
          int v22 = v19;
          do
          {
            if (v10->u8[v21] <= a3->u8[v21]) {
              char v23 = v18;
            }
            else {
              char v23 = ~(_BYTE)v18;
            }
            a5->i8[v21++] = v23;
          }
          while (a7 != v21);
          int v10 = (uint8x16_t *)((char *)v10 + v11);
          a3 = (uint8x16_t *)((char *)a3 + a4);
          a5 = (int8x16_t *)((char *)a5 + a6);
          --v19;
        }
        while (v22);
      }
      return result;
    }
    int8x16_t v24 = vdupq_n_s8(v18);
    uint64_t v25 = v20 & 0xFFFFFFF0;
    if (v25 + 17 <= (unint64_t)a7) {
      uint64_t v26 = a7;
    }
    else {
      uint64_t v26 = (v20 & 0xFFFFFFF0) + 17;
    }
    unint64_t v27 = v26 - 16 - v25;
    unint64_t v28 = v26 & 0xF;
    int8x16_t v29 = (int8x16_t)vdupq_n_s32(v18);
    uint64_t v30 = v26 & 7;
    uint64_t v113 = (v26 & 0x1FFFFFFF8) - v25 - 16;
    uint64_t v109 = (v26 & 0x1FFFFFFF0) - v25 - 16;
    uint64_t v31 = a5 + 1;
    char v32 = a3 + 1;
    uint64_t v33 = v10 + 1;
    uint64_t v111 = v26 - 16 - v30 - v25;
    char v34 = a5;
    unint64_t v35 = a3;
    uint64_t v36 = v10;
    do
    {
      unint64_t v37 = 0;
      int v38 = v19;
      unint64_t v39 = v33;
      uint64_t result = v32;
      int8x16_t v40 = v31;
      do
      {
        unint64_t v41 = v40;
        unint64_t v42 = result;
        *(int8x16_t *)((char *)a5 + v37) = veorq_s8(v24, (int8x16_t)vcgtq_u8(*(uint8x16_t *)((char *)v10 + v37), *(uint8x16_t *)((char *)a3 + v37)));
        uint64_t v43 = v39;
        v37 += 16;
        ++v40;
        ++result;
        ++v39;
      }
      while (v37 <= v20);
      if ((int)v37 >= a7) {
        goto LABEL_37;
      }
      if (v27 < 8
        || (unint64_t)((char *)v34 - (char *)v35) < 0x10
        || (unint64_t)((char *)v34 - (char *)v36) < 0x10)
      {
        goto LABEL_54;
      }
      if (v27 >= 0x10)
      {
        unint64_t v45 = v27 - v28;
        uint64_t result = v43;
        uint64_t v46 = v42;
        unint64_t v47 = v41;
        do
        {
          uint8x16_t v48 = *result++;
          uint8x16_t v49 = v48;
          uint8x16_t v50 = *v46++;
          uint16x8_t v51 = vmovl_u8(*(uint8x8_t *)v50.i8);
          uint16x8_t v52 = vmovl_u8(*(uint8x8_t *)v49.i8);
          uint16x8_t v53 = vmovl_high_u8(v50);
          uint16x8_t v54 = vmovl_high_u8(v49);
          v117.val[3] = veorq_s8(v29, (int8x16_t)vcgtq_u32(vmovl_high_u16(v54), vmovl_high_u16(v53)));
          v117.val[2] = veorq_s8(v29, (int8x16_t)vcgtq_u32(vmovl_u16(*(uint16x4_t *)v54.i8), vmovl_u16(*(uint16x4_t *)v53.i8)));
          v117.val[1] = veorq_s8(v29, (int8x16_t)vcgtq_u32(vmovl_high_u16(v52), vmovl_high_u16(v51)));
          v117.val[0] = veorq_s8(v29, (int8x16_t)vcgtq_u32(vmovl_u16(*(uint16x4_t *)v52.i8), vmovl_u16(*(uint16x4_t *)v51.i8)));
          *v47++ = vqtbl4q_s8(v117, (int8x16_t)xmmword_1004047C0);
          v45 -= 16;
        }
        while (v45);
        if (!v28) {
          goto LABEL_37;
        }
        unint64_t v44 = v27 - v28;
        if (v28 < 8)
        {
          v37 += v109;
          do
          {
LABEL_54:
            uint64_t result = (uint8x16_t *)a3->u8[v37];
            if (v10->u8[v37] <= result) {
              char v64 = v18;
            }
            else {
              char v64 = ~(_BYTE)v18;
            }
            a5->i8[v37++] = v64;
          }
          while (v37 < a7);
          goto LABEL_37;
        }
      }
      else
      {
        unint64_t v44 = 0;
      }
      v37 += v113;
      unint64_t v55 = (uint64_t *)((char *)v41->i64 + v44);
      uint64_t result = (uint8x16_t *)((char *)v42 + v44);
      uint64_t v56 = (uint8x8_t *)&v43->i8[v44];
      uint64_t v57 = v111 - v44;
      do
      {
        uint8x8_t v58 = *v56++;
        uint8x8_t v59 = v58;
        uint8x8_t v60 = *(uint8x8_t *)result->i8;
        uint64_t result = (uint8x16_t *)((char *)result + 8);
        uint16x8_t v61 = vmovl_u8(v60);
        uint16x8_t v62 = vmovl_u8(v59);
        int8x16_t v63 = (int8x16_t)vcgtq_u32(vmovl_high_u16(v62), vmovl_high_u16(v61));
        v115.val[0] = veorq_s8(v29, (int8x16_t)vcgtq_u32(vmovl_u16(*(uint16x4_t *)v62.i8), vmovl_u16(*(uint16x4_t *)v61.i8)));
        v115.val[1] = veorq_s8(v29, v63);
        *v55++ = vqtbl2q_s8(v115, (int8x16_t)xmmword_1004047D0).u64[0];
        v57 -= 8;
      }
      while (v57);
      if (v30) {
        goto LABEL_54;
      }
LABEL_37:
      int v10 = (uint8x16_t *)((char *)v10 + v11);
      a3 = (uint8x16_t *)((char *)a3 + a4);
      a5 = (int8x16_t *)((char *)a5 + a6);
      int v19 = v38 - 1;
      uint64_t v36 = (uint8x16_t *)((char *)v36 + v11);
      unint64_t v35 = (uint8x16_t *)((char *)v35 + a4);
      char v34 = (int8x16_t *)((char *)v34 + a6);
      uint64_t v31 = (int8x16_t *)((char *)v31 + a6);
      char v32 = (uint8x16_t *)((char *)v32 + a4);
      uint64_t v33 = (uint8x16_t *)((char *)v33 + v11);
    }
    while (v38);
  }
  return result;
}

unint64_t sub_10021FBEC(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, int a8, int *a9)
{
  int v9 = *a9;
  uint64_t v200 = a6;
  int v201 = a7;
  unint64_t v199 = a5;
  if ((*a9 & 0xFFFFFFFE) != 2)
  {
    unint64_t v10 = result;
    uint64_t v11 = a2;
    switch(v9)
    {
      case 0:
      case 5:
        if (v9) {
          unsigned int v12 = 255;
        }
        else {
          unsigned int v12 = 0;
        }
        if (!a8) {
          return result;
        }
        unint64_t v13 = (a7 - 4);
        if (a7 < 4)
        {
          if (a7 >= 1)
          {
            unint64_t v14 = (unsigned __int8 *)(a3 + 2);
            uint64_t v15 = (unsigned __int8 *)(result + 2);
            int v16 = (unsigned char *)(a5 + 1);
            do
            {
              if (*(v15 - 2) == *(v14 - 2)) {
                char v17 = ~(_BYTE)v12;
              }
              else {
                char v17 = v12;
              }
              *(v16 - 1) = v17;
              if (a7 != 1)
              {
                char v18 = *(v15 - 1) == *(v14 - 1) ? ~(_BYTE)v12 : v12;
                *int v16 = v18;
                if (a7 != 2)
                {
                  if (*v15 == *v14) {
                    char v19 = ~(_BYTE)v12;
                  }
                  else {
                    char v19 = v12;
                  }
                  v16[1] = v19;
                }
              }
              v14 += a4;
              v15 += a2;
              v16 += a6;
              --a8;
            }
            while (a8);
          }
          return result;
        }
        uint64_t v103 = 0;
        int v104 = a8 - 1;
        unint64_t v105 = a7;
        uint64_t v106 = (v13 & 0xFFFFFFFC) + 4;
        unint64_t v203 = v106 + a5;
        unint64_t v194 = v106 + result;
        unint64_t v188 = v106 + a3;
        unint64_t v107 = (v13 & 0xFFFFFFFC) + 5;
        if (v107 <= a7) {
          unint64_t v107 = a7;
        }
        unint64_t v108 = v107 - (v13 & 0xFFFFFFFC) - 4;
        uint64_t v190 = (v13 >> 2) + 1;
        uint64_t v109 = v190 & 0x7FFFFFF0;
        int8x16_t v110 = (int8x16_t)vdupq_n_s32(v12);
        unint64_t v187 = v108 & 0xFFFFFFFFFFFFFFF0;
        unint64_t v183 = v106 + (v108 & 0xFFFFFFFFFFFFFFF0);
        unint64_t v185 = v106 + (v108 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v186 = v108 & 0xFFFFFFFFFFFFFFF8;
        uint64_t v184 = -(uint64_t)(v108 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v111 = a5;
        unint64_t v112 = result;
        unint64_t v113 = a3;
        unint64_t v196 = a3;
        uint64_t v198 = a4;
        unint64_t v205 = result;
        unint64_t v192 = v108;
        break;
      case 1:
      case 4:
        goto LABEL_27;
      default:
        return result;
    }
    while (1)
    {
      int v114 = v104;
      uint64_t v115 = v103 * a6;
      uint64_t v116 = v103 * a2;
      uint64_t v117 = v103 * a4;
      if (v13 >= 0x3C)
      {
        unint64_t v118 = 0;
        unint64_t v119 = a5 + v106 + v115;
        BOOL v121 = v111 < a3 + v106 + v117 && v113 < v119;
        if ((v112 >= v119 || v111 >= result + v106 + v116) && !v121)
        {
          uint64_t v206 = v103 * a6;
          uint64_t v207 = v103 * a4;
          uint64_t v123 = 0;
          uint64_t v124 = v109;
          do
          {
            int8x16_t v125 = vceqq_s8(*(int8x16_t *)(v112 + v123), *(int8x16_t *)(v113 + v123));
            int8x16_t v126 = vceqq_s8(*(int8x16_t *)(v112 + v123 + 16), *(int8x16_t *)(v113 + v123 + 16));
            int8x16_t v127 = vceqq_s8(*(int8x16_t *)(v112 + v123 + 32), *(int8x16_t *)(v113 + v123 + 32));
            int8x16_t v128 = vceqq_s8(*(int8x16_t *)(v112 + v123 + 48), *(int8x16_t *)(v113 + v123 + 48));
            v129.i16[0] = v125.u8[0];
            v129.i16[1] = v125.u8[4];
            v130.i16[0] = v126.u8[0];
            v130.i16[1] = v126.u8[4];
            v131.i16[0] = v127.u8[0];
            v131.i16[1] = v127.u8[4];
            v132.i16[0] = v128.u8[0];
            v132.i16[1] = v128.u8[4];
            v129.i16[2] = v125.u8[8];
            v130.i16[2] = v126.u8[8];
            v131.i16[2] = v127.u8[8];
            v132.i16[2] = v128.u8[8];
            v129.i16[3] = v125.u8[12];
            v130.i16[3] = v126.u8[12];
            v131.i16[3] = v127.u8[12];
            v133.i16[0] = v125.u8[1];
            v132.i16[3] = v128.u8[12];
            v133.i16[1] = v125.u8[5];
            v133.i16[2] = v125.u8[9];
            v133.i16[3] = v125.u8[13];
            v134.i16[0] = v126.u8[1];
            v134.i16[1] = v126.u8[5];
            v134.i16[2] = v126.u8[9];
            v134.i16[3] = v126.u8[13];
            v135.i16[0] = v127.u8[1];
            v135.i16[1] = v127.u8[5];
            v135.i16[2] = v127.u8[9];
            v135.i16[3] = v127.u8[13];
            v136.i16[0] = v128.u8[1];
            v136.i16[1] = v128.u8[5];
            v136.i16[2] = v128.u8[9];
            v136.i16[3] = v128.u8[13];
            int32x4_t v137 = vshlq_n_s32((int32x4_t)vmovl_u16(v134), 0x1FuLL);
            int32x4_t v138 = (int32x4_t)vmovl_u16(v136);
            v136.i16[0] = v125.u8[2];
            v136.i16[1] = v125.u8[6];
            int32x4_t v139 = vshlq_n_s32(v138, 0x1FuLL);
            v136.i16[2] = v125.u8[10];
            v136.i16[3] = v125.u8[14];
            int32x4_t v140 = vshlq_n_s32((int32x4_t)vmovl_u16(v136), 0x1FuLL);
            v136.i16[0] = v126.u8[2];
            v136.i16[1] = v126.u8[6];
            int8x16_t v141 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v131), 0x1FuLL));
            v136.i16[2] = v126.u8[10];
            v136.i16[3] = v126.u8[14];
            int8x16_t v142 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v132), 0x1FuLL));
            int32x4_t v143 = vshlq_n_s32((int32x4_t)vmovl_u16(v136), 0x1FuLL);
            int8x16_t v144 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v133), 0x1FuLL));
            v131.i16[0] = v127.u8[2];
            v131.i16[1] = v127.u8[6];
            v131.i16[2] = v127.u8[10];
            int8x16_t v145 = (int8x16_t)vcltzq_s32(v137);
            v131.i16[3] = v127.u8[14];
            int8x16_t v146 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v135), 0x1FuLL));
            int32x4_t v147 = vshlq_n_s32((int32x4_t)vmovl_u16(v131), 0x1FuLL);
            v135.i16[0] = v128.u8[2];
            v135.i16[1] = v128.u8[6];
            int8x16_t v148 = (int8x16_t)vcltzq_s32(v140);
            v135.i16[2] = v128.u8[10];
            v135.i16[3] = v128.u8[14];
            int32x4_t v149 = (int32x4_t)vmovl_u16(v135);
            int8x16_t v150 = (int8x16_t)vcltzq_s32(v143);
            v221.val[3] = veorq_s8(v110, v142);
            v125.i16[0] = v125.u8[3];
            v125.i16[1] = v125.u8[7];
            v125.i16[2] = v125.u8[11];
            v221.val[2] = veorq_s8(v110, v141);
            v125.i16[3] = v125.u8[15];
            __int16 v151 = v126.u8[15];
            v221.val[1] = veorq_s8(v110, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v130), 0x1FuLL)));
            __int16 v152 = v126.u8[11];
            v221.val[0] = veorq_s8(v110, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v129), 0x1FuLL)));
            v129.i16[0] = v126.u8[3];
            v129.i16[1] = v126.u8[7];
            v211.val[3] = veorq_s8(v110, (int8x16_t)vcltzq_s32(v139));
            int8x16_t v153 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v125.i8), 0x1FuLL));
            v129.i16[2] = v152;
            v129.i16[3] = v151;
            v211.val[2] = veorq_s8(v110, v146);
            __int16 v154 = v127.u8[15];
            v211.val[1] = veorq_s8(v110, v145);
            int32x4_t v155 = vshlq_n_s32((int32x4_t)vmovl_u16(v129), 0x1FuLL);
            __int16 v156 = v127.u8[11];
            v211.val[0] = veorq_s8(v110, v144);
            v129.i16[0] = v127.u8[3];
            v129.i16[1] = v127.u8[7];
            v213.val[3] = veorq_s8(v110, (int8x16_t)vcltzq_s32(vshlq_n_s32(v149, 0x1FuLL)));
            int8x16_t v157 = (int8x16_t)vcltzq_s32(v155);
            v129.i16[2] = v156;
            v129.i16[3] = v154;
            v213.val[2] = veorq_s8(v110, (int8x16_t)vcltzq_s32(v147));
            int32x4_t v158 = (int32x4_t)vmovl_u16(v129);
            v213.val[1] = veorq_s8(v110, v150);
            v129.i16[0] = v128.u8[3];
            v129.i16[1] = v128.u8[7];
            v213.val[0] = veorq_s8(v110, v148);
            v129.i16[2] = v128.u8[11];
            v129.i16[3] = v128.u8[15];
            v216.val[0] = vqtbl4q_s8(v221, (int8x16_t)xmmword_1004047C0);
            v219.val[3] = veorq_s8(v110, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v129), 0x1FuLL)));
            v216.val[1] = vqtbl4q_s8(v211, (int8x16_t)xmmword_1004047C0);
            v219.val[2] = veorq_s8(v110, (int8x16_t)vcltzq_s32(vshlq_n_s32(v158, 0x1FuLL)));
            v219.val[1] = veorq_s8(v110, v157);
            v219.val[0] = veorq_s8(v110, v153);
            v216.val[2] = vqtbl4q_s8(v213, (int8x16_t)xmmword_1004047C0);
            BOOL v159 = (char *)(v111 + v123);
            v216.val[3] = vqtbl4q_s8(v219, (int8x16_t)xmmword_1004047C0);
            vst4q_s8(v159, v216);
            v123 += 64;
            v124 -= 16;
          }
          while (v124);
          unint64_t v118 = 4 * (v190 & 0x7FFFFFF0);
          uint64_t v109 = v190 & 0x7FFFFFF0;
          unint64_t v108 = v192;
          a6 = v200;
          a7 = v201;
          a4 = v198;
          a5 = v199;
          a3 = v196;
          uint64_t result = v205;
          uint64_t v116 = v103 * a2;
          uint64_t v115 = v206;
          uint64_t v117 = v207;
          if (v190 == v109) {
            goto LABEL_143;
          }
        }
      }
      else
      {
        unint64_t v118 = 0;
      }
      do
      {
        unint64_t v160 = v112 + v118;
        unint64_t v161 = v113 + v118;
        if (*(unsigned __int8 *)(v112 + v118 + 1) == *(unsigned __int8 *)(v113 + v118 + 1)) {
          char v162 = ~(_BYTE)v12;
        }
        else {
          char v162 = v12;
        }
        if (*(unsigned __int8 *)(v112 + v118) == *(unsigned __int8 *)(v113 + v118)) {
          char v163 = ~(_BYTE)v12;
        }
        else {
          char v163 = v12;
        }
        BOOL v164 = (unsigned char *)(v111 + v118);
        unsigned char *v164 = v163;
        v164[1] = v162;
        if (*(unsigned __int8 *)(v160 + 3) == *(unsigned __int8 *)(v161 + 3)) {
          char v165 = ~(_BYTE)v12;
        }
        else {
          char v165 = v12;
        }
        if (*(unsigned __int8 *)(v160 + 2) == *(unsigned __int8 *)(v161 + 2)) {
          char v166 = ~(_BYTE)v12;
        }
        else {
          char v166 = v12;
        }
        void v164[2] = v166;
        v164[3] = v165;
        v118 += 4;
      }
      while (v118 <= v13);
LABEL_143:
      if ((int)v118 < a7)
      {
        unint64_t v167 = (v13 & 0xFFFFFFFC) + 4;
        if (v108 < 8
          || (unint64_t v167 = (v13 & 0xFFFFFFFC) + 4, v203 + v115 - (v194 + v116) < 0x10)
          || (unint64_t v167 = (v13 & 0xFFFFFFFC) + 4, v203 + v115 - (v188 + v117) < 0x10))
        {
          do
          {
LABEL_145:
            if (*(unsigned __int8 *)(v112 + v167) == *(unsigned __int8 *)(v113 + v167)) {
              char v168 = ~(_BYTE)v12;
            }
            else {
              char v168 = v12;
            }
            *(unsigned char *)(v111 + v167++) = v168;
          }
          while (v167 < v105);
          goto LABEL_112;
        }
        if (v108 >= 0x10)
        {
          uint64_t v175 = (v13 & 0xFFFFFFFC) + 4;
          unint64_t v176 = v187;
          do
          {
            uint8x16_t v177 = *(uint8x16_t *)(v112 + v175);
            uint8x16_t v178 = *(uint8x16_t *)(v113 + v175);
            uint16x8_t v179 = vmovl_u8(*(uint8x8_t *)v178.i8);
            uint16x8_t v180 = vmovl_u8(*(uint8x8_t *)v177.i8);
            uint16x8_t v181 = vmovl_high_u8(v178);
            uint16x8_t v182 = vmovl_high_u8(v177);
            v217.val[3] = veorq_s8(v110, (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v182), (int32x4_t)vmovl_high_u16(v181)));
            v217.val[2] = veorq_s8(v110, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v182.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v181.i8)));
            v217.val[1] = veorq_s8(v110, (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v180), (int32x4_t)vmovl_high_u16(v179)));
            v217.val[0] = veorq_s8(v110, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v180.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v179.i8)));
            *(int8x16_t *)(v111 + v175) = vqtbl4q_s8(v217, (int8x16_t)xmmword_1004047C0);
            v175 += 16;
            v176 -= 16;
          }
          while (v176);
          if (v108 == v187) {
            goto LABEL_112;
          }
          unint64_t v169 = v187;
          unint64_t v167 = v183;
          if ((v108 & 8) == 0) {
            goto LABEL_145;
          }
        }
        else
        {
          unint64_t v169 = 0;
        }
        unint64_t v170 = v184 + v169;
        unint64_t v171 = v106 + v169;
        do
        {
          uint16x8_t v172 = vmovl_u8(*(uint8x8_t *)(v113 + v171));
          uint16x8_t v173 = vmovl_u8(*(uint8x8_t *)(v112 + v171));
          int8x16_t v174 = (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v173), (int32x4_t)vmovl_high_u16(v172));
          v209.val[0] = veorq_s8(v110, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v173.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v172.i8)));
          v209.val[1] = veorq_s8(v110, v174);
          *(void *)(v111 + v171) = vqtbl2q_s8(v209, (int8x16_t)xmmword_1004047D0).u64[0];
          v171 += 8;
          v170 += 8;
        }
        while (v170);
        unint64_t v167 = v185;
        if (v108 != v186) {
          goto LABEL_145;
        }
      }
LABEL_112:
      v112 += a2;
      v113 += a4;
      v111 += a6;
      int v104 = v114 - 1;
      ++v103;
      if (!v114) {
        return result;
      }
    }
  }
  if (v9 == 2) {
    int v9 = 4;
  }
  else {
    int v9 = 1;
  }
  unint64_t v10 = a3;
  uint64_t v11 = a4;
  a3 = result;
  a4 = a2;
LABEL_27:
  if (v9 == 1) {
    unsigned int v20 = 0;
  }
  else {
    unsigned int v20 = 255;
  }
  if (a8)
  {
    uint64_t v21 = 0;
    unint64_t v22 = (a7 - 16);
    uint64_t v23 = a7 - 4;
    uint64_t result = a7;
    int8x16_t v24 = (int8x16_t)vdupq_n_s32(v20);
    unint64_t v25 = a5;
    unint64_t v26 = v10;
    unint64_t v27 = a3;
    unint64_t v195 = a3;
    uint64_t v197 = a4;
    unint64_t v191 = v10;
    int v193 = v9;
    uint64_t v189 = v11;
    while (1)
    {
      LODWORD(i) = 0;
      switch(v9)
      {
        case 0:
          if (a7 < 16) {
            goto LABEL_47;
          }
          for (unint64_t i = 0; i <= v22; i += 16)
            *(int8x16_t *)(v25 + i) = vceqq_s8(*(int8x16_t *)(v26 + i), *(int8x16_t *)(v27 + i));
          goto LABEL_53;
        case 1:
          if (a7 < 16) {
            goto LABEL_47;
          }
          for (unint64_t i = 0; i <= v22; i += 16)
            *(int8x16_t *)(v25 + i) = vcgtq_s8(*(int8x16_t *)(v26 + i), *(int8x16_t *)(v27 + i));
          goto LABEL_53;
        case 4:
          if (a7 < 16) {
            goto LABEL_47;
          }
          for (unint64_t i = 0; i <= v22; i += 16)
            *(int8x16_t *)(v25 + i) = vcgeq_s8(*(int8x16_t *)(v27 + i), *(int8x16_t *)(v26 + i));
          goto LABEL_53;
        case 5:
          if (a7 >= 16)
          {
            for (unint64_t i = 0; i <= v22; i += 16)
              *(int8x16_t *)(v25 + i) = vmvnq_s8(vceqq_s8(*(int8x16_t *)(v26 + i), *(int8x16_t *)(v27 + i)));
LABEL_53:
            unint64_t v29 = a5 + v21 * a6;
            unint64_t v30 = a3 + a4 * v21;
            unint64_t v31 = v10 + v11 * v21;
            if ((int)i > (int)v23)
            {
LABEL_49:
              if ((int)i >= a7) {
                goto LABEL_32;
              }
              goto LABEL_87;
            }
          }
          else
          {
LABEL_47:
            LODWORD(i) = 0;
LABEL_48:
            unint64_t v29 = a5 + v21 * a6;
            unint64_t v30 = a3 + a4 * v21;
            unint64_t v31 = v10 + v11 * v21;
            if ((int)v23 < 0) {
              goto LABEL_49;
            }
          }
          uint64_t v32 = (int)i;
          unint64_t v33 = v23 - (int)i;
          if (v33 >= 0x3C)
          {
            unint64_t v34 = v25 + (int)i;
            unint64_t v35 = (v33 & 0xFFFFFFFFFFFFFFFCLL) + (int)i;
            unint64_t v36 = v29 + 4 + v35;
            BOOL v38 = v25 + v32 < v31 + 4 + v35 && v26 + v32 < v36;
            BOOL v39 = v27 + v32 >= v36 || v34 >= v30 + 4 + v35;
            if (!v39 || v38)
            {
              unint64_t i = v32;
            }
            else
            {
              uint64_t v40 = (v33 >> 2) + 1;
              uint64_t v41 = v40 & 0x7FFFFFFFFFFFFFF0;
              unint64_t i = v32 + 4 * (v40 & 0x7FFFFFFFFFFFFFF0);
              uint64_t v202 = v40 & 0x7FFFFFFFFFFFFFF0;
              uint64_t v204 = v40;
              do
              {
                int8x16_t v42 = vcgtq_s8(*(int8x16_t *)(v26 + v32), *(int8x16_t *)(v27 + v32));
                int8x16_t v43 = vcgtq_s8(*(int8x16_t *)(v26 + v32 + 16), *(int8x16_t *)(v27 + v32 + 16));
                int8x16_t v44 = vcgtq_s8(*(int8x16_t *)(v26 + v32 + 32), *(int8x16_t *)(v27 + v32 + 32));
                int8x16_t v45 = vcgtq_s8(*(int8x16_t *)(v26 + v32 + 48), *(int8x16_t *)(v27 + v32 + 48));
                v46.i16[0] = v42.u8[0];
                v46.i16[1] = v42.u8[4];
                v47.i16[0] = v43.u8[0];
                v47.i16[1] = v43.u8[4];
                v48.i16[0] = v44.u8[0];
                v48.i16[1] = v44.u8[4];
                v49.i16[0] = v45.u8[0];
                v49.i16[1] = v45.u8[4];
                v46.i16[2] = v42.u8[8];
                v47.i16[2] = v43.u8[8];
                v48.i16[2] = v44.u8[8];
                v49.i16[2] = v45.u8[8];
                v46.i16[3] = v42.u8[12];
                v47.i16[3] = v43.u8[12];
                v48.i16[3] = v44.u8[12];
                v50.i16[0] = v42.u8[1];
                v49.i16[3] = v45.u8[12];
                v50.i16[1] = v42.u8[5];
                v50.i16[2] = v42.u8[9];
                v50.i16[3] = v42.u8[13];
                v51.i16[0] = v43.u8[1];
                v51.i16[1] = v43.u8[5];
                v51.i16[2] = v43.u8[9];
                v51.i16[3] = v43.u8[13];
                v52.i16[0] = v44.u8[1];
                v52.i16[1] = v44.u8[5];
                v52.i16[2] = v44.u8[9];
                v52.i16[3] = v44.u8[13];
                v53.i16[0] = v45.u8[1];
                v53.i16[1] = v45.u8[5];
                v53.i16[2] = v45.u8[9];
                v53.i16[3] = v45.u8[13];
                int32x4_t v54 = vshlq_n_s32((int32x4_t)vmovl_u16(v51), 0x1FuLL);
                int32x4_t v55 = (int32x4_t)vmovl_u16(v53);
                v53.i16[0] = v42.u8[2];
                v53.i16[1] = v42.u8[6];
                int32x4_t v56 = vshlq_n_s32(v55, 0x1FuLL);
                v53.i16[2] = v42.u8[10];
                v53.i16[3] = v42.u8[14];
                int32x4_t v57 = vshlq_n_s32((int32x4_t)vmovl_u16(v53), 0x1FuLL);
                v53.i16[0] = v43.u8[2];
                v53.i16[1] = v43.u8[6];
                int8x16_t v58 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v48), 0x1FuLL));
                v53.i16[2] = v43.u8[10];
                v53.i16[3] = v43.u8[14];
                int8x16_t v59 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v49), 0x1FuLL));
                int32x4_t v60 = vshlq_n_s32((int32x4_t)vmovl_u16(v53), 0x1FuLL);
                int8x16_t v61 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v50), 0x1FuLL));
                v48.i16[0] = v44.u8[2];
                v48.i16[1] = v44.u8[6];
                v48.i16[2] = v44.u8[10];
                int8x16_t v62 = (int8x16_t)vcltzq_s32(v54);
                v48.i16[3] = v44.u8[14];
                int8x16_t v63 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v52), 0x1FuLL));
                int32x4_t v64 = vshlq_n_s32((int32x4_t)vmovl_u16(v48), 0x1FuLL);
                v52.i16[0] = v45.u8[2];
                v52.i16[1] = v45.u8[6];
                int8x16_t v65 = (int8x16_t)vcltzq_s32(v57);
                v52.i16[2] = v45.u8[10];
                v52.i16[3] = v45.u8[14];
                int32x4_t v66 = (int32x4_t)vmovl_u16(v52);
                int8x16_t v67 = (int8x16_t)vcltzq_s32(v60);
                v220.val[3] = veorq_s8(v24, v59);
                v42.i16[0] = v42.u8[3];
                v42.i16[1] = v42.u8[7];
                v42.i16[2] = v42.u8[11];
                v220.val[2] = veorq_s8(v24, v58);
                v42.i16[3] = v42.u8[15];
                __int16 v68 = v43.u8[15];
                v220.val[1] = veorq_s8(v24, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v47), 0x1FuLL)));
                __int16 v69 = v43.u8[11];
                v220.val[0] = veorq_s8(v24, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v46), 0x1FuLL)));
                v46.i16[0] = v43.u8[3];
                v46.i16[1] = v43.u8[7];
                v210.val[3] = veorq_s8(v24, (int8x16_t)vcltzq_s32(v56));
                int8x16_t v70 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v42.i8), 0x1FuLL));
                v46.i16[2] = v69;
                v46.i16[3] = v68;
                v210.val[2] = veorq_s8(v24, v63);
                __int16 v71 = v44.u8[15];
                v210.val[1] = veorq_s8(v24, v62);
                int32x4_t v72 = vshlq_n_s32((int32x4_t)vmovl_u16(v46), 0x1FuLL);
                __int16 v73 = v44.u8[11];
                v210.val[0] = veorq_s8(v24, v61);
                v46.i16[0] = v44.u8[3];
                v46.i16[1] = v44.u8[7];
                v212.val[3] = veorq_s8(v24, (int8x16_t)vcltzq_s32(vshlq_n_s32(v66, 0x1FuLL)));
                int8x16_t v74 = (int8x16_t)vcltzq_s32(v72);
                v46.i16[2] = v73;
                v46.i16[3] = v71;
                v212.val[2] = veorq_s8(v24, (int8x16_t)vcltzq_s32(v64));
                int32x4_t v75 = (int32x4_t)vmovl_u16(v46);
                v212.val[1] = veorq_s8(v24, v67);
                v46.i16[0] = v45.u8[3];
                v46.i16[1] = v45.u8[7];
                v212.val[0] = veorq_s8(v24, v65);
                v46.i16[2] = v45.u8[11];
                v46.i16[3] = v45.u8[15];
                v214.val[0] = vqtbl4q_s8(v220, (int8x16_t)xmmword_1004047C0);
                v218.val[3] = veorq_s8(v24, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v46), 0x1FuLL)));
                v214.val[1] = vqtbl4q_s8(v210, (int8x16_t)xmmword_1004047C0);
                v218.val[2] = veorq_s8(v24, (int8x16_t)vcltzq_s32(vshlq_n_s32(v75, 0x1FuLL)));
                v218.val[1] = veorq_s8(v24, v74);
                v218.val[0] = veorq_s8(v24, v70);
                v214.val[2] = vqtbl4q_s8(v212, (int8x16_t)xmmword_1004047C0);
                uint64_t v76 = (char *)(v25 + v32);
                v214.val[3] = vqtbl4q_s8(v218, (int8x16_t)xmmword_1004047C0);
                vst4q_s8(v76, v214);
                v32 += 64;
                v41 -= 16;
              }
              while (v41);
              a6 = v200;
              a7 = v201;
              a4 = v197;
              a5 = v199;
              int v9 = v193;
              a3 = v195;
              uint64_t v11 = v189;
              unint64_t v10 = v191;
              if (v204 == v202) {
                goto LABEL_86;
              }
            }
          }
          else
          {
            unint64_t i = (int)i;
          }
          do
          {
            unint64_t v77 = v26 + i;
            unint64_t v78 = v27 + i;
            if (*(char *)(v26 + i + 1) <= *(char *)(v27 + i + 1)) {
              char v79 = v20;
            }
            else {
              char v79 = ~(_BYTE)v20;
            }
            if (*(char *)(v26 + i) <= *(char *)(v27 + i)) {
              char v80 = v20;
            }
            else {
              char v80 = ~(_BYTE)v20;
            }
            int8x16x4_t v81 = (unsigned char *)(v25 + i);
            unsigned char *v81 = v80;
            v81[1] = v79;
            if (*(char *)(v77 + 3) <= *(char *)(v78 + 3)) {
              char v82 = v20;
            }
            else {
              char v82 = ~(_BYTE)v20;
            }
            if (*(char *)(v77 + 2) <= *(char *)(v78 + 2)) {
              char v83 = v20;
            }
            else {
              char v83 = ~(_BYTE)v20;
            }
            _OWORD v81[2] = v83;
            v81[3] = v82;
            i += 4;
          }
          while ((uint64_t)i <= v23);
LABEL_86:
          if ((int)i >= a7) {
            goto LABEL_32;
          }
LABEL_87:
          uint64_t v84 = (int)i;
          unint64_t v85 = result - (int)i;
          if (v85 < 8)
          {
            uint64_t v86 = v84;
            goto LABEL_104;
          }
          if (v29 - v30 < 0x10 || v29 - v31 < 0x10)
          {
            uint64_t v86 = v84;
            goto LABEL_104;
          }
          if (v85 >= 0x10)
          {
            unint64_t v88 = v85 & 0xFFFFFFFFFFFFFFF0;
            uint64_t v89 = v84;
            unint64_t v90 = v85 & 0xFFFFFFFFFFFFFFF0;
            do
            {
              int8x16_t v91 = *(int8x16_t *)(v26 + v89);
              int8x16_t v92 = *(int8x16_t *)(v27 + v89);
              int16x8_t v93 = vmovl_s8(*(int8x8_t *)v92.i8);
              int16x8_t v94 = vmovl_s8(*(int8x8_t *)v91.i8);
              int16x8_t v95 = vmovl_high_s8(v92);
              int16x8_t v96 = vmovl_high_s8(v91);
              v215.val[3] = veorq_s8(v24, (int8x16_t)vcgtq_s32(vmovl_high_s16(v96), vmovl_high_s16(v95)));
              v215.val[2] = veorq_s8(v24, (int8x16_t)vcgtq_s32(vmovl_s16(*(int16x4_t *)v96.i8), vmovl_s16(*(int16x4_t *)v95.i8)));
              v215.val[1] = veorq_s8(v24, (int8x16_t)vcgtq_s32(vmovl_high_s16(v94), vmovl_high_s16(v93)));
              v215.val[0] = veorq_s8(v24, (int8x16_t)vcgtq_s32(vmovl_s16(*(int16x4_t *)v94.i8), vmovl_s16(*(int16x4_t *)v93.i8)));
              *(int8x16_t *)(v25 + v89) = vqtbl4q_s8(v215, (int8x16_t)xmmword_1004047C0);
              v89 += 16;
              v90 -= 16;
            }
            while (v90);
            if (v85 == v88) {
              goto LABEL_32;
            }
            if ((v85 & 8) == 0)
            {
              uint64_t v86 = v88 + v84;
              do
              {
LABEL_104:
                if (*(char *)(v26 + v86) <= *(char *)(v27 + v86)) {
                  char v102 = v20;
                }
                else {
                  char v102 = ~(_BYTE)v20;
                }
                *(unsigned char *)(v25 + v86++) = v102;
              }
              while (result != v86);
              goto LABEL_32;
            }
          }
          else
          {
            unint64_t v88 = 0;
          }
          uint64_t v86 = (v85 & 0xFFFFFFFFFFFFFFF8) + v84;
          unint64_t v97 = v88 - (v85 & 0xFFFFFFFFFFFFFFF8);
          uint64_t v98 = v88 + v84;
          do
          {
            int16x8_t v99 = vmovl_s8(*(int8x8_t *)(v27 + v98));
            int16x8_t v100 = vmovl_s8(*(int8x8_t *)(v26 + v98));
            int8x16_t v101 = (int8x16_t)vcgtq_s32(vmovl_high_s16(v100), vmovl_high_s16(v99));
            v208.val[0] = veorq_s8(v24, (int8x16_t)vcgtq_s32(vmovl_s16(*(int16x4_t *)v100.i8), vmovl_s16(*(int16x4_t *)v99.i8)));
            v208.val[1] = veorq_s8(v24, v101);
            *(void *)(v25 + v98) = vqtbl2q_s8(v208, (int8x16_t)xmmword_1004047D0).u64[0];
            v98 += 8;
            v97 += 8;
          }
          while (v97);
          if (v85 != (v85 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_104;
          }
LABEL_32:
          v26 += v11;
          v27 += a4;
          v25 += a6;
          ++v21;
          if (!--a8) {
            return result;
          }
          break;
        default:
          goto LABEL_48;
      }
    }
  }
  return result;
}

unint64_t sub_100220B44(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, char *a5, uint64_t a6, int a7, int a8, unsigned int *a9)
{
  unsigned int v9 = *a9;
  unint64_t v10 = a2 >> 1;
  unint64_t v11 = a4 >> 1;
  uint64_t v211 = a6;
  int v212 = a7;
  if ((*a9 & 0xFFFFFFFE) != 2)
  {
    unint64_t v12 = result;
    unint64_t v13 = a2 >> 1;
    switch(v9)
    {
      case 0u:
      case 5u:
        if (v9) {
          unsigned int v14 = 255;
        }
        else {
          unsigned int v14 = 0;
        }
        if (!a8) {
          return result;
        }
        unint64_t v15 = (a7 - 4);
        if (a7 < 4)
        {
          if (a7 >= 1)
          {
            int v16 = (unsigned __int16 *)(a3 + 4);
            char v17 = (unsigned __int16 *)(result + 4);
            uint64_t v18 = 2 * v10;
            char v19 = a5 + 1;
            do
            {
              if (*(v17 - 2) == *(v16 - 2)) {
                char v20 = ~(_BYTE)v14;
              }
              else {
                char v20 = v14;
              }
              *(v19 - 1) = v20;
              if (a7 != 1)
              {
                char v21 = *(v17 - 1) == *(v16 - 1) ? ~(_BYTE)v14 : v14;
                *char v19 = v21;
                if (a7 != 2)
                {
                  if (*v17 == *v16) {
                    char v22 = ~(_BYTE)v14;
                  }
                  else {
                    char v22 = v14;
                  }
                  v19[1] = v22;
                }
              }
              v16 += v11;
              char v17 = (unsigned __int16 *)((char *)v17 + v18);
              v19 += a6;
              --a8;
            }
            while (a8);
          }
          return result;
        }
        uint64_t v115 = 0;
        int v116 = a8 - 1;
        unint64_t v117 = a7;
        uint64_t v118 = (v15 & 0xFFFFFFFC) + 4;
        unint64_t v119 = (v15 & 0xFFFFFFFC) + 5;
        if (v119 <= a7) {
          unint64_t v119 = a7;
        }
        uint64_t v208 = ((2 * (a7 - 4)) & 0x1FFFFFFF8) + 8;
        unint64_t v120 = a2 & 0xFFFFFFFFFFFFFFFELL;
        uint64_t v204 = 2 * v119;
        unint64_t v121 = a4 & 0xFFFFFFFFFFFFFFFELL;
        unint64_t v122 = v119 - (v15 & 0xFFFFFFFC) - 4;
        uint64_t v123 = 8 * (v15 >> 2) + 8;
        uint64_t v199 = (v15 >> 2) + 1;
        int8x16_t v124 = (int8x16_t)vdupq_n_s32(v14);
        unint64_t v196 = v122 & 0xFFFFFFFFFFFFFFF0;
        unint64_t v192 = v118 + (v122 & 0xFFFFFFFFFFFFFFF0);
        unint64_t v194 = v118 + (v122 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v195 = v122 & 0xFFFFFFFFFFFFFFF8;
        uint64_t v219 = 2 * v10;
        uint64_t v217 = 2 * v11;
        uint64_t v193 = -(uint64_t)(v122 & 0xFFFFFFFFFFFFFFF8);
        int8x16_t v125 = &a5[v118];
        uint64_t v197 = &a5[v119];
        int8x16x4_t v215 = &a5[v118];
        unint64_t v126 = a3;
        unint64_t v127 = result;
        unint64_t v206 = a2 & 0xFFFFFFFFFFFFFFFELL;
        unint64_t v200 = v122;
        unint64_t v202 = a4 & 0xFFFFFFFFFFFFFFFELL;
        unint64_t v198 = result;
        break;
      case 1u:
      case 4u:
        goto LABEL_27;
      default:
        return result;
    }
    while (1)
    {
      unint64_t v128 = (unint64_t)&v215[v115 * a6];
      int v227 = v116;
      unint64_t v223 = v120 * v115;
      unint64_t v225 = v121 * v115;
      uint64_t v221 = v115 * a6;
      unint64_t v129 = 0;
      if (v15 < 0x3C) {
        goto LABEL_139;
      }
      BOOL v130 = (unint64_t)a5 >= a3 + v123 + v121 * v115 || v126 >= v128;
      BOOL v131 = !v130;
      if (v127 < v128 && (unint64_t)a5 < result + v123 + v120 * v115) {
        goto LABEL_139;
      }
      if (v131) {
        goto LABEL_139;
      }
      uint64_t v133 = 0;
      uint64_t v134 = v199 & 0x7FFFFFF0;
      int8x16x4_t v210 = a5;
      do
      {
        int16x8_t v135 = vceqq_s16(*(int16x8_t *)(v127 + v133), *(int16x8_t *)(v126 + v133));
        int8x8_t v136 = vmovn_s16(v135);
        int16x8_t v137 = vceqq_s16(*(int16x8_t *)(v127 + v133 + 16), *(int16x8_t *)(v126 + v133 + 16));
        int8x8_t v138 = vmovn_s16(v137);
        int16x8_t v139 = vceqq_s16(*(int16x8_t *)(v127 + v133 + 32), *(int16x8_t *)(v126 + v133 + 32));
        int16x8_t v140 = vceqq_s16(*(int16x8_t *)(v127 + v133 + 48), *(int16x8_t *)(v126 + v133 + 48));
        int8x8_t v141 = vmovn_s16(v139);
        int8x8_t v142 = vmovn_s16(v140);
        int16x8_t v143 = vceqq_s16(*(int16x8_t *)(v127 + v133 + 64), *(int16x8_t *)(v126 + v133 + 64));
        int8x8_t v144 = vmovn_s16(v143);
        int16x8_t v145 = vceqq_s16(*(int16x8_t *)(v127 + v133 + 80), *(int16x8_t *)(v126 + v133 + 80));
        int16x8_t v146 = vceqq_s16(*(int16x8_t *)(v127 + v133 + 96), *(int16x8_t *)(v126 + v133 + 96));
        int8x8_t v147 = vmovn_s16(v145);
        int8x8_t v148 = vmovn_s16(v146);
        int16x8_t v149 = vceqq_s16(*(int16x8_t *)(v127 + v133 + 112), *(int16x8_t *)(v126 + v133 + 112));
        int8x8_t v150 = vmovn_s16(v149);
        int32x4_t v151 = vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v139, (int8x16_t)v140))), 0x1FuLL);
        int8x16_t v152 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v135, (int8x16_t)v137))), 0x1FuLL));
        int8x16_t v153 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v143, (int8x16_t)v145))), 0x1FuLL));
        __int16 v154 = v150.u8[2];
        v233.val[3] = veorq_s8(v124, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v146, (int8x16_t)v149))), 0x1FuLL)));
        v233.val[2] = veorq_s8(v124, v153);
        v233.val[1] = veorq_s8(v124, (int8x16_t)vcltzq_s32(v151));
        v233.val[0] = veorq_s8(v124, v152);
        v235.val[3] = veorq_s8(v124, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v148, v150)), 0x1FuLL)));
        v235.val[2] = veorq_s8(v124, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v144, v147)), 0x1FuLL)));
        v235.val[1] = veorq_s8(v124, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v141, v142)), 0x1FuLL)));
        v235.val[0] = veorq_s8(v124, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v136, v138)), 0x1FuLL)));
        v155.i16[0] = v136.u8[2];
        v155.i16[1] = v136.u8[6];
        v155.i16[2] = v138.u8[2];
        v156.i16[0] = v141.u8[2];
        v156.i16[1] = v141.u8[6];
        v157.i16[0] = v144.u8[2];
        v156.i16[2] = v142.u8[2];
        v157.i16[1] = v144.u8[6];
        __int16 v158 = v150.u8[7];
        v157.i16[2] = v147.u8[2];
        v233.val[0] = vqtbl4q_s8(v233, (int8x16_t)xmmword_1004047C0);
        __int16 v159 = v150.u8[3];
        v150.i16[0] = v148.u8[2];
        v155.i16[3] = v138.u8[6];
        v150.i16[1] = v148.u8[6];
        v150.i16[2] = v154;
        v156.i16[3] = v142.u8[6];
        v157.i16[3] = v147.u8[6];
        __int16 v160 = v147.u8[7];
        __int16 v161 = v147.u8[3];
        v150.i16[3] = v150.u8[6];
        v233.val[1] = vqtbl4q_s8(v235, (int8x16_t)xmmword_1004047C0);
        __int16 v162 = v141.u8[7];
        __int16 v163 = v141.u8[3];
        v141.i16[0] = v136.u8[3];
        v141.i16[1] = v136.u8[7];
        v141.i16[2] = v138.u8[3];
        v141.i16[3] = v138.u8[7];
        v147.i16[0] = v163;
        v147.i16[1] = v162;
        v147.i16[2] = v142.u8[3];
        v147.i16[3] = v142.u8[7];
        v235.val[3] = veorq_s8(v124, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v150), 0x1FuLL)));
        v142.i16[0] = v144.u8[3];
        v142.i16[1] = v144.u8[7];
        v142.i16[2] = v161;
        v235.val[2] = veorq_s8(v124, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v157), 0x1FuLL)));
        v142.i16[3] = v160;
        v235.val[1] = veorq_s8(v124, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v156), 0x1FuLL)));
        v136.i16[0] = v148.u8[3];
        v136.i16[1] = v148.u8[7];
        v136.i16[2] = v159;
        v235.val[0] = veorq_s8(v124, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v155), 0x1FuLL)));
        v136.i16[3] = v158;
        v237.val[3] = veorq_s8(v124, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v136), 0x1FuLL)));
        v237.val[2] = veorq_s8(v124, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v142), 0x1FuLL)));
        v237.val[1] = veorq_s8(v124, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v147), 0x1FuLL)));
        v237.val[0] = veorq_s8(v124, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v141), 0x1FuLL)));
        v233.val[2] = vqtbl4q_s8(v235, (int8x16_t)xmmword_1004047C0);
        v233.val[3] = vqtbl4q_s8(v237, (int8x16_t)xmmword_1004047C0);
        vst4q_s8(a5, v233);
        a5 += 64;
        v133 += 128;
        v134 -= 16;
      }
      while (v134);
      uint64_t v123 = 8 * (v15 >> 2) + 8;
      a6 = v211;
      a7 = v212;
      a5 = v210;
      unint64_t v129 = 4 * (v199 & 0x7FFFFFF0);
      uint64_t result = v198;
      uint64_t v118 = (v15 & 0xFFFFFFFC) + 4;
      unint64_t v120 = v206;
      unint64_t v122 = v200;
      unint64_t v121 = v202;
      if (v199 != (v199 & 0x7FFFFFF0))
      {
LABEL_139:
        uint64_t v164 = 2 * v129 + 6;
        do
        {
          unint64_t v165 = v127 + 2 * v129;
          unint64_t v166 = v126 + 2 * v129;
          if (*(unsigned __int16 *)(v165 + 2) == *(unsigned __int16 *)(v166 + 2)) {
            char v167 = ~(_BYTE)v14;
          }
          else {
            char v167 = v14;
          }
          if (*(unsigned __int16 *)(v127 + v164 - 6) == *(unsigned __int16 *)(v126 + v164 - 6)) {
            char v168 = ~(_BYTE)v14;
          }
          else {
            char v168 = v14;
          }
          unint64_t v169 = &a5[v129];
          *unint64_t v169 = v168;
          v169[1] = v167;
          if (*(unsigned __int16 *)(v127 + v164) == *(unsigned __int16 *)(v126 + v164)) {
            char v170 = ~(_BYTE)v14;
          }
          else {
            char v170 = v14;
          }
          if (*(unsigned __int16 *)(v165 + 4) == *(unsigned __int16 *)(v166 + 4)) {
            char v171 = ~(_BYTE)v14;
          }
          else {
            char v171 = v14;
          }
          v169[2] = v171;
          v169[3] = v170;
          v129 += 4;
          v164 += 8;
        }
        while (v129 <= v15);
      }
      if ((int)v129 >= a7) {
        goto LABEL_122;
      }
      unint64_t v172 = v118;
      if (v122 < 8
        || ((unint64_t v174 = (unint64_t)&v197[v221], v128 < a3 + v204 + v225)
          ? (BOOL v175 = a3 + v208 + v225 >= v174)
          : (BOOL v175 = 1),
            v175 ? (char v176 = 0) : (char v176 = 1),
            result + v208 + v223 < v174 ? (BOOL v177 = v128 >= result + v204 + v223) : (BOOL v177 = 1),
            (unint64_t v172 = v118, !v177) || (unint64_t v172 = v118, (v176 & 1) != 0)))
      {
        do
        {
LABEL_155:
          if (*(unsigned __int16 *)(v127 + 2 * v172) == *(unsigned __int16 *)(v126 + 2 * v172)) {
            char v173 = ~(_BYTE)v14;
          }
          else {
            char v173 = v14;
          }
          a5[v172++] = v173;
        }
        while (v172 < v117);
        goto LABEL_122;
      }
      if (v122 >= 0x10)
      {
        uint64_t v185 = v118;
        uint64_t v186 = v123;
        unint64_t v187 = v196;
        do
        {
          uint16x8_t v189 = *(uint16x8_t *)(v127 + v186);
          uint16x8_t v188 = *(uint16x8_t *)(v127 + v186 + 16);
          uint16x8_t v191 = *(uint16x8_t *)(v126 + v186);
          uint16x8_t v190 = *(uint16x8_t *)(v126 + v186 + 16);
          v231.val[3] = veorq_s8(v124, (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v188), (int32x4_t)vmovl_high_u16(v190)));
          v231.val[1] = veorq_s8(v124, (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v189), (int32x4_t)vmovl_high_u16(v191)));
          v231.val[2] = veorq_s8(v124, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v188.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v190.i8)));
          v231.val[0] = veorq_s8(v124, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v189.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v191.i8)));
          *(int8x16_t *)&a5[v185] = vqtbl4q_s8(v231, (int8x16_t)xmmword_1004047C0);
          v186 += 32;
          v185 += 16;
          v187 -= 16;
        }
        while (v187);
        if (v122 == v196) {
          goto LABEL_122;
        }
        unint64_t v178 = v196;
        unint64_t v172 = v192;
        if ((v122 & 8) == 0) {
          goto LABEL_155;
        }
      }
      else
      {
        unint64_t v178 = 0;
      }
      unint64_t v179 = v193 + v178;
      uint64_t v180 = v123 + 2 * v178;
      uint16x8_t v181 = &v125[v178];
      do
      {
        uint16x8_t v182 = *(uint16x8_t *)(v127 + v180);
        uint16x8_t v183 = *(uint16x8_t *)(v126 + v180);
        int8x16_t v184 = (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v182), (int32x4_t)vmovl_high_u16(v183));
        v229.val[0] = veorq_s8(v124, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v182.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v183.i8)));
        v229.val[1] = veorq_s8(v124, v184);
        *(void *)uint16x8_t v181 = vqtbl2q_s8(v229, (int8x16_t)xmmword_1004047D0).u64[0];
        v181 += 8;
        v180 += 16;
        v179 += 8;
      }
      while (v179);
      unint64_t v172 = v194;
      if (v122 != v195) {
        goto LABEL_155;
      }
LABEL_122:
      v127 += v219;
      v126 += v217;
      a5 += a6;
      int v116 = v227 - 1;
      ++v115;
      v125 += a6;
      if (!v227) {
        return result;
      }
    }
  }
  if (v9 == 2) {
    unsigned int v9 = 4;
  }
  else {
    unsigned int v9 = 1;
  }
  unint64_t v12 = a3;
  unint64_t v13 = a4 >> 1;
  a3 = result;
  unint64_t v11 = a2 >> 1;
LABEL_27:
  if (v9 == 1) {
    unsigned int v23 = 0;
  }
  else {
    unsigned int v23 = 255;
  }
  if (a8)
  {
    uint64_t v24 = 0;
    unint64_t v25 = (a7 - 8);
    int64_t v26 = a7 - 4;
    uint64_t v27 = a7;
    uint64_t v28 = 2 * a7;
    uint64_t v29 = 2 * v11;
    int8x16_t v30 = (int8x16_t)vdupq_n_s32(v23);
    uint64_t v31 = 2 * v13;
    unint64_t v32 = v12;
    unint64_t v33 = a3;
    unint64_t v34 = a5;
    uint64_t v218 = v29;
    uint64_t v220 = v9;
    unint64_t v207 = a3;
    int8x16x2_t v209 = a5;
    unint64_t v203 = v12;
    unsigned int v205 = v9;
    uint64_t v201 = v28;
    uint64_t v216 = 2 * v13;
    do
    {
      LODWORD(i) = 0;
      if (v9 <= 5)
      {
        switch(v220)
        {
          case 1:
            if (a7 < 8) {
              goto LABEL_48;
            }
            uint64_t v37 = 0;
            for (unint64_t i = 0; i <= v25; i += 8)
            {
              *(int8x8_t *)&v34[i] = vmovn_s16((int16x8_t)vcgtq_u16(*(uint16x8_t *)(v32 + v37), *(uint16x8_t *)(v33 + v37)));
              v37 += 16;
            }
            goto LABEL_54;
          case 2:
          case 3:
            break;
          case 4:
            if (a7 < 8) {
              goto LABEL_48;
            }
            uint64_t v38 = 0;
            for (unint64_t i = 0; i <= v25; i += 8)
            {
              *(int8x8_t *)&v34[i] = vmovn_s16((int16x8_t)vcgeq_u16(*(uint16x8_t *)(v33 + v38), *(uint16x8_t *)(v32 + v38)));
              v38 += 16;
            }
            goto LABEL_54;
          case 5:
            if (a7 < 8) {
              goto LABEL_48;
            }
            uint64_t v42 = 0;
            for (unint64_t i = 0; i <= v25; i += 8)
            {
              *(int8x8_t *)&v34[i] = vmovn_s16((int16x8_t)vmvnq_s8((int8x16_t)vceqq_s16(*(int16x8_t *)(v32 + v42), *(int16x8_t *)(v33 + v42))));
              v42 += 16;
            }
            goto LABEL_54;
          default:
            if (a7 < 8)
            {
LABEL_48:
              LODWORD(i) = 0;
              break;
            }
            uint64_t v36 = 0;
            for (unint64_t i = 0; i <= v25; i += 8)
            {
              *(int8x8_t *)&v34[i] = vmovn_s16(vceqq_s16(*(int16x8_t *)(v32 + v36), *(int16x8_t *)(v33 + v36)));
              v36 += 16;
            }
LABEL_54:
            BOOL v39 = &a5[v24 * a6];
            unint64_t v40 = a3 + v29 * v24;
            unint64_t v41 = v12 + v31 * v24;
            if ((int)i <= (int)v26) {
              goto LABEL_55;
            }
            goto LABEL_50;
        }
      }
      BOOL v39 = &a5[v24 * a6];
      unint64_t v40 = a3 + v29 * v24;
      unint64_t v41 = v12 + v31 * v24;
      if ((int)v26 < 0)
      {
LABEL_50:
        if ((int)i >= a7) {
          goto LABEL_32;
        }
        goto LABEL_89;
      }
LABEL_55:
      uint64_t v43 = (int)i;
      unint64_t v44 = v26 - (int)i;
      unint64_t v224 = v40;
      unint64_t v226 = v39;
      unint64_t v222 = v41;
      if (v44 >= 0x3C)
      {
        int8x16_t v45 = v39 + 4;
        unint64_t v46 = v44 >> 2;
        unint64_t v47 = (unint64_t)&v45[(v44 & 0xFFFFFFFFFFFFFFFCLL) + (int)i];
        uint64_t v48 = 2 * (int)i;
        unint64_t v49 = v48 + 8 * (v44 >> 2);
        unint64_t v50 = v40 + 8 + v49;
        BOOL v52 = (unint64_t)&v34[(int)i] < v41 + 8 + v49 && v32 + 2 * (int)i < v47;
        BOOL v53 = v33 + v48 >= v47 || (unint64_t)&v34[(int)i] >= v50;
        if (!v53 || v52)
        {
          unint64_t i = (int)i;
          uint64_t v31 = v216;
          uint64_t v29 = v218;
        }
        else
        {
          unint64_t v54 = v46 + 1;
          uint64_t v55 = v54 & 0x7FFFFFFFFFFFFFF0;
          unint64_t i = (int)i + 4 * (v54 & 0x7FFFFFFFFFFFFFF0);
          uint64_t v213 = v54 & 0x7FFFFFFFFFFFFFF0;
          unint64_t v214 = v54;
          do
          {
            int16x8_t v56 = (int16x8_t)vcgtq_u16(*(uint16x8_t *)(v32 + v48), *(uint16x8_t *)(v33 + v48));
            int8x8_t v57 = vmovn_s16(v56);
            int16x8_t v58 = (int16x8_t)vcgtq_u16(*(uint16x8_t *)(v32 + v48 + 16), *(uint16x8_t *)(v33 + v48 + 16));
            int8x8_t v59 = vmovn_s16(v58);
            int16x8_t v60 = (int16x8_t)vcgtq_u16(*(uint16x8_t *)(v32 + v48 + 32), *(uint16x8_t *)(v33 + v48 + 32));
            int16x8_t v61 = (int16x8_t)vcgtq_u16(*(uint16x8_t *)(v32 + v48 + 48), *(uint16x8_t *)(v33 + v48 + 48));
            int8x8_t v62 = vmovn_s16(v60);
            int8x8_t v63 = vmovn_s16(v61);
            int16x8_t v64 = (int16x8_t)vcgtq_u16(*(uint16x8_t *)(v32 + v48 + 64), *(uint16x8_t *)(v33 + v48 + 64));
            int8x8_t v65 = vmovn_s16(v64);
            int16x8_t v66 = (int16x8_t)vcgtq_u16(*(uint16x8_t *)(v32 + v48 + 80), *(uint16x8_t *)(v33 + v48 + 80));
            int16x8_t v67 = (int16x8_t)vcgtq_u16(*(uint16x8_t *)(v32 + v48 + 96), *(uint16x8_t *)(v33 + v48 + 96));
            int8x8_t v68 = vmovn_s16(v66);
            int8x8_t v69 = vmovn_s16(v67);
            int16x8_t v70 = (int16x8_t)vcgtq_u16(*(uint16x8_t *)(v32 + v48 + 112), *(uint16x8_t *)(v33 + v48 + 112));
            int8x8_t v71 = vmovn_s16(v70);
            int32x4_t v72 = vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v60, (int8x16_t)v61))), 0x1FuLL);
            int8x16_t v73 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v56, (int8x16_t)v58))), 0x1FuLL));
            int8x16_t v74 = (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v64, (int8x16_t)v66))), 0x1FuLL));
            __int16 v75 = v71.u8[2];
            v232.val[3] = veorq_s8(v30, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v67, (int8x16_t)v70))), 0x1FuLL)));
            v232.val[2] = veorq_s8(v30, v74);
            v232.val[1] = veorq_s8(v30, (int8x16_t)vcltzq_s32(v72));
            v232.val[0] = veorq_s8(v30, v73);
            v234.val[3] = veorq_s8(v30, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v69, v71)), 0x1FuLL)));
            v234.val[2] = veorq_s8(v30, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v65, v68)), 0x1FuLL)));
            v234.val[1] = veorq_s8(v30, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v62, v63)), 0x1FuLL)));
            v234.val[0] = veorq_s8(v30, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v57, v59)), 0x1FuLL)));
            v76.i16[0] = v57.u8[2];
            v76.i16[1] = v57.u8[6];
            v76.i16[2] = v59.u8[2];
            v77.i16[0] = v62.u8[2];
            v77.i16[1] = v62.u8[6];
            v78.i16[0] = v65.u8[2];
            v77.i16[2] = v63.u8[2];
            v78.i16[1] = v65.u8[6];
            __int16 v79 = v71.u8[7];
            v78.i16[2] = v68.u8[2];
            v232.val[0] = vqtbl4q_s8(v232, (int8x16_t)xmmword_1004047C0);
            __int16 v80 = v71.u8[3];
            v71.i16[0] = v69.u8[2];
            v76.i16[3] = v59.u8[6];
            v71.i16[1] = v69.u8[6];
            v71.i16[2] = v75;
            v77.i16[3] = v63.u8[6];
            v78.i16[3] = v68.u8[6];
            __int16 v81 = v68.u8[7];
            __int16 v82 = v68.u8[3];
            v71.i16[3] = v71.u8[6];
            v232.val[1] = vqtbl4q_s8(v234, (int8x16_t)xmmword_1004047C0);
            uint64_t result = v65.u8[3];
            __int16 v83 = v62.u8[7];
            __int16 v84 = v62.u8[3];
            v62.i16[0] = v57.u8[3];
            v62.i16[1] = v57.u8[7];
            v62.i16[2] = v59.u8[3];
            v62.i16[3] = v59.u8[7];
            v68.i16[0] = v84;
            v68.i16[1] = v83;
            v68.i16[2] = v63.u8[3];
            v68.i16[3] = v63.u8[7];
            v234.val[3] = veorq_s8(v30, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v71), 0x1FuLL)));
            v63.i16[0] = v65.u8[3];
            v63.i16[1] = v65.u8[7];
            v63.i16[2] = v82;
            v234.val[2] = veorq_s8(v30, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v78), 0x1FuLL)));
            v63.i16[3] = v81;
            v234.val[1] = veorq_s8(v30, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v77), 0x1FuLL)));
            v57.i16[0] = v69.u8[3];
            v57.i16[1] = v69.u8[7];
            v57.i16[2] = v80;
            v234.val[0] = veorq_s8(v30, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v76), 0x1FuLL)));
            v57.i16[3] = v79;
            v236.val[3] = veorq_s8(v30, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v57), 0x1FuLL)));
            v236.val[2] = veorq_s8(v30, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v63), 0x1FuLL)));
            v236.val[1] = veorq_s8(v30, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v68), 0x1FuLL)));
            v236.val[0] = veorq_s8(v30, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v62), 0x1FuLL)));
            v232.val[2] = vqtbl4q_s8(v234, (int8x16_t)xmmword_1004047C0);
            unint64_t v85 = &v34[v43];
            v232.val[3] = vqtbl4q_s8(v236, (int8x16_t)xmmword_1004047C0);
            vst4q_s8(v85, v232);
            v43 += 64;
            v48 += 128;
            v55 -= 16;
          }
          while (v55);
          a6 = v211;
          a7 = v212;
          a3 = v207;
          a5 = v209;
          unint64_t v12 = v203;
          unsigned int v9 = v205;
          uint64_t v28 = v201;
          uint64_t v31 = v216;
          uint64_t v29 = v218;
          if (v214 == v213) {
            goto LABEL_88;
          }
        }
      }
      else
      {
        unint64_t i = (int)i;
      }
      uint64_t v86 = 2 * i + 6;
      do
      {
        unint64_t v87 = v32 + 2 * i;
        uint64_t result = v33 + 2 * i;
        if (*(unsigned __int16 *)(v87 + 2) <= *(unsigned __int16 *)(result + 2)) {
          char v88 = v23;
        }
        else {
          char v88 = ~(_BYTE)v23;
        }
        if (*(unsigned __int16 *)(v32 + v86 - 6) <= *(unsigned __int16 *)(v33 + v86 - 6)) {
          char v89 = v23;
        }
        else {
          char v89 = ~(_BYTE)v23;
        }
        unint64_t v90 = &v34[i];
        *unint64_t v90 = v89;
        v90[1] = v88;
        if (*(unsigned __int16 *)(v32 + v86) <= *(unsigned __int16 *)(v33 + v86)) {
          char v91 = v23;
        }
        else {
          char v91 = ~(_BYTE)v23;
        }
        if (*(unsigned __int16 *)(v87 + 4) <= *(unsigned __int16 *)(result + 4)) {
          char v92 = v23;
        }
        else {
          char v92 = ~(_BYTE)v23;
        }
        v90[2] = v92;
        v90[3] = v91;
        i += 4;
        v86 += 8;
      }
      while ((uint64_t)i <= v26);
LABEL_88:
      unint64_t v40 = v224;
      BOOL v39 = v226;
      unint64_t v41 = v222;
      if ((int)i >= a7) {
        goto LABEL_32;
      }
LABEL_89:
      unint64_t v93 = v27 - (int)i;
      if (v93 < 8)
      {
        unint64_t v94 = (int)i;
        goto LABEL_114;
      }
      unint64_t v95 = (unint64_t)&v39[v27];
      unint64_t v96 = v40 + v28;
      uint64_t v97 = 2 * (int)i;
      uint64_t result = v33 + v97;
      BOOL v99 = (unint64_t)&v34[(int)i] < v41 + v28 && v32 + 2 * (int)i < v95;
      if (result < v95 && (unint64_t)&v34[(int)i] < v96)
      {
        unint64_t v94 = (int)i;
        goto LABEL_114;
      }
      if (v99)
      {
        unint64_t v94 = (int)i;
        goto LABEL_114;
      }
      if (v93 >= 0x10)
      {
        unint64_t v101 = v93 & 0xFFFFFFFFFFFFFFF0;
        uint64_t v102 = (int)i;
        unint64_t v103 = v93 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          uint16x8_t v105 = *(uint16x8_t *)(v32 + v97);
          uint16x8_t v104 = *(uint16x8_t *)(v32 + v97 + 16);
          uint16x8_t v107 = *(uint16x8_t *)(v33 + v97);
          uint16x8_t v106 = *(uint16x8_t *)(v33 + v97 + 16);
          v230.val[3] = veorq_s8(v30, (int8x16_t)vcgtq_u32(vmovl_high_u16(v104), vmovl_high_u16(v106)));
          v230.val[1] = veorq_s8(v30, (int8x16_t)vcgtq_u32(vmovl_high_u16(v105), vmovl_high_u16(v107)));
          v230.val[2] = veorq_s8(v30, (int8x16_t)vcgtq_u32(vmovl_u16(*(uint16x4_t *)v104.i8), vmovl_u16(*(uint16x4_t *)v106.i8)));
          v230.val[0] = veorq_s8(v30, (int8x16_t)vcgtq_u32(vmovl_u16(*(uint16x4_t *)v105.i8), vmovl_u16(*(uint16x4_t *)v107.i8)));
          *(int8x16_t *)&v34[v102] = vqtbl4q_s8(v230, (int8x16_t)xmmword_1004047C0);
          v97 += 32;
          v102 += 16;
          v103 -= 16;
        }
        while (v103);
        if (v93 == v101) {
          goto LABEL_32;
        }
        if ((v93 & 8) == 0)
        {
          unint64_t v94 = v101 + (int)i;
          do
          {
LABEL_114:
            if (*(unsigned __int16 *)(v32 + 2 * v94) <= *(unsigned __int16 *)(v33 + 2 * v94)) {
              char v114 = v23;
            }
            else {
              char v114 = ~(_BYTE)v23;
            }
            v34[v94++] = v114;
          }
          while (v27 != v94);
          goto LABEL_32;
        }
      }
      else
      {
        unint64_t v101 = 0;
      }
      unint64_t v94 = (v93 & 0xFFFFFFFFFFFFFFF8) + (int)i;
      unint64_t v108 = v101 - (v93 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v109 = v101 + (int)i;
      uint64_t v110 = 2 * v109;
      do
      {
        uint16x8_t v111 = *(uint16x8_t *)(v32 + v110);
        uint16x8_t v112 = *(uint16x8_t *)(v33 + v110);
        int8x16_t v113 = (int8x16_t)vcgtq_u32(vmovl_high_u16(v111), vmovl_high_u16(v112));
        v228.val[0] = veorq_s8(v30, (int8x16_t)vcgtq_u32(vmovl_u16(*(uint16x4_t *)v111.i8), vmovl_u16(*(uint16x4_t *)v112.i8)));
        v228.val[1] = veorq_s8(v30, v113);
        *(void *)&v34[v109] = vqtbl2q_s8(v228, (int8x16_t)xmmword_1004047D0).u64[0];
        v110 += 16;
        v109 += 8;
        v108 += 8;
      }
      while (v108);
      if (v93 != (v93 & 0xFFFFFFFFFFFFFFF8)) {
        goto LABEL_114;
      }
LABEL_32:
      v32 += v31;
      v33 += v29;
      v34 += a6;
      ++v24;
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_100221A6C(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, int8x16_t *a5, uint64_t a6, int a7, int a8, int *a9)
{
  int v9 = *a9;
  unint64_t v10 = a4 >> 1;
  uint64_t v174 = a6;
  if ((*a9 & 0xFFFFFFFE) != 2)
  {
    unint64_t v11 = result;
    unint64_t v12 = a2 >> 1;
    switch(v9)
    {
      case 0:
      case 5:
        if (v9) {
          unsigned int v13 = 255;
        }
        else {
          unsigned int v13 = 0;
        }
        if (!a8) {
          return result;
        }
        int v14 = a8 - 1;
        unint64_t v15 = (a7 - 16);
        if (a7 < 16)
        {
          if (a7 >= 1)
          {
            uint64_t v16 = 2 * v10;
            do
            {
              uint64_t v17 = 0;
              int v18 = v14;
              do
              {
                if (*(unsigned __int16 *)(result + 2 * v17) == *(unsigned __int16 *)(a3 + 2 * v17)) {
                  char v19 = ~(_BYTE)v13;
                }
                else {
                  char v19 = v13;
                }
                a5->i8[v17++] = v19;
              }
              while (a7 != v17);
              a5 = (int8x16_t *)((char *)a5 + a6);
              --v14;
              result += 2 * (a2 >> 1);
              a3 += v16;
            }
            while (v18);
          }
          return result;
        }
        uint64_t v90 = 0;
        int8x16_t v91 = vdupq_n_s8(v13);
        unint64_t v92 = a7;
        uint64_t v93 = v15 & 0xFFFFFFF0;
        uint64_t v94 = v93 + 17;
        if (v93 + 17 <= (unint64_t)a7) {
          uint64_t v94 = a7;
        }
        uint64_t v170 = v94 - v93;
        unint64_t v95 = a2 & 0xFFFFFFFFFFFFFFFELL;
        uint64_t v166 = 2 * v94 - ((2 * (a7 - 16)) & 0x1FFFFFFE0);
        unint64_t v96 = a4 & 0xFFFFFFFFFFFFFFFELL;
        uint64_t v97 = v94 - 16;
        unint64_t v98 = v94 - 16 - v93;
        unint64_t v158 = v94 & 0xF;
        unint64_t v160 = v98 - v158;
        unint64_t v162 = v98;
        int8x16_t v99 = (int8x16_t)vdupq_n_s32(v13);
        uint64_t v100 = v94 & 7;
        unint64_t v154 = v98 - v100;
        uint64_t v156 = v100;
        unint64_t v101 = (uint16x8_t *)(result + 32);
        uint64_t v102 = (uint16x8_t *)(a3 + 32);
        unint64_t v103 = a5 + 1;
        uint64_t v152 = v97 - v100 - v93;
        unint64_t v104 = a3;
        unint64_t v105 = result;
        uint16x8_t v106 = a5;
        unint64_t v168 = a2 & 0xFFFFFFFFFFFFFFFELL;
        unint64_t v164 = a4 & 0xFFFFFFFFFFFFFFFELL;
        break;
      case 1:
      case 4:
        goto LABEL_21;
      default:
        return result;
    }
    while (1)
    {
      uint64_t v107 = 0;
      unint64_t v108 = 0;
      int v176 = v14;
      uint64_t v109 = v90 * a6 + 16;
      uint64_t v110 = v170 + v90 * a6;
      uint64_t v111 = v95 * v90 + 32;
      unint64_t v112 = v166 + v95 * v90;
      uint64_t v113 = v96 * v90 + 32;
      unint64_t v172 = v166 + v96 * v90;
      char v114 = v103;
      uint64_t v115 = v102;
      int v116 = v101;
      uint64_t v117 = 16;
      do
      {
        uint64_t v118 = (int16x8_t *)(v105 + 2 * v108);
        unint64_t v119 = (int16x8_t *)(v104 + 2 * v108);
        int16x8_t v120 = v118[1];
        int16x8_t v121 = v119[1];
        uint16x8_t v122 = (uint16x8_t)vceqq_s16(*v118, *v119);
        uint64_t v123 = v117;
        uint64_t v124 = v107;
        int8x16_t v125 = v116;
        unint64_t v126 = v115;
        unint64_t v127 = v114;
        v106[v108 / 0x10] = veorq_s8((int8x16_t)vqmovn_high_u16(vqmovn_u16(v122), (uint16x8_t)vceqq_s16(v120, v121)), v91);
        v108 += 16;
        v117 += 16;
        ++v107;
        v116 += 2;
        v115 += 2;
        ++v114;
      }
      while (v108 <= v15);
      if ((int)v108 >= a7) {
        goto LABEL_75;
      }
      if (v162 < 8)
      {
        unint64_t v128 = v123;
        goto LABEL_81;
      }
      unint64_t v130 = (unint64_t)a5[v124].u64 + v109;
      unint64_t v131 = (unint64_t)a5[v124].u64 + v110;
      unint64_t v132 = result + 32 * v124 + v111;
      unint64_t v133 = result + v112 + 32 * v124;
      unint64_t v134 = a3 + 32 * v124 + v113;
      BOOL v136 = v130 < a3 + v172 + 32 * v124 && v134 < v131;
      if (v132 < v131 && v130 < v133)
      {
        unint64_t v128 = v123;
        goto LABEL_81;
      }
      if (v136)
      {
        unint64_t v128 = v123;
        goto LABEL_81;
      }
      if (v162 >= 0x10)
      {
        int16x8_t v139 = v127;
        unint64_t v140 = v160;
        do
        {
          uint16x8_t v142 = *v125;
          uint16x8_t v141 = v125[1];
          v125 += 2;
          uint16x8_t v144 = *v126;
          uint16x8_t v143 = v126[1];
          v126 += 2;
          v180.val[3] = veorq_s8(v99, (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v141), (int32x4_t)vmovl_high_u16(v143)));
          v180.val[1] = veorq_s8(v99, (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v142), (int32x4_t)vmovl_high_u16(v144)));
          v180.val[2] = veorq_s8(v99, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v141.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v143.i8)));
          v180.val[0] = veorq_s8(v99, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v142.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v144.i8)));
          *v139++ = vqtbl4q_s8(v180, (int8x16_t)xmmword_1004047C0);
          v140 -= 16;
        }
        while (v140);
        if (!v158) {
          goto LABEL_75;
        }
        unint64_t v138 = v160;
        if (v158 < 8)
        {
          unint64_t v128 = v123 + v160;
          do
          {
LABEL_81:
            if (*(unsigned __int16 *)(v105 + 2 * v128) == *(unsigned __int16 *)(v104 + 2 * v128)) {
              char v129 = ~(_BYTE)v13;
            }
            else {
              char v129 = v13;
            }
            v106->i8[v128++] = v129;
          }
          while (v128 < v92);
          goto LABEL_75;
        }
      }
      else
      {
        unint64_t v138 = 0;
      }
      unint64_t v128 = v123 + v154;
      uint64_t v145 = v152 - v138;
      uint64_t v146 = 2 * (v138 + v123);
      int8x8_t v147 = (uint64_t *)((char *)v127->i64 + v138);
      do
      {
        uint16x8_t v148 = *(uint16x8_t *)(v105 + v146);
        uint16x8_t v149 = *(uint16x8_t *)(v104 + v146);
        int8x16_t v150 = (int8x16_t)vceqq_s32((int32x4_t)vmovl_high_u16(v148), (int32x4_t)vmovl_high_u16(v149));
        v178.val[0] = veorq_s8(v99, (int8x16_t)vceqq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v148.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v149.i8)));
        v178.val[1] = veorq_s8(v99, v150);
        *v147++ = vqtbl2q_s8(v178, (int8x16_t)xmmword_1004047D0).u64[0];
        v146 += 16;
        v145 -= 8;
      }
      while (v145);
      if (v156) {
        goto LABEL_81;
      }
LABEL_75:
      unint64_t v95 = v168;
      v105 += v168;
      unint64_t v96 = v164;
      v104 += v164;
      a6 = v174;
      uint16x8_t v106 = (int8x16_t *)((char *)v106 + v174);
      int v14 = v176 - 1;
      ++v90;
      unint64_t v101 = (uint16x8_t *)((char *)v101 + v168);
      uint64_t v102 = (uint16x8_t *)((char *)v102 + v164);
      unint64_t v103 = (int8x16_t *)((char *)v103 + v174);
      if (!v176) {
        return result;
      }
    }
  }
  if (v9 == 2) {
    int v9 = 4;
  }
  else {
    int v9 = 1;
  }
  unint64_t v11 = a3;
  unint64_t v12 = a4 >> 1;
  a3 = result;
  unint64_t v10 = a2 >> 1;
LABEL_21:
  if (v9 == 1) {
    unsigned int v20 = 0;
  }
  else {
    unsigned int v20 = 255;
  }
  if (a8)
  {
    int v21 = a8 - 1;
    unint64_t v22 = (a7 - 16);
    if (a7 < 16)
    {
      if (a7 >= 1)
      {
        uint64_t v23 = 2 * v12;
        uint64_t v24 = 2 * v10;
        do
        {
          uint64_t v25 = 0;
          int v26 = v21;
          do
          {
            if (*(__int16 *)(v11 + 2 * v25) <= *(__int16 *)(a3 + 2 * v25)) {
              char v27 = v20;
            }
            else {
              char v27 = ~(_BYTE)v20;
            }
            a5->i8[v25++] = v27;
          }
          while (a7 != v25);
          a5 = (int8x16_t *)((char *)a5 + a6);
          --v21;
          v11 += v23;
          a3 += v24;
        }
        while (v26);
      }
      return result;
    }
    uint64_t v28 = 0;
    int8x16_t v29 = vdupq_n_s8(v20);
    unint64_t v30 = a7;
    uint64_t v31 = v22 & 0xFFFFFFF0;
    uint64_t v32 = v31 + 17;
    if (v31 + 17 <= (unint64_t)a7) {
      uint64_t v32 = a7;
    }
    uint64_t v169 = v32 - v31;
    uint64_t v33 = 2 * v10;
    uint64_t v165 = 2 * v32 - ((2 * (a7 - 16)) & 0x1FFFFFFE0);
    uint64_t v34 = 2 * v12;
    uint64_t v35 = v32 - 16;
    unint64_t v36 = v32 - 16 - v31;
    unint64_t v157 = v32 & 0xF;
    unint64_t v159 = v36 - v157;
    unint64_t v161 = v36;
    int8x16_t v37 = (int8x16_t)vdupq_n_s32(v20);
    uint64_t v38 = v32 & 7;
    unint64_t v153 = v36 - v38;
    uint64_t v155 = v38;
    BOOL v39 = (int16x8_t *)(v11 + 32);
    unint64_t v40 = (int16x8_t *)(a3 + 32);
    unint64_t v41 = a5 + 1;
    uint64_t v151 = v35 - v38 - v31;
    unint64_t v42 = a3;
    unint64_t v43 = v11;
    unint64_t v44 = a5;
    uint64_t v167 = v33;
    uint64_t v163 = v34;
    do
    {
      uint64_t v45 = 0;
      unint64_t v46 = 0;
      int v175 = v21;
      uint64_t v47 = v28 * a6 + 16;
      uint64_t v48 = v169 + v28 * a6;
      uint64_t v49 = v33 * v28 + 32;
      uint64_t v50 = v165 + v33 * v28;
      uint64_t v171 = v34 * v28 + 32;
      uint64_t v51 = v165 + v34 * v28;
      BOOL v52 = v41;
      BOOL v53 = v40;
      unint64_t v54 = v39;
      uint64_t v55 = 16;
      do
      {
        int16x8_t v56 = (int16x8_t *)(v43 + 2 * v46);
        int8x8_t v57 = (int16x8_t *)(v42 + 2 * v46);
        int16x8_t v58 = v56[1];
        int16x8_t v59 = v57[1];
        uint16x8_t v60 = (uint16x8_t)vcgtq_s16(*v56, *v57);
        uint64_t v61 = v55;
        uint64_t v62 = v45;
        int8x8_t v63 = v54;
        int16x8_t v64 = v53;
        int8x8_t v65 = v52;
        v44[v46 / 0x10] = veorq_s8((int8x16_t)vqmovn_high_u16(vqmovn_u16(v60), (uint16x8_t)vcgtq_s16(v58, v59)), v29);
        v46 += 16;
        v55 += 16;
        ++v45;
        v54 += 2;
        v53 += 2;
        ++v52;
      }
      while (v46 <= v22);
      uint64_t result = a7;
      if ((int)v46 >= a7) {
        goto LABEL_38;
      }
      if (v161 < 8)
      {
        unint64_t v66 = v61;
        goto LABEL_67;
      }
      uint64_t v67 = v51;
      unint64_t v68 = (unint64_t)a5[v62].u64 + v47;
      unint64_t v69 = (unint64_t)a5[v62].u64 + v48;
      uint64_t v70 = 32 * v62;
      unint64_t v71 = a3 + v70 + v49;
      unint64_t v72 = a3 + v50 + v70;
      uint64_t result = v11 + v70 + v171;
      BOOL v74 = v68 < v11 + v67 + v70 && result < v69;
      if (v71 < v69 && v68 < v72)
      {
        unint64_t v66 = v61;
        goto LABEL_67;
      }
      if (v74)
      {
        unint64_t v66 = v61;
        goto LABEL_67;
      }
      if (v161 >= 0x10)
      {
        uint16x4_t v77 = v65;
        unint64_t v78 = v159;
        do
        {
          int16x8_t v80 = *v63;
          int16x8_t v79 = v63[1];
          v63 += 2;
          int16x8_t v82 = *v64;
          int16x8_t v81 = v64[1];
          v64 += 2;
          v179.val[3] = veorq_s8(v37, (int8x16_t)vcgtq_s32(vmovl_high_s16(v79), vmovl_high_s16(v81)));
          v179.val[1] = veorq_s8(v37, (int8x16_t)vcgtq_s32(vmovl_high_s16(v80), vmovl_high_s16(v82)));
          v179.val[2] = veorq_s8(v37, (int8x16_t)vcgtq_s32(vmovl_s16(*(int16x4_t *)v79.i8), vmovl_s16(*(int16x4_t *)v81.i8)));
          v179.val[0] = veorq_s8(v37, (int8x16_t)vcgtq_s32(vmovl_s16(*(int16x4_t *)v80.i8), vmovl_s16(*(int16x4_t *)v82.i8)));
          *v77++ = vqtbl4q_s8(v179, (int8x16_t)xmmword_1004047C0);
          v78 -= 16;
        }
        while (v78);
        if (!v157) {
          goto LABEL_38;
        }
        unint64_t v76 = v159;
        if (v157 < 8)
        {
          unint64_t v66 = v61 + v159;
          do
          {
LABEL_67:
            if (*(__int16 *)(v43 + 2 * v66) <= *(__int16 *)(v42 + 2 * v66)) {
              char v89 = v20;
            }
            else {
              char v89 = ~(_BYTE)v20;
            }
            v44->i8[v66++] = v89;
          }
          while (v66 < v30);
          goto LABEL_38;
        }
      }
      else
      {
        unint64_t v76 = 0;
      }
      unint64_t v66 = v61 + v153;
      uint64_t v83 = v151 - v76;
      uint64_t v84 = 2 * (v76 + v61);
      unint64_t v85 = (uint64_t *)((char *)v65->i64 + v76);
      do
      {
        int16x8_t v86 = *(int16x8_t *)(v43 + v84);
        int16x8_t v87 = *(int16x8_t *)(v42 + v84);
        int8x16_t v88 = (int8x16_t)vcgtq_s32(vmovl_high_s16(v86), vmovl_high_s16(v87));
        v177.val[0] = veorq_s8(v37, (int8x16_t)vcgtq_s32(vmovl_s16(*(int16x4_t *)v86.i8), vmovl_s16(*(int16x4_t *)v87.i8)));
        v177.val[1] = veorq_s8(v37, v88);
        *v85++ = vqtbl2q_s8(v177, (int8x16_t)xmmword_1004047D0).u64[0];
        v84 += 16;
        v83 -= 8;
      }
      while (v83);
      if (v155) {
        goto LABEL_67;
      }
LABEL_38:
      uint64_t v34 = v163;
      v43 += v163;
      uint64_t v33 = v167;
      v42 += v167;
      a6 = v174;
      unint64_t v44 = (int8x16_t *)((char *)v44 + v174);
      int v21 = v175 - 1;
      ++v28;
      BOOL v39 = (int16x8_t *)((char *)v39 + v163);
      unint64_t v40 = (int16x8_t *)((char *)v40 + v167);
      unint64_t v41 = (int8x16_t *)((char *)v41 + v174);
    }
    while (v175);
  }
  return result;
}

unint64_t sub_10022227C(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, char *a5, uint64_t a6, int a7, int a8, int *a9)
{
  unint64_t v9 = result;
  int v10 = *a9;
  unint64_t v11 = a2 >> 2;
  unint64_t v12 = a4 >> 2;
  uint64_t v205 = a6;
  int v206 = a7;
  if ((*a9 & 0xFFFFFFFE) != 2)
  {
    unint64_t v13 = result;
    unint64_t v14 = a2 >> 2;
    switch(v10)
    {
      case 0:
      case 5:
        if (v10) {
          unsigned int v15 = 255;
        }
        else {
          unsigned int v15 = 0;
        }
        if (!a8) {
          return result;
        }
        unint64_t v16 = (a7 - 4);
        if (a7 < 4)
        {
          if (a7 >= 1)
          {
            uint64_t v17 = (_DWORD *)(a3 + 8);
            uint64_t v18 = 4 * v12;
            char v19 = (_DWORD *)(result + 8);
            uint64_t v20 = 4 * v11;
            int v21 = a5 + 1;
            do
            {
              if (*(v19 - 2) == *(v17 - 2)) {
                char v22 = ~(_BYTE)v15;
              }
              else {
                char v22 = v15;
              }
              *(v21 - 1) = v22;
              if (a7 != 1)
              {
                char v23 = *(v19 - 1) == *(v17 - 1) ? ~(_BYTE)v15 : v15;
                *int v21 = v23;
                if (a7 != 2)
                {
                  if (*v19 == *v17) {
                    char v24 = ~(_BYTE)v15;
                  }
                  else {
                    char v24 = v15;
                  }
                  v21[1] = v24;
                }
              }
              uint64_t v17 = (_DWORD *)((char *)v17 + v18);
              char v19 = (_DWORD *)((char *)v19 + v20);
              v21 += a6;
              --a8;
            }
            while (a8);
          }
          return result;
        }
        uint64_t v106 = 0;
        int v107 = a8 - 1;
        uint64_t result = a7;
        uint64_t v108 = (v16 & 0xFFFFFFFC) + 4;
        unint64_t v109 = (v16 & 0xFFFFFFFC) + 5;
        if (v109 <= a7) {
          unint64_t v109 = a7;
        }
        uint64_t v208 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
        unint64_t v110 = a2 & 0xFFFFFFFFFFFFFFFCLL;
        uint64_t v198 = 4 * v109;
        unint64_t v111 = a4 & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v112 = v109 - (v16 & 0xFFFFFFFC) - 4;
        uint64_t v113 = 16 * (v16 >> 2) + 16;
        uint64_t v192 = (v16 >> 2) + 1;
        uint64_t v114 = v192 & 0x7FFFFFF0;
        int8x16_t v115 = (int8x16_t)vdupq_n_s32(v15);
        unint64_t v188 = v112 & 0xFFFFFFFFFFFFFFF0;
        unint64_t v184 = v108 + (v112 & 0xFFFFFFFFFFFFFFF0);
        unint64_t v186 = v108 + (v112 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v187 = v112 & 0xFFFFFFFFFFFFFFF8;
        uint64_t v116 = 4 * v11;
        uint64_t v117 = 4 * v12;
        uint64_t v185 = -(uint64_t)(v112 & 0xFFFFFFFFFFFFFFF8);
        uint16x8_t v189 = &a5[v109];
        int v212 = &a5[v108];
        uint64_t v118 = &a5[v108];
        unint64_t v119 = a3;
        unint64_t v120 = v9;
        unint64_t v210 = v9;
        unint64_t v200 = v110;
        unint64_t v202 = a3;
        unint64_t v194 = v112;
        unint64_t v196 = a4 & 0xFFFFFFFFFFFFFFFCLL;
        uint64_t v190 = v117;
        uint64_t v191 = 4 * v11;
        break;
      case 1:
      case 4:
        goto LABEL_27;
      default:
        return result;
    }
    while (1)
    {
      int16x8_t v121 = &v212[v106 * a6];
      unint64_t v223 = v118;
      int v221 = v107;
      unint64_t v217 = v111 * v106;
      unint64_t v219 = (unint64_t)v121;
      uint64_t v214 = v106 * a6;
      unint64_t v216 = v110 * v106;
      unint64_t v122 = 0;
      if (v16 < 0x3C) {
        goto LABEL_126;
      }
      BOOL v123 = (unint64_t)a5 >= a3 + v113 + v111 * v106 || v119 >= (unint64_t)v121;
      BOOL v124 = !v123;
      if (v120 < (unint64_t)v121 && (unint64_t)a5 < v9 + v113 + v110 * v106) {
        goto LABEL_126;
      }
      if (v124) {
        goto LABEL_126;
      }
      uint64_t v126 = 0;
      uint64_t v127 = v114;
      uint64_t v128 = v114;
      uint64_t v204 = a5;
      do
      {
        int16x8_t v129 = vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(v120 + v126), *(int32x4_t *)(v119 + v126)), (int16x8_t)vceqq_s32(*(int32x4_t *)(v120 + v126 + 16), *(int32x4_t *)(v119 + v126 + 16)));
        int16x8_t v130 = vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(v120 + v126 + 32), *(int32x4_t *)(v119 + v126 + 32)), (int16x8_t)vceqq_s32(*(int32x4_t *)(v120 + v126 + 48), *(int32x4_t *)(v119 + v126 + 48)));
        int16x8_t v131 = vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(v120 + v126 + 64), *(int32x4_t *)(v119 + v126 + 64)), (int16x8_t)vceqq_s32(*(int32x4_t *)(v120 + v126 + 80), *(int32x4_t *)(v119 + v126 + 80)));
        int16x8_t v132 = vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(v120 + v126 + 96), *(int32x4_t *)(v119 + v126 + 96)), (int16x8_t)vceqq_s32(*(int32x4_t *)(v120 + v126 + 112), *(int32x4_t *)(v119 + v126 + 112)));
        int16x8_t v133 = vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(v120 + v126 + 128), *(int32x4_t *)(v119 + v126 + 128)), (int16x8_t)vceqq_s32(*(int32x4_t *)(v120 + v126 + 144), *(int32x4_t *)(v119 + v126 + 144)));
        int16x8_t v134 = vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(v120 + v126 + 160), *(int32x4_t *)(v119 + v126 + 160)), (int16x8_t)vceqq_s32(*(int32x4_t *)(v120 + v126 + 176), *(int32x4_t *)(v119 + v126 + 176)));
        int8x8_t v135 = vmovn_s16(v129);
        int16x8_t v136 = vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(v120 + v126 + 192), *(int32x4_t *)(v119 + v126 + 192)), (int16x8_t)vceqq_s32(*(int32x4_t *)(v120 + v126 + 208), *(int32x4_t *)(v119 + v126 + 208)));
        int8x8_t v137 = vmovn_s16(v130);
        int16x8_t v138 = vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(v120 + v126 + 224), *(int32x4_t *)(v119 + v126 + 224)), (int16x8_t)vceqq_s32(*(int32x4_t *)(v120 + v126 + 240), *(int32x4_t *)(v119 + v126 + 240)));
        int16x8_t v139 = (int16x8_t)vuzp1q_s8((int8x16_t)v129, (int8x16_t)v130);
        v228.val[3] = veorq_s8(v115, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v136, (int8x16_t)v138))), 0x1FuLL)));
        v228.val[2] = veorq_s8(v115, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v133, (int8x16_t)v134))), 0x1FuLL)));
        int8x8_t v140 = vmovn_s16(v131);
        int16x8_t v141 = (int16x8_t)vuzp1q_s8((int8x16_t)v131, (int8x16_t)v132);
        int8x8_t v142 = vmovn_s16(v132);
        int8x8_t v143 = vmovn_s16(v133);
        *(int8x8_t *)v131.i8 = vmovn_s16(v134);
        *(int8x8_t *)v129.i8 = vmovn_s16(v136);
        *(int8x8_t *)v136.i8 = vmovn_s16(v138);
        v228.val[1] = veorq_s8(v115, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16(v141)), 0x1FuLL)));
        __int16 v144 = v136.u8[6];
        __int16 v145 = v136.u8[2];
        __int16 v146 = v136.u8[7];
        __int16 v147 = v136.u8[3];
        __int16 v148 = v129.u8[6];
        __int16 v149 = v129.u8[2];
        __int16 v150 = v131.u8[6];
        __int16 v151 = v131.u8[2];
        __int16 v152 = v129.u8[7];
        __int16 v153 = v129.u8[3];
        v228.val[0] = veorq_s8(v115, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16(v139)), 0x1FuLL)));
        __int16 v154 = v131.u8[7];
        __int16 v155 = v131.u8[3];
        v231.val[3] = veorq_s8(v115, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(*(int8x8_t *)v129.i8, *(int8x8_t *)v136.i8)), 0x1FuLL)));
        v231.val[2] = veorq_s8(v115, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v143, *(int8x8_t *)v131.i8)), 0x1FuLL)));
        v231.val[1] = veorq_s8(v115, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v140, v142)), 0x1FuLL)));
        v231.val[0] = veorq_s8(v115, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v135, v137)), 0x1FuLL)));
        v133.i16[0] = v135.u8[2];
        __int16 v156 = v143.u8[7];
        v133.i16[1] = v135.u8[6];
        __int16 v157 = v143.u8[3];
        v143.i16[0] = v143.u8[2];
        v228.val[0] = vqtbl4q_s8(v228, (int8x16_t)xmmword_1004047C0);
        v143.i16[1] = v143.u8[6];
        v133.i16[2] = v137.u8[2];
        v143.i16[2] = v151;
        v133.i16[3] = v137.u8[6];
        v228.val[1] = vqtbl4q_s8(v231, (int8x16_t)xmmword_1004047C0);
        v231.val[0].i16[0] = v149;
        v231.val[0].i16[1] = v148;
        v143.i16[3] = v150;
        v231.val[0].i16[2] = v145;
        v231.val[0].i16[3] = v144;
        __int16 v158 = v137.u8[7];
        __int16 v159 = v137.u8[3];
        v231.val[3] = veorq_s8(v115, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v231.val[0].i8), 0x1FuLL)));
        v231.val[2] = veorq_s8(v115, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v143), 0x1FuLL)));
        v137.i16[0] = v140.u8[2];
        v137.i16[1] = v140.u8[6];
        v137.i16[2] = v142.u8[2];
        v137.i16[3] = v142.u8[6];
        __int16 v160 = v135.u8[7];
        __int16 v161 = v135.u8[3];
        v135.i16[0] = v140.u8[3];
        v135.i16[1] = v140.u8[7];
        v135.i16[2] = v142.u8[3];
        v135.i16[3] = v142.u8[7];
        v231.val[1] = veorq_s8(v115, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v137), 0x1FuLL)));
        v137.i16[0] = v157;
        v137.i16[1] = v156;
        v137.i16[2] = v155;
        v231.val[0] = veorq_s8(v115, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v133.i8), 0x1FuLL)));
        v137.i16[3] = v154;
        v228.val[2] = vqtbl4q_s8(v231, (int8x16_t)xmmword_1004047C0);
        v140.i16[0] = v153;
        v140.i16[1] = v152;
        v140.i16[2] = v147;
        v140.i16[3] = v146;
        v231.val[3] = veorq_s8(v115, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v140), 0x1FuLL)));
        v231.val[2] = veorq_s8(v115, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v137), 0x1FuLL)));
        v231.val[1] = veorq_s8(v115, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v135), 0x1FuLL)));
        v135.i16[0] = v161;
        v135.i16[1] = v160;
        v135.i16[2] = v159;
        v135.i16[3] = v158;
        v231.val[0] = veorq_s8(v115, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v135), 0x1FuLL)));
        v228.val[3] = vqtbl4q_s8(v231, (int8x16_t)xmmword_1004047C0);
        vst4q_s8(a5, v228);
        a5 += 64;
        v126 += 256;
        v128 -= 16;
      }
      while (v128);
      unint64_t v122 = 4 * (v192 & 0x7FFFFFF0);
      uint64_t v114 = v127;
      BOOL v162 = v192 == v127;
      a6 = v205;
      a7 = v206;
      a3 = v202;
      a5 = v204;
      unint64_t v9 = v210;
      uint64_t v108 = (v16 & 0xFFFFFFFC) + 4;
      unint64_t v110 = v200;
      unint64_t v112 = v194;
      unint64_t v111 = v196;
      uint64_t v113 = 16 * (v16 >> 2) + 16;
      uint64_t v117 = v190;
      uint64_t v116 = v191;
      if (!v162)
      {
LABEL_126:
        uint64_t v163 = 4 * v122 + 12;
        do
        {
          unint64_t v164 = v120 + 4 * v122;
          unint64_t v165 = v119 + 4 * v122;
          if (*(_DWORD *)(v164 + 4) == *(_DWORD *)(v165 + 4)) {
            char v166 = ~(_BYTE)v15;
          }
          else {
            char v166 = v15;
          }
          if (*(_DWORD *)(v120 + v163 - 12) == *(_DWORD *)(v119 + v163 - 12)) {
            char v167 = ~(_BYTE)v15;
          }
          else {
            char v167 = v15;
          }
          unint64_t v168 = &a5[v122];
          *unint64_t v168 = v167;
          v168[1] = v166;
          if (*(_DWORD *)(v120 + v163) == *(_DWORD *)(v119 + v163)) {
            char v169 = ~(_BYTE)v15;
          }
          else {
            char v169 = v15;
          }
          if (*(_DWORD *)(v164 + 8) == *(_DWORD *)(v165 + 8)) {
            char v170 = ~(_BYTE)v15;
          }
          else {
            char v170 = v15;
          }
          v168[2] = v170;
          v168[3] = v169;
          v122 += 4;
          v163 += 16;
        }
        while (v122 <= v16);
      }
      if ((int)v122 >= a7) {
        goto LABEL_109;
      }
      unint64_t v171 = v108;
      if (v112 < 8
        || ((unint64_t v173 = (unint64_t)&v189[v214], v219 < a3 + v198 + v217)
          ? (BOOL v174 = a3 + v208 + v217 >= v173)
          : (BOOL v174 = 1),
            v174 ? (char v175 = 0) : (char v175 = 1),
            v9 + v208 + v216 < v173 ? (BOOL v176 = v219 >= v9 + v198 + v216) : (BOOL v176 = 1),
            (unint64_t v171 = v108, !v176) || (unint64_t v171 = v108, (v175 & 1) != 0)))
      {
        do
        {
LABEL_142:
          if (*(_DWORD *)(v120 + 4 * v171) == *(_DWORD *)(v119 + 4 * v171)) {
            char v172 = ~(_BYTE)v15;
          }
          else {
            char v172 = v15;
          }
          a5[v171++] = v172;
        }
        while (v171 < result);
        goto LABEL_109;
      }
      if (v112 >= 0x10)
      {
        uint64_t v181 = v108;
        uint64_t v182 = v113;
        unint64_t v183 = v188;
        do
        {
          v229.val[3] = veorq_s8(v115, (int8x16_t)vceqq_s32(*(int32x4_t *)(v120 + v182 + 48), *(int32x4_t *)(v119 + v182 + 48)));
          v229.val[2] = veorq_s8(v115, (int8x16_t)vceqq_s32(*(int32x4_t *)(v120 + v182 + 32), *(int32x4_t *)(v119 + v182 + 32)));
          v229.val[1] = veorq_s8(v115, (int8x16_t)vceqq_s32(*(int32x4_t *)(v120 + v182 + 16), *(int32x4_t *)(v119 + v182 + 16)));
          v229.val[0] = veorq_s8(v115, (int8x16_t)vceqq_s32(*(int32x4_t *)(v120 + v182), *(int32x4_t *)(v119 + v182)));
          *(int8x16_t *)&a5[v181] = vqtbl4q_s8(v229, (int8x16_t)xmmword_1004047C0);
          v182 += 64;
          v181 += 16;
          v183 -= 16;
        }
        while (v183);
        if (v112 == v188) {
          goto LABEL_109;
        }
        unint64_t v177 = v188;
        unint64_t v171 = v184;
        if ((v112 & 8) == 0) {
          goto LABEL_142;
        }
      }
      else
      {
        unint64_t v177 = 0;
      }
      unint64_t v178 = v185 + v177;
      uint64_t v179 = v113 + 4 * v177;
      int8x16x4_t v180 = &v223[v177];
      do
      {
        v225.val[0] = veorq_s8(v115, (int8x16_t)vceqq_s32(*(int32x4_t *)(v120 + v179), *(int32x4_t *)(v119 + v179)));
        v225.val[1] = veorq_s8(v115, (int8x16_t)vceqq_s32(*(int32x4_t *)(v120 + v179 + 16), *(int32x4_t *)(v119 + v179 + 16)));
        *(void *)int8x16x4_t v180 = vqtbl2q_s8(v225, (int8x16_t)xmmword_1004047D0).u64[0];
        v180 += 8;
        v179 += 32;
        v178 += 8;
      }
      while (v178);
      unint64_t v171 = v186;
      if (v112 != v187) {
        goto LABEL_142;
      }
LABEL_109:
      v120 += v116;
      v119 += v117;
      a5 += a6;
      int v107 = v221 - 1;
      ++v106;
      uint64_t v118 = &v223[a6];
      if (!v221) {
        return result;
      }
    }
  }
  if (v10 == 2) {
    int v10 = 4;
  }
  else {
    int v10 = 1;
  }
  unint64_t v13 = a3;
  unint64_t v14 = a4 >> 2;
  a3 = result;
  unint64_t v12 = a2 >> 2;
LABEL_27:
  if (v10 == 1) {
    unsigned int v25 = 0;
  }
  else {
    unsigned int v25 = 255;
  }
  if (a8)
  {
    uint64_t v26 = 0;
    unint64_t v27 = (a7 - 8);
    uint64_t v28 = a7 - 4;
    uint64_t v29 = a7;
    uint64_t v222 = 4 * a7;
    uint64_t v30 = 4 * v12;
    int8x16_t v31 = (int8x16_t)vdupq_n_s32(v25);
    uint64_t v32 = 4 * v14;
    unint64_t v33 = v13;
    unint64_t v34 = a3;
    uint64_t v35 = a5;
    unint64_t v201 = a3;
    unint64_t v203 = a5;
    unint64_t v197 = v13;
    int v199 = v10;
    char v195 = v25;
    unint64_t v193 = v27;
    uint64_t v218 = 4 * v14;
    uint64_t v220 = 4 * v12;
    while (1)
    {
      LODWORD(i) = 0;
      switch(v10)
      {
        case 0:
          if (a7 < 8) {
            goto LABEL_47;
          }
          uint64_t v37 = 0;
          for (unint64_t i = 0; i <= v27; i += 8)
          {
            *(int8x8_t *)&v35[i] = vmovn_s16(vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(v33 + v37), *(int32x4_t *)(v34 + v37)), (int16x8_t)vceqq_s32(*(int32x4_t *)(v33 + v37 + 16), *(int32x4_t *)(v34 + v37 + 16))));
            v37 += 32;
          }
          goto LABEL_53;
        case 1:
          if (a7 < 8) {
            goto LABEL_47;
          }
          uint64_t v38 = 0;
          for (unint64_t i = 0; i <= v27; i += 8)
          {
            *(int8x8_t *)&v35[i] = vmovn_s16(vuzp1q_s16((int16x8_t)vcgtq_s32(*(int32x4_t *)(v33 + v38), *(int32x4_t *)(v34 + v38)), (int16x8_t)vcgtq_s32(*(int32x4_t *)(v33 + v38 + 16), *(int32x4_t *)(v34 + v38 + 16))));
            v38 += 32;
          }
          goto LABEL_53;
        case 4:
          if (a7 < 8) {
            goto LABEL_47;
          }
          uint64_t v39 = 0;
          for (unint64_t i = 0; i <= v27; i += 8)
          {
            *(int8x8_t *)&v35[i] = vmovn_s16(vuzp1q_s16((int16x8_t)vcgeq_s32(*(int32x4_t *)(v34 + v39), *(int32x4_t *)(v33 + v39)), (int16x8_t)vcgeq_s32(*(int32x4_t *)(v34 + v39 + 16), *(int32x4_t *)(v33 + v39 + 16))));
            v39 += 32;
          }
          goto LABEL_53;
        case 5:
          if (a7 >= 8)
          {
            uint64_t v43 = 0;
            for (unint64_t i = 0; i <= v27; i += 8)
            {
              *(int8x8_t *)&v35[i] = vmvn_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vceqq_s32(*(int32x4_t *)(v33 + v43), *(int32x4_t *)(v34 + v43)), (int16x8_t)vceqq_s32(*(int32x4_t *)(v33 + v43 + 16), *(int32x4_t *)(v34 + v43 + 16)))));
              v43 += 32;
            }
LABEL_53:
            unint64_t v40 = &a5[v26 * a6];
            unint64_t v41 = a3 + v30 * v26;
            unint64_t v42 = v13 + v32 * v26;
            if ((int)i > (int)v28)
            {
LABEL_49:
              if ((int)i >= a7) {
                goto LABEL_32;
              }
              goto LABEL_76;
            }
          }
          else
          {
LABEL_47:
            LODWORD(i) = 0;
LABEL_48:
            unint64_t v40 = &a5[v26 * a6];
            unint64_t v41 = a3 + v30 * v26;
            unint64_t v42 = v13 + v32 * v26;
            if ((int)v28 < 0) {
              goto LABEL_49;
            }
          }
          unint64_t v44 = (int)i;
          unint64_t v45 = v28 - (int)i;
          if (v45 < 0x3C)
          {
            unint64_t i = (int)i;
            goto LABEL_73;
          }
          unint64_t v46 = v45 >> 2;
          unint64_t v47 = (unint64_t)&v35[(int)i];
          unint64_t v48 = (unint64_t)&v40[(v45 & 0xFFFFFFFFFFFFFFFCLL) + 4 + v44];
          uint64_t v49 = 4 * v44;
          uint64_t v50 = 4 * v44 + 16 * (v45 >> 2);
          uint64_t result = v41 + 16 + v50;
          BOOL v52 = (unint64_t)&v35[v44] < v42 + 16 + v50 && v33 + 4 * v44 < v48;
          BOOL v53 = v34 + 4 * v44 >= v48 || v47 >= result;
          if (!v53 || v52)
          {
            unint64_t i = v44;
            uint64_t v32 = v218;
            uint64_t v30 = v220;
LABEL_73:
            uint64_t v89 = 4 * i + 8;
            do
            {
              uint64_t v90 = &v35[i];
              int8x8_t v91 = veor_s8(*(int8x8_t *)v31.i8, (int8x8_t)vcgt_s32(*(int32x2_t *)(v33 + v89 - 8), *(int32x2_t *)(v34 + v89 - 8)));
              v90[1] = v91.i8[4];
              *uint64_t v90 = v91.i8[0];
              int8x8_t v92 = veor_s8(*(int8x8_t *)v31.i8, (int8x8_t)vcgt_s32(*(int32x2_t *)(v33 + v89), *(int32x2_t *)(v34 + v89)));
              v90[3] = v92.i8[4];
              v90[2] = v92.i8[0];
              i += 4;
              v89 += 16;
            }
            while ((uint64_t)i <= v28);
            goto LABEL_75;
          }
          uint64_t v211 = v40;
          uint64_t v213 = v26;
          int v215 = a8;
          unint64_t v54 = v46 + 1;
          uint64_t v55 = v54 & 0x7FFFFFFFFFFFFFF0;
          unint64_t i = v44 + 4 * (v54 & 0x7FFFFFFFFFFFFFF0);
          uint64_t v207 = v54 & 0x7FFFFFFFFFFFFFF0;
          unint64_t v209 = v54;
          do
          {
            int16x8_t v56 = vuzp1q_s16((int16x8_t)vcgtq_s32(*(int32x4_t *)(v33 + v49), *(int32x4_t *)(v34 + v49)), (int16x8_t)vcgtq_s32(*(int32x4_t *)(v33 + v49 + 16), *(int32x4_t *)(v34 + v49 + 16)));
            int16x8_t v57 = vuzp1q_s16((int16x8_t)vcgtq_s32(*(int32x4_t *)(v33 + v49 + 32), *(int32x4_t *)(v34 + v49 + 32)), (int16x8_t)vcgtq_s32(*(int32x4_t *)(v33 + v49 + 48), *(int32x4_t *)(v34 + v49 + 48)));
            int16x8_t v58 = vuzp1q_s16((int16x8_t)vcgtq_s32(*(int32x4_t *)(v33 + v49 + 64), *(int32x4_t *)(v34 + v49 + 64)), (int16x8_t)vcgtq_s32(*(int32x4_t *)(v33 + v49 + 80), *(int32x4_t *)(v34 + v49 + 80)));
            int16x8_t v59 = vuzp1q_s16((int16x8_t)vcgtq_s32(*(int32x4_t *)(v33 + v49 + 96), *(int32x4_t *)(v34 + v49 + 96)), (int16x8_t)vcgtq_s32(*(int32x4_t *)(v33 + v49 + 112), *(int32x4_t *)(v34 + v49 + 112)));
            int16x8_t v60 = vuzp1q_s16((int16x8_t)vcgtq_s32(*(int32x4_t *)(v33 + v49 + 128), *(int32x4_t *)(v34 + v49 + 128)), (int16x8_t)vcgtq_s32(*(int32x4_t *)(v33 + v49 + 144), *(int32x4_t *)(v34 + v49 + 144)));
            int16x8_t v61 = vuzp1q_s16((int16x8_t)vcgtq_s32(*(int32x4_t *)(v33 + v49 + 160), *(int32x4_t *)(v34 + v49 + 160)), (int16x8_t)vcgtq_s32(*(int32x4_t *)(v33 + v49 + 176), *(int32x4_t *)(v34 + v49 + 176)));
            int8x8_t v62 = vmovn_s16(v56);
            int16x8_t v63 = vuzp1q_s16((int16x8_t)vcgtq_s32(*(int32x4_t *)(v33 + v49 + 192), *(int32x4_t *)(v34 + v49 + 192)), (int16x8_t)vcgtq_s32(*(int32x4_t *)(v33 + v49 + 208), *(int32x4_t *)(v34 + v49 + 208)));
            int8x8_t v64 = vmovn_s16(v57);
            int16x8_t v65 = vuzp1q_s16((int16x8_t)vcgtq_s32(*(int32x4_t *)(v33 + v49 + 224), *(int32x4_t *)(v34 + v49 + 224)), (int16x8_t)vcgtq_s32(*(int32x4_t *)(v33 + v49 + 240), *(int32x4_t *)(v34 + v49 + 240)));
            int16x8_t v66 = (int16x8_t)vuzp1q_s8((int8x16_t)v56, (int8x16_t)v57);
            v226.val[3] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v63, (int8x16_t)v65))), 0x1FuLL)));
            v226.val[2] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v60, (int8x16_t)v61))), 0x1FuLL)));
            int8x8_t v67 = vmovn_s16(v58);
            int16x8_t v68 = (int16x8_t)vuzp1q_s8((int8x16_t)v58, (int8x16_t)v59);
            int8x8_t v69 = vmovn_s16(v59);
            int8x8_t v70 = vmovn_s16(v60);
            *(int8x8_t *)v58.i8 = vmovn_s16(v61);
            *(int8x8_t *)v56.i8 = vmovn_s16(v63);
            *(int8x8_t *)v63.i8 = vmovn_s16(v65);
            v226.val[1] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16(v68)), 0x1FuLL)));
            __int16 v71 = v63.u8[6];
            __int16 v72 = v63.u8[2];
            uint64_t result = v63.u8[7];
            __int16 v73 = v63.u8[3];
            __int16 v74 = v56.u8[6];
            __int16 v75 = v56.u8[2];
            __int16 v76 = v58.u8[6];
            __int16 v77 = v58.u8[2];
            __int16 v78 = v56.u8[7];
            __int16 v79 = v56.u8[3];
            v226.val[0] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16(v66)), 0x1FuLL)));
            __int16 v80 = v58.u8[7];
            __int16 v81 = v58.u8[3];
            v230.val[3] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(*(int8x8_t *)v56.i8, *(int8x8_t *)v63.i8)), 0x1FuLL)));
            v230.val[2] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v70, *(int8x8_t *)v58.i8)), 0x1FuLL)));
            v230.val[1] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v67, v69)), 0x1FuLL)));
            v230.val[0] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v62, v64)), 0x1FuLL)));
            v60.i16[0] = v62.u8[2];
            __int16 v82 = v70.u8[7];
            v60.i16[1] = v62.u8[6];
            __int16 v83 = v70.u8[3];
            v70.i16[0] = v70.u8[2];
            v226.val[0] = vqtbl4q_s8(v226, (int8x16_t)xmmword_1004047C0);
            v70.i16[1] = v70.u8[6];
            v60.i16[2] = v64.u8[2];
            v70.i16[2] = v77;
            v60.i16[3] = v64.u8[6];
            v226.val[1] = vqtbl4q_s8(v230, (int8x16_t)xmmword_1004047C0);
            v230.val[0].i16[0] = v75;
            v230.val[0].i16[1] = v74;
            v70.i16[3] = v76;
            v230.val[0].i16[2] = v72;
            v230.val[0].i16[3] = v71;
            __int16 v84 = v64.u8[7];
            __int16 v85 = v64.u8[3];
            v230.val[3] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v230.val[0].i8), 0x1FuLL)));
            v230.val[2] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v70), 0x1FuLL)));
            v64.i16[0] = v67.u8[2];
            v64.i16[1] = v67.u8[6];
            v64.i16[2] = v69.u8[2];
            v64.i16[3] = v69.u8[6];
            __int16 v86 = v62.u8[7];
            __int16 v87 = v62.u8[3];
            v62.i16[0] = v67.u8[3];
            v62.i16[1] = v67.u8[7];
            v62.i16[2] = v69.u8[3];
            v62.i16[3] = v69.u8[7];
            v230.val[1] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v64), 0x1FuLL)));
            v64.i16[0] = v83;
            v64.i16[1] = v82;
            v64.i16[2] = v81;
            v230.val[0] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v60.i8), 0x1FuLL)));
            v64.i16[3] = v80;
            v226.val[2] = vqtbl4q_s8(v230, (int8x16_t)xmmword_1004047C0);
            v67.i16[0] = v79;
            v67.i16[1] = v78;
            v67.i16[2] = v73;
            v67.i16[3] = result;
            v230.val[3] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v67), 0x1FuLL)));
            v230.val[2] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v64), 0x1FuLL)));
            v230.val[1] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v62), 0x1FuLL)));
            v62.i16[0] = v87;
            v62.i16[1] = v86;
            v62.i16[2] = v85;
            v62.i16[3] = v84;
            v230.val[0] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v62), 0x1FuLL)));
            v226.val[3] = vqtbl4q_s8(v230, (int8x16_t)xmmword_1004047C0);
            int8x16_t v88 = &v35[v44];
            vst4q_s8(v88, v226);
            v44 += 64;
            v49 += 256;
            v55 -= 16;
          }
          while (v55);
          a6 = v205;
          a7 = v206;
          a3 = v201;
          a5 = v203;
          a8 = v215;
          unint64_t v13 = v197;
          int v10 = v199;
          LOBYTE(v25) = v195;
          unint64_t v40 = v211;
          uint64_t v26 = v213;
          unint64_t v27 = v193;
          uint64_t v32 = v218;
          uint64_t v30 = v220;
          if (v209 != v207) {
            goto LABEL_73;
          }
LABEL_75:
          if ((int)i >= a7) {
            goto LABEL_32;
          }
LABEL_76:
          uint64_t result = v29 - (int)i;
          if (result < 8)
          {
            unint64_t v93 = (int)i;
            goto LABEL_101;
          }
          unint64_t v94 = (unint64_t)&v40[v29];
          uint64_t v95 = 4 * (int)i;
          BOOL v97 = (unint64_t)&v35[(int)i] < v42 + v222 && v33 + 4 * (int)i < v94;
          if (v34 + 4 * (int)i < v94 && (unint64_t)&v35[(int)i] < v41 + v222)
          {
            unint64_t v93 = (int)i;
            goto LABEL_101;
          }
          if (v97)
          {
            unint64_t v93 = (int)i;
            goto LABEL_101;
          }
          if (result >= 0x10)
          {
            unint64_t v99 = result & 0xFFFFFFFFFFFFFFF0;
            uint64_t v100 = (int)i;
            unint64_t v101 = result & 0xFFFFFFFFFFFFFFF0;
            do
            {
              v227.val[3] = veorq_s8(v31, (int8x16_t)vcgtq_s32(*(int32x4_t *)(v33 + v95 + 48), *(int32x4_t *)(v34 + v95 + 48)));
              v227.val[2] = veorq_s8(v31, (int8x16_t)vcgtq_s32(*(int32x4_t *)(v33 + v95 + 32), *(int32x4_t *)(v34 + v95 + 32)));
              v227.val[1] = veorq_s8(v31, (int8x16_t)vcgtq_s32(*(int32x4_t *)(v33 + v95 + 16), *(int32x4_t *)(v34 + v95 + 16)));
              v227.val[0] = veorq_s8(v31, (int8x16_t)vcgtq_s32(*(int32x4_t *)(v33 + v95), *(int32x4_t *)(v34 + v95)));
              *(int8x16_t *)&v35[v100] = vqtbl4q_s8(v227, (int8x16_t)xmmword_1004047C0);
              v95 += 64;
              v100 += 16;
              v101 -= 16;
            }
            while (v101);
            if (result == v99) {
              goto LABEL_32;
            }
            if ((result & 8) == 0)
            {
              unint64_t v93 = v99 + (int)i;
              do
              {
LABEL_101:
                if (*(_DWORD *)(v33 + 4 * v93) <= *(_DWORD *)(v34 + 4 * v93)) {
                  char v105 = v25;
                }
                else {
                  char v105 = ~(_BYTE)v25;
                }
                v35[v93++] = v105;
              }
              while (v29 != v93);
              goto LABEL_32;
            }
          }
          else
          {
            unint64_t v99 = 0;
          }
          unint64_t v93 = (result & 0xFFFFFFFFFFFFFFF8) + (int)i;
          unint64_t v102 = v99 - (result & 0xFFFFFFFFFFFFFFF8);
          unint64_t v103 = v99 + (int)i;
          uint64_t v104 = 4 * v103;
          do
          {
            v224.val[0] = veorq_s8(v31, (int8x16_t)vcgtq_s32(*(int32x4_t *)(v33 + v104), *(int32x4_t *)(v34 + v104)));
            v224.val[1] = veorq_s8(v31, (int8x16_t)vcgtq_s32(*(int32x4_t *)(v33 + v104 + 16), *(int32x4_t *)(v34 + v104 + 16)));
            *(void *)&v35[v103] = vqtbl2q_s8(v224, (int8x16_t)xmmword_1004047D0).u64[0];
            v104 += 32;
            v103 += 8;
            v102 += 8;
          }
          while (v102);
          if (result != (result & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_101;
          }
LABEL_32:
          v33 += v32;
          v34 += v30;
          v35 += a6;
          ++v26;
          if (!--a8) {
            return result;
          }
          break;
        default:
          goto LABEL_48;
      }
    }
  }
  return result;
}

unint64_t sub_100223278(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, char *a5, uint64_t a6, int a7, int a8, int *a9)
{
  unint64_t v9 = result;
  int v10 = *a9;
  unint64_t v11 = a2 >> 2;
  unint64_t v12 = a4 >> 2;
  uint64_t v205 = a6;
  int v206 = a7;
  if ((*a9 & 0xFFFFFFFE) != 2)
  {
    unint64_t v13 = result;
    unint64_t v14 = a2 >> 2;
    switch(v10)
    {
      case 0:
      case 5:
        if (v10) {
          unsigned int v15 = 255;
        }
        else {
          unsigned int v15 = 0;
        }
        if (!a8) {
          return result;
        }
        unint64_t v16 = (a7 - 4);
        if (a7 < 4)
        {
          if (a7 >= 1)
          {
            uint64_t v17 = (float *)(a3 + 8);
            uint64_t v18 = 4 * v12;
            char v19 = (float *)(result + 8);
            uint64_t v20 = 4 * v11;
            int v21 = a5 + 1;
            do
            {
              if (*(v19 - 2) == *(v17 - 2)) {
                char v22 = -1;
              }
              else {
                char v22 = 0;
              }
              *(v21 - 1) = v15 ^ v22;
              if (a7 != 1)
              {
                char v23 = *(v19 - 1) == *(v17 - 1) ? -1 : 0;
                *int v21 = v15 ^ v23;
                if (a7 != 2)
                {
                  if (*v19 == *v17) {
                    char v24 = -1;
                  }
                  else {
                    char v24 = 0;
                  }
                  v21[1] = v15 ^ v24;
                }
              }
              uint64_t v17 = (float *)((char *)v17 + v18);
              char v19 = (float *)((char *)v19 + v20);
              v21 += a6;
              --a8;
            }
            while (a8);
          }
          return result;
        }
        uint64_t v106 = 0;
        int v107 = a8 - 1;
        uint64_t result = a7;
        uint64_t v108 = (v16 & 0xFFFFFFFC) + 4;
        unint64_t v109 = (v16 & 0xFFFFFFFC) + 5;
        if (v109 <= a7) {
          unint64_t v109 = a7;
        }
        uint64_t v210 = ((4 * (a7 - 4)) & 0x3FFFFFFF0) + 16;
        unint64_t v110 = a2 & 0xFFFFFFFFFFFFFFFCLL;
        uint64_t v200 = 4 * v109;
        unint64_t v111 = a4 & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v112 = v109 - (v16 & 0xFFFFFFFC) - 4;
        uint64_t v113 = 16 * (v16 >> 2) + 16;
        uint64_t v193 = (v16 >> 2) + 1;
        int8x16_t v114 = (int8x16_t)vdupq_n_s32(v15);
        unint64_t v188 = v112 & 0xFFFFFFFFFFFFFFF0;
        unint64_t v184 = v108 + (v112 & 0xFFFFFFFFFFFFFFF0);
        unint64_t v186 = v108 + (v112 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v187 = v112 & 0xFFFFFFFFFFFFFFF8;
        uint64_t v115 = 4 * v11;
        uint64_t v116 = 4 * v12;
        uint64_t v185 = -(uint64_t)(v112 & 0xFFFFFFFFFFFFFFF8);
        uint64_t v117 = &a5[v108];
        uint16x8_t v189 = &a5[v109];
        uint64_t v118 = &a5[v108];
        unint64_t v119 = a3;
        unint64_t v120 = v9;
        unint64_t v211 = v9;
        unint64_t v208 = v110;
        unint64_t v196 = v112;
        unint64_t v198 = a4 & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v202 = a3;
        uint64_t v191 = v116;
        uint64_t v192 = 4 * v11;
        uint64_t v190 = &a5[v108];
        break;
      case 1:
      case 4:
        goto LABEL_27;
      default:
        return result;
    }
    while (1)
    {
      int16x8_t v121 = &v117[v106 * a6];
      unint64_t v223 = v118;
      int v221 = v107;
      unint64_t v217 = v111 * v106;
      unint64_t v219 = (unint64_t)v121;
      uint64_t v214 = v106 * a6;
      unint64_t v216 = v110 * v106;
      unint64_t v122 = 0;
      if (v16 < 0x3C) {
        goto LABEL_126;
      }
      BOOL v123 = (unint64_t)a5 >= a3 + v113 + v111 * v106 || v119 >= (unint64_t)v121;
      BOOL v124 = !v123;
      if (v120 < (unint64_t)v121 && (unint64_t)a5 < v9 + v113 + v110 * v106) {
        goto LABEL_126;
      }
      if (v124) {
        goto LABEL_126;
      }
      uint64_t v126 = 0;
      uint64_t v127 = v193 & 0x7FFFFFF0;
      uint64_t v204 = a5;
      do
      {
        int16x8_t v128 = vuzp1q_s16((int16x8_t)vceqq_f32(*(float32x4_t *)(v120 + v126), *(float32x4_t *)(v119 + v126)), (int16x8_t)vceqq_f32(*(float32x4_t *)(v120 + v126 + 16), *(float32x4_t *)(v119 + v126 + 16)));
        int16x8_t v129 = vuzp1q_s16((int16x8_t)vceqq_f32(*(float32x4_t *)(v120 + v126 + 32), *(float32x4_t *)(v119 + v126 + 32)), (int16x8_t)vceqq_f32(*(float32x4_t *)(v120 + v126 + 48), *(float32x4_t *)(v119 + v126 + 48)));
        int16x8_t v130 = vuzp1q_s16((int16x8_t)vceqq_f32(*(float32x4_t *)(v120 + v126 + 64), *(float32x4_t *)(v119 + v126 + 64)), (int16x8_t)vceqq_f32(*(float32x4_t *)(v120 + v126 + 80), *(float32x4_t *)(v119 + v126 + 80)));
        int16x8_t v131 = vuzp1q_s16((int16x8_t)vceqq_f32(*(float32x4_t *)(v120 + v126 + 96), *(float32x4_t *)(v119 + v126 + 96)), (int16x8_t)vceqq_f32(*(float32x4_t *)(v120 + v126 + 112), *(float32x4_t *)(v119 + v126 + 112)));
        int16x8_t v132 = vuzp1q_s16((int16x8_t)vceqq_f32(*(float32x4_t *)(v120 + v126 + 128), *(float32x4_t *)(v119 + v126 + 128)), (int16x8_t)vceqq_f32(*(float32x4_t *)(v120 + v126 + 144), *(float32x4_t *)(v119 + v126 + 144)));
        int16x8_t v133 = vuzp1q_s16((int16x8_t)vceqq_f32(*(float32x4_t *)(v120 + v126 + 160), *(float32x4_t *)(v119 + v126 + 160)), (int16x8_t)vceqq_f32(*(float32x4_t *)(v120 + v126 + 176), *(float32x4_t *)(v119 + v126 + 176)));
        int8x8_t v134 = vmovn_s16(v128);
        int16x8_t v135 = vuzp1q_s16((int16x8_t)vceqq_f32(*(float32x4_t *)(v120 + v126 + 192), *(float32x4_t *)(v119 + v126 + 192)), (int16x8_t)vceqq_f32(*(float32x4_t *)(v120 + v126 + 208), *(float32x4_t *)(v119 + v126 + 208)));
        int8x8_t v136 = vmovn_s16(v129);
        int16x8_t v137 = vuzp1q_s16((int16x8_t)vceqq_f32(*(float32x4_t *)(v120 + v126 + 224), *(float32x4_t *)(v119 + v126 + 224)), (int16x8_t)vceqq_f32(*(float32x4_t *)(v120 + v126 + 240), *(float32x4_t *)(v119 + v126 + 240)));
        int16x8_t v138 = (int16x8_t)vuzp1q_s8((int8x16_t)v128, (int8x16_t)v129);
        v228.val[3] = veorq_s8(v114, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v135, (int8x16_t)v137))), 0x1FuLL)));
        v228.val[2] = veorq_s8(v114, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v132, (int8x16_t)v133))), 0x1FuLL)));
        int8x8_t v139 = vmovn_s16(v130);
        int16x8_t v140 = (int16x8_t)vuzp1q_s8((int8x16_t)v130, (int8x16_t)v131);
        int8x8_t v141 = vmovn_s16(v131);
        int8x8_t v142 = vmovn_s16(v132);
        *(int8x8_t *)v130.i8 = vmovn_s16(v133);
        *(int8x8_t *)v128.i8 = vmovn_s16(v135);
        *(int8x8_t *)v135.i8 = vmovn_s16(v137);
        v228.val[1] = veorq_s8(v114, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16(v140)), 0x1FuLL)));
        __int16 v143 = v135.u8[6];
        __int16 v144 = v135.u8[2];
        __int16 v145 = v135.u8[7];
        __int16 v146 = v135.u8[3];
        __int16 v147 = v128.u8[6];
        __int16 v148 = v128.u8[2];
        __int16 v149 = v130.u8[6];
        __int16 v150 = v130.u8[2];
        __int16 v151 = v128.u8[7];
        __int16 v152 = v128.u8[3];
        v228.val[0] = veorq_s8(v114, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16(v138)), 0x1FuLL)));
        __int16 v153 = v130.u8[7];
        __int16 v154 = v130.u8[3];
        v231.val[3] = veorq_s8(v114, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(*(int8x8_t *)v128.i8, *(int8x8_t *)v135.i8)), 0x1FuLL)));
        v231.val[2] = veorq_s8(v114, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v142, *(int8x8_t *)v130.i8)), 0x1FuLL)));
        v231.val[1] = veorq_s8(v114, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v139, v141)), 0x1FuLL)));
        v231.val[0] = veorq_s8(v114, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v134, v136)), 0x1FuLL)));
        v132.i16[0] = v134.u8[2];
        __int16 v155 = v142.u8[7];
        v132.i16[1] = v134.u8[6];
        __int16 v156 = v142.u8[3];
        v142.i16[0] = v142.u8[2];
        v228.val[0] = vqtbl4q_s8(v228, (int8x16_t)xmmword_1004047C0);
        v142.i16[1] = v142.u8[6];
        v132.i16[2] = v136.u8[2];
        v142.i16[2] = v150;
        v132.i16[3] = v136.u8[6];
        v228.val[1] = vqtbl4q_s8(v231, (int8x16_t)xmmword_1004047C0);
        v231.val[0].i16[0] = v148;
        v231.val[0].i16[1] = v147;
        v142.i16[3] = v149;
        v231.val[0].i16[2] = v144;
        v231.val[0].i16[3] = v143;
        __int16 v157 = v136.u8[7];
        __int16 v158 = v136.u8[3];
        v231.val[3] = veorq_s8(v114, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v231.val[0].i8), 0x1FuLL)));
        v231.val[2] = veorq_s8(v114, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v142), 0x1FuLL)));
        v136.i16[0] = v139.u8[2];
        v136.i16[1] = v139.u8[6];
        v136.i16[2] = v141.u8[2];
        v136.i16[3] = v141.u8[6];
        __int16 v159 = v134.u8[7];
        __int16 v160 = v134.u8[3];
        v134.i16[0] = v139.u8[3];
        v134.i16[1] = v139.u8[7];
        v134.i16[2] = v141.u8[3];
        v134.i16[3] = v141.u8[7];
        v231.val[1] = veorq_s8(v114, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v136), 0x1FuLL)));
        v136.i16[0] = v156;
        v136.i16[1] = v155;
        v136.i16[2] = v154;
        v231.val[0] = veorq_s8(v114, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v132.i8), 0x1FuLL)));
        v136.i16[3] = v153;
        v228.val[2] = vqtbl4q_s8(v231, (int8x16_t)xmmword_1004047C0);
        v139.i16[0] = v152;
        v139.i16[1] = v151;
        v139.i16[2] = v146;
        v139.i16[3] = v145;
        v231.val[3] = veorq_s8(v114, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v139), 0x1FuLL)));
        v231.val[2] = veorq_s8(v114, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v136), 0x1FuLL)));
        v231.val[1] = veorq_s8(v114, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v134), 0x1FuLL)));
        v134.i16[0] = v160;
        v134.i16[1] = v159;
        v134.i16[2] = v158;
        v134.i16[3] = v157;
        v231.val[0] = veorq_s8(v114, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v134), 0x1FuLL)));
        v228.val[3] = vqtbl4q_s8(v231, (int8x16_t)xmmword_1004047C0);
        vst4q_s8(a5, v228);
        a5 += 64;
        v126 += 256;
        v127 -= 16;
      }
      while (v127);
      unint64_t v122 = 4 * (v193 & 0x7FFFFFF0);
      a6 = v205;
      a7 = v206;
      a3 = v202;
      a5 = v204;
      unint64_t v9 = v211;
      uint64_t v108 = (v16 & 0xFFFFFFFC) + 4;
      unint64_t v110 = v208;
      unint64_t v112 = v196;
      unint64_t v111 = v198;
      uint64_t v113 = 16 * (v16 >> 2) + 16;
      uint64_t v116 = v191;
      uint64_t v115 = v192;
      uint64_t v117 = v190;
      if (v193 != (v193 & 0x7FFFFFF0))
      {
LABEL_126:
        uint64_t v161 = 4 * v122 + 12;
        do
        {
          if (*(float *)(v120 + v161 - 12) == *(float *)(v119 + v161 - 12)) {
            char v162 = -1;
          }
          else {
            char v162 = 0;
          }
          char v163 = v15 ^ v162;
          unint64_t v164 = v120 + 4 * v122;
          unint64_t v165 = v119 + 4 * v122;
          if (*(float *)(v164 + 4) == *(float *)(v165 + 4)) {
            char v166 = -1;
          }
          else {
            char v166 = 0;
          }
          char v167 = &a5[v122];
          *char v167 = v163;
          v167[1] = v15 ^ v166;
          if (*(float *)(v164 + 8) == *(float *)(v165 + 8)) {
            char v168 = -1;
          }
          else {
            char v168 = 0;
          }
          char v169 = v15 ^ v168;
          if (*(float *)(v120 + v161) == *(float *)(v119 + v161)) {
            char v170 = -1;
          }
          else {
            char v170 = 0;
          }
          v167[2] = v169;
          v167[3] = v15 ^ v170;
          v122 += 4;
          v161 += 16;
        }
        while (v122 <= v16);
      }
      if ((int)v122 >= a7) {
        goto LABEL_109;
      }
      unint64_t v171 = v108;
      if (v112 < 8
        || ((unint64_t v173 = (unint64_t)&v189[v214], v219 < a3 + v200 + v217)
          ? (BOOL v174 = a3 + v210 + v217 >= v173)
          : (BOOL v174 = 1),
            v174 ? (char v175 = 0) : (char v175 = 1),
            v9 + v210 + v216 < v173 ? (BOOL v176 = v219 >= v9 + v200 + v216) : (BOOL v176 = 1),
            (unint64_t v171 = v108, !v176) || (unint64_t v171 = v108, (v175 & 1) != 0)))
      {
        do
        {
LABEL_142:
          if (*(float *)(v120 + 4 * v171) == *(float *)(v119 + 4 * v171)) {
            char v172 = -1;
          }
          else {
            char v172 = 0;
          }
          a5[v171++] = v15 ^ v172;
        }
        while (v171 < result);
        goto LABEL_109;
      }
      if (v112 >= 0x10)
      {
        uint64_t v181 = v108;
        uint64_t v182 = v113;
        unint64_t v183 = v188;
        do
        {
          v229.val[3] = veorq_s8(v114, (int8x16_t)vceqq_f32(*(float32x4_t *)(v120 + v182 + 48), *(float32x4_t *)(v119 + v182 + 48)));
          v229.val[2] = veorq_s8(v114, (int8x16_t)vceqq_f32(*(float32x4_t *)(v120 + v182 + 32), *(float32x4_t *)(v119 + v182 + 32)));
          v229.val[1] = veorq_s8(v114, (int8x16_t)vceqq_f32(*(float32x4_t *)(v120 + v182 + 16), *(float32x4_t *)(v119 + v182 + 16)));
          v229.val[0] = veorq_s8(v114, (int8x16_t)vceqq_f32(*(float32x4_t *)(v120 + v182), *(float32x4_t *)(v119 + v182)));
          *(int8x16_t *)&a5[v181] = vqtbl4q_s8(v229, (int8x16_t)xmmword_1004047C0);
          v182 += 64;
          v181 += 16;
          v183 -= 16;
        }
        while (v183);
        if (v112 == v188) {
          goto LABEL_109;
        }
        unint64_t v177 = v188;
        unint64_t v171 = v184;
        if ((v112 & 8) == 0) {
          goto LABEL_142;
        }
      }
      else
      {
        unint64_t v177 = 0;
      }
      unint64_t v178 = v185 + v177;
      uint64_t v179 = v113 + 4 * v177;
      int8x16x4_t v180 = &v223[v177];
      do
      {
        v225.val[0] = veorq_s8(v114, (int8x16_t)vceqq_f32(*(float32x4_t *)(v120 + v179), *(float32x4_t *)(v119 + v179)));
        v225.val[1] = veorq_s8(v114, (int8x16_t)vceqq_f32(*(float32x4_t *)(v120 + v179 + 16), *(float32x4_t *)(v119 + v179 + 16)));
        *(void *)int8x16x4_t v180 = vqtbl2q_s8(v225, (int8x16_t)xmmword_1004047D0).u64[0];
        v180 += 8;
        v179 += 32;
        v178 += 8;
      }
      while (v178);
      unint64_t v171 = v186;
      if (v112 != v187) {
        goto LABEL_142;
      }
LABEL_109:
      v120 += v115;
      v119 += v116;
      a5 += a6;
      int v107 = v221 - 1;
      ++v106;
      uint64_t v118 = &v223[a6];
      if (!v221) {
        return result;
      }
    }
  }
  if (v10 == 2) {
    int v10 = 4;
  }
  else {
    int v10 = 1;
  }
  unint64_t v13 = a3;
  unint64_t v14 = a4 >> 2;
  a3 = result;
  unint64_t v12 = a2 >> 2;
LABEL_27:
  if (v10 == 1) {
    unsigned int v25 = 0;
  }
  else {
    unsigned int v25 = 255;
  }
  if (a8)
  {
    uint64_t v26 = 0;
    unint64_t v27 = (a7 - 8);
    uint64_t v28 = a7 - 4;
    uint64_t v29 = a7;
    uint64_t v222 = 4 * a7;
    uint64_t v30 = 4 * v12;
    int8x16_t v31 = (int8x16_t)vdupq_n_s32(v25);
    uint64_t v32 = 4 * v14;
    unint64_t v33 = v13;
    unint64_t v34 = a3;
    uint64_t v35 = a5;
    unint64_t v201 = a3;
    unint64_t v203 = a5;
    unint64_t v197 = v13;
    int v199 = v10;
    char v195 = v25;
    unint64_t v194 = v27;
    uint64_t v218 = 4 * v14;
    uint64_t v220 = 4 * v12;
    while (1)
    {
      LODWORD(i) = 0;
      switch(v10)
      {
        case 0:
          if (a7 < 8) {
            goto LABEL_47;
          }
          uint64_t v37 = 0;
          for (unint64_t i = 0; i <= v27; i += 8)
          {
            *(int8x8_t *)&v35[i] = vmovn_s16(vuzp1q_s16((int16x8_t)vceqq_f32(*(float32x4_t *)(v33 + v37), *(float32x4_t *)(v34 + v37)), (int16x8_t)vceqq_f32(*(float32x4_t *)(v33 + v37 + 16), *(float32x4_t *)(v34 + v37 + 16))));
            v37 += 32;
          }
          goto LABEL_53;
        case 1:
          if (a7 < 8) {
            goto LABEL_47;
          }
          uint64_t v38 = 0;
          for (unint64_t i = 0; i <= v27; i += 8)
          {
            *(int8x8_t *)&v35[i] = vmovn_s16(vuzp1q_s16((int16x8_t)vcgtq_f32(*(float32x4_t *)(v33 + v38), *(float32x4_t *)(v34 + v38)), (int16x8_t)vcgtq_f32(*(float32x4_t *)(v33 + v38 + 16), *(float32x4_t *)(v34 + v38 + 16))));
            v38 += 32;
          }
          goto LABEL_53;
        case 4:
          if (a7 < 8) {
            goto LABEL_47;
          }
          uint64_t v39 = 0;
          for (unint64_t i = 0; i <= v27; i += 8)
          {
            *(int8x8_t *)&v35[i] = vmovn_s16(vuzp1q_s16((int16x8_t)vcgeq_f32(*(float32x4_t *)(v34 + v39), *(float32x4_t *)(v33 + v39)), (int16x8_t)vcgeq_f32(*(float32x4_t *)(v34 + v39 + 16), *(float32x4_t *)(v33 + v39 + 16))));
            v39 += 32;
          }
          goto LABEL_53;
        case 5:
          if (a7 >= 8)
          {
            uint64_t v43 = 0;
            for (unint64_t i = 0; i <= v27; i += 8)
            {
              *(int8x8_t *)&v35[i] = vmvn_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vceqq_f32(*(float32x4_t *)(v33 + v43), *(float32x4_t *)(v34 + v43)), (int16x8_t)vceqq_f32(*(float32x4_t *)(v33 + v43 + 16), *(float32x4_t *)(v34 + v43 + 16)))));
              v43 += 32;
            }
LABEL_53:
            unint64_t v40 = &a5[v26 * a6];
            unint64_t v41 = a3 + v30 * v26;
            unint64_t v42 = v13 + v32 * v26;
            if ((int)i > (int)v28)
            {
LABEL_49:
              if ((int)i >= a7) {
                goto LABEL_32;
              }
              goto LABEL_76;
            }
          }
          else
          {
LABEL_47:
            LODWORD(i) = 0;
LABEL_48:
            unint64_t v40 = &a5[v26 * a6];
            unint64_t v41 = a3 + v30 * v26;
            unint64_t v42 = v13 + v32 * v26;
            if ((int)v28 < 0) {
              goto LABEL_49;
            }
          }
          unint64_t v44 = (int)i;
          unint64_t v45 = v28 - (int)i;
          if (v45 < 0x3C)
          {
            unint64_t i = (int)i;
            goto LABEL_73;
          }
          unint64_t v46 = v45 >> 2;
          unint64_t v47 = (unint64_t)&v35[(int)i];
          unint64_t v48 = (unint64_t)&v40[(v45 & 0xFFFFFFFFFFFFFFFCLL) + 4 + v44];
          uint64_t v49 = 4 * v44;
          uint64_t v50 = 4 * v44 + 16 * (v45 >> 2);
          uint64_t result = v41 + 16 + v50;
          BOOL v52 = (unint64_t)&v35[v44] < v42 + 16 + v50 && v33 + 4 * v44 < v48;
          BOOL v53 = v34 + 4 * v44 >= v48 || v47 >= result;
          if (!v53 || v52)
          {
            unint64_t i = v44;
            uint64_t v32 = v218;
            uint64_t v30 = v220;
LABEL_73:
            uint64_t v89 = 4 * i + 8;
            do
            {
              uint64_t v90 = &v35[i];
              int8x8_t v91 = veor_s8(*(int8x8_t *)v31.i8, (int8x8_t)vcgt_f32(*(float32x2_t *)(v33 + v89 - 8), *(float32x2_t *)(v34 + v89 - 8)));
              v90[1] = v91.i8[4];
              *uint64_t v90 = v91.i8[0];
              int8x8_t v92 = veor_s8(*(int8x8_t *)v31.i8, (int8x8_t)vcgt_f32(*(float32x2_t *)(v33 + v89), *(float32x2_t *)(v34 + v89)));
              v90[3] = v92.i8[4];
              v90[2] = v92.i8[0];
              i += 4;
              v89 += 16;
            }
            while ((uint64_t)i <= v28);
            goto LABEL_75;
          }
          int v212 = v40;
          uint64_t v213 = v26;
          int v215 = a8;
          unint64_t v54 = v46 + 1;
          uint64_t v55 = v54 & 0x7FFFFFFFFFFFFFF0;
          unint64_t i = v44 + 4 * (v54 & 0x7FFFFFFFFFFFFFF0);
          uint64_t v207 = v54 & 0x7FFFFFFFFFFFFFF0;
          unint64_t v209 = v54;
          do
          {
            int16x8_t v56 = vuzp1q_s16((int16x8_t)vcgtq_f32(*(float32x4_t *)(v33 + v49), *(float32x4_t *)(v34 + v49)), (int16x8_t)vcgtq_f32(*(float32x4_t *)(v33 + v49 + 16), *(float32x4_t *)(v34 + v49 + 16)));
            int16x8_t v57 = vuzp1q_s16((int16x8_t)vcgtq_f32(*(float32x4_t *)(v33 + v49 + 32), *(float32x4_t *)(v34 + v49 + 32)), (int16x8_t)vcgtq_f32(*(float32x4_t *)(v33 + v49 + 48), *(float32x4_t *)(v34 + v49 + 48)));
            int16x8_t v58 = vuzp1q_s16((int16x8_t)vcgtq_f32(*(float32x4_t *)(v33 + v49 + 64), *(float32x4_t *)(v34 + v49 + 64)), (int16x8_t)vcgtq_f32(*(float32x4_t *)(v33 + v49 + 80), *(float32x4_t *)(v34 + v49 + 80)));
            int16x8_t v59 = vuzp1q_s16((int16x8_t)vcgtq_f32(*(float32x4_t *)(v33 + v49 + 96), *(float32x4_t *)(v34 + v49 + 96)), (int16x8_t)vcgtq_f32(*(float32x4_t *)(v33 + v49 + 112), *(float32x4_t *)(v34 + v49 + 112)));
            int16x8_t v60 = vuzp1q_s16((int16x8_t)vcgtq_f32(*(float32x4_t *)(v33 + v49 + 128), *(float32x4_t *)(v34 + v49 + 128)), (int16x8_t)vcgtq_f32(*(float32x4_t *)(v33 + v49 + 144), *(float32x4_t *)(v34 + v49 + 144)));
            int16x8_t v61 = vuzp1q_s16((int16x8_t)vcgtq_f32(*(float32x4_t *)(v33 + v49 + 160), *(float32x4_t *)(v34 + v49 + 160)), (int16x8_t)vcgtq_f32(*(float32x4_t *)(v33 + v49 + 176), *(float32x4_t *)(v34 + v49 + 176)));
            int8x8_t v62 = vmovn_s16(v56);
            int16x8_t v63 = vuzp1q_s16((int16x8_t)vcgtq_f32(*(float32x4_t *)(v33 + v49 + 192), *(float32x4_t *)(v34 + v49 + 192)), (int16x8_t)vcgtq_f32(*(float32x4_t *)(v33 + v49 + 208), *(float32x4_t *)(v34 + v49 + 208)));
            int8x8_t v64 = vmovn_s16(v57);
            int16x8_t v65 = vuzp1q_s16((int16x8_t)vcgtq_f32(*(float32x4_t *)(v33 + v49 + 224), *(float32x4_t *)(v34 + v49 + 224)), (int16x8_t)vcgtq_f32(*(float32x4_t *)(v33 + v49 + 240), *(float32x4_t *)(v34 + v49 + 240)));
            int16x8_t v66 = (int16x8_t)vuzp1q_s8((int8x16_t)v56, (int8x16_t)v57);
            v226.val[3] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v63, (int8x16_t)v65))), 0x1FuLL)));
            v226.val[2] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v60, (int8x16_t)v61))), 0x1FuLL)));
            int8x8_t v67 = vmovn_s16(v58);
            int16x8_t v68 = (int16x8_t)vuzp1q_s8((int8x16_t)v58, (int8x16_t)v59);
            int8x8_t v69 = vmovn_s16(v59);
            int8x8_t v70 = vmovn_s16(v60);
            *(int8x8_t *)v58.i8 = vmovn_s16(v61);
            *(int8x8_t *)v56.i8 = vmovn_s16(v63);
            *(int8x8_t *)v63.i8 = vmovn_s16(v65);
            v226.val[1] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16(v68)), 0x1FuLL)));
            __int16 v71 = v63.u8[6];
            __int16 v72 = v63.u8[2];
            uint64_t result = v63.u8[7];
            __int16 v73 = v63.u8[3];
            __int16 v74 = v56.u8[6];
            __int16 v75 = v56.u8[2];
            __int16 v76 = v58.u8[6];
            __int16 v77 = v58.u8[2];
            __int16 v78 = v56.u8[7];
            __int16 v79 = v56.u8[3];
            v226.val[0] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16(v66)), 0x1FuLL)));
            __int16 v80 = v58.u8[7];
            __int16 v81 = v58.u8[3];
            v230.val[3] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(*(int8x8_t *)v56.i8, *(int8x8_t *)v63.i8)), 0x1FuLL)));
            v230.val[2] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v70, *(int8x8_t *)v58.i8)), 0x1FuLL)));
            v230.val[1] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v67, v69)), 0x1FuLL)));
            v230.val[0] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v62, v64)), 0x1FuLL)));
            v60.i16[0] = v62.u8[2];
            __int16 v82 = v70.u8[7];
            v60.i16[1] = v62.u8[6];
            __int16 v83 = v70.u8[3];
            v70.i16[0] = v70.u8[2];
            v226.val[0] = vqtbl4q_s8(v226, (int8x16_t)xmmword_1004047C0);
            v70.i16[1] = v70.u8[6];
            v60.i16[2] = v64.u8[2];
            v70.i16[2] = v77;
            v60.i16[3] = v64.u8[6];
            v226.val[1] = vqtbl4q_s8(v230, (int8x16_t)xmmword_1004047C0);
            v230.val[0].i16[0] = v75;
            v230.val[0].i16[1] = v74;
            v70.i16[3] = v76;
            v230.val[0].i16[2] = v72;
            v230.val[0].i16[3] = v71;
            __int16 v84 = v64.u8[7];
            __int16 v85 = v64.u8[3];
            v230.val[3] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v230.val[0].i8), 0x1FuLL)));
            v230.val[2] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v70), 0x1FuLL)));
            v64.i16[0] = v67.u8[2];
            v64.i16[1] = v67.u8[6];
            v64.i16[2] = v69.u8[2];
            v64.i16[3] = v69.u8[6];
            __int16 v86 = v62.u8[7];
            __int16 v87 = v62.u8[3];
            v62.i16[0] = v67.u8[3];
            v62.i16[1] = v67.u8[7];
            v62.i16[2] = v69.u8[3];
            v62.i16[3] = v69.u8[7];
            v230.val[1] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v64), 0x1FuLL)));
            v64.i16[0] = v83;
            v64.i16[1] = v82;
            v64.i16[2] = v81;
            v230.val[0] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v60.i8), 0x1FuLL)));
            v64.i16[3] = v80;
            v226.val[2] = vqtbl4q_s8(v230, (int8x16_t)xmmword_1004047C0);
            v67.i16[0] = v79;
            v67.i16[1] = v78;
            v67.i16[2] = v73;
            v67.i16[3] = result;
            v230.val[3] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v67), 0x1FuLL)));
            v230.val[2] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v64), 0x1FuLL)));
            v230.val[1] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v62), 0x1FuLL)));
            v62.i16[0] = v87;
            v62.i16[1] = v86;
            v62.i16[2] = v85;
            v62.i16[3] = v84;
            v230.val[0] = veorq_s8(v31, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v62), 0x1FuLL)));
            v226.val[3] = vqtbl4q_s8(v230, (int8x16_t)xmmword_1004047C0);
            int8x16_t v88 = &v35[v44];
            vst4q_s8(v88, v226);
            v44 += 64;
            v49 += 256;
            v55 -= 16;
          }
          while (v55);
          a6 = v205;
          a7 = v206;
          a3 = v201;
          a5 = v203;
          a8 = v215;
          unint64_t v13 = v197;
          int v10 = v199;
          LOBYTE(v25) = v195;
          unint64_t v40 = v212;
          uint64_t v26 = v213;
          unint64_t v27 = v194;
          uint64_t v32 = v218;
          uint64_t v30 = v220;
          if (v209 != v207) {
            goto LABEL_73;
          }
LABEL_75:
          if ((int)i >= a7) {
            goto LABEL_32;
          }
LABEL_76:
          uint64_t result = v29 - (int)i;
          if (result < 8)
          {
            unint64_t v93 = (int)i;
            goto LABEL_101;
          }
          unint64_t v94 = (unint64_t)&v40[v29];
          uint64_t v95 = 4 * (int)i;
          BOOL v97 = (unint64_t)&v35[(int)i] < v42 + v222 && v33 + 4 * (int)i < v94;
          if (v34 + 4 * (int)i < v94 && (unint64_t)&v35[(int)i] < v41 + v222)
          {
            unint64_t v93 = (int)i;
            goto LABEL_101;
          }
          if (v97)
          {
            unint64_t v93 = (int)i;
            goto LABEL_101;
          }
          if (result >= 0x10)
          {
            unint64_t v99 = result & 0xFFFFFFFFFFFFFFF0;
            uint64_t v100 = (int)i;
            unint64_t v101 = result & 0xFFFFFFFFFFFFFFF0;
            do
            {
              v227.val[3] = veorq_s8(v31, (int8x16_t)vcgtq_f32(*(float32x4_t *)(v33 + v95 + 48), *(float32x4_t *)(v34 + v95 + 48)));
              v227.val[2] = veorq_s8(v31, (int8x16_t)vcgtq_f32(*(float32x4_t *)(v33 + v95 + 32), *(float32x4_t *)(v34 + v95 + 32)));
              v227.val[1] = veorq_s8(v31, (int8x16_t)vcgtq_f32(*(float32x4_t *)(v33 + v95 + 16), *(float32x4_t *)(v34 + v95 + 16)));
              v227.val[0] = veorq_s8(v31, (int8x16_t)vcgtq_f32(*(float32x4_t *)(v33 + v95), *(float32x4_t *)(v34 + v95)));
              *(int8x16_t *)&v35[v100] = vqtbl4q_s8(v227, (int8x16_t)xmmword_1004047C0);
              v95 += 64;
              v100 += 16;
              v101 -= 16;
            }
            while (v101);
            if (result == v99) {
              goto LABEL_32;
            }
            if ((result & 8) == 0)
            {
              unint64_t v93 = v99 + (int)i;
              do
              {
LABEL_101:
                if (*(float *)(v33 + 4 * v93) <= *(float *)(v34 + 4 * v93)) {
                  char v105 = 0;
                }
                else {
                  char v105 = -1;
                }
                v35[v93++] = v25 ^ v105;
              }
              while (v29 != v93);
              goto LABEL_32;
            }
          }
          else
          {
            unint64_t v99 = 0;
          }
          unint64_t v93 = (result & 0xFFFFFFFFFFFFFFF8) + (int)i;
          unint64_t v102 = v99 - (result & 0xFFFFFFFFFFFFFFF8);
          unint64_t v103 = v99 + (int)i;
          uint64_t v104 = 4 * v103;
          do
          {
            v224.val[0] = veorq_s8(v31, (int8x16_t)vcgtq_f32(*(float32x4_t *)(v33 + v104), *(float32x4_t *)(v34 + v104)));
            v224.val[1] = veorq_s8(v31, (int8x16_t)vcgtq_f32(*(float32x4_t *)(v33 + v104 + 16), *(float32x4_t *)(v34 + v104 + 16)));
            *(void *)&v35[v103] = vqtbl2q_s8(v224, (int8x16_t)xmmword_1004047D0).u64[0];
            v104 += 32;
            v103 += 8;
            v102 += 8;
          }
          while (v102);
          if (result != (result & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_101;
          }
LABEL_32:
          v33 += v32;
          v34 += v30;
          v35 += a6;
          ++v26;
          if (!--a8) {
            return result;
          }
          break;
        default:
          goto LABEL_48;
      }
    }
  }
  return result;
}

uint64_t sub_10022429C(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, char *a5, uint64_t a6, int a7, int a8, int *a9)
{
  int v10 = *a9;
  unint64_t v11 = a2 >> 3;
  unint64_t v12 = a4 >> 3;
  uint64_t v188 = a6;
  if ((*a9 & 0xFFFFFFFE) != 2)
  {
    uint64_t v13 = result;
    unint64_t v14 = a4 >> 3;
    switch(v10)
    {
      case 0:
      case 5:
        if (v10) {
          unsigned int v15 = 255;
        }
        else {
          unsigned int v15 = 0;
        }
        if (!a8) {
          return result;
        }
        unint64_t v16 = (a7 - 4);
        if (a7 < 4)
        {
          if (a7 >= 1)
          {
            uint64_t v17 = (double *)(a3 + 16);
            uint64_t v18 = 8 * v12;
            char v19 = (double *)(result + 16);
            uint64_t v20 = a5 + 1;
            do
            {
              if (*(v19 - 2) == *(v17 - 2)) {
                char v21 = -1;
              }
              else {
                char v21 = 0;
              }
              *(v20 - 1) = v15 ^ v21;
              if (a7 != 1)
              {
                char v22 = *(v19 - 1) == *(v17 - 1) ? -1 : 0;
                *uint64_t v20 = v15 ^ v22;
                if (a7 != 2)
                {
                  if (*v19 == *v17) {
                    char v23 = -1;
                  }
                  else {
                    char v23 = 0;
                  }
                  v20[1] = v15 ^ v23;
                }
              }
              uint64_t v17 = (double *)((char *)v17 + v18);
              v19 += v11;
              v20 += a6;
              --a8;
            }
            while (a8);
          }
          return result;
        }
        uint64_t v92 = 0;
        int v93 = a8 - 1;
        unint64_t v94 = a7;
        uint64_t v95 = (v16 & 0xFFFFFFFC) + 4;
        unint64_t v96 = (v16 & 0xFFFFFFFC) + 5;
        if (v96 <= a7) {
          unint64_t v96 = a7;
        }
        uint64_t v181 = ((8 * (a7 - 4)) & 0x7FFFFFFE0) + 32;
        unint64_t v97 = a2 & 0xFFFFFFFFFFFFFFF8;
        uint64_t v177 = 8 * v96;
        unint64_t v98 = a4 & 0xFFFFFFFFFFFFFFF8;
        unint64_t v99 = v96 - (v16 & 0xFFFFFFFC) - 4;
        uint64_t v100 = 32 * (v16 >> 2) + 32;
        uint64_t v171 = (v16 >> 2) + 1;
        int8x16_t v101 = (int8x16_t)vdupq_n_s32(v15);
        unint64_t v162 = v99 & 0xFFFFFFFFFFFFFFF0;
        unint64_t v155 = v95 + (v99 & 0xFFFFFFFFFFFFFFF0);
        unint64_t v158 = v95 + (v99 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v160 = v99 & 0xFFFFFFFFFFFFFFF8;
        uint64_t v102 = 8 * v11;
        uint64_t v103 = 8 * v12;
        uint64_t v156 = -(uint64_t)(v99 & 0xFFFFFFFFFFFFFFF8);
        uint64_t v104 = &a5[v95];
        unint64_t v164 = &a5[v96];
        unint64_t v183 = &a5[v95];
        unint64_t v105 = a3;
        unint64_t v106 = result;
        int v187 = a7;
        unint64_t v179 = a2 & 0xFFFFFFFFFFFFFFF8;
        unint64_t v173 = v99;
        unint64_t v175 = a4 & 0xFFFFFFFFFFFFFFF8;
        uint64_t v169 = result;
        uint64_t v166 = 8 * v12;
        uint64_t v168 = 8 * v11;
        break;
      case 1:
      case 4:
        goto LABEL_27;
      default:
        return result;
    }
    while (1)
    {
      unint64_t v107 = (unint64_t)&v183[v92 * a6];
      int v196 = v93;
      unint64_t v192 = v98 * v92;
      unint64_t v194 = v107;
      unint64_t v190 = v97 * v92;
      uint64_t v185 = v92 * a6;
      unint64_t v108 = 0;
      if (v16 < 0x3C) {
        goto LABEL_130;
      }
      BOOL v109 = (unint64_t)a5 >= a3 + v100 + v98 * v92 || v105 >= v107;
      BOOL v110 = !v109;
      if (v106 < v107 && (unint64_t)a5 < result + v100 + v97 * v92) {
        goto LABEL_130;
      }
      if (v110) {
        goto LABEL_130;
      }
      uint64_t v112 = 0;
      uint64_t v113 = v171 & 0x7FFFFFF0;
      int8x16_t v114 = a5;
      do
      {
        int16x8_t v115 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112), *(float64x2_t *)(v105 + v112)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 16), *(float64x2_t *)(v105 + v112 + 16))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 32), *(float64x2_t *)(v105 + v112 + 32)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 48), *(float64x2_t *)(v105 + v112 + 48))));
        int16x8_t v116 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 64), *(float64x2_t *)(v105 + v112 + 64)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 80), *(float64x2_t *)(v105 + v112 + 80))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 96), *(float64x2_t *)(v105 + v112 + 96)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 112), *(float64x2_t *)(v105 + v112 + 112))));
        int16x8_t v117 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 128), *(float64x2_t *)(v105 + v112 + 128)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 144), *(float64x2_t *)(v105 + v112 + 144))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 160), *(float64x2_t *)(v105 + v112 + 160)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 176), *(float64x2_t *)(v105 + v112 + 176))));
        int16x8_t v118 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 192), *(float64x2_t *)(v105 + v112 + 192)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 208), *(float64x2_t *)(v105 + v112 + 208))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 224), *(float64x2_t *)(v105 + v112 + 224)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 240), *(float64x2_t *)(v105 + v112 + 240))));
        int16x8_t v119 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 256), *(float64x2_t *)(v105 + v112 + 256)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 272), *(float64x2_t *)(v105 + v112 + 272))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 288), *(float64x2_t *)(v105 + v112 + 288)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 304), *(float64x2_t *)(v105 + v112 + 304))));
        int8x8_t v120 = vmovn_s16(v115);
        int8x8_t v121 = vmovn_s16(v116);
        int16x8_t v122 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 320), *(float64x2_t *)(v105 + v112 + 320)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 336), *(float64x2_t *)(v105 + v112 + 336))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 352), *(float64x2_t *)(v105 + v112 + 352)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 368), *(float64x2_t *)(v105 + v112 + 368))));
        int8x8_t v123 = vmovn_s16(v117);
        int8x8_t v124 = vmovn_s16(v118);
        int16x8_t v125 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 384), *(float64x2_t *)(v105 + v112 + 384)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 400), *(float64x2_t *)(v105 + v112 + 400))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 416), *(float64x2_t *)(v105 + v112 + 416)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 432), *(float64x2_t *)(v105 + v112 + 432))));
        int8x8_t v126 = vmovn_s16(v119);
        int8x8_t v127 = vmovn_s16(v125);
        int8x8_t v128 = vmovn_s16(v122);
        int16x8_t v129 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 448), *(float64x2_t *)(v105 + v112 + 448)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 464), *(float64x2_t *)(v105 + v112 + 464))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 480), *(float64x2_t *)(v105 + v112 + 480)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v112 + 496), *(float64x2_t *)(v105 + v112 + 496))));
        int8x8_t v130 = vmovn_s16(v129);
        v208.val[3] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v125, (int8x16_t)v129))), 0x1FuLL)));
        v208.val[2] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v119, (int8x16_t)v122))), 0x1FuLL)));
        v208.val[1] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v117, (int8x16_t)v118))), 0x1FuLL)));
        v208.val[0] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v115, (int8x16_t)v116))), 0x1FuLL)));
        v200.val[3] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v127, v130)), 0x1FuLL)));
        v200.val[2] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v126, v128)), 0x1FuLL)));
        v200.val[1] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v123, v124)), 0x1FuLL)));
        v200.val[0] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v120, v121)), 0x1FuLL)));
        v131.i16[0] = v120.u8[2];
        v131.i16[1] = v120.u8[6];
        v131.i16[2] = v121.u8[2];
        v204.val[0] = vqtbl4q_s8(v208, (int8x16_t)xmmword_1004047C0);
        v208.val[0].i16[0] = v123.u8[2];
        v208.val[0].i16[1] = v123.u8[6];
        v208.val[0].i16[2] = v124.u8[2];
        v204.val[1] = vqtbl4q_s8(v200, (int8x16_t)xmmword_1004047C0);
        v116.i16[0] = v126.u8[2];
        v116.i16[1] = v126.u8[6];
        v131.i16[3] = v121.u8[6];
        v116.i16[2] = v128.u8[2];
        v116.i16[3] = v128.u8[6];
        v118.i16[0] = v127.u8[2];
        v118.i16[1] = v127.u8[6];
        v118.i16[2] = v130.u8[2];
        v118.i16[3] = v130.u8[6];
        v206.val[3] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v118.i8), 0x1FuLL)));
        v206.val[2] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v116.i8), 0x1FuLL)));
        v208.val[0].i16[3] = v124.u8[6];
        v206.val[1] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v208.val[0].i8), 0x1FuLL)));
        v206.val[0] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v131), 0x1FuLL)));
        v204.val[2] = vqtbl4q_s8(v206, (int8x16_t)xmmword_1004047C0);
        v126.i16[0] = v126.u8[3];
        v127.i16[0] = v127.u8[3];
        v126.i16[1] = v126.u8[7];
        v126.i16[2] = v128.u8[3];
        v127.i16[1] = v127.u8[7];
        v126.i16[3] = v128.u8[7];
        v128.i16[0] = v123.u8[3];
        v127.i16[2] = v130.u8[3];
        v127.i16[3] = v130.u8[7];
        v128.i16[1] = v123.u8[7];
        v128.i16[2] = v124.u8[3];
        v206.val[3] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v127), 0x1FuLL)));
        v206.val[2] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v126), 0x1FuLL)));
        v128.i16[3] = v124.u8[7];
        v206.val[1] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v128), 0x1FuLL)));
        v120.i16[0] = v120.u8[3];
        v120.i16[1] = v120.u8[7];
        v120.i16[2] = v121.u8[3];
        v120.i16[3] = v121.u8[7];
        v206.val[0] = veorq_s8(v101, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v120), 0x1FuLL)));
        v204.val[3] = vqtbl4q_s8(v206, (int8x16_t)xmmword_1004047C0);
        vst4q_s8(v114, v204);
        v114 += 64;
        v112 += 512;
        v113 -= 16;
      }
      while (v113);
      uint64_t v100 = 32 * (v16 >> 2) + 32;
      a7 = v187;
      a6 = v188;
      unint64_t v108 = 4 * (v171 & 0x7FFFFFF0);
      uint64_t result = v169;
      uint64_t v95 = (v16 & 0xFFFFFFFC) + 4;
      unint64_t v97 = v179;
      unint64_t v99 = v173;
      unint64_t v98 = v175;
      uint64_t v103 = v166;
      uint64_t v102 = v168;
      if (v171 != (v171 & 0x7FFFFFF0))
      {
LABEL_130:
        uint64_t v132 = 8 * v108 + 24;
        do
        {
          if (*(double *)(v106 + v132 - 24) == *(double *)(v105 + v132 - 24)) {
            char v133 = -1;
          }
          else {
            char v133 = 0;
          }
          char v134 = v15 ^ v133;
          unint64_t v135 = v106 + 8 * v108;
          unint64_t v136 = v105 + 8 * v108;
          if (*(double *)(v135 + 8) == *(double *)(v136 + 8)) {
            char v137 = -1;
          }
          else {
            char v137 = 0;
          }
          int16x8_t v138 = &a5[v108];
          *int16x8_t v138 = v134;
          v138[1] = v15 ^ v137;
          if (*(double *)(v135 + 16) == *(double *)(v136 + 16)) {
            char v139 = -1;
          }
          else {
            char v139 = 0;
          }
          char v140 = v15 ^ v139;
          if (*(double *)(v106 + v132) == *(double *)(v105 + v132)) {
            char v141 = -1;
          }
          else {
            char v141 = 0;
          }
          v138[2] = v140;
          v138[3] = v15 ^ v141;
          v108 += 4;
          v132 += 32;
        }
        while (v108 <= v16);
      }
      if ((int)v108 >= a7) {
        goto LABEL_113;
      }
      unint64_t v142 = v95;
      if (v99 < 8
        || ((unint64_t v144 = (unint64_t)&v164[v185], v194 < a3 + v177 + v192)
          ? (BOOL v145 = a3 + v181 + v192 >= v144)
          : (BOOL v145 = 1),
            v145 ? (char v146 = 0) : (char v146 = 1),
            result + v181 + v190 < v144 ? (BOOL v147 = v194 >= result + v177 + v190) : (BOOL v147 = 1),
            (unint64_t v142 = v95, !v147) || (unint64_t v142 = v95, (v146 & 1) != 0)))
      {
        do
        {
LABEL_146:
          if (*(double *)(v106 + 8 * v142) == *(double *)(v105 + 8 * v142)) {
            char v143 = -1;
          }
          else {
            char v143 = 0;
          }
          a5[v142++] = v15 ^ v143;
        }
        while (v142 < v94);
        goto LABEL_113;
      }
      if (v99 >= 0x10)
      {
        uint64_t v152 = v95;
        uint64_t v153 = v100;
        unint64_t v154 = v162;
        do
        {
          v202.val[3] = veorq_s8(v101, (int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v153 + 96), *(float64x2_t *)(v105 + v153 + 96)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v153 + 112), *(float64x2_t *)(v105 + v153 + 112))));
          v202.val[2] = veorq_s8(v101, (int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v153 + 64), *(float64x2_t *)(v105 + v153 + 64)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v153 + 80), *(float64x2_t *)(v105 + v153 + 80))));
          v202.val[1] = veorq_s8(v101, (int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v153 + 32), *(float64x2_t *)(v105 + v153 + 32)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v153 + 48), *(float64x2_t *)(v105 + v153 + 48))));
          v202.val[0] = veorq_s8(v101, (int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v153), *(float64x2_t *)(v105 + v153)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v153 + 16), *(float64x2_t *)(v105 + v153 + 16))));
          *(int8x16_t *)&a5[v152] = vqtbl4q_s8(v202, (int8x16_t)xmmword_1004047C0);
          v153 += 128;
          v152 += 16;
          v154 -= 16;
        }
        while (v154);
        if (v99 == v162) {
          goto LABEL_113;
        }
        unint64_t v148 = v162;
        unint64_t v142 = v155;
        if ((v99 & 8) == 0) {
          goto LABEL_146;
        }
      }
      else
      {
        unint64_t v148 = 0;
      }
      unint64_t v149 = v156 + v148;
      uint64_t v150 = v100 + 8 * v148;
      __int16 v151 = &v104[v148];
      do
      {
        v198.val[0] = veorq_s8(v101, (int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v150), *(float64x2_t *)(v105 + v150)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v150 + 16), *(float64x2_t *)(v105 + v150 + 16))));
        v198.val[1] = veorq_s8(v101, (int8x16_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v150 + 32), *(float64x2_t *)(v105 + v150 + 32)), (int32x4_t)vceqq_f64(*(float64x2_t *)(v106 + v150 + 48), *(float64x2_t *)(v105 + v150 + 48))));
        *(void *)__int16 v151 = vqtbl2q_s8(v198, (int8x16_t)xmmword_1004047D0).u64[0];
        v151 += 8;
        v150 += 64;
        v149 += 8;
      }
      while (v149);
      unint64_t v142 = v158;
      if (v99 != v160) {
        goto LABEL_146;
      }
LABEL_113:
      v106 += v102;
      v105 += v103;
      a5 += a6;
      int v93 = v196 - 1;
      ++v92;
      v104 += a6;
      if (!v196) {
        return result;
      }
    }
  }
  if (v10 == 2) {
    int v10 = 4;
  }
  else {
    int v10 = 1;
  }
  uint64_t v13 = a3;
  unint64_t v14 = a2 >> 3;
  a3 = result;
  unint64_t v11 = a4 >> 3;
LABEL_27:
  if (v10 == 1) {
    unsigned int v24 = 0;
  }
  else {
    unsigned int v24 = 255;
  }
  if (a8)
  {
    unint64_t v25 = (a7 - 4);
    if (a7 < 4)
    {
      if (a7 >= 1)
      {
        uint64_t v26 = (double *)(a3 + 16);
        unint64_t v27 = (double *)(v13 + 16);
        uint64_t v28 = a5 + 1;
        do
        {
          if (*(v27 - 2) <= *(v26 - 2)) {
            char v29 = 0;
          }
          else {
            char v29 = -1;
          }
          *(v28 - 1) = v24 ^ v29;
          if (a7 != 1)
          {
            char v30 = *(v27 - 1) <= *(v26 - 1) ? 0 : -1;
            *uint64_t v28 = v24 ^ v30;
            if (a7 != 2)
            {
              if (*v27 <= *v26) {
                char v31 = 0;
              }
              else {
                char v31 = -1;
              }
              v28[1] = v24 ^ v31;
            }
          }
          v26 += v14;
          v27 += v11;
          v28 += a6;
          --a8;
        }
        while (a8);
      }
      return result;
    }
    uint64_t v32 = 0;
    int v33 = a8 - 1;
    unint64_t v34 = a7;
    uint64_t v35 = (v25 & 0xFFFFFFFC) + 4;
    if ((unint64_t)(v25 & 0xFFFFFFFC) + 5 <= a7) {
      uint64_t v36 = a7;
    }
    else {
      uint64_t v36 = (v25 & 0xFFFFFFFC) + 5;
    }
    uint64_t v180 = ((8 * (a7 - 4)) & 0x7FFFFFFE0) + 32;
    uint64_t v37 = 8 * v14;
    uint64_t v176 = 8 * v36;
    uint64_t v38 = 8 * v11;
    unint64_t v39 = v36 - (v25 & 0xFFFFFFFC) - 4;
    uint64_t v40 = 32 * (v25 >> 2) + 32;
    uint64_t v170 = (v25 >> 2) + 1;
    uint64_t v41 = v170 & 0x7FFFFFF0;
    int8x16_t v42 = (int8x16_t)vdupq_n_s32(v24);
    unint64_t v165 = v39 & 0xFFFFFFFFFFFFFFF0;
    unint64_t v157 = v35 + (v39 & 0xFFFFFFFFFFFFFFF0);
    unint64_t v161 = v35 + (v39 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v163 = v39 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v159 = -(uint64_t)(v39 & 0xFFFFFFFFFFFFFFF8);
    uint64_t v43 = &a5[v35];
    char v167 = &a5[v36];
    uint16x8_t v189 = &a5[v35];
    unint64_t v44 = a3;
    unint64_t v45 = v13;
    int v186 = a7;
    uint64_t v182 = v13;
    uint64_t v184 = a3;
    uint64_t v178 = 8 * v14;
    unint64_t v172 = v39;
    uint64_t v174 = 8 * v11;
    do
    {
      uint64_t v46 = v32 * a6;
      unint64_t v47 = (unint64_t)&v189[v32 * a6];
      int v195 = v33;
      uint64_t v191 = v37 * v32;
      uint64_t v193 = v38 * v32;
      unint64_t v48 = 0;
      if (v25 < 0x3C) {
        goto LABEL_68;
      }
      BOOL v49 = (unint64_t)a5 >= v13 + v40 + v38 * v32 || v45 >= v47;
      BOOL v50 = !v49;
      if (v44 < v47 && (unint64_t)a5 < a3 + v40 + v37 * v32) {
        goto LABEL_68;
      }
      if (v50) {
        goto LABEL_68;
      }
      uint64_t v52 = 0;
      uint64_t v53 = v41;
      unint64_t v54 = a5;
      do
      {
        int16x8_t v55 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52), *(float64x2_t *)(v44 + v52)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 16), *(float64x2_t *)(v44 + v52 + 16))), (int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 32), *(float64x2_t *)(v44 + v52 + 32)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 48), *(float64x2_t *)(v44 + v52 + 48))));
        int16x8_t v56 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 64), *(float64x2_t *)(v44 + v52 + 64)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 80), *(float64x2_t *)(v44 + v52 + 80))), (int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 96), *(float64x2_t *)(v44 + v52 + 96)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 112), *(float64x2_t *)(v44 + v52 + 112))));
        int16x8_t v57 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 128), *(float64x2_t *)(v44 + v52 + 128)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 144), *(float64x2_t *)(v44 + v52 + 144))), (int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 160), *(float64x2_t *)(v44 + v52 + 160)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 176), *(float64x2_t *)(v44 + v52 + 176))));
        int16x8_t v58 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 192), *(float64x2_t *)(v44 + v52 + 192)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 208), *(float64x2_t *)(v44 + v52 + 208))), (int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 224), *(float64x2_t *)(v44 + v52 + 224)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 240), *(float64x2_t *)(v44 + v52 + 240))));
        int16x8_t v59 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 256), *(float64x2_t *)(v44 + v52 + 256)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 272), *(float64x2_t *)(v44 + v52 + 272))), (int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 288), *(float64x2_t *)(v44 + v52 + 288)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 304), *(float64x2_t *)(v44 + v52 + 304))));
        int8x8_t v60 = vmovn_s16(v55);
        int8x8_t v61 = vmovn_s16(v56);
        int16x8_t v62 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 320), *(float64x2_t *)(v44 + v52 + 320)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 336), *(float64x2_t *)(v44 + v52 + 336))), (int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 352), *(float64x2_t *)(v44 + v52 + 352)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 368), *(float64x2_t *)(v44 + v52 + 368))));
        int8x8_t v63 = vmovn_s16(v57);
        int8x8_t v64 = vmovn_s16(v58);
        int16x8_t v65 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 384), *(float64x2_t *)(v44 + v52 + 384)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 400), *(float64x2_t *)(v44 + v52 + 400))), (int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 416), *(float64x2_t *)(v44 + v52 + 416)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 432), *(float64x2_t *)(v44 + v52 + 432))));
        int8x8_t v66 = vmovn_s16(v59);
        int8x8_t v67 = vmovn_s16(v65);
        int8x8_t v68 = vmovn_s16(v62);
        int16x8_t v69 = vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 448), *(float64x2_t *)(v44 + v52 + 448)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 464), *(float64x2_t *)(v44 + v52 + 464))), (int16x8_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 480), *(float64x2_t *)(v44 + v52 + 480)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + v52 + 496), *(float64x2_t *)(v44 + v52 + 496))));
        int8x8_t v70 = vmovn_s16(v69);
        v207.val[3] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v65, (int8x16_t)v69))), 0x1FuLL)));
        v207.val[2] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v59, (int8x16_t)v62))), 0x1FuLL)));
        v207.val[1] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v57, (int8x16_t)v58))), 0x1FuLL)));
        v207.val[0] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vmovn_s16((int16x8_t)vuzp1q_s8((int8x16_t)v55, (int8x16_t)v56))), 0x1FuLL)));
        v199.val[3] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v67, v70)), 0x1FuLL)));
        v199.val[2] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v66, v68)), 0x1FuLL)));
        v199.val[1] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v63, v64)), 0x1FuLL)));
        v199.val[0] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)vuzp2_s8(v60, v61)), 0x1FuLL)));
        v71.i16[0] = v60.u8[2];
        v71.i16[1] = v60.u8[6];
        v71.i16[2] = v61.u8[2];
        v203.val[0] = vqtbl4q_s8(v207, (int8x16_t)xmmword_1004047C0);
        v207.val[0].i16[0] = v63.u8[2];
        v207.val[0].i16[1] = v63.u8[6];
        v207.val[0].i16[2] = v64.u8[2];
        v203.val[1] = vqtbl4q_s8(v199, (int8x16_t)xmmword_1004047C0);
        v56.i16[0] = v66.u8[2];
        v56.i16[1] = v66.u8[6];
        v71.i16[3] = v61.u8[6];
        v56.i16[2] = v68.u8[2];
        v56.i16[3] = v68.u8[6];
        v58.i16[0] = v67.u8[2];
        v58.i16[1] = v67.u8[6];
        v58.i16[2] = v70.u8[2];
        v58.i16[3] = v70.u8[6];
        v205.val[3] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v58.i8), 0x1FuLL)));
        v205.val[2] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v56.i8), 0x1FuLL)));
        v207.val[0].i16[3] = v64.u8[6];
        v205.val[1] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v207.val[0].i8), 0x1FuLL)));
        v205.val[0] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16(v71), 0x1FuLL)));
        v203.val[2] = vqtbl4q_s8(v205, (int8x16_t)xmmword_1004047C0);
        uint64_t result = v68.u8[3];
        v66.i16[0] = v66.u8[3];
        v67.i16[0] = v67.u8[3];
        v66.i16[1] = v66.u8[7];
        v66.i16[2] = v68.u8[3];
        v67.i16[1] = v67.u8[7];
        v66.i16[3] = v68.u8[7];
        v68.i16[0] = v63.u8[3];
        v67.i16[2] = v70.u8[3];
        v67.i16[3] = v70.u8[7];
        v68.i16[1] = v63.u8[7];
        v68.i16[2] = v64.u8[3];
        v205.val[3] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v67), 0x1FuLL)));
        v205.val[2] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v66), 0x1FuLL)));
        v68.i16[3] = v64.u8[7];
        v205.val[1] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v68), 0x1FuLL)));
        v60.i16[0] = v60.u8[3];
        v60.i16[1] = v60.u8[7];
        v60.i16[2] = v61.u8[3];
        v60.i16[3] = v61.u8[7];
        v205.val[0] = veorq_s8(v42, (int8x16_t)vcltzq_s32(vshlq_n_s32((int32x4_t)vmovl_u16((uint16x4_t)v60), 0x1FuLL)));
        v203.val[3] = vqtbl4q_s8(v205, (int8x16_t)xmmword_1004047C0);
        vst4q_s8(v54, v203);
        v54 += 64;
        v52 += 512;
        v53 -= 16;
      }
      while (v53);
      unint64_t v48 = 4 * (v170 & 0x7FFFFFF0);
      uint64_t v41 = v170 & 0x7FFFFFF0;
      uint64_t v40 = 32 * (v25 >> 2) + 32;
      a7 = v186;
      a6 = v188;
      uint64_t v13 = v182;
      a3 = v184;
      uint64_t v35 = (v25 & 0xFFFFFFFC) + 4;
      uint64_t v37 = v178;
      unint64_t v39 = v172;
      uint64_t v38 = v174;
      if (v170 != v41)
      {
LABEL_68:
        uint64_t result = 8 * v48 + 24;
        do
        {
          if (*(double *)(v45 + result - 24) <= *(double *)(v44 + result - 24)) {
            char v72 = 0;
          }
          else {
            char v72 = -1;
          }
          char v73 = v24 ^ v72;
          unint64_t v74 = v45 + 8 * v48;
          unint64_t v75 = v44 + 8 * v48;
          if (*(double *)(v74 + 8) <= *(double *)(v75 + 8)) {
            char v76 = 0;
          }
          else {
            char v76 = -1;
          }
          char v77 = v24 ^ v76;
          __int16 v78 = &a5[v48];
          *__int16 v78 = v73;
          v78[1] = v77;
          if (*(double *)(v74 + 16) <= *(double *)(v75 + 16)) {
            char v79 = 0;
          }
          else {
            char v79 = -1;
          }
          char v80 = v24 ^ v79;
          if (*(double *)(v45 + result) <= *(double *)(v44 + result)) {
            char v81 = 0;
          }
          else {
            char v81 = -1;
          }
          _OWORD v78[2] = v80;
          v78[3] = v24 ^ v81;
          v48 += 4;
          result += 32;
        }
        while (v48 <= v25);
      }
      if ((int)v48 >= a7) {
        goto LABEL_51;
      }
      unint64_t v82 = v35;
      if (v39 < 8
        || ((unint64_t v83 = (unint64_t)&v167[v46], v47 < v13 + v176 + v193) ? (v84 = v13 + v180 + v193 >= v83) : (v84 = 1),
            v84 ? (uint64_t result = 0) : (uint64_t result = 1),
            a3 + v180 + v191 < v83 ? (BOOL v85 = v47 >= a3 + v176 + v191) : (BOOL v85 = 1),
            (unint64_t v82 = v35, !v85) || (unint64_t v82 = v35, (result & 1) != 0)))
      {
        do
        {
LABEL_105:
          if (*(double *)(v45 + 8 * v82) <= *(double *)(v44 + 8 * v82)) {
            char v91 = 0;
          }
          else {
            char v91 = -1;
          }
          a5[v82++] = v24 ^ v91;
        }
        while (v82 < v34);
        goto LABEL_51;
      }
      if (v39 >= 0x10)
      {
        uint64_t v87 = v35;
        uint64_t result = v40;
        unint64_t v88 = v165;
        do
        {
          v201.val[3] = veorq_s8(v42, (int8x16_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result + 96), *(float64x2_t *)(v44 + result + 96)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result + 112), *(float64x2_t *)(v44 + result + 112))));
          v201.val[2] = veorq_s8(v42, (int8x16_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result + 64), *(float64x2_t *)(v44 + result + 64)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result + 80), *(float64x2_t *)(v44 + result + 80))));
          v201.val[1] = veorq_s8(v42, (int8x16_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result + 32), *(float64x2_t *)(v44 + result + 32)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result + 48), *(float64x2_t *)(v44 + result + 48))));
          v201.val[0] = veorq_s8(v42, (int8x16_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result), *(float64x2_t *)(v44 + result)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result + 16), *(float64x2_t *)(v44 + result + 16))));
          *(int8x16_t *)&a5[v87] = vqtbl4q_s8(v201, (int8x16_t)xmmword_1004047C0);
          result += 128;
          v87 += 16;
          v88 -= 16;
        }
        while (v88);
        if (v39 == v165) {
          goto LABEL_51;
        }
        unint64_t v86 = v165;
        unint64_t v82 = v157;
        if ((v39 & 8) == 0) {
          goto LABEL_105;
        }
      }
      else
      {
        unint64_t v86 = 0;
      }
      unint64_t v89 = v159 + v86;
      uint64_t result = v40 + 8 * v86;
      uint64_t v90 = &v43[v86];
      do
      {
        v197.val[0] = veorq_s8(v42, (int8x16_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result), *(float64x2_t *)(v44 + result)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result + 16), *(float64x2_t *)(v44 + result + 16))));
        v197.val[1] = veorq_s8(v42, (int8x16_t)vuzp1q_s32((int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result + 32), *(float64x2_t *)(v44 + result + 32)), (int32x4_t)vcgtq_f64(*(float64x2_t *)(v45 + result + 48), *(float64x2_t *)(v44 + result + 48))));
        *(void *)uint64_t v90 = vqtbl2q_s8(v197, (int8x16_t)xmmword_1004047D0).u64[0];
        v90 += 8;
        result += 64;
        v89 += 8;
      }
      while (v89);
      unint64_t v82 = v161;
      if (v39 != v163) {
        goto LABEL_105;
      }
LABEL_51:
      v45 += v38;
      v44 += v37;
      a5 += a6;
      int v33 = v195 - 1;
      ++v32;
      v43 += a6;
    }
    while (v195);
  }
  return result;
}

uint64_t sub_100225428(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, double a9, double a10, double a11, double a12, __n128 a13, double *a14)
{
  uint64_t v14 = result;
  float v15 = *a14;
  if (v15 == 1.0)
  {
    if (a8)
    {
      uint64_t v16 = 0;
      uint64_t v17 = (int)a7 - 4;
      uint64_t v18 = (int)a7;
      int v19 = a7 - 8;
      v20.i64[0] = 0xFF000000FFLL;
      v20.i64[1] = 0xFF000000FFLL;
      int8x16_t v21 = (int8x16_t)xmmword_1004047D0;
      int8x16_t v22 = (int8x16_t)xmmword_1004047C0;
      uint64_t v23 = result;
      uint64_t v24 = a3;
      uint64_t v25 = a5;
      do
      {
        if ((int)a7 >= 8)
        {
          uint64_t v26 = 0;
          do
          {
            uint8x8_t v29 = *(uint8x8_t *)(v23 + v26);
            uint8x8_t v30 = *(uint8x8_t *)(v24 + v26);
            if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DA0, memory_order_acquire) & 1) == 0)
            {
              int v128 = a8;
              uint64_t v124 = a6;
              uint64_t v126 = a7;
              uint64_t v120 = a4;
              uint64_t v122 = a5;
              uint64_t v118 = a3;
              uint64_t v131 = a2;
              uint64_t v116 = v16;
              int8x16_t v112 = v22;
              int8x16_t v114 = v21;
              int v34 = __cxa_guard_acquire(qword_1004D2DA0);
              *(void *)&long long v35 = 0x3F0000003F000000;
              *((void *)&v35 + 1) = 0x3F0000003F000000;
              int8x16_t v22 = v112;
              int8x16_t v21 = v114;
              v20.i64[0] = 0xFF000000FFLL;
              v20.i64[1] = 0xFF000000FFLL;
              uint64_t v16 = v116;
              a2 = v131;
              a3 = v118;
              a4 = v120;
              a5 = v122;
              a6 = v124;
              a7 = v126;
              a8 = v128;
              if (v34)
              {
                xmmword_1004D2D90 = v35;
                __cxa_guard_release(qword_1004D2DA0);
                int8x16_t v22 = v112;
                int8x16_t v21 = v114;
                v20.i64[0] = 0xFF000000FFLL;
                v20.i64[1] = 0xFF000000FFLL;
                uint64_t v16 = v116;
                a2 = v131;
                a3 = v118;
                a4 = v120;
                a5 = v122;
                a6 = v124;
                a7 = v126;
                a8 = v128;
              }
            }
            float32x4_t v31 = (float32x4_t)xmmword_1004D2D90;
            if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DA0, memory_order_acquire) & 1) == 0)
            {
              int v129 = a8;
              uint64_t v125 = a6;
              uint64_t v127 = a7;
              uint64_t v121 = a4;
              uint64_t v123 = a5;
              uint64_t v119 = a3;
              uint64_t v132 = a2;
              uint64_t v117 = v16;
              int8x16_t v113 = v22;
              int8x16_t v115 = v21;
              float32x4_t v111 = v31;
              int v36 = __cxa_guard_acquire(qword_1004D2DA0);
              float32x4_t v31 = v111;
              int8x16_t v22 = v113;
              *(void *)&long long v37 = 0x3F0000003F000000;
              *((void *)&v37 + 1) = 0x3F0000003F000000;
              int8x16_t v21 = v115;
              v20.i64[0] = 0xFF000000FFLL;
              v20.i64[1] = 0xFF000000FFLL;
              uint64_t v16 = v117;
              a2 = v132;
              a3 = v119;
              a4 = v121;
              a5 = v123;
              a6 = v125;
              a7 = v127;
              a8 = v129;
              if (v36)
              {
                xmmword_1004D2D90 = v37;
                __cxa_guard_release(qword_1004D2DA0);
                float32x4_t v31 = v111;
                int8x16_t v22 = v113;
                int8x16_t v21 = v115;
                v20.i64[0] = 0xFF000000FFLL;
                v20.i64[1] = 0xFF000000FFLL;
                uint64_t v16 = v117;
                a2 = v132;
                a3 = v119;
                a4 = v121;
                a5 = v123;
                a6 = v125;
                a7 = v127;
                a8 = v129;
              }
            }
            uint16x8_t v32 = vmovl_u8(v29);
            uint16x8_t v33 = vmovl_u8(v30);
            *(uint8x8_t *)(v25 + v26) = vqmovn_u16(vqmovn_high_u32(vqmovn_u32(vcvtq_u32_f32(vaddq_f32(vmulq_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v32.i8)), vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v33.i8))), v31))), vcvtq_u32_f32(vaddq_f32(vmulq_f32(vcvtq_f32_u32(vmovl_high_u16(v32)), vcvtq_f32_u32(vmovl_high_u16(v33))), (float32x4_t)xmmword_1004D2D90))));
            v26 += 8;
          }
          while (v19 >= (int)v26);
          uint64_t v27 = a5 + v16 * a6;
          uint64_t v28 = v14 + v16 * a2;
          uint64_t result = a3 + v16 * a4;
          if ((int)v26 <= (int)v17)
          {
LABEL_18:
            uint64_t v38 = (int)v26;
            unint64_t v39 = v17 - (int)v26;
            if (v39 >= 0x3C)
            {
              uint64_t v41 = v16;
              uint64_t v130 = v27;
              uint64_t v42 = v27 + 4;
              uint64_t v43 = result;
              uint64_t v44 = result + 4;
              unint64_t v45 = v25 + (int)v26;
              unint64_t v46 = (v39 & 0xFFFFFFFFFFFFFFFCLL) + (int)v26;
              unint64_t v47 = v42 + v46;
              unint64_t v48 = v23 + (int)v26;
              BOOL v50 = v25 + v38 < v44 + v46 && v24 + v38 < v47;
              BOOL v51 = v48 >= v47 || v45 >= v28 + 4 + v46;
              if (!v51 || v50)
              {
                uint64_t v40 = v38;
                uint64_t v16 = v41;
                uint64_t result = v43;
                uint64_t v27 = v130;
                goto LABEL_37;
              }
              uint64_t v52 = (v39 >> 2) + 1;
              uint64_t v40 = v38 + 4 * (v52 & 0x7FFFFFFFFFFFFFF0);
              uint64_t v53 = v52 & 0x7FFFFFFFFFFFFFF0;
              uint64_t v16 = v41;
              uint64_t result = v43;
              do
              {
                unint64_t v54 = (const char *)(v23 + v38);
                int8x16x4_t v136 = vld4q_s8(v54);
                int16x8_t v55 = (const char *)(v24 + v38);
                int8x16x4_t v137 = vld4q_s8(v55);
                uint16x8_t v56 = vmovl_high_u8((uint8x16_t)v136.val[0]);
                uint16x8_t v57 = vmovl_u8(*(uint8x8_t *)v136.val[0].i8);
                uint16x8_t v58 = vmovl_high_u8((uint8x16_t)v137.val[0]);
                uint16x8_t v59 = vmovl_u8(*(uint8x8_t *)v137.val[0].i8);
                v140.val[3] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16(v58, v56), v20);
                v140.val[2] = (int8x16_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v58.i8, *(uint16x4_t *)v56.i8), v20);
                v140.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16(v59, v57), v20);
                v140.val[0] = (int8x16_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v59.i8, *(uint16x4_t *)v57.i8), v20);
                v138.val[0] = vqtbl4q_s8(v140, v22);
                uint16x8_t v60 = vmovl_high_u8((uint8x16_t)v136.val[1]);
                v140.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v136.val[1].i8);
                v140.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v137.val[1]);
                v140.val[2] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v137.val[1].i8);
                v141.val[3] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v140.val[1], v60), v20);
                v141.val[2] = (int8x16_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v140.val[1].i8, *(uint16x4_t *)v60.i8), v20);
                v141.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v140.val[2], (uint16x8_t)v140.val[0]), v20);
                v141.val[0] = (int8x16_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v140.val[2].i8, *(uint16x4_t *)v140.val[0].i8), v20);
                v138.val[1] = vqtbl4q_s8(v141, v22);
                uint16x8_t v61 = vmovl_high_u8((uint8x16_t)v136.val[2]);
                v140.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v136.val[2].i8);
                v140.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v137.val[2]);
                v140.val[2] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v137.val[2].i8);
                v141.val[3] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v140.val[1], v61), v20);
                v141.val[2] = (int8x16_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v140.val[1].i8, *(uint16x4_t *)v61.i8), v20);
                v141.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v140.val[2], (uint16x8_t)v140.val[0]), v20);
                v141.val[0] = (int8x16_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v140.val[2].i8, *(uint16x4_t *)v140.val[0].i8), v20);
                v138.val[2] = vqtbl4q_s8(v141, v22);
                uint16x8_t v62 = vmovl_high_u8((uint8x16_t)v136.val[3]);
                v136.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v136.val[3].i8);
                v136.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v137.val[3]);
                v136.val[2] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v137.val[3].i8);
                v137.val[3] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v136.val[1], v62), v20);
                v137.val[2] = (int8x16_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v136.val[1].i8, *(uint16x4_t *)v62.i8), v20);
                v137.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v136.val[2], (uint16x8_t)v136.val[0]), v20);
                v137.val[0] = (int8x16_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v136.val[2].i8, *(uint16x4_t *)v136.val[0].i8), v20);
                v138.val[3] = vqtbl4q_s8(v137, v22);
                int8x8_t v63 = (char *)(v25 + v38);
                vst4q_s8(v63, v138);
                v38 += 64;
                v53 -= 16;
              }
              while (v53);
              uint64_t v27 = v130;
              if (v52 != (v52 & 0x7FFFFFFFFFFFFFF0)) {
                goto LABEL_37;
              }
            }
            else
            {
              uint64_t v40 = (int)v26;
              do
              {
LABEL_37:
                int8x8_t v64 = (unsigned __int8 *)(v23 + v40);
                int16x8_t v65 = (unsigned __int8 *)(v24 + v40);
                int v66 = *(unsigned __int8 *)(v24 + v40) * *(unsigned __int8 *)(v23 + v40);
                if (v66 >= 255) {
                  LOBYTE(v66) = -1;
                }
                int v67 = v65[1] * v64[1];
                if (v67 >= 255) {
                  LOBYTE(v67) = -1;
                }
                int8x8_t v68 = (unsigned char *)(v25 + v40);
                *int8x8_t v68 = v66;
                v68[1] = v67;
                int v69 = v65[2] * v64[2];
                if (v69 >= 255) {
                  LOBYTE(v69) = -1;
                }
                int v70 = v65[3] * v64[3];
                if (v70 >= 255) {
                  LOBYTE(v70) = -1;
                }
                _OWORD v68[2] = v69;
                v68[3] = v70;
                v40 += 4;
              }
              while (v40 <= v17);
            }
            LODWORD(v26) = v40;
          }
        }
        else
        {
          LODWORD(v26) = 0;
          uint64_t v27 = a5 + v16 * a6;
          uint64_t v28 = v14 + v16 * a2;
          uint64_t result = a3 + v16 * a4;
          if ((int)v17 >= 0) {
            goto LABEL_18;
          }
        }
        if ((int)v26 < (int)a7)
        {
          unint64_t v71 = v18 - (int)v26;
          if (v71 < 8)
          {
            unint64_t v72 = (int)v26;
            goto LABEL_65;
          }
          uint64_t v73 = v27 + (int)v26;
          if ((unint64_t)(v73 - (v28 + (int)v26)) < 0x10 || (unint64_t)(v73 - (result + (int)v26)) < 0x10)
          {
            unint64_t v72 = (int)v26;
            goto LABEL_65;
          }
          if (v71 >= 0x10)
          {
            unint64_t v75 = v71 & 0xFFFFFFFFFFFFFFF0;
            uint64_t v76 = (int)v26;
            unint64_t v77 = v71 & 0xFFFFFFFFFFFFFFF0;
            do
            {
              uint8x16_t v78 = *(uint8x16_t *)(v23 + v76);
              uint16x8_t v79 = vmovl_high_u8(v78);
              uint16x8_t v80 = vmovl_u8(*(uint8x8_t *)v78.i8);
              uint8x16_t v81 = *(uint8x16_t *)(v24 + v76);
              uint16x8_t v82 = vmovl_high_u8(v81);
              uint16x8_t v83 = vmovl_u8(*(uint8x8_t *)v81.i8);
              v139.val[3] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16(v82, v79), v20);
              v139.val[2] = (int8x16_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v82.i8, *(uint16x4_t *)v79.i8), v20);
              v139.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16(v83, v80), v20);
              v139.val[0] = (int8x16_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v83.i8, *(uint16x4_t *)v80.i8), v20);
              *(int8x16_t *)(v25 + v76) = vqtbl4q_s8(v139, v22);
              v76 += 16;
              v77 -= 16;
            }
            while (v77);
            if (v71 == v75) {
              goto LABEL_4;
            }
            if ((v71 & 8) == 0)
            {
              unint64_t v72 = v75 + (int)v26;
              do
              {
LABEL_65:
                int v89 = *(unsigned __int8 *)(v24 + v72) * *(unsigned __int8 *)(v23 + v72);
                if (v89 >= 255) {
                  LOBYTE(v89) = -1;
                }
                *(unsigned char *)(v25 + v72++) = v89;
              }
              while (v18 != v72);
              goto LABEL_4;
            }
          }
          else
          {
            unint64_t v75 = 0;
          }
          unint64_t v72 = (v71 & 0xFFFFFFFFFFFFFFF8) + (int)v26;
          unint64_t v84 = v75 - (v71 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v85 = v75 + (int)v26;
          do
          {
            uint16x8_t v86 = vmovl_u8(*(uint8x8_t *)(v23 + v85));
            uint16x8_t v87 = vmovl_u8(*(uint8x8_t *)(v24 + v85));
            int32x4_t v88 = (int32x4_t)vmull_u16(*(uint16x4_t *)v87.i8, *(uint16x4_t *)v86.i8);
            v135.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmull_high_u16(v87, v86), v20);
            v135.val[0] = (int8x16_t)vminq_s32(v88, v20);
            *(void *)(v25 + v85) = vqtbl2q_s8(v135, v21).u64[0];
            v85 += 8;
            v84 += 8;
          }
          while (v84);
          if (v71 != (v71 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_65;
          }
        }
LABEL_4:
        v23 += a2;
        v24 += a4;
        v25 += a6;
        ++v16;
        --a8;
      }
      while (a8);
    }
  }
  else if (a8)
  {
    uint64_t v90 = (int)a7 - 4;
    uint64_t v91 = (int)a7;
    uint64_t v133 = a2;
    do
    {
      uint64_t v92 = a4;
      uint64_t v93 = a6;
      int v94 = a8;
      uint64_t v95 = a3;
      uint64_t v96 = a7;
      uint64_t v97 = a5;
      uint64_t result = sub_10022B4A8(v15, a10, a11, a12, a13, (uint64_t)&v134, v14, a3, a5, a7);
      a12 = 0.0;
      if ((int)result <= (int)v90)
      {
        uint64_t v99 = 0;
        uint64_t v100 = v14 + (int)result;
        uint64_t v101 = v95 + (int)result;
        do
        {
          v98.i8[0] = *(unsigned char *)(v100 + v99);
          LOBYTE(a10) = *(unsigned char *)(v101 + v99);
          *(float *)&unsigned int v102 = (float)LODWORD(a10);
          *(float *)&unsigned int v103 = rintf((float)(v15 * (float)v98.u32[0]) * *(float *)&v102);
          LOBYTE(v102) = *(unsigned char *)(v100 + v99 + 1);
          *(float *)&unsigned int v104 = v15 * (float)v102;
          uint64_t v105 = (uint64_t)*(float *)&v103;
          LOBYTE(v103) = *(unsigned char *)(v101 + v99 + 1);
          int32x2_t v106 = vmin_s32(vmax_s32((int32x2_t)__PAIR64__((uint64_t)rintf(*(float *)&v104 * (float)v103), v105), 0), (int32x2_t)0xFF000000FFLL);
          unint64_t v107 = (unsigned char *)(v97 + (int)result + v99);
          v107[1] = v106.i8[4];
          *unint64_t v107 = v106.i8[0];
          v106.i8[0] = *(unsigned char *)(v100 + v99 + 2);
          LOBYTE(v104) = *(unsigned char *)(v101 + v99 + 2);
          *(float *)&unsigned int v108 = (float)v104;
          *(float *)v106.i32 = rintf((float)(v15 * (float)v106.u32[0]) * *(float *)&v108);
          LOBYTE(v108) = *(unsigned char *)(v100 + v99 + 3);
          *(float *)&a10 = v15 * (float)v108;
          LOBYTE(a11) = *(unsigned char *)(v101 + v99 + 3);
          int32x2_t v98 = vmin_s32(vmax_s32((int32x2_t)__PAIR64__((uint64_t)rintf(*(float *)&a10 * (float)LODWORD(a11)), (uint64_t)*(float *)v106.i32), 0), (int32x2_t)0xFF000000FFLL);
          v107[3] = v98.i8[4];
          _OWORD v107[2] = v98.i8[0];
          v99 += 4;
        }
        while ((int)result + v99 <= v90);
        uint64_t result = (result + v99);
      }
      a7 = v96;
      a6 = v93;
      a4 = v92;
      if ((int)result < (int)v96)
      {
        uint64_t v109 = (int)result;
        do
        {
          v98.i8[0] = *(unsigned char *)(v14 + v109);
          LOBYTE(a10) = *(unsigned char *)(v95 + v109);
          *(float *)&a10 = (float)LODWORD(a10);
          *(float *)v98.i32 = rintf((float)(v15 * (float)v98.u32[0]) * *(float *)&a10);
          int v110 = (uint64_t)*(float *)v98.i32 & ~((int)(uint64_t)*(float *)v98.i32 >> 31);
          if (v110 >= 255) {
            LOBYTE(v110) = -1;
          }
          *(unsigned char *)(v97 + v109++) = v110;
        }
        while (v91 != v109);
      }
      v14 += v133;
      a3 = v95 + v92;
      a5 = v97 + v93;
      a8 = v94 - 1;
    }
    while (v94 != 1);
  }
  return result;
}

uint64_t sub_100225BDC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, double a9, int32x4_t a10, int32x4_t a11, int32x4_t a12, __n128 a13, double *a14)
{
  int v14 = a8;
  uint64_t v15 = a5;
  uint64_t v16 = a3;
  uint64_t v17 = result;
  float v18 = *a14;
  uint64_t v92 = a7;
  uint64_t v97 = a4;
  uint64_t v98 = a6;
  uint64_t v96 = a2;
  if (v18 == 1.0)
  {
    if (a8)
    {
      uint64_t v19 = 0;
      uint64_t v20 = (int)a7 - 4;
      uint64_t v21 = (int)a7;
      uint64_t v22 = result;
      uint64_t v23 = a3;
      uint64_t v24 = a5;
      while (1)
      {
        uint64_t v93 = v17 + v19 * a2;
        uint64_t v94 = v15 + v19 * a6;
        uint64_t v95 = v16 + v19 * a4;
        uint64_t result = sub_10022B84C(1.0, *(double *)a10.i64, *(double *)a11.i64, *(double *)a12.i64, a13, (uint64_t)&v99, v22, v23, v24, a7);
        v25.i64[0] = 0x7F0000007FLL;
        v25.i64[1] = 0x7F0000007FLL;
        v26.i64[0] = 0x7F0000007FLL;
        v26.i64[1] = 0x7F0000007FLL;
        if ((int)result > (int)v20) {
          goto LABEL_27;
        }
        uint64_t v27 = (int)result;
        unint64_t v28 = v20 - (int)result;
        if (v28 < 0x3C) {
          break;
        }
        unint64_t v29 = (v28 & 0xFFFFFFFFFFFFFFFCLL) + (int)result;
        unint64_t v30 = v94 + 4 + v29;
        BOOL v31 = v24 + (int)result >= v95 + 4 + v29 || v23 + (int)result >= v30;
        BOOL v32 = !v31;
        BOOL v33 = v22 + (int)result >= v30 || v24 + (int)result >= v93 + 4 + v29;
        if (!v33 || v32) {
          break;
        }
        uint64_t v34 = (v28 >> 2) + 1;
        uint64_t result = (int)result + 4 * (v34 & 0x7FFFFFFFFFFFFFF0);
        uint64_t v35 = v34 & 0x7FFFFFFFFFFFFFF0;
        do
        {
          int v36 = (const char *)(v22 + v27);
          int8x16x4_t v100 = vld4q_s8(v36);
          long long v37 = (const char *)(v23 + v27);
          int8x16x4_t v101 = vld4q_s8(v37);
          int16x8_t v38 = vmovl_s8(*(int8x8_t *)v100.val[0].i8);
          int16x8_t v39 = vmovl_high_s8(v100.val[0]);
          int16x8_t v40 = vmovl_s8(*(int8x8_t *)v101.val[0].i8);
          int16x8_t v41 = vmovl_high_s8(v101.val[0]);
          v102.val[3] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_high_s16(v41, v39), v26), v25);
          v102.val[2] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_s16(*(int16x4_t *)v41.i8, *(int16x4_t *)v39.i8), v26), v25);
          v102.val[1] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_high_s16(v40, v38), v26), v25);
          v102.val[0] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_s16(*(int16x4_t *)v40.i8, *(int16x4_t *)v38.i8), v26), v25);
          int8x16_t v42 = vqtbl4q_s8(v102, (int8x16_t)xmmword_1004047C0);
          v102.val[1] = (int8x16_t)vmovl_s8(*(int8x8_t *)v100.val[1].i8);
          v102.val[2] = (int8x16_t)vmovl_high_s8(v100.val[1]);
          v102.val[3] = (int8x16_t)vmovl_s8(*(int8x8_t *)v101.val[1].i8);
          int16x8_t v43 = vmovl_high_s8(v101.val[1]);
          v103.val[3] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_high_s16(v43, (int16x8_t)v102.val[2]), v26), v25);
          v103.val[2] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_s16(*(int16x4_t *)v43.i8, *(int16x4_t *)v102.val[2].i8), v26), v25);
          v103.val[1] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_high_s16((int16x8_t)v102.val[3], (int16x8_t)v102.val[1]), v26), v25);
          v103.val[0] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_s16(*(int16x4_t *)v102.val[3].i8, *(int16x4_t *)v102.val[1].i8), v26), v25);
          int8x16_t v44 = vqtbl4q_s8(v103, (int8x16_t)xmmword_1004047C0);
          v102.val[1] = (int8x16_t)vmovl_s8(*(int8x8_t *)v100.val[2].i8);
          v102.val[2] = (int8x16_t)vmovl_high_s8(v100.val[2]);
          v102.val[3] = (int8x16_t)vmovl_s8(*(int8x8_t *)v101.val[2].i8);
          v103.val[0] = (int8x16_t)vmovl_high_s8(v101.val[2]);
          v103.val[3] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_high_s16((int16x8_t)v103.val[0], (int16x8_t)v102.val[2]), v26), v25);
          v103.val[2] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_s16(*(int16x4_t *)v103.val[0].i8, *(int16x4_t *)v102.val[2].i8), v26), v25);
          v103.val[1] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_high_s16((int16x8_t)v102.val[3], (int16x8_t)v102.val[1]), v26), v25);
          v103.val[0] = (int8x16_t)vminq_s32(vmaxq_s32(vmull_s16(*(int16x4_t *)v102.val[3].i8, *(int16x4_t *)v102.val[1].i8), v26), v25);
          int8x16_t v45 = vqtbl4q_s8(v103, (int8x16_t)xmmword_1004047C0);
          v102.val[1] = (int8x16_t)vmovl_s8(*(int8x8_t *)v100.val[3].i8);
          v100.val[0] = (int8x16_t)vmovl_high_s8(v100.val[3]);
          v100.val[1] = (int8x16_t)vmovl_s8(*(int8x8_t *)v101.val[3].i8);
          v100.val[2] = (int8x16_t)vmovl_high_s8(v101.val[3]);
          v100.val[3] = (int8x16_t)vmull_high_s16((int16x8_t)v100.val[2], (int16x8_t)v100.val[0]);
          v100.val[0] = (int8x16_t)vmull_s16(*(int16x4_t *)v100.val[2].i8, *(int16x4_t *)v100.val[0].i8);
          v100.val[2] = (int8x16_t)vmull_high_s16((int16x8_t)v100.val[1], (int16x8_t)v102.val[1]);
          a10 = vmaxq_s32(vmull_s16(*(int16x4_t *)v100.val[1].i8, *(int16x4_t *)v102.val[1].i8), v26);
          a11 = vmaxq_s32((int32x4_t)v100.val[2], v26);
          v101.val[2] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v100.val[3], v26), v25);
          v101.val[1] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v100.val[0], v26), v25);
          a13 = (__n128)vminq_s32(a11, v25);
          a12 = vminq_s32(a10, v25);
          v102.val[0] = vqtbl4q_s8(*(int8x16x4_t *)a12.i8, (int8x16_t)xmmword_1004047C0);
          unint64_t v46 = (char *)(v24 + v27);
          vst4q_s8(v46, v102);
          v27 += 64;
          v35 -= 16;
        }
        while (v35);
        if (v34 != (v34 & 0x7FFFFFFFFFFFFFF0)) {
          goto LABEL_24;
        }
LABEL_27:
        LODWORD(a7) = v92;
        a4 = v97;
        a6 = v98;
        a2 = v96;
        if ((int)result < (int)v92)
        {
          unint64_t v55 = v21 - (int)result;
          if (v55 < 8)
          {
            unint64_t v56 = (int)result;
            goto LABEL_45;
          }
          if ((unint64_t)(v94 - v93) < 0x10 || (unint64_t)(v94 - v95) < 0x10)
          {
            unint64_t v56 = (int)result;
            goto LABEL_45;
          }
          if (v55 >= 0x10)
          {
            unint64_t v58 = v55 & 0xFFFFFFFFFFFFFFF0;
            uint64_t v59 = (int)result;
            unint64_t v60 = v55 & 0xFFFFFFFFFFFFFFF0;
            do
            {
              int8x16_t v61 = *(int8x16_t *)(v22 + v59);
              int16x8_t v62 = vmovl_s8(*(int8x8_t *)v61.i8);
              int16x8_t v63 = vmovl_high_s8(v61);
              int8x16_t v64 = *(int8x16_t *)(v23 + v59);
              int16x8_t v65 = vmovl_s8(*(int8x8_t *)v64.i8);
              int16x8_t v66 = vmovl_high_s8(v64);
              int32x4_t v67 = vmull_high_s16(v66, v63);
              int32x4_t v68 = vmull_s16(*(int16x4_t *)v66.i8, *(int16x4_t *)v63.i8);
              int32x4_t v69 = vmull_high_s16(v65, v62);
              a10 = vmaxq_s32(vmull_s16(*(int16x4_t *)v65.i8, *(int16x4_t *)v62.i8), v26);
              a11 = vmaxq_s32(v69, v26);
              int32x4_t v70 = vminq_s32(vmaxq_s32(v67, v26), v25);
              int32x4_t v71 = vminq_s32(vmaxq_s32(v68, v26), v25);
              a13 = (__n128)vminq_s32(a11, v25);
              a12 = vminq_s32(a10, v25);
              *(int8x16_t *)(v24 + v59) = vqtbl4q_s8(*(int8x16x4_t *)a12.i8, (int8x16_t)xmmword_1004047C0);
              v59 += 16;
              v60 -= 16;
            }
            while (v60);
            if (v55 == v58) {
              goto LABEL_4;
            }
            if ((v55 & 8) == 0)
            {
              unint64_t v56 = v58 + (int)result;
              do
              {
LABEL_45:
                int v76 = *(char *)(v23 + v56) * *(char *)(v22 + v56);
                if (v76 <= -128) {
                  int v76 = -128;
                }
                if (v76 >= 127) {
                  LOBYTE(v76) = 127;
                }
                *(unsigned char *)(v24 + v56++) = v76;
              }
              while (v21 != v56);
              goto LABEL_4;
            }
          }
          else
          {
            unint64_t v58 = 0;
          }
          unint64_t v56 = (v55 & 0xFFFFFFFFFFFFFFF8) + (int)result;
          unint64_t v72 = v58 - (v55 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v73 = v58 + (int)result;
          do
          {
            int16x8_t v74 = vmovl_s8(*(int8x8_t *)(v22 + v73));
            int16x8_t v75 = vmovl_s8(*(int8x8_t *)(v23 + v73));
            a11 = vminq_s32(vmaxq_s32(vmull_high_s16(v75, v74), v26), v25);
            a10 = vminq_s32(vmaxq_s32(vmull_s16(*(int16x4_t *)v75.i8, *(int16x4_t *)v74.i8), v26), v25);
            *(void *)(v24 + v73) = vqtbl2q_s8(*(int8x16x2_t *)a10.i8, (int8x16_t)xmmword_1004047D0).u64[0];
            v73 += 8;
            v72 += 8;
          }
          while (v72);
          if (v55 != (v55 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_45;
          }
        }
LABEL_4:
        v22 += v96;
        v23 += v97;
        v24 += v98;
        ++v19;
        if (!--v14) {
          return result;
        }
      }
      uint64_t result = (int)result;
LABEL_24:
      uint64_t v47 = result + 2;
      do
      {
        v48.i32[0] = *(char *)(v22 + v47 - 2);
        v48.i32[1] = *(char *)(v22 + v47 - 1);
        v49.i32[0] = *(char *)(v23 + v47 - 2);
        v49.i32[1] = *(char *)(v23 + v47 - 1);
        BOOL v50 = (unsigned char *)(v24 + v47);
        int32x2_t v51 = vmin_s32(vmax_s32(vmul_s32(v49, v48), (int32x2_t)0x7F0000007FLL), (int32x2_t)0x7F0000007FLL);
        *(v50 - 1) = v51.i8[4];
        *(v50 - 2) = v51.i8[0];
        v51.i32[0] = *(char *)(v22 + v47);
        v51.i32[1] = *(char *)(v22 + v47 + 1);
        a10.i32[0] = *(char *)(v23 + v47);
        a10.i32[1] = *(char *)(v23 + v47 + 1);
        int32x2_t v52 = vmin_s32(vmax_s32(vmul_s32(*(int32x2_t *)a10.i8, v51), (int32x2_t)0x7F0000007FLL), (int32x2_t)0x7F0000007FLL);
        v50[1] = v52.i8[4];
        *BOOL v50 = v52.i8[0];
        uint64_t v53 = v47 + 4;
        uint64_t v54 = v47 + 2;
        v47 += 4;
      }
      while (v54 <= v20);
      uint64_t result = v53 - 2;
      goto LABEL_27;
    }
  }
  else if (a8)
  {
    uint64_t v77 = (int)a7 - 4;
    uint64_t v78 = (int)a7;
    do
    {
      uint64_t v79 = a7;
      uint64_t result = sub_10022B84C(v18, *(double *)a10.i64, *(double *)a11.i64, *(double *)a12.i64, a13, (uint64_t)&v99, v17, v16, v15, a7);
      if ((int)result <= (int)v77)
      {
        uint64_t v81 = 0;
        uint64_t v82 = v17 + (int)result;
        uint64_t v83 = v16 + (int)result;
        do
        {
          v80.i8[0] = *(unsigned char *)(v82 + v81);
          a10.i8[0] = *(unsigned char *)(v83 + v81);
          a11.i8[0] = *(unsigned char *)(v82 + v81 + 1);
          float v84 = (float)(v18 * (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v80)).i32[0])
              * (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).i32[0];
          int8x8_t v85 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a11.i8)).u64[0];
          a11.i8[0] = *(unsigned char *)(v83 + v81 + 1);
          int8x8_t v86 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a11.i8)).u64[0];
          *(float *)v86.i32 = (float)v86.i32[0];
          *(float *)v85.i32 = (float)(v18 * (float)v85.i32[0]) * *(float *)v86.i32;
          int8x8_t v87 = (int8x8_t)vmin_s32(vmax_s32((int32x2_t)__PAIR64__((uint64_t)rintf(*(float *)v85.i32), (uint64_t)rintf(v84)), (int32x2_t)0x7F0000007FLL), (int32x2_t)0x7F0000007FLL);
          int32x4_t v88 = (unsigned char *)(v15 + (int)result + v81);
          v88[1] = v87.i8[4];
          *int32x4_t v88 = v87.i8[0];
          v87.i8[0] = *(unsigned char *)(v82 + v81 + 2);
          v85.i8[0] = *(unsigned char *)(v83 + v81 + 2);
          int8x8_t v89 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v85)).u64[0];
          *(float *)v89.i32 = (float)v89.i32[0];
          *(float *)v87.i32 = (float)(v18 * (float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v87)).i32[0])
                            * *(float *)v89.i32;
          v89.i8[0] = *(unsigned char *)(v82 + v81 + 3);
          a10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v89)).u64[0];
          *(float *)a10.i32 = v18 * (float)a10.i32[0];
          v86.i8[0] = *(unsigned char *)(v83 + v81 + 3);
          a11.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v86)).u64[0];
          int8x8_t v80 = (int8x8_t)vmin_s32(vmax_s32((int32x2_t)__PAIR64__((uint64_t)rintf(*(float *)a10.i32 * (float)a11.i32[0]), (uint64_t)rintf(*(float *)v87.i32)), (int32x2_t)0x7F0000007FLL), (int32x2_t)0x7F0000007FLL);
          v88[3] = v80.i8[4];
          v88[2] = v80.i8[0];
          v81 += 4;
        }
        while ((int)result + v81 <= v77);
        uint64_t result = (result + v81);
        uint64_t v79 = v92;
      }
      a7 = v79;
      if ((int)result < (int)v79)
      {
        uint64_t v90 = (int)result;
        do
        {
          v80.i8[0] = *(unsigned char *)(v17 + v90);
          int8x8_t v80 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v80)).u64[0];
          a10.i8[0] = *(unsigned char *)(v16 + v90);
          a10.i64[0] = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)a10.i8)).u64[0];
          *(float *)a10.i32 = (float)a10.i32[0];
          *(float *)v80.i32 = rintf((float)(v18 * (float)v80.i32[0]) * *(float *)a10.i32);
          uint64_t v91 = (uint64_t)*(float *)v80.i32;
          if ((int)(uint64_t)*(float *)v80.i32 <= -128) {
            LODWORD(v91) = -128;
          }
          if ((int)v91 >= 127) {
            LOBYTE(v91) = 127;
          }
          *(unsigned char *)(v15 + v90++) = v91;
        }
        while (v78 != v90);
      }
      v17 += v96;
      v16 += v97;
      v15 += v98;
      --v14;
    }
    while (v14);
  }
  return result;
}

void sub_1002262D8(uint16x8_t *a1, unint64_t a2, uint16x8_t *a3, unint64_t a4, uint16x8_t *a5, unint64_t a6, uint64_t a7, int a8, __n128 a9, unint64_t *a10)
{
  int v10 = a1;
  a9.n128_u64[0] = *a10;
  float v11 = *(double *)a10;
  unint64_t v12 = a2 >> 1;
  unint64_t v13 = a4 >> 1;
  unint64_t v14 = a6 >> 1;
  if (v11 == 1.0)
  {
    if (a8)
    {
      uint64_t v15 = (int)a7 - 4;
      uint64_t v16 = (int)a7;
      int v17 = a7 - 8;
      unint64_t v18 = a6 & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v19 = 0;
      unint64_t v20 = a2 & 0xFFFFFFFFFFFFFFFELL;
      unint64_t v21 = a4 & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v22 = 2 * v14;
      uint64_t v23 = 2 * v13;
      uint64_t v124 = 2 * v12;
      uint64_t v126 = &a5->i8[4];
      v24.i64[0] = 0xFFFF0000FFFFLL;
      v24.i64[1] = 0xFFFF0000FFFFLL;
      int32x4_t v25 = a1;
      int32x4_t v26 = a3;
      uint64_t v27 = a5;
      unint64_t v122 = v18;
      uint64_t v123 = (int)a7;
      unint64_t v120 = v21;
      unint64_t v121 = v20;
      uint64_t v119 = 2 * v14;
      do
      {
        if ((int)a7 >= 8)
        {
          uint64_t v49 = 0;
          int v28 = 0;
          do
          {
            uint16x8_t v50 = v25[v49];
            uint16x8_t v51 = v26[v49];
            if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DA0, memory_order_acquire) & 1) == 0)
            {
              int v117 = a8;
              int8x16_t v113 = a5;
              uint64_t v115 = a7;
              float32x4_t v111 = a3;
              uint64_t v107 = v23;
              uint64_t v109 = v19;
              uint16x8_t v103 = v50;
              uint16x8_t v105 = v51;
              int v53 = __cxa_guard_acquire(qword_1004D2DA0);
              uint16x8_t v50 = v103;
              uint16x8_t v51 = v105;
              *(void *)&long long v54 = 0x3F0000003F000000;
              *((void *)&v54 + 1) = 0x3F0000003F000000;
              v24.i64[0] = 0xFFFF0000FFFFLL;
              v24.i64[1] = 0xFFFF0000FFFFLL;
              uint64_t v23 = v107;
              uint64_t v19 = v109;
              uint64_t v22 = v119;
              unint64_t v21 = v120;
              unint64_t v20 = v121;
              unint64_t v18 = v122;
              uint64_t v16 = v123;
              a3 = v111;
              a5 = v113;
              a7 = v115;
              a8 = v117;
              if (v53)
              {
                xmmword_1004D2D90 = v54;
                __cxa_guard_release(qword_1004D2DA0);
                uint16x8_t v50 = v103;
                uint16x8_t v51 = v105;
                v24.i64[0] = 0xFFFF0000FFFFLL;
                v24.i64[1] = 0xFFFF0000FFFFLL;
                uint64_t v23 = v107;
                uint64_t v19 = v109;
                uint64_t v22 = v119;
                unint64_t v21 = v120;
                unint64_t v20 = v121;
                unint64_t v18 = v122;
                uint64_t v16 = v123;
                a3 = v111;
                a5 = v113;
                a7 = v115;
                a8 = v117;
              }
            }
            float32x4_t v52 = (float32x4_t)xmmword_1004D2D90;
            if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DA0, memory_order_acquire) & 1) == 0)
            {
              int v118 = a8;
              int8x16_t v114 = a5;
              uint64_t v116 = a7;
              int8x16_t v112 = a3;
              uint64_t v108 = v23;
              uint64_t v110 = v19;
              uint16x8_t v104 = v50;
              uint16x8_t v106 = v51;
              float32x4_t v102 = v52;
              int v55 = __cxa_guard_acquire(qword_1004D2DA0);
              float32x4_t v52 = v102;
              uint16x8_t v50 = v104;
              uint16x8_t v51 = v106;
              *(void *)&long long v56 = 0x3F0000003F000000;
              *((void *)&v56 + 1) = 0x3F0000003F000000;
              v24.i64[0] = 0xFFFF0000FFFFLL;
              v24.i64[1] = 0xFFFF0000FFFFLL;
              uint64_t v23 = v108;
              uint64_t v19 = v110;
              uint64_t v22 = v119;
              unint64_t v21 = v120;
              unint64_t v20 = v121;
              unint64_t v18 = v122;
              uint64_t v16 = v123;
              a3 = v112;
              a5 = v114;
              a7 = v116;
              a8 = v118;
              if (v55)
              {
                xmmword_1004D2D90 = v56;
                __cxa_guard_release(qword_1004D2DA0);
                float32x4_t v52 = v102;
                uint16x8_t v50 = v104;
                uint16x8_t v51 = v106;
                v24.i64[0] = 0xFFFF0000FFFFLL;
                v24.i64[1] = 0xFFFF0000FFFFLL;
                uint64_t v23 = v108;
                uint64_t v19 = v110;
                uint64_t v22 = v119;
                unint64_t v21 = v120;
                unint64_t v20 = v121;
                unint64_t v18 = v122;
                uint64_t v16 = v123;
                a3 = v112;
                a5 = v114;
                a7 = v116;
                a8 = v118;
              }
            }
            v27[v49] = vqmovn_high_u32(vqmovn_u32(vcvtq_u32_f32(vaddq_f32(vmulq_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v50.i8)), vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v51.i8))), v52))), vcvtq_u32_f32(vaddq_f32(vmulq_f32(vcvtq_f32_u32(vmovl_high_u16(v50)), vcvtq_f32_u32(vmovl_high_u16(v51))), (float32x4_t)xmmword_1004D2D90)));
            v28 += 8;
            ++v49;
          }
          while (v17 >= v28);
        }
        else
        {
          int v28 = 0;
        }
        unint64_t v29 = &a5->i8[v18 * v19];
        unint64_t v30 = &v10->i8[v20 * v19];
        BOOL v31 = &a3->i8[v21 * v19];
        if (v28 <= (int)v15)
        {
          uint64_t v32 = v23;
          uint64_t v33 = v28;
          unint64_t v34 = v15 - v28;
          if (v34 < 0x1C) {
            goto LABEL_9;
          }
          unint64_t v57 = v34 >> 2;
          uint64_t v58 = v28;
          uint64_t v59 = v58 * 2 + 8 * v57;
          unint64_t v60 = (unint64_t)&v29[v59 + 8];
          BOOL v61 = &v27->i8[v58 * 2] >= &v31[v59 + 8] || (unint64_t)v26 + 2 * v28 >= v60;
          BOOL v62 = !v61;
          if ((unint64_t)v25 + 2 * v28 < v60 && &v27->i8[v58 * 2] < &v30[v59 + 8]) {
            goto LABEL_9;
          }
          if (v62) {
            goto LABEL_9;
          }
          unint64_t v64 = v57 + 1;
          uint64_t v33 = v28 + 4 * (v64 & 0x7FFFFFFFFFFFFFF8);
          uint64_t v65 = v64 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            int16x8_t v66 = &v25->i16[v58];
            int16x8x4_t v129 = vld4q_s16(v66);
            int32x4_t v67 = &v26->i16[v58];
            int16x8x4_t v130 = vld4q_s16(v67);
            v131.val[0] = vuzp1q_s16((int16x8_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v130.val[0].i8, *(uint16x4_t *)v129.val[0].i8), v24), (int16x8_t)vminq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v130.val[0], (uint16x8_t)v129.val[0]), v24));
            v131.val[1] = vuzp1q_s16((int16x8_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v130.val[1].i8, *(uint16x4_t *)v129.val[1].i8), v24), (int16x8_t)vminq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v130.val[1], (uint16x8_t)v129.val[1]), v24));
            v131.val[2] = vuzp1q_s16((int16x8_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v130.val[2].i8, *(uint16x4_t *)v129.val[2].i8), v24), (int16x8_t)vminq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v130.val[2], (uint16x8_t)v129.val[2]), v24));
            v131.val[3] = vuzp1q_s16((int16x8_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v130.val[3].i8, *(uint16x4_t *)v129.val[3].i8), v24), (int16x8_t)vminq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v130.val[3], (uint16x8_t)v129.val[3]), v24));
            int32x4_t v68 = &v27->i16[v58];
            vst4q_s16(v68, v131);
            v58 += 32;
            v65 -= 8;
          }
          while (v65);
          if (v64 != (v64 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_9:
            uint64_t v35 = v33;
            int v36 = v126;
            long long v37 = v26;
            int16x8_t v38 = v25;
            do
            {
              int v39 = v37->u16[v35] * v38->u16[v35];
              if (v39 >= 0xFFFF) {
                LOWORD(v39) = -1;
              }
              uint64_t v40 = (uint64_t)v38->i64 + v35 * 2;
              uint64_t v41 = (uint64_t)v37->i64 + v35 * 2;
              int v42 = v37->u16[v35 + 1] * v38->u16[v35 + 1];
              if (v42 >= 0xFFFF) {
                LOWORD(v42) = -1;
              }
              int16x8_t v43 = &v36[v35 * 2];
              *((_WORD *)v43 - 2) = v39;
              *((_WORD *)v43 - 1) = v42;
              int v44 = *(unsigned __int16 *)(v41 + 4) * *(unsigned __int16 *)(v40 + 4);
              if (v44 >= 0xFFFF) {
                LOWORD(v44) = -1;
              }
              int v45 = *(unsigned __int16 *)(v41 + 6) * *(unsigned __int16 *)(v40 + 6);
              if (v45 >= 0xFFFF) {
                LOWORD(v45) = -1;
              }
              *(_WORD *)&v36[v35 * 2] = v44;
              v33 += 4;
              *((_WORD *)v43 + 1) = v45;
              int16x8_t v38 = (uint16x8_t *)((char *)v38 + 8);
              long long v37 = (uint16x8_t *)((char *)v37 + 8);
              v36 += 8;
            }
            while (v33 <= v15);
          }
          int v28 = v33;
          unint64_t v18 = v122;
          uint64_t v16 = v123;
          unint64_t v21 = v120;
          unint64_t v20 = v121;
          uint64_t v22 = v119;
          uint64_t v23 = v32;
        }
        if (v28 < (int)a7)
        {
          unint64_t v46 = v28;
          unint64_t v47 = v16 - v28;
          if (v47 < 0x10) {
            goto LABEL_79;
          }
          uint64_t v69 = 2 * v28;
          int32x4_t v70 = &v29[v69];
          if ((unint64_t)(v70 - &v30[v69]) < 0x20) {
            goto LABEL_79;
          }
          if ((unint64_t)(v70 - &v31[v69]) < 0x20) {
            goto LABEL_79;
          }
          unint64_t v46 = (v47 & 0xFFFFFFFFFFFFFFF0) + v28;
          unint64_t v71 = v47 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            int16x8_t v72 = vuzp1q_s16((int16x8_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)&v26[1].i8[v69], *(uint16x4_t *)&v25[1].i8[v69]), v24), (int16x8_t)vminq_s32((int32x4_t)vmull_high_u16(*(uint16x8_t *)((char *)&v26[1] + v69), *(uint16x8_t *)((char *)&v25[1] + v69)), v24));
            unint64_t v73 = (int16x8_t *)&v27->i8[v69];
            *unint64_t v73 = vuzp1q_s16((int16x8_t)vminq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)&v26->i8[v69], *(uint16x4_t *)&v25->i8[v69]), v24), (int16x8_t)vminq_s32((int32x4_t)vmull_high_u16(*(uint16x8_t *)((char *)v26 + v69), *(uint16x8_t *)((char *)v25 + v69)), v24));
            v73[1] = v72;
            v69 += 32;
            v71 -= 16;
          }
          while (v71);
          if (v47 != (v47 & 0xFFFFFFFFFFFFFFF0))
          {
LABEL_79:
            do
            {
              int v48 = v26->u16[v46] * v25->u16[v46];
              if (v48 >= 0xFFFF) {
                LOWORD(v48) = -1;
              }
              v27->i16[v46++] = v48;
            }
            while (v16 != v46);
          }
        }
        int32x4_t v25 = (uint16x8_t *)((char *)v25 + v124);
        int32x4_t v26 = (uint16x8_t *)((char *)v26 + v23);
        uint64_t v27 = (uint16x8_t *)((char *)v27 + v22);
        ++v19;
        v126 += v22;
        --a8;
      }
      while (a8);
    }
  }
  else if (a8)
  {
    uint64_t v74 = (int)a7 - 4;
    uint64_t v75 = (int)a7;
    uint64_t v125 = 2 * v13;
    uint64_t v127 = 2 * v12;
    int v76 = &a5->i8[4];
    uint64_t v77 = 2 * v14;
    do
    {
      int v78 = a8;
      uint64_t v79 = a5;
      uint64_t v80 = a7;
      a9.n128_f32[0] = v11;
      uint64_t v81 = a3;
      LODWORD(v82) = sub_10022BF4C(a9, (uint64_t)v128, v10, a3, a5, a7);
      if ((int)v82 <= (int)v74)
      {
        uint64_t v84 = (int)v82;
        uint64_t v85 = 2 * (int)v82;
        int8x8_t v86 = v76;
        int8x8_t v87 = v81;
        int32x4_t v88 = v10;
        uint64_t v82 = (int)v82;
        do
        {
          a9.n128_u16[0] = v88->u16[v84];
          LOWORD(v83) = v87->i16[v84];
          float v89 = (float)LODWORD(v83);
          a9.n128_f32[0] = rintf((float)(v11 * (float)a9.n128_u32[0]) * v89);
          int v90 = (uint64_t)a9.n128_f32[0] & ~((int)(uint64_t)a9.n128_f32[0] >> 31);
          if (v90 >= 0xFFFF) {
            LOWORD(v90) = -1;
          }
          uint64_t v91 = &v88->i8[v85];
          a9.n128_u16[0] = v88->u16[(unint64_t)v85 / 2 + 1];
          uint64_t v92 = (uint64_t)v87->i64 + v85;
          LOWORD(v89) = v87->i16[(unint64_t)v85 / 2 + 1];
          float v93 = (float)LODWORD(v89);
          a9.n128_f32[0] = rintf((float)(v11 * (float)a9.n128_u32[0]) * v93);
          int v94 = (uint64_t)a9.n128_f32[0] & ~((int)(uint64_t)a9.n128_f32[0] >> 31);
          if (v94 >= 0xFFFF) {
            LOWORD(v94) = -1;
          }
          uint64_t v95 = &v86[v85];
          *((_WORD *)v95 - 2) = v90;
          *((_WORD *)v95 - 1) = v94;
          a9.n128_u16[0] = *((_WORD *)v91 + 2);
          LOWORD(v93) = *(_WORD *)(v92 + 4);
          *(float *)&unsigned int v96 = (float)LODWORD(v93);
          *(float *)&unsigned int v97 = rintf((float)(v11 * (float)a9.n128_u32[0]) * *(float *)&v96);
          int v98 = (uint64_t)*(float *)&v97 & ~((int)(uint64_t)*(float *)&v97 >> 31);
          LOWORD(v97) = *((_WORD *)v91 + 3);
          LOWORD(v96) = *(_WORD *)(v92 + 6);
          float v83 = (float)v96;
          a9.n128_f32[0] = rintf((float)(v11 * (float)v97) * v83);
          if (v98 >= 0xFFFF) {
            LOWORD(v98) = -1;
          }
          int v99 = (uint64_t)a9.n128_f32[0] & ~((int)(uint64_t)a9.n128_f32[0] >> 31);
          if (v99 >= 0xFFFF) {
            LOWORD(v99) = -1;
          }
          *(_WORD *)&v86[2 * v84] = v98;
          v82 += 4;
          *((_WORD *)v95 + 1) = v99;
          int32x4_t v88 = (uint16x8_t *)((char *)v88 + 8);
          int8x8_t v87 = (uint16x8_t *)((char *)v87 + 8);
          v86 += 8;
        }
        while (v82 <= v74);
      }
      a7 = v80;
      if ((int)v82 < (int)v80)
      {
        uint64_t v100 = (int)v82;
        do
        {
          a9.n128_u16[0] = v10->u16[v100];
          LOWORD(v83) = v81->i16[v100];
          float v83 = (float)LODWORD(v83);
          a9.n128_f32[0] = rintf((float)(v11 * (float)a9.n128_u32[0]) * v83);
          int v101 = (uint64_t)a9.n128_f32[0] & ~((int)(uint64_t)a9.n128_f32[0] >> 31);
          if (v101 >= 0xFFFF) {
            LOWORD(v101) = -1;
          }
          v79->i16[v100++] = v101;
        }
        while (v75 != v100);
      }
      int v10 = (uint16x8_t *)((char *)v10 + v127);
      a3 = (uint16x8_t *)((char *)v81 + v125);
      a5 = (uint16x8_t *)((char *)v79 + v77);
      v76 += v77;
      a8 = v78 - 1;
    }
    while (v78 != 1);
  }
}

uint64_t sub_1002269D4(uint64_t result, unint64_t a2, int16x8_t *a3, unint64_t a4, int16x8_t *a5, unint64_t a6, uint64_t a7, int a8, int16x8_t a9, unint64_t *a10)
{
  int v10 = a5;
  float v11 = a3;
  unint64_t v12 = (int16x8_t *)result;
  a9.i64[0] = *a10;
  float v13 = *(double *)a10;
  unint64_t v14 = a2 >> 1;
  unint64_t v15 = a4 >> 1;
  unint64_t v16 = a6 >> 1;
  uint64_t v87 = a7;
  if (v13 == 1.0)
  {
    if (a8)
    {
      uint64_t v17 = 0;
      uint64_t v18 = (int)a7 - 4;
      uint64_t v19 = (int)a7;
      unint64_t v86 = a6 & 0xFFFFFFFFFFFFFFFELL;
      unint64_t v85 = a2 & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v83 = 2 * v16;
      unint64_t v84 = a4 & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v81 = 2 * v15;
      uint64_t v82 = 2 * v14;
      unint64_t v20 = &a5->i8[4];
      unint64_t v21 = a3;
      uint64_t v22 = (int16x8_t *)result;
      uint64_t v23 = a5;
      do
      {
        int v94 = a8;
        float v89 = &v12->i8[v85 * v17];
        int v90 = &v10->i8[v86 * v17];
        uint64_t v92 = v17;
        int32x4_t v88 = &v11->i8[v84 * v17];
        a9.i32[0] = 1.0;
        int32x4_t v24 = v20;
        uint64_t result = sub_10022C2A4((__n128)a9, (uint64_t)&v96, v22, v21, v23, a7);
        int32x4_t v25 = v24;
        if ((int)result <= (int)v18)
        {
          uint64_t result = (int)result;
          unint64_t v26 = v18 - (int)result;
          if (v26 < 0x1C) {
            goto LABEL_7;
          }
          unint64_t v41 = v26 >> 2;
          uint64_t v42 = (int)result;
          uint64_t v43 = v42 * 2 + 8 * v41;
          unint64_t v44 = (unint64_t)&v90[v43 + 8];
          BOOL v45 = &v23->i8[v42 * 2] >= &v88[v43 + 8] || (unint64_t)v21 + 2 * (int)result >= v44;
          BOOL v46 = !v45;
          if ((unint64_t)v22 + 2 * (int)result < v44 && &v23->i8[v42 * 2] < &v89[v43 + 8]) {
            goto LABEL_7;
          }
          if (v46) {
            goto LABEL_7;
          }
          unint64_t v48 = v41 + 1;
          uint64_t result = (int)result + 4 * (v48 & 0x7FFFFFFFFFFFFFF8);
          uint64_t v49 = v48 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            uint16x8_t v50 = &v22->i16[v42];
            uint16x8_t v51 = &v21->i16[v42];
            int16x8x4_t v97 = vld4q_s16(v50);
            int16x8x4_t v98 = vld4q_s16(v51);
            v99.val[0] = vqmovn_high_s32(vqmovn_s32(vmull_s16(*(int16x4_t *)v98.val[0].i8, *(int16x4_t *)v97.val[0].i8)), vmull_high_s16(v98.val[0], v97.val[0]));
            v99.val[1] = vqmovn_high_s32(vqmovn_s32(vmull_s16(*(int16x4_t *)v98.val[1].i8, *(int16x4_t *)v97.val[1].i8)), vmull_high_s16(v98.val[1], v97.val[1]));
            v99.val[2] = vqmovn_high_s32(vqmovn_s32(vmull_s16(*(int16x4_t *)v98.val[2].i8, *(int16x4_t *)v97.val[2].i8)), vmull_high_s16(v98.val[2], v97.val[2]));
            a9 = (int16x8_t)vmull_s16(*(int16x4_t *)v98.val[3].i8, *(int16x4_t *)v97.val[3].i8);
            v99.val[3] = vqmovn_high_s32(vqmovn_s32((int32x4_t)a9), vmull_high_s16(v98.val[3], v97.val[3]));
            float32x4_t v52 = &v23->i16[v42];
            vst4q_s16(v52, v99);
            v42 += 32;
            v49 -= 8;
          }
          while (v49);
          if (v48 != (v48 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_7:
            uint64_t v27 = result;
            int v28 = v24;
            unint64_t v29 = v21;
            unint64_t v30 = v22;
            do
            {
              int v31 = v29->i16[v27] * v30->i16[v27];
              if (v31 <= -32768) {
                int v31 = -32768;
              }
              if (v31 >= 0x7FFF) {
                LOWORD(v31) = 0x7FFF;
              }
              uint64_t v32 = &v30->i8[v27 * 2];
              uint64_t v33 = &v29->i8[v27 * 2];
              int v34 = v29->i16[v27 + 1] * v30->i16[v27 + 1];
              if (v34 <= -32768) {
                int v34 = -32768;
              }
              if (v34 >= 0x7FFF) {
                LOWORD(v34) = 0x7FFF;
              }
              uint64_t v35 = &v28[v27 * 2];
              *((_WORD *)v35 - 2) = v31;
              *((_WORD *)v35 - 1) = v34;
              int v36 = *((__int16 *)v33 + 2) * *((__int16 *)v32 + 2);
              if (v36 <= -32768) {
                int v36 = -32768;
              }
              if (v36 >= 0x7FFF) {
                LOWORD(v36) = 0x7FFF;
              }
              int v37 = *((__int16 *)v33 + 3) * *((__int16 *)v32 + 3);
              if (v37 <= -32768) {
                int v37 = -32768;
              }
              if (v37 >= 0x7FFF) {
                LOWORD(v37) = 0x7FFF;
              }
              *(_WORD *)&v28[v27 * 2] = v36;
              *((_WORD *)v35 + 1) = v37;
              result += 4;
              unint64_t v30 = (int16x8_t *)((char *)v30 + 8);
              unint64_t v29 = (int16x8_t *)((char *)v29 + 8);
              v28 += 8;
            }
            while (result <= v18);
          }
        }
        LODWORD(a7) = v87;
        int v10 = a5;
        if ((int)result < (int)v87)
        {
          unint64_t v38 = (int)result;
          unint64_t v39 = v19 - (int)result;
          if (v39 < 0x10) {
            goto LABEL_88;
          }
          uint64_t v53 = 2 * (int)result;
          if ((unint64_t)(v90 - v89) < 0x20) {
            goto LABEL_88;
          }
          if ((unint64_t)(v90 - v88) < 0x20) {
            goto LABEL_88;
          }
          unint64_t v38 = (v39 & 0xFFFFFFFFFFFFFFF0) + (int)result;
          unint64_t v54 = v39 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            a9 = vqmovn_high_s32(vqmovn_s32(vmull_s16(*(int16x4_t *)&v21->i8[v53], *(int16x4_t *)&v22->i8[v53])), vmull_high_s16(*(int16x8_t *)((char *)v21 + v53), *(int16x8_t *)((char *)v22 + v53)));
            int16x8_t v55 = vqmovn_high_s32(vqmovn_s32(vmull_s16(*(int16x4_t *)&v21[1].i8[v53], *(int16x4_t *)&v22[1].i8[v53])), vmull_high_s16(*(int16x8_t *)((char *)&v21[1] + v53), *(int16x8_t *)((char *)&v22[1] + v53)));
            long long v56 = (int16x8_t *)((char *)v23 + v53);
            int16x8_t *v56 = a9;
            v56[1] = v55;
            v53 += 32;
            v54 -= 16;
          }
          while (v54);
          if (v39 != (v39 & 0xFFFFFFFFFFFFFFF0))
          {
LABEL_88:
            do
            {
              int v40 = v21->i16[v38] * v22->i16[v38];
              if (v40 <= -32768) {
                int v40 = -32768;
              }
              if (v40 >= 0x7FFF) {
                LOWORD(v40) = 0x7FFF;
              }
              v23->i16[v38++] = v40;
            }
            while (v19 != v38);
          }
        }
        uint64_t v22 = (int16x8_t *)((char *)v22 + v82);
        unint64_t v21 = (int16x8_t *)((char *)v21 + v81);
        uint64_t v23 = (int16x8_t *)((char *)v23 + v83);
        uint64_t v17 = v92 + 1;
        unint64_t v20 = &v25[v83];
        a8 = v94 - 1;
      }
      while (v94 != 1);
    }
  }
  else if (a8)
  {
    uint64_t v57 = (int)a7 - 4;
    uint64_t v58 = (int)a7;
    uint64_t v93 = 2 * v15;
    uint64_t v95 = 2 * v14;
    uint64_t v59 = &a5->i8[4];
    uint64_t v91 = 2 * v16;
    do
    {
      int v60 = a8;
      *(float *)a9.i32 = v13;
      uint64_t v61 = a7;
      uint64_t result = sub_10022C2A4((__n128)a9, (uint64_t)&v96, v12, v11, v10, a7);
      if ((int)result <= (int)v57)
      {
        uint64_t v63 = (int)result;
        uint64_t v64 = 2 * (int)result;
        uint64_t v65 = v59;
        int16x8_t v66 = v11;
        int32x4_t v67 = v12;
        uint64_t result = (int)result;
        do
        {
          a9.i16[0] = v67->i16[v63];
          a9.i64[0] = vmovl_s16(*(int16x4_t *)a9.i8).u64[0];
          v62.i16[0] = v66->i16[v63];
          int16x4_t v68 = (int16x4_t)vmovl_s16(v62).u64[0];
          *(float *)v68.i32 = (float)v68.i32[0];
          *(float *)a9.i32 = rintf((float)(v13 * (float)a9.i32[0]) * *(float *)v68.i32);
          uint64_t v69 = (uint64_t)*(float *)a9.i32;
          if ((int)(uint64_t)*(float *)a9.i32 <= -32768) {
            LODWORD(v69) = -32768;
          }
          if ((int)v69 >= 0x7FFF) {
            LOWORD(v69) = 0x7FFF;
          }
          int32x4_t v70 = &v67->i8[v64];
          a9.i16[0] = v67->i16[(unint64_t)v64 / 2 + 1];
          a9.i64[0] = vmovl_s16(*(int16x4_t *)a9.i8).u64[0];
          unint64_t v71 = &v66->i8[v64];
          v68.i16[0] = v66->i16[(unint64_t)v64 / 2 + 1];
          int16x4_t v72 = (int16x4_t)vmovl_s16(v68).u64[0];
          *(float *)v72.i32 = (float)v72.i32[0];
          *(float *)a9.i32 = rintf((float)(v13 * (float)a9.i32[0]) * *(float *)v72.i32);
          uint64_t v73 = (uint64_t)*(float *)a9.i32;
          if ((int)(uint64_t)*(float *)a9.i32 <= -32768) {
            LODWORD(v73) = -32768;
          }
          if ((int)v73 >= 0x7FFF) {
            LOWORD(v73) = 0x7FFF;
          }
          uint64_t v74 = &v65[v64];
          *((_WORD *)v74 - 2) = v69;
          *((_WORD *)v74 - 1) = v73;
          a9.i16[0] = *((_WORD *)v70 + 2);
          a9.i64[0] = vmovl_s16(*(int16x4_t *)a9.i8).u64[0];
          v72.i16[0] = *((_WORD *)v71 + 2);
          int16x4_t v75 = (int16x4_t)vmovl_s16(v72).u64[0];
          *(float *)v75.i32 = (float)v75.i32[0];
          *(float *)a9.i32 = rintf((float)(v13 * (float)a9.i32[0]) * *(float *)v75.i32);
          uint64_t v76 = (uint64_t)*(float *)a9.i32;
          if ((int)(uint64_t)*(float *)a9.i32 <= -32768) {
            LODWORD(v76) = -32768;
          }
          if ((int)v76 >= 0x7FFF) {
            LOWORD(v76) = 0x7FFF;
          }
          a9.i16[0] = *((_WORD *)v70 + 3);
          a9 = (int16x8_t)vmovl_s16(*(int16x4_t *)a9.i8);
          v75.i16[0] = *((_WORD *)v71 + 3);
          int16x4_t v62 = (int16x4_t)vmovl_s16(v75).u64[0];
          *(float *)v62.i32 = (float)v62.i32[0];
          *(float *)a9.i32 = rintf((float)(v13 * (float)a9.i32[0]) * *(float *)v62.i32);
          uint64_t v77 = (uint64_t)*(float *)a9.i32;
          if ((int)(uint64_t)*(float *)a9.i32 <= -32768) {
            LODWORD(v77) = -32768;
          }
          if ((int)v77 >= 0x7FFF) {
            LOWORD(v77) = 0x7FFF;
          }
          *(_WORD *)&v65[2 * v63] = v76;
          result += 4;
          *((_WORD *)v74 + 1) = v77;
          int32x4_t v67 = (int16x8_t *)((char *)v67 + 8);
          int16x8_t v66 = (int16x8_t *)((char *)v66 + 8);
          v65 += 8;
        }
        while (result <= v57);
        uint64_t v61 = v87;
      }
      a7 = v61;
      if ((int)result < (int)v61)
      {
        uint64_t v78 = (int)result;
        do
        {
          a9.i16[0] = v12->i16[v78];
          a9 = (int16x8_t)vmovl_s16(*(int16x4_t *)a9.i8);
          v62.i16[0] = v11->i16[v78];
          int16x4_t v62 = (int16x4_t)vmovl_s16(v62).u64[0];
          *(float *)v62.i32 = (float)v62.i32[0];
          *(float *)a9.i32 = rintf((float)(v13 * (float)a9.i32[0]) * *(float *)v62.i32);
          uint64_t v79 = (uint64_t)*(float *)a9.i32;
          if ((int)(uint64_t)*(float *)a9.i32 <= -32768) {
            LODWORD(v79) = -32768;
          }
          if ((int)v79 >= 0x7FFF) {
            LOWORD(v79) = 0x7FFF;
          }
          v10->i16[v78++] = v79;
        }
        while (v58 != v78);
      }
      unint64_t v12 = (int16x8_t *)((char *)v12 + v95);
      float v11 = (int16x8_t *)((char *)v11 + v93);
      int v10 = (int16x8_t *)((char *)v10 + v91);
      v59 += v91;
      a8 = v60 - 1;
    }
    while (v60 != 1);
  }
  return result;
}

unint64_t sub_100226FD0(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, int a7, int a8, double *a9)
{
  unint64_t v9 = a3;
  unint64_t v10 = result;
  double v11 = *a9;
  unint64_t v12 = a2 >> 2;
  unint64_t v13 = a4 >> 2;
  unint64_t v14 = a6 >> 2;
  int v15 = a8 - 1;
  if (*a9 == 1.0)
  {
    if (!a8) {
      return result;
    }
    unint64_t v16 = (a7 - 4);
    if (a7 < 4)
    {
      if (a7 >= 1)
      {
        uint64_t v17 = (_DWORD *)(a5 + 8);
        uint64_t v18 = (_DWORD *)(a3 + 8);
        uint64_t v19 = 4 * v13;
        unint64_t v20 = (_DWORD *)(result + 4);
        uint64_t v21 = 4 * v12;
        do
        {
          *(v17 - 2) = *(v18 - 2) * *(v20 - 1);
          if (a7 != 1)
          {
            *(v17 - 1) = *(v18 - 1) * *v20;
            if (a7 != 2) {
              *uint64_t v17 = *v18 * v20[1];
            }
          }
          v17 += v14;
          uint64_t v18 = (_DWORD *)((char *)v18 + v19);
          unint64_t v20 = (_DWORD *)((char *)v20 + v21);
          --a8;
        }
        while (a8);
      }
      return result;
    }
    uint64_t v28 = 0;
    uint64_t v29 = (4 * (a7 - 4)) & 0x3FFFFFFF0;
    uint64_t v76 = v29 + a5 + 16;
    unint64_t v79 = a6 & 0xFFFFFFFFFFFFFFFCLL;
    uint64_t v75 = v29 + v10 + 16;
    unint64_t v78 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    uint64_t v73 = v29 + a3 + 16;
    unint64_t v30 = (v16 & 0xFFFFFFFC) + 5;
    if (v30 <= a7) {
      unint64_t v30 = a7;
    }
    uint64_t v31 = 16 * (v16 >> 2) + 16;
    uint64_t v74 = (v16 >> 2) + 1;
    unint64_t v77 = v30 - (v16 & 0xFFFFFFFC) - 4;
    uint64_t v32 = 4 * v12;
    uint64_t v33 = 4 * v13;
    uint64_t v34 = 4 * v14;
    unint64_t v35 = a5 + 8;
    unint64_t v36 = a5;
    uint64_t result = v10;
    while (1)
    {
      int v37 = v15;
      unint64_t v38 = v79 * v28;
      unint64_t v39 = v78 * v28;
      unint64_t v40 = (a4 & 0xFFFFFFFFFFFFFFFCLL) * v28;
      if (v16 >= 0xC)
      {
        unint64_t v41 = 0;
        unint64_t v50 = a5 + v31 + v38;
        BOOL v52 = v36 < v9 + v31 + v40 && a3 < v50;
        if ((result >= v50 || v36 >= v10 + v31 + v39) && !v52)
        {
          uint64_t v54 = 0;
          uint64_t v55 = v74 & 0x7FFFFFFC;
          do
          {
            int32x4_t v56 = vmulq_s32(*(int32x4_t *)(a3 + v54 + 16), *(int32x4_t *)(result + v54 + 16));
            int32x4_t v57 = vmulq_s32(*(int32x4_t *)(a3 + v54), *(int32x4_t *)(result + v54));
            int32x4_t v58 = vmulq_s32(*(int32x4_t *)(a3 + v54 + 48), *(int32x4_t *)(result + v54 + 48));
            uint64_t v59 = (int32x4_t *)(v36 + v54);
            v59[2] = vmulq_s32(*(int32x4_t *)(a3 + v54 + 32), *(int32x4_t *)(result + v54 + 32));
            v59[3] = v58;
            int32x4_t *v59 = v57;
            v59[1] = v56;
            v54 += 64;
            v55 -= 4;
          }
          while (v55);
          unint64_t v41 = 4 * (v74 & 0x7FFFFFFC);
          if (v74 == (v74 & 0x7FFFFFFC)) {
            goto LABEL_26;
          }
        }
      }
      else
      {
        unint64_t v41 = 0;
      }
      uint64_t v42 = 4 * v41;
      unint64_t v43 = v35;
      unint64_t v44 = a3;
      unint64_t v45 = result;
      do
      {
        int v46 = *(_DWORD *)(v44 + v42 + 4) * *(_DWORD *)(v45 + v42 + 4);
        unint64_t v47 = v43 + v42;
        *(_DWORD *)(v47 - 8) = *(_DWORD *)(v44 + v42) * *(_DWORD *)(v45 + v42);
        *(_DWORD *)(v47 - 4) = v46;
        int v48 = *(_DWORD *)(v44 + v42 + 12) * *(_DWORD *)(v45 + v42 + 12);
        *(_DWORD *)(v43 + v42) = *(_DWORD *)(v44 + v42 + 8) * *(_DWORD *)(v45 + v42 + 8);
        v41 += 4;
        *(_DWORD *)(v47 + 4) = v48;
        v45 += 16;
        v44 += 16;
        v43 += 16;
      }
      while (v41 <= v16);
LABEL_26:
      if ((int)v41 < a7)
      {
        unint64_t v49 = (v16 & 0xFFFFFFFC) + 4;
        if (v77 < 8) {
          goto LABEL_61;
        }
        unint64_t v60 = v76 + v38;
        unint64_t v49 = (v16 & 0xFFFFFFFC) + 4;
        if (v60 - (v75 + v39) < 0x20) {
          goto LABEL_61;
        }
        unint64_t v49 = (v16 & 0xFFFFFFFC) + 4;
        if (v60 - (v73 + v40) < 0x20) {
          goto LABEL_61;
        }
        uint64_t v61 = (4 * (a7 - 4)) & 0x3FFFFFFF0;
        unint64_t v62 = v77 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          int32x4_t v63 = vmulq_s32(*(int32x4_t *)(a3 + v61 + 32), *(int32x4_t *)(result + v61 + 32));
          uint64_t v64 = (int32x4_t *)(v36 + v61);
          v64[1] = vmulq_s32(*(int32x4_t *)(a3 + v61 + 16), *(int32x4_t *)(result + v61 + 16));
          _OWORD v64[2] = v63;
          v61 += 32;
          v62 -= 8;
        }
        while (v62);
        unint64_t v49 = (v16 & 0xFFFFFFFC) + 4 + (v77 & 0xFFFFFFFFFFFFFFF8);
        if (v77 != (v77 & 0xFFFFFFFFFFFFFFF8))
        {
LABEL_61:
          do
          {
            *(_DWORD *)(v36 + 4 * v49) = *(_DWORD *)(a3 + 4 * v49) * *(_DWORD *)(result + 4 * v49);
            ++v49;
          }
          while (v49 < a7);
        }
      }
      result += v32;
      a3 += v33;
      v36 += v34;
      int v15 = v37 - 1;
      ++v28;
      v35 += v34;
      if (!v37) {
        return result;
      }
    }
  }
  if (a8)
  {
    unint64_t v22 = (a7 - 4);
    if (a7 >= 4)
    {
      uint64_t v65 = 4 * v12;
      do
      {
        uint64_t v66 = 0;
        unint64_t v67 = 0;
        int v68 = v15;
        do
        {
          double v69 = v11 * (double)*(int *)(v10 + v66 + 4);
          uint64_t v70 = *(int *)(v9 + v66 + 4);
          unint64_t v71 = (_DWORD *)(a5 + v66);
          _DWORD *v71 = (uint64_t)rint(v11 * (double)*(int *)(v10 + v66) * (double)*(int *)(v9 + v66));
          v71[1] = (uint64_t)rint(v69 * (double)v70);
          uint64_t result = (uint64_t)rint(v11 * (double)*(int *)(v10 + v66 + 12) * (double)*(int *)(v9 + v66 + 12));
          _OWORD v71[2] = (uint64_t)rint(v11 * (double)*(int *)(v10 + v66 + 8) * (double)*(int *)(v9 + v66 + 8));
          v71[3] = result;
          v67 += 4;
          v66 += 16;
        }
        while (v67 <= v22);
        unint64_t v72 = (v22 & 0xFFFFFFFC) + 4;
        if ((int)v67 < a7)
        {
          do
          {
            *(_DWORD *)(a5 + 4 * v72) = (uint64_t)rint(v11* (double)*(int *)(v10 + 4 * v72)* (double)*(int *)(v9 + 4 * v72));
            ++v72;
          }
          while (v72 < a7);
        }
        --v15;
        a5 += 4 * v14;
        v9 += 4 * v13;
        v10 += v65;
      }
      while (v68);
    }
    else if (a7 >= 1)
    {
      uint64_t v23 = (_DWORD *)(a5 + 8);
      int32x4_t v24 = (int *)(a3 + 8);
      uint64_t v25 = 4 * v13;
      unint64_t v26 = (int *)(result + 4);
      uint64_t v27 = 4 * v12;
      do
      {
        *(v23 - 2) = (uint64_t)rint(v11 * (double)*(v26 - 1) * (double)*(v24 - 2));
        if (a7 != 1)
        {
          *(v23 - 1) = (uint64_t)rint(v11 * (double)*v26 * (double)*(v24 - 1));
          if (a7 != 2) {
            *uint64_t v23 = (uint64_t)rint(v11 * (double)v26[1] * (double)*v24);
          }
        }
        v23 += v14;
        int32x4_t v24 = (int *)((char *)v24 + v25);
        unint64_t v26 = (int *)((char *)v26 + v27);
        --a8;
      }
      while (a8);
    }
  }
  return result;
}

uint64_t sub_100227594(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, int a7, int a8, double *a9)
{
  unint64_t v153 = a3;
  uint64_t v154 = result;
  float v9 = *a9;
  unint64_t v10 = a2 >> 2;
  unint64_t v11 = a4 >> 2;
  unint64_t v12 = a6 >> 2;
  if (v9 == 1.0)
  {
    if (a8)
    {
      uint64_t v13 = 0;
      uint64_t v14 = a7 - 4;
      unint64_t v15 = a6 & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v16 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v17 = a4 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v18 = 4 * v10;
      uint64_t v19 = 4 * v12;
      uint64_t v20 = 4 * v11;
      unint64_t v21 = a3;
      uint64_t v22 = result;
      unint64_t v23 = a5;
      do
      {
        if (a7 >= 8)
        {
          uint64_t v24 = 0;
          uint64_t result = 0;
          do
          {
            float32x4_t v25 = vmulq_f32(*(float32x4_t *)(v22 + v24 + 16), *(float32x4_t *)(v21 + v24 + 16));
            unint64_t v26 = (float32x4_t *)(v23 + v24);
            *unint64_t v26 = vmulq_f32(*(float32x4_t *)(v22 + v24), *(float32x4_t *)(v21 + v24));
            v26[1] = v25;
            result += 8;
            v24 += 32;
          }
          while (result <= (unint64_t)(a7 - 8));
        }
        else
        {
          uint64_t result = 0;
        }
        unint64_t v27 = a5 + v15 * v13;
        unint64_t v28 = v154 + v16 * v13;
        unint64_t v29 = v153 + v17 * v13;
        if ((int)result <= (int)v14)
        {
          uint64_t v30 = (int)result;
          unint64_t v31 = v14 - (int)result;
          if (v31 < 0xC) {
            goto LABEL_11;
          }
          unint64_t v36 = v31 >> 2;
          uint64_t v37 = 4 * v30;
          unint64_t v38 = v23 + 4 * v30;
          uint64_t v39 = 4 * v30 + 16 * v36;
          unint64_t v40 = v27 + 16 + v39;
          BOOL v41 = v38 >= v29 + 16 + v39 || v21 + 4 * v30 >= v40;
          BOOL v42 = !v41;
          if (v22 + 4 * v30 < v40 && v38 < v28 + 16 + v39) {
            goto LABEL_11;
          }
          if (v42) {
            goto LABEL_11;
          }
          unint64_t v44 = v36 + 1;
          v30 += 4 * (v44 & 0x7FFFFFFFFFFFFFFCLL);
          uint64_t v45 = v44 & 0x7FFFFFFFFFFFFFFCLL;
          do
          {
            float32x4_t v46 = vmulq_f32(*(float32x4_t *)(v22 + v37 + 16), *(float32x4_t *)(v21 + v37 + 16));
            float32x4_t v47 = vmulq_f32(*(float32x4_t *)(v22 + v37), *(float32x4_t *)(v21 + v37));
            float32x4_t v48 = vmulq_f32(*(float32x4_t *)(v22 + v37 + 48), *(float32x4_t *)(v21 + v37 + 48));
            unint64_t v49 = (float32x4_t *)(v23 + v37);
            v49[2] = vmulq_f32(*(float32x4_t *)(v22 + v37 + 32), *(float32x4_t *)(v21 + v37 + 32));
            v49[3] = v48;
            *unint64_t v49 = v47;
            v49[1] = v46;
            v37 += 64;
            v45 -= 4;
          }
          while (v45);
          if (v44 != (v44 & 0x7FFFFFFFFFFFFFFCLL))
          {
LABEL_11:
            uint64_t v32 = 4 * v30;
            do
            {
              uint64_t v33 = (float32x2_t *)(v23 + v32);
              *uint64_t v33 = vmul_f32(*(float32x2_t *)(v22 + v32), *(float32x2_t *)(v21 + v32));
              v33[1] = vmul_f32(*(float32x2_t *)(v22 + v32 + 8), *(float32x2_t *)(v21 + v32 + 8));
              v30 += 4;
              v32 += 16;
            }
            while (v30 <= v14);
          }
          uint64_t result = v30;
        }
        if ((int)result < a7)
        {
          uint64_t v34 = (int)result;
          unint64_t v35 = a7 - (uint64_t)(int)result;
          if (v35 < 0xC) {
            goto LABEL_130;
          }
          uint64_t result = 4 * (int)result;
          unint64_t v50 = v27 + 4 * v34;
          if (v50 - (v28 + 4 * v34) < 0x20) {
            goto LABEL_130;
          }
          if (v50 - (v29 + result) < 0x20) {
            goto LABEL_130;
          }
          v34 += v35 & 0xFFFFFFFFFFFFFFF8;
          unint64_t v51 = v35 & 0xFFFFFFFFFFFFFFF8;
          do
          {
            float32x4_t v52 = vmulq_f32(*(float32x4_t *)(v22 + result + 16), *(float32x4_t *)(v21 + result + 16));
            uint64_t v53 = (float32x4_t *)(v23 + result);
            *uint64_t v53 = vmulq_f32(*(float32x4_t *)(v22 + result), *(float32x4_t *)(v21 + result));
            v53[1] = v52;
            result += 32;
            v51 -= 8;
          }
          while (v51);
          if (v35 != (v35 & 0xFFFFFFFFFFFFFFF8))
          {
LABEL_130:
            do
            {
              uint64_t result = 4 * v34;
              *(float *)(v23 + 4 * v34) = *(float *)(v22 + 4 * v34) * *(float *)(v21 + 4 * v34);
              ++v34;
            }
            while (a7 != v34);
          }
        }
        v22 += v18;
        v21 += v20;
        v23 += v19;
        ++v13;
        --a8;
      }
      while (a8);
    }
    return result;
  }
  if (!a8) {
    return result;
  }
  int v54 = a8 - 1;
  unint64_t v55 = (a7 - 4);
  unint64_t v56 = (a7 - 8);
  if (a7 < 8)
  {
    if (a7 < 4)
    {
      if (a7 >= 1)
      {
        int32x4_t v57 = (float *)(a5 + 8);
        int32x4_t v58 = (float *)(a3 + 8);
        uint64_t v59 = (float *)(result + 4);
        do
        {
          *(v57 - 2) = (float)(*(v59 - 1) * v9) * *(v58 - 2);
          if (a7 != 1)
          {
            *(v57 - 1) = (float)(*v59 * v9) * *(v58 - 1);
            if (a7 != 2) {
              float *v57 = (float)(v59[1] * v9) * *v58;
            }
          }
          v57 += v12;
          v58 += v11;
          v59 += v10;
          --a8;
        }
        while (a8);
      }
      return result;
    }
    uint64_t v101 = 0;
    uint64_t v102 = (4 * (a7 - 4)) & 0x3FFFFFFF0;
    uint64_t v149 = v102 + a5 + 16;
    unint64_t v103 = a6 & 0xFFFFFFFFFFFFFFFCLL;
    uint64_t v147 = v102 + result + 16;
    unint64_t v104 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    uint64_t v142 = v102 + a3 + 16;
    unint64_t v105 = a4 & 0xFFFFFFFFFFFFFFFCLL;
    unint64_t v106 = (v55 & 0xFFFFFFFC) + 5;
    if (v106 <= a7) {
      unint64_t v106 = a7;
    }
    uint64_t v107 = 16 * (v55 >> 2) + 16;
    uint64_t v146 = (v55 >> 2) + 1;
    unint64_t v152 = v106 - (v55 & 0xFFFFFFFC) - 4;
    uint64_t v108 = 4 * v10;
    uint64_t v109 = 4 * v11;
    uint64_t v110 = 4 * v12;
    unint64_t v111 = a5 + 8;
    unint64_t v112 = a5;
    while (1)
    {
      int v113 = v54;
      unint64_t v114 = v103 * v101;
      unint64_t v115 = v104 * v101;
      unint64_t v116 = v105 * v101;
      if (v55 >= 0xC)
      {
        unint64_t v117 = 0;
        unint64_t v118 = a5 + v107 + v114;
        BOOL v120 = v112 < v153 + v107 + v116 && a3 < v118;
        if ((result >= v118 || v112 >= v154 + v107 + v115) && !v120)
        {
          uint64_t v122 = 0;
          uint64_t v123 = v146 & 0x7FFFFFFC;
          do
          {
            uint64_t v124 = (const float *)(result + v122);
            float32x4x4_t v156 = vld4q_f32(v124);
            uint64_t v125 = (const float *)(a3 + v122);
            float32x4x4_t v158 = vld4q_f32(v125);
            v160.val[0] = vmulq_f32(vmulq_n_f32(v156.val[0], v9), v158.val[0]);
            v160.val[1] = vmulq_f32(vmulq_n_f32(v156.val[1], v9), v158.val[1]);
            v160.val[2] = vmulq_f32(vmulq_n_f32(v156.val[2], v9), v158.val[2]);
            v160.val[3] = vmulq_f32(vmulq_n_f32(v156.val[3], v9), v158.val[3]);
            uint64_t v126 = (float *)(v112 + v122);
            vst4q_f32(v126, v160);
            v122 += 64;
            v123 -= 4;
          }
          while (v123);
          unint64_t v117 = 4 * (v146 & 0x7FFFFFFC);
          if (v146 == (v146 & 0x7FFFFFFC)) {
            goto LABEL_118;
          }
        }
      }
      else
      {
        unint64_t v117 = 0;
      }
      uint64_t v127 = 4 * v117;
      unint64_t v128 = v111;
      unint64_t v129 = a3;
      uint64_t v130 = result;
      do
      {
        float v131 = (float)(*(float *)(v130 + v127 + 4) * v9) * *(float *)(v129 + v127 + 4);
        unint64_t v132 = v128 + v127;
        *(float *)(v132 - 8) = (float)(*(float *)(v130 + v127) * v9) * *(float *)(v129 + v127);
        *(float *)(v132 - 4) = v131;
        float v133 = *(float *)(v129 + v127 + 12);
        float v134 = *(float *)(v130 + v127 + 12) * v9;
        *(float *)(v128 + v127) = (float)(*(float *)(v130 + v127 + 8) * v9) * *(float *)(v129 + v127 + 8);
        v117 += 4;
        *(float *)(v132 + 4) = v134 * v133;
        v130 += 16;
        v129 += 16;
        v128 += 16;
      }
      while (v117 <= v55);
LABEL_118:
      if ((int)v117 < a7)
      {
        unint64_t v135 = (v55 & 0xFFFFFFFC) + 4;
        if (v152 < 8) {
          goto LABEL_131;
        }
        unint64_t v135 = (v55 & 0xFFFFFFFC) + 4;
        if (v149 + v114 - (v147 + v115) < 0x20) {
          goto LABEL_131;
        }
        unint64_t v135 = (v55 & 0xFFFFFFFC) + 4;
        if (v149 + v114 - (v142 + v116) < 0x20) {
          goto LABEL_131;
        }
        uint64_t v136 = (4 * (a7 - 4)) & 0x3FFFFFFF0;
        unint64_t v137 = v152 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          float32x4_t v138 = vmulq_f32(vmulq_n_f32(*(float32x4_t *)(result + v136 + 32), v9), *(float32x4_t *)(a3 + v136 + 32));
          int8x16x4_t v139 = (float32x4_t *)(v112 + v136);
          v139[1] = vmulq_f32(vmulq_n_f32(*(float32x4_t *)(result + v136 + 16), v9), *(float32x4_t *)(a3 + v136 + 16));
          v139[2] = v138;
          v136 += 32;
          v137 -= 8;
        }
        while (v137);
        unint64_t v135 = (v55 & 0xFFFFFFFC) + 4 + (v152 & 0xFFFFFFFFFFFFFFF8);
        if (v152 != (v152 & 0xFFFFFFFFFFFFFFF8))
        {
LABEL_131:
          do
          {
            *(float *)(v112 + 4 * v135) = (float)(*(float *)(result + 4 * v135) * v9) * *(float *)(a3 + 4 * v135);
            ++v135;
          }
          while (v135 < a7);
        }
      }
      result += v108;
      a3 += v109;
      v112 += v110;
      int v54 = v113 - 1;
      ++v101;
      v111 += v110;
      if (!v113) {
        return result;
      }
    }
  }
  uint64_t v60 = 0;
  uint64_t v61 = (v56 & 0xFFFFFFF8) + 8;
  unint64_t v150 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v151 = a6 & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v148 = a4 & 0xFFFFFFFFFFFFFFFCLL;
  uint64_t v62 = v61 | 4;
  if ((v61 | 4) <= (uint64_t)(v55 + 1)) {
    uint64_t v62 = v55 + 1;
  }
  unint64_t v63 = v62 + ~v61;
  uint64_t v64 = 4 * ((v56 & 0xFFFFFFF8) + 8);
  uint64_t v65 = v64 + 16 * (v63 >> 2) + 16;
  uint64_t v66 = (v63 >> 2) + 1;
  BOOL v68 = ((v63 >> 2) & 0xC0000000) == 0 && (int)(v61 + 4 * (v63 >> 2)) >= (int)v61 && v63 >> 34 == 0;
  uint64_t v141 = (v63 >> 2) + 1;
  uint64_t v143 = v66 & 0x7FFFFFFFFFFFFFFCLL;
  char v70 = !v68 || v63 < 0xC;
  char v144 = v70;
  uint64_t v145 = 4 * v12;
  unint64_t v140 = v61 + 4 * (v66 & 0x7FFFFFFFFFFFFFFCLL);
  unint64_t v71 = a3;
  uint64_t v72 = result;
  unint64_t v73 = a5;
  do
  {
    uint64_t result = 0;
    unint64_t v74 = 0;
    int v75 = v54;
    unint64_t v76 = a5 + v151 * v60;
    unint64_t v77 = v76 + v64;
    unint64_t v78 = v76 + v65;
    unint64_t v79 = v154 + v150 * v60;
    unint64_t v80 = a3 + v148 * v60;
    do
    {
      float32x4_t v81 = vmulq_n_f32(vmulq_f32(*(float32x4_t *)(v72 + result + 16), *(float32x4_t *)(v71 + result + 16)), v9);
      uint64_t v82 = (float32x4_t *)(v73 + result);
      *uint64_t v82 = vmulq_n_f32(vmulq_f32(*(float32x4_t *)(v72 + result), *(float32x4_t *)(v71 + result)), v9);
      v82[1] = v81;
      v74 += 8;
      result += 32;
    }
    while (v74 <= v56);
    if ((int)v55 >= (int)v74)
    {
      unint64_t v74 = (v56 & 0xFFFFFFF8) + 8;
      if (v144) {
        goto LABEL_84;
      }
      BOOL v83 = v77 >= v80 + v65 || v80 + v64 >= v78;
      BOOL v84 = !v83;
      BOOL v85 = v79 + v64 >= v78 || v77 >= v79 + v65;
      unint64_t v74 = (v56 & 0xFFFFFFF8) + 8;
      if (!v85) {
        goto LABEL_84;
      }
      unint64_t v74 = (v56 & 0xFFFFFFF8) + 8;
      if (v84) {
        goto LABEL_84;
      }
      uint64_t v86 = v143;
      uint64_t result = v61 << 32;
      uint64_t v87 = 4 * ((v56 & 0xFFFFFFF8) + 8);
      do
      {
        int32x4_t v88 = (const float *)(v72 + v87);
        float32x4x4_t v155 = vld4q_f32(v88);
        float v89 = (const float *)(v71 + v87);
        float32x4x4_t v157 = vld4q_f32(v89);
        v159.val[0] = vmulq_f32(vmulq_n_f32(v155.val[0], v9), v157.val[0]);
        v159.val[1] = vmulq_f32(vmulq_n_f32(v155.val[1], v9), v157.val[1]);
        v159.val[2] = vmulq_f32(vmulq_n_f32(v155.val[2], v9), v157.val[2]);
        v159.val[3] = vmulq_f32(vmulq_n_f32(v155.val[3], v9), v157.val[3]);
        int v90 = (float *)(v73 - 12 + ((result >> 30) | 0xC));
        vst4q_f32(v90, v159);
        v87 += 64;
        result += 0x1000000000;
        v86 -= 4;
      }
      while (v86);
      unint64_t v74 = v140;
      if (v141 != v143)
      {
LABEL_84:
        uint64_t v91 = v74 << 32;
        do
        {
          uint64_t result = (v91 >> 30) | 4;
          float v92 = *(float *)(v72 + result) * v9;
          float v93 = *(float *)(v71 + result);
          *(float *)(v73 + 4 * v74) = (float)(*(float *)(v72 + 4 * v74) * v9) * *(float *)(v71 + 4 * v74);
          *(float *)(v73 + result) = v92 * v93;
          uint64_t v94 = (v91 >> 30) | 0xC;
          float v95 = *(float *)(v72 + v94) * v9;
          float v96 = *(float *)(v71 + v94);
          *(float *)(v73 + ((v91 >> 30) | 8)) = (float)(*(float *)(v72 + ((v91 >> 30) | 8)) * v9)
                                              * *(float *)(v71 + ((v91 >> 30) | 8));
          *(float *)(v73 + v94) = v95 * v96;
          v74 += 4;
          v91 += 0x400000000;
        }
        while ((uint64_t)v74 <= (uint64_t)v55);
      }
    }
    if ((int)v74 < a7)
    {
      unint64_t v74 = (int)v74;
      unint64_t v97 = a7 - (uint64_t)(int)v74;
      if (v97 < 8) {
        goto LABEL_132;
      }
      uint64_t v98 = 4 * (int)v74;
      if (v76 - v79 < 0x20) {
        goto LABEL_132;
      }
      if (v76 - v80 < 0x20) {
        goto LABEL_132;
      }
      unint64_t v74 = (v97 & 0xFFFFFFFFFFFFFFF8) + (int)v74;
      unint64_t v99 = v97 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        float32x4_t v100 = vmulq_f32(vmulq_n_f32(*(float32x4_t *)(v72 + v98 + 16), v9), *(float32x4_t *)(v71 + v98 + 16));
        uint64_t result = v73 + v98;
        *(float32x4_t *)uint64_t result = vmulq_f32(vmulq_n_f32(*(float32x4_t *)(v72 + v98), v9), *(float32x4_t *)(v71 + v98));
        *(float32x4_t *)(result + 16) = v100;
        v98 += 32;
        v99 -= 8;
      }
      while (v99);
      if (v97 != (v97 & 0xFFFFFFFFFFFFFFF8))
      {
LABEL_132:
        do
        {
          *(float *)(v73 + 4 * v74) = (float)(*(float *)(v72 + 4 * v74) * v9) * *(float *)(v71 + 4 * v74);
          ++v74;
        }
        while (a7 != v74);
      }
    }
    v72 += 4 * v10;
    v71 += 4 * v11;
    v73 += v145;
    int v54 = v75 - 1;
    ++v60;
  }
  while (v75);
  return result;
}

unint64_t sub_100227ED8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, int a7, int a8, double *a9)
{
  double v9 = *a9;
  unint64_t v10 = a2 >> 3;
  unint64_t v11 = a4 >> 3;
  unint64_t result = a6 >> 3;
  unint64_t v13 = (a8 - 1);
  if (*a9 == 1.0)
  {
    if (!a8) {
      return result;
    }
    unint64_t v14 = (a7 - 4);
    if (a7 < 4)
    {
      if (a7 >= 1)
      {
        unint64_t v15 = (double *)(a5 + 16);
        unint64_t v16 = (double *)(a3 + 16);
        unint64_t v17 = (double *)(a1 + 8);
        uint64_t v18 = 8 * v10;
        do
        {
          *(v15 - 2) = *(v17 - 1) * *(v16 - 2);
          if (a7 != 1)
          {
            *(v15 - 1) = *v17 * *(v16 - 1);
            if (a7 != 2) {
              *unint64_t v15 = v17[1] * *v16;
            }
          }
          v15 += result;
          v16 += v11;
          unint64_t v17 = (double *)((char *)v17 + v18);
          --a8;
        }
        while (a8);
      }
      return result;
    }
    uint64_t v24 = 0;
    uint64_t v25 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
    unint64_t v26 = a5;
    uint64_t v112 = v25 + a5 + 32;
    unint64_t v27 = a6 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v110 = v25 + a1 + 32;
    unint64_t v28 = a3;
    uint64_t v106 = v25 + a3 + 32;
    unint64_t v29 = (v14 & 0xFFFFFFFC) + 5;
    if (v29 <= a7) {
      unint64_t v29 = a7;
    }
    uint64_t v30 = 32 * (v14 >> 2) + 32;
    uint64_t v108 = (v14 >> 2) + 1;
    unint64_t v114 = v29 - (v14 & 0xFFFFFFFC) - 4;
    unint64_t v104 = v29 & 3;
    uint64_t v31 = 8 * v10;
    uint64_t v32 = 8 * v11;
    uint64_t v33 = 8 * result;
    unint64_t v34 = a5 + 16;
    unint64_t v35 = a1;
    while (1)
    {
      unint64_t result = v13;
      unint64_t v36 = v27 * v24;
      unint64_t v37 = (a2 & 0xFFFFFFFFFFFFFFF8) * v24;
      unint64_t v38 = (a4 & 0xFFFFFFFFFFFFFFF8) * v24;
      if (v14 >= 4)
      {
        unint64_t v39 = 0;
        unint64_t v54 = a5 + v30 + v36;
        BOOL v56 = v26 < a3 + v30 + v38 && v28 < v54;
        if ((v35 >= v54 || v26 >= a1 + v30 + v37) && !v56)
        {
          uint64_t v58 = 0;
          uint64_t v59 = v108 & 0x7FFFFFFE;
          do
          {
            float64x2_t v60 = vmulq_f64(*(float64x2_t *)(v35 + v58 + 16), *(float64x2_t *)(v28 + v58 + 16));
            float64x2_t v61 = vmulq_f64(*(float64x2_t *)(v35 + v58), *(float64x2_t *)(v28 + v58));
            float64x2_t v62 = vmulq_f64(*(float64x2_t *)(v35 + v58 + 48), *(float64x2_t *)(v28 + v58 + 48));
            unint64_t v63 = (float64x2_t *)(v26 + v58);
            _OWORD v63[2] = vmulq_f64(*(float64x2_t *)(v35 + v58 + 32), *(float64x2_t *)(v28 + v58 + 32));
            v63[3] = v62;
            *unint64_t v63 = v61;
            v63[1] = v60;
            v58 += 64;
            v59 -= 2;
          }
          while (v59);
          unint64_t v39 = 4 * (v108 & 0x7FFFFFFE);
          if (v108 == (v108 & 0x7FFFFFFE)) {
            goto LABEL_26;
          }
        }
      }
      else
      {
        unint64_t v39 = 0;
      }
      uint64_t v40 = 8 * v39;
      unint64_t v41 = v34;
      unint64_t v42 = v28;
      unint64_t v43 = v35;
      do
      {
        double v44 = *(double *)(v43 + v40 + 8) * *(double *)(v42 + v40 + 8);
        unint64_t v45 = v41 + v40;
        *(double *)(v45 - 16) = *(double *)(v43 + v40) * *(double *)(v42 + v40);
        *(double *)(v45 - 8) = v44;
        double v46 = *(double *)(v43 + v40 + 24);
        double v47 = *(double *)(v42 + v40 + 24);
        *(double *)(v41 + v40) = *(double *)(v43 + v40 + 16) * *(double *)(v42 + v40 + 16);
        v39 += 4;
        *(double *)(v45 + 8) = v46 * v47;
        v43 += 32;
        v42 += 32;
        v41 += 32;
      }
      while (v39 <= v14);
LABEL_26:
      if ((int)v39 < a7)
      {
        unint64_t v48 = (v14 & 0xFFFFFFFC) + 4;
        if (v114 < 6) {
          goto LABEL_85;
        }
        unint64_t v49 = v112 + v36;
        unint64_t v48 = (v14 & 0xFFFFFFFC) + 4;
        if (v49 - (v110 + v37) < 0x20) {
          goto LABEL_85;
        }
        unint64_t v48 = (v14 & 0xFFFFFFFC) + 4;
        if (v49 - (v106 + v38) < 0x20) {
          goto LABEL_85;
        }
        uint64_t v50 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
        unint64_t v51 = v114 - v104;
        do
        {
          float64x2_t v52 = vmulq_f64(*(float64x2_t *)(v35 + v50 + 48), *(float64x2_t *)(v28 + v50 + 48));
          uint64_t v53 = (float64x2_t *)(v26 + v50);
          v53[2] = vmulq_f64(*(float64x2_t *)(v35 + v50 + 32), *(float64x2_t *)(v28 + v50 + 32));
          v53[3] = v52;
          v50 += 32;
          v51 -= 4;
        }
        while (v51);
        unint64_t v48 = (v14 & 0xFFFFFFFC) + 4 + v114 - v104;
        if (v104)
        {
LABEL_85:
          do
          {
            *(double *)(v26 + 8 * v48) = *(double *)(v35 + 8 * v48) * *(double *)(v28 + 8 * v48);
            ++v48;
          }
          while (v48 < a7);
        }
      }
      v35 += v31;
      v28 += v32;
      v26 += v33;
      unint64_t v13 = (result - 1);
      ++v24;
      v34 += v33;
      if (!result) {
        return result;
      }
    }
  }
  if (!a8) {
    return result;
  }
  unint64_t v19 = (a7 - 4);
  if (a7 >= 4)
  {
    uint64_t v64 = 0;
    uint64_t v65 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
    unint64_t v67 = a5;
    unint64_t v66 = a1;
    uint64_t v113 = v65 + a5 + 32;
    unint64_t v68 = a6 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v111 = v65 + a1 + 32;
    unint64_t v69 = a2 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v107 = v65 + a3 + 32;
    unint64_t v70 = a4 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v71 = (v19 & 0xFFFFFFFC) + 5;
    if (v71 <= a7) {
      unint64_t v71 = a7;
    }
    uint64_t v72 = 32 * (v19 >> 2) + 32;
    uint64_t v109 = (v19 >> 2) + 1;
    unint64_t v115 = v71 - (v19 & 0xFFFFFFFC) - 4;
    unint64_t v105 = v71 & 3;
    uint64_t v73 = 8 * v10;
    uint64_t v74 = 8 * v11;
    uint64_t v75 = 8 * result;
    unint64_t v76 = a5 + 16;
    unint64_t v77 = a3;
    while (1)
    {
      int v78 = v13;
      unint64_t v79 = v68 * v64;
      unint64_t v80 = v69 * v64;
      unint64_t v81 = v70 * v64;
      if (v19 >= 4)
      {
        unint64_t v82 = 0;
        unint64_t v83 = a5 + v72 + v79;
        BOOL v85 = v67 < a3 + v72 + v81 && v77 < v83;
        if ((v66 >= v83 || v67 >= a1 + v72 + v80) && !v85)
        {
          uint64_t v87 = 0;
          unint64_t result = v109 & 0x7FFFFFFE;
          do
          {
            int32x4_t v88 = (const double *)(v66 + v87);
            float64x2x4_t v119 = vld4q_f64(v88);
            float v89 = (const double *)(v77 + v87);
            float64x2x4_t v120 = vld4q_f64(v89);
            v121.val[0] = vmulq_f64(vmulq_n_f64(v119.val[0], v9), v120.val[0]);
            v121.val[1] = vmulq_f64(vmulq_n_f64(v119.val[1], v9), v120.val[1]);
            v121.val[2] = vmulq_f64(vmulq_n_f64(v119.val[2], v9), v120.val[2]);
            v121.val[3] = vmulq_f64(vmulq_n_f64(v119.val[3], v9), v120.val[3]);
            int v90 = (double *)(v67 + v87);
            vst4q_f64(v90, v121);
            v87 += 64;
            result -= 2;
          }
          while (result);
          unint64_t v82 = 4 * (v109 & 0x7FFFFFFE);
          if (v109 == (v109 & 0x7FFFFFFE)) {
            goto LABEL_74;
          }
        }
      }
      else
      {
        unint64_t v82 = 0;
      }
      uint64_t v91 = 8 * v82;
      unint64_t v92 = v76;
      unint64_t v93 = v77;
      unint64_t result = v66;
      do
      {
        double v94 = v9 * *(double *)(result + v91 + 8) * *(double *)(v93 + v91 + 8);
        unint64_t v95 = v92 + v91;
        *(double *)(v95 - 16) = v9 * *(double *)(result + v91) * *(double *)(v93 + v91);
        *(double *)(v95 - 8) = v94;
        double v96 = *(double *)(v93 + v91 + 24);
        double v97 = v9 * *(double *)(result + v91 + 24);
        *(double *)(v92 + v91) = v9 * *(double *)(result + v91 + 16) * *(double *)(v93 + v91 + 16);
        v82 += 4;
        *(double *)(v95 + 8) = v97 * v96;
        result += 32;
        v93 += 32;
        v92 += 32;
      }
      while (v82 <= v19);
LABEL_74:
      if ((int)v82 < a7)
      {
        unint64_t v98 = (v19 & 0xFFFFFFFC) + 4;
        unint64_t result = v115;
        if (v115 < 6) {
          goto LABEL_86;
        }
        unint64_t v99 = v113 + v79;
        unint64_t v98 = (v19 & 0xFFFFFFFC) + 4;
        if (v99 - (v111 + v80) < 0x20) {
          goto LABEL_86;
        }
        unint64_t v98 = (v19 & 0xFFFFFFFC) + 4;
        if (v99 - (v107 + v81) < 0x20) {
          goto LABEL_86;
        }
        uint64_t v100 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
        unint64_t v101 = v115 - v105;
        do
        {
          float64x2_t v102 = vmulq_f64(vmulq_n_f64(*(float64x2_t *)(v66 + v100 + 48), v9), *(float64x2_t *)(v77 + v100 + 48));
          unint64_t v103 = (float64x2_t *)(v67 + v100);
          _OWORD v103[2] = vmulq_f64(vmulq_n_f64(*(float64x2_t *)(v66 + v100 + 32), v9), *(float64x2_t *)(v77 + v100 + 32));
          v103[3] = v102;
          v100 += 32;
          v101 -= 4;
        }
        while (v101);
        unint64_t v98 = (v19 & 0xFFFFFFFC) + 4 + v115 - v105;
        if (v105)
        {
LABEL_86:
          do
          {
            *(double *)(v67 + 8 * v98) = v9 * *(double *)(v66 + 8 * v98) * *(double *)(v77 + 8 * v98);
            ++v98;
          }
          while (v98 < a7);
        }
      }
      v66 += v73;
      v77 += v74;
      v67 += v75;
      LODWORD(v13) = v78 - 1;
      ++v64;
      v76 += v75;
      if (!v78) {
        return result;
      }
    }
  }
  if (a7 >= 1)
  {
    uint64_t v20 = (double *)(a5 + 16);
    unint64_t v21 = (double *)(a3 + 16);
    uint64_t v22 = (double *)(a1 + 8);
    uint64_t v23 = 8 * v10;
    do
    {
      *(v20 - 2) = v9 * *(v22 - 1) * *(v21 - 2);
      if (a7 != 1)
      {
        *(v20 - 1) = v9 * *v22 * *(v21 - 1);
        if (a7 != 2) {
          *uint64_t v20 = v9 * v22[1] * *v21;
        }
      }
      v20 += result;
      v21 += v11;
      uint64_t v22 = (double *)((char *)v22 + v23);
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_1002285E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, double a9, double a10, double a11, double a12, double a13, __n128 a14, double *a15)
{
  int v15 = a8;
  double v21 = *a15;
  float v22 = *a15;
  if (result)
  {
    char v31 = 1;
    if (a8)
    {
      uint64_t v24 = result;
      do
      {
        unint64_t result = sub_10022C940(&v31, v24, a3, a5, a7, v21, a10, a11, a12, a13, a14);
        if ((int)result < a7)
        {
          uint64_t v26 = (int)result;
          do
          {
            int v27 = *(unsigned __int8 *)(a3 + v26);
            if (*(unsigned char *)(a3 + v26))
            {
              LOBYTE(v25) = *(unsigned char *)(v24 + v26);
              *(float *)&a10 = (float)v27;
              float v25 = rintf((float)(v22 * (float)LODWORD(v25)) / (float)v27);
              int v27 = (uint64_t)v25 & ~((int)(uint64_t)v25 >> 31);
              if (v27 >= 255) {
                LOBYTE(v27) = -1;
              }
            }
            *(unsigned char *)(a5 + v26++) = v27;
          }
          while (a7 != v26);
        }
        v24 += a2;
        a3 += a4;
        a5 += a6;
        --v15;
      }
      while (v15);
    }
  }
  else
  {
    char v32 = 1;
    if (a8)
    {
      do
      {
        unint64_t result = sub_10022CD14(&v32, a3, a5, a7, v21);
        if ((int)result < a7)
        {
          uint64_t v28 = (int)result;
          do
          {
            int v29 = *(unsigned __int8 *)(a3 + v28);
            if (*(unsigned char *)(a3 + v28))
            {
              float v30 = rintf(v22 / (float)v29);
              int v29 = (uint64_t)v30 & ~((int)(uint64_t)v30 >> 31);
              if (v29 >= 255) {
                LOBYTE(v29) = -1;
              }
            }
            *(unsigned char *)(a5 + v28++) = v29;
          }
          while (a7 != v28);
        }
        a3 += a4;
        a5 += a6;
        --v15;
      }
      while (v15);
    }
  }
  return result;
}

uint64_t sub_100228780(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, double a9, double a10, double a11, double a12, double a13, __n128 a14, double *a15)
{
  double v15 = *a15;
  char v29 = 1;
  if (a8)
  {
    int v16 = a8;
    uint64_t v22 = result;
    uint64_t v24 = a7;
    do
    {
      unint64_t result = sub_10022D08C(&v29, v22, a3, a5, a7, v15, a10, a11, a12, a13, a14);
      if ((int)result < a7)
      {
        uint64_t v26 = (int)result;
        do
        {
          LOBYTE(v27) = *(unsigned char *)(a3 + v26);
          if ((_BYTE)v27)
          {
            v25.i8[0] = *(unsigned char *)(v22 + v26);
            int8x8_t v25 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v25)).u64[0];
            *(float *)&a10 = (float)(char)v27;
            float v23 = v15;
            *(float *)v25.i32 = rintf((float)(v23 * (float)v25.i32[0]) / *(float *)&a10);
            uint64_t v27 = (uint64_t)*(float *)v25.i32;
            if ((int)(uint64_t)*(float *)v25.i32 <= -128) {
              LODWORD(v27) = -128;
            }
            if ((int)v27 >= 127) {
              LOBYTE(v27) = 127;
            }
          }
          *(unsigned char *)(a5 + v26++) = v27;
        }
        while (v24 != v26);
      }
      v22 += a2;
      a3 += a4;
      a5 += a6;
      --v16;
    }
    while (v16);
  }
  return result;
}

uint64_t sub_1002288AC(uint64_t result, unint64_t a2, int16x8_t *a3, unint64_t a4, int8x16_t *a5, unint64_t a6, int a7, int a8, double a9, double a10, double a11, double a12, __n128 a13, double *a14)
{
  double v14 = *a14;
  char v28 = 1;
  if (a8)
  {
    int v15 = a8;
    unint64_t v19 = (uint16x8_t *)result;
    uint64_t v21 = a7;
    uint64_t v22 = 2 * (a6 >> 1);
    uint64_t v23 = 2 * (a2 >> 1);
    uint64_t v24 = 2 * (a4 >> 1);
    do
    {
      unint64_t result = sub_10022D460(&v28, v19, a3, a5, a7, v14, a10, a11, a12, a13);
      if ((int)result < a7)
      {
        uint64_t v26 = (int)result;
        do
        {
          int v27 = a3->u16[v26];
          if (a3->i16[v26])
          {
            LOWORD(v25) = v19->i16[v26];
            *(float *)&a10 = (float)v27;
            float v20 = v14;
            float v25 = rintf((float)(v20 * (float)LODWORD(v25)) / (float)v27);
            int v27 = (uint64_t)v25 & ~((int)(uint64_t)v25 >> 31);
            if (v27 >= 0xFFFF) {
              LOWORD(v27) = -1;
            }
          }
          a5->i16[v26++] = v27;
        }
        while (v21 != v26);
      }
      unint64_t v19 = (uint16x8_t *)((char *)v19 + v23);
      a3 = (int16x8_t *)((char *)a3 + v24);
      a5 = (int8x16_t *)((char *)a5 + v22);
      --v15;
    }
    while (v15);
  }
  return result;
}

uint64_t sub_1002289CC(uint64_t result, unint64_t a2, int16x8_t *a3, unint64_t a4, int8x16_t *a5, unint64_t a6, int a7, int a8, double a9, double a10, double a11, double a12, __n128 a13, double *a14)
{
  double v14 = *a14;
  char v28 = 1;
  if (a8)
  {
    int v15 = a8;
    unint64_t v19 = (int16x8_t *)result;
    uint64_t v20 = a7;
    uint64_t v27 = 2 * (a6 >> 1);
    uint64_t v22 = 2 * (a2 >> 1);
    uint64_t v23 = 2 * (a4 >> 1);
    do
    {
      unint64_t result = sub_10022D7DC(&v28, v19, a3, a5, a7, v14, a10, a11, a12, a13);
      if ((int)result < a7)
      {
        uint64_t v25 = (int)result;
        do
        {
          LOWORD(v26) = a3->i16[v25];
          if ((_WORD)v26)
          {
            v24.i16[0] = v19->i16[v25];
            int16x4_t v24 = (int16x4_t)vmovl_s16(v24).u64[0];
            *(float *)&a10 = (float)(__int16)v26;
            float v21 = v14;
            *(float *)v24.i32 = rintf((float)(v21 * (float)v24.i32[0]) / *(float *)&a10);
            uint64_t v26 = (uint64_t)*(float *)v24.i32;
            if ((int)(uint64_t)*(float *)v24.i32 <= -32768) {
              LODWORD(v26) = -32768;
            }
            if ((int)v26 >= 0x7FFF) {
              LOWORD(v26) = 0x7FFF;
            }
          }
          a5->i16[v25++] = v26;
        }
        while (v20 != v25);
      }
      unint64_t v19 = (int16x8_t *)((char *)v19 + v22);
      a3 = (int16x8_t *)((char *)a3 + v23);
      a5 = (int8x16_t *)((char *)a5 + v27);
      --v15;
    }
    while (v15);
  }
  return result;
}

uint64_t sub_100228B04(uint64_t result, unint64_t a2, int32x4_t *a3, unint64_t a4, int8x16_t *a5, unint64_t a6, int a7, int a8, double a9, double a10, double a11, double a12, __n128 a13, double *a14)
{
  double v14 = *a14;
  char v27 = 1;
  if (a8)
  {
    int v15 = a8;
    unint64_t v19 = (int32x4_t *)result;
    uint64_t v21 = a7;
    uint64_t v22 = 4 * (a6 >> 2);
    uint64_t v23 = 4 * (a2 >> 2);
    uint64_t v24 = 4 * (a4 >> 2);
    do
    {
      unint64_t result = sub_10022DB58(&v27, v19, a3, a5, a7, v14, a10, a11, a12, a13);
      if ((int)result < a7)
      {
        uint64_t v25 = (int)result;
        do
        {
          LODWORD(v26) = a3->i32[v25];
          if (v26)
          {
            *(float *)&a10 = (float)(int)v26;
            float v20 = v14;
            uint64_t v26 = (uint64_t)rintf((float)(v20 * (float)v19->i32[v25]) / (float)(int)v26);
          }
          a5->i32[v25++] = v26;
        }
        while (v21 != v25);
      }
      unint64_t v19 = (int32x4_t *)((char *)v19 + v23);
      a3 = (int32x4_t *)((char *)a3 + v24);
      a5 = (int8x16_t *)((char *)a5 + v22);
      --v15;
    }
    while (v15);
  }
  return result;
}

uint64_t sub_100228C14(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, int a7, int a8, double *a9)
{
  if (a8)
  {
    unint64_t v9 = a2 >> 2;
    float v10 = *a9;
    unint64_t v11 = a4 >> 2;
    unint64_t v12 = a6 >> 2;
    unint64_t v13 = (a7 - 8);
    if (a7 >= 8)
    {
      int v19 = a8 - 1;
      uint64_t v20 = 4 * v9;
      uint64_t v21 = 4 * v12;
      uint64_t v22 = 4 * v11;
      do
      {
        uint64_t v23 = 0;
        unint64_t v24 = 0;
        int v25 = v19;
        do
        {
          int8x16_t v26 = vbicq_s8((int8x16_t)vdivq_f32(vmulq_n_f32(*(float32x4_t *)(result + v23 + 16), v10), *(float32x4_t *)(a3 + v23 + 16)), (int8x16_t)vceqzq_f32(*(float32x4_t *)(a3 + v23 + 16)));
          char v27 = (int8x16_t *)(a5 + v23);
          *char v27 = vbicq_s8((int8x16_t)vdivq_f32(vmulq_n_f32(*(float32x4_t *)(result + v23), v10), *(float32x4_t *)(a3 + v23)), (int8x16_t)vceqzq_f32(*(float32x4_t *)(a3 + v23)));
          v27[1] = v26;
          v24 += 8;
          v23 += 32;
        }
        while (v24 <= v13);
        if ((int)v24 < a7)
        {
          uint64_t v28 = (int)((v13 & 0xFFFFFFF8) + 8);
          do
          {
            while (1)
            {
              float v29 = *(float *)(a3 + 4 * v28);
              if (v29 == 0.0) {
                break;
              }
              *(float *)(a5 + 4 * v28) = (float)(*(float *)(result + 4 * v28) * v10) / v29;
              if (++v28 >= a7) {
                goto LABEL_6;
              }
            }
            *(_DWORD *)(a5 + 4 * v28++) = 0;
          }
          while (v28 < a7);
        }
LABEL_6:
        int v19 = v25 - 1;
        result += v20;
        a5 += v21;
        a3 += v22;
      }
      while (v25);
    }
    else if (a7 >= 1)
    {
      double v14 = (float *)(a3 + 12);
      uint64_t v15 = a5 + 12;
      uint64_t v16 = 4 * v12;
      unint64_t v17 = (float *)(result + 12);
      uint64_t v18 = 4 * v9;
      do
      {
        float v31 = *(v14 - 3);
        if (v31 == 0.0)
        {
          *(_DWORD *)(v15 - 12) = 0;
          if (a7 == 1) {
            goto LABEL_17;
          }
        }
        else
        {
          *(float *)(v15 - 12) = (float)(*(v17 - 3) * v10) / v31;
          if (a7 == 1) {
            goto LABEL_17;
          }
        }
        float v32 = *(v14 - 2);
        if (v32 == 0.0)
        {
          *(_DWORD *)(v15 - 8) = 0;
          if (a7 == 2) {
            goto LABEL_17;
          }
        }
        else
        {
          *(float *)(v15 - 8) = (float)(*(v17 - 2) * v10) / v32;
          if (a7 == 2) {
            goto LABEL_17;
          }
        }
        float v33 = *(v14 - 1);
        if (v33 == 0.0)
        {
          *(_DWORD *)(v15 - 4) = 0;
          if (a7 == 3) {
            goto LABEL_17;
          }
        }
        else
        {
          *(float *)(v15 - 4) = (float)(*(v17 - 1) * v10) / v33;
          if (a7 == 3) {
            goto LABEL_17;
          }
        }
        if (*v14 == 0.0)
        {
          *(_DWORD *)uint64_t v15 = 0;
          if (a7 == 4) {
            goto LABEL_17;
          }
        }
        else
        {
          *(float *)uint64_t v15 = (float)(*v17 * v10) / *v14;
          if (a7 == 4) {
            goto LABEL_17;
          }
        }
        float v34 = v14[1];
        if (v34 == 0.0)
        {
          *(_DWORD *)(v15 + 4) = 0;
          if (a7 == 5) {
            goto LABEL_17;
          }
        }
        else
        {
          *(float *)(v15 + 4) = (float)(v17[1] * v10) / v34;
          if (a7 == 5) {
            goto LABEL_17;
          }
        }
        float v35 = v14[2];
        if (v35 == 0.0)
        {
          *(_DWORD *)(v15 + 8) = 0;
          if (a7 != 6)
          {
LABEL_42:
            float v36 = v14[3];
            if (v36 == 0.0) {
              float v30 = 0.0;
            }
            else {
              float v30 = (float)(v17[3] * v10) / v36;
            }
            *(float *)(v15 + 12) = v30;
          }
        }
        else
        {
          *(float *)(v15 + 8) = (float)(v17[2] * v10) / v35;
          if (a7 != 6) {
            goto LABEL_42;
          }
        }
LABEL_17:
        v14 += v11;
        v15 += v16;
        unint64_t v17 = (float *)((char *)v17 + v18);
        --a8;
      }
      while (a8);
    }
  }
  return result;
}

uint64_t sub_100228EC4(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, int a7, int a8, double *a9)
{
  if (a8)
  {
    unint64_t v9 = a2 >> 3;
    double v10 = *a9;
    unint64_t v11 = a4 >> 3;
    unint64_t v12 = a6 >> 3;
    unint64_t v13 = (a7 - 4);
    if (a7 >= 4)
    {
      int v22 = a8 - 1;
      uint64_t v23 = 8 * v9;
      uint64_t v24 = 8 * v12;
      uint64_t v25 = 8 * v11;
      do
      {
        uint64_t v26 = 0;
        unint64_t v27 = 0;
        int v28 = v22;
        do
        {
          int8x16_t v29 = vbicq_s8((int8x16_t)vdivq_f64(vmulq_n_f64(*(float64x2_t *)(result + v26 + 16), v10), *(float64x2_t *)(a3 + v26 + 16)), (int8x16_t)vceqzq_f64(*(float64x2_t *)(a3 + v26 + 16)));
          float v30 = (int8x16_t *)(a5 + v26);
          *float v30 = vbicq_s8((int8x16_t)vdivq_f64(vmulq_n_f64(*(float64x2_t *)(result + v26), v10), *(float64x2_t *)(a3 + v26)), (int8x16_t)vceqzq_f64(*(float64x2_t *)(a3 + v26)));
          v30[1] = v29;
          v27 += 4;
          v26 += 32;
        }
        while (v27 <= v13);
        if ((int)v27 < a7)
        {
          uint64_t v31 = (int)((v13 & 0xFFFFFFFC) + 4);
          do
          {
            while (1)
            {
              double v32 = *(double *)(a3 + 8 * v31);
              if (v32 == 0.0) {
                break;
              }
              *(double *)(a5 + 8 * v31) = v10 * *(double *)(result + 8 * v31) / v32;
              if (++v31 >= a7) {
                goto LABEL_19;
              }
            }
            *(void *)(a5 + 8 * v31++) = 0;
          }
          while (v31 < a7);
        }
LABEL_19:
        int v22 = v28 - 1;
        result += v23;
        a5 += v24;
        a3 += v25;
      }
      while (v28);
    }
    else if (a7 >= 1)
    {
      double v14 = (double *)(a3 + 16);
      uint64_t v15 = (double *)(a5 + 16);
      uint64_t v16 = 8 * v12;
      unint64_t v17 = (double *)(result + 8);
      uint64_t v18 = 8 * v9;
      do
      {
        double v20 = *(v14 - 2);
        if (v20 == 0.0)
        {
          *(v15 - 2) = 0.0;
          if (a7 == 1) {
            goto LABEL_7;
          }
        }
        else
        {
          *(v15 - 2) = v10 * *(v17 - 1) / v20;
          if (a7 == 1) {
            goto LABEL_7;
          }
        }
        double v21 = *(v14 - 1);
        if (v21 == 0.0)
        {
          *(v15 - 1) = 0.0;
          if (a7 != 2)
          {
LABEL_16:
            if (*v14 == 0.0) {
              double v19 = 0.0;
            }
            else {
              double v19 = v10 * v17[1] / *v14;
            }
            *uint64_t v15 = v19;
          }
        }
        else
        {
          *(v15 - 1) = v10 * *v17 / v21;
          if (a7 != 2) {
            goto LABEL_16;
          }
        }
LABEL_7:
        v14 += v11;
        uint64_t v15 = (double *)((char *)v15 + v16);
        unint64_t v17 = (double *)((char *)v17 + v18);
        --a8;
      }
      while (a8);
    }
  }
  return result;
}

void sub_100229090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, double *a9)
{
  double v9 = *a9;
  char v22 = 1;
  if (a8)
  {
    int v10 = a8;
    uint64_t v17 = a7;
    do
    {
      int v18 = sub_10022CD14(&v22, a3, a5, a7, v9);
      if (v18 < a7)
      {
        uint64_t v19 = v18;
        do
        {
          int v20 = *(unsigned __int8 *)(a3 + v19);
          if (*(unsigned char *)(a3 + v19))
          {
            float v16 = v9;
            float v21 = rintf(v16 / (float)v20);
            int v20 = (uint64_t)v21 & ~((int)(uint64_t)v21 >> 31);
            if (v20 >= 255) {
              LOBYTE(v20) = -1;
            }
          }
          *(unsigned char *)(a5 + v19++) = v20;
        }
        while (v17 != v19);
      }
      a3 += a4;
      a5 += a6;
      --v10;
    }
    while (v10);
  }
}

void sub_100229180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, double *a9)
{
  double v9 = *a9;
  char v21 = 1;
  if (a8)
  {
    int v10 = a8;
    uint64_t v17 = a7;
    do
    {
      int v18 = sub_10022DF04(&v21, a3, a5, a7, v9);
      if (v18 < a7)
      {
        uint64_t v19 = v18;
        do
        {
          LOBYTE(v20) = *(unsigned char *)(a3 + v19);
          if ((_BYTE)v20)
          {
            float v16 = v9;
            uint64_t v20 = (uint64_t)rintf(v16 / (float)(char)v20);
            if ((int)v20 <= -128) {
              LODWORD(v20) = -128;
            }
            if ((int)v20 >= 127) {
              LOBYTE(v20) = 127;
            }
          }
          *(unsigned char *)(a5 + v19++) = v20;
        }
        while (v17 != v19);
      }
      a3 += a4;
      a5 += a6;
      --v10;
    }
    while (v10);
  }
}

void sub_100229284(uint64_t a1, uint64_t a2, int16x8_t *a3, unint64_t a4, int8x16_t *a5, unint64_t a6, int a7, int a8, double *a9)
{
  double v9 = *a9;
  char v22 = 1;
  if (a8)
  {
    int v10 = a8;
    uint64_t v15 = a7;
    uint64_t v16 = 2 * (a6 >> 1);
    uint64_t v17 = 2 * (a4 >> 1);
    do
    {
      int v18 = sub_10022E27C(&v22, a3, a5, a7, v9);
      if (v18 < a7)
      {
        uint64_t v19 = v18;
        do
        {
          int v20 = a3->u16[v19];
          if (a3->i16[v19])
          {
            float v14 = v9;
            float v21 = rintf(v14 / (float)v20);
            int v20 = (uint64_t)v21 & ~((int)(uint64_t)v21 >> 31);
            if (v20 >= 0xFFFF) {
              LOWORD(v20) = -1;
            }
          }
          a5->i16[v19++] = v20;
        }
        while (v15 != v19);
      }
      a3 = (int16x8_t *)((char *)a3 + v17);
      a5 = (int8x16_t *)((char *)a5 + v16);
      --v10;
    }
    while (v10);
  }
}

void sub_10022937C(uint64_t a1, uint64_t a2, int16x8_t *a3, unint64_t a4, int8x16_t *a5, unint64_t a6, int a7, int a8, double *a9)
{
  double v9 = *a9;
  char v21 = 1;
  if (a8)
  {
    int v10 = a8;
    uint64_t v14 = a7;
    uint64_t v16 = 2 * (a6 >> 1);
    uint64_t v17 = 2 * (a4 >> 1);
    do
    {
      int v18 = sub_10022E57C(&v21, a3, a5, a7, v9);
      if (v18 < a7)
      {
        uint64_t v19 = v18;
        do
        {
          LOWORD(v20) = a3->i16[v19];
          if ((_WORD)v20)
          {
            float v15 = v9;
            uint64_t v20 = (uint64_t)rintf(v15 / (float)(__int16)v20);
            if ((int)v20 <= -32768) {
              LODWORD(v20) = -32768;
            }
            if ((int)v20 >= 0x7FFF) {
              LOWORD(v20) = 0x7FFF;
            }
          }
          a5->i16[v19++] = v20;
        }
        while (v14 != v19);
      }
      a3 = (int16x8_t *)((char *)a3 + v17);
      a5 = (int8x16_t *)((char *)a5 + v16);
      --v10;
    }
    while (v10);
  }
}

void sub_100229488(uint64_t a1, uint64_t a2, int32x4_t *a3, unint64_t a4, int8x16_t *a5, unint64_t a6, int a7, int a8, double *a9)
{
  double v9 = *a9;
  char v21 = 1;
  if (a8)
  {
    int v10 = a8;
    uint64_t v15 = a7;
    uint64_t v16 = 4 * (a6 >> 2);
    uint64_t v17 = 4 * (a4 >> 2);
    do
    {
      int v18 = sub_10022E87C(&v21, a3, a5, a7, v9);
      if (v18 < a7)
      {
        uint64_t v19 = v18;
        do
        {
          LODWORD(v20) = a3->i32[v19];
          if (v20)
          {
            float v14 = v9;
            uint64_t v20 = (uint64_t)rintf(v14 / (float)(int)v20);
          }
          a5->i32[v19++] = v20;
        }
        while (v15 != v19);
      }
      a3 = (int32x4_t *)((char *)a3 + v17);
      a5 = (int8x16_t *)((char *)a5 + v16);
      --v10;
    }
    while (v10);
  }
}

void sub_100229570(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, int a7, int a8, int32x2_t *a9)
{
  if (a8)
  {
    int32x2_t v9 = *a9;
    *(float *)v9.i32 = *(double *)a9->i32;
    unint64_t v10 = a4 >> 2;
    unint64_t v11 = a6 >> 2;
    unint64_t v12 = (a7 - 8);
    if (a7 >= 8)
    {
      int v28 = a8 - 1;
      float32x4_t v29 = (float32x4_t)vdupq_lane_s32(v9, 0);
      uint64_t v30 = (v12 & 0xFFFFFFF8) + 8;
      if ((v30 | 1) <= a7) {
        uint64_t v31 = a7;
      }
      else {
        uint64_t v31 = v30 | 1;
      }
      uint64_t v32 = v31 - v30;
      if ((unint64_t)(v31 - v30) >= 8)
      {
        uint64_t v41 = 0;
        uint64_t v42 = 4 * ((v12 & 0xFFFFFFF8) + 8);
        uint64_t v43 = v42 + a5;
        unint64_t v44 = a6 & 0xFFFFFFFFFFFFFFFCLL;
        uint64_t v45 = v42 + a3;
        unint64_t v46 = a4 & 0xFFFFFFFFFFFFFFFCLL;
        uint64_t v47 = v31 & 7;
        uint64_t v48 = v32 - v47;
        float32x4_t v49 = (float32x4_t)vdupq_lane_s32(v9, 0);
        uint64_t v50 = 4 * v11;
        uint64_t v51 = 4 * v10;
        do
        {
          uint64_t v52 = 0;
          unint64_t v53 = 0;
          int v54 = v28;
          do
          {
            int8x16_t v55 = vbicq_s8((int8x16_t)vdivq_f32(v29, *(float32x4_t *)(a3 + v52 + 16)), (int8x16_t)vceqzq_f32(*(float32x4_t *)(a3 + v52 + 16)));
            BOOL v56 = (int8x16_t *)(a5 + v52);
            int8x16_t *v56 = vbicq_s8((int8x16_t)vdivq_f32(v29, *(float32x4_t *)(a3 + v52)), (int8x16_t)vceqzq_f32(*(float32x4_t *)(a3 + v52)));
            v56[1] = v55;
            v53 += 8;
            v52 += 32;
          }
          while (v53 <= v12);
          if ((int)v53 < a7)
          {
            uint64_t v57 = (v12 & 0xFFFFFFF8) + 8;
            if (v43 + v44 * v41 - (v45 + v46 * v41) < 0x20) {
              goto LABEL_65;
            }
            uint64_t v58 = 4 * ((v12 & 0xFFFFFFF8) + 8);
            uint64_t v59 = v48;
            do
            {
              int8x16_t v60 = vbicq_s8((int8x16_t)vdivq_f32(v49, *(float32x4_t *)(a3 + v58 + 16)), (int8x16_t)vceqzq_f32(*(float32x4_t *)(a3 + v58 + 16)));
              float64x2_t v61 = (int8x16_t *)(a5 + v58);
              int8x16_t *v61 = vbicq_s8((int8x16_t)vdivq_f32(v49, *(float32x4_t *)(a3 + v58)), (int8x16_t)vceqzq_f32(*(float32x4_t *)(a3 + v58)));
              v61[1] = v60;
              v58 += 32;
              v59 -= 8;
            }
            while (v59);
            uint64_t v57 = v48 + v30;
            if (v47)
            {
LABEL_65:
              do
              {
                float v62 = *(float *)(a3 + 4 * v57);
                if (v62 == 0.0) {
                  float v63 = 0.0;
                }
                else {
                  float v63 = *(float *)v9.i32 / v62;
                }
                *(float *)(a5 + 4 * v57++) = v63;
              }
              while (v57 < a7);
            }
          }
          int v28 = v54 - 1;
          ++v41;
          a5 += v50;
          a3 += v51;
        }
        while (v54);
      }
      else
      {
        do
        {
          uint64_t v33 = 0;
          unint64_t v34 = 0;
          int v35 = v28;
          do
          {
            int8x16_t v36 = vbicq_s8((int8x16_t)vdivq_f32(v29, *(float32x4_t *)(a3 + v33 + 16)), (int8x16_t)vceqzq_f32(*(float32x4_t *)(a3 + v33 + 16)));
            unint64_t v37 = (int8x16_t *)(a5 + v33);
            *unint64_t v37 = vbicq_s8((int8x16_t)vdivq_f32(v29, *(float32x4_t *)(a3 + v33)), (int8x16_t)vceqzq_f32(*(float32x4_t *)(a3 + v33)));
            v37[1] = v36;
            v34 += 8;
            v33 += 32;
          }
          while (v34 <= v12);
          if ((int)v34 < a7)
          {
            unint64_t v38 = (v12 & 0xFFFFFFF8) + 8;
            do
            {
              float v39 = *(float *)(a3 + 4 * v38);
              if (v39 == 0.0) {
                float v40 = 0.0;
              }
              else {
                float v40 = *(float *)v9.i32 / v39;
              }
              *(float *)(a5 + 4 * v38++) = v40;
            }
            while (v38 < a7);
          }
          --v28;
          a5 += 4 * v11;
          a3 += 4 * v10;
        }
        while (v35);
      }
    }
    else if (a7 >= 1)
    {
      unint64_t v13 = (float *)(a5 + 12);
      float v14 = (float *)(a3 + 12);
      do
      {
        float v15 = *(v14 - 3);
        if (v15 == 0.0) {
          float v16 = 0.0;
        }
        else {
          float v16 = *(float *)v9.i32 / v15;
        }
        *(v13 - 3) = v16;
        if (a7 != 1)
        {
          float v17 = *(v14 - 2);
          float v18 = v17 == 0.0 ? 0.0 : *(float *)v9.i32 / v17;
          *(v13 - 2) = v18;
          if (a7 != 2)
          {
            float v19 = *(v14 - 1);
            float v20 = v19 == 0.0 ? 0.0 : *(float *)v9.i32 / v19;
            *(v13 - 1) = v20;
            if (a7 != 3)
            {
              float v21 = *v14 == 0.0 ? 0.0 : *(float *)v9.i32 / *v14;
              *unint64_t v13 = v21;
              if (a7 != 4)
              {
                float v22 = v14[1];
                float v23 = v22 == 0.0 ? 0.0 : *(float *)v9.i32 / v22;
                v13[1] = v23;
                if (a7 != 5)
                {
                  float v24 = v14[2];
                  float v25 = v24 == 0.0 ? 0.0 : *(float *)v9.i32 / v24;
                  _OWORD v13[2] = v25;
                  if (a7 != 6)
                  {
                    float v26 = v14[3];
                    if (v26 == 0.0) {
                      float v27 = 0.0;
                    }
                    else {
                      float v27 = *(float *)v9.i32 / v26;
                    }
                    v13[3] = v27;
                  }
                }
              }
            }
          }
        }
        v13 += v11;
        v14 += v10;
        --a8;
      }
      while (a8);
    }
  }
}

void sub_10022987C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, int a7, int a8, double *a9)
{
  if (a8)
  {
    uint64_t v9 = *(uint64_t *)a9;
    unint64_t v10 = a4 >> 3;
    unint64_t v11 = a6 >> 3;
    unint64_t v12 = (a7 - 4);
    if (a7 >= 4)
    {
      int v20 = a8 - 1;
      float64x2_t v21 = (float64x2_t)vdupq_lane_s64(v9, 0);
      uint64_t v22 = (v12 & 0xFFFFFFFC) + 4;
      if ((v22 | 1) <= a7) {
        uint64_t v23 = a7;
      }
      else {
        uint64_t v23 = v22 | 1;
      }
      uint64_t v24 = v23 - v22;
      if ((unint64_t)(v23 - v22) >= 4)
      {
        uint64_t v33 = 0;
        uint64_t v34 = 8 * ((v12 & 0xFFFFFFFC) + 4);
        uint64_t v35 = v34 + a5;
        unint64_t v36 = a6 & 0xFFFFFFFFFFFFFFF8;
        uint64_t v37 = v34 + a3;
        unint64_t v38 = a4 & 0xFFFFFFFFFFFFFFF8;
        uint64_t v39 = v23 & 3;
        uint64_t v40 = v24 - v39;
        float64x2_t v41 = (float64x2_t)vdupq_lane_s64(v9, 0);
        uint64_t v42 = 8 * v11;
        uint64_t v43 = 8 * v10;
        do
        {
          uint64_t v44 = 0;
          unint64_t v45 = 0;
          int v46 = v20;
          do
          {
            int8x16_t v47 = vbicq_s8((int8x16_t)vdivq_f64(v21, *(float64x2_t *)(a3 + v44 + 16)), (int8x16_t)vceqzq_f64(*(float64x2_t *)(a3 + v44 + 16)));
            uint64_t v48 = (int8x16_t *)(a5 + v44);
            int8x16_t *v48 = vbicq_s8((int8x16_t)vdivq_f64(v21, *(float64x2_t *)(a3 + v44)), (int8x16_t)vceqzq_f64(*(float64x2_t *)(a3 + v44)));
            v48[1] = v47;
            v45 += 4;
            v44 += 32;
          }
          while (v45 <= v12);
          if ((int)v45 < a7)
          {
            uint64_t v49 = (v12 & 0xFFFFFFFC) + 4;
            if (v35 + v36 * v33 - (v37 + v38 * v33) < 0x20) {
              goto LABEL_49;
            }
            uint64_t v50 = 8 * ((v12 & 0xFFFFFFFC) + 4);
            uint64_t v51 = v40;
            do
            {
              int8x16_t v52 = vbicq_s8((int8x16_t)vdivq_f64(v41, *(float64x2_t *)(a3 + v50 + 16)), (int8x16_t)vceqzq_f64(*(float64x2_t *)(a3 + v50 + 16)));
              unint64_t v53 = (int8x16_t *)(a5 + v50);
              *unint64_t v53 = vbicq_s8((int8x16_t)vdivq_f64(v41, *(float64x2_t *)(a3 + v50)), (int8x16_t)vceqzq_f64(*(float64x2_t *)(a3 + v50)));
              v53[1] = v52;
              v50 += 32;
              v51 -= 4;
            }
            while (v51);
            uint64_t v49 = v40 + v22;
            if (v39)
            {
LABEL_49:
              do
              {
                double v54 = *(double *)(a3 + 8 * v49);
                if (v54 == 0.0) {
                  double v55 = 0.0;
                }
                else {
                  double v55 = *(double *)&v9 / v54;
                }
                *(double *)(a5 + 8 * v49++) = v55;
              }
              while (v49 < a7);
            }
          }
          int v20 = v46 - 1;
          ++v33;
          a5 += v42;
          a3 += v43;
        }
        while (v46);
      }
      else
      {
        do
        {
          uint64_t v25 = 0;
          unint64_t v26 = 0;
          int v27 = v20;
          do
          {
            int8x16_t v28 = vbicq_s8((int8x16_t)vdivq_f64(v21, *(float64x2_t *)(a3 + v25 + 16)), (int8x16_t)vceqzq_f64(*(float64x2_t *)(a3 + v25 + 16)));
            float32x4_t v29 = (int8x16_t *)(a5 + v25);
            *float32x4_t v29 = vbicq_s8((int8x16_t)vdivq_f64(v21, *(float64x2_t *)(a3 + v25)), (int8x16_t)vceqzq_f64(*(float64x2_t *)(a3 + v25)));
            v29[1] = v28;
            v26 += 4;
            v25 += 32;
          }
          while (v26 <= v12);
          if ((int)v26 < a7)
          {
            unint64_t v30 = (v12 & 0xFFFFFFFC) + 4;
            do
            {
              double v31 = *(double *)(a3 + 8 * v30);
              if (v31 == 0.0) {
                double v32 = 0.0;
              }
              else {
                double v32 = *(double *)&v9 / v31;
              }
              *(double *)(a5 + 8 * v30++) = v32;
            }
            while (v30 < a7);
          }
          --v20;
          a5 += 8 * v11;
          a3 += 8 * v10;
        }
        while (v27);
      }
    }
    else if (a7 >= 1)
    {
      unint64_t v13 = (double *)(a3 + 16);
      float v14 = (double *)(a5 + 16);
      do
      {
        double v15 = *(v13 - 2);
        if (v15 == 0.0) {
          double v16 = 0.0;
        }
        else {
          double v16 = *(double *)&v9 / v15;
        }
        *(v14 - 2) = v16;
        if (a7 != 1)
        {
          double v17 = *(v13 - 1);
          double v18 = v17 == 0.0 ? 0.0 : *(double *)&v9 / v17;
          *(v14 - 1) = v18;
          if (a7 != 2)
          {
            if (*v13 == 0.0) {
              double v19 = 0.0;
            }
            else {
              double v19 = *(double *)&v9 / *v13;
            }
            *float v14 = v19;
          }
        }
        v13 += v10;
        v14 += v11;
        --a8;
      }
      while (a8);
    }
  }
}

void sub_100229B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, double a9, double a10, double a11, double a12, __n128 a13, __n128 a14, __n128 a15, double *a16)
{
  if (a8)
  {
    a13.n128_f32[0] = *a16;
    a14.n128_f32[0] = a16[1];
    a15.n128_f32[0] = a16[2];
    float32x4_t v20 = (float32x4_t)vdupq_lane_s32((int32x2_t)a15.n128_u64[0], 0);
    int v21 = a7 - 8;
    int v22 = a7 - 4;
    uint64_t v23 = (int8x16_t *)&unk_1004D2000;
    while (a7 < 8)
    {
      uint64_t v24 = 0;
      if (v22 >= 0) {
        goto LABEL_23;
      }
LABEL_33:
      if ((int)v24 < a7)
      {
        uint64_t v55 = 0;
        do
        {
          float v56 = rintf((float)((float)(flt_100406364[*(unsigned __int8 *)(a3 + v24 + v55) + 128] * a14.n128_f32[0])+ (float)(flt_100406364[*(unsigned __int8 *)(a1 + v24 + v55) + 128] * a13.n128_f32[0]))+ a15.n128_f32[0]);
          int v57 = (uint64_t)v56 & ~((int)(uint64_t)v56 >> 31);
          if (v57 >= 255) {
            LOBYTE(v57) = -1;
          }
          *(unsigned char *)(a5 + v24 + v55++) = v57;
        }
        while ((int)v24 + (int)v55 < a7);
      }
      a1 += a2;
      a3 += a4;
      a5 += a6;
      if (!--a8) {
        return;
      }
    }
    uint64_t v25 = 0;
    do
    {
      uint8x8_t v26 = *(uint8x8_t *)(a1 + v25);
      uint8x8_t v27 = *(uint8x8_t *)(a3 + v25);
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
      {
        int v94 = a8;
        uint64_t v90 = a6;
        uint64_t v82 = a2;
        uint64_t v86 = a4;
        __n128 v74 = a14;
        __n128 v78 = a13;
        float32x4_t v66 = v20;
        __n128 v70 = a15;
        int v62 = v21;
        int v34 = __cxa_guard_acquire(qword_1004D2D60);
        *(void *)&long long v35 = 0x8000000080000000;
        *((void *)&v35 + 1) = 0x8000000080000000;
        uint64_t v23 = (int8x16_t *)&unk_1004D2000;
        int v21 = v62;
        float32x4_t v20 = v66;
        a15 = v70;
        a14 = v74;
        a13 = v78;
        a2 = v82;
        a4 = v86;
        a6 = v90;
        a8 = v94;
        if (v34)
        {
          xmmword_1004D2D50 = v35;
          __cxa_guard_release(qword_1004D2D60);
          uint64_t v23 = (int8x16_t *)&unk_1004D2000;
          int v21 = v62;
          float32x4_t v20 = v66;
          a15 = v70;
          a14 = v74;
          a13 = v78;
          a2 = v82;
          a4 = v86;
          a6 = v90;
          a8 = v94;
        }
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
      {
        int v95 = a8;
        uint64_t v91 = a6;
        uint64_t v83 = a2;
        uint64_t v87 = a4;
        __n128 v75 = a14;
        __n128 v79 = a13;
        float32x4_t v67 = v20;
        __n128 v71 = a15;
        int v63 = v21;
        int v36 = __cxa_guard_acquire(qword_1004D2D80);
        *(void *)&long long v37 = 0x3F0000003F000000;
        *((void *)&v37 + 1) = 0x3F0000003F000000;
        uint64_t v23 = (int8x16_t *)&unk_1004D2000;
        int v21 = v63;
        float32x4_t v20 = v67;
        a15 = v71;
        a14 = v75;
        a13 = v79;
        a2 = v83;
        a4 = v87;
        a6 = v91;
        a8 = v95;
        if (v36)
        {
          xmmword_1004D2D70 = v37;
          __cxa_guard_release(qword_1004D2D80);
          uint64_t v23 = (int8x16_t *)&unk_1004D2000;
          int v21 = v63;
          float32x4_t v20 = v67;
          a15 = v71;
          a14 = v75;
          a13 = v79;
          a2 = v83;
          a4 = v87;
          a6 = v91;
          a8 = v95;
        }
      }
      int8x16_t v28 = (int8x16_t)xmmword_1004D2D70;
      int8x16_t v29 = v23[213];
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
      {
        int v96 = a8;
        uint64_t v92 = a6;
        uint64_t v84 = a2;
        uint64_t v88 = a4;
        __n128 v76 = a14;
        __n128 v80 = a13;
        float32x4_t v68 = v20;
        __n128 v72 = a15;
        int v64 = v21;
        int8x16_t v58 = v29;
        int8x16_t v60 = v28;
        int v38 = __cxa_guard_acquire(qword_1004D2D60);
        int8x16_t v29 = v58;
        int8x16_t v28 = v60;
        *(void *)&long long v39 = 0x8000000080000000;
        *((void *)&v39 + 1) = 0x8000000080000000;
        uint64_t v23 = (int8x16_t *)&unk_1004D2000;
        int v21 = v64;
        float32x4_t v20 = v68;
        a15 = v72;
        a14 = v76;
        a13 = v80;
        a2 = v84;
        a4 = v88;
        a6 = v92;
        a8 = v96;
        if (v38)
        {
          xmmword_1004D2D50 = v39;
          __cxa_guard_release(qword_1004D2D60);
          int8x16_t v29 = v58;
          int8x16_t v28 = v60;
          uint64_t v23 = (int8x16_t *)&unk_1004D2000;
          int v21 = v64;
          float32x4_t v20 = v68;
          a15 = v72;
          a14 = v76;
          a13 = v80;
          a2 = v84;
          a4 = v88;
          a6 = v92;
          a8 = v96;
        }
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
      {
        int v97 = a8;
        uint64_t v93 = a6;
        uint64_t v85 = a2;
        uint64_t v89 = a4;
        __n128 v77 = a14;
        __n128 v81 = a13;
        float32x4_t v69 = v20;
        __n128 v73 = a15;
        int v65 = v21;
        int8x16_t v59 = v29;
        int8x16_t v61 = v28;
        int v40 = __cxa_guard_acquire(qword_1004D2D80);
        int8x16_t v29 = v59;
        int8x16_t v28 = v61;
        *(void *)&long long v41 = 0x3F0000003F000000;
        *((void *)&v41 + 1) = 0x3F0000003F000000;
        uint64_t v23 = (int8x16_t *)&unk_1004D2000;
        int v21 = v65;
        float32x4_t v20 = v69;
        a15 = v73;
        a14 = v77;
        a13 = v81;
        a2 = v85;
        a4 = v89;
        a6 = v93;
        a8 = v97;
        if (v40)
        {
          xmmword_1004D2D70 = v41;
          __cxa_guard_release(qword_1004D2D80);
          int8x16_t v29 = v59;
          int8x16_t v28 = v61;
          uint64_t v23 = (int8x16_t *)&unk_1004D2000;
          int v21 = v65;
          float32x4_t v20 = v69;
          a15 = v73;
          a14 = v77;
          a13 = v81;
          a2 = v85;
          a4 = v89;
          a6 = v93;
          a8 = v97;
        }
      }
      uint16x8_t v30 = vmovl_u8(v26);
      uint16x8_t v31 = vmovl_u8(v27);
      int8x16_t v32 = (int8x16_t)vaddq_f32(v20, vaddq_f32(vmulq_n_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v30.i8)), a13.n128_f32[0]), vmulq_n_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v31.i8)), a14.n128_f32[0])));
      int8x16_t v33 = (int8x16_t)vaddq_f32(v20, vaddq_f32(vmulq_n_f32(vcvtq_f32_u32(vmovl_high_u16(v30)), a13.n128_f32[0]), vmulq_n_f32(vcvtq_f32_u32(vmovl_high_u16(v31)), a14.n128_f32[0])));
      *(int8x8_t *)(a5 + v25) = vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vcvtq_s32_f32(vaddq_f32((float32x4_t)v32, (float32x4_t)vorrq_s8(vandq_s8(v29, v32), v28)))), vcvtq_s32_f32(vaddq_f32((float32x4_t)v33, (float32x4_t)vorrq_s8(vandq_s8(v23[213], v33), (int8x16_t)xmmword_1004D2D70)))));
      v25 += 8;
    }
    while (v21 >= (int)v25);
    uint64_t v24 = v25;
    if ((int)v25 > v22) {
      goto LABEL_33;
    }
    do
    {
LABEL_23:
      uint64_t v42 = v24 & 0xFFFFFFFE | 1;
      float v43 = (float)((float)(flt_100406364[*(unsigned __int8 *)(a3 + v42) + 128] * a14.n128_f32[0])
                  + (float)(flt_100406364[*(unsigned __int8 *)(a1 + v42) + 128] * a13.n128_f32[0]))
          + a15.n128_f32[0];
      float v44 = rintf((float)((float)(flt_100406364[*(unsigned __int8 *)(a3 + v24) + 128] * a14.n128_f32[0])+ (float)(flt_100406364[*(unsigned __int8 *)(a1 + v24) + 128] * a13.n128_f32[0]))+ a15.n128_f32[0]);
      int v45 = (uint64_t)v44 & ~((int)(uint64_t)v44 >> 31);
      if (v45 >= 255) {
        LOBYTE(v45) = -1;
      }
      *(unsigned char *)(a5 + v24) = v45;
      float v46 = rintf(v43);
      int v47 = (uint64_t)v46 & ~((int)(uint64_t)v46 >> 31);
      if (v47 >= 255) {
        LOBYTE(v47) = -1;
      }
      *(unsigned char *)(a5 + v42) = v47;
      uint64_t v48 = v24 | 2;
      uint64_t v49 = v24 & 0xFFFFFFFC | 3;
      float v50 = (float)((float)(flt_100406364[*(unsigned __int8 *)(a3 + v49) + 128] * a14.n128_f32[0])
                  + (float)(flt_100406364[*(unsigned __int8 *)(a1 + v49) + 128] * a13.n128_f32[0]))
          + a15.n128_f32[0];
      float v51 = rintf((float)((float)(flt_100406364[*(unsigned __int8 *)(a3 + v48) + 128] * a14.n128_f32[0])+ (float)(flt_100406364[*(unsigned __int8 *)(a1 + v48) + 128] * a13.n128_f32[0]))+ a15.n128_f32[0]);
      int v52 = (uint64_t)v51 & ~((int)(uint64_t)v51 >> 31);
      if (v52 >= 255) {
        LOBYTE(v52) = -1;
      }
      *(unsigned char *)(a5 + v48) = v52;
      float v53 = rintf(v50);
      int v54 = (uint64_t)v53 & ~((int)(uint64_t)v53 >> 31);
      if (v54 >= 255) {
        LOBYTE(v54) = -1;
      }
      *(unsigned char *)(a5 + v49) = v54;
      v24 += 4;
    }
    while (v22 >= (int)v24);
    uint64_t v24 = v24;
    goto LABEL_33;
  }
}

uint64_t sub_10022A058(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, double a9, __n128 a10, double a11, double a12, double a13, __n128 a14, uint64_t a15)
{
  if (a8)
  {
    int v15 = a8;
    uint64_t v20 = result;
    a10.n128_u64[0] = *(void *)(a15 + 8);
    float v21 = *(double *)a15;
    float v22 = a10.n128_f64[0];
    float v23 = *(double *)(a15 + 16);
    uint64_t v24 = a7 - 4;
    uint64_t v25 = a7;
    do
    {
      a10.n128_f32[0] = v22;
      *(float *)&a11 = v23;
      unint64_t result = sub_10022EBB0(v21, a10, *(int32x2_t *)&a11, a12, a13, a14, (uint64_t)&v42, v20, a3, a5, a7);
      if ((int)result <= (int)v24)
      {
        uint64_t v27 = 0;
        uint64_t v28 = v20 + (int)result;
        uint64_t v29 = a3 + (int)result;
        do
        {
          v26.i8[0] = *(unsigned char *)(v28 + v27);
          a10.n128_u8[0] = *(unsigned char *)(v29 + v27);
          int8x8_t v30 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)a10.n128_u64[0])).u64[0];
          *(float *)v30.i32 = v22 * (float)v30.i32[0];
          float v31 = *(float *)v30.i32 + (float)((float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v26)).i32[0] * v21);
          v30.i8[0] = *(unsigned char *)(v28 + v27 + 1);
          int8x8_t v32 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v30)).u64[0];
          LOBYTE(a11) = *(unsigned char *)(v29 + v27 + 1);
          int8x8_t v33 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)&a11)).u64[0];
          *(float *)v33.i32 = v22 * (float)v33.i32[0];
          *(float *)v32.i32 = rintf((float)(*(float *)v33.i32 + (float)((float)v32.i32[0] * v21)) + v23);
          v34.i32[0] = (uint64_t)rintf(v31 + v23);
          v34.i32[1] = (uint64_t)*(float *)v32.i32;
          long long v35 = (unsigned char *)(a5 + (int)result + v27);
          int8x8_t v36 = (int8x8_t)vmin_s32(vmax_s32(v34, (int32x2_t)0x7F0000007FLL), (int32x2_t)0x7F0000007FLL);
          v35[1] = v36.i8[4];
          *long long v35 = v36.i8[0];
          v36.i8[0] = *(unsigned char *)(v28 + v27 + 2);
          v32.i8[0] = *(unsigned char *)(v29 + v27 + 2);
          int8x8_t v37 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v32)).u64[0];
          *(float *)v37.i32 = v22 * (float)v37.i32[0];
          *(float *)v36.i32 = (float)(*(float *)v37.i32
                                    + (float)((float)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v36)).i32[0] * v21))
                            + v23;
          v37.i8[0] = *(unsigned char *)(v28 + v27 + 3);
          a10 = (__n128)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v37));
          a10.n128_f32[0] = (float)a10.n128_i32[0];
          v33.i8[0] = *(unsigned char *)(v29 + v27 + 3);
          *(void *)&a11 = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v33)).u64[0];
          *(float *)&a11 = v22 * (float)SLODWORD(a11);
          int8x8_t v26 = (int8x8_t)vmin_s32(vmax_s32((int32x2_t)__PAIR64__((uint64_t)rintf((float)(*(float *)&a11 + (float)(a10.n128_f32[0] * v21)) + v23), (uint64_t)rintf(*(float *)v36.i32)), (int32x2_t)0x7F0000007FLL), (int32x2_t)0x7F0000007FLL);
          v35[3] = v26.i8[4];
          v35[2] = v26.i8[0];
          v27 += 4;
        }
        while ((int)result + v27 <= v24);
        unint64_t result = (result + v27);
      }
      if ((int)result < a7)
      {
        uint64_t v38 = (int)result;
        do
        {
          v26.i8[0] = *(unsigned char *)(v20 + v38);
          int8x8_t v26 = (int8x8_t)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(v26)).u64[0];
          a10.n128_u8[0] = *(unsigned char *)(a3 + v38);
          a10 = (__n128)vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8((int8x8_t)a10.n128_u64[0]));
          a10.n128_f32[0] = v22 * (float)a10.n128_i32[0];
          *(float *)v26.i32 = rintf((float)(a10.n128_f32[0] + (float)((float)v26.i32[0] * v21)) + v23);
          uint64_t v39 = (uint64_t)*(float *)v26.i32;
          if ((int)(uint64_t)*(float *)v26.i32 <= -128) {
            LODWORD(v39) = -128;
          }
          if ((int)v39 >= 127) {
            LOBYTE(v39) = 127;
          }
          *(unsigned char *)(a5 + v38++) = v39;
        }
        while (v25 != v38);
      }
      v20 += a2;
      a3 += a4;
      a5 += a6;
      --v15;
    }
    while (v15);
  }
  return result;
}

void sub_10022A2FC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, int a8, double a9, double a10, double a11, __n128 a12, __n128 a13, __n128 a14, uint64_t a15)
{
  if (a8)
  {
    v18.i64[0] = *(void *)(a15 + 8);
    a12.n128_f32[0] = *(double *)a15;
    a13.n128_f32[0] = *(double *)v18.i64;
    v19.i64[0] = *(void *)(a15 + 16);
    a14.n128_f32[0] = *(double *)v19.i64;
    unint64_t v20 = a2 >> 1;
    int v21 = a7 - 8;
    uint64_t v22 = (int)a7 - 4;
    uint64_t v23 = (int)a7;
    float32x4_t v24 = (float32x4_t)vdupq_lane_s32((int32x2_t)a14.n128_u64[0], 0);
    uint64_t v25 = 2 * (a6 >> 1);
    uint64_t v26 = 2 * (a4 >> 1);
    uint64_t v27 = 2 * v20;
    uint64_t v28 = a5 + 4;
    do
    {
      if ((int)a7 >= 8)
      {
        uint64_t v46 = 0;
        LODWORD(v29) = 0;
        do
        {
          uint16x8_t v47 = *(uint16x8_t *)(a1 + v46);
          uint16x8_t v48 = *(uint16x8_t *)(a3 + v46);
          if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DA0, memory_order_acquire) & 1) == 0)
          {
            int v79 = a8;
            uint64_t v77 = a7;
            __n128 v75 = a12;
            __n128 v71 = a14;
            __n128 v73 = a13;
            int v69 = v21;
            float32x4_t v67 = v24;
            uint64_t v63 = v26;
            uint64_t v65 = v25;
            uint64_t v59 = v28;
            uint64_t v61 = v27;
            uint16x8_t v55 = v47;
            uint16x8_t v57 = v48;
            int v50 = __cxa_guard_acquire(qword_1004D2DA0);
            uint16x8_t v47 = v55;
            uint16x8_t v48 = v57;
            *(void *)&long long v51 = 0x3F0000003F000000;
            *((void *)&v51 + 1) = 0x3F0000003F000000;
            uint64_t v28 = v59;
            uint64_t v27 = v61;
            uint64_t v26 = v63;
            uint64_t v25 = v65;
            float32x4_t v24 = v67;
            int v21 = v69;
            a14 = v71;
            a13 = v73;
            a12 = v75;
            a7 = v77;
            a8 = v79;
            if (v50)
            {
              xmmword_1004D2D90 = v51;
              __cxa_guard_release(qword_1004D2DA0);
              uint16x8_t v47 = v55;
              uint16x8_t v48 = v57;
              uint64_t v28 = v59;
              uint64_t v27 = v61;
              uint64_t v26 = v63;
              uint64_t v25 = v65;
              float32x4_t v24 = v67;
              int v21 = v69;
              a14 = v71;
              a13 = v73;
              a12 = v75;
              a7 = v77;
              a8 = v79;
            }
          }
          float32x4_t v49 = (float32x4_t)xmmword_1004D2D90;
          if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DA0, memory_order_acquire) & 1) == 0)
          {
            int v80 = a8;
            uint64_t v78 = a7;
            __n128 v76 = a12;
            __n128 v72 = a14;
            __n128 v74 = a13;
            int v70 = v21;
            float32x4_t v68 = v24;
            uint64_t v64 = v26;
            uint64_t v66 = v25;
            uint64_t v60 = v28;
            uint64_t v62 = v27;
            uint16x8_t v56 = v47;
            uint16x8_t v58 = v48;
            float32x4_t v54 = v49;
            int v52 = __cxa_guard_acquire(qword_1004D2DA0);
            float32x4_t v49 = v54;
            uint16x8_t v47 = v56;
            uint16x8_t v48 = v58;
            *(void *)&long long v53 = 0x3F0000003F000000;
            *((void *)&v53 + 1) = 0x3F0000003F000000;
            uint64_t v28 = v60;
            uint64_t v27 = v62;
            uint64_t v26 = v64;
            uint64_t v25 = v66;
            float32x4_t v24 = v68;
            int v21 = v70;
            a14 = v72;
            a13 = v74;
            a12 = v76;
            a7 = v78;
            a8 = v80;
            if (v52)
            {
              xmmword_1004D2D90 = v53;
              __cxa_guard_release(qword_1004D2DA0);
              float32x4_t v49 = v54;
              uint16x8_t v47 = v56;
              uint16x8_t v48 = v58;
              uint64_t v28 = v60;
              uint64_t v27 = v62;
              uint64_t v26 = v64;
              uint64_t v25 = v66;
              float32x4_t v24 = v68;
              int v21 = v70;
              a14 = v72;
              a13 = v74;
              a12 = v76;
              a7 = v78;
              a8 = v80;
            }
          }
          uint32x4_t v18 = vcvtq_u32_f32(vaddq_f32(vaddq_f32(v24, vaddq_f32(vmulq_n_f32(vcvtq_f32_u32(vmovl_high_u16(v47)), a12.n128_f32[0]), vmulq_n_f32(vcvtq_f32_u32(vmovl_high_u16(v48)), a13.n128_f32[0]))), (float32x4_t)xmmword_1004D2D90));
          uint16x8_t v19 = vqmovn_high_u32(vqmovn_u32(vcvtq_u32_f32(vaddq_f32(vaddq_f32(v24, vaddq_f32(vmulq_n_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v47.i8)), a12.n128_f32[0]), vmulq_n_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v48.i8)), a13.n128_f32[0]))), v49))), v18);
          *(uint16x8_t *)(a5 + v46) = v19;
          LODWORD(v29) = v29 + 8;
          v46 += 16;
        }
        while (v21 >= (int)v29);
      }
      else
      {
        LODWORD(v29) = 0;
      }
      if ((int)v29 <= (int)v22)
      {
        uint64_t v30 = (int)v29;
        uint64_t v31 = 2 * (int)v29;
        uint64_t v32 = v28;
        uint64_t v33 = a3;
        uint64_t v34 = a1;
        uint64_t v29 = (int)v29;
        do
        {
          v19.i16[0] = *(_WORD *)(v34 + 2 * v30);
          v18.i16[0] = *(_WORD *)(v33 + 2 * v30);
          *(float *)v18.i32 = a13.n128_f32[0] * (float)v18.u32[0];
          *(float *)v19.i32 = rintf((float)(*(float *)v18.i32 + (float)((float)v19.u32[0] * a12.n128_f32[0]))+ a14.n128_f32[0]);
          int v35 = (uint64_t)*(float *)v19.i32 & ~((int)(uint64_t)*(float *)v19.i32 >> 31);
          if (v35 >= 0xFFFF) {
            LOWORD(v35) = -1;
          }
          uint64_t v36 = v34 + v31;
          v19.i16[0] = *(_WORD *)(v34 + v31 + 2);
          uint64_t v37 = v33 + v31;
          v18.i16[0] = *(_WORD *)(v33 + v31 + 2);
          *(float *)v18.i32 = a13.n128_f32[0] * (float)v18.u32[0];
          *(float *)v19.i32 = rintf((float)(*(float *)v18.i32 + (float)((float)v19.u32[0] * a12.n128_f32[0]))+ a14.n128_f32[0]);
          int v38 = (uint64_t)*(float *)v19.i32 & ~((int)(uint64_t)*(float *)v19.i32 >> 31);
          if (v38 >= 0xFFFF) {
            LOWORD(v38) = -1;
          }
          uint64_t v39 = v32 + v31;
          *(_WORD *)(v39 - 4) = v35;
          *(_WORD *)(v39 - 2) = v38;
          v19.i16[0] = *(_WORD *)(v36 + 4);
          v18.i16[0] = *(_WORD *)(v37 + 4);
          *(float *)&unsigned int v40 = a13.n128_f32[0] * (float)v18.u32[0];
          *(float *)&unsigned int v41 = rintf((float)(*(float *)&v40 + (float)((float)v19.u32[0] * a12.n128_f32[0])) + a14.n128_f32[0]);
          int v42 = (uint64_t)*(float *)&v41 & ~((int)(uint64_t)*(float *)&v41 >> 31);
          LOWORD(v41) = *(_WORD *)(v36 + 6);
          LOWORD(v40) = *(_WORD *)(v37 + 6);
          *(float *)v18.i32 = a13.n128_f32[0] * (float)v40;
          *(float *)v19.i32 = rintf((float)(*(float *)v18.i32 + (float)((float)v41 * a12.n128_f32[0])) + a14.n128_f32[0]);
          if (v42 >= 0xFFFF) {
            LOWORD(v42) = -1;
          }
          int v43 = (uint64_t)*(float *)v19.i32 & ~((int)(uint64_t)*(float *)v19.i32 >> 31);
          if (v43 >= 0xFFFF) {
            LOWORD(v43) = -1;
          }
          *(_WORD *)(v32 + 2 * v30) = v42;
          v29 += 4;
          *(_WORD *)(v39 + 2) = v43;
          v34 += 8;
          v33 += 8;
          v32 += 8;
        }
        while (v29 <= v22);
      }
      if ((int)v29 < (int)a7)
      {
        uint64_t v44 = (int)v29;
        do
        {
          v19.i16[0] = *(_WORD *)(a1 + 2 * v44);
          v18.i16[0] = *(_WORD *)(a3 + 2 * v44);
          *(float *)v18.i32 = a13.n128_f32[0] * (float)v18.u32[0];
          *(float *)v19.i32 = rintf((float)(*(float *)v18.i32 + (float)((float)v19.u32[0] * a12.n128_f32[0]))+ a14.n128_f32[0]);
          int v45 = (uint64_t)*(float *)v19.i32 & ~((int)(uint64_t)*(float *)v19.i32 >> 31);
          if (v45 >= 0xFFFF) {
            LOWORD(v45) = -1;
          }
          *(_WORD *)(a5 + 2 * v44++) = v45;
        }
        while (v23 != v44);
      }
      a5 += v25;
      a3 += v26;
      a1 += v27;
      v28 += v25;
      --a8;
    }
    while (a8);
  }
}

uint64_t sub_10022A6FC(uint64_t result, unint64_t a2, int16x8_t *a3, unint64_t a4, int16x8_t *a5, unint64_t a6, int a7, int a8, __n128 a9, double a10, int32x2_t a11, double a12, __n128 a13, uint64_t a14)
{
  if (a8)
  {
    int v14 = a8;
    double v16 = a5;
    uint32x4_t v18 = (int16x8_t *)result;
    float v19 = *(double *)a14;
    float v20 = *(double *)(a14 + 8);
    a9.n128_u64[0] = *(void *)(a14 + 16);
    uint64_t v21 = a7 - 4;
    uint64_t v22 = a7;
    uint64_t v44 = 2 * (a4 >> 1);
    uint64_t v45 = 2 * (a2 >> 1);
    float v23 = a9.n128_f64[0];
    float32x4_t v24 = &a5->i8[4];
    uint64_t v43 = 2 * (a6 >> 1);
    do
    {
      a9.n128_f32[0] = v19;
      *(float *)a11.i32 = v23;
      unint64_t result = sub_10022EF8C(a9, v20, a11, a12, a13, (uint64_t)&v46, v18, a3, v16, a7);
      if ((int)result <= (int)v21)
      {
        uint64_t v26 = (int)result;
        uint64_t v27 = 2 * (int)result;
        uint64_t v28 = v24;
        uint64_t v29 = a3;
        uint64_t v30 = v18;
        unint64_t result = (int)result;
        do
        {
          a9.n128_u16[0] = v30->u16[v26];
          a9.n128_u64[0] = vmovl_s16((int16x4_t)a9.n128_u64[0]).u64[0];
          v25.i16[0] = v29->i16[v26];
          int16x4_t v31 = (int16x4_t)vmovl_s16(v25).u64[0];
          *(float *)v31.i32 = v20 * (float)v31.i32[0];
          a9.n128_f32[0] = rintf((float)(*(float *)v31.i32 + (float)((float)a9.n128_i32[0] * v19)) + v23);
          uint64_t v32 = (uint64_t)a9.n128_f32[0];
          if ((int)(uint64_t)a9.n128_f32[0] <= -32768) {
            LODWORD(v32) = -32768;
          }
          uint64_t v33 = &v30->i8[v27];
          a9.n128_u16[0] = v30->u16[(unint64_t)v27 / 2 + 1];
          a9.n128_u64[0] = vmovl_s16((int16x4_t)a9.n128_u64[0]).u64[0];
          uint64_t v34 = &v29->i8[v27];
          v31.i16[0] = v29->i16[(unint64_t)v27 / 2 + 1];
          int16x4_t v35 = (int16x4_t)vmovl_s16(v31).u64[0];
          *(float *)v35.i32 = v20 * (float)v35.i32[0];
          a9.n128_f32[0] = rintf((float)(*(float *)v35.i32 + (float)((float)a9.n128_i32[0] * v19)) + v23);
          uint64_t v36 = (uint64_t)a9.n128_f32[0];
          if ((int)v32 >= 0x7FFF) {
            LOWORD(v32) = 0x7FFF;
          }
          if ((int)v36 <= -32768) {
            LODWORD(v36) = -32768;
          }
          if ((int)v36 >= 0x7FFF) {
            LOWORD(v36) = 0x7FFF;
          }
          uint64_t v37 = &v28[v27];
          *((_WORD *)v37 - 2) = v32;
          *((_WORD *)v37 - 1) = v36;
          a9.n128_u16[0] = *((_WORD *)v33 + 2);
          a9.n128_u64[0] = vmovl_s16((int16x4_t)a9.n128_u64[0]).u64[0];
          v35.i16[0] = *((_WORD *)v34 + 2);
          int16x4_t v38 = (int16x4_t)vmovl_s16(v35).u64[0];
          *(float *)v38.i32 = v20 * (float)v38.i32[0];
          a9.n128_f32[0] = rintf((float)(*(float *)v38.i32 + (float)((float)a9.n128_i32[0] * v19)) + v23);
          uint64_t v39 = (uint64_t)a9.n128_f32[0];
          if ((int)(uint64_t)a9.n128_f32[0] <= -32768) {
            LODWORD(v39) = -32768;
          }
          if ((int)v39 >= 0x7FFF) {
            LOWORD(v39) = 0x7FFF;
          }
          a9.n128_u16[0] = *((_WORD *)v33 + 3);
          a9 = (__n128)vmovl_s16((int16x4_t)a9.n128_u64[0]);
          v38.i16[0] = *((_WORD *)v34 + 3);
          int16x4_t v25 = (int16x4_t)vmovl_s16(v38).u64[0];
          *(float *)v25.i32 = v20 * (float)v25.i32[0];
          a9.n128_f32[0] = rintf((float)(*(float *)v25.i32 + (float)((float)a9.n128_i32[0] * v19)) + v23);
          uint64_t v40 = (uint64_t)a9.n128_f32[0];
          if ((int)(uint64_t)a9.n128_f32[0] <= -32768) {
            LODWORD(v40) = -32768;
          }
          if ((int)v40 >= 0x7FFF) {
            LOWORD(v40) = 0x7FFF;
          }
          *(_WORD *)&v28[2 * v26] = v39;
          result += 4;
          *((_WORD *)v37 + 1) = v40;
          uint64_t v30 = (int16x8_t *)((char *)v30 + 8);
          uint64_t v29 = (int16x8_t *)((char *)v29 + 8);
          v28 += 8;
        }
        while (result <= v21);
      }
      if ((int)result < a7)
      {
        uint64_t v41 = (int)result;
        do
        {
          a9.n128_u16[0] = v18->u16[v41];
          a9 = (__n128)vmovl_s16((int16x4_t)a9.n128_u64[0]);
          v25.i16[0] = a3->i16[v41];
          int16x4_t v25 = (int16x4_t)vmovl_s16(v25).u64[0];
          *(float *)v25.i32 = v20 * (float)v25.i32[0];
          a9.n128_f32[0] = rintf((float)(*(float *)v25.i32 + (float)((float)a9.n128_i32[0] * v19)) + v23);
          uint64_t v42 = (uint64_t)a9.n128_f32[0];
          if ((int)(uint64_t)a9.n128_f32[0] <= -32768) {
            LODWORD(v42) = -32768;
          }
          if ((int)v42 >= 0x7FFF) {
            LOWORD(v42) = 0x7FFF;
          }
          v16->i16[v41++] = v42;
        }
        while (v22 != v41);
      }
      uint32x4_t v18 = (int16x8_t *)((char *)v18 + v45);
      a3 = (int16x8_t *)((char *)a3 + v44);
      double v16 = (int16x8_t *)((char *)v16 + v43);
      v24 += v43;
      --v14;
    }
    while (v14);
  }
  return result;
}

uint64_t sub_10022A9B0(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, int a7, int a8, double *a9)
{
  if (a8)
  {
    double v9 = *a9;
    double v10 = a9[1];
    unint64_t v11 = a2 >> 2;
    double v12 = a9[2];
    unint64_t v13 = a4 >> 2;
    unint64_t v14 = a6 >> 2;
    unint64_t v15 = (a7 - 4);
    if (a7 >= 4)
    {
      uint64_t v22 = 4 * v14;
      int v23 = a8 - 1;
      uint64_t v24 = 4 * v13;
      do
      {
        uint64_t v25 = 0;
        unint64_t v26 = 0;
        int v27 = v23;
        do
        {
          double v28 = rint(v12 + v10 * (double)*(int *)(a3 + v25 + 4) + (double)*(int *)(result + v25 + 4) * v9);
          uint64_t v29 = (_DWORD *)(a5 + v25);
          *uint64_t v29 = (uint64_t)rint(v12 + v10 * (double)*(int *)(a3 + v25) + (double)*(int *)(result + v25) * v9);
          v29[1] = (uint64_t)v28;
          double v30 = rint(v12 + v10 * (double)*(int *)(a3 + v25 + 12) + (double)*(int *)(result + v25 + 12) * v9);
          _OWORD v29[2] = (uint64_t)rint(v12 + v10 * (double)*(int *)(a3 + v25 + 8) + (double)*(int *)(result + v25 + 8) * v9);
          _OWORD v29[3] = (uint64_t)v30;
          v26 += 4;
          v25 += 16;
        }
        while (v26 <= v15);
        unint64_t v31 = (v15 & 0xFFFFFFFC) + 4;
        if ((int)v26 < a7)
        {
          do
          {
            *(_DWORD *)(a5 + 4 * v31) = (uint64_t)rint(v12+ v10 * (double)*(int *)(a3 + 4 * v31)+ (double)*(int *)(result + 4 * v31) * v9);
            ++v31;
          }
          while (v31 < a7);
        }
        --v23;
        a5 += v22;
        a3 += v24;
        result += 4 * v11;
      }
      while (v27);
    }
    else if (a7 >= 1)
    {
      uint64_t v16 = 4 * v14;
      double v17 = (_DWORD *)(a5 + 8);
      uint32x4_t v18 = (int *)(a3 + 8);
      uint64_t v19 = 4 * v13;
      float v20 = (int *)(result + 4);
      uint64_t v21 = 4 * v11;
      do
      {
        *(v17 - 2) = (uint64_t)rint(v12 + v10 * (double)*(v18 - 2) + (double)*(v20 - 1) * v9);
        if (a7 != 1)
        {
          *(v17 - 1) = (uint64_t)rint(v12 + v10 * (double)*(v18 - 1) + (double)*v20 * v9);
          if (a7 != 2) {
            *double v17 = (uint64_t)rint(v12 + v10 * (double)*v18 + (double)v20[1] * v9);
          }
        }
        double v17 = (_DWORD *)((char *)v17 + v16);
        uint32x4_t v18 = (int *)((char *)v18 + v19);
        float v20 = (int *)((char *)v20 + v21);
        --a8;
      }
      while (a8);
    }
  }
  return result;
}

unint64_t sub_10022AC08(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, int a7, int a8, double *a9)
{
  unint64_t v74 = result;
  if (!a8) {
    return result;
  }
  uint64_t v9 = *(uint64_t *)a9;
  double v10 = a9[1];
  unint64_t v11 = a2 >> 2;
  uint64_t v12 = *((uint64_t *)a9 + 2);
  unint64_t v13 = a4 >> 2;
  unint64_t v14 = a6 >> 2;
  unint64_t v15 = (a7 - 4);
  if (a7 >= 4)
  {
    uint64_t v22 = 0;
    int v23 = a8 - 1;
    uint64_t v24 = (4 * (a7 - 4)) & 0x3FFFFFFF0;
    uint64_t v71 = v24 + a5 + 16;
    unint64_t v25 = a6 & 0xFFFFFFFFFFFFFFFCLL;
    unint64_t v26 = result;
    uint64_t v70 = v24 + result + 16;
    uint64_t v68 = v24 + a3 + 16;
    unint64_t v27 = (v15 & 0xFFFFFFFC) + 5;
    if (v27 <= a7) {
      unint64_t v27 = a7;
    }
    uint64_t v28 = 16 * (v15 >> 2) + 16;
    uint64_t v69 = (v15 >> 2) + 1;
    unint64_t v72 = v27 - (v15 & 0xFFFFFFFC) - 4;
    float64x2_t v29 = (float64x2_t)vdupq_lane_s64(v9, 0);
    float64x2_t v30 = (float64x2_t)vdupq_lane_s64(v12, 0);
    unint64_t v67 = v27 & 3;
    uint64_t v31 = 4 * v11;
    uint64_t v32 = 4 * v13;
    uint64_t v33 = 4 * v14;
    unint64_t v34 = a5 + 8;
    unint64_t v35 = a5;
    unint64_t v36 = a3;
    while (1)
    {
      int v37 = v23;
      unint64_t v38 = v25 * v22;
      unint64_t v39 = (a2 & 0xFFFFFFFFFFFFFFFCLL) * v22;
      unint64_t v40 = (a4 & 0xFFFFFFFFFFFFFFFCLL) * v22;
      if (v15 >= 4)
      {
        unint64_t v41 = 0;
        unint64_t v42 = a5 + v28 + v38;
        BOOL v44 = v35 < a3 + v28 + v40 && v36 < v42;
        if ((v26 >= v42 || v35 >= v74 + v28 + v39) && !v44)
        {
          uint64_t v46 = 0;
          uint64_t v47 = v69 & 0x7FFFFFFE;
          do
          {
            uint16x8_t v48 = (const float *)(v26 + v46);
            float32x2x4_t v75 = vld4_f32(v48);
            float32x4_t v49 = (const float *)(v36 + v46);
            float32x2x4_t v76 = vld4_f32(v49);
            v77.val[0] = vcvt_f32_f64(vaddq_f64(v30, vmlaq_f64(vmulq_n_f64(vcvtq_f64_f32(v76.val[0]), v10), v29, vcvtq_f64_f32(v75.val[0]))));
            v77.val[1] = vcvt_f32_f64(vaddq_f64(v30, vmlaq_f64(vmulq_n_f64(vcvtq_f64_f32(v76.val[1]), v10), v29, vcvtq_f64_f32(v75.val[1]))));
            v77.val[2] = vcvt_f32_f64(vaddq_f64(v30, vmlaq_f64(vmulq_n_f64(vcvtq_f64_f32(v76.val[2]), v10), v29, vcvtq_f64_f32(v75.val[2]))));
            v77.val[3] = vcvt_f32_f64(vaddq_f64(v30, vmlaq_f64(vmulq_n_f64(vcvtq_f64_f32(v76.val[3]), v10), v29, vcvtq_f64_f32(v75.val[3]))));
            int v50 = (float *)(v35 + v46);
            vst4_f32(v50, v77);
            v46 += 32;
            v47 -= 2;
          }
          while (v47);
          unint64_t v41 = 4 * (v69 & 0x7FFFFFFE);
          unint64_t result = v69 & 0x7FFFFFFE;
          if (v69 == result) {
            goto LABEL_32;
          }
        }
      }
      else
      {
        unint64_t v41 = 0;
      }
      uint64_t v51 = 4 * v41;
      unint64_t v52 = v34;
      unint64_t v53 = v36;
      unint64_t result = v26;
      do
      {
        float v54 = *(double *)&v12 + v10 * *(float *)(v53 + v51) + *(float *)(result + v51) * *(double *)&v9;
        float v55 = *(double *)&v12 + v10 * *(float *)(v53 + v51 + 4) + *(float *)(result + v51 + 4) * *(double *)&v9;
        unint64_t v56 = v52 + v51;
        *(float *)(v56 - 8) = v54;
        *(float *)(v56 - 4) = v55;
        float v57 = *(double *)&v12 + v10 * *(float *)(v53 + v51 + 8) + *(float *)(result + v51 + 8) * *(double *)&v9;
        double v58 = *(double *)&v12 + v10 * *(float *)(v53 + v51 + 12) + *(float *)(result + v51 + 12) * *(double *)&v9;
        *(float *)(v52 + v51) = v57;
        v41 += 4;
        float v59 = v58;
        *(float *)(v56 + 4) = v59;
        result += 16;
        v53 += 16;
        v52 += 16;
      }
      while (v41 <= v15);
LABEL_32:
      if ((int)v41 < a7)
      {
        unint64_t v60 = (v15 & 0xFFFFFFFC) + 4;
        unint64_t result = v72;
        if (v72 < 4) {
          goto LABEL_43;
        }
        unint64_t v61 = v71 + v38;
        unint64_t v60 = (v15 & 0xFFFFFFFC) + 4;
        if (v61 - (v70 + v39) < 0x10) {
          goto LABEL_43;
        }
        unint64_t v60 = (v15 & 0xFFFFFFFC) + 4;
        if (v61 - (v68 + v40) < 0x10) {
          goto LABEL_43;
        }
        uint64_t v62 = (4 * (a7 - 4)) & 0x3FFFFFFF0;
        unint64_t v63 = v72 - v67;
        do
        {
          float32x2_t v64 = vcvt_f32_f64(vaddq_f64(v30, vmlaq_f64(vmulq_n_f64(vcvtq_f64_f32(*(float32x2_t *)(v36 + v62 + 24)), v10), v29, vcvtq_f64_f32(*(float32x2_t *)(v26 + v62 + 24)))));
          uint64_t v65 = (float32x2_t *)(v35 + v62);
          _OWORD v65[2] = vcvt_f32_f64(vaddq_f64(v30, vmlaq_f64(vmulq_n_f64(vcvtq_f64_f32(*(float32x2_t *)(v36 + v62 + 16)), v10), v29, vcvtq_f64_f32(*(float32x2_t *)(v26 + v62 + 16)))));
          v65[3] = v64;
          v62 += 16;
          v63 -= 4;
        }
        while (v63);
        unint64_t v60 = (v15 & 0xFFFFFFFC) + 4 + v72 - v67;
        if (v67)
        {
LABEL_43:
          do
          {
            float v66 = *(double *)&v12 + v10 * *(float *)(v36 + 4 * v60) + *(float *)(v26 + 4 * v60) * *(double *)&v9;
            *(float *)(v35 + 4 * v60++) = v66;
          }
          while (v60 < a7);
        }
      }
      v26 += v31;
      v36 += v32;
      v35 += v33;
      int v23 = v37 - 1;
      ++v22;
      v34 += v33;
      if (!v37) {
        return result;
      }
    }
  }
  if (a7 >= 1)
  {
    uint64_t v16 = (float *)(a5 + 8);
    double v17 = (float *)(a3 + 8);
    uint32x4_t v18 = (float *)(result + 4);
    do
    {
      float v19 = *(double *)&v12 + v10 * *(v17 - 2) + *(v18 - 1) * *(double *)&v9;
      *(v16 - 2) = v19;
      if (a7 != 1)
      {
        float v20 = *(double *)&v12 + v10 * *(v17 - 1) + *v18 * *(double *)&v9;
        *(v16 - 1) = v20;
        if (a7 != 2)
        {
          float v21 = *(double *)&v12 + v10 * *v17 + v18[1] * *(double *)&v9;
          *uint64_t v16 = v21;
        }
      }
      v16 += v14;
      v17 += v13;
      v18 += v11;
      --a8;
    }
    while (a8);
  }
  return result;
}

unint64_t sub_10022B0AC(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, int a7, int a8, double *a9)
{
  unint64_t v66 = result;
  if (!a8) {
    return result;
  }
  uint64_t v9 = *(uint64_t *)a9;
  double v10 = a9[1];
  unint64_t v11 = a2 >> 3;
  uint64_t v12 = *((uint64_t *)a9 + 2);
  unint64_t result = a4 >> 3;
  unint64_t v13 = a6 >> 3;
  unint64_t v14 = (a7 - 4);
  if (a7 >= 4)
  {
    uint64_t v18 = 0;
    int v19 = a8 - 1;
    uint64_t v20 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
    uint64_t v63 = v20 + a5 + 32;
    unint64_t v21 = a6 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v22 = v66;
    uint64_t v62 = v20 + v66 + 32;
    uint64_t v60 = v20 + a3 + 32;
    unint64_t v23 = (v14 & 0xFFFFFFFC) + 5;
    if (v23 <= a7) {
      unint64_t v23 = a7;
    }
    uint64_t v24 = 32 * (v14 >> 2) + 32;
    uint64_t v61 = (v14 >> 2) + 1;
    unint64_t v64 = v23 - (v14 & 0xFFFFFFFC) - 4;
    float64x2_t v25 = (float64x2_t)vdupq_lane_s64(v9, 0);
    float64x2_t v26 = (float64x2_t)vdupq_lane_s64(v12, 0);
    unint64_t v59 = v23 & 3;
    uint64_t v27 = 8 * v11;
    uint64_t v28 = 8 * result;
    uint64_t v29 = 8 * v13;
    unint64_t v30 = a5 + 16;
    unint64_t v31 = a5;
    unint64_t v32 = a3;
    while (1)
    {
      int v33 = v19;
      unint64_t v34 = v21 * v18;
      unint64_t v35 = (a2 & 0xFFFFFFFFFFFFFFF8) * v18;
      unint64_t v36 = (a4 & 0xFFFFFFFFFFFFFFF8) * v18;
      if (v14 >= 4)
      {
        unint64_t v37 = 0;
        unint64_t v38 = a5 + v24 + v34;
        BOOL v40 = v31 < a3 + v24 + v36 && v32 < v38;
        if ((v22 >= v38 || v31 >= v66 + v24 + v35) && !v40)
        {
          uint64_t v42 = 0;
          uint64_t v43 = v61 & 0x7FFFFFFE;
          do
          {
            BOOL v44 = (const double *)(v22 + v42);
            float64x2x4_t v67 = vld4q_f64(v44);
            uint64_t v45 = (const double *)(v32 + v42);
            float64x2x4_t v68 = vld4q_f64(v45);
            v69.val[0] = vaddq_f64(v26, vmlaq_f64(vmulq_n_f64(v68.val[0], v10), v25, v67.val[0]));
            v69.val[1] = vaddq_f64(v26, vmlaq_f64(vmulq_n_f64(v68.val[1], v10), v25, v67.val[1]));
            v69.val[2] = vaddq_f64(v26, vmlaq_f64(vmulq_n_f64(v68.val[2], v10), v25, v67.val[2]));
            v69.val[3] = vaddq_f64(v26, vmlaq_f64(vmulq_n_f64(v68.val[3], v10), v25, v67.val[3]));
            uint64_t v46 = (double *)(v31 + v42);
            vst4q_f64(v46, v69);
            v42 += 64;
            v43 -= 2;
          }
          while (v43);
          unint64_t v37 = 4 * (v61 & 0x7FFFFFFE);
          unint64_t result = v61 & 0x7FFFFFFE;
          if (v61 == result) {
            goto LABEL_32;
          }
        }
      }
      else
      {
        unint64_t v37 = 0;
      }
      uint64_t v47 = 8 * v37;
      unint64_t v48 = v30;
      unint64_t v49 = v32;
      unint64_t result = v22;
      do
      {
        double v50 = *(double *)&v12 + v10 * *(double *)(v49 + v47 + 8) + *(double *)(result + v47 + 8) * *(double *)&v9;
        unint64_t v51 = v48 + v47;
        *(double *)(v51 - 16) = *(double *)&v12
                              + v10 * *(double *)(v49 + v47)
                              + *(double *)(result + v47) * *(double *)&v9;
        *(double *)(v51 - 8) = v50;
        double v52 = v10 * *(double *)(v49 + v47 + 24) + *(double *)(result + v47 + 24) * *(double *)&v9;
        *(double *)(v48 + v47) = *(double *)&v12
                               + v10 * *(double *)(v49 + v47 + 16)
                               + *(double *)(result + v47 + 16) * *(double *)&v9;
        v37 += 4;
        *(double *)(v51 + 8) = *(double *)&v12 + v52;
        result += 32;
        v49 += 32;
        v48 += 32;
      }
      while (v37 <= v14);
LABEL_32:
      if ((int)v37 < a7)
      {
        unint64_t v53 = (v14 & 0xFFFFFFFC) + 4;
        unint64_t result = v64;
        if (v64 < 6) {
          goto LABEL_43;
        }
        unint64_t v54 = v63 + v34;
        unint64_t v53 = (v14 & 0xFFFFFFFC) + 4;
        if (v54 - (v62 + v35) < 0x20) {
          goto LABEL_43;
        }
        unint64_t v53 = (v14 & 0xFFFFFFFC) + 4;
        if (v54 - (v60 + v36) < 0x20) {
          goto LABEL_43;
        }
        uint64_t v55 = (8 * (a7 - 4)) & 0x7FFFFFFE0;
        unint64_t v56 = v64 - v59;
        do
        {
          float64x2_t v57 = vaddq_f64(v26, vmlaq_f64(vmulq_n_f64(*(float64x2_t *)(v32 + v55 + 48), v10), v25, *(float64x2_t *)(v22 + v55 + 48)));
          double v58 = (float64x2_t *)(v31 + v55);
          v58[2] = vaddq_f64(v26, vmlaq_f64(vmulq_n_f64(*(float64x2_t *)(v32 + v55 + 32), v10), v25, *(float64x2_t *)(v22 + v55 + 32)));
          v58[3] = v57;
          v55 += 32;
          v56 -= 4;
        }
        while (v56);
        unint64_t v53 = (v14 & 0xFFFFFFFC) + 4 + v64 - v59;
        if (v59)
        {
LABEL_43:
          do
          {
            *(double *)(v31 + 8 * v53) = *(double *)&v12
                                       + v10 * *(double *)(v32 + 8 * v53)
                                       + *(double *)(v22 + 8 * v53) * *(double *)&v9;
            ++v53;
          }
          while (v53 < a7);
        }
      }
      v22 += v27;
      v32 += v28;
      v31 += v29;
      int v19 = v33 - 1;
      ++v18;
      v30 += v29;
      if (!v33) {
        return result;
      }
    }
  }
  if (a7 >= 1)
  {
    unint64_t v15 = (double *)(a5 + 16);
    uint64_t v16 = (double *)(a3 + 16);
    double v17 = (double *)(v66 + 8);
    do
    {
      *(v15 - 2) = *(double *)&v12 + v10 * *(v16 - 2) + *(v17 - 1) * *(double *)&v9;
      if (a7 != 1)
      {
        *(v15 - 1) = *(double *)&v12 + v10 * *(v16 - 1) + *v17 * *(double *)&v9;
        if (a7 != 2) {
          *unint64_t v15 = *(double *)&v12 + v10 * *v16 + v17[1] * *(double *)&v9;
        }
      }
      v15 += v13;
      v16 += result;
      v17 += v11;
      --a8;
    }
    while (a8);
  }
  return result;
}

uint64_t sub_10022B4A8(float a1, double a2, double a3, double a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  a5.n128_f32[0] = a1;
  if (a1 == 1.0)
  {
    int v10 = a10 - 8;
    if (a10 >= 8)
    {
      uint64_t result = 0;
      unint64_t v13 = (float32x4_t *)&unk_1004D2000;
      do
      {
        uint8x8_t v14 = *(uint8x8_t *)(a7 + result);
        uint8x8_t v15 = *(uint8x8_t *)(a8 + result);
        if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DA0, memory_order_acquire) & 1) == 0)
        {
          uint64_t v40 = result;
          uint64_t v56 = a8;
          uint64_t v60 = a9;
          uint64_t v64 = a7;
          int v44 = v10;
          uint8x8_t v48 = v14;
          uint8x8_t v52 = v15;
          int v19 = __cxa_guard_acquire(qword_1004D2DA0);
          *(void *)&long long v20 = 0x3F0000003F000000;
          *((void *)&v20 + 1) = 0x3F0000003F000000;
          uint8x8_t v14 = v48;
          uint8x8_t v15 = v52;
          unint64_t v13 = (float32x4_t *)&unk_1004D2000;
          int v10 = v44;
          a9 = v60;
          a7 = v64;
          a8 = v56;
          int v21 = v19;
          uint64_t result = v40;
          if (v21)
          {
            xmmword_1004D2D90 = v20;
            __cxa_guard_release(qword_1004D2DA0);
            uint8x8_t v14 = v48;
            uint8x8_t v15 = v52;
            unint64_t v13 = (float32x4_t *)&unk_1004D2000;
            int v10 = v44;
            uint64_t result = v40;
            a9 = v60;
            a7 = v64;
            a8 = v56;
          }
        }
        float32x4_t v16 = v13[217];
        if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DA0, memory_order_acquire) & 1) == 0)
        {
          uint64_t v41 = result;
          uint64_t v57 = a8;
          uint64_t v61 = a9;
          uint64_t v65 = a7;
          int v45 = v10;
          uint8x8_t v49 = v14;
          uint8x8_t v53 = v15;
          float32x4_t v37 = v16;
          int v22 = __cxa_guard_acquire(qword_1004D2DA0);
          float32x4_t v16 = v37;
          *(void *)&long long v23 = 0x3F0000003F000000;
          *((void *)&v23 + 1) = 0x3F0000003F000000;
          uint8x8_t v14 = v49;
          uint8x8_t v15 = v53;
          unint64_t v13 = (float32x4_t *)&unk_1004D2000;
          int v10 = v45;
          a9 = v61;
          a7 = v65;
          a8 = v57;
          int v24 = v22;
          uint64_t result = v41;
          if (v24)
          {
            xmmword_1004D2D90 = v23;
            __cxa_guard_release(qword_1004D2DA0);
            float32x4_t v16 = v37;
            uint8x8_t v14 = v49;
            uint8x8_t v15 = v53;
            unint64_t v13 = (float32x4_t *)&unk_1004D2000;
            int v10 = v45;
            uint64_t result = v41;
            a9 = v61;
            a7 = v65;
            a8 = v57;
          }
        }
        uint16x8_t v17 = vmovl_u8(v14);
        uint16x8_t v18 = vmovl_u8(v15);
        *(uint8x8_t *)(a9 + result) = vqmovn_u16(vqmovn_high_u32(vqmovn_u32(vcvtq_u32_f32(vaddq_f32(vmulq_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v17.i8)), vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v18.i8))), v16))), vcvtq_u32_f32(vaddq_f32(vmulq_f32(vcvtq_f32_u32(vmovl_high_u16(v17)), vcvtq_f32_u32(vmovl_high_u16(v18))), v13[217]))));
        result += 8;
      }
      while (v10 >= (int)result);
    }
    else
    {
      return 0;
    }
  }
  else
  {
    int v12 = a10 - 8;
    if (a10 >= 8)
    {
      uint64_t v25 = 0;
      float64x2_t v26 = (float32x4_t *)&unk_1004D2000;
      do
      {
        uint8x8_t v27 = *(uint8x8_t *)(a7 + v25);
        uint8x8_t v28 = *(uint8x8_t *)(a8 + v25);
        if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DA0, memory_order_acquire) & 1) == 0)
        {
          uint64_t v58 = a8;
          uint64_t v62 = a9;
          uint64_t v66 = a7;
          int v42 = v12;
          uint64_t v46 = v25;
          uint8x8_t v50 = v27;
          uint8x8_t v54 = v28;
          __n128 v38 = a5;
          int v32 = __cxa_guard_acquire(qword_1004D2DA0);
          *(void *)&long long v33 = 0x3F0000003F000000;
          *((void *)&v33 + 1) = 0x3F0000003F000000;
          a5 = v38;
          uint8x8_t v27 = v50;
          uint8x8_t v28 = v54;
          float64x2_t v26 = (float32x4_t *)&unk_1004D2000;
          uint64_t v25 = v46;
          int v12 = v42;
          a9 = v62;
          a7 = v66;
          a8 = v58;
          if (v32)
          {
            xmmword_1004D2D90 = v33;
            __cxa_guard_release(qword_1004D2DA0);
            a5 = v38;
            uint8x8_t v27 = v50;
            uint8x8_t v28 = v54;
            float64x2_t v26 = (float32x4_t *)&unk_1004D2000;
            uint64_t v25 = v46;
            int v12 = v42;
            a9 = v62;
            a7 = v66;
            a8 = v58;
          }
        }
        float32x4_t v29 = v26[217];
        if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DA0, memory_order_acquire) & 1) == 0)
        {
          uint64_t v59 = a8;
          uint64_t v63 = a9;
          uint64_t v67 = a7;
          int v43 = v12;
          uint64_t v47 = v25;
          uint8x8_t v51 = v27;
          uint8x8_t v55 = v28;
          float32x4_t v36 = v29;
          __n128 v39 = a5;
          int v34 = __cxa_guard_acquire(qword_1004D2DA0);
          float32x4_t v29 = v36;
          a5 = v39;
          *(void *)&long long v35 = 0x3F0000003F000000;
          *((void *)&v35 + 1) = 0x3F0000003F000000;
          uint8x8_t v27 = v51;
          uint8x8_t v28 = v55;
          float64x2_t v26 = (float32x4_t *)&unk_1004D2000;
          uint64_t v25 = v47;
          int v12 = v43;
          a9 = v63;
          a7 = v67;
          a8 = v59;
          if (v34)
          {
            xmmword_1004D2D90 = v35;
            __cxa_guard_release(qword_1004D2DA0);
            float32x4_t v29 = v36;
            a5 = v39;
            uint8x8_t v27 = v51;
            uint8x8_t v28 = v55;
            float64x2_t v26 = (float32x4_t *)&unk_1004D2000;
            uint64_t v25 = v47;
            int v12 = v43;
            a9 = v63;
            a7 = v67;
            a8 = v59;
          }
        }
        uint16x8_t v30 = vmovl_u8(v27);
        uint16x8_t v31 = vmovl_u8(v28);
        *(uint8x8_t *)(a9 + v25) = vqmovn_u16(vqmovn_high_u32(vqmovn_u32(vcvtq_u32_f32(vaddq_f32(vmulq_n_f32(vmulq_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v30.i8)), vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v31.i8))), a5.n128_f32[0]), v29))), vcvtq_u32_f32(vaddq_f32(vmulq_n_f32(vmulq_f32(vcvtq_f32_u32(vmovl_high_u16(v30)), vcvtq_f32_u32(vmovl_high_u16(v31))), a5.n128_f32[0]), v26[217]))));
        v25 += 8;
      }
      while (v12 >= (int)v25);
      return v25;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10022B84C(float a1, double a2, double a3, double a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  a5.n128_f32[0] = a1;
  if (a1 == 1.0)
  {
    int v10 = a10 - 8;
    if (a10 >= 8)
    {
      uint64_t result = 0;
      unint64_t v13 = (int8x16_t *)&unk_1004D2000;
      uint8x8_t v14 = (int8x16_t *)&unk_1004D2000;
      do
      {
        int8x8_t v15 = *(int8x8_t *)(a7 + result);
        int8x8_t v16 = *(int8x8_t *)(a8 + result);
        if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DC0, memory_order_acquire) & 1) == 0)
        {
          uint64_t v66 = result;
          uint64_t v98 = a8;
          uint64_t v106 = a9;
          uint64_t v114 = a7;
          int v74 = v10;
          int8x8_t v82 = v15;
          int8x8_t v90 = v16;
          int v23 = __cxa_guard_acquire(qword_1004D2DC0);
          *(void *)&long long v24 = 0x8000000080000000;
          *((void *)&v24 + 1) = 0x8000000080000000;
          int8x8_t v15 = v82;
          int8x8_t v16 = v90;
          uint8x8_t v14 = (int8x16_t *)&unk_1004D2000;
          unint64_t v13 = (int8x16_t *)&unk_1004D2000;
          int v10 = v74;
          a9 = v106;
          a7 = v114;
          a8 = v98;
          int v25 = v23;
          uint64_t result = v66;
          if (v25)
          {
            xmmword_1004D2DB0 = v24;
            __cxa_guard_release(qword_1004D2DC0);
            int8x8_t v15 = v82;
            int8x8_t v16 = v90;
            uint8x8_t v14 = (int8x16_t *)&unk_1004D2000;
            unint64_t v13 = (int8x16_t *)&unk_1004D2000;
            int v10 = v74;
            uint64_t result = v66;
            a9 = v106;
            a7 = v114;
            a8 = v98;
          }
        }
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1004D2DE0, memory_order_acquire) & 1) == 0)
        {
          uint64_t v67 = result;
          uint64_t v99 = a8;
          uint64_t v107 = a9;
          uint64_t v115 = a7;
          int v75 = v10;
          int8x8_t v83 = v15;
          int8x8_t v91 = v16;
          int v26 = __cxa_guard_acquire(&qword_1004D2DE0);
          *(void *)&long long v27 = 0x3F0000003F000000;
          *((void *)&v27 + 1) = 0x3F0000003F000000;
          int8x8_t v15 = v83;
          int8x8_t v16 = v91;
          uint8x8_t v14 = (int8x16_t *)&unk_1004D2000;
          unint64_t v13 = (int8x16_t *)&unk_1004D2000;
          int v10 = v75;
          a9 = v107;
          a7 = v115;
          a8 = v99;
          int v28 = v26;
          uint64_t result = v67;
          if (v28)
          {
            xmmword_1004D2DD0 = v27;
            __cxa_guard_release(&qword_1004D2DE0);
            int8x8_t v15 = v83;
            int8x8_t v16 = v91;
            uint8x8_t v14 = (int8x16_t *)&unk_1004D2000;
            unint64_t v13 = (int8x16_t *)&unk_1004D2000;
            int v10 = v75;
            uint64_t result = v67;
            a9 = v107;
            a7 = v115;
            a8 = v99;
          }
        }
        int8x16_t v17 = v14[221];
        int8x16_t v18 = v13[219];
        if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DC0, memory_order_acquire) & 1) == 0)
        {
          uint64_t v68 = result;
          uint64_t v100 = a8;
          uint64_t v108 = a9;
          uint64_t v116 = a7;
          int v76 = v10;
          int8x8_t v84 = v15;
          int8x8_t v92 = v16;
          int8x16_t v56 = v18;
          int8x16_t v60 = v17;
          int v29 = __cxa_guard_acquire(qword_1004D2DC0);
          int8x16_t v18 = v56;
          int8x16_t v17 = v60;
          *(void *)&long long v30 = 0x8000000080000000;
          *((void *)&v30 + 1) = 0x8000000080000000;
          int8x8_t v15 = v84;
          int8x8_t v16 = v92;
          uint8x8_t v14 = (int8x16_t *)&unk_1004D2000;
          unint64_t v13 = (int8x16_t *)&unk_1004D2000;
          int v10 = v76;
          a9 = v108;
          a7 = v116;
          a8 = v100;
          int v31 = v29;
          uint64_t result = v68;
          if (v31)
          {
            xmmword_1004D2DB0 = v30;
            __cxa_guard_release(qword_1004D2DC0);
            int8x16_t v18 = v56;
            int8x16_t v17 = v60;
            int8x8_t v15 = v84;
            int8x8_t v16 = v92;
            uint8x8_t v14 = (int8x16_t *)&unk_1004D2000;
            unint64_t v13 = (int8x16_t *)&unk_1004D2000;
            int v10 = v76;
            uint64_t result = v68;
            a9 = v108;
            a7 = v116;
            a8 = v100;
          }
        }
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1004D2DE0, memory_order_acquire) & 1) == 0)
        {
          uint64_t v69 = result;
          uint64_t v101 = a8;
          uint64_t v109 = a9;
          uint64_t v117 = a7;
          int v77 = v10;
          int8x8_t v85 = v15;
          int8x8_t v93 = v16;
          int8x16_t v57 = v18;
          int8x16_t v61 = v17;
          int v32 = __cxa_guard_acquire(&qword_1004D2DE0);
          int8x16_t v18 = v57;
          int8x16_t v17 = v61;
          *(void *)&long long v33 = 0x3F0000003F000000;
          *((void *)&v33 + 1) = 0x3F0000003F000000;
          int8x8_t v15 = v85;
          int8x8_t v16 = v93;
          uint8x8_t v14 = (int8x16_t *)&unk_1004D2000;
          unint64_t v13 = (int8x16_t *)&unk_1004D2000;
          int v10 = v77;
          a9 = v109;
          a7 = v117;
          a8 = v101;
          int v34 = v32;
          uint64_t result = v69;
          if (v34)
          {
            xmmword_1004D2DD0 = v33;
            __cxa_guard_release(&qword_1004D2DE0);
            int8x16_t v18 = v57;
            int8x16_t v17 = v61;
            int8x8_t v15 = v85;
            int8x8_t v16 = v93;
            uint8x8_t v14 = (int8x16_t *)&unk_1004D2000;
            unint64_t v13 = (int8x16_t *)&unk_1004D2000;
            int v10 = v77;
            uint64_t result = v69;
            a9 = v109;
            a7 = v117;
            a8 = v101;
          }
        }
        int16x8_t v19 = vmovl_s8(v15);
        int16x8_t v20 = vmovl_s8(v16);
        int8x16_t v21 = (int8x16_t)vmulq_f32(vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v19.i8)), vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v20.i8)));
        int8x16_t v22 = (int8x16_t)vmulq_f32(vcvtq_f32_s32(vmovl_high_s16(v19)), vcvtq_f32_s32(vmovl_high_s16(v20)));
        *(int8x8_t *)(a9 + result) = vqmovn_s16(vqmovn_high_s32(vqmovn_s32(vcvtq_s32_f32(vaddq_f32((float32x4_t)v21, (float32x4_t)vorrq_s8(vandq_s8(v18, v21), v17)))), vcvtq_s32_f32(vaddq_f32((float32x4_t)v22, (float32x4_t)vorrq_s8(vandq_s8(v13[219], v22), v14[221])))));
        result += 8;
      }
      while (v10 >= (int)result);
    }
    else
    {
      return 0;
    }
  }
  else
  {
    int v12 = a10 - 8;
    if (a10 >= 8)
    {
      uint64_t v35 = 0;
      float32x4_t v36 = (int8x16_t *)&unk_1004D2000;
      float32x4_t v37 = (int8x16_t *)&unk_1004D2000;
      do
      {
        int8x8_t v38 = *(int8x8_t *)(a7 + v35);
        int8x8_t v39 = *(int8x8_t *)(a8 + v35);
        if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DC0, memory_order_acquire) & 1) == 0)
        {
          uint64_t v102 = a8;
          uint64_t v110 = a9;
          uint64_t v118 = a7;
          int v70 = v12;
          uint64_t v78 = v35;
          int8x8_t v86 = v38;
          int8x8_t v94 = v39;
          __n128 v62 = a5;
          int v46 = __cxa_guard_acquire(qword_1004D2DC0);
          *(void *)&long long v47 = 0x8000000080000000;
          *((void *)&v47 + 1) = 0x8000000080000000;
          a5 = v62;
          int8x8_t v38 = v86;
          int8x8_t v39 = v94;
          float32x4_t v37 = (int8x16_t *)&unk_1004D2000;
          float32x4_t v36 = (int8x16_t *)&unk_1004D2000;
          uint64_t v35 = v78;
          int v12 = v70;
          a9 = v110;
          a7 = v118;
          a8 = v102;
          if (v46)
          {
            xmmword_1004D2DB0 = v47;
            __cxa_guard_release(qword_1004D2DC0);
            a5 = v62;
            int8x8_t v38 = v86;
            int8x8_t v39 = v94;
            float32x4_t v37 = (int8x16_t *)&unk_1004D2000;
            float32x4_t v36 = (int8x16_t *)&unk_1004D2000;
            uint64_t v35 = v78;
            int v12 = v70;
            a9 = v110;
            a7 = v118;
            a8 = v102;
          }
        }
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1004D2DE0, memory_order_acquire) & 1) == 0)
        {
          uint64_t v103 = a8;
          uint64_t v111 = a9;
          uint64_t v119 = a7;
          int v71 = v12;
          uint64_t v79 = v35;
          int8x8_t v87 = v38;
          int8x8_t v95 = v39;
          __n128 v63 = a5;
          int v48 = __cxa_guard_acquire(&qword_1004D2DE0);
          *(void *)&long long v49 = 0x3F0000003F000000;
          *((void *)&v49 + 1) = 0x3F0000003F000000;
          a5 = v63;
          int8x8_t v38 = v87;
          int8x8_t v39 = v95;
          float32x4_t v37 = (int8x16_t *)&unk_1004D2000;
          float32x4_t v36 = (int8x16_t *)&unk_1004D2000;
          uint64_t v35 = v79;
          int v12 = v71;
          a9 = v111;
          a7 = v119;
          a8 = v103;
          if (v48)
          {
            xmmword_1004D2DD0 = v49;
            __cxa_guard_release(&qword_1004D2DE0);
            a5 = v63;
            int8x8_t v38 = v87;
            int8x8_t v39 = v95;
            float32x4_t v37 = (int8x16_t *)&unk_1004D2000;
            float32x4_t v36 = (int8x16_t *)&unk_1004D2000;
            uint64_t v35 = v79;
            int v12 = v71;
            a9 = v111;
            a7 = v119;
            a8 = v103;
          }
        }
        int8x16_t v40 = v37[221];
        int8x16_t v41 = v36[219];
        if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DC0, memory_order_acquire) & 1) == 0)
        {
          uint64_t v104 = a8;
          uint64_t v112 = a9;
          uint64_t v120 = a7;
          int v72 = v12;
          uint64_t v80 = v35;
          int8x8_t v88 = v38;
          int8x8_t v96 = v39;
          int8x16_t v58 = v40;
          __n128 v64 = a5;
          int8x16_t v54 = v41;
          int v50 = __cxa_guard_acquire(qword_1004D2DC0);
          int8x16_t v41 = v54;
          int8x16_t v40 = v58;
          *(void *)&long long v51 = 0x8000000080000000;
          *((void *)&v51 + 1) = 0x8000000080000000;
          a5 = v64;
          int8x8_t v38 = v88;
          int8x8_t v39 = v96;
          float32x4_t v37 = (int8x16_t *)&unk_1004D2000;
          float32x4_t v36 = (int8x16_t *)&unk_1004D2000;
          uint64_t v35 = v80;
          int v12 = v72;
          a9 = v112;
          a7 = v120;
          a8 = v104;
          if (v50)
          {
            xmmword_1004D2DB0 = v51;
            __cxa_guard_release(qword_1004D2DC0);
            int8x16_t v41 = v54;
            int8x16_t v40 = v58;
            a5 = v64;
            int8x8_t v38 = v88;
            int8x8_t v39 = v96;
            float32x4_t v37 = (int8x16_t *)&unk_1004D2000;
            float32x4_t v36 = (int8x16_t *)&unk_1004D2000;
            uint64_t v35 = v80;
            int v12 = v72;
            a9 = v112;
            a7 = v120;
            a8 = v104;
          }
        }
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1004D2DE0, memory_order_acquire) & 1) == 0)
        {
          uint64_t v105 = a8;
          uint64_t v113 = a9;
          uint64_t v121 = a7;
          int v73 = v12;
          uint64_t v81 = v35;
          int8x8_t v89 = v38;
          int8x8_t v97 = v39;
          int8x16_t v59 = v40;
          __n128 v65 = a5;
          int8x16_t v55 = v41;
          int v52 = __cxa_guard_acquire(&qword_1004D2DE0);
          int8x16_t v41 = v55;
          int8x16_t v40 = v59;
          *(void *)&long long v53 = 0x3F0000003F000000;
          *((void *)&v53 + 1) = 0x3F0000003F000000;
          a5 = v65;
          int8x8_t v38 = v89;
          int8x8_t v39 = v97;
          float32x4_t v37 = (int8x16_t *)&unk_1004D2000;
          float32x4_t v36 = (int8x16_t *)&unk_1004D2000;
          uint64_t v35 = v81;
          int v12 = v73;
          a9 = v113;
          a7 = v121;
          a8 = v105;
          if (v52)
          {
            xmmword_1004D2DD0 = v53;
            __cxa_guard_release(&qword_1004D2DE0);
            int8x16_t v41 = v55;
            int8x16_t v40 = v59;
            a5 = v65;
            int8x8_t v38 = v89;
            int8x8_t v39 = v97;
            float32x4_t v37 = (int8x16_t *)&unk_1004D2000;
            float32x4_t v36 = (int8x16_t *)&unk_1004D2000;
            uint64_t v35 = v81;
            int v12 = v73;
            a9 = v113;
            a7 = v121;
            a8 = v105;
          }
        }
        int16x8_t v42 = vmovl_s8(v38);
        int16x8_t v43 = vmovl_s8(v39);
        int8x16_t v44 = (int8x16_t)vmulq_n_f32(vmulq_f32(vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v42.i8)), vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v43.i8))), a5.n128_f32[0]);
        int8x16_t v45 = (int8x16_t)vmulq_n_f32(vmulq_f32(vcvtq_f32_s32(vmovl_high_s16(v42)), vcvtq_f32_s32(vmovl_high_s16(v43))), a5.n128_f32[0]);
        *(int8x8_t *)(a9 + v35) = vqmovn_s16(vqmovn_high_s32(vqmovn_s32(vcvtq_s32_f32(vaddq_f32((float32x4_t)v44, (float32x4_t)vorrq_s8(vandq_s8(v41, v44), v40)))), vcvtq_s32_f32(vaddq_f32((float32x4_t)v45, (float32x4_t)vorrq_s8(vandq_s8(v36[219], v45), v37[221])))));
        v35 += 8;
      }
      while (v12 >= (int)v35);
      return v35;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10022BF4C(__n128 a1, uint64_t a2, uint16x8_t *a3, uint16x8_t *a4, uint16x8_t *a5, int a6)
{
  uint64_t result = 0;
  if (a1.n128_f32[0] == 1.0)
  {
    int v7 = a6 - 8;
    if (a6 >= 8)
    {
      int v8 = (float32x4_t *)&unk_1004D2000;
      do
      {
        uint16x8_t v9 = *a3;
        uint16x8_t v10 = *a4;
        if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DA0, memory_order_acquire) & 1) == 0)
        {
          int v53 = result;
          int8x16_t v41 = a4;
          int8x16_t v45 = a5;
          long long v49 = a3;
          int v37 = v7;
          uint16x8_t v29 = v10;
          uint16x8_t v33 = v9;
          LODWORD(result) = __cxa_guard_acquire(qword_1004D2DA0);
          uint16x8_t v10 = v29;
          uint16x8_t v9 = v33;
          *(void *)&long long v12 = 0x3F0000003F000000;
          *((void *)&v12 + 1) = 0x3F0000003F000000;
          int v8 = (float32x4_t *)&unk_1004D2000;
          int v7 = v37;
          a5 = v45;
          a3 = v49;
          a4 = v41;
          int v13 = result;
          LODWORD(result) = v53;
          if (v13)
          {
            xmmword_1004D2D90 = v12;
            __cxa_guard_release(qword_1004D2DA0);
            uint16x8_t v10 = v29;
            uint16x8_t v9 = v33;
            int v8 = (float32x4_t *)&unk_1004D2000;
            int v7 = v37;
            LODWORD(result) = v53;
            a5 = v45;
            a3 = v49;
            a4 = v41;
          }
        }
        float32x4_t v11 = v8[217];
        if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DA0, memory_order_acquire) & 1) == 0)
        {
          int v54 = result;
          int16x8_t v42 = a4;
          int v46 = a5;
          int v50 = a3;
          int v38 = v7;
          uint16x8_t v30 = v10;
          uint16x8_t v34 = v9;
          float32x4_t v26 = v11;
          LODWORD(result) = __cxa_guard_acquire(qword_1004D2DA0);
          float32x4_t v11 = v26;
          uint16x8_t v10 = v30;
          uint16x8_t v9 = v34;
          *(void *)&long long v14 = 0x3F0000003F000000;
          *((void *)&v14 + 1) = 0x3F0000003F000000;
          int v8 = (float32x4_t *)&unk_1004D2000;
          int v7 = v38;
          a5 = v46;
          a3 = v50;
          a4 = v42;
          int v15 = result;
          LODWORD(result) = v54;
          if (v15)
          {
            xmmword_1004D2D90 = v14;
            __cxa_guard_release(qword_1004D2DA0);
            float32x4_t v11 = v26;
            uint16x8_t v10 = v30;
            uint16x8_t v9 = v34;
            int v8 = (float32x4_t *)&unk_1004D2000;
            int v7 = v38;
            LODWORD(result) = v54;
            a5 = v46;
            a3 = v50;
            a4 = v42;
          }
        }
        *a5++ = vqmovn_high_u32(vqmovn_u32(vcvtq_u32_f32(vaddq_f32(vmulq_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v9.i8)), vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v10.i8))), v11))), vcvtq_u32_f32(vaddq_f32(vmulq_f32(vcvtq_f32_u32(vmovl_high_u16(v9)), vcvtq_f32_u32(vmovl_high_u16(v10))), v8[217])));
        ++a4;
        ++a3;
        uint64_t result = (result + 8);
      }
      while (v7 >= (int)result);
    }
  }
  else
  {
    int v16 = a6 - 8;
    if (a6 >= 8)
    {
      int8x16_t v17 = (float32x4_t *)&unk_1004D2000;
      do
      {
        uint16x8_t v18 = *a3;
        uint16x8_t v19 = *a4;
        if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DA0, memory_order_acquire) & 1) == 0)
        {
          int v55 = result;
          int16x8_t v43 = a4;
          long long v47 = a5;
          long long v51 = a3;
          int v39 = v16;
          uint16x8_t v31 = v18;
          __n128 v35 = a1;
          uint16x8_t v27 = v19;
          LODWORD(result) = __cxa_guard_acquire(qword_1004D2DA0);
          uint16x8_t v19 = v27;
          uint16x8_t v18 = v31;
          *(void *)&long long v21 = 0x3F0000003F000000;
          *((void *)&v21 + 1) = 0x3F0000003F000000;
          a1 = v35;
          int8x16_t v17 = (float32x4_t *)&unk_1004D2000;
          int v16 = v39;
          a5 = v47;
          a3 = v51;
          a4 = v43;
          int v22 = result;
          LODWORD(result) = v55;
          if (v22)
          {
            xmmword_1004D2D90 = v21;
            __cxa_guard_release(qword_1004D2DA0);
            uint16x8_t v19 = v27;
            uint16x8_t v18 = v31;
            a1 = v35;
            int8x16_t v17 = (float32x4_t *)&unk_1004D2000;
            int v16 = v39;
            LODWORD(result) = v55;
            a5 = v47;
            a3 = v51;
            a4 = v43;
          }
        }
        float32x4_t v20 = v17[217];
        if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DA0, memory_order_acquire) & 1) == 0)
        {
          int v56 = result;
          int8x16_t v44 = a4;
          int v48 = a5;
          int v52 = a3;
          int v40 = v16;
          uint16x8_t v32 = v18;
          __n128 v36 = a1;
          float32x4_t v25 = v20;
          uint16x8_t v28 = v19;
          LODWORD(result) = __cxa_guard_acquire(qword_1004D2DA0);
          float32x4_t v20 = v25;
          uint16x8_t v19 = v28;
          uint16x8_t v18 = v32;
          a1 = v36;
          *(void *)&long long v23 = 0x3F0000003F000000;
          *((void *)&v23 + 1) = 0x3F0000003F000000;
          int8x16_t v17 = (float32x4_t *)&unk_1004D2000;
          int v16 = v40;
          a5 = v48;
          a3 = v52;
          a4 = v44;
          int v24 = result;
          LODWORD(result) = v56;
          if (v24)
          {
            xmmword_1004D2D90 = v23;
            __cxa_guard_release(qword_1004D2DA0);
            float32x4_t v20 = v25;
            uint16x8_t v19 = v28;
            uint16x8_t v18 = v32;
            a1 = v36;
            int8x16_t v17 = (float32x4_t *)&unk_1004D2000;
            int v16 = v40;
            LODWORD(result) = v56;
            a5 = v48;
            a3 = v52;
            a4 = v44;
          }
        }
        *a5++ = vqmovn_high_u32(vqmovn_u32(vcvtq_u32_f32(vaddq_f32(vmulq_n_f32(vmulq_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v18.i8)), vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v19.i8))), a1.n128_f32[0]), v20))), vcvtq_u32_f32(vaddq_f32(vmulq_n_f32(vmulq_f32(vcvtq_f32_u32(vmovl_high_u16(v18)), vcvtq_f32_u32(vmovl_high_u16(v19))), a1.n128_f32[0]), v17[217])));
        ++a4;
        ++a3;
        uint64_t result = (result + 8);
      }
      while (v16 >= (int)result);
    }
  }
  return result;
}

uint64_t sub_10022C2A4(__n128 a1, uint64_t a2, int16x8_t *a3, int16x8_t *a4, int16x8_t *a5, int a6)
{
  uint64_t result = 0;
  if (a1.n128_f32[0] == 1.0)
  {
    int v7 = a6 - 8;
    if (a6 >= 8)
    {
      int v8 = (int8x16_t *)&unk_1004D2000;
      uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
      do
      {
        int16x8_t v10 = *a3;
        int16x8_t v11 = *a4;
        if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DC0, memory_order_acquire) & 1) == 0)
        {
          int v101 = result;
          int v77 = a4;
          int8x8_t v85 = a5;
          int8x8_t v93 = a3;
          int v69 = v7;
          int16x8_t v53 = v11;
          int16x8_t v61 = v10;
          LODWORD(result) = __cxa_guard_acquire(qword_1004D2DC0);
          int16x8_t v11 = v53;
          int16x8_t v10 = v61;
          *(void *)&long long v16 = 0x8000000080000000;
          *((void *)&v16 + 1) = 0x8000000080000000;
          uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
          int v8 = (int8x16_t *)&unk_1004D2000;
          int v7 = v69;
          a5 = v85;
          a3 = v93;
          a4 = v77;
          int v17 = result;
          LODWORD(result) = v101;
          if (v17)
          {
            xmmword_1004D2DB0 = v16;
            __cxa_guard_release(qword_1004D2DC0);
            int16x8_t v11 = v53;
            int16x8_t v10 = v61;
            uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
            int v8 = (int8x16_t *)&unk_1004D2000;
            int v7 = v69;
            LODWORD(result) = v101;
            a5 = v85;
            a3 = v93;
            a4 = v77;
          }
        }
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1004D2DE0, memory_order_acquire) & 1) == 0)
        {
          int v102 = result;
          uint64_t v78 = a4;
          int8x8_t v86 = a5;
          int8x8_t v94 = a3;
          int v70 = v7;
          int16x8_t v54 = v11;
          int16x8_t v62 = v10;
          LODWORD(result) = __cxa_guard_acquire(&qword_1004D2DE0);
          int16x8_t v11 = v54;
          int16x8_t v10 = v62;
          *(void *)&long long v18 = 0x3F0000003F000000;
          *((void *)&v18 + 1) = 0x3F0000003F000000;
          uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
          int v8 = (int8x16_t *)&unk_1004D2000;
          int v7 = v70;
          a5 = v86;
          a3 = v94;
          a4 = v78;
          int v19 = result;
          LODWORD(result) = v102;
          if (v19)
          {
            xmmword_1004D2DD0 = v18;
            __cxa_guard_release(&qword_1004D2DE0);
            int16x8_t v11 = v54;
            int16x8_t v10 = v62;
            uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
            int v8 = (int8x16_t *)&unk_1004D2000;
            int v7 = v70;
            LODWORD(result) = v102;
            a5 = v86;
            a3 = v94;
            a4 = v78;
          }
        }
        int8x16_t v12 = v9[221];
        int8x16_t v13 = v8[219];
        if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DC0, memory_order_acquire) & 1) == 0)
        {
          int v103 = result;
          uint64_t v79 = a4;
          int8x8_t v87 = a5;
          int8x8_t v95 = a3;
          int v71 = v7;
          int16x8_t v55 = v11;
          int16x8_t v63 = v10;
          int8x16_t v43 = v13;
          int8x16_t v47 = v12;
          LODWORD(result) = __cxa_guard_acquire(qword_1004D2DC0);
          int8x16_t v13 = v43;
          int8x16_t v12 = v47;
          int16x8_t v11 = v55;
          int16x8_t v10 = v63;
          *(void *)&long long v20 = 0x8000000080000000;
          *((void *)&v20 + 1) = 0x8000000080000000;
          uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
          int v8 = (int8x16_t *)&unk_1004D2000;
          int v7 = v71;
          a5 = v87;
          a3 = v95;
          a4 = v79;
          int v21 = result;
          LODWORD(result) = v103;
          if (v21)
          {
            xmmword_1004D2DB0 = v20;
            __cxa_guard_release(qword_1004D2DC0);
            int8x16_t v13 = v43;
            int8x16_t v12 = v47;
            int16x8_t v11 = v55;
            int16x8_t v10 = v63;
            uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
            int v8 = (int8x16_t *)&unk_1004D2000;
            int v7 = v71;
            LODWORD(result) = v103;
            a5 = v87;
            a3 = v95;
            a4 = v79;
          }
        }
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1004D2DE0, memory_order_acquire) & 1) == 0)
        {
          int v104 = result;
          uint64_t v80 = a4;
          int8x8_t v88 = a5;
          int8x8_t v96 = a3;
          int v72 = v7;
          int16x8_t v56 = v11;
          int16x8_t v64 = v10;
          int8x16_t v44 = v13;
          int8x16_t v48 = v12;
          LODWORD(result) = __cxa_guard_acquire(&qword_1004D2DE0);
          int8x16_t v13 = v44;
          int8x16_t v12 = v48;
          int16x8_t v11 = v56;
          int16x8_t v10 = v64;
          *(void *)&long long v22 = 0x3F0000003F000000;
          *((void *)&v22 + 1) = 0x3F0000003F000000;
          uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
          int v8 = (int8x16_t *)&unk_1004D2000;
          int v7 = v72;
          a5 = v88;
          a3 = v96;
          a4 = v80;
          int v23 = result;
          LODWORD(result) = v104;
          if (v23)
          {
            xmmword_1004D2DD0 = v22;
            __cxa_guard_release(&qword_1004D2DE0);
            int8x16_t v13 = v44;
            int8x16_t v12 = v48;
            int16x8_t v11 = v56;
            int16x8_t v10 = v64;
            uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
            int v8 = (int8x16_t *)&unk_1004D2000;
            int v7 = v72;
            LODWORD(result) = v104;
            a5 = v88;
            a3 = v96;
            a4 = v80;
          }
        }
        int8x16_t v14 = (int8x16_t)vmulq_f32(vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v10.i8)), vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v11.i8)));
        int8x16_t v15 = (int8x16_t)vmulq_f32(vcvtq_f32_s32(vmovl_high_s16(v10)), vcvtq_f32_s32(vmovl_high_s16(v11)));
        *a5++ = vqmovn_high_s32(vqmovn_s32(vcvtq_s32_f32(vaddq_f32((float32x4_t)v14, (float32x4_t)vorrq_s8(vandq_s8(v13, v14), v12)))), vcvtq_s32_f32(vaddq_f32((float32x4_t)v15, (float32x4_t)vorrq_s8(vandq_s8(v8[219], v15), v9[221]))));
        ++a4;
        ++a3;
        uint64_t result = (result + 8);
      }
      while (v7 >= (int)result);
    }
  }
  else
  {
    int v24 = a6 - 8;
    if (a6 >= 8)
    {
      float32x4_t v25 = (int8x16_t *)&unk_1004D2000;
      float32x4_t v26 = (int8x16_t *)&unk_1004D2000;
      do
      {
        int16x8_t v27 = *a3;
        int16x8_t v28 = *a4;
        if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DC0, memory_order_acquire) & 1) == 0)
        {
          int v105 = result;
          uint64_t v81 = a4;
          int8x8_t v89 = a5;
          int8x8_t v97 = a3;
          int v73 = v24;
          int16x8_t v57 = v27;
          __n128 v65 = a1;
          int16x8_t v49 = v28;
          LODWORD(result) = __cxa_guard_acquire(qword_1004D2DC0);
          int16x8_t v28 = v49;
          int16x8_t v27 = v57;
          *(void *)&long long v33 = 0x8000000080000000;
          *((void *)&v33 + 1) = 0x8000000080000000;
          a1 = v65;
          float32x4_t v26 = (int8x16_t *)&unk_1004D2000;
          float32x4_t v25 = (int8x16_t *)&unk_1004D2000;
          int v24 = v73;
          a5 = v89;
          a3 = v97;
          a4 = v81;
          int v34 = result;
          LODWORD(result) = v105;
          if (v34)
          {
            xmmword_1004D2DB0 = v33;
            __cxa_guard_release(qword_1004D2DC0);
            int16x8_t v28 = v49;
            int16x8_t v27 = v57;
            a1 = v65;
            float32x4_t v26 = (int8x16_t *)&unk_1004D2000;
            float32x4_t v25 = (int8x16_t *)&unk_1004D2000;
            int v24 = v73;
            LODWORD(result) = v105;
            a5 = v89;
            a3 = v97;
            a4 = v81;
          }
        }
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1004D2DE0, memory_order_acquire) & 1) == 0)
        {
          int v106 = result;
          int8x8_t v82 = a4;
          int8x8_t v90 = a5;
          uint64_t v98 = a3;
          int v74 = v24;
          int16x8_t v58 = v27;
          __n128 v66 = a1;
          int16x8_t v50 = v28;
          LODWORD(result) = __cxa_guard_acquire(&qword_1004D2DE0);
          int16x8_t v28 = v50;
          int16x8_t v27 = v58;
          *(void *)&long long v35 = 0x3F0000003F000000;
          *((void *)&v35 + 1) = 0x3F0000003F000000;
          a1 = v66;
          float32x4_t v26 = (int8x16_t *)&unk_1004D2000;
          float32x4_t v25 = (int8x16_t *)&unk_1004D2000;
          int v24 = v74;
          a5 = v90;
          a3 = v98;
          a4 = v82;
          int v36 = result;
          LODWORD(result) = v106;
          if (v36)
          {
            xmmword_1004D2DD0 = v35;
            __cxa_guard_release(&qword_1004D2DE0);
            int16x8_t v28 = v50;
            int16x8_t v27 = v58;
            a1 = v66;
            float32x4_t v26 = (int8x16_t *)&unk_1004D2000;
            float32x4_t v25 = (int8x16_t *)&unk_1004D2000;
            int v24 = v74;
            LODWORD(result) = v106;
            a5 = v90;
            a3 = v98;
            a4 = v82;
          }
        }
        int8x16_t v29 = v26[221];
        int8x16_t v30 = v25[219];
        if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DC0, memory_order_acquire) & 1) == 0)
        {
          int v107 = result;
          int8x8_t v83 = a4;
          int8x8_t v91 = a5;
          uint64_t v99 = a3;
          int v75 = v24;
          int16x8_t v59 = v27;
          __n128 v67 = a1;
          int8x16_t v45 = v29;
          int16x8_t v51 = v28;
          int8x16_t v41 = v30;
          LODWORD(result) = __cxa_guard_acquire(qword_1004D2DC0);
          int8x16_t v30 = v41;
          int8x16_t v29 = v45;
          int16x8_t v28 = v51;
          int16x8_t v27 = v59;
          *(void *)&long long v37 = 0x8000000080000000;
          *((void *)&v37 + 1) = 0x8000000080000000;
          a1 = v67;
          float32x4_t v26 = (int8x16_t *)&unk_1004D2000;
          float32x4_t v25 = (int8x16_t *)&unk_1004D2000;
          int v24 = v75;
          a5 = v91;
          a3 = v99;
          a4 = v83;
          int v38 = result;
          LODWORD(result) = v107;
          if (v38)
          {
            xmmword_1004D2DB0 = v37;
            __cxa_guard_release(qword_1004D2DC0);
            int8x16_t v30 = v41;
            int8x16_t v29 = v45;
            int16x8_t v28 = v51;
            int16x8_t v27 = v59;
            a1 = v67;
            float32x4_t v26 = (int8x16_t *)&unk_1004D2000;
            float32x4_t v25 = (int8x16_t *)&unk_1004D2000;
            int v24 = v75;
            LODWORD(result) = v107;
            a5 = v91;
            a3 = v99;
            a4 = v83;
          }
        }
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1004D2DE0, memory_order_acquire) & 1) == 0)
        {
          int v108 = result;
          int8x8_t v84 = a4;
          int8x8_t v92 = a5;
          uint64_t v100 = a3;
          int v76 = v24;
          int16x8_t v60 = v27;
          __n128 v68 = a1;
          int8x16_t v46 = v29;
          int16x8_t v52 = v28;
          int8x16_t v42 = v30;
          LODWORD(result) = __cxa_guard_acquire(&qword_1004D2DE0);
          int8x16_t v30 = v42;
          int8x16_t v29 = v46;
          int16x8_t v28 = v52;
          int16x8_t v27 = v60;
          *(void *)&long long v39 = 0x3F0000003F000000;
          *((void *)&v39 + 1) = 0x3F0000003F000000;
          a1 = v68;
          float32x4_t v26 = (int8x16_t *)&unk_1004D2000;
          float32x4_t v25 = (int8x16_t *)&unk_1004D2000;
          int v24 = v76;
          a5 = v92;
          a3 = v100;
          a4 = v84;
          int v40 = result;
          LODWORD(result) = v108;
          if (v40)
          {
            xmmword_1004D2DD0 = v39;
            __cxa_guard_release(&qword_1004D2DE0);
            int8x16_t v30 = v42;
            int8x16_t v29 = v46;
            int16x8_t v28 = v52;
            int16x8_t v27 = v60;
            a1 = v68;
            float32x4_t v26 = (int8x16_t *)&unk_1004D2000;
            float32x4_t v25 = (int8x16_t *)&unk_1004D2000;
            int v24 = v76;
            LODWORD(result) = v108;
            a5 = v92;
            a3 = v100;
            a4 = v84;
          }
        }
        int8x16_t v31 = (int8x16_t)vmulq_n_f32(vmulq_f32(vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v27.i8)), vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v28.i8))), a1.n128_f32[0]);
        int8x16_t v32 = (int8x16_t)vmulq_n_f32(vmulq_f32(vcvtq_f32_s32(vmovl_high_s16(v27)), vcvtq_f32_s32(vmovl_high_s16(v28))), a1.n128_f32[0]);
        *a5++ = vqmovn_high_s32(vqmovn_s32(vcvtq_s32_f32(vaddq_f32((float32x4_t)v31, (float32x4_t)vorrq_s8(vandq_s8(v30, v31), v29)))), vcvtq_s32_f32(vaddq_f32((float32x4_t)v32, (float32x4_t)vorrq_s8(vandq_s8(v25[219], v32), v26[221]))));
        ++a4;
        ++a3;
        uint64_t result = (result + 8);
      }
      while (v24 >= (int)result);
    }
  }
  return result;
}

uint64_t sub_10022C940(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, double a6, double a7, double a8, double a9, double a10, __n128 a11)
{
  if (!*a1) {
    return 0;
  }
  int v11 = a5 - 8;
  if (a5 < 8) {
    return 0;
  }
  uint64_t result = 0;
  a11.n128_f32[0] = a6;
  int8x16_t v13 = (int8x16_t *)&unk_1004D2000;
  int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
  do
  {
    uint8x8_t v15 = *(uint8x8_t *)(a2 + result);
    int8x8_t v16 = *(int8x8_t *)(a3 + result);
    if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
    {
      uint64_t v55 = result;
      uint64_t v47 = a4;
      uint64_t v43 = a3;
      uint64_t v51 = a2;
      int v59 = v11;
      int8x8_t v63 = v16;
      uint8x8_t v67 = v15;
      __n128 v39 = a11;
      int v23 = __cxa_guard_acquire(qword_1004D2D60);
      a11 = v39;
      *(void *)&long long v24 = 0x8000000080000000;
      *((void *)&v24 + 1) = 0x8000000080000000;
      int8x8_t v16 = v63;
      uint8x8_t v15 = v67;
      int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
      int8x16_t v13 = (int8x16_t *)&unk_1004D2000;
      int v11 = v59;
      a4 = v47;
      a2 = v51;
      a3 = v43;
      int v25 = v23;
      uint64_t result = v55;
      if (v25)
      {
        xmmword_1004D2D50 = v24;
        __cxa_guard_release(qword_1004D2D60);
        a11 = v39;
        int8x8_t v16 = v63;
        uint8x8_t v15 = v67;
        int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
        int8x16_t v13 = (int8x16_t *)&unk_1004D2000;
        int v11 = v59;
        a2 = v51;
        uint64_t result = v55;
        a3 = v43;
        a4 = v47;
      }
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
    {
      uint64_t v56 = result;
      uint64_t v48 = a4;
      uint64_t v44 = a3;
      uint64_t v52 = a2;
      int v60 = v11;
      int8x8_t v64 = v16;
      uint8x8_t v68 = v15;
      __n128 v40 = a11;
      int v26 = __cxa_guard_acquire(qword_1004D2D80);
      a11 = v40;
      *(void *)&long long v27 = 0x3F0000003F000000;
      *((void *)&v27 + 1) = 0x3F0000003F000000;
      int8x8_t v16 = v64;
      uint8x8_t v15 = v68;
      int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
      int8x16_t v13 = (int8x16_t *)&unk_1004D2000;
      int v11 = v60;
      a4 = v48;
      a2 = v52;
      a3 = v44;
      int v28 = v26;
      uint64_t result = v56;
      if (v28)
      {
        xmmword_1004D2D70 = v27;
        __cxa_guard_release(qword_1004D2D80);
        a11 = v40;
        int8x8_t v16 = v64;
        uint8x8_t v15 = v68;
        int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
        int8x16_t v13 = (int8x16_t *)&unk_1004D2000;
        int v11 = v60;
        a2 = v52;
        uint64_t result = v56;
        a3 = v44;
        a4 = v48;
      }
    }
    int8x16_t v17 = v14[215];
    int8x16_t v18 = v13[213];
    if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
    {
      uint64_t v57 = result;
      uint64_t v49 = a4;
      uint64_t v45 = a3;
      uint64_t v53 = a2;
      int v61 = v11;
      int8x8_t v65 = v16;
      uint8x8_t v69 = v15;
      int8x16_t v37 = v17;
      __n128 v41 = a11;
      int8x16_t v35 = v18;
      int v29 = __cxa_guard_acquire(qword_1004D2D60);
      int8x16_t v18 = v35;
      int8x16_t v17 = v37;
      a11 = v41;
      *(void *)&long long v30 = 0x8000000080000000;
      *((void *)&v30 + 1) = 0x8000000080000000;
      int8x8_t v16 = v65;
      uint8x8_t v15 = v69;
      int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
      int8x16_t v13 = (int8x16_t *)&unk_1004D2000;
      int v11 = v61;
      a4 = v49;
      a2 = v53;
      a3 = v45;
      int v31 = v29;
      uint64_t result = v57;
      if (v31)
      {
        xmmword_1004D2D50 = v30;
        __cxa_guard_release(qword_1004D2D60);
        int8x16_t v18 = v35;
        int8x16_t v17 = v37;
        a11 = v41;
        int8x8_t v16 = v65;
        uint8x8_t v15 = v69;
        int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
        int8x16_t v13 = (int8x16_t *)&unk_1004D2000;
        int v11 = v61;
        a2 = v53;
        uint64_t result = v57;
        a3 = v45;
        a4 = v49;
      }
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
    {
      uint64_t v58 = result;
      uint64_t v50 = a4;
      uint64_t v46 = a3;
      uint64_t v54 = a2;
      int v62 = v11;
      int8x8_t v66 = v16;
      uint8x8_t v70 = v15;
      int8x16_t v38 = v17;
      __n128 v42 = a11;
      int8x16_t v36 = v18;
      int v32 = __cxa_guard_acquire(qword_1004D2D80);
      int8x16_t v18 = v36;
      int8x16_t v17 = v38;
      a11 = v42;
      *(void *)&long long v33 = 0x3F0000003F000000;
      *((void *)&v33 + 1) = 0x3F0000003F000000;
      int8x8_t v16 = v66;
      uint8x8_t v15 = v70;
      int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
      int8x16_t v13 = (int8x16_t *)&unk_1004D2000;
      int v11 = v62;
      a4 = v50;
      a2 = v54;
      a3 = v46;
      int v34 = v32;
      uint64_t result = v58;
      if (v34)
      {
        xmmword_1004D2D70 = v33;
        __cxa_guard_release(qword_1004D2D80);
        int8x16_t v18 = v36;
        int8x16_t v17 = v38;
        a11 = v42;
        int8x8_t v16 = v66;
        uint8x8_t v15 = v70;
        int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
        int8x16_t v13 = (int8x16_t *)&unk_1004D2000;
        int v11 = v62;
        a2 = v54;
        uint64_t result = v58;
        a3 = v46;
        a4 = v50;
      }
    }
    uint16x8_t v19 = vmovl_u8(v15);
    uint16x8_t v20 = vmovl_u8((uint8x8_t)v16);
    int8x16_t v21 = (int8x16_t)vdivq_f32(vmulq_n_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v19.i8)), a11.n128_f32[0]), vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v20.i8)));
    int8x16_t v22 = (int8x16_t)vdivq_f32(vmulq_n_f32(vcvtq_f32_u32(vmovl_high_u16(v19)), a11.n128_f32[0]), vcvtq_f32_u32(vmovl_high_u16(v20)));
    *(uint8x8_t *)(a4 + result) = vqmovn_u16((uint16x8_t)vbicq_s8((int8x16_t)vqmovun_high_s32(vqmovun_s32(vcvtq_s32_f32(vaddq_f32((float32x4_t)v21, (float32x4_t)vorrq_s8(vandq_s8(v18, v21), v17)))), vcvtq_s32_f32(vaddq_f32((float32x4_t)v22, (float32x4_t)vorrq_s8(vandq_s8(v13[213], v22), v14[215])))), (int8x16_t)vmovl_s8(vceqz_s8(v16))));
    result += 8;
  }
  while (v11 >= (int)result);
  return result;
}

uint64_t sub_10022CD14(unsigned char *a1, uint64_t a2, uint64_t a3, int a4, double a5)
{
  if (!*a1) {
    return 0;
  }
  int v5 = a4 - 8;
  if (a4 < 8) {
    return 0;
  }
  uint64_t result = 0;
  *(float *)&a5 = a5;
  float32x4_t v7 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a5, 0);
  int v8 = (int8x16_t *)&unk_1004D2000;
  uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
  do
  {
    int8x8_t v10 = *(int8x8_t *)(a2 + result);
    if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
    {
      uint64_t v40 = a3;
      uint64_t v44 = result;
      uint64_t v36 = a2;
      int v48 = v5;
      int8x8_t v52 = v10;
      float32x4_t v32 = v7;
      int v16 = __cxa_guard_acquire(qword_1004D2D60);
      float32x4_t v7 = v32;
      *(void *)&long long v17 = 0x8000000080000000;
      *((void *)&v17 + 1) = 0x8000000080000000;
      int8x8_t v10 = v52;
      uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
      int v8 = (int8x16_t *)&unk_1004D2000;
      int v5 = v48;
      a2 = v36;
      a3 = v40;
      int v18 = v16;
      uint64_t result = v44;
      if (v18)
      {
        xmmword_1004D2D50 = v17;
        __cxa_guard_release(qword_1004D2D60);
        float32x4_t v7 = v32;
        int8x8_t v10 = v52;
        uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
        int v8 = (int8x16_t *)&unk_1004D2000;
        int v5 = v48;
        a2 = v36;
        a3 = v40;
        uint64_t result = v44;
      }
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
    {
      uint64_t v41 = a3;
      uint64_t v45 = result;
      uint64_t v37 = a2;
      int v49 = v5;
      int8x8_t v53 = v10;
      float32x4_t v33 = v7;
      int v19 = __cxa_guard_acquire(qword_1004D2D80);
      float32x4_t v7 = v33;
      *(void *)&long long v20 = 0x3F0000003F000000;
      *((void *)&v20 + 1) = 0x3F0000003F000000;
      int8x8_t v10 = v53;
      uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
      int v8 = (int8x16_t *)&unk_1004D2000;
      int v5 = v49;
      a2 = v37;
      a3 = v41;
      int v21 = v19;
      uint64_t result = v45;
      if (v21)
      {
        xmmword_1004D2D70 = v20;
        __cxa_guard_release(qword_1004D2D80);
        float32x4_t v7 = v33;
        int8x8_t v10 = v53;
        uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
        int v8 = (int8x16_t *)&unk_1004D2000;
        int v5 = v49;
        a2 = v37;
        a3 = v41;
        uint64_t result = v45;
      }
    }
    int8x16_t v11 = v9[215];
    int8x16_t v12 = v8[213];
    if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
    {
      uint64_t v42 = a3;
      uint64_t v46 = result;
      uint64_t v38 = a2;
      int v50 = v5;
      int8x8_t v54 = v10;
      int8x16_t v30 = v11;
      float32x4_t v34 = v7;
      int8x16_t v28 = v12;
      int v22 = __cxa_guard_acquire(qword_1004D2D60);
      int8x16_t v12 = v28;
      int8x16_t v11 = v30;
      float32x4_t v7 = v34;
      *(void *)&long long v23 = 0x8000000080000000;
      *((void *)&v23 + 1) = 0x8000000080000000;
      int8x8_t v10 = v54;
      uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
      int v8 = (int8x16_t *)&unk_1004D2000;
      int v5 = v50;
      a2 = v38;
      a3 = v42;
      int v24 = v22;
      uint64_t result = v46;
      if (v24)
      {
        xmmword_1004D2D50 = v23;
        __cxa_guard_release(qword_1004D2D60);
        int8x16_t v12 = v28;
        int8x16_t v11 = v30;
        float32x4_t v7 = v34;
        int8x8_t v10 = v54;
        uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
        int v8 = (int8x16_t *)&unk_1004D2000;
        int v5 = v50;
        a2 = v38;
        a3 = v42;
        uint64_t result = v46;
      }
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
    {
      uint64_t v43 = a3;
      uint64_t v47 = result;
      uint64_t v39 = a2;
      int v51 = v5;
      int8x8_t v55 = v10;
      int8x16_t v31 = v11;
      float32x4_t v35 = v7;
      int8x16_t v29 = v12;
      int v25 = __cxa_guard_acquire(qword_1004D2D80);
      int8x16_t v12 = v29;
      int8x16_t v11 = v31;
      float32x4_t v7 = v35;
      *(void *)&long long v26 = 0x3F0000003F000000;
      *((void *)&v26 + 1) = 0x3F0000003F000000;
      int8x8_t v10 = v55;
      uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
      int v8 = (int8x16_t *)&unk_1004D2000;
      int v5 = v51;
      a2 = v39;
      a3 = v43;
      int v27 = v25;
      uint64_t result = v47;
      if (v27)
      {
        xmmword_1004D2D70 = v26;
        __cxa_guard_release(qword_1004D2D80);
        int8x16_t v12 = v29;
        int8x16_t v11 = v31;
        float32x4_t v7 = v35;
        int8x8_t v10 = v55;
        uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
        int v8 = (int8x16_t *)&unk_1004D2000;
        int v5 = v51;
        a2 = v39;
        a3 = v43;
        uint64_t result = v47;
      }
    }
    uint16x8_t v13 = vmovl_u8((uint8x8_t)v10);
    int8x16_t v14 = (int8x16_t)vdivq_f32(v7, vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v13.i8)));
    int8x16_t v15 = (int8x16_t)vdivq_f32(v7, vcvtq_f32_u32(vmovl_high_u16(v13)));
    *(uint8x8_t *)(a3 + result) = vqmovn_u16((uint16x8_t)vbicq_s8((int8x16_t)vqmovun_high_s32(vqmovun_s32(vcvtq_s32_f32(vaddq_f32((float32x4_t)v14, (float32x4_t)vorrq_s8(vandq_s8(v12, v14), v11)))), vcvtq_s32_f32(vaddq_f32((float32x4_t)v15, (float32x4_t)vorrq_s8(vandq_s8(v8[213], v15), v9[215])))), (int8x16_t)vmovl_s8(vceqz_s8(v10))));
    result += 8;
  }
  while (v5 >= (int)result);
  return result;
}

uint64_t sub_10022D08C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, double a6, double a7, double a8, double a9, double a10, __n128 a11)
{
  if (!*a1) {
    return 0;
  }
  int v11 = a5 - 8;
  if (a5 < 8) {
    return 0;
  }
  uint64_t result = 0;
  a11.n128_f32[0] = a6;
  uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
  int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
  do
  {
    int8x8_t v15 = *(int8x8_t *)(a2 + result);
    int8x8_t v16 = *(int8x8_t *)(a3 + result);
    if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
    {
      uint64_t v55 = result;
      uint64_t v47 = a4;
      uint64_t v43 = a3;
      uint64_t v51 = a2;
      int v59 = v11;
      int8x8_t v63 = v16;
      int8x8_t v67 = v15;
      __n128 v39 = a11;
      int v23 = __cxa_guard_acquire(qword_1004D2D60);
      a11 = v39;
      *(void *)&long long v24 = 0x8000000080000000;
      *((void *)&v24 + 1) = 0x8000000080000000;
      int8x8_t v16 = v63;
      int8x8_t v15 = v67;
      int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
      uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
      int v11 = v59;
      a4 = v47;
      a2 = v51;
      a3 = v43;
      int v25 = v23;
      uint64_t result = v55;
      if (v25)
      {
        xmmword_1004D2D50 = v24;
        __cxa_guard_release(qword_1004D2D60);
        a11 = v39;
        int8x8_t v16 = v63;
        int8x8_t v15 = v67;
        int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
        uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
        int v11 = v59;
        a2 = v51;
        uint64_t result = v55;
        a3 = v43;
        a4 = v47;
      }
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
    {
      uint64_t v56 = result;
      uint64_t v48 = a4;
      uint64_t v44 = a3;
      uint64_t v52 = a2;
      int v60 = v11;
      int8x8_t v64 = v16;
      int8x8_t v68 = v15;
      __n128 v40 = a11;
      int v26 = __cxa_guard_acquire(qword_1004D2D80);
      a11 = v40;
      *(void *)&long long v27 = 0x3F0000003F000000;
      *((void *)&v27 + 1) = 0x3F0000003F000000;
      int8x8_t v16 = v64;
      int8x8_t v15 = v68;
      int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
      uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
      int v11 = v60;
      a4 = v48;
      a2 = v52;
      a3 = v44;
      int v28 = v26;
      uint64_t result = v56;
      if (v28)
      {
        xmmword_1004D2D70 = v27;
        __cxa_guard_release(qword_1004D2D80);
        a11 = v40;
        int8x8_t v16 = v64;
        int8x8_t v15 = v68;
        int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
        uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
        int v11 = v60;
        a2 = v52;
        uint64_t result = v56;
        a3 = v44;
        a4 = v48;
      }
    }
    int8x16_t v17 = v14[215];
    int8x16_t v18 = v13[213];
    if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
    {
      uint64_t v57 = result;
      uint64_t v49 = a4;
      uint64_t v45 = a3;
      uint64_t v53 = a2;
      int v61 = v11;
      int8x8_t v65 = v16;
      int8x8_t v69 = v15;
      int8x16_t v37 = v17;
      __n128 v41 = a11;
      int8x16_t v35 = v18;
      int v29 = __cxa_guard_acquire(qword_1004D2D60);
      int8x16_t v18 = v35;
      int8x16_t v17 = v37;
      a11 = v41;
      *(void *)&long long v30 = 0x8000000080000000;
      *((void *)&v30 + 1) = 0x8000000080000000;
      int8x8_t v16 = v65;
      int8x8_t v15 = v69;
      int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
      uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
      int v11 = v61;
      a4 = v49;
      a2 = v53;
      a3 = v45;
      int v31 = v29;
      uint64_t result = v57;
      if (v31)
      {
        xmmword_1004D2D50 = v30;
        __cxa_guard_release(qword_1004D2D60);
        int8x16_t v18 = v35;
        int8x16_t v17 = v37;
        a11 = v41;
        int8x8_t v16 = v65;
        int8x8_t v15 = v69;
        int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
        uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
        int v11 = v61;
        a2 = v53;
        uint64_t result = v57;
        a3 = v45;
        a4 = v49;
      }
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
    {
      uint64_t v58 = result;
      uint64_t v50 = a4;
      uint64_t v46 = a3;
      uint64_t v54 = a2;
      int v62 = v11;
      int8x8_t v66 = v16;
      int8x8_t v70 = v15;
      int8x16_t v38 = v17;
      __n128 v42 = a11;
      int8x16_t v36 = v18;
      int v32 = __cxa_guard_acquire(qword_1004D2D80);
      int8x16_t v18 = v36;
      int8x16_t v17 = v38;
      a11 = v42;
      *(void *)&long long v33 = 0x3F0000003F000000;
      *((void *)&v33 + 1) = 0x3F0000003F000000;
      int8x8_t v16 = v66;
      int8x8_t v15 = v70;
      int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
      uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
      int v11 = v62;
      a4 = v50;
      a2 = v54;
      a3 = v46;
      int v34 = v32;
      uint64_t result = v58;
      if (v34)
      {
        xmmword_1004D2D70 = v33;
        __cxa_guard_release(qword_1004D2D80);
        int8x16_t v18 = v36;
        int8x16_t v17 = v38;
        a11 = v42;
        int8x8_t v16 = v66;
        int8x8_t v15 = v70;
        int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
        uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
        int v11 = v62;
        a2 = v54;
        uint64_t result = v58;
        a3 = v46;
        a4 = v50;
      }
    }
    int16x8_t v19 = vmovl_s8(v15);
    int16x8_t v20 = vmovl_s8(v16);
    int8x16_t v21 = (int8x16_t)vdivq_f32(vmulq_n_f32(vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v19.i8)), a11.n128_f32[0]), vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v20.i8)));
    int8x16_t v22 = (int8x16_t)vdivq_f32(vmulq_n_f32(vcvtq_f32_s32(vmovl_high_s16(v19)), a11.n128_f32[0]), vcvtq_f32_s32(vmovl_high_s16(v20)));
    *(int8x8_t *)(a4 + result) = vqmovn_s16((int16x8_t)vbicq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vcvtq_s32_f32(vaddq_f32((float32x4_t)v21, (float32x4_t)vorrq_s8(vandq_s8(v18, v21), v17)))), vcvtq_s32_f32(vaddq_f32((float32x4_t)v22, (float32x4_t)vorrq_s8(vandq_s8(v13[213], v22), v14[215])))), (int8x16_t)vmovl_s8(vceqz_s8(v16))));
    result += 8;
  }
  while (v11 >= (int)result);
  return result;
}

uint64_t sub_10022D460(unsigned char *a1, uint16x8_t *a2, int16x8_t *a3, int8x16_t *a4, int a5, double a6, double a7, double a8, double a9, __n128 a10)
{
  if (!*a1) {
    return 0;
  }
  uint64_t result = 0;
  int v11 = a5 - 8;
  if (a5 >= 8)
  {
    a10.n128_f32[0] = a6;
    int8x16_t v12 = (int8x16_t *)&unk_1004D2000;
    uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
    do
    {
      uint16x8_t v14 = *a2;
      int16x8_t v15 = *a3;
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
      {
        int v56 = result;
        int v60 = v11;
        uint64_t v44 = a3;
        uint64_t v48 = a4;
        uint64_t v52 = a2;
        __n128 v40 = a10;
        uint16x8_t v32 = v14;
        int16x8_t v36 = v15;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D60);
        uint16x8_t v14 = v32;
        int16x8_t v15 = v36;
        a10 = v40;
        *(void *)&long long v20 = 0x8000000080000000;
        *((void *)&v20 + 1) = 0x8000000080000000;
        uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
        int8x16_t v12 = (int8x16_t *)&unk_1004D2000;
        a4 = v48;
        a2 = v52;
        a3 = v44;
        int v21 = result;
        LODWORD(result) = v56;
        int v11 = v60;
        if (v21)
        {
          xmmword_1004D2D50 = v20;
          __cxa_guard_release(qword_1004D2D60);
          uint16x8_t v14 = v32;
          int16x8_t v15 = v36;
          a10 = v40;
          uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
          int8x16_t v12 = (int8x16_t *)&unk_1004D2000;
          LODWORD(result) = v56;
          int v11 = v60;
          a4 = v48;
          a2 = v52;
          a3 = v44;
        }
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
      {
        int v57 = result;
        int v61 = v11;
        uint64_t v45 = a3;
        uint64_t v49 = a4;
        uint64_t v53 = a2;
        __n128 v41 = a10;
        uint16x8_t v33 = v14;
        int16x8_t v37 = v15;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D80);
        uint16x8_t v14 = v33;
        int16x8_t v15 = v37;
        a10 = v41;
        *(void *)&long long v22 = 0x3F0000003F000000;
        *((void *)&v22 + 1) = 0x3F0000003F000000;
        uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
        int8x16_t v12 = (int8x16_t *)&unk_1004D2000;
        a4 = v49;
        a2 = v53;
        a3 = v45;
        int v23 = result;
        LODWORD(result) = v57;
        int v11 = v61;
        if (v23)
        {
          xmmword_1004D2D70 = v22;
          __cxa_guard_release(qword_1004D2D80);
          uint16x8_t v14 = v33;
          int16x8_t v15 = v37;
          a10 = v41;
          uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
          int8x16_t v12 = (int8x16_t *)&unk_1004D2000;
          LODWORD(result) = v57;
          int v11 = v61;
          a4 = v49;
          a2 = v53;
          a3 = v45;
        }
      }
      int8x16_t v16 = v13[215];
      int8x16_t v17 = v12[213];
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
      {
        int v58 = result;
        int v62 = v11;
        uint64_t v46 = a3;
        uint64_t v50 = a4;
        uint64_t v54 = a2;
        __n128 v42 = a10;
        uint16x8_t v34 = v14;
        int16x8_t v38 = v15;
        int8x16_t v28 = v17;
        int8x16_t v30 = v16;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D60);
        int8x16_t v17 = v28;
        int8x16_t v16 = v30;
        uint16x8_t v14 = v34;
        int16x8_t v15 = v38;
        a10 = v42;
        *(void *)&long long v24 = 0x8000000080000000;
        *((void *)&v24 + 1) = 0x8000000080000000;
        uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
        int8x16_t v12 = (int8x16_t *)&unk_1004D2000;
        a4 = v50;
        a2 = v54;
        a3 = v46;
        int v25 = result;
        LODWORD(result) = v58;
        int v11 = v62;
        if (v25)
        {
          xmmword_1004D2D50 = v24;
          __cxa_guard_release(qword_1004D2D60);
          int8x16_t v17 = v28;
          int8x16_t v16 = v30;
          uint16x8_t v14 = v34;
          int16x8_t v15 = v38;
          a10 = v42;
          uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
          int8x16_t v12 = (int8x16_t *)&unk_1004D2000;
          LODWORD(result) = v58;
          int v11 = v62;
          a4 = v50;
          a2 = v54;
          a3 = v46;
        }
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
      {
        int v59 = result;
        int v63 = v11;
        uint64_t v47 = a3;
        uint64_t v51 = a4;
        uint64_t v55 = a2;
        __n128 v43 = a10;
        uint16x8_t v35 = v14;
        int16x8_t v39 = v15;
        int8x16_t v29 = v17;
        int8x16_t v31 = v16;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D80);
        int8x16_t v17 = v29;
        int8x16_t v16 = v31;
        uint16x8_t v14 = v35;
        int16x8_t v15 = v39;
        a10 = v43;
        *(void *)&long long v26 = 0x3F0000003F000000;
        *((void *)&v26 + 1) = 0x3F0000003F000000;
        uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
        int8x16_t v12 = (int8x16_t *)&unk_1004D2000;
        a4 = v51;
        a2 = v55;
        a3 = v47;
        int v27 = result;
        LODWORD(result) = v59;
        int v11 = v63;
        if (v27)
        {
          xmmword_1004D2D70 = v26;
          __cxa_guard_release(qword_1004D2D80);
          int8x16_t v17 = v29;
          int8x16_t v16 = v31;
          uint16x8_t v14 = v35;
          int16x8_t v15 = v39;
          a10 = v43;
          uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
          int8x16_t v12 = (int8x16_t *)&unk_1004D2000;
          LODWORD(result) = v59;
          int v11 = v63;
          a4 = v51;
          a2 = v55;
          a3 = v47;
        }
      }
      int8x16_t v18 = (int8x16_t)vdivq_f32(vmulq_n_f32(vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v14.i8)), a10.n128_f32[0]), vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v15.i8)));
      int8x16_t v19 = (int8x16_t)vdivq_f32(vmulq_n_f32(vcvtq_f32_u32(vmovl_high_u16(v14)), a10.n128_f32[0]), vcvtq_f32_u32(vmovl_high_u16((uint16x8_t)v15)));
      *a4++ = vbicq_s8((int8x16_t)vqmovun_high_s32(vqmovun_s32(vcvtq_s32_f32(vaddq_f32((float32x4_t)v18, (float32x4_t)vorrq_s8(vandq_s8(v17, v18), v16)))), vcvtq_s32_f32(vaddq_f32((float32x4_t)v19, (float32x4_t)vorrq_s8(vandq_s8(v12[213], v19), v13[215])))), (int8x16_t)vceqzq_s16(v15));
      ++a3;
      ++a2;
      uint64_t result = (result + 8);
    }
    while (v11 >= (int)result);
  }
  return result;
}

uint64_t sub_10022D7DC(unsigned char *a1, int16x8_t *a2, int16x8_t *a3, int8x16_t *a4, int a5, double a6, double a7, double a8, double a9, __n128 a10)
{
  if (!*a1) {
    return 0;
  }
  uint64_t result = 0;
  int v11 = a5 - 8;
  if (a5 >= 8)
  {
    a10.n128_f32[0] = a6;
    int8x16_t v12 = (int8x16_t *)&unk_1004D2000;
    uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
    do
    {
      int16x8_t v14 = *a2;
      int16x8_t v15 = *a3;
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
      {
        int v56 = result;
        int v60 = v11;
        uint64_t v44 = a3;
        uint64_t v48 = a4;
        uint64_t v52 = a2;
        __n128 v40 = a10;
        int16x8_t v32 = v14;
        int16x8_t v36 = v15;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D60);
        int16x8_t v14 = v32;
        int16x8_t v15 = v36;
        a10 = v40;
        *(void *)&long long v20 = 0x8000000080000000;
        *((void *)&v20 + 1) = 0x8000000080000000;
        uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
        int8x16_t v12 = (int8x16_t *)&unk_1004D2000;
        a4 = v48;
        a2 = v52;
        a3 = v44;
        int v21 = result;
        LODWORD(result) = v56;
        int v11 = v60;
        if (v21)
        {
          xmmword_1004D2D50 = v20;
          __cxa_guard_release(qword_1004D2D60);
          int16x8_t v14 = v32;
          int16x8_t v15 = v36;
          a10 = v40;
          uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
          int8x16_t v12 = (int8x16_t *)&unk_1004D2000;
          LODWORD(result) = v56;
          int v11 = v60;
          a4 = v48;
          a2 = v52;
          a3 = v44;
        }
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
      {
        int v57 = result;
        int v61 = v11;
        uint64_t v45 = a3;
        uint64_t v49 = a4;
        uint64_t v53 = a2;
        __n128 v41 = a10;
        int16x8_t v33 = v14;
        int16x8_t v37 = v15;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D80);
        int16x8_t v14 = v33;
        int16x8_t v15 = v37;
        a10 = v41;
        *(void *)&long long v22 = 0x3F0000003F000000;
        *((void *)&v22 + 1) = 0x3F0000003F000000;
        uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
        int8x16_t v12 = (int8x16_t *)&unk_1004D2000;
        a4 = v49;
        a2 = v53;
        a3 = v45;
        int v23 = result;
        LODWORD(result) = v57;
        int v11 = v61;
        if (v23)
        {
          xmmword_1004D2D70 = v22;
          __cxa_guard_release(qword_1004D2D80);
          int16x8_t v14 = v33;
          int16x8_t v15 = v37;
          a10 = v41;
          uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
          int8x16_t v12 = (int8x16_t *)&unk_1004D2000;
          LODWORD(result) = v57;
          int v11 = v61;
          a4 = v49;
          a2 = v53;
          a3 = v45;
        }
      }
      int8x16_t v16 = v13[215];
      int8x16_t v17 = v12[213];
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
      {
        int v58 = result;
        int v62 = v11;
        uint64_t v46 = a3;
        uint64_t v50 = a4;
        uint64_t v54 = a2;
        __n128 v42 = a10;
        int16x8_t v34 = v14;
        int16x8_t v38 = v15;
        int8x16_t v28 = v17;
        int8x16_t v30 = v16;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D60);
        int8x16_t v17 = v28;
        int8x16_t v16 = v30;
        int16x8_t v14 = v34;
        int16x8_t v15 = v38;
        a10 = v42;
        *(void *)&long long v24 = 0x8000000080000000;
        *((void *)&v24 + 1) = 0x8000000080000000;
        uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
        int8x16_t v12 = (int8x16_t *)&unk_1004D2000;
        a4 = v50;
        a2 = v54;
        a3 = v46;
        int v25 = result;
        LODWORD(result) = v58;
        int v11 = v62;
        if (v25)
        {
          xmmword_1004D2D50 = v24;
          __cxa_guard_release(qword_1004D2D60);
          int8x16_t v17 = v28;
          int8x16_t v16 = v30;
          int16x8_t v14 = v34;
          int16x8_t v15 = v38;
          a10 = v42;
          uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
          int8x16_t v12 = (int8x16_t *)&unk_1004D2000;
          LODWORD(result) = v58;
          int v11 = v62;
          a4 = v50;
          a2 = v54;
          a3 = v46;
        }
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
      {
        int v59 = result;
        int v63 = v11;
        uint64_t v47 = a3;
        uint64_t v51 = a4;
        uint64_t v55 = a2;
        __n128 v43 = a10;
        int16x8_t v35 = v14;
        int16x8_t v39 = v15;
        int8x16_t v29 = v17;
        int8x16_t v31 = v16;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D80);
        int8x16_t v17 = v29;
        int8x16_t v16 = v31;
        int16x8_t v14 = v35;
        int16x8_t v15 = v39;
        a10 = v43;
        *(void *)&long long v26 = 0x3F0000003F000000;
        *((void *)&v26 + 1) = 0x3F0000003F000000;
        uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
        int8x16_t v12 = (int8x16_t *)&unk_1004D2000;
        a4 = v51;
        a2 = v55;
        a3 = v47;
        int v27 = result;
        LODWORD(result) = v59;
        int v11 = v63;
        if (v27)
        {
          xmmword_1004D2D70 = v26;
          __cxa_guard_release(qword_1004D2D80);
          int8x16_t v17 = v29;
          int8x16_t v16 = v31;
          int16x8_t v14 = v35;
          int16x8_t v15 = v39;
          a10 = v43;
          uint16x8_t v13 = (int8x16_t *)&unk_1004D2000;
          int8x16_t v12 = (int8x16_t *)&unk_1004D2000;
          LODWORD(result) = v59;
          int v11 = v63;
          a4 = v51;
          a2 = v55;
          a3 = v47;
        }
      }
      int8x16_t v18 = (int8x16_t)vdivq_f32(vmulq_n_f32(vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v14.i8)), a10.n128_f32[0]), vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v15.i8)));
      int8x16_t v19 = (int8x16_t)vdivq_f32(vmulq_n_f32(vcvtq_f32_s32(vmovl_high_s16(v14)), a10.n128_f32[0]), vcvtq_f32_s32(vmovl_high_s16(v15)));
      *a4++ = vbicq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vcvtq_s32_f32(vaddq_f32((float32x4_t)v18, (float32x4_t)vorrq_s8(vandq_s8(v17, v18), v16)))), vcvtq_s32_f32(vaddq_f32((float32x4_t)v19, (float32x4_t)vorrq_s8(vandq_s8(v12[213], v19), v13[215])))), (int8x16_t)vceqzq_s16(v15));
      ++a3;
      ++a2;
      uint64_t result = (result + 8);
    }
    while (v11 >= (int)result);
  }
  return result;
}

uint64_t sub_10022DB58(unsigned char *a1, int32x4_t *a2, int32x4_t *a3, int8x16_t *a4, int a5, double a6, double a7, double a8, double a9, __n128 a10)
{
  if (!*a1) {
    return 0;
  }
  uint64_t result = 0;
  int v11 = a5 - 8;
  if (a5 >= 8)
  {
    int8x16_t v12 = a4 + 1;
    a10.n128_f32[0] = a6;
    uint16x8_t v13 = a3 + 1;
    int16x8_t v14 = a2 + 1;
    int16x8_t v15 = (int8x16_t *)&unk_1004D2000;
    int8x16_t v16 = (int8x16_t *)&unk_1004D2000;
    do
    {
      int32x4_t v17 = v14[-1];
      int32x4_t v18 = *v14;
      int32x4_t v19 = v13[-1];
      int32x4_t v20 = *v13;
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
      {
        int v58 = v11;
        int v62 = result;
        int8x8_t v66 = v12;
        int8x8_t v70 = v13;
        int v74 = v14;
        int32x4_t v50 = v19;
        __n128 v54 = a10;
        int32x4_t v42 = v17;
        int32x4_t v46 = v20;
        int32x4_t v38 = v18;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D60);
        int32x4_t v18 = v38;
        int32x4_t v17 = v42;
        int32x4_t v20 = v46;
        int32x4_t v19 = v50;
        a10 = v54;
        *(void *)&long long v26 = 0x8000000080000000;
        *((void *)&v26 + 1) = 0x8000000080000000;
        int8x16_t v16 = (int8x16_t *)&unk_1004D2000;
        int16x8_t v15 = (int8x16_t *)&unk_1004D2000;
        uint16x8_t v13 = v70;
        int16x8_t v14 = v74;
        int8x16_t v12 = v66;
        int v27 = result;
        int v11 = v58;
        LODWORD(result) = v62;
        if (v27)
        {
          xmmword_1004D2D50 = v26;
          __cxa_guard_release(qword_1004D2D60);
          int32x4_t v18 = v38;
          int32x4_t v17 = v42;
          int32x4_t v20 = v46;
          int32x4_t v19 = v50;
          a10 = v54;
          int8x16_t v16 = (int8x16_t *)&unk_1004D2000;
          int16x8_t v15 = (int8x16_t *)&unk_1004D2000;
          uint16x8_t v13 = v70;
          int16x8_t v14 = v74;
          int8x16_t v12 = v66;
          int v11 = v58;
          LODWORD(result) = v62;
        }
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
      {
        int v59 = v11;
        int v63 = result;
        int8x8_t v67 = v12;
        int v71 = v13;
        int v75 = v14;
        int32x4_t v51 = v19;
        __n128 v55 = a10;
        int32x4_t v43 = v17;
        int32x4_t v47 = v20;
        int32x4_t v39 = v18;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D80);
        int32x4_t v18 = v39;
        int32x4_t v17 = v43;
        int32x4_t v20 = v47;
        int32x4_t v19 = v51;
        a10 = v55;
        *(void *)&long long v28 = 0x3F0000003F000000;
        *((void *)&v28 + 1) = 0x3F0000003F000000;
        int8x16_t v16 = (int8x16_t *)&unk_1004D2000;
        int16x8_t v15 = (int8x16_t *)&unk_1004D2000;
        uint16x8_t v13 = v71;
        int16x8_t v14 = v75;
        int8x16_t v12 = v67;
        int v29 = result;
        int v11 = v59;
        LODWORD(result) = v63;
        if (v29)
        {
          xmmword_1004D2D70 = v28;
          __cxa_guard_release(qword_1004D2D80);
          int32x4_t v18 = v39;
          int32x4_t v17 = v43;
          int32x4_t v20 = v47;
          int32x4_t v19 = v51;
          a10 = v55;
          int8x16_t v16 = (int8x16_t *)&unk_1004D2000;
          int16x8_t v15 = (int8x16_t *)&unk_1004D2000;
          uint16x8_t v13 = v71;
          int16x8_t v14 = v75;
          int8x16_t v12 = v67;
          int v11 = v59;
          LODWORD(result) = v63;
        }
      }
      int8x16_t v21 = v16[215];
      int8x16_t v22 = v15[213];
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
      {
        int v60 = v11;
        int v64 = result;
        int8x8_t v68 = v12;
        int v72 = v13;
        int v76 = v14;
        int32x4_t v52 = v19;
        __n128 v56 = a10;
        int32x4_t v44 = v17;
        int32x4_t v48 = v20;
        int8x16_t v36 = v21;
        int32x4_t v40 = v18;
        int8x16_t v34 = v22;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D60);
        int8x16_t v22 = v34;
        int8x16_t v21 = v36;
        int32x4_t v18 = v40;
        int32x4_t v17 = v44;
        int32x4_t v20 = v48;
        int32x4_t v19 = v52;
        a10 = v56;
        *(void *)&long long v30 = 0x8000000080000000;
        *((void *)&v30 + 1) = 0x8000000080000000;
        int8x16_t v16 = (int8x16_t *)&unk_1004D2000;
        int16x8_t v15 = (int8x16_t *)&unk_1004D2000;
        uint16x8_t v13 = v72;
        int16x8_t v14 = v76;
        int8x16_t v12 = v68;
        int v31 = result;
        int v11 = v60;
        LODWORD(result) = v64;
        if (v31)
        {
          xmmword_1004D2D50 = v30;
          __cxa_guard_release(qword_1004D2D60);
          int8x16_t v22 = v34;
          int8x16_t v21 = v36;
          int32x4_t v18 = v40;
          int32x4_t v17 = v44;
          int32x4_t v20 = v48;
          int32x4_t v19 = v52;
          a10 = v56;
          int8x16_t v16 = (int8x16_t *)&unk_1004D2000;
          int16x8_t v15 = (int8x16_t *)&unk_1004D2000;
          uint16x8_t v13 = v72;
          int16x8_t v14 = v76;
          int8x16_t v12 = v68;
          int v11 = v60;
          LODWORD(result) = v64;
        }
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
      {
        int v61 = v11;
        int v65 = result;
        int8x8_t v69 = v12;
        int v73 = v13;
        int v77 = v14;
        int32x4_t v53 = v19;
        __n128 v57 = a10;
        int32x4_t v45 = v17;
        int32x4_t v49 = v20;
        int8x16_t v37 = v21;
        int32x4_t v41 = v18;
        int8x16_t v35 = v22;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D80);
        int8x16_t v22 = v35;
        int8x16_t v21 = v37;
        int32x4_t v18 = v41;
        int32x4_t v17 = v45;
        int32x4_t v20 = v49;
        int32x4_t v19 = v53;
        a10 = v57;
        *(void *)&long long v32 = 0x3F0000003F000000;
        *((void *)&v32 + 1) = 0x3F0000003F000000;
        int8x16_t v16 = (int8x16_t *)&unk_1004D2000;
        int16x8_t v15 = (int8x16_t *)&unk_1004D2000;
        uint16x8_t v13 = v73;
        int16x8_t v14 = v77;
        int8x16_t v12 = v69;
        int v33 = result;
        int v11 = v61;
        LODWORD(result) = v65;
        if (v33)
        {
          xmmword_1004D2D70 = v32;
          __cxa_guard_release(qword_1004D2D80);
          int8x16_t v22 = v35;
          int8x16_t v21 = v37;
          int32x4_t v18 = v41;
          int32x4_t v17 = v45;
          int32x4_t v20 = v49;
          int32x4_t v19 = v53;
          a10 = v57;
          int8x16_t v16 = (int8x16_t *)&unk_1004D2000;
          int16x8_t v15 = (int8x16_t *)&unk_1004D2000;
          uint16x8_t v13 = v73;
          int16x8_t v14 = v77;
          int8x16_t v12 = v69;
          int v11 = v61;
          LODWORD(result) = v65;
        }
      }
      int8x16_t v23 = (int8x16_t)vdivq_f32(vmulq_n_f32(vcvtq_f32_s32(v17), a10.n128_f32[0]), vcvtq_f32_s32(v19));
      int8x16_t v24 = (int8x16_t)vdivq_f32(vmulq_n_f32(vcvtq_f32_s32(v18), a10.n128_f32[0]), vcvtq_f32_s32(v20));
      int8x16_t v25 = vbicq_s8((int8x16_t)vcvtq_s32_f32(vaddq_f32((float32x4_t)v24, (float32x4_t)vorrq_s8(vandq_s8(v15[213], v24), v16[215]))), (int8x16_t)vceqzq_s32(v20));
      v12[-1] = vbicq_s8((int8x16_t)vcvtq_s32_f32(vaddq_f32((float32x4_t)v23, (float32x4_t)vorrq_s8(vandq_s8(v22, v23), v21))), (int8x16_t)vceqzq_s32(v19));
      *int8x16_t v12 = v25;
      v12 += 2;
      v13 += 2;
      v14 += 2;
      uint64_t result = (result + 8);
    }
    while (v11 >= (int)result);
  }
  return result;
}

uint64_t sub_10022DF04(unsigned char *a1, uint64_t a2, uint64_t a3, int a4, double a5)
{
  if (!*a1) {
    return 0;
  }
  int v5 = a4 - 8;
  if (a4 < 8) {
    return 0;
  }
  uint64_t result = 0;
  *(float *)&a5 = a5;
  float32x4_t v7 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a5, 0);
  int v8 = (int8x16_t *)&unk_1004D2000;
  uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
  do
  {
    int8x8_t v10 = *(int8x8_t *)(a2 + result);
    if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
    {
      uint64_t v40 = a3;
      uint64_t v44 = result;
      uint64_t v36 = a2;
      int v48 = v5;
      int8x8_t v52 = v10;
      float32x4_t v32 = v7;
      int v16 = __cxa_guard_acquire(qword_1004D2D60);
      float32x4_t v7 = v32;
      *(void *)&long long v17 = 0x8000000080000000;
      *((void *)&v17 + 1) = 0x8000000080000000;
      int8x8_t v10 = v52;
      uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
      int v8 = (int8x16_t *)&unk_1004D2000;
      int v5 = v48;
      a2 = v36;
      a3 = v40;
      int v18 = v16;
      uint64_t result = v44;
      if (v18)
      {
        xmmword_1004D2D50 = v17;
        __cxa_guard_release(qword_1004D2D60);
        float32x4_t v7 = v32;
        int8x8_t v10 = v52;
        uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
        int v8 = (int8x16_t *)&unk_1004D2000;
        int v5 = v48;
        a2 = v36;
        a3 = v40;
        uint64_t result = v44;
      }
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
    {
      uint64_t v41 = a3;
      uint64_t v45 = result;
      uint64_t v37 = a2;
      int v49 = v5;
      int8x8_t v53 = v10;
      float32x4_t v33 = v7;
      int v19 = __cxa_guard_acquire(qword_1004D2D80);
      float32x4_t v7 = v33;
      *(void *)&long long v20 = 0x3F0000003F000000;
      *((void *)&v20 + 1) = 0x3F0000003F000000;
      int8x8_t v10 = v53;
      uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
      int v8 = (int8x16_t *)&unk_1004D2000;
      int v5 = v49;
      a2 = v37;
      a3 = v41;
      int v21 = v19;
      uint64_t result = v45;
      if (v21)
      {
        xmmword_1004D2D70 = v20;
        __cxa_guard_release(qword_1004D2D80);
        float32x4_t v7 = v33;
        int8x8_t v10 = v53;
        uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
        int v8 = (int8x16_t *)&unk_1004D2000;
        int v5 = v49;
        a2 = v37;
        a3 = v41;
        uint64_t result = v45;
      }
    }
    int8x16_t v11 = v9[215];
    int8x16_t v12 = v8[213];
    if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
    {
      uint64_t v42 = a3;
      uint64_t v46 = result;
      uint64_t v38 = a2;
      int v50 = v5;
      int8x8_t v54 = v10;
      int8x16_t v30 = v11;
      float32x4_t v34 = v7;
      int8x16_t v28 = v12;
      int v22 = __cxa_guard_acquire(qword_1004D2D60);
      int8x16_t v12 = v28;
      int8x16_t v11 = v30;
      float32x4_t v7 = v34;
      *(void *)&long long v23 = 0x8000000080000000;
      *((void *)&v23 + 1) = 0x8000000080000000;
      int8x8_t v10 = v54;
      uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
      int v8 = (int8x16_t *)&unk_1004D2000;
      int v5 = v50;
      a2 = v38;
      a3 = v42;
      int v24 = v22;
      uint64_t result = v46;
      if (v24)
      {
        xmmword_1004D2D50 = v23;
        __cxa_guard_release(qword_1004D2D60);
        int8x16_t v12 = v28;
        int8x16_t v11 = v30;
        float32x4_t v7 = v34;
        int8x8_t v10 = v54;
        uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
        int v8 = (int8x16_t *)&unk_1004D2000;
        int v5 = v50;
        a2 = v38;
        a3 = v42;
        uint64_t result = v46;
      }
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
    {
      uint64_t v43 = a3;
      uint64_t v47 = result;
      uint64_t v39 = a2;
      int v51 = v5;
      int8x8_t v55 = v10;
      int8x16_t v31 = v11;
      float32x4_t v35 = v7;
      int8x16_t v29 = v12;
      int v25 = __cxa_guard_acquire(qword_1004D2D80);
      int8x16_t v12 = v29;
      int8x16_t v11 = v31;
      float32x4_t v7 = v35;
      *(void *)&long long v26 = 0x3F0000003F000000;
      *((void *)&v26 + 1) = 0x3F0000003F000000;
      int8x8_t v10 = v55;
      uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
      int v8 = (int8x16_t *)&unk_1004D2000;
      int v5 = v51;
      a2 = v39;
      a3 = v43;
      int v27 = v25;
      uint64_t result = v47;
      if (v27)
      {
        xmmword_1004D2D70 = v26;
        __cxa_guard_release(qword_1004D2D80);
        int8x16_t v12 = v29;
        int8x16_t v11 = v31;
        float32x4_t v7 = v35;
        int8x8_t v10 = v55;
        uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
        int v8 = (int8x16_t *)&unk_1004D2000;
        int v5 = v51;
        a2 = v39;
        a3 = v43;
        uint64_t result = v47;
      }
    }
    int16x8_t v13 = vmovl_s8(v10);
    int8x16_t v14 = (int8x16_t)vdivq_f32(v7, vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v13.i8)));
    int8x16_t v15 = (int8x16_t)vdivq_f32(v7, vcvtq_f32_s32(vmovl_high_s16(v13)));
    *(int8x8_t *)(a3 + result) = vqmovn_s16((int16x8_t)vbicq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vcvtq_s32_f32(vaddq_f32((float32x4_t)v14, (float32x4_t)vorrq_s8(vandq_s8(v12, v14), v11)))), vcvtq_s32_f32(vaddq_f32((float32x4_t)v15, (float32x4_t)vorrq_s8(vandq_s8(v8[213], v15), v9[215])))), (int8x16_t)vmovl_s8(vceqz_s8(v10))));
    result += 8;
  }
  while (v5 >= (int)result);
  return result;
}

uint64_t sub_10022E27C(unsigned char *a1, int16x8_t *a2, int8x16_t *a3, int a4, double a5)
{
  if (!*a1) {
    return 0;
  }
  uint64_t result = 0;
  int v6 = a4 - 8;
  if (a4 >= 8)
  {
    *(float *)&a5 = a5;
    float32x4_t v7 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a5, 0);
    int v8 = (int8x16_t *)&unk_1004D2000;
    uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
    do
    {
      int16x8_t v10 = *a2;
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
      {
        int v43 = result;
        int v47 = v6;
        float32x4_t v35 = a2;
        uint64_t v39 = a3;
        int16x8_t v27 = v10;
        float32x4_t v31 = v7;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D60);
        int16x8_t v10 = v27;
        float32x4_t v7 = v31;
        *(void *)&long long v15 = 0x8000000080000000;
        *((void *)&v15 + 1) = 0x8000000080000000;
        uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
        int v8 = (int8x16_t *)&unk_1004D2000;
        a2 = v35;
        a3 = v39;
        int v16 = result;
        LODWORD(result) = v43;
        int v6 = v47;
        if (v16)
        {
          xmmword_1004D2D50 = v15;
          __cxa_guard_release(qword_1004D2D60);
          int16x8_t v10 = v27;
          float32x4_t v7 = v31;
          uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
          int v8 = (int8x16_t *)&unk_1004D2000;
          LODWORD(result) = v43;
          int v6 = v47;
          a2 = v35;
          a3 = v39;
        }
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
      {
        int v44 = result;
        int v48 = v6;
        uint64_t v36 = a2;
        uint64_t v40 = a3;
        int16x8_t v28 = v10;
        float32x4_t v32 = v7;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D80);
        int16x8_t v10 = v28;
        float32x4_t v7 = v32;
        *(void *)&long long v17 = 0x3F0000003F000000;
        *((void *)&v17 + 1) = 0x3F0000003F000000;
        uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
        int v8 = (int8x16_t *)&unk_1004D2000;
        a2 = v36;
        a3 = v40;
        int v18 = result;
        LODWORD(result) = v44;
        int v6 = v48;
        if (v18)
        {
          xmmword_1004D2D70 = v17;
          __cxa_guard_release(qword_1004D2D80);
          int16x8_t v10 = v28;
          float32x4_t v7 = v32;
          uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
          int v8 = (int8x16_t *)&unk_1004D2000;
          LODWORD(result) = v44;
          int v6 = v48;
          a2 = v36;
          a3 = v40;
        }
      }
      int8x16_t v11 = v9[215];
      int8x16_t v12 = v8[213];
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
      {
        int v45 = result;
        int v49 = v6;
        uint64_t v37 = a2;
        uint64_t v41 = a3;
        int16x8_t v29 = v10;
        float32x4_t v33 = v7;
        int8x16_t v23 = v12;
        int8x16_t v25 = v11;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D60);
        int8x16_t v12 = v23;
        int8x16_t v11 = v25;
        int16x8_t v10 = v29;
        float32x4_t v7 = v33;
        *(void *)&long long v19 = 0x8000000080000000;
        *((void *)&v19 + 1) = 0x8000000080000000;
        uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
        int v8 = (int8x16_t *)&unk_1004D2000;
        a2 = v37;
        a3 = v41;
        int v20 = result;
        LODWORD(result) = v45;
        int v6 = v49;
        if (v20)
        {
          xmmword_1004D2D50 = v19;
          __cxa_guard_release(qword_1004D2D60);
          int8x16_t v12 = v23;
          int8x16_t v11 = v25;
          int16x8_t v10 = v29;
          float32x4_t v7 = v33;
          uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
          int v8 = (int8x16_t *)&unk_1004D2000;
          LODWORD(result) = v45;
          int v6 = v49;
          a2 = v37;
          a3 = v41;
        }
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
      {
        int v46 = result;
        int v50 = v6;
        uint64_t v38 = a2;
        uint64_t v42 = a3;
        int16x8_t v30 = v10;
        float32x4_t v34 = v7;
        int8x16_t v24 = v12;
        int8x16_t v26 = v11;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D80);
        int8x16_t v12 = v24;
        int8x16_t v11 = v26;
        int16x8_t v10 = v30;
        float32x4_t v7 = v34;
        *(void *)&long long v21 = 0x3F0000003F000000;
        *((void *)&v21 + 1) = 0x3F0000003F000000;
        uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
        int v8 = (int8x16_t *)&unk_1004D2000;
        a2 = v38;
        a3 = v42;
        int v22 = result;
        LODWORD(result) = v46;
        int v6 = v50;
        if (v22)
        {
          xmmword_1004D2D70 = v21;
          __cxa_guard_release(qword_1004D2D80);
          int8x16_t v12 = v24;
          int8x16_t v11 = v26;
          int16x8_t v10 = v30;
          float32x4_t v7 = v34;
          uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
          int v8 = (int8x16_t *)&unk_1004D2000;
          LODWORD(result) = v46;
          int v6 = v50;
          a2 = v38;
          a3 = v42;
        }
      }
      int8x16_t v13 = (int8x16_t)vdivq_f32(v7, vcvtq_f32_u32(vmovl_u16(*(uint16x4_t *)v10.i8)));
      int8x16_t v14 = (int8x16_t)vdivq_f32(v7, vcvtq_f32_u32(vmovl_high_u16((uint16x8_t)v10)));
      *a3++ = vbicq_s8((int8x16_t)vqmovun_high_s32(vqmovun_s32(vcvtq_s32_f32(vaddq_f32((float32x4_t)v13, (float32x4_t)vorrq_s8(vandq_s8(v12, v13), v11)))), vcvtq_s32_f32(vaddq_f32((float32x4_t)v14, (float32x4_t)vorrq_s8(vandq_s8(v8[213], v14), v9[215])))), (int8x16_t)vceqzq_s16(v10));
      ++a2;
      uint64_t result = (result + 8);
    }
    while (v6 >= (int)result);
  }
  return result;
}

uint64_t sub_10022E57C(unsigned char *a1, int16x8_t *a2, int8x16_t *a3, int a4, double a5)
{
  if (!*a1) {
    return 0;
  }
  uint64_t result = 0;
  int v6 = a4 - 8;
  if (a4 >= 8)
  {
    *(float *)&a5 = a5;
    float32x4_t v7 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a5, 0);
    int v8 = (int8x16_t *)&unk_1004D2000;
    uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
    do
    {
      int16x8_t v10 = *a2;
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
      {
        int v43 = result;
        int v47 = v6;
        float32x4_t v35 = a2;
        uint64_t v39 = a3;
        int16x8_t v27 = v10;
        float32x4_t v31 = v7;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D60);
        int16x8_t v10 = v27;
        float32x4_t v7 = v31;
        *(void *)&long long v15 = 0x8000000080000000;
        *((void *)&v15 + 1) = 0x8000000080000000;
        uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
        int v8 = (int8x16_t *)&unk_1004D2000;
        a2 = v35;
        a3 = v39;
        int v16 = result;
        LODWORD(result) = v43;
        int v6 = v47;
        if (v16)
        {
          xmmword_1004D2D50 = v15;
          __cxa_guard_release(qword_1004D2D60);
          int16x8_t v10 = v27;
          float32x4_t v7 = v31;
          uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
          int v8 = (int8x16_t *)&unk_1004D2000;
          LODWORD(result) = v43;
          int v6 = v47;
          a2 = v35;
          a3 = v39;
        }
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
      {
        int v44 = result;
        int v48 = v6;
        uint64_t v36 = a2;
        uint64_t v40 = a3;
        int16x8_t v28 = v10;
        float32x4_t v32 = v7;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D80);
        int16x8_t v10 = v28;
        float32x4_t v7 = v32;
        *(void *)&long long v17 = 0x3F0000003F000000;
        *((void *)&v17 + 1) = 0x3F0000003F000000;
        uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
        int v8 = (int8x16_t *)&unk_1004D2000;
        a2 = v36;
        a3 = v40;
        int v18 = result;
        LODWORD(result) = v44;
        int v6 = v48;
        if (v18)
        {
          xmmword_1004D2D70 = v17;
          __cxa_guard_release(qword_1004D2D80);
          int16x8_t v10 = v28;
          float32x4_t v7 = v32;
          uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
          int v8 = (int8x16_t *)&unk_1004D2000;
          LODWORD(result) = v44;
          int v6 = v48;
          a2 = v36;
          a3 = v40;
        }
      }
      int8x16_t v11 = v9[215];
      int8x16_t v12 = v8[213];
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
      {
        int v45 = result;
        int v49 = v6;
        uint64_t v37 = a2;
        uint64_t v41 = a3;
        int16x8_t v29 = v10;
        float32x4_t v33 = v7;
        int8x16_t v23 = v12;
        int8x16_t v25 = v11;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D60);
        int8x16_t v12 = v23;
        int8x16_t v11 = v25;
        int16x8_t v10 = v29;
        float32x4_t v7 = v33;
        *(void *)&long long v19 = 0x8000000080000000;
        *((void *)&v19 + 1) = 0x8000000080000000;
        uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
        int v8 = (int8x16_t *)&unk_1004D2000;
        a2 = v37;
        a3 = v41;
        int v20 = result;
        LODWORD(result) = v45;
        int v6 = v49;
        if (v20)
        {
          xmmword_1004D2D50 = v19;
          __cxa_guard_release(qword_1004D2D60);
          int8x16_t v12 = v23;
          int8x16_t v11 = v25;
          int16x8_t v10 = v29;
          float32x4_t v7 = v33;
          uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
          int v8 = (int8x16_t *)&unk_1004D2000;
          LODWORD(result) = v45;
          int v6 = v49;
          a2 = v37;
          a3 = v41;
        }
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
      {
        int v46 = result;
        int v50 = v6;
        uint64_t v38 = a2;
        uint64_t v42 = a3;
        int16x8_t v30 = v10;
        float32x4_t v34 = v7;
        int8x16_t v24 = v12;
        int8x16_t v26 = v11;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D80);
        int8x16_t v12 = v24;
        int8x16_t v11 = v26;
        int16x8_t v10 = v30;
        float32x4_t v7 = v34;
        *(void *)&long long v21 = 0x3F0000003F000000;
        *((void *)&v21 + 1) = 0x3F0000003F000000;
        uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
        int v8 = (int8x16_t *)&unk_1004D2000;
        a2 = v38;
        a3 = v42;
        int v22 = result;
        LODWORD(result) = v46;
        int v6 = v50;
        if (v22)
        {
          xmmword_1004D2D70 = v21;
          __cxa_guard_release(qword_1004D2D80);
          int8x16_t v12 = v24;
          int8x16_t v11 = v26;
          int16x8_t v10 = v30;
          float32x4_t v7 = v34;
          uint16x8_t v9 = (int8x16_t *)&unk_1004D2000;
          int v8 = (int8x16_t *)&unk_1004D2000;
          LODWORD(result) = v46;
          int v6 = v50;
          a2 = v38;
          a3 = v42;
        }
      }
      int8x16_t v13 = (int8x16_t)vdivq_f32(v7, vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v10.i8)));
      int8x16_t v14 = (int8x16_t)vdivq_f32(v7, vcvtq_f32_s32(vmovl_high_s16(v10)));
      *a3++ = vbicq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vcvtq_s32_f32(vaddq_f32((float32x4_t)v13, (float32x4_t)vorrq_s8(vandq_s8(v12, v13), v11)))), vcvtq_s32_f32(vaddq_f32((float32x4_t)v14, (float32x4_t)vorrq_s8(vandq_s8(v8[213], v14), v9[215])))), (int8x16_t)vceqzq_s16(v10));
      ++a2;
      uint64_t result = (result + 8);
    }
    while (v6 >= (int)result);
  }
  return result;
}

uint64_t sub_10022E87C(unsigned char *a1, int32x4_t *a2, int8x16_t *a3, int a4, double a5)
{
  if (!*a1) {
    return 0;
  }
  uint64_t result = 0;
  int v6 = a4 - 8;
  if (a4 >= 8)
  {
    *(float *)&a5 = a5;
    float32x4_t v7 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a5, 0);
    int v8 = a3 + 1;
    uint16x8_t v9 = a2 + 1;
    int16x8_t v10 = (int8x16_t *)&unk_1004D2000;
    int8x16_t v11 = (int8x16_t *)&unk_1004D2000;
    do
    {
      int32x4_t v12 = v9[-1];
      int32x4_t v13 = *v9;
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
      {
        int v43 = v6;
        int v47 = result;
        int v51 = v8;
        int8x8_t v55 = v9;
        float32x4_t v39 = v7;
        int32x4_t v31 = v13;
        int32x4_t v35 = v12;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D60);
        int32x4_t v13 = v31;
        int32x4_t v12 = v35;
        *(void *)&long long v19 = 0x8000000080000000;
        *((void *)&v19 + 1) = 0x8000000080000000;
        float32x4_t v7 = v39;
        int8x16_t v11 = (int8x16_t *)&unk_1004D2000;
        int16x8_t v10 = (int8x16_t *)&unk_1004D2000;
        int v8 = v51;
        uint16x8_t v9 = v55;
        int v20 = result;
        int v6 = v43;
        LODWORD(result) = v47;
        if (v20)
        {
          xmmword_1004D2D50 = v19;
          __cxa_guard_release(qword_1004D2D60);
          int32x4_t v13 = v31;
          int32x4_t v12 = v35;
          float32x4_t v7 = v39;
          int8x16_t v11 = (int8x16_t *)&unk_1004D2000;
          int16x8_t v10 = (int8x16_t *)&unk_1004D2000;
          int v8 = v51;
          uint16x8_t v9 = v55;
          int v6 = v43;
          LODWORD(result) = v47;
        }
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
      {
        int v44 = v6;
        int v48 = result;
        int8x8_t v52 = v8;
        __n128 v56 = v9;
        float32x4_t v40 = v7;
        int32x4_t v32 = v13;
        int32x4_t v36 = v12;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D80);
        int32x4_t v13 = v32;
        int32x4_t v12 = v36;
        float32x4_t v7 = v40;
        *(void *)&long long v21 = 0x3F0000003F000000;
        *((void *)&v21 + 1) = 0x3F0000003F000000;
        int8x16_t v11 = (int8x16_t *)&unk_1004D2000;
        int16x8_t v10 = (int8x16_t *)&unk_1004D2000;
        int v8 = v52;
        uint16x8_t v9 = v56;
        int v22 = result;
        int v6 = v44;
        LODWORD(result) = v48;
        if (v22)
        {
          xmmword_1004D2D70 = v21;
          __cxa_guard_release(qword_1004D2D80);
          int32x4_t v13 = v32;
          int32x4_t v12 = v36;
          float32x4_t v7 = v40;
          int8x16_t v11 = (int8x16_t *)&unk_1004D2000;
          int16x8_t v10 = (int8x16_t *)&unk_1004D2000;
          int v8 = v52;
          uint16x8_t v9 = v56;
          int v6 = v44;
          LODWORD(result) = v48;
        }
      }
      int8x16_t v14 = v11[215];
      int8x16_t v15 = v10[213];
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D60, memory_order_acquire) & 1) == 0)
      {
        int v45 = v6;
        int v49 = result;
        int8x8_t v53 = v8;
        __n128 v57 = v9;
        float32x4_t v41 = v7;
        int32x4_t v33 = v13;
        int32x4_t v37 = v12;
        int8x16_t v27 = v15;
        int8x16_t v29 = v14;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D60);
        int8x16_t v15 = v27;
        int8x16_t v14 = v29;
        int32x4_t v13 = v33;
        int32x4_t v12 = v37;
        *(void *)&long long v23 = 0x8000000080000000;
        *((void *)&v23 + 1) = 0x8000000080000000;
        float32x4_t v7 = v41;
        int8x16_t v11 = (int8x16_t *)&unk_1004D2000;
        int16x8_t v10 = (int8x16_t *)&unk_1004D2000;
        int v8 = v53;
        uint16x8_t v9 = v57;
        int v24 = result;
        int v6 = v45;
        LODWORD(result) = v49;
        if (v24)
        {
          xmmword_1004D2D50 = v23;
          __cxa_guard_release(qword_1004D2D60);
          int8x16_t v15 = v27;
          int8x16_t v14 = v29;
          int32x4_t v13 = v33;
          int32x4_t v12 = v37;
          float32x4_t v7 = v41;
          int8x16_t v11 = (int8x16_t *)&unk_1004D2000;
          int16x8_t v10 = (int8x16_t *)&unk_1004D2000;
          int v8 = v53;
          uint16x8_t v9 = v57;
          int v6 = v45;
          LODWORD(result) = v49;
        }
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2D80, memory_order_acquire) & 1) == 0)
      {
        int v46 = v6;
        int v50 = result;
        int8x8_t v54 = v8;
        int v58 = v9;
        float32x4_t v42 = v7;
        int32x4_t v34 = v13;
        int32x4_t v38 = v12;
        int8x16_t v28 = v15;
        int8x16_t v30 = v14;
        LODWORD(result) = __cxa_guard_acquire(qword_1004D2D80);
        int8x16_t v15 = v28;
        int8x16_t v14 = v30;
        int32x4_t v13 = v34;
        int32x4_t v12 = v38;
        float32x4_t v7 = v42;
        *(void *)&long long v25 = 0x3F0000003F000000;
        *((void *)&v25 + 1) = 0x3F0000003F000000;
        int8x16_t v11 = (int8x16_t *)&unk_1004D2000;
        int16x8_t v10 = (int8x16_t *)&unk_1004D2000;
        int v8 = v54;
        uint16x8_t v9 = v58;
        int v26 = result;
        int v6 = v46;
        LODWORD(result) = v50;
        if (v26)
        {
          xmmword_1004D2D70 = v25;
          __cxa_guard_release(qword_1004D2D80);
          int8x16_t v15 = v28;
          int8x16_t v14 = v30;
          int32x4_t v13 = v34;
          int32x4_t v12 = v38;
          float32x4_t v7 = v42;
          int8x16_t v11 = (int8x16_t *)&unk_1004D2000;
          int16x8_t v10 = (int8x16_t *)&unk_1004D2000;
          int v8 = v54;
          uint16x8_t v9 = v58;
          int v6 = v46;
          LODWORD(result) = v50;
        }
      }
      int8x16_t v16 = (int8x16_t)vdivq_f32(v7, vcvtq_f32_s32(v12));
      int8x16_t v17 = (int8x16_t)vdivq_f32(v7, vcvtq_f32_s32(v13));
      int8x16_t v18 = vbicq_s8((int8x16_t)vcvtq_s32_f32(vaddq_f32((float32x4_t)v17, (float32x4_t)vorrq_s8(vandq_s8(v10[213], v17), v11[215]))), (int8x16_t)vceqzq_s32(v13));
      v8[-1] = vbicq_s8((int8x16_t)vcvtq_s32_f32(vaddq_f32((float32x4_t)v16, (float32x4_t)vorrq_s8(vandq_s8(v15, v16), v14))), (int8x16_t)vceqzq_s32(v12));
      *int v8 = v18;
      v8 += 2;
      v9 += 2;
      uint64_t result = (result + 8);
    }
    while (v6 >= (int)result);
  }
  return result;
}

uint64_t sub_10022EBB0(float a1, __n128 a2, int32x2_t a3, double a4, double a5, __n128 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  int v11 = a11 - 8;
  if (a11 < 8) {
    return 0;
  }
  a6.n128_f32[0] = a1;
  uint64_t result = 0;
  float32x4_t v13 = (float32x4_t)vdupq_lane_s32(a3, 0);
  int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
  int8x16_t v15 = (int8x16_t *)&unk_1004D2000;
  do
  {
    int8x8_t v16 = *(int8x8_t *)(a8 + result);
    int8x8_t v17 = *(int8x8_t *)(a9 + result);
    if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DC0, memory_order_acquire) & 1) == 0)
    {
      uint64_t v61 = a8;
      uint64_t v65 = result;
      uint64_t v53 = a9;
      uint64_t v57 = a10;
      int v69 = v11;
      int8x8_t v73 = v17;
      int8x8_t v77 = v16;
      __n128 v45 = a6;
      __n128 v49 = a2;
      float32x4_t v41 = v13;
      int v25 = __cxa_guard_acquire(qword_1004D2DC0);
      float32x4_t v13 = v41;
      a6 = v45;
      *(void *)&long long v26 = 0x8000000080000000;
      *((void *)&v26 + 1) = 0x8000000080000000;
      a2 = v49;
      int8x8_t v17 = v73;
      int8x8_t v16 = v77;
      int8x16_t v15 = (int8x16_t *)&unk_1004D2000;
      int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
      int v11 = v69;
      a10 = v57;
      a8 = v61;
      a9 = v53;
      int v27 = v25;
      uint64_t result = v65;
      if (v27)
      {
        xmmword_1004D2DB0 = v26;
        __cxa_guard_release(qword_1004D2DC0);
        float32x4_t v13 = v41;
        a6 = v45;
        a2 = v49;
        int8x8_t v17 = v73;
        int8x8_t v16 = v77;
        int8x16_t v15 = (int8x16_t *)&unk_1004D2000;
        int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
        int v11 = v69;
        a10 = v57;
        a8 = v61;
        a9 = v53;
        uint64_t result = v65;
      }
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1004D2DE0, memory_order_acquire) & 1) == 0)
    {
      uint64_t v62 = a8;
      uint64_t v66 = result;
      uint64_t v54 = a9;
      uint64_t v58 = a10;
      int v70 = v11;
      int8x8_t v74 = v17;
      int8x8_t v78 = v16;
      __n128 v46 = a6;
      __n128 v50 = a2;
      float32x4_t v42 = v13;
      int v28 = __cxa_guard_acquire(&qword_1004D2DE0);
      float32x4_t v13 = v42;
      a6 = v46;
      *(void *)&long long v29 = 0x3F0000003F000000;
      *((void *)&v29 + 1) = 0x3F0000003F000000;
      a2 = v50;
      int8x8_t v17 = v74;
      int8x8_t v16 = v78;
      int8x16_t v15 = (int8x16_t *)&unk_1004D2000;
      int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
      int v11 = v70;
      a10 = v58;
      a8 = v62;
      a9 = v54;
      int v30 = v28;
      uint64_t result = v66;
      if (v30)
      {
        xmmword_1004D2DD0 = v29;
        __cxa_guard_release(&qword_1004D2DE0);
        float32x4_t v13 = v42;
        a6 = v46;
        a2 = v50;
        int8x8_t v17 = v74;
        int8x8_t v16 = v78;
        int8x16_t v15 = (int8x16_t *)&unk_1004D2000;
        int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
        int v11 = v70;
        a10 = v58;
        a8 = v62;
        a9 = v54;
        uint64_t result = v66;
      }
    }
    int8x16_t v18 = v15[221];
    int8x16_t v19 = v14[219];
    if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DC0, memory_order_acquire) & 1) == 0)
    {
      uint64_t v63 = a8;
      uint64_t v67 = result;
      uint64_t v55 = a9;
      uint64_t v59 = a10;
      int v71 = v11;
      int8x8_t v75 = v17;
      int8x8_t v79 = v16;
      __n128 v47 = a6;
      __n128 v51 = a2;
      int8x16_t v39 = v18;
      float32x4_t v43 = v13;
      int8x16_t v37 = v19;
      int v31 = __cxa_guard_acquire(qword_1004D2DC0);
      int8x16_t v19 = v37;
      int8x16_t v18 = v39;
      float32x4_t v13 = v43;
      a6 = v47;
      *(void *)&long long v32 = 0x8000000080000000;
      *((void *)&v32 + 1) = 0x8000000080000000;
      a2 = v51;
      int8x8_t v17 = v75;
      int8x8_t v16 = v79;
      int8x16_t v15 = (int8x16_t *)&unk_1004D2000;
      int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
      int v11 = v71;
      a10 = v59;
      a8 = v63;
      a9 = v55;
      int v33 = v31;
      uint64_t result = v67;
      if (v33)
      {
        xmmword_1004D2DB0 = v32;
        __cxa_guard_release(qword_1004D2DC0);
        int8x16_t v19 = v37;
        int8x16_t v18 = v39;
        float32x4_t v13 = v43;
        a6 = v47;
        a2 = v51;
        int8x8_t v17 = v75;
        int8x8_t v16 = v79;
        int8x16_t v15 = (int8x16_t *)&unk_1004D2000;
        int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
        int v11 = v71;
        a10 = v59;
        a8 = v63;
        a9 = v55;
        uint64_t result = v67;
      }
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1004D2DE0, memory_order_acquire) & 1) == 0)
    {
      uint64_t v64 = a8;
      uint64_t v68 = result;
      uint64_t v56 = a9;
      uint64_t v60 = a10;
      int v72 = v11;
      int8x8_t v76 = v17;
      int8x8_t v80 = v16;
      __n128 v48 = a6;
      __n128 v52 = a2;
      int8x16_t v40 = v18;
      float32x4_t v44 = v13;
      int8x16_t v38 = v19;
      int v34 = __cxa_guard_acquire(&qword_1004D2DE0);
      int8x16_t v19 = v38;
      int8x16_t v18 = v40;
      float32x4_t v13 = v44;
      a6 = v48;
      *(void *)&long long v35 = 0x3F0000003F000000;
      *((void *)&v35 + 1) = 0x3F0000003F000000;
      a2 = v52;
      int8x8_t v17 = v76;
      int8x8_t v16 = v80;
      int8x16_t v15 = (int8x16_t *)&unk_1004D2000;
      int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
      int v11 = v72;
      a10 = v60;
      a8 = v64;
      a9 = v56;
      int v36 = v34;
      uint64_t result = v68;
      if (v36)
      {
        xmmword_1004D2DD0 = v35;
        __cxa_guard_release(&qword_1004D2DE0);
        int8x16_t v19 = v38;
        int8x16_t v18 = v40;
        float32x4_t v13 = v44;
        a6 = v48;
        a2 = v52;
        int8x8_t v17 = v76;
        int8x8_t v16 = v80;
        int8x16_t v15 = (int8x16_t *)&unk_1004D2000;
        int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
        int v11 = v72;
        a10 = v60;
        a8 = v64;
        a9 = v56;
        uint64_t result = v68;
      }
    }
    int16x8_t v20 = vmovl_s8(v16);
    float32x4_t v21 = vcvtq_f32_s32(vmovl_high_s16(v20));
    int16x8_t v22 = vmovl_s8(v17);
    int8x16_t v23 = (int8x16_t)vaddq_f32(v13, vaddq_f32(vmulq_n_f32(vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v20.i8)), a6.n128_f32[0]), vmulq_n_f32(vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v22.i8)), a2.n128_f32[0])));
    int8x16_t v24 = (int8x16_t)vaddq_f32(v13, vaddq_f32(vmulq_n_f32(v21, a6.n128_f32[0]), vmulq_n_f32(vcvtq_f32_s32(vmovl_high_s16(v22)), a2.n128_f32[0])));
    *(int8x8_t *)(a10 + result) = vqmovn_s16(vqmovn_high_s32(vqmovn_s32(vcvtq_s32_f32(vaddq_f32((float32x4_t)v23, (float32x4_t)vorrq_s8(vandq_s8(v19, v23), v18)))), vcvtq_s32_f32(vaddq_f32((float32x4_t)v24, (float32x4_t)vorrq_s8(vandq_s8(v14[219], v24), v15[221])))));
    result += 8;
  }
  while (v11 >= (int)result);
  return result;
}

uint64_t sub_10022EF8C(__n128 a1, float a2, int32x2_t a3, double a4, __n128 a5, uint64_t a6, int16x8_t *a7, int16x8_t *a8, int16x8_t *a9, int a10)
{
  int v10 = a10 - 8;
  if (a10 < 8) {
    return 0;
  }
  a5.n128_f32[0] = a2;
  LODWORD(result) = 0;
  float32x4_t v12 = (float32x4_t)vdupq_lane_s32(a3, 0);
  float32x4_t v13 = (int8x16_t *)&unk_1004D2000;
  int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
  do
  {
    int16x8_t v15 = *a7;
    int16x8_t v16 = *a8;
    if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DC0, memory_order_acquire) & 1) == 0)
    {
      int v65 = result;
      int v69 = v10;
      uint64_t v53 = a8;
      uint64_t v57 = a9;
      uint64_t v61 = a7;
      __n128 v45 = a1;
      __n128 v49 = a5;
      int16x8_t v37 = v16;
      float32x4_t v41 = v12;
      int16x8_t v33 = v15;
      LODWORD(result) = __cxa_guard_acquire(qword_1004D2DC0);
      int16x8_t v15 = v33;
      int16x8_t v16 = v37;
      float32x4_t v12 = v41;
      *(void *)&long long v21 = 0x8000000080000000;
      *((void *)&v21 + 1) = 0x8000000080000000;
      a1 = v45;
      a5 = v49;
      int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
      float32x4_t v13 = (int8x16_t *)&unk_1004D2000;
      a9 = v57;
      a7 = v61;
      a8 = v53;
      int v22 = result;
      LODWORD(result) = v65;
      int v10 = v69;
      if (v22)
      {
        xmmword_1004D2DB0 = v21;
        __cxa_guard_release(qword_1004D2DC0);
        int16x8_t v15 = v33;
        int16x8_t v16 = v37;
        float32x4_t v12 = v41;
        a1 = v45;
        a5 = v49;
        int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
        float32x4_t v13 = (int8x16_t *)&unk_1004D2000;
        LODWORD(result) = v65;
        int v10 = v69;
        a9 = v57;
        a7 = v61;
        a8 = v53;
      }
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1004D2DE0, memory_order_acquire) & 1) == 0)
    {
      int v66 = result;
      int v70 = v10;
      uint64_t v54 = a8;
      uint64_t v58 = a9;
      uint64_t v62 = a7;
      __n128 v46 = a1;
      __n128 v50 = a5;
      int16x8_t v38 = v16;
      float32x4_t v42 = v12;
      int16x8_t v34 = v15;
      LODWORD(result) = __cxa_guard_acquire(&qword_1004D2DE0);
      int16x8_t v15 = v34;
      int16x8_t v16 = v38;
      float32x4_t v12 = v42;
      *(void *)&long long v23 = 0x3F0000003F000000;
      *((void *)&v23 + 1) = 0x3F0000003F000000;
      a1 = v46;
      a5 = v50;
      int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
      float32x4_t v13 = (int8x16_t *)&unk_1004D2000;
      a9 = v58;
      a7 = v62;
      a8 = v54;
      int v24 = result;
      LODWORD(result) = v66;
      int v10 = v70;
      if (v24)
      {
        xmmword_1004D2DD0 = v23;
        __cxa_guard_release(&qword_1004D2DE0);
        int16x8_t v15 = v34;
        int16x8_t v16 = v38;
        float32x4_t v12 = v42;
        a1 = v46;
        a5 = v50;
        int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
        float32x4_t v13 = (int8x16_t *)&unk_1004D2000;
        LODWORD(result) = v66;
        int v10 = v70;
        a9 = v58;
        a7 = v62;
        a8 = v54;
      }
    }
    int8x16_t v17 = v14[221];
    int8x16_t v18 = v13[219];
    if ((atomic_load_explicit((atomic_uchar *volatile)qword_1004D2DC0, memory_order_acquire) & 1) == 0)
    {
      int v67 = result;
      int v71 = v10;
      uint64_t v55 = a8;
      uint64_t v59 = a9;
      uint64_t v63 = a7;
      __n128 v47 = a1;
      __n128 v51 = a5;
      int16x8_t v39 = v16;
      float32x4_t v43 = v12;
      int8x16_t v31 = v17;
      int16x8_t v35 = v15;
      int8x16_t v29 = v18;
      LODWORD(result) = __cxa_guard_acquire(qword_1004D2DC0);
      int8x16_t v18 = v29;
      int8x16_t v17 = v31;
      int16x8_t v15 = v35;
      int16x8_t v16 = v39;
      float32x4_t v12 = v43;
      *(void *)&long long v25 = 0x8000000080000000;
      *((void *)&v25 + 1) = 0x8000000080000000;
      a1 = v47;
      a5 = v51;
      int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
      float32x4_t v13 = (int8x16_t *)&unk_1004D2000;
      a9 = v59;
      a7 = v63;
      a8 = v55;
      int v26 = result;
      LODWORD(result) = v67;
      int v10 = v71;
      if (v26)
      {
        xmmword_1004D2DB0 = v25;
        __cxa_guard_release(qword_1004D2DC0);
        int8x16_t v18 = v29;
        int8x16_t v17 = v31;
        int16x8_t v15 = v35;
        int16x8_t v16 = v39;
        float32x4_t v12 = v43;
        a1 = v47;
        a5 = v51;
        int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
        float32x4_t v13 = (int8x16_t *)&unk_1004D2000;
        LODWORD(result) = v67;
        int v10 = v71;
        a9 = v59;
        a7 = v63;
        a8 = v55;
      }
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1004D2DE0, memory_order_acquire) & 1) == 0)
    {
      int v68 = result;
      int v72 = v10;
      uint64_t v56 = a8;
      uint64_t v60 = a9;
      uint64_t v64 = a7;
      __n128 v48 = a1;
      __n128 v52 = a5;
      int16x8_t v40 = v16;
      float32x4_t v44 = v12;
      int8x16_t v32 = v17;
      int16x8_t v36 = v15;
      int8x16_t v30 = v18;
      LODWORD(result) = __cxa_guard_acquire(&qword_1004D2DE0);
      int8x16_t v18 = v30;
      int8x16_t v17 = v32;
      int16x8_t v15 = v36;
      int16x8_t v16 = v40;
      float32x4_t v12 = v44;
      *(void *)&long long v27 = 0x3F0000003F000000;
      *((void *)&v27 + 1) = 0x3F0000003F000000;
      a1 = v48;
      a5 = v52;
      int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
      float32x4_t v13 = (int8x16_t *)&unk_1004D2000;
      a9 = v60;
      a7 = v64;
      a8 = v56;
      int v28 = result;
      LODWORD(result) = v68;
      int v10 = v72;
      if (v28)
      {
        xmmword_1004D2DD0 = v27;
        __cxa_guard_release(&qword_1004D2DE0);
        int8x16_t v18 = v30;
        int8x16_t v17 = v32;
        int16x8_t v15 = v36;
        int16x8_t v16 = v40;
        float32x4_t v12 = v44;
        a1 = v48;
        a5 = v52;
        int8x16_t v14 = (int8x16_t *)&unk_1004D2000;
        float32x4_t v13 = (int8x16_t *)&unk_1004D2000;
        LODWORD(result) = v68;
        int v10 = v72;
        a9 = v60;
        a7 = v64;
        a8 = v56;
      }
    }
    int8x16_t v19 = (int8x16_t)vaddq_f32(v12, vaddq_f32(vmulq_n_f32(vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v15.i8)), a1.n128_f32[0]), vmulq_n_f32(vcvtq_f32_s32(vmovl_s16(*(int16x4_t *)v16.i8)), a5.n128_f32[0])));
    int8x16_t v20 = (int8x16_t)vaddq_f32(v12, vaddq_f32(vmulq_n_f32(vcvtq_f32_s32(vmovl_high_s16(v15)), a1.n128_f32[0]), vmulq_n_f32(vcvtq_f32_s32(vmovl_high_s16(v16)), a5.n128_f32[0])));
    *a9++ = vqmovn_high_s32(vqmovn_s32(vcvtq_s32_f32(vaddq_f32((float32x4_t)v19, (float32x4_t)vorrq_s8(vandq_s8(v18, v19), v17)))), vcvtq_s32_f32(vaddq_f32((float32x4_t)v20, (float32x4_t)vorrq_s8(vandq_s8(v13[219], v20), v14[221]))));
    ++a8;
    ++a7;
    uint64_t result = (result + 8);
  }
  while (v10 >= (int)result);
  return result;
}

void *sub_10022F344(void *a1, char *__s)
{
  *a1 = 0;
  a1[1] = 0;
  if (__s)
  {
    size_t v4 = strlen(__s);
    if (v4)
    {
      size_t v5 = v4;
      int v6 = (void *)sub_1002D19D8(a1, v4);
      memcpy(v6, __s, v5);
    }
  }
  return a1;
}

uint64_t sub_10022F3A4(int a1, int a2, unsigned int a3)
{
  uint64_t v3 = sub_10022F3D0(a1, a2, a3);
  sub_10022F4E8(v3);
  return v3;
}

uint64_t sub_10022F3D0(int a1, int a2, unsigned int a3)
{
  __int16 v3 = a3;
  if ((a2 | a1) < 0)
  {
    v8[0] = 0;
    v8[1] = 0;
    qmemcpy((void *)sub_1002D19D8(v8, 28), "Non-positive width or height", 28);
    sub_1002D2278(-201, v8, "cvCreateMatHeader", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 119);
  }
  int v6 = ((((a3 >> 3) & 0x1FF) + 1) << ((0xFA50u >> (2 * (a3 & 7))) & 3)) * a2;
  uint64_t result = sub_10020FEBC(0x28uLL);
  *(_DWORD *)uint64_t result = v3 & 0xFFF | 0x42424000;
  *(_DWORD *)(result + 4) = v6;
  *(_DWORD *)(result + 32) = a1;
  *(_DWORD *)(result + 36) = a2;
  *(void *)(result + 24) = 0;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 1;
  if (v6 * (uint64_t)a1 >= 0x80000000) {
    *(_DWORD *)uint64_t result = v3 & 0xFFF | 0x42420000;
  }
  return result;
}

void sub_10022F4D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10022F4E8(uint64_t result)
{
  if (!result) {
    goto LABEL_28;
  }
  uint64_t v1 = result;
  unsigned int v2 = *(_DWORD *)result;
  unsigned int v3 = *(_DWORD *)result & 0xFFFF0000;
  if (v3 != 1111621632)
  {
    if (v2 == 144)
    {
      if (*(void *)(result + 88))
      {
        uint64_t v35 = 0;
        uint64_t v36 = 0;
        qmemcpy((void *)sub_1002D19D8(&v35, 25), "Data is already allocated", 25);
        sub_1002D2278(-2, &v35, "cvCreateData", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 824);
      }
      int v8 = off_1004E07B8;
      if (off_1004E07B8)
      {
        int v9 = *(_DWORD *)(result + 16);
        int v10 = *(_DWORD *)(result + 40);
        if (v9 == 64 || v9 == 32)
        {
          if (v9 == 32) {
            char v11 = 2;
          }
          else {
            char v11 = 3;
          }
          *(_DWORD *)(result + 40) = v10 << v11;
          *(_DWORD *)(result + 16) = 8;
        }
        uint64_t result = ((uint64_t (*)(uint64_t, void, void))v8)(result, 0, 0);
        *(_DWORD *)(v1 + 40) = v10;
        *(_DWORD *)(v1 + 16) = v9;
      }
      else
      {
        uint64_t v12 = *(int *)(result + 44) * (uint64_t)*(int *)(result + 96);
        size_t v13 = *(int *)(result + 80);
        if (v12 != v13)
        {
          uint64_t v35 = 0;
          uint64_t v36 = 0;
          qmemcpy((void *)sub_1002D19D8(&v35, 22), "Overflow for imageSize", 22);
          sub_1002D2278(-4, &v35, "cvCreateData", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 830);
        }
        uint64_t result = sub_10020FEBC(v13);
        *(void *)(v1 + 136) = result;
        *(void *)(v1 + 88) = result;
      }
      return result;
    }
    if (v3 == 1111687168)
    {
      if (!*(_DWORD *)(result + 32)) {
        return result;
      }
      if (*(void *)(result + 24))
      {
        sub_10022F344(&v35, "Data is already allocated");
        sub_1002D2278(-2, &v35, "cvCreateData", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 860);
      }
      unint64_t v14 = (((v2 >> 3) & 0x1FF) + 1) << ((0xFA50u >> (2 * (v2 & 7))) & 3);
      if ((v2 & 0x4000) != 0)
      {
        uint64_t v17 = *(int *)(result + 36);
        if (!v17) {
          uint64_t v17 = (((v2 >> 3) & 0x1FF) + 1) << ((0xFA50u >> (2 * (v2 & 7))) & 3);
        }
        unint64_t v14 = v17 * *(int *)(result + 32);
        goto LABEL_46;
      }
      uint64_t v15 = *(unsigned int *)(result + 4);
      if ((int)v15 >= 1)
      {
        if (v15 < 0xC)
        {
          uint64_t v16 = *(unsigned int *)(result + 4);
          goto LABEL_42;
        }
        uint64_t v16 = v15 & 7;
        int8x16_t v18 = (int8x16_t)vdupq_n_s64(v14);
        uint64_t v19 = v15 + 4294967291;
        uint64_t v20 = result + 4;
        uint64_t v21 = v15 & 0xFFFFFFF8;
        int8x16_t v22 = v18;
        int8x16_t v23 = v18;
        int8x16_t v24 = v18;
        do
        {
          long long v25 = (const float *)(v20 + 8 * (v19 + 4) + 4);
          float32x4x2_t v37 = vld2q_f32(v25);
          int v26 = (const float *)(v20 + 8 * v19 + 4);
          float32x4x2_t v38 = vld2q_f32(v26);
          int8x16_t v27 = (int8x16_t)vrev64q_s32((int32x4_t)v37.val[0]);
          int32x4_t v28 = (int32x4_t)vextq_s8(v27, v27, 8uLL);
          int8x16_t v29 = (int8x16_t)vrev64q_s32((int32x4_t)v38.val[0]);
          int32x4_t v30 = (int32x4_t)vextq_s8(v29, v29, 8uLL);
          v37.val[0] = (float32x4_t)vrev64q_s32((int32x4_t)v37.val[1]);
          v37.val[0] = (float32x4_t)vextq_s8((int8x16_t)v37.val[0], (int8x16_t)v37.val[0], 8uLL);
          v37.val[1] = (float32x4_t)vrev64q_s32((int32x4_t)v38.val[1]);
          v37.val[1] = (float32x4_t)vextq_s8((int8x16_t)v37.val[1], (int8x16_t)v37.val[1], 8uLL);
          v38.val[0] = (float32x4_t)vmull_s32(*(int32x2_t *)v28.i8, *(int32x2_t *)v37.val[0].f32);
          v37.val[0] = (float32x4_t)vmull_high_s32(v28, (int32x4_t)v37.val[0]);
          v38.val[1] = (float32x4_t)vmull_s32(*(int32x2_t *)v30.i8, *(int32x2_t *)v37.val[1].f32);
          v37.val[1] = (float32x4_t)vmull_high_s32(v30, (int32x4_t)v37.val[1]);
          int8x16_t v22 = vbslq_s8((int8x16_t)vcgtq_u64((uint64x2_t)v22, (uint64x2_t)v37.val[0]), v22, (int8x16_t)v37.val[0]);
          int8x16_t v18 = vbslq_s8((int8x16_t)vcgtq_u64((uint64x2_t)v18, (uint64x2_t)v38.val[0]), v18, (int8x16_t)v38.val[0]);
          int8x16_t v24 = vbslq_s8((int8x16_t)vcgtq_u64((uint64x2_t)v24, (uint64x2_t)v37.val[1]), v24, (int8x16_t)v37.val[1]);
          int8x16_t v23 = vbslq_s8((int8x16_t)vcgtq_u64((uint64x2_t)v23, (uint64x2_t)v38.val[1]), v23, (int8x16_t)v38.val[1]);
          v19 -= 8;
          v21 -= 8;
        }
        while (v21);
        int8x16_t v31 = vbslq_s8((int8x16_t)vcgtq_u64((uint64x2_t)v18, (uint64x2_t)v23), v18, v23);
        int8x16_t v32 = vbslq_s8((int8x16_t)vcgtq_u64((uint64x2_t)v22, (uint64x2_t)v24), v22, v24);
        int8x16_t v33 = vbslq_s8((int8x16_t)vcgtq_u64((uint64x2_t)v31, (uint64x2_t)v32), v31, v32);
        v32.i64[0] = vextq_s8(v33, v33, 8uLL).u64[0];
        unint64_t v14 = (unint64_t)vbsl_s8((int8x8_t)vcgtd_u64(v33.u64[0], v32.u64[0]), *(int8x8_t *)v33.i8, *(int8x8_t *)v32.i8);
        if ((v15 & 0x7FFFFFF8) != v15)
        {
LABEL_42:
          unint64_t v34 = v16 + 1;
          do
          {
            if (v14 <= *(int *)(result + 8 * (v34 - 2) + 32)
                      * (uint64_t)*(int *)(result + 8 * (v34 - 2) + 36))
              unint64_t v14 = *(int *)(result + 8 * (v34 - 2) + 32)
                  * (uint64_t)*(int *)(result + 8 * (v34 - 2) + 36);
            --v34;
          }
          while (v34 > 1);
        }
      }
LABEL_46:
      size_t v7 = v14 + 68;
LABEL_47:
      uint64_t result = sub_10020FEBC(v7);
      *(void *)(v1 + 8) = result;
      *(void *)(v1 + 24) = (result + 67) & 0xFFFFFFFFFFFFFFC0;
      *(_DWORD *)uint64_t result = 1;
      return result;
    }
LABEL_28:
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    qmemcpy((void *)sub_1002D19D8(&v35, 38), "unrecognized or unsupported array type", 38);
    sub_1002D2278(-5, &v35, "cvCreateData", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 885);
  }
  int v4 = *(_DWORD *)(result + 36);
  if (v4 < 0) {
    goto LABEL_28;
  }
  int v5 = *(_DWORD *)(result + 32);
  if (v5 < 0) {
    goto LABEL_28;
  }
  if (v4 && v5)
  {
    int v6 = *(_DWORD *)(result + 4);
    if (*(void *)(result + 24))
    {
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      qmemcpy((void *)sub_1002D19D8(&v35, 25), "Data is already allocated", 25);
      sub_1002D2278(-2, &v35, "cvCreateData", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 806);
    }
    if (!v6) {
      int v6 = ((((*(_DWORD *)result >> 3) & 0x1FF) + 1) << ((0xFA50u >> (2 * (*(unsigned char *)result & 7))) & 3))
    }
         * *(_DWORD *)(result + 36);
    size_t v7 = *(int *)(result + 32) * (uint64_t)v6 + 68;
    goto LABEL_47;
  }
  return result;
}

void sub_10022F95C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10022F9D4(uint64_t result, int a2, int a3, unsigned int a4, uint64_t a5, int a6)
{
  int v6 = a6;
  if (!result)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    sub_1002D2278(-27, &v11, "cvInitMatHeader", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 147);
  }
  if ((a3 | a2) < 0)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    qmemcpy((void *)sub_1002D19D8(&v11, 25), "Non-positive cols or rows", 25);
    sub_1002D2278(-201, &v11, "cvInitMatHeader", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 153);
  }
  int v7 = a4 & 0xFFF | 0x42420000;
  *(_DWORD *)uint64_t result = v7;
  *(_DWORD *)(result + 32) = a2;
  *(_DWORD *)(result + 36) = a3;
  *(void *)(result + 24) = a5;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  int v8 = ((((a4 >> 3) & 0x1FF) + 1) << ((0xFA50u >> (2 * (a4 & 7))) & 3)) * a3;
  if (a6 && a6 != 0x7FFFFFFF)
  {
    if (v8 > a6)
    {
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      sub_1002D2278(-13, &v11, "cvInitMatHeader", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 169);
    }
  }
  else
  {
    int v6 = ((((a4 >> 3) & 0x1FF) + 1) << ((0xFA50u >> (2 * (a4 & 7))) & 3)) * a3;
  }
  if (v6 == v8 || a2 == 1) {
    int v10 = 0x4000;
  }
  else {
    int v10 = 0;
  }
  if (v6 * (uint64_t)a2 > 0x7FFFFFFF) {
    int v10 = 0;
  }
  *(_DWORD *)uint64_t result = v7 | v10;
  *(_DWORD *)(result + 4) = v6;
  return result;
}

void sub_10022FB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10022FB6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10022FBB4(void **a1)
{
  if (!a1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    sub_1002D2278(-9, &v7, "cvReleaseMat", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 190);
  }
  uint64_t v1 = *a1;
  if (*a1)
  {
    int v2 = *v1;
    unsigned int v3 = *v1 & 0xFFFF0000;
    if (v3 != 1111687168 && (v3 != 1111621632 || (v1[9] & 0x80000000) != 0 || (v1[8] & 0x80000000) != 0))
    {
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      sub_1002D2278(-206, &v7, "cvReleaseMat", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 197);
    }
    *a1 = 0;
    unsigned int v4 = v2 & 0xFFFF0000;
    if ((v4 == 1111687168 || v4 == 1111621632 && (int)v1[9] >= 1 && (int)v1[8] >= 1) && *((void *)v1 + 3))
    {
      int v5 = (_DWORD *)*((void *)v1 + 1);
      *((void *)v1 + 3) = 0;
      if (v5)
      {
        if ((*v5)-- == 1) {
          j__free(v5);
        }
      }
      *((void *)v1 + 1) = 0;
    }
    j__free(v1);
  }
}

void sub_10022FCEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10022FD1C(uint64_t a1)
{
  if (!a1
    || (unsigned int v2 = *(_DWORD *)a1, HIWORD(*(_DWORD *)a1) != 16962)
    || (int v3 = *(_DWORD *)(a1 + 36), v3 < 1)
    || (int v4 = *(_DWORD *)(a1 + 32), v4 <= 0))
  {
    v8[0] = 0;
    v8[1] = 0;
    *(_OWORD *)sub_1002D19D8(v8, 16) = *(_OWORD *)"Bad CvMat header";
    sub_1002D2278(-5, v8, "cvCloneMat", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 212);
  }
  uint64_t v5 = sub_10022F3D0(v4, v3, v2);
  uint64_t v6 = v5;
  if (*(void *)(a1 + 24))
  {
    sub_10022F4E8(v5);
    sub_10025930C(a1, v6, 0);
  }
  return v6;
}

void sub_10022FDF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10022FE08(uint64_t result, unsigned int a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  if (!result)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    qmemcpy((void *)sub_1002D19D8(&v13, 26), "NULL matrix header pointer", 26);
    sub_1002D2278(-27, &v13, "cvInitMatNDHeader", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 238);
  }
  if (!a3)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v5 = sub_1002D19D8(&v13, 20);
    *(_DWORD *)(v5 + 16) = 1919251566;
    *(_OWORD *)uint64_t v5 = *(_OWORD *)"NULL <sizes> pointer";
    sub_1002D2278(-27, &v13, "cvInitMatNDHeader", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 244);
  }
  uint64_t v6 = (((a4 >> 3) & 0x1FF) + 1) << ((0xFA50u >> (2 * (a4 & 7))) & 3);
  if (a2 - 33 <= 0xFFFFFFDF)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    qmemcpy((void *)sub_1002D19D8(&v13, 46), "non-positive or too large number of dimensions", 46);
    sub_1002D2278(-211, &v13, "cvInitMatNDHeader", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 248);
  }
  unint64_t v7 = a2 + 1;
  do
  {
    uint64_t v8 = (v7 - 2);
    int v9 = *(_DWORD *)(a3 + 4 * v8);
    if (v9 < 0)
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      qmemcpy((void *)sub_1002D19D8(&v13, 37), "one of dimesion sizes is non-positive", 37);
      sub_1002D2278(-201, &v13, "cvInitMatNDHeader", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 253);
    }
    uint64_t v10 = result + 8 * v8;
    *(_DWORD *)(v10 + 32) = v9;
    if (v6 >= 0x80000000)
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v11 = sub_1002D19D8(&v13, 20);
      *(_DWORD *)(v11 + 16) = 1734959648;
      *(_OWORD *)uint64_t v11 = *(_OWORD *)"The array is too big";
      sub_1002D2278(-211, &v13, "cvInitMatNDHeader", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 256);
    }
    *(_DWORD *)(v10 + 36) = v6;
    v6 *= *(int *)(a3 + 4 * v8);
    --v7;
  }
  while (v7 > 1);
  if (v6 >= 0x80000000) {
    int v12 = 1111687168;
  }
  else {
    int v12 = 1111703552;
  }
  *(_DWORD *)uint64_t result = v12 & 0xFFFFF000 | a4 & 0xFFF;
  *(_DWORD *)(result + 4) = a2;
  *(void *)(result + 24) = a5;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void sub_1002300DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1002D1A1C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100230154(unsigned int a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3 = sub_100230180(a1, a2, a3);
  sub_10022F4E8(v3);
  return v3;
}

uint64_t sub_100230180(unsigned int a1, uint64_t a2, unsigned int a3)
{
  if (a1 - 33 <= 0xFFFFFFDF)
  {
    v8[0] = 0;
    v8[1] = 0;
    qmemcpy((void *)sub_1002D19D8(v8, 46), "non-positive or too large number of dimensions", 46);
    sub_1002D2278(-211, v8, "cvCreateMatNDHeader", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 287);
  }
  uint64_t v6 = sub_10020FEBC(0x120uLL);
  uint64_t result = sub_10022FE08(v6, a1, a2, a3, 0);
  *(_DWORD *)(result + 16) = 1;
  return result;
}

void sub_10023023C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100230254(uint64_t a1)
{
  if (!a1 || *(_WORD *)(a1 + 2) != 16963)
  {
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    uint64_t v2 = sub_1002D19D8(&v44, 18);
    *(_WORD *)(v2 + 16) = 29285;
    *(_OWORD *)uint64_t v2 = *(_OWORD *)"Bad CvMatND header";
    sub_1002D2278(-5, &v44, "cvCloneMatND", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 302);
  }
  signed int v3 = *(_DWORD *)(a1 + 4);
  if (v3 >= 33)
  {
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    qmemcpy((void *)sub_1002D19D8(&v44, 15), "src->dims <= 32", 15);
    sub_1002D2278(-215, &v44, "cvCloneMatND", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 304);
  }
  if (v3 >= 1)
  {
    if (v3 > 8)
    {
      uint64_t v5 = v3 & 7;
      if ((v3 & 7) == 0) {
        uint64_t v5 = 8;
      }
      uint64_t v4 = v3 - v5;
      uint64_t v6 = (const float *)(a1 + 64);
      unint64_t v7 = (unsigned long long *)&v46;
      uint64_t v8 = v4;
      do
      {
        int v9 = v6 - 8;
        unsigned long long v10 = (unsigned __int128)vld2q_f32(v9);
        unsigned long long v11 = (unsigned __int128)vld2q_f32(v6);
        *(v7 - 1) = v10;
        *unint64_t v7 = v11;
        v6 += 16;
        v7 += 2;
        v8 -= 8;
      }
      while (v8);
    }
    else
    {
      uint64_t v4 = 0;
    }
    int v12 = (_DWORD *)&v44 + v4;
    uint64_t v13 = (int *)(a1 + 8 * v4 + 32);
    uint64_t v14 = v3 - v4;
    do
    {
      int v15 = *v13;
      v13 += 2;
      *v12++ = v15;
      --v14;
    }
    while (v14);
  }
  uint64_t v16 = sub_100230180(v3, (uint64_t)&v44, *(_DWORD *)a1);
  uint64_t v17 = v16;
  if (*(void *)(a1 + 24))
  {
    sub_10022F4E8(v16);
    sub_1002943B4(a1, 0, 0, 0, (uint64_t)v36);
    sub_1002943B4(v17, 0, 0, 0, (uint64_t)v28);
    uint64_t v18 = *(void *)(v17 + 24);
    LODWORD(v25) = 33619968;
    int v26 = v28;
    uint64_t v27 = 0;
    sub_10025401C((uint64_t)v36, (uint64_t)&v25);
    if ((void)v30 != v18)
    {
      uint64_t v25 = 0;
      int v26 = 0;
      uint64_t v19 = sub_1002D19D8(&v25, 18);
      *(_WORD *)(v19 + 16) = 12385;
      *(_OWORD *)uint64_t v19 = *(_OWORD *)"_dst.data == data0";
      sub_1002D2278(-215, &v25, "cvCloneMatND", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 319);
    }
    if (v32 && atomic_fetch_add((atomic_uint *volatile)(v32 + 20), 0xFFFFFFFF) == 1) {
      sub_1002932F4((uint64_t)v28);
    }
    uint64_t v32 = 0;
    long long v30 = 0u;
    long long v31 = 0u;
    if (v29 >= 1)
    {
      uint64_t v20 = 0;
      uint64_t v21 = v33;
      do
        *(_DWORD *)(v21 + 4 * v20++) = 0;
      while (v20 < v29);
    }
    if (v34 != &v35) {
      j__free(v34);
    }
    if (v40 && atomic_fetch_add((atomic_uint *volatile)(v40 + 20), 0xFFFFFFFF) == 1) {
      sub_1002932F4((uint64_t)v36);
    }
    uint64_t v40 = 0;
    long long v38 = 0u;
    long long v39 = 0u;
    if (v37 >= 1)
    {
      uint64_t v22 = 0;
      uint64_t v23 = v41;
      do
        *(_DWORD *)(v23 + 4 * v22++) = 0;
      while (v22 < v37);
    }
    if (v42 != &v43) {
      j__free(v42);
    }
  }
  return v17;
}

void sub_1002305B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  if (a2) {
    sub_10000B6A8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100230650(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  char v6 = a6;
  uint64_t v7 = a5;
  if (a1 - 11 <= 0xFFFFFFF5)
  {
    uint64_t v52 = 0;
    uint64_t v53 = 0;
    qmemcpy((void *)sub_1002D19D8(&v52, 26), "Incorrect number of arrays", 26);
    sub_1002D2278(-211, &v52, "cvInitNArrayIterator", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 394);
  }
  if (!a2 || !a4)
  {
    uint64_t v52 = 0;
    uint64_t v53 = 0;
    qmemcpy((void *)sub_1002D19D8(&v52, 39), "Some of required array pointers is NULL", 39);
    sub_1002D2278(-27, &v52, "cvInitNArrayIterator", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 397);
  }
  if (!a5)
  {
    uint64_t v52 = 0;
    uint64_t v53 = 0;
    qmemcpy((void *)sub_1002D19D8(&v52, 24), "Iterator pointer is NULL", 24);
    sub_1002D2278(-27, &v52, "cvInitNArrayIterator", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 400);
  }
  if (a3)
  {
    uint64_t v52 = 0;
    uint64_t v53 = 0;
    qmemcpy((void *)sub_1002D19D8(&v52, 35), "Iterator with mask is not supported", 35);
    sub_1002D2278(-5, &v52, "cvInitNArrayIterator", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 403);
  }
  uint64_t v8 = 0;
  int v9 = 0;
  int v10 = a6 & 3;
  uint64_t v49 = a1;
  int v11 = -1;
  do
  {
    int v15 = v9;
    uint64_t v16 = *(void *)(a2 + 8 * v8);
    if (!v16)
    {
      uint64_t v52 = 0;
      uint64_t v53 = 0;
      qmemcpy((void *)sub_1002D19D8(&v52, 39), "Some of required array pointers is NULL", 39);
      sub_1002D2278(-27, &v52, "cvInitNArrayIterator", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 411);
    }
    if (*(_WORD *)(v16 + 2) != 16963 || !*(void *)(v16 + 24))
    {
      int v51 = 0;
      uint64_t v16 = sub_100230EC8(v16, a4 + 288 * v8, &v51);
      if (v51)
      {
        uint64_t v52 = 0;
        uint64_t v53 = 0;
        qmemcpy((void *)sub_1002D19D8(&v52, 27), "COI set is not allowed here", 27);
        sub_1002D2278(-24, &v52, "cvInitNArrayIterator", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 420);
      }
    }
    uint64_t v17 = v7 + 8 * v8;
    *(void *)(v17 + 224) = v16;
    uint64_t v18 = (uint64_t *)(v17 + 224);
    int v9 = (_DWORD *)v16;
    if (v8)
    {
      if (*(_DWORD *)(v16 + 4) != v15[1])
      {
        uint64_t v52 = 0;
        uint64_t v53 = 0;
        qmemcpy((void *)sub_1002D19D8(&v52, 47), "Number of dimensions is the same for all arrays", 47);
        sub_1002D2278(-209, &v52, "cvInitNArrayIterator", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 429);
      }
      if (v10 == 2)
      {
        if (((*v15 ^ *(_DWORD *)v16) & 0xFF8) != 0)
        {
          uint64_t v52 = 0;
          uint64_t v53 = 0;
          qmemcpy((void *)sub_1002D19D8(&v52, 36), "Depth is not the same for all arrays", 36);
          sub_1002D2278(-205, &v52, "cvInitNArrayIterator", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 446);
        }
      }
      else if (v10 == 1)
      {
        if (((*v15 ^ *(_DWORD *)v16) & 0xFF8) != 0)
        {
          uint64_t v52 = 0;
          uint64_t v53 = 0;
          qmemcpy((void *)sub_1002D19D8(&v52, 49), "Number of channels is not the same for all arrays", 49);
          sub_1002D2278(-205, &v52, "cvInitNArrayIterator", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 441);
        }
      }
      else if (!v10 && ((*v15 ^ *(_DWORD *)v16) & 0xFFF) != 0)
      {
        uint64_t v52 = 0;
        uint64_t v53 = 0;
        qmemcpy((void *)sub_1002D19D8(&v52, 40), "Data type is not the same for all arrays", 40);
        sub_1002D2278(-205, &v52, "cvInitNArrayIterator", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 436);
      }
      if ((v6 & 4) != 0 || (int v19 = *(_DWORD *)(v16 + 4), v19 < 1))
      {
        int v9 = v15;
      }
      else
      {
        uint64_t v20 = 0;
        uint64_t v21 = 8;
        do
        {
          if (*(_DWORD *)(v16 + v21 * 4) != v15[v21])
          {
            uint64_t v52 = 0;
            uint64_t v53 = 0;
            qmemcpy((void *)sub_1002D19D8(&v52, 43), "Dimension sizes are the same for all arrays", 43);
            sub_1002D2278(-209, &v52, "cvInitNArrayIterator", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 455);
          }
          ++v20;
          v21 += 2;
        }
        while (v20 < v19);
        int v9 = v15;
        uint64_t v7 = a5;
        char v6 = a6;
      }
    }
    int v12 = *(_DWORD *)(v16 + 4);
    uint64_t v22 = (((*(_DWORD *)v16 >> 3) & 0x1FFu) + 1) << ((0xFA50u >> (2 * (*(unsigned char *)v16 & 7))) & 3);
    uint64_t v13 = (v12 - 1);
    if ((int)v13 > v11 && v22 == *(_DWORD *)(v16 + 8 * v13 + 36))
    {
      do
      {
        v22 *= *(int *)(v16 + 8 * v13 + 32);
        uint64_t v13 = (v12 - 2);
        if ((int)v13 <= v11)
        {
          int v12 = v11 + 1;
          LODWORD(v13) = v11;
          goto LABEL_12;
        }
        --v12;
      }
      while (v22 == *(_DWORD *)(v16 + 8 * v13 + 36));
      LODWORD(v13) = v12 - 1;
    }
LABEL_12:
    if (v22 <= 0x7FFFFFFF || v13 != v11) {
      int v12 = v13;
    }
    if (v12 > v11) {
      int v11 = v12;
    }
    *uint64_t v18 = v16;
    *(void *)(v7 + 8 * v8++ + 16) = *(void *)(v16 + 24);
  }
  while (v8 != v49);
  int v23 = v9[1];
  int v24 = v23 - 1;
  if (v23 - 1 <= v11)
  {
    uint64_t result = (v11 + 1);
    *(_DWORD *)uint64_t v7 = a1;
    *(_DWORD *)(v7 + 4) = result;
    *(void *)(v7 + 8) = 0x100000001;
    if (v11 < 0) {
      return result;
    }
    goto LABEL_64;
  }
  unsigned int v25 = v23 + ~v11;
  if (v25 < 2)
  {
    unsigned int v26 = 1;
    int v27 = v23 - 1;
    unsigned int v28 = a1;
    goto LABEL_62;
  }
  unsigned int v28 = a1;
  if (v11 + 1 > (v23 - 1))
  {
    unsigned int v26 = 1;
    int v27 = v23 - 1;
    do
LABEL_62:
      v26 *= v9[2 * v27-- + 8];
    while (v27 > v11);
    goto LABEL_63;
  }
  int v27 = v24 - (v25 & 0xFFFFFFFE);
  int v30 = 1;
  unsigned int v31 = v25 & 0xFFFFFFFE;
  int v32 = 1;
  do
  {
    v30 *= v9[2 * v24 + 8];
    v32 *= v9[2 * (v24 - 1) + 8];
    v24 -= 2;
    v31 -= 2;
  }
  while (v31);
  unsigned int v26 = v32 * v30;
  if (v25 != (v25 & 0xFFFFFFFE)) {
    goto LABEL_62;
  }
LABEL_63:
  uint64_t result = (v11 + 1);
  *(_DWORD *)uint64_t v7 = v28;
  *(_DWORD *)(v7 + 4) = result;
  *(void *)(v7 + 8) = v26 | (unint64_t)&_mh_execute_header;
  if (v11 < 0) {
    return result;
  }
LABEL_64:
  if (result >= 0xD
    && (v7 + 96 >= (unint64_t)&v9[2 * result + 7] || (unint64_t)(v9 + 8) >= v7 + 96 + 4 * result))
  {
    uint64_t v34 = result & 7;
    if ((result & 7) == 0) {
      uint64_t v34 = 8;
    }
    uint64_t v33 = result - v34;
    uint64_t v35 = (const float *)(v9 + 16);
    uint64_t v36 = (unsigned long long *)(v7 + 112);
    uint64_t v37 = v33;
    do
    {
      long long v38 = v35 - 8;
      unsigned long long v39 = (unsigned __int128)vld2q_f32(v38);
      unsigned long long v40 = (unsigned __int128)vld2q_f32(v35);
      *(v36 - 1) = v39;
      *uint64_t v36 = v40;
      v35 += 16;
      v36 += 2;
      v37 -= 8;
    }
    while (v37);
  }
  else
  {
    uint64_t v33 = 0;
  }
  uint64_t v41 = &v9[2 * v33 + 8];
  float32x4_t v42 = (_DWORD *)(v7 + 4 * v33 + 96);
  uint64_t v43 = result - v33;
  do
  {
    int v44 = *v41;
    v41 += 2;
    *v42++ = v44;
    --v43;
  }
  while (v43);
  return result;
}

void sub_100230DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_1002D1A1C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100230EC8(uint64_t result, uint64_t a2, _DWORD *a3)
{
  uint64_t v4 = (_DWORD *)result;
  if (a3) {
    *a3 = 0;
  }
  if (!result || !a2)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    qmemcpy((void *)sub_1002D19D8(&v11, 28), "NULL array pointer is passed", 28);
    sub_1002D2278(-27, &v11, "cvGetMatND", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 336);
  }
  unsigned int v5 = *(_DWORD *)result;
  if (HIWORD(*(_DWORD *)result) == 16963)
  {
    if (!*(void *)(result + 24))
    {
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      qmemcpy((void *)sub_1002D19D8(&v11, 32), "The matrix has NULL data pointer", 32);
      sub_1002D2278(-27, &v11, "cvGetMatND", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 341);
    }
    return result;
  }
  if (v5 == 144)
  {
    char v6 = (_DWORD *)sub_1002324D4(result, (uint64_t)&v11, a3, 0);
    uint64_t v4 = v6;
    if (!v6) {
      goto LABEL_16;
    }
    unsigned int v5 = *v6;
  }
  if (HIWORD(v5) != 16962 || (int)v4[9] < 1 || (int)v4[8] <= 0)
  {
LABEL_16:
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    qmemcpy((void *)sub_1002D19D8(&v9, 38), "Unrecognized or unsupported array type", 38);
    sub_1002D2278(-5, &v9, "cvGetMatND", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 353);
  }
  uint64_t v7 = *((void *)v4 + 3);
  if (!v7)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    qmemcpy((void *)sub_1002D19D8(&v9, 33), "Input array has NULL data pointer", 33);
    sub_1002D2278(-27, &v9, "cvGetMatND", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 356);
  }
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 8) = 0;
  *(_DWORD *)(a2 + 16) = 0;
  unsigned int v8 = *v4;
  *(_DWORD *)a2 = *v4;
  *(_DWORD *)(a2 + 4) = 2;
  *(_DWORD *)(a2 + 32) = v4[8];
  *(_DWORD *)(a2 + 36) = v4[1];
  *(_DWORD *)(a2 + 40) = v4[9];
  *(_DWORD *)(a2 + 44) = (((v8 >> 3) & 0x1FF) + 1) << ((0xFA50u >> (2 * (v8 & 7))) & 3);
  return a2;
}

void sub_10023112C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1002D1A1C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10023118C(unsigned int *a1)
{
  uint64_t v1 = a1[1];
  if ((int)v1 >= 1)
  {
    uint64_t v2 = *a1;
    if ((int)v2 >= 1)
    {
      uint64_t v3 = v2 & 0xFFFFFFFE;
      uint64_t v4 = a1 + 56;
      while (1)
      {
        uint64_t v6 = (v1 - 1);
        uint64_t v7 = 8 * v6;
        if (v2 == 1) {
          break;
        }
        uint64_t v9 = v2 & 0xFFFFFFFE;
        uint64_t v10 = a1 + 58;
        do
        {
          uint64_t v11 = *(v10 - 26) + *(int *)(*v10 + v7 + 36);
          *(v10 - 27) += *(int *)(*(v10 - 1) + v7 + 36);
          *(v10 - 26) = v11;
          v10 += 2;
          v9 -= 2;
        }
        while (v9);
        uint64_t v8 = v2 & 0xFFFFFFFE;
        if (v3 != v2) {
          goto LABEL_10;
        }
LABEL_12:
        uint64_t v14 = &a1[v6];
        int v16 = v14[24];
        int v15 = v14 + 24;
        *int v15 = v16 - 1;
        if (v16 > 1) {
          return 1;
        }
        int v17 = *(_DWORD *)(*((void *)a1 + 28) + 8 * v6 + 32);
        if (v2 == 1)
        {
          uint64_t v18 = 0;
        }
        else
        {
          uint64_t v19 = v2 & 0xFFFFFFFE;
          uint64_t v20 = a1 + 58;
          do
          {
            uint64_t v21 = *(v20 - 26) - v17 * (uint64_t)*(int *)(*v20 + v7 + 36);
            *(v20 - 27) -= v17 * (uint64_t)*(int *)(*(v20 - 1) + v7 + 36);
            *(v20 - 26) = v21;
            v20 += 2;
            v19 -= 2;
          }
          while (v19);
          uint64_t v18 = v2 & 0xFFFFFFFE;
          if (v3 == v2) {
            goto LABEL_4;
          }
        }
        uint64_t v22 = &v4[2 * v18];
        uint64_t v23 = v2 - v18;
        do
        {
          *((void *)v22 - 26) -= v17 * (uint64_t)*(int *)(*(void *)v22 + 8 * v6 + 36);
          v22 += 2;
          --v23;
        }
        while (v23);
LABEL_4:
        *int v15 = v17;
        if (v1-- <= 1) {
          return 0;
        }
      }
      uint64_t v8 = 0;
LABEL_10:
      uint64_t v12 = &v4[2 * v8];
      uint64_t v13 = v2 - v8;
      do
      {
        *((void *)v12 - 26) += *(int *)(*(void *)v12 + 8 * v6 + 36);
        v12 += 2;
        --v13;
      }
      while (v13);
      goto LABEL_12;
    }
    uint64_t v24 = (v1 - 1);
    unsigned int v25 = &a1[v24];
    int v26 = v25[24];
    BOOL v27 = __OFSUB__(v26--, 1);
    v25[24] = v26;
    if (!((v26 < 0) ^ v27 | (v26 == 0))) {
      return 1;
    }
    unsigned int v28 = (unsigned int *)(*((void *)a1 + 28) + 8 * v24 + 32);
    while (1)
    {
      int v29 = &a1[v24];
      unsigned int v30 = *v28;
      v28 -= 2;
      v29[24] = v30;
      if (v24 <= 0) {
        break;
      }
      --v24;
      int v31 = v29[23];
      BOOL v27 = __OFSUB__(v31--, 1);
      v29[23] = v31;
      if (!((v31 < 0) ^ v27 | (v31 == 0))) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_100231354(int a1, int *a2, unsigned int a3)
{
  __int16 v3 = a3;
  unsigned int v6 = (0x88442211 >> (4 * (a3 & 7))) & 0xF;
  if (!v6)
  {
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    qmemcpy((void *)sub_1002D19D8(&v21, 23), "invalid array data type", 23);
    sub_1002D2278(-210, &v21, "cvCreateSparseMat", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 537);
  }
  if ((a1 - 33) <= 0xFFFFFFDF)
  {
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    qmemcpy((void *)sub_1002D19D8(&v21, 24), "bad number of dimensions", 24);
    sub_1002D2278(-211, &v21, "cvCreateSparseMat", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 540);
  }
  if (!a2)
  {
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v7 = sub_1002D19D8(&v21, 20);
    *(_DWORD *)(v7 + 16) = 1919251566;
    *(_OWORD *)uint64_t v7 = *(_OWORD *)"NULL <sizes> pointer";
    sub_1002D2278(-27, &v21, "cvCreateSparseMat", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 543);
  }
  if (a1 >= 1)
  {
    uint64_t v8 = a1;
    uint64_t v9 = a2;
    do
    {
      int v10 = *v9++;
      if (v10 <= 0)
      {
        uint64_t v21 = 0;
        uint64_t v22 = 0;
        qmemcpy((void *)sub_1002D19D8(&v21, 37), "one of dimesion sizes is non-positive", 37);
        sub_1002D2278(-201, &v21, "cvCreateSparseMat", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 548);
      }
      --v8;
    }
    while (v8);
  }
  unsigned int v11 = v6 + v6 * ((a3 >> 3) & 0x1FF);
  if (a1 <= 32) {
    int v12 = 32;
  }
  else {
    int v12 = a1;
  }
  uint64_t v13 = sub_10020FEBC(4 * (v12 - 32) + 184);
  *(_DWORD *)uint64_t v13 = v3 & 0xFFF | 0x42440000;
  *(_DWORD *)(v13 + 4) = a1;
  *(void *)(v13 + 8) = 0;
  *(_DWORD *)(v13 + 16) = 1;
  size_t v14 = 4 * a1;
  memcpy((void *)(v13 + 52), a2, v14);
  int v15 = (v6 + 15) & -v6;
  int v16 = ((_WORD)v11 + (_WORD)v15 + 3) & 0xFFFC;
  *(_DWORD *)(v13 + 44) = v15;
  *(_DWORD *)(v13 + 48) = v16;
  int v17 = (v14 + v16 + 15) & 0xFFFFFFF0;
  sub_100259F30(4096);
  *(void *)(v13 + 24) = sub_10025EB10(0, 112, v17, v18);
  *(_DWORD *)(v13 + 40) = 1024;
  uint64_t v19 = (void *)sub_10020FEBC(0x2000uLL);
  *(void *)(v13 + 32) = v19;
  bzero(v19, 0x2000uLL);
  return v13;
}

void sub_100231604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100231664(uint64_t *a1)
{
  if (!a1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    sub_1002D2278(-9, (uint64_t *)&v2, "cvReleaseSparseMat", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 581);
  }
  uint64_t v1 = *a1;
  if (*a1)
  {
    if (*(_WORD *)(v1 + 2) != 16964)
    {
      uint64_t v2 = 0;
      uint64_t v3 = 0;
      sub_1002D2278(-206, (uint64_t *)&v2, "cvReleaseSparseMat", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 588);
    }
    *a1 = 0;
    uint64_t v2 = *(void **)(*(void *)(v1 + 24) + 72);
    sub_10025A060(&v2);
    j__free(*(void **)(v1 + 32));
    *(void *)(v1 + 32) = 0;
    j__free((void *)v1);
  }
}

void sub_100231730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100231760(uint64_t a1)
{
  if (!a1 || HIWORD(*(_DWORD *)a1) != 16964)
  {
    v4[0] = 0;
    v4[1] = 0;
    qmemcpy((void *)sub_1002D19D8(v4, 27), "Invalid sparse array header", 27);
    sub_1002D2278(-5, v4, "cvCloneSparseMat", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 605);
  }
  uint64_t v2 = sub_100231354(*(_DWORD *)(a1 + 4), (int *)(a1 + 52), *(_DWORD *)a1);
  sub_10025930C(a1, v2, 0);
  return v2;
}

void sub_100231818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100231830(uint64_t a1, uint64_t a2)
{
  if (!a1 || *(_WORD *)(a1 + 2) != 16964)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    qmemcpy((void *)sub_1002D19D8(&v6, 28), "Invalid sparse matrix header", 28);
    sub_1002D2278(-5, &v6, "cvInitSparseMatIterator", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 620);
  }
  if (!a2)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    qmemcpy((void *)sub_1002D19D8(&v6, 21), "NULL iterator pointer", 21);
    sub_1002D2278(-27, &v6, "cvInitSparseMatIterator", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 623);
  }
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = 0;
  uint64_t v3 = *(unsigned int *)(a1 + 40);
  if ((int)v3 < 1)
  {
    uint64_t result = 0;
    *(_DWORD *)(a2 + 16) = 0;
  }
  else
  {
    uint64_t v4 = 0;
    while (1)
    {
      uint64_t result = *(void *)(*(void *)(a1 + 32) + 8 * v4);
      if (result) {
        break;
      }
      if (v3 == ++v4)
      {
        uint64_t result = 0;
        *(_DWORD *)(a2 + 16) = v3;
        return result;
      }
    }
    *(void *)(a2 + 8) = result;
    *(_DWORD *)(a2 + 16) = v4;
  }
  return result;
}

void sub_100231984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1002319B4(uint64_t a1)
{
  if (!a1) {
    goto LABEL_17;
  }
  unsigned int v2 = *(_DWORD *)a1 & 0xFFFF0000;
  if (v2 == 1111687168) {
    goto LABEL_6;
  }
  if (v2 == 1111621632)
  {
    if (*(int *)(a1 + 36) >= 1 && *(int *)(a1 + 32) >= 1)
    {
LABEL_6:
      if (*(void *)(a1 + 24))
      {
        *(void *)(a1 + 24) = 0;
        uint64_t v3 = *(_DWORD **)(a1 + 8);
        if (v3)
        {
          if ((*v3)-- == 1) {
            j__free(v3);
          }
        }
        *(void *)(a1 + 8) = 0;
      }
      return;
    }
LABEL_17:
    v7[0] = 0;
    v7[1] = 0;
    qmemcpy((void *)sub_1002D19D8(v7, 38), "unrecognized or unsupported array type", 38);
    sub_1002D2278(-5, v7, "cvReleaseData", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 1001);
  }
  if (*(_DWORD *)a1 != 144) {
    goto LABEL_17;
  }
  unsigned int v5 = (void (*)(void))off_1004E07C0;
  if (off_1004E07C0)
  {
    v5();
  }
  else
  {
    uint64_t v6 = *(void **)(a1 + 136);
    *(void *)(a1 + 136) = 0;
    *(void *)(a1 + 88) = 0;
    j__free(v6);
  }
}

void sub_100231B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100231B28(uint64_t a1, unsigned int a2, unsigned int a3, int *a4)
{
  if (!a1) {
    goto LABEL_30;
  }
  unsigned int v4 = *(_DWORD *)a1;
  unsigned int v5 = *(_DWORD *)a1 & 0xFFFF0000;
  if (v5 == 1111621632)
  {
    int v6 = *(_DWORD *)(a1 + 36);
    if (v6 >= 1)
    {
      int v7 = *(_DWORD *)(a1 + 32);
      if (v7 >= 1)
      {
        if (*(void *)(a1 + 24))
        {
          if (v6 <= a3 || v7 <= a2)
          {
            __srCGFloat c = 0;
            uint64_t v20 = 0;
            qmemcpy((void *)sub_1002D19D8(&__src, 21), "index is out of range", 21);
            sub_1002D2278(-211, (uint64_t *)&__src, "cvPtr2D", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 1762);
          }
          if (a4) {
            *a4 = *(_DWORD *)a1 & 0xFFF;
          }
          return *(void *)(a1 + 24)
               + *(int *)(a1 + 4) * (uint64_t)(int)a2
               + (int)(((((v4 >> 3) & 0x1FF) + 1) << ((0xFA50u >> (2 * (v4 & 7))) & 3)) * a3);
        }
      }
    }
LABEL_30:
    __srCGFloat c = 0;
    uint64_t v20 = 0;
    qmemcpy((void *)sub_1002D19D8(&__src, 38), "unrecognized or unsupported array type", 38);
    sub_1002D2278(-5, (uint64_t *)&__src, "cvPtr2D", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 1839);
  }
  if (v4 == 144)
  {
    uint64_t v9 = *(void *)(a1 + 88);
    if (!v9) {
      goto LABEL_30;
    }
    int v10 = *(_DWORD *)(a1 + 16) >> 3;
    int v11 = *(_DWORD *)(a1 + 28);
    if (!v11) {
      v10 *= *(_DWORD *)(a1 + 8);
    }
    int v12 = *(int **)(a1 + 48);
    if (v12)
    {
      unsigned int v13 = v12[3];
      unsigned int v14 = v12[4];
      v9 += *(_DWORD *)(a1 + 96) * v12[2] + v12[1] * v10;
      if (v11)
      {
        uint64_t v15 = *v12;
        if (!v15)
        {
          sub_10022F344(&__src, "COI must be non-null in case of planar images");
          sub_1002D2278(-24, (uint64_t *)&__src, "cvPtr2D", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 1793);
        }
        v9 += *(int *)(a1 + 80) * (v15 - 1);
      }
    }
    else
    {
      unsigned int v13 = *(_DWORD *)(a1 + 40);
      unsigned int v14 = *(_DWORD *)(a1 + 44);
    }
    if (v14 <= a2 || v13 <= a3)
    {
      __srCGFloat c = 0;
      uint64_t v20 = 0;
      qmemcpy((void *)sub_1002D19D8(&__src, 21), "index is out of range", 21);
      sub_1002D2278(-211, (uint64_t *)&__src, "cvPtr2D", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 1805);
    }
    uint64_t v8 = v9 + (int)(v10 * a3 + *(_DWORD *)(a1 + 96) * a2);
    if (a4)
    {
      int v18 = *(_DWORD *)(a1 + 8);
      if ((v18 - 5) <= 0xFFFFFFFB)
      {
        __srCGFloat c = 0;
        uint64_t v20 = 0;
        sub_1002D2278(-210, (uint64_t *)&__src, "cvPtr2D", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 1813);
      }
      *a4 = ((0x43160520u >> (((*(_DWORD *)(a1 + 16) >> 2) & 0x3C) + ((*(int *)(a1 + 16) >> 31) & 0x14))) & 7 | (8 * v18))
          - 8;
    }
  }
  else if (v5 == 1111752704)
  {
    if (*(_DWORD *)(a1 + 4) != 2)
    {
      sub_10022F344(&__src, "((CvSparseMat*)arr)->dims == 2");
      sub_1002D2278(-215, (uint64_t *)&__src, "cvPtr2D", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 1833);
    }
    __srCGFloat c = __PAIR64__(a3, a2);
    return sub_100232BB8(a1, &__src, a4, 1, 0);
  }
  else
  {
    if (v5 != 1111687168) {
      goto LABEL_30;
    }
    uint64_t v16 = *(void *)(a1 + 24);
    if (!v16) {
      goto LABEL_30;
    }
    if (*(_DWORD *)(a1 + 4) != 2 || *(_DWORD *)(a1 + 32) <= a2 || *(_DWORD *)(a1 + 40) <= a3)
    {
      __srCGFloat c = 0;
      uint64_t v20 = 0;
      qmemcpy((void *)sub_1002D19D8(&__src, 21), "index is out of range", 21);
      sub_1002D2278(-211, (uint64_t *)&__src, "cvPtr2D", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 1825);
    }
    uint64_t v8 = v16 + *(int *)(a1 + 36) * (uint64_t)(int)a2 + *(int *)(a1 + 44) * (uint64_t)(int)a3;
    if (a4) {
      *a4 = *(_DWORD *)a1 & 0xFFF;
    }
  }
  return v8;
}

void sub_100231F8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2) {
    sub_10000B6A8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10023204C(int *a1)
{
  if (!a1) {
    goto LABEL_15;
  }
  int v1 = *a1;
  unsigned int v2 = *a1 & 0xFFFF0000;
  if (v2 == 1111752704 || v2 == 1111687168) {
    return v1 & 0xFFF;
  }
  if (v2 == 1111621632)
  {
    if (a1[9] < 1 || a1[8] < 1) {
      goto LABEL_15;
    }
    return v1 & 0xFFF;
  }
  if (v1 != 144 || !*((void *)a1 + 11))
  {
LABEL_15:
    v5[0] = 0;
    v5[1] = 0;
    qmemcpy((void *)sub_1002D19D8(v5, 38), "unrecognized or unsupported array type", 38);
    sub_1002D2278(-5, v5, "cvGetElemType", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 1094);
  }
  return ((0x43160520u >> (((a1[4] >> 2) & 0x3C) + ((a1[4] >> 31) & 0x14))) & 7 | (8 * a1[2])) - 8;
}

uint64_t sub_100232154()
{
  sub_1002D1A1C(&v1);
  return 0xFFFFFFFFLL;
}

void sub_100232174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10023218C(uint64_t a1, int *__dst)
{
  if (!a1) {
    goto LABEL_28;
  }
  unsigned int v2 = *(_DWORD *)a1 & 0xFFFF0000;
  if (v2 == 1111621632)
  {
    if (*(int *)(a1 + 36) >= 1)
    {
      int v3 = *(_DWORD *)(a1 + 32);
      if (v3 >= 1)
      {
        if (__dst)
        {
          *__dst = v3;
          int v4 = *(_DWORD *)(a1 + 36);
LABEL_11:
          __dst[1] = v4;
          return 2;
        }
        return 2;
      }
    }
    goto LABEL_28;
  }
  if (*(_DWORD *)a1 == 144)
  {
    if (*(void *)(a1 + 88))
    {
      if (__dst)
      {
        *__dst = *(_DWORD *)(a1 + 44);
        int v4 = *(_DWORD *)(a1 + 40);
        goto LABEL_11;
      }
      return 2;
    }
LABEL_28:
    v21[0] = 0;
    v21[1] = 0;
    qmemcpy((void *)sub_1002D19D8(v21, 38), "unrecognized or unsupported array type", 38);
    sub_1002D2278(-5, v21, "cvGetDims", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 1148);
  }
  if (v2 == 1111752704)
  {
    uint64_t v5 = *(unsigned int *)(a1 + 4);
    if (!__dst) {
      return v5;
    }
    memcpy(__dst, (const void *)(a1 + 52), 4 * (int)v5);
    return v5;
  }
  else
  {
    if (v2 != 1111687168) {
      goto LABEL_28;
    }
    uint64_t v7 = *(unsigned int *)(a1 + 4);
    if (__dst && (int)v7 >= 1)
    {
      if (v7 >= 0xD
        && (a1 + 8 * v7 + 28 > (unint64_t)__dst ? (BOOL v8 = a1 + 32 >= (unint64_t)&__dst[v7]) : (BOOL v8 = 1), v8))
      {
        uint64_t v9 = v7 & 7;
        if ((v7 & 7) == 0) {
          uint64_t v9 = 8;
        }
        uint64_t v10 = v7 - v9;
        int v11 = (const float *)(a1 + 64);
        int v12 = (unsigned long long *)(__dst + 4);
        uint64_t v13 = v10;
        do
        {
          unsigned int v14 = v11 - 8;
          unsigned long long v15 = (unsigned __int128)vld2q_f32(v14);
          unsigned long long v16 = (unsigned __int128)vld2q_f32(v11);
          *(v12 - 1) = v15;
          *int v12 = v16;
          v11 += 16;
          v12 += 2;
          v13 -= 8;
        }
        while (v13);
      }
      else
      {
        uint64_t v10 = 0;
      }
      int v17 = &__dst[v10];
      int v18 = (int *)(a1 + 8 * v10 + 32);
      uint64_t v19 = v7 - v10;
      do
      {
        int v20 = *v18;
        v18 += 2;
        *v17++ = v20;
        --v19;
      }
      while (v19);
    }
    return v7;
  }
}

void sub_100232398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

unint64_t sub_1002323B0(uint64_t a1)
{
  if (!a1) {
    goto LABEL_10;
  }
  if (HIWORD(*(_DWORD *)a1) == 16962)
  {
    unsigned int v1 = *(_DWORD *)(a1 + 36);
    if ((v1 & 0x80000000) == 0)
    {
      uint64_t v2 = *(unsigned int *)(a1 + 32);
      if ((v2 & 0x80000000) == 0) {
        return v1 | (unint64_t)(v2 << 32);
      }
    }
LABEL_10:
    v5[0] = 0;
    v5[1] = 0;
    qmemcpy((void *)sub_1002D19D8(v5, 33), "Array should be CvMat or IplImage", 33);
    sub_1002D2278(-5, v5, "cvGetSize", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 1246);
  }
  if (*(_DWORD *)a1 != 144) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)(a1 + 48);
  if (v4) {
    return *(unsigned int *)(v4 + 12) | ((unint64_t)*(unsigned int *)(v4 + 16) << 32);
  }
  else {
    return *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned int *)(a1 + 44) << 32);
  }
}

void sub_1002324BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1002324D4(uint64_t a1, uint64_t a2, _DWORD *a3, int a4)
{
  uint64_t v5 = a2;
  if (!a1 || !a2)
  {
    uint64_t v39 = 0;
    uint64_t v40 = 0;
    qmemcpy((void *)sub_1002D19D8(&v39, 28), "NULL array pointer is passed", 28);
    sub_1002D2278(-27, &v39, "cvGetMat", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2391);
  }
  unsigned int v7 = *(_DWORD *)a1;
  unsigned int v8 = *(_DWORD *)a1 & 0xFFFF0000;
  if (v8 == 1111621632)
  {
    if (*(int *)(a1 + 36) >= 1 && *(int *)(a1 + 32) >= 1)
    {
      if (!*(void *)(a1 + 24))
      {
        uint64_t v39 = 0;
        uint64_t v40 = 0;
        qmemcpy((void *)sub_1002D19D8(&v39, 32), "The matrix has NULL data pointer", 32);
        sub_1002D2278(-27, &v39, "cvGetMat", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2396);
      }
      int v9 = 0;
      uint64_t v5 = a1;
      if (!a3) {
        return v5;
      }
LABEL_59:
      *a3 = v9;
      return v5;
    }
LABEL_22:
    if (!a4 || v8 != 1111687168)
    {
      uint64_t v39 = 0;
      uint64_t v40 = 0;
      qmemcpy((void *)sub_1002D19D8(&v39, 38), "Unrecognized or unsupported array type", 38);
      sub_1002D2278(-206, &v39, "cvGetMat", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2493);
    }
    int v20 = *(_DWORD *)(a1 + 32);
    if (!*(void *)(a1 + 24))
    {
      uint64_t v39 = 0;
      uint64_t v40 = 0;
      qmemcpy((void *)sub_1002D19D8(&v39, 33), "Input array has NULL data pointer", 33);
      sub_1002D2278(-27, &v39, "cvGetMat", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2466);
    }
    if ((v7 & 0x4000) == 0)
    {
      uint64_t v39 = 0;
      uint64_t v40 = 0;
      qmemcpy((void *)sub_1002D19D8(&v39, 44), "Only continuous nD arrays are supported here", 44);
      sub_1002D2278(-5, &v39, "cvGetMat", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2469);
    }
    uint64_t v21 = *(unsigned int *)(a1 + 4);
    if ((int)v21 < 3)
    {
      if (v21 == 1) {
        int v23 = 1;
      }
      else {
        int v23 = *(_DWORD *)(a1 + 40);
      }
    }
    else
    {
      if (v21 >= 0xA)
      {
        uint64_t v24 = (v21 - 1) & 7;
        if (!v24) {
          uint64_t v24 = 8;
        }
        uint64_t v25 = v21 - 1 - v24;
        uint64_t v22 = v21 - v24;
        int v26 = (const float *)(a1 + 72);
        v27.i64[0] = 0x100000001;
        v27.i64[1] = 0x100000001;
        v28.i64[0] = 0x100000001;
        v28.i64[1] = 0x100000001;
        do
        {
          int v29 = v26 - 8;
          unsigned long long v30 = (unsigned __int128)vld2q_f32(v29);
          unsigned long long v31 = (unsigned __int128)vld2q_f32(v26);
          int32x4_t v27 = vmulq_s32((int32x4_t)v30, v27);
          int32x4_t v28 = vmulq_s32((int32x4_t)v31, v28);
          v26 += 16;
          v25 -= 8;
        }
        while (v25);
        int8x16_t v32 = (int8x16_t)vmulq_s32(v28, v27);
        *(int32x2_t *)v32.i8 = vmul_s32(*(int32x2_t *)v32.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v32, v32, 8uLL));
        int v23 = v32.i32[0] * v32.i32[1];
      }
      else
      {
        uint64_t v22 = 1;
        int v23 = 1;
      }
      uint64_t v33 = (int *)(a1 + 8 * v22 + 32);
      uint64_t v34 = v21 - v22;
      do
      {
        int v35 = *v33;
        v33 += 2;
        v23 *= v35;
        --v34;
      }
      while (v34);
    }
    *(void *)(a2 + 8) = 0;
    *(_DWORD *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = *(void *)(a1 + 24);
    *(_DWORD *)(a2 + 32) = v20;
    *(_DWORD *)(a2 + 36) = v23;
    unsigned int v36 = *(_DWORD *)a1;
    int v37 = ((((v36 >> 3) & 0x1FF) + 1) << ((0xFA50u >> (2 * (v36 & 7))) & 3)) * v23;
    if (v20 <= 1) {
      int v37 = 0;
    }
    *(_DWORD *)a2 = *(_DWORD *)a1 & 0xFFF | 0x42424000;
    *(_DWORD *)(a2 + 4) = v37;
    if (v20 * (uint64_t)v37 < 0x80000000)
    {
      int v9 = 0;
      if (!a3) {
        return v5;
      }
    }
    else
    {
      int v9 = 0;
      *(_DWORD *)a2 = v36 & 0xFFF | 0x42420000;
      if (!a3) {
        return v5;
      }
    }
    goto LABEL_59;
  }
  if (v7 != 144) {
    goto LABEL_22;
  }
  if (!*(void *)(a1 + 88))
  {
    uint64_t v39 = 0;
    uint64_t v40 = 0;
    qmemcpy((void *)sub_1002D19D8(&v39, 31), "The image has NULL data pointer", 31);
    sub_1002D2278(-27, &v39, "cvGetMat", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2406);
  }
  unsigned int v10 = (0x43160520u >> (((*(_DWORD *)(a1 + 16) >> 2) & 0x3C) + ((*(int *)(a1 + 16) >> 31) & 0x14))) & 7;
  int v11 = *(_DWORD *)(a1 + 8);
  if (v11 <= 1) {
    int v12 = 0;
  }
  else {
    int v12 = *(_DWORD *)(a1 + 28);
  }
  uint64_t v13 = *(int **)(a1 + 48);
  if (!v13)
  {
    if (v12)
    {
      uint64_t v39 = 0;
      uint64_t v40 = 0;
      qmemcpy((void *)sub_1002D19D8(&v39, 40), "Pixel order should be used with coi == 0", 40);
      sub_1002D2278(-206, &v39, "cvGetMat", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2452);
    }
    int v19 = (v10 | (8 * v11)) - 8;
    int v15 = *(_DWORD *)(a1 + 40);
    int v14 = *(_DWORD *)(a1 + 44);
    uint64_t v17 = *(void *)(a1 + 88);
    int v16 = *(_DWORD *)(a1 + 96);
    uint64_t v18 = v5;
LABEL_38:
    sub_10022F9D4(v18, v14, v15, v19, v17, v16);
    int v9 = 0;
    if (!a3) {
      return v5;
    }
    goto LABEL_59;
  }
  if (v12 == 1)
  {
    if (!*v13)
    {
      sub_10022F344(&v39, "Images with planar data layout should be used with COI selected");
      sub_1002D2278(-206, &v39, "cvGetMat", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2422);
    }
    int v15 = v13[3];
    int v14 = v13[4];
    int v16 = *(_DWORD *)(a1 + 96);
    uint64_t v17 = *(void *)(a1 + 88)
        + (*v13 - 1) * *(int *)(a1 + 80)
        + v16 * (uint64_t)v13[2]
        + ((uint64_t)v13[1] << ((0xFA50u >> (2
                                          * ((0x43160520u >> (((*(_DWORD *)(a1 + 16) >> 2) & 0x3C)
                                                            + ((*(int *)(a1 + 16) >> 31) & 0x14))) & 7))) & 3));
    uint64_t v18 = v5;
    int v19 = (0x43160520u >> (((*(_DWORD *)(a1 + 16) >> 2) & 0x3C) + ((*(int *)(a1 + 16) >> 31) & 0x14))) & 7;
    goto LABEL_38;
  }
  int v9 = *v13;
  if (v11 >= 513)
  {
    uint64_t v39 = 0;
    uint64_t v40 = 0;
    qmemcpy((void *)sub_1002D19D8(&v39, 56), "The image is interleaved and has over CV_CN_MAX channels", 56);
    sub_1002D2278(-15, &v39, "cvGetMat", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2438);
  }
  sub_10022F9D4(a2, v13[4], v13[3], v10 | (8 * v11 - 8), *(void *)(a1 + 88)+ *(int *)(a1 + 96) * (uint64_t)v13[2]+ v13[1] * (uint64_t)(int)(((((8 * v11 - 8) >> 3) & 0x1FF) + 1) << ((0xFA50u >> (2 * v10)) & 3)), *(_DWORD *)(a1 + 96));
  if (a3) {
    goto LABEL_59;
  }
  return v5;
}

void sub_100232AE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100232BB8(uint64_t a1, _DWORD *__src, int *a3, int a4, int *a5)
{
  if (a5)
  {
    unsigned int v7 = *a5;
  }
  else
  {
    int v14 = *(_DWORD *)(a1 + 4);
    if (v14 < 1)
    {
      unsigned int v7 = 0;
    }
    else
    {
      uint64_t v15 = 0;
      unsigned int v7 = 0;
      do
      {
        unsigned int v16 = __src[v15];
        if (v16 >= *(_DWORD *)(a1 + 52 + 4 * v15))
        {
          uint64_t v36 = 0;
          uint64_t v37 = 0;
          qmemcpy((void *)sub_1002D19D8(&v36, 30), "One of indices is out of range", 30);
          sub_1002D2278(-211, &v36, "icvGetNodePtr", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 657);
        }
        unsigned int v7 = v16 + 1540483477 * v7;
        ++v15;
      }
      while (v15 < v14);
    }
  }
  int v8 = *(_DWORD *)(a1 + 40);
  int v9 = (v8 - 1) & v7;
  int v10 = v7 & 0x7FFFFFFF;
  if (a4 >= -1 && (uint64_t v11 = *(void *)(*(void *)(a1 + 32) + 8 * v9)) != 0)
  {
    int v12 = a3;
    do
    {
      if (*(_DWORD *)v11 == v10)
      {
        uint64_t v18 = *(unsigned int *)(a1 + 4);
        if ((int)v18 < 1)
        {
          LODWORD(v17) = 0;
        }
        else
        {
          uint64_t v17 = 0;
          while (__src[v17] == *(_DWORD *)(v11 + *(int *)(a1 + 48) + 4 * v17))
          {
            if (v18 == ++v17) {
              goto LABEL_21;
            }
          }
        }
        if (v17 == v18)
        {
LABEL_21:
          uint64_t v13 = v11 + *(int *)(a1 + 44);
          if (!a4) {
            goto LABEL_42;
          }
          goto LABEL_22;
        }
      }
      uint64_t v11 = *(void *)(v11 + 8);
    }
    while (v11);
    uint64_t v13 = 0;
    if (a4) {
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v13 = 0;
    int v12 = a3;
    if (a4)
    {
LABEL_22:
      if (!v13)
      {
        uint64_t v19 = *(void *)(a1 + 24);
        if (*(_DWORD *)(v19 + 104) >= 3 * v8)
        {
          if (v8 >= 512) {
            int v20 = 2 * v8;
          }
          else {
            int v20 = 1024;
          }
          uint64_t v21 = (char *)sub_10020FEBC(8 * v20);
          bzero(v21, 8 * v20);
          uint64_t v22 = sub_100231830(a1, (uint64_t)&v36);
          if (v22)
          {
            int v23 = v20 - 1;
            int v24 = v38;
            for (i = v37; ; uint64_t v22 = i)
            {
              uint64_t i = *(void *)(i + 8);
              if (!i)
              {
                int v27 = v24 + 1;
                int v28 = *(_DWORD *)(v36 + 40);
                if (v24 + 1 >= v28)
                {
LABEL_35:
                  int v38 = v27;
                  uint64_t v30 = 8 * (*(_DWORD *)v22 & v23);
                  *(void *)(v22 + 8) = *(void *)&v21[v30];
                  *(void *)&v21[v30] = v22;
                  break;
                }
                int v29 = (uint64_t *)(*(void *)(v36 + 32) + 8 * v24++ + 8);
                while (1)
                {
                  uint64_t i = *v29;
                  if (*v29) {
                    break;
                  }
                  ++v24;
                  ++v29;
                  if (v28 == v24) {
                    goto LABEL_35;
                  }
                }
              }
              uint64_t v37 = i;
              uint64_t v26 = 8 * (*(_DWORD *)v22 & v23);
              *(void *)(v22 + 8) = *(void *)&v21[v26];
              *(void *)&v21[v26] = v22;
            }
          }
          j__free(*(void **)(a1 + 32));
          *(void *)(a1 + 32) = v21;
          *(_DWORD *)(a1 + 40) = v20;
          int v9 = (v20 - 1) & v10;
          uint64_t v19 = *(void *)(a1 + 24);
        }
        uint64_t v31 = *(void *)(v19 + 96);
        uint64_t v36 = v31;
        if (v31)
        {
          *(void *)(v19 + 96) = *(void *)(v31 + 8);
          *(_DWORD *)v31 &= 0x3FFFFFFu;
          ++*(_DWORD *)(v19 + 104);
        }
        else
        {
          sub_10025EC10(v19, 0, &v36);
          uint64_t v31 = v36;
        }
        *(_DWORD *)uint64_t v31 = v10;
        uint64_t v32 = *(void *)(a1 + 32);
        uint64_t v33 = 8 * v9;
        *(void *)(v31 + 8) = *(void *)(v32 + v33);
        *(void *)(v32 + v33) = v31;
        memcpy((void *)(v31 + *(int *)(a1 + 48)), __src, 4 * *(int *)(a1 + 4));
        uint64_t v13 = v31 + *(int *)(a1 + 44);
        if (a4 >= 1) {
          bzero((void *)(v31 + *(int *)(a1 + 44)), (((*(_DWORD *)a1 >> 3) & 0x1FFu) + 1) << ((0xFA50u >> (2 * (*(unsigned char *)a1 & 7))) & 3));
        }
      }
    }
  }
LABEL_42:
  if (v12) {
    *int v12 = *(_DWORD *)a1 & 0xFFF;
  }
  return v13;
}

void sub_100232F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1002D1A1C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100232F4C(uint64_t a1, unsigned int *__src, int *a3, int a4, int *a5)
{
  if (!__src)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    qmemcpy((void *)sub_1002D19D8(&v14, 23), "NULL pointer to indices", 23);
    sub_1002D2278(-27, &v14, "cvPtrND", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 1888);
  }
  if (!a1) {
    goto LABEL_20;
  }
  unsigned int v5 = *(_DWORD *)a1 & 0xFFFF0000;
  if (v5 == 1111621632)
  {
    if (*(int *)(a1 + 36) >= 1 && *(int *)(a1 + 32) >= 1) {
      return sub_100231B28(a1, *__src, __src[1], a3);
    }
    goto LABEL_20;
  }
  if (v5 != 1111687168)
  {
    if (v5 == 1111752704) {
      return sub_100232BB8(a1, __src, a3, a4, a5);
    }
    if (*(_DWORD *)a1 == 144) {
      return sub_100231B28(a1, *__src, __src[1], a3);
    }
LABEL_20:
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    qmemcpy((void *)sub_1002D19D8(&v14, 38), "unrecognized or unsupported array type", 38);
    sub_1002D2278(-5, &v14, "cvPtrND", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 1912);
  }
  uint64_t v7 = *(void *)(a1 + 24);
  if (!v7) {
    goto LABEL_20;
  }
  int v8 = *(_DWORD *)(a1 + 4);
  if (v8 >= 1)
  {
    uint64_t v9 = 0;
    int v10 = (int *)(a1 + 36);
    do
    {
      unsigned int v12 = __src[v9];
      if (v12 >= *(v10 - 1))
      {
        uint64_t v14 = 0;
        uint64_t v15 = 0;
        qmemcpy((void *)sub_1002D19D8(&v14, 21), "index is out of range", 21);
        sub_1002D2278(-211, &v14, "cvPtrND", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 1902);
      }
      int v11 = *v10;
      v10 += 2;
      v7 += v11 * (uint64_t)(int)v12;
      ++v9;
    }
    while (v9 < v8);
  }
  if (a3) {
    *a3 = *(_DWORD *)a1 & 0xFFF;
  }
  return v7;
}

void sub_10023319C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1002331E4(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v7 = a1;
  if (!a2)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    sub_1002D2278(-27, &v19, "cvReshape", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2719);
  }
  if (!a1 || *(_WORD *)(a1 + 2) != 16962 || *(int *)(a1 + 36) < 1 || *(int *)(a1 + 32) < 1 || !*(void *)(a1 + 24))
  {
    int v18 = 0;
    uint64_t v7 = sub_1002324D4(a1, a2, &v18, 1);
    if (v18)
    {
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v8 = sub_1002D19D8(&v19, 20);
      *(_DWORD *)(v8 + 16) = 1684370546;
      *(_OWORD *)uint64_t v8 = *(_OWORD *)"COI is not supported";
      sub_1002D2278(-24, &v19, "cvReshape", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2726);
    }
  }
  if (a3)
  {
    if ((a3 - 5) <= 0xFFFFFFFB)
    {
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      sub_1002D2278(-15, &v19, "cvReshape", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2732);
    }
    if (v7 != a2) {
      goto LABEL_14;
    }
  }
  else
  {
    a3 = ((*(_DWORD *)v7 >> 3) & 0x1FF) + 1;
    if (v7 != a2)
    {
LABEL_14:
      int v9 = *(_DWORD *)(a2 + 16);
      uint64_t v10 = *(void *)(v7 + 32);
      long long v11 = *(_OWORD *)(v7 + 16);
      *(_OWORD *)a2 = *(_OWORD *)v7;
      *(_OWORD *)(a2 + 16) = v11;
      *(void *)(a2 + 32) = v10;
      *(void *)(a2 + 8) = 0;
      *(_DWORD *)(a2 + 16) = v9;
    }
  }
  int v12 = *(_DWORD *)(v7 + 36) + *(_DWORD *)(v7 + 36) * ((*(_DWORD *)v7 >> 3) & 0x1FF);
  if (a3 > v12)
  {
    if (a4) {
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (!a4 && v12 % a3) {
LABEL_20:
  }
    a4 = *(_DWORD *)(v7 + 32) * v12 / a3;
  if (!a4)
  {
    a4 = *(_DWORD *)(v7 + 32);
LABEL_34:
    *(_DWORD *)(a2 + 32) = a4;
    *(_DWORD *)(a2 + 4) = *(_DWORD *)(v7 + 4);
    int v16 = v12 / a3;
    if (v12 / a3 * a3 == v12) {
      goto LABEL_36;
    }
LABEL_35:
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    qmemcpy((void *)sub_1002D19D8(&v19, 62), "The total width is not divisible by the new number of channels", 62);
    sub_1002D2278(-15, &v19, "cvReshape", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2776);
  }
LABEL_22:
  int v13 = *(_DWORD *)(v7 + 32);
  if (a4 == v13) {
    goto LABEL_34;
  }
  if ((*(_DWORD *)v7 & 0x4000) == 0)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    qmemcpy((void *)sub_1002D19D8(&v19, 72), "The matrix is not continuous, thus its number of rows can not be changed", 72);
    sub_1002D2278(-13, &v19, "cvReshape", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2757);
  }
  int v14 = v13 * v12;
  if (a4 > v14)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    qmemcpy((void *)sub_1002D19D8(&v19, 22), "Bad new number of rows", 22);
    sub_1002D2278(-211, &v19, "cvReshape", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2760);
  }
  int v15 = v14 / a4;
  if (v14 / a4 * a4 != v14)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    qmemcpy((void *)sub_1002D19D8(&v19, 78), "The total number of matrix elements is not divisible by the new number of rows", 78);
    sub_1002D2278(-5, &v19, "cvReshape", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2766);
  }
  *(_DWORD *)(a2 + 32) = a4;
  *(_DWORD *)(a2 + 4) = ((0x88442211 >> (4 * (*(unsigned char *)v7 & 7))) & 0xF) * v15;
  int v16 = v15 / a3;
  if (v15 / a3 * a3 != v15) {
    goto LABEL_35;
  }
LABEL_36:
  *(_DWORD *)(a2 + 36) = v16;
  *(_DWORD *)a2 = *(_DWORD *)v7 & 0xFFFFF007 | (8 * a3 - 8);
  return a2;
}

void sub_1002335BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1002D1A1C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100233664(uint64_t a1, uint64_t a2, int a3, int a4, unsigned int a5, int a6)
{
  if (!a1)
  {
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    qmemcpy((void *)sub_1002D19D8(&v27, 22), "null pointer to header", 22);
    sub_1002D2278(-9, &v27, "cvInitImageHeader", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2918);
  }
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_DWORD *)a1 = 144;
  if ((a4 - 1) > 3)
  {
    int v13 = "";
    int v14 = "";
  }
  else
  {
    int v12 = &off_100494820[2 * (a4 - 1)];
    int v13 = *v12;
    int v14 = v12[1];
  }
  strncpy((char *)(a1 + 20), v13, 4uLL);
  strncpy((char *)(a1 + 24), v14, 4uLL);
  if ((a2 & 0x8000000080000000) != 0)
  {
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    qmemcpy((void *)sub_1002D19D8(&v27, 13), "Bad input roi", 13);
    sub_1002D2278(-25, &v27, "cvInitImageHeader", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2928);
  }
  int v15 = a3 & 0x7FFFFFFF;
  BOOL v20 = a3 != 1 && v15 != 8 && v15 != 16 && v15 != 32 && a3 != 64;
  if (a4 < 0 || v20)
  {
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v21 = sub_1002D19D8(&v27, 18);
    *(_WORD *)(v21 + 16) = 29793;
    *(_OWORD *)uint64_t v21 = *(_OWORD *)"Unsupported format";
    sub_1002D2278(-17, &v27, "cvInitImageHeader", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2935);
  }
  if (a5 >= 2)
  {
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    *(_OWORD *)sub_1002D19D8(&v27, 16) = *(_OWORD *)"Bad input origin";
    sub_1002D2278(-20, &v27, "cvInitImageHeader", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2937);
  }
  if (a6 != 4 && a6 != 8)
  {
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    qmemcpy((void *)sub_1002D19D8(&v27, 15), "Bad input align", 15);
    sub_1002D2278(-21, &v27, "cvInitImageHeader", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2940);
  }
  *(void *)(a1 + 40) = a2;
  uint64_t v22 = *(void *)(a1 + 48);
  if (v22)
  {
    *(void *)uint64_t v22 = 0;
    *(_DWORD *)(v22 + 8) = 0;
    *(void *)(v22 + 12) = a2;
  }
  if (a4 <= 1) {
    int v23 = 1;
  }
  else {
    int v23 = a4;
  }
  *(_DWORD *)(a1 + 8) = v23;
  *(_DWORD *)(a1 + 16) = a3;
  signed int v24 = (a6 + ((v15 * a2 * v23 + 7) >> 3) - 1) & -a6;
  *(_DWORD *)(a1 + 96) = v24;
  *(_DWORD *)(a1 + 32) = a5;
  *(_DWORD *)(a1 + 36) = a6;
  uint64_t v25 = SHIDWORD(a2) * (uint64_t)v24;
  *(_DWORD *)(a1 + 80) = v25;
  if (v25 != (int)v25)
  {
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    qmemcpy((void *)sub_1002D19D8(&v27, 22), "Overflow for imageSize", 22);
    sub_1002D2278(-4, &v27, "cvInitImageHeader", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2962);
  }
  return a1;
}

void sub_1002339B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100233A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = a3;
  int v4 = a2;
  if (off_1004E07B0)
  {
    if ((a3 - 1) > 3)
    {
      uint64_t v7 = "";
      uint64_t v8 = "";
    }
    else
    {
      int v6 = &off_100494820[2 * (a3 - 1)];
      uint64_t v7 = *v6;
      uint64_t v8 = v6[1];
    }
    uint64_t v9 = off_1004E07B0(a3, 0, a2, v7, v8, 0, 0, 4, a1, 0, 0, 0, 0);
  }
  else
  {
    uint64_t v9 = sub_10020FEBC(0x90uLL);
    sub_100233664(v9, a1, v4, v3, 0, 4);
  }
  sub_10022F4E8(v9);
  return v9;
}

void sub_100233B1C(void ***a1)
{
  if (!a1)
  {
    v2[0] = 0;
    v2[1] = 0;
    sub_1002D2278(-27, v2, "cvReleaseImage", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 2996);
  }
  unsigned int v1 = *a1;
  if (*a1)
  {
    *a1 = 0;
    sub_1002319B4((uint64_t)v1);
    if (off_1004E07C0)
    {
      off_1004E07C0(v1, 5);
    }
    else
    {
      j__free(v1[6]);
      v1[6] = 0;
      j__free(v1);
    }
  }
}

void sub_100233BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100233BE0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = result;
  if (!result)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    sub_1002D2278(-9, &v11, "cvSetImageROI", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 3013);
  }
  if ((a3 & 0x8000000080000000) != 0
    || (int v4 = *(_DWORD *)(result + 40), v4 <= (int)a2)
    || (int v5 = *(_DWORD *)(result + 44), v5 <= SHIDWORD(a2))
    || (int)a2 + (int)a3 < (a3 != 0)
    || HIDWORD(a2) + HIDWORD(a3) < (HIDWORD(a3) != 0))
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    qmemcpy((void *)sub_1002D19D8(&v11, 184), "rect.width >= 0 && rect.height >= 0 && rect.x < image->width && rect.y < image->height && rect.x + rect.width >= (int)(rect.width > 0) && rect.y + rect.height >= (int)(rect.height > 0)", 184);
    sub_1002D2278(-215, &v11, "cvSetImageROI", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 3019);
  }
  uint64_t v6 = a2 & ~((int)a2 >> 31);
  uint64_t v7 = HIDWORD(a2) & ~(SHIDWORD(a2) >> 31);
  if (v4 >= (int)a2 + (int)a3) {
    int v4 = a2 + a3;
  }
  if (v5 >= HIDWORD(a2) + HIDWORD(a3)) {
    int v5 = HIDWORD(a2) + HIDWORD(a3);
  }
  uint64_t v8 = (v4 - v6);
  int v9 = v5 - v7;
  uint64_t v10 = *(_DWORD **)(result + 48);
  if (v10)
  {
    v10[1] = v6;
    v10[2] = v7;
    v10[3] = v8;
    v10[4] = v9;
  }
  else
  {
    if (off_1004E07C8)
    {
      uint64_t result = off_1004E07C8(0, v6, v7, v8, (v5 - v7));
    }
    else
    {
      uint64_t result = sub_10020FEBC(0x14uLL);
      *(_DWORD *)uint64_t result = 0;
      *(_DWORD *)(result + 4) = v6;
      *(_DWORD *)(result + 8) = v7;
      *(_DWORD *)(result + 12) = v8;
      *(_DWORD *)(result + 16) = v9;
    }
    *(void *)(v3 + 48) = result;
  }
  return result;
}

void sub_100233DB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100233DE0(uint64_t result, uint64_t a2)
{
  int v2 = a2;
  if (!result)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    sub_1002D2278(-9, &v7, "cvSetImageCOI", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 3086);
  }
  if (*(_DWORD *)(result + 8) < a2)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    sub_1002D2278(-24, &v7, "cvSetImageCOI", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 3089);
  }
  int v4 = (uint64_t *)(result + 48);
  uint64_t v3 = *(_DWORD **)(result + 48);
  if (a2 || v3)
  {
    if (v3)
    {
      *uint64_t v3 = a2;
    }
    else
    {
      uint64_t v6 = *(unsigned int *)(result + 40);
      uint64_t v5 = *(unsigned int *)(result + 44);
      if (off_1004E07C8)
      {
        uint64_t result = off_1004E07C8(a2, 0, 0, v6, v5);
      }
      else
      {
        uint64_t result = sub_10020FEBC(0x14uLL);
        *(_DWORD *)uint64_t result = v2;
        *(_DWORD *)(result + 4) = 0;
        *(_DWORD *)(result + 8) = 0;
        *(_DWORD *)(result + 12) = v6;
        *(_DWORD *)(result + 16) = v5;
      }
      *int v4 = result;
    }
  }
  return result;
}

void sub_100233F10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100233F40(uint64_t a1)
{
  if (!a1)
  {
    v3[0] = 0;
    v3[1] = 0;
    sub_1002D2278(-9, v3, "cvGetImageCOI", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 3109);
  }
  unsigned int v1 = *(unsigned int **)(a1 + 48);
  if (v1) {
    return *v1;
  }
  else {
    return 0;
  }
}

void sub_100233FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100233FD4(long long *a1)
{
  if (!a1 || *(_DWORD *)a1 != 144)
  {
    v19[0] = 0;
    v19[1] = 0;
    *(_OWORD *)sub_1002D19D8(v19, 16) = *(_OWORD *)"Bad image header";
    sub_1002D2278(-5, v19, "cvCloneImage", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/array.cpp", 3121);
  }
  if (off_1004E07D0) {
    return off_1004E07D0(a1);
  }
  uint64_t v2 = sub_10020FEBC(0x90uLL);
  uint64_t v3 = *((void *)a1 + 16);
  long long v5 = a1[6];
  long long v4 = a1[7];
  *(_OWORD *)(v2 + 80) = a1[5];
  long long v6 = a1[1];
  long long v7 = a1[2];
  long long v8 = a1[4];
  *(_OWORD *)(v2 + 48) = a1[3];
  *(_OWORD *)(v2 + 96) = v5;
  *(_OWORD *)(v2 + 112) = v4;
  *(void *)(v2 + 128) = v3;
  long long v9 = *a1;
  *(_OWORD *)(v2 + 64) = v8;
  *(_OWORD *)(v2 + 16) = v6;
  *(_OWORD *)(v2 + 32) = v7;
  *(_OWORD *)uint64_t v2 = v9;
  *(void *)(v2 + 136) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 48) = 0;
  uint64_t v10 = (unsigned int *)*((void *)a1 + 6);
  if (v10)
  {
    uint64_t v12 = *v10;
    uint64_t v11 = v10[1];
    uint64_t v14 = v10[2];
    uint64_t v13 = v10[3];
    uint64_t v15 = v10[4];
    if (off_1004E07C8)
    {
      int v16 = (_DWORD *)off_1004E07C8(v12, v11, v14, v13, v15);
    }
    else
    {
      int v16 = (_DWORD *)sub_10020FEBC(0x14uLL);
      *int v16 = v12;
      v16[1] = v11;
      v16[2] = v14;
      v16[3] = v13;
      v16[4] = v15;
    }
    *(void *)(v2 + 48) = v16;
  }
  if (*((void *)a1 + 11))
  {
    size_t v17 = *((int *)a1 + 20);
    sub_10022F4E8(v2);
    memcpy(*(void **)(v2 + 88), *((const void **)a1 + 11), v17);
  }
  return v2;
}

void sub_100234154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10023416C(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  sub_10025A060(&v2);
}

void sub_100234194(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  sub_1002AC3A0(&v2);
}

void sub_1002341BC(unint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_1002D6AE8(v111, &off_100494860);
  if (!a1 || !a2)
  {
    uint64_t v113 = 0;
    uint64_t v114 = 0;
    uint64_t v5 = sub_1002D19D8(&v113, 11);
    *(_DWORD *)(v5 + 7) = 807419424;
    *(void *)uint64_t v5 = *(void *)"mv && n > 0";
    sub_1002D2278(-215, (uint64_t *)&v113, "merge", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/convert.cpp", 328);
  }
  uint64_t v93 = a3;
  int v96 = *(_DWORD *)a1 & 7;
  uint64_t v6 = 0;
  LODWORD(v7) = 0;
  char v8 = 1;
  do
  {
    unint64_t v10 = a1 + 96 * v6;
    uint64_t v11 = *(_DWORD **)(v10 + 64);
    unint64_t v12 = *(v11 - 1);
    uint64_t v13 = *(_DWORD **)(a1 + 64);
    if (v12 != *(v13 - 1))
    {
LABEL_18:
      uint64_t v113 = 0;
      uint64_t v114 = 0;
      qmemcpy((void *)sub_1002D19D8(&v113, 50), "mv[i].size == mv[0].size && mv[i].depth() == depth", 50);
      sub_1002D2278(-215, (uint64_t *)&v113, "merge", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/convert.cpp", 337);
    }
    if (v12 == 2)
    {
      if (*v11 != *v13 || v11[1] != v13[1]) {
        goto LABEL_18;
      }
    }
    else if ((int)v12 >= 1)
    {
      if (*v11 != *v13) {
        goto LABEL_18;
      }
      uint64_t v14 = 1;
      do
      {
        unint64_t v15 = v14;
        if (v12 == v14) {
          break;
        }
        int v16 = v11[v14];
        int v17 = v13[v14++];
      }
      while (v16 == v17);
      if (v15 < v12) {
        goto LABEL_18;
      }
    }
    if ((*(_DWORD *)v10 & 7) != v96) {
      goto LABEL_18;
    }
    v8 &= (*(_DWORD *)v10 & 0xFF8) == 0;
    unsigned int v9 = v7 + ((*(_DWORD *)v10 >> 3) & 0x1FF);
    uint64_t v7 = v9 + 1;
    ++v6;
  }
  while (v6 != a2);
  if (v9 >= 0x200)
  {
    uint64_t v113 = 0;
    uint64_t v114 = 0;
    uint64_t v18 = sub_1002D19D8(&v113, 19);
    *(_DWORD *)(v18 + 15) = 842085664;
    *(_OWORD *)uint64_t v18 = *(_OWORD *)"0 < cn && cn <= 512";
    sub_1002D2278(-215, (uint64_t *)&v113, "merge", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/convert.cpp", 342);
  }
  sub_100295520((int *)v93, *(_DWORD *)(a1 + 4), *(uint64_t **)(a1 + 64), (v96 | (8 * (v9 + 1))) - 8, 0xFFFFFFFF, 0, 0);
  int v19 = sub_10029A230((_DWORD *)v93);
  if (v19 == 0x10000)
  {
    uint64_t v20 = *(void *)(v93 + 8);
    long long v21 = *(_OWORD *)(v20 + 16);
    long long v103 = *(_OWORD *)v20;
    long long v104 = v21;
    long long v105 = *(_OWORD *)(v20 + 32);
    uint64_t v22 = *(void *)(v20 + 56);
    uint64_t v106 = *(void *)(v20 + 48);
    uint64_t v107 = v22;
    int v108 = (char *)&v103 + 8;
    uint64_t v109 = v110;
    v110[0] = 0;
    v110[1] = 0;
    if (v22) {
      atomic_fetch_add((atomic_uint *volatile)(v22 + 20), 1u);
    }
    if (*(int *)(v20 + 4) > 2)
    {
      DWORD1(v103) = 0;
      sub_1002931A8((uint64_t)&v103, v20);
    }
    else
    {
      int v23 = *(void **)(v20 + 72);
      signed int v24 = v109;
      *(void *)uint64_t v109 = *v23;
      v24[1] = v23[1];
    }
  }
  else
  {
    sub_100299554(v93, -1, (uint64_t)&v103);
  }
  if (a2 == 1)
  {
    LODWORD(v113) = 33619968;
    uint64_t v114 = (uint64_t)&v103;
    v115[0] = 0;
    sub_10025401C(a1, (uint64_t)&v113);
    goto LABEL_128;
  }
  if ((v8 & 1) == 0)
  {
    uint64_t v113 = v115;
    uint64_t v114 = (2 * v7);
    if (v7 >= 0x85) {
      operator new[]();
    }
    unsigned int v26 = 0;
    uint64_t v27 = 0;
    while (1)
    {
      unint64_t v28 = *(unsigned int *)(a1 + 96 * v27);
      uint64_t v29 = (v28 >> 3) & 0x1FF;
      if (v29 < 0x1F) {
        goto LABEL_54;
      }
      uint64_t v30 = v26;
      uint64_t v31 = &v115[v30];
      uint64_t v32 = (8 * v29);
      uint64_t v33 = (char *)&v115[v30] + v32;
      uint64_t v34 = (char *)&v115[v30] + 4;
      int v35 = &v34[v32];
      BOOL v36 = 2 * v26 <= 2 * (v26 + v29) && ((2 * v26) ^ 0xFFFFFFFE) >= 2 * (int)v29;
      BOOL v37 = v36 && v33 >= (char *)v31;
      if (v37 && v35 >= v34)
      {
        uint64_t v44 = 0;
        uint64_t v39 = (v29 + 1) & 0x3F8;
        int32x4_t v45 = vdupq_n_s32(v26);
        do
        {
          int8x16_t v46 = (int8x16_t)vdupq_n_s32(v44);
          v47.i32[0] = v44;
          v47.i32[1] = v44 + 1;
          v47.u64[1] = (unint64_t)vorr_s8(*(int8x8_t *)v46.i8, (int8x8_t)0x300000002);
          v116.val[0] = (float32x4_t)vaddq_s32(v45, v47);
          v116.val[1] = v116.val[0];
          v117.val[0] = (float32x4_t)vaddq_s32(v45, (int32x4_t)vorrq_s8(v46, (int8x16_t)xmmword_100404880));
          v117.val[1] = v117.val[0];
          __n128 v48 = (float *)&v114 + ((2 * v116.val[0].i32[0]) | 1u) + 1;
          uint64_t v49 = (float *)&v114 + ((2 * v117.val[0].i32[0]) | 1u) + 1;
          vst2q_f32(v48, v116);
          vst2q_f32(v49, v117);
          v44 += 8;
        }
        while (v39 != v44);
        if (v39 == v29 + 1) {
          goto LABEL_42;
        }
      }
      else
      {
LABEL_54:
        uint64_t v39 = 0;
      }
      unint64_t v40 = v28;
      int v41 = v26 + v39;
      unsigned int v42 = v26 + v39;
      uint64_t v43 = ((v40 >> 3) & 0x1FF) - v39 + 1;
      do
      {
        LODWORD(v115[v42]) = v41;
        HIDWORD(v115[v42++]) = v41++;
        --v43;
      }
      while (v43);
LABEL_42:
      ++v27;
      v26 += v29 + 1;
      if (v27 == a2)
      {
        sub_100234DCC(a1, a2, (unsigned int *)&v103, 1uLL, (uint64_t)v115, v7);
        if (v113 != v115 && v113) {
          goto LABEL_127;
        }
        goto LABEL_128;
      }
    }
  }
  uint64_t v99 = off_100494B20[v96];
  if (v96 == 7)
  {
    uint64_t v113 = 0;
    uint64_t v114 = 0;
    uint64_t v25 = sub_1002D19D8(&v113, 9);
    *(unsigned char *)(v25 + 8) = 48;
    *(void *)uint64_t v25 = *(void *)"func != 0";
    sub_1002D2278(-215, (uint64_t *)&v113, "merge", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/convert.cpp", 373);
  }
  if (SDWORD1(v103) < 1) {
    unint64_t v97 = 0;
  }
  else {
    unint64_t v97 = *((void *)v109 + (DWORD1(v103) - 1));
  }
  int v50 = v7 + 1;
  uint64_t v113 = v115;
  uint64_t v114 = 16 * (v7 + 1) + 16;
  char v94 = v103;
  if (v7 >= 0x3F) {
    operator new[]();
  }
  uint64_t v52 = (void *)(((unint64_t)&v115[v7 + 2] + 7) & 0xFFFFFFFFFFFFFFF0);
  v115[0] = (uint64_t)&v103;
  if (v7)
  {
    unint64_t v53 = v7;
    if (v7 < 4uLL)
    {
      uint64_t v51 = 0;
    }
    else
    {
      unint64_t v54 = 0;
      uint64_t v51 = v7 & 0xFFFFFFFC;
      int64x2_t v55 = (int64x2_t)xmmword_1004027B0;
      int64x2_t v56 = vdupq_n_s64(a1);
      int64x2_t v57 = vdupq_n_s64(0xC0uLL);
      int64x2_t v58 = vdupq_n_s64(4uLL);
      do
      {
        v59.i64[0] = 96 * v55.i64[0];
        v59.i64[1] = 96 * v55.i64[1];
        int64x2_t v60 = vaddq_s64(v56, v59);
        uint64_t v61 = &v115[v54 / 8];
        *(int64x2_t *)(v61 + 1) = v60;
        *(int64x2_t *)(v61 + 3) = vaddq_s64(v60, v57);
        int64x2_t v55 = vaddq_s64(v55, v58);
        v54 += 32;
      }
      while (((8 * v7) & 0x7FFFFFFE0) != v54);
      if (v7 == v51)
      {
        uint64_t v62 = v7;
        int v63 = 0;
        goto LABEL_76;
      }
    }
    uint64_t v62 = v7;
    uint64_t v64 = a1 + 96 * v51;
    do
    {
      v115[v51 + 1] = v64;
      v64 += 96;
      ++v51;
    }
    while (v7 != v51);
    int v63 = 0;
  }
  else
  {
    uint64_t v62 = v7;
    unint64_t v53 = 0;
    int v63 = 1;
  }
LABEL_76:
  sub_10029127C((uint64_t)v100, v115, (uint64_t)v52, v50);
  unint64_t v65 = (int)((v97 + 1023) / v97);
  unint64_t v66 = (int)v102;
  if (v65 >= (int)v102) {
    unint64_t v65 = (int)v102;
  }
  if (v62 < 5) {
    unint64_t v65 = (int)v102;
  }
  if (v65 >= 0x1FFFFFFF / v62) {
    unint64_t v67 = 0x1FFFFFFF / v62;
  }
  else {
    unint64_t v67 = v65;
  }
  if (v102 << 32)
  {
    if (v63)
    {
      for (unint64_t i = 0; i < v101; ++i)
      {
        unint64_t v69 = 0;
        while (1)
        {
          unint64_t v70 = v67 >= v66 - v69 ? v66 - v69 : v67;
          ((void (*)(void *, void, unint64_t, void))v99)(v52 + 1, *v52, v70, 0);
          v69 += v67;
          if (v69 >= v66) {
            break;
          }
          *v52 += v70 * v97;
        }
        sub_1002912C8((uint64_t)v100);
      }
    }
    else
    {
      uint64_t v72 = v62;
      unint64_t v73 = (0x88442211uLL >> (4 * (v94 & 7u))) & 0xF;
      if (v53 >= 4)
      {
        unint64_t v79 = 0;
        while (v79 < v101)
        {
          unint64_t v92 = v79;
          unint64_t v80 = 0;
          while (1)
          {
            unint64_t v81 = v67 >= v66 - v80 ? v66 - v80 : v67;
            ((void (*)(void *, void, unint64_t, uint64_t))v99)(v52 + 1, *v52, v81, v72);
            v80 += v67;
            if (v80 >= v66) {
              break;
            }
            int8x8_t v82 = (int64x2_t *)(v52 + 3);
            *v52 += v81 * v97;
            unint64_t v83 = v81 * v73;
            uint64_t v84 = v53 & 0xFFFFFFFC;
            do
            {
              int64x2_t v85 = vdupq_n_s64(v83);
              int64x2_t v86 = vaddq_s64(*v82, v85);
              v82[-1] = vaddq_s64(v82[-1], v85);
              *int8x8_t v82 = v86;
              v82 += 2;
              v84 -= 4;
            }
            while (v84);
            if (v53 != (v53 & 0xFFFFFFFC))
            {
              int8x8_t v87 = (void *)((char *)v52 + ((8 * v53) & 0x7FFFFFFE0) + 8);
              unint64_t v88 = v53 - (v53 & 0xFFFFFFFC);
              do
              {
                *v87++ += v83;
                --v88;
              }
              while (v88);
            }
          }
          unint64_t v79 = v92 + 1;
          sub_1002912C8((uint64_t)v100);
        }
      }
      else
      {
        unint64_t v74 = 0;
        while (v74 < v101)
        {
          *(void *)int8x8_t v95 = v74;
          unint64_t v75 = 0;
          while (1)
          {
            unint64_t v76 = v67 >= v66 - v75 ? v66 - v75 : v67;
            ((void (*)(void *, void, unint64_t, uint64_t))v99)(v52 + 1, *v52, v76, v72);
            v75 += v67;
            if (v75 >= v66) {
              break;
            }
            *v52 += v76 * v97;
            int8x8_t v77 = v52 + 1;
            unint64_t v78 = v53;
            do
            {
              *v77++ += v76 * v73;
              --v78;
            }
            while (v78);
          }
          unint64_t v74 = *(void *)v95 + 1;
          sub_1002912C8((uint64_t)v100);
        }
      }
    }
  }
  else
  {
    uint64_t v71 = -1;
    while (++v71 < v101)
      sub_1002912C8((uint64_t)v100);
  }
  if (v113 != v115 && v113 != 0) {
LABEL_127:
  }
    operator delete[]();
LABEL_128:
  if (v107 && atomic_fetch_add((atomic_uint *volatile)(v107 + 20), 0xFFFFFFFF) == 1) {
    sub_1002932F4((uint64_t)&v103);
  }
  uint64_t v107 = 0;
  long long v104 = 0u;
  long long v105 = 0u;
  if (SDWORD1(v103) >= 1)
  {
    uint64_t v90 = 0;
    int8x8_t v91 = v108;
    do
      *(_DWORD *)&v91[4 * v90++] = 0;
    while (v90 < SDWORD1(v103));
  }
  if (v109 != v110) {
    j__free(v109);
  }
  if (v112) {
    sub_1002D6888(v111);
  }
}

void sub_100234C44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
}

void sub_100234DCC(unint64_t a1, unint64_t a2, unsigned int *a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  sub_1002D6AE8(v136, &off_1004948A0);
  if (!a6) {
    goto LABEL_84;
  }
  if (!a1 || !a2 || !a3 || !a4 || !a5)
  {
    float32x4_t v138 = 0;
    unint64_t v139 = 0;
    qmemcpy((void *)sub_1002D19D8(&v138, 60), "src && nsrcs > 0 && dst && ndsts > 0 && fromTo && npairs > 0", 60);
    sub_1002D2278(-215, (uint64_t *)&v138, "mixChannels", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/convert.cpp", 574);
  }
  unsigned int v9 = *a3;
  unint64_t v117 = a4 + a2;
  float32x4_t v138 = v140;
  unint64_t v139 = 16 * (a4 + a2) + 40 * a6 + 16;
  if (v139 >= 0x409) {
    operator new[]();
  }
  unint64_t v10 = (0x88442211uLL >> (4 * (v9 & 7))) & 0xF;
  uint64_t v11 = 8 * a2 + 8 * a4;
  unint64_t v12 = (char *)v140 + v11;
  unint64_t v128 = (char *)&v140[1] + v11 + v11;
  uint64_t v126 = &v128[8 * a6];
  unint64_t v112 = a6;
  uint64_t v13 = &v126[8 * a6];
  uint64_t v130 = &v13[16 * a6];
  if (a2 < 4)
  {
    unint64_t v14 = 0;
LABEL_15:
    unint64_t v23 = a2 - v14;
    signed int v24 = &v140[v14];
    unint64_t v25 = a1 + 96 * v14;
    do
    {
      *v24++ = v25;
      v25 += 96;
      --v23;
    }
    while (v23);
    goto LABEL_17;
  }
  unint64_t v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  int64x2_t v15 = (int64x2_t)xmmword_1004027B0;
  int v16 = (int64x2_t *)&v141;
  int64x2_t v17 = vdupq_n_s64(a1);
  int64x2_t v18 = vdupq_n_s64(0xC0uLL);
  int64x2_t v19 = vdupq_n_s64(4uLL);
  unint64_t v20 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v21.i64[0] = 96 * v15.i64[0];
    v21.i64[1] = 96 * v15.i64[1];
    int64x2_t v22 = vaddq_s64(v17, v21);
    v16[-1] = v22;
    *int v16 = vaddq_s64(v22, v18);
    int64x2_t v15 = vaddq_s64(v15, v19);
    v16 += 2;
    v20 -= 4;
  }
  while (v20);
  if (v14 != a2) {
    goto LABEL_15;
  }
LABEL_17:
  uint64_t v119 = v9 & 7;
  uint64_t v127 = &v130[4 * a6];
  if (a4 >= 4)
  {
    unint64_t v26 = a4 & 0xFFFFFFFFFFFFFFFCLL;
    uint64_t v27 = (int64x2_t *)&v140[a2 + 2];
    int64x2_t v28 = (int64x2_t)xmmword_1004027B0;
    int64x2_t v29 = vdupq_n_s64((unint64_t)a3);
    int64x2_t v30 = vdupq_n_s64(0xC0uLL);
    int64x2_t v31 = vdupq_n_s64(4uLL);
    unint64_t v32 = a4 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v33.i64[0] = 96 * v28.i64[0];
      v33.i64[1] = 96 * v28.i64[1];
      int64x2_t v34 = vaddq_s64(v29, v33);
      v27[-1] = v34;
      *uint64_t v27 = vaddq_s64(v34, v30);
      int64x2_t v28 = vaddq_s64(v28, v31);
      v27 += 2;
      v32 -= 4;
    }
    while (v32);
    if (v26 == a4) {
      goto LABEL_24;
    }
  }
  else
  {
    unint64_t v26 = 0;
  }
  unint64_t v35 = a4 - v26;
  BOOL v36 = &v140[v26 + a2];
  BOOL v37 = &a3[24 * v26];
  do
  {
    *v36++ = (uint64_t)v37;
    v37 += 24;
    --v35;
  }
  while (v35);
LABEL_24:
  uint64_t v115 = 2 * (a4 + a2);
  uint64_t v38 = 0;
  *(void *)&v12[8 * v117] = 0;
  unint64_t v129 = a6;
  if (a6 <= 1) {
    uint64_t v39 = 1;
  }
  else {
    uint64_t v39 = a6;
  }
  unint64_t v131 = v39;
  unint64_t v40 = a3;
  do
  {
    unsigned int v42 = (int *)(a5 + 8 * v38);
    int v43 = *v42;
    int v44 = v42[1];
    if (*v42 < 0)
    {
      *(void *)&v13[16 * v38] = v117;
      *(_DWORD *)&v130[4 * v38] = 0;
      uint64_t v51 = 0;
    }
    else
    {
      unint64_t v45 = a4;
      uint64_t v46 = 0;
      int32x4_t v47 = (unsigned int *)a1;
      while (1)
      {
        unsigned int v49 = *v47;
        v47 += 24;
        char v48 = v49;
        int v50 = (v49 >> 3) & 0x1FF;
        if (v43 <= v50) {
          break;
        }
        v43 += ~v50;
        if (a2 == ++v46) {
          goto LABEL_36;
        }
      }
      if ((v48 & 7) != v119)
      {
LABEL_36:
        uint64_t v132 = 0;
        uint64_t v133 = 0;
        qmemcpy((void *)sub_1002D19D8(&v132, 36), "j < nsrcs && src[j].depth() == depth", 36);
        sub_1002D2278(-215, &v132, "mixChannels", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/convert.cpp", 601);
      }
      uint64_t v52 = &v13[16 * v38];
      *(_DWORD *)uint64_t v52 = v46;
      *((_DWORD *)v52 + 1) = v43 * v10;
      LODWORD(v52) = ((*(_DWORD *)(a1 + 96 * v46) >> 3) & 0x1FF) + 1;
      a4 = v45;
      unint64_t v40 = a3;
      *(_DWORD *)&v130[4 * v38] = v52;
      uint64_t v51 = 0;
    }
    unint64_t v53 = v40;
    while (1)
    {
      unsigned int v55 = *v53;
      v53 += 24;
      char v54 = v55;
      int v56 = (v55 >> 3) & 0x1FF;
      if (v44 <= v56) {
        break;
      }
      v44 += ~v56;
      if (a4 == ++v51) {
        goto LABEL_44;
      }
    }
    if (v44 < 0 || (v54 & 7) != v119)
    {
LABEL_44:
      uint64_t v132 = 0;
      uint64_t v133 = 0;
      qmemcpy((void *)sub_1002D19D8(&v132, 47), "i1 >= 0 && j < ndsts && dst[j].depth() == depth", 47);
      sub_1002D2278(-215, &v132, "mixChannels", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/convert.cpp", 614);
    }
    int v41 = &v13[16 * v38];
    *((_DWORD *)v41 + 2) = v51 + a2;
    *((_DWORD *)v41 + 3) = v44 * v10;
    *(_DWORD *)&v127[4 * v38++] = ((v40[24 * v51] >> 3) & 0x1FF) + 1;
  }
  while (v38 != v131);
  sub_10029127C((uint64_t)&v132, v140, (uint64_t)v12, v117);
  int v57 = v135;
  if ((int)((v10 + 1023) / v10) >= (int)v135) {
    signed int v58 = v135;
  }
  else {
    signed int v58 = (v10 + 1023) / v10;
  }
  if ((int)v135 <= 0)
  {
    for (unint64_t i = 0; ; ++i)
    {
      long long v105 = (int *)&v140[2 * v129 + 1 + 2 * a4 + 2 * a2] + 1;
      uint64_t v106 = v128;
      unint64_t v107 = v131;
      if (i >= v134) {
        break;
      }
      do
      {
        *(void *)uint64_t v106 = *(void *)&v12[8 * *(v105 - 1)] + *v105;
        *(void *)&v106[8 * v129] = *(void *)&v12[8 * v105[1]] + v105[2];
        v106 += 8;
        v105 += 4;
        --v107;
      }
      while (v107);
      sub_1002912C8((uint64_t)&v132);
    }
  }
  else
  {
    unint64_t v59 = 0;
    int64x2_t v60 = off_100494B60[v119];
    uint64_t v61 = &v140[v131 + 1 + v115];
    unint64_t v62 = v112 * 8;
    BOOL v63 = v128 >= (char *)&v61[v112] || v126 >= (char *)v61;
    int32x4_t v64 = vdupq_n_s32(v58);
    int64x2_t v65 = vdupq_n_s64(v10);
    char v67 = !v63 || v131 < 4;
    unint64_t v68 = 2 * a4;
    unint64_t v69 = &v140[2 * a4 + 2 * a2];
    uint64_t v109 = (uint64_t)&v69[2 * v129 + 1] + 4;
    uint64_t v70 = (16 * a2) | 8;
    unint64_t v71 = a4;
    uint64_t v72 = (char *)&v140[2 * a4] + v70;
    uint64_t v114 = (char *)v140 + v70;
    uint64_t v111 = &v140[2 * a2 + 1 + v112];
    uint64_t v113 = 4 * (v112 * 8 + v129);
    uint64_t v125 = v69 + 1;
    uint64_t v123 = (char *)v69 + v62 + 8;
    uint64_t v121 = (char *)&v140[2 * v71 + 1 + 2 * a2] + v113;
    int64x2_t v116 = v65;
    int32x4_t v118 = v64;
LABEL_60:
    unint64_t v73 = (int *)v109;
    unint64_t v74 = v128;
    unint64_t v75 = v131;
    if (v59 < v134)
    {
      do
      {
        *(void *)unint64_t v74 = *(void *)&v12[8 * *(v73 - 1)] + *v73;
        *(void *)&v74[8 * v129] = *(void *)&v12[8 * v73[1]] + v73[2];
        v74 += 8;
        v73 += 4;
        --v75;
      }
      while (v75);
      unint64_t v110 = v59;
      int v76 = 0;
      while (1)
      {
        if (v58 >= v57 - v76) {
          uint64_t v77 = (v57 - v76);
        }
        else {
          uint64_t v77 = v58;
        }
        ((void (*)(char *, char *, char *, char *, uint64_t, unint64_t))v60)(v128, v130, v126, v127, v77, v129);
        v76 += v58;
        if (v76 >= v57)
        {
          unint64_t v59 = v110 + 1;
          sub_1002912C8((uint64_t)&v132);
          goto LABEL_60;
        }
        if (v67) {
          break;
        }
        unint64_t v79 = v131 & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v80 = v111;
        uint64_t v81 = v113;
        int8x8_t v82 = v114;
        unint64_t v83 = &v140[4 * v129 + 1 + 2 * a2];
        do
        {
          int64x2_t v84 = (int64x2_t)vmulq_s32(*(int32x4_t *)&v83[v68], v118);
          __int32 v85 = v84.i32[1];
          __int32 v86 = v84.i32[0];
          v84.i64[0] = v116.i32[0] * (uint64_t)v84.i32[2];
          v87.i64[0] = v116.i32[0] * (uint64_t)v86;
          v84.i64[1] = v116.i32[2] * (uint64_t)v84.i32[3];
          v87.i64[1] = v116.i32[2] * (uint64_t)v85;
          unint64_t v88 = (int64x2_t *)&v82[v68 * 8];
          int64x2_t v89 = vaddq_s64(*(int64x2_t *)&v82[v68 * 8 + 16], v84);
          *unint64_t v88 = vaddq_s64(*(int64x2_t *)&v82[v68 * 8], v87);
          v88[1] = v89;
          int64x2_t v90 = (int64x2_t)vmulq_s32(*(int32x4_t *)&v72[v81], v118);
          __int32 v91 = v90.i32[0];
          __int32 v92 = v90.i32[1];
          v90.i64[0] = v116.i32[0] * (uint64_t)v90.i32[2];
          v90.i64[1] = v116.i32[2] * (uint64_t)v90.i32[3];
          v87.i64[0] = v116.i32[0] * (uint64_t)v91;
          v87.i64[1] = v116.i32[2] * (uint64_t)v92;
          uint64_t v93 = (int64x2_t *)&v80[v68];
          int64x2_t v94 = vaddq_s64(*(int64x2_t *)&v80[v68 + 2], v90);
          v83 += 2;
          *uint64_t v93 = vaddq_s64(*(int64x2_t *)&v80[v68], v87);
          v93[1] = v94;
          v82 += 32;
          v81 += 16;
          v80 += 4;
          v79 -= 4;
        }
        while (v79);
        unint64_t v78 = v131 & 0xFFFFFFFFFFFFFFFCLL;
        if (v131 != (v131 & 0xFFFFFFFFFFFFFFFCLL))
        {
LABEL_72:
          uint64_t v95 = 0;
          unint64_t v96 = v131 - v78;
          uint64_t v97 = v78;
          uint64_t v98 = &v123[8 * v78];
          uint64_t v99 = 4 * v78;
          uint64_t v100 = &v121[4 * v78];
          unint64_t v101 = &v125[v97];
          uint64_t v102 = (char *)&v140[4 * v129 + 1 + 2 * a2 + v68] + v99;
          do
          {
            uint64_t v103 = v95;
            v101[v103] = v101[v95] + v10 * *(int *)&v102[4 * v95] * (uint64_t)v58;
            *(void *)&v98[v103 * 8] = *(void *)&v98[8 * v95] + v10 * *(int *)&v100[4 * v95] * (uint64_t)v58;
            ++v95;
          }
          while (v96 != v95);
        }
      }
      unint64_t v78 = 0;
      goto LABEL_72;
    }
  }
  if (v138 != v140 && v138 != 0) {
    operator delete[]();
  }
LABEL_84:
  if (v137) {
    sub_1002D6888(v136);
  }
}

void sub_1002356BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
}

void sub_1002356D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_10000B6A8(exception_object);
}

void sub_100235758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  if (a42 != a10 && a42 != 0) {
    operator delete[]();
  }
  sub_10020FA00(&a40);
  _Unwind_Resume(a1);
}

void sub_100235798(uint64_t a1, uint64_t a2)
{
  sub_1002D6AE8(v8, &off_100494880);
  unint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  sub_10029B5C8(a1, (uint64_t *)&v5);
  if (v6 == v5) {
    unint64_t v4 = 0;
  }
  else {
    unint64_t v4 = v5;
  }
  sub_1002341BC(v4, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - v5) >> 5), a2);
  unint64_t v10 = (void **)&v5;
  sub_100252B98(&v10);
  if (v9) {
    sub_1002D6888(v8);
  }
}

void sub_10023583C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va1, a4);
  va_start(va, a4);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_100252B98((void ***)va1);
  sub_10020FA00((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10023585C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  sub_1002D6AE8(v39, &off_1004948C0);
  unsigned int v6 = sub_10029AB74((int *)a1, -1);
  char v7 = v6;
  if ((a3 & 0x80000000) != 0 || ((v6 >> 3) & 0x1FF) < a3)
  {
    memset(v31, 0, sizeof(v31));
    uint64_t v8 = sub_1002D19D8(v31, 20);
    *(_DWORD *)(v8 + 16) = 1851990076;
    *(_OWORD *)uint64_t v8 = *(_OWORD *)"0 <= coi && coi < cn";
    sub_1002D2278(-215, (uint64_t *)v31, "extractChannel", "/Library/Caches/com.apple.xbs/Sources/Measure/externals/OpenCV/modules/core/src/convert.cpp", 898);
  }
  v41[0] = a3;
  v41[1] = 0;
  if (sub_10029A230((_DWORD *)a1) == 0x10000)
  {
    uint64_t v9 = *(void *)(a1 + 8);
    long long v10 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)int64x2_t v31 = *(_OWORD *)v9;
    long long v32 = v10;
    long long v33 = *(_OWORD *)(v9 + 32);
    uint64_t v11 = *(void *)(v9 + 56);
    uint64_t v34 = *(void *)(v9 + 48);
    uint64_t v35 = v11;
    __srCGFloat c = &v31[2];
    BOOL v37 = v38;
    v38[0] = 0;
    v38[1] = 0;
    if (v11) {
      atomic_fetch_add((atomic_uint *volatile)(v11 + 20), 1u);
    }
    if (*(int *)(v9 + 4) > 2)
    {
      v31[1] = 0;
      sub_1002931A8((uint64_t)v31, v9);
    }
    else
    {
      unint64_t v12 = *(void **)(v9 + 72);
      uint64_t v13 = v37;
      *(void *)BOOL v37 = *v12;
      v13[1] = v12[1];
    }
  }
  else
  {
    sub_100299554(a1, -1, (uint64_t)v31);
  }
  sub_100295520((int *)a2, v31[1], (uint64_t *)__src, v7 & 7, 0xFFFFFFFF, 0, 0);
  if (sub_10029A230((_DWORD *)a2) == 0x10000)
  {
    uint64_t v14 = *(void *)(a2 + 8);
    long long v15 = *(_OWORD *)(v14 + 16);
    long long v23 = *(_OWORD *)v14;
    long long v24 = v15;
    long long v25 = *(_OWORD *)(v14 + 32);
    uint64_t v16 = *(void *)(v14 + 56);
    uint64_t v26 = *(void *)(v14 + 48);
    uint64_t v27 = v16;
    int64x2_t v28 = (char *)&v23 + 8;
    int64x2_t v29 = v30;
    v30[0] = 0;
    v30[1] = 0;
    if (v16) {
      atomic_fetch_add((atomic_uint *volatile)(v16 + 20), 1u);
    }
    if (*(int *)(v14 + 4) > 2)
    {
      DWORD1(v23) = 0;
      sub_1002931A8((uint64_t)&v23, v14);
    }
    else
    {
      int64x2_t v17 = *(void **)(v14 + 72);
      int64x2_t v18 = v29;
      *(void *)int64x2_t v29 = *v17;
      v18[1] = v17[1];
    }
  }
  else
  {
    sub_100299554(a2, -1, (uint64_t)&v23);
  }
  sub_100234DCC((unint64_t)v31, 1uLL, (unsigned int *)&v23, 1uLL, (uint64_t)v41, 1uLL);
  if (v27 && atomic_fetch_add((atomic_uint *volatile)(v27 + 20), 0xFFFFFFFF) == 1) {
    sub_1002932F4((uint64_t)&v23);
  }
  uint64_t v27 = 0;
  long long v24 = 0u;
  long long v25 = 0u;
  if (SDWORD1(v23) >= 1)
  {
    uint64_t v19 = 0;
    unint64_t v20 = v28;
    do
      *(_DWORD *)&v20[4 * v19++] = 0;
    while (v19 < SDWORD1(v23));
  }
  if (v29 != v30) {
    j__free(v29);
  }
  if (v35 && atomic_fetch_add((atomic_uint *volatile)(v35 + 20), 0xFFFFFFFF) == 1) {
    sub_1002932F4((uint64_t)v31);
  }
  uint64_t v35 = 0;
  long long v32 = 0u;
  long long v33 = 0u;
  if (v31[1] >= 1)
  {
    uint64_t v21 = 0;
    int64x2_t v22 = __src;
    do
      v22[v21++] = 0;
    while (v21 < v31[1]);
  }
  if (v37 != v38) {
    j__free(v37);
  }
  if (v40) {
    sub_1002D6888(v39);
  }
}

void sub_100235BAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  if (a2) {
    sub_10000B6A8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100235C68(char a1, char a2)
{
  return (uint64_t)*(&off_1004948E0 + 8 * (unint64_t)(a2 & 7) + (a1 & 7));
}

char *sub_100235C84(char *__src, uint64_t a2, int a3, int a4, char *__dst, uint64_t a6, int *a7)
{
  int v7 = a7[1];
  if (v7)
  {
    uint64_t v11 = __src;
    size_t v12 = *a7;
    do
    {
      --v7;
      __srCGFloat c = (char *)memcpy(__dst, v11, v12);
      v11 += a2;
      __dst += a6;
    }
    while (v7);
  }
  return __src;
}

unint64_t sub_100235CEC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int *a7)
{
  int v7 = a7[1];
  if (!v7) {
    return result;
  }
  uint64_t v8 = *a7;
  uint64_t v9 = v8 - 4;
  if ((int)v8 >= 8)
  {
    uint64_t v12 = 0;
    unint64_t v13 = result;
    unint64_t v14 = a5;
    while (1)
    {
      uint64_t v15 = 0;
      unint64_t v16 = 0;
      do
      {
        *(int8x8_t *)(v14 + v16) = vqmovun_s16(vmovl_s8(*(int8x8_t *)(v13 + v16)));
        v16 += 8;
        v15 += 0x800000000;
      }
      while (v16 <= (v8 - 8));
      if ((int)v9 >= (int)v16) {
        break;
      }
      if ((int)v16 < (int)v8) {
        goto LABEL_20;
      }
LABEL_11:
      v13 += a2;
      v14 += a6;
      ++v12;
      if (!--v7) {
        return result;
      }
    }
    uint64_t v17 = 0;
    unint64_t v18 = v13 + (int)v16;
    do
    {
      int v19 = *(char *)(v18 + v17 + 1) & ~(*(char *)(v18 + v17 + 1) >> 31);
      unint64_t v20 = (unsigned char *)(v14 + (int)v16 + v17);
      *unint64_t v20 = *(unsigned char *)(v18 + v17) & ~(*(char *)(v18 + v17) >> 7);
      v20[1] = v19;
      char v21 = *(unsigned char *)(v18 + v17 + 3) & ~(*(char *)(v18 + v17 + 3) >> 7);
      v20[2] = *(unsigned char *)(v18 + v17 + 2) & ~(*(char *)(v18 + v17 + 2) >> 31);
      v20[3] = v21;
      v17 += 4;
    }
    while ((int)v16 + v17 <= v9);
    LODWORD(v16) = v16 + v17;
    if ((int)v16 >= (int)v8) {
      goto LABEL_11;
    }
LABEL_20:
    uint64_t v22 = (int)v16;
    unint64_t v23 = v8 - (int)v16;
    if (v23 < 8)
    {
      uint64_t v24 = v22;
      goto LABEL_35;
    }
    if (a5 + v12 * a6 - (result + v12 * a2) < 0x20)
    {
      uint64_t v24 = v22;
      goto LABEL_35;
    }
    if (v23 >= 0x20)
    {
      unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFE0;
      uint64_t v26 = v22;
      unint64_t v27 = v23 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        int8x16_t v28 = vmaxq_s8(*(int8x16_t *)(v13 + v26 + 16), (int8x16_t)0);
        int64x2_t v29 = (int8x16_t *)(v14 + v26);
        *int64x2_t v29 = vmaxq_s8(*(int8x16_t *)(v13 + v26), (int8x16_t)0);
        v29[1] = v28;
        v26 += 32;
        v27 -= 32;
      }
      while (v27);
      if (v23 == v25) {
        goto LABEL_11;
      }
      if ((v23 & 0x18) == 0)
      {
        uint64_t v24 = v25 + v22;
        do
        {
LABEL_35:
          *(unsigned char *)(v14 + v24) = *(unsigned char *)(v13 + v24) & ~(*(char *)(v13 + v24) >> 31);
          ++v24;
        }
        while (v8 != v24);
        goto LABEL_11;
      }
    }
    else
    {
      unint64_t v25 = 0;
    }
    uint64_t v24 = (v23 & 0xFFFFFFFFFFFFFFF8) + v22;
    unint64_t v30 = v25 - (v23 & 0xFFFFFFFFFFFFFFF8);
    uint64_t v31 = v25 + v22;
    do
    {
      *(int8x8_t *)(v14 + v31) = vmax_s8(*(int8x8_t *)(v13 + v31), 0);
      v31 += 8;
      v30 += 8;
    }
    while (v30);
    if (v23 == (v23 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }
  if ((int)v8 >= 4)
  {
    uint64_t v32 = 0;
    unint64_t v33 = 3;
    if (v9 > 3) {
      unint64_t v33 = v8 - 4;
    }
    unint64_t v34 = (((v33 << 32) & 0x7FFFFFFC00000000) + 0x400000000) >> 32;
    uint64_t v35 = v34 | 1;
    if ((uint64_t)(v34 | 1) <= v8) {
      uint64_t v35 = *a7;
    }
    unint64_t v36 = v35 - v34;
    uint64_t v37 = (v33 & 0xFFFFFFFC) + 4;
    uint64_t v38 = (v33 >> 2) + 1;
    unint64_t v39 = v36 & 0xFFFFFFFFFFFFFFE0;
    unint64_t v40 = v36 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v41 = result;
    unint64_t v42 = a5;
    while (1)
    {
      uint64_t v43 = v32 * a6;
      uint64_t v44 = v32 * a2;
      if (v33 < 0x3C) {
        break;
      }
      if (v42 < result + v37 + v44 && v41 < a5 + v37 + v43) {
        break;
      }
      uint64_t v46 = 0;
      uint64_t v47 = v38 & 0x7FFFFFF0;
      do
      {
        char v48 = (const char *)(v41 + v46);
        int8x16x4_t v66 = vld4q_s8(v48);
        v67.val[0] = vmaxq_s8(v66.val[0], (int8x16_t)0);
        v67.val[1] = vmaxq_s8(v66.val[1], (int8x16_t)0);
        v67.val[2] = vmaxq_s8(v66.val[2], (int8x16_t)0);
        v67.val[3] = vmaxq_s8(v66.val[3], (int8x16_t)0);
        unsigned int v49 = (char *)(v42 + v46);
        vst4q_s8(v49, v67);
        v46 += 64;
        v47 -= 16;
      }
      while (v47);
      uint64_t v50 = 4 * (v38 & 0x7FFFFFF0);
      int v51 = 4 * (v38 & 0x7FFFFFF0);
      if (v38 != (v38 & 0x7FFFFFF0)) {
        goto LABEL_55;
      }
      if ((int)v8 > (int)(4 * (v38 & 0x7FFFFFF0))) {
        goto LABEL_58;
      }
LABEL_42:
      v41 += a2;
      v42 += a6;
      ++v32;
      if (!--v7) {
        return result;
      }
    }
    uint64_t v50 = 0;
LABEL_55:
    uint64_t v52 = v50 + 1;
    do
    {
      int v53 = *(char *)(v41 + v52) & ~(*(char *)(v41 + v52) >> 31);
      char v54 = (unsigned char *)(v42 + v52);
      *(v54 - 1) = *(unsigned char *)(v41 + v52 - 1) & ~(*(char *)(v41 + v52 - 1) >> 7);
      *char v54 = v53;
      char v55 = *(unsigned char *)(v41 + v52 + 2) & ~(*(char *)(v41 + v52 + 2) >> 7);
      v54[1] = *(unsigned char *)(v41 + v52 + 1) & ~(*(char *)(v41 + v52 + 1) >> 7);
      v54[2] = v55;
      int v56 = v52 + 4;
      uint64_t v57 = v52 + 3;
      v52 += 4;
    }
    while (v57 <= v9);
    int v51 = v56 - 1;
    if ((int)v8 <= v56 - 1) {
      goto LABEL_42;
    }
LABEL_58:
    if (v36 < 8)
    {
      uint64_t v58 = v51;
      goto LABEL_73;
    }
    if (v43 + a5 - (v44 + result) < 0x20)
    {
      uint64_t v58 = v51;
      goto LABEL_73;
    }
    if (v36 >= 0x20)
    {
      uint64_t v60 = v51;
      unint64_t v61 = v36 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        int8x16_t v62 = vmaxq_s8(*(int8x16_t *)(v41 + v60 + 16), (int8x16_t)0);
        BOOL v63 = (int8x16_t *)(v42 + v60);
        *BOOL v63 = vmaxq_s8(*(int8x16_t *)(v41 + v60), (int8x16_t)0);
        v63[1] = v62;
        v60 += 32;
        v61 -= 32;
      }
      while (v61);
      if (v36 == v39) {
        goto LABEL_42;
      }
      unint64_t v59 = v36 & 0xFFFFFFFFFFFFFFE0;
      if ((v36 & 0x18) == 0)
      {
        uint64_t v58 = v51 + v39;
        do
        {
LABEL_73:
          *(unsigned char *)(v42 + v58) = *(unsigned char *)(v41 + v58) & ~(*(char *)(v41 + v58) >> 31);
          ++v58;
        }
        while (v58 < v8);
        goto LABEL_42;
      }
    }
    else
    {
      unint64_t v59 = 0;
    }
    uint64_t v58 = v51 + v40;
    unint64_t v64 = v59 - (v36 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v65 = v59 + v51;
    do
    {
      *(int8x8_t *)(v42 + v65) = vmax_s8(*(int8x8_t *)(v41 + v65), 0);
      v65 += 8;
      v64 += 8;
    }
    while (v64);
    if (v36 == v40) {
      goto LABEL_42;
    }
    goto LABEL_73;
  }
  if ((int)v8 >= 1)
  {
    long long v10 = (unsigned char *)(result + 2);
    uint64_t v11 = (unsigned char *)(a5 + 2);
    do
    {
      *(v11 - 2) = *(v10 - 2) & ~((char)*(v10 - 2) >> 31);
      if (v8 != 1)
      {
        *(v11 - 1) = *(v10 - 1) & ~((char)*(v10 - 1) >> 31);
        if (v8 != 2) {
          *uint64_t v11 = *v10 & ~((char)*v10 >> 31);
        }
      }
      v10 += a2;
      v11 += a6;
      --v7;
    }
    while (v7);
  }
  return result;
}

int64_t sub_100236174(int64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, int *a7)
{
  __int32 v92 = a5;
  int64_t v93 = result;
  int v7 = a7[1];
  if (!v7) {
    return result;
  }
  uint64_t v8 = *a7;
  unint64_t v9 = a2 >> 1;
  uint64_t v10 = v8 - 4;
  if ((int)v8 >= 16)
  {
    uint64_t v16 = 0;
    unint64_t v17 = a2 & 0xFFFFFFFFFFFFFFFELL;
    int v19 = a5;
    int64_t v18 = result;
    unint64_t v20 = (uint16x8_t *)(result + 16);
    uint64_t v21 = 2 * v9;
    int64_t v22 = result + 4;
    int64_t v23 = result + 32;
    v24.i64[0] = 0xFF00FF00FF00FFLL;
    v24.i64[1] = 0xFF00FF00FF00FFLL;
    while (1)
    {
      uint64_t result = 0;
      unint64_t v25 = 0;
      uint64_t v26 = v20;
      do
      {
        *(uint8x16_t *)&v19[v25] = vqmovn_high_u16(vqmovn_u16(v26[-1]), *v26);
        v25 += 16;
        result += 0x1000000000;
        v26 += 2;
      }
      while (v25 <= (v8 - 16));
      if ((int)v10 >= (int)v25)
      {
        uint64_t v27 = 0;
        uint64_t result = (int)v25;
        uint64_t v28 = 2 * (int)v25;
        int64x2_t v29 = (unsigned __int16 *)(v22 + v28);
        int64_t v30 = v18 + v28;
        do
        {
          unsigned int v31 = *(v29 - 2);
          if (v31 >= 0xFF) {
            LOBYTE(v31) = -1;
          }
          unsigned int v32 = *(unsigned __int16 *)(v30 + 2 * v27 + 2);
          if (v32 >= 0xFF) {
            LOBYTE(v32) = -1;
          }
          unint64_t v33 = &v19[(int)v25 + v27];
          *unint64_t v33 = v31;
          v33[1] = v32;
          unsigned int v34 = *v29;
          if (v34 >= 0xFF) {
            LOBYTE(v34) = -1;
          }
          unsigned int v35 = v29[1];
          if (v35 >= 0xFF) {
            LOBYTE(v35) = -1;
          }
          v33[2] = v34;
          v33[3] = v35;
          v27 += 4;
          v29 += 4;
        }
        while ((int)v25 + v27 <= v10);
        LODWORD(v25) = v25 + v27;
        if ((int)v25 >= (int)v8) {
          goto LABEL_17;
        }
      }
      else if ((int)v25 >= (int)v8)
      {
        goto LABEL_17;
      }
      unint64_t v25 = (int)v25;
      unint64_t v36 = v8 - (int)v25;
      if (v36 < 8
        || (unint64_t)&v19[(int)v25] < v93 + 2 * v8 + v17 * v16
        && v18 + 2 * (int)v25 < (unint64_t)&v92[v8 + v16 * a6])
      {
        goto LABEL_48;
      }
      if (v36 >= 0x20)
      {
        unint64_t v37 = v36 & 0xFFFFFFFFFFFFFFE0;
        uint64_t result = (int64_t)&v19[(int)v25];
        uint64_t v38 = (uint16x8_t *)(v23 + 2 * (int)v25);
        unint64_t v39 = v36 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          uint16x8_t v40 = v38[-2];
          uint16x8_t v41 = v38[-1];
          uint16x8_t v42 = *v38;
          uint16x8_t v43 = v38[1];
          v38 += 4;
          *(int8x16_t *)uint64_t result = vuzp1q_s8((int8x16_t)vminq_u16(v40, v24), (int8x16_t)vminq_u16(v41, v24));
          *(int8x16_t *)(result + 16) = vuzp1q_s8((int8x16_t)vminq_u16(v42, v24), (int8x16_t)vminq_u16(v43, v24));
          result += 32;
          v39 -= 32;
        }
        while (v39);
        if (v36 == v37) {
          goto LABEL_17;
        }
        if ((v36 & 0x18) == 0)
        {
          unint64_t v25 = v37 + (int)v25;
          do
          {
LABEL_48:
            if (*(unsigned __int16 *)(v18 + 2 * v25) >= 0xFFu) {
              uint64_t result = 255;
            }
            else {
              uint64_t result = *(unsigned __int16 *)(v18 + 2 * v25);
            }
            v19[v25++] = result;
          }
          while (v8 != v25);
          goto LABEL_17;
        }
      }
      else
      {
        unint64_t v37 = 0;
      }
      uint64_t result = v36 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v44 = (v36 & 0xFFFFFFFFFFFFFFF8) + (int)v25;
      unint64_t v45 = v37 - (v36 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v46 = v37 + (int)v25;
      uint64_t v47 = 2 * v46;
      do
      {
        *(uint8x8_t *)&v19[v46] = vqmovn_u16(*(uint16x8_t *)(v18 + v47));
        v47 += 16;
        v46 += 8;
        v45 += 8;
      }
      while (v45);
      unint64_t v25 = v44;
      if (v36 != result) {
        goto LABEL_48;
      }
LABEL_17:
      v18 += v21;
      v19 += a6;
      ++v16;
      unint64_t v20 = (uint16x8_t *)((char *)v20 + v21);
      v22 += v21;
      v23 += v21;
      if (!--v7) {
        return result;
      }
    }
  }
  if ((int)v8 >= 4)
  {
    uint64_t v48 = 0;
    unint64_t v49 = 3;
    if (v10 > 3) {
      unint64_t v49 = v8 - 4;
    }
    unint64_t v50 = ((v49 << 32) & 0x7FFFFFFC00000000) + 0x400000000;
    uint64_t v51 = HIDWORD(v50) | 1;
    if (v51 <= v8) {
      uint64_t v51 = *a7;
    }
    unint64_t v52 = v51 - HIDWORD(v50);
    unint64_t v53 = a2 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v54 = (v49 >> 2) + 1;
    unint64_t v55 = v50 >> 31;
    unint64_t v56 = v52 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v57 = 2 * v9;
    unint64_t v58 = v93;
    int64_t v59 = v93 + 4;
    int64_t v60 = v93 + 32;
    unint64_t v91 = v52 & 0xFFFFFFFFFFFFFFE0;
    v61.i64[0] = 0xFF00FF00FF00FFLL;
    v61.i64[1] = 0xFF00FF00FF00FFLL;
    while (1)
    {
      uint64_t v62 = v48 * a6;
      unint64_t v63 = v53 * v48;
      if (v49 >= 0x3C
        && ((unint64_t)a5 < v93 + ((2 * v49) & 0x1FFFFFFF8) + 8 + v63
          ? (BOOL v64 = v58 >= (unint64_t)&v92[(v49 & 0xFFFFFFFC) + 4 + v62])
          : (BOOL v64 = 1),
            v64))
      {
        uint64_t v65 = v54 & 0x7FFFFFF0;
        int8x16x4_t v66 = a5;
        uint64_t result = v58;
        do
        {
          int8x16x4_t v67 = (const __int16 *)result;
          int16x8x4_t v94 = vld4q_s16(v67);
          v67 += 32;
          int16x8x4_t v95 = vld4q_s16(v67);
          v96.val[0] = vuzp1q_s8((int8x16_t)vminq_u16((uint16x8_t)v94.val[0], v61), (int8x16_t)vminq_u16((uint16x8_t)v95.val[0], v61));
          v96.val[1] = vuzp1q_s8((int8x16_t)vminq_u16((uint16x8_t)v94.val[1], v61), (int8x16_t)vminq_u16((uint16x8_t)v95.val[1], v61));
          v96.val[2] = vuzp1q_s8((int8x16_t)vminq_u16((uint16x8_t)v94.val[2], v61), (int8x16_t)vminq_u16((uint16x8_t)v95.val[2], v61));
          v96.val[3] = vuzp1q_s8((int8x16_t)vminq_u16((uint16x8_t)v94.val[3], v61), (int8x16_t)vminq_u16((uint16x8_t)v95.val[3], v61));
          vst4q_s8(v66, v96);
          v66 += 64;
          result += 128;
          v65 -= 16;
        }
        while (v65);
        uint64_t v68 = 4 * (v54 & 0x7FFFFFF0);
        int v69 = 4 * (v54 & 0x7FFFFFF0);
        if (v54 == (v54 & 0x7FFFFFF0))
        {
          if ((int)v8 <= (int)(4 * (v54 & 0x7FFFFFF0))) {
            goto LABEL_58;
          }
          goto LABEL_82;
        }
      }
      else
      {
        uint64_t v68 = 0;
      }
      uint64_t v70 = v68 + 1;
      unint64_t v71 = (unsigned __int16 *)(v59 + 2 * v68);
      do
      {
        unsigned int v72 = *(v71 - 2);
        if (v72 >= 0xFF) {
          LOBYTE(v72) = -1;
        }
        unsigned int v73 = *(unsigned __int16 *)(v58 + 2 * v70);
        if (v73 >= 0xFF) {
          LOBYTE(v73) = -1;
        }
        unint64_t v74 = &a5[v70];
        *(v74 - 1) = v72;
        char *v74 = v73;
        unsigned int v75 = *v71;
        if (v75 >= 0xFF) {
          LOBYTE(v75) = -1;
        }
        unsigned int v76 = v71[1];
        if (v76 >= 0xFF) {
          LOBYTE(v76) = -1;
        }
        v74[1] = v75;
        _OWORD v74[2] = v76;
        int v77 = v70 + 4;
        uint64_t result = v70 + 3;
        v71 += 4;
        v70 += 4;
      }
      while (result <= v10);
      int v69 = v77 - 1;
      if ((int)v8 <= v77 - 1) {
        goto LABEL_58;
      }
LABEL_82:
      uint64_t v78 = v69;
      if (v52 < 8
        || (unint64_t)&a5[v69] < v93 + v63 - v55 + 2 * (v51 + v69)
        && v58 + 2 * v69 < (unint64_t)&v92[v52 + v62 + v69])
      {
        goto LABEL_96;
      }
      if (v52 >= 0x20)
      {
        unint64_t v80 = (int8x16_t *)&a5[v69];
        uint64_t v81 = (uint16x8_t *)(v60 + 2 * v78);
        unint64_t v82 = v52 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          uint16x8_t v83 = v81[-2];
          uint16x8_t v84 = v81[-1];
          uint16x8_t v85 = *v81;
          uint16x8_t v86 = v81[1];
          v81 += 4;
          *unint64_t v80 = vuzp1q_s8((int8x16_t)vminq_u16(v83, v61), (int8x16_t)vminq_u16(v84, v61));
          v80[1] = vuzp1q_s8((int8x16_t)vminq_u16(v85, v61), (int8x16_t)vminq_u16(v86, v61));
          v80 += 2;
          v82 -= 32;
        }
        while (v82);
        uint64_t result = v52 & 0xFFFFFFFFFFFFFFE0;
        if (v52 == v91) {
          goto LABEL_58;
        }
        unint64_t v79 = v52 & 0xFFFFFFFFFFFFFFE0;
        if ((v52 & 0x18) == 0)
        {
          v78 += v91;
          do
          {
LABEL_96:
            if (*(unsigned __int16 *)(v58 + 2 * v78) >= 0xFFu) {
              uint64_t result = 255;
            }
            else {
              uint64_t result = *(unsigned __int16 *)(v58 + 2 * v78);
            }
            a5[v78++] = result;
          }
          while (v78 < v8);
          goto LABEL_58;
        }
      }
      else
      {
        unint64_t v79 = 0;
      }
      uint64_t v87 = v78 + v56;
      uint64_t result = -(uint64_t)(v52 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v88 = v79 - (v52 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v89 = v79 + v78;
      uint64_t v90 = 2 * v89;
      do
      {
        *(uint8x8_t *)&a5[v89] = vqmovn_u16(*(uint16x8_t *)(v58 + v90));
        v90 += 16;
        v89 += 8;
        v88 += 8;
      }
      while (v88);
      uint64_t v78 = v87;
      if (v52 != v56) {
        goto LABEL_96;
      }
LABEL_58:
      v58 += v57;
      a5 += a6;
      ++v48;
      v59 += v57;
      v60 += v57;
      if (!--v7) {
        return result;
      }
    }
  }
  if ((int)v8 >= 1)
  {
    uint64_t v11 = (unsigned __int16 *)(result + 4);
    uint64_t v12 = a5 + 2;
    do
    {
      unsigned int v13 = *(v11 - 2);
      if (v13 >= 0xFF) {
        LOBYTE(v13) = -1;
      }
      *(v12 - 2) = v13;
      if (v8 != 1)
      {
        unsigned int v14 = *(v11 - 1);
        if (v14 >= 0xFF) {
          LOBYTE(v14) = -1;
        }
        *(v12 - 1) = v14;
        if (v8 != 2)
        {
          unsigned int v15 = *v11;
          if (v15 >= 0xFF) {
            LOBYTE(v15) = -1;
          }
          *uint64_t v12 = v15;
        }
      }
      v11 += v9;
      v12 += a6;
      --v7;
    }
    while (v7);
  }
  return result;
}

int16x8_t *sub_100236748(int16x8_t *result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int *a7)
{
  int v7 = a7[1];
  if (v7)
  {
    uint64_t v8 = 0;
    uint64_t v9 = *a7;
    uint64_t v10 = v9 - 4;
    unint64_t v11 = a2 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = result + 1;
    uint64_t v13 = 2 * (a2 >> 1);
    uint64_t v14 = (uint64_t)result->i64 + 4;
    unsigned int v15 = result + 2;
    v16.i64[0] = 0xFF000000FFLL;
    v16.i64[1] = 0xFF000000FFLL;
    unint64_t v17 = result;
    uint64_t v18 = a5;
    do
    {
      if ((int)v9 >= 16)
      {
        unint64_t v22 = 0;
        int64_t v23 = v12;
        do
        {
          *(int8x16_t *)(v18 + v22) = vqmovun_high_s16(vqmovun_s16(v23[-1]), *v23);
          v22 += 16;
          v23 += 2;
        }
        while (v22 <= (v9 - 16));
        LODWORD(v19) = v22;
        uint64_t v20 = a5 + v8 * a6;
        uint64_t v21 = (uint64_t)result->i64 + v11 * v8;
        if ((int)v19 > (int)v10) {
          goto LABEL_16;
        }
      }
      else
      {
        LODWORD(v19) = 0;
        uint64_t v20 = a5 + v8 * a6;
        uint64_t v21 = (uint64_t)result->i64 + v11 * v8;
        if ((int)v10 < 0) {
          goto LABEL_16;
        }
      }
      uint64_t v24 = (int)v19;
      unint64_t v25 = v10 - (int)v19;
      if (v25 < 0x3C
        || (v26 = v25 >> 2, uint64_t v27 = v24, v18 + v24 < v21 + 8 + 2 * v24 + 8 * (v25 >> 2))
        && (unint64_t)v17->u64 + v27 * 2 < v20 + 4 + (v25 & 0xFFFFFFFFFFFFFFFCLL) + v24)
      {
        uint64_t v19 = v24;
LABEL_14:
        uint64_t v28 = (__int16 *)(v14 + 2 * v19);
        do
        {
          int64x2_t v29 = (unsigned char *)(v18 + v19);
          v30.i32[0] = *(v28 - 2);
          v30.i32[1] = *(v28 - 1);
          int32x2_t v31 = vmin_s32(vmax_s32(v30, 0), (int32x2_t)0xFF000000FFLL);
          v29[1] = v31.i8[4];
          *int64x2_t v29 = v31.i8[0];
          v31.i32[0] = *v28;
          v31.i32[1] = v28[1];
          int32x2_t v32 = vmin_s32(vmax_s32(v31, 0), (int32x2_t)0xFF000000FFLL);
          _OWORD v29[3] = v32.i8[4];
          _OWORD v29[2] = v32.i8[0];
          v19 += 4;
          v28 += 4;
        }
        while (v19 <= v10);
        goto LABEL_16;
      }
      unint64_t v38 = v26 + 1;
      uint64_t v39 = (v26 + 1) & 0x7FFFFFFFFFFFFFF0;
      uint64_t v19 = v24 + 4 * v39;
      uint64_t v40 = v39;
      do
      {
        uint16x8_t v41 = &v17->i16[v27];
        int16x8x4_t v71 = vld4q_s16(v41);
        v41 += 32;
        uint16x8_t v42 = (uint16x8_t)vmaxq_s16(v71.val[0], (int16x8_t)0);
        int16x8x4_t v72 = vld4q_s16(v41);
        uint16x8_t v43 = (uint16x8_t)vmaxq_s16(v72.val[0], (int16x8_t)0);
        v74.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmovl_high_u16(v42), v16);
        v74.val[3] = (int8x16_t)vminq_s32((int32x4_t)vmovl_high_u16(v43), v16);
        v74.val[0] = (int8x16_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v42.i8), v16);
        v74.val[2] = (int8x16_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v43.i8), v16);
        int8x16_t v44 = vqtbl4q_s8(v74, (int8x16_t)xmmword_1004047C0);
        uint16x8_t v45 = (uint16x8_t)vmaxq_s16(v71.val[1], (int16x8_t)0);
        uint16x8_t v46 = (uint16x8_t)vmaxq_s16(v72.val[1], (int16x8_t)0);
        v70.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmovl_high_u16(v45), v16);
        v70.val[3] = (int8x16_t)vminq_s32((int32x4_t)vmovl_high_u16(v46), v16);
        v70.val[0] = (int8x16_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v45.i8), v16);
        v70.val[2] = (int8x16_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v46.i8), v16);
        v74.val[0] = vqtbl4q_s8(v70, (int8x16_t)xmmword_1004047C0);
        uint16x8_t v47 = (uint16x8_t)vmaxq_s16(v71.val[2], (int16x8_t)0);
        uint16x8_t v48 = (uint16x8_t)vmaxq_s16(v72.val[2], (int16x8_t)0);
        v70.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmovl_high_u16(v47), v16);
        v70.val[3] = (int8x16_t)vminq_s32((int32x4_t)vmovl_high_u16(v48), v16);
        v70.val[0] = (int8x16_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v47.i8), v16);
        v70.val[2] = (int8x16_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v48.i8), v16);
        v74.val[1] = vqtbl4q_s8(v70, (int8x16_t)xmmword_1004047C0);
        uint16x8_t v49 = (uint16x8_t)vmaxq_s16(v71.val[3], (int16x8_t)0);
        uint16x8_t v50 = (uint16x8_t)vmaxq_s16(v72.val[3], (int16x8_t)0);
        v71.val[2] = (int16x8_t)vminq_s32((int32x4_t)vmovl_high_u16(v49), v16);
        v72.val[0] = (int16x8_t)vminq_s32((int32x4_t)vmovl_high_u16(v50), v16);
        v71.val[1] = (int16x8_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v49.i8), v16);
        v71.val[3] = (int16x8_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v50.i8), v16);
        v74.val[2] = vqtbl4q_s8(*(int8x16x4_t *)((char *)&v71 + 16), (int8x16_t)xmmword_1004047C0);
        uint64_t v51 = (char *)(v18 + v24);
        vst4q_s8(v51, v74);
        v24 += 64;
        v27 += 64;
        v40 -= 16;
      }
      while (v40);
      if (v38 != v39) {
        goto LABEL_14;
      }
LABEL_16:
      if ((int)v19 < (int)v9)
      {
        uint64_t v33 = (int)v19;
        unint64_t v34 = v9 - (int)v19;
        if (v34 < 8) {
          goto LABEL_38;
        }
        unint64_t v35 = v20 + v9;
        if (v18 + v33 < (unint64_t)(v21 + 2 * v9) && (unint64_t)v17 + 2 * v33 < v35) {
          goto LABEL_38;
        }
        if (v34 >= 0x20)
        {
          unint64_t v37 = v34 & 0xFFFFFFFFFFFFFFE0;
          unint64_t v52 = (int8x16_t *)(v18 + v33);
          unint64_t v53 = (int16x8_t *)((char *)v15 + 2 * v33);
          unint64_t v54 = v34 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            int16x8_t v55 = v53[-2];
            int16x8_t v56 = v53[-1];
            int16x8_t v57 = *v53;
            int16x8_t v58 = v53[1];
            v53 += 4;
            uint16x8_t v59 = (uint16x8_t)vmaxq_s16(v56, (int16x8_t)0);
            uint16x8_t v60 = (uint16x8_t)vmaxq_s16(v55, (int16x8_t)0);
            uint16x8_t v61 = (uint16x8_t)vmaxq_s16(v58, (int16x8_t)0);
            uint16x8_t v62 = (uint16x8_t)vmaxq_s16(v57, (int16x8_t)0);
            v73.val[3] = (int8x16_t)vminq_s32((int32x4_t)vmovl_high_u16(v59), v16);
            v73.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmovl_high_u16(v60), v16);
            v73.val[2] = (int8x16_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v59.i8), v16);
            v73.val[0] = (int8x16_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v60.i8), v16);
            v75.val[3] = (int8x16_t)vminq_s32((int32x4_t)vmovl_high_u16(v61), v16);
            v75.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmovl_high_u16(v62), v16);
            v75.val[2] = (int8x16_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v61.i8), v16);
            v75.val[0] = (int8x16_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v62.i8), v16);
            *unint64_t v52 = vqtbl4q_s8(v73, (int8x16_t)xmmword_1004047C0);
            v52[1] = vqtbl4q_s8(v75, (int8x16_t)xmmword_1004047C0);
            v52 += 2;
            v54 -= 32;
          }
          while (v54);
          if (v34 == v37) {
            goto LABEL_3;
          }
          if ((v34 & 0x18) == 0)
          {
            v33 += v37;
            do
            {
LABEL_38:
              int v68 = v17->i16[v33] & ~(v17->i16[v33] >> 31);
              if (v68 >= 255) {
                LOBYTE(v68) = -1;
              }
              *(unsigned char *)(v18 + v33++) = v68;
            }
            while (v9 != v33);
            goto LABEL_3;
          }
        }
        else
        {
          unint64_t v37 = 0;
        }
        uint64_t v63 = (v34 & 0xFFFFFFFFFFFFFFF8) + v33;
        unint64_t v64 = v37 - (v34 & 0xFFFFFFFFFFFFFFF8);
        uint64_t v65 = v37 + v33;
        uint64_t v66 = 2 * v65;
        do
        {
          uint16x8_t v67 = (uint16x8_t)vmaxq_s16(*(int16x8_t *)((char *)v17 + v66), (int16x8_t)0);
          v69.val[1] = (int8x16_t)vminq_s32((int32x4_t)vmovl_high_u16(v67), v16);
          v69.val[0] = (int8x16_t)vminq_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v67.i8), v16);
          *(void *)(v18 + v65) = vqtbl2q_s8(v69, (int8x16_t)xmmword_1004047D0).u64[0];
          v66 += 16;
          v65 += 8;
          v64 += 8;
        }
        while (v64);
        uint64_t v33 = v63;
        if (v34 != (v34 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_38;
        }
      }
LABEL_3:
      unint64_t v17 = (int16x8_t *)((char *)v17 + v13);
      v18 += a6;
      ++v8;
      uint64_t v12 = (int16x8_t *)((char *)v12 + v13);
      v14 += v13;
      unsigned int v15 = (int16x8_t *)((char *)v15 + v13);
      --v7;
    }
    while (v7);
  }
  return result;
}

int32x4_t *sub_100236B4C(int32x4_t *result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int *a7)
{
  int v7 = a7[1];
  if (v7)
  {
    uint64_t v8 = 0;
    uint64_t v9 = *a7;
    uint64_t v10 = v9 - 4;
    unint64_t v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    uint64_t v12 = result + 2;
    uint64_t v13 = 4 * (a2 >> 2);
    uint64_t v14 = &result->i64[1];
    unsigned int v15 = result + 4;
    v16.i64[0] = 0xFF000000FFLL;
    v16.i64[1] = 0xFF000000FFLL;
    unint64_t v17 = result;
    uint64_t v18 = a5;
    do
    {
      if ((int)v9 >= 16)
      {
        unint64_t v22 = 0;
        int64_t v23 = v12;
        do
        {
          int32x4_t v24 = v23[-2];
          int32x4_t v25 = v23[-1];
          int32x4_t v26 = *v23;
          int32x4_t v27 = v23[1];
          v23 += 4;
          *(uint8x16_t *)(v18 + v22) = vqmovn_high_u16(vqmovn_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(v24), v25)), (uint16x8_t)vqmovun_high_s32(vqmovun_s32(v26), v27));
          v22 += 16;
        }
        while (v22 <= (v9 - 16));
        LODWORD(v19) = v22;
        uint64_t v20 = a5 + v8 * a6;
        uint64_t v21 = (uint64_t)result->i64 + v11 * v8;
        if ((int)v19 > (int)v10) {
          goto LABEL_16;
        }
      }
      else
      {
        LODWORD(v19) = 0;
        uint64_t v20 = a5 + v8 * a6;
        uint64_t v21 = (uint64_t)result->i64 + v11 * v8;
        if ((int)v10 < 0) {
          goto LABEL_16;
        }
      }
      uint64_t v28 = (int)v19;
      unint64_t v29 = v10 - (int)v19;
      if (v29 < 0x3C
        || (unint64_t v30 = v29 >> 2, v31 = v28, v18 + v28 < v21 + 16 + 4 * v28 + 16 * (v29 >> 2))
        && (unint64_t)v17->u64 + v31 * 4 < v20 + 4 + (v29 & 0xFFFFFFFFFFFFFFFCLL) + v28)
      {
        uint64_t v19 = v28;
LABEL_14:
        int32x2_t v32 = (int32x2_t *)((char *)v14 + 4 * v19);
        do
        {
          uint64_t v33 = (unsigned char *)(v18 + v19);
          int32x2_t v34 = vmin_s32(vmax_s32(v32[-1], 0), (int32x2_t)0xFF000000FFLL);
          v33[1] = v34.i8[4];
          *uint64_t v33 = v34.i8[0];
          int32x2_t v35 = *v32;
          v32 += 2;
          int32x2_t v36 = vmin_s32(vmax_s32(v35, 0), (int32x2_t)0xFF000000FFLL);
          v33[3] = v36.i8[4];
          v33[2] = v36.i8[0];
          v19 += 4;
        }
        while (v19 <= v10);
        goto LABEL_16;
      }
      unint64_t v42 = v30 + 1;
      uint64_t v43 = (v30 + 1) & 0x7FFFFFFFFFFFFFF0;
      uint64_t v19 = v28 + 4 * v43;
      uint64_t v44 = v43;
      do
      {
        uint16x8_t v45 = (const float *)&v17->i32[v31];
        uint16x8_t v46 = (const float *)&v17[8].i32[v31];
        uint16x8_t v47 = (const float *)&v17[12].i32[v31];
        int8x16x4_t v71 = (int8x16x4_t)vld4q_f32(v45);
        v45 += 16;
        float32x4x4_t v72 = vld4q_f32(v45);
        float32x4x4_t v74 = vld4q_f32(v46);
        float32x4x4_t v76 = vld4q_f32(v47);
        v69.val[0] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v71.val[0], (int32x4_t)0), v16);
        v69.val[3] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v76.val[0], (int32x4_t)0), v16);
        v69.val[2] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v74.val[0], (int32x4_t)0), v16);
        v69.val[1] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v72.val[0], (int32x4_t)0), v16);
        int8x16_t v48 = vqtbl4q_s8(v69, (int8x16_t)xmmword_1004047C0);
        v70.val[0] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v71.val[1], (int32x4_t)0), v16);
        v70.val[3] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v76.val[1], (int32x4_t)0), v16);
        v70.val[2] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v74.val[1], (int32x4_t)0), v16);
        v70.val[1] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v72.val[1], (int32x4_t)0), v16);
        int8x16_t v49 = vqtbl4q_s8(v70, (int8x16_t)xmmword_1004047C0);
        v70.val[0] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v71.val[2], (int32x4_t)0), v16);
        v70.val[3] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v76.val[2], (int32x4_t)0), v16);
        v70.val[2] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v74.val[2], (int32x4_t)0), v16);
        v70.val[1] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v72.val[2], (int32x4_t)0), v16);
        int8x16_t v50 = vqtbl4q_s8(v70, (int8x16_t)xmmword_1004047C0);
        v71.val[0] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v71.val[3], (int32x4_t)0), v16);
        v71.val[3] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v76.val[3], (int32x4_t)0), v16);
        v71.val[2] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v74.val[3], (int32x4_t)0), v16);
        v71.val[1] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v72.val[3], (int32x4_t)0), v16);
        v69.val[0] = vqtbl4q_s8(v71, (int8x16_t)xmmword_1004047C0);
        uint64_t v51 = (char *)(v18 + v28);
        vst4q_s8(v51, v69);
        v28 += 64;
        v31 += 64;
        v44 -= 16;
      }
      while (v44);
      if (v42 != v43) {
        goto LABEL_14;
      }
LABEL_16:
      if ((int)v19 < (int)v9)
      {
        uint64_t v37 = (int)v19;
        unint64_t v38 = v9 - (int)v19;
        if (v38 < 8) {
          goto LABEL_38;
        }
        unint64_t v39 = v20 + v9;
        if (v18 + v37 < (unint64_t)(v21 + 4 * v9) && (unint64_t)v17 + 4 * v37 < v39) {
          goto LABEL_38;
        }
        if (v38 >= 0x20)
        {
          unint64_t v41 = v38 & 0xFFFFFFFFFFFFFFE0;
          unint64_t v52 = (int8x16_t *)(v18 + v37);
          unint64_t v53 = (int32x4_t *)((char *)v15 + 4 * v37);
          unint64_t v54 = v38 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            int32x4_t v56 = v53[-2];
            int32x4_t v55 = v53[-1];
            int32x4_t v58 = v53[-4];
            int32x4_t v57 = v53[-3];
            int32x4_t v60 = v53[2];
            int32x4_t v59 = v53[3];
            int32x4_t v62 = *v53;
            int32x4_t v61 = v53[1];
            v53 += 8;
            v73.val[3] = (int8x16_t)vminq_s32(vmaxq_s32(v55, (int32x4_t)0), v16);
            v73.val[2] = (int8x16_t)vminq_s32(vmaxq_s32(v56, (int32x4_t)0), v16);
            v73.val[1] = (int8x16_t)vminq_s32(vmaxq_s32(v57, (int32x4_t)0), v16);
            v73.val[0] = (int8x16_t)vminq_s32(vmaxq_s32(v58, (int32x4_t)0), v16);
            v75.val[3] = (int8x16_t)vminq_s32(vmaxq_s32(v59, (int32x4_t)0), v16);
            v75.val[2] = (int8x16_t)vminq_s32(vmaxq_s32(v60, (int32x4_t)0), v16);
            v75.val[1] = (int8x16_t)vminq_s32(vmaxq_s32(v61, (int32x4_t)0), v16);
            v75.val[0] = (int8x16_t)vminq_s32(vmaxq_s32(v62, (int32x4_t)0), v16);
            *unint64_t v52 = vqtbl4q_s8(v73, (int8x16_t)xmmword_1004047C0);
            v52[1] = vqtbl4q_s8(v75, (int8x16_t)xmmword_1004047C0);
            v52 += 2;
            v54 -= 32;
          }
          while (v54);
          if (v38 == v41) {
            goto LABEL_3;
          }
          if ((v38 & 0x18) == 0)
          {
            v37 += v41;
            do
            {
LABEL_38:
              int v67 = v17->i32[v37] & ~(v17->i32[v37] >> 31);
              if (v67 >= 255) {
                LOBYTE(v67) = -1;
              }
              *(unsigned char *)(v18 + v37++) = v67;
            }
            while (v9 != v37);
            goto LABEL_3;
          }
        }
        else
        {
          unint64_t v41 = 0;
        }
        uint64_t v63 = (v38 & 0xFFFFFFFFFFFFFFF8) + v37;
        unint64_t v64 = v41 - (v38 & 0xFFFFFFFFFFFFFFF8);
        uint64_t v65 = v41 + v37;
        uint64_t v66 = 4 * v65;
        do
        {
          v68.val[1] = (int8x16_t)vminq_s32(vmaxq_s32(*(int32x4_t *)((char *)&v17[1] + v66), (int32x4_t)0), v16);
          v68.val[0] = (int8x16_t)vminq_s32(vmaxq_s32(*(int32x4_t *)((char *)v17 + v66), (int32x4_t)0), v16);
          *(void *)(v18 + v65) = vqtbl2q_s8(v68, (int8x16_t)xmmword_1004047D0).u64[0];
          v66 += 32;
          v65 += 8;
          v64 += 8;
        }
        while (v64);
        uint64_t v37 = v63;
        if (v38 != (v38 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_38;
        }
      }
LABEL_3:
      unint64_t v17 = (int32x4_t *)((char *)v17 + v13);
      v18 += a6;
      ++v8;
      uint64_t v12 = (int32x4_t *)((char *)v12 + v13);
      uint64_t v14 = (uint64_t *)((char *)v14 + v13);
      unsigned int v15 = (int32x4_t *)((char *)v15 + v13);
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_100236F44(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int *a7)
{
  int v7 = a7[1];
  if (v7)
  {
    uint64_t v10 = (int8x16_t *)result;
    uint64_t v11 = *a7;
    uint64_t v12 = v11 - 4;
    uint64_t v13 = 4 * (a2 >> 2);
    do
    {
      uint64_t result = sub_100241144((uint64_t)&v22, v10, a5, v11);
      if ((int)result <= (int)v12)
      {
        uint64_t v14 = (int)result;
        uint64_t v15 = 4 * (int)result + 8;
        do
        {
          int32x2_t v16 = vmin_s32(vmax_s32((int32x2_t)__PAIR64__((uint64_t)rintf(*(float *)&v10->i32[v14 + 1]), (uint64_t)rintf(*(float *)((char *)&v10->i32[-2] + v15))), 0), (int32x2_t)0xFF000000FFLL);
          unint64_t v17 = (unsigned char *)(a5 + v14);
          v17[1] = v16.i8[4];
          *unint64_t v17 = v16.i8[0];
          int32x2_t v18 = vmin_s32(vmax_s32((int32x2_t)__PAIR64__((uint64_t)rintf(*(float *)((char *)&v10->i32[1] + v15)), (uint64_t)rintf(*(float *)((char *)v10->i32 + v15))), 0), (int32x2_t)0xFF000000FFLL);
          void v17[3] = v18.i8[4];
          _OWORD v17[2] = v18.i8[0];
          v14 += 4;
          v15 += 16;
        }
        while (v14 <= v12);
        uint64_t result = v14;
      }
      if ((int)result < (int)v11)
      {
        uint64_t v19 = (int)result;
        do
        {
          float v20 = rintf(*(float *)&v10->i32[v19]);
          int v21 = (uint64_t)v20 & ~((int)(uint64_t)v20 >> 31);
          if (v21 >= 255) {
            LOBYTE(v21) = -1;
          }
          *(unsigned char *)(a5 + v19++) = v21;
        }
        while (v11 != v19);
      }
      uint64_t v10 = (int8x16_t *)((char *)v10 + v13);
      a5 += a6;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_1002370B8(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int *a7)
{
  int v7 = a7[1];
  if (v7)
  {
    uint64_t v10 = (float64x2_t *)result;
    uint64_t v11 = *a7;
    uint64_t v12 = v11 - 4;
    uint64_t v13 = 8 * (a2 >> 3);
    do
    {
      uint64_t result = sub_1002414B4((uint64_t)&v22, v10, a5, v11);
      if ((int)result <= (int)v12)
      {
        uint64_t v14 = (int)result;
        uint64_t v15 = 8 * (int)result + 16;
        do
        {
          int32x2_t v16 = vmin_s32(vmax_s32((int32x2_t)__PAIR64__((uint64_t)rint(v10->f64[v14 + 1]), (uint64_t)rint(*(double *)((char *)v10[-1].f64 + v15))), 0), (int32x2_t)0xFF000000FFLL);
          unint64_t v17 = (unsigned char *)(a5 + v14);
          v17[1] = v16.i8[4];
          *unint64_t v17 = v16.i8[0];
          int32x2_t v18 = vmin_s32(vmax_s32((int32x2_t)__PAIR64__((uint64_t)rint(*(double *)((char *)&v10->f64[1] + v15)), (uint64_t)rint(*(double *)((char *)v10->f64 + v15))), 0), (int32x2_t)0xFF000000FFLL);
          void v17[3] = v18.i8[4];
          _OWORD v17[2] = v18.i8[0];
          v14 += 4;
          v15 += 32;
        }
        while (v14 <= v12);
        uint64_t result = v14;
      }
      if ((int)result < (int)v11)
      {
        uint64_t v19 = (int)result;
        do
        {
          double v20 = rint(v10->f64[v19]);
          int v21 = (uint64_t)v20 & ~((int)(uint64_t)v20 >> 31);
          if (v21 >= 255) {
            LOBYTE(v21) = -1;
          }
          *(unsigned char *)(a5 + v19++) = v21;
        }
        while (v11 != v19);
      }
      uint64_t v10 = (float64x2_t *)((char *)v10 + v13);
      a5 += a6;
      --v7;
    }
    while (v7);
  }
  return result;
}

unint64_t sub_10023722C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int *a7)
{
  int v7 = a7[1];
  if (!v7) {
    return result;
  }
  uint64_t v8 = *a7;
  uint64_t v9 = v8 - 4;
  if ((int)v8 >= 8)
  {
    uint64_t v15 = 0;
    v16.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v16.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    unint64_t v17 = result;
    unint64_t v18 = a5;
    while (1)
    {
      uint64_t v19 = 0;
      unint64_t v20 = 0;
      do
      {
        *(int8x8_t *)(v18 + v20) = vqmovn_s16((int16x8_t)vmovl_u8(*(uint8x8_t *)(v17 + v20)));
        v20 += 8;
        v19 += 0x800000000;
      }
      while (v20 <= (v8 - 8));
      if ((int)v9 >= (int)v20)
      {
        uint64_t v21 = 0;
        unint64_t v22 = v17 + (int)v20;
        do
        {
          int64_t v23 = (unsigned __int8 *)(v22 + v21);
          unsigned int v24 = *(unsigned __int8 *)(v22 + v21);
          if (v24 >= 0x7F) {
            LOBYTE(v24) = 127;
          }
          unsigned int v25 = v23[1];
          if (v25 >= 0x7F) {
            LOBYTE(v25) = 127;
          }
          int32x4_t v26 = (unsigned char *)(v18 + (int)v20 + v21);
          *int32x4_t v26 = v24;
          v26[1] = v25;
          unsigned int v27 = v23[2];
          if (v27 >= 0x7F) {
            LOBYTE(v27) = 127;
          }
          unsigned int v28 = v23[3];
          if (v28 >= 0x7F) {
            LOBYTE(v28) = 127;
          }
          void v26[2] = v27;
          void v26[3] = v28;
          v21 += 4;
        }
        while ((int)v20 + v21 <= v9);
        LODWORD(v20) = v20 + v21;
        if ((int)v20 >= (int)v8) {
          goto LABEL_17;
        }
      }
      else if ((int)v20 >= (int)v8)
      {
        goto LABEL_17;
      }
      uint64_t v29 = (int)v20;
      unint64_t v30 = v8 - (int)v20;
      if (v30 < 8)
      {
        uint64_t v31 = v29;
        goto LABEL_49;
      }
      if (a5 + v15 * a6 - (result + v15 * a2) < 0x20)
      {
        uint64_t v31 = v29;
        goto LABEL_49;
      }
      if (v30 >= 0x20)
      {
        unint64_t v32 = v30 & 0xFFFFFFFFFFFFFFE0;
        uint64_t v33 = v29;
        unint64_t v34 = v30 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          uint8x16_t v35 = vminq_u8(*(uint8x16_t *)(v17 + v33 + 16), v16);
          int32x2_t v36 = (uint8x16_t *)(v18 + v33);
          *int32x2_t v36 = vminq_u8(*(uint8x16_t *)(v17 + v33), v16);
          v36[1] = v35;
          v33 += 32;
          v34 -= 32;
        }
        while (v34);
        if (v30 == v32) {
          goto LABEL_17;
        }
        if ((v30 & 0x18) == 0)
        {
          uint64_t v31 = v32 + v29;
          do
          {
LABEL_49:
            unsigned int v39 = *(unsigned __int8 *)(v17 + v31);
            if (v39 >= 0x7F) {
              LOBYTE(v39) = 127;
            }
            *(unsigned char *)(v18 + v31++) = v39;
          }
          while (v8 != v31);
          goto LABEL_17;
        }
      }
      else
      {
        unint64_t v32 = 0;
      }
      uint64_t v31 = (v30 & 0xFFFFFFFFFFFFFFF8) + v29;
      unint64_t v37 = v32 - (v30 & 0xFFFFFFFFFFFFFFF8);
      uint64_t v38 = v32 + v29;
      do
      {
        *(uint8x8_t *)(v18 + v38) = vmin_u8(*(uint8x8_t *)(v17 + v38), (uint8x8_t)0x7F7F7F7F7F7F7F7FLL);
        v38 += 8;
        v37 += 8;
      }
      while (v37);
      if (v30 != (v30 & 0xFFFFFFFFFFFFFFF8)) {
        goto LABEL_49;
      }
LABEL_17:
      v17 += a2;
      v18 += a6;
      ++v15;
      if (!--v7) {
        return result;
      }
    }
  }
  if ((int)v8 >= 4)
  {
    uint64_t v40 = 0;
    unint64_t v41 = 3;
    if (v9 > 3) {
      unint64_t v41 = v8 - 4;
    }
    unint64_t v42 = (((v41 << 32) & 0x7FFFFFFC00000000) + 0x400000000) >> 32;
    uint64_t v43 = v42 | 1;
    if ((uint64_t)(v42 | 1) <= v8) {
      uint64_t v43 = *a7;
    }
    unint64_t v44 = v43 - v42;
    uint64_t v45 = (v41 & 0xFFFFFFFC) + 4;
    uint64_t v46 = (v41 >> 2) + 1;
    unint64_t v47 = v44 & 0xFFFFFFFFFFFFFFE0;
    unint64_t v48 = v44 & 0xFFFFFFFFFFFFFFF8;
    v49.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
    v49.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
    unint64_t v50 = result;
    unint64_t v51 = a5;
    while (1)
    {
      uint64_t v52 = v40 * a6;
      uint64_t v53 = v40 * a2;
      if (v41 >= 0x3C && (v51 < result + v45 + v53 ? (BOOL v54 = v50 >= a5 + v45 + v52) : (BOOL v54 = 1), v54))
      {
        uint64_t v55 = 0;
        uint64_t v56 = v46 & 0x7FFFFFF0;
        do
        {
          int32x4_t v57 = (const char *)(v50 + v55);
          int8x16x4_t v79 = vld4q_s8(v57);
          v80.val[0] = (int8x16_t)vminq_u8((uint8x16_t)v79.val[0], v49);
          v80.val[1] = (int8x16_t)vminq_u8((uint8x16_t)v79.val[1], v49);
          v80.val[2] = (int8x16_t)vminq_u8((uint8x16_t)v79.val[2], v49);
          v80.val[3] = (int8x16_t)vminq_u8((uint8x16_t)v79.val[3], v49);
          int32x4_t v58 = (char *)(v51 + v55);
          vst4q_s8(v58, v80);
          v55 += 64;
          v56 -= 16;
        }
        while (v56);
        uint64_t v59 = 4 * (v46 & 0x7FFFFFF0);
        int v60 = 4 * (v46 & 0x7FFFFFF0);
        if (v46 == (v46 & 0x7FFFFFF0))
        {
          if ((int)v8 <= (int)(4 * (v46 & 0x7FFFFFF0))) {
            goto LABEL_58;
          }
          goto LABEL_82;
        }
      }
      else
      {
        uint64_t v59 = 0;
      }
      uint64_t v61 = v59 + 1;
      do
      {
        int32x4_t v62 = (unsigned __int8 *)(v50 + v61);
        unsigned int v63 = *(unsigned __int8 *)(v50 + v61 - 1);
        if (v63 >= 0x7F) {
          LOBYTE(v63) = 127;
        }
        unsigned int v64 = *v62;
        if (v64 >= 0x7F) {
          LOBYTE(v64) = 127;
        }
        uint64_t v65 = (unsigned char *)(v51 + v61);
        *(v65 - 1) = v63;
        *uint64_t v65 = v64;
        unsigned int v66 = v62[1];
        if (v66 >= 0x7F) {
          LOBYTE(v66) = 127;
        }
        unsigned int v67 = v62[2];
        if (v67 >= 0x7F) {
          LOBYTE(v67) = 127;
        }
        v65[1] = v66;
        _OWORD v65[2] = v67;
        int v68 = v61 + 4;
        uint64_t v69 = v61 + 3;
        v61 += 4;
      }
      while (v69 <= v9);
      int v60 = v68 - 1;
      if ((int)v8 <= v68 - 1) {
        goto LABEL_58;
      }
LABEL_82:
      if (v44 < 8)
      {
        uint64_t v70 = v60;
        goto LABEL_97;
      }
      if (v52 + a5 - (v53 + result) < 0x20)
      {
        uint64_t v70 = v60;
        goto LABEL_97;
      }
      if (v44 >= 0x20)
      {
        uint64_t v72 = v60;
        unint64_t v73 = v44 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          uint8x16_t v74 = vminq_u8(*(uint8x16_t *)(v50 + v72 + 16), v49);
          int8x16x4_t v75 = (uint8x16_t *)(v51 + v72);
          uint8x16_t *v75 = vminq_u8(*(uint8x16_t *)(v50 + v72), v49);
          v75[1] = v74;
          v72 += 32;
          v73 -= 32;
        }
        while (v73);
        if (v44 == v47) {
          goto LABEL_58;
        }
        unint64_t v71 = v44 & 0xFFFFFFFFFFFFFFE0;
        if ((v44 & 0x18) == 0)
        {
          uint64_t v70 = v60 + v47;
          do
          {
LABEL_97:
            unsigned int v78 = *(unsigned __int8 *)(v50 + v70);
            if (v78 >= 0x7F) {
              LOBYTE(v78) = 127;
            }
            *(unsigned char *)(v51 + v70++) = v78;
          }
          while (v70 < v8);
          goto LABEL_58;
        }
      }
      else
      {
        unint64_t v71 = 0;
      }
      uint64_t v70 = v60 + v48;
      unint64_t v76 = v71 - (v44 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v77 = v71 + v60;
      do
      {
        *(uint8x8_t *)(v51 + v77) = vmin_u8(*(uint8x8_t *)(v50 + v77), (uint8x8_t)0x7F7F7F7F7F7F7F7FLL);
        v77 += 8;
        v76 += 8;
      }
      while (v76);
      if (v44 != v48) {
        goto LABEL_97;
      }
LABEL_58:
      v50 += a2;
      v51 += a6;
      ++v40;
      if (!--v7) {
        return result;
      }
    }
  }
  if ((int)v8 >= 1)
  {
    uint64_t v10 = (unsigned __int8 *)(result + 2);
    uint64_t v11 = (unsigned char *)(a5 + 2);
    do
    {
      unsigned int v12 = *(v10 - 2);
      if (v12 >= 0x7F) {
        LOBYTE(v12) = 127;
      }
      *(v11 - 2) = v12;
      if (v8 != 1)
      {
        unsigned int v13 = *(v10 - 1);
        if (v13 >= 0x7F) {
          LOBYTE(v13) = 127;
        }
        *(v11 - 1) = v13;
        if (v8 != 2)
        {
          unsigned int v14 = *v10;
          if (v14 >= 0x7F) {
            LOBYTE(v14) = 127;
          }
          *uint64_t v11 = v14;
        }
      }
      v10 += a2;
      v11 += a6;
      --v7;
    }
    while (v7);
  }
  return result;
}

int64_t sub_1002376FC(int64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, int *a7)
{
  __int32 v92 = a5;
  int64_t v93 = result;
  int v7 = a7[1];
  if (!v7) {
    return result;
  }
  uint64_t v8 = *a7;
  unint64_t v9 = a2 >> 1;
  uint64_t v10 = v8 - 4;
  if ((int)v8 >= 16)
  {
    uint64_t v16 = 0;
    unint64_t v17 = a2 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v19 = a5;
    int64_t v18 = result;
    int64_t v20 = result + 16;
    uint64_t v21 = 2 * v9;
    int64_t v22 = result + 4;
    int64_t v23 = result + 32;
    v24.i64[0] = 0x7F007F007F007FLL;
    v24.i64[1] = 0x7F007F007F007FLL;
    while (1)
    {
      uint64_t v25 = 0;
      unint64_t v26 = 0;
      uint64_t result = v20;
      do
      {
        *(int8x16_t *)&v19[v26] = vqmovn_high_s16(vqmovn_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)(result - 16))), (int32x4_t)vmovl_high_u16(*(uint16x8_t *)(result - 16)))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)result)), (int32x4_t)vmovl_high_u16(*(uint16x8_t *)result)));
        v26 += 16;
        v25 += 0x1000000000;
        result += 32;
      }
      while (v26 <= (v8 - 16));
      if ((int)v10 >= (int)v26)
      {
        uint64_t v27 = 0;
        uint64_t result = (int)v26;
        uint64_t v28 = 2 * (int)v26;
        uint64_t v29 = (unsigned __int16 *)(v22 + v28);
        int64_t v30 = v18 + v28;
        do
        {
          unsigned int v31 = *(v29 - 2);
          if (v31 >= 0x7F) {
            LOBYTE(v31) = 127;
          }
          unsigned int v32 = *(unsigned __int16 *)(v30 + 2 * v27 + 2);
          if (v32 >= 0x7F) {
            LOBYTE(v32) = 127;
          }
          uint64_t v33 = &v19[(int)v26 + v27];
          *uint64_t v33 = v31;
          v33[1] = v32;
          unsigned int v34 = *v29;
          if (v34 >= 0x7F) {
            LOBYTE(v34) = 127;
          }
          unsigned int v35 = v29[1];
          if (v35 >= 0x7F) {
            LOBYTE(v35) = 127;
          }
          v33[2] = v34;
          v33[3] = v35;
          v27 += 4;
          v29 += 4;
        }
        while ((int)v26 + v27 <= v10);
        LODWORD(v26) = v26 + v27;
        if ((int)v26 >= (int)v8) {
          goto LABEL_17;
        }
      }
      else if ((int)v26 >= (int)v8)
      {
        goto LABEL_17;
      }
      unint64_t v26 = (int)v26;
      unint64_t v36 = v8 - (int)v26;
      if (v36 < 8
        || (unint64_t)&v19[(int)v26] < v93 + 2 * v8 + v17 * v16
        && v18 + 2 * (int)v26 < (unint64_t)&v92[v8 + v16 * a6])
      {
        goto LABEL_48;
      }
      if (v36 >= 0x20)
      {
        unint64_t v37 = v36 & 0xFFFFFFFFFFFFFFE0;
        uint64_t result = (int64_t)&v19[(int)v26];
        uint64_t v38 = (uint16x8_t *)(v23 + 2 * (int)v26);
        unint64_t v39 = v36 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          uint16x8_t v40 = v38[-2];
          uint16x8_t v41 = v38[-1];
          uint16x8_t v42 = *v38;
          uint16x8_t v43 = v38[1];
          v38 += 4;
          *(int8x16_t *)uint64_t result = vuzp1q_s8((int8x16_t)vminq_u16(v40, v24), (int8x16_t)vminq_u16(v41, v24));
          *(int8x16_t *)(result + 16) = vuzp1q_s8((int8x16_t)vminq_u16(v42, v24), (int8x16_t)vminq_u16(v43, v24));
          result += 32;
          v39 -= 32;
        }
        while (v39);
        if (v36 == v37) {
          goto LABEL_17;
        }
        if ((v36 & 0x18) == 0)
        {
          unint64_t v26 = v37 + (int)v26;
          do
          {
LABEL_48:
            if (*(unsigned __int16 *)(v18 + 2 * v26) >= 0x7Fu) {
              uint64_t result = 127;
            }
            else {
              uint64_t result = *(unsigned __int16 *)(v18 + 2 * v26);
            }
            v19[v26++] = result;
          }
          while (v8 != v26);
          goto LABEL_17;
        }
      }
      else
      {
        unint64_t v37 = 0;
      }
      uint64_t result = v36 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v44 = (v36 & 0xFFFFFFFFFFFFFFF8) + (int)v26;
      unint64_t v45 = v37 - (v36 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v46 = v37 + (int)v26;
      uint64_t v47 = 2 * v46;
      do
      {
        *(int8x8_t *)&v19[v46] = vmovn_s16((int16x8_t)vminq_u16(*(uint16x8_t *)(v18 + v47), v24));
        v47 += 16;
        v46 += 8;
        v45 += 8;
      }
      while (v45);
      unint64_t v26 = v44;
      if (v36 != result) {
        goto LABEL_48;
      }
LABEL_17:
      v18 += v21;
      v19 += a6;
      ++v16;
      v20 += v21;
      v22 += v21;
      v23 += v21;
      if (!--v7) {
        return result;
      }
    }
  }
  if ((int)v8 >= 4)
  {
    uint64_t v48 = 0;
    unint64_t v49 = 3;
    if (v10 > 3) {
      unint64_t v49 = v8 - 4;
    }
    unint64_t v50 = ((v49 << 32) & 0x7FFFFFFC00000000) + 0x400000000;
    uint64_t v51 = HIDWORD(v50) | 1;
    if (v51 <= v8) {
      uint64_t v51 = *a7;
    }
    unint64_t v52 = v51 - HIDWORD(v50);
    unint64_t v53 = a2 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v54 = (v49 >> 2) + 1;
    unint64_t v55 = v50 >> 31;
    unint64_t v56 = v52 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v57 = 2 * v9;
    unint64_t v58 = v93;
    int64_t v59 = v93 + 4;
    int64_t v60 = v93 + 32;
    unint64_t v91 = v52 & 0xFFFFFFFFFFFFFFE0;
    v61.i64[0] = 0x7F007F007F007FLL;
    v61.i64[1] = 0x7F007F007F007FLL;
    while (1)
    {
      uint64_t v62 = v48 * a6;
      unint64_t v63 = v53 * v48;
      if (v49 >= 0x3C
        && ((unint64_t)a5 < v93 + ((2 * v49) & 0x1FFFFFFF8) + 8 + v63
          ? (BOOL v64 = v58 >= (unint64_t)&v92[(v49 & 0xFFFFFFFC) + 4 + v62])
          : (BOOL v64 = 1),
            v64))
      {
        uint64_t v65 = v54 & 0x7FFFFFF0;
        unsigned int v66 = a5;
        uint64_t result = v58;
        do
        {
          unsigned int v67 = (const __int16 *)result;
          int16x8x4_t v94 = vld4q_s16(v67);
          v67 += 32;
          int16x8x4_t v95 = vld4q_s16(v67);
          v96.val[0] = vuzp1q_s8((int8x16_t)vminq_u16((uint16x8_t)v94.val[0], v61), (int8x16_t)vminq_u16((uint16x8_t)v95.val[0], v61));
          v96.val[1] = vuzp1q_s8((int8x16_t)vminq_u16((uint16x8_t)v94.val[1], v61), (int8x16_t)vminq_u16((uint16x8_t)v95.val[1], v61));
          v96.val[2] = vuzp1q_s8((int8x16_t)vminq_u16((uint16x8_t)v94.val[2], v61), (int8x16_t)vminq_u16((uint16x8_t)v95.val[2], v61));
          v96.val[3] = vuzp1q_s8((int8x16_t)vminq_u16((uint16x8_t)v94.val[3], v61), (int8x16_t)vminq_u16((uint16x8_t)v95.val[3], v61));
          vst4q_s8(v66, v96);
          v66 += 64;
          result += 128;
          v65 -= 16;
        }
        while (v65);
        uint64_t v68 = 4 * (v54 & 0x7FFFFFF0);
        int v69 = 4 * (v54 & 0x7FFFFFF0);
        if (v54 == (v54 & 0x7FFFFFF0))
        {
          if ((int)v8 <= (int)(4 * (v54 & 0x7FFFFFF0))) {
            goto LABEL_58;
          }
          goto LABEL_82;
        }
      }
      else
      {
        uint64_t v68 = 0;
      }
      uint64_t v70 = v68 + 1;
      unint64_t v71 = (unsigned __int16 *)(v59 + 2 * v68);
      do
      {
        unsigned int v72 = *(v71 - 2);
        if (v72 >= 0x7F) {
          LOBYTE(v72) = 127;
        }
        unsigned int v73 = *(unsigned __int16 *)(v58 + 2 * v70);
        if (v73 >= 0x7F) {
          LOBYTE(v73) = 127;
        }
        uint8x16_t v74 = &a5[v70];
        *(v74 - 1) = v72;
        char *v74 = v73;
        unsigned int v75 = *v71;
        if (v75 >= 0x7F) {
          LOBYTE(v75) = 127;
        }
        unsigned int v76 = v71[1];
        if (v76 >= 0x7F) {
          LOBYTE(v76) = 127;
        }
        v74[1] = v75;
        _OWORD v74[2] = v76;
        int v77 = v70 + 4;
        uint64_t result = v70 + 3;
        v71 += 4;
        v70 += 4;
      }
      while (result <= v10);
      int v69 = v77 - 1;
      if ((int)v8 <= v77 - 1) {
        goto LABEL_58;
      }
LABEL_82:
      uint64_t v78 = v69;
      if (v52 < 8
        || (unint64_t)&a5[v69] < v93 + v63 - v55 + 2 * (v51 + v69)
        && v58 + 2 * v69 < (unint64_t)&v92[v52 + v62 + v69])
      {
        goto LABEL_96;
      }
      if (v52 >= 0x20)
      {
        int8x16x4_t v80 = (int8x16_t *)&a5[v69];
        uint64_t v81 = (uint16x8_t *)(v60 + 2 * v78);
        unint64_t v82 = v52 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          uint16x8_t v83 = v81[-2];
          uint16x8_t v84 = v81[-1];
          uint16x8_t v85 = *v81;
          uint16x8_t v86 = v81[1];
          v81 += 4;
          *int8x16x4_t v80 = vuzp1q_s8((int8x16_t)vminq_u16(v83, v61), (int8x16_t)vminq_u16(v84, v61));
          v80[1] = vuzp1q_s8((int8x16_t)vminq_u16(v85, v61), (int8x16_t)vminq_u16(v86, v61));
          v80 += 2;
          v82 -= 32;
        }
        while (v82);
        uint64_t result = v52 & 0xFFFFFFFFFFFFFFE0;
        if (v52 == v91) {
          goto LABEL_58;
        }
        unint64_t v79 = v52 & 0xFFFFFFFFFFFFFFE0;
        if ((v52 & 0x18) == 0)
        {
          v78 += v91;
          do
          {
LABEL_96:
            if (*(unsigned __int16 *)(v58 + 2 * v78) >= 0x7Fu) {
              uint64_t result = 127;
            }
            else {
              uint64_t result = *(unsigned __int16 *)(v58 + 2 * v78);
            }
            a5[v78++] = result;
          }
          while (v78 < v8);
          goto LABEL_58;
        }
      }
      else
      {
        unint64_t v79 = 0;
      }
      uint64_t v87 = v78 + v56;
      uint64_t result = -(uint64_t)(v52 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v88 = v79 - (v52 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v89 = v79 + v78;
      uint64_t v90 = 2 * v89;
      do
      {
        *(int8x8_t *)&a5[v89] = vmovn_s16((int16x8_t)vminq_u16(*(uint16x8_t *)(v58 + v90), v61));
        v90 += 16;
        v89 += 8;
        v88 += 8;
      }
      while (v88);
      uint64_t v78 = v87;
      if (v52 != v56) {
        goto LABEL_96;
      }
LABEL_58:
      v58 += v57;
      a5 += a6;
      ++v48;
      v59 += v57;
      v60 += v57;
      if (!--v7) {
        return result;
      }
    }
  }
  if ((int)v8 >= 1)
  {
    uint64_t v11 = (unsigned __int16 *)(result + 4);
    unsigned int v12 = a5 + 2;
    do
    {
      unsigned int v13 = *(v11 - 2);
      if (v13 >= 0x7F) {
        LOBYTE(v13) = 127;
      }
      *(v12 - 2) = v13;
      if (v8 != 1)
      {
        unsigned int v14 = *(v11 - 1);
        if (v14 >= 0x7F) {
          LOBYTE(v14) = 127;
        }
        *(v12 - 1) = v14;
        if (v8 != 2)
        {
          unsigned int v15 = *v11;
          if (v15 >= 0x7F) {
            LOBYTE(v15) = 127;
          }
          *unsigned int v12 = v15;
        }
      }
      v11 += v9;
      v12 += a6;
      --v7;
    }
    while (v7);
  }
  return result;
}

int16x8_t *sub_100237CFC(int16x8_t *result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int *a7)
{
  int v7 = a7[1];
  if (v7)
  {
    uint64_t v8 = 0;
    uint64_t v9 = *a7;
    int64_t v10 = v9 - 4;
    unint64_t v11 = a2 & 0xFFFFFFFFFFFFFFFELL;
    unsigned int v12 = result + 1;
    uint64_t v13 = 2 * (a2 >> 1);
    unsigned int v14 = result + 2;
    unsigned int v15 = result;
    uint64_t v16 = a5;
    do
    {
      if ((int)v9 >= 16)
      {
        unint64_t v20 = 0;
        uint64_t v21 = v12;
        do
        {
          *(int8x16_t *)(v16 + v20) = vqmovn_high_s16(vqmovn_s16(v21[-1]), *v21);
          v20 += 16;
          v21 += 2;
        }
        while (v20 <= (v9 - 16));
        LODWORD(v17) = v20;
        uint64_t v18 = a5 + v8 * a6;
        uint64_t v19 = (uint64_t)result->i64 + v11 * v8;
        if ((int)v17 > (int)v10) {
          goto LABEL_32;
        }
      }
      else
      {
        LODWORD(v17) = 0;
        uint64_t v18 = a5 + v8 * a6;
        uint64_t v19 = (uint64_t)result->i64 + v11 * v8;
        if ((int)v10 < 0) {
          goto LABEL_32;
        }
      }
      int64_t v22 = (int)v17;
      unint64_t v23 = v10 - (int)v17;
      if (v23 >= 0x3C
        && ((unint64_t v24 = v23 >> 2, v25 = v22, v16 + v22 >= v19 + 8 + 2 * v22 + 8 * (v23 >> 2))
         || (unint64_t)v15->u64 + v25 * 2 >= v18 + 4 + (v23 & 0xFFFFFFFFFFFFFFFCLL) + v22))
      {
        unint64_t v37 = v24 + 1;
        uint64_t v38 = (v24 + 1) & 0x7FFFFFFFFFFFFFF0;
        int64_t v17 = v22 + 4 * v38;
        uint64_t v39 = v38;
        do
        {
          uint16x8_t v40 = &v15->i16[v25];
          int16x8x4_t v54 = vld4q_s16(v40);
          v40 += 32;
          int16x8x4_t v55 = vld4q_s16(v40);
          v56.val[0] = vqmovn_high_s16(vqmovn_s16(v54.val[0]), v55.val[0]);
          v56.val[1] = vqmovn_high_s16(vqmovn_s16(v54.val[1]), v55.val[1]);
          v56.val[2] = vqmovn_high_s16(vqmovn_s16(v54.val[2]), v55.val[2]);
          v56.val[3] = vqmovn_high_s16(vqmovn_s16(v54.val[3]), v55.val[3]);
          uint16x8_t v41 = (char *)(v16 + v22);
          vst4q_s8(v41, v56);
          v22 += 64;
          v25 += 64;
          v39 -= 16;
        }
        while (v39);
        if (v37 == v38) {
          goto LABEL_32;
        }
      }
      else
      {
        int64_t v17 = v22;
      }
      uint64_t v26 = 2 * v17 + 6;
      do
      {
        int v27 = *(__int16 *)((char *)&v15->i16[-3] + v26);
        if (v27 <= -128) {
          int v27 = -128;
        }
        if (v27 >= 127) {
          LOBYTE(v27) = 127;
        }
        uint64_t v28 = (uint64_t)v15->i64 + 2 * v17;
        int v29 = *(__int16 *)(v28 + 2);
        if (v29 <= -128) {
          int v29 = -128;
        }
        if (v29 >= 127) {
          LOBYTE(v29) = 127;
        }
        int64_t v30 = (unsigned char *)(v16 + v17);
        *int64_t v30 = v27;
        v30[1] = v29;
        int v31 = *(__int16 *)(v28 + 4);
        if (v31 <= -128) {
          int v31 = -128;
        }
        if (v31 >= 127) {
          LOBYTE(v31) = 127;
        }
        int v32 = *(__int16 *)((char *)v15->i16 + v26);
        if (v32 <= -128) {
          int v32 = -128;
        }
        if (v32 >= 127) {
          LOBYTE(v32) = 127;
        }
        void v30[2] = v31;
        v30[3] = v32;
        v17 += 4;
        v26 += 8;
      }
      while (v17 <= v10);
LABEL_32:
      if ((int)v17 < (int)v9)
      {
        int64_t v17 = (int)v17;
        unint64_t v33 = v9 - (int)v17;
        if (v33 < 8) {
          goto LABEL_54;
        }
        unint64_t v34 = v18 + v9;
        if (v16 + (int)v17 < (unint64_t)(v19 + 2 * v9) && (unint64_t)v15 + 2 * (int)v17 < v34) {
          goto LABEL_54;
        }
        if (v33 >= 0x20)
        {
          unint64_t v36 = v33 & 0xFFFFFFFFFFFFFFE0;
          uint16x8_t v42 = (int8x16_t *)(v16 + (int)v17);
          uint16x8_t v43 = (int16x8_t *)((char *)v14 + 2 * (int)v17);
          unint64_t v44 = v33 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            int16x8_t v46 = v43[-2];
            int16x8_t v45 = v43[-1];
            int16x8_t v48 = *v43;
            int16x8_t v47 = v43[1];
            v43 += 4;
            int8x16_t *v42 = vqmovn_high_s16(vqmovn_s16(v46), v45);
            v42[1] = vqmovn_high_s16(vqmovn_s16(v48), v47);
            v42 += 2;
            v44 -= 32;
          }
          while (v44);
          if (v33 == v36) {
            goto LABEL_3;
          }
          if ((v33 & 0x18) == 0)
          {
            int64_t v17 = v36 + (int)v17;
            do
            {
LABEL_54:
              int v53 = v15->i16[v17];
              if (v53 <= -128) {
                int v53 = -128;
              }
              if (v53 >= 127) {
                LOBYTE(v53) = 127;
              }
              *(unsigned char *)(v16 + v17++) = v53;
            }
            while (v9 != v17);
            goto LABEL_3;
          }
        }
        else
        {
          unint64_t v36 = 0;
        }
        unint64_t v49 = (v33 & 0xFFFFFFFFFFFFFFF8) + (int)v17;
        unint64_t v50 = v36 - (v33 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v51 = v36 + (int)v17;
        uint64_t v52 = 2 * v51;
        do
        {
          *(int8x8_t *)(v16 + v51) = vqmovn_s16(*(int16x8_t *)((char *)v15 + v52));
          v52 += 16;
          v51 += 8;
          v50 += 8;
        }
        while (v50);
        int64_t v17 = v49;
        if (v33 != (v33 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_54;
        }
      }
LABEL_3:
      unsigned int v15 = (int16x8_t *)((char *)v15 + v13);
      v16 += a6;
      ++v8;
      unsigned int v12 = (int16x8_t *)((char *)v12 + v13);
      unsigned int v14 = (int16x8_t *)((char *)v14 + v13);
      --v7;
    }
    while (v7);
  }
  return result;
}

int32x4_t *sub_100238004(int32x4_t *result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int *a7)
{
  int v7 = a7[1];
  if (v7)
  {
    uint64_t v8 = 0;
    uint64_t v9 = *a7;
    uint64_t v10 = v9 - 4;
    unint64_t v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    unsigned int v12 = result + 2;
    uint64_t v13 = 4 * (a2 >> 2);
    unsigned int v14 = &result->i64[1];
    unsigned int v15 = result + 4;
    v16.i64[0] = 0x7F0000007FLL;
    v16.i64[1] = 0x7F0000007FLL;
    v17.i64[0] = 0x7F0000007FLL;
    v17.i64[1] = 0x7F0000007FLL;
    uint64_t v18 = result;
    uint64_t v19 = a5;
    do
    {
      if ((int)v9 >= 16)
      {
        unint64_t v23 = 0;
        unint64_t v24 = v12;
        do
        {
          int32x4_t v25 = v24[-2];
          int32x4_t v26 = v24[-1];
          int32x4_t v27 = *v24;
          int32x4_t v28 = v24[1];
          v24 += 4;
          *(int8x16_t *)(v19 + v23) = vqmovn_high_s16(vqmovn_s16(vqmovn_high_s32(vqmovn_s32(v25), v26)), vqmovn_high_s32(vqmovn_s32(v27), v28));
          v23 += 16;
        }
        while (v23 <= (v9 - 16));
        LODWORD(v20) = v23;
        uint64_t v21 = a5 + v8 * a6;
        uint64_t v22 = (uint64_t)result->i64 + v11 * v8;
        if ((int)v20 > (int)v10) {
          goto LABEL_16;
        }
      }
      else
      {
        LODWORD(v20) = 0;
        uint64_t v21 = a5 + v8 * a6;
        uint64_t v22 = (uint64_t)result->i64 + v11 * v8;
        if ((int)v10 < 0) {
          goto LABEL_16;
        }
      }
      uint64_t v29 = (int)v20;
      unint64_t v30 = v10 - (int)v20;
      if (v30 < 0x3C
        || (v31 = v30 >> 2, uint64_t v32 = v29, v19 + v29 < v22 + 16 + 4 * v29 + 16 * (v30 >> 2))
        && (unint64_t)v18->u64 + v32 * 4 < v21 + 4 + (v30 & 0xFFFFFFFFFFFFFFFCLL) + v29)
      {
        uint64_t v20 = v29;
LABEL_14:
        unint64_t v33 = (int32x2_t *)((char *)v14 + 4 * v20);
        do
        {
          unint64_t v34 = (unsigned char *)(v19 + v20);
          int32x2_t v35 = vmin_s32(vmax_s32(v33[-1], (int32x2_t)0x7F0000007FLL), (int32x2_t)0x7F0000007FLL);
          v34[1] = v35.i8[4];
          *unint64_t v34 = v35.i8[0];
          int32x2_t v36 = *v33;
          v33 += 2;
          int32x2_t v37 = vmin_s32(vmax_s32(v36, (int32x2_t)0x7F0000007FLL), (int32x2_t)0x7F0000007FLL);
          v34[3] = v37.i8[4];
          v34[2] = v37.i8[0];
          v20 += 4;
        }
        while (v20 <= v10);
        goto LABEL_16;
      }
      unint64_t v43 = v31 + 1;
      uint64_t v44 = (v31 + 1) & 0x7FFFFFFFFFFFFFF0;
      uint64_t v20 = v29 + 4 * v44;
      uint64_t v45 = v44;
      do
      {
        int16x8_t v46 = (const float *)&v18->i32[v32];
        int16x8_t v47 = (const float *)&v18[8].i32[v32];
        int16x8_t v48 = (const float *)&v18[12].i32[v32];
        int8x16x4_t v74 = (int8x16x4_t)vld4q_f32(v46);
        v46 += 16;
        float32x4x4_t v76 = vld4q_f32(v46);
        float32x4x4_t v77 = vld4q_f32(v47);
        float32x4x4_t v78 = vld4q_f32(v48);
        v73.val[0] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v74.val[0], v16), v17);
        v73.val[3] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v78.val[0], v16), v17);
        v73.val[2] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v77.val[0], v16), v17);
        v73.val[1] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v76.val[0], v16), v17);
        int8x16_t v49 = vqtbl4q_s8(v73, (int8x16_t)xmmword_1004047C0);
        v71.val[0] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v74.val[1], v16), v17);
        v71.val[3] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v78.val[1], v16), v17);
        v71.val[2] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v77.val[1], v16), v17);
        v71.val[1] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v76.val[1], v16), v17);
        int8x16_t v50 = vqtbl4q_s8(v71, (int8x16_t)xmmword_1004047C0);
        v73.val[1] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v74.val[2], v16), v17);
        int32x4_t v51 = vminq_s32(vmaxq_s32((int32x4_t)v78.val[2], v16), v17);
        v73.val[3] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v77.val[2], v16), v17);
        v73.val[2] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v76.val[2], v16), v17);
        int8x16_t v52 = vqtbl4q_s8(*(int8x16x4_t *)((char *)&v73 + 16), (int8x16_t)xmmword_1004047C0);
        v74.val[0] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v74.val[3], v16), v17);
        v74.val[3] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v78.val[3], v16), v17);
        v74.val[2] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v77.val[3], v16), v17);
        v74.val[1] = (int8x16_t)vminq_s32(vmaxq_s32((int32x4_t)v76.val[3], v16), v17);
        v73.val[0] = vqtbl4q_s8(v74, (int8x16_t)xmmword_1004047C0);
        int v53 = (char *)(v19 + v29);
        vst4q_s8(v53, v73);
        v29 += 64;
        v32 += 64;
        v45 -= 16;
      }
      while (v45);
      if (v43 != v44) {
        goto LABEL_14;
      }
LABEL_16:
      if ((int)v20 < (int)v9)
      {
        uint64_t v38 = (int)v20;
        unint64_t v39 = v9 - (int)v20;
        if (v39 < 8) {
          goto LABEL_38;
        }
        unint64_t v40 = v21 + v9;
        if (v19 + v38 < (unint64_t)(v22 + 4 * v9) && (unint64_t)v18 + 4 * v38 < v40) {
          goto LABEL_38;
        }
        if (v39 >= 0x20)
        {
          unint64_t v42 = v39 & 0xFFFFFFFFFFFFFFE0;
          int16x8x4_t v54 = (int8x16_t *)(v19 + v38);
          int16x8x4_t v55 = (int32x4_t *)((char *)v15 + 4 * v38);
          unint64_t v56 = v39 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            int32x4_t v58 = v55[-2];
            int32x4_t v57 = v55[-1];
            int32x4_t v60 = v55[-4];
            int32x4_t v59 = v55[-3];
            int32x4_t v62 = v55[2];
            int32x4_t v61 = v55[3];
            int32x4_t v64 = *v55;
            int32x4_t v63 = v55[1];
            v55 += 8;
            v75.val[3] = (int8x16_t)vminq_s32(vmaxq_s32(v57, v16), v17);
            v75.val[2] = (int8x16_t)vminq_s32(vmaxq_s32(v58, v16), v17);
            v75.val[1] = (int8x16_t)vminq_s32(vmaxq_s32(v59, v16), v17);
            v75.val[0] = (int8x16_t)vminq_s32(vmaxq_s32(v60, v16), v17);
            v72.val[3] = (int8x16_t)vminq_s32(vmaxq_s32(v61, v16), v17);
            v72.val[2] = (int8x16_t)vminq_s32(vmaxq_s32(v62, v16), v17);
            v72.val[1] = (int8x16_t)vminq_s32(vmaxq_s32(v63, v16), v17);
            v72.val[0] = (int8x16_t)vminq_s32(vmaxq_s32(v64, v16), v17);
            *int16x8x4_t v54 = vqtbl4q_s8(v75, (int8x16_t)xmmword_1004047C0);
            v54[1] = vqtbl4q_s8(v72, (int8x16_t)xmmword_1004047C0);
            v54 += 2;
            v56 -= 32;
          }
          while (v56);
          if (v39 == v42) {
            goto LABEL_3;
          }
          if ((v39 & 0x18) == 0)
          {
            v38 += v42;
            do
            {
LABEL_38:
              int v69 = v18->i32[v38];
              if (v69 <= -128) {
                int v69 = -128;
              }
              if (v69 >= 127) {
                LOBYTE(v69) = 127;
              }
              *(unsigned char *)(v19 + v38++) = v69;
            }
            while (v9 != v38);
            goto LABEL_3;
          }
        }
        else
        {
          unint64_t v42 = 0;
        }
        uint64_t v65 = (v39 & 0xFFFFFFFFFFFFFFF8) + v38;
        unint64_t v66 = v42 - (v39 & 0xFFFFFFFFFFFFFFF8);
        uint64_t v67 = v42 + v38;
        uint64_t v68 = 4 * v67;
        do
        {
          v70.val[1] = (int8x16_t)vminq_s32(vmaxq_s32(*(int32x4_t *)((char *)&v18[1] + v68), v16), v17);
          v70.val[0] = (int8x16_t)vminq_s32(vmaxq_s32(*(int32x4_t *)((char *)v18 + v68), v16), v17);
          *(void *)(v19 + v67) = vqtbl2q_s8(v70, (int8x16_t)xmmword_1004047D0).u64[0];
          v68 += 32;
          v67 += 8;
          v66 += 8;
        }
        while (v66);
        uint64_t v38 = v65;
        if (v39 != (v39 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_38;
        }
      }
LABEL_3:
      uint64_t v18 = (int32x4_t *)((char *)v18 + v13);
      v19 += a6;
      ++v8;
      unsigned int v12 = (int32x4_t *)((char *)v12 + v13);
      unsigned int v14 = (uint64_t *)((char *)v14 + v13);
      unsigned int v15 = (int32x4_t *)((char *)v15 + v13);
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_10023841C(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int *a7)
{
  int v7 = a7[1];
  if (v7)
  {
    uint64_t v10 = (int8x16_t *)result;
    uint64_t v11 = *a7;
    uint64_t v12 = v11 - 4;
    uint64_t v13 = 4 * (a2 >> 2);
    do
    {
      uint64_t result = sub_100241838((uint64_t)&v21, v10, a5, v11);
      if ((int)result <= (int)v12)
      {
        uint64_t v14 = (int)result;
        uint64_t v15 = 4 * (int)result + 8;
        do
        {
          int32x2_t v16 = vmin_s32(vmax_s32((int32x2_t)__PAIR64__((uint64_t)rintf(*(float *)&v10->i32[v14 + 1]), (uint64_t)rintf(*(float *)((char *)&v10->i32[-2] + v15))), (int32x2_t)0x7F0000007FLL), (int32x2_t)0x7F0000007FLL);
          int32x4_t v17 = (unsigned char *)(a5 + v14);
          v17[1] = v16.i8[4];
          *int32x4_t v17 = v16.i8[0];
          int32x2_t v18 = vmin_s32(vmax_s32((int32x2_t)__PAIR64__((uint64_t)rintf(*(float *)((char *)&v10->i32[1] + v15)), (uint64_t)rintf(*(float *)((char *)v10->i32 + v15))), (int32x2_t)0x7F0000007FLL), (int32x2_t)0x7F0000007FLL);
          void v17[3] = v18.i8[4];
          _OWORD v17[2] = v18.i8[0];
          v14 += 4;
          v15 += 16;
        }
        while (v14 <= v12);
        uint64_t result = v14;
      }
      if ((int)result < (int)v11)
      {
        uint64_t v19 = (int)result;
        do
        {
          uint64_t v20 = (uint64_t)rintf(*(float *)&v10->i32[v19]);
          if ((int)v20 <= -128) {
            LODWORD(v20) = -128;
          }
          if ((int)v20 >= 127) {
            LOBYTE(v20) = 127;
          }
          *(unsigned char *)(a5 + v19++) = v20;
        }
        while (v11 != v19);
      }
      uint64_t v10 = (int8x16_t *)((char *)v10 + v13);
      a5 += a6;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_1002385A0(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int *a7)
{
  int v7 = a7[1];
  if (v7)
  {
    uint64_t v10 = (float64x2_t *)result;
    uint64_t v11 = *a7;
    uint64_t v12 = v11 - 4;
    uint64_t v13 = 8 * (a2 >> 3);
    do
    {
      uint64_t result = sub_100241BA8((uint64_t)&v21, v10, a5, v11);
      if ((int)result <= (int)v12)
      {
        uint64_t v14 = (int)result;
        uint64_t v15 = 8 * (int)result + 16;
        do
        {
          int32x2_t v16 = vmin_s32(vmax_s32((int32x2_t)__PAIR64__((uint64_t)rint(v10->f64[v14 + 1]), (uint64_t)rint(*(double *)((char *)v10[-1].f64 + v15))), (int32x2_t)0x7F0000007FLL), (int32x2_t)0x7F0000007FLL);
          int32x4_t v17 = (unsigned char *)(a5 + v14);
          v17[1] = v16.i8[4];
          *int32x4_t v17 = v16.i8[0];
          int32x2_t v18 = vmin_s32(vmax_s32((int32x2_t)__PAIR64__((uint64_t)rint(*(double *)((char *)&v10->f64[1] + v15)), (uint64_t)rint(*(double *)((char *)v10->f64 + v15))), (int32x2_t)0x7F0000007FLL), (int32x2_t)0x7F0000007FLL);
          void v17[3] = v18.i8[4];
          _OWORD v17[2] = v18.i8[0];
          v14 += 4;
          v15 += 32;
        }
        while (v14 <= v12);
        uint64_t result = v14;
      }
      if ((int)result < (int)v11)
      {
        uint64_t v19 = (int)result;
        do
        {
          uint64_t v20 = (uint64_t)rint(v10->f64[v19]);
          if ((int)v20 <= -128) {
            LODWORD(v20) = -128;
          }
          if ((int)v20 >= 127) {
            LOBYTE(v20) = 127;
          }
          *(unsigned char *)(a5 + v19++) = v20;
        }
        while (v11 != v19);
      }
      uint64_t v10 = (float64x2_t *)((char *)v10 + v13);
      a5 += a6;
      --v7;
    }
    while (v7);
  }
  return result;
}

unint64_t sub_100238724(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint16x8_t *a5, unint64_t a6, unsigned int *a7)
{
  unsigned int v7 = a7[1];
  if (!v7) {
    return result;
  }
  unint64_t v10 = result;
  unint64_t v11 = *a7;
  unint64_t v12 = a6 >> 1;
  unsigned int v13 = v7 - 1;
  if ((int)v11 >= 8)
  {
    uint64_t v16 = 0;
    uint64_t v17 = (v11 - 4);
    unint64_t v18 = a6 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v19 = 2 * v12;
    uint64_t v20 = (uint64_t)a5->i64 + 6;
    unint64_t v21 = result + 16;
    uint64_t v22 = a5;
    unint64_t v23 = result;
    while (1)
    {
      uint64_t result = 0;
      unint64_t v24 = 0;
      unsigned int v25 = v13;
      int32x4_t v26 = v22;
      do
      {
        *v26++ = vmovl_u8(*(uint8x8_t *)(v23 + v24));
        v24 += 8;
        result += 0x800000000;
      }
      while (v24 <= (v11 - 8));
      if ((int)v17 >= (int)v24) {
        break;
      }
      if ((int)v24 < (int)v11) {
        goto LABEL_20;
      }
LABEL_11:
      v23 += a2;
      uint64_t v22 = (uint16x8_t *)((char *)v22 + v19);
      unsigned int v13 = v25 - 1;
      ++v16;
      v20 += v19;
      v21 += a2;
      if (!v25) {
        return result;
      }
    }
    uint64_t result = 0;
    uint64_t v27 = 2 * (int)v24;
    int32x4_t v28 = (_WORD *)(v20 + v27);
    unint64_t v29 = v23 + (int)v24;
    unint64_t v30 = &v22->i8[v27];
    do
    {
      __int16 v31 = *(unsigned __int8 *)(v29 + result + 1);
      *(v28 - 3) = *(unsigned __int8 *)(v29 + result);
      uint64_t v32 = &v30[2 * result];
      *((_WORD *)v32 + 1) = v31;
      __int16 v33 = *(unsigned __int8 *)(v29 + result + 3);
      *((_WORD *)v32 + 2) = *(unsigned __int8 *)(v29 + result + 2);
      *int32x4_t v28 = v33;
      v28 += 4;
      result += 4;
    }
    while ((uint64_t)((int)v24 + result) <= v17);
    LODWORD(v24) = v24 + result;
    if ((int)v24 >= (int)v11) {
      goto LABEL_11;
    }
LABEL_20:
    unint64_t v24 = (int)v24;
    unint64_t v34 = v11 - (int)v24;
    if (v34 >= 8
      && ((unint64_t)v22 + 2 * (int)v24 >= v10 + v11 + v16 * a2
       || v23 + (int)v24 >= (unint64_t)a5 + 2 * v11 + v18 * v16))
    {
      if (v34 < 0x20)
      {
        unint64_t v35 = 0;
        goto LABEL_29;
      }
      unint64_t v35 = v34 & 0xFFFFFFFFFFFFFFE0;
      uint64_t result = (unint64_t)v22 + 2 * (int)v24;
      int32x2_t v36 = (uint8x8_t *)(v21 + (int)v24);
      unint64_t v37 = v34 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v38 = *(uint8x16_t *)v36[-2].i8;
        uint16x8_t v39 = vmovl_u8(*v36);
        uint16x8_t v40 = vmovl_high_u8(*(uint8x16_t *)v36->i8);
        *(uint16x8_t *)uint64_t result = vmovl_u8(*(uint8x8_t *)v38.i8);
        *(uint16x8_t *)(result + 16) = vmovl_high_u8(v38);
        *(uint16x8_t *)(result + 32) = v39;
        *(uint16x8_t *)(result + 48) = v40;
        result += 64;
        v36 += 4;
        v37 -= 32;
      }
      while (v37);
      if (v34 == v35) {
        goto LABEL_11;
      }
      if ((v34 & 0x18) != 0)
      {
LABEL_29:
        uint64_t result = v34 & 0xFFFFFFFFFFFFFFF8;
        unint64_t v41 = (v34 & 0xFFFFFFFFFFFFFFF8) + (int)v24;
        unint64_t v42 = v35 - (v34 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v43 = v35 + (int)v24;
        uint64_t v44 = 2 * v43;
        do
        {
          *(uint16x8_t *)((char *)v22 + v44) = vmovl_u8(*(uint8x8_t *)(v23 + v43));
          v43 += 8;
          v44 += 16;
          v42 += 8;
        }
        while (v42);
        unint64_t v24 = v41;
        if (v34 == result) {
          goto LABEL_11;
        }
        goto LABEL_34;
      }
      unint64_t v24 = v35 + (int)v24;
    }
    do
    {
LABEL_34:
      uint64_t result = *(unsigned __int8 *)(v23 + v24);
      v22->i16[v24++] = result;
    }
    while (v11 != v24);
    goto LABEL_11;
  }
  if ((int)v11 >= 4)
  {
    uint64_t v45 = 0;
    unint64_t v46 = (v11 - 4);
    uint64_t v47 = v46 & 0xFFFFFFFC;
    uint64_t v48 = v47 + 4;
    unint64_t v49 = a6 & 0xFFFFFFFFFFFFFFFELL;
    if (v47 + 5 <= v11) {
      uint64_t v50 = *a7;
    }
    else {
      uint64_t v50 = (v46 & 0xFFFFFFFC) + 5;
    }
    unint64_t v51 = v50 - v47 - 4;
    uint64_t v52 = v46 >> 2;
    uint64_t v53 = v52 * 8 + 8;
    uint64_t v54 = (v46 >> 2) + 1;
    uint64_t v55 = 2 * v12;
    uint64_t v56 = (uint64_t)&a5[2].i64[v52 + 1];
    uint64_t v57 = v47 + result + 20;
    uint64_t v58 = result + v48;
    int32x4_t v59 = &a5->i64[v52 + 1];
    uint64_t v84 = (uint64_t)a5->i64 + 2 * v50;
    unint64_t v60 = result + v50;
    uint64_t v61 = result + v48;
    int32x4_t v62 = (__int16 *)a5;
    while (1)
    {
      unsigned int v63 = v13;
      unint64_t v64 = v49 * v45;
      unint64_t v65 = v58 + v45 * a2;
      if (v46 < 0x3C) {
        break;
      }
      if ((unint64_t)v62 < v65 && v10 < (unint64_t)a5->u64 + v53 + v64) {
        break;
      }
      uint64_t v67 = v54 & 0x7FFFFFF0;
      uint64_t v68 = v62;
      uint64_t result = v10;
      do
      {
        int8x16x4_t v85 = vld4q_s8((const char *)result);
        result += 64;
        v86.val[0] = (int16x8_t)vmovl_high_u8((uint8x16_t)v85.val[0]);
        v86.val[1] = (int16x8_t)vmovl_high_u8((uint8x16_t)v85.val[1]);
        v86.val[2] = (int16x8_t)vmovl_high_u8((uint8x16_t)v85.val[2]);
        v86.val[3] = (int16x8_t)vmovl_high_u8((uint8x16_t)v85.val[3]);
        v87.val[0] = (int16x8_t)vmovl_u8(*(uint8x8_t *)v85.val[0].i8);
        v87.val[1] = (int16x8_t)vmovl_u8(*(uint8x8_t *)v85.val[1].i8);
        v87.val[2] = (int16x8_t)vmovl_u8(*(uint8x8_t *)v85.val[2].i8);
        v87.val[3] = (int16x8_t)vmovl_u8(*(uint8x8_t *)v85.val[3].i8);
        int v69 = v68 + 64;
        vst4q_s16(v68, v87);
        int8x16x2_t v70 = v68 + 32;
        vst4q_s16(v70, v86);
        uint64_t v68 = v69;
        v67 -= 16;
      }
      while (v67);
      unint64_t v71 = 4 * (v54 & 0x7FFFFFF0);
      if (v54 != (v54 & 0x7FFFFFF0)) {
        goto LABEL_52;
      }
LABEL_54:
      if ((int)v11 > (int)v71)
      {
        unint64_t v74 = (v46 & 0xFFFFFFFC) + 4;
        if (v51 >= 8)
        {
          if ((unint64_t)&a5->u64[1] + ((2 * (v11 - 4)) & 0x1FFFFFFF8) + v64 >= v60 + v45 * a2
            || (unint64_t v74 = (v46 & 0xFFFFFFFC) + 4, v65 >= v84 + v64))
          {
            if (v51 >= 0x20)
            {
              float32x4x4_t v76 = (uint8x8_t *)v57;
              uint64_t result = v56;
              unint64_t v77 = v51 & 0xFFFFFFFFFFFFFFE0;
              do
              {
                uint8x16_t v78 = *(uint8x16_t *)v76[-2].i8;
                uint16x8_t v79 = vmovl_u8(*v76);
                uint16x8_t v80 = vmovl_high_u8(*(uint8x16_t *)v76->i8);
                *(uint16x8_t *)(result - 32) = vmovl_u8(*(uint8x8_t *)v78.i8);
                *(uint16x8_t *)(result - 16) = vmovl_high_u8(v78);
                *(uint16x8_t *)uint64_t result = v79;
                *(uint16x8_t *)(result + 16) = v80;
                result += 64;
                v76 += 4;
                v77 -= 32;
              }
              while (v77);
              if (v51 == (v51 & 0xFFFFFFFFFFFFFFE0)) {
                goto LABEL_40;
              }
              unint64_t v75 = v51 & 0xFFFFFFFFFFFFFFE0;
              unint64_t v74 = v48 + (v51 & 0xFFFFFFFFFFFFFFE0);
              if ((v51 & 0x18) != 0) {
                goto LABEL_64;
              }
            }
            else
            {
              unint64_t v75 = 0;
LABEL_64:
              unint64_t v81 = v75 - (v51 & 0xFFFFFFFFFFFFFFF8);
              uint64_t result = v61 + v75;
              unint64_t v82 = (uint16x8_t *)((char *)v59 + 2 * v75);
              do
              {
                uint8x8_t v83 = *(uint8x8_t *)result;
                result += 8;
                *v82++ = vmovl_u8(v83);
                v81 += 8;
              }
              while (v81);
              unint64_t v74 = v48 + (v51 & 0xFFFFFFFFFFFFFFF8);
              if (v51 == (v51 & 0xFFFFFFFFFFFFFFF8)) {
                goto LABEL_40;
              }
            }
          }
        }
        do
        {
          v62[v74] = *(unsigned __int8 *)(v10 + v74);
          ++v74;
        }
        while (v74 < v11);
      }
LABEL_40:
      v10 += a2;
      int32x4_t v62 = (__int16 *)((char *)v62 + v55);
      unsigned int v13 = v63 - 1;
      ++v45;
      v56 += v55;
      v57 += a2;
      v61 += a2;
      int32x4_t v59 = (uint64_t *)((char *)v59 + v55);
      if (!v63) {
        return result;
      }
    }
    unint64_t v71 = 0;
LABEL_52:
    uint64_t result = (unint64_t)&v62[v71];
    do
    {
      __int16 v72 = *(unsigned __int8 *)(v10 + v71 + 1);
      *(_WORD *)uint64_t result = *(unsigned __int8 *)(v10 + v71);
      *(_WORD *)(result + 2) = v72;
      __int16 v73 = *(unsigned __int8 *)(v10 + v71 + 3);
      *(_WORD *)(result + 4) = *(unsigned __int8 *)(v10 + v71 + 2);
      *(_WORD *)(result + 6) = v73;
      v71 += 4;
      result += 8;
    }
    while (v71 <= v46);
    goto LABEL_54;
  }
  if ((int)v11 >= 1)
  {
    uint64_t v14 = (unsigned __int8 *)(result + 2);
    uint64_t v15 = &a5->i16[2];
    do
    {
      *(v15 - 2) = *(v14 - 2);
      if (v11 != 1)
      {
        *(v15 - 1) = *(v14 - 1);
        if (v11 != 2) {
          *uint64_t v15 = *v14;
        }
      }
      v14 += a2;
      v15 += v12;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_100238C40(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, __int16 *a5, unint64_t a6, int *a7)
{
  int v7 = a7[1];
  if (!v7) {
    return result;
  }
  uint64_t v8 = a5;
  uint64_t v9 = *a7;
  unint64_t v10 = a6 >> 1;
  uint64_t v11 = v9 - 4;
  if ((int)v9 >= 8)
  {
    uint64_t v14 = 0;
    unint64_t v15 = a6 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v16 = 2 * v10;
    uint64_t v17 = a5 + 3;
    uint64_t v18 = result + 16;
    uint64_t v19 = (int16x8_t *)a5;
    uint64_t v20 = result;
    while (1)
    {
      uint64_t v21 = 0;
      unint64_t v22 = 0;
      unint64_t v23 = v19;
      do
      {
        int16x8_t v24 = vmovl_s8(*(int8x8_t *)(v20 + v22));
        *v23++ = vqmovun_high_s32(vqmovun_s32(vmovl_s16(*(int16x4_t *)v24.i8)), vmovl_high_s16(v24));
        v22 += 8;
        v21 += 0x800000000;
      }
      while (v22 <= (v9 - 8));
      if ((int)v11 >= (int)v22) {
        break;
      }
      if ((int)v22 < (int)v9) {
        goto LABEL_20;
      }
LABEL_11:
      v20 += a2;
      uint64_t v19 = (int16x8_t *)((char *)v19 + v16);
      ++v14;
      uint64_t v17 = (__int16 *)((char *)v17 + v16);
      v18 += a2;
      if (!--v7) {
        return result;
      }
    }
    uint64_t v25 = 0;
    uint64_t v26 = (int)v22;
    uint64_t v27 = &v17[v26];
    uint64_t v28 = v20 + (int)v22;
    unint64_t v29 = &v19->i8[v26 * 2];
    do
    {
      __int16 v30 = *(char *)(v28 + v25 + 1) & (unsigned __int16)~(unsigned __int16)(*(char *)(v28 + v25 + 1) >> 31);
      *(v27 - 3) = *(char *)(v28 + v25) & (unsigned __int16)~(unsigned __int16)(*(char *)(v28 + v25) >> 31);
      __int16 v31 = &v29[2 * v25];
      *((_WORD *)v31 + 1) = v30;
      __int16 v32 = *(char *)(v28 + v25 + 3) & (unsigned __int16)~(unsigned __int16)(*(char *)(v28 + v25 + 3) >> 31);
      *((_WORD *)v31 + 2) = *(char *)(v28 + v25 + 2) & (unsigned __int16)~(unsigned __int16)(*(char *)(v28 + v25 + 2) >> 31);
      *uint64_t v27 = v32;
      v27 += 4;
      v25 += 4;
    }
    while ((int)v22 + v25 <= v11);
    LODWORD(v22) = v22 + v25;
    if ((int)v22 >= (int)v9) {
      goto LABEL_11;
    }
LABEL_20:
    uint64_t v33 = (int)v22;
    unint64_t v34 = v9 - (int)v22;
    if (v34 >= 8
      && ((unint64_t)v19 + 2 * v33 >= result + v9 + v14 * a2 || v20 + v33 >= (unint64_t)&v8[v9]
                                                                                  + v15 * v14))
    {
      if (v34 < 0x20)
      {
        unint64_t v35 = 0;
        goto LABEL_29;
      }
      unint64_t v35 = v34 & 0xFFFFFFFFFFFFFFE0;
      int32x2_t v36 = (uint16x8_t *)((char *)v19 + 2 * v33);
      unint64_t v37 = (int8x16_t *)(v18 + v33);
      unint64_t v38 = v34 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        uint8x16_t v39 = (uint8x16_t)vmaxq_s8(v37[-1], (int8x16_t)0);
        uint8x16_t v40 = (uint8x16_t)vmaxq_s8(*v37, (int8x16_t)0);
        *int32x2_t v36 = vmovl_u8(*(uint8x8_t *)v39.i8);
        v36[1] = vmovl_high_u8(v39);
        v36[2] = vmovl_u8(*(uint8x8_t *)v40.i8);
        v36[3] = vmovl_high_u8(v40);
        v36 += 4;
        v37 += 2;
        v38 -= 32;
      }
      while (v38);
      if (v34 == v35) {
        goto LABEL_11;
      }
      if ((v34 & 0x18) != 0)
      {
LABEL_29:
        uint64_t v41 = (v34 & 0xFFFFFFFFFFFFFFF8) + v33;
        unint64_t v42 = v35 - (v34 & 0xFFFFFFFFFFFFFFF8);
        uint64_t v43 = v35 + v33;
        uint64_t v44 = 2 * v43;
        do
        {
          *(uint16x8_t *)((char *)v19 + v44) = vmovl_u8((uint8x8_t)vmax_s8(*(int8x8_t *)(v20 + v43), 0));
          v43 += 8;
          v44 += 16;
          v42 += 8;
        }
        while (v42);
        uint64_t v33 = v41;
        if (v34 == (v34 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_11;
        }
        goto LABEL_34;
      }
      v33 += v35;
    }
    do
    {
LABEL_34:
      v19->i16[v33] = *(char *)(v20 + v33) & (unsigned __int16)~(unsigned __int16)(*(char *)(v20 + v33) >> 31);
      ++v33;
    }
    while (v9 != v33);
    goto LABEL_11;
  }
  if ((int)v9 >= 4)
  {
    uint64_t v45 = 0;
    unint64_t v46 = 3;
    if (v11 > 3) {
      unint64_t v46 = v9 - 4;
    }
    unint64_t v47 = ((v46 << 32) & 0x7FFFFFFC00000000) + 0x400000000;
    unint64_t v48 = v9 - HIDWORD(v47);
    uint64_t v49 = (v46 >> 2) + 1;
    unint64_t v50 = v47 >> 31;
    unint64_t v51 = v48 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v52 = 2 * v10;
    uint64_t v53 = a5 + 3;
    uint64_t v54 = result + 16;
    unint64_t v83 = v48 & 0xFFFFFFFFFFFFFFE0;
    uint64_t v55 = (const char *)result;
    while (1)
    {
      unint64_t v56 = (a6 & 0xFFFFFFFFFFFFFFFELL) * v45;
      uint64_t v57 = v45 * a2;
      if (v46 < 0x3C) {
        break;
      }
      if ((unint64_t)a5 < result + (unint64_t)(v46 & 0xFFFFFFFC) + 4 + v57
        && v55 < (const char *)v8 + ((2 * v46) & 0x1FFFFFFF8) + v56 + 8)
      {
        break;
      }
      uint64_t v59 = v49 & 0x7FFFFFF0;
      unint64_t v60 = a5;
      uint64_t v61 = v55;
      do
      {
        int8x16x4_t v84 = vld4q_s8(v61);
        v61 += 64;
        uint8x16_t v62 = (uint8x16_t)vmaxq_s8(v84.val[0], (int8x16_t)0);
        v85.val[0] = (int16x8_t)vmovl_high_u8(v62);
        uint8x16_t v63 = (uint8x16_t)vmaxq_s8(v84.val[1], (int8x16_t)0);
        v85.val[1] = (int16x8_t)vmovl_high_u8(v63);
        uint8x16_t v64 = (uint8x16_t)vmaxq_s8(v84.val[2], (int8x16_t)0);
        v85.val[2] = (int16x8_t)vmovl_high_u8(v64);
        v84.val[0] = vmaxq_s8(v84.val[3], (int8x16_t)0);
        v85.val[3] = (int16x8_t)vmovl_high_u8((uint8x16_t)v84.val[0]);
        v84.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v62.i8);
        v84.val[2] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v63.i8);
        v84.val[3] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v64.i8);
        uint16x8_t v65 = vmovl_u8(*(uint8x8_t *)v84.val[0].i8);
        unint64_t v66 = v60 + 64;
        vst4q_s16(v60, *(int16x8x4_t *)((char *)&v84 + 16));
        uint64_t v67 = v60 + 32;
        vst4q_s16(v67, v85);
        unint64_t v60 = v66;
        v59 -= 16;
      }
      while (v59);
      uint64_t v68 = 4 * (v49 & 0x7FFFFFF0);
      if (v49 != (v49 & 0x7FFFFFF0)) {
        goto LABEL_51;
      }
LABEL_53:
      if ((int)v9 > (int)v68)
      {
        unint64_t v73 = (int)v68;
        if (v48 >= 8
          && ((unint64_t)&a5[(int)v68] >= result + v48 + v57 + (int)v68
           || &v55[(int)v68] >= (const char *)&v8[(int)v68 + v9] + v56 - v50))
        {
          if (v48 >= 0x20)
          {
            unint64_t v75 = (uint16x8_t *)&a5[(int)v68];
            float32x4x4_t v76 = (int8x16_t *)(v54 + (int)v68);
            unint64_t v77 = v48 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              uint8x16_t v78 = (uint8x16_t)vmaxq_s8(v76[-1], (int8x16_t)0);
              uint8x16_t v79 = (uint8x16_t)vmaxq_s8(*v76, (int8x16_t)0);
              uint16x8_t *v75 = vmovl_u8(*(uint8x8_t *)v78.i8);
              v75[1] = vmovl_high_u8(v78);
              _OWORD v75[2] = vmovl_u8(*(uint8x8_t *)v79.i8);
              v75[3] = vmovl_high_u8(v79);
              v75 += 4;
              v76 += 2;
              v77 -= 32;
            }
            while (v77);
            if (v48 == v83) {
              goto LABEL_39;
            }
            unint64_t v74 = v48 & 0xFFFFFFFFFFFFFFE0;
            if ((v48 & 0x18) != 0) {
              goto LABEL_63;
            }
            unint64_t v73 = (int)v68 + v83;
          }
          else
          {
            unint64_t v74 = 0;
LABEL_63:
            unint64_t v80 = v74 - (v48 & 0xFFFFFFFFFFFFFFF8);
            unint64_t v81 = v74 + (int)v68;
            uint64_t v82 = v81;
            do
            {
              *(uint16x8_t *)&a5[v82] = vmovl_u8((uint8x8_t)vmax_s8(*(int8x8_t *)&v55[v81], 0));
              v81 += 8;
              v82 += 8;
              v80 += 8;
            }
            while (v80);
            unint64_t v73 = (int)v68 + v51;
            if (v48 == v51) {
              goto LABEL_39;
            }
          }
        }
        do
        {
          a5[v73] = v55[v73] & (unsigned __int16)~(unsigned __int16)(v55[v73] >> 31);
          ++v73;
        }
        while (v9 != v73);
      }
LABEL_39:
      v55 += a2;
      a5 = (__int16 *)((char *)a5 + v52);
      ++v45;
      uint64_t v53 = (__int16 *)((char *)v53 + v52);
      v54 += a2;
      if (!--v7) {
        return result;
      }
    }
    uint64_t v68 = 0;
LABEL_51:
    int v69 = &v53[v68];
    do
    {
      __int16 v70 = v55[v68 + 1] & (unsigned __int16)~(unsigned __int16)(v55[v68 + 1] >> 31);
      *(v69 - 3) = v55[v68] & (unsigned __int16)~(unsigned __int16)(v55[v68] >> 31);
      unint64_t v71 = &a5[v68];
      v71[1] = v70;
      int v72 = v55[v68 + 3] & ~(v55[v68 + 3] >> 31);
      _OWORD v71[2] = v55[v68 + 2] & (unsigned __int16)~(unsigned __int16)(v55[v68 + 2] >> 31);
      __int16 *v69 = v72;
      v69 += 4;
      v68 += 4;
    }
    while (v68 <= v11);
    goto LABEL_53;
  }
  if ((int)v9 >= 1)
  {
    unint64_t v12 = (char *)(result + 2);
    unsigned int v13 = a5 + 2;
    do
    {
      *(v13 - 2) = *(v12 - 2) & (unsigned __int16)~(unsigned __int16)(*(v12 - 2) >> 31);
      if (v9 != 1)
      {
        *(v13 - 1) = *(v12 - 1) & (unsigned __int16)~(unsigned __int16)(*(v12 - 1) >> 31);
        if (v9 != 2) {
          *unsigned int v13 = *v12 & (unsigned __int16)~(unsigned __int16)(*v12 >> 31);
        }
      }
      v12 += a2;
      v13 += v10;
      --v7;
    }
    while (v7);
  }
  return result;
}

char *sub_1002391A8(char *__src, unint64_t a2, int a3, int a4, char *__dst, unint64_t a6, int *a7)
{
  int v7 = a7[1];
  if (v7)
  {
    uint64_t v9 = __src;
    size_t v10 = 2 * *a7;
    uint64_t v11 = 2 * (a2 >> 1);
    uint64_t v12 = 2 * (a6 >> 1);
    do
    {
      --v7;
      __srCGFloat c = (char *)memcpy(__dst, v9, v10);
      v9 += v11;
      __dst += v12;
    }
    while (v7);
  }
  return __src;
}

unint64_t sub_10023921C(unint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, unsigned int *a7)
{
  unsigned int v7 = a7[1];
  if (!v7) {
    return result;
  }
  unint64_t v8 = result;
  unint64_t v9 = *a7;
  unint64_t v10 = a2 >> 1;
  unint64_t v11 = a6 >> 1;
  unsigned int v12 = v7 - 1;
  if ((int)v9 >= 8)
  {
    uint64_t v15 = 0;
    int64_t v16 = (v9 - 4);
    unint64_t v17 = a6 & 0xFFFFFFFFFFFFFFFELL;
    unint64_t v18 = a2 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v19 = 2 * v11;
    uint64_t v20 = 2 * v10;
    unint64_t v21 = result;
    unint64_t v22 = a5;
    while (1)
    {
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      unint64_t v25 = 0;
      unsigned int v26 = v12;
      do
      {
        *(int16x8_t *)(v22 + v23) = vqmovun_high_s32(vqmovun_s32(vmovl_s16(*(int16x4_t *)(v21 + v23))), vmovl_high_s16(*(int16x8_t *)(v21 + v23)));
        v25 += 8;
        v24 += 0x800000000;
        v23 += 16;
      }
      while (v25 <= (v9 - 8));
      if ((int)v16 >= (int)v25)
      {
        uint64_t v27 = 0;
        uint64_t v28 = 2 * (int)v25;
        unint64_t v29 = v21;
        unint64_t v30 = v22;
        do
        {
          int v31 = *(__int16 *)(v29 + v28 + 2) & ~(*(__int16 *)(v29 + v28 + 2) >> 31);
          __int16 v32 = (_WORD *)(v30 + v28);
          *(_WORD *)(v30 + 2 * (int)v25) = *(_WORD *)(v29 + 2 * (int)v25) & ~(*(__int16 *)(v29 + 2 * (int)v25) >> 15);
          v32[1] = v31;
          __int16 v33 = *(_WORD *)(v29 + v28 + 6) & ~(*(__int16 *)(v29 + v28 + 6) >> 15);
          v32[2] = *(_WORD *)(v29 + v28 + 4) & ~(*(__int16 *)(v29 + v28 + 4) >> 15);
          v32[3] = v33;
          v27 += 4;
          uint64_t result = (int)v25 + v27;
          v30 += 8;
          v29 += 8;
        }
        while ((uint64_t)result <= v16);
        LODWORD(v25) = v25 + v27;
        if ((int)v25 < (int)v9)
        {
LABEL_20:
          unint64_t v25 = (int)v25;
          unint64_t v34 = v9 - (int)v25;
          if (v34 < 0x10) {
            goto LABEL_54;
          }
          uint64_t v35 = 2 * (int)v25;
          if (a5 + v17 * v15 - (v8 + v18 * v15) < 0x20) {
            goto LABEL_54;
          }
          uint64_t result = v34 & 0xFFFFFFFFFFFFFFF0;
          unint64_t v25 = (v34 & 0xFFFFFFFFFFFFFFF0) + (int)v25;
          unint64_t v36 = v34 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            int16x8_t v37 = vmaxq_s16(*(int16x8_t *)(v21 + v35 + 16), (int16x8_t)0);
            unint64_t v38 = (int16x8_t *)(v22 + v35);
            *unint64_t v38 = vmaxq_s16(*(int16x8_t *)(v21 + v35), (int16x8_t)0);
            v38[1] = v37;
            v35 += 32;
            v36 -= 16;
          }
          while (v36);
          if (v34 != result)
          {
LABEL_54:
            do
            {
              uint64_t result = 2 * v25;
              *(_WORD *)(v22 + 2 * v25) = *(_WORD *)(v21 + 2 * v25) & ~(*(__int16 *)(v21 + 2 * v25) >> 15);
              ++v25;
            }
            while (v9 != v25);
          }
        }
      }
      else if ((int)v25 < (int)v9)
      {
        goto LABEL_20;
      }
      unsigned int v12 = v26 - 1;
      ++v15;
      v22 += v19;
      v21 += v20;
      if (!v26) {
        return result;
      }
    }
  }
  if ((int)v9 >= 4)
  {
    uint64_t v39 = 0;
    unint64_t v40 = (v9 - 4);
    uint64_t v41 = (2 * v40) & 0x1FFFFFFF8;
    uint64_t v75 = v41 + a5 + 8;
    uint64_t v42 = v41 + v8 + 8;
    unint64_t v43 = a2 & 0xFFFFFFFFFFFFFFFELL;
    unint64_t v44 = (v40 & 0xFFFFFFFC) + 5;
    if (v44 <= v9) {
      unint64_t v44 = *a7;
    }
    unint64_t v45 = v44 - (v40 & 0xFFFFFFFC) - 4;
    uint64_t v46 = 8 * (v40 >> 2) + 8;
    uint64_t v74 = (v40 >> 2) + 1;
    uint64_t v47 = 2 * v10;
    uint64_t v48 = 2 * v11;
    unint64_t v49 = a5 + 4;
    uint64_t v73 = v41 + 24;
    unint64_t v50 = a5;
    uint64_t result = v8;
    unint64_t v51 = v8;
    while (1)
    {
      unsigned int v52 = v12;
      unint64_t v53 = (a6 & 0xFFFFFFFFFFFFFFFELL) * v39;
      unint64_t v54 = v43 * v39;
      if (v40 >= 0x1C && (v50 < v8 + v46 + v54 ? (BOOL v55 = result >= a5 + v46 + v53) : (BOOL v55 = 1), v55))
      {
        uint64_t v56 = 0;
        uint64_t v57 = v74 & 0x7FFFFFF8;
        do
        {
          uint64_t v58 = (const __int16 *)(result + v56);
          int16x8x4_t v76 = vld4q_s16(v58);
          v77.val[0] = vmaxq_s16(v76.val[0], (int16x8_t)0);
          v77.val[1] = vmaxq_s16(v76.val[1], (int16x8_t)0);
          v77.val[2] = vmaxq_s16(v76.val[2], (int16x8_t)0);
          v77.val[3] = vmaxq_s16(v76.val[3], (int16x8_t)0);
          uint64_t v59 = (__int16 *)(v50 + v56);
          vst4q_s16(v59, v77);
          v56 += 64;
          v57 -= 8;
        }
        while (v57);
        unint64_t v60 = 4 * (v74 & 0x7FFFFFF8);
        if (v74 == (v74 & 0x7FFFFFF8)) {
          goto LABEL_44;
        }
      }
      else
      {
        unint64_t v60 = 0;
      }
      uint64_t v61 = 2 * v60;
      unint64_t v62 = v49;
      unint64_t v63 = result;
      do
      {
        int v64 = *(__int16 *)(v63 + v61 + 2) & ~(*(__int16 *)(v63 + v61 + 2) >> 31);
        unint64_t v65 = v62 + v61;
        *(_WORD *)(v65 - 4) = *(_WORD *)(v63 + v61) & ~(*(__int16 *)(v63 + v61) >> 15);
        *(_WORD *)(v65 - 2) = v64;
        int v66 = *(__int16 *)(v63 + v61 + 6);
        *(_WORD *)(v62 + v61) = *(_WORD *)(v63 + v61 + 4) & ~(*(__int16 *)(v63 + v61 + 4) >> 15);
        *(_WORD *)(v65 + 2) = v66 & ~(unsigned __int16)(v66 >> 31);
        v60 += 4;
        v63 += 8;
        v62 += 8;
      }
      while (v60 <= v40);
LABEL_44:
      BOOL v67 = (int)v9 <= (int)v60;
      unint64_t v8 = v51;
      if (!v67)
      {
        unint64_t v68 = (v40 & 0xFFFFFFFC) + 4;
        if (v45 < 0x10) {
          goto LABEL_55;
        }
        unint64_t v68 = (v40 & 0xFFFFFFFC) + 4;
        if (v75 + v53 - (v42 + v54) < 0x20) {
          goto LABEL_55;
        }
        uint64_t v69 = v73;
        unint64_t v70 = v45 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          int16x8_t v71 = vmaxq_s16(*(int16x8_t *)(result + v69), (int16x8_t)0);
          int v72 = (int16x8_t *)(v50 + v69);
          v72[-1] = vmaxq_s16(*(int16x8_t *)(result + v69 - 16), (int16x8_t)0);
          *int v72 = v71;
          v69 += 32;
          v70 -= 16;
        }
        while (v70);
        unint64_t v68 = (v40 & 0xFFFFFFFC) + 4 + (v45 & 0xFFFFFFFFFFFFFFF0);
        if (v45 != (v45 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_55:
          do
          {
            *(_WORD *)(v50 + 2 * v68) = *(_WORD *)(result + 2 * v68) & ~(*(__int16 *)(result + 2 * v68) >> 15);
            ++v68;
          }
          while (v68 < v9);
        }
      }
      result += v47;
      v50 += v48;
      unsigned int v12 = v52 - 1;
      ++v39;
      v49 += v48;
      if (!v52) {
        return result;
      }
    }
  }
  if ((int)v9 >= 1)
  {
    unsigned int v13 = (__int16 *)(result + 4);
    uint64_t v14 = (_WORD *)(a5 + 4);
    do
    {
      *(v14 - 2) = *(v13 - 2) & ~(*(v13 - 2) >> 15);
      if (v9 != 1)
      {
        *(v14 - 1) = *(v13 - 1) & ~(*(v13 - 1) >> 15);
        if (v9 != 2) {
          *uint64_t v14 = *v13 & ~(*v13 >> 15);
        }
      }
      v13 += v10;
      v14 += v11;
      --v7;
    }
    while (v7);
  }
  return result;
}