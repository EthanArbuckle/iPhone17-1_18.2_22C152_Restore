void sub_100005E98()
{
  objc_class *v0;
  objc_method *InstanceMethod;
  objc_method *v2;
  void (*Implementation)(void);
  const char *TypeEncoding;
  void (*v5)(void);
  const char *v6;
  uint64_t vars8;

  v0 = (objc_class *)objc_opt_class();
  InstanceMethod = class_getInstanceMethod(v0, "interfaceOrientation");
  v2 = class_getInstanceMethod(v0, "xxx_interfaceOrientation");
  Implementation = method_getImplementation(v2);
  TypeEncoding = method_getTypeEncoding(v2);
  if (class_addMethod(v0, "interfaceOrientation", Implementation, TypeEncoding))
  {
    v5 = method_getImplementation(InstanceMethod);
    v6 = method_getTypeEncoding(InstanceMethod);
    class_replaceMethod(v0, "xxx_interfaceOrientation", v5, v6);
  }
  else
  {
    method_exchangeImplementations(InstanceMethod, v2);
  }
}

double sub_100005FD8(double a1, double a2)
{
  if (a2 <= 3.14159265)
  {
    if (a2 < -3.14159265) {
      a2 = a2 + 6.28318531;
    }
  }
  else
  {
    a2 = -(6.28318531 - a2);
  }
  double v2 = a2 - a1;
  if (a2 - a1 > 3.14159265) {
    return a1 - (6.28318531 - v2);
  }
  if (v2 < -3.14159265) {
    return v2 + 6.28318531 + a1;
  }
  return a2;
}

double sub_10000605C(double a1, double a2, double a3)
{
  return a1 + a3 * (a2 - a1);
}

id sub_1000061D4(uint64_t a1)
{
  v2.receiver = *(id *)(a1 + 32);
  v2.super_class = (Class)NonRotatingARSCNView;
  return [super layoutSubviews];
}

id sub_100007784(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 312) impactOccurredWithIntensity:1.0 atLocation:0.0 1.0];
}

void sub_1000094CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_1000094F4((uint64_t)va);

  _Unwind_Resume(a1);
}

uint64_t sub_1000094F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  if (v2 && atomic_fetch_add((atomic_uint *volatile)(v2 + 20), 0xFFFFFFFF) == 1) {
    sub_1002932F4(a1);
  }
  *(void *)(a1 + 56) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v3 = 0;
    uint64_t v4 = *(void *)(a1 + 64);
    do
      *(_DWORD *)(v4 + 4 * v3++) = 0;
    while (v3 < *(int *)(a1 + 4));
  }
  v5 = *(void **)(a1 + 72);
  if (v5 != (void *)(a1 + 80)) {
    j__free(v5);
  }
  return a1;
}

void sub_1000096D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_1000094F4((uint64_t)va);

  _Unwind_Resume(a1);
}

void sub_1000098B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_1000094F4((uint64_t)va);

  _Unwind_Resume(a1);
}

void sub_100009B68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25)
{
  if (a2) {
    sub_10000B6A8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100009F18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_10000A37C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  if (a2) {
    sub_10000B6A8(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10000A41C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000A4FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13, uint64_t a14, uint64_t a15, char a16)
{
  a13 = (void **)&a16;
  sub_10000B89C(&a13);

  _Unwind_Resume(a1);
}

void sub_10000A574(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10000A588(uint64_t a1, int a2)
{
  uint64_t v4 = *(__n128 **)a1;
  uint64_t v3 = *(__n128 **)(a1 + 8);
  if (*(__n128 **)a1 == v3) {
    goto LABEL_22;
  }
  if (a2 < 0) {
    sub_1003EE884();
  }
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = a2;
  float v7 = (float)a2;
  while (v6 <= (uint64_t)(v4->n128_u64[1] - v4->n128_u64[0]) >> 3)
  {
    v13 = v4;
    uint64_t v14 = 0;
    int v12 = -2130509812;
    sub_100386488((uint64_t)&v12, (uint64_t)v15);
    if (v16 < v7 && v17 < v7) {
      break;
    }
    uint64_t v4 = (__n128 *)((char *)v4 + 24);
    if (v4 == v3) {
      return sub_10000AE00(a1, v5, *(__n128 **)(a1 + 8));
    }
  }
  if (v4 != v3)
  {
    v9 = (__n128 *)((char *)v4 + 24);
    if (&v4[1].n128_i8[8] != (__int8 *)v3)
    {
      uint64_t v5 = (uint64_t)v4;
      do
      {
        if (v6 <= (uint64_t)(v9->n128_u64[1] - v9->n128_u64[0]) >> 3)
        {
          v13 = v9;
          uint64_t v14 = 0;
          int v12 = -2130509812;
          sub_100386488((uint64_t)&v12, (uint64_t)v15);
          if (v16 >= v7 || v17 >= v7)
          {
            sub_10000C03C(v5, v9);
            v5 += 24;
          }
        }
        v9 = (__n128 *)((char *)v9 + 24);
      }
      while (v9 != v3);
      return sub_10000AE00(a1, v5, *(__n128 **)(a1 + 8));
    }
LABEL_22:
    uint64_t v5 = (uint64_t)v4;
  }
  return sub_10000AE00(a1, v5, *(__n128 **)(a1 + 8));
}

void sub_10000A8CC(_Unwind_Exception *a1)
{
  sub_1000094F4(v3 - 192);

  _Unwind_Resume(a1);
}

void sub_10000ABA0(_Unwind_Exception *a1)
{
  sub_1000094F4(v2 - 184);

  _Unwind_Resume(a1);
}

void sub_10000ADC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_10000AE00(uint64_t a1, uint64_t a2, __n128 *a3)
{
  if ((__n128 *)a2 != a3)
  {
    sub_10000C090(a3, *(__n128 **)(a1 + 8), a2);
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)(a1 + 8);
    if (v7 != v5)
    {
      uint64_t v8 = *(void *)(a1 + 8);
      do
      {
        v10 = *(void **)(v8 - 24);
        v8 -= 24;
        v9 = v10;
        if (v10)
        {
          *(void *)(v7 - 16) = v9;
          operator delete(v9);
        }
        uint64_t v7 = v8;
      }
      while (v8 != v6);
    }
    *(void *)(a1 + 8) = v6;
  }
  return a2;
}

void sub_10000AFEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000B170(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10000B188(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return 0;
  }
  else {
    return dword_1003F63AC[a1 - 1];
  }
}

void sub_10000B1AC(uint64_t a1, void *a2, _DWORD *a3, int a4)
{
  __p = 0;
  v76 = 0;
  v77 = 0;
  v72 = 0;
  v73 = 0;
  v74 = 0;
  uint64_t v4 = a2[1] - *a2;
  if ((unint64_t)v4 > 0xA7)
  {
    uint64_t v10 = 0;
    unint64_t v11 = v4 >> 3;
    BOOL v12 = v11 >= 0x14;
    unint64_t v13 = v11 - 20;
    if (!v12) {
      unint64_t v13 = 0;
    }
    if (v13 <= 1) {
      uint64_t v14 = 1;
    }
    else {
      uint64_t v14 = v13;
    }
    float v15 = 0.0;
    uint64_t v16 = 0xFFFFFFFFLL;
    do
    {
      float v17 = (int32x2_t *)(*a2 + 8 * v10);
      float32x2_t v18 = vcvt_f32_s32(*v17);
      float32x2_t v19 = vcvt_f32_s32(*(int32x2_t *)(*a2 + 8 * (v10 + 10)));
      float32x2_t v20 = vcvt_f32_s32(v17[20]);
      float32x2_t v21 = vsub_f32(v19, v18);
      float32x2_t v22 = vsub_f32(v20, v18);
      float32x2_t v23 = vmul_f32(v22, v22);
      int32x2_t v24 = (int32x2_t)vmul_f32(v21, v21);
      float32x2_t v25 = vsub_f32(v20, v19);
      int32x2_t v26 = (int32x2_t)vmul_f32(v25, v25);
      float32x2_t v27 = vadd_f32((float32x2_t)vzip1_s32(v26, v24), (float32x2_t)vzip2_s32(v26, v24));
      float v28 = sqrtf(fabsf(vmul_f32(v27, vmul_lane_f32(vadd_f32(v23, (float32x2_t)vdup_lane_s32((int32x2_t)v23, 1)), v27, 1)).f32[0]));
      if (v28 != 0.0)
      {
        float v29 = vmlas_n_f32(vmuls_lane_f32(-v22.f32[0], v21, 1), v22.f32[1], v21.f32[0]);
        float v30 = (float)(v29 + v29) / v28;
        float v31 = fabsf(v30);
        if (v31 >= 0.08)
        {
          if (v31 > fabsf(v15))
          {
            if ((unint64_t)(v10 + 10) >= 0x7FFFFFFF) {
              __assert_rtn("safeSignedCast", "OpenCVWrapperInternal.h", 67, "value < INT_MAX && \"size_t outside of valid range to cast to int\"");
            }
            uint64_t v16 = (v10 + 10);
            float v15 = v30;
          }
        }
        else if ((v16 & 0x80000000) == 0)
        {
          v32 = v76;
          if (v76 >= v77)
          {
            v34 = (uint64_t *)__p;
            uint64_t v35 = ((char *)v76 - (unsigned char *)__p) >> 3;
            unint64_t v36 = v35 + 1;
            if ((unint64_t)(v35 + 1) >> 61) {
              sub_10000B98C();
            }
            uint64_t v37 = (char *)v77 - (unsigned char *)__p;
            if (((char *)v77 - (unsigned char *)__p) >> 2 > v36) {
              unint64_t v36 = v37 >> 2;
            }
            if ((unint64_t)v37 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v38 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v38 = v36;
            }
            if (v38)
            {
              v39 = (char *)sub_10000B9A4((uint64_t)&v77, v38);
              v34 = (uint64_t *)__p;
              v32 = v76;
            }
            else
            {
              v39 = 0;
            }
            v40 = (uint64_t *)&v39[8 * v35];
            uint64_t *v40 = v16;
            v33 = v40 + 1;
            while (v32 != v34)
            {
              uint64_t v41 = *--v32;
              *--v40 = v41;
            }
            __p = v40;
            v76 = v33;
            v77 = (uint64_t *)&v39[8 * v38];
            if (v34) {
              operator delete(v34);
            }
          }
          else
          {
            uint64_t *v76 = v16;
            v33 = v32 + 1;
          }
          v76 = v33;
          v42 = v73;
          if (v73 >= v74)
          {
            v44 = v72;
            uint64_t v45 = (v73 - (char *)v72) >> 2;
            unint64_t v46 = v45 + 1;
            if ((unint64_t)(v45 + 1) >> 62) {
              sub_10000B98C();
            }
            uint64_t v47 = v74 - (char *)v72;
            if ((v74 - (char *)v72) >> 1 > v46) {
              unint64_t v46 = v47 >> 1;
            }
            if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v48 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v48 = v46;
            }
            if (v48)
            {
              v49 = (char *)sub_10000C0F0((uint64_t)&v74, v48);
              v44 = v72;
              v42 = v73;
            }
            else
            {
              v49 = 0;
            }
            v50 = (float *)&v49[4 * v45];
            float *v50 = v15;
            v43 = (char *)(v50 + 1);
            while (v42 != (char *)v44)
            {
              int v51 = *((_DWORD *)v42 - 1);
              v42 -= 4;
              *((_DWORD *)v50-- - 1) = v51;
            }
            v72 = v50;
            v74 = &v49[4 * v48];
            if (v44) {
              operator delete(v44);
            }
          }
          else
          {
            *(float *)v73 = v15;
            v43 = v73 + 4;
          }
          v73 = v43;
          float v15 = 0.0;
          uint64_t v16 = 0xFFFFFFFFLL;
        }
      }
      ++v10;
    }
    while (v10 != v14);
    uint64_t v5 = (uint64_t *)__p;
    v52 = v76;
    if (v76 != __p)
    {
      unint64_t v53 = 0;
      do
      {
        uint64_t v54 = v5[v53];
        int v55 = *(_DWORD *)(*a2 + 8 * v54);
        if (v55 >= a4)
        {
          int v56 = *(_DWORD *)(*a2 + 8 * v54 + 4);
          if (v56 >= a4 && v55 <= *a3 - a4 && v56 <= a3[1] - a4)
          {
            float v57 = v72[v53];
            double v58 = (double)v55;
            double v59 = (double)v56;
            v61 = *(double **)(a1 + 8);
            unint64_t v60 = *(void *)(a1 + 16);
            if ((unint64_t)v61 >= v60)
            {
              v63 = *(double **)a1;
              unint64_t v64 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v61 - *(void *)a1) >> 3);
              unint64_t v65 = v64 + 1;
              if (v64 + 1 > 0xAAAAAAAAAAAAAAALL) {
                sub_10000B98C();
              }
              unint64_t v66 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v60 - (void)v63) >> 3);
              if (2 * v66 > v65) {
                unint64_t v65 = 2 * v66;
              }
              if (v66 >= 0x555555555555555) {
                unint64_t v67 = 0xAAAAAAAAAAAAAAALL;
              }
              else {
                unint64_t v67 = v65;
              }
              if (v67)
              {
                v68 = (char *)sub_10000BCA4(a1 + 16, v67);
                v63 = *(double **)a1;
                v61 = *(double **)(a1 + 8);
              }
              else
              {
                v68 = 0;
              }
              v69 = (double *)&v68[24 * v64];
              double *v69 = v58;
              v69[1] = v59;
              *((float *)v69 + 4) = v57;
              v70 = v69;
              if (v61 != v63)
              {
                do
                {
                  long long v71 = *(_OWORD *)(v61 - 3);
                  *(v70 - 1) = *(v61 - 1);
                  *(_OWORD *)(v70 - 3) = v71;
                  v70 -= 3;
                  v61 -= 3;
                }
                while (v61 != v63);
                v63 = *(double **)a1;
              }
              v62 = v69 + 3;
              *(void *)a1 = v70;
              *(void *)(a1 + 8) = v69 + 3;
              *(void *)(a1 + 16) = &v68[24 * v67];
              if (v63) {
                operator delete(v63);
              }
            }
            else
            {
              double *v61 = v58;
              v61[1] = v59;
              v62 = v61 + 3;
              *((float *)v61 + 4) = v57;
            }
            *(void *)(a1 + 8) = v62;
            uint64_t v5 = (uint64_t *)__p;
            v52 = v76;
          }
        }
        ++v53;
      }
      while (v53 < v52 - v5);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  if (v72)
  {
    operator delete(v72);
    uint64_t v5 = (uint64_t *)__p;
  }
  if (v5)
  {
    v76 = v5;
    operator delete(v5);
  }
}

void sub_10000B668(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  if (a12) {
    operator delete(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_10000B6A8(void *a1)
{
}

uint64_t sub_10000B6BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 264);
  if (v2 && atomic_fetch_add((atomic_uint *volatile)(v2 + 20), 0xFFFFFFFF) == 1) {
    sub_1002932F4(a1 + 208);
  }
  *(void *)(a1 + 264) = 0;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  if (*(int *)(a1 + 212) >= 1)
  {
    uint64_t v3 = 0;
    uint64_t v4 = *(void *)(a1 + 272);
    do
      *(_DWORD *)(v4 + 4 * v3++) = 0;
    while (v3 < *(int *)(a1 + 212));
  }
  uint64_t v5 = *(void **)(a1 + 280);
  if (v5 != (void *)(a1 + 288)) {
    j__free(v5);
  }
  uint64_t v6 = *(void *)(a1 + 168);
  if (v6 && atomic_fetch_add((atomic_uint *volatile)(v6 + 20), 0xFFFFFFFF) == 1) {
    sub_1002932F4(a1 + 112);
  }
  *(void *)(a1 + 168) = 0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  if (*(int *)(a1 + 116) >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = *(void *)(a1 + 176);
    do
      *(_DWORD *)(v8 + 4 * v7++) = 0;
    while (v7 < *(int *)(a1 + 116));
  }
  v9 = *(void **)(a1 + 184);
  if (v9 != (void *)(a1 + 192)) {
    j__free(v9);
  }
  uint64_t v10 = *(void *)(a1 + 72);
  if (v10 && atomic_fetch_add((atomic_uint *volatile)(v10 + 20), 0xFFFFFFFF) == 1) {
    sub_1002932F4(a1 + 16);
  }
  *(void *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  if (*(int *)(a1 + 20) >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = *(void *)(a1 + 80);
    do
      *(_DWORD *)(v12 + 4 * v11++) = 0;
    while (v11 < *(int *)(a1 + 20));
  }
  unint64_t v13 = *(void **)(a1 + 88);
  if (v13 != (void *)(a1 + 96)) {
    j__free(v13);
  }
  return a1;
}

uint64_t sub_10000B830(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)a1;
  if (v2 && atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1) {
    (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
  }
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  return a1;
}

void sub_10000B89C(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_10000B8F0((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_10000B8F0(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if (v2 != *a1)
  {
    uint64_t v4 = a1[1];
    do
    {
      uint64_t v6 = *(void **)(v4 - 24);
      v4 -= 24;
      uint64_t v5 = v6;
      if (v6)
      {
        *(void *)(v2 - 16) = v5;
        operator delete(v5);
      }
      uint64_t v2 = v4;
    }
    while (v4 != v3);
  }
  a1[1] = v3;
}

char *sub_10000B948(void *a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_10000B98C();
  }
  result = (char *)sub_10000B9A4((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

void sub_10000B98C()
{
}

void *sub_10000B9A4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_10000BA6C();
  }
  return operator new(8 * a2);
}

void sub_10000B9DC(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_10000BA38(exception, a1);
}

void sub_10000BA24(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_10000BA38(std::logic_error *a1, const char *a2)
{
  result = std::logic_error::logic_error(a1, a2);
  return result;
}

void sub_10000BA6C()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

uint64_t sub_10000BAA0(uint64_t *a1, uint64_t **a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_10000B98C();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  float v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_10000BCA4(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = &v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  float v15 = v11;
  uint64_t v16 = &v10[24 * v9];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  *((void *)v11 + 2) = 0;
  sub_10000BBB8(v11, *a2, a2[1], a2[1] - *a2);
  v15 += 24;
  sub_10000BC2C(a1, v14);
  uint64_t v12 = a1[1];
  sub_10000BE10((uint64_t)v14);
  return v12;
}

void sub_10000BBA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10000BE10((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_10000BBB8(char *result, uint64_t *a2, uint64_t *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    result = sub_10000B948(result, a4);
    uint64_t v7 = (void *)*((void *)v6 + 1);
    while (a2 != a3)
    {
      uint64_t v8 = *a2++;
      *v7++ = v8;
    }
    *((void *)v6 + 1) = v7;
  }
  return result;
}

void sub_10000BC10(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10000BC2C(uint64_t *a1, void *a2)
{
  uint64_t result = sub_10000BCEC((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_10000BCA4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_10000BA6C();
  }
  return operator new(24 * a2);
}

uint64_t sub_10000BCEC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 8) = 0;
      long long v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - 24) = v8;
      *(void *)(v7 - 8) = a3[2];
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      uint64_t v7 = *((void *)&v14 + 1) - 24;
      *((void *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_10000BD90((uint64_t)v11);
  return v9;
}

uint64_t sub_10000BD90(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_10000BDC8(a1);
  }
  return a1;
}

void sub_10000BDC8(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = *(void **)v1;
    if (*(void *)v1)
    {
      *(void *)(v1 + 8) = v3;
      operator delete(v3);
    }
    v1 += 24;
  }
}

uint64_t sub_10000BE10(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_10000BE48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != a2)
  {
    uint64_t v5 = *(void **)(v2 - 24);
    *(void *)(a1 + 16) = v2 - 24;
    if (v5)
    {
      *(void *)(v2 - 16) = v5;
      operator delete(v5);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 24;
    }
  }
}

long long *sub_10000BEA4(long long *a1, long long *a2, void **a3)
{
  uint64_t v3 = a1;
  uint64_t v6 = a3;
  if (a1 == a2) {
    return a1;
  }
  unint64_t v4 = a2;
  do
  {
    sub_10000BF08(&v6, v3);
    uint64_t v3 = (long long *)((char *)v3 + 24);
  }
  while (v3 != v4);
  return v4;
}

void ***sub_10000BF08(void ***a1, long long *a2)
{
  unint64_t v4 = *a1;
  uint64_t v5 = (char *)(*a1)[1];
  uint64_t v6 = *a1;
  uint64_t v9 = (char *)v6[2];
  uint64_t v7 = (uint64_t)(v6 + 2);
  long long v8 = v9;
  if (v5 >= v9)
  {
    unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((v5 - (unsigned char *)*v4) >> 3);
    unint64_t v13 = v12 + 1;
    if (v12 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_10000B98C();
    }
    unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((v8 - (unsigned char *)*v4) >> 3);
    if (2 * v14 > v13) {
      unint64_t v13 = 2 * v14;
    }
    if (v14 >= 0x555555555555555) {
      unint64_t v15 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v15 = v13;
    }
    if (v15) {
      uint64_t v16 = (char *)sub_10000BCA4(v7, v15);
    }
    else {
      uint64_t v16 = 0;
    }
    float v17 = &v16[24 * v12];
    float32x2_t v18 = &v16[24 * v15];
    long long v19 = *a2;
    *((void *)v17 + 2) = *((void *)a2 + 2);
    *(_OWORD *)float v17 = v19;
    uint64_t v11 = v17 + 24;
    float32x2_t v21 = (char *)*v4;
    float32x2_t v20 = (char *)v4[1];
    if (v20 != *v4)
    {
      do
      {
        long long v22 = *(_OWORD *)(v20 - 24);
        *((void *)v17 - 1) = *((void *)v20 - 1);
        *(_OWORD *)(v17 - 24) = v22;
        v17 -= 24;
        v20 -= 24;
      }
      while (v20 != v21);
      float32x2_t v20 = (char *)*v4;
    }
    *unint64_t v4 = v17;
    v4[1] = v11;
    v4[2] = v18;
    if (v20) {
      operator delete(v20);
    }
  }
  else
  {
    long long v10 = *a2;
    *((void *)v5 + 2) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v5 = v10;
    uint64_t v11 = v5 + 24;
  }
  v4[1] = v11;
  return a1;
}

__n128 sub_10000C03C(uint64_t a1, __n128 *a2)
{
  unint64_t v4 = *(void **)a1;
  if (v4)
  {
    *(void *)(a1 + 8) = v4;
    operator delete(v4);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
  }
  __n128 result = *a2;
  *(__n128 *)a1 = *a2;
  *(void *)(a1 + 16) = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

__n128 *sub_10000C090(__n128 *a1, __n128 *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  if (a1 != a2)
  {
    do
    {
      sub_10000C03C(a3, v4);
      unint64_t v4 = (__n128 *)((char *)v4 + 24);
      a3 += 24;
    }
    while (v4 != a2);
    return a2;
  }
  return v4;
}

void *sub_10000C0F0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_10000BA6C();
  }
  return operator new(4 * a2);
}

void sub_10000C2A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000C414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_1000094F4((uint64_t)va);

  _Unwind_Resume(a1);
}

void sub_10000C548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000094F4((uint64_t)&a9);

  _Unwind_Resume(a1);
}

void sub_10000C6C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  sub_1000094F4((uint64_t)va);
  sub_10000B6BC((uint64_t)va1);

  _Unwind_Resume(a1);
}

void sub_10000C810(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000094F4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10000CA08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (__p)
  {
    a12 = (uint64_t)__p;
    operator delete(__p);
  }
  sub_1002D1A1C(&a9);
  sub_1000094F4((uint64_t)&a17);

  _Unwind_Resume(a1);
}

void sub_10000CC94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000CDEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10000CE64(uint64_t result, int a2, int a3, unsigned int a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6 = a6;
  *(_DWORD *)__n128 result = a4 & 0xFFF | 0x42FF0000;
  *(_DWORD *)(result + 4) = 2;
  *(_DWORD *)(result + 8) = a2;
  *(_DWORD *)(result + 12) = a3;
  *(void *)(result + 16) = a5;
  *(void *)(result + 24) = a5;
  *(void *)(result + 80) = 0;
  *(void *)(result + 64) = result + 8;
  *(void *)(result + 72) = result + 80;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(void *)(result + 88) = 0;
  if (a3 * (uint64_t)a2 && !a5)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    qmemcpy((void *)sub_1002D19D8(&v11, 30), "total() == 0 || data != __null", 30);
    sub_1002D2278(-215, &v11, "Mat", "/Library/Caches/com.apple.xbs/Sources/Measure/.OpenCV/opencv2.framework/Headers/core/mat.inl.hpp", 500);
  }
  uint64_t v7 = (((a4 >> 3) & 0x1FF) + 1) << ((0xFA50u >> (2 * (a4 & 7))) & 3);
  uint64_t v8 = a3 * (uint64_t)(int)v7;
  if (!a6)
  {
    uint64_t v6 = a3 * (uint64_t)(int)v7;
LABEL_11:
    *(_DWORD *)result |= 0x4000u;
    goto LABEL_12;
  }
  if (a6 % ((0x88442211uLL >> (4 * (a4 & 7))) & 0xF))
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    qmemcpy((void *)sub_1002D19D8(&v11, 31), "Step must be a multiple of esz1", 31);
    sub_1002D2278(-13, &v11, "Mat", "/Library/Caches/com.apple.xbs/Sources/Measure/.OpenCV/opencv2.framework/Headers/core/mat.inl.hpp", 515);
  }
  if (v8 == a6 || *(_DWORD *)(result + 8) == 1) {
    goto LABEL_11;
  }
LABEL_12:
  uint64_t v9 = *(uint64_t **)(result + 72);
  uint64_t *v9 = v6;
  v9[1] = v7;
  uint64_t v10 = *(void *)(result + 24) + v6 * *(int *)(result + 8);
  *(void *)(result + 32) = v10 - v6 + v8;
  *(void *)(result + 40) = v10;
  return result;
}

void sub_10000D028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10000D058(uint64_t *a1, uint64_t **a2, uint64_t **a3, unint64_t a4)
{
  uint64_t v8 = (uint64_t)(a1 + 2);
  uint64_t v9 = (uint64_t **)*a1;
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 3) < a4)
  {
    sub_10000D1E4(a1);
    if (a4 > 0xAAAAAAAAAAAAAAALL) {
      sub_10000B98C();
    }
    unint64_t v10 = 0x5555555555555556 * ((a1[2] - *a1) >> 3);
    if (v10 <= a4) {
      unint64_t v10 = a4;
    }
    if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 3) >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v10;
    }
    sub_10000D220(a1, v11);
    uint64_t v12 = sub_10000D274(v8, a2, a3, a1[1]);
    goto LABEL_11;
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[1] - (uint64_t)v9) >> 3) < a4)
  {
    uint64_t v13 = &a2[(a1[1] - (uint64_t)v9) >> 3];
    sub_10000D3B0((uint64_t)&v20, a2, v13, v9);
    uint64_t v12 = sub_10000D274(v8, v13, a3, a1[1]);
LABEL_11:
    a1[1] = v12;
    return;
  }
  sub_10000D3B0((uint64_t)&v21, a2, a3, v9);
  uint64_t v15 = v14;
  uint64_t v16 = a1[1];
  if (v16 != v14)
  {
    uint64_t v17 = a1[1];
    do
    {
      long long v19 = *(void **)(v17 - 24);
      v17 -= 24;
      float32x2_t v18 = v19;
      if (v19)
      {
        *(void *)(v16 - 16) = v18;
        operator delete(v18);
      }
      uint64_t v16 = v17;
    }
    while (v17 != v15);
  }
  a1[1] = v15;
}

void sub_10000D1D4(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_10000D1DC(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_10000D1E4(uint64_t *a1)
{
  if (*a1)
  {
    sub_10000B8F0(a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

char *sub_10000D220(void *a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_10000B98C();
  }
  __n128 result = (char *)sub_10000BCA4((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

uint64_t sub_10000D274(uint64_t a1, uint64_t **a2, uint64_t **a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *(void *)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      *(void *)(v4 + 16) = 0;
      sub_10000BBB8((char *)v4, *v6, v6[1], v6[1] - *v6);
      uint64_t v4 = v11 + 24;
      v11 += 24;
      v6 += 3;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  sub_10000D328((uint64_t)v8);
  return v4;
}

void sub_10000D314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10000D328(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_10000D360(a1);
  }
  return a1;
}

void sub_10000D360(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  if (v1 != v2)
  {
    uint64_t v3 = **(void **)(a1 + 16);
    do
    {
      uint64_t v5 = *(void **)(v3 - 24);
      v3 -= 24;
      uint64_t v4 = v5;
      if (v5)
      {
        *(void *)(v1 - 16) = v4;
        operator delete(v4);
      }
      uint64_t v1 = v3;
    }
    while (v3 != v2);
  }
}

uint64_t **sub_10000D3B0(uint64_t a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t v5 = a2;
  if (a2 != a3)
  {
    do
    {
      if (v5 != a4) {
        sub_10000D420(a4, *v5, v5[1], v5[1] - *v5);
      }
      v5 += 3;
      a4 += 3;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

char *sub_10000D420(void *a1, uint64_t *a2, uint64_t *a3, unint64_t a4)
{
  uint64_t v6 = a2;
  uint64_t v8 = a1[2];
  __n128 result = (char *)*a1;
  if (a4 <= (v8 - (uint64_t)result) >> 3)
  {
    float32x2_t v18 = (char *)a1[1];
    uint64_t v13 = a1 + 1;
    uint64_t v12 = v18;
    unint64_t v19 = (v18 - result) >> 3;
    if (v19 >= a4)
    {
      int32x2_t v26 = result;
      if (a2 != a3)
      {
        float32x2_t v27 = result;
        do
        {
          uint64_t v28 = *v6++;
          *(void *)float32x2_t v27 = v28;
          v27 += 8;
          v26 += 8;
        }
        while (v6 != a3);
      }
      uint64_t v17 = (char *)(v26 - result);
      uint64_t v12 = result;
    }
    else
    {
      char v20 = &a2[v19];
      if (v12 != result)
      {
        uint64_t v21 = 8 * v19;
        do
        {
          uint64_t v22 = *v6++;
          *(void *)__n128 result = v22;
          result += 8;
          v21 -= 8;
        }
        while (v21);
      }
      float32x2_t v23 = v12;
      if (v20 != a3)
      {
        int32x2_t v24 = v12;
        do
        {
          uint64_t v25 = *v20++;
          *(void *)int32x2_t v24 = v25;
          v24 += 8;
          v23 += 8;
        }
        while (v20 != a3);
      }
      uint64_t v17 = (char *)(v23 - v12);
    }
  }
  else
  {
    if (result)
    {
      a1[1] = result;
      operator delete(result);
      uint64_t v8 = 0;
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
    }
    if (a4 >> 61) {
      sub_10000B98C();
    }
    uint64_t v10 = v8 >> 2;
    if (v8 >> 2 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v11 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    __n128 result = sub_10000B948(a1, v11);
    uint64_t v14 = (char *)a1[1];
    uint64_t v13 = a1 + 1;
    uint64_t v12 = v14;
    uint64_t v15 = v14;
    if (v6 != a3)
    {
      uint64_t v15 = v12;
      do
      {
        uint64_t v16 = *v6++;
        *(void *)uint64_t v15 = v16;
        v15 += 8;
      }
      while (v6 != a3);
    }
    uint64_t v17 = (char *)(v15 - v12);
  }
  void *v13 = &v17[(void)v12];
  return result;
}

char *sub_10000D574(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = result;
  uint64_t v8 = *((void *)result + 2);
  char v9 = *(char **)result;
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - *(void *)result) >> 3) < a4)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      void *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 > 0xAAAAAAAAAAAAAAALL) {
      sub_10000B98C();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * (v8 >> 3);
    uint64_t v11 = 2 * v10;
    if (2 * v10 <= a4) {
      uint64_t v11 = a4;
    }
    if (v10 >= 0x555555555555555) {
      unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v12 = v11;
    }
    __n128 result = sub_10000D220(v7, v12);
    uint64_t v14 = (char *)v7[1];
    uint64_t v13 = (void **)(v7 + 1);
    char v9 = v14;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      float32x2_t v18 = v9;
      unint64_t v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  uint64_t v13 = (void **)(result + 8);
  uint64_t v15 = (unsigned char *)*((void *)result + 1);
  if (0xAAAAAAAAAAAAAAABLL * ((v15 - v9) >> 3) >= a4) {
    goto LABEL_16;
  }
  uint64_t v16 = &__src[8 * ((v15 - v9) >> 3)];
  if (v15 != v9)
  {
    __n128 result = (char *)memmove(*(void **)result, __src, v15 - v9);
    char v9 = (char *)*v13;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    float32x2_t v18 = v9;
    unint64_t v19 = v16;
LABEL_18:
    __n128 result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  void *v13 = &v9[v17];
  return result;
}

id sub_10000D940(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_10000D9BC;
  v2[3] = &unk_100485230;
  v2[4] = *(void *)(a1 + 32);
  return +[UIView performWithoutAnimation:v2];
}

id sub_10000D9BC(uint64_t a1)
{
  return [*(id *)(a1 + 32) counterRotateChildrenForBoundsOrOrientationChange];
}

id sub_10000E034(uint64_t a1)
{
  return [*(id *)(a1 + 32) counterRotateChildrenForBoundsOrOrientationChange];
}

void sub_10000E2A4()
{
  v0 = (objc_class *)objc_opt_class();
  InstanceMethod = class_getInstanceMethod(v0, "sizeThatFits:");
  uint64_t v2 = class_getInstanceMethod(v0, "xxx_sizeThatFits:");
  Implementation = method_getImplementation(v2);
  TypeEncoding = method_getTypeEncoding(v2);
  if (class_addMethod(v0, "sizeThatFits:", Implementation, TypeEncoding))
  {
    uint64_t v5 = method_getImplementation(InstanceMethod);
    uint64_t v6 = method_getTypeEncoding(InstanceMethod);
    class_replaceMethod(v0, "xxx_sizeThatFits:", v5, v6);
  }
  else
  {
    method_exchangeImplementations(InstanceMethod, v2);
  }
}

int main(int argc, const char **argv, const char **envp)
{
  int v3 = static CommandLine.argc.getter();
  uint64_t v4 = (char **)static CommandLine.unsafeArgv.getter();
  sub_10000E51C();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v6 = NSStringFromClass(ObjCClassFromMetadata);
  if (!v6)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = (NSString *)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for AppDelegate();
  uint64_t v7 = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v8 = NSStringFromClass(v7);
  if (!v8)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = (NSString *)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  UIApplicationMain(v3, v4, v6, v8);

  return 0;
}

unint64_t sub_10000E51C()
{
  unint64_t result = qword_1004C32E8;
  if (!qword_1004C32E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1004C32E8);
  }
  return result;
}

uint64_t OpenCVWrapperContours.startIndex.getter()
{
  return 0;
}

uint64_t variable initialization expression of SCNPatchDebugger.SKDebugRenderer.patchPadding()
{
  return 5;
}

uint64_t variable initialization expression of SCNPatchDebugger.SKDebugRenderer.bytesPerPixel()
{
  return 4;
}

_UNKNOWN **variable initialization expression of SCNPatchDebugger.SKDebugRenderer.textureBgColor()
{
  return &off_100485460;
}

uint64_t variable initialization expression of SCNPatchDebugger.SKDebugRenderer.renderEmboss()
{
  return 1;
}

double variable initialization expression of SCNPatchDebugger.SKDebugRenderer.textureBuffer@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 32) = 1;
  return result;
}

uint64_t variable initialization expression of SCNPatchDebugger.SKDebugRenderer.$__lazy_storage_$_patchSizeInPixels()
{
  return 0;
}

uint64_t variable initialization expression of RectangleLabelData.edge1RoundedMeasurement()
{
  return 0x100000000;
}

void *variable initialization expression of PointTrail.pointNodes()
{
  return &_swiftEmptyArrayStorage;
}

double variable initialization expression of PointTrail.minDistanceSquared()
{
  return 0.0;
}

uint64_t variable initialization expression of PointTrail.isStarted()
{
  return 0;
}

void type metadata accessor for CGPath(uint64_t a1)
{
}

void type metadata accessor for CVPixelBufferLockFlags(uint64_t a1)
{
}

void type metadata accessor for UIDeviceOrientation(uint64_t a1)
{
}

void type metadata accessor for CFRunLoop(uint64_t a1)
{
}

void type metadata accessor for CFRunLoopObserver(uint64_t a1)
{
}

void type metadata accessor for CVBuffer(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for VTPixelTransferSession(uint64_t a1)
{
}

__n128 initializeWithTake for SnapPoint(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_10000E690(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

__n128 initializeWithTake for SnapPointsState(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

__n128 initializeWithTake for LabelRenderEvent(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PersonHeightInstrument.HeightResultContainer.HeightResult(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PersonHeightInstrument.HeightResultContainer.HeightResult(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for RubberBand(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RubberBand(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for vImage_Buffer(uint64_t a1)
{
}

void type metadata accessor for Name(uint64_t a1)
{
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

__n128 initializeWithTake for Measurements(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_10000E81C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10000E83C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for Corner(uint64_t a1)
{
}

__n128 sub_10000E87C(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_10000E890(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10000E8B0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

void type metadata accessor for simd_float4x4(uint64_t a1)
{
}

uint64_t sub_10000E900(uint64_t a1, uint64_t a2)
{
  return sub_1000108D0(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

NSNumber sub_10000E930()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_10000E938(uint64_t a1, uint64_t a2)
{
  uint64_t result = static CGFloat._forceBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_10000E98C(uint64_t a1, uint64_t a2)
{
  char v3 = static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_10000E9E4@<X0>(void *a1@<X8>)
{
  uint64_t result = static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = v3;
  return result;
}

void *sub_10000EA0C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

BOOL sub_10000EA20(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_10000EA50(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_10000EA64(void *result)
{
  *v1 &= *result;
  return result;
}

uint64_t sub_10000EA78(uint64_t a1, uint64_t a2)
{
  return sub_1000108D0(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

id sub_10000EA94()
{
  return *v0;
}

uint64_t sub_10000EA9C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void sub_10000EAA4(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_10000EAAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

uint64_t sub_10000EAC4()
{
  return _CFObject.hashValue.getter();
}

uint64_t sub_10000EB10()
{
  return _CFObject.hash(into:)();
}

Swift::Int sub_10000EB68()
{
  return sub_10000FF14();
}

uint64_t sub_10000EB80()
{
  swift_getWitnessTable();

  return static _CFObject.== infix(_:_:)();
}

uint64_t sub_10000EBEC(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_10000EC64(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_10000ECE4@<X0>(void *a1@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void *sub_10000ED28@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_10000ED3C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_10000ED50@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_10000ED7C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_10000EDA0(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_10000EDB4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_10000EDC8(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_10000EDDC(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_10000EDF0(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_10000EE04()
{
  return *v0 == 0;
}

void *sub_10000EE14(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_10000EE28@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10000EE34()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10000EE44(uint64_t a1)
{
  uint64_t v2 = sub_10000F294(&qword_1004C38A0, type metadata accessor for ARError);

  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_10000EEB0(uint64_t a1)
{
  uint64_t v2 = sub_10000F294(&qword_1004C38A0, type metadata accessor for ARError);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_10000EF1C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10000F294(&qword_1004C38A0, type metadata accessor for ARError);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_10000EFAC()
{
  id v1 = *v0;
  uint64_t v2 = NSObject.hashValue.getter();

  return v2;
}

uint64_t sub_10000EFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000F294(&qword_1004C38A0, type metadata accessor for ARError);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_10000F060()
{
  return Hasher._finalize()();
}

void *sub_10000F0C0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_10000F0D0(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_10000F0DC()
{
  swift_getWitnessTable();

  return static _CFObject.== infix(_:_:)();
}

uint64_t sub_10000F148()
{
  sub_10000F294(&qword_1004C3630, type metadata accessor for Name);
  sub_10000F294(&qword_1004C3638, type metadata accessor for Name);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000F204()
{
  return sub_10000F294(&qword_1004C3618, type metadata accessor for Name);
}

uint64_t sub_10000F24C()
{
  return sub_10000F294(&qword_1004C3620, type metadata accessor for Name);
}

uint64_t sub_10000F294(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000F2DC()
{
  return sub_10000F294(&qword_1004C3628, type metadata accessor for Name);
}

uint64_t sub_10000F324()
{
  sub_10000F294(&qword_1004C3978, type metadata accessor for UIContentSizeCategory);
  sub_10000F294((unint64_t *)&unk_1004C3980, type metadata accessor for UIContentSizeCategory);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

double sub_10000F3E0@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_10000F3EC()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000F4B4()
{
  sub_10000F294(&qword_1004C3948, type metadata accessor for ActivityType);
  sub_10000F294(&qword_1004C3950, type metadata accessor for ActivityType);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000F570()
{
  sub_10000F294((unint64_t *)&qword_1004CA040, type metadata accessor for NSKeyValueChangeKey);
  sub_10000F294(&qword_1004C3940, type metadata accessor for NSKeyValueChangeKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000F62C()
{
  sub_10000F294((unint64_t *)&qword_1004C46E0, type metadata accessor for LaunchOptionsKey);
  sub_10000F294(&qword_1004C3910, type metadata accessor for LaunchOptionsKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000F6E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10000F714()
{
  sub_10000F294((unint64_t *)&unk_1004C6A50, type metadata accessor for VNImageOption);
  sub_10000F294(&qword_1004C3990, type metadata accessor for VNImageOption);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000F7D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1000118F8(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_10000F810()
{
  sub_10000F294((unint64_t *)&qword_1004C3958, type metadata accessor for FileAttributeKey);
  sub_10000F294(&qword_1004C3960, type metadata accessor for FileAttributeKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000F8CC()
{
  sub_10000F294((unint64_t *)&qword_1004C39E0, type metadata accessor for Key);
  sub_10000F294(&qword_1004C39E8, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000F988()
{
  sub_10000F294(&qword_1004C38F8, type metadata accessor for SCNHitTestOption);
  sub_10000F294((unint64_t *)&unk_1004C3900, type metadata accessor for SCNHitTestOption);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000FA44(uint64_t a1)
{
  uint64_t v2 = sub_10000F294(&qword_1004C3868, type metadata accessor for ARError);

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10000FAB0(uint64_t a1)
{
  uint64_t v2 = sub_10000F294(&qword_1004C3868, type metadata accessor for ARError);

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10000FB20(uint64_t a1)
{
  uint64_t v2 = sub_10000F294(&qword_1004C38A0, type metadata accessor for ARError);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_10000FB8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000F294(&qword_1004C38A0, type metadata accessor for ARError);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

BOOL sub_10000FC10(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_10000FC24()
{
  sub_10000F294((unint64_t *)&qword_1004C3928, type metadata accessor for DocumentAttributeKey);
  sub_10000F294((unint64_t *)&unk_1004C3930, type metadata accessor for DocumentAttributeKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000FCE0()
{
  sub_10000F294(&qword_1004C3918, type metadata accessor for DocumentType);
  sub_10000F294(&qword_1004C3920, type metadata accessor for DocumentType);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000FD9C()
{
  sub_10000F294(&qword_1004C3968, type metadata accessor for SCNShaderModifierEntryPoint);
  sub_10000F294(&qword_1004C3970, type metadata accessor for SCNShaderModifierEntryPoint);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000FE58()
{
  return _CFObject.hashValue.getter();
}

uint64_t sub_10000FEA4()
{
  return _CFObject.hash(into:)();
}

Swift::Int sub_10000FEFC()
{
  return sub_10000FF14();
}

Swift::Int sub_10000FF14()
{
  return Hasher._finalize()();
}

uint64_t sub_10000FF78()
{
  sub_10000F294((unint64_t *)&qword_1004C39C0, type metadata accessor for AttributeName);
  sub_10000F294(&qword_1004C39C8, type metadata accessor for AttributeName);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100010034()
{
  sub_10000F294(&qword_1004C39B0, type metadata accessor for TraitKey);
  sub_10000F294(&qword_1004C39B8, type metadata accessor for TraitKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_1000100F0@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void type metadata accessor for SCNHitTestOption(uint64_t a1)
{
}

void type metadata accessor for LaunchOptionsKey(uint64_t a1)
{
}

void type metadata accessor for CFNumber(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for CGImagePropertyOrientation(uint64_t a1)
{
}

__n128 sub_10001019C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1000101A8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

void type metadata accessor for SCNVector4(uint64_t a1)
{
}

void type metadata accessor for ARError(uint64_t a1)
{
}

void type metadata accessor for DocumentType(uint64_t a1)
{
}

void type metadata accessor for DocumentAttributeKey(uint64_t a1)
{
}

void type metadata accessor for SCNDebugOptions(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

void type metadata accessor for ActivityType(uint64_t a1)
{
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void type metadata accessor for CGColorSpace(uint64_t a1)
{
}

void type metadata accessor for SCNShaderModifierEntryPoint(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for CardInteractionState.State(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 sub_1000102C4(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t sub_1000102E8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 128)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100010308(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 128) = v3;
  return result;
}

void type metadata accessor for CATransform3D(uint64_t a1)
{
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
}

void type metadata accessor for VNImageOption(uint64_t a1)
{
}

uint64_t sub_100010390(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t sub_1000103A4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 12)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1000103C4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 12) = v3;
  return result;
}

void type metadata accessor for SCNVector3(uint64_t a1)
{
}

void type metadata accessor for Weight(uint64_t a1)
{
}

void type metadata accessor for TraitKey(uint64_t a1)
{
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

void type metadata accessor for FeatureKey(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

uint64_t sub_100010468()
{
  return sub_10000F294(&qword_1004C3700, type metadata accessor for Key);
}

uint64_t sub_1000104B0()
{
  return sub_10000F294(&qword_1004C3708, type metadata accessor for Key);
}

uint64_t sub_1000104F8()
{
  sub_10000F294(&qword_1004C39D0, type metadata accessor for FeatureKey);
  sub_10000F294(&qword_1004C39D8, type metadata accessor for FeatureKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_1000105B4()
{
  return sub_10000F294(&qword_1004C3710, type metadata accessor for FeatureKey);
}

uint64_t sub_1000105FC()
{
  return sub_10000F294(&qword_1004C3718, type metadata accessor for FeatureKey);
}

uint64_t sub_100010644()
{
  return sub_10000F294(&qword_1004C3720, type metadata accessor for FeatureKey);
}

uint64_t sub_10001068C()
{
  return sub_10000F294(&qword_1004C3728, type metadata accessor for AttributeName);
}

uint64_t sub_1000106D4()
{
  return sub_10000F294(&qword_1004C3730, type metadata accessor for AttributeName);
}

uint64_t sub_10001071C()
{
  return sub_10000F294(&qword_1004C3738, type metadata accessor for TraitKey);
}

uint64_t sub_100010764()
{
  return sub_10000F294(&qword_1004C3740, type metadata accessor for TraitKey);
}

uint64_t sub_1000107AC()
{
  return sub_10000F294(&qword_1004C3748, type metadata accessor for TraitKey);
}

uint64_t sub_1000107F4()
{
  return sub_10000F294(&qword_1004C3750, type metadata accessor for Weight);
}

uint64_t sub_10001083C()
{
  return sub_10000F294(&qword_1004C3758, type metadata accessor for Weight);
}

uint64_t sub_100010884()
{
  return Double.hashValue.getter(*v0);
}

void sub_10001088C()
{
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  Hasher._combine(_:)(v1);
}

uint64_t sub_1000108C0()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t sub_1000108D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100010914()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100010968()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_1000109DC(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1000109F0()
{
  return sub_10000F294(&qword_1004C3760, type metadata accessor for Weight);
}

uint64_t sub_100010A38()
{
  return sub_10000F294(&qword_1004C3768, type metadata accessor for VNImageOption);
}

uint64_t sub_100010A80()
{
  return sub_10000F294(&qword_1004C3770, type metadata accessor for VNImageOption);
}

uint64_t sub_100010AC8()
{
  return sub_10000F294(&qword_1004C3778, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_100010B10()
{
  return sub_10000F294(&qword_1004C3780, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_100010B58()
{
  return sub_10000F294(&qword_1004C3788, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_100010BA0()
{
  return sub_10000F294(&qword_1004C3790, type metadata accessor for SCNShaderModifierEntryPoint);
}

uint64_t sub_100010BE8()
{
  return sub_10000F294(&qword_1004C3798, type metadata accessor for SCNShaderModifierEntryPoint);
}

uint64_t sub_100010C30()
{
  return sub_10000F294(&qword_1004C37A0, type metadata accessor for CGColorSpace);
}

uint64_t sub_100010C78()
{
  return sub_10000F294(&qword_1004C37A8, type metadata accessor for FileAttributeKey);
}

uint64_t sub_100010CC0()
{
  return sub_10000F294(&qword_1004C37B0, type metadata accessor for FileAttributeKey);
}

uint64_t sub_100010D08()
{
  return sub_10000F294(&qword_1004C37B8, type metadata accessor for ActivityType);
}

uint64_t sub_100010D50()
{
  return sub_10000F294(&qword_1004C37C0, type metadata accessor for ActivityType);
}

uint64_t sub_100010D98()
{
  return sub_10000F294(&qword_1004C37C8, type metadata accessor for ActivityType);
}

uint64_t sub_100010DE0()
{
  return sub_10000F294(&qword_1004C37D0, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_100010E28()
{
  return sub_10000F294(&qword_1004C37D8, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_100010E70()
{
  return sub_10000F294(&qword_1004C37E0, type metadata accessor for SCNDebugOptions);
}

uint64_t sub_100010EB8()
{
  return sub_10000F294(&qword_1004C37E8, type metadata accessor for SCNDebugOptions);
}

uint64_t sub_100010F00()
{
  return sub_10000F294(&qword_1004C37F0, type metadata accessor for DocumentAttributeKey);
}

uint64_t sub_100010F48()
{
  return sub_10000F294(&qword_1004C37F8, type metadata accessor for DocumentAttributeKey);
}

uint64_t sub_100010F90()
{
  return sub_10000F294(&qword_1004C3800, type metadata accessor for DocumentType);
}

uint64_t sub_100010FD8()
{
  return sub_10000F294(&qword_1004C3808, type metadata accessor for DocumentType);
}

uint64_t sub_100011020()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1000110AC()
{
  return sub_10000F294(&qword_1004C3810, type metadata accessor for DocumentType);
}

uint64_t sub_1000110F4()
{
  return sub_10000F294(&qword_1004C3818, type metadata accessor for ARError);
}

uint64_t sub_10001113C()
{
  return sub_10000F294(&qword_1004C3820, type metadata accessor for ARError);
}

uint64_t sub_100011184()
{
  return sub_10000F294(&qword_1004C3828, type metadata accessor for LaunchOptionsKey);
}

uint64_t sub_1000111CC()
{
  return sub_10000F294(&qword_1004C3830, type metadata accessor for LaunchOptionsKey);
}

uint64_t sub_100011214()
{
  return sub_10000F294(&qword_1004C3838, type metadata accessor for SCNHitTestOption);
}

uint64_t sub_10001125C()
{
  return sub_10000F294(&qword_1004C3840, type metadata accessor for SCNHitTestOption);
}

uint64_t sub_1000112A4()
{
  return sub_10000F294(&qword_1004C3848, type metadata accessor for SCNHitTestOption);
}

uint64_t sub_1000112EC()
{
  return sub_10000F294(&qword_1004C3850, type metadata accessor for LaunchOptionsKey);
}

uint64_t sub_100011334()
{
  return sub_10000F294((unint64_t *)&qword_1004C3858, type metadata accessor for CFString);
}

uint64_t sub_10001137C()
{
  return sub_10000F294(&qword_1004C3860, type metadata accessor for CFString);
}

uint64_t sub_1000113C4()
{
  return sub_10000F294(&qword_1004C3868, type metadata accessor for ARError);
}

uint64_t sub_10001140C()
{
  return sub_10000F294(&qword_1004C3870, type metadata accessor for ARError);
}

uint64_t sub_100011454()
{
  return sub_10000F294(&qword_1004C3878, type metadata accessor for ARError);
}

uint64_t sub_10001149C()
{
  return sub_10000F294(&qword_1004C3880, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_1000114F8()
{
  return sub_10000F294(&qword_1004C3888, type metadata accessor for Code);
}

unint64_t sub_100011544()
{
  unint64_t result = qword_1004C3890;
  if (!qword_1004C3890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C3890);
  }
  return result;
}

uint64_t sub_100011598()
{
  return sub_10000F294(&qword_1004C3898, type metadata accessor for Code);
}

uint64_t sub_1000115E0()
{
  return sub_10000F294(&qword_1004C38A0, type metadata accessor for ARError);
}

uint64_t sub_100011628()
{
  return sub_10000F294(&qword_1004C38A8, type metadata accessor for DocumentAttributeKey);
}

uint64_t sub_100011670()
{
  return sub_10000F294(&qword_1004C38B0, type metadata accessor for SCNDebugOptions);
}

uint64_t sub_1000116B8()
{
  return sub_10000F294(&qword_1004C38B8, type metadata accessor for SCNDebugOptions);
}

uint64_t sub_100011700()
{
  return sub_10000F294(&qword_1004C38C0, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_100011748()
{
  return sub_10000F294(&qword_1004C38C8, type metadata accessor for FileAttributeKey);
}

uint64_t sub_100011790()
{
  return sub_10000F294(&qword_1004C38D0, type metadata accessor for CGColorSpace);
}

uint64_t sub_1000117D8()
{
  return sub_10000F294(&qword_1004C38D8, type metadata accessor for SCNShaderModifierEntryPoint);
}

uint64_t sub_100011820()
{
  return sub_10000F294(&qword_1004C38E0, type metadata accessor for VNImageOption);
}

uint64_t sub_100011868()
{
  return sub_10000F294(&qword_1004C38E8, type metadata accessor for AttributeName);
}

uint64_t sub_1000118B0()
{
  return sub_10000F294(&qword_1004C38F0, type metadata accessor for Key);
}

uint64_t sub_1000118F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

unint64_t sub_100011930()
{
  unint64_t result = qword_1004C39A8;
  if (!qword_1004C39A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C39A8);
  }
  return result;
}

void type metadata accessor for Event(uint64_t a1)
{
}

void sub_100011998(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_1000119E0()
{
  return sub_10000F294(&qword_1004C3A00, type metadata accessor for Event);
}

uint64_t sub_100011A28()
{
  return sub_10000F294(&qword_1004C3A08, type metadata accessor for Event);
}

uint64_t sub_100011A70()
{
  return sub_10000F294(&qword_1004C3A10, type metadata accessor for Event);
}

uint64_t sub_100011AB8()
{
  return sub_10000F294(&qword_1004C3A18, type metadata accessor for Event);
}

__n128 initializeWithCopy for CardInteractionState.State(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for CardInteractionState.State(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CardInteractionState(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 33) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CardInteractionState()
{
  return &type metadata for CardInteractionState;
}

uint64_t sub_100011BE8()
{
  uint64_t result = Contexts.UIKit.init()();
  qword_1004F7DD0 = result;
  return result;
}

id sub_100011C08@<X0>(void *a1@<X8>)
{
  if (qword_1004C27C0 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1004F7DD0;
  *a1 = qword_1004F7DD0;

  return v2;
}

unint64_t sub_100011C7C()
{
  unint64_t result = qword_1004CF6B0;
  if (!qword_1004CF6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CF6B0);
  }
  return result;
}

unint64_t sub_100011CD0(uint64_t a1)
{
  unint64_t result = sub_100011CF8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100011CF8()
{
  unint64_t result = qword_1004C3C28;
  if (!qword_1004C3C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C3C28);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CardInteractionState.State(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 32) = 0;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 33) = v3;
  return result;
}

uint64_t sub_100011D80(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100011DA0(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 32) = 1;
  }
  else
  {
    *(unsigned char *)(result + 32) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardInteractionState.State()
{
  return &type metadata for CardInteractionState.State;
}

BOOL sub_100011DD4(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 32);
  unsigned int v3 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v4 = v2 & v3;
  if ((v2 & 1) == 0 && (v3 & 1) == 0) {
    return CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2);
  }
  return v4;
}

BOOL sub_100011E18(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_100011E2C()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100011E74()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100011EA0()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

UIContentSizeCategory sub_100011EE4()
{
  qword_1004F7DD8 = (uint64_t)UIContentSizeCategoryLarge;
  return UIContentSizeCategoryLarge;
}

uint64_t sub_100011EFC()
{
  _StringGuts.grow(_:)(33);
  if (qword_1004C2A18 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v0._object = (void *)0x800000010041ECA0;
  v0._countAndFlagsBits = 0xD00000000000001FLL;
  String.append(_:)(v0);
  NSString v1 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1004F7DE0 = (uint64_t)v1;
  return result;
}

void sub_100011FD0()
{
  ObjectType = (objc_class *)swift_getObjectType();
  int v2 = &qword_1004C3000;
  uint64_t v3 = OBJC_IVAR____TtC7Measure30AccessiblityUISettingsObserver_eventLookup;
  sub_100012894(&qword_1004C3C68);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003F8720;
  *(void *)(inited + 32) = UIAccessibilityInvertColorsStatusDidChangeNotification;
  *(unsigned char *)(inited + 40) = 0;
  *(void *)(inited + 48) = UIAccessibilityDarkerSystemColorsStatusDidChangeNotification;
  *(unsigned char *)(inited + 56) = 1;
  *(void *)(inited + 64) = UIAccessibilityBoldTextStatusDidChangeNotification;
  *(unsigned char *)(inited + 72) = 2;
  *(void *)(inited + 80) = UIContentSizeCategoryDidChangeNotification;
  *(unsigned char *)(inited + 88) = 3;
  uint64_t v5 = v0;
  uint64_t v6 = UIAccessibilityInvertColorsStatusDidChangeNotification;
  long long v7 = UIAccessibilityDarkerSystemColorsStatusDidChangeNotification;
  uint64_t v8 = UIAccessibilityBoldTextStatusDidChangeNotification;
  char v9 = UIContentSizeCategoryDidChangeNotification;
  *(void *)&v0[v3] = sub_1000E0C74(inited);

  v37.receiver = v5;
  v37.super_class = ObjectType;
  id v10 = [super init];
  uint64_t v11 = qword_1004C27C8;
  unint64_t v12 = (char *)v10;
  if (v11 != -1) {
LABEL_28:
  }
    swift_once();
  id v13 = [self sharedApplication];
  id v14 = [v13 preferredContentSizeCategory];

  uint64_t v15 = (void *)qword_1004F7DD8;
  qword_1004F7DD8 = (uint64_t)v14;

  uint64_t v16 = *(void *)&v12[v2[390]];
  uint64_t v35 = v16 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(v16 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(v16 + 64);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v21 = 0;
  while (1)
  {
    if (v19)
    {
      unint64_t v22 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v23 = v22 | (v21 << 6);
      goto LABEL_6;
    }
    int64_t v32 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v32 >= v20) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v35 + 8 * v32);
    ++v21;
    if (!v33)
    {
      int64_t v21 = v32 + 1;
      if (v32 + 1 >= v20) {
        goto LABEL_26;
      }
      unint64_t v33 = *(void *)(v35 + 8 * v21);
      if (!v33)
      {
        int64_t v21 = v32 + 2;
        if (v32 + 2 >= v20) {
          goto LABEL_26;
        }
        unint64_t v33 = *(void *)(v35 + 8 * v21);
        if (!v33)
        {
          int64_t v21 = v32 + 3;
          if (v32 + 3 >= v20) {
            goto LABEL_26;
          }
          unint64_t v33 = *(void *)(v35 + 8 * v21);
          if (!v33)
          {
            int64_t v21 = v32 + 4;
            if (v32 + 4 >= v20) {
              goto LABEL_26;
            }
            unint64_t v33 = *(void *)(v35 + 8 * v21);
            if (!v33) {
              break;
            }
          }
        }
      }
    }
LABEL_25:
    unint64_t v19 = (v33 - 1) & v33;
    unint64_t v23 = __clz(__rbit64(v33)) + (v21 << 6);
LABEL_6:
    int32x2_t v24 = *(void **)(*(void *)(v16 + 48) + 8 * v23);
    uint64_t v25 = self;
    id v26 = v24;
    id v27 = [v25 defaultCenter];
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v12;
    aBlock[4] = sub_100012910;
    aBlock[5] = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000F910C;
    aBlock[3] = &unk_100487E88;
    float v29 = _Block_copy(aBlock);
    float v30 = v12;
    int v2 = (uint64_t *)v26;
    swift_release();
    id v31 = [v27 addObserverForName:v2 object:0 queue:0 usingBlock:v29];
    _Block_release(v29);
    swift_unknownObjectRelease();
  }
  int64_t v34 = v32 + 5;
  if (v34 >= v20)
  {
LABEL_26:

    swift_release();
    return;
  }
  unint64_t v33 = *(void *)(v35 + 8 * v34);
  if (v33)
  {
    int64_t v21 = v34;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v21 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v21 >= v20) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v35 + 8 * v21);
    ++v34;
    if (v33) {
      goto LABEL_25;
    }
  }
  __break(1u);
}

uint64_t sub_1000123E4()
{
  NSString v1 = (void *)Notification.name.getter();
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;
  if (v2 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v4 == v5)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      goto LABEL_11;
    }
  }
  if (qword_1004C27C8 != -1) {
    swift_once();
  }
  id v8 = [self sharedApplication];
  id v9 = [v8 preferredContentSizeCategory];

  id v10 = (void *)qword_1004F7DD8;
  qword_1004F7DD8 = (uint64_t)v9;

LABEL_11:
  id v11 = [self defaultCenter];
  if (qword_1004C27D0 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_1004F7DE0;
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC7Measure30AccessiblityUISettingsObserver_eventLookup);
  uint64_t v14 = Notification.name.getter();
  uint64_t v15 = (void *)v14;
  if (*(void *)(v13 + 16) && (sub_1000E214C(v14), (v16 & 1) != 0))
  {

    uint64_t v17 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  }
  else
  {

    uint64_t v17 = 0;
  }
  [v11 postNotificationName:v12 object:v17];

  return swift_unknownObjectRelease();
}

id sub_100012620()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t type metadata accessor for AccessiblityUISettingsObserver()
{
  return self;
}

unsigned char *initializeBufferWithCopyOfBuffer for AccessibilityEvent(unsigned char *result, unsigned char *a2)
{
  char *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AccessibilityEvent(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AccessibilityEvent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    char *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000127F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_10001281C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100012824(unsigned char *result, char a2)
{
  char *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityEvent()
{
  return &type metadata for AccessibilityEvent;
}

unint64_t sub_100012840()
{
  unint64_t result = qword_1004C3C60;
  if (!qword_1004C3C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C3C60);
  }
  return result;
}

uint64_t sub_100012894(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1000128D8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100012910()
{
  return sub_1000123E4();
}

uint64_t sub_100012934(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100012944()
{
  return swift_release();
}

void sub_10001294C()
{
  id v0 = objc_allocWithZone((Class)UIFontMetrics);
  NSString v1 = UIFontTextStyleHeadline;
  id v2 = [v0 initForTextStyle:v1];

  [v2 scaledValueForValue:45.0];
  double v4 = v3;

  double v5 = 65.0;
  if (v4 <= 65.0) {
    double v5 = v4;
  }
  qword_1004F7DF0 = *(void *)&v5;
}

void sub_1000129F0()
{
  qword_1004F7DF8 = 0x4077700000000000;
}

void sub_100012A04()
{
  qword_1004F7E00 = 0x4030000000000000;
}

void sub_100012A14()
{
  qword_1004F7E08 = 0x4034000000000000;
}

void sub_100012A24()
{
  qword_1004F7E10 = 0x4030000000000000;
}

void sub_100012A34()
{
  qword_1004F7E18 = 0x4034000000000000;
}

void sub_100012A44()
{
  qword_1004F7E20 = 0x404B800000000000;
}

void sub_100012A58()
{
  qword_1004F7E28 = 0x4046000000000000;
}

double sub_100012A68()
{
  if (qword_1004C2808 != -1) {
    swift_once();
  }
  double v0 = *(double *)&qword_1004F7E20;
  if (qword_1004C2810 != -1) {
    swift_once();
  }
  double result = v0 - *(double *)&qword_1004F7E28;
  *(double *)&qword_1004F7E30 = v0 - *(double *)&qword_1004F7E28;
  return result;
}

void sub_100012B00()
{
  qword_1004F7E38 = 0x404B800000000000;
}

uint64_t sub_100012B14()
{
  sub_100012BE0();
  uint64_t result = static UIDevice.isIPhone()();
  double v1 = 0.0;
  xmmword_1004F7E40 = xmmword_1003F87E0;
  if (result) {
    double v1 = 16.0;
  }
  qword_1004F7E50 = 0;
  qword_1004F7E58 = *(void *)&v1;
  return result;
}

void sub_100012B6C()
{
  qword_1004F7E60 = 0x4056000000000000;
}

void sub_100012B7C()
{
  qword_1004F7E68 = 0x4020000000000000;
}

void sub_100012B8C()
{
  qword_1004F7E70 = 0x4024000000000000;
}

uint64_t sub_100012B9C()
{
  sub_100012BE0();
  uint64_t result = static UIDevice.isIPhone()();
  double v1 = 0.0;
  if (result) {
    double v1 = 16.0;
  }
  qword_1004F7E78 = *(void *)&v1;
  return result;
}

unint64_t sub_100012BE0()
{
  unint64_t result = qword_1004C6A10;
  if (!qword_1004C6A10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1004C6A10);
  }
  return result;
}

uint64_t type metadata accessor for MeasureShareActivityItem()
{
  return self;
}

id sub_100012EEC(void *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  sub_100012894(&qword_1004C3D00);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1003F87F0;
  id v13 = [a1 string];
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  *(void *)(v12 + 56) = &type metadata for String;
  *(void *)(v12 + 32) = v14;
  *(void *)(v12 + 40) = v16;
  id v17 = objc_allocWithZone((Class)UIActivityViewController);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v19 = [v17 initWithActivityItems:isa applicationActivities:0];

  int64_t v20 = self;
  id v21 = v19;
  id v22 = [v20 mainBundle];
  v36._object = (void *)0xE000000000000000;
  v23._object = (void *)0x800000010041ED40;
  v23._countAndFlagsBits = 0xD00000000000002BLL;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v36._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v36);

  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v21 setTitle:v25];

  sub_100012894(&qword_1004C3D08);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1003F8800;
  *(void *)(v26 + 32) = UIActivityTypeAssignToContact;
  *(void *)(v26 + 40) = UIActivityTypeAddToReadingList;
  *(void *)(v26 + 48) = UIActivityTypeMarkupAsPDF;
  *(void *)(v26 + 56) = UIActivityTypeOpenInIBooks;
  *(void *)(v26 + 64) = UIActivityTypeSaveToCameraRoll;
  type metadata accessor for ActivityType(0);
  id v27 = UIActivityTypeAssignToContact;
  uint64_t v28 = UIActivityTypeAddToReadingList;
  float v29 = UIActivityTypeMarkupAsPDF;
  float v30 = UIActivityTypeOpenInIBooks;
  id v31 = UIActivityTypeSaveToCameraRoll;
  Class v32 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v21 setExcludedActivityTypes:v32];

  id v33 = [v21 popoverPresentationController];
  if (v33)
  {
    int64_t v34 = v33;
    [v33 setSourceView:a2];
    [v34 setSourceRect:a3, a4, a5, a6];
  }
  return v21;
}

void *sub_1000131D4(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100013218(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void sub_100013268()
{
  id v0 = [self standardUserDefaults];
  unsigned __int8 v1 = [v0 showGuideSnapPoints];

  byte_1004F7E80 = v1;
}

void sub_1000132C4()
{
  uint64_t v1 = v0;
  *(void *)(v0 + 64) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 72) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 80) = 0;
  *(_DWORD *)(v0 + 88) = 1092616192;
  *(void *)(v0 + 96) = 1;
  *(void *)(v0 + 104) = 0;
  *(void *)(v0 + 112) = 0;
  *(void *)(v0 + 120) = 0;
  *(unsigned char *)(v0 + 128) = 0;
  uint64_t v2 = sub_100012894(&qword_1004C3ED8);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v4 = qword_1004C2E30;
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1004F8630;
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 272);
  swift_retain();
  *(void *)(v1 + 136) = v6(KeyPath, v5);
  uint64_t v7 = swift_getKeyPath();
  uint64_t v8 = sub_100012894(&qword_1004C3EE0);
  uint64_t v9 = qword_1004F8630;
  id v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 272);
  swift_retain();
  *(void *)(v1 + 144) = v10(v7, v9);
  uint64_t v11 = sub_100012894(&qword_1004C3EE8);
  uint64_t v12 = swift_getKeyPath();
  uint64_t v13 = qword_1004F8630;
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 272);
  swift_retain();
  *(void *)(v1 + 152) = v14(v12, v13);
  uint64_t v15 = sub_100012894(&qword_1004C3EF0);
  uint64_t v16 = swift_getKeyPath();
  uint64_t v17 = qword_1004F8630;
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 272);
  swift_retain();
  *(void *)(v1 + 160) = v18(v16, v17);
  sub_100012894(&qword_1004C3EF8);
  swift_getKeyPath();
  *(void *)(v1 + 168) = MutableStateValue.__allocating_init(_:_:)();
  sub_100012894(&qword_1004C3F00);
  swift_getKeyPath();
  *(void *)(v1 + 176) = MutableStateBinding.__allocating_init(_:_:)();
  uint64_t v19 = swift_getKeyPath();
  uint64_t v20 = sub_100012894(&qword_1004C3F08);
  uint64_t v21 = qword_1004F8630;
  id v22 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 272);
  swift_retain();
  *(void *)(v1 + 184) = v22(v19, v21);
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = sub_100012894(&qword_1004C3F10);
  uint64_t v25 = qword_1004F8630;
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 272);
  swift_retain();
  uint64_t v27 = v26(v23, v25);
  *(void *)(v1 + 200) = 0;
  *(void *)(v1 + 208) = 0;
  *(void *)(v1 + 192) = v27;
  *(_WORD *)(v1 + 216) = 256;
  *(void *)(v1 + 224) = 0;
  if (qword_1004C2850 != -1) {
    swift_once();
  }
  if (byte_1004F7E80 != 1) {
    goto LABEL_11;
  }
  id v28 = [objc_allocWithZone((Class)SCNNode) init];
  float v29 = *(void **)(v1 + 224);
  *(void *)(v1 + 224) = v28;

  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  float v30 = (void *)*((void *)&xmmword_1004F7FD0 + 1);
  if (*((void *)&xmmword_1004F7FD0 + 1))
  {
    v43 = (void *)qword_1004F8028;
    id v31 = (void *)*((void *)&xmmword_1004F8000 + 1);
    Class v32 = (void *)xmmword_1004F8000;
    id v33 = (void *)qword_1004F7FE8;
    int64_t v34 = (void *)xmmword_1004F7FD0;
    id v45 = (id)qword_1004F8030;
    id v47 = v34;
    id v35 = v30;
    swift_retain();
    id v46 = v33;
    swift_retain();
    id v44 = v32;
    id v36 = v31;
    swift_retain();
    swift_retain();
    swift_retain();
    id v37 = v43;
    id v38 = sub_1002053D0();
    id v39 = [v38 scene];

    id v40 = [v39 rootNode];
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();

    uint64_t v41 = *(void **)(v1 + 224);
    if (v41)
    {
      id v42 = v41;
      [v40 addChildNode:v42];

LABEL_11:
      swift_release();
      StateObserver.init(configuration:)();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100013800()
{
}

void sub_100013828()
{
  uint64_t v1 = v0;
  *(void *)(v0 + 64) = &_swiftEmptyArrayStorage;
  *(void *)(v0 + 72) = &_swiftEmptyArrayStorage;
  *(void *)(v0 + 80) = 0;
  *(_DWORD *)(v0 + 88) = 1092616192;
  *(void *)(v0 + 96) = 1;
  *(void *)(v0 + 104) = 0;
  *(void *)(v0 + 112) = 0;
  *(void *)(v0 + 120) = 0;
  *(unsigned char *)(v0 + 128) = 0;
  uint64_t v2 = sub_100012894(&qword_1004C3ED8);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1004F8630;
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 272);
  swift_retain();
  *(void *)(v1 + 136) = v5(KeyPath, v4);
  uint64_t v6 = swift_getKeyPath();
  uint64_t v7 = sub_100012894(&qword_1004C3EE0);
  uint64_t v8 = qword_1004F8630;
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 272);
  swift_retain();
  *(void *)(v1 + 144) = v9(v6, v8);
  uint64_t v10 = sub_100012894(&qword_1004C3EE8);
  uint64_t v11 = swift_getKeyPath();
  uint64_t v12 = qword_1004F8630;
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 272);
  swift_retain();
  *(void *)(v1 + 152) = v13(v11, v12);
  uint64_t v14 = sub_100012894(&qword_1004C3EF0);
  uint64_t v15 = swift_getKeyPath();
  uint64_t v16 = qword_1004F8630;
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 272);
  swift_retain();
  *(void *)(v1 + 160) = v17(v15, v16);
  sub_100012894(&qword_1004C3EF8);
  swift_getKeyPath();
  *(void *)(v1 + 168) = MutableStateValue.__allocating_init(_:_:)();
  sub_100012894(&qword_1004C3F00);
  swift_getKeyPath();
  *(void *)(v1 + 176) = MutableStateBinding.__allocating_init(_:_:)();
  uint64_t v18 = swift_getKeyPath();
  uint64_t v19 = sub_100012894(&qword_1004C3F08);
  uint64_t v20 = qword_1004F8630;
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 272);
  swift_retain();
  *(void *)(v1 + 184) = v21(v18, v20);
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = sub_100012894(&qword_1004C3F10);
  uint64_t v24 = qword_1004F8630;
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 272);
  swift_retain();
  uint64_t v26 = v25(v22, v24);
  *(void *)(v1 + 200) = 0;
  *(void *)(v1 + 208) = 0;
  *(void *)(v1 + 192) = v26;
  *(_WORD *)(v1 + 216) = 256;
  *(void *)(v1 + 224) = 0;
  swift_release();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100013B54()
{
  void (*v6)(void *__return_ptr, uint64_t);
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t (*)(uint64_t), uint64_t *);
  uint64_t v18;
  uint64_t (*v19)();
  uint64_t v20;
  unsigned char v21[16];
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  void v24[4];

  uint64_t v1 = v0;
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + 184) + 200);
  uint64_t v3 = swift_retain();
  uint64_t v4 = v2(v3);
  swift_release();
  uint64_t v22 = sub_100016AFC;
  uint64_t v23 = v0;
  uint64_t v5 = *(void (**)(uint64_t (*)(unsigned __int8 *), unsigned char *))(*(void *)v4 + 296);
  swift_retain();
  v5(sub_100016B04, v21);
  swift_release();
  swift_release();
  uint64_t v6 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v0 + 144) + 144);
  uint64_t v7 = swift_retain();
  v6(v24, v7);
  swift_release();
  uint64_t v9 = (void *)v24[0];
  uint64_t v8 = (void *)v24[1];

  if (v8)
  {
    uint64_t v10 = (*(uint64_t (**)(void))((swift_isaMask & *v8) + 0x2F0))();
  }
  else
  {
    uint64_t v10 = 0;
  }
  *(void *)(v1 + 120) = v10;
  *(unsigned char *)(v1 + 128) = v8 == 0;
  swift_retain();
  StateValue.ifUpdated(_:)();
  uint64_t v11 = swift_release();
  __chkstk_darwin(v11);
  uint64_t v19 = sub_100016B10;
  uint64_t v20 = v1;
  swift_retain();
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  swift_release();
  uint64_t v12 = *(uint64_t (**)(uint64_t))(**(void **)(v1 + 176) + 200);
  uint64_t v13 = swift_retain();
  uint64_t v14 = v12(v13);
  uint64_t v15 = swift_release();
  __chkstk_darwin(v15);
  uint64_t v19 = sub_100016B1C;
  uint64_t v20 = v1;
  uint64_t v16 = *(void (**)(uint64_t (*)(uint64_t), uint64_t *))(*(void *)v14 + 296);
  swift_retain();
  v16(sub_100016B20, &v18);
  swift_release();
  return swift_release();
}

uint64_t sub_100013E84(uint64_t result, uint64_t a2)
{
  if (result >= 2u)
  {
    uint64_t v4 = *(uint64_t (**)(unsigned char *))(**(void **)(a2 + 168) + 400);
    swift_retain();
    uint64_t v5 = (void (*)(unsigned char *, void))v4(v10);
    *(void *)(v6 + 8) = &_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    v5(v10, 0);
    swift_release();
    uint64_t v7 = *(uint64_t (**)(unsigned char *))(**(void **)(a2 + 168) + 400);
    swift_retain();
    uint64_t v8 = (void (*)(unsigned char *, void))v7(v10);
    void *v9 = &_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    v8(v10, 0);
    unint64_t result = swift_release();
    char v3 = 0;
  }
  else
  {
    char v3 = 1;
  }
  *(unsigned char *)(a2 + 217) = v3;
  return result;
}

void sub_100013FC0()
{
  void (*v4)(Swift::String *__return_ptr, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  unsigned int v21;
  void *v22;
  unsigned __int8 (*v23)(void);
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  long long v31;
  long long v32;
  long long v33;
  long long v34;
  Swift::String v35;
  Swift::String v36;
  uint64_t (*v37)(__n128 *);
  void (*v38)(__n128 *, void);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  void *v46;
  unsigned __int8 (*v47)(void);
  void *v48;
  int v49;
  void (*v50)(__n128 *__return_ptr, uint64_t);
  uint64_t v51;
  Swift::String v52;
  uint64_t v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  char v58;
  char *v59;
  uint64_t (*v60)(__n128 *);
  void (*v61)(__n128 *, void);
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  __n128 *v65;
  __n128 *v66;
  uint64_t v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t (*v75)(__n128 *);
  void (*v76)(__n128 *, void);
  uint64_t v77;
  void *v78;
  long long v79;
  long long v80;
  long long v81;
  long long v82;
  _OWORD v83[4];
  Swift::String v84;
  __n128 v85;
  __n128 v86;
  __n128 v87;
  __n128 v88;
  __n128 v89;
  __n128 v90;
  __n128 v91;
  long long v92;
  uint64_t v93;
  __n128 v94;
  __n128 v95;
  __n128 v96;
  __n128 v97;
  __n128 v98;
  __n128 v99;
  __n128 v100;
  __n128 v101;
  long long v102;
  uint64_t v103;

  if (v0[217] != 1) {
    return;
  }
  uint64_t v1 = v0;
  if (qword_1004C2850 != -1) {
    goto LABEL_61;
  }
  while (byte_1004F7E80 != 1)
  {
LABEL_14:
    uint64_t v20 = [self standardUserDefaults];
    uint64_t v21 = [v20 guideSnapPointsEnabled];

    if (v21)
    {
      uint64_t v22 = (void *)v1[25];
      if (v22)
      {
        uint64_t v23 = *(unsigned __int8 (**)(void))((swift_isaMask & *v22) + 0x258);
        uint64_t v24 = v22;
        if (!v23() || v23() == 1)
        {
          swift_retain();
          StateValue.wrappedValue.getter();
          swift_release();

          uint64_t v25 = (void *)v94.n128_u64[1];
          if (v94.n128_u64[1])
          {
            uint64_t v26 = sub_100015810(v24, v94.n128_i64[1]);
            if ((v28 & 1) == 0)
            {
              float v29 = v26;
              float v30 = v27;
              (*(void (**)(void))((swift_isaMask & *v24) + 0x2A0))();
              simd_float4x4.forward.getter();
              static simd_float4x4.make(position:normalizedForward:)();
              v81 = v32;
              v82 = v31;
              v79 = v34;
              v80 = v33;
              if (qword_1004C2AC0 != -1) {
                swift_once();
              }
              v94.n128_u64[0] = 0;
              v94.n128_u64[1] = 0xE000000000000000;
              _StringGuts.grow(_:)(57);
              v35._object = (void *)0x800000010041EF40;
              v35._countAndFlagsBits = 0xD000000000000037;
              String.append(_:)(v35);
              *(void *)&v83[0] = v29;
              *((void *)&v83[0] + 1) = v30;
              sub_100012894((uint64_t *)&unk_1004CEDE0);
              sub_100016E98();
              v36._countAndFlagsBits = SIMD.description.getter();
              String.append(_:)(v36);
              swift_bridgeObjectRelease();
              Log.default(_:isPrivate:)((Swift::String)v94, 0);
              swift_bridgeObjectRelease();
              id v37 = *(uint64_t (**)(__n128 *))(*(void *)v1[22] + 400);
              swift_retain();
              id v38 = (void (*)(__n128 *, void))v37(&v94);
              id v40 = v39;
              uint64_t v41 = *(char **)(v39 + 144);
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(void *)(v40 + 144) = v41;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                uint64_t v41 = sub_10006DE78(0, *((void *)v41 + 2) + 1, 1, v41);
                *(void *)(v40 + 144) = v41;
              }
              id v44 = *((void *)v41 + 2);
              v43 = *((void *)v41 + 3);
              if (v44 >= v43 >> 1)
              {
                uint64_t v41 = sub_10006DE78((char *)(v43 > 1), v44 + 1, 1, v41);
                *(void *)(v40 + 144) = v41;
              }
              *((void *)v41 + 2) = v44 + 1;
              id v45 = &v41[64 * v44];
              *((_OWORD *)v45 + 2) = v82;
              *((_OWORD *)v45 + 3) = v81;
              *((_OWORD *)v45 + 4) = v80;
              *((_OWORD *)v45 + 5) = v79;
              v38(&v94, 0);
              swift_release();
            }
          }
        }
      }
    }
    id v46 = (void *)v1[25];
    if (v46)
    {
      id v47 = *(unsigned __int8 (**)(void))((swift_isaMask & *v46) + 0x258);
      unint64_t v48 = v46;
      if (!v47() || v47() == 3)
      {

LABEL_57:
        v73 = (uint64_t)v1;
        goto LABEL_58;
      }
      v49 = v47();

      if (v49 == 1) {
        goto LABEL_57;
      }
    }
    v50 = *(void (**)(__n128 *__return_ptr, uint64_t))(*(void *)v1[18] + 144);
    int v51 = swift_retain();
    v50(&v94, v51);
    swift_release();
    v52 = (Swift::String)v94;

    if (v52._object)
    {
      unint64_t v53 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v52._object) + 0x2F0))();

      if (v53 == 8) {
        goto LABEL_57;
      }
    }
    uint64_t v54 = (void *)v1[14];
    int v55 = v54;
    swift_retain();
    StateValue.wrappedValue.getter();
    swift_release();
    int v56 = (void *)v94.n128_u64[0];

    if (!v54)
    {
      if (!v56)
      {
LABEL_55:
        swift_retain();
        StateValue.wrappedValue.getter();
        swift_release();
        v74 = (void *)v94.n128_u64[0];

        if (!v74)
        {
LABEL_56:
          swift_beginAccess();
          v1[8] = &_swiftEmptyArrayStorage;
          swift_bridgeObjectRelease();
          v75 = *(uint64_t (**)(__n128 *))(*(void *)v1[22] + 400);
          swift_retain();
          v76 = (void (*)(__n128 *, void))v75(&v94);
          *(void *)(v77 + 144) = &_swiftEmptyArrayStorage;
          swift_bridgeObjectRelease();
          v76(&v94, 0);
          swift_release();
        }
        goto LABEL_57;
      }
      int v55 = v56;
LABEL_42:

      goto LABEL_43;
    }
    if (!v56) {
      goto LABEL_42;
    }
    type metadata accessor for WorldEdge();
    float v57 = v55;
    double v58 = static NSObject.== infix(_:_:)();

    if (v58) {
      goto LABEL_55;
    }
LABEL_43:
    swift_retain();
    StateValue.wrappedValue.getter();
    swift_release();
    double v59 = (char *)v94.n128_u64[0];

    if (!v59) {
      goto LABEL_56;
    }
    swift_beginAccess();
    v1[8] = &_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    unint64_t v60 = *(uint64_t (**)(__n128 *))(*(void *)v1[22] + 400);
    swift_retain();
    v61 = (void (*)(__n128 *, void))v60(&v94);
    *(void *)(v62 + 144) = &_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    v61(&v94, 0);
    swift_release();
    sub_1000163BC();
    v63 = v1[8];
    v78 = v1;
    if (v63 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v64 = _CocoaArrayWrapper.endIndex.getter();
      if (!v64)
      {
LABEL_54:

        swift_bridgeObjectRelease();
        v73 = (uint64_t)v78;
LABEL_58:
        sub_100015710(v73);
        return;
      }
    }
    else
    {
      unint64_t v64 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v64) {
        goto LABEL_54;
      }
    }
    unint64_t v65 = (__n128 *)&v59[direct field offset for WorldEdge.p1];
    unint64_t v66 = (__n128 *)&v59[direct field offset for WorldEdge.p2];
    swift_beginAccess();
    swift_beginAccess();
    unint64_t v67 = 4;
    uint64_t v1 = &swift_isaMask;
    while (1)
    {
      v68 = (v63 & 0xC000000000000001) != 0
          ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(v63 + 8 * v67);
      v69 = v68;
      v70 = v67 - 3;
      if (__OFADD__(v67 - 4, 1)) {
        break;
      }
      long long v71 = sub_100016B98((uint64_t)v59, &v94);
      v72 = (*(uint64_t (**)(uint64_t, __n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))((swift_isaMask & *v69) + 0x2D0))(v71, v94, v95, v96, v97, v98, v99, v100, v101);
      if (v65[1].n128_u8[0]) {
        goto LABEL_65;
      }
      if (v66[1].n128_u8[0]) {
        goto LABEL_66;
      }
      (*(void (**)(uint64_t, __n128, __n128))((swift_isaMask & *v69) + 0x2D8))(v72, *v65, *v66);

      ++v67;
      if (v70 == v64) {
        goto LABEL_54;
      }
    }
    __break(1u);
LABEL_61:
    swift_once();
  }
  uint64_t v2 = (void *)v1[28];
  if (v2)
  {
    id v3 = v2;
    SCNNode.removeAllChildren()();
  }
  uint64_t v4 = *(void (**)(Swift::String *__return_ptr, uint64_t))(*(void *)v1[22] + 144);
  uint64_t v5 = swift_retain();
  v4(&v84, v5);
  swift_release();
  v100 = v90;
  v101 = v91;
  v102 = v92;
  v103 = v93;
  v96 = v86;
  v97 = v87;
  v98 = v88;
  v99 = v89;
  v94 = (__n128)v84;
  v95 = v85;
  uint64_t v6 = v93;
  swift_bridgeObjectRetain();
  sub_100016F3C((uint64_t)&v94);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v8 = v1;
  uint64_t v9 = self;
  uint64_t v10 = self;
  uint64_t v11 = v6 + 80;
  while (1)
  {
    uint64_t v12 = [v9 orangeColor:v78];
    uint64_t v13 = [v10 sphereWithRadius:0.001];
    uint64_t v14 = [v13 firstMaterial];
    if (!v14) {
      break;
    }
    uint64_t v15 = v14;
    uint64_t v16 = [v14 diffuse];

    [v16 setContents:v12];
    uint64_t v17 = [objc_allocWithZone((Class)SCNNode) init];
    SCNMatrix4.init(_:)();
    v83[0] = v84;
    v83[1] = v85;
    v83[2] = v86;
    v83[3] = v87;
    [v17 setTransform:v83];
    [v17 setGeometry:v13];
    uint64_t v18 = (void *)v8[28];
    if (v18)
    {
      uint64_t v19 = v18;
      [v19 addChildNode:v17];

      uint64_t v12 = v19;
    }

    v11 += 64;
    if (!--v7)
    {
      swift_bridgeObjectRelease();
      uint64_t v1 = v8;
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
}

uint64_t sub_100014AE0(unint64_t a1)
{
  void (*v13)(long long *__return_ptr);
  id v14;
  long long v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  double (*v23)(void);
  void *v24;
  long long v25;
  long long v26;
  long long v27;
  long long v28;
  long long v29;
  long long v30;
  long long v31;
  long long v32;
  char v33;
  void *v34;
  uint64_t v36;
  long long v37;
  long long v38;
  long long v39;
  long long v40;
  long long v41;
  long long v42;
  long long v43;
  long long v44;
  char v45;

  uint64_t v2 = v1;
  if ([self jasperAvailable])
  {
    if ((a1 >> 62) - 1 >= 2)
    {
      *(unsigned char *)(v2 + 216) = 0;
    }
    else
    {
      *(unsigned char *)(v2 + 216) = 1;
      swift_beginAccess();
      unint64_t v4 = *(void *)(v2 + 64);
      if (!(v4 >> 62))
      {
        if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_7;
        }
        goto LABEL_5;
      }
      swift_bridgeObjectRetain();
      id v36 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v36)
      {
LABEL_5:
        *(void *)(v2 + 64) = &_swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
      }
    }
  }
LABEL_7:
  if (a1 != 0xC000000000000010)
  {
    uint64_t v20 = *(void **)(v2 + 80);
    *(void *)(v2 + 80) = 0;

    *(void *)(v2 + 72) = &_swiftEmptyArrayStorage;
LABEL_20:
    swift_bridgeObjectRelease();
    return sub_1000150A0(v2);
  }
  uint64_t v5 = *(void **)(v2 + 208);
  if (v5)
  {
    uint64_t v6 = *(void **)(v2 + 80);
    *(void *)(v2 + 80) = v5;
    uint64_t v7 = v5;

    uint64_t v8 = *(void *)(v2 + 80);
    if (v8)
    {
      uint64_t v9 = &v7[direct field offset for WorldEdge.connectedSurfaces];
      swift_beginAccess();
      uint64_t v10 = *(void *)v9;
      uint64_t v11 = (void *)(v8 + direct field offset for WorldEdge.connectedSurfaces);
      swift_beginAccess();
      void *v11 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    *(void *)(v2 + 72) = &_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void **)(v2 + 80);
    if (v12)
    {
      uint64_t v13 = *(void (**)(long long *__return_ptr))(**(void **)(v2 + 144) + 144);
      swift_retain();
      uint64_t v14 = v12;
      v13(&v41);
      swift_release();
      uint64_t v15 = v41;

      swift_beginAccess();
      uint64_t v16 = *(void **)(v2 + 96);
      uint64_t v17 = *(void **)(v2 + 104);
      *(_OWORD *)(v2 + 96) = v15;
      sub_100016AB8(v16, v17);
      swift_beginAccess();
      uint64_t v18 = *(void *)(v2 + 64);
      swift_beginAccess();
      uint64_t v19 = *(void **)(v2 + 96);
      if (v19 == (void *)1)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v21 = *(void **)(v2 + 104);
        swift_bridgeObjectRetain();
        sub_100016FA8(v19, v21);

        uint64_t v22 = *(void **)(v2 + 104);
        if (v22)
        {
          swift_endAccess();
          uint64_t v23 = *(double (**)(void))((swift_isaMask & *v22) + 0x2B0);
          uint64_t v24 = v22;
          *(double *)&uint64_t v25 = v23();
          id v39 = v26;
          id v40 = v25;
          id v37 = v28;
          id v38 = v27;

          float v30 = v37;
          float v29 = v38;
          Class v32 = v39;
          id v31 = v40;
          id v33 = 0;
LABEL_19:
          uint64_t v41 = v31;
          id v42 = v32;
          v43 = v29;
          id v44 = v30;
          id v45 = v33;
          int64_t v34 = sub_100015260((uint64_t)v14, (uint64_t)&v41);
          sub_1001222D0((unint64_t)v34);
          *(void *)(v2 + 72) = v18;
          swift_bridgeObjectRelease();
          *(void *)(v2 + 64) = &_swiftEmptyArrayStorage;

          goto LABEL_20;
        }
      }
      swift_endAccess();
      id v31 = 0uLL;
      id v33 = 1;
      Class v32 = 0uLL;
      float v29 = 0uLL;
      float v30 = 0uLL;
      goto LABEL_19;
    }
  }
  return sub_1000150A0(v2);
}

void sub_100014E78(uint64_t a1)
{
  uint64_t v2 = v1;
  id v3 = *(void **)(v1 + 200);
  sub_100016FEC(a1, (uint64_t)v18, (uint64_t *)&unk_1004CEA30);
  sub_100016FEC((uint64_t)v18, (uint64_t)v19, (uint64_t *)&unk_1004CEA30);
  if (sub_100016B28(v19) == 1) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = v19[0];
  }
  if (v3)
  {
    if (v4)
    {
      type metadata accessor for WorldLineGuide();
      id v5 = v3;
      sub_100016B40(v18);
      char v6 = static NSObject.== infix(_:_:)();
      sub_100016B6C(v18);

      if (v6) {
        goto LABEL_16;
      }
    }
  }
  else if (!v4)
  {
    sub_100016B40(v18);
LABEL_16:
    sub_100016FEC((uint64_t)v18, (uint64_t)v17, (uint64_t *)&unk_1004CEA30);
    if (sub_100016B28(v17) == 1) {
      id v8 = 0;
    }
    else {
      id v8 = (id)v17[0];
    }
    goto LABEL_20;
  }
  sub_100016FEC((uint64_t)v18, (uint64_t)v17, (uint64_t *)&unk_1004CEA30);
  if (sub_100016B28(v17) != 1)
  {
    uint64_t v7 = *(unsigned __int8 (**)(void))((swift_isaMask & *(void *)v17[0]) + 0x258);
    sub_100016FEC((uint64_t)v18, (uint64_t)v16, (uint64_t *)&unk_1004CEA30);
    id v8 = v16[0];
    if (!v7())
    {
      swift_retain();
      StateValue.wrappedValue.getter();
      swift_release();
      sub_100016B6C(v18);

      uint64_t v13 = *(void **)(v2 + 208);
      *(void *)(v2 + 208) = v14;

LABEL_20:
      uint64_t v12 = *(void **)(v2 + 200);
      *(void *)(v2 + 200) = v8;
      goto LABEL_21;
    }
    sub_100016B6C(v18);
  }
  uint64_t v9 = *(void **)(v2 + 208);
  *(void *)(v2 + 208) = 0;

  sub_100016FEC((uint64_t)v18, (uint64_t)v16, (uint64_t *)&unk_1004CEA30);
  int v10 = sub_100016B28((uint64_t *)v16);
  id v11 = v16[0];
  if (v10 == 1) {
    id v11 = 0;
  }
  uint64_t v12 = *(void **)(v2 + 200);
  *(void *)(v2 + 200) = v11;
LABEL_21:
  sub_100016B40(v18);

  sub_100013FC0();
}

uint64_t sub_1000150A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  id v3 = *(uint64_t (**)(unsigned char *))(**(void **)(a1 + 168) + 400);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v4 = (void (*)(unsigned char *, void))v3(v17);
  void *v5 = v2;
  swift_bridgeObjectRelease();
  v4(v17, 0);
  swift_release();
  char v6 = *(void **)(a1 + 80);
  uint64_t v7 = *(uint64_t (**)(unsigned char *))(**(void **)(a1 + 176) + 400);
  id v8 = v6;
  swift_retain();
  uint64_t v9 = (void (*)(unsigned char *, void))v7(v17);
  id v11 = *(void **)(v10 + 136);
  *(void *)(v10 + 136) = v6;

  v9(v17, 0);
  swift_release();
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(uint64_t (**)(unsigned char *))(**(void **)(a1 + 168) + 400);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v14 = (void (*)(unsigned char *, void))v13(v17);
  *(void *)(v15 + 8) = v12;
  swift_bridgeObjectRelease();
  v14(v17, 0);
  return swift_release();
}

void *sub_100015260(uint64_t a1, uint64_t a2)
{
  void (*v14)(void *__return_ptr, uint64_t);
  uint64_t v15;
  void *v16;
  id v17;
  __n128 v18;
  __n128 v19;
  float32x4_t v20;
  float32x4_t v21;
  void *v22;
  uint64_t v24;
  long long v25;
  float32x4_t v26;
  float32x4_t v27;
  __n128 v28;
  long long v29;
  __n128 v30;
  void __src[65];
  unint64_t v32;
  uint64_t v33;
  unsigned char v34[80];
  unsigned char __dst[528];

  uint64_t v3 = v2;
  sub_100016FEC(a2, (uint64_t)&v33, &qword_1004C3F20);
  sub_100016FEC(a2, (uint64_t)v34, &qword_1004C3F20);
  if (v34[64]) {
    swift_beginAccess();
  }
  char v6 = &_swiftEmptyArrayStorage;
  Class v32 = (unint64_t)&_swiftEmptyArrayStorage;
  uint64_t v7 = (uint64_t *)(a1 + direct field offset for WorldEdge.connectedSurfaces);
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    simd_float4x4.position.getter();
    swift_bridgeObjectRetain();
    SIMD3<>.zero.unsafeMutableAddressor();
    uint64_t v10 = (long long *)(v8 + 64);
    do
    {
      float v29 = *(v10 - 1);
      uint64_t v25 = *v10;
      createTransform(forward:normal:position:)();
      simd_float4x4.translated(to:)();
      simd_float4x4.translated(to:)();
      sub_100012894(&qword_1004C6B30);
      id v11 = (_OWORD *)swift_allocObject();
      v11[1] = xmmword_1003F87F0;
      v11[2] = v29;
      void v11[3] = v25;
      id v12 = objc_allocWithZone((Class)type metadata accessor for WorldLineGuide());
      LOBYTE(v24) = 1;
      uint64_t v13 = (void *)WorldLineGuide.init(guideType:end1:end2:primarySegmentEnd1:primarySegmentEnd2:backingPlanes:anchorState:)();
      uint64_t v14 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v3 + 192) + 144);
      uint64_t v15 = swift_retain();
      v14(__src, v15);
      swift_release();
      memcpy(__dst, __src, 0x200uLL);
      uint64_t v16 = (void *)sub_1000A3850();
      sub_100016F7C((uint64_t)__dst);
      if (v16)
      {
        uint64_t v17 = [v16 camera];

        [v17 transform];
        id v28 = v19;
        float v30 = v18;
        uint64_t v26 = v21;
        uint64_t v27 = v20;

        if (qword_1004C2C10 != -1) {
          swift_once();
        }
        sub_10013EE5C(v13, a1, v30, v28, v27, v26);
      }
      uint64_t v22 = v13;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      v10 += 4;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    return (void *)v32;
  }
  return v6;
}

uint64_t sub_100015710(uint64_t a1)
{
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  uint64_t v2 = v9[0];

  uint64_t v3 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = v2;

  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 64);
  id v5 = *(uint64_t (**)(void *))(**(void **)(a1 + 168) + 400);
  swift_bridgeObjectRetain();
  swift_retain();
  char v6 = (void (*)(void *, void))v5(v9);
  *(void *)(v7 + 8) = v4;
  swift_bridgeObjectRelease();
  v6(v9, 0);
  return swift_release();
}

uint64_t sub_100015810(void *a1, uint64_t a2)
{
  void (*v10)(unsigned char *__return_ptr, uint64_t);
  uint64_t v11;
  long long v12;
  uint64_t v13;
  int8x16_t v14;
  uint64_t result;
  uint64_t v16;
  float32x4_t **v17;
  float32x4_t *v18;
  int64_t v19;
  float32x4_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  float32x4_t *v24;
  float32x4_t v25;
  float32x4_t v26;
  unint64_t v27;
  unint64_t v28;
  float32x4_t *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  float32x4_t *v33;
  uint64_t v34;
  float32x4_t v35;
  unint64_t v36;
  unint64_t v37;
  float32x4_t v38;
  float32x4_t v39;
  float v40;
  uint64_t v41;
  long long v42;
  float32x4_t v43;
  int64x2_t v44;
  float v45;
  float v46;
  float32x4_t v47;
  int32x4_t v48;
  float32x4_t v49;
  int32x4_t v50;
  float32x4_t v51;
  float32x2_t v52;
  float32x2_t v53;
  uint64_t v54;
  float32x4_t v55;
  void (*v56)(uint64_t);
  uint64_t v57;
  float32x4_t v58;
  float32x4_t v59;
  int32x4_t v60;
  float32x2_t v61;
  float32x2_t v62;
  float32x4_t v63;
  float32x4_t v64;
  float v65;
  float32x4_t v66;
  float32x4_t v67;
  float32x4_t v68;
  int8x16_t v69;
  int8x16_t v70;
  uint64_t v71;
  float v72;
  float v73;
  float32x2_t v74;
  float32x2_t v75;
  int8x16_t v76;
  uint64_t v77;
  void (*v78)(unsigned char *__return_ptr, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(unsigned char *__return_ptr, uint64_t);
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  int32x4_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  void (*v95)(long long *__return_ptr, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int8x16_t v100;
  float v101;
  float32x2_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  float v106;
  float32x4_t v107;
  float32x4_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  float32x2_t v114;
  int v115;
  int8x16_t v116;
  int8x16_t v117;
  long long v118;
  float v119;
  float32x4_t v120;
  float v121;
  float32x4_t v122;
  float32x4_t v123;
  float32x4_t v124;
  float32x4_t v125;
  float32x4_t v126;
  int8x16_t v127;
  int32x4_t v128;
  long long v129;
  long long v130;
  long long v131;
  long long v132;
  long long v133;
  long long v134;
  long long v135;
  long long v136;
  long long v137;
  uint64_t v138;
  unsigned char v139[152];
  _OWORD v140[9];
  uint64_t v141;
  unsigned char v142[152];
  uint64_t v143[17];

  uint64_t v3 = v2;
  char v6 = (float32x4_t *)(a2 + direct field offset for WorldEdge.p1);
  swift_beginAccess();
  if (v6[1].i8[0]) {
    return 0;
  }
  uint64_t v7 = v6->i64[0];
  v108 = *v6;
  uint64_t v8 = (float32x4_t *)(a2 + direct field offset for WorldEdge.p2);
  swift_beginAccess();
  if (v8[1].i8[0]) {
    return 0;
  }
  uint64_t v9 = v8->i64[0];
  v107 = *v8;
  uint64_t v10 = *(void (**)(unsigned char *__return_ptr, uint64_t))(**(void **)(v3 + 144) + 144);
  id v11 = swift_retain();
  v10(v142, v11);
  swift_release();
  id v12 = *(_OWORD *)v142;

  if (!*((void *)&v12 + 1)) {
    return 0;
  }
  (*(void (**)(void))((swift_isaMask & **((void **)&v12 + 1)) + 0x2B0))();

  uint64_t v13 = simd_float4x4.position.getter();
  v117 = v14;
  unint64_t result = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x228))(v13);
  if (!result) {
    return result;
  }
  uint64_t v16 = result;
  LODWORD(v106) = v7;
  uint64_t v17 = (float32x4_t **)(a2 + direct field offset for WorldEdge.connectedSurfaces);
  swift_beginAccess();
  uint64_t v18 = *v17;
  uint64_t v19 = (*v17)[1].i64[0];
  uint64_t v20 = (float32x4_t *)&_swiftEmptyArrayStorage;
  if (v19)
  {
    uint64_t v21 = v16;
    *(void *)v142 = &_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1000BBD38(0, v19, 0);
    uint64_t v20 = *(float32x4_t **)v142;
    uint64_t v22 = *(void *)(*(void *)v142 + 16);
    uint64_t v23 = 2 * v22;
    uint64_t v24 = v18 + 4;
    do
    {
      uint64_t v25 = v24[-1];
      uint64_t v26 = *v24;
      *(void *)v142 = v20;
      uint64_t v27 = v20[1].u64[1];
      id v28 = v22 + 1;
      if (v22 >= v27 >> 1)
      {
        v122 = v26;
        v124 = v25;
        sub_1000BBD38((char *)(v27 > 1), v22 + 1, 1);
        uint64_t v26 = v122;
        uint64_t v25 = v124;
        uint64_t v20 = *(float32x4_t **)v142;
      }
      v20[1].i64[0] = v28;
      float v29 = &v20[v23];
      v29[2] = v25;
      v29[3] = v26;
      v23 += 2;
      v24 += 4;
      uint64_t v22 = v28;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    uint64_t v16 = v21;
  }
  v110 = *(void *)(v16 + 16);
  if (v110)
  {
    v105 = v3;
    v104 = a1;
    v112 = 0;
    v113 = 0;
    v114 = 0;
    v111 = 0;
    float v30 = 0;
    id v31 = v20[1].i64[0];
    v115 = 1;
    Class v32 = 1;
    v109 = v31;
    do
    {
      if (v31)
      {
        id v33 = v20 + 3;
        int64_t v34 = v16 + 32 + 32 * v30;
        id v35 = *(float32x4_t *)(v34 + 16);
        id v36 = *(void *)v34;
        id v37 = *(void *)(v34 + 8);
        id v38 = v35;
        v120 = v35;
        do
        {
          id v39 = vmulq_f32(v35, *v33);
          if ((float)(v39.f32[2] + vaddv_f32(*(float32x2_t *)v39.f32)) >= 0.7)
          {
            type metadata accessor for PlaneUtil();
            static PlaneUtil.distance(point:plane:)();
            id v35 = v120;
            if (v40 <= 0.05)
            {
              v115 = 0;
              Class v32 = 0;
              v112 = v37;
              v113 = v36;
              v111 = v38.u64[1];
              v114 = *(float32x2_t *)v38.f32;
            }
          }
          v33 += 2;
          --v31;
        }
        while (v31);
      }
      ++v30;
      id v31 = v109;
    }
    while (v30 != v110);
    swift_bridgeObjectRelease();
    uint64_t v41 = swift_bridgeObjectRelease();
    if ((v32 | v115)) {
      return 0;
    }
    v43 = (float32x4_t)vdupq_n_s64(v111);
    id v44 = vdupq_n_s64(v112);
    id v45 = vmuls_lane_f32(v108.f32[2] - *(float *)&v44.i32[2], v43, 2)
        + (float)((float)((float)(v106 - *(float *)&v113) * v114.f32[0])
                + COERCE_FLOAT(vmulq_f32(vsubq_f32(v108, (float32x4_t)v113), (float32x4_t)*(unint64_t *)&v114).i32[1]));
    *(float32x2_t *)&id v42 = vsub_f32((float32x2_t)__PAIR64__(v108.u32[1], LODWORD(v106)), vmul_n_f32(v114, v45));
    id v46 = v108.f32[2] - vmuls_lane_f32(v45, v43, 2);
    id v47 = vmulq_f32(vsubq_f32(v107, (float32x4_t)v113), (float32x4_t)(unint64_t)v114);
    v47.f32[0] = vmuls_lane_f32(v107.f32[2] - *(float *)&v44.i32[2], v43, 2)
               + (float)((float)((float)(*(float *)&v9 - *(float *)&v113) * v114.f32[0]) + v47.f32[1]);
    v43.f32[0] = vmuls_lane_f32(v47.f32[0], v43, 2);
    *(float32x2_t *)v47.f32 = vsub_f32(vsub_f32((float32x2_t)__PAIR64__(v107.u32[1], v9), vmul_n_f32(v114, v47.f32[0])), *(float32x2_t *)&v42);
    v47.f32[2] = (float)(v107.f32[2] - v43.f32[0]) - v46;
    unint64_t v48 = (int32x4_t)vmulq_f32(v47, v47);
    v48.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v48, 2), vadd_f32(*(float32x2_t *)v48.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v48.i8, 1))).u32[0];
    *(float32x2_t *)v43.f32 = vrsqrte_f32((float32x2_t)v48.u32[0]);
    *(float32x2_t *)v43.f32 = vmul_f32(*(float32x2_t *)v43.f32, vrsqrts_f32((float32x2_t)v48.u32[0], vmul_f32(*(float32x2_t *)v43.f32, *(float32x2_t *)v43.f32)));
    v49 = vmulq_n_f32(v47, vmul_f32(*(float32x2_t *)v43.f32, vrsqrts_f32((float32x2_t)v48.u32[0], vmul_f32(*(float32x2_t *)v43.f32, *(float32x2_t *)v43.f32))).f32[0]);
    v50 = (int32x4_t)vmulq_f32(v49, v49);
    v50.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v50, 2), vadd_f32(*(float32x2_t *)v50.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v50.i8, 1))).u32[0];
    *(float32x2_t *)v48.i8 = vrsqrte_f32((float32x2_t)v50.u32[0]);
    *(float32x2_t *)v48.i8 = vmul_f32(*(float32x2_t *)v48.i8, vrsqrts_f32((float32x2_t)v50.u32[0], vmul_f32(*(float32x2_t *)v48.i8, *(float32x2_t *)v48.i8)));
    int v51 = vmulq_n_f32(v49, vmul_f32(*(float32x2_t *)v48.i8, vrsqrts_f32((float32x2_t)v50.u32[0], vmul_f32(*(float32x2_t *)v48.i8, *(float32x2_t *)v48.i8))).f32[0]);
    v44.i32[1] = v117.i32[1];
    v44.i32[0] = vextq_s8(v117, v117, 8uLL).u32[0];
    v52.i32[1] = v51.i32[1];
    v52.i32[0] = vextq_s8((int8x16_t)v51, (int8x16_t)v51, 8uLL).u32[0];
    unint64_t v53 = vmul_f32(vsub_f32(*(float32x2_t *)v44.i8, (float32x2_t)__PAIR64__(DWORD1(v42), LODWORD(v46))), v52);
    *(float *)v48.i32 = v53.f32[0]
                      + (float)((float)((float)(*(float *)v117.i32 - *(float *)&v42) * v51.f32[0]) + v53.f32[1]);
    v43.f32[0] = (float)(v46 + vmuls_lane_f32(*(float *)v48.i32, v51, 2)) - *(float *)&v117.i32[2];
    *(float32x2_t *)v51.f32 = vsub_f32(vadd_f32(*(float32x2_t *)&v42, vmul_n_f32(*(float32x2_t *)v51.f32, *(float *)v48.i32)), *(float32x2_t *)v117.i8);
    if ((float)((float)(v43.f32[0] * v43.f32[0]) + vaddv_f32(vmul_f32(*(float32x2_t *)v51.f32, *(float32x2_t *)v51.f32))) >= 0.0025) {
      return 0;
    }
    v118 = v42;
    v121 = v46;
    v123 = v49;
    (*(void (**)(uint64_t))((swift_isaMask & *v104) + 0x2A8))(v41);
    uint64_t v54 = simd_float4x4.position.getter();
    v125 = v55;
    int v56 = *(void (**)(uint64_t))((swift_isaMask & *v104) + 0x2A0);
    v56(v54);
    float v57 = simd_float4x4.position.getter();
    double v59 = vsubq_f32(v125, v58);
    unint64_t v60 = (int32x4_t)vmulq_f32(v59, v59);
    v60.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v60, 2), vadd_f32(*(float32x2_t *)v60.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v60.i8, 1))).u32[0];
    v61 = vrsqrte_f32((float32x2_t)v60.u32[0]);
    v62 = vmul_f32(v61, vrsqrts_f32((float32x2_t)v60.u32[0], vmul_f32(v61, v61)));
    v126 = vmulq_n_f32(v59, vmul_f32(v62, vrsqrts_f32((float32x2_t)v60.u32[0], vmul_f32(v62, v62))).f32[0]);
    v56(v57);
    simd_float4x4.position.getter();
    unint64_t v64 = v63;
    v116 = (int8x16_t)v63;
    unint64_t v65 = v63.f32[1];
    v63.i32[3] = HIDWORD(v118);
    *(float32x2_t *)v63.f32 = vsub_f32(*(float32x2_t *)&v118, *(float32x2_t *)v64.f32);
    v63.f32[2] = v121 - v64.f32[2];
    unint64_t v66 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v123, (int32x4_t)v123), (int8x16_t)v123, 0xCuLL);
    unint64_t v67 = vmlaq_f32(vmulq_f32(v66, vnegq_f32(v63)), v123, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v63, (int32x4_t)v63), (int8x16_t)v63, 0xCuLL));
    v68 = vmlaq_f32(vmulq_f32(v66, vnegq_f32(v126)), v123, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v126, (int32x4_t)v126), (int8x16_t)v126, 0xCuLL));
    v69 = (int8x16_t)vmulq_f32(v67, v67);
    v69.i64[0] = vextq_s8(v69, v69, 4uLL).u64[0];
    v70 = (int8x16_t)vmulq_f32(v68, v68);
    v70.i64[0] = vextq_s8(v70, v70, 4uLL).u64[0];
    *(int32x2_t *)v67.f32 = vzip1_s32(*(int32x2_t *)v67.f32, *(int32x2_t *)v68.f32);
    *(float32x2_t *)v67.f32 = vsqrt_f32(vadd_f32((float32x2_t)vzip1_s32(*(int32x2_t *)v69.i8, *(int32x2_t *)v70.i8), vadd_f32((float32x2_t)vzip2_s32(*(int32x2_t *)v69.i8, *(int32x2_t *)v70.i8), vmul_f32(*(float32x2_t *)v67.f32, *(float32x2_t *)v67.f32))));
    v119 = vdiv_f32(*(float32x2_t *)v67.f32, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v67.f32, 1)).f32[0];
    type metadata accessor for LineUtil();
    long long v71 = static LineUtil.isParallel(_:_:)();
    v72 = -v119;
    if (v71 != -1) {
      v72 = v119;
    }
    v73 = vmuls_lane_f32(v72, *(float32x2_t *)v126.f32, 1);
    v74.i32[0] = vextq_s8((int8x16_t)v126, (int8x16_t)v126, 8uLL).u32[0];
    v74.i32[1] = v126.i32[0];
    v75 = vmul_n_f32(v74, v72);
    v76 = vextq_s8(v116, v116, 8uLL);
    v76.i32[1] = v116.i32[0];
    v127 = v76;
    sub_100012894(&qword_1004C3D00);
    v77 = swift_allocObject();
    *(_OWORD *)(v77 + 16) = xmmword_1003F87F0;
    v78 = *(void (**)(unsigned char *__return_ptr, uint64_t))(**(void **)(v105 + 176) + 144);
    v79 = swift_retain();
    v78(v139, v79);
    swift_release();
    v140[6] = *(_OWORD *)&v139[96];
    v140[7] = *(_OWORD *)&v139[112];
    v140[8] = *(_OWORD *)&v139[128];
    v141 = *(void *)&v139[144];
    v140[2] = *(_OWORD *)&v139[32];
    v140[3] = *(_OWORD *)&v139[48];
    v140[4] = *(_OWORD *)&v139[64];
    v140[5] = *(_OWORD *)&v139[80];
    v140[0] = *(_OWORD *)v139;
    v140[1] = *(_OWORD *)&v139[16];
    v80 = *(void *)&v139[144];
    swift_bridgeObjectRetain();
    sub_100016F3C((uint64_t)v140);
    v81 = *(void *)(v80 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v77 + 56) = &type metadata for Int;
    *(void *)(v77 + 32) = v81;
    print(_:separator:terminator:)();
    swift_bridgeObjectRelease();
    v82 = *(void (**)(unsigned char *__return_ptr, uint64_t))(**(void **)(v105 + 176) + 144);
    v83 = swift_retain();
    v82(v139, v83);
    swift_release();
    *(_OWORD *)&v142[96] = *(_OWORD *)&v139[96];
    *(_OWORD *)&v142[112] = *(_OWORD *)&v139[112];
    *(_OWORD *)&v142[32] = *(_OWORD *)&v139[32];
    *(_OWORD *)&v142[48] = *(_OWORD *)&v139[48];
    *(_OWORD *)&v142[128] = *(_OWORD *)&v139[128];
    *(void *)&v142[144] = *(void *)&v139[144];
    *(_OWORD *)&v142[64] = *(_OWORD *)&v139[64];
    *(_OWORD *)&v142[80] = *(_OWORD *)&v139[80];
    *(_OWORD *)v142 = *(_OWORD *)v139;
    *(_OWORD *)&v142[16] = *(_OWORD *)&v139[16];
    v84 = *(void **)v139;
    v135 = *(_OWORD *)&v142[104];
    v136 = *(_OWORD *)&v142[120];
    v137 = *(_OWORD *)&v142[136];
    v131 = *(_OWORD *)&v142[40];
    v132 = *(_OWORD *)&v142[56];
    v133 = *(_OWORD *)&v142[72];
    v134 = *(_OWORD *)&v142[88];
    v129 = *(_OWORD *)&v142[8];
    v130 = *(_OWORD *)&v142[24];
    sub_100016FEC((uint64_t)v142, (uint64_t)v143, (uint64_t *)&unk_1004CEA30);
    if (sub_100016B28(v143) == 1)
    {
      v85 = sub_100016F3C((uint64_t)v142);
      v86 = 0;
      v87 = 0;
    }
    else
    {
      *(_OWORD *)&v139[88] = v134;
      *(_OWORD *)&v139[104] = v135;
      *(_OWORD *)&v139[120] = v136;
      *(_OWORD *)&v139[136] = v137;
      *(_OWORD *)&v139[24] = v130;
      *(_OWORD *)&v139[40] = v131;
      *(_OWORD *)&v139[56] = v132;
      *(_OWORD *)&v139[72] = v133;
      *(void *)v139 = v84;
      *(_OWORD *)&v139[8] = v129;
      v88 = v84;
      v89 = sub_100016F3C((uint64_t)v139);
      v86 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v88) + 0xB8))(v89);
      v87 = v90;
    }
    v91.i64[1] = v127.i64[1];
    *(float32x2_t *)v91.i8 = vadd_f32(*(float32x2_t *)v127.i8, v75);
    v128 = v91;
    v92 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v104) + 0xB8))(v85);
    if (v87)
    {
      if (v86 == v92 && v87 == v93)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v94 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v94 & 1) == 0)
        {
LABEL_42:
          LODWORD(v103) = vtrn2q_s32(v128, (int32x4_t)0).u32[0];
          *((float *)&v103 + 1) = v65 + v73;
          return v103;
        }
      }
      v95 = *(void (**)(long long *__return_ptr, uint64_t))(**(void **)(v105 + 176) + 144);
      v96 = swift_retain();
      v95(&v129, v96);
      swift_release();
      *(_OWORD *)&v139[96] = v135;
      *(_OWORD *)&v139[112] = v136;
      *(_OWORD *)&v139[128] = v137;
      *(void *)&v139[144] = v138;
      *(_OWORD *)&v139[32] = v131;
      *(_OWORD *)&v139[48] = v132;
      *(_OWORD *)&v139[64] = v133;
      *(_OWORD *)&v139[80] = v134;
      *(_OWORD *)v139 = v129;
      *(_OWORD *)&v139[16] = v130;
      v97 = v138;
      swift_bridgeObjectRetain();
      sub_100016F3C((uint64_t)v139);
      v98 = *(void *)(v97 + 16);
      if (v98)
      {
        v99 = v97 + 80;
        do
        {
          simd_float4x4.position.getter();
          v101 = (float)(*(float *)&v100.i32[1] - (float)(v65 + v73))
               * (float)(*(float *)&v100.i32[1] - (float)(v65 + v73));
          v102.i32[0] = vextq_s8(v100, v100, 8uLL).u32[0];
          v102.i32[1] = v100.i32[0];
          *(float32x2_t *)v100.i8 = vsub_f32(v102, *(float32x2_t *)v128.i8);
          *(float32x2_t *)v100.i8 = vmul_f32(*(float32x2_t *)v100.i8, *(float32x2_t *)v100.i8);
          if ((float)(*(float *)v100.i32 + (float)(*(float *)&v100.i32[1] + v101)) < 0.0025) {
            goto LABEL_27;
          }
          v99 += 64;
        }
        while (--v98);
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  swift_bridgeObjectRelease();
LABEL_27:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1000163BC()
{
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();

  if (v3)
  {
    uint64_t v1 = v3;
    if ((*(unsigned char *)(v0 + 216) & 1) == 0)
    {
      uint64_t v2 = sub_1000164A0((uint64_t)v3);
      swift_beginAccess();
      uint64_t v1 = v2;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)(v0 + 64) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 64) & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
    }
  }
}

void *sub_1000164A0(uint64_t a1)
{
  void (*v18)(void *__return_ptr, uint64_t);
  uint64_t v19;
  void *v20;
  id v21;
  __n128 v22;
  __n128 v23;
  float32x4_t v24;
  float32x4_t v25;
  uint64_t v27;
  long long v28;
  long long v29;
  uint64_t v30;
  float32x4_t v31;
  float32x4_t v32;
  __n128 v33;
  __n128 v34;
  void __src[65];
  _OWORD __dst[33];

  uint64_t v2 = v1;
  sub_100016B98(a1, __dst);
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v4 = a1 + direct field offset for WorldEdge.connectedSurfaces;
  swift_beginAccess();
  uint64_t v5 = *(void *)v4;
  int64_t v6 = *(void *)(*(void *)v4 + 16);
  if (v6)
  {
    float v30 = v2;
    *(void *)&__dst[0] = &_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1000BBD38(0, v6, 0);
    uint64_t v7 = *(void *)&__dst[0];
    unint64_t v8 = *(void *)(*(void *)&__dst[0] + 16);
    uint64_t v9 = 32 * v8;
    uint64_t v10 = (long long *)(v5 + 64);
    do
    {
      long long v11 = *(v10 - 1);
      long long v12 = *v10;
      *(void *)&__dst[0] = v7;
      unint64_t v13 = *(void *)(v7 + 24);
      unint64_t v14 = v8 + 1;
      if (v8 >= v13 >> 1)
      {
        id v28 = v12;
        float v29 = v11;
        sub_1000BBD38((char *)(v13 > 1), v8 + 1, 1);
        long long v12 = v28;
        long long v11 = v29;
        uint64_t v7 = *(void *)&__dst[0];
      }
      *(void *)(v7 + 16) = v14;
      uint64_t v15 = v7 + v9;
      *(_OWORD *)(v15 + 32) = v11;
      *(_OWORD *)(v15 + 48) = v12;
      v9 += 32;
      v10 += 4;
      unint64_t v8 = v14;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    uint64_t v2 = v30;
  }
  id v16 = objc_allocWithZone((Class)type metadata accessor for WorldLineGuide());
  LOBYTE(v27) = 0;
  uint64_t v17 = (void *)WorldLineGuide.init(guideType:end1:end2:primarySegmentEnd1:primarySegmentEnd2:backingPlanes:anchorState:)();
  uint64_t v18 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v2 + 192) + 144);
  uint64_t v19 = swift_retain();
  v18(__src, v19);
  swift_release();
  memcpy(__dst, __src, 0x200uLL);
  uint64_t v20 = (void *)sub_1000A3850();
  sub_100016F7C((uint64_t)__dst);
  if (v20)
  {
    uint64_t v21 = [v20 camera:v27];

    [v21 transform];
    id v33 = v23;
    int64_t v34 = v22;
    id v31 = v25;
    Class v32 = v24;

    if (qword_1004C2C10 != -1) {
      swift_once();
    }
    sub_10013E728(v17, a1, v34, v33, v32, v31);
  }
  return v17;
}

void sub_1000167A8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_100016AB8(*(void **)(v0 + 96), *(void **)(v0 + 104));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  uint64_t v1 = *(void **)(v0 + 224);
}

id *sub_100016848()
{
  uint64_t v0 = (id *)StateObserver.deinit();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_100016AB8(v0[12], v0[13]);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return v0;
}

uint64_t sub_1000168F0()
{
  sub_100016848();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EdgeGuidesInstrument()
{
  uint64_t result = qword_1004C3D38;
  if (!qword_1004C3D38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001696C()
{
  return swift_initClassMetadata2();
}

id sub_100016A10@<X0>(uint64_t *a1@<X8>)
{
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  id result = (id)*((void *)&xmmword_1004F8000 + 1);
  if (*((void *)&xmmword_1004F8000 + 1))
  {
    id v3 = (id)*((void *)&xmmword_1004F8000 + 1);
    *a1 = Contexts.PrivateQueue.init(_:)();
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100016AB8(void *a1, void *a2)
{
  if (a1 != (void *)1)
  {
  }
}

uint64_t sub_100016AFC(uint64_t a1)
{
  return sub_100013E84(a1, v1);
}

uint64_t sub_100016B04(unsigned __int8 *a1)
{
  return sub_100112210(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_100016B14(void *a1)
{
  return sub_10019F79C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_100016B20(uint64_t a1)
{
  return sub_100103ADC(a1, *(uint64_t (**)(_OWORD *))(v1 + 16));
}

uint64_t sub_100016B28(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

id *sub_100016B40(id *a1)
{
  id v2 = *a1;
  return a1;
}

id *sub_100016B6C(id *a1)
{
  return a1;
}

uint64_t sub_100016B98@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = a1 + direct field offset for WorldEdge.p1;
  swift_beginAccess();
  swift_beginAccess();
  simd_float4x4.forward.getter();
  simd_float4x4.position.getter();
  if ((*(unsigned char *)(v3 + 16) & 1) == 0) {
    swift_beginAccess();
  }
  simd_float4x4.translated(to:)();
  long long v15 = v5;
  long long v16 = v4;
  long long v13 = v7;
  long long v14 = v6;
  uint64_t result = simd_float4x4.translated(to:)();
  *a2 = v16;
  a2[1] = v15;
  a2[2] = v14;
  a2[3] = v13;
  a2[4] = v9;
  a2[5] = v10;
  a2[6] = v11;
  a2[7] = v12;
  return result;
}

unint64_t sub_100016E98()
{
  unint64_t result = qword_1004C3F18;
  if (!qword_1004C3F18)
  {
    sub_100016EF4((uint64_t *)&unk_1004CEDE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C3F18);
  }
  return result;
}

uint64_t sub_100016EF4(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100016F3C(uint64_t a1)
{
  id v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 136);
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_100016F7C(uint64_t a1)
{
  return a1;
}

id sub_100016FA8(id result, void *a2)
{
  if (result != (id)1)
  {
    id v4 = result;
    id v3 = a2;
    return v4;
  }
  return result;
}

uint64_t sub_100016FEC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100012894(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

id sub_100017050(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_labelColor, &qword_1004F7E88);
}

id sub_100017064(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_tertiaryLabelColor, &qword_1004F7E90);
}

id sub_100017078(uint64_t a1)
{
  return sub_10001708C(a1, (SEL *)&selRef_systemYellowColor, &qword_1004F7E98);
}

id sub_10001708C(uint64_t a1, SEL *a2, void *a3)
{
  id result = [self *a2];
  *a3 = result;
  return result;
}

void sub_1000170D0()
{
  qword_1004F7EA0 = 0x4000000000000000;
}

void sub_1000170E0()
{
  qword_1004F7EA8 = 0x4020000000000000;
}

double sub_1000170F0()
{
  if (qword_1004C2878 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1004F7EA8 * 0.5;
  *(double *)&qword_1004F7EB0 = *(double *)&qword_1004F7EA8 * 0.5;
  return result;
}

void sub_10001714C()
{
  qword_1004F7EB8 = 0x4036000000000000;
}

void sub_10001715C()
{
  qword_1004F7EC0 = 0x4041800000000000;
}

void sub_100017170()
{
  qword_1004F7EC8 = 0x401C000000000000;
}

id sub_100017180()
{
  id result = [self systemFontOfSize:16.0 weight:UIFontWeightMedium];
  qword_1004F7ED0 = (uint64_t)result;
  return result;
}

void sub_1000171CC()
{
  qword_1004F7ED8 = 0x4056000000000000;
}

void sub_1000171DC()
{
  qword_1004F7EE0 = 0x4066000000000000;
}

void sub_1000171EC()
{
  qword_1004F7EE8 = 0x404C000000000000;
}

void sub_1000171FC()
{
  qword_1004F7EF0 = 0x4044000000000000;
}

uint64_t sub_10001720C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Sketch()
{
  return self;
}

id sub_100017240(void *a1, char a2, char a3, char a4)
{
  id v8 = [objc_allocWithZone((Class)CAShapeLayer) init];
  id v9 = [a1 CGPath];
  [v8 setPath:v9];

  if (a3)
  {
    if (a4)
    {
      if (qword_1004C2868 != -1) {
        swift_once();
      }
      id v10 = [(id)qword_1004F7E98 CGColor];
    }
    else
    {
      id v14 = [self clearColor];
      id v10 = [v14 CGColor];
    }
    [v8 setFillColor:v10];

    if (a4)
    {
      id v15 = [self clearColor];
      id v16 = [v15 CGColor];

      float v17 = 0.5;
    }
    else
    {
      if (qword_1004C2868 != -1) {
        swift_once();
      }
      id v16 = [(id)qword_1004F7E98 CGColor];
      float v17 = 1.0;
    }
    [v8 setStrokeColor:v16];

    *(float *)&double v19 = v17;
    [v8 setOpacity:v19];
  }
  else
  {
    id v11 = [self clearColor];
    id v12 = [v11 CGColor];

    [v8 setFillColor:v12];
    if (a2)
    {
      if (qword_1004C2860 != -1) {
        swift_once();
      }
      long long v13 = &qword_1004F7E90;
    }
    else
    {
      if (qword_1004C2858 != -1) {
        swift_once();
      }
      long long v13 = &qword_1004F7E88;
    }
    id v18 = [(id)*v13 CGColor];
    [v8 setStrokeColor:v18];
  }
  if (qword_1004C2870 != -1) {
    swift_once();
  }
  [v8 setLineWidth:*(double *)&qword_1004F7EA0];
  return v8;
}

id sub_10001759C(double a1, double a2, double a3, double a4)
{
  id v8 = [objc_allocWithZone((Class)UIBezierPath) init];
  [v8 moveToPoint:a1, a2];
  double v9 = a1 + a3;
  [v8 addLineToPoint:v9, a2];
  double v10 = a2 + a4;
  [v8 addLineToPoint:v9, v10];
  [v8 addLineToPoint:a1, v10];
  [v8 addLineToPoint:a1, a2];
  id v11 = [objc_allocWithZone((Class)CAShapeLayer) init];
  id v12 = [v8 CGPath];
  [v11 setPath:v12];

  id v13 = [self clearColor];
  id v14 = [v13 CGColor];

  [v11 setFillColor:v14];
  if (qword_1004C2858 != -1) {
    swift_once();
  }
  id v15 = [(id)qword_1004F7E88 CGColor];
  [v11 setStrokeColor:v15];

  if (qword_1004C2870 != -1) {
    swift_once();
  }
  [v11 setLineWidth:*(double *)&qword_1004F7EA0];

  return v11;
}

id sub_1000177CC(char a1, double a2, double a3, double a4, double a5)
{
  id v10 = [objc_allocWithZone((Class)UIBezierPath) init];
  [v10 moveToPoint:a2, a3];
  [v10 addLineToPoint:a4, a5];
  id v11 = [objc_allocWithZone((Class)CAShapeLayer) init];
  id v12 = [v10 CGPath];
  [v11 setPath:v12];

  id v13 = [self clearColor];
  id v14 = [v13 CGColor];

  [v11 setFillColor:v14];
  if (a1)
  {
    if (qword_1004C2860 != -1) {
      swift_once();
    }
    id v15 = &qword_1004F7E90;
  }
  else
  {
    if (qword_1004C2858 != -1) {
      swift_once();
    }
    id v15 = &qword_1004F7E88;
  }
  id v16 = [(id)*v15 CGColor];
  [v11 setStrokeColor:v16];

  if (qword_1004C2870 != -1) {
    swift_once();
  }
  [v11 setLineWidth:*(double *)&qword_1004F7EA0];
  LODWORD(v17) = 1.0;
  [v11 setOpacity:v17];

  return v11;
}

id sub_100017A14(char a1, double a2, double a3)
{
  id v6 = [objc_allocWithZone((Class)CAShapeLayer) init];
  if (qword_1004C2880 != -1) {
    swift_once();
  }
  id v7 = [self bezierPathWithArcCenter:1 radius:a2 startAngle:a3 endAngle:*(double *)&qword_1004F7EB0 clockwise:0.0];
  id v8 = [v7 CGPath];

  [v6 setPath:v8];
  if (a1)
  {
    if (qword_1004C2868 != -1) {
      swift_once();
    }
    double v9 = &qword_1004F7E98;
  }
  else
  {
    if (qword_1004C2858 != -1) {
      swift_once();
    }
    double v9 = &qword_1004F7E88;
  }
  id v10 = [(id)*v9 CGColor];
  [v6 setFillColor:v10];

  id v11 = [self clearColor];
  id v12 = [v11 CGColor];

  [v6 setStrokeColor:v12];
  return v6;
}

uint64_t sub_100017C20()
{
  [*(id *)&v0[OBJC_IVAR____TtC7Measure32DetailedPlatterCellTableViewCell_measureContent] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v1 = [v0 contentView];
  unint64_t v2 = sub_10014CEBC(v1, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  unint64_t v3 = v2;
  if (!(v2 >> 62))
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_10:

    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v3 + 8 * i + 32);
      }
      id v8 = v7;
      [v7 setActive:1];
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

char *sub_100017D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = OBJC_IVAR____TtC7Measure32DetailedPlatterCellTableViewCell_measureContent;
  id v9 = objc_allocWithZone((Class)type metadata accessor for MeasureTableViewCellCommonContentView());
  id v10 = v4;
  *(void *)&v4[v8] = [v9 initWithFrame:0.0, 0.0, 0.0, 0.0];

  if (a3)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  v16.receiver = v10;
  v16.super_class = ObjectType;
  [super initWithStyle:a1 reuseIdentifier:v11];

  id v13 = (char *)v12;
  id v14 = [v13 contentView];
  [v14 addSubview:*(void *)&v13[OBJC_IVAR____TtC7Measure32DetailedPlatterCellTableViewCell_measureContent]];

  sub_100017C20();
  return v13;
}

id sub_100017ED8(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = OBJC_IVAR____TtC7Measure32DetailedPlatterCellTableViewCell_measureContent;
  id v5 = objc_allocWithZone((Class)type metadata accessor for MeasureTableViewCellCommonContentView());
  id v6 = v1;
  *(void *)&v1[v4] = [v5 initWithFrame:0.0, 0.0, 0.0, 0.0];

  v12.receiver = v6;
  v12.super_class = ObjectType;
  id v7 = [super initWithCoder:a1];
  id v8 = v7;
  if (v7)
  {
    id v9 = (char *)v7;
    id v10 = [v9 contentView];
    [v10 addSubview:*(void *)&v9[OBJC_IVAR____TtC7Measure32DetailedPlatterCellTableViewCell_measureContent]];

    sub_100017C20();
  }

  return v8;
}

uint64_t type metadata accessor for DetailedPlatterCellTableViewCell()
{
  return self;
}

id sub_100018030()
{
  return sub_100018070(&OBJC_IVAR____TtC7Measure16SCNPatchDebugger____lazy_storage___pointContainerNode, (uint64_t (*)(void))sub_1000190B8);
}

id sub_100018050()
{
  return sub_100018070(&OBJC_IVAR____TtC7Measure16SCNPatchDebugger____lazy_storage___paintContainerNode, (uint64_t (*)(void))sub_1000190E8);
}

id sub_100018070(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2();
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

uint64_t sub_1000180D0()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure16SCNPatchDebugger____lazy_storage___pointPool;
  if (*(void *)&v0[OBJC_IVAR____TtC7Measure16SCNPatchDebugger____lazy_storage___pointPool])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC7Measure16SCNPatchDebugger____lazy_storage___pointPool];
  }
  else
  {
    uint64_t v3 = v0;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v3;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_10001CADC;
    *(void *)(v5 + 24) = v4;
    sub_100012894(&qword_1004C4110);
    swift_allocObject();
    id v6 = v3;
    uint64_t v2 = ObjectPool.init(allocator:deallocator:synchronized:)();
    *(void *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1000181C4()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure16SCNPatchDebugger____lazy_storage___paintPool;
  if (*(void *)&v0[OBJC_IVAR____TtC7Measure16SCNPatchDebugger____lazy_storage___paintPool])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC7Measure16SCNPatchDebugger____lazy_storage___paintPool];
  }
  else
  {
    uint64_t v3 = v0;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v3;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_10001C958;
    *(void *)(v5 + 24) = v4;
    sub_100012894(&qword_1004C4110);
    swift_allocObject();
    id v6 = v3;
    uint64_t v2 = ObjectPool.init(allocator:deallocator:synchronized:)();
    *(void *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_1000182B8()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure16SCNPatchDebugger____lazy_storage___skRenderer;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Measure16SCNPatchDebugger____lazy_storage___skRenderer);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Measure16SCNPatchDebugger____lazy_storage___skRenderer);
  }
  else
  {
    uint64_t v4 = v0;
    uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC7Measure16SCNPatchDebugger_sceneView);
    uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC7Measure16SCNPatchDebugger_tracker);
    objc_allocWithZone((Class)type metadata accessor for SCNPatchDebugger.SKDebugRenderer());
    id v7 = v5;
    swift_retain();
    SCNPatchDebugger.SKDebugRenderer.init(sceneView:tracker:)(v7, v6);
    id v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

void SCNPatchDebugger.SKDebugRenderer.__allocating_init(sceneView:tracker:)(void *a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  SCNPatchDebugger.SKDebugRenderer.init(sceneView:tracker:)(a1, a2);
}

id SCNPatchDebugger.__allocating_init(sceneView:tracker:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_allocWithZone(v3);
  return SCNPatchDebugger.init(sceneView:tracker:)(a1, v7, a3);
}

id SCNPatchDebugger.init(sceneView:tracker:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR____TtC7Measure16SCNPatchDebugger____lazy_storage___pointContainerNode;
  *(void *)&v3[OBJC_IVAR____TtC7Measure16SCNPatchDebugger____lazy_storage___pointContainerNode] = 0;
  uint64_t v7 = OBJC_IVAR____TtC7Measure16SCNPatchDebugger____lazy_storage___paintContainerNode;
  *(void *)&v3[OBJC_IVAR____TtC7Measure16SCNPatchDebugger____lazy_storage___paintContainerNode] = 0;
  *(void *)&v3[OBJC_IVAR____TtC7Measure16SCNPatchDebugger____lazy_storage___pointPool] = 0;
  *(void *)&v3[OBJC_IVAR____TtC7Measure16SCNPatchDebugger____lazy_storage___paintPool] = 0;
  uint64_t v8 = OBJC_IVAR____TtC7Measure16SCNPatchDebugger____lazy_storage___skRenderer;
  *(void *)&v3[OBJC_IVAR____TtC7Measure16SCNPatchDebugger____lazy_storage___skRenderer] = 0;
  self;
  uint64_t v9 = swift_dynamicCastObjCClass();
  if (v9)
  {
    id v10 = (void *)v9;
    *(void *)&v3[OBJC_IVAR____TtC7Measure16SCNPatchDebugger_sceneView] = v9;
    *(void *)&v3[OBJC_IVAR____TtC7Measure16SCNPatchDebugger_tracker] = a3;
    v21.receiver = v3;
    v21.super_class = (Class)type metadata accessor for SCNPatchDebugger();
    id v11 = a1;
    swift_retain();
    [super init];
    NSString v13 = String._bridgeToObjectiveC()();
    [v12 setName:v13];

    id v14 = self;
    [v14 begin];
    id v15 = [v10 scene];
    id v16 = [v15 rootNode];

    [v16 addChildNode:v12];
    [v14 commit];
    sub_10001C99C(0, (unint64_t *)&unk_1004CA020);
    id v17 = v12;
    PatchTracker.DebugOptions.keys.unsafeMutableAddressor();
    swift_bridgeObjectRetain();
    static NSUserDefaults.observe(observer:keys:)();
    swift_bridgeObjectRelease();

    swift_release();
  }
  else
  {
    id v18 = v3;

    swift_release();
    swift_release();
    swift_release();
    double v19 = *(void **)&v3[v8];

    type metadata accessor for SCNPatchDebugger();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v17;
}

void SCNPatchDebugger.update(intersections:candidates:confidentPoint:result:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v15 = (*(uint64_t (**)(void))(**(void **)(v8 + OBJC_IVAR____TtC7Measure16SCNPatchDebugger_tracker) + 1232))();
  if ((*(void *)PatchTracker.DebugOptions.showPoints.unsafeMutableAddressor() & ~v15) == 0)
  {
    uint64_t v43 = a1;
    char v42 = a5;
    uint64_t v16 = sub_1000180D0();
    id v17 = sub_100018030();
    id v18 = [v17 childNodes];

    sub_10001C99C(0, &qword_1004C4028);
    uint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(uint64_t))(*(void *)v16 + 216))(v19);
    swift_release();
    swift_bridgeObjectRelease();
    id v20 = sub_100018030();
    SCNNode.removeAllChildren()();

    double v41 = *(double *)&a3;
    if (a2) {
      id v44 = *(id *)(a2 + 16);
    }
    else {
      id v44 = 0;
    }
    uint64_t v21 = *(void *)(v43 + 16);
    if (v21)
    {
      uint64_t v40 = a6;
      swift_bridgeObjectRetain();
      uint64_t v22 = 0;
      while (1)
      {
        uint64_t v30 = v43 + 32 + 176 * v22;
        long long v31 = *(_OWORD *)v30;
        id v33 = *(void **)(v30 + 128);
        uint64_t v32 = *(void *)(v30 + 136);
        double v46 = *(double *)v30;
        if (!v44) {
          goto LABEL_7;
        }
        if (!a2)
        {
          __break(1u);
          return;
        }
        uint64_t v34 = *(void *)(a2 + 16);
        if (v34)
        {
          id v35 = (float *)(a2 + 40);
          while (1)
          {
            float32x2_t v36 = vsub_f32(*(float32x2_t *)(v35 - 2), *(float32x2_t *)&v31);
            if ((float)((float)((float)(*v35 - *((float *)&v31 + 2)) * (float)(*v35 - *((float *)&v31 + 2)))
                       + vaddv_f32(vmul_f32(v36, v36))) == 0.0)
              break;
            v35 += 44;
            if (!--v34) {
              goto LABEL_7;
            }
          }
          uint64_t v23 = &selRef_yellowColor;
          double v24 = 0.002;
        }
        else
        {
LABEL_7:
          uint64_t v23 = &selRef_redColor;
          double v24 = 0.001;
        }
        ++v22;
        uint64_t v25 = self;
        swift_retain();
        swift_retain();
        id v26 = [v25 *v23];
        id v27 = v26;
        sub_100018C38(v27, v33, v46, v24, v32, 0, v26);
        float v29 = v28;
        swift_release();
        swift_release();

        if (v22 == v21)
        {
          swift_bridgeObjectRelease();
          a6 = v40;
          break;
        }
      }
    }
    if ((v42 & 1) == 0)
    {
      id v37 = [self magentaColor];
      sub_100018C38(v37, 0, v41, 0.003, 0, (void *)1, 0);
    }
    if ((a8 & 1) == 0)
    {
      id v45 = [self greenColor];
      sub_100018C38(v45, 0, *(double *)&a6, 0.005, 0, (void *)1, 0);
    }
  }
}

void sub_100018C38(void *a1, void *a2, double a3, double a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v11 = sub_1000180D0();
  (*(void (**)(id *__return_ptr))(*(void *)v11 + 200))(&v38);
  swift_release();
  id v12 = v38;
  id v13 = [v38 geometry];
  if (v13)
  {
    id v14 = v13;
    self;
    uint64_t v15 = (void *)swift_dynamicCastObjCClass();
    if (!v15)
    {
LABEL_12:

      goto LABEL_13;
    }
    id v16 = v15;
    id v17 = a7;
    a7 = a2;
    id v18 = [v15 materials];
    sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
    unint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v23) {
        goto LABEL_5;
      }
    }
    else if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_5:
      if ((v19 & 0xC000000000000001) != 0)
      {
        id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_31;
        }
        id v20 = *(id *)(v19 + 32);
      }
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      id v22 = [v21 diffuse];

      [v22 setContents:a1];
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
LABEL_11:
    [v16 setRadius:a4];
    a7 = v17;
    goto LABEL_12;
  }
LABEL_13:
  [v12 setSimdPosition:a3];
  NSString v24 = String._bridgeToObjectiveC()();
  id v16 = [v12 childNodeWithName:v24 recursively:0];

  if (!v16)
  {
LABEL_28:
    id v33 = sub_100018030();
    [v33 addChildNode:v12];

    return;
  }
  if (a6) {
    goto LABEL_26;
  }
  id v25 = [v16 geometry];
  if (!v25) {
    goto LABEL_26;
  }
  a6 = v25;
  self;
  uint64_t v26 = swift_dynamicCastObjCClass();
  if (!v26)
  {

LABEL_26:
    [v16 setHidden:1];
LABEL_27:

    goto LABEL_28;
  }
  id v14 = (void *)v26;
  [v16 setHidden:0];
  id v27 = [v14 materials];
  sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
  unint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v19 >> 62))
  {
    if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_19;
    }
LABEL_32:
    swift_bridgeObjectRelease();
LABEL_33:
    double v35 = a4 * 0.25;
    [v14 setWidth:v35];
    [v14 setHeight:v35];
    SCNNode.setForwardDirection(direction:)();

    goto LABEL_27;
  }
LABEL_31:
  swift_bridgeObjectRetain();
  uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v34) {
    goto LABEL_32;
  }
LABEL_19:
  if ((v19 & 0xC000000000000001) != 0)
  {
    id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_22;
  }
  if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v28 = *(id *)(v19 + 32);
LABEL_22:
    float v29 = v28;
    swift_bridgeObjectRelease();
    id v30 = [v29 diffuse];

    id v31 = a7;
    if (!a7) {
      id v31 = a1;
    }
    id v32 = a7;
    [v30 setContents:v31];

    goto LABEL_33;
  }
  __break(1u);
}

id sub_1000190B8()
{
  return sub_100019118(0xD000000000000014, 0x800000010041F420, (uint64_t (*)(void))&PatchTracker.DebugOptions.showPoints.unsafeMutableAddressor);
}

id sub_1000190E8()
{
  return sub_100019118(0xD000000000000013, 0x800000010041F400, (uint64_t (*)(void))&PatchTracker.DebugOptions.paintMode.unsafeMutableAddressor);
}

id sub_100019118(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v5 = v3;
  id v6 = [objc_allocWithZone((Class)SCNNode) init];
  NSString v7 = String._bridgeToObjectiveC()();
  [v6 setName:v7];

  uint64_t v8 = (*(uint64_t (**)(void))(**(void **)&v5[OBJC_IVAR____TtC7Measure16SCNPatchDebugger_tracker] + 1232))();
  [v6 setHidden:(*(void *)a3() & ~v8) != 0];
  [v5 addChildNode:v6];
  return v6;
}

void SCNPatchDebugger.paint(hitResult:)(float32x4_t a1, double a2, double a3, double a4, double a5, double a6, double a7, float a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, float *a13, float a14)
{
}

Swift::Void __swiftcall SCNPatchDebugger.clearPatches()()
{
  uint64_t v0 = (char *)sub_1000182B8();
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_drawingTexture];
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v2;
    v7[4] = sub_10001C5E8;
    v7[5] = v3;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_10001A0B4;
    v7[3] = &unk_100487EE8;
    uint64_t v4 = _Block_copy(v7);
    id v5 = v1;
    id v6 = v2;
    swift_release();
    [v5 modifyPixelDataWithBlock:v4];
    _Block_release(v4);
  }
  else
  {
    __break(1u);
  }
}

void SCNPatchDebugger.drawPatch(_:)(uint64_t a1)
{
  uint64_t v2 = (char *)sub_1000182B8();
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1003F8B20;
  *(void *)(v3 + 32) = a1;
  v10[0] = v3;
  specialized Array._endMutation()();
  uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_drawingTexture];
  if (v4)
  {
    uint64_t v5 = v10[0];
    id v6 = (void *)swift_allocObject();
    v6[2] = v2;
    v6[3] = v5;
    v6[4] = 0;
    v10[4] = sub_10001C60C;
    v10[5] = v6;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_10001A0B4;
    v10[3] = &unk_100487F38;
    NSString v7 = _Block_copy(v10);
    swift_retain();
    id v8 = v4;
    uint64_t v9 = v2;
    swift_bridgeObjectRetain();
    swift_release();
    [v8 modifyPixelDataWithBlock:v7];
    _Block_release(v7);

    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_100019498()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___width;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___width + 8) == 1)
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_tracker);
    uint64_t v3 = *(void *)(v2 + 224);
    BOOL v4 = __OFADD__(v3, 5);
    uint64_t v5 = v3 + 5;
    if (v4)
    {
      __break(1u);
    }
    else
    {
      uint64_t v6 = *(void *)(v2 + 240);
      uint64_t v7 = v5 * v6;
      if ((unsigned __int128)(v5 * (__int128)v6) >> 64 == (v5 * v6) >> 63)
      {
        if (!__OFADD__(v7, 5))
        {
          *(void *)uint64_t v1 = v7 + 5;
          *(unsigned char *)(v1 + 8) = 0;
          return;
        }
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_9:
    __break(1u);
  }
}

void sub_100019504()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___height;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___height + 8) == 1)
  {
    uint64_t v2 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_tracker) + 224);
    BOOL v3 = __OFADD__(v2, 5);
    uint64_t v4 = v2 + 5;
    if (v3)
    {
      __break(1u);
    }
    else if (v4 + 0x4000000000000000 >= 0)
    {
      uint64_t v5 = 2 * v4;
      if (!__OFADD__(v5, 5))
      {
        *(void *)uint64_t v1 = v5 + 5;
        *(unsigned char *)(v1 + 8) = 0;
        return;
      }
      goto LABEL_9;
    }
    __break(1u);
LABEL_9:
    __break(1u);
  }
}

uint64_t sub_10001956C()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchSizeInPixels);
  if (*(unsigned char *)(v0
                + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchSizeInPixels
                + 8) != 1)
    return *(void *)v1;
  uint64_t result = *(void *)(*(void *)(v0 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_tracker) + 224);
  *(void *)uint64_t v1 = result;
  v1[8] = 0;
  return result;
}

uint64_t sub_1000195A8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchAlphaBuffer;
  if (*(unsigned char *)(v0
                + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchAlphaBuffer
                + 32) != 1)
    return *(void *)v1;
  sub_10001956C();
  static vImage_Buffer.make(width:height:rowBytes:allocating:)();
  uint64_t result = vImage_Buffer.fill(value:)();
  *(void *)uint64_t v1 = result;
  *(void *)(v1 + 8) = v3;
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  *(unsigned char *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_100019634()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchEmbossBuffer;
  if (*(unsigned char *)(v0
                + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchEmbossBuffer
                + 32) != 1)
    return *(void *)v1;
  sub_10001956C();
  uint64_t result = static vImage_Buffer.make(width:height:rowBytes:allocating:)();
  *(void *)uint64_t v1 = result;
  *(void *)(v1 + 8) = v3;
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  *(unsigned char *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1000196A4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchARGBBuffer;
  if (*(unsigned char *)(v0
                + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchARGBBuffer
                + 32) != 1)
    return *(void *)v1;
  uint64_t result = *(void *)(*(void *)(v0 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_tracker) + 224);
  if ((unint64_t)(result - 0x2000000000000000) >> 62 == 3)
  {
    uint64_t result = static vImage_Buffer.make(width:height:rowBytes:allocating:)();
    *(void *)uint64_t v1 = result;
    *(void *)(v1 + 8) = v3;
    *(void *)(v1 + 16) = v4;
    *(void *)(v1 + 24) = v5;
    *(unsigned char *)(v1 + 32) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10001972C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___lineOnBuffer;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___lineOnBuffer + 32) != 1) {
    return *(void *)v1;
  }
  sub_10001956C();
  static vImage_Buffer.make(width:height:rowBytes:allocating:)();
  uint64_t result = vImage_Buffer.fill(value:)();
  *(void *)uint64_t v1 = result;
  *(void *)(v1 + 8) = v3;
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  *(unsigned char *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1000197B0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___lineOffBuffer;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___lineOffBuffer + 32) != 1) {
    return *(void *)v1;
  }
  sub_10001972C();
  vImage_Buffer.clone()();
  uint64_t result = vImage_Buffer.fill(value:)();
  *(void *)uint64_t v1 = result;
  *(void *)(v1 + 8) = v3;
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  *(unsigned char *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_100019820()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___lineARGBBuffer;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___lineARGBBuffer + 32) != 1) {
    return *(void *)v1;
  }
  uint64_t result = sub_10001972C();
  if (v3 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(void *)(v0
                   + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___lineOnBuffer
                   + 16);
    if (((v4 | *(void *)(v0
                          + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___lineOnBuffer
                          + 8)) & 0x8000000000000000) == 0)
    {
      if ((unint64_t)(v4 - 0x2000000000000000) >> 62 == 3)
      {
        uint64_t result = static vImage_Buffer.make(width:height:rowBytes:allocating:)();
        *(void *)uint64_t v1 = result;
        *(void *)(v1 + 8) = v5;
        *(void *)(v1 + 16) = v6;
        *(void *)(v1 + 24) = v7;
        *(unsigned char *)(v1 + 32) = 0;
        return result;
      }
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

void SCNPatchDebugger.SKDebugRenderer.init(sceneView:tracker:)(void *a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_patchPadding] = 5;
  *(void *)&v2[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_bytesPerPixel] = 4;
  *(void *)&v2[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_textureBgColor] = &off_100485438;
  v2[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_renderEmboss] = 1;
  *(void *)&v2[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_drawingTexture] = 0;
  *(void *)&v2[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_drawingNode] = 0;
  uint64_t v5 = &v2[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_textureBuffer];
  *(_OWORD *)uint64_t v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  v5[32] = 1;
  uint64_t v6 = &v2[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___width];
  *(void *)uint64_t v6 = 0;
  v6[8] = 1;
  uint64_t v7 = &v2[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___height];
  *(void *)uint64_t v7 = 0;
  v7[8] = 1;
  id v8 = &v2[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchSizeInPixels];
  *(void *)id v8 = 0;
  v8[8] = 1;
  uint64_t v9 = &v2[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchAlphaBuffer];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  v9[32] = 1;
  id v10 = &v2[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchEmbossBuffer];
  *(_OWORD *)id v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  unsigned char v10[32] = 1;
  uint64_t v11 = &v2[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchARGBBuffer];
  *(_OWORD *)uint64_t v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v11[32] = 1;
  id v12 = &v2[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___lineOnBuffer];
  *(_OWORD *)id v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  v12[32] = 1;
  id v13 = &v2[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___lineOffBuffer];
  *(_OWORD *)id v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  v13[32] = 1;
  id v14 = &v2[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___lineARGBBuffer];
  *(_OWORD *)id v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  v14[32] = 1;
  *(void *)&v2[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_tracker] = a2;
  v41.receiver = v2;
  v41.super_class = (Class)type metadata accessor for SCNPatchDebugger.SKDebugRenderer();
  swift_retain();
  id v15 = [super init];
  sub_100019498();
  double v17 = (double)v16;
  sub_100019504();
  double v19 = (double)v18;
  id v20 = objc_allocWithZone((Class)SKMutableTexture);
  uint64_t v21 = (char *)v15;
  id v22 = [v20 initWithSize:1380401729 pixelFormat:v17 v19 v41.receiver, v41.super_class];
  uint64_t v23 = OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_drawingTexture;
  NSString v24 = *(void **)&v21[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_drawingTexture];
  *(void *)&v21[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_drawingTexture] = v22;

  id v25 = [objc_allocWithZone((Class)SKSpriteNode) initWithTexture:*(void *)&v21[v23]];
  uint64_t v26 = OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_drawingNode;
  id v27 = *(void **)&v21[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_drawingNode];
  *(void *)&v21[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_drawingNode] = v25;

  id v28 = *(void **)&v21[v26];
  if (!v28)
  {
    __break(1u);
    goto LABEL_12;
  }
  [v28 setScale:2.0];
  float v29 = *(void **)&v21[v26];
  if (!v29)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v30 = v29;
  [v30 yScale];
  [v30 setYScale:-v31];

  id v32 = *(void **)&v21[v26];
  if (!v32)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v33 = v32;
  [v33 anchorPoint];
  [v33 setAnchorPoint:0.5];

  uint64_t v34 = *(void **)&v21[v26];
  if (!v34)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v35 = v34;
  [v35 anchorPoint];
  [v35 setAnchorPoint:];

  float32x2_t v36 = *(void **)&v21[v26];
  if (!v36)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  [v36 setZRotation:-1.57079633];
  if (!*(void *)&v21[v26])
  {
LABEL_16:
    __break(1u);
    return;
  }
  uint64_t v37 = (*(uint64_t (**)(id))(*(void *)a2 + 1232))([v21 addChild:]);
  if ((*(void *)PatchTracker.DebugOptions.drawPatches.unsafeMutableAddressor() & ~v37) == 0)
  {
    id v38 = [a1 overlaySKScene];
    if (v38)
    {
      id v39 = v38;
      uint64_t v40 = v21;
      [v39 addChild:v40];
    }
  }

  swift_release();
}

uint64_t type metadata accessor for SCNPatchDebugger()
{
  return self;
}

id SCNPatchDebugger.SKDebugRenderer.__deallocating_deinit()
{
  uint64_t v1 = sub_1000195A8();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  vImage_Buffer.deallocate()();
  id v8 = &v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchAlphaBuffer];
  *(void *)id v8 = v1;
  *((void *)v8 + 1) = v3;
  *((void *)v8 + 2) = v5;
  *((void *)v8 + 3) = v7;
  v8[32] = 0;
  uint64_t v9 = sub_100019634();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  vImage_Buffer.deallocate()();
  uint64_t v16 = &v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchEmbossBuffer];
  *(void *)uint64_t v16 = v9;
  *((void *)v16 + 1) = v11;
  *((void *)v16 + 2) = v13;
  *((void *)v16 + 3) = v15;
  v16[32] = 0;
  uint64_t v17 = sub_1000196A4();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  vImage_Buffer.deallocate()();
  NSString v24 = &v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchARGBBuffer];
  *(void *)NSString v24 = v17;
  *((void *)v24 + 1) = v19;
  *((void *)v24 + 2) = v21;
  *((void *)v24 + 3) = v23;
  v24[32] = 0;
  uint64_t v25 = sub_10001972C();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  vImage_Buffer.deallocate()();
  id v32 = &v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___lineOnBuffer];
  *(void *)id v32 = v25;
  *((void *)v32 + 1) = v27;
  *((void *)v32 + 2) = v29;
  *((void *)v32 + 3) = v31;
  v32[32] = 0;
  uint64_t v33 = sub_1000197B0();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  vImage_Buffer.deallocate()();
  uint64_t v40 = &v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___lineOffBuffer];
  *(void *)uint64_t v40 = v33;
  *((void *)v40 + 1) = v35;
  *((void *)v40 + 2) = v37;
  *((void *)v40 + 3) = v39;
  v40[32] = 0;
  uint64_t v41 = sub_100019820();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v51 = v41;
  uint64_t v52 = v42;
  uint64_t v53 = v44;
  uint64_t v54 = v46;
  vImage_Buffer.deallocate()();
  unint64_t v48 = &v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___lineARGBBuffer];
  *(void *)unint64_t v48 = v41;
  *((void *)v48 + 1) = v43;
  *((void *)v48 + 2) = v45;
  *((void *)v48 + 3) = v47;
  v48[32] = 0;
  v50.receiver = v0;
  v50.super_class = (Class)type metadata accessor for SCNPatchDebugger.SKDebugRenderer();
  return [super dealloc];
}

Swift::Void __swiftcall SCNPatchDebugger.SKDebugRenderer.clear()()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_drawingTexture];
  if (v1)
  {
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = v0;
    v6[4] = sub_10001CB34;
    v6[5] = v2;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 1107296256;
    v6[2] = sub_10001A0B4;
    v6[3] = &unk_100487F88;
    uint64_t v3 = _Block_copy(v6);
    id v4 = v1;
    uint64_t v5 = v0;
    swift_release();
    [v4 modifyPixelDataWithBlock:v3];
    _Block_release(v3);
  }
  else
  {
    __break(1u);
  }
}

vImage_Error sub_10001A034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (_OWORD *)(a3 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_textureBuffer);
  if ((*(unsigned char *)(a3 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_textureBuffer + 32) & 1) == 0)
  {
    long long v4 = v3[1];
    *(_OWORD *)&v6.data = *v3;
    *(_OWORD *)&v6.width = v4;
    return vImageBufferFill_ARGB8888(&v6, (const uint8_t *)(*(void *)(a3+ OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_textureBgColor)+ 32), 0);
  }
  return result;
}

uint64_t sub_10001A0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);

  return swift_release();
}

void SCNPatchDebugger.SKDebugRenderer.drawPatches(goodPatches:badPatches:result:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)&v2[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_drawingTexture];
  if (v3)
  {
    vImage_Buffer v6 = (void *)swift_allocObject();
    v6[2] = v2;
    v6[3] = a1;
    v6[4] = a2;
    v10[4] = sub_10001CB6C;
    v10[5] = v6;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_10001A0B4;
    v10[3] = &unk_100487FD8;
    uint64_t v7 = _Block_copy(v10);
    swift_bridgeObjectRetain();
    id v8 = v3;
    uint64_t v9 = v2;
    swift_bridgeObjectRetain();
    swift_release();
    [v8 modifyPixelDataWithBlock:v7];
    _Block_release(v7);
  }
  else
  {
    __break(1u);
  }
}

void sub_10001A22C(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5)
{
  if (!a1) {
    goto LABEL_10;
  }
  id v8 = &a3[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_textureBuffer];
  if (a3[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_textureBuffer + 32] != 1) {
    goto LABEL_10;
  }
  sub_100019498();
  if (v11 < 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v12 = v11;
  sub_100019504();
  if (v13 < 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v14 = *(void *)&a3[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___height];
  if (!v14)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (a2 != 0x8000000000000000 || v14 != -1)
  {
    *(void *)id v8 = a1;
    *((void *)v8 + 1) = v13;
    *((void *)v8 + 2) = v12;
    *((void *)v8 + 3) = a2 / v14;
    v8[32] = 0;
    id v15 = [a3 scene];
    if (v15)
    {
      uint64_t v16 = v15;
      [v15 size];
      double v18 = v17;
      [a3 position];
      [a3 setPosition:v18];
      [v16 size];
      [a3 position];
      [a3 setPosition:];
    }
LABEL_10:
    sub_10001A38C(a4, a5);
    return;
  }
LABEL_14:
  __break(1u);
}

uint64_t sub_10001A38C(uint64_t result, uint64_t a2)
{
  uint64_t v5 = v2;
  vImage_Buffer v6 = (_OWORD *)(v2 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_textureBuffer);
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_textureBuffer + 32)) {
    return result;
  }
  size_t rowBytes = result;
  long long v9 = v6[1];
  *(_OWORD *)&dest.uint64_t data = *v6;
  *(_OWORD *)&dest.width = v9;
  vImageBufferFill_ARGB8888(&dest, (const uint8_t *)(*(void *)(v5 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_textureBgColor)+ 32), 0);
  size_t v79 = rowBytes;
  if (a2)
  {
    v90[0] = a2;
    if (rowBytes >> 62)
    {
      if ((rowBytes & 0x8000000000000000) != 0) {
        uint64_t data = rowBytes;
      }
      else {
        uint64_t data = rowBytes & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      uint64_t v10 = *(void *)((rowBytes & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    int64_t i = *(void *)(*(void *)(v5 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_tracker) + 232);
    if (v10 < i)
    {
      uint64_t data = 0;
      sub_10001AB04(v90);
      BOOL v11 = __OFSUB__(i, v10);
      i -= v10;
      if (v11) {
        goto LABEL_87;
      }
      uint64_t data = v90[0];
      if ((unint64_t)v90[0] >> 62)
      {
LABEL_88:
        swift_bridgeObjectRetain();
        uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v12 = *(void *)((v90[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (v12 >= i) {
        int64_t v13 = i;
      }
      else {
        int64_t v13 = v12;
      }
      if (v13 < 0)
      {
        __break(1u);
        goto LABEL_90;
      }
      if (v13)
      {
        if ((data & 0xC000000000000001) != 0
          || (unint64_t)(v13 - 1) < *(void *)((data & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          for (int64_t i = 0; i != v13; ++i)
          {
            if ((data & 0xC000000000000001) != 0) {
              specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              swift_retain();
            }
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          swift_bridgeObjectRelease();
          size_t rowBytes = v79;
          goto LABEL_26;
        }
LABEL_90:
        __break(1u);
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
LABEL_26:
  if (rowBytes >> 62) {
    goto LABEL_79;
  }
  uint64_t v14 = *(void *)((rowBytes & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v14)
  {
    if (v14 < 1)
    {
      __break(1u);
LABEL_87:
      __break(1u);
      goto LABEL_88;
    }
    uint64_t v15 = v5 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchARGBBuffer;
    uint64_t v16 = v5 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___lineOnBuffer;
    v75 = (_OWORD *)(v5 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___lineOffBuffer);
    uint64_t v77 = OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchSizeInPixels;
    v74 = (_OWORD *)(v5 + OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchAlphaBuffer);
    size_t v76 = rowBytes;
    type metadata accessor for CVUtil();
    uint64_t v17 = 0;
    unint64_t v78 = rowBytes & 0xC000000000000001;
    while (1)
    {
      if (v78)
      {
        uint64_t v18 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v21 = (float *)v18;
      }
      else
      {
        uint64_t v21 = *(float **)(rowBytes + 8 * v17 + 32);
        uint64_t v18 = swift_retain();
      }
      srcG.uint64_t data = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v21 + 232))(v18, v19, v20);
      srcG.height = v22;
      srcG.width = v23;
      srcG.size_t rowBytes = v24;
      srcB.uint64_t data = (void *)sub_1000195A8();
      srcB.height = v25;
      srcB.width = v26;
      srcB.size_t rowBytes = v27;
      srcR.uint64_t data = (void *)sub_1000196A4();
      srcR.height = v28;
      srcR.width = v29;
      srcR.size_t rowBytes = v30;
      vImageConvert_Planar8toARGB8888(&srcG, &srcG, &srcG, &srcB, &srcR, 0);
      uint64_t data = *(void *)v15;
      int64_t i = *(void *)(v15 + 8);
      size_t rowBytes = *(void *)(v15 + 24);
      uint64_t v31 = sub_10001956C();
      uint64_t v32 = v31 + 5;
      if (__OFADD__(v31, 5)) {
        break;
      }
      if ((unsigned __int128)(v17 * (__int128)v32) >> 64 != (v17 * v32) >> 63) {
        goto LABEL_64;
      }
      if (__OFADD__(v17 * v32, 5)) {
        goto LABEL_65;
      }
      vImage_Buffer.draw(onto:offsetX:offsetY:bytesPerPixel:)();
      float v33 = v21[30];
      if (v33 > 0.0)
      {
        if (v33 <= 1.0) {
          float v34 = v21[30];
        }
        else {
          float v34 = 1.0;
        }
        uint64_t v35 = sub_10001972C();
        float v37 = roundf(v34 * (float)v36);
        if ((~LODWORD(v37) & 0x7F800000) == 0) {
          goto LABEL_66;
        }
        if (v37 <= -9.2234e18) {
          goto LABEL_67;
        }
        if (v37 >= 9.2234e18) {
          goto LABEL_68;
        }
        uint64_t v38 = (*(uint64_t (**)(uint64_t))(*(void *)v21 + 208))(v35);
        if (v38)
        {
          srcB.uint64_t data = (void *)sub_1000197B0();
          srcB.height = v41;
          srcB.width = v42;
          srcB.size_t rowBytes = v43;
          uint64_t v44 = *(void **)v16;
          vImagePixelCount v45 = *(void *)(v16 + 8);
          vImagePixelCount v46 = *(void *)(v16 + 16);
          size_t v47 = *(void *)(v16 + 24);
          srcR.uint64_t data = *(void **)v16;
          srcR.height = v45;
          srcR.width = v46;
          srcR.size_t rowBytes = v47;
          long long v48 = v75[1];
          *(_OWORD *)&v82.uint64_t data = *v75;
          *(_OWORD *)&v82.width = v48;
          goto LABEL_48;
        }
        if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v21 + 216))(v38, v39, v40))
        {
          srcB.uint64_t data = (void *)sub_1000197B0();
          srcB.height = v49;
          srcB.width = v50;
          srcB.size_t rowBytes = v51;
          long long v52 = v75[1];
          *(_OWORD *)&srcR.uint64_t data = *v75;
          *(_OWORD *)&srcR.width = v52;
          uint64_t v44 = *(void **)v16;
          vImagePixelCount v45 = *(void *)(v16 + 8);
          vImagePixelCount v46 = *(void *)(v16 + 16);
          size_t v47 = *(void *)(v16 + 24);
          v82.uint64_t data = *(void **)v16;
          v82.height = v45;
          v82.width = v46;
          v82.size_t rowBytes = v47;
LABEL_48:
          v81.uint64_t data = v44;
          v81.height = v45;
          v81.width = v46;
          v81.size_t rowBytes = v47;
        }
        else
        {
          long long v53 = *(_OWORD *)(v16 + 16);
          *(_OWORD *)&srcB.uint64_t data = *(_OWORD *)v16;
          *(_OWORD *)&srcB.width = v53;
          srcR.uint64_t data = (void *)sub_1000197B0();
          srcR.height = v54;
          srcR.width = v55;
          srcR.size_t rowBytes = v56;
          long long v57 = v75[1];
          *(_OWORD *)&v82.uint64_t data = *v75;
          *(_OWORD *)&v82.width = v57;
          long long v58 = *(_OWORD *)(v16 + 16);
          *(_OWORD *)&v81.uint64_t data = *(_OWORD *)v16;
          *(_OWORD *)&v81.width = v58;
        }
        v80.uint64_t data = (void *)sub_100019820();
        v80.height = v59;
        v80.width = v60;
        v80.size_t rowBytes = v61;
        vImageConvert_Planar8toARGB8888(&srcB, &srcR, &v82, &v81, &v80, 0);
        uint64_t v62 = *(void *)(v5 + v77);
        uint64_t v63 = v62 + 5;
        if (__OFADD__(v62, 5)) {
          goto LABEL_69;
        }
        uint64_t v64 = v17 * v63;
        if ((unsigned __int128)(v17 * (__int128)v63) >> 64 != (v17 * v63) >> 63) {
          goto LABEL_70;
        }
        BOOL v11 = __OFADD__(v64, 5);
        uint64_t v65 = v64 + 5;
        if (v11) {
          goto LABEL_71;
        }
        if (__OFADD__(v65, v62)) {
          goto LABEL_73;
        }
        uint64_t v66 = *(void *)(v16 + 8);
        if (__OFADD__(v66, 5)) {
          goto LABEL_75;
        }
        if (__OFSUB__(v66 + 5, (uint64_t)v37)) {
          goto LABEL_77;
        }
        if ((*(void *)(v16 + 16) | v66) < 0) {
          goto LABEL_78;
        }
        sub_100019820();
        vImage_Buffer.draw(onto:within:bytesPerPixel:)();
      }
      uint64_t data = (uint64_t)srcG.data;
      int64_t i = srcG.height;
      size_t rowBytes = srcG.rowBytes;
      v90[0] = sub_100019634();
      v90[1] = v67;
      v90[2] = v68;
      v90[3] = v69;
      char v91 = 0;
      static CVUtil.emboss(srcBuffer:dstBuffer:tempBuffer:flags:)();
      sub_10001C768((uint64_t)v87, (uint64_t)&v88);
      if ((v89 & 1) == 0)
      {
        vImage_Buffer srcB = v88;
        long long v70 = v74[1];
        *(_OWORD *)&srcR.uint64_t data = *v74;
        *(_OWORD *)&srcR.width = v70;
        long long v71 = *(_OWORD *)(v15 + 16);
        *(_OWORD *)&v82.uint64_t data = *(_OWORD *)v15;
        *(_OWORD *)&v82.width = v71;
        vImageConvert_Planar8toARGB8888(&srcB, &srcB, &srcB, &srcR, &v82, 0);
        uint64_t v72 = *(void *)(v5 + v77);
        uint64_t v73 = v17 * (v72 + 5);
        if ((unsigned __int128)(v17 * (__int128)(v72 + 5)) >> 64 != v73 >> 63) {
          goto LABEL_72;
        }
        if (__OFADD__(v73, 5)) {
          goto LABEL_74;
        }
        if (__OFADD__(v72, 10)) {
          goto LABEL_76;
        }
        vImage_Buffer.draw(onto:offsetX:offsetY:bytesPerPixel:)();
      }
      swift_release();
      ++v17;
      size_t rowBytes = v76;
      if (v14 == v17) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_10001AB04(uint64_t *a1)
{
  uint64_t v2 = *a1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v2;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v2 < 0 || (v2 & 0x4000000000000000) != 0)
  {
    uint64_t v2 = sub_100030BAC(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v6[0] = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v6[1] = v4;
  sub_10001AE68(v6);
  return specialized Array._endMutation()();
}

id SCNSegmentationDebugger.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

void SCNPatchDebugger.SKDebugRenderer.init()()
{
}

void SCNPatchDebugger.init()()
{
}

id SCNPatchDebugger.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SCNPatchDebugger();
  return [super dealloc];
}

id sub_10001AD50@<X0>(void *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  id v6 = objc_allocWithZone((Class)type metadata accessor for SCNPatchDebugger());
  id result = SCNPatchDebugger.init(sceneView:tracker:)(a1, (uint64_t)v6, a2);
  *a3 = result;
  return result;
}

void sub_10001ADA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, char a8)
{
}

void sub_10001ADCC(float32x4_t a1, double a2, double a3, double a4, double a5, double a6, double a7, float a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, float *a13, float a14)
{
}

void sub_10001ADFC()
{
}

void sub_10001AE20(uint64_t a1)
{
}

void sub_10001AE44(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10001AE68(uint64_t *a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v4);
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_130;
    }
    if (v4) {
      return sub_10001B498(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_129;
  }
  uint64_t v7 = result;
  v87 = a1;
  if (v4 > 1)
  {
    uint64_t v8 = v6 >> 1;
    type metadata accessor for PatchTracker.Patch();
    uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    v92 = (char *)((result & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v93 = result;
LABEL_12:
    Swift::Int v10 = 0;
    uint64_t v11 = *a1;
    uint64_t v88 = *a1 - 8;
    long long v9 = (char *)&_swiftEmptyArrayStorage;
    uint64_t v89 = v7;
    Swift::Int v90 = v4;
    uint64_t v91 = *a1;
    while (1)
    {
      Swift::Int v13 = v10++;
      if (v10 < v4)
      {
        uint64_t v14 = *(void *)(v11 + 8 * v10);
        float v15 = *(float *)(v14 + 120);
        float v16 = *(float *)(*(void *)(v11 + 8 * v13) + 120);
        Swift::Int v10 = v13 + 2;
        if (v13 + 2 < v4)
        {
          float v17 = *(float *)(v14 + 120);
          while (1)
          {
            float v18 = v17;
            float v17 = *(float *)(*(void *)(v11 + 8 * v10) + 120);
            if (v16 <= v15 == v18 > v17) {
              break;
            }
            if (v4 == ++v10)
            {
              Swift::Int v10 = v4;
              break;
            }
          }
        }
        if (v16 <= v15)
        {
          if (v10 < v13) {
            goto LABEL_131;
          }
          if (v13 < v10)
          {
            uint64_t v19 = (uint64_t *)(v88 + 8 * v10);
            Swift::Int v20 = v10;
            Swift::Int v21 = v13;
            vImagePixelCount v22 = (uint64_t *)(v11 + 8 * v13);
            do
            {
              if (v21 != --v20)
              {
                if (!v11) {
                  goto LABEL_136;
                }
                uint64_t v23 = *v22;
                *vImagePixelCount v22 = *v19;
                *uint64_t v19 = v23;
              }
              ++v21;
              --v19;
              ++v22;
            }
            while (v21 < v20);
          }
        }
      }
      if (v10 < v4)
      {
        if (__OFSUB__(v10, v13)) {
          goto LABEL_128;
        }
        if (v10 - v13 < v7)
        {
          Swift::Int v24 = v13 + v7;
          if (__OFADD__(v13, v7)) {
            goto LABEL_132;
          }
          if (v24 >= v4) {
            Swift::Int v24 = v4;
          }
          if (v24 < v13)
          {
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
            return result;
          }
          if (v10 != v24)
          {
            vImagePixelCount v25 = (void *)(v88 + 8 * v10);
            do
            {
              uint64_t v26 = *(void *)(v11 + 8 * v10);
              Swift::Int v27 = v13;
              vImagePixelCount v28 = v25;
              do
              {
                uint64_t v29 = *v28;
                if (*(float *)(*v28 + 120) > *(float *)(v26 + 120)) {
                  break;
                }
                if (!v11) {
                  goto LABEL_134;
                }
                *vImagePixelCount v28 = v26;
                v28[1] = v29;
                --v28;
                ++v27;
              }
              while (v10 != v27);
              ++v10;
              ++v25;
            }
            while (v10 != v24);
            Swift::Int v10 = v24;
          }
        }
      }
      if (v10 < v13) {
        goto LABEL_123;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1000BE0E4(0, *((void *)v9 + 2) + 1, 1, v9);
        long long v9 = (char *)result;
      }
      unint64_t v31 = *((void *)v9 + 2);
      unint64_t v30 = *((void *)v9 + 3);
      unint64_t v12 = v31 + 1;
      uint64_t v11 = v91;
      if (v31 >= v30 >> 1)
      {
        uint64_t result = (uint64_t)sub_1000BE0E4((char *)(v30 > 1), v31 + 1, 1, v9);
        uint64_t v11 = v91;
        long long v9 = (char *)result;
      }
      *((void *)v9 + 2) = v12;
      uint64_t v32 = v9 + 32;
      float v33 = (Swift::Int *)&v9[16 * v31 + 32];
      Swift::Int *v33 = v13;
      v33[1] = v10;
      if (v31)
      {
        while (1)
        {
          unint64_t v34 = v12 - 1;
          if (v12 >= 4)
          {
            uint64_t v39 = &v32[16 * v12];
            uint64_t v40 = *((void *)v39 - 8);
            uint64_t v41 = *((void *)v39 - 7);
            BOOL v45 = __OFSUB__(v41, v40);
            uint64_t v42 = v41 - v40;
            if (v45) {
              goto LABEL_112;
            }
            uint64_t v44 = *((void *)v39 - 6);
            uint64_t v43 = *((void *)v39 - 5);
            BOOL v45 = __OFSUB__(v43, v44);
            uint64_t v37 = v43 - v44;
            char v38 = v45;
            if (v45) {
              goto LABEL_113;
            }
            unint64_t v46 = v12 - 2;
            size_t v47 = &v32[16 * v12 - 32];
            uint64_t v49 = *(void *)v47;
            uint64_t v48 = *((void *)v47 + 1);
            BOOL v45 = __OFSUB__(v48, v49);
            uint64_t v50 = v48 - v49;
            if (v45) {
              goto LABEL_114;
            }
            BOOL v45 = __OFADD__(v37, v50);
            uint64_t v51 = v37 + v50;
            if (v45) {
              goto LABEL_116;
            }
            if (v51 >= v42)
            {
              uint64_t v69 = &v32[16 * v34];
              uint64_t v71 = *(void *)v69;
              uint64_t v70 = *((void *)v69 + 1);
              BOOL v45 = __OFSUB__(v70, v71);
              uint64_t v72 = v70 - v71;
              if (v45) {
                goto LABEL_122;
              }
              BOOL v62 = v37 < v72;
              goto LABEL_82;
            }
          }
          else
          {
            if (v12 != 3)
            {
              uint64_t v63 = *((void *)v9 + 4);
              uint64_t v64 = *((void *)v9 + 5);
              BOOL v45 = __OFSUB__(v64, v63);
              uint64_t v56 = v64 - v63;
              char v57 = v45;
              goto LABEL_76;
            }
            uint64_t v36 = *((void *)v9 + 4);
            uint64_t v35 = *((void *)v9 + 5);
            BOOL v45 = __OFSUB__(v35, v36);
            uint64_t v37 = v35 - v36;
            char v38 = v45;
          }
          if (v38) {
            goto LABEL_115;
          }
          unint64_t v46 = v12 - 2;
          long long v52 = &v32[16 * v12 - 32];
          uint64_t v54 = *(void *)v52;
          uint64_t v53 = *((void *)v52 + 1);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v56 = v53 - v54;
          char v57 = v55;
          if (v55) {
            goto LABEL_117;
          }
          long long v58 = &v32[16 * v34];
          uint64_t v60 = *(void *)v58;
          uint64_t v59 = *((void *)v58 + 1);
          BOOL v45 = __OFSUB__(v59, v60);
          uint64_t v61 = v59 - v60;
          if (v45) {
            goto LABEL_119;
          }
          if (__OFADD__(v56, v61)) {
            goto LABEL_121;
          }
          if (v56 + v61 >= v37)
          {
            BOOL v62 = v37 < v61;
LABEL_82:
            if (v62) {
              unint64_t v34 = v46;
            }
            goto LABEL_84;
          }
LABEL_76:
          if (v57) {
            goto LABEL_118;
          }
          uint64_t v65 = &v32[16 * v34];
          uint64_t v67 = *(void *)v65;
          uint64_t v66 = *((void *)v65 + 1);
          BOOL v45 = __OFSUB__(v66, v67);
          uint64_t v68 = v66 - v67;
          if (v45) {
            goto LABEL_120;
          }
          if (v68 < v56) {
            goto LABEL_14;
          }
LABEL_84:
          unint64_t v73 = v34 - 1;
          if (v34 - 1 >= v12)
          {
            __break(1u);
LABEL_109:
            __break(1u);
LABEL_110:
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
            goto LABEL_133;
          }
          if (!v11) {
            goto LABEL_135;
          }
          v74 = (unint64_t *)v9;
          v75 = &v32[16 * v73];
          uint64_t v76 = *(void *)v75;
          uint64_t v77 = &v32[16 * v34];
          uint64_t v78 = *((void *)v77 + 1);
          uint64_t result = sub_10001B500((char *)(v11 + 8 * *(void *)v75), (char *)(v11 + 8 * *(void *)v77), v11 + 8 * v78, v92);
          if (v1) {
            goto LABEL_92;
          }
          if (v78 < v76) {
            goto LABEL_109;
          }
          if (v34 > v74[2]) {
            goto LABEL_110;
          }
          *(void *)v75 = v76;
          *(void *)&v32[16 * v73 + 8] = v78;
          unint64_t v79 = v74[2];
          if (v34 >= v79) {
            goto LABEL_111;
          }
          long long v9 = (char *)v74;
          unint64_t v12 = v79 - 1;
          uint64_t result = (uint64_t)memmove(&v32[16 * v34], v77 + 16, 16 * (v79 - 1 - v34));
          v74[2] = v79 - 1;
          uint64_t v11 = v91;
          if (v79 <= 2) {
            goto LABEL_14;
          }
        }
      }
      unint64_t v12 = 1;
LABEL_14:
      uint64_t v7 = v89;
      Swift::Int v4 = v90;
      if (v10 >= v90)
      {
        uint64_t v2 = v1;
        goto LABEL_95;
      }
    }
  }
  long long v9 = (char *)&_swiftEmptyArrayStorage;
  uint64_t v93 = (uint64_t)&_swiftEmptyArrayStorage;
  v92 = (char *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
  if (v4 == 1) {
    goto LABEL_12;
  }
  unint64_t v12 = *((void *)&_swiftEmptyArrayStorage + 2);
LABEL_95:
  uint64_t result = (uint64_t)v9;
  if (v12 >= 2)
  {
    uint64_t v80 = *v87;
    do
    {
      unint64_t v81 = v12 - 2;
      if (v12 < 2) {
        goto LABEL_124;
      }
      if (!v80) {
        goto LABEL_137;
      }
      uint64_t v82 = result;
      uint64_t v83 = *(void *)(result + 32 + 16 * v81);
      uint64_t v84 = *(void *)(result + 32 + 16 * (v12 - 1) + 8);
      uint64_t result = sub_10001B500((char *)(v80 + 8 * v83), (char *)(v80 + 8 * *(void *)(result + 32 + 16 * (v12 - 1))), v80 + 8 * v84, v92);
      if (v2) {
        break;
      }
      if (v84 < v83) {
        goto LABEL_125;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1000BE1E0(v82);
        uint64_t v82 = result;
      }
      if (v81 >= *(void *)(v82 + 16)) {
        goto LABEL_126;
      }
      v85 = (void *)(v82 + 32 + 16 * v81);
      void *v85 = v83;
      v85[1] = v84;
      unint64_t v86 = *(void *)(v82 + 16);
      if (v12 > v86) {
        goto LABEL_127;
      }
      memmove((void *)(v82 + 32 + 16 * (v12 - 1)), (const void *)(v82 + 32 + 16 * v12), 16 * (v86 - v12));
      uint64_t result = v82;
      *(void *)(v82 + 16) = v86 - 1;
      unint64_t v12 = v86 - 1;
    }
    while (v86 > 2);
  }
LABEL_92:
  swift_bridgeObjectRelease();
  *(void *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
  specialized Array._endMutation()();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10001B498(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v6 = *(void *)(v4 + 8 * a3);
    uint64_t v7 = result;
    uint64_t v8 = (void *)v5;
    while (1)
    {
      uint64_t v9 = *v8;
      if (*(float *)(*v8 + 120) > *(float *)(v6 + 120))
      {
LABEL_4:
        ++a3;
        v5 += 8;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v4) {
        break;
      }
      *uint64_t v8 = v6;
      v8[1] = v9;
      --v8;
      if (a3 == ++v7) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10001B500(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 7;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 3;
  if (v10 >= v12 >> 3)
  {
    if (a4 != __src || &__src[8 * v13] <= a4) {
      memmove(a4, __src, 8 * v13);
    }
    uint64_t v14 = &v4[8 * v13];
    if (v7 >= v6 || v11 < 8) {
      goto LABEL_39;
    }
    float v17 = (char *)(a3 - 8);
    float v18 = v6;
    while (1)
    {
      uint64_t v19 = v17 + 8;
      uint64_t v21 = *((void *)v18 - 1);
      v18 -= 8;
      uint64_t v20 = v21;
      if (*(float *)(v21 + 120) <= *(float *)(*((void *)v14 - 1) + 120)) {
        break;
      }
      uint64_t v20 = *((void *)v14 - 1);
      float v18 = v6;
      if (v19 != v14)
      {
        v14 -= 8;
LABEL_35:
        *(void *)float v17 = v20;
        goto LABEL_36;
      }
      BOOL v22 = v17 >= v14;
      v14 -= 8;
      if (v22) {
        goto LABEL_35;
      }
LABEL_36:
      if (v18 > v7)
      {
        v17 -= 8;
        uint64_t v6 = v18;
        if (v14 > v4) {
          continue;
        }
      }
      uint64_t v6 = v18;
      goto LABEL_39;
    }
    if (v19 == v6 && v17 < v6) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (a4 != __dst || &__dst[8 * v10] <= a4) {
    memmove(a4, __dst, 8 * v10);
  }
  uint64_t v14 = &v4[8 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      uint64_t v15 = *(void *)v6;
      if (*(float *)(*(void *)v4 + 120) <= *(float *)(*(void *)v6 + 120)) {
        break;
      }
      uint64_t v15 = *(void *)v4;
      BOOL v16 = v7 == v4;
      v4 += 8;
      if (!v16) {
        goto LABEL_16;
      }
LABEL_17:
      v7 += 8;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_19;
      }
    }
    BOOL v16 = v7 == v6;
    v6 += 8;
    if (v16) {
      goto LABEL_17;
    }
LABEL_16:
    *(void *)uint64_t v7 = v15;
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v6 = v7;
LABEL_39:
  int64_t v23 = v14 - v4 + (v14 - v4 < 0 ? 7uLL : 0);
  if (v6 != v4 || v6 >= &v4[v23 & 0xFFFFFFFFFFFFFFF8]) {
    memmove(v6, v4, 8 * (v23 >> 3));
  }
  return 1;
}

void sub_10001B714()
{
  id v0 = [self sphereWithRadius:0.002];
  uint64_t v1 = self;
  id v2 = [v1 nodeWithGeometry:v0];
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 setName:v3];

  [v2 setOpacity:0.5];
  id v4 = [self boxWithWidth:0.0005 height:0.0005 length:0.5 chamferRadius:0.0];
  id v5 = [v1 nodeWithGeometry:v4];

  NSString v6 = String._bridgeToObjectiveC()();
  [v5 setName:v6];

  id v7 = [v5 geometry];
  if (!v7) {
    goto LABEL_10;
  }
  int64_t v8 = v7;
  id v9 = [v7 materials];

  sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v10 >> 62))
  {
    if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_9;
  }
LABEL_4:
  if ((v10 & 0xC000000000000001) != 0)
  {
    id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v11 = *(id *)(v10 + 32);
LABEL_7:
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    id v13 = [v12 diffuse];

    id v14 = [self redColor];
    [v13 setContents:v14];

LABEL_10:
    [v5 position];
    [v5 setPosition:];
    [v5 setHidden:1];
    [v2 addChildNode:v5];

    return;
  }
  __break(1u);
}

void sub_10001BA04()
{
  id v0 = [self sphereWithRadius:0.001];
  id v1 = [v0 materials];
  sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_20;
    }
    id v3 = *(id *)(v2 + 32);
  }
  id v4 = v3;
  swift_bridgeObjectRelease();
  id v5 = [v4 diffuse];

  id v6 = [self yellowColor];
  [v5 setContents:v6];

LABEL_9:
  id v8 = [v0 materials];
  unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v9 >> 62))
  {
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_11;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v12) {
    goto LABEL_16;
  }
LABEL_11:
  if ((v9 & 0xC000000000000001) != 0)
  {
LABEL_20:
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_14;
  }
  if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v10 = *(id *)(v9 + 32);
LABEL_14:
    id v11 = v10;
    swift_bridgeObjectRelease();
    [v11 setBlendMode:4];

LABEL_17:
    id v13 = [self nodeWithGeometry:v0];
    NSString v14 = String._bridgeToObjectiveC()();
    [v13 setName:v14];

    [v13 setOpacity:0.1];
    return;
  }
  __break(1u);
}

void _s7Measure16SCNPatchDebuggerC12observeValue10forKeyPath2of6change7contextySSSg_ypSgSDySo05NSKeye6ChangeG0aypGSgSvSgtF_0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = v2;
    uint64_t v6 = PatchTracker.DebugOptions.keyForFeature.unsafeMutableAddressor();
    uint64_t v7 = *(void *)v6;
    if (*(void *)(*(void *)v6 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v8 = sub_1000E20D4(a1, a2);
      if (v9)
      {
        uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10001C99C(0, (unint64_t *)&unk_1004CA020);
        uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC7Measure16SCNPatchDebugger_tracker);
        uint64_t v26 = v10;
        uint64_t v12 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v11 + 1248))(v25);
        sub_10001CAE0();
        char v13 = static NSUserDefaults.update<A>(_:key:feature:)();
        v12(v25, 0);
        if (*(void *)PatchTracker.DebugOptions.showPoints.unsafeMutableAddressor() == v10)
        {
          id v14 = sub_100018030();
          [v14 setHidden:(v13 & 1) == 0];
LABEL_6:

          return;
        }
        if (*(void *)PatchTracker.DebugOptions.paintMode.unsafeMutableAddressor() == v10)
        {
          id v15 = sub_100018050();
          [v15 setHidden:(v13 & 1) == 0];

          if (v13)
          {
            uint64_t v16 = sub_1000181C4();
            id v17 = sub_100018050();
            id v18 = [v17 childNodes];

            sub_10001C99C(0, &qword_1004C4028);
            uint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            (*(void (**)(uint64_t))(*(void *)v16 + 216))(v19);
            swift_release();
            swift_bridgeObjectRelease();
            id v20 = sub_100018050();
            SCNNode.removeAllChildren()();
          }
        }
        else if (*(void *)PatchTracker.DebugOptions.drawPatches.unsafeMutableAddressor() == v10)
        {
          id v21 = sub_1000182B8();
          id v22 = [v21 parent];

          if (v13)
          {
            if (!v22)
            {
              id v23 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v3
                                                                          + OBJC_IVAR____TtC7Measure16SCNPatchDebugger_sceneView), "overlaySKScene"));
              if (v23)
              {
                Swift::Int v24 = v23;
                id v14 = sub_1000182B8();
                [v24 addChild:v14];

                goto LABEL_6;
              }
            }
          }
          else if (v22)
          {
            id v14 = sub_1000182B8();
            [v14 removeFromParent];
            goto LABEL_6;
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
}

void sub_10001C020(float *a1, float32x4_t a2, float a3, float a4)
{
  id v8 = sub_100018050();
  id v9 = [v8 childNodes];

  sub_10001C99C(0, &qword_1004C4028);
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v10 >> 62))
  {
    uint64_t v11 = *(char **)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    uint64_t v18 = sub_1000181C4();
    (*(void (**)(char **__return_ptr))(*(void *)v18 + 200))(&v42);
    swift_release();
    uint64_t v11 = v42;
    SCNVector3.init(_:)();
    [v11 setPosition:];
    id v19 = sub_100018050();
    [v19 addChildNode:v11];

    id v20 = [v11 geometry];
    if (!v20) {
      goto LABEL_31;
    }
    unint64_t v10 = (unint64_t)v20;
    if ((float)(1.0 - a3) * 50.0 <= 1.0) {
      double v21 = (float)(1.0 - a3) * 50.0;
    }
    else {
      double v21 = 1.0;
    }
    a1 = (float *)[objc_allocWithZone((Class)UIColor) initWithDisplayP3Red:(float)(1.0 - a4) green:a1[30] blue:v21 alpha:1.0];
    id v22 = [(id)v10 materials];
    sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
    unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v4 >> 62))
    {
      if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_18:
        if ((v4 & 0xC000000000000001) != 0)
        {
          id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_46;
          }
          id v23 = *(id *)(v4 + 32);
        }
        Swift::Int v24 = v23;
        swift_bridgeObjectRelease();
        id v25 = [v24 diffuse];

        if (a4 >= 0.0) {
          uint64_t v26 = a1;
        }
        else {
          uint64_t v26 = (float *)[self redColor];
        }
        Swift::Int v27 = v26;
        [v25 setContents:v26 *(_OWORD *)&v40];

LABEL_31:
        id v29 = sub_100018050();
        id v30 = [v29 childNodes];

        unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
        if (v31 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        if (v32 < 2001)
        {

          return;
        }
        id v33 = sub_100018050();
        id v34 = [v33 childNodes];

        unint64_t v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
        if (v35 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v39)
          {
LABEL_36:
            if ((v35 & 0xC000000000000001) == 0)
            {
              if (!*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                return;
              }
              uint64_t v36 = (char *)*(id *)(v35 + 32);
LABEL_39:
              uint64_t v37 = v36;
              swift_bridgeObjectRelease();
              [v37 removeFromParentNode];
              uint64_t v38 = sub_1000181C4();
              uint64_t v42 = v37;
              (*(void (**)(char **))(*(void *)v38 + 208))(&v42);

              swift_release();
              return;
            }
LABEL_46:
            uint64_t v36 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_39;
          }
        }
        else if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_36;
        }

        swift_bridgeObjectRelease();
        return;
      }
LABEL_30:

      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v28) {
      goto LABEL_18;
    }
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = (char *)_CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_11;
  }
LABEL_3:
  uint64_t v12 = v11 - 1;
  if (__OFSUB__(v11, 1))
  {
    __break(1u);
  }
  else if ((v10 & 0xC000000000000001) == 0)
  {
    if (((unint64_t)v12 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v12 < *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v13 = *(id *)(v10 + 8 * (void)v12 + 32);
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_29;
  }
  id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
  id v14 = v13;
  swift_bridgeObjectRelease();
  [v14 position];
  SCNVector3.floats.getter();
  float32x4_t v40 = v15;

  float32x4_t v16 = vsubq_f32(v40, a2);
  float32x4_t v17 = vmulq_f32(v16, v16);
  if ((float)(v17.f32[2] + vaddv_f32(*(float32x2_t *)v17.f32)) >= 0.000001) {
    goto LABEL_12;
  }
}

uint64_t sub_10001C5B0()
{
  return _swift_deallocObject(v0, 24, 7);
}

vImage_Error sub_10001C5E8(uint64_t a1, uint64_t a2)
{
  return sub_10001A034(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_10001C5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001C600()
{
  return swift_release();
}

void sub_10001C60C(uint64_t a1, uint64_t a2)
{
  sub_10001A22C(a1, a2, *(unsigned char **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

void _s7Measure16SCNPatchDebuggerC11drawPatches04goodE003badE06resultySay0A10Foundation12PatchTrackerC0J0CG_AMSgs5SIMD3VySfG8position_AQSg6normalAQ9sourceHit_AQ6origin_AQ9directiont0O3RayAL0oJ0AqV_AqWt04destS0AL0tJ0Sf5depthSf06rayDotS0Sf10confidencet4testtSgtF_0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (char *)sub_1000182B8();
  id v5 = *(void **)&v4[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_drawingTexture];
  if (v5)
  {
    uint64_t v6 = v4;
    uint64_t v7 = (void *)swift_allocObject();
    v7[2] = v6;
    v7[3] = a1;
    v7[4] = a2;
    v11[4] = sub_10001CB6C;
    v11[5] = v7;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_10001A0B4;
    void v11[3] = &unk_1004880B0;
    id v8 = _Block_copy(v11);
    swift_bridgeObjectRetain();
    id v9 = v5;
    id v10 = v6;
    swift_bridgeObjectRetain();
    swift_release();
    [v9 modifyPixelDataWithBlock:v8];
    _Block_release(v8);
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for SCNPatchDebugger.SKDebugRenderer()
{
  return self;
}

uint64_t sub_10001C768(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894(&qword_1004C4108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10001C7D0()
{
  *(void *)&v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_patchPadding] = 5;
  *(void *)&v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_bytesPerPixel] = 4;
  *(void *)&v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_textureBgColor] = &off_100485488;
  v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_renderEmboss] = 1;
  *(void *)&v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_drawingTexture] = 0;
  *(void *)&v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_drawingNode] = 0;
  id v1 = &v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer_textureBuffer];
  *(_OWORD *)id v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  v1[32] = 1;
  uint64_t v2 = &v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___width];
  *(void *)uint64_t v2 = 0;
  v2[8] = 1;
  uint64_t v3 = &v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___height];
  *(void *)uint64_t v3 = 0;
  v3[8] = 1;
  uint64_t v4 = &v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchSizeInPixels];
  *(void *)uint64_t v4 = 0;
  v4[8] = 1;
  id v5 = &v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchAlphaBuffer];
  *(_OWORD *)id v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  v5[32] = 1;
  uint64_t v6 = &v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchEmbossBuffer];
  *(_OWORD *)uint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  v6[32] = 1;
  uint64_t v7 = &v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___patchARGBBuffer];
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  v7[32] = 1;
  id v8 = &v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___lineOnBuffer];
  *(_OWORD *)id v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  v8[32] = 1;
  id v9 = &v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___lineOffBuffer];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  v9[32] = 1;
  id v10 = &v0[OBJC_IVAR____TtCC7Measure16SCNPatchDebugger15SKDebugRenderer____lazy_storage___lineARGBBuffer];
  *(_OWORD *)id v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  unsigned char v10[32] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10001C95C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10001C994@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000405E0(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_10001C99C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10001C9D8(uint64_t a1)
{
  uint64_t v2 = sub_100012894((uint64_t *)&unk_1004C7180);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10001CA38()
{
  unint64_t result = qword_1004CA040;
  if (!qword_1004CA040)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CA040);
  }
  return result;
}

uint64_t sub_10001CA94()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

unint64_t sub_10001CAE0()
{
  unint64_t result = qword_1004C4118;
  if (!qword_1004C4118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C4118);
  }
  return result;
}

id sub_10001CB74(void *a1, double a2, double a3, CGFloat a4)
{
  CGAffineTransformMakeRotation(&v6, a4);
  [a1 setTransform:&v6];
  [a1 bounds];
  [a1 setBounds:];
  return [a1 layoutIfNeeded];
}

void sub_10001CC14(void *a1, double a2)
{
  id v3 = [a1 tabBar];
  [v3 setAlpha:a2];
}

uint64_t type metadata accessor for SpatialViewUtils()
{
  return self;
}

void sub_10001CC9C(unint64_t a1, void *a2, char a3, uint64_t a4, char a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  sub_100012BE0();
  if (static UIDevice.isIPad()())
  {
    if (a1 - 1 >= 4) {
      return;
    }
LABEL_6:
    double v18 = 0.0;
    if ((static UIDevice.isIPhone()() & 1) == 0)
    {
      switch(a1)
      {
        case 2uLL:
          double v18 = 3.1415925;
          break;
        case 4uLL:
          double v18 = -*(float *)Float.piDiv2.unsafeMutableAddressor();
LABEL_15:
          v43.origin.x = a6;
          v43.origin.y = a7;
          v43.size.width = a8;
          v43.size.height = a9;
          CGRectGetHeight(v43);
          v44.origin.x = a6;
          v44.origin.y = a7;
          v44.size.width = a8;
          v44.size.height = a9;
          CGRectGetWidth(v44);
          CGSize.init(_:_:)();
          a8 = v19;
          a9 = v20;
          if ((a5 & 1) == 0)
          {
LABEL_16:
            if (a3)
            {
              [a2 transform];
              long long v37 = *(_OWORD *)&aBlock.c;
              long long v38 = *(_OWORD *)&aBlock.a;
              CGFloat tx = aBlock.tx;
              CGFloat ty = aBlock.ty;
              [a2 bounds];
              double v40 = v24;
              double v41 = v23;
              double v39 = v25;
              double v27 = v26;
              CGAffineTransformMakeRotation(&aBlock, v18);
              [a2 setTransform:&aBlock];
              [a2 bounds];
              [a2 setBounds:];
              [a2 setNeedsLayout];
              [a2 layoutIfNeeded];
              sub_1001B737C(a2);
              swift_getKeyPath();
              swift_getKeyPath();
              static Published.subscript.getter();
              swift_release();
              swift_release();
              double v28 = dbl_1003F8C60[SLOBYTE(aBlock.a)];
              [*(id *)(a4 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView) frame];
              double v30 = v29;
              swift_getKeyPath();
              swift_getKeyPath();
              swift_retain();
              static Published.subscript.getter();
              swift_release();
              swift_release();
              swift_release();
              *(double *)&uint64_t v31 = fabs(v28) * (v30 - aBlock.a);
              *(_OWORD *)&aBlock.a = v38;
              *(_OWORD *)&aBlock.c = v37;
              aBlock.CGFloat tx = tx;
              aBlock.CGFloat ty = ty;
              [a2 setTransform:&aBlock];
              [a2 setBounds:v41, v40, v39, v27];
              [a2 setNeedsLayout];
              [a2 layoutIfNeeded];
              swift_getKeyPath();
              swift_getKeyPath();
              static Published.subscript.getter();
              swift_release();
              swift_release();
              sub_1001B769C(SLOBYTE(aBlock.a), v31, 0);
              uint64_t v32 = self;
              uint64_t v33 = swift_allocObject();
              *(void *)(v33 + 16) = a2;
              *(CGFloat *)(v33 + 24) = a8;
              *(CGFloat *)(v33 + 32) = a9;
              *(double *)(v33 + 40) = v18;
              *(void *)&aBlock.CGFloat tx = sub_10001D670;
              *(void *)&aBlock.CGFloat ty = v33;
              *(void *)&aBlock.a = _NSConcreteStackBlock;
              *(void *)&aBlock.b = 1107296256;
              *(void *)&aBlock.c = sub_100049AB4;
              *(void *)&aBlock.d = &unk_100488150;
              id v34 = _Block_copy(&aBlock);
              id v35 = a2;
              swift_release();
              id v36 = [v32 runningPropertyAnimatorWithDuration:0 delay:v34 options:0 animations:0.25 completion:0.25];
              _Block_release(v34);
            }
            else
            {
              CGAffineTransformMakeRotation(&aBlock, v18);
              [a2 setTransform:&aBlock];
              [a2 bounds];
              [a2 setBounds:];
              [a2 setNeedsLayout];
              [a2 layoutIfNeeded];
              sub_1001B737C(a2);
              swift_getKeyPath();
              swift_getKeyPath();
              static Published.subscript.getter();
              swift_release();
              swift_release();
              sub_1001B769C(SLOBYTE(aBlock.a), 0, 1);
              [a2 setNeedsLayout];
              [a2 layoutIfNeeded];
            }
            return;
          }
LABEL_13:
          CGAffineTransformMakeRotation(&aBlock, v18);
          [a2 setTransform:&aBlock];
          [a2 bounds];
          [a2 setBounds:];
          [a2 setNeedsLayout];
          [a2 layoutIfNeeded];
          return;
        case 3uLL:
          double v18 = *(float *)Float.piDiv2.unsafeMutableAddressor();
          goto LABEL_15;
      }
    }
    if ((a5 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_13;
  }
  if (a1 <= 4 && ((1 << a1) & 0x1A) != 0) {
    goto LABEL_6;
  }
}

uint64_t sub_10001D29C(long long *a1)
{
  long long v2 = a1[1];
  long long v17 = *a1;
  v18[0] = v2;
  *(void *)((char *)v18 + 14) = *(void *)((char *)a1 + 30);
  long long v3 = *(long long *)((char *)a1 + 56);
  long long v14 = *(long long *)((char *)a1 + 40);
  v15[0] = v3;
  *(void *)((char *)v15 + 14) = *(void *)((char *)a1 + 70);
  char v4 = sub_10012C858((uint64_t)&v17, (uint64_t)&v14);
  sub_100012894((uint64_t *)&unk_1004D2460);
  if (v4)
  {
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1003F8B80;
    long long v19 = v17;
    *(void *)(v5 + 56) = &type metadata for String;
    unint64_t v6 = sub_10001D424();
    *(void *)(v5 + 64) = v6;
    *(_OWORD *)(v5 + 32) = v17;
    long long v16 = a1[5];
    long long v7 = v16;
    *(void *)(v5 + 96) = &type metadata for String;
    *(void *)(v5 + 104) = v6;
    *(_OWORD *)(v5 + 72) = v7;
    sub_10001D478((uint64_t)&v19);
    sub_10001D478((uint64_t)&v16);
  }
  else
  {
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1003F8B70;
    long long v19 = v17;
    *(void *)(v8 + 56) = &type metadata for String;
    unint64_t v9 = sub_10001D424();
    *(void *)(v8 + 64) = v9;
    *(_OWORD *)(v8 + 32) = v17;
    long long v10 = v14;
    long long v16 = v14;
    *(void *)(v8 + 96) = &type metadata for String;
    *(void *)(v8 + 104) = v9;
    *(_OWORD *)(v8 + 72) = v10;
    long long v13 = a1[5];
    long long v11 = v13;
    *(void *)(v8 + 136) = &type metadata for String;
    *(void *)(v8 + 144) = v9;
    *(_OWORD *)(v8 + 112) = v11;
    sub_10001D478((uint64_t)&v19);
    sub_10001D478((uint64_t)&v16);
    sub_10001D478((uint64_t)&v13);
  }
  return String.init(format:_:)();
}

unint64_t sub_10001D424()
{
  unint64_t result = qword_1004C41B8;
  if (!qword_1004C41B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C41B8);
  }
  return result;
}

uint64_t sub_10001D478(uint64_t a1)
{
  return a1;
}

void sub_10001D4A4(uint64_t a1)
{
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  if (!(void)xmmword_1004F8000)
  {
    __break(1u);
    goto LABEL_16;
  }
  id v2 = [(id)xmmword_1004F8000 view];
  if (!v2)
  {
LABEL_16:
    __break(1u);
    return;
  }
  long long v3 = v2;
  [v2 frame];
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;

  v13.origin.x = v5;
  v13.origin.y = v7;
  v13.size.width = v9;
  v13.size.height = v11;
  CGRectGetHeight(v13);
  sub_100012BE0();
  if (static UIDevice.isIPhone()())
  {
    if (qword_1004C2820 != -1) {
      swift_once();
    }
  }
  else if (qword_1004C2820 != -1)
  {
    swift_once();
  }
  if (static UIDevice.isIPhone()()) {
    uint64_t v12 = &OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView;
  }
  else {
    uint64_t v12 = &OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView;
  }
  [*(id *)(a1 + *v12) bounds];
  CGRectGetHeight(v14);
}

uint64_t sub_10001D638()
{
  return _swift_deallocObject(v0, 48, 7);
}

id sub_10001D670()
{
  return sub_10001CB74(*(void **)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(CGFloat *)(v0 + 40));
}

uint64_t sub_10001D680(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001D690()
{
  return swift_release();
}

void sub_10001D698()
{
}

void sub_10001D6C0()
{
  uint64_t v1 = (void *)v0;
  *(void *)(v0 + 80) = 0;
  *(_DWORD *)(v0 + 88) = 1106247680;
  *(void *)(v0 + 96) = 0;
  *(void *)(v0 + 112) = 0;
  *(void *)(v0 + 120) = 0;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_100012894((uint64_t *)&unk_1004CF6F0);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1004F8630;
  CGFloat v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 272);
  swift_retain();
  v1[16] = v5(KeyPath, v4);
  uint64_t v6 = swift_getKeyPath();
  uint64_t v7 = sub_100012894(&qword_1004C3EE0);
  uint64_t v8 = qword_1004F8630;
  CGFloat v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 272);
  swift_retain();
  v1[17] = v9(v6, v8);
  uint64_t v10 = swift_getKeyPath();
  uint64_t v11 = sub_100012894(&qword_1004CA010);
  uint64_t v12 = qword_1004F8630;
  CGRect v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 272);
  swift_retain();
  v1[18] = v13(v10, v12);
  uint64_t v14 = sub_100012894(&qword_1004C6AA0);
  uint64_t v15 = swift_getKeyPath();
  uint64_t v16 = qword_1004F8630;
  long long v17 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 272);
  swift_retain();
  v1[19] = v17(v15, v16);
  uint64_t v18 = sub_100012894(&qword_1004C3EE8);
  uint64_t v19 = swift_getKeyPath();
  uint64_t v20 = qword_1004F8630;
  double v21 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 272);
  swift_retain();
  v1[20] = v21(v19, v20);
  uint64_t v22 = sub_100012894(&qword_1004C7170);
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = qword_1004F8630;
  double v25 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 272);
  swift_retain();
  v1[21] = v25(v23, v24);
  sub_100012894(&qword_1004C4350);
  swift_getKeyPath();
  v1[22] = MutableStateValue.__allocating_init(_:_:)();
  swift_release();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10001D9A4()
{
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  swift_retain();
  StateValue.ifUpdated(_:)();

  return swift_release();
}

void sub_10001DA30(unsigned char *a1, uint64_t a2)
{
  void (*v4)(void *__return_ptr, uint64_t);
  uint64_t v5;
  void (*v6)(void *__return_ptr, uint64_t);
  uint64_t v7;
  void v8[6];

  char v3 = a1[2];
  if (*a1)
  {
    uint64_t v4 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(a2 + 176) + 144);
    CGFloat v5 = swift_retain();
    v4(v8, v5);
    swift_release();
    if (LOBYTE(v8[0]) == 2) {
      sub_10001EDD4();
    }
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v6 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(a2 + 176) + 144);
    uint64_t v7 = swift_retain();
    v6(v8, v7);
    swift_release();
    if (LOBYTE(v8[0]) == 2) {
      sub_10001E994(*(double *)(a2 + 112), *(double *)(a2 + 120));
    }
  }
}

void sub_10001DB1C()
{
  void (*v6)(unint64_t *__return_ptr, uint64_t);
  uint64_t v7;
  int v8;
  void (*v9)(unint64_t *__return_ptr, uint64_t);
  uint64_t v10;
  void (*v11)(unint64_t *__return_ptr, uint64_t);
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(uint64_t);
  double (*v17)(void);
  uint64_t (*v18)(uint64_t);
  float32x2_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  long long v25;
  long long v26;
  uint64_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t v31;
  float v32;
  float v33;
  uint64_t (*v35)(unint64_t *);
  void (*v36)(unint64_t *, void);
  unsigned char *v37;
  float32x2_t v38;
  float32x2_t v39;
  float v40;
  float32x2_t v41;
  float32x2_t v42;
  CGFloat v43;
  float v44;
  CGFloat v45;
  float v46;
  void *v47;
  uint64_t v48;
  void *v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  double v63;
  uint64_t (*v64)(unint64_t *);
  void (*v65)(unint64_t *, void);
  uint64_t v66;
  id v67;
  long long v68;
  long long v69;
  float32x4_t v70;
  float32x2_t v71;
  float32x4_t v72;
  float v73;
  void *v74;
  unint64_t aBlock;
  uint64_t v76;
  uint64_t (*v77)(uint64_t);
  void *v78;
  id (*v79)();
  uint64_t v80;
  float v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;

  uint64_t v1 = v0;
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  unint64_t v2 = aBlock;
  *((void *)&v4 + 1) = aBlock;
  *(void *)&long long v4 = aBlock + 0x4000000000000000;
  unint64_t v3 = v4 >> 3;
  if (aBlock >> 62 != 3 || v3 < 3) {
    goto LABEL_5;
  }
  CGFloat v9 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v0 + 176) + 144);
  uint64_t v10 = swift_retain();
  v9(&aBlock, v10);
  swift_release();
  if (aBlock != 1) {
    goto LABEL_5;
  }
  uint64_t v11 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v0 + 136) + 144);
  uint64_t v12 = swift_retain();
  v11(&aBlock, v12);
  swift_release();
  uint64_t v14 = (void *)aBlock;
  CGRect v13 = (void *)v76;
  uint64_t v16 = v77;
  uint64_t v15 = v78;
  if (v77)
  {
    long long v17 = *(double (**)(void))((swift_isaMask & *(void *)v77) + 0x200);
    uint64_t v18 = v77;
    uint64_t v19 = COERCE_FLOAT32X2_T(v17());
  }
  else
  {
    uint64_t v19 = 0;
  }
  unint64_t v81 = 1.0;
  if (!v15)
  {
LABEL_23:

    return;
  }
  v74 = v13;
  uint64_t v20 = *(void **)(v1 + 64);
  double v21 = v15;
  uint64_t v22 = [v20 session];
  uint64_t v23 = [v22 currentFrame];

  if (!v23)
  {

    CGRect v13 = v74;
    goto LABEL_23;
  }
  uint64_t v24 = [v23 camera];
  [v24 transform];
  uint64_t v68 = v26;
  uint64_t v69 = v25;

  double v27 = simd_float4x4.position.getter();
  uint64_t v72 = v28;
  (*(void (**)(uint64_t))((swift_isaMask & *v21) + 0x2B0))(v27);
  simd_float4x4.position.getter();
  uint64_t v70 = v29;

  double v30 = vsubq_f32(v72, v70);
  uint64_t v31 = vmulq_f32(v30, v30);
  uint64_t v32 = sqrtf(v31.f32[2] + vaddv_f32(*(float32x2_t *)v31.f32));
  uint64_t v33 = 1.0;
  if (v32 >= 0.25 && v32 < 1.0)
  {
    uint64_t v33 = (float)((float)((float)(v32 + -0.25) / 0.75) * 0.5) + 1.0;
    unint64_t v81 = v33;
  }
  else if (v32 > 1.0)
  {
    unint64_t v81 = 1.5;
    uint64_t v33 = 1.5;
  }
  unint64_t v73 = v33;
  id v35 = *(uint64_t (**)(unint64_t *))(**(void **)(v1 + 176) + 400);
  swift_retain();
  id v36 = (void (*)(unint64_t *, void))v35(&aBlock);
  *long long v37 = 2;
  v36(&aBlock, 0);
  swift_release();
  if (v16)
  {
    *(float32x2_t *)(v1 + 80) = v19;
    if (qword_1004C29E0 != -1) {
      swift_once();
    }
    LOBYTE(aBlock) = 0;
    swift_retain();
    Synchronized.wrappedValue.setter();
    swift_release();
    sub_100095CF4(6u);
    [v20 center];
    SIMD2<>.init(_:)();
    double v39 = vsub_f32(v19, v38);
    double v40 = v73;
    double v41 = vmul_n_f32(v39, v73);
    if (qword_1004C2E60 != -1)
    {
      swift_once();
      double v40 = v73;
    }
    uint64_t v42 = vmul_n_f32(vsub_f32(vadd_f32(v19, (float32x2_t)qword_1004F8640), *(float32x2_t *)(v1 + 80)), v40);
    *(float32x2_t *)(v1 + 96) = v42;
    uint64_t v71 = vadd_f32(vsub_f32(v39, v41), v42);
    [v20 bounds:v68, v69];
    CGRect v43 = CGRectGetHeight(v82) * v73;
    CGRect v44 = fabsf(v71.f32[1] + v71.f32[1]);
    [v20 bounds];
    if (v43 - CGRectGetHeight(v83) < v44)
    {
      [v20 bounds];
      BOOL v45 = CGRectGetHeight(v84) + v44;
      [v20 bounds];
      unint64_t v46 = v45 / CGRectGetHeight(v85);
      unint64_t v73 = v46;
      unint64_t v81 = v46;
    }
    size_t v47 = self;
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = v1;
    *(float *)(v48 + 24) = v73;
    *(float32x2_t *)(v48 + 32) = v71;
    unint64_t v79 = sub_10001F7DC;
    uint64_t v80 = v48;
    CGAffineTransform aBlock = (unint64_t)_NSConcreteStackBlock;
    uint64_t v76 = 1107296256;
    uint64_t v77 = sub_100049AB4;
    uint64_t v78 = &unk_100488210;
    uint64_t v49 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v47 animateWithDuration:0 delay:v49 options:0 animations:0.3 completion:0.0];
    _Block_release(v49);
    [v20 frame];
    static CGPoint.- prefix(_:)();
    uint64_t v51 = v50;
    uint64_t v53 = v52;
    [v20 frame];
    BOOL v55 = v51 / v54;
    [v20 frame];
    char v57 = v53 / v56;
    [v20 bounds];
    swift_beginAccess();
    CGSize.divide(by:)();
    uint64_t v59 = v58;
    uint64_t v61 = v60;
    [v20 bounds];
    BOOL v62 = v55 * CGRectGetWidth(v86);
    [v20 bounds];
    uint64_t v63 = v57 * CGRectGetHeight(v87);
    uint64_t v64 = *(uint64_t (**)(unint64_t *))(**(void **)(v1 + 176) + 400);
    swift_retain();
    uint64_t v65 = (void (*)(unint64_t *, void))v64(&aBlock);
    *(double *)(v66 + 8) = v62;
    *(double *)(v66 + 16) = v63;
    *(void *)(v66 + 24) = v59;
    *(void *)(v66 + 32) = v61;
    *(unsigned char *)(v66 + 40) = 0;
    v65(&aBlock, 0);
    swift_release();
    uint64_t v67 = *(id *)(v1 + 104);
    sub_100204E80(0, 0.3);

    double v21 = v14;
    uint64_t v14 = v74;
  }
  else
  {
    uint64_t v16 = (uint64_t (*)(uint64_t))v74;
  }

LABEL_5:
  uint64_t v6 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v1 + 176) + 144);
  uint64_t v7 = swift_retain();
  v6(&aBlock, v7);
  swift_release();
  if (v8 != 3)
  {
LABEL_6:
    sub_10001F780(v2);
    return;
  }
  if (v2 != 0xC000000000000018)
  {
    sub_10001EDD4();
    goto LABEL_6;
  }
}

void sub_10001E2C4(double a1, double a2)
{
  void (*v6)(unint64_t *__return_ptr, uint64_t);
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t (*v12)(double, double);
  char v13;
  void (*v14)(unint64_t *__return_ptr, uint64_t);
  uint64_t v15;
  float32x2_t v16;
  void (*v17)(unint64_t *__return_ptr, uint64_t);
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t (*v28)(double, double);
  char v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(unint64_t *);
  void (*v40)(unint64_t *, void);
  unsigned char *v41;
  float32x2_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;

  uint64_t v3 = v2;
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  if ((v43 & 0x100000000) == 0)
  {
    uint64_t v6 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v2 + 144) + 144);
    uint64_t v7 = swift_retain();
    v6(&v43, v7);
    swift_release();
    unint64_t v46 = v43;
    swift_bridgeObjectRetain();
    sub_100012894(&qword_1004C4358);
    sub_100012894(&qword_1004C4360);
    swift_dynamicCast();
    uint64_t v8 = v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v8 >> 62) {
      goto LABEL_28;
    }
    CGFloat v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9)
    {
      while (1)
      {
        uint64_t v10 = (v8 & 0xC000000000000001) != 0
            ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)(v8 + 32);
        uint64_t v11 = v10;
        uint64_t v12 = (uint64_t (*)(double, double))(*(uint64_t (**)(void))((swift_isaMask & *v10) + 0x118))();
        CGRect v13 = v12(a1, a2);
        swift_release();
        if (v13) {
          break;
        }

        if (v9 != 1)
        {
          double v25 = 5;
          while (1)
          {
            double v26 = (v8 & 0xC000000000000001) != 0
                ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
                : *(id *)(v8 + 8 * v25);
            uint64_t v11 = v26;
            double v27 = v25 - 3;
            if (__OFADD__(v25 - 4, 1)) {
              break;
            }
            double v28 = (uint64_t (*)(double, double))(*(uint64_t (**)(void))((swift_isaMask & *v26) + 0x118))();
            double v29 = v28(a1, a2);
            swift_release();
            if (v29) {
              goto LABEL_7;
            }

            ++v25;
            if (v27 == v9) {
              goto LABEL_21;
            }
          }
          __break(1u);
LABEL_28:
          swift_bridgeObjectRetain();
          CGFloat v9 = _CocoaArrayWrapper.endIndex.getter();
          if (v9) {
            continue;
          }
        }
        goto LABEL_21;
      }
LABEL_7:
      swift_bridgeObjectRelease_n();
      *(double *)(v2 + 112) = a1;
      *(double *)(v2 + 120) = a2;
      uint64_t v14 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v2 + 176) + 144);
      uint64_t v15 = swift_retain();
      v14(&v43, v15);
      swift_release();
      switch((char)v43)
      {
        case 1:
        case 2:
        case 3:
          break;
        default:
          SIMD2<>.init(_:)();
          if (qword_1004C2E68 != -1)
          {
            uint64_t v42 = v16;
            swift_once();
            uint64_t v16 = v42;
          }
          *(float32x2_t *)(v2 + 80) = vadd_f32(v16, (float32x2_t)qword_1004F8648);
          *(_DWORD *)(v2 + 88) = 1114636288;
          long long v17 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v2 + 128) + 144);
          uint64_t v18 = swift_retain();
          v17(&v43, v18);
          swift_release();
          uint64_t v20 = v43;
          uint64_t v19 = v44;
          double v21 = v45;
          uint64_t v22 = *(void *)(v44 + 16);
          if (v22)
          {
            uint64_t v23 = sub_1000E224C(6u);
            if (v24) {
              uint64_t v22 = *(void *)(*(void *)(v19 + 56) + 8 * v23);
            }
            else {
              uint64_t v22 = 0;
            }
          }
          double v30 = v22 + 1;
          if (__OFADD__(v22, 1))
          {
            __break(1u);
            JUMPOUT(0x10001E828);
          }
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          CGRect v43 = v19;
          sub_1000D50D0(v30, 6u, isUniquelyReferenced_nonNull_native);
          uint64_t v32 = v43;
          swift_bridgeObjectRelease();
          uint64_t v33 = *(void *)(v3 + 80);
          id v34 = *(_DWORD *)(v3 + 88);
          id v35 = *(uint64_t (**)(uint64_t))(**(void **)(v3 + 128) + 200);
          id v36 = swift_retain();
          long long v37 = v35(v36);
          swift_release();
          long long v38 = swift_allocObject();
          *(void *)(v38 + 16) = v20;
          *(void *)(v38 + 24) = v32;
          *(void *)(v38 + 32) = v21;
          *(void *)(v38 + 40) = v33;
          *(_DWORD *)(v38 + 48) = v34;
          *(double *)(v38 + 56) = a1;
          *(double *)(v38 + 64) = a2;
          (*(void (**)(uint64_t (*)(uint64_t), uint64_t))(*(void *)v37 + 280))(sub_10001F85C, v38);
          swift_release();
          swift_release();
          double v39 = *(uint64_t (**)(unint64_t *))(**(void **)(v3 + 176) + 400);
          swift_retain();
          double v40 = (void (*)(unint64_t *, void))v39(&v43);
          *double v41 = 1;
          v40(&v43, 0);
          swift_release();
          break;
      }
    }
    else
    {
LABEL_21:
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_10001E838(double a1, double a2)
{
  void (*v3)(void *__return_ptr, uint64_t);
  uint64_t v4;
  uint64_t result;
  float32x2_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  void (*v10)(double (*)(uint64_t), uint64_t);
  void v11[6];

  *(double *)(v2 + 112) = a1;
  *(double *)(v2 + 120) = a2;
  uint64_t v3 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v2 + 176) + 144);
  long long v4 = swift_retain();
  v3(v11, v4);
  unint64_t result = swift_release();
  if (LOBYTE(v11[0]) == 2)
  {
    SIMD2<>.init(_:)();
    *(float32x2_t *)(v2 + 80) = vadd_f32(v6, *(float32x2_t *)(v2 + 96));
    *(_DWORD *)(v2 + 88) = 1106247680;
    uint64_t v7 = *(uint64_t (**)(uint64_t))(**(void **)(v2 + 128) + 200);
    uint64_t v8 = swift_retain();
    CGFloat v9 = v7(v8);
    swift_release();
    uint64_t v10 = *(void (**)(double (*)(uint64_t), uint64_t))(*(void *)v9 + 280);
    swift_retain();
    v10(sub_10001F714, v2);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10001E994(double a1, double a2)
{
  void (*v4)(uint64_t *__return_ptr, uint64_t);
  uint64_t v5;
  uint64_t result;
  float32x2_t v7;
  void (*v8)(uint64_t *__return_ptr, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t *__return_ptr, uint64_t);
  uint64_t v27;
  int v28;
  uint64_t (*v29)(uint64_t *);
  unsigned char *v30;
  void (*v31)(uint64_t *, void);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  uint64_t v3 = v2;
  *(double *)(v2 + 112) = a1;
  *(double *)(v2 + 120) = a2;
  long long v4 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v2 + 176) + 144);
  CGFloat v5 = swift_retain();
  v4(&v32, v5);
  unint64_t result = swift_release();
  if (v32 - 1 <= 1)
  {
    SIMD2<>.init(_:)();
    *(float32x2_t *)(v2 + 80) = vadd_f32(v7, *(float32x2_t *)(v2 + 96));
    uint64_t v8 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v2 + 128) + 144);
    CGFloat v9 = swift_retain();
    v8(&v32, v9);
    unint64_t result = swift_release();
    uint64_t v11 = v32;
    uint64_t v10 = v33;
    uint64_t v12 = v34;
    CGRect v13 = v35;
    uint64_t v14 = v36;
    uint64_t v15 = *(void *)(v33 + 16);
    if (v15)
    {
      unint64_t result = sub_1000E224C(7u);
      if (v16) {
        uint64_t v15 = *(void *)(*(void *)(v10 + 56) + 8 * result);
      }
      else {
        uint64_t v15 = 0;
      }
    }
    long long v17 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
    }
    else
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v32 = v10;
      sub_1000D50D0(v17, 7u, isUniquelyReferenced_nonNull_native);
      uint64_t v19 = v32;
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(v3 + 80);
      double v21 = *(_DWORD *)(v3 + 88);
      uint64_t v22 = *(uint64_t (**)(uint64_t))(**(void **)(v3 + 128) + 200);
      uint64_t v23 = swift_retain();
      uint64_t v24 = v22(v23);
      swift_release();
      double v25 = swift_allocObject();
      *(void *)(v25 + 16) = v11;
      *(void *)(v25 + 24) = v19;
      *(void *)(v25 + 32) = v12;
      *(void *)(v25 + 40) = v20;
      *(_DWORD *)(v25 + 48) = v21;
      *(void *)(v25 + 56) = v13;
      *(void *)(v25 + 64) = v14;
      (*(void (**)(uint64_t (*)(uint64_t), uint64_t))(*(void *)v24 + 280))(sub_10001F6B0, v25);
      swift_release();
      swift_release();
      double v26 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v3 + 176) + 144);
      double v27 = swift_retain();
      v26(&v32, v27);
      swift_release();
      double v28 = v32;
      double v29 = *(uint64_t (**)(uint64_t *))(**(void **)(v3 + 176) + 400);
      swift_retain();
      uint64_t v31 = (void (*)(uint64_t *, void))v29(&v32);
      if (v28 == 2) {
        *double v30 = 3;
      }
      else {
        *double v30 = 0;
      }
      v31(&v32, 0);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10001ECA0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  return sub_10001F6CC(a2);
}

id sub_10001ED14(uint64_t a1, float a2, double a3)
{
  uint64_t v3 = *(void **)(a1 + 64);
  CGAffineTransformMakeScale(&t1, a2, a2);
  long long v11 = *(_OWORD *)&t1.c;
  long long v12 = *(_OWORD *)&t1.a;
  CGFloat tx = t1.tx;
  CGFloat ty = t1.ty;
  CGAffineTransformMakeTranslation(&t1, *(float *)&a3, *((float *)&a3 + 1));
  long long v6 = *(_OWORD *)&t1.a;
  long long v7 = *(_OWORD *)&t1.c;
  long long v8 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.a = v12;
  *(_OWORD *)&t1.c = v11;
  t1.CGFloat tx = tx;
  t1.CGFloat ty = ty;
  *(_OWORD *)&t2.a = v6;
  *(_OWORD *)&t2.c = v7;
  *(_OWORD *)&t2.CGFloat tx = v8;
  CGAffineTransformConcat(&v13, &t1, &t2);
  CGAffineTransform t1 = v13;
  return [v3 setTransform:&t1];
}

void sub_10001EDD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(uint64_t (**)(void ***))(**(void **)(v0 + 176) + 400);
  swift_retain();
  uint64_t v3 = (void (*)(void ***, void))v2(&v16);
  *long long v4 = 0;
  v3(&v16, 0);
  swift_release();
  CGFloat v5 = self;
  uint64_t v20 = sub_10001F804;
  uint64_t v21 = v1;
  uint64_t v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  uint64_t v18 = sub_100049AB4;
  uint64_t v19 = &unk_100488238;
  long long v6 = _Block_copy(&v16);
  swift_retain();
  swift_release();
  [v5 animateWithDuration:0 delay:v6 options:0 animations:0.3 completion:0.0];
  _Block_release(v6);
  long long v7 = *(uint64_t (**)(void ***))(**(void **)(v1 + 176) + 400);
  swift_retain();
  long long v8 = (void (*)(void ***, void))v7(&v16);
  *(_OWORD *)(v9 + 8) = 0u;
  *(_OWORD *)(v9 + 24) = 0u;
  *(unsigned char *)(v9 + 40) = 1;
  v8(&v16, 0);
  swift_release();
  uint64_t v10 = *(void **)(v1 + 104);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = 0x3FF0000000000000;
  *(unsigned char *)(v11 + 32) = 1;
  id v12 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  uint64_t v20 = sub_10001F844;
  uint64_t v21 = v11;
  uint64_t v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  uint64_t v18 = sub_100049AB4;
  uint64_t v19 = &unk_100488288;
  CGAffineTransform v13 = _Block_copy(&v16);
  id v14 = v10;
  swift_release();
  id v15 = [v12 initWithDuration:v13 dampingRatio:0.3 animations:1.0];
  _Block_release(v13);
  [v15 setInterruptible:0];
  [v15 startAnimation];

  if (qword_1004C29E0 != -1) {
    swift_once();
  }
  sub_100095CF4(7u);
}

id sub_10001F0E8(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 64);
  CGAffineTransformMakeScale(&v3, 1.0, 1.0);
  return [v1 setTransform:&v3];
}

uint64_t sub_10001F144()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

id *sub_10001F1B4()
{
  uint64_t v0 = (id *)StateObserver.deinit();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_10001F22C()
{
  sub_10001F1B4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActionController()
{
  uint64_t result = qword_1004C41E8;
  if (!qword_1004C41E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001F2A8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10001F330@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Contexts.UIKit.init()();
  *a1 = result;
  return result;
}

uint64_t sub_10001F358(void *a1, void *a2, void *a3)
{
  long long v4 = (void *)v3;
  *(void *)(v3 + 80) = 0;
  *(_DWORD *)(v3 + 88) = 1106247680;
  *(void *)(v3 + 96) = 0;
  *(void *)(v3 + 112) = 0;
  *(void *)(v3 + 120) = 0;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v9 = sub_100012894((uint64_t *)&unk_1004CF6F0);
  uint64_t v10 = qword_1004C2E30;
  swift_retain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1004F8630;
  id v12 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 272);
  swift_retain();
  v4[16] = v12(KeyPath, v11);
  uint64_t v13 = swift_getKeyPath();
  uint64_t v14 = sub_100012894(&qword_1004C3EE0);
  uint64_t v15 = qword_1004F8630;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 272);
  swift_retain();
  v4[17] = v16(v13, v15);
  uint64_t v17 = swift_getKeyPath();
  uint64_t v18 = sub_100012894(&qword_1004CA010);
  uint64_t v19 = qword_1004F8630;
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 272);
  swift_retain();
  v4[18] = v20(v17, v19);
  uint64_t v21 = sub_100012894(&qword_1004C6AA0);
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = qword_1004F8630;
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 272);
  swift_retain();
  v4[19] = v24(v22, v23);
  uint64_t v25 = sub_100012894(&qword_1004C3EE8);
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = qword_1004F8630;
  double v28 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 272);
  swift_retain();
  v4[20] = v28(v26, v27);
  uint64_t v29 = sub_100012894(&qword_1004C7170);
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = qword_1004F8630;
  uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 272);
  swift_retain();
  v4[21] = v32(v30, v31);
  sub_100012894(&qword_1004C4350);
  swift_getKeyPath();
  v4[22] = MutableStateValue.__allocating_init(_:_:)();
  v4[8] = a1;
  v4[9] = a2;
  v4[13] = a3;
  id v33 = a1;
  id v34 = a2;
  id v35 = a3;
  swift_release();
  uint64_t v36 = StateObserver.init(configuration:)();
  *(void *)&v34[OBJC_IVAR____TtC7Measure10ActionView_delegate + 8] = &off_100488178;
  swift_unknownObjectWeakAssign();
  return v36;
}

uint64_t sub_10001F6B0(uint64_t a1)
{
  return sub_10001ECA0(a1, v1 + 16);
}

uint64_t sub_10001F6CC(uint64_t a1)
{
  return a1;
}

double sub_10001F714(uint64_t a1)
{
  double result = *(double *)(v1 + 80);
  int v3 = *(_DWORD *)(v1 + 88);
  *(double *)(a1 + 24) = result;
  *(_DWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_10001F72C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_10001F774(unsigned char *a1)
{
  sub_10001DA30(a1, v1);
}

void sub_10001F780(unint64_t a1)
{
  unint64_t v1 = a1 >> 62;
  if (!(a1 >> 62)) {
    goto LABEL_5;
  }
  if (v1 == 2 || v1 == 1)
  {
    a1 &= 0x3FFFFFFFFFFFFFFFuLL;
LABEL_5:
  }
}

uint64_t sub_10001F7A4()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

id sub_10001F7DC()
{
  return sub_10001ED14(*(void *)(v0 + 16), *(float *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_10001F7EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001F7FC()
{
  return swift_release();
}

id sub_10001F804()
{
  return sub_10001F0E8(v0);
}

uint64_t sub_10001F80C()
{
  return _swift_deallocObject(v0, 33, 7);
}

void sub_10001F844()
{
  sub_1002089FC(*(char **)(v0 + 16), *(unsigned char *)(v0 + 32), *(double *)(v0 + 24));
}

void sub_10001F8F0(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_10001FD84();
  sub_10001FDC4();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v15.receiver = v3;
  v15.super_class = ObjectType;
  [super touchesBegan:a2 withEvent:isa];

  uint64_t v7 = swift_bridgeObjectRetain();
  long long v8 = (void *)sub_10009F990(v7);
  swift_bridgeObjectRelease();
  if (v8)
  {
    [v8 locationInView:v3];
    double v10 = v9;
    double v12 = v11;
    uint64_t v13 = *(uint64_t (**)(uint64_t, double, double))&v3[OBJC_IVAR____TtC7Measure10ActionView_shouldPreventManipulatingPoint];
    uint64_t v14 = swift_retain();
    LOBYTE(v13) = v13(v14, v10, v12);
    swift_release();
    if ((v13 & 1) != 0 || !swift_unknownObjectWeakLoadStrong())
    {
    }
    else
    {
      sub_10001E2C4(v10, v12);

      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_10001FAE4(void *a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5, void (*a6)(double, double))
{
  sub_10001FD84();
  sub_10001FDC4();
  uint64_t v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  id v11 = a4;
  id v12 = a1;
  sub_10001FBAC(v10, (uint64_t)a4, a5, a6);

  return swift_bridgeObjectRelease();
}

void sub_10001FBAC(uint64_t a1, uint64_t a2, SEL *a3, void (*a4)(double, double))
{
  ObjectType = (objc_class *)swift_getObjectType();
  sub_10001FD84();
  sub_10001FDC4();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v16.receiver = v4;
  v16.super_class = ObjectType;
  [super isa:a2];

  uint64_t v10 = swift_bridgeObjectRetain();
  id v11 = (void *)sub_10009F990(v10);
  swift_bridgeObjectRelease();
  if (v11)
  {
    [v11 locationInView:v4];
    double v13 = v12;
    double v15 = v14;
    if (swift_unknownObjectWeakLoadStrong())
    {
      a4(v13, v15);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t type metadata accessor for ActionView()
{
  return self;
}

unint64_t sub_10001FD84()
{
  unint64_t result = qword_1004C43A0;
  if (!qword_1004C43A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1004C43A0);
  }
  return result;
}

unint64_t sub_10001FDC4()
{
  unint64_t result = qword_1004C43A8;
  if (!qword_1004C43A8)
  {
    sub_10001FD84();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C43A8);
  }
  return result;
}

uint64_t sub_10001FE1C(uint64_t a1)
{
  return a1;
}

unint64_t sub_10001FE48()
{
  unint64_t result = qword_1004C43B0;
  if (!qword_1004C43B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C43B0);
  }
  return result;
}

unint64_t sub_10001FEA0()
{
  unint64_t result = qword_1004C43B8;
  if (!qword_1004C43B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C43B8);
  }
  return result;
}

uint64_t sub_10001FEF4()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_100021818(v0, qword_1004F7EF8);
  sub_1000217E0(v0, (uint64_t)qword_1004F7EF8);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_10001FF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  type metadata accessor for MainActor();
  v3[15] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10001FFF8, v5, v4);
}

uint64_t sub_10001FFF8()
{
  swift_release();
  sub_100021C08();
  unint64_t v1 = (void *)OS_os_log.init(subsystem:category:)();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:_:_:)();
  id v2 = [self currentDevice];
  id v3 = [v2 userInterfaceIdiom];

  if (v3 != (id)1)
  {
    AppDependency.wrappedValue.getter();
    sub_100021C48((long long *)(v0 + 56), v0 + 16);
    uint64_t v4 = sub_1000131D4((void *)(v0 + 16), *(void *)(v0 + 40));
    IntentParameter.wrappedValue.getter();
    uint64_t v5 = *v4;
    if (*(unsigned char *)(v0 + 56))
    {
      char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t v7 = &OBJC_IVAR____TtC7Measure11AppDelegate_levelShortcut;
      if (v6) {
        uint64_t v7 = &OBJC_IVAR____TtC7Measure11AppDelegate_measureShortcut;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v7 = &OBJC_IVAR____TtC7Measure11AppDelegate_measureShortcut;
    }
    id v8 = *(id *)(v5 + *v7);
    sub_10002A29C(v8);

    sub_100013218(v0 + 16);
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:_:_:)();
  static IntentResult.result<>()();

  double v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100020224@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100020260()
{
  return IntentParameter.wrappedValue.setter();
}

void (*sub_100020298(void *a1))(void *a1)
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_1000202F4;
}

void sub_1000202F4(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

unint64_t sub_100020344()
{
  unint64_t result = qword_1004C43C0;
  if (!qword_1004C43C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C43C0);
  }
  return result;
}

unint64_t sub_10002039C()
{
  unint64_t result = qword_1004C43C8;
  if (!qword_1004C43C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C43C8);
  }
  return result;
}

unint64_t sub_1000203F4()
{
  unint64_t result = qword_1004C43D0;
  if (!qword_1004C43D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C43D0);
  }
  return result;
}

uint64_t sub_100020448()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100020464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100021130(a1, a2, a3, (void (*)(void))sub_100020344);
}

uint64_t sub_100020490@<X0>(uint64_t a1@<X8>)
{
  return sub_100021060(&qword_1004C28C8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1004F7EF8, a1);
}

uint64_t sub_1000204C8(uint64_t a1)
{
  unint64_t v2 = sub_100021C60();

  return static OpenIntent.openAppWhenRun.getter(a1, v2);
}

uint64_t sub_100020514(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  char v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *char v6 = v2;
  v6[1] = sub_1000205C0;
  return sub_10001FF5C(a1, v5, v4);
}

uint64_t sub_1000205C0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000206B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10002187C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000206DC(uint64_t a1)
{
  unint64_t v2 = sub_100020344();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_100020718()
{
  uint64_t v0 = sub_100012894(&qword_1004C4460);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = type metadata accessor for TypeDisplayRepresentation();
  sub_100021818(v5, qword_1004F7F10);
  sub_1000217E0(v5, (uint64_t)qword_1004F7F10);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

unint64_t sub_100020888()
{
  uint64_t v0 = sub_100012894(&qword_1004C4458);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100012894(&qword_1004C4460);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v18 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100012894(&qword_1004C4468);
  uint64_t v8 = (int *)(sub_100012894(&qword_1004C4470) - 8);
  uint64_t v9 = *(void *)v8;
  uint64_t v19 = *(void *)(*(void *)v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1003F8B80;
  unint64_t v12 = v11 + v10;
  v17[0] = v11 + v10 + v8[14];
  *(unsigned char *)(v11 + v10) = 0;
  LocalizedStringResource.init(stringLiteral:)();
  double v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v17[1] = v7 + 56;
  v13(v5, 1, 1, v6);
  uint64_t v14 = type metadata accessor for DisplayRepresentation.Image();
  double v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v2, 1, 1, v14);
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v12 + v19) = 1;
  LocalizedStringResource.init(stringLiteral:)();
  v13(v5, 1, 1, v18);
  v15(v2, 1, 1, v14);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t result = sub_1000E10DC(v11);
  qword_1004F7F28 = result;
  return result;
}

uint64_t sub_100020BA0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10011348C(*a1, *a2);
}

unint64_t sub_100020BB0()
{
  unint64_t result = qword_1004C43E0;
  if (!qword_1004C43E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C43E0);
  }
  return result;
}

Swift::Int sub_100020C04()
{
  return Hasher._finalize()();
}

uint64_t sub_100020C84()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100020CF0()
{
  return Hasher._finalize()();
}

uint64_t sub_100020D6C@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100485578, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100020DCC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6572757361656DLL;
  if (*v1) {
    uint64_t v2 = 0x6C6576656CLL;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_100020E0C()
{
  unint64_t result = qword_1004C43E8;
  if (!qword_1004C43E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C43E8);
  }
  return result;
}

unint64_t sub_100020E64()
{
  unint64_t result = qword_1004C43F0;
  if (!qword_1004C43F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C43F0);
  }
  return result;
}

void *sub_100020EB8()
{
  return &protocol witness table for String;
}

unint64_t sub_100020EC8()
{
  unint64_t result = qword_1004C43F8;
  if (!qword_1004C43F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C43F8);
  }
  return result;
}

unint64_t sub_100020F20()
{
  unint64_t result = qword_1004C4400;
  if (!qword_1004C4400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C4400);
  }
  return result;
}

unint64_t sub_100020F78()
{
  unint64_t result = qword_1004C4408;
  if (!qword_1004C4408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C4408);
  }
  return result;
}

unint64_t sub_100020FD0()
{
  unint64_t result = qword_1004C4410;
  if (!qword_1004C4410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C4410);
  }
  return result;
}

uint64_t sub_100021028@<X0>(uint64_t a1@<X8>)
{
  return sub_100021060(&qword_1004C28D0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1004F7F10, a1);
}

uint64_t sub_100021060@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_1000217E0(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_100021104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100021130(a1, a2, a3, (void (*)(void))sub_100021178);
}

uint64_t sub_100021130(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100021178()
{
  unint64_t result = qword_1004C4418;
  if (!qword_1004C4418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C4418);
  }
  return result;
}

uint64_t sub_1000211CC(uint64_t a1)
{
  unint64_t v2 = sub_100021178();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10002121C()
{
  unint64_t result = qword_1004C4420;
  if (!qword_1004C4420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C4420);
  }
  return result;
}

unint64_t sub_100021274()
{
  unint64_t result = qword_1004C4428;
  if (!qword_1004C4428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C4428);
  }
  return result;
}

unint64_t sub_1000212CC()
{
  unint64_t result = qword_1004C4430;
  if (!qword_1004C4430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C4430);
  }
  return result;
}

uint64_t sub_100021320()
{
  if (qword_1004C28D8 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_10002137C(uint64_t a1)
{
  unint64_t v2 = sub_100020FD0();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1000213C8()
{
  return sub_10002179C(&qword_1004C4438, &qword_1004C4440);
}

void sub_100021404(void *a1@<X8>)
{
  *a1 = &off_1004855C8;
}

uint64_t getEnumTagSinglePayload for Tab(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LaunchMeasureEnum(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    char *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100021570);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_100021598(unsigned char *result, char a2)
{
  char *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for LaunchMeasureEnum()
{
  return &type metadata for LaunchMeasureEnum;
}

uint64_t destroy for LaunchMeasureIntent()
{
  swift_release();

  return swift_release();
}

void *_s7Measure19LaunchMeasureIntentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for LaunchMeasureIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for LaunchMeasureIntent(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LaunchMeasureIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LaunchMeasureIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchMeasureIntent()
{
  return &type metadata for LaunchMeasureIntent;
}

uint64_t sub_100021760()
{
  return sub_10002179C(&qword_1004C4448, &qword_1004C4450);
}

uint64_t sub_10002179C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100016EF4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000217E0(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t *sub_100021818(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_10002187C()
{
  uint64_t v19 = type metadata accessor for InputConnectionBehavior();
  uint64_t v0 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100012894(&qword_1004C4478);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unsigned int v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_100012894(&qword_1004C4460);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_100012894(&qword_1004C4480);
  sub_100021BB4();
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v18 = AppDependency.__allocating_init(key:manager:)();
  sub_100012894(&qword_1004C4490);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  char v20 = 2;
  uint64_t v14 = type metadata accessor for IntentDialog();
  double v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v6, 1, 1, v14);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v19);
  sub_100021178();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  return v18;
}

unint64_t sub_100021BB4()
{
  unint64_t result = qword_1004C4488;
  if (!qword_1004C4488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C4488);
  }
  return result;
}

unint64_t sub_100021C08()
{
  unint64_t result = qword_1004C44A0;
  if (!qword_1004C44A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1004C44A0);
  }
  return result;
}

uint64_t sub_100021C48(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_100021C60()
{
  unint64_t result = qword_1004C44A8;
  if (!qword_1004C44A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C44A8);
  }
  return result;
}

unint64_t sub_100021CB8()
{
  sub_100022EC8(v0, &v24);
  char v1 = v34;
  if (v34 < 0)
  {
    v34 &= ~0x8000000000000000;
    long long v11 = v24;
    uint64_t v12 = v25;
    uint64_t v13 = v26;
    uint64_t v14 = v27;
    uint64_t v15 = v28;
    uint64_t v16 = v29;
    uint64_t v19 = v30;
    uint64_t v20 = v31;
    uint64_t v21 = v32;
    uint64_t v22 = v33;
    uint64_t v17 = v36;
    uint64_t v23 = v35;
    sub_100012894(&qword_1004C44B0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1003F92A0;
    *(void *)(inited + 32) = 0x547972616D6D7573;
    *(void *)(inited + 40) = 0xEB00000000657079;
    *(void *)(inited + 48) = v11;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 80) = &off_1004883C0;
    *(void *)(inited + 56) = *((void *)&v11 + 1);
    *(void *)(inited + 88) = 0xD000000000000010;
    *(void *)(inited + 96) = 0x800000010041F7B0;
    *(void *)(inited + 128) = &type metadata for Int;
    *(void *)(inited + 136) = &off_1004883D0;
    *(void *)(inited + 104) = v12;
    *(void *)(inited + 144) = 0x6E756F436F646E75;
    *(void *)(inited + 152) = 0xE900000000000074;
    *(void *)(inited + 160) = v13;
    *(void *)(inited + 184) = &type metadata for Int;
    *(void *)(inited + 192) = &off_1004883D0;
    *(void *)(inited + 200) = 0x656D7473756A6461;
    *(void *)(inited + 208) = 0xEF746E756F43746ELL;
    *(void *)(inited + 216) = v14;
    *(void *)(inited + 240) = &type metadata for Int;
    *(void *)(inited + 248) = &off_1004883D0;
    *(void *)(inited + 256) = 0xD000000000000013;
    *(void *)(inited + 264) = 0x800000010041F7D0;
    *(void *)(inited + 296) = &type metadata for Int;
    *(void *)(inited + 304) = &off_1004883D0;
    *(void *)(inited + 272) = v15;
    *(void *)(inited + 312) = 0xD000000000000017;
    *(void *)(inited + 320) = 0x800000010041F7F0;
    *(void *)(inited + 352) = &type metadata for Int;
    *(void *)(inited + 360) = &off_1004883D0;
    *(void *)(inited + 328) = v16;
    *(void *)(inited + 368) = 0x6F43736564697567;
    *(void *)(inited + 376) = 0xEB00000000746E75;
    *(void *)(inited + 408) = &type metadata for Int;
    *(void *)(inited + 416) = &off_1004883D0;
    *(void *)(inited + 384) = v19;
    *(void *)(inited + 424) = 0xD000000000000012;
    *(void *)(inited + 432) = 0x800000010041F810;
    *(void *)(inited + 464) = &type metadata for Int;
    *(void *)(inited + 472) = &off_1004883D0;
    *(void *)(inited + 440) = v20;
    *(void *)(inited + 480) = 0xD000000000000011;
    *(void *)(inited + 488) = 0x800000010041F830;
    *(void *)(inited + 520) = &type metadata for Int;
    *(void *)(inited + 528) = &off_1004883D0;
    *(void *)(inited + 496) = v21;
    *(void *)(inited + 536) = 0xD000000000000018;
    *(void *)(inited + 544) = 0x800000010041F850;
    *(void *)(inited + 576) = &type metadata for Int;
    *(void *)(inited + 584) = &off_1004883D0;
    *(void *)(inited + 552) = v22;
    *(void *)(inited + 592) = 0xD00000000000001BLL;
    *(void *)(inited + 600) = 0x800000010041F870;
    *(void *)(inited + 632) = &type metadata for Bool;
    *(void *)(inited + 640) = &off_1004883D8;
    *(unsigned char *)(inited + 608) = v1 & 1;
    strcpy((char *)(inited + 648), "trackingState");
    *(_WORD *)(inited + 662) = -4864;
    *(void *)(inited + 688) = &type metadata for String;
    *(void *)(inited + 696) = &off_1004883C0;
    *(void *)(inited + 664) = v23;
    *(void *)(inited + 672) = v17;
  }
  else
  {
    long long v2 = v24;
    uint64_t v3 = v25;
    uint64_t v4 = v26;
    uint64_t v6 = v27;
    uint64_t v5 = v28;
    uint64_t v8 = v29;
    uint64_t v7 = v30;
    uint64_t v9 = v31;
    sub_100012894(&qword_1004C44B0);
    uint64_t inited = swift_allocObject();
    *(_OWORD *)(inited + 16) = xmmword_1003F92B0;
    *(void *)(inited + 32) = 0x547972616D6D7573;
    *(void *)(inited + 40) = 0xEB00000000657079;
    *(void *)(inited + 48) = v2;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 80) = &off_1004883C0;
    *(void *)(inited + 56) = *((void *)&v2 + 1);
    *(void *)(inited + 88) = 0xD000000000000010;
    *(void *)(inited + 96) = 0x800000010041F7B0;
    *(void *)(inited + 128) = &type metadata for Int;
    *(void *)(inited + 136) = &off_1004883D0;
    *(void *)(inited + 104) = v3;
    *(void *)(inited + 144) = 0x6E756F436F646E75;
    *(void *)(inited + 152) = 0xE900000000000074;
    *(void *)(inited + 160) = v4;
    *(void *)(inited + 184) = &type metadata for Int;
    *(void *)(inited + 192) = &off_1004883D0;
    *(void *)(inited + 200) = 0x656D7473756A6461;
    *(void *)(inited + 208) = 0xEF746E756F43746ELL;
    *(void *)(inited + 216) = v6;
    *(void *)(inited + 240) = &type metadata for Int;
    *(void *)(inited + 248) = &off_1004883D0;
    *(void *)(inited + 256) = 0xD000000000000013;
    *(void *)(inited + 264) = 0x800000010041F7D0;
    *(void *)(inited + 296) = &type metadata for Int;
    *(void *)(inited + 304) = &off_1004883D0;
    *(void *)(inited + 272) = v5;
    *(void *)(inited + 312) = 0xD000000000000017;
    *(void *)(inited + 320) = 0x800000010041F7F0;
    *(void *)(inited + 352) = &type metadata for Int;
    *(void *)(inited + 360) = &off_1004883D0;
    *(void *)(inited + 328) = v8;
    strcpy((char *)(inited + 368), "trackingState");
    *(_WORD *)(inited + 382) = -4864;
    *(void *)(inited + 384) = v7;
    *(void *)(inited + 408) = &type metadata for String;
    *(void *)(inited + 416) = &off_1004883C0;
    *(void *)(inited + 392) = v9;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1000E12D4(inited);
}

unint64_t sub_100022110()
{
  sub_100022E88(v0, (uint64_t)v34);
  int v1 = sub_100022EC0((uint64_t)v34);
  uint64_t v2 = nullsub_1(v34);
  uint64_t v3 = *(void *)v2;
  if (v1 == 1)
  {
    uint64_t v5 = *(void *)(v2 + 8);
    uint64_t v4 = *(void *)(v2 + 16);
    uint64_t v7 = *(void *)(v2 + 24);
    uint64_t v6 = *(void *)(v2 + 32);
    uint64_t v8 = *(void *)(v2 + 40);
    uint64_t v9 = *(void *)(v2 + 48);
    uint64_t v10 = *(void *)(v2 + 56);
    int v12 = *(_DWORD *)(v2 + 64);
    int v11 = *(_DWORD *)(v2 + 68);
    int v14 = *(_DWORD *)(v2 + 72);
    int v13 = *(_DWORD *)(v2 + 76);
    uint64_t v26 = *(void *)(v2 + 88);
    uint64_t v27 = *(void *)(v2 + 80);
    uint64_t v28 = *(void *)(v2 + 104);
    uint64_t v29 = *(void *)(v2 + 96);
    uint64_t v30 = *(void *)(v2 + 120);
    uint64_t v31 = *(void *)(v2 + 112);
    uint64_t v32 = *(void *)(v2 + 136);
    uint64_t v33 = *(void *)(v2 + 128);
    sub_100012894(&qword_1004C44B0);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1003F92D0;
    *(void *)(v15 + 32) = 0x6874676E656CLL;
    *(void *)(v15 + 40) = 0xE600000000000000;
    *(void *)(v15 + 72) = &type metadata for Int;
    *(void *)(v15 + 80) = &off_1004883D0;
    *(void *)(v15 + 48) = v3;
    strcpy((char *)(v15 + 88), "viewDistance");
    *(unsigned char *)(v15 + 101) = 0;
    *(_WORD *)(v15 + 102) = -5120;
    *(void *)(v15 + 128) = &type metadata for Int;
    *(void *)(v15 + 136) = &off_1004883D0;
    *(void *)(v15 + 104) = v5;
    *(void *)(v15 + 144) = 0xD000000000000011;
    *(void *)(v15 + 152) = 0x800000010041F690;
    *(void *)(v15 + 184) = &type metadata for String;
    *(void *)(v15 + 192) = &off_1004883C0;
    *(void *)(v15 + 160) = v4;
    *(void *)(v15 + 168) = v7;
    strcpy((char *)(v15 + 200), "point1SnapType");
    *(unsigned char *)(v15 + 215) = -18;
    *(void *)(v15 + 240) = &type metadata for String;
    *(void *)(v15 + 248) = &off_1004883C0;
    *(void *)(v15 + 216) = v6;
    *(void *)(v15 + 224) = v8;
    strcpy((char *)(v15 + 256), "point2SnapType");
    *(unsigned char *)(v15 + 271) = -18;
    *(void *)(v15 + 296) = &type metadata for String;
    *(void *)(v15 + 304) = &off_1004883C0;
    *(void *)(v15 + 272) = v9;
    *(void *)(v15 + 280) = v10;
    *(void *)(v15 + 312) = 0xD000000000000010;
    *(void *)(v15 + 320) = 0x800000010041F6B0;
    *(void *)(v15 + 352) = &type metadata for Float;
    *(void *)(v15 + 360) = &off_1004883C8;
    *(_DWORD *)(v15 + 328) = v12;
    *(void *)(v15 + 368) = 0xD000000000000010;
    *(void *)(v15 + 376) = 0x800000010041F6D0;
    *(void *)(v15 + 408) = &type metadata for Float;
    *(void *)(v15 + 416) = &off_1004883C8;
    *(_DWORD *)(v15 + 384) = v11;
    *(void *)(v15 + 424) = 0xD000000000000015;
    *(void *)(v15 + 432) = 0x800000010041F6F0;
    *(void *)(v15 + 464) = &type metadata for Float;
    *(void *)(v15 + 472) = &off_1004883C8;
    *(_DWORD *)(v15 + 440) = v14;
    *(void *)(v15 + 480) = 0xD000000000000015;
    *(void *)(v15 + 488) = 0x800000010041F710;
    *(void *)(v15 + 520) = &type metadata for Float;
    *(void *)(v15 + 528) = &off_1004883C8;
    *(_DWORD *)(v15 + 496) = v13;
    *(void *)(v15 + 536) = 0x6C5031746E696F70;
    *(void *)(v15 + 544) = 0xEF65707954656E61;
    *(void *)(v15 + 576) = &type metadata for String;
    *(void *)(v15 + 584) = &off_1004883C0;
    *(void *)(v15 + 552) = v27;
    *(void *)(v15 + 560) = v26;
    *(void *)(v15 + 592) = 0x6C5032746E696F70;
    *(void *)(v15 + 600) = 0xEF65707954656E61;
    *(void *)(v15 + 632) = &type metadata for String;
    *(void *)(v15 + 640) = &off_1004883C0;
    *(void *)(v15 + 608) = v29;
    *(void *)(v15 + 616) = v28;
    *(void *)(v15 + 648) = 0xD000000000000016;
    *(void *)(v15 + 656) = 0x800000010041F730;
    *(void *)(v15 + 688) = &type metadata for String;
    *(void *)(v15 + 696) = &off_1004883C0;
    *(void *)(v15 + 664) = v31;
    *(void *)(v15 + 672) = v30;
    *(void *)(v15 + 704) = 0xD000000000000016;
    *(void *)(v15 + 712) = 0x800000010041F750;
    *(void *)(v15 + 744) = &type metadata for String;
    *(void *)(v15 + 752) = &off_1004883C0;
    *(void *)(v15 + 720) = v33;
    *(void *)(v15 + 728) = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = v15;
  }
  else
  {
    int v17 = *(_DWORD *)(v2 + 8);
    uint64_t v18 = *(void *)(v2 + 16);
    int v19 = *(_DWORD *)(v2 + 24);
    uint64_t v21 = *(void *)(v2 + 32);
    uint64_t v20 = *(void *)(v2 + 40);
    uint64_t v23 = *(void *)(v2 + 48);
    uint64_t v22 = *(void *)(v2 + 56);
    sub_100012894(&qword_1004C44B0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1003F92C0;
    *(void *)(inited + 32) = 1634038369;
    *(void *)(inited + 40) = 0xE400000000000000;
    *(void *)(inited + 72) = &type metadata for Int;
    *(void *)(inited + 80) = &off_1004883D0;
    *(void *)(inited + 48) = v3;
    *(void *)(inited + 88) = 0x6152746365707361;
    *(void *)(inited + 96) = 0xEB000000006F6974;
    *(void *)(inited + 128) = &type metadata for Float;
    *(void *)(inited + 136) = &off_1004883C8;
    *(_DWORD *)(inited + 104) = v17;
    strcpy((char *)(inited + 144), "viewDistance");
    *(unsigned char *)(inited + 157) = 0;
    *(_WORD *)(inited + 158) = -5120;
    *(void *)(inited + 184) = &type metadata for Int;
    *(void *)(inited + 192) = &off_1004883D0;
    *(void *)(inited + 160) = v18;
    *(void *)(inited + 200) = 0x6C676E4177656976;
    *(void *)(inited + 208) = 0xE900000000000065;
    *(void *)(inited + 240) = &type metadata for Float;
    *(void *)(inited + 248) = &off_1004883C8;
    *(_DWORD *)(inited + 216) = v19;
    *(void *)(inited + 256) = 0x707954656E616C70;
    *(void *)(inited + 264) = 0xE900000000000065;
    *(void *)(inited + 296) = &type metadata for String;
    *(void *)(inited + 304) = &off_1004883C0;
    *(void *)(inited + 272) = v21;
    *(void *)(inited + 280) = v20;
    *(void *)(inited + 312) = 0xD000000000000010;
    *(void *)(inited + 320) = 0x800000010041F770;
    *(void *)(inited + 352) = &type metadata for String;
    *(void *)(inited + 360) = &off_1004883C0;
    *(void *)(inited + 328) = v23;
    *(void *)(inited + 336) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = inited;
  }
  return sub_1000E12D4(v16);
}

unint64_t sub_1000225B4()
{
  sub_100021C48(v0, (uint64_t)v12);
  char v1 = v12[0];
  int v2 = v13;
  int v3 = v14;
  int v4 = v15;
  int v5 = v16;
  int v7 = v17;
  int v6 = v18;
  int v8 = v19;
  uint64_t v9 = v20;
  sub_100012894(&qword_1004C44B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003F92E0;
  *(void *)(inited + 32) = 0x73736563637573;
  *(void *)(inited + 40) = 0xE700000000000000;
  *(void *)(inited + 72) = &type metadata for Bool;
  *(void *)(inited + 80) = &off_1004883D8;
  *(unsigned char *)(inited + 48) = v1;
  *(void *)(inited + 88) = 0x6E6F697461727564;
  *(void *)(inited + 96) = 0xE800000000000000;
  *(void *)(inited + 128) = &type metadata for Float;
  *(void *)(inited + 136) = &off_1004883C8;
  *(_DWORD *)(inited + 104) = v2;
  strcpy((char *)(inited + 144), "durationShown");
  *(_WORD *)(inited + 158) = -4864;
  *(void *)(inited + 184) = &type metadata for Float;
  *(void *)(inited + 192) = &off_1004883C8;
  *(_DWORD *)(inited + 160) = v3;
  strcpy((char *)(inited + 200), "cameraDistance");
  *(unsigned char *)(inited + 215) = -18;
  *(void *)(inited + 240) = &type metadata for Float;
  *(void *)(inited + 248) = &off_1004883C8;
  *(_DWORD *)(inited + 216) = v4;
  *(void *)(inited + 256) = 0x6E416172656D6163;
  *(void *)(inited + 264) = 0xEB00000000656C67;
  *(void *)(inited + 296) = &type metadata for Float;
  *(void *)(inited + 304) = &off_1004883C8;
  *(_DWORD *)(inited + 272) = v5;
  strcpy((char *)(inited + 312), "deviationLow");
  *(unsigned char *)(inited + 325) = 0;
  *(_WORD *)(inited + 326) = -5120;
  *(void *)(inited + 352) = &type metadata for Float;
  *(void *)(inited + 360) = &off_1004883C8;
  *(_DWORD *)(inited + 328) = v7;
  strcpy((char *)(inited + 368), "deviationHigh");
  *(_WORD *)(inited + 382) = -4864;
  *(void *)(inited + 408) = &type metadata for Float;
  *(void *)(inited + 416) = &off_1004883C8;
  *(_DWORD *)(inited + 384) = v6;
  *(void *)(inited + 424) = 0xD000000000000011;
  *(void *)(inited + 432) = 0x800000010041F790;
  *(void *)(inited + 464) = &type metadata for Float;
  *(void *)(inited + 472) = &off_1004883C8;
  *(_DWORD *)(inited + 440) = v8;
  strcpy((char *)(inited + 480), "samplesCount");
  *(unsigned char *)(inited + 493) = 0;
  *(_WORD *)(inited + 494) = -5120;
  *(void *)(inited + 520) = &type metadata for Int;
  *(void *)(inited + 528) = &off_1004883D0;
  *(void *)(inited + 496) = v9;
  return sub_1000E12D4(inited);
}

unint64_t sub_1000227BC()
{
  sub_100022E60(v0, (uint64_t)&v39);
  unsigned __int16 v1 = v53;
  int v2 = v53 >> 14;
  if (v2)
  {
    if (v2 != 1)
    {
      v53 &= 0x3FFFu;
      int v32 = v39;
      int v33 = v40;
      int v34 = v41;
      int v35 = v42;
      int v36 = v43;
      char v37 = v44;
      sub_100012894(&qword_1004C44B0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1003F92C0;
      *(void *)(inited + 32) = 0x6769654870616E73;
      *(void *)(inited + 40) = 0xEA00000000007468;
      *(void *)(inited + 72) = &type metadata for Float;
      *(void *)(inited + 80) = &off_1004883C8;
      *(_DWORD *)(inited + 48) = v32;
      strcpy((char *)(inited + 88), "cameraDistance");
      *(unsigned char *)(inited + 103) = -18;
      *(void *)(inited + 128) = &type metadata for Float;
      *(void *)(inited + 136) = &off_1004883C8;
      *(_DWORD *)(inited + 104) = v33;
      *(void *)(inited + 144) = 0x6E416172656D6163;
      *(void *)(inited + 152) = 0xEB00000000656C67;
      *(void *)(inited + 184) = &type metadata for Float;
      *(void *)(inited + 192) = &off_1004883C8;
      *(_DWORD *)(inited + 160) = v34;
      strcpy((char *)(inited + 200), "snapDuration");
      *(unsigned char *)(inited + 213) = 0;
      *(_WORD *)(inited + 214) = -5120;
      *(void *)(inited + 240) = &type metadata for Float;
      *(void *)(inited + 248) = &off_1004883C8;
      *(_DWORD *)(inited + 216) = v35;
      strcpy((char *)(inited + 256), "slideDistance");
      *(_WORD *)(inited + 270) = -4864;
      *(void *)(inited + 296) = &type metadata for Float;
      *(void *)(inited + 304) = &off_1004883C8;
      *(_DWORD *)(inited + 272) = v36;
      *(void *)(inited + 312) = 0x6F50646563616C70;
      *(void *)(inited + 320) = 0xEB00000000746E69;
      *(void *)(inited + 352) = &type metadata for Bool;
      *(void *)(inited + 360) = &off_1004883D8;
      *(unsigned char *)(inited + 328) = v37;
      return sub_1000E12D4(inited);
    }
    v53 &= 0x3FFFu;
    int v3 = v39;
    int v4 = v40;
    int v5 = v41;
    int v6 = v42;
    int v7 = v43;
    uint64_t v9 = v45;
    uint64_t v8 = v46;
    uint64_t v11 = v47;
    uint64_t v10 = v48;
    uint64_t v13 = v49;
    uint64_t v12 = v50;
    int v15 = v51;
    int v14 = v52;
    sub_100012894(&qword_1004C44B0);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1003F92F0;
    *(void *)(v16 + 32) = 0x6874676E656CLL;
    *(void *)(v16 + 40) = 0xE600000000000000;
    *(void *)(v16 + 72) = &type metadata for Float;
    *(void *)(v16 + 80) = &off_1004883C8;
    *(_DWORD *)(v16 + 48) = v3;
    strcpy((char *)(v16 + 88), "cameraDistance");
    *(unsigned char *)(v16 + 103) = -18;
    *(void *)(v16 + 128) = &type metadata for Float;
    *(void *)(v16 + 136) = &off_1004883C8;
    *(_DWORD *)(v16 + 104) = v4;
    *(void *)(v16 + 144) = 0x6E416172656D6163;
    *(void *)(v16 + 152) = 0xEB00000000656C67;
    *(void *)(v16 + 184) = &type metadata for Float;
    *(void *)(v16 + 192) = &off_1004883C8;
    *(_DWORD *)(v16 + 160) = v5;
    *(void *)(v16 + 200) = 0xD000000000000010;
    *(void *)(v16 + 208) = 0x800000010041F630;
    *(void *)(v16 + 240) = &type metadata for Float;
    *(void *)(v16 + 248) = &off_1004883C8;
    *(_DWORD *)(v16 + 216) = v6;
    *(void *)(v16 + 256) = 0xD000000000000010;
    *(void *)(v16 + 264) = 0x800000010041F650;
    *(void *)(v16 + 296) = &type metadata for Float;
    *(void *)(v16 + 304) = &off_1004883C8;
    *(_DWORD *)(v16 + 272) = v7;
    *(void *)(v16 + 312) = 0x795441656E616C70;
    *(void *)(v16 + 320) = 0xEA00000000006570;
    *(void *)(v16 + 352) = &type metadata for String;
    *(void *)(v16 + 360) = &off_1004883C0;
    *(void *)(v16 + 328) = v9;
    *(void *)(v16 + 336) = v8;
    *(void *)(v16 + 368) = 0x795442656E616C70;
    *(void *)(v16 + 376) = 0xEA00000000006570;
    *(void *)(v16 + 408) = &type metadata for String;
    *(void *)(v16 + 416) = &off_1004883C0;
    *(void *)(v16 + 384) = v11;
    *(void *)(v16 + 392) = v10;
    strcpy((char *)(v16 + 424), "classification");
    *(unsigned char *)(v16 + 439) = -18;
    *(void *)(v16 + 464) = &type metadata for String;
    *(void *)(v16 + 472) = &off_1004883C0;
    *(void *)(v16 + 440) = v13;
    *(void *)(v16 + 448) = v12;
    strcpy((char *)(v16 + 480), "snapDuration");
    *(unsigned char *)(v16 + 493) = 0;
    *(_WORD *)(v16 + 494) = -5120;
    *(void *)(v16 + 520) = &type metadata for Float;
    *(void *)(v16 + 528) = &off_1004883C8;
    *(_DWORD *)(v16 + 496) = v15;
    strcpy((char *)(v16 + 536), "slideDistance");
    *(_WORD *)(v16 + 550) = -4864;
    *(void *)(v16 + 576) = &type metadata for Float;
    *(void *)(v16 + 584) = &off_1004883C8;
    *(_DWORD *)(v16 + 552) = v14;
    *(void *)(v16 + 592) = 0x6F50646563616C70;
    *(void *)(v16 + 600) = 0xEB00000000746E69;
    *(void *)(v16 + 632) = &type metadata for Bool;
    *(void *)(v16 + 640) = &off_1004883D8;
    *(unsigned char *)(v16 + 608) = v1 & 1;
  }
  else
  {
    v53 &= 0x3FFFu;
    int v17 = v39;
    int v18 = v40;
    int v19 = v41;
    int v20 = v42;
    int v22 = v43;
    int v21 = v44;
    uint64_t v24 = v45;
    uint64_t v23 = v46;
    uint64_t v26 = v47;
    uint64_t v25 = v48;
    uint64_t v28 = v49;
    uint64_t v27 = v50;
    int v30 = v51;
    int v29 = v52;
    sub_100012894(&qword_1004C44B0);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1003F92D0;
    *(void *)(v16 + 32) = 0x6874676E656CLL;
    *(void *)(v16 + 40) = 0xE600000000000000;
    *(void *)(v16 + 72) = &type metadata for Float;
    *(void *)(v16 + 80) = &off_1004883C8;
    *(_DWORD *)(v16 + 48) = v17;
    *(void *)(v16 + 88) = 0xD000000000000010;
    *(void *)(v16 + 96) = 0x800000010041F670;
    *(void *)(v16 + 128) = &type metadata for Float;
    *(void *)(v16 + 136) = &off_1004883C8;
    *(_DWORD *)(v16 + 104) = v18;
    strcpy((char *)(v16 + 144), "cameraDistance");
    *(unsigned char *)(v16 + 159) = -18;
    *(void *)(v16 + 184) = &type metadata for Float;
    *(void *)(v16 + 192) = &off_1004883C8;
    *(_DWORD *)(v16 + 160) = v19;
    *(void *)(v16 + 200) = 0x6E416172656D6163;
    *(void *)(v16 + 208) = 0xEB00000000656C67;
    *(void *)(v16 + 240) = &type metadata for Float;
    *(void *)(v16 + 248) = &off_1004883C8;
    *(_DWORD *)(v16 + 216) = v20;
    *(void *)(v16 + 256) = 0xD000000000000010;
    *(void *)(v16 + 264) = 0x800000010041F630;
    *(void *)(v16 + 296) = &type metadata for Float;
    *(void *)(v16 + 304) = &off_1004883C8;
    *(_DWORD *)(v16 + 272) = v22;
    *(void *)(v16 + 312) = 0xD000000000000010;
    *(void *)(v16 + 320) = 0x800000010041F650;
    *(void *)(v16 + 352) = &type metadata for Float;
    *(void *)(v16 + 360) = &off_1004883C8;
    *(_DWORD *)(v16 + 328) = v21;
    *(void *)(v16 + 368) = 0x795441656E616C70;
    *(void *)(v16 + 376) = 0xEA00000000006570;
    *(void *)(v16 + 408) = &type metadata for String;
    *(void *)(v16 + 416) = &off_1004883C0;
    *(void *)(v16 + 384) = v24;
    *(void *)(v16 + 392) = v23;
    *(void *)(v16 + 424) = 0x795442656E616C70;
    *(void *)(v16 + 432) = 0xEA00000000006570;
    *(void *)(v16 + 464) = &type metadata for String;
    *(void *)(v16 + 472) = &off_1004883C0;
    *(void *)(v16 + 440) = v26;
    *(void *)(v16 + 448) = v25;
    strcpy((char *)(v16 + 480), "classification");
    *(unsigned char *)(v16 + 495) = -18;
    *(void *)(v16 + 520) = &type metadata for String;
    *(void *)(v16 + 528) = &off_1004883C0;
    *(void *)(v16 + 496) = v28;
    *(void *)(v16 + 504) = v27;
    strcpy((char *)(v16 + 536), "snapDuration");
    *(unsigned char *)(v16 + 549) = 0;
    *(_WORD *)(v16 + 550) = -5120;
    *(void *)(v16 + 576) = &type metadata for Float;
    *(void *)(v16 + 584) = &off_1004883C8;
    *(_DWORD *)(v16 + 552) = v30;
    strcpy((char *)(v16 + 592), "slideDistance");
    *(_WORD *)(v16 + 606) = -4864;
    *(void *)(v16 + 632) = &type metadata for Float;
    *(void *)(v16 + 640) = &off_1004883C8;
    *(_DWORD *)(v16 + 608) = v29;
    *(void *)(v16 + 648) = 0x6F50646563616C70;
    *(void *)(v16 + 656) = 0xEB00000000746E69;
    *(void *)(v16 + 688) = &type metadata for Bool;
    *(void *)(v16 + 696) = &off_1004883D8;
    *(unsigned char *)(v16 + 664) = v1 & 1;
    *(void *)(v16 + 704) = 0x694C646563616C70;
    *(void *)(v16 + 712) = 0xEA0000000000656ELL;
    *(void *)(v16 + 744) = &type metadata for Bool;
    *(void *)(v16 + 752) = &off_1004883D8;
    *(unsigned char *)(v16 + 720) = HIBYTE(v1) & 0x3F;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t inited = v16;
  return sub_1000E12D4(inited);
}

uint64_t sub_100022E60(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  long long v3 = *(_OWORD *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 48);
  long long v5 = *(_OWORD *)(a1 + 64);
  *(_WORD *)(a2 + 80) = *(_WORD *)(a1 + 80);
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 32) = v3;
  return a2;
}

uint64_t sub_100022E88(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  long long v3 = *(_OWORD *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 48);
  long long v5 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 80) = v5;
  *(_OWORD *)(a2 + 32) = v3;
  *(_OWORD *)(a2 + 48) = v4;
  long long v6 = *(_OWORD *)(a1 + 96);
  long long v7 = *(_OWORD *)(a1 + 112);
  long long v8 = *(_OWORD *)(a1 + 128);
  *(unsigned char *)(a2 + 144) = *(unsigned char *)(a1 + 144);
  *(_OWORD *)(a2 + 112) = v7;
  *(_OWORD *)(a2 + 128) = v8;
  *(_OWORD *)(a2 + 96) = v6;
  return a2;
}

uint64_t sub_100022EC0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 144);
}

_OWORD *sub_100022EC8(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  long long v4 = a1[3];
  long long v5 = a1[4];
  long long v6 = a1[6];
  a2[5] = a1[5];
  a2[6] = v6;
  a2[3] = v4;
  a2[4] = v5;
  return a2;
}

uint64_t sub_100022EF0()
{
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t destroy for SessionEvent()
{
  return sub_100022F80();
}

uint64_t sub_100022F80()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SessionEvent(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  uint64_t v15 = a2[11];
  uint64_t v16 = a2[12];
  uint64_t v17 = a2[13];
  sub_100022EF0();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  return a1;
}

void *assignWithCopy for SessionEvent(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  uint64_t v15 = a2[11];
  uint64_t v16 = a2[12];
  uint64_t v17 = a2[13];
  sub_100022EF0();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  sub_100022F80();
  return a1;
}

__n128 initializeWithTake for SessionEvent(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

_OWORD *assignWithTake for SessionEvent(_OWORD *a1, _OWORD *a2)
{
  long long v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  long long v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  long long v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  sub_100022F80();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionEvent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 88) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for SessionEvent(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 104) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(void *)(a1 + 80) = 0;
      *(void *)(a1 + 88) = 2 * -a2;
      *(void *)(a1 + 96) = 0;
      *(void *)(a1 + 104) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_100023308(uint64_t a1)
{
  return *(void *)(a1 + 88) >> 63;
}

uint64_t sub_100023314(uint64_t result)
{
  *(void *)(result + 88) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_100023324(uint64_t result, uint64_t a2)
{
  *(void *)(result + 88) = *(void *)(result + 88) & 1 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for SessionEvent()
{
  return &type metadata for SessionEvent;
}

__n128 initializeWithCopy for PersonHeightEvent(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for PersonHeightEvent(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[40]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonHeightEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonHeightEvent()
{
  return &type metadata for PersonHeightEvent;
}

uint64_t sub_10002340C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  if (a19)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t destroy for ConfirmedEvent(uint64_t a1)
{
  return sub_1000234F8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(unsigned char *)(a1 + 144));
}

uint64_t sub_1000234F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  if (a19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ConfirmedEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  uint64_t v19 = *(void *)(a2 + 120);
  uint64_t v20 = *(void *)(a2 + 128);
  uint64_t v21 = *(void *)(a2 + 136);
  char v22 = *(unsigned char *)(a2 + 144);
  sub_10002340C(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(void *)(a1 + 120) = v19;
  *(void *)(a1 + 128) = v20;
  *(void *)(a1 + 136) = v21;
  *(unsigned char *)(a1 + 144) = v22;
  return a1;
}

uint64_t assignWithCopy for ConfirmedEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v28 = *(void *)(a2 + 72);
  uint64_t v29 = *(void *)(a2 + 80);
  uint64_t v30 = *(void *)(a2 + 88);
  uint64_t v31 = *(void *)(a2 + 96);
  uint64_t v32 = *(void *)(a2 + 104);
  uint64_t v33 = *(void *)(a2 + 112);
  uint64_t v34 = *(void *)(a2 + 120);
  uint64_t v35 = *(void *)(a2 + 128);
  uint64_t v36 = *(void *)(a2 + 136);
  char v37 = *(unsigned char *)(a2 + 144);
  sub_10002340C(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  uint64_t v24 = *(void *)(a1 + 128);
  uint64_t v25 = *(void *)(a1 + 136);
  char v26 = *(unsigned char *)(a1 + 144);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v28;
  *(void *)(a1 + 80) = v29;
  *(void *)(a1 + 88) = v30;
  *(void *)(a1 + 96) = v31;
  *(void *)(a1 + 104) = v32;
  *(void *)(a1 + 112) = v33;
  *(void *)(a1 + 120) = v34;
  *(void *)(a1 + 128) = v35;
  *(void *)(a1 + 136) = v36;
  *(unsigned char *)(a1 + 144) = v37;
  sub_1000234F8(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, v25, v26);
  return a1;
}

__n128 initializeWithTake for ConfirmedEvent(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for ConfirmedEvent(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 144);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 112);
  uint64_t v16 = *(void *)(a1 + 128);
  uint64_t v17 = *(void *)(a1 + 136);
  char v18 = *(unsigned char *)(a1 + 144);
  long long v19 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v19;
  long long v20 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v20;
  long long v21 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v21;
  long long v22 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v22;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = v3;
  sub_1000234F8(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConfirmedEvent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 145)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 144);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ConfirmedEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 144) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 145) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 145) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 144) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100023994(uint64_t result, char a2)
{
  *(unsigned char *)(result + 144) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ConfirmedEvent()
{
  return &type metadata for ConfirmedEvent;
}

uint64_t sub_1000239B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int16 a11)
{
  if ((a11 & 0x80000000) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for GuidesEvent(uint64_t a1)
{
  return sub_100023A50(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(_WORD *)(a1 + 80));
}

uint64_t sub_100023A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int16 a11)
{
  if ((a11 & 0x80000000) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for GuidesEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  __int16 v14 = *(_WORD *)(a2 + 80);
  sub_1000239B0(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(_WORD *)(a1 + 80) = v14;
  return a1;
}

uint64_t assignWithCopy for GuidesEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v24 = *(void *)(a2 + 72);
  __int16 v25 = *(_WORD *)(a2 + 80);
  sub_1000239B0(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v21 = *(void *)(a1 + 72);
  __int16 v22 = *(_WORD *)(a1 + 80);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v24;
  *(_WORD *)(a1 + 80) = v25;
  sub_100023A50(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  return a1;
}

__n128 initializeWithTake for GuidesEvent(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for GuidesEvent(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 80);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  __int16 v14 = *(_WORD *)(a1 + 80);
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  long long v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_WORD *)(a1 + 80) = v3;
  sub_100023A50(v4, v6, v5, v7, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for GuidesEvent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FFE && *(unsigned char *)(a1 + 82)) {
    return (*(_DWORD *)a1 + 16382);
  }
  unsigned int v3 = (*(_WORD *)(a1 + 80) & 0x3E00 | (*(unsigned __int16 *)(a1 + 80) >> 14) & 0xFFFFFE03 | (4
                                                                                            * (*(_WORD *)(a1 + 80) >> 1))) ^ 0x3FFF;
  if (v3 >= 0x3FFD) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for GuidesEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFD)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 80) = 0;
    *(void *)__n128 result = a2 - 16382;
    if (a3 >= 0x3FFE) {
      *(unsigned char *)(result + 82) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFE) {
      *(unsigned char *)(result + 82) = 0;
    }
    if (a2)
    {
      unsigned int v3 = ((-a2 >> 2) & 0xFFF) - (a2 << 12);
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)(result + 64) = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)__n128 result = 0u;
      *(_WORD *)(result + 80) = (4 * v3) & 0xFE00 | (2 * (v3 & 0x7F));
    }
  }
  return result;
}

uint64_t sub_100023DD0(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 80) >> 14;
}

uint64_t sub_100023DDC(uint64_t result)
{
  *(_WORD *)(result + 80) &= 0x3FFFu;
  return result;
}

uint64_t sub_100023DEC(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 80) = *(_WORD *)(result + 80) & 0x101 | (a2 << 14);
  return result;
}

ValueMetadata *type metadata accessor for GuidesEvent()
{
  return &type metadata for GuidesEvent;
}

double sub_100023E10()
{
  id v1 = [self currentTraitCollection];
  id v2 = [v1 preferredContentSizeCategory];

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter();
  [*(id *)(v0 + OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_sketchView) bounds];
  double Height = CGRectGetHeight(v6);
  if (v1)
  {
    [*(id *)(v0 + OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_accessibilityLength) bounds];
    double Height = Height + CGRectGetHeight(v7);
    if (qword_1004C27E8 != -1) {
      swift_once();
    }
    double v4 = *(double *)&qword_1004F7E00;
  }
  else
  {
    [*(id *)(v0 + OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_labelStrip) bounds];
    double v4 = CGRectGetHeight(v8);
  }
  return Height + v4;
}

void sub_100023F20()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  double v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [self currentTraitCollection];
  id v6 = [v5 preferredContentSizeCategory];

  LOBYTE(v5) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v5)
  {
    [*(id *)(v0 + OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_accessibilityLength) bounds];
    double Height = CGRectGetHeight(v30);
    CGRect v8 = *(void **)(v0 + OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_accessibilityWidth);
    [v8 bounds];
    if (Height + CGRectGetHeight(v31) != 0.0)
    {
      sub_100023E10();
      [v8 bounds];
      CGRectGetHeight(v32);
      [*(id *)(v0 + OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_accessibilitySeparator) bounds];
      CGRectGetHeight(v33);
      if (qword_1004C27E8 != -1) {
        swift_once();
      }
    }
  }
  else
  {
    sub_100023E10();
    uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_tableView);
    IndexPath.init(row:section:)();
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    uint64_t v11 = *(void (**)(char *, uint64_t))(v2 + 8);
    v11(v4, v1);
    [v9 rectForRowAtIndexPath:isa];
    CGFloat v13 = v12;
    CGFloat v15 = v14;
    CGFloat v17 = v16;
    CGFloat v19 = v18;

    v34.origin.x = v13;
    v34.origin.y = v15;
    v34.size.width = v17;
    v34.size.height = v19;
    CGRectGetHeight(v34);
    IndexPath.init(row:section:)();
    Class v20 = IndexPath._bridgeToObjectiveC()().super.isa;
    v11(v4, v1);
    [v9 rectForRowAtIndexPath:v20];
    CGFloat v22 = v21;
    CGFloat v24 = v23;
    CGFloat v26 = v25;
    CGFloat v28 = v27;

    v35.origin.x = v22;
    v35.origin.y = v24;
    v35.size.width = v26;
    v35.size.height = v28;
    CGRectGetHeight(v35);
  }
}

void sub_100024208(long long *a1)
{
  *(void *)&long long v61 = *((void *)a1 + 6);
  *((void *)&v61 + 1) = *((void *)a1 + 5);
  uint64_t v59 = *((void *)a1 + 8);
  uint64_t v60 = *((void *)a1 + 7);
  uint64_t v2 = *((void *)a1 + 12);
  uint64_t v57 = *((void *)a1 + 11);
  uint64_t v58 = *((void *)a1 + 10);
  uint64_t v3 = *((void *)a1 + 13);
  uint64_t v4 = *((void *)a1 + 20);
  uint64_t v62 = *((void *)a1 + 21);
  uint64_t v6 = *((void *)a1 + 22);
  uint64_t v5 = *((void *)a1 + 23);
  uint64_t v7 = *((void *)a1 + 25);
  uint64_t v53 = *((void *)a1 + 27);
  uint64_t v54 = *((void *)a1 + 26);
  uint64_t v52 = *((void *)a1 + 28);
  id v8 = [self currentTraitCollection];
  id v9 = [v8 preferredContentSizeCategory];

  LOBYTE(v8) = UIContentSizeCategory.isAccessibilityCategory.getter();
  uint64_t v55 = v5;
  uint64_t v56 = v6;
  if (v8)
  {
    uint64_t v10 = self;
    id v11 = [v10 mainBundle];
    v72._object = (void *)0xE000000000000000;
    v12._countAndFlagsBits = 0xD000000000000010;
    v12._object = (void *)0x800000010041F9B0;
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    v72._countAndFlagsBits = 0;
    Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v72);

    id v15 = [v10 mainBundle];
    v73._object = (void *)0xE000000000000000;
    v16._countAndFlagsBits = 0xD000000000000010;
    v16._object = (void *)0x800000010041F9B0;
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v73._countAndFlagsBits = 0;
    Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v73);

    sub_10014DA7C(v14._countAndFlagsBits, (uint64_t)v14._object, v18._countAndFlagsBits, v18._object, *((uint64_t *)&v61 + 1), v61, v60, v59, v58, v57, v2, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v19 = [v10 mainBundle];
    v74._object = (void *)0xE000000000000000;
    v20._countAndFlagsBits = 0x4C474E4154434552;
    v20._object = (void *)0xEF48544449575F45;
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    v74._countAndFlagsBits = 0;
    Swift::String v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v74);

    id v23 = [v10 mainBundle];
    v75._object = (void *)0xE000000000000000;
    v24._countAndFlagsBits = 0x4C474E4154434552;
    v24._object = (void *)0xEF48544449575F45;
    v25._countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    v75._countAndFlagsBits = 0;
    Swift::String v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v75);

    sub_10014DA7C(v22._countAndFlagsBits, (uint64_t)v22._object, v26._countAndFlagsBits, v26._object, v4, v62, v6, v5, v7, v54, v53, v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_31;
  }
  CGFloat v28 = (void *)Strong;
  uint64_t v29 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v29)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  long long v30 = a1[1];
  long long v66 = *a1;
  *(_OWORD *)uint64_t v67 = v30;
  *(void *)&v67[14] = *(void *)((char *)a1 + 30);
  NSString v31 = String._bridgeToObjectiveC()();
  [v29 setText:v31];

  uint64_t v32 = swift_unknownObjectWeakLoadStrong();
  if (!v32)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  CGRect v33 = (void *)v32;
  CGRect v34 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v34)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  sub_100026A8C((uint64_t)v67, (uint64_t)v68);
  sub_100026A8C((uint64_t)v68, (uint64_t)v69);
  if (v69[1]) {
    NSString v35 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v35 = 0;
  }
  [v34 setAccessibilityLabel:v35];

  uint64_t v36 = swift_unknownObjectWeakLoadStrong();
  if (!v36) {
    goto LABEL_34;
  }
  char v37 = (void *)v36;
  long long v38 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v38)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (__PAIR128__(v66, *((unint64_t *)&v66 + 1)) == v61) {
    char v39 = 1;
  }
  else {
    char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  sub_10015E448(*((uint64_t *)&v61 + 1), v61, v60, v59, v58, v57, v2, v3, v39 & 1);

  uint64_t v40 = swift_unknownObjectWeakLoadStrong();
  if (!v40) {
    goto LABEL_36;
  }
  int v41 = (void *)v40;
  int v42 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v42)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  long long v63 = *(long long *)((char *)a1 + 120);
  v64[0] = *(long long *)((char *)a1 + 136);
  *(void *)((char *)v64 + 14) = *(void *)((char *)a1 + 150);
  NSString v43 = String._bridgeToObjectiveC()();
  [v42 setText:v43];

  uint64_t v44 = swift_unknownObjectWeakLoadStrong();
  if (!v44)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v45 = (void *)v44;
  uint64_t v46 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v46)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  sub_100026A8C((uint64_t)v64, (uint64_t)v65);
  sub_100026A8C((uint64_t)v65, (uint64_t)v70);
  if (v70[1]) {
    NSString v47 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v47 = 0;
  }
  [v46 setAccessibilityLabel:v47];

  uint64_t v48 = swift_unknownObjectWeakLoadStrong();
  if (!v48) {
    goto LABEL_40;
  }
  uint64_t v49 = (void *)v48;
  uint64_t v50 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v50)
  {
LABEL_41:
    __break(1u);
    return;
  }
  if (v63 == __PAIR128__(v62, v4)) {
    char v51 = 1;
  }
  else {
    char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  sub_10015E448(v4, v62, v56, v55, v7, v54, v53, v52, v51 & 1);
}

char *sub_1000248C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  ObjectType = (objc_class *)swift_getObjectType();
  id v11 = &v5[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_numberOfRowsChangedCallback];
  *(void *)id v11 = 0;
  *((void *)v11 + 1) = 0;
  uint64_t v12 = OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_minContentViewHeight;
  *(void *)&v6[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_minContentViewHeight] = 0x407AA00000000000;
  Swift::String v13 = self;
  Swift::String v14 = v6;
  id v15 = [v13 currentTraitCollection];
  id v16 = [v15 preferredContentSizeCategory];

  LOBYTE(v15) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v15) {
    double v17 = 222.0;
  }
  else {
    double v17 = 88.0;
  }
  *(double *)&v14[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_tableRowHeight] = v17;
  *(void *)&v14[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_numberOfRows] = 2;
  uint64_t v18 = OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_sketchView;
  type metadata accessor for SketchSurface();
  *(void *)&v14[v18] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v19 = OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_labelStrip;
  type metadata accessor for SurfaceLabelStrip();
  *(void *)&v14[v19] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v20 = OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_tableView;
  type metadata accessor for IntrinsicTableView();
  *(void *)&v14[v20] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v21 = OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_accessibilityLength;
  type metadata accessor for AccessibilityTripleStack();
  ObjCClassFromMetauint64_t data = (objc_class *)swift_getObjCClassFromMetadata();
  *(void *)&v14[v21] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v23 = OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_accessibilityWidth;
  *(void *)&v14[v23] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v24 = OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_accessibilitySeparator;
  *(void *)&v14[v24] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  Swift::String v25 = &v14[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_measurementID];
  *(void *)Swift::String v25 = a1;
  *((void *)v25 + 1) = a2;
  Swift::String v26 = &v14[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_title];
  *(void *)Swift::String v26 = a4;
  *((void *)v26 + 1) = a5;
  uint64_t v27 = *(void *)&v6[v12];
  type metadata accessor for CardContainerView.Configuration();
  uint64_t v28 = swift_allocObject();
  swift_beginAccess();
  Published.init(initialValue:)();
  swift_endAccess();
  swift_beginAccess();
  *(void *)&v46[0] = v27;
  Published.init(initialValue:)();
  swift_endAccess();
  *(void *)(v28 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration_velocityThreshold) = 0x408F400000000000;
  *(void *)(v28 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration_velocityUpperThreshold) = 0x40A7700000000000;
  *(void *)&v14[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_containerConfiguration] = v28;

  v45.receiver = v14;
  v45.super_class = ObjectType;
  uint64_t v29 = (char *)[v45 initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_100024208((long long *)a3);
  sub_100024D04();
  sub_10002566C();
  long long v30 = *(_OWORD *)(a3 + 80);
  long long v55 = *(_OWORD *)(a3 + 64);
  long long v56 = v30;
  v57[0] = *(_OWORD *)(a3 + 96);
  *(void *)((char *)v57 + 14) = *(void *)(a3 + 110);
  long long v31 = *(_OWORD *)(a3 + 16);
  v52[0] = *(_OWORD *)a3;
  v52[1] = v31;
  long long v32 = *(_OWORD *)(a3 + 48);
  long long v53 = *(_OWORD *)(a3 + 32);
  long long v54 = v32;
  long long v33 = *(_OWORD *)(a3 + 120);
  long long v34 = *(_OWORD *)(a3 + 136);
  long long v35 = *(_OWORD *)(a3 + 168);
  long long v47 = *(_OWORD *)(a3 + 152);
  long long v48 = v35;
  v46[0] = v33;
  v46[1] = v34;
  long long v36 = *(_OWORD *)(a3 + 184);
  long long v37 = *(_OWORD *)(a3 + 200);
  long long v38 = *(_OWORD *)(a3 + 216);
  *(void *)&v51[14] = *(void *)(a3 + 230);
  long long v50 = v37;
  *(_OWORD *)char v51 = v38;
  long long v49 = v36;
  sub_100028448((uint64_t)v52);
  sub_100028448((uint64_t)v46);
  sub_1000284C0(a3);
  id v39 = *(id *)&v29[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_sketchView];
  sub_100028648((uint64_t)v52);
  sub_100028648((uint64_t)v46);
  double v40 = *(float *)&v53;
  double v41 = *(float *)&v47;
  if (BYTE4(v53)) {
    double v40 = 0.0;
  }
  if (BYTE4(v47)) {
    double v41 = 0.0;
  }
  sub_10005004C(v40, v41);

  return v29;
}

void sub_100024D04()
{
  uint64_t v1 = v0;
  id v2 = [self currentTraitCollection];
  id v3 = [v2 preferredContentSizeCategory];

  LOBYTE(v2) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v2)
  {
    uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_accessibilityLength];
    uint64_t v5 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel;
    uint64_t v6 = *(void **)(v4 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel);
    uint64_t v7 = self;
    id v8 = v6;
    id v9 = [v7 preferredFontForTextStyle:UIFontTextStyleBody];
    id v10 = [v9 fontDescriptor];

    id v11 = [v10 fontDescriptorWithSymbolicTraits:2];
    if (v11)
    {
      id v12 = [v7 fontWithDescriptor:v11 size:0.0];

      [v8 setFont:v12];
      uint64_t v13 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel;
      id v14 = *(id *)(v4 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel);
      id v15 = [v7 preferredFontForTextStyle:UIFontTextStyleLargeTitle];
      [v14 setFont:v15];

      uint64_t v16 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel;
      id v17 = *(id *)(v4 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel);
      id v18 = [v7 preferredFontForTextStyle:UIFontTextStyleSubheadline];
      id v19 = [v18 fontDescriptor];

      id v20 = [v19 fontDescriptorWithSymbolicTraits:2];
      if (v20)
      {
        id v21 = [v7 fontWithDescriptor:v20 size:0.0];

        [v17 setFont:v21];
        Swift::String v22 = *(void **)(v4 + v5);
        uint64_t v23 = self;
        id v24 = v22;
        id v25 = [v23 secondaryLabelColor];
        [v24 setTextColor:v25];

        id v26 = *(id *)(v4 + v13);
        id v27 = [v23 labelColor];
        [v26 setTextColor:v27];

        uint64_t v76 = v4;
        id v28 = *(id *)(v4 + v16);
        id v29 = [v23 secondaryLabelColor];
        [v28 setTextColor:v29];

        uint64_t v30 = *(void *)&v1[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_accessibilityWidth];
        uint64_t v77 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel;
        id v31 = *(id *)(v30 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel);
        id v32 = [v7 preferredFontForTextStyle:UIFontTextStyleBody];
        id v33 = [v32 fontDescriptor];

        id v34 = [v33 fontDescriptorWithSymbolicTraits:2];
        if (v34)
        {
          id v35 = [v7 fontWithDescriptor:v34 size:0.0];

          [v31 setFont:v35];
          uint64_t v36 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel;
          id v37 = *(id *)(v30 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel);
          id v38 = [v7 preferredFontForTextStyle:UIFontTextStyleLargeTitle];
          [v37 setFont:v38];

          uint64_t v39 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel;
          id v40 = *(id *)(v30 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel);
          id v41 = [v7 preferredFontForTextStyle:UIFontTextStyleSubheadline];
          id v42 = [v41 fontDescriptor];

          id v43 = [v42 fontDescriptorWithSymbolicTraits:2];
          if (v43)
          {
            id v44 = [v7 fontWithDescriptor:v43 size:0.0];

            [v40 setFont:v44];
            id v45 = *(id *)(v30 + v77);
            id v46 = [v23 secondaryLabelColor];
            [v45 setTextColor:v46];

            id v47 = *(id *)(v30 + v36);
            id v48 = [v23 labelColor];
            [v47 setTextColor:v48];

            id v49 = *(id *)(v30 + v39);
            id v50 = [v23 secondaryLabelColor];
            [v49 setTextColor:v50];

            char v51 = *(void **)&v1[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_accessibilitySeparator];
            if (qword_1004C31D0 != -1) {
              swift_once();
            }
            uint64_t v52 = (void *)qword_1004F8A68;
            id v53 = qword_1004F8A70;
            if (byte_1004F8A78)
            {
              char v54 = byte_1004F8A88;
              uint64_t v55 = qword_1004F8A80;
              char v56 = byte_1004D2600;
              id v57 = (id)qword_1004F8A68;
              id v58 = sub_100081B28(v56, v55, v54);
              sub_1000286C0(v52, v53, 1);
            }
            else
            {
              if (byte_1004D2600) {
                id v75 = qword_1004F8A70;
              }
              else {
                id v75 = (id)qword_1004F8A68;
              }
              id v58 = v75;
            }
            [v51 setBackgroundColor:v58];

            [v1 addSubview:*(void *)&v1[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_sketchView]];
            [v1 addSubview:v76];
            [v1 addSubview:v30];
            goto LABEL_20;
          }
          goto LABEL_26;
        }
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v59 = *(void *)&v1[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_labelStrip];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  long long v61 = (void *)Strong;
  uint64_t v62 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v62)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  long long v63 = self;
  id v64 = [v63 mainBundle];
  v79._object = (void *)0xE000000000000000;
  v65._object = (void *)0x800000010041F9B0;
  v65._countAndFlagsBits = 0xD000000000000010;
  v66._countAndFlagsBits = 0;
  v66._object = (void *)0xE000000000000000;
  v79._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v65, (Swift::String_optional)0, (NSBundle)v64, v66, v79);

  NSString v67 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v62 setText:v67];

  uint64_t v68 = swift_unknownObjectWeakLoadStrong();
  if (!v68)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v69 = (void *)v68;
  uint64_t v70 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v70)
  {
LABEL_30:
    __break(1u);
    return;
  }
  id v71 = [v63 mainBundle];
  v80._object = (void *)0xE000000000000000;
  v72._countAndFlagsBits = 0x4C474E4154434552;
  v72._object = (void *)0xEF48544449575F45;
  v73._countAndFlagsBits = 0;
  v73._object = (void *)0xE000000000000000;
  v80._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v72, (Swift::String_optional)0, (NSBundle)v71, v73, v80);

  NSString v74 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v70 setText:v74];

  [v1 addSubview:*(void *)&v1[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_sketchView]];
  [v1 addSubview:v59];
  char v51 = *(void **)&v1[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_tableView];
LABEL_20:

  [v1 addSubview:v51];
}

void sub_10002566C()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_sketchView];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v2 = self;
  id v3 = [v2 currentTraitCollection];
  id v4 = [v3 preferredContentSizeCategory];

  LOBYTE(v3) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v3)
  {
    uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_accessibilityLength];
    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v91 = *(id *)&v0[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_accessibilityWidth];
    [v91 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_accessibilitySeparator];
    [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
    Swift::Int v90 = self;
    sub_100012894((uint64_t *)&unk_1004CEA00);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1003F9410;
    id v8 = [v1 heightAnchor];
    if (qword_1004C28B0 != -1) {
      swift_once();
    }
    id v9 = [v8 constraintEqualToConstant:*(double *)&qword_1004F7EE0];

    *(void *)(v7 + 32) = v9;
    id v10 = [v1 leadingAnchor];
    id v11 = [v0 leadingAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];

    *(void *)(v7 + 40) = v12;
    id v13 = [v1 trailingAnchor];
    id v14 = [v0 trailingAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14];

    *(void *)(v7 + 48) = v15;
    id v16 = [v1 topAnchor];
    id v17 = [v0 topAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    *(void *)(v7 + 56) = v18;
    id v19 = [v5 leadingAnchor];
    id v20 = [v0 leadingAnchor];
    if (qword_1004C27E8 != -1) {
      swift_once();
    }
    id v21 = [v19 constraintEqualToAnchor:v20 constant:*(double *)&qword_1004F7E00];

    *(void *)(v7 + 64) = v21;
    id v22 = [v5 topAnchor];
    id v23 = [v1 bottomAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23];

    *(void *)(v7 + 72) = v24;
    id v25 = [v5 trailingAnchor];
    id v26 = [v0 trailingAnchor];
    id v27 = [v25 constraintEqualToAnchor:v26];

    *(void *)(v7 + 80) = v27;
    id v28 = [v6 leadingAnchor];
    id v29 = [v0 leadingAnchor];
    id v30 = [v28 constraintEqualToAnchor:v29 constant:*(double *)&qword_1004F7E00];

    *(void *)(v7 + 88) = v30;
    id v31 = [v6 topAnchor];
    id v32 = [v5 bottomAnchor];
    id v33 = [v31 constraintEqualToAnchor:v32 constant:*(double *)&qword_1004F7E00];

    *(void *)(v7 + 96) = v33;
    id v34 = [v6 trailingAnchor];
    id v35 = [v0 trailingAnchor];
    id v36 = [v34 constraintEqualToAnchor:v35 constant:-*(double *)&qword_1004F7E00];

    *(void *)(v7 + 104) = v36;
    id v37 = [v6 heightAnchor];
    id v38 = [v37 constraintEqualToConstant:0.5];

    *(void *)(v7 + 112) = v38;
    id v39 = [v91 leadingAnchor];
    id v40 = [v0 leadingAnchor];
    id v41 = [v39 constraintEqualToAnchor:v40 constant:*(double *)&qword_1004F7E00];

    *(void *)(v7 + 120) = v41;
    id v42 = [v91 topAnchor];
    id v43 = [v6 bottomAnchor];
    id v44 = [v42 constraintEqualToAnchor:v43 constant:*(double *)&qword_1004F7E00];

    *(void *)(v7 + 128) = v44;
    id v45 = [v91 trailingAnchor];
    id v46 = [v0 trailingAnchor];
    id v47 = [v45 constraintEqualToAnchor:v46];

    *(void *)(v7 + 136) = v47;
    id v48 = [v91 bottomAnchor];
    id v49 = [v0 bottomAnchor];
    id v50 = [v48 constraintEqualToAnchor:v49 constant:-*(double *)&qword_1004F7E00];

    *(void *)(v7 + 144) = v50;
    specialized Array._endMutation()();
    sub_10001C99C(0, (unint64_t *)&qword_1004CE690);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v90 activateConstraints:isa];
  }
  else
  {
    char v51 = *(void **)&v0[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_labelStrip];
    [v51 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v52 = *(void **)&v0[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_tableView];
    [v52 setTranslatesAutoresizingMaskIntoConstraints:0];
    sub_100012894((uint64_t *)&unk_1004CEA00);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_1003F9400;
    id v54 = [v1 heightAnchor];
    id v55 = [v2 currentTraitCollection];
    id v56 = [v55 preferredContentSizeCategory];

    LOBYTE(v55) = UIContentSizeCategory.isAccessibilityCategory.getter();
    double v57 = 176.0;
    if (v55) {
      double v57 = 444.0;
    }
    id v58 = [v54 constraintEqualToConstant:v57];

    *(void *)(v53 + 32) = v58;
    id v59 = [v1 leadingAnchor];
    id v60 = [v0 leadingAnchor];
    id v61 = [v59 constraintEqualToAnchor:v60];

    *(void *)(v53 + 40) = v61;
    id v62 = [v1 trailingAnchor];
    id v63 = [v0 trailingAnchor];
    id v64 = [v62 constraintEqualToAnchor:v63];

    *(void *)(v53 + 48) = v64;
    id v65 = [v1 topAnchor];
    id v66 = [v0 topAnchor];
    id v67 = [v65 constraintEqualToAnchor:v66];

    *(void *)(v53 + 56) = v67;
    id v68 = [v51 topAnchor];
    id v69 = [v1 bottomAnchor];
    id v70 = [v68 constraintEqualToAnchor:v69];

    *(void *)(v53 + 64) = v70;
    id v71 = [v51 leadingAnchor];
    id v72 = [v0 leadingAnchor];
    id v73 = [v71 constraintEqualToAnchor:v72];

    *(void *)(v53 + 72) = v73;
    id v74 = [v51 trailingAnchor];
    id v75 = [v0 trailingAnchor];
    id v76 = [v74 constraintEqualToAnchor:v75];

    *(void *)(v53 + 80) = v76;
    id v77 = [v52 topAnchor];
    id v78 = [v51 bottomAnchor];
    id v79 = [v77 constraintEqualToAnchor:v78];

    *(void *)(v53 + 88) = v79;
    id v80 = [v52 leadingAnchor];
    id v81 = [v0 leadingAnchor];
    id v82 = [v80 constraintEqualToAnchor:v81];

    *(void *)(v53 + 96) = v82;
    id v83 = [v52 trailingAnchor];
    id v84 = [v0 trailingAnchor];
    id v85 = [v83 constraintEqualToAnchor:v84];

    *(void *)(v53 + 104) = v85;
    id v86 = [v52 bottomAnchor];
    id v87 = [v0 bottomAnchor];
    id v88 = [v86 constraintEqualToAnchor:v87];

    *(void *)(v53 + 112) = v88;
    specialized Array._endMutation()();
    uint64_t v89 = self;
    sub_10001C99C(0, (unint64_t *)&qword_1004CE690);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v89 activateConstraints:isa];
  }
}

id sub_10002632C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  __chkstk_darwin(v2);
  id v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_tableView);
  uint64_t v7 = (uint64_t (**)(char *, uint64_t))(v6 + 8);
  IndexPath.init(row:section:)();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v9 = [v5 cellForRowAtIndexPath:isa];

  if (!v9) {
    return (id)(*v7)(v4, v2);
  }
  type metadata accessor for DetailedPlatterCellTableViewCell();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10) {
    goto LABEL_8;
  }
  uint64_t v25 = v1;
  uint64_t v11 = *(void *)(v10 + OBJC_IVAR____TtC7Measure32DetailedPlatterCellTableViewCell_measureContent);
  [*(id *)(v11 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits) setSelectedRange:0, 0];
  uint64_t v12 = *(void *)(v11 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels);
  [*(id *)(*(void *)(v12 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];
  [*(id *)(*(void *)(v12 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];

  id v13 = *v7;
  (*v7)(v4, v2);
  IndexPath.init(row:section:)();
  Class v14 = IndexPath._bridgeToObjectiveC()().super.isa;
  id v9 = [v5 cellForRowAtIndexPath:v14];

  uint64_t v15 = v25;
  if (!v9) {
    return (id)(*v7)(v4, v2);
  }
  uint64_t v16 = swift_dynamicCastClass();
  if (!v16)
  {
LABEL_8:

    return (id)(*v7)(v4, v2);
  }
  uint64_t v17 = *(void *)(v16 + OBJC_IVAR____TtC7Measure32DetailedPlatterCellTableViewCell_measureContent);
  [*(id *)(v17 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits) setSelectedRange:0, 0];
  uint64_t v18 = *(void *)(v17 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels);
  [*(id *)(*(void *)(v18 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];
  [*(id *)(*(void *)(v18 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];

  v13(v4, v2);
  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v20 = result;
    sub_1000F5388();

    id result = (id)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      id v21 = result;
      sub_1000F5388();

      uint64_t v22 = *(void *)(v15 + OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_accessibilityLength);
      [*(id *)(v22 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel) setSelectedRange:0, 0];
      [*(id *)(v22 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel) setSelectedRange:0, 0];
      [*(id *)(v22 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel) setSelectedRange:0, 0];
      uint64_t v23 = *(void *)(v15 + OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_accessibilityWidth);
      [*(id *)(v23 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel) setSelectedRange:0, 0];
      [*(id *)(v23 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel) setSelectedRange:0, 0];
      return [*(id *)(v23 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel) setSelectedRange:0, 0];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RectanglePlatterSpatial()
{
  return self;
}

__n128 sub_100026878@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_100027950(a1, (uint64_t *)v6);
  long long v3 = v6[5];
  *(_OWORD *)(a2 + 64) = v6[4];
  *(_OWORD *)(a2 + 80) = v3;
  *(_OWORD *)(a2 + 96) = v6[6];
  long long v4 = v6[1];
  *(_OWORD *)a2 = v6[0];
  *(_OWORD *)(a2 + 16) = v4;
  __n128 result = (__n128)v6[3];
  *(_OWORD *)(a2 + 32) = v6[2];
  *(__n128 *)(a2 + 48) = result;
  return result;
}

uint64_t sub_1000268C8()
{
  return 2;
}

uint64_t sub_1000268D4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_title);
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_100026910()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_tableView);
  id v2 = v1;
  return v1;
}

uint64_t sub_100026940()
{
  return swift_retain();
}

void sub_100026958(uint64_t a1)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v5 = (void *)(v1 + OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_title);
  void *v5 = v4;
  v5[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for MeasurementHistoryItem();
  sub_100026A04(a1 + *(int *)(v6 + 28), (uint64_t)v9);
  sub_100026A04((uint64_t)v9, (uint64_t)v10);
  if (sub_100026A60((uint64_t)v10) == 1)
  {
    uint64_t v7 = (const void *)sub_100026A6C((uint64_t)v10);
    memcpy(v8, v7, 0x1DEuLL);
    sub_100024208(v8);
  }
}

uint64_t sub_100026A04(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100026A60(uint64_t a1)
{
  return *(_WORD *)(a1 + 836) >> 6;
}

uint64_t sub_100026A6C(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 832);
  unint64_t v2 = (v1 | ((unint64_t)*(unsigned __int16 *)(result + 836) << 32)) & 0xFFFFFF3FFFFFFFFFLL;
  *(_DWORD *)(result + 832) = v1;
  *(_WORD *)(result + 836) = WORD2(v2);
  return result;
}

uint64_t sub_100026A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894((uint64_t *)&unk_1004D2450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100026AF4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100012894(&qword_1004C4558);
    unint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    unint64_t v2 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 8;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v28 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v28 << 6);
      goto LABEL_28;
    }
    int64_t v11 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v26) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v11);
    int64_t v13 = v28 + 1;
    if (!v12)
    {
      int64_t v13 = v28 + 2;
      if (v28 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v27 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v28 + 3;
        if (v28 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v27 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v28 + 4;
          if (v28 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v27 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v28 = v13;
LABEL_28:
    uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8 * v10);
    *(void *)&v31[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    *(void *)&v30[0] = v15;
    id v16 = *(id *)&v31[0];
    swift_bridgeObjectRetain();
    sub_100012894(&qword_1004C4560);
    swift_dynamicCast();
    uint64_t v17 = *(void *)&v31[0];
    sub_100027938((_OWORD *)((char *)v31 + 8), v29);
    sub_100027938(v29, v31);
    sub_100027938(v31, v30);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v18 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~v6[v20 >> 6]) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v20) & ~v6[v20 >> 6])) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = v6[v21];
      }
      while (v25 == -1);
      unint64_t v8 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)((char *)v6 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(void *)(v2[6] + 8 * v8) = v17;
    uint64_t result = (uint64_t)sub_100027938(v30, (_OWORD *)(v2[7] + 32 * v8));
    ++v2[2];
  }
  int64_t v14 = v28 + 5;
  if (v28 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_100027948();
    return (uint64_t)v2;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v28 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_100026E9C(uint64_t a1)
{
  return sub_100026EC4(a1, &qword_1004C4550);
}

uint64_t sub_100026EB0(uint64_t a1)
{
  return sub_100026EC4(a1, (unint64_t *)&qword_1004C4568);
}

uint64_t sub_100026EC4(uint64_t a1, unint64_t *a2)
{
  if (*(void *)(a1 + 16))
  {
    sub_100012894(&qword_1004C4548);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v30 = a1 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v29 = (unint64_t)(63 - v4) >> 6;
  uint64_t v7 = v3 + 8;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v32 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v32 << 6);
      goto LABEL_28;
    }
    int64_t v12 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v12 >= v29) {
      goto LABEL_37;
    }
    unint64_t v13 = *(void *)(v30 + 8 * v12);
    int64_t v14 = v32 + 1;
    if (!v13)
    {
      int64_t v14 = v32 + 2;
      if (v32 + 2 >= v29) {
        goto LABEL_37;
      }
      unint64_t v13 = *(void *)(v30 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v32 + 3;
        if (v32 + 3 >= v29) {
          goto LABEL_37;
        }
        unint64_t v13 = *(void *)(v30 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v32 + 4;
          if (v32 + 4 >= v29) {
            goto LABEL_37;
          }
          unint64_t v13 = *(void *)(v30 + 8 * v14);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
    int64_t v32 = v14;
LABEL_28:
    uint64_t v17 = *(void **)(*(void *)(a1 + 56) + 8 * v11);
    *(void *)&v35[0] = *(void *)(*(void *)(a1 + 48) + 8 * v11);
    id v16 = *(void **)&v35[0];
    *(void *)&v34[0] = v17;
    sub_10001C99C(0, a2);
    id v18 = v16;
    id v19 = v17;
    swift_dynamicCast();
    uint64_t v20 = *(void *)&v35[0];
    sub_100027938((_OWORD *)((char *)v35 + 8), v33);
    sub_100027938(v33, v35);
    sub_100027938(v35, v34);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v21 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v22 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~v7[v23 >> 6]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v23) & ~v7[v23 >> 6])) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = v7[v24];
      }
      while (v28 == -1);
      unint64_t v9 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)((char *)v7 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    *(void *)(v3[6] + 8 * v9) = v20;
    uint64_t result = (uint64_t)sub_100027938(v34, (_OWORD *)(v3[7] + 32 * v9));
    ++v3[2];
  }
  int64_t v15 = v32 + 5;
  if (v32 + 5 >= v29)
  {
LABEL_37:
    swift_release();
    sub_100027948();
    return (uint64_t)v3;
  }
  unint64_t v13 = *(void *)(v30 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v32 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= v29) {
      goto LABEL_37;
    }
    unint64_t v13 = *(void *)(v30 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

id sub_100027270(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MeasurementHistoryItem();
  sub_100026A04(a1 + *(int *)(v2 + 28), (uint64_t)v137);
  sub_100026A04((uint64_t)v137, (uint64_t)v138);
  id v3 = 0;
  if (sub_100026A60((uint64_t)v138) == 1)
  {
    uint64_t v4 = sub_100026A6C((uint64_t)v138);
    sub_100012894(&qword_1004CE700);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1003F87F0;
    *(void *)(v5 + 32) = NSFontAttributeName;
    unint64_t v6 = self;
    uint64_t v7 = NSFontAttributeName;
    [v6 systemFontSize];
    *(void *)(v5 + 40) = [v6 systemFontOfSize:];
    unint64_t v8 = sub_1000E1418(v5);
    swift_bridgeObjectRetain();
    sub_100026EC4(v8, &qword_1004C4550);
    swift_bridgeObjectRelease();
    id v9 = objc_allocWithZone((Class)NSAttributedString);
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1000278E0();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v12 = [v9 initWithString:v10 attributes:isa];

    id v3 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v12];
    sub_100012894((uint64_t *)&unk_1004D2460);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1003F92E0;
    int64_t v14 = self;
    id v15 = [v14 mainBundle];
    v139._object = (void *)0xE000000000000000;
    v16._object = (void *)0x800000010041F9B0;
    v16._countAndFlagsBits = 0xD000000000000010;
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v139._countAndFlagsBits = 0;
    Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v139);

    *(void *)(v13 + 56) = &type metadata for String;
    unint64_t v19 = sub_10001D424();
    *(void *)(v13 + 64) = v19;
    *(Swift::String *)(v13 + 32) = v18;
    uint64_t v20 = *(void *)(v4 + 8);
    int v21 = *(_DWORD *)(v4 + 32);
    char v22 = *(unsigned char *)(v4 + 36);
    char v23 = *(unsigned char *)(v4 + 37);
    uint64_t v24 = *(void *)(v4 + 40);
    uint64_t v25 = *(void *)(v4 + 48);
    int v26 = *(_DWORD *)(v4 + 72);
    char v27 = *(unsigned char *)(v4 + 76);
    char v28 = *(unsigned char *)(v4 + 77);
    uint64_t v29 = *(void *)(v4 + 80);
    uint64_t v30 = *(void *)(v4 + 88);
    int v31 = *(_DWORD *)(v4 + 112);
    char v32 = *(unsigned char *)(v4 + 116);
    char v33 = *(unsigned char *)(v4 + 117);
    *(void *)&v121[0] = *(void *)v4;
    *((void *)&v121[0] + 1) = v20;
    v121[1] = *(_OWORD *)(v4 + 16);
    int v122 = v21;
    char v123 = v22;
    char v124 = v23;
    uint64_t v125 = v24;
    uint64_t v126 = v25;
    long long v127 = *(_OWORD *)(v4 + 56);
    int v128 = v26;
    char v129 = v27;
    char v130 = v28;
    uint64_t v131 = v29;
    uint64_t v132 = v30;
    long long v133 = *(_OWORD *)(v4 + 96);
    int v134 = v31;
    char v135 = v32;
    char v136 = v33;
    uint64_t v34 = sub_10001D29C(v121);
    *(void *)(v13 + 96) = &type metadata for String;
    *(void *)(v13 + 104) = v19;
    *(void *)(v13 + 72) = v34;
    *(void *)(v13 + 80) = v35;
    id v36 = [v14 mainBundle];
    v140._object = (void *)0xE000000000000000;
    v37._countAndFlagsBits = 0x4C474E4154434552;
    v37._object = (void *)0xEF48544449575F45;
    v38._countAndFlagsBits = 0;
    v38._object = (void *)0xE000000000000000;
    v140._countAndFlagsBits = 0;
    Swift::String v39 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, (Swift::String_optional)0, (NSBundle)v36, v38, v140);

    *(void *)(v13 + 136) = &type metadata for String;
    *(void *)(v13 + 144) = v19;
    *(Swift::String *)(v13 + 112) = v39;
    uint64_t v40 = *(void *)(v4 + 128);
    int v41 = *(_DWORD *)(v4 + 152);
    char v42 = *(unsigned char *)(v4 + 156);
    char v43 = *(unsigned char *)(v4 + 157);
    uint64_t v44 = *(void *)(v4 + 160);
    uint64_t v45 = *(void *)(v4 + 168);
    int v46 = *(_DWORD *)(v4 + 192);
    char v47 = *(unsigned char *)(v4 + 196);
    char v48 = *(unsigned char *)(v4 + 197);
    uint64_t v49 = *(void *)(v4 + 200);
    uint64_t v50 = *(void *)(v4 + 208);
    int v51 = *(_DWORD *)(v4 + 232);
    char v52 = *(unsigned char *)(v4 + 236);
    char v53 = *(unsigned char *)(v4 + 237);
    *(void *)&v105[0] = *(void *)(v4 + 120);
    *((void *)&v105[0] + 1) = v40;
    v105[1] = *(_OWORD *)(v4 + 136);
    int v106 = v41;
    char v107 = v42;
    char v108 = v43;
    uint64_t v109 = v44;
    uint64_t v110 = v45;
    long long v111 = *(_OWORD *)(v4 + 176);
    int v112 = v46;
    char v113 = v47;
    char v114 = v48;
    uint64_t v115 = v49;
    uint64_t v116 = v50;
    long long v117 = *(_OWORD *)(v4 + 216);
    int v118 = v51;
    char v119 = v52;
    char v120 = v53;
    uint64_t v54 = sub_10001D29C(v105);
    *(void *)(v13 + 176) = &type metadata for String;
    *(void *)(v13 + 184) = v19;
    *(void *)(v13 + 152) = v54;
    *(void *)(v13 + 160) = v55;
    id v56 = [v14 mainBundle];
    v141._object = (void *)0xE000000000000000;
    v57._countAndFlagsBits = 0x4C414E4F47414944;
    v57._object = (void *)0xE800000000000000;
    v58._countAndFlagsBits = 0;
    v58._object = (void *)0xE000000000000000;
    v141._countAndFlagsBits = 0;
    Swift::String v59 = NSLocalizedString(_:tableName:bundle:value:comment:)(v57, (Swift::String_optional)0, (NSBundle)v56, v58, v141);

    *(void *)(v13 + 216) = &type metadata for String;
    *(void *)(v13 + 224) = v19;
    *(Swift::String *)(v13 + 192) = v59;
    uint64_t v60 = *(void *)(v4 + 248);
    int v61 = *(_DWORD *)(v4 + 272);
    char v62 = *(unsigned char *)(v4 + 276);
    char v63 = *(unsigned char *)(v4 + 277);
    uint64_t v64 = *(void *)(v4 + 280);
    uint64_t v65 = *(void *)(v4 + 288);
    int v66 = *(_DWORD *)(v4 + 312);
    char v67 = *(unsigned char *)(v4 + 316);
    char v68 = *(unsigned char *)(v4 + 317);
    uint64_t v69 = *(void *)(v4 + 320);
    uint64_t v70 = *(void *)(v4 + 328);
    int v71 = *(_DWORD *)(v4 + 352);
    char v72 = *(unsigned char *)(v4 + 356);
    char v73 = *(unsigned char *)(v4 + 357);
    *(void *)&v89[0] = *(void *)(v4 + 240);
    *((void *)&v89[0] + 1) = v60;
    v89[1] = *(_OWORD *)(v4 + 256);
    int v90 = v61;
    char v91 = v62;
    char v92 = v63;
    uint64_t v93 = v64;
    uint64_t v94 = v65;
    long long v95 = *(_OWORD *)(v4 + 296);
    int v96 = v66;
    char v97 = v67;
    char v98 = v68;
    uint64_t v99 = v69;
    uint64_t v100 = v70;
    long long v101 = *(_OWORD *)(v4 + 336);
    int v102 = v71;
    char v103 = v72;
    char v104 = v73;
    uint64_t v74 = sub_10001D29C(v89);
    *(void *)(v13 + 256) = &type metadata for String;
    *(void *)(v13 + 264) = v19;
    *(void *)(v13 + 232) = v74;
    *(void *)(v13 + 240) = v75;
    id v76 = [v14 mainBundle];
    v142._object = (void *)0xE000000000000000;
    v77._countAndFlagsBits = 0x5F45434146525553;
    v77._object = (void *)0xEC00000041455241;
    v78._countAndFlagsBits = 0;
    v78._object = (void *)0xE000000000000000;
    v142._countAndFlagsBits = 0;
    Swift::String v79 = NSLocalizedString(_:tableName:bundle:value:comment:)(v77, (Swift::String_optional)0, (NSBundle)v76, v78, v142);

    *(void *)(v13 + 296) = &type metadata for String;
    *(void *)(v13 + 304) = v19;
    *(Swift::String *)(v13 + 272) = v79;
    uint64_t v81 = *(void *)(v4 + 360);
    uint64_t v80 = *(void *)(v4 + 368);
    uint64_t v82 = *(void *)(v4 + 440);
    uint64_t v83 = *(void *)(v4 + 448);
    *(void *)(v13 + 336) = &type metadata for String;
    *(void *)(v13 + 344) = v19;
    *(void *)(v13 + 312) = v81;
    *(void *)(v13 + 320) = v80;
    *(void *)(v13 + 376) = &type metadata for String;
    *(void *)(v13 + 384) = v19;
    *(void *)(v13 + 352) = v82;
    *(void *)(v13 + 360) = v83;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v84._countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v84);
    swift_bridgeObjectRelease();
    id v85 = objc_allocWithZone((Class)NSAttributedString);
    NSString v86 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v87 = [v85 initWithString:v86];

    [v3 appendAttributedString:v87];
  }
  return v3;
}

unint64_t sub_1000278E0()
{
  unint64_t result = qword_1004C39E0;
  if (!qword_1004C39E0)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C39E0);
  }
  return result;
}

_OWORD *sub_100027938(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_100027948()
{
  return swift_release();
}

uint64_t sub_100027950@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MeasurementHistoryItem();
  sub_100026A04(a1 + *(int *)(v4 + 28), (uint64_t)v37);
  sub_100026A04((uint64_t)v37, (uint64_t)v38);
  uint64_t result = sub_100026A60((uint64_t)v38);
  if (result != 1) {
    goto LABEL_8;
  }
  unint64_t v6 = (void *)sub_100026A6C((uint64_t)v38);
  sub_100026A04((uint64_t)v37, (uint64_t)v36);
  uint64_t v7 = sub_100026A6C((uint64_t)v36);
  sub_100027BC0(v7);
  uint64_t v8 = IndexPath.item.getter();
  if (v8 == 1)
  {
    id v22 = [self mainBundle];
    v40._object = (void *)0xE000000000000000;
    v23._uint64_t countAndFlagsBits = 0x4C414E4F47414944;
    v23._object = (void *)0xE800000000000000;
    v24._uint64_t countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    v40._uint64_t countAndFlagsBits = 0;
    Swift::String v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v40);
    object = v25._object;
    uint64_t countAndFlagsBits = v25._countAndFlagsBits;

    unint64_t v13 = v6[31];
    uint64_t v14 = v6[33];
    uint64_t v32 = v6[32];
    uint64_t v33 = v6[30];
    unint64_t v15 = v6[36];
    uint64_t v31 = v6[35];
    uint64_t v17 = v6[37];
    uint64_t v16 = v6[38];
    uint64_t v18 = v6[40];
    unint64_t v19 = v6[41];
    uint64_t v20 = v6[42];
    uint64_t v21 = v6[43];
    goto LABEL_6;
  }
  if (v8)
  {
    uint64_t result = (uint64_t)sub_100027D48(v37);
LABEL_8:
    uint64_t v30 = 0;
    uint64_t v29 = 0;
    uint64_t v26 = 0;
    uint64_t v14 = 0;
    uint64_t v27 = 0;
    uint64_t v17 = 0;
    uint64_t v16 = 0;
    uint64_t v18 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    unint64_t v28 = 0xE000000000000000;
    unint64_t v13 = 0xE000000000000000;
    unint64_t v15 = 0xE000000000000000;
    unint64_t v19 = 0xE000000000000000;
    goto LABEL_9;
  }
  id v9 = [self mainBundle];
  v39._object = (void *)0xE000000000000000;
  v10._uint64_t countAndFlagsBits = 0x5F45434146525553;
  v10._object = (void *)0xEC00000041455241;
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v39._uint64_t countAndFlagsBits = 0;
  Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v39);
  object = v12._object;
  uint64_t countAndFlagsBits = v12._countAndFlagsBits;

  unint64_t v13 = v6[46];
  uint64_t v14 = v6[48];
  uint64_t v32 = v6[47];
  uint64_t v33 = v6[45];
  unint64_t v15 = v6[51];
  uint64_t v31 = v6[50];
  uint64_t v17 = v6[52];
  uint64_t v16 = v6[53];
  uint64_t v18 = v6[55];
  unint64_t v19 = v6[56];
  uint64_t v20 = v6[57];
  uint64_t v21 = v6[58];
LABEL_6:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = (uint64_t)sub_100027D48(v37);
  uint64_t v27 = v31;
  uint64_t v26 = v32;
  uint64_t v29 = v33;
  unint64_t v28 = (unint64_t)object;
  uint64_t v30 = countAndFlagsBits;
LABEL_9:
  *a2 = v30;
  a2[1] = v28;
  a2[2] = v29;
  a2[3] = v13;
  a2[4] = v26;
  a2[5] = v14;
  a2[6] = v27;
  a2[7] = v15;
  a2[8] = v17;
  a2[9] = v16;
  a2[10] = v18;
  a2[11] = v19;
  a2[12] = v20;
  a2[13] = v21;
  return result;
}

uint64_t sub_100027BC0(uint64_t a1)
{
  return a1;
}

uint64_t *sub_100027D48(uint64_t *a1)
{
  sub_100027F20(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19]);
  return a1;
}

uint64_t sub_100027F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t result = a14;
  unint64_t v21 = (STACK[0x460] >> 38) & 3;
  switch(v21)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_1000283C4(a19, a20);
    default:
      return result;
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000283C4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100028448(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000284C0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100028648(uint64_t a1)
{
  return a1;
}

void sub_1000286C0(void *a1, void *a2, char a3)
{
  if ((a3 & 1) == 0)
  {
  }
}

void sub_100028718()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_numberOfRowsChangedCallback];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_minContentViewHeight] = 0x407AA00000000000;
  id v2 = [self currentTraitCollection];
  id v3 = [v2 preferredContentSizeCategory];

  LOBYTE(v2) = UIContentSizeCategory.isAccessibilityCategory.getter();
  double v4 = 88.0;
  if (v2) {
    double v4 = 222.0;
  }
  *(double *)&v0[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_tableRowHeight] = v4;
  *(void *)&v0[OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_numberOfRows] = 2;
  uint64_t v5 = OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_sketchView;
  type metadata accessor for SketchSurface();
  *(void *)&v0[v5] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v6 = OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_labelStrip;
  type metadata accessor for SurfaceLabelStrip();
  *(void *)&v0[v6] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v7 = OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_tableView;
  type metadata accessor for IntrinsicTableView();
  *(void *)&v0[v7] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v8 = OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_accessibilityLength;
  type metadata accessor for AccessibilityTripleStack();
  ObjCClassFromMetauint64_t data = (objc_class *)swift_getObjCClassFromMetadata();
  *(void *)&v0[v8] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v10 = OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_accessibilityWidth;
  *(void *)&v0[v10] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v11 = OBJC_IVAR____TtC7Measure23RectanglePlatterSpatial_accessibilitySeparator;
  *(void *)&v0[v11] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100028914(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_100028924()
{
  qword_1004C4570 = 0x4024000000000000;
}

void sub_100028934()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure29LineHistoryCellWithScreenshot_screenshot;
  [*(id *)&v0[OBJC_IVAR____TtC7Measure29LineHistoryCellWithScreenshot_screenshot] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v0[v1] setClipsToBounds:1];
  uint64_t v2 = qword_1004C28E0;
  id v3 = *(id *)&v0[v1];
  if (v2 != -1) {
    swift_once();
  }
  [v3 _setContinuousCornerRadius:*(double *)&qword_1004C4570];

  id v4 = *(id *)&v0[v1];
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 setAccessibilityIdentifier:v5];

  id v6 = [v0 contentView];
  [v6 addSubview:*(void *)&v0[v1]];
}

void sub_100028A70()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Measure29LineHistoryCellWithScreenshot_screenshot;
  [*(id *)&v0[OBJC_IVAR____TtC7Measure29LineHistoryCellWithScreenshot_screenshot] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v3 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_bottomContentAnchor;
  id v4 = *(void **)&v0[OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_bottomContentAnchor];
  if (!v4)
  {
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  [v4 setActive:0];
  id v5 = [*(id *)&v0[v2] bottomAnchor];
  id v6 = [v1 contentView];
  id v7 = [v6 bottomAnchor];

  if (qword_1004C27E8 != -1) {
    swift_once();
  }
  id v8 = [v5 constraintEqualToAnchor:v7 constant:-*(double *)&qword_1004F7E00];

  id v9 = *(void **)&v1[v3];
  *(void *)&v1[v3] = v8;

  uint64_t v11 = *(void **)&v1[v3];
  if (!v11) {
    goto LABEL_23;
  }
  LODWORD(v10) = 1148813312;
  [v11 setPriority:v10];
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1003F9450;
  id v13 = [*(id *)&v1[v2] leadingAnchor];
  id v14 = [v1 contentView];
  id v15 = [v14 leadingAnchor];

  if (qword_1004C2830 != -1) {
    swift_once();
  }
  id v16 = [v13 constraintEqualToAnchor:v15 constant:*(double *)&qword_1004F7E60];

  *(void *)(v12 + 32) = v16;
  id v17 = [*(id *)&v1[v2] trailingAnchor];
  id v18 = [v1 contentView];
  id v19 = [v18 trailingAnchor];

  id v20 = [v17 constraintEqualToAnchor:v19 constant:-*(double *)&qword_1004F7E60];
  *(void *)(v12 + 40) = v20;
  id v21 = [*(id *)&v1[v2] heightAnchor];
  id v22 = [*(id *)&v1[v2] widthAnchor];
  id v23 = [v21 constraintLessThanOrEqualToAnchor:v22 multiplier:0.75];

  *(void *)(v12 + 48) = v23;
  Swift::String v24 = *(void **)&v1[v3];
  if (!v24) {
    goto LABEL_24;
  }
  *(void *)(v12 + 56) = v24;
  uint64_t v47 = v12;
  specialized Array._endMutation()();
  Swift::String v25 = self;
  id v26 = v24;
  id v27 = [v25 currentTraitCollection];
  id v28 = [v27 preferredContentSizeCategory];

  LOBYTE(v27) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if ((v27 & 1) == 0)
  {
    uint64_t v32 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_sketchBottomAnchor;
    uint64_t v33 = *(void **)&v1[OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_sketchBottomAnchor];
    if (v33)
    {
      [v33 setActive:0];
      id v34 = [*(id *)&v1[v2] topAnchor];
      id v35 = [*(id *)&v1[OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_sketchView] bottomAnchor];
      id v36 = [v34 constraintGreaterThanOrEqualToAnchor:v35 constant:*(double *)&qword_1004F7E00];

      Swift::String v37 = *(void **)&v1[v32];
      *(void *)&v1[v32] = v36;

      id v38 = [*(id *)&v1[v2] topAnchor];
      id v39 = [*(id *)&v1[OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_measureContent] bottomAnchor];
      id v40 = [v38 constraintEqualToAnchor:v39];

      LODWORD(v41) = 1148813312;
      [v40 setPriority:v41];
      id v42 = v40;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      char v43 = *(void **)&v1[v32];
      if (v43)
      {
        id v44 = v43;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        goto LABEL_19;
      }
LABEL_26:
      __break(1u);
      return;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v29 = [*(id *)&v1[v2] topAnchor];
  id v30 = [*(id *)&v1[OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_accessibleMeasureContent] bottomAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30 constant:*(double *)&qword_1004F7E00];

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
LABEL_19:
  uint64_t v45 = self;
  sub_100029878();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v45 activateConstraints:isa];
}

id sub_100029124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = OBJC_IVAR____TtC7Measure29LineHistoryCellWithScreenshot_screenshot;
  id v9 = objc_allocWithZone((Class)UIImageView);
  double v10 = v4;
  *(void *)&v4[v8] = [v9 init];

  if (a3)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  v15.receiver = v10;
  v15.super_class = ObjectType;
  id v12 = [super initWithStyle:a1 reuseIdentifier:v11];

  id v13 = v12;
  sub_100028934();
  sub_100028A70();

  return v13;
}

id sub_100029260(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = OBJC_IVAR____TtC7Measure29LineHistoryCellWithScreenshot_screenshot;
  id v5 = objc_allocWithZone((Class)UIImageView);
  id v6 = v1;
  *(void *)&v1[v4] = [v5 init];

  v11.receiver = v6;
  v11.super_class = ObjectType;
  [super initWithCoder:a1];
  id v8 = v7;
  if (v7)
  {
    id v9 = v7;
    sub_100028934();
    sub_100028A70();
  }
  return v8;
}

uint64_t sub_1000293E8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MeasurementHistoryItem();
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  id v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000297B8(a1, (uint64_t)v6);
  sub_100026A04((uint64_t)&v6[*(int *)(v4 + 36)], (uint64_t)v48);
  sub_100026A04((uint64_t)v48, (uint64_t)v49);
  if (sub_100026A60((uint64_t)v49))
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v47 = a1;
    uint64_t v7 = sub_100026A6C((uint64_t)v49);
    id v8 = [self currentTraitCollection];
    id v9 = [v8 preferredContentSizeCategory];

    LOBYTE(v8) = UIContentSizeCategory.isAccessibilityCategory.getter();
    if (v8)
    {
      double v10 = *(void **)(v1 + OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_accessibleMeasureContent);
      uint64_t v11 = *((void *)v6 + 2);
      id v12 = (void *)*((void *)v6 + 3);
      uint64_t v13 = *(void *)(v7 + 40);
      uint64_t v14 = *(void *)(v7 + 48);
      uint64_t v15 = *(void *)(v7 + 56);
      NSString v45 = *(NSString *)(v7 + 64);
      uint64_t v46 = v1;
      long long v44 = *(_OWORD *)(v7 + 80);
      uint64_t v17 = *(void *)(v7 + 96);
      uint64_t v16 = *(void *)(v7 + 104);
      id v18 = v10;
      uint64_t v19 = v14;
      uint64_t v20 = v46;
      sub_10014DA7C(v11, (uint64_t)v12, v11, v12, v13, v19, v15, (uint64_t)v45, v44, *((uint64_t *)&v44 + 1), v17, v16);
      uint64_t v21 = v47;
    }
    else
    {
      uint64_t v22 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_measureContent;
      id v23 = objc_retain(*(id *)(*(void *)(v1 + OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_measureContent)
                              + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_title));
      NSString v24 = String._bridgeToObjectiveC()();
      [v23 setText:v24];

      Swift::String v25 = *(void **)(*(void *)(v1 + v22) + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits);
      uint64_t v26 = *(void *)v7;
      uint64_t v27 = *(void *)(v7 + 8);
      uint64_t v28 = *(void *)(v7 + 40);
      uint64_t v29 = *(void *)(v7 + 48);
      uint64_t v30 = *(void *)(v7 + 56);
      NSString v45 = *(NSString *)(v7 + 64);
      uint64_t v46 = v30;
      uint64_t v31 = *(void *)(v7 + 80);
      uint64_t v43 = *(void *)(v7 + 88);
      *(void *)&long long v44 = v31;
      uint64_t v42 = *(void *)(v7 + 96);
      uint64_t v32 = *(void *)(v7 + 104);
      uint64_t v40 = v28;
      uint64_t v41 = v32;
      id v33 = v25;
      NSString v34 = String._bridgeToObjectiveC()();
      [v33 setText:v34];

      uint64_t v20 = v1;
      uint64_t v35 = v29;
      uint64_t v36 = v40;

      Swift::String v37 = *(void **)(*(void *)(v20 + v22)
                     + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels);
      if (v26 == v36 && v27 == v35) {
        char v38 = 1;
      }
      else {
        char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      uint64_t v21 = v47;
      id v18 = v37;
      sub_10015E68C(v36, v35, v46, v45, v44, v43, v42, v41, v38 & 1);
    }

    [*(id *)(v20 + OBJC_IVAR____TtC7Measure29LineHistoryCellWithScreenshot_screenshot) setImage:*(void *)(v21 + *(int *)(type metadata accessor for SpatialPlattersHistoryItem() + 20))];
    return sub_10002981C((uint64_t)v6);
  }
  return result;
}

void sub_100029770()
{
}

uint64_t type metadata accessor for LineHistoryCellWithScreenshot()
{
  return self;
}

uint64_t sub_1000297B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MeasurementHistoryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002981C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MeasurementHistoryItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100029878()
{
  unint64_t result = qword_1004CE690;
  if (!qword_1004CE690)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1004CE690);
  }
  return result;
}

uint64_t sub_100029910()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure11AppDelegate____lazy_storage___perfTestRunner;
  uint64_t result = *(void *)(v0 + OBJC_IVAR____TtC7Measure11AppDelegate____lazy_storage___perfTestRunner);
  if (result)
  {
    uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC7Measure11AppDelegate____lazy_storage___perfTestRunner);
LABEL_5:
    swift_retain();
    return v3;
  }
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC7Measure11AppDelegate_coordinator);
  if (v4)
  {
    type metadata accessor for PerformanceTestRunner();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v4;
    *(void *)(v0 + v1) = v3;
    swift_retain();
    swift_retain();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id sub_10002999C()
{
  *(void *)&v0[OBJC_IVAR____TtC7Measure11AppDelegate_window] = 0;
  uint64_t v1 = OBJC_IVAR____TtC7Measure11AppDelegate__appState;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_100012894((uint64_t *)&unk_1004C4710);
  uint64_t v4 = qword_1004C2E30;
  uint64_t v5 = v0;
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1004F8630;
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 272);
  swift_retain();
  *(void *)&v5[v1] = v7(KeyPath, v6);
  uint64_t v8 = OBJC_IVAR____TtC7Measure11AppDelegate_accessibilityListener;
  *(void *)&v5[v8] = [objc_allocWithZone((Class)type metadata accessor for AccessiblityUISettingsObserver()) init];
  *(void *)&v5[OBJC_IVAR____TtC7Measure11AppDelegate_coordinator] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Measure11AppDelegate____lazy_storage___perfTestRunner] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Measure11AppDelegate_randomSeed] = 1234567890;
  uint64_t v9 = OBJC_IVAR____TtC7Measure11AppDelegate_measureShortcut;
  double v10 = self;
  id v11 = [v10 mainBundle];
  v33._object = (void *)0xE000000000000000;
  v12._uint64_t countAndFlagsBits = 0x4552555341454DLL;
  v12._object = (void *)0xE700000000000000;
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v33._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v33);

  NSString v14 = String._bridgeToObjectiveC()();
  uint64_t v15 = self;
  id v16 = [v15 iconWithSystemImageName:v14];

  id v17 = objc_allocWithZone((Class)UIApplicationShortcutItem);
  NSString v18 = String._bridgeToObjectiveC()();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v20 = [v17 initWithType:v18 localizedTitle:v19 localizedSubtitle:0 icon:v16 userInfo:0];

  *(void *)&v5[v9] = v20;
  uint64_t v21 = OBJC_IVAR____TtC7Measure11AppDelegate_levelShortcut;
  id v22 = [v10 mainBundle];
  v34._object = (void *)0xE000000000000000;
  v23._uint64_t countAndFlagsBits = 0x4C4556454CLL;
  v23._object = (void *)0xE500000000000000;
  v24._uint64_t countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v34._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v34);

  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [v15 iconWithSystemImageName:v25];

  id v27 = objc_allocWithZone((Class)UIApplicationShortcutItem);
  NSString v28 = String._bridgeToObjectiveC()();
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v30 = [v27 initWithType:v28 localizedTitle:v29 localizedSubtitle:0 icon:v26 userInfo:0];

  *(void *)&v5[v21] = v30;
  v32.receiver = v5;
  v32.super_class = (Class)type metadata accessor for AppDelegate();
  return [super init];
}

id sub_100029D6C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppDelegate();
  [super dealloc];
}

uint64_t type metadata accessor for AppDelegate()
{
  return self;
}

uint64_t sub_100029E60(uint64_t result)
{
  if (*(void *)(result + OBJC_IVAR____TtC7Measure11AppDelegate_coordinator))
  {
    swift_retain();
    sub_10010BAF0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

unsigned char *sub_100029EB0(unsigned char *result)
{
  char *result = 0;
  return result;
}

unsigned char *sub_100029FAC(unsigned char *result)
{
  char *result = 1;
  return result;
}

unsigned char *sub_10002A018(unsigned char *result)
{
  char *result = 2;
  return result;
}

unsigned char *sub_10002A13C(unsigned char *result)
{
  char *result = 3;
  return result;
}

uint64_t sub_10002A29C(void *a1)
{
  id v2 = a1;
  char v3 = sub_1001CECBC(v2);

  if (v3 == 2)
  {
    if (qword_1004C2B18 != -1) {
      swift_once();
    }
    _StringGuts.grow(_:)(46);
    swift_bridgeObjectRelease();
    id v15 = [v2 description];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v18 = v17;

    v19._uint64_t countAndFlagsBits = v16;
    v19._object = v18;
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    v20._uint64_t countAndFlagsBits = 0x6C7561666544202ELL;
    v20._object = (void *)0xED00002E676E6974;
    String.append(_:)(v20);
    v21._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
    v21._object = (void *)0x800000010041FBF0;
    Log.error(_:isPrivate:)(v21, 0);
    swift_bridgeObjectRelease();
    return v3 != 2;
  }
  if (qword_1004C2B18 != -1) {
    swift_once();
  }
  _StringGuts.grow(_:)(21);
  v4._object = (void *)0x800000010041FC10;
  v4._uint64_t countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v4);
  _print_unlocked<A, B>(_:_:)();
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  Log.default(_:isPrivate:)(v5, 0);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(uint64_t (**)(uint64_t))(**(void **)(v1 + OBJC_IVAR____TtC7Measure11AppDelegate__appState) + 200);
  uint64_t v7 = swift_retain();
  uint64_t v8 = v6(v7);
  swift_release();
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = v3 & 1;
  (*(void (**)(uint64_t (*)(uint64_t), uint64_t))(*(void *)v8 + 280))(sub_10002B4F0, v9);
  swift_release();
  uint64_t result = swift_release();
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC7Measure11AppDelegate_coordinator);
  if (!v11)
  {
    __break(1u);
    goto LABEL_13;
  }
  Swift::String v12 = *(void **)(v11 + 104);
  if (!v12)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  swift_retain();
  id v13 = v12;
  uint64_t result = sub_100204FEC(v3 & 1, (uint64_t)&off_100485550);
  if ((v14 & 1) == 0)
  {
    [v13 setSelectedIndex:result];
    swift_release();

    return v3 != 2;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_10002A8AC(void *a1)
{
  v10[3] = type metadata accessor for AppDelegate();
  v10[4] = &off_100488718;
  v10[0] = a1;
  sub_10002B8B4((uint64_t)v10, (uint64_t)v9);
  type metadata accessor for AppDependencyManager();
  id v2 = a1;
  static AppDependencyManager.shared.getter();
  sub_100021BB4();
  AnyHashable.init<A>(_:)();
  sub_10002B918((uint64_t)v9, (uint64_t)v6);
  uint64_t v3 = swift_allocObject();
  long long v4 = v6[1];
  *(_OWORD *)(v3 + 16) = v6[0];
  *(_OWORD *)(v3 + 32) = v4;
  *(void *)(v3 + 48) = v7;
  sub_100012894(&qword_1004C4700);
  AppDependencyManager.add<A>(key:dependency:)();
  swift_release();
  swift_release();
  sub_10002B9C0((uint64_t)v8, &qword_1004C4708);
  sub_10002B9C0((uint64_t)v9, &qword_1004C4700);
  return sub_100013218((uint64_t)v10);
}

uint64_t sub_10002A9C8()
{
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003F9490;
  *(void *)(inited + 32) = swift_getKeyPath();
  *(void *)(inited + 40) = swift_getKeyPath();
  *(void *)(inited + 48) = swift_getKeyPath();
  *(void *)(inited + 56) = swift_getKeyPath();
  *(void *)(inited + 64) = swift_getKeyPath();
  *(void *)(inited + 72) = swift_getKeyPath();
  *(void *)(inited + 80) = swift_getKeyPath();
  *(void *)(inited + 88) = swift_getKeyPath();
  *(void *)(inited + 96) = swift_getKeyPath();
  *(void *)(inited + 104) = swift_getKeyPath();
  specialized Array._endMutation()();
  uint64_t v1 = self;
  for (uint64_t i = 4; i != 14; ++i)
  {
    if ((inited & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    id v4 = [v1 standardUserDefaults];
    swift_setAtReferenceWritableKeyPath();
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

void sub_10002AB74(void *a1)
{
  if (qword_1004C2B18 != -1) {
    swift_once();
  }
  v3._uint64_t countAndFlagsBits = 0xD000000000000041;
  v3._object = (void *)0x800000010041FCD0;
  Log.debug(_:isPrivate:)(v3, 0);
  id v4 = v1;
  sub_10002A8AC(v4);

  srand48(1234567890);
  [self jasperAvailable];
  sub_10002A9C8();
  id v5 = [self standardUserDefaults];
  NSString v6 = String._bridgeToObjectiveC()();
  [v5 setBool:1 forKey:v6];

  Class v7 = (Class)[objc_allocWithZone((Class)UIWindow) init];
  type metadata accessor for MeasureCoordinator();
  swift_allocObject();
  uint64_t v8 = sub_1001115B8(v7);
  uint64_t v9 = OBJC_IVAR____TtC7Measure11AppDelegate_coordinator;
  *(void *)&v4[OBJC_IVAR____TtC7Measure11AppDelegate_coordinator] = v8;
  swift_release();
  double v10 = self;
  id v11 = [v10 sharedApplication];
  id v12 = [v11 statusBarOrientation];

  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1004F7FF8;
  if (v12 == (id)qword_1004F7FF8)
  {
    if (!*(void *)&v4[v9])
    {
      __break(1u);
      return;
    }
    swift_retain();
    sub_10010BAF0();
    swift_release();
  }
  else
  {
    id v14 = [v10 sharedApplication];
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v4;
    v27[4] = sub_10002B58C;
    v27[5] = v15;
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 1107296256;
    v27[2] = sub_100049AB4;
    v27[3] = &unk_100488778;
    uint64_t v16 = _Block_copy(v27);
    id v17 = v4;
    swift_release();
    [v14 performWhileOverriddingStatusBarOrientation:v13 block:v16];
    _Block_release(v16);
  }
  NSString v18 = *(uint64_t (**)(uint64_t))(**(void **)&v4[OBJC_IVAR____TtC7Measure11AppDelegate__appState] + 200);
  uint64_t v19 = swift_retain();
  uint64_t v20 = v18(v19);
  swift_release();
  (*(void (**)(unsigned char *(*)(unsigned char *), void))(*(void *)v20 + 280))(sub_100029EB0, 0);
  swift_release();
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if (static UIDevice.isIPhone()())
  {
    sub_100012894((uint64_t *)&unk_1004CEA00);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1003F94A0;
    id v22 = *(void **)&v4[OBJC_IVAR____TtC7Measure11AppDelegate_levelShortcut];
    *(void *)(v21 + 32) = v22;
    Swift::String v23 = *(void **)&v4[OBJC_IVAR____TtC7Measure11AppDelegate_measureShortcut];
    *(void *)(v21 + 40) = v23;
    v27[0] = v21;
    specialized Array._endMutation()();
    sub_10001C99C(0, (unint64_t *)&unk_1004C46F0);
    id v24 = v22;
    id v25 = v23;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [a1 setShortcutItems:isa];

    Class v7 = isa;
  }
}

void sub_10002AFE8()
{
  if (qword_1004C2B18 != -1) {
    swift_once();
  }
  v1._object = (void *)0x800000010041FCB0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000015;
  Log.default(_:isPrivate:)(v1, 0);
  if (qword_1004C2C10 != -1) {
    swift_once();
  }
  sub_10013FCB0();
  id v2 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC7Measure11AppDelegate__appState) + 200);
  uint64_t v3 = swift_retain();
  uint64_t v4 = v2(v3);
  swift_release();
  (*(void (**)(unsigned char *(*)(unsigned char *), void))(*(void *)v4 + 280))(sub_10002BA20, 0);
  swift_release();
  id v5 = [self currentDevice];
  [v5 beginGeneratingDeviceOrientationNotifications];
}

void sub_10002B198()
{
  if (qword_1004C2B18 != -1) {
    swift_once();
  }
  v1._object = (void *)0x800000010041FC90;
  v1._uint64_t countAndFlagsBits = 0xD000000000000016;
  Log.default(_:isPrivate:)(v1, 0);
  id v2 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC7Measure11AppDelegate__appState) + 200);
  uint64_t v3 = swift_retain();
  uint64_t v4 = v2(v3);
  swift_release();
  (*(void (**)(unsigned char *(*)(unsigned char *), void))(*(void *)v4 + 280))(sub_100029FAC, 0);
  swift_release();
  id v5 = [self currentDevice];
  [v5 endGeneratingDeviceOrientationNotifications];
}

void sub_10002B308()
{
  if (qword_1004C2B18 != -1) {
    swift_once();
  }
  v1._object = (void *)0x800000010041FC70;
  v1._uint64_t countAndFlagsBits = 0xD000000000000018;
  Log.default(_:isPrivate:)(v1, 0);
  id v2 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC7Measure11AppDelegate__appState) + 200);
  uint64_t v3 = swift_retain();
  uint64_t v4 = v2(v3);
  swift_release();
  (*(void (**)(unsigned char *(*)(unsigned char *), void))(*(void *)v4 + 280))(sub_10002A018, 0);
  swift_release();
  if (qword_1004C2C10 != -1) {
    swift_once();
  }
  sub_10013FE90();
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  if (qword_1004F7FE8)
  {
    id v5 = (id)qword_1004F7FE8;
    sub_1001A9F64(0, 0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10002B4E0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10002B4F0(uint64_t result)
{
  *(unsigned char *)(result + 1) = *(unsigned char *)(v1 + 16);
  return result;
}

unint64_t sub_10002B4FC()
{
  unint64_t result = qword_1004C46E0;
  if (!qword_1004C46E0)
  {
    type metadata accessor for LaunchOptionsKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C46E0);
  }
  return result;
}

uint64_t sub_10002B554()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10002B58C()
{
  return sub_100029E60(*(void *)(v0 + 16));
}

uint64_t sub_10002B594(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002B5A4()
{
  return swift_release();
}

const char *sub_10002B5AC()
{
  return "shouldRenderOpaqueSurfaces";
}

id sub_10002B5B8@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 shouldRenderOpaqueSurfaces];
  *a2 = (_BYTE)result;
  return result;
}

id sub_10002B5EC(unsigned __int8 *a1, id *a2)
{
  return [*a2 setShouldRenderOpaqueSurfaces:*a1];
}

const char *sub_10002B600()
{
  return "shouldUseNormalsForBoxOrientation";
}

id sub_10002B60C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 shouldUseNormalsForBoxOrientation];
  *a2 = (_BYTE)result;
  return result;
}

id sub_10002B640(unsigned __int8 *a1, id *a2)
{
  return [*a2 setShouldUseNormalsForBoxOrientation:*a1];
}

const char *sub_10002B654()
{
  return "kADEdgeDetectionEnabled";
}

id sub_10002B660@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 kADEdgeDetectionEnabled];
  *a2 = (_BYTE)result;
  return result;
}

id sub_10002B694(unsigned __int8 *a1, id *a2)
{
  return [*a2 setKADEdgeDetectionEnabled:*a1];
}

const char *sub_10002B6A8()
{
  return "isLabelOcclusionEnabled";
}

id sub_10002B6B4@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isLabelOcclusionEnabled];
  *a2 = (_BYTE)result;
  return result;
}

id sub_10002B6E8(unsigned __int8 *a1, id *a2)
{
  return [*a2 setIsLabelOcclusionEnabled:*a1];
}

const char *sub_10002B6FC()
{
  return "isLineOcclusionEnabled";
}

id sub_10002B708@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isLineOcclusionEnabled];
  *a2 = (_BYTE)result;
  return result;
}

id sub_10002B73C(unsigned __int8 *a1, id *a2)
{
  return [*a2 setIsLineOcclusionEnabled:*a1];
}

const char *sub_10002B750()
{
  return "isPointOcclusionEnabled";
}

id sub_10002B75C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isPointOcclusionEnabled];
  *a2 = (_BYTE)result;
  return result;
}

id sub_10002B790(unsigned __int8 *a1, id *a2)
{
  return [*a2 setIsPointOcclusionEnabled:*a1];
}

const char *sub_10002B7A4()
{
  return "kDivisionsEnabled";
}

id sub_10002B7B0@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 kDivisionsEnabled];
  *a2 = (_BYTE)result;
  return result;
}

id sub_10002B7E4(unsigned __int8 *a1, id *a2)
{
  return [*a2 setKDivisionsEnabled:*a1];
}

const char *sub_10002B7F8()
{
  return "showsOnlyYukonEModes";
}

id sub_10002B804@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 showsOnlyYukonEModes];
  *a2 = (_BYTE)result;
  return result;
}

id sub_10002B838(unsigned __int8 *a1, id *a2)
{
  return [*a2 setShowsOnlyYukonEModes:*a1];
}

const char *sub_10002B84C()
{
  return "kPersonHeightEnabled";
}

id sub_10002B858@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 kPersonHeightEnabled];
  *a2 = (_BYTE)result;
  return result;
}

id sub_10002B88C(unsigned __int8 *a1, id *a2)
{
  return [*a2 setKPersonHeightEnabled:*a1];
}

const char *sub_10002B8A0()
{
  return "kPersonHeightCoachingEnabled";
}

uint64_t sub_10002B8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10002B918(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894(&qword_1004C4700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002B980()
{
  sub_100013218(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10002B9B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BFADC(v1 + 16, a1);
}

uint64_t sub_10002B9C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100012894(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for ReticleSizeState()
{
  return &type metadata for ReticleSizeState;
}

uint64_t sub_10002BA34()
{
  uint64_t result = Contexts.UIKit.init()();
  qword_1004F7F30 = result;
  return result;
}

id sub_10002BA54@<X0>(void *a1@<X8>)
{
  if (qword_1004C28E8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1004F7F30;
  *a1 = qword_1004F7F30;

  return v2;
}

BOOL sub_10002BAC0(float *a1, float *a2)
{
  return *a1 == *a2;
}

unint64_t sub_10002BAD4(uint64_t a1)
{
  unint64_t result = sub_10002BAFC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10002BAFC()
{
  unint64_t result = qword_1004C4748;
  if (!qword_1004C4748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C4748);
  }
  return result;
}

void *sub_10002BB50(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    long long v8 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v8;
    *(void *)(a1 + 64) = a2[8];
    *(_WORD *)(a1 + 72) = *((_WORD *)a2 + 36);
    long long v9 = *((_OWORD *)a2 + 5);
    long long v10 = *((_OWORD *)a2 + 6);
    *(void *)(a1 + 112) = a2[14];
    *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
    *(_WORD *)(a1 + 121) = *(_WORD *)((char *)a2 + 121);
    uint64_t v11 = a3[23];
    id v12 = (void *)(a1 + v11);
    uint64_t v13 = (char *)a2 + v11;
    *(_OWORD *)(a1 + 80) = v9;
    *(_OWORD *)(a1 + 96) = v10;
    uint64_t v14 = type metadata accessor for ARCamera.TrackingState();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_100012894(&qword_1004C4750);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v18 = type metadata accessor for ARCamera.TrackingState.Reason();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 2, v18))
      {
        memcpy(v12, v13, *(void *)(v15 + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v19 + 16))(v12, v13, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v12, 0, 2, v18);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v20 = a3[25];
    *(void *)((char *)v4 + a3[24]) = *(uint64_t *)((char *)a2 + a3[24]);
    *((unsigned char *)v4 + v20) = *((unsigned char *)a2 + v20);
  }
  return v4;
}

uint64_t sub_10002BDBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 92);
  uint64_t v3 = type metadata accessor for ARCamera.TrackingState();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = type metadata accessor for ARCamera.TrackingState.Reason();
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v2, 2, v5);
    if (!result)
    {
      NSString v6 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
      return v6(v2, v5);
    }
  }
  return result;
}

uint64_t sub_10002BED0(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  long long v8 = *(_OWORD *)(a2 + 80);
  long long v9 = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(_WORD *)(a1 + 121) = *(_WORD *)(a2 + 121);
  uint64_t v10 = a3[23];
  uint64_t v11 = (void *)(a1 + v10);
  id v12 = (const void *)(a2 + v10);
  *(_OWORD *)(a1 + 80) = v8;
  *(_OWORD *)(a1 + 96) = v9;
  uint64_t v13 = type metadata accessor for ARCamera.TrackingState();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_100012894(&qword_1004C4750);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = type metadata accessor for ARCamera.TrackingState.Reason();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v12, 2, v16))
    {
      memcpy(v11, v12, *(void *)(v14 + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v11, v12, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v11, 0, 2, v16);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v18 = a3[25];
  *(void *)(a1 + a3[24]) = *(void *)(a2 + a3[24]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  return a1;
}

uint64_t sub_10002C0EC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  *(unsigned char *)(a1 + 122) = *(unsigned char *)(a2 + 122);
  uint64_t v6 = a3[23];
  long long v7 = (void *)(a1 + v6);
  long long v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ARCamera.TrackingState();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v17 = type metadata accessor for ARCamera.TrackingState.Reason();
      uint64_t v22 = *(void *)(v17 - 8);
      uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
      int v19 = v18(v7, 2, v17);
      int v20 = v18(v8, 2, v17);
      if (v19)
      {
        if (!v20)
        {
          (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v7, v8, v17);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v7, 0, 2, v17);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v20)
        {
          (*(void (**)(void *, void *, uint64_t))(v22 + 24))(v7, v8, v17);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v22 + 8))(v7, v17);
      }
      size_t v16 = *(void *)(v10 + 64);
      goto LABEL_8;
    }
    sub_10002D830((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for ARCamera.TrackingState);
LABEL_7:
    size_t v16 = *(void *)(*(void *)(sub_100012894(&qword_1004C4750) - 8) + 64);
LABEL_8:
    memcpy(v7, v8, v16);
    goto LABEL_14;
  }
  if (v13) {
    goto LABEL_7;
  }
  uint64_t v14 = type metadata accessor for ARCamera.TrackingState.Reason();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v8, 2, v14))
  {
    memcpy(v7, v8, *(void *)(v10 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v7, v8, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 2, v14);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  *(void *)(a1 + a3[24]) = *(void *)(a2 + a3[24]);
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  return a1;
}

uint64_t sub_10002C4D0(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  long long v8 = *(_OWORD *)(a2 + 80);
  long long v9 = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(_WORD *)(a1 + 121) = *(_WORD *)(a2 + 121);
  uint64_t v10 = a3[23];
  uint64_t v11 = (void *)(a1 + v10);
  int v12 = (const void *)(a2 + v10);
  *(_OWORD *)(a1 + 80) = v8;
  *(_OWORD *)(a1 + 96) = v9;
  uint64_t v13 = type metadata accessor for ARCamera.TrackingState();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_100012894(&qword_1004C4750);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = type metadata accessor for ARCamera.TrackingState.Reason();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v12, 2, v16))
    {
      memcpy(v11, v12, *(void *)(v14 + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v11, v12, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v11, 0, 2, v16);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v18 = a3[25];
  *(void *)(a1 + a3[24]) = *(void *)(a2 + a3[24]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  return a1;
}

uint64_t sub_10002C6EC(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  long long v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  uint64_t v9 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  *(unsigned char *)(a1 + 122) = *(unsigned char *)(a2 + 122);
  uint64_t v10 = a3[23];
  uint64_t v11 = (void *)(a1 + v10);
  int v12 = (void *)(a2 + v10);
  *(void *)(a1 + 112) = v9;
  uint64_t v13 = type metadata accessor for ARCamera.TrackingState();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      uint64_t v21 = type metadata accessor for ARCamera.TrackingState.Reason();
      uint64_t v27 = *(void *)(v21 - 8);
      uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
      int v23 = v22(v11, 2, v21);
      int v24 = v22(v12, 2, v21);
      if (v23)
      {
        if (!v24)
        {
          (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v11, v12, v21);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v11, 0, 2, v21);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v24)
        {
          (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v11, v12, v21);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v27 + 8))(v11, v21);
      }
      size_t v20 = *(void *)(v14 + 64);
      goto LABEL_8;
    }
    sub_10002D830((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for ARCamera.TrackingState);
LABEL_7:
    size_t v20 = *(void *)(*(void *)(sub_100012894(&qword_1004C4750) - 8) + 64);
LABEL_8:
    memcpy(v11, v12, v20);
    goto LABEL_14;
  }
  if (v17) {
    goto LABEL_7;
  }
  uint64_t v18 = type metadata accessor for ARCamera.TrackingState.Reason();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v12, 2, v18))
  {
    memcpy(v11, v12, *(void *)(v14 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v19 + 32))(v11, v12, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v11, 0, 2, v18);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_14:
  uint64_t v25 = a3[25];
  *(void *)(a1 + a3[24]) = *(void *)(a2 + a3[24]);
  *(unsigned char *)(a1 + v25) = *(unsigned char *)(a2 + v25);
  return a1;
}

uint64_t sub_10002CA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002CA98);
}

uint64_t sub_10002CA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 72);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_100012894(&qword_1004C4750);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 92);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10002CB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002CB60);
}

uint64_t sub_10002CB60(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 72) = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_100012894(&qword_1004C4750);
    long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 92);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for AppSession()
{
  uint64_t result = qword_1004C47B0;
  if (!qword_1004C47B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10002CC54()
{
  sub_10002CD28();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10002CD28()
{
  if (!qword_1004C47C0)
  {
    type metadata accessor for ARCamera.TrackingState();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1004C47C0);
    }
  }
}

uint64_t sub_10002CD80()
{
  uint64_t v1 = type metadata accessor for AppSession();
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  unsigned int v4 = (double *)((char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (double *)((char *)&v29 - v6);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (double *)((char *)&v29 - v9);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v29 - v11;
  double v13 = CACurrentMediaTime();
  double v14 = *(double *)(v0 + 112);
  unsigned int v15 = [self jasperAvailable];
  sub_10002D7CC(v0, (uint64_t)v12);
  if (!v15)
  {
    sub_10002D830((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AppSession);
    if ((*(unsigned char *)(v0 + 72) & 1) == 0) {
      goto LABEL_11;
    }
LABEL_8:
    char v19 = 9;
    return sub_10002D0D4(v19);
  }
  uint64_t v16 = *((void *)v12 + 12);
  sub_10002D830((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AppSession);
  if (*(unsigned char *)(v0 + 72)) {
    goto LABEL_8;
  }
  if (v16 >= 1)
  {
    double v17 = *(double *)(v0 + 64);
    sub_10002D7CC(v0, (uint64_t)v10);
    if (v17 <= 0.0)
    {
      sub_10002D830((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AppSession);
    }
    else
    {
      double v18 = v10[4];
      sub_10002D830((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AppSession);
      if (v18 > 0.0)
      {
        char v19 = 10;
        return sub_10002D0D4(v19);
      }
    }
    if (*(double *)(v0 + 64) <= 0.0)
    {
      if (*(double *)(v0 + 32) <= 0.0) {
        char v19 = 13;
      }
      else {
        char v19 = 12;
      }
    }
    else
    {
      char v19 = 11;
    }
    return sub_10002D0D4(v19);
  }
LABEL_11:
  double v21 = *(double *)(v0 + 64);
  sub_10002D7CC(v0, (uint64_t)v7);
  if (v21 <= 0.0)
  {
    double v22 = v7[4];
    sub_10002D830((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AppSession);
    if (v22 <= 0.0)
    {
      double v25 = v13 - v14;
      if (*(unsigned char *)(v0 + 121) == 1)
      {
        if (v25 <= 2.0)
        {
          char v19 = 3;
          return sub_10002D0D4(v19);
        }
        BOOL v26 = v25 > 10.0;
        char v27 = 4;
        char v28 = 5;
      }
      else
      {
        if (v25 <= 2.0)
        {
          char v19 = 6;
          return sub_10002D0D4(v19);
        }
        BOOL v26 = v25 > 10.0;
        char v27 = 7;
        char v28 = 8;
      }
      if (v26) {
        char v19 = v28;
      }
      else {
        char v19 = v27;
      }
      return sub_10002D0D4(v19);
    }
  }
  else
  {
    sub_10002D830((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AppSession);
  }
  double v23 = *(double *)(v0 + 64);
  sub_10002D7CC(v0, (uint64_t)v4);
  if (v23 <= 0.0)
  {
    uint64_t result = sub_10002D830((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AppSession);
  }
  else
  {
    double v24 = v4[4];
    uint64_t result = sub_10002D830((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AppSession);
    if (v24 > 0.0)
    {
      char v19 = 2;
      return sub_10002D0D4(v19);
    }
  }
  if (*(double *)(v0 + 64) > 0.0)
  {
    char v19 = 0;
    return sub_10002D0D4(v19);
  }
  if (*(double *)(v0 + 32) > 0.0)
  {
    char v19 = 1;
    return sub_10002D0D4(v19);
  }
  return result;
}

uint64_t sub_10002D0D4(char a1)
{
  uint64_t v3 = type metadata accessor for ARCamera.TrackingState();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100012894(&qword_1004C4750);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v43 - v11;
  if ([self jasperAvailable])
  {
    LOBYTE(v46) = a1;
    uint64_t result = String.init<A>(describing:)();
    double v15 = *(double *)v1;
    if ((~*(void *)v1 & 0x7FF0000000000000) != 0)
    {
      if (v15 > -9.22337204e18)
      {
        if (v15 < 9.22337204e18)
        {
          double v16 = *(double *)(v1 + 8);
          if ((~*(void *)&v16 & 0x7FF0000000000000) != 0)
          {
            if (v16 > -9.22337204e18)
            {
              if (v16 < 9.22337204e18)
              {
                double v17 = *(double *)(v1 + 16);
                if ((~*(void *)&v17 & 0x7FF0000000000000) != 0)
                {
                  if (v17 > -9.22337204e18)
                  {
                    if (v17 < 9.22337204e18)
                    {
                      double v18 = *(double *)(v1 + 24);
                      if ((~*(void *)&v18 & 0x7FF0000000000000) != 0)
                      {
                        if (v18 > -9.22337204e18)
                        {
                          if (v18 < 9.22337204e18)
                          {
                            double v19 = *(double *)(v1 + 32);
                            if ((~*(void *)&v19 & 0x7FF0000000000000) != 0)
                            {
                              if (v19 > -9.22337204e18)
                              {
                                if (v19 < 9.22337204e18)
                                {
                                  uint64_t v20 = result;
                                  uint64_t v21 = v14;
                                  uint64_t v22 = *(void *)(v1 + 88);
                                  uint64_t v45 = *(void *)(v1 + 80);
                                  uint64_t v23 = *(void *)(v1 + 96);
                                  uint64_t v44 = *(void *)(v1 + 104);
                                  uint64_t v24 = type metadata accessor for AppSession();
                                  uint64_t v25 = *(unsigned __int8 *)(v1 + *(int *)(v24 + 100));
                                  sub_10002D890(v1 + *(int *)(v24 + 92), (uint64_t)v12);
                                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3) == 1)
                                  {
                                    sub_10002D8F8((uint64_t)v12);
                                    uint64_t v26 = type metadata accessor for ARCamera.TrackingState.Reason();
                                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8)
                                                                                              + 56))(v6, 1, 2, v26);
                                  }
                                  else
                                  {
                                    uint64_t v6 = v12;
                                  }
                                  uint64_t v37 = ARCamera.TrackingState.analyticsDescription.getter();
                                  uint64_t v39 = v38;
                                  sub_10002D830((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for ARCamera.TrackingState);
                                  *(void *)&long long v46 = v20;
                                  *((void *)&v46 + 1) = v21;
                                  uint64_t v47 = (uint64_t)v15;
                                  uint64_t v48 = (uint64_t)v16;
                                  uint64_t v49 = (uint64_t)v17;
                                  uint64_t v50 = (uint64_t)v18;
                                  uint64_t v51 = (uint64_t)v19;
                                  uint64_t v52 = v45;
                                  uint64_t v53 = v22;
                                  *(void *)&long long v54 = v23;
                                  *((void *)&v54 + 1) = v44;
                                  *(void *)&long long v55 = v25 | 0x8000000000000000;
                                  *((void *)&v55 + 1) = v37;
                                  uint64_t v56 = v39;
LABEL_40:
                                  sub_10014BB38(&v46);
                                  swift_bridgeObjectRelease();
                                  return swift_bridgeObjectRelease();
                                }
                                goto LABEL_55;
                              }
LABEL_54:
                              __break(1u);
LABEL_55:
                              __break(1u);
                              goto LABEL_56;
                            }
LABEL_53:
                            __break(1u);
                            goto LABEL_54;
                          }
LABEL_52:
                          __break(1u);
                          goto LABEL_53;
                        }
LABEL_51:
                        __break(1u);
                        goto LABEL_52;
                      }
LABEL_50:
                      __break(1u);
                      goto LABEL_51;
                    }
LABEL_49:
                    __break(1u);
                    goto LABEL_50;
                  }
LABEL_48:
                  __break(1u);
                  goto LABEL_49;
                }
LABEL_47:
                __break(1u);
                goto LABEL_48;
              }
LABEL_46:
              __break(1u);
              goto LABEL_47;
            }
LABEL_45:
            __break(1u);
            goto LABEL_46;
          }
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_43;
  }
  LOBYTE(v46) = a1;
  uint64_t result = String.init<A>(describing:)();
  double v28 = *(double *)v1;
  if ((~*(void *)v1 & 0x7FF0000000000000) == 0)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (v28 <= -9.22337204e18)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  if (v28 >= 9.22337204e18)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  double v29 = *(double *)(v1 + 8);
  if ((~*(void *)&v29 & 0x7FF0000000000000) == 0)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  if (v29 <= -9.22337204e18)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  if (v29 >= 9.22337204e18)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  double v30 = *(double *)(v1 + 16);
  if ((~*(void *)&v30 & 0x7FF0000000000000) == 0)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (v30 <= -9.22337204e18)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (v30 >= 9.22337204e18)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  double v31 = *(double *)(v1 + 24);
  if ((~*(void *)&v31 & 0x7FF0000000000000) == 0)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  if (v31 <= -9.22337204e18)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  if (v31 >= 9.22337204e18)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  double v32 = *(double *)(v1 + 32);
  if ((~*(void *)&v32 & 0x7FF0000000000000) == 0)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if (v32 <= -9.22337204e18)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (v32 < 9.22337204e18)
  {
    uint64_t v33 = result;
    uint64_t v34 = v27;
    uint64_t v35 = type metadata accessor for AppSession();
    sub_10002D890(v1 + *(int *)(v35 + 92), (uint64_t)v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
    {
      sub_10002D8F8((uint64_t)v10);
      uint64_t v36 = type metadata accessor for ARCamera.TrackingState.Reason();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v6, 1, 2, v36);
    }
    else
    {
      uint64_t v6 = v10;
    }
    uint64_t v40 = ARCamera.TrackingState.analyticsDescription.getter();
    uint64_t v42 = v41;
    sub_10002D830((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for ARCamera.TrackingState);
    *(void *)&long long v46 = v33;
    *((void *)&v46 + 1) = v34;
    uint64_t v47 = (uint64_t)v28;
    uint64_t v48 = (uint64_t)v29;
    uint64_t v49 = (uint64_t)v30;
    uint64_t v50 = (uint64_t)v31;
    uint64_t v51 = (uint64_t)v32;
    uint64_t v52 = v40;
    uint64_t v53 = v42;
    long long v54 = 0u;
    long long v55 = 0u;
    uint64_t v56 = 0;
    goto LABEL_40;
  }
LABEL_70:
  __break(1u);
  return result;
}

void sub_10002D714(uint64_t a1@<X8>)
{
  *(_OWORD *)(a1 + 58) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(CFTimeInterval *)(a1 + 112) = CACurrentMediaTime();
  *(_WORD *)(a1 + 120) = 1;
  *(unsigned char *)(a1 + 122) = 0;
  uint64_t v2 = (int *)type metadata accessor for AppSession();
  uint64_t v3 = a1 + v2[23];
  uint64_t v4 = type metadata accessor for ARCamera.TrackingState();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = v2[24];
  *(CFTimeInterval *)(a1 + v5) = CACurrentMediaTime();
  *(unsigned char *)(a1 + v2[25]) = 0;
}

uint64_t sub_10002D7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppSession();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002D830(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10002D890(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894(&qword_1004C4750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002D8F8(uint64_t a1)
{
  uint64_t v2 = sub_100012894(&qword_1004C4750);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10002DA40(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC7Measure17SurfaceLabelStrip_contentView] = 0;
  v19.receiver = v4;
  v19.super_class = ObjectType;
  id v10 = [super initWithFrame:a1, a2, a3, a4];
  uint64_t v11 = self;
  uint64_t v12 = (char *)v10;
  id v13 = [v11 mainBundle];
  NSString v14 = String._bridgeToObjectiveC()();

  uint64_t v15 = OBJC_IVAR____TtC7Measure17SurfaceLabelStrip_contentView;
  if (!*(void *)&v12[OBJC_IVAR____TtC7Measure17SurfaceLabelStrip_contentView])
  {
    __break(1u);
    goto LABEL_6;
  }
  [v12 addSubview:];
  double v16 = *(void **)&v12[v15];
  if (!v16)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v17 = v16;
  [v12 bounds];
  [v17 setFrame:];

  double v18 = *(void **)&v12[v15];
  if (v18)
  {
    [v18 setAutoresizingMask:18];

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_10002DC18(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC7Measure17SurfaceLabelStrip_contentView] = 0;
  v13.receiver = v1;
  v13.super_class = ObjectType;
  [super initWithCoder:a1];
  if (!v4) {
    goto LABEL_6;
  }
  uint64_t v5 = self;
  uint64_t v6 = (char *)v4;
  id v7 = [v5 mainBundle];
  NSString v8 = String._bridgeToObjectiveC()();

  uint64_t v9 = OBJC_IVAR____TtC7Measure17SurfaceLabelStrip_contentView;
  if (!*(void *)&v6[OBJC_IVAR____TtC7Measure17SurfaceLabelStrip_contentView])
  {
    __break(1u);
    goto LABEL_8;
  }
  [v6 addSubview:];
  id v10 = *(void **)&v6[v9];
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v11 = v10;
  [v6 bounds];
  [v11 setFrame:];

  uint64_t v12 = *(void **)&v6[v9];
  if (v12)
  {
    [v12 setAutoresizingMask:18];

LABEL_6:
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t type metadata accessor for SurfaceLabelStrip()
{
  return self;
}

uint64_t sub_10002DE78(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MeasurementHistoryItem();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  id v7 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000297B8(a1, (uint64_t)v7);
  sub_100026A04((uint64_t)&v7[*(int *)(v5 + 36)], (uint64_t)v116);
  sub_100026A04((uint64_t)v116, (uint64_t)v117);
  if (sub_100026A60((uint64_t)v117) == 1)
  {
    uint64_t v8 = sub_100026A6C((uint64_t)v117);
    uint64_t v9 = *(void *)v8;
    float v10 = *(float *)(v8 + 32);
    int v11 = *(unsigned __int8 *)(v8 + 36);
    uint64_t v12 = *(void *)(v8 + 40);
    uint64_t v13 = *(void *)(v8 + 48);
    uint64_t v114 = *(void *)(v8 + 8);
    uint64_t v115 = v13;
    uint64_t v14 = *(void *)(v8 + 56);
    NSString v104 = *(NSString *)(v8 + 64);
    uint64_t v105 = v14;
    uint64_t v15 = *(void *)(v8 + 80);
    uint64_t v102 = *(void *)(v8 + 88);
    uint64_t v103 = v15;
    uint64_t v101 = *(void *)(v8 + 96);
    uint64_t v16 = *(void *)(v8 + 104);
    uint64_t v99 = v12;
    uint64_t v100 = v16;
    double v17 = v10;
    uint64_t v18 = *(void *)(v8 + 120);
    uint64_t v19 = *(void *)(v8 + 128);
    float v20 = *(float *)(v8 + 152);
    int v21 = *(unsigned __int8 *)(v8 + 156);
    uint64_t v22 = *(void *)(v8 + 160);
    uint64_t v112 = *(void *)(v8 + 168);
    uint64_t v113 = v22;
    uint64_t v23 = *(void *)(v8 + 176);
    uint64_t v110 = *(void **)(v8 + 184);
    uint64_t v111 = v23;
    uint64_t v24 = *(void *)(v8 + 200);
    uint64_t v108 = *(void *)(v8 + 208);
    uint64_t v109 = v24;
    uint64_t v25 = *(void *)(v8 + 216);
    uint64_t v106 = *(void *)(v8 + 224);
    uint64_t v107 = v25;
    double v26 = v20;
    if (v11) {
      double v27 = 0.0;
    }
    else {
      double v27 = v17;
    }
    if (v21) {
      double v28 = 0.0;
    }
    else {
      double v28 = v26;
    }
    id v29 = *(id *)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView);
    sub_100051138(v27, v28);

    id v30 = [self currentTraitCollection];
    id v31 = [v30 preferredContentSizeCategory];

    char v32 = UIContentSizeCategory.isAccessibilityCategory.getter();
    if (v32)
    {
      uint64_t v33 = *(char **)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle);
      uint64_t v34 = *(void **)&v33[OBJC_IVAR____TtC7Measure24AccessibilitySingleStack_label];
      uint64_t v35 = v33;
      NSString v36 = String._bridgeToObjectiveC()();
      [v34 setText:v36];

      NSString v37 = String._bridgeToObjectiveC()();
      [v34 setAccessibilityLabel:v37];

      uint64_t v38 = *(void **)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel);
      uint64_t v39 = self;
      id v40 = v38;
      id v41 = [v39 mainBundle];
      v118._object = (void *)0xE000000000000000;
      v42._uint64_t countAndFlagsBits = 0xD000000000000010;
      v42._object = (void *)0x800000010041F9B0;
      v43._uint64_t countAndFlagsBits = 0;
      v43._object = (void *)0xE000000000000000;
      v118._uint64_t countAndFlagsBits = 0;
      Swift::String v44 = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, (Swift::String_optional)0, (NSBundle)v41, v43, v118);

      id v45 = [v39 mainBundle];
      v119._object = (void *)0xE000000000000000;
      v46._uint64_t countAndFlagsBits = 0xD000000000000010;
      v46._object = (void *)0x800000010041F9B0;
      v47._uint64_t countAndFlagsBits = 0;
      v47._object = (void *)0xE000000000000000;
      v119._uint64_t countAndFlagsBits = 0;
      Swift::String v48 = NSLocalizedString(_:tableName:bundle:value:comment:)(v46, (Swift::String_optional)0, (NSBundle)v45, v47, v119);

      sub_10014DA7C(v44._countAndFlagsBits, (uint64_t)v44._object, v48._countAndFlagsBits, v48._object, v99, v115, v105, (uint64_t)v104, v103, v102, v101, v100);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v49 = *(id *)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel);
      id v50 = [v39 mainBundle];
      v120._object = (void *)0xE000000000000000;
      v51._uint64_t countAndFlagsBits = 0x4C474E4154434552;
      v51._object = (void *)0xEF48544449575F45;
      v52._uint64_t countAndFlagsBits = 0;
      v52._object = (void *)0xE000000000000000;
      v120._uint64_t countAndFlagsBits = 0;
      Swift::String v53 = NSLocalizedString(_:tableName:bundle:value:comment:)(v51, (Swift::String_optional)0, (NSBundle)v50, v52, v120);

      id v54 = [v39 mainBundle];
      v121._object = (void *)0xE000000000000000;
      v55._uint64_t countAndFlagsBits = 0x4C474E4154434552;
      v55._object = (void *)0xEF48544449575F45;
      v56._uint64_t countAndFlagsBits = 0;
      v56._object = (void *)0xE000000000000000;
      v121._uint64_t countAndFlagsBits = 0;
      Swift::String v57 = NSLocalizedString(_:tableName:bundle:value:comment:)(v55, (Swift::String_optional)0, (NSBundle)v54, v56, v121);

      sub_10014DA7C(v53._countAndFlagsBits, (uint64_t)v53._object, v57._countAndFlagsBits, v57._object, v113, v112, v111, (uint64_t)v110, v109, v108, v107, v106);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v97 = v19;
      uint64_t v98 = v18;
      id v58 = *(id *)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_cellTitle);
      NSString v59 = String._bridgeToObjectiveC()();
      [v58 setText:v59];

      uint64_t v60 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels;
      int v61 = *(void **)(*(void *)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels)
                     + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_title);
      char v62 = self;
      id v63 = v61;
      id v96 = v62;
      id v64 = [v62 mainBundle];
      v122._object = (void *)0xE000000000000000;
      v65._object = (void *)0x800000010041F9B0;
      v65._uint64_t countAndFlagsBits = 0xD000000000000010;
      v66._uint64_t countAndFlagsBits = 0;
      v66._object = (void *)0xE000000000000000;
      v122._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v65, (Swift::String_optional)0, (NSBundle)v64, v66, v122);

      NSString v67 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v63 setText:v67];

      id v68 = objc_retain(*(id *)(*(void *)(v2 + v60)
                              + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits));
      NSString v69 = String._bridgeToObjectiveC()();
      [v68 setText:v69];

      uint64_t v70 = *(void **)(*(void *)(v2 + v60)
                     + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels);
      uint64_t v71 = v99;
      if (v9 == v99 && v114 == v115)
      {
        char v72 = 1;
        uint64_t v73 = v115;
      }
      else
      {
        uint64_t v73 = v115;
        char v72 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      id v74 = v70;
      sub_10015E68C(v71, v73, v105, v104, v103, v102, v101, v100, v72 & 1);

      uint64_t v75 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels;
      id v76 = objc_retain(*(id *)(*(void *)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels)
                              + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_title));
      id v77 = [v96 mainBundle];
      v123._object = (void *)0xE000000000000000;
      v78._uint64_t countAndFlagsBits = 0x4C474E4154434552;
      v78._object = (void *)0xEF48544449575F45;
      v79._uint64_t countAndFlagsBits = 0;
      v79._object = (void *)0xE000000000000000;
      v123._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v78, (Swift::String_optional)0, (NSBundle)v77, v79, v123);

      NSString v80 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v76 setText:v80];

      id v81 = objc_retain(*(id *)(*(void *)(v2 + v75)
                              + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits));
      uint64_t v82 = v97;
      uint64_t v83 = v98;
      NSString v84 = String._bridgeToObjectiveC()();
      [v81 setText:v84];

      uint64_t v85 = v82;
      NSString v86 = *(void **)(*(void *)(v2 + v75)
                     + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels);
      uint64_t v88 = v112;
      uint64_t v87 = v113;
      if (v83 == v113 && v85 == v112) {
        char v89 = 1;
      }
      else {
        char v89 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      char v91 = v110;
      uint64_t v90 = v111;
      uint64_t v93 = v108;
      uint64_t v92 = v109;
      id v94 = v86;
      sub_10015E68C(v87, v88, v90, v91, v92, v93, v107, v106, v89 & 1);
    }
    return sub_10002981C((uint64_t)v7);
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for RectangleHistoryCell()
{
  return self;
}

uint64_t sub_10002E868()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10002E8BC(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + qword_1004C48A8);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_10002E910())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_10002E96C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_1004C48B0;
  swift_beginAccess();
  return sub_10002EFD0(v3, a1);
}

uint64_t sub_10002E9C0(uint64_t a1)
{
  uint64_t v3 = v1 + qword_1004C48B0;
  swift_beginAccess();
  sub_10002EF68(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_10002EA1C())()
{
  return j__swift_endAccess;
}

id sub_10002EA7C(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[qword_1004C48A8] = _swiftEmptyArrayStorage;
  uint64_t v9 = &v4[qword_1004C48B0];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for StateObservingSKView();
  id v10 = [super initWithFrame:a1, a2, a3, a4];
  swift_getWitnessTable();
  StateObserving.setup()();

  return v10;
}

id sub_10002EB90(double a1, double a2, double a3, double a4)
{
  return sub_10002EA7C(a1, a2, a3, a4);
}

void sub_10002EBB4()
{
  *(void *)&v0[qword_1004C48A8] = _swiftEmptyArrayStorage;
  uint64_t v1 = &v0[qword_1004C48B0];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10002EC40()
{
}

void sub_10002EC64(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_10002F038();
}

id sub_10002EC8C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateObservingSKView();
  return [super dealloc];
}

uint64_t sub_10002ED00(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + qword_1004C48B0;

  return sub_10002F0C4(v2);
}

uint64_t type metadata accessor for StateObservingSKView()
{
  return sub_10002F124();
}

uint64_t sub_10002ED64(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_10002ED6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = j___s8Stateful8ContextsO5UIKitVAEycfC();
  *a1 = result;
  return result;
}

uint64_t (*sub_10002ED9C(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10002EA1C();
  return sub_10002EDF4;
}

uint64_t sub_10002EDF8()
{
  sub_10002EF20();

  return swift_bridgeObjectRetain();
}

uint64_t (*sub_10002EE24(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10002E910();
  return sub_10002EDF4;
}

void sub_10002EE7C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void sub_10002EEC4()
{
}

uint64_t sub_10002EF20()
{
  uint64_t v1 = v0 + qword_1004C48A8;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_10002EF68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894(&qword_1004C49A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002EFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894(&qword_1004C49A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10002F038()
{
  *(void *)&v0[qword_1004C48A8] = _swiftEmptyArrayStorage;
  uint64_t v1 = &v0[qword_1004C48B0];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10002F0C4(uint64_t a1)
{
  uint64_t v2 = sub_100012894(&qword_1004C49A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10002F124()
{
  return swift_getGenericMetadata();
}

void sub_10002F158(uint64_t a1)
{
  switch(a1)
  {
    case 2:
      double v2 = 3.14159265;
      break;
    case 4:
      double v2 = -*(double *)CGFloat.piDiv2.unsafeMutableAddressor();
      break;
    case 3:
      double v2 = *(double *)CGFloat.piDiv2.unsafeMutableAddressor();
      break;
    default:
      double v2 = 0.0;
      break;
  }
  CGAffineTransformMakeRotation((CGAffineTransform *)&aBlock, v2);
  *(_OWORD *)&m.a = *(_OWORD *)&aBlock.m11;
  *(_OWORD *)&m.c = *(_OWORD *)&aBlock.m13;
  *(_OWORD *)&m.CGFloat tx = *(_OWORD *)&aBlock.m21;
  CATransform3DMakeAffineTransform(&aBlock, &m);
  long long v20 = *(_OWORD *)&aBlock.m13;
  long long v21 = *(_OWORD *)&aBlock.m11;
  long long v18 = *(_OWORD *)&aBlock.m23;
  long long v19 = *(_OWORD *)&aBlock.m21;
  long long v16 = *(_OWORD *)&aBlock.m33;
  long long v17 = *(_OWORD *)&aBlock.m31;
  long long v15 = *(_OWORD *)&aBlock.m41;
  CGFloat m43 = aBlock.m43;
  CGFloat m44 = aBlock.m44;
  double v5 = sub_10002F358();
  uint64_t v7 = v6;
  double v8 = sub_10002F55C();
  uint64_t v10 = v9;
  int v11 = self;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v1;
  *(_OWORD *)(v12 + 24) = v21;
  *(_OWORD *)(v12 + 40) = v20;
  *(_OWORD *)(v12 + 56) = v19;
  *(_OWORD *)(v12 + 72) = v18;
  *(_OWORD *)(v12 + 88) = v17;
  *(_OWORD *)(v12 + 104) = v16;
  *(_OWORD *)(v12 + 120) = v15;
  *(CGFloat *)(v12 + 136) = m43;
  *(CGFloat *)(v12 + 144) = m44;
  *(double *)(v12 + 152) = v5;
  *(void *)(v12 + 160) = v7;
  *(double *)(v12 + 168) = v8;
  *(void *)(v12 + 176) = v10;
  *(void *)&aBlock.m21 = sub_100030028;
  *(void *)&aBlock.m22 = v12;
  *(void *)&aBlock.m11 = _NSConcreteStackBlock;
  *(void *)&aBlock.m12 = 1107296256;
  *(void *)&aBlock.m13 = sub_100049AB4;
  *(void *)&aBlock.m14 = &unk_100488900;
  uint64_t v13 = _Block_copy(&aBlock);
  id v14 = v1;
  swift_release();
  [v11 animateWithDuration:0 delay:v13 options:0 animations:0.25 completion:0.25];
  _Block_release(v13);
}

double sub_10002F358()
{
  uint64_t v1 = v0;
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  id v2 = [self sharedApplication];
  id v3 = [v2 userInterfaceLayoutDirection];

  if ((unint64_t)(v8 - 3) <= 1)
  {
    if (v3 == (id)1)
    {
      double Width = CGRectGetWidth(*(CGRect *)(v1 + qword_1004C7AB8));
      if (qword_1004C2E80 != -1) {
        swift_once();
      }
      double v5 = Width - *(double *)&qword_1004F8660 + -47.0;
      goto LABEL_13;
    }
    goto LABEL_10;
  }
  if (v3 != (id)1)
  {
LABEL_10:
    if (qword_1004C2E80 != -1) {
      swift_once();
    }
    double v5 = *(double *)&qword_1004F8660;
    goto LABEL_13;
  }
  double v6 = CGRectGetWidth(*(CGRect *)(v1 + qword_1004C7AB8));
  if (qword_1004C2E80 != -1) {
    swift_once();
  }
  double v5 = v6 - (*(double *)&qword_1004F8660 + 80.0);
LABEL_13:
  if (qword_1004C2E88 != -1) {
    swift_once();
  }
  return v5;
}

double sub_10002F55C()
{
  uint64_t v1 = v0;
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  id v2 = [self sharedApplication];
  id v3 = [v2 userInterfaceLayoutDirection];

  if ((unint64_t)(v8 - 3) <= 1)
  {
    if (v3 != (id)1)
    {
      double Width = CGRectGetWidth(*(CGRect *)(v1 + qword_1004C7AB8));
      if (qword_1004C2E80 != -1) {
        swift_once();
      }
      double v5 = Width - *(double *)&qword_1004F8660 + -47.0;
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  if (v3 == (id)1)
  {
LABEL_7:
    if (qword_1004C2E80 != -1) {
      swift_once();
    }
    double v5 = *(double *)&qword_1004F8660;
    goto LABEL_13;
  }
  double v6 = CGRectGetWidth(*(CGRect *)(v1 + qword_1004C7AB8));
  if (qword_1004C2E80 != -1) {
    swift_once();
  }
  double v5 = v6 - (*(double *)&qword_1004F8660 + 80.0);
LABEL_13:
  if (qword_1004C2E88 != -1) {
    swift_once();
  }
  return v5;
}

void sub_10002F760(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6)
{
  uint64_t v35 = a2[4];
  uint64_t v36 = *a2;
  uint64_t v33 = a2[5];
  uint64_t v34 = a2[1];
  uint64_t v31 = a2[6];
  uint64_t v32 = a2[2];
  uint64_t v7 = a2[8];
  uint64_t v29 = a2[7];
  uint64_t v30 = a2[3];
  uint64_t v8 = a2[9];
  uint64_t v9 = a2[10];
  uint64_t v11 = a2[11];
  uint64_t v10 = a2[12];
  uint64_t v12 = a2[13];
  uint64_t v13 = a2[14];
  uint64_t v14 = a2[15];
  uint64_t v15 = qword_1004C7A50;
  long long v16 = *(void **)(a1 + qword_1004C7A50);
  if (v16)
  {
    id v17 = [v16 layer];
    uint64_t v37 = v36;
    uint64_t v38 = v34;
    uint64_t v39 = v32;
    uint64_t v40 = v30;
    uint64_t v41 = v35;
    uint64_t v42 = v33;
    uint64_t v43 = v31;
    uint64_t v44 = v29;
    uint64_t v45 = v7;
    uint64_t v46 = v8;
    uint64_t v47 = v9;
    uint64_t v48 = v11;
    uint64_t v49 = v10;
    uint64_t v50 = v12;
    uint64_t v51 = v13;
    uint64_t v52 = v14;
    [v17 setTransform:&v37];
  }
  uint64_t v18 = qword_1004C7A58;
  long long v19 = *(void **)(a1 + qword_1004C7A58);
  if (v19)
  {
    id v20 = [v19 layer];
    uint64_t v37 = v36;
    uint64_t v38 = v34;
    uint64_t v39 = v32;
    uint64_t v40 = v30;
    uint64_t v41 = v35;
    uint64_t v42 = v33;
    uint64_t v43 = v31;
    uint64_t v44 = v29;
    uint64_t v45 = v7;
    uint64_t v46 = v8;
    uint64_t v47 = v9;
    uint64_t v48 = v11;
    uint64_t v49 = v10;
    uint64_t v50 = v12;
    uint64_t v51 = v13;
    uint64_t v52 = v14;
    [v20 setTransform:&v37];
  }
  long long v21 = *(void **)(a1 + v15);
  if (v21)
  {
    id v22 = v21;
    [v22 frame];
    [v22 setFrame:a3, a4];
  }
  uint64_t v23 = *(void **)(a1 + v18);
  if (v23)
  {
    id v24 = v23;
    [v24 frame];
    [v24 setFrame:a5, a6];
  }
}

double sub_10002F980()
{
  uint64_t v1 = *(void **)&v0[qword_1004C7A68];
  if (!v1) {
    return 0.0;
  }
  id v2 = self;
  id v3 = v1;
  id v4 = [v2 sharedApplication];
  id v5 = [v4 userInterfaceLayoutDirection];

  if (v5 == (id)1)
  {
    if (qword_1004C2E80 != -1) {
      swift_once();
    }
    double v6 = *(double *)&qword_1004F8660;
  }
  else
  {
    [v0 frame];
    double v8 = v7;
    [v3 frame];
    double v9 = v8 - CGRectGetWidth(v11);
    if (qword_1004C2E80 != -1) {
      swift_once();
    }
    double v6 = v9 - *(double *)&qword_1004F8660;
  }
  [v0 frame];
  CGRectGetHeight(v12);
  if (qword_1004C2E70 != -1) {
    swift_once();
  }
  [v3 frame];
  CGRectGetHeight(v13);

  return v6;
}

id sub_10002FB3C()
{
  [v0 frame];
  double v2 = v1;
  id result = [v0 superview];
  if (result)
  {
    id v4 = result;
    [result bounds];
    CGFloat v6 = v5;
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    CGFloat v12 = v11;

    v15.origin.x = v6;
    v15.origin.y = v8;
    v15.size.width = v10;
    v15.size.height = v12;
    double MaxY = CGRectGetMaxY(v15);
    return [v0 setFrame:0.0, 0.0, v2, MaxY];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10002FC08()
{
  id v1 = [self smallShutterButton];
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + qword_1004C7A68);
    *(void *)(v0 + qword_1004C7A68) = v1;
  }
  else
  {
    __break(1u);
  }
  return _objc_release_x1(v1, v2);
}

uint64_t sub_10002FC68()
{
  [v0 bounds];
  double v2 = v1;
  if (qword_1004C2E78 != -1) {
    swift_once();
  }
  double v3 = *(double *)&qword_1004F8658;
  [v0 bounds];
  double Height = CGRectGetHeight(v14);
  if (qword_1004C2E70 != -1) {
    swift_once();
  }
  double v5 = (v2 - v3) * 0.5;
  double v6 = Height - *(double *)&qword_1004F8650;
  double v7 = *(double *)&qword_1004F8658;
  double v8 = v6 - *(double *)&qword_1004F8658 * 0.5;
  id v9 = objc_allocWithZone((Class)type metadata accessor for EditButton());
  CGFloat v10 = sub_10008D480(0, v5, v8, v7, v7);
  uint64_t v11 = *(void *)&v0[qword_1004C7A48];
  *(void *)&v0[qword_1004C7A48] = v10;

  return _objc_release_x1(v10, v11);
}

uint64_t sub_10002FDA0()
{
  double v1 = sub_10002F55C();
  id v3 = [objc_allocWithZone((Class)type metadata accessor for DeleteButton()) initWithFrame:v1, v2, 80.0, 47.0];
  uint64_t v4 = *(void *)(v0 + qword_1004C7A58);
  *(void *)(v0 + qword_1004C7A58) = v3;

  return _objc_release_x1(v3, v4);
}

uint64_t sub_10002FE20()
{
  double v1 = sub_10002F358();
  double v3 = v2;
  id v4 = objc_allocWithZone((Class)type metadata accessor for UndoButton());
  sub_100203858(0, v1, v3, 80.0, 47.0);
  uint64_t v6 = *(void *)(v0 + qword_1004C7A50);
  *(void *)(v0 + qword_1004C7A50) = v5;

  return _objc_release_x1(v5, v6);
}

id sub_10002FEAC(void *a1, double a2, double a3, double a4, double a5)
{
  v10.receiver = a1;
  v10.super_class = (Class)swift_getObjectType();
  return [super initWithFrame:a2, a3, a4, a5];
}

id sub_10002FF1C(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType();
  return [super initWithCoder:a3];
}

uint64_t type metadata accessor for EditViewCompact()
{
  uint64_t result = qword_1004C49D0;
  if (!qword_1004C49D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10002FFB0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10002FFE8()
{
  return type metadata accessor for EditViewCompact();
}

uint64_t sub_10002FFF0()
{
  return _swift_deallocObject(v0, 184, 7);
}

void sub_100030028()
{
  sub_10002F760(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), *(double *)(v0 + 152), *(double *)(v0 + 160), *(double *)(v0 + 168), *(double *)(v0 + 176));
}

uint64_t sub_10003003C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10003004C()
{
  return swift_release();
}

uint64_t ARSCNView.viewport.getter()
{
  if (qword_1004C3238 != -1) {
    uint64_t result = swift_once();
  }
  if (*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80)) {
    __break(1u);
  }
  return result;
}

void ARSCNView.normalize(screenPoint:)()
{
  if (qword_1004C3238 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits;
  if (*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80))
  {
    __break(1u);
  }
  else
  {
    CGRectGetWidth(*(CGRect *)(v0 + 48));
    if ((*(unsigned char *)(v0 + 80) & 1) == 0)
    {
      CGRectGetHeight(*(CGRect *)(v0 + 48));
      return;
    }
  }
  __break(1u);
}

{
  uint64_t v0;

  CGPoint.init(_:)();
  if (qword_1004C3238 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits;
  if (*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80))
  {
    __break(1u);
  }
  else
  {
    CGRectGetWidth(*(CGRect *)(v0 + 48));
    if ((*(unsigned char *)(v0 + 80) & 1) == 0)
    {
      CGRectGetHeight(*(CGRect *)(v0 + 48));
      return;
    }
  }
  __break(1u);
}

id sub_100030230()
{
  id v1 = [v0 session];

  return v1;
}

uint64_t sub_100030268()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WeightedAverageDouble()
{
  return self;
}

ValueMetadata *type metadata accessor for MeasurementProposals()
{
  return &type metadata for MeasurementProposals;
}

id sub_1000302D4()
{
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  id result = (id)*((void *)&xmmword_1004F8000 + 1);
  if (*((void *)&xmmword_1004F8000 + 1))
  {
    id v1 = (id)*((void *)&xmmword_1004F8000 + 1);
    qword_1004F7F38 = Contexts.PrivateQueue.init(_:)();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100030354(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  if ((unint64_t)*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (!v6) {
      goto LABEL_29;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v6) {
      goto LABEL_29;
    }
  }
  if ((v5 & 0xC000000000000001) != 0) {
LABEL_35:
  }
    double v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  else {
    double v7 = *(id *)(v5 + 32);
  }
  double v8 = v7;
  if ((*(uint64_t (**)(void))((swift_isaMask & *v7) + 0xB8))() == a1 && v9 == a2)
  {
    unint64_t v12 = 0;
LABEL_13:
    swift_bridgeObjectRelease();

LABEL_14:
    swift_bridgeObjectRelease();
    CGRect v13 = (void *)sub_1000305A4(v12);

    return;
  }
  char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  if (v11)
  {
    unint64_t v12 = 0;
    goto LABEL_14;
  }
  if (v6 != 1)
  {
    uint64_t v14 = 5;
    do
    {
      unint64_t v12 = v14 - 4;
      CGRect v15 = (v5 & 0xC000000000000001) != 0
          ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(v5 + 8 * v14);
      double v8 = v15;
      if ((*(uint64_t (**)(void))((swift_isaMask & *v15) + 0xB8))() == a1 && v16 == a2) {
        goto LABEL_13;
      }
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_14;
      }
      uint64_t v19 = v14 - 3;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        goto LABEL_35;
      }
      ++v14;
    }
    while (v19 != v6);
  }
LABEL_29:

  swift_bridgeObjectRelease();
}

uint64_t sub_1000305A4(unint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v1 = v3;
  if (!result || (v3 & 0x8000000000000000) != 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t result = sub_100030C14(v3);
    unint64_t v3 = result;
    unint64_t *v1 = result;
  }
  unint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = v5 - 1;
    uint64_t v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 32;
    uint64_t v8 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
    memmove((void *)v7, (const void *)(v7 + 8), 8 * (v5 - 1 - a1));
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    specialized Array._endMutation()();
    return v8;
  }
  return result;
}

uint64_t sub_10003063C(unint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100030C00(v3);
    unint64_t v3 = (void *)result;
  }
  unint64_t v5 = v3[2];
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = v5 - 1;
    uint64_t v7 = &v3[2 * a1];
    uint64_t v8 = v7[4];
    memmove(v7 + 4, v7 + 6, 16 * (v5 - 1 - a1));
    v3[2] = v6;
    unint64_t *v1 = v3;
    return v8;
  }
  return result;
}

uint64_t sub_1000306C8(unint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v1 = v3;
  if (!result || (v3 & 0x8000000000000000) != 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t result = sub_100030C14(v3);
    unint64_t v3 = result;
    unint64_t *v1 = result;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v5 + 8 * a1;
    uint64_t v9 = *(void *)(v8 + 32);
    memmove((void *)(v8 + 32), (const void *)(v8 + 40), 8 * (v6 - 1 - a1));
    *(void *)(v5 + 16) = v7;
    specialized Array._endMutation()();
    return v9;
  }
  return result;
}

size_t sub_100030760@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  size_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    size_t result = sub_100030C90(v5);
    uint64_t v5 = (void *)result;
  }
  unint64_t v7 = v5[2];
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    uint64_t v9 = *(void *)(type metadata accessor for SpatialPlattersHistoryItem() - 8);
    uint64_t v10 = *(void *)(v9 + 72);
    unint64_t v11 = (unint64_t)v5
        + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
        + v10 * a1;
    size_t result = sub_100030CCC(v11, a2);
    if (v10 > 0 || v11 >= v11 + v10 + v10 * (v8 - a1))
    {
      size_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v10)
    {
      size_t result = swift_arrayInitWithTakeBackToFront();
    }
    v5[2] = v8;
    *uint64_t v2 = v5;
  }
  return result;
}

uint64_t sub_100030880(unint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100030CB8(v3);
    uint64_t v3 = result;
  }
  unint64_t v5 = *(void *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = v5 - 1;
    uint64_t v7 = v3 + 24 * a1;
    uint64_t v8 = *(void *)(v7 + 32);
    memmove((void *)(v7 + 32), (const void *)(v7 + 56), 24 * (v5 - 1 - a1));
    *(void *)(v3 + 16) = v6;
    uint64_t *v1 = v3;
    return v8;
  }
  return result;
}

uint64_t sub_100030924()
{
  uint64_t v1 = *v0;
  if (!((unint64_t)*v0 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v2) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t result = swift_bridgeObjectRelease_n();
    uint64_t *v0 = (uint64_t)_swiftEmptyArrayStorage;
    return result;
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        unint64_t v5 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        unint64_t v5 = *(id *)(v1 + 8 * v4 + 32);
      }
      unint64_t v6 = v5;
      ++v4;
      uint64_t v7 = (void (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *v5) + 0x178))();
      v7();

      swift_release();
    }
    while (v2 != v4);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

id sub_100030A60@<X0>(void *a1@<X8>)
{
  if (qword_1004C28F0 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1004F7F38;
  *a1 = qword_1004F7F38;

  return v2;
}

uint64_t sub_100030ACC(uint64_t *a1, uint64_t *a2)
{
  return sub_1000858D8(*a1, *a2);
}

unint64_t sub_100030ADC()
{
  unint64_t result = qword_1004C4E70;
  if (!qword_1004C4E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C4E70);
  }
  return result;
}

unint64_t sub_100030B30(uint64_t a1)
{
  unint64_t result = sub_100030B58();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100030B58()
{
  unint64_t result = qword_1004C4EA0;
  if (!qword_1004C4EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C4EA0);
  }
  return result;
}

size_t sub_100030BB0(void *a1)
{
  return sub_10006E5E0(0, a1[2], 0, a1);
}

double *sub_100030BC4(uint64_t a1)
{
  return sub_10006E600(0, *(void *)(a1 + 16), 0, a1);
}

char *sub_100030BD8(uint64_t a1)
{
  return sub_10006E184(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_100030BEC(uint64_t a1)
{
  return sub_10006E280(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_100030C00(void *a1)
{
  return sub_10006E398(0, a1[2], 0, a1);
}

uint64_t sub_100030C14(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

size_t sub_100030C90(void *a1)
{
  return sub_10006F504(0, a1[2], 0, a1);
}

double *sub_100030CA4(uint64_t a1)
{
  return sub_10006F744(0, *(void *)(a1 + 16), 0, (double *)a1);
}

double *sub_100030CB8(uint64_t a1)
{
  return sub_10006FC5C(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100030CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SpatialPlattersHistoryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100030D30@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100035374(*a1);
  *a2 = result;
  return result;
}

void sub_100030D5C(void *a1@<X8>)
{
  *a1 = *v1;
}

char *sub_100030D68(uint64_t a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, __n128 a9)
{
  uint64_t v10 = v9;
  ObjectType = (objc_class *)swift_getObjectType();
  unint64_t v12 = v10;
  id v13 = sub_1001B4A50(7);
  [v13 copy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100035334();
  if (swift_dynamicCast()) {
    id v14 = v118;
  }
  else {
    id v14 = [objc_allocWithZone((Class)SCNMaterial) init];
  }
  *(void *)&v12[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD0Material] = v14;
  id v15 = sub_1001B4A50(7);
  [v15 copy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  if (swift_dynamicCast()) {
    id v16 = v118;
  }
  else {
    id v16 = [objc_allocWithZone((Class)SCNMaterial) init];
  }
  *(void *)&v12[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1Material] = v16;
  id v17 = sub_1001B4A50(7);
  [v17 copy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  if (swift_dynamicCast()) {
    id v18 = v118;
  }
  else {
    id v18 = [objc_allocWithZone((Class)SCNMaterial) init];
  }
  *(void *)&v12[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD2Material] = v18;
  id v19 = sub_1001B4A50(7);
  [v19 copy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  if (swift_dynamicCast()) {
    id v20 = v118;
  }
  else {
    id v20 = [objc_allocWithZone((Class)SCNMaterial) init];
  }
  *(void *)&v12[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD3Material] = v20;
  uint64_t v21 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD0;
  *(void *)&v12[v21] = [objc_allocWithZone((Class)SCNNode) init];
  uint64_t v22 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1;
  *(void *)&v12[v22] = [objc_allocWithZone((Class)SCNNode) init];
  uint64_t v23 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD2;
  *(void *)&v12[v23] = [objc_allocWithZone((Class)SCNNode) init];
  uint64_t v24 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD3;
  *(void *)&v12[v24] = [objc_allocWithZone((Class)SCNNode) init];
  v12[OBJC_IVAR____TtC7Measure19LineDivisionsRender_isOnVerticalGuide] = 0;
  v12[OBJC_IVAR____TtC7Measure19LineDivisionsRender_showState] = 0;
  uint64_t v25 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_state;
  *(void *)&v12[OBJC_IVAR____TtC7Measure19LineDivisionsRender_state] = static MeasureObjectState.default;
  *(_DWORD *)&v12[OBJC_IVAR____TtC7Measure19LineDivisionsRender_lastNormTEnter] = 0;
  *(_DWORD *)&v12[OBJC_IVAR____TtC7Measure19LineDivisionsRender_lastNormTExit] = 0;
  if (qword_1004C2D08 != -1) {
    swift_once();
  }
  BOOL v26 = byte_1004F8531 == 0;
  float v27 = -0.07;
  if (byte_1004F8531) {
    float v27 = -0.023;
  }
  *(float *)&v12[OBJC_IVAR____TtC7Measure19LineDivisionsRender_numbersRevealOffset] = v27;
  v12[OBJC_IVAR____TtC7Measure19LineDivisionsRender_isOcclusionInitialized] = 0;
  *(void *)&v12[v25] = a1;
  double v28 = (__n128 *)&v12[OBJC_IVAR____TtC7Measure19LineDivisionsRender_endTransforms];
  *double v28 = a2;
  v28[1] = a3;
  v28[2] = a4;
  v28[3] = a5;
  v28[4] = a6;
  v28[5] = a7;
  v28[6] = a8;
  v28[7] = a9;
  double v29 = 0.0180000011;
  if (!v26) {
    double v29 = 0.0150000006;
  }
  double v30 = 0.0450000018;
  if (v26) {
    double v30 = 0.0594000027;
  }
  uint64_t v31 = (double *)&v12[OBJC_IVAR____TtC7Measure19LineDivisionsRender_markerWidth];
  *uint64_t v31 = v29;
  v31[1] = v29 * 1.5;
  v31[2] = v29 * 2.5;
  _OWORD v31[3] = v30;
  if (v26) {
    double v32 = 0.0594000027;
  }
  else {
    double v32 = v29 * 2.5;
  }
  if (v26) {
    unsigned int v33 = 0;
  }
  else {
    unsigned int v33 = -1;
  }
  *(int8x16_t *)&v12[OBJC_IVAR____TtC7Measure19LineDivisionsRender_increments] = vbslq_s8((int8x16_t)vdupq_n_s32(v33), (int8x16_t)xmmword_1003F9A20, (int8x16_t)xmmword_1003F9A10);
  v12[OBJC_IVAR____TtC7Measure19LineDivisionsRender_isClosestLine] = 0;
  *(float *)&int v34 = v32 * 0.5;
  id v35 = objc_allocWithZone((Class)type metadata accessor for LineDivisionsNumbers());
  uint64_t v43 = sub_100080164(a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t)v35, v36, v37, v38, v39, v40, v41, v42, v34);
  *(void *)&v12[OBJC_IVAR____TtC7Measure19LineDivisionsRender_numbers] = v43;
  simd_float4 v116 = matrix_identity_float4x4.columns[0];
  simd_float4 v112 = matrix_identity_float4x4.columns[2];
  simd_float4 v114 = matrix_identity_float4x4.columns[1];
  simd_float4 v110 = matrix_identity_float4x4.columns[3];
  [v43 setSimdTransform:];
  id v44 = objc_allocWithZone((Class)type metadata accessor for LineDivisionsEndNumber());
  uint64_t v45 = sub_1001FE3FC(a2, a3, a4, a5, a6, a7, a8, a9);
  *(void *)&v12[OBJC_IVAR____TtC7Measure19LineDivisionsRender_endNumber] = v45;
  uint64_t v46 = v45;
  [v46 setSimdTransform:*(double *)v116.i64, *(double *)v114.i64, *(double *)v112.i64, *(double *)v110.i64];

  v117.receiver = v12;
  v117.super_class = ObjectType;
  uint64_t v47 = (char *)[super init];
  [v47 setSimdTransform:*(double *)v116.i64, *(double *)v114.i64, *(double *)v112.i64, *(double *)v110.i64];
  uint64_t v107 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD0;
  [*(id *)&v47[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD0] setSimdTransform:*(double *)v116.i64, *(double *)v114.i64, *(double *)v112.i64, *(double *)v110.i64];
  uint64_t v109 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1;
  [*(id *)&v47[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1] setSimdTransform:*(double *)v116.i64, *(double *)v114.i64, *(double *)v112.i64, *(double *)v110.i64];
  uint64_t v48 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD2;
  [*(id *)&v47[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD2] setSimdTransform:*(double *)v116.i64, *(double *)v114.i64, *(double *)v112.i64, *(double *)v110.i64];
  uint64_t v49 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD3;
  [*(id *)&v47[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD3] setSimdTransform:*(double *)v116.i64, *(double *)v114.i64, *(double *)v112.i64, *(double *)v110.i64];
  uint64_t v115 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD0Material;
  uint64_t v50 = (float *)&v47[OBJC_IVAR____TtC7Measure19LineDivisionsRender_increments];
  id v51 = *(id *)&v47[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD0Material];
  Class isa = Float._bridgeToObjectiveC()().super.super.isa;
  NSString v53 = String._bridgeToObjectiveC()();
  [v51 setValue:isa forKeyPath:v53];

  uint64_t v113 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1Material;
  id v54 = *(id *)&v47[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1Material];
  Class v55 = Float._bridgeToObjectiveC()().super.super.isa;
  NSString v56 = String._bridgeToObjectiveC()();
  [v54 setValue:v55 forKeyPath:v56];

  uint64_t v111 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD2Material;
  id v57 = *(id *)&v47[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD2Material];
  Class v58 = Float._bridgeToObjectiveC()().super.super.isa;
  NSString v59 = String._bridgeToObjectiveC()();
  [v57 setValue:v58 forKeyPath:v59];

  uint64_t v105 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD3Material;
  id v60 = *(id *)&v47[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD3Material];
  Class v61 = Float._bridgeToObjectiveC()().super.super.isa;
  NSString v62 = String._bridgeToObjectiveC()();
  [v60 setValue:v61 forKeyPath:v62];

  if (qword_1004C2D10 != -1) {
    swift_once();
  }
  Swift::String v120 = &type metadata for CGFloat;
  v119[0] = *(float *)&dword_1004F8534;
  sub_100031A24((uint64_t)v119);
  sub_10001C9D8((uint64_t)v119);
  double v63 = 0.000999999931;
  if (byte_1004F8531) {
    double v63 = 0.00059999997;
  }
  Swift::String v120 = &type metadata for CGFloat;
  v119[0] = v63;
  sub_100031A24((uint64_t)v119);
  sub_10001C9D8((uint64_t)v119);
  if (qword_1004C2D40 != -1) {
    swift_once();
  }
  Swift::String v120 = &type metadata for CGFloat;
  v119[0] = (double)qword_1004F8550;
  sub_100031A24((uint64_t)v119);
  sub_10001C9D8((uint64_t)v119);
  id v64 = *(void **)&v47[v107];
  Swift::String v65 = (double *)&v47[OBJC_IVAR____TtC7Measure19LineDivisionsRender_markerWidth];
  double v66 = *(double *)&v47[OBJC_IVAR____TtC7Measure19LineDivisionsRender_markerWidth];
  NSString v67 = self;
  id v68 = v64;
  id v69 = [v67 boxWithWidth:v66 height:0.0 length:0.0 chamferRadius:0.0005];
  [v68 setGeometry:v69];

  double v70 = v65[1];
  id v71 = *(id *)&v47[v109];
  id v72 = [v67 boxWithWidth:v70 height:0.0 length:0.0 chamferRadius:0.0005];
  [v71 setGeometry:v72];

  double v73 = v65[2];
  id v74 = *(id *)&v47[v48];
  id v75 = [v67 boxWithWidth:v73 height:0.0 length:0.0 chamferRadius:0.0005];
  [v74 setGeometry:v75];

  double v76 = v65[3];
  id v77 = *(id *)&v47[v49];
  id v78 = [v67 boxWithWidth:v76 height:0.0 length:0.0 chamferRadius:0.0005];
  [v77 setGeometry:v78];

  id v79 = [*(id *)&v47[v107] geometry];
  if (v79)
  {
    NSString v80 = v79;
    [v79 setFirstMaterial:*(void *)&v47[v115]];
  }
  id v81 = [*(id *)&v47[v109] geometry];
  if (v81)
  {
    uint64_t v82 = v81;
    [v81 setFirstMaterial:*(void *)&v47[v113]];
  }
  id v83 = [*(id *)&v47[v48] geometry];
  if (v83)
  {
    NSString v84 = v83;
    [v83 setFirstMaterial:*(void *)&v47[v111]];
  }
  id v85 = [*(id *)&v47[v49] geometry];
  if (v85)
  {
    NSString v86 = v85;
    [v85 setFirstMaterial:*(void *)&v47[v105]];
  }
  sub_100031F6C();
  uint64_t v87 = self;
  [v87 begin];
  if (*v50 > 0.0)
  {
    *(float *)&double v88 = *v50;
    [v47 addChildNode:*(void *)&v47[v107] v88];
  }
  if (v50[1] > 0.0) {
    [v47 addChildNode:*(void *)&v47[v109]];
  }
  if (v50[2] > 0.0) {
    [v47 addChildNode:*(void *)&v47[v48]];
  }
  if (v50[3] > 0.0) {
    [v47 addChildNode:*(void *)&v47[v49]];
  }
  uint64_t v89 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_numbers;
  [v47 addChildNode:*(void *)&v47[OBJC_IVAR____TtC7Measure19LineDivisionsRender_numbers]];
  uint64_t v90 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_endNumber;
  [v47 addChildNode:*(void *)&v47[OBJC_IVAR____TtC7Measure19LineDivisionsRender_endNumber]];
  id v91 = *(id *)&v47[v107];
  [v91 scale];
  [v91 setScale:0.0];

  id v92 = *(id *)&v47[v109];
  [v92 scale];
  [v92 setScale:0.0];

  id v93 = *(id *)&v47[v48];
  [v93 scale];
  [v93 setScale:0.0];

  id v94 = *(id *)&v47[v49];
  [v94 scale];
  [v94 setScale:0.0];

  id v95 = *(id *)&v47[v89];
  [v95 position];
  [v95 setPosition:];

  id v96 = *(id *)&v47[v90];
  [v96 position];
  [v96 setPosition:];

  [v87 commit];
  return v47;
}

void sub_100031A24(uint64_t a1)
{
  uint64_t v3 = *(void **)((char *)v1 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD0Material);
  sub_1000352CC(a1, (uint64_t)v37);
  uint64_t v4 = v38;
  if (v38)
  {
    unint64_t v5 = sub_1000131D4(v37, v38);
    uint64_t v6 = *(void *)(v4 - 8);
    __chkstk_darwin(v5);
    uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    sub_100013218((uint64_t)v37);
  }
  else
  {
    uint64_t v9 = 0;
  }
  NSString v10 = String._bridgeToObjectiveC()();
  [v3 setValue:v9 forKeyPath:v10];
  swift_unknownObjectRelease();

  unint64_t v11 = *(void **)((char *)v1 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1Material);
  sub_1000352CC(a1, (uint64_t)v37);
  uint64_t v12 = v38;
  if (v38)
  {
    id v13 = sub_1000131D4(v37, v38);
    uint64_t v36 = &v35;
    uint64_t v14 = *(void *)(v12 - 8);
    __chkstk_darwin(v13);
    id v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v14 + 16))(v16);
    uint64_t v17 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v12);
    sub_100013218((uint64_t)v37);
  }
  else
  {
    uint64_t v17 = 0;
  }
  NSString v18 = String._bridgeToObjectiveC()();
  [v11 setValue:v17 forKeyPath:v18];
  swift_unknownObjectRelease();

  id v19 = *(void **)((char *)v1 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD2Material);
  sub_1000352CC(a1, (uint64_t)v37);
  uint64_t v20 = v38;
  if (v38)
  {
    uint64_t v21 = sub_1000131D4(v37, v38);
    uint64_t v36 = v1;
    uint64_t v22 = *(void *)(v20 - 8);
    __chkstk_darwin(v21);
    uint64_t v24 = (char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v22 + 16))(v24);
    uint64_t v25 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v20);
    uint64_t v1 = v36;
    sub_100013218((uint64_t)v37);
  }
  else
  {
    uint64_t v25 = 0;
  }
  NSString v26 = String._bridgeToObjectiveC()();
  [v19 setValue:v25 forKeyPath:v26];
  swift_unknownObjectRelease();

  float v27 = *(void **)((char *)v1 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD3Material);
  sub_1000352CC(a1, (uint64_t)v37);
  uint64_t v28 = v38;
  if (v38)
  {
    double v29 = sub_1000131D4(v37, v38);
    uint64_t v30 = *(void *)(v28 - 8);
    __chkstk_darwin(v29);
    double v32 = (char *)&v35 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v30 + 16))(v32);
    uint64_t v33 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v28);
    sub_100013218((uint64_t)v37);
  }
  else
  {
    uint64_t v33 = 0;
  }
  NSString v34 = String._bridgeToObjectiveC()();
  [v27 setValue:v33 forKeyPath:v34];
  swift_unknownObjectRelease();
}

void sub_100031F6C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD0Material);
  if (qword_1004C2D30 != -1) {
    swift_once();
  }
  Class isa = Float._bridgeToObjectiveC()().super.super.isa;
  NSString v3 = String._bridgeToObjectiveC()();
  [v1 setValue:isa forKeyPath:v3];

  Class v4 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  NSString v5 = String._bridgeToObjectiveC()();
  [v1 setValue:v4 forKeyPath:v5];

  Class v6 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  NSString v7 = String._bridgeToObjectiveC()();
  [v1 setValue:v6 forKeyPath:v7];

  if (qword_1004C2D38 != -1) {
    swift_once();
  }
  Class v8 = Float._bridgeToObjectiveC()().super.super.isa;
  NSString v9 = String._bridgeToObjectiveC()();
  [v1 setValue:v8 forKeyPath:v9];

  if (qword_1004C2D40 != -1) {
    swift_once();
  }
  Class v10 = Int._bridgeToObjectiveC()().super.super.isa;
  NSString v11 = String._bridgeToObjectiveC()();
  [v1 setValue:v10 forKeyPath:v11];

  Class v12 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  NSString v13 = String._bridgeToObjectiveC()();
  [v1 setValue:v12 forKeyPath:v13];

  Class v14 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  NSString v15 = String._bridgeToObjectiveC()();
  [v1 setValue:v14 forKeyPath:v15];

  if (qword_1004C2D08 != -1) {
    swift_once();
  }
  if ((byte_1004F8531 & 1) == 0)
  {
    id v16 = *(void **)(v0 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1Material);
    Class v17 = Float._bridgeToObjectiveC()().super.super.isa;
    NSString v18 = String._bridgeToObjectiveC()();
    [v16 setValue:v17 forKeyPath:v18];

    Class v19 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    NSString v20 = String._bridgeToObjectiveC()();
    [v16 setValue:v19 forKeyPath:v20];

    Class v21 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    NSString v22 = String._bridgeToObjectiveC()();
    [v16 setValue:v21 forKeyPath:v22];

    Class v23 = Float._bridgeToObjectiveC()().super.super.isa;
    NSString v24 = String._bridgeToObjectiveC()();
    [v16 setValue:v23 forKeyPath:v24];

    Class v25 = Int._bridgeToObjectiveC()().super.super.isa;
    NSString v26 = String._bridgeToObjectiveC()();
    [v16 setValue:v25 forKeyPath:v26];

    Class v27 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    NSString v28 = String._bridgeToObjectiveC()();
    [v16 setValue:v27 forKeyPath:v28];

    Class v29 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    id v30 = String._bridgeToObjectiveC()();
    [v16 setValue:v29 forKeyPath:v30];
  }
}

void sub_1000324C4()
{
  uint64_t v1 = v0;
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v2 = swift_allocObject();
  NSString v3 = *(void **)&v0[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD0Material];
  *(_OWORD *)(v2 + 16) = xmmword_1003F9450;
  Class v4 = *(void **)&v0[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1Material];
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v4;
  NSString v5 = *(void **)&v0[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD2Material];
  Class v6 = *(void **)&v0[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD3Material];
  *(void *)(v2 + 48) = v5;
  *(void *)(v2 + 56) = v6;
  uint64_t v57 = v2;
  specialized Array._endMutation()();
  unint64_t v7 = v57;
  Class v8 = self;
  id v9 = v3;
  id v10 = v4;
  id v11 = v5;
  id v12 = v6;
  if (![v8 jasperAvailable]
    || (id v52 = self,
        id v13 = [v52 standardUserDefaults],
        unsigned int v14 = [v13 isLineOcclusionEnabled],
        v13,
        !v14))
  {
    goto LABEL_25;
  }
  uint64_t v15 = *(void *)MeasureCore.shared.unsafeMutableAddressor();
  swift_beginAccess();
  if (!*(void *)(v15 + 112))
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v50 = *(void *)(v15 + 112);
  swift_retain();
  id v16 = [v52 standardUserDefaults];
  swift_getKeyPath();
  if (qword_1004C29D8 != -1) {
LABEL_28:
  }
    swift_once();
  Class v17 = (void *)*((void *)&xmmword_1004F8000 + 1);
  if (!*((void *)&xmmword_1004F8000 + 1)) {
    goto LABEL_33;
  }
  NSString v18 = (void *)Contexts.PrivateQueue.init(_:)();
  uint64_t v19 = swift_allocObject();
  uint64_t v49 = v1;
  swift_unknownObjectWeakInit();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  *(void *)(v20 + 24) = v7;
  id v21 = v17;
  swift_bridgeObjectRetain();
  NSUserDefaults.performOnChange<A>(to:on:action:)();

  swift_release();
  swift_release();
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_8;
    }
LABEL_30:
    swift_release();
    swift_bridgeObjectRelease();
    v49[OBJC_IVAR____TtC7Measure19LineDivisionsRender_isOcclusionInitialized] = 1;
    return;
  }
  uint64_t v22 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v22) {
    goto LABEL_30;
  }
LABEL_8:
  Class v23 = (uint64_t *)(v50 + 208);
  swift_beginAccess();
  uint64_t v24 = 4;
  uint64_t v51 = v22;
  while (1)
  {
    id v16 = (id)(v24 - 4);
    if ((v7 & 0xC000000000000001) != 0) {
      Class v29 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      Class v29 = *(id *)(v7 + 8 * v24);
    }
    uint64_t v1 = v29;
    uint64_t v30 = v24 - 3;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (qword_1004C2FC0 != -1) {
      swift_once();
    }
    UIColor.rgba.getter();
    long long v55 = 0u;
    long long v56 = 0u;
    long long v54 = 0u;
    if (!*v23) {
      break;
    }
    swift_retain();
    ADProcessor.transformer.getter();
    swift_release();
    Transformer.clipToCameraNormalized.getter();
    swift_release();
    simd_float3x3.copy(from:)();
    id v31 = [v52 standardUserDefaults];
    [v31 isLineOcclusionEnabled];

    Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
    NSString v33 = String._bridgeToObjectiveC()();
    [v1 setValue:isa forKeyPath:v33];

    SCNVector4.init(_:_:_:_:)();
    Class v34 = SCNVector4._bridgeToObjectiveC()().super.isa;
    NSString v35 = String._bridgeToObjectiveC()();
    [v1 setValue:v34 forKeyPath:v35];

    Class v36 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    NSString v37 = String._bridgeToObjectiveC()();
    [v1 setValue:v36 forKeyPath:v37];

    SCNVector3.init(_:)();
    Class v38 = SCNVector3._bridgeToObjectiveC()().super.isa;
    NSString v39 = String._bridgeToObjectiveC()();
    [v1 setValue:v38 forKey:v39];

    SCNVector3.init(_:)();
    Class v40 = SCNVector3._bridgeToObjectiveC()().super.isa;
    NSString v41 = String._bridgeToObjectiveC()();
    [v1 setValue:v40 forKey:v41];

    SCNVector3.init(_:)();
    Class v42 = SCNVector3._bridgeToObjectiveC()().super.isa;
    NSString v43 = String._bridgeToObjectiveC()();
    [v1 setValue:v42 forKey:v43];

    Class v44 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    NSString v45 = String._bridgeToObjectiveC()();
    [v1 setValue:v44 forKeyPath:v45];

    Class v46 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    NSString v47 = String._bridgeToObjectiveC()();
    [v1 setValue:v46 forKeyPath:v47];

    uint64_t v48 = *v23;
    if (!*v23) {
      goto LABEL_32;
    }
    swift_beginAccess();
    if (*(unsigned char *)(v48 + 242) == 1)
    {
      swift_beginAccess();
      uint64_t v25 = *(void *)(v48 + 256);
      if (!v25) {
        goto LABEL_11;
      }
      swift_unknownObjectRetain_n();
    }
    else
    {
      swift_retain();
      uint64_t v25 = ADProcessor.outputDepthTexture.getter();
      swift_release();
      swift_unknownObjectRetain();
    }
    v53[3] = swift_getObjectType();
    v53[0] = v25;
    swift_unknownObjectRetain();
    uint64_t v26 = _bridgeAnythingToObjectiveC<A>(_:)();
    id v27 = [self materialPropertyWithContents:v26];
    swift_unknownObjectRelease();
    sub_100013218((uint64_t)v53);
    NSString v28 = String._bridgeToObjectiveC()();
    [v1 setValue:v27 forKey:v28];
    swift_unknownObjectRelease();

    uint64_t v22 = v51;
LABEL_11:
    [v1 setBlendMode:6 v49];

    swift_unknownObjectRelease();
    ++v24;
    if (v30 == v22) {
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

void *sub_100032DB4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  swift_beginAccess();
  unint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {

    if (a3 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
      uint64_t v5 = (uint64_t)result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t result = (void *)swift_bridgeObjectRetain();
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v6 = 0;
        do
        {
          if ((a3 & 0xC000000000000001) != 0) {
            id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v7 = *(id *)(a3 + 8 * v6 + 32);
          }
          Class v8 = v7;
          ++v6;
          Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
          NSString v10 = String._bridgeToObjectiveC()();
          [v8 setValue:isa forKeyPath:v10];
        }
        while (v5 != v6);
      }
    }
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100032F24(char a1)
{
  uint64_t v2 = v1;
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_isOcclusionInitialized) & 1) == 0) {
    sub_1000324C4();
  }
  uint64_t v4 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_isClosestLine;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_isClosestLine) = a1 & 1;
  sub_100033088(1);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_numbers);
  uint64_t v6 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_state;
  uint64_t v7 = *(void *)(v5 + OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_state);
  *(void *)(v5 + OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_state) = *(void *)(v2
                                                                                     + OBJC_IVAR____TtC7Measure19LineDivisionsRender_state);
  sub_10007EDA0(v7);
  if (*(unsigned char *)(v2 + v4) == 1)
  {
    unint64_t v8 = *(void *)(v2 + v6);
    BOOL v9 = v8 > 5;
    unsigned int v10 = (0x25u >> v8) & 1;
    if (v9) {
      unsigned int v11 = 0;
    }
    else {
      unsigned int v11 = v10;
    }
  }
  else
  {
    unsigned int v11 = 0;
  }
  if ((*(unsigned char *)(v5 + OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_isOcclusionInitialized) & 1) == 0) {
    sub_100080784();
  }
  int v12 = *(unsigned __int8 *)(v5 + OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_shouldRenderNumbers);
  *(unsigned char *)(v5 + OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_shouldRenderNumbers) = v11;
  if (v11 != v12) {
    sub_10007FD00(0);
  }
  uint64_t v13 = *(void *)(v2 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_endNumber);
  if (*(unsigned char *)(v2 + v4) == 1)
  {
    unint64_t v14 = *(void *)(v2 + v6);
    BOOL v9 = v14 > 5;
    unsigned int v15 = (0x25u >> v14) & 1;
    if (v9) {
      unsigned int v16 = 0;
    }
    else {
      unsigned int v16 = v15;
    }
  }
  else
  {
    unsigned int v16 = 0;
  }
  if ((*(unsigned char *)(v13 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_isOcclusionInitialized) & 1) == 0) {
    sub_1001FE980();
  }
  char v17 = *(unsigned char *)(v13 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_shouldRenderNumbers);
  *(unsigned char *)(v13 + OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_shouldRenderNumbers) = v16;
  if ((v17 & 1) == 0 && v16 == 1) {
    sub_1001FF310();
  }
}

void sub_100033088(char a1)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_isClosestLine) == 1)
  {
    unint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_state);
    BOOL v3 = v2 > 5;
    unsigned int v4 = (0x25u >> v2) & 1;
    if (v3) {
      unsigned int v5 = 0;
    }
    else {
      unsigned int v5 = v4;
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  int v6 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_showState);
  if (v6 == 1)
  {
    if (v5) {
      return;
    }
    goto LABEL_20;
  }
  if ((v5 ^ (v6 != 2))) {
    return;
  }
  if (!v5)
  {
LABEL_20:
    float v8 = 0.0;
    if (a1)
    {
      if (qword_1004C2DF0 != -1)
      {
        uint64_t v13 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_showState;
        swift_once();
        int v6 = *(unsigned __int8 *)(v1 + v13);
      }
      float v8 = *(float *)&dword_1004F85EC;
    }
    uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_state);
    BOOL v10 = (unint64_t)(v9 - 3) < 2 || v9 == 7;
    float v11 = 0.2;
    if (!v10) {
      float v11 = 1.0;
    }
    float v12 = v8 * v11;
    if (v6 == 3 || v6 == 2)
    {
      sub_1000337A8(v12);
    }
    return;
  }
  float v7 = 0.0;
  if (a1)
  {
    if (qword_1004C2DE8 != -1)
    {
      uint64_t v14 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_showState;
      swift_once();
      int v6 = *(unsigned __int8 *)(v1 + v14);
    }
    float v7 = *(float *)&dword_1004F85E8;
  }
  if (v6 == 3 || !v6)
  {
    sub_100033224(v7);
  }
}

void sub_100033224(float a1)
{
  unint64_t v2 = v1;
  unsigned int v4 = *(unsigned char **)&v1[OBJC_IVAR____TtC7Measure19LineDivisionsRender_numbers];
  v4[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_shouldHide] = 0;
  float v5 = sub_100080DC8();
  BOOL v6 = (~LODWORD(v5) & 0x7F800000) == 0 || v5 < 0.0;
  uint64_t v7 = v5 > 1000.0 || v6;
  [v4 setHidden:v7];
  float v8 = *(unsigned char **)&v1[OBJC_IVAR____TtC7Measure19LineDivisionsRender_endNumber];
  v8[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_shouldHide] = 0;
  [v8 setHidden:sub_1001FF4FC() & 1];
  if (a1 <= 0.0)
  {
    Class v38 = *(void **)&v2[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD0];
    [v38 scale];
    LODWORD(v39) = 1.0;
    [v38 setScale:v39];
    Class v40 = *(void **)&v2[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1];
    [v40 scale];
    LODWORD(v41) = 1.0;
    [v40 setScale:v41];
    Class v42 = *(void **)&v2[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD2];
    [v42 scale];
    LODWORD(v43) = 1.0;
    [v42 setScale:v43];
    Class v44 = *(void **)&v2[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD3];
    [v44 scale];
    LODWORD(v45) = 1.0;
    [v44 setScale:v45];
    v2[OBJC_IVAR____TtC7Measure19LineDivisionsRender_showState] = 2;
  }
  else
  {
    [v2 removeAllActions];
    uint64_t v9 = *(void **)&v2[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD0];
    [v9 scale];
    LODWORD(v10) = 1.0;
    [v9 setScale:v10];
    if (qword_1004C2D08 != -1) {
      swift_once();
    }
    if ((byte_1004F8531 & 1) == 0)
    {
      float v11 = *(void **)&v2[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1];
      [v11 scale];
      LODWORD(v12) = 1.0;
      [v11 setScale:v12];
    }
    uint64_t v13 = self;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v2;
    *(float *)(v14 + 24) = a1;
    aBlock[4] = sub_100035734;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000EE160;
    aBlock[3] = &unk_100488A30;
    unsigned int v15 = _Block_copy(aBlock);
    unsigned int v16 = v2;
    swift_release();
    id v17 = [v13 customActionWithDuration:v15 actionBlock:a1];
    _Block_release(v15);
    sub_10007F7E4();
    float32x4_t v50 = v18;
    type metadata accessor for MeasureCamera();
    simd_float4x4.position.getter();
    static ComputedCameraProperties.shared.getter();
    static MeasureCamera.viewSpacePoint(fromWorldSpace:view:)();
    int8x16_t v19 = (int8x16_t)vmulq_f32(v50, (float32x4_t)xmmword_1003F9A60);
    int32x4_t v20 = (int32x4_t)vnegq_f32((float32x4_t)v19);
    int8x16_t v21 = (int8x16_t)vtrn2q_s32((int32x4_t)v19, vtrn1q_s32((int32x4_t)v19, v20));
    float32x4_t v48 = (float32x4_t)vextq_s8(v19, (int8x16_t)v20, 8uLL);
    float32x4_t v49 = (float32x4_t)vextq_s8(v21, v21, 8uLL);
    float32x4_t v23 = (float32x4_t)vrev64q_s32((int32x4_t)v19);
    v23.i32[0] = v20.i32[1];
    v23.i32[3] = v20.i32[2];
    float32x4_t v46 = v23;
    int8x16_t v24 = (int8x16_t)vmlaq_laneq_f32(vmlaq_n_f32(vmulq_lane_f32(v48, *(float32x2_t *)v22.f32, 1), v49, v22.f32[0]), v23, v22, 2);
    int32x4_t v25 = (int32x4_t)vnegq_f32((float32x4_t)v24);
    int8x16_t v26 = (int8x16_t)vtrn2q_s32((int32x4_t)v24, vtrn1q_s32((int32x4_t)v24, v25));
    float32x4_t v27 = (float32x4_t)vrev64q_s32((int32x4_t)v24);
    v27.i32[0] = v25.i32[1];
    v27.i32[3] = v25.i32[2];
    float32x4_t v47 = vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32((float32x4_t)v24, v50, 3), v27, v50, 2), vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8(v24, (int8x16_t)v25, 8uLL), *(float32x2_t *)v50.f32, 1), (float32x4_t)vextq_s8(v26, v26, 8uLL), v50.f32[0]));
    simd_float4x4.position.getter();
    static ComputedCameraProperties.shared.getter();
    static MeasureCamera.viewSpacePoint(fromWorldSpace:view:)();
    int32x4_t v29 = (int32x4_t)vmlaq_laneq_f32(vmlaq_n_f32(vmulq_lane_f32(v48, *(float32x2_t *)v28.f32, 1), v49, v28.f32[0]), v46, v28, 2);
    int32x4_t v30 = (int32x4_t)vnegq_f32((float32x4_t)v29);
    int8x16_t v31 = (int8x16_t)vtrn2q_s32(v29, vtrn1q_s32(v29, v30));
    float32x4_t v32 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v29, (int8x16_t)v30, 8uLL), *(float32x2_t *)v50.f32, 1), (float32x4_t)vextq_s8(v31, v31, 8uLL), v50.f32[0]);
    float32x4_t v33 = (float32x4_t)vrev64q_s32(v29);
    v33.i32[0] = v30.i32[1];
    v33.i32[3] = v30.i32[2];
    if (vsubq_f32(vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32((float32x4_t)v29, v50, 3), v33, v50, 2), v32), v47).f32[0] <= 0.0) {
      char v34 = 2;
    }
    else {
      char v34 = 3;
    }
    sub_10007F914(v34);
    v4[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_lastNumbersOrientation] = v34;
    sub_10007F02C();
    v16[OBJC_IVAR____TtC7Measure19LineDivisionsRender_showState] = 1;
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v16;
    v51[4] = sub_100035758;
    v51[5] = v35;
    v51[0] = _NSConcreteStackBlock;
    v51[1] = 1107296256;
    v51[2] = sub_100049AB4;
    v51[3] = &unk_100488A80;
    Class v36 = _Block_copy(v51);
    NSString v37 = v16;
    swift_release();
    [v37 runAction:v17 completionHandler:v36];
    _Block_release(v36);
  }
}

void sub_1000337A8(float a1)
{
  if (a1 <= 0.0)
  {
    float v11 = *(void **)&v1[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD0];
    [v11 scale];
    [v11 setScale:0.0];
    double v12 = *(void **)&v1[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1];
    [v12 scale];
    [v12 setScale:0.0];
    uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD2];
    [v13 scale];
    [v13 setScale:0.0];
    uint64_t v14 = *(void **)&v1[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD3];
    [v14 scale];
    [v14 setScale:0.0];
    v1[OBJC_IVAR____TtC7Measure19LineDivisionsRender_showState] = 0;
  }
  else
  {
    [v1 removeAllActions];
    BOOL v3 = self;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v1;
    *(float *)(v4 + 24) = a1;
    int8x16_t v19 = sub_100035770;
    uint64_t v20 = v4;
    unsigned int v15 = _NSConcreteStackBlock;
    uint64_t v16 = 1107296256;
    id v17 = sub_1000EE160;
    float32x4_t v18 = &unk_100488AD0;
    float v5 = _Block_copy(&v15);
    BOOL v6 = v1;
    swift_release();
    id v7 = [v3 customActionWithDuration:v5 actionBlock:a1];
    _Block_release(v5);
    v6[OBJC_IVAR____TtC7Measure19LineDivisionsRender_showState] = 3;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v6;
    int8x16_t v19 = sub_1000357B4;
    uint64_t v20 = v8;
    unsigned int v15 = _NSConcreteStackBlock;
    uint64_t v16 = 1107296256;
    id v17 = sub_100049AB4;
    float32x4_t v18 = &unk_100488B20;
    uint64_t v9 = _Block_copy(&v15);
    double v10 = v6;
    swift_release();
    [v10 runAction:v7 completionHandler:v9];
    _Block_release(v9);
  }
}

id sub_100033A40(double a1, float a2, uint64_t a3, uint64_t a4)
{
  float v5 = a1;
  float v6 = (float)(v5 / a2) + *(float *)(a4 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_lastNormTExit);
  float v7 = 1.0;
  if (v6 <= 1.0) {
    float v7 = v6;
  }
  if (v6 >= 0.0) {
    float v8 = v7;
  }
  else {
    float v8 = 0.0;
  }
  if (qword_1004C2D98 != -1) {
    swift_once();
  }
  float v9 = *(float *)&dword_1004F85C0;
  float v10 = v8 - *(float *)&dword_1004F85C0;
  if (qword_1004C2DC8 != -1)
  {
    swift_once();
    float v9 = *(float *)&dword_1004F85C0;
  }
  float v11 = v10 / (float)(*(float *)&dword_1004F85D8 - v9);
  float v12 = 1.0;
  if (v11 <= 1.0) {
    float v12 = v11;
  }
  if (v11 >= 0.0) {
    float v13 = v12;
  }
  else {
    float v13 = 0.0;
  }
  if (qword_1004C2D90 != -1) {
    swift_once();
  }
  float v14 = *(float *)&dword_1004F85BC;
  float v15 = v8 - *(float *)&dword_1004F85BC;
  if (qword_1004C2DC0 != -1)
  {
    swift_once();
    float v14 = *(float *)&dword_1004F85BC;
  }
  float v16 = v15 / (float)(*(float *)&dword_1004F85D4 - v14);
  float v17 = 1.0;
  if (v16 <= 1.0) {
    float v17 = v16;
  }
  if (v16 >= 0.0) {
    float v18 = v17;
  }
  else {
    float v18 = 0.0;
  }
  if (qword_1004C2D88 != -1) {
    swift_once();
  }
  if (qword_1004C2DB8 != -1) {
    swift_once();
  }
  if (qword_1004C2DA0 != -1) {
    swift_once();
  }
  if (qword_1004C2DD0 != -1) {
    swift_once();
  }
  if (qword_1004C2DA8 != -1) {
    swift_once();
  }
  if (qword_1004C2DD8 != -1) {
    swift_once();
  }
  if (qword_1004C2DB0 != -1) {
    swift_once();
  }
  if (qword_1004C2DE0 != -1) {
    swift_once();
  }
  int8x16_t v19 = *(void **)(a4 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD0Material);
  Class isa = Float._bridgeToObjectiveC()().super.super.isa;
  NSString v21 = String._bridgeToObjectiveC()();
  [v19 setValue:isa forKey:v21];

  if (qword_1004C2D08 != -1) {
    swift_once();
  }
  if (byte_1004F8531 == 1)
  {
    float32x4_t v22 = *(void **)(a4 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1);
    float v23 = 1.0 - (float)((float)(1.0 - v18) * (float)(1.0 - v18));
    [v22 scale];
    if (v23 <= v24) {
      float v23 = v24;
    }
    [v22 scale];
    *(float *)&double v25 = v23;
    [v22 setScale:v25];
    int8x16_t v26 = *(void **)(a4 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD2);
    [v26 scale];
    if (v13 > v27) {
      float v28 = v13;
    }
    else {
      float v28 = v27;
    }
  }
  else
  {
    int32x4_t v29 = *(void **)(a4 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1Material);
    Class v30 = Float._bridgeToObjectiveC()().super.super.isa;
    NSString v31 = String._bridgeToObjectiveC()();
    [v29 setValue:v30 forKey:v31];

    int8x16_t v26 = *(void **)(a4 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD2);
    float v28 = 1.0 - (float)((float)(1.0 - v18) * (float)(1.0 - v18));
    [v26 scale];
    if (v28 <= v32) {
      float v28 = v32;
    }
  }
  [v26 scale];
  *(float *)&double v33 = v28;
  [v26 setScale:v33];
  char v34 = *(void **)(a4 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD3);
  [v34 scale];
  if (v13 > v35) {
    float v36 = v13;
  }
  else {
    float v36 = v35;
  }
  [v34 scale];
  *(float *)&double v37 = v36;
  [v34 setScale:v37];
  Class v38 = *(void **)(a4 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_numbers);
  [v38 position];
  [v38 position];
  [v38 setPosition:];
  double v39 = *(char **)(a4 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_endNumber);
  [v39 position];
  [v39 position];
  [v39 setPosition:];
  Class v40 = *(void **)&v39[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_number];
  if (qword_1004C2D60 != -1) {
    swift_once();
  }
  * infix(_:_:)();
  id result = [v40 setScale:];
  *(float *)(a4 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_lastNormTEnter) = v8;
  return result;
}

id sub_100034180(double a1, float a2, uint64_t a3, uint64_t a4)
{
  float v5 = a1;
  float v6 = *(float *)(a4 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_lastNormTEnter) - (float)(v5 / a2);
  float v7 = 1.0;
  if (v6 <= 1.0) {
    float v7 = v6;
  }
  if (v6 >= 0.0) {
    float v8 = v7;
  }
  else {
    float v8 = 0.0;
  }
  if (qword_1004C2D98 != -1) {
    swift_once();
  }
  float v9 = *(float *)&dword_1004F85C0;
  float v10 = v8 - *(float *)&dword_1004F85C0;
  if (qword_1004C2DC8 != -1)
  {
    swift_once();
    float v9 = *(float *)&dword_1004F85C0;
  }
  float v11 = v10 / (float)(*(float *)&dword_1004F85D8 - v9);
  float v12 = 1.0;
  if (v11 <= 1.0) {
    float v12 = v11;
  }
  if (v11 >= 0.0) {
    float v13 = v12;
  }
  else {
    float v13 = 0.0;
  }
  if (qword_1004C2D90 != -1) {
    swift_once();
  }
  float v14 = *(float *)&dword_1004F85BC;
  float v15 = v8 - *(float *)&dword_1004F85BC;
  if (qword_1004C2DC0 != -1)
  {
    swift_once();
    float v14 = *(float *)&dword_1004F85BC;
  }
  float v16 = v15 / (float)(*(float *)&dword_1004F85D4 - v14);
  float v17 = 1.0;
  if (v16 <= 1.0) {
    float v17 = v16;
  }
  if (v16 >= 0.0) {
    float v18 = v17;
  }
  else {
    float v18 = 0.0;
  }
  if (qword_1004C2D88 != -1) {
    swift_once();
  }
  if (qword_1004C2DB8 != -1) {
    swift_once();
  }
  if (qword_1004C2DA0 != -1) {
    swift_once();
  }
  if (qword_1004C2DD0 != -1) {
    swift_once();
  }
  if (qword_1004C2DA8 != -1) {
    swift_once();
  }
  if (qword_1004C2DD8 != -1) {
    swift_once();
  }
  if (qword_1004C2DB0 != -1) {
    swift_once();
  }
  if (qword_1004C2DE0 != -1) {
    swift_once();
  }
  int8x16_t v19 = *(void **)(a4 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD0Material);
  Class isa = Float._bridgeToObjectiveC()().super.super.isa;
  NSString v21 = String._bridgeToObjectiveC()();
  [v19 setValue:isa forKey:v21];

  if (qword_1004C2D08 != -1) {
    swift_once();
  }
  if (byte_1004F8531 == 1)
  {
    float32x4_t v22 = *(void **)(a4 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1);
    float v23 = 1.0 - (float)((float)(1.0 - v18) * (float)(1.0 - v18));
    [v22 scale];
    if (v24 < v23) {
      float v23 = v24;
    }
    [v22 scale];
    *(float *)&double v25 = v23;
    [v22 setScale:v25];
    int8x16_t v26 = *(void **)(a4 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD2);
    [v26 scale];
    if (v27 >= v13) {
      float v28 = v13;
    }
    else {
      float v28 = v27;
    }
  }
  else
  {
    int32x4_t v29 = *(void **)(a4 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1Material);
    Class v30 = Float._bridgeToObjectiveC()().super.super.isa;
    NSString v31 = String._bridgeToObjectiveC()();
    [v29 setValue:v30 forKey:v31];

    int8x16_t v26 = *(void **)(a4 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD2);
    float v28 = 1.0 - (float)((float)(1.0 - v18) * (float)(1.0 - v18));
    [v26 scale];
    if (v32 < v28) {
      float v28 = v32;
    }
  }
  [v26 scale];
  *(float *)&double v33 = v28;
  [v26 setScale:v33];
  char v34 = *(void **)(a4 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD3);
  [v34 scale];
  if (v35 >= v13) {
    float v36 = v13;
  }
  else {
    float v36 = v35;
  }
  [v34 scale];
  *(float *)&double v37 = v36;
  [v34 setScale:v37];
  Class v38 = *(void **)(a4 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_numbers);
  [v38 position];
  [v38 position];
  [v38 setPosition:];
  double v39 = *(char **)(a4 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_endNumber);
  [v39 position];
  [v39 position];
  [v39 setPosition:];
  Class v40 = *(void **)&v39[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_number];
  if (qword_1004C2D60 != -1) {
    swift_once();
  }
  * infix(_:_:)();
  id result = [v40 setScale:];
  *(float *)(a4 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_lastNormTExit) = v8;
  return result;
}

id sub_1000348C0(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD0);
  [v2 scale];
  [v2 setScale:0.0];
  if (qword_1004C2D08 != -1) {
    swift_once();
  }
  if ((byte_1004F8531 & 1) == 0)
  {
    BOOL v3 = *(void **)(a1 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1);
    [v3 scale];
    [v3 setScale:0.0];
  }
  *(unsigned char *)(a1 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_showState) = 0;
  uint64_t v4 = *(unsigned char **)(a1 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_numbers);
  v4[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_shouldHide] = 1;
  *(float *)&double v5 = sub_100080DC8();
  [v4 setHidden:1 v5];
  float v6 = *(unsigned char **)(a1 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_endNumber);
  v6[OBJC_IVAR____TtC7Measure22LineDivisionsEndNumber_shouldHide] = 1;

  return [v6 setHidden:1];
}

id sub_100034A10(__n128 a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8)
{
  simd_float4x4.position.getter();
  SCNVector3.init(_:)();
  int v10 = v9;
  int v12 = v11;
  int v14 = v13;
  type metadata accessor for SCNVector3(0);
  uint64_t v16 = v15;
  uint64_t v40 = v15;
  int v37 = v10;
  int v38 = v12;
  int v39 = v14;
  sub_100031A24((uint64_t)&v37);
  sub_10001C9D8((uint64_t)&v37);
  simd_float4x4.position.getter();
  SCNVector3.init(_:)();
  uint64_t v40 = v16;
  int v37 = v17;
  int v38 = v18;
  int v39 = v19;
  sub_100031A24((uint64_t)&v37);
  sub_10001C9D8((uint64_t)&v37);
  uint64_t v20 = (__n128 *)(v8 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_endTransforms);
  *uint64_t v20 = a1;
  v20[1] = a2;
  v20[2] = a3;
  v20[3] = a4;
  v20[4] = a5;
  v20[5] = a6;
  v20[6] = a7;
  v20[7] = a8;
  uint64_t v21 = *(void *)(v8 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_numbers);
  float32x4_t v22 = (__n128 *)(v21 + OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_endTransforms);
  *float32x4_t v22 = a1;
  v22[1] = a2;
  v22[2] = a3;
  v22[3] = a4;
  v22[4] = a5;
  v22[5] = a6;
  v22[6] = a7;
  v22[7] = a8;
  float v23 = *(void **)(v21 + OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_divisionNumbersMaterial);
  SCNVector3.init(_:)();
  Class isa = SCNVector3._bridgeToObjectiveC()().super.isa;
  NSString v25 = String._bridgeToObjectiveC()();
  [v23 setValue:isa forKeyPath:v25];

  SCNVector3.init(_:)();
  Class v26 = SCNVector3._bridgeToObjectiveC()().super.isa;
  NSString v27 = String._bridgeToObjectiveC()();
  [v23 setValue:v26 forKeyPath:v27];

  return sub_1001FCFE8(*v20, v20[1], v20[2], v20[3], v20[4], v20[5], v20[6], v20[7]);
}

void sub_100034C08(float a1)
{
  float v3 = a1 * 10.0;
  if ((~LODWORD(v3) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v3 <= -9.2234e18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v3 >= 9.2234e18)
  {
LABEL_30:
    __break(1u);
    return;
  }
  uint64_t v4 = (uint64_t)v3;
  if ((uint64_t)v3 >= 30) {
    uint64_t v4 = 30;
  }
  if (v4 <= 1) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = v4;
  }
  id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD0), "geometry"));
  if (v6)
  {
    float v7 = v6;
    self;
    uint64_t v8 = (void *)swift_dynamicCastObjCClass();
    if (v8)
    {
      int v9 = v8;
      [v8 setLength:a1];
      [v9 setLengthSegmentCount:v5];
    }
  }
  id v10 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                              + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1), "geometry"));
  if (v10)
  {
    int v11 = v10;
    self;
    int v12 = (void *)swift_dynamicCastObjCClass();
    if (v12)
    {
      int v13 = v12;
      [v12 setLength:a1];
      [v13 setLengthSegmentCount:v5];
    }
  }
  id v14 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                              + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD2), "geometry"));
  if (v14)
  {
    uint64_t v15 = v14;
    self;
    uint64_t v16 = (void *)swift_dynamicCastObjCClass();
    if (v16)
    {
      int v17 = v16;
      [v16 setLength:a1];
      [v17 setLengthSegmentCount:v5];
    }
  }
  id v18 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                              + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD3), "geometry"));
  if (v18)
  {
    id v21 = v18;
    self;
    int v19 = (void *)swift_dynamicCastObjCClass();
    if (v19)
    {
      uint64_t v20 = v19;
      [v19 setLength:a1];
      [v20 setLengthSegmentCount:v5];
    }
  }
}

void sub_100034E78(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD0Material);
  id v6 = [v5 diffuse];
  [v6 setContents:a1];

  float v7 = *(void **)(v2 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1Material);
  id v8 = [v7 diffuse];
  [v8 setContents:a1];

  int v9 = *(void **)(v2 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD2Material);
  id v10 = [v9 diffuse];
  [v10 setContents:a1];

  int v11 = *(void **)(v2 + OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD3Material);
  id v12 = [v11 diffuse];
  [v12 setContents:a1];

  id v13 = [v5 emission];
  [v13 setContents:a2];

  id v14 = [v7 emission];
  [v14 setContents:a2];

  id v15 = [v9 emission];
  [v15 setContents:a2];

  id v16 = [v11 emission];
  [v16 setContents:a2];
}

uint64_t type metadata accessor for LineDivisionsRender()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for LineDivisionsRender.ShowState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    void *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003523CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LineDivisionsRender.ShowState()
{
  return &type metadata for LineDivisionsRender.ShowState;
}

unint64_t sub_100035278()
{
  unint64_t result = qword_1004C4F78;
  if (!qword_1004C4F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C4F78);
  }
  return result;
}

uint64_t sub_1000352CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894((uint64_t *)&unk_1004C7180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100035334()
{
  unint64_t result = qword_1004D2470;
  if (!qword_1004D2470)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1004D2470);
  }
  return result;
}

unint64_t sub_100035374(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

void sub_100035384()
{
  id v1 = sub_1001B4A50(7);
  [v1 copy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100035334();
  if (swift_dynamicCast()) {
    id v2 = v14;
  }
  else {
    id v2 = [objc_allocWithZone((Class)SCNMaterial) init];
  }
  *(void *)&v0[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD0Material] = v2;
  id v3 = sub_1001B4A50(7);
  [v3 copy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  if (swift_dynamicCast()) {
    id v4 = v14;
  }
  else {
    id v4 = [objc_allocWithZone((Class)SCNMaterial) init];
  }
  *(void *)&v0[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1Material] = v4;
  id v5 = sub_1001B4A50(7);
  [v5 copy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  if (swift_dynamicCast()) {
    id v6 = v14;
  }
  else {
    id v6 = [objc_allocWithZone((Class)SCNMaterial) init];
  }
  *(void *)&v0[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD2Material] = v6;
  id v7 = sub_1001B4A50(7);
  [v7 copy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  if (swift_dynamicCast()) {
    id v8 = v14;
  }
  else {
    id v8 = [objc_allocWithZone((Class)SCNMaterial) init];
  }
  *(void *)&v0[OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD3Material] = v8;
  uint64_t v9 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD0;
  *(void *)&v0[v9] = [objc_allocWithZone((Class)SCNNode) init];
  uint64_t v10 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD1;
  *(void *)&v0[v10] = [objc_allocWithZone((Class)SCNNode) init];
  uint64_t v11 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD2;
  *(void *)&v0[v11] = [objc_allocWithZone((Class)SCNNode) init];
  uint64_t v12 = OBJC_IVAR____TtC7Measure19LineDivisionsRender_divisionsLOD3;
  *(void *)&v0[v12] = [objc_allocWithZone((Class)SCNNode) init];
  v0[OBJC_IVAR____TtC7Measure19LineDivisionsRender_isOnVerticalGuide] = 0;
  v0[OBJC_IVAR____TtC7Measure19LineDivisionsRender_showState] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure19LineDivisionsRender_state] = static MeasureObjectState.default;
  *(_DWORD *)&v0[OBJC_IVAR____TtC7Measure19LineDivisionsRender_lastNormTEnter] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC7Measure19LineDivisionsRender_lastNormTExit] = 0;
  if (qword_1004C2D08 != -1) {
    swift_once();
  }
  float v13 = -0.07;
  if (byte_1004F8531) {
    float v13 = -0.023;
  }
  *(float *)&v0[OBJC_IVAR____TtC7Measure19LineDivisionsRender_numbersRevealOffset] = v13;
  v0[OBJC_IVAR____TtC7Measure19LineDivisionsRender_isOcclusionInitialized] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1000356FC()
{
  return _swift_deallocObject(v0, 28, 7);
}

id sub_100035734(uint64_t a1, double a2)
{
  return sub_100033A40(a2, *(float *)(v2 + 24), a1, *(void *)(v2 + 16));
}

uint64_t sub_100035740(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100035750()
{
  return swift_release();
}

void sub_100035758()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Measure19LineDivisionsRender_showState) = 2;
}

id sub_100035770(uint64_t a1, double a2)
{
  return sub_100034180(a2, *(float *)(v2 + 24), a1, *(void *)(v2 + 16));
}

uint64_t sub_10003577C()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000357B4()
{
  return sub_1000348C0(*(void *)(v0 + 16));
}

const char *sub_1000357BC()
{
  return "isLineOcclusionAlphaBlendingEnabled";
}

uint64_t sub_1000357D0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100035808()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void *sub_100035848(uint64_t a1)
{
  return sub_100032DB4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

ValueMetadata *type metadata accessor for DeviceOrientationState()
{
  return &type metadata for DeviceOrientationState;
}

uint64_t sub_100035880()
{
  uint64_t result = Contexts.UIKit.init()();
  qword_1004F7F40 = result;
  return result;
}

id sub_1000358A0@<X0>(void *a1@<X8>)
{
  if (qword_1004C28F8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1004F7F40;
  *a1 = qword_1004F7F40;

  return v2;
}

unint64_t sub_10003590C(uint64_t a1)
{
  unint64_t result = sub_100035934();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100035934()
{
  unint64_t result = qword_1004C4FA8;
  if (!qword_1004C4FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C4FA8);
  }
  return result;
}

id sub_100035988(uint64_t a1)
{
  return *(id *)(a1 + qword_1004C4FF8);
}

uint64_t sub_100035998(uint64_t a1, uint64_t a2)
{
  return sub_1000399B0(*(void **)a1, *(void **)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void **)(a2 + 8), *(unsigned char *)(a2 + 16));
}

id sub_1000359B4(id result)
{
  uint64_t v2 = *(void *)&v1[qword_1004C5088];
  if (!v1[qword_1004C5088 + 16])
  {
    if ((v2 & 1) == 0) {
      return sub_100035DA4((uint64_t)result);
    }
    return (id)sub_1000359EC(v1);
  }
  if (v1[qword_1004C5088 + 16] == 1 && (v2 & 1) != 0) {
    return (id)sub_1000359EC(v1);
  }
  return result;
}

uint64_t sub_1000359EC(void *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  id v3 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  uint64_t v20 = sub_1000399A0;
  uint64_t v21 = v2;
  id v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  id v18 = sub_100049AB4;
  int v19 = &unk_100488D20;
  id v4 = _Block_copy(&v16);
  id v5 = a1;
  swift_release();
  id v6 = [v3 initWithDuration:v4 dampingRatio:0.4 animations:0.9];
  _Block_release(v4);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  uint64_t v20 = sub_1000399A8;
  uint64_t v21 = v7;
  id v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  id v18 = sub_100036C40;
  int v19 = &unk_100488D70;
  id v8 = _Block_copy(&v16);
  uint64_t v9 = (char *)v5;
  id v10 = v6;
  swift_release();
  [v10 addCompletion:v8];
  _Block_release(v8);
  [v10 startAnimation];

  uint64_t v11 = &v9[qword_1004C5088];
  uint64_t v12 = *(void *)&v9[qword_1004C5088];
  uint64_t v13 = *(void *)&v9[qword_1004C5088 + 8];
  *(void *)uint64_t v11 = v6;
  *((void *)v11 + 1) = 0;
  char v14 = v11[16];
  v11[16] = 2;
  return sub_10003975C(v12, v13, v14);
}

id sub_100035BE4(void *a1)
{
  [a1 setAlpha:0.0];
  [a1 transform];
  CGFloat tx = t1.tx;
  CGFloat ty = t1.ty;
  long double v4 = atan2(t1.b, t1.a);
  CGAffineTransformMakeScale(&t1, 0.9, 0.9);
  long long v16 = *(_OWORD *)&t1.c;
  long long v18 = *(_OWORD *)&t1.a;
  CGFloat v5 = t1.tx;
  CGFloat v6 = t1.ty;
  CGAffineTransformMakeRotation(&t1, v4);
  long long v7 = *(_OWORD *)&t1.a;
  long long v8 = *(_OWORD *)&t1.c;
  long long v9 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.a = v18;
  *(_OWORD *)&t1.c = v16;
  t1.CGFloat tx = v5;
  t1.CGFloat ty = v6;
  *(_OWORD *)&t2.a = v7;
  *(_OWORD *)&t2.c = v8;
  *(_OWORD *)&t2.CGFloat tx = v9;
  CGAffineTransformConcat(&v20, &t1, &t2);
  long long v17 = *(_OWORD *)&v20.c;
  long long v19 = *(_OWORD *)&v20.a;
  CGFloat v10 = v20.tx;
  CGFloat v11 = v20.ty;
  CGAffineTransformMakeTranslation(&t1, tx, ty);
  long long v12 = *(_OWORD *)&t1.a;
  long long v13 = *(_OWORD *)&t1.c;
  long long v14 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.a = v19;
  *(_OWORD *)&t1.c = v17;
  t1.CGFloat tx = v10;
  t1.CGFloat ty = v11;
  *(_OWORD *)&t2.a = v12;
  *(_OWORD *)&t2.c = v13;
  *(_OWORD *)&t2.CGFloat tx = v14;
  CGAffineTransformConcat(&v20, &t1, &t2);
  CGAffineTransform t1 = v20;
  return [a1 setTransform:&t1];
}

uint64_t sub_100035D2C(uint64_t a1, uint64_t a2)
{
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  sub_100035DA4(v8);
  uint64_t v3 = a2 + qword_1004C5088;
  uint64_t v4 = *(void *)(a2 + qword_1004C5088);
  uint64_t v5 = *(void *)(a2 + qword_1004C5088 + 8);
  *(void *)uint64_t v3 = 0;
  *(void *)(v3 + 8) = 0;
  char v6 = *(unsigned char *)(v3 + 16);
  *(unsigned char *)(v3 + 16) = 0;
  return sub_10003975C(v4, v5, v6);
}

id sub_100035DA4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = qword_1004C5050;
  v1[qword_1004C5050] = 0;
  switch(a1)
  {
    case 0:
    case 1:
      CGAffineTransformMakeRotation(&v95, 0.0);
      long long v4 = *(_OWORD *)&v95.c;
      long long v5 = *(_OWORD *)&v95.tx;
      char v6 = &v1[qword_1004C5060];
      *(_OWORD *)char v6 = *(_OWORD *)&v95.a;
      *((_OWORD *)v6 + 1) = v4;
      *((_OWORD *)v6 + 2) = v5;
      if (v1[qword_1004C5030] == 1)
      {
        if (qword_1004C3160 != -1) {
          swift_once();
        }
        uint64_t v7 = qword_1004C5048;
        *(void *)&v1[qword_1004C5048] = qword_1004F8958;
        sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
        char v8 = static UIDevice.isIPad()();
        float32x2_t v9 = *(float32x2_t *)&v1[v7];
        if ((v8 & 1) == 0)
        {
          *(float32x2_t *)&v1[qword_1004C5028] = v9;
          id v52 = [v1 superview];
          if (v52)
          {
            NSString v53 = v52;
            [v52 center];

            id v54 = [v2 superview];
            if (v54)
            {
              long long v55 = v54;
              [v54 frame];

              if (qword_1004C2E70 != -1) {
                swift_once();
              }
              goto LABEL_54;
            }
            goto LABEL_114;
          }
          goto LABEL_108;
        }
        *(float32x2_t *)&v1[qword_1004C5028] = vsub_f32(0, v9);
        id v10 = [v1 superview];
        if (v10)
        {
          CGFloat v11 = v10;
          [v10 frame];

          if (qword_1004C2E70 != -1) {
            swift_once();
          }
          id v12 = [v2 superview];
          if (v12)
          {
            long long v13 = v12;
            [v12 center];

            v2[v3] = 1;
LABEL_54:
            if (qword_1004C3198 != -1) {
              swift_once();
            }
            uint64_t v56 = qword_1004F8990;
            goto LABEL_99;
          }
          goto LABEL_112;
        }
        goto LABEL_106;
      }
      if (qword_1004C3188 != -1) {
        swift_once();
      }
      *(void *)&v1[qword_1004C5028] = qword_1004F8980;
      id v45 = [v1 superview];
      if (!v45)
      {
        __break(1u);
LABEL_106:
        __break(1u);
        goto LABEL_107;
      }
      float32x4_t v46 = v45;
      [v45 center];
      uint64_t v48 = v47;

      if (qword_1004C3158 != -1) {
        swift_once();
      }
      uint64_t v49 = qword_1004F8950;
      float32x4_t v50 = &v2[qword_1004C5040];
      *(void *)float32x4_t v50 = v48;
      *((void *)v50 + 1) = v49;
      v50[16] = 0;
      if (qword_1004C3190 != -1) {
        swift_once();
      }
      uint64_t v51 = qword_1004F8988;
      goto LABEL_84;
    case 2:
      sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
      if (static UIDevice.isIPad()())
      {
        CGAffineTransformMakeRotation(&v95, 3.14159265);
        long long v15 = *(_OWORD *)&v95.c;
        long long v16 = *(_OWORD *)&v95.tx;
        long long v17 = &v1[qword_1004C5060];
        *(_OWORD *)long long v17 = *(_OWORD *)&v95.a;
        *((_OWORD *)v17 + 1) = v15;
        *((_OWORD *)v17 + 2) = v16;
      }
      if (v1[qword_1004C5030] != 1)
      {
        if (qword_1004C3190 != -1) {
          swift_once();
        }
        *(void *)&v1[qword_1004C5028] = qword_1004F8988;
        id v57 = [v1 superview];
        if (!v57) {
          goto LABEL_109;
        }
        Class v58 = v57;
        [v57 center];
        uint64_t v60 = v59;

        id v61 = [v2 superview];
        if (!v61)
        {
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
          goto LABEL_118;
        }
        NSString v62 = v61;
        [v61 frame];
        double v64 = v63;

        if (qword_1004C3158 != -1) {
          swift_once();
        }
        double v65 = v64 - *(double *)&qword_1004F8950;
        double v66 = (double *)&v2[qword_1004C5040];
        *(void *)double v66 = v60;
        v66[1] = v65;
        *((unsigned char *)v66 + 16) = 0;
LABEL_64:
        if (qword_1004C3188 != -1) {
          swift_once();
        }
        uint64_t v51 = qword_1004F8980;
        goto LABEL_84;
      }
      if (qword_1004C3168 != -1) {
        swift_once();
      }
      uint64_t v18 = qword_1004C5048;
      *(void *)&v1[qword_1004C5048] = qword_1004F8960;
      char v19 = static UIDevice.isIPad()();
      float32x2_t v20 = *(float32x2_t *)&v1[v18];
      if ((v19 & 1) == 0)
      {
        *(float32x2_t *)&v1[qword_1004C5028] = v20;
        id v84 = [v1 superview];
        if (!v84)
        {
LABEL_119:
          __break(1u);
          goto LABEL_120;
        }
        id v85 = v84;
        [v84 center];

        if (qword_1004C2E70 != -1) {
          swift_once();
        }
        goto LABEL_88;
      }
      *(float32x2_t *)&v1[qword_1004C5028] = vsub_f32(0, v20);
      if (qword_1004C2E70 != -1) {
        swift_once();
      }
      id v21 = [v1 superview];
      if (!v21) {
        goto LABEL_117;
      }
      float32x4_t v22 = v21;
      [v21 center];

      v2[v3] = 1;
      if (qword_1004C31A0 != -1) {
        swift_once();
      }
      float v23 = &qword_1004F8998;
LABEL_98:
      uint64_t v56 = *v23;
LABEL_99:
      *(void *)&v2[qword_1004C5058] = v56;
      if (qword_1004C3180 != -1) {
        swift_once();
      }
      CGPoint.init(_:)();
      static CGPoint.- infix(_:_:)();
      uint64_t v90 = &v2[qword_1004C5038];
      *(void *)uint64_t v90 = v91;
      *((void *)v90 + 1) = v92;
      v90[16] = 0;
LABEL_102:
      if ((v2[qword_1004C5038 + 16] & 1) == 0) {
        [*(id *)&v2[qword_1004C4FC8] setCenter:*(double *)&v2[qword_1004C5038], *(double *)&v2[qword_1004C5038 + 8]];
      }
      long long v93 = *(_OWORD *)&v2[qword_1004C5060 + 16];
      *(_OWORD *)&v95.a = *(_OWORD *)&v2[qword_1004C5060];
      *(_OWORD *)&v95.c = v93;
      *(_OWORD *)&v95.CGFloat tx = *(_OWORD *)&v2[qword_1004C5060 + 32];
      return [v2 setTransform:&v95];
    case 3:
      float v24 = (CGFloat *)CGFloat.piDiv2.unsafeMutableAddressor();
      CGAffineTransformMakeRotation(&v95, *v24);
      long long v25 = *(_OWORD *)&v95.c;
      long long v26 = *(_OWORD *)&v95.tx;
      NSString v27 = &v1[qword_1004C5060];
      *(_OWORD *)NSString v27 = *(_OWORD *)&v95.a;
      *((_OWORD *)v27 + 1) = v25;
      *((_OWORD *)v27 + 2) = v26;
      if (v1[qword_1004C5030] != 1)
      {
        if (qword_1004C31A0 != -1) {
          swift_once();
        }
        *(void *)&v1[qword_1004C5028] = qword_1004F8998;
        id v67 = [v1 superview];
        if (!v67) {
          goto LABEL_110;
        }
        id v68 = v67;
        [v67 frame];
        double v70 = v69;

        if (qword_1004C3150 != -1) {
          swift_once();
        }
        double v71 = *(double *)&qword_1004F8948;
        id v72 = [v2 superview];
        if (!v72) {
          goto LABEL_116;
        }
        double v73 = v72;
        double v74 = v70 - v71;
        [v72 center];
        uint64_t v76 = v75;

        id v77 = &v2[qword_1004C5040];
        *(double *)id v77 = v74;
        *((void *)v77 + 1) = v76;
        v77[16] = 0;
        if (qword_1004C3198 != -1) {
          swift_once();
        }
        uint64_t v51 = qword_1004F8990;
LABEL_84:
        *(void *)&v2[qword_1004C5058] = v51;
        goto LABEL_102;
      }
      id v28 = [v1 superview];
      if (!v28)
      {
LABEL_107:
        __break(1u);
LABEL_108:
        __break(1u);
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
        goto LABEL_113;
      }
      int32x4_t v29 = v28;
      [v28 center];

      id v30 = [v2 superview];
      if (!v30)
      {
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
        goto LABEL_115;
      }
      NSString v31 = v30;
      [v30 frame];

      if (qword_1004C2E70 != -1) {
        swift_once();
      }
      if (qword_1004C3170 != -1) {
        swift_once();
      }
      float32x2_t v32 = (float32x2_t)qword_1004F8968;
      *(void *)&v2[qword_1004C5048] = qword_1004F8968;
      *(float32x2_t *)&v2[qword_1004C5028] = vsub_f32(0, v32);
      if (qword_1004C3180 != -1) {
        swift_once();
      }
      CGPoint.init(_:)();
      static CGPoint.- infix(_:_:)();
      double v33 = &v2[qword_1004C5038];
      *(void *)double v33 = v34;
      *((void *)v33 + 1) = v35;
      v33[16] = 0;
      v2[v3] = 1;
      goto LABEL_64;
    case 4:
      float v36 = (double *)CGFloat.piDiv2.unsafeMutableAddressor();
      CGAffineTransformMakeRotation(&v95, -*v36);
      long long v37 = *(_OWORD *)&v95.c;
      long long v38 = *(_OWORD *)&v95.tx;
      int v39 = &v1[qword_1004C5060];
      *(_OWORD *)int v39 = *(_OWORD *)&v95.a;
      *((_OWORD *)v39 + 1) = v37;
      *((_OWORD *)v39 + 2) = v38;
      if (v1[qword_1004C5030] == 1)
      {
        if (qword_1004C3178 != -1) {
          swift_once();
        }
        uint64_t v40 = qword_1004C5048;
        *(void *)&v1[qword_1004C5048] = qword_1004F8970;
        sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
        char v41 = static UIDevice.isIPad()();
        float32x2_t v42 = *(float32x2_t *)&v1[v40];
        if ((v41 & 1) == 0)
        {
          *(float32x2_t *)&v1[qword_1004C5028] = v42;
          id v86 = [v1 superview];
          if (!v86)
          {
LABEL_120:
            __break(1u);
            goto LABEL_121;
          }
          uint64_t v87 = v86;
          [v86 center];

          id v88 = [v2 superview];
          if (!v88)
          {
LABEL_121:
            __break(1u);
            JUMPOUT(0x100036C2CLL);
          }
          uint64_t v89 = v88;
          [v88 frame];

          if (qword_1004C2E70 != -1) {
            swift_once();
          }
          if (qword_1004C3188 != -1) {
            swift_once();
          }
          float v23 = &qword_1004F8980;
          goto LABEL_98;
        }
        *(float32x2_t *)&v1[qword_1004C5028] = vsub_f32(0, v42);
        id v43 = [v1 superview];
        if (!v43)
        {
LABEL_118:
          __break(1u);
          goto LABEL_119;
        }
        Class v44 = v43;
        [v43 center];

        if (qword_1004C2E70 != -1) {
          swift_once();
        }
        v2[v3] = 1;
LABEL_88:
        if (qword_1004C3190 != -1) {
          swift_once();
        }
        float v23 = &qword_1004F8988;
        goto LABEL_98;
      }
      if (qword_1004C3198 != -1) {
        swift_once();
      }
      *(void *)&v1[qword_1004C5028] = qword_1004F8990;
      if (qword_1004C3150 != -1) {
        swift_once();
      }
      uint64_t v78 = qword_1004F8948;
      id v79 = [v1 superview];
      if (!v79) {
        goto LABEL_111;
      }
      NSString v80 = v79;
      [v79 center];
      uint64_t v82 = v81;

      id v83 = &v2[qword_1004C5040];
      *(void *)id v83 = v78;
      *((void *)v83 + 1) = v82;
      v83[16] = 0;
      if (qword_1004C31A0 != -1) {
        swift_once();
      }
      uint64_t v51 = qword_1004F8998;
      goto LABEL_84;
    default:
      long long v14 = &v1[qword_1004C5060];
      *(void *)long long v14 = 0x3FF0000000000000;
      *((void *)v14 + 1) = 0;
      *((void *)v14 + 2) = 0;
      *((void *)v14 + 3) = 0x3FF0000000000000;
      *((void *)v14 + 4) = 0;
      *((void *)v14 + 5) = 0;
      goto LABEL_102;
  }
}

uint64_t sub_100036C40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_100036C94(void *a1, char a2, char a3)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v3[qword_1004C4FB0] = 0;
  *(void *)&v3[qword_1004C4FB8] = 0;
  *(void *)&v3[qword_1004C4FC0] = 0;
  *(void *)&v3[qword_1004C4FC8] = 0;
  *(void *)&v3[qword_1004C4FD0] = 0;
  *(void *)&v3[qword_1004C4FD8] = 0;
  *(void *)&v3[qword_1004C4FE0] = 0;
  *(void *)&v3[qword_1004C4FE8] = 0;
  *(void *)&v3[qword_1004C4FF0] = 0;
  char v6 = &v3[qword_1004C5000];
  *(void *)char v6 = 0;
  v6[8] = 1;
  *(void *)&v3[qword_1004C5018] = 0x4032000000000000;
  uint64_t v7 = qword_1004C5020;
  id v8 = objc_allocWithZone((Class)UIBezierPath);
  float32x2_t v9 = v3;
  *(void *)&v3[v7] = [v8 init];
  *(void *)&v9[qword_1004C5028] = 0;
  id v10 = &v9[qword_1004C5038];
  *(void *)id v10 = 0;
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  CGFloat v11 = &v9[qword_1004C5040];
  *(void *)CGFloat v11 = 0;
  *((void *)v11 + 1) = 0;
  v11[16] = 1;
  *(void *)&v9[qword_1004C5048] = 0;
  v9[qword_1004C5050] = 0;
  *(void *)&v9[qword_1004C5058] = 0;
  id v12 = &v9[qword_1004C5060];
  *(void *)id v12 = 0x3FF0000000000000;
  *((void *)v12 + 1) = 0;
  *((void *)v12 + 2) = 0;
  *((void *)v12 + 3) = 0x3FF0000000000000;
  *((void *)v12 + 4) = 0;
  *((void *)v12 + 5) = 0;
  v9[qword_1004C5068] = 0;
  *(void *)&v9[qword_1004C5070] = 0;
  uint64_t v13 = qword_1004C5078;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = sub_100012894((uint64_t *)&unk_1004C4710);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_1004F8630;
  long long v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 272);
  swift_retain();
  *(void *)&v9[v13] = v17(KeyPath, v16);
  uint64_t v18 = qword_1004C5080;
  uint64_t v19 = swift_getKeyPath();
  uint64_t v20 = sub_100012894((uint64_t *)&unk_1004CEA40);
  uint64_t v21 = qword_1004F8630;
  float32x4_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 272);
  swift_retain();
  *(void *)&v9[v18] = v22(v19, v21);
  float v23 = &v9[qword_1004C5088];
  *(void *)float v23 = 0;
  *((void *)v23 + 1) = 0;
  v23[16] = 0;
  id v24 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v25 = qword_1004C4FF8;
  *(void *)&v9[qword_1004C4FF8] = v24;
  [v24 setTextAlignment:1];
  uint64_t v26 = qword_1004C3128;
  id v27 = v24;
  if (v26 != -1) {
    swift_once();
  }
  [v27 setTextColor:qword_1004F8930];

  id v28 = *(void **)&v9[v25];
  int32x4_t v29 = self;
  id v30 = v28;
  id v31 = [v29 preferredFontForTextStyle:UIFontTextStyleSubheadline];
  id v32 = [v31 fontDescriptor];

  id v33 = [v32 fontDescriptorWithSymbolicTraits:2];
  if (!v33)
  {
    __break(1u);
    goto LABEL_49;
  }
  id v34 = [v29 fontWithDescriptor:v33 size:0.0];

  [v30 setFont:v34];
  id v35 = *(id *)&v9[v25];
  NSString v36 = String._bridgeToObjectiveC()();
  [v35 setText:v36];

  long long v37 = *(void **)&v9[v25];
  [v37 setAdjustsFontSizeToFitWidth:1];
  [v37 setBaselineAdjustment:1];
  [v37 sizeToFit];
  id v38 = [objc_allocWithZone((Class)UIVisualEffectView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v9[qword_1004C5010] = v38;
  uint64_t v39 = qword_1004C3130;
  id v40 = v38;
  if (v39 != -1) {
    swift_once();
  }
  sub_10001C99C(0, &qword_1004C52E8);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v40 setBackgroundEffects:isa];

  float32x2_t v42 = &swift_getGenericMetadata_ptr;
  id v43 = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v9[qword_1004C5008] = v43;
  [v43 setClipsToBounds:1];
  v9[qword_1004C5030] = a3 & 1;
  if (a3) {
    double v44 = 20.0;
  }
  else {
    double v44 = 18.0;
  }

  [a1 frame];
  v134.receiver = v9;
  v134.super_class = ObjectType;
  id v45 = [(char *)[super initWithFrame:];
  [a1 frame];
  [v45 frame];
  [v45 setFrame:];

  [a1 addSubview:v45];
  [v45 setAlpha:0.0];
  [v45 setUserInteractionEnabled:0];
  float32x4_t v46 = (char *)qword_1004C5008;
  uint64_t v47 = *(void **)&v45[qword_1004C5008];
  [v45 addSubview:v47];
  [v47 addSubview:*(void *)&v45[qword_1004C5010]];
  [v47 addSubview:*(void *)&v45[qword_1004C4FF8]];
  *(double *)&v45[qword_1004C5018] = v44;
  uint64_t v48 = self;
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v45;
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = sub_100039968;
  *(void *)(v50 + 24) = v49;
  *(void *)&aBlock.CGFloat tx = sub_100039980;
  *(void *)&aBlock.CGFloat ty = v50;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = sub_1000FA194;
  *(void *)&aBlock.d = &unk_100488CD0;
  uint64_t v51 = (SEL *)_Block_copy(&aBlock);
  CGFloat ty = aBlock.ty;
  NSString v53 = v45;
  swift_retain();
  swift_release();
  [(id)v48 performWithoutAnimation:v51];
  _Block_release(v51);
  LOBYTE(v48) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v48 & 1) == 0)
  {
    [v53 updateText:0];
    CGAffineTransformMakeScale(&aBlock, 0.9, 0.9);
    [v53 setTransform:&aBlock];
    if ((a2 & 1) == 0)
    {
LABEL_45:
      sub_1000F9200();
      swift_release();

      return;
    }
    uint64_t v132 = v46;
    id v54 = [objc_allocWithZone((Class)UIView) init];
    uint64_t v55 = qword_1004C4FB0;
    uint64_t v56 = *(void **)&v53[qword_1004C4FB0];
    *(void *)&v53[qword_1004C4FB0] = v54;

    id v57 = [objc_allocWithZone((Class)UIView) init];
    uint64_t v58 = qword_1004C4FB8;
    uint64_t v59 = *(void **)&v53[qword_1004C4FB8];
    *(void *)&v53[qword_1004C4FB8] = v57;

    id v60 = [objc_allocWithZone((Class)UIView) init];
    uint64_t v61 = qword_1004C4FC0;
    NSString v62 = *(void **)&v53[qword_1004C4FC0];
    *(void *)&v53[qword_1004C4FC0] = v60;

    id v63 = [objc_allocWithZone((Class)UIView) init];
    uint64_t v64 = qword_1004C4FC8;
    double v65 = *(void **)&v53[qword_1004C4FC8];
    *(void *)&v53[qword_1004C4FC8] = v63;

    id v66 = [objc_allocWithZone((Class)UIView) init];
    uint64_t v67 = qword_1004C4FD0;
    id v68 = *(void **)&v53[qword_1004C4FD0];
    *(void *)&v53[qword_1004C4FD0] = v66;

    id v69 = [objc_allocWithZone((Class)UIView) init];
    uint64_t v70 = qword_1004C4FD8;
    double v71 = *(void **)&v53[qword_1004C4FD8];
    *(void *)&v53[qword_1004C4FD8] = v69;

    id v72 = [objc_allocWithZone((Class)UIView) init];
    double v73 = *(void **)&v53[qword_1004C4FE0];
    uint64_t v129 = qword_1004C4FE0;
    *(void *)&v53[qword_1004C4FE0] = v72;

    id v74 = [objc_allocWithZone((Class)UIView) init];
    uint64_t v75 = *(void **)&v53[qword_1004C4FE8];
    uint64_t v128 = qword_1004C4FE8;
    *(void *)&v53[qword_1004C4FE8] = v74;

    id v76 = [objc_allocWithZone((Class)UIView) init];
    float32x2_t v42 = (_UNKNOWN **)qword_1004C4FF0;
    id v77 = *(void **)&v53[qword_1004C4FF0];
    *(void *)&v53[qword_1004C4FF0] = v76;

    if (*(void *)&v53[v58])
    {
      [v132[v45] addSubview:];
      uint64_t v78 = *(void **)&v53[v58];
      if (v78)
      {
        if (*(void *)&v53[v55])
        {
          [v78 addSubview:];
          id v79 = *(void **)&v53[v58];
          if (v79)
          {
            uint64_t v51 = (SEL *)&selRef_replaySensorDidFinishReplayingData;
            if (*(void *)&v53[v61])
            {
              [v79 addSubview:];
              if (*(void *)&v53[v64])
              {
                [a1 addSubview:];
                NSString v80 = *(void **)&v53[v64];
                if (v80)
                {
                  CGSize.init(_:_:)();
                  id v81 = v80;
                  [v81 frame];
                  [v81 setFrame:];

                  uint64_t v82 = *(void **)&v53[v64];
                  if (v82)
                  {
                    float32x4_t v46 = (char *)self;
                    id v83 = v82;
                    id v84 = [v46 purpleColor];
                    [v83 setBackgroundColor:v84];

                    id v85 = *(void **)&v53[v64];
                    if (v85)
                    {
                      [v85 setCenter:0.0, 0.0];
                      if (*(void *)&v53[v67])
                      {
                        [a1 addSubview:];
                        id v86 = *(void **)&v53[v67];
                        if (v86)
                        {
                          id v87 = v86;
                          [v87 frame];
                          [v87 setFrame:];

                          id v88 = *(void **)&v53[v67];
                          CGFloat ty = COERCE_DOUBLE(&off_1004B7000);
                          if (v88)
                          {
                            id v89 = v88;
                            id v90 = [v46 purpleColor];
                            [v89 setBackgroundColor:v90];

                            uint64_t v91 = *(void **)&v53[v67];
                            if (v91)
                            {
                              [v91 setCenter:0.0, 0.0];
                              if (*(void *)&v53[v70])
                              {
                                [a1 addSubview:];
                                uint64_t v92 = *(void **)&v53[v70];
                                if (v92)
                                {
                                  id v93 = v92;
                                  [a1 frame];
                                  CGSize.init(_:_:)();
                                  [v93 frame];
                                  [v93 setFrame:];

                                  id v94 = *(void **)&v53[v70];
                                  if (v94)
                                  {
                                    id v95 = v94;
                                    id v96 = [v46 purpleColor];
                                    [v95 setBackgroundColor:v96];

                                    uint64_t v97 = *(void **)&v53[v70];
                                    if (v97)
                                    {
                                      uint64_t v98 = qword_1004C2E80;
                                      id v45 = v97;
                                      if (v98 == -1) {
                                        goto LABEL_31;
                                      }
                                      goto LABEL_47;
                                    }
LABEL_65:
                                    __break(1u);
                                    goto LABEL_66;
                                  }
LABEL_64:
                                  __break(1u);
                                  goto LABEL_65;
                                }
LABEL_63:
                                __break(1u);
                                goto LABEL_64;
                              }
LABEL_62:
                              __break(1u);
                              goto LABEL_63;
                            }
LABEL_61:
                            __break(1u);
                            goto LABEL_62;
                          }
LABEL_60:
                          __break(1u);
                          goto LABEL_61;
                        }
LABEL_59:
                        __break(1u);
                        goto LABEL_60;
                      }
LABEL_58:
                      __break(1u);
                      goto LABEL_59;
                    }
LABEL_57:
                    __break(1u);
                    goto LABEL_58;
                  }
LABEL_56:
                  __break(1u);
                  goto LABEL_57;
                }
LABEL_55:
                __break(1u);
                goto LABEL_56;
              }
LABEL_54:
              __break(1u);
              goto LABEL_55;
            }
LABEL_53:
            __break(1u);
            goto LABEL_54;
          }
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  __break(1u);
LABEL_47:
  swift_once();
LABEL_31:
  double v99 = *(double *)&qword_1004F8660;
  [a1 center];
  [v45 *(SEL *)(*(void *)&ty + 2656) v99];

  if (!*(void *)&v53[v129])
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  [a1 addSubview:];
  uint64_t v100 = *(void **)&v53[v129];
  if (!v100)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  id v101 = v100;
  [a1 v51[104]];
  CGSize.init(_:_:)();
  [v101 v51[104]];
  [v101 setFrame:];

  uint64_t v102 = *(void **)&v53[v129];
  if (!v102)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  id v103 = v102;
  id v104 = [v46 purpleColor];
  [v103 setBackgroundColor:v104];

  uint64_t v105 = *(void **)&v53[v129];
  if (!v105)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  double v106 = *(double *)&qword_1004F8660 + 47.0;
  id v107 = v105;
  [a1 center];
  [v107 *(SEL *)(*(void *)&ty + 2656) v106];

  if (!*(void *)&v53[v128])
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  [a1 addSubview:];
  uint64_t v108 = *(void **)&v53[v128];
  if (!v108)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  id v109 = v108;
  [a1 v51[104]];
  CGSize.init(_:_:)();
  [v109 v51[104]];
  [v109 setFrame:];

  simd_float4 v110 = *(void **)&v53[v128];
  if (!v110)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  id v111 = v110;
  id v112 = [v46 purpleColor];
  [v111 setBackgroundColor:v112];

  uint64_t v113 = *(void **)&v53[v128];
  if (!v113)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  id v114 = v113;
  [a1 v51[104]];
  double v116 = v115 - *(double *)&qword_1004F8660;
  [a1 center];
  [v114 setCenter:v116];

  if (!*(void *)&v53[v129])
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  [a1 addSubview:];
  if (!*(_UNKNOWN **)((char *)v42 + (void)v53))
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  [a1 addSubview:];
  objc_super v117 = *(_UNKNOWN **)((char *)v42 + (void)v53);
  if (!v117)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  id v118 = v117;
  [a1 v51[104]];
  CGSize.init(_:_:)();
  [v118 v51[104]];
  [v118 setFrame:];

  Swift::String v119 = *(_UNKNOWN **)((char *)v42 + (void)v53);
  if (!v119)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  id v120 = v119;
  id v121 = [v46 purpleColor];
  [v120 setBackgroundColor:v121];

  Swift::String v122 = *(_UNKNOWN **)((char *)v42 + (void)v53);
  if (v122)
  {
    id v123 = v122;
    [a1 v51[104]];
    double v125 = v124 - (*(double *)&qword_1004F8660 + 47.0);
    [a1 center];
    [v123 setCenter:v125];

    uint64_t v126 = v53;
    id v127 = [v46 redColor];
    [v126 setBackgroundColor:v127];

    goto LABEL_45;
  }
LABEL_78:
  __break(1u);
}

id sub_100037CFC(char *a1)
{
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  uint64_t v2 = *(void *)&a1[qword_1004C5088];
  if (!a1[qword_1004C5088 + 16])
  {
    if ((v2 & 1) == 0)
    {
      sub_100035DA4(v4);
      goto LABEL_8;
    }
LABEL_7:
    sub_1000359EC(a1);
    goto LABEL_8;
  }
  if (a1[qword_1004C5088 + 16] == 1 && (v2 & 1) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  return sub_100035DA4(v4);
}

uint64_t sub_100037DBC(uint64_t result)
{
  if (*(unsigned char *)(v1 + qword_1004C71F0) == 1)
  {
    __chkstk_darwin(result);
    swift_retain();
    StateValue.ifUpdated(_:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_100037E60(char a1, uint64_t a2, int a3)
{
  int v19 = a3;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  float32x2_t v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  id v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v3;
  *(unsigned char *)(v14 + 24) = a1;
  *(void *)(v14 + 32) = a2;
  *(unsigned char *)(v14 + 40) = v19 & 1;
  aBlock[4] = sub_100039B60;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_100488DC0;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v3;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_100039BEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v20);
}

uint64_t sub_10003810C(char a1, uint64_t a2, char a3)
{
  void (*v7)(uint64_t *__return_ptr, uint64_t);
  uint64_t v8;
  void (*v9)(unint64_t *__return_ptr, uint64_t);
  uint64_t v10;
  unint64_t v11;
  char v12;
  void *v14;
  unint64_t v15;
  uint64_t v16;

  uint64_t v4 = v3;
  if ((a1 & 1) == 0) {
    goto LABEL_4;
  }
  uint64_t v7 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)&v3[qword_1004C5078] + 144);
  uint64_t v8 = swift_retain();
  v7(&v16, v8);
  swift_release();
  if ((v16 & 0x1000000) != 0
    || (float32x2_t v9 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)&v3[qword_1004C5080] + 144),
        uint64_t v10 = swift_retain(),
        v9(&v15, v10),
        swift_release(),
        uint64_t v11 = v15,
        sub_10001F780(v15),
        v11 == 0xC000000000000018))
  {
LABEL_4:
    id v12 = 0;
    if ((a3 & 1) == 0) {
LABEL_5:
    }
      [v4 updateText:a2];
  }
  else
  {
    uint64_t v14 = *(void **)&v4[qword_1004C5070];
    if (v14) {
      [v14 invalidate];
    }
    id v12 = 1;
    if ((a3 & 1) == 0) {
      goto LABEL_5;
    }
  }
  return sub_10003824C(v12);
}

uint64_t sub_10003824C(char a1)
{
  uint64_t v3 = &v1[qword_1004C5088];
  uint64_t v4 = *(void *)&v1[qword_1004C5088];
  long long v5 = *(void **)&v1[qword_1004C5088 + 8];
  int v6 = v1[qword_1004C5088 + 16];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v5;
  *(unsigned char *)(v7 + 32) = v6;
  if (v6)
  {
    if (v6 != 1)
    {
      id v10 = (id)v4;
      goto LABEL_11;
    }
    sub_10003972C((id)v4, v5, 1);
    id v8 = v5;
  }
  if (v4)
  {
    if ((a1 & 1) == 0)
    {
      char v9 = 0;
      goto LABEL_10;
    }
  }
  else if (a1)
  {
    char v9 = 1;
LABEL_10:
    sub_100038370(v9, v1, v7);
  }
LABEL_11:
  swift_beginAccess();
  uint64_t v11 = *(void **)(v7 + 16);
  id v12 = *(void **)(v7 + 24);
  uint64_t v13 = *(void *)v3;
  uint64_t v14 = *((void *)v3 + 1);
  *(void *)uint64_t v3 = v11;
  *((void *)v3 + 1) = v12;
  char v15 = *(unsigned char *)(v7 + 32);
  char v16 = v3[16];
  v3[16] = v15;
  sub_10003972C(v11, v12, v15);
  sub_10003975C(v13, v14, v16);
  swift_release();
  return sub_10003975C(v4, (uint64_t)v5, v6);
}

void sub_100038370(char a1, void *a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  char v17 = a1 & 1;
  *(unsigned char *)(v6 + 24) = a1;
  id v7 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  float32x4_t v22 = sub_100039CBC;
  uint64_t v23 = v6;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v19 = 1107296256;
  uint64_t v20 = sub_100049AB4;
  uint64_t v21 = &unk_100488E38;
  id v8 = _Block_copy(&aBlock);
  a2;
  swift_release();
  id v9 = [v7 initWithDuration:v8 dampingRatio:0.4 animations:0.9];
  _Block_release(v8);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(a3 + 24);
  *(void *)(a3 + 16) = a1 & 1;
  *(void *)(a3 + 24) = v9;
  char v12 = *(unsigned char *)(a3 + 32);
  *(unsigned char *)(a3 + 32) = 1;
  id v13 = v9;
  sub_10003975C(v10, v11, v12);
  if (a1)
  {
    swift_retain();
    StateValue.wrappedValue.getter();
    swift_release();
    sub_100035DA4((uint64_t)aBlock);
  }
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = a3;
  *(unsigned char *)(v15 + 32) = v17;
  float32x4_t v22 = sub_100039D58;
  uint64_t v23 = v15;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v19 = 1107296256;
  uint64_t v20 = sub_100036C40;
  uint64_t v21 = &unk_100488EB0;
  char v16 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v13 addCompletion:v16];
  _Block_release(v16);
  [v13 startAnimation];
}

void sub_100038604(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v7 = (void *)Strong;
    uint64_t v8 = Strong + qword_1004C5088;
    uint64_t v9 = *(void *)(Strong + qword_1004C5088);
    uint64_t v10 = *(void **)(Strong + qword_1004C5088 + 8);
    int v11 = *(unsigned __int8 *)(Strong + qword_1004C5088 + 16);
    swift_beginAccess();
    char v12 = *(void **)(a3 + 16);
    int v13 = *(unsigned __int8 *)(a3 + 32);
    if (v11)
    {
      uint64_t v14 = *(void **)(a3 + 24);
      if (v11 == 1)
      {
        if (v13 != 1) {
          goto LABEL_15;
        }
        if (((((v9 & 1) == 0) ^ v12) & 1) == 0) {
          goto LABEL_15;
        }
        sub_10001C99C(0, (unint64_t *)&qword_1004C4568);
        sub_10003972C(v12, v14, 1);
        sub_10003972C((id)v9, v10, 1);
        char v15 = static NSObject.== infix(_:_:)();
        sub_10003975C((uint64_t)v12, (uint64_t)v14, 1);
        sub_10003975C(v9, (uint64_t)v10, 1);
        if ((v15 & 1) == 0) {
          goto LABEL_15;
        }
      }
      else
      {
        if (v13 != 2) {
          goto LABEL_15;
        }
        sub_10001C99C(0, (unint64_t *)&qword_1004C4568);
        sub_10003972C(v12, v14, 2);
        sub_10003972C((id)v9, v10, 2);
        char v16 = static NSObject.== infix(_:_:)();
        sub_10003975C((uint64_t)v12, (uint64_t)v14, 2);
        sub_10003975C(v9, (uint64_t)v10, 2);
        if ((v16 & 1) == 0) {
          goto LABEL_15;
        }
      }
    }
    else if (*(unsigned char *)(a3 + 32) || ((((v9 & 1) == 0) ^ v12) & 1) == 0)
    {
      goto LABEL_15;
    }
    uint64_t v17 = *(void *)v8;
    uint64_t v18 = *(void *)(v8 + 8);
    *(void *)uint64_t v8 = a4 & 1;
    *(void *)(v8 + 8) = 0;
    char v19 = *(unsigned char *)(v8 + 16);
    *(unsigned char *)(v8 + 16) = 0;
    sub_10003975C(v17, v18, v19);
    if (a4)
    {
      uint64_t v20 = self;
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v7;
      v25[4] = sub_100039D64;
      v25[5] = v21;
      v25[0] = _NSConcreteStackBlock;
      v25[1] = 1107296256;
      v25[2] = sub_100058CEC;
      v25[3] = &unk_100488F00;
      float32x4_t v22 = _Block_copy(v25);
      uint64_t v23 = v7;
      swift_release();
      id v24 = [v20 scheduledTimerWithTimeInterval:0 repeats:v22 block:1.0];
      _Block_release(v22);
      id v7 = *(void **)&v23[qword_1004C5070];
      *(void *)&v23[qword_1004C5070] = v24;
    }
LABEL_15:
  }
}

void sub_1000388D8(uint64_t a1)
{
  int v2 = v1[qword_1004C5030];
  if (v1[qword_1004C5030]) {
    double v3 = 12.0;
  }
  else {
    double v3 = 0.0;
  }
  uint64_t v4 = &v1[qword_1004C5000];
  *(void *)uint64_t v4 = a1;
  v4[8] = 0;
  long long v5 = *(void **)&v1[qword_1004C4FF8];
  sub_10007D390(a1);
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v5 setText:v6];

  [v5 sizeToFit];
  id v7 = [v1 superview];
  if (!v7)
  {
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v8 = v7;
  [v7 bounds];
  double v10 = v9;

  uint64_t v11 = qword_1004C5018;
  double v12 = v10 + *(double *)&v1[qword_1004C5018] * -4.0;
  [v5 frame];
  if (v12 < v13)
  {
    [v5 frame];
    [v5 setFrame:];
  }
  [v5 frame];
  double v15 = v14;
  double v16 = *(double *)&v1[v11];
  id v17 = [v5 font];
  if (!v17) {
    goto LABEL_49;
  }
  uint64_t v18 = v17;
  double v19 = v15 + v16 + v16;
  [v17 capHeight];
  double v21 = v20;

  double v22 = fmax(v21 + 36.0, 47.0);
  [v1 bounds];
  [v1 setBounds:];
  uint64_t v75 = qword_1004C5050;
  if (v1[qword_1004C5050]) {
    double v23 = v3;
  }
  else {
    double v23 = 0.0;
  }
  if (v2)
  {
    if (v1[qword_1004C5038 + 16])
    {
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    CGPoint.init(_:)();
    static CGPoint.- infix(_:_:)();
    [v1 setCenter:];
    uint64_t v24 = qword_1004C5058;
    CGPoint.init(_:)();
    CGPoint.multiply(by:)();
    [v1 center];
    CGPoint.add(_:)();
    float32x2_t v25 = *(float32x2_t *)&v1[v24];
    if (qword_1004C3190 != -1) {
      swift_once();
    }
    int32x2_t v26 = vceq_f32(v25, (float32x2_t)qword_1004F8988);
    if ((v26.i32[0] & v26.i32[1] & 1) == 0)
    {
      float32x2_t v27 = *(float32x2_t *)&v1[v24];
      if (qword_1004C31A0 != -1) {
        swift_once();
      }
      int32x2_t v28 = vceq_f32(v27, (float32x2_t)qword_1004F8998);
      if ((v28.i32[0] & v28.i32[1] & 1) == 0)
      {
        id v29 = [v1 superview];
        if (!v29)
        {
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
        id v30 = v29;
        [v29 frame];

        id v31 = [v1 superview];
        if (!v31)
        {
LABEL_61:
          __break(1u);
          return;
        }
        id v32 = v31;
        [v31 frame:v75];
      }
    }
    [v1 center:v75];
    static CGPoint.- infix(_:_:)();
    [v1 setCenter:];
    id v33 = *(void **)&v1[qword_1004C4FD0];
    if (v33)
    {
      id v34 = v33;
      [v1 center];
      [v34 setCenter:];
    }
  }
  else
  {
    if (v1[qword_1004C5040 + 16])
    {
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    CGPoint.init(_:)();
    static CGPoint.+ infix(_:_:)();
    [v1 setCenter:];
  }
  [v1 bounds:v75];
  double v36 = v35 * 0.5;
  [v5 center];
  [v5 setCenter:v36];
  [v1 bounds];
  [v5 center];
  [v5 setCenter:];
  [v5 center];
  CGPoint.add(_:)();
  [v5 setCenter:];
  [v1 bounds];
  [v1 setBounds:0.0, 0.0];
  uint64_t v37 = qword_1004C4FB0;
  id v38 = *(void **)&v1[qword_1004C4FB0];
  if (v38)
  {
    id v39 = v38;
    [v5 frame];
    [v39 setFrame:];

    id v40 = *(void **)&v1[v37];
    if (v40)
    {
      id v41 = v40;
      id v42 = [v5 font];
      if (v42)
      {
        id v43 = v42;
        [v42 capHeight];

        [v41 frame];
        [v41 setFrame:];

        double v44 = *(void **)&v1[v37];
        if (v44)
        {
          id v45 = v44;
          [v5 center];
          [v45 setCenter:];

          float32x4_t v46 = *(void **)&v1[v37];
          if (v46)
          {
            uint64_t v47 = self;
            id v48 = v46;
            id v49 = [v47 greenColor];
            [v48 setBackgroundColor:v49];

            uint64_t v50 = qword_1004C4FB8;
            uint64_t v51 = *(void **)&v1[qword_1004C4FB8];
            if (v51)
            {
              [v51 setFrame:0.0, 0.0, v19, v22];
              id v52 = *(void **)&v1[v50];
              if (v52)
              {
                id v53 = v52;
                id v54 = [v47 blueColor];
                [v53 setBackgroundColor:v54];

                uint64_t v55 = qword_1004C4FC0;
                uint64_t v56 = *(void **)&v1[qword_1004C4FC0];
                if (v56)
                {
                  [v56 setFrame:0.0, v22, v19, 12.0];
                  id v57 = *(void **)&v1[v55];
                  if (v57)
                  {
                    id v58 = v57;
                    id v59 = [v47 yellowColor];
                    [v58 setBackgroundColor:v59];

                    goto LABEL_37;
                  }
                  goto LABEL_57;
                }
LABEL_56:
                __break(1u);
LABEL_57:
                __break(1u);
                goto LABEL_58;
              }
LABEL_55:
              __break(1u);
              goto LABEL_56;
            }
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
LABEL_37:
  id v60 = [self bezierPathWithRoundedRect:-1 byRoundingCorners:0.0 v23 v19 v22 15.0 15.0];
  uint64_t v61 = qword_1004C5020;
  NSString v62 = *(void **)&v1[qword_1004C5020];
  *(void *)&v1[qword_1004C5020] = v60;

  id v63 = *(void **)&v1[qword_1004C5008];
  [v1 bounds];
  [v63 frame];
  [v63 setFrame:];
  id v77 = [objc_allocWithZone((Class)CAShapeLayer) init];
  id v64 = [*(id *)&v1[v61] CGPath];
  [v77 setPath:v64];

  if (v2)
  {
    id v65 = [objc_allocWithZone((Class)CAShapeLayer) init];
    if (v1[v76]) {
      double v66 = -1.0;
    }
    else {
      double v66 = 1.0;
    }
    CGPoint.elementSum()();
    double v68 = v67;
    [v63 frame];
    if (v23 > v22 * v66) {
      double v70 = v23;
    }
    else {
      double v70 = v22 * v66;
    }
    id v71 = sub_100039D9C(v69 * 0.5 + -15.0 - v66 * v68, v70, v66);
    id v72 = [v71 CGPath];

    [v65 setPath:v72];
    [v77 addSublayer:v65];
  }
  id v73 = [v63 layer];
  [v73 setMask:v77];

  id v74 = *(void **)&v1[qword_1004C5010];
  [v1 bounds];
  [v74 frame];
  [v74 setFrame:];
}

void sub_1000392E8(void *a1, uint64_t a2, uint64_t a3)
{
  id v4 = a1;
  sub_1000388D8(a3);
}

void sub_10003933C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_10003A1C0();
}

void sub_100039364()
{
}

uint64_t sub_100039394()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + qword_1004C5088);
  uint64_t v2 = *(void *)(v0 + qword_1004C5088 + 8);
  char v3 = *(unsigned char *)(v0 + qword_1004C5088 + 16);

  return sub_10003975C(v1, v2, v3);
}

uint64_t sub_1000394CC(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(a1 + qword_1004C5088);
  uint64_t v3 = *(void *)(a1 + qword_1004C5088 + 8);
  char v4 = *(unsigned char *)(a1 + qword_1004C5088 + 16);

  return sub_10003975C(v2, v3, v4);
}

uint64_t type metadata accessor for CalloutViewRegular()
{
  uint64_t result = qword_1004C50B8;
  if (!qword_1004C50B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10003965C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100039720()
{
  return type metadata accessor for CalloutViewRegular();
}

id sub_10003972C(id result, void *a2, char a3)
{
  if (a3 != 1)
  {
    if (a3 != 2) {
      return result;
    }
    a2 = result;
  }
  return a2;
}

uint64_t destroy for CalloutViewRegular.AnimationState(uint64_t a1)
{
  return sub_10003975C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_10003975C(uint64_t result, uint64_t a2, char a3)
{
  if (a3 != 1)
  {
    if (a3 != 2) {
      return result;
    }
    a2 = result;
  }
  return _objc_release_x1(result, a2);
}

uint64_t _s7Measure18CalloutViewRegularC14AnimationStateOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10003972C(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CalloutViewRegular.AnimationState(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10003972C(*(id *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_10003975C(v6, v7, v8);
  return a1;
}

__n128 initializeBufferWithCopyOfBuffer for EdgeDetectionPointInfo(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CalloutViewRegular.AnimationState(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_10003975C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CalloutViewRegular.AnimationState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CalloutViewRegular.AnimationState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100039908(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_100039910(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CalloutViewRegular.AnimationState()
{
  return &type metadata for CalloutViewRegular.AnimationState;
}

uint64_t sub_100039930()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100039968()
{
  return sub_100037CFC(*(char **)(v0 + 16));
}

uint64_t sub_100039970()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100039980()
{
  return sub_1000FA16C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100039988(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100039998()
{
  return swift_release();
}

id sub_1000399A0()
{
  return sub_100035BE4(*(void **)(v0 + 16));
}

uint64_t sub_1000399A8(uint64_t a1)
{
  return sub_100035D2C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1000399B0(void *a1, void *a2, char a3, uint64_t a4, void *a5, char a6)
{
  if (a3)
  {
    if (a3 == 1)
    {
      if (a6 == 1 && ((a1 & 1) == 0) != (a4 & 1))
      {
        sub_10001C99C(0, (unint64_t *)&qword_1004C4568);
        sub_10003972C(a1, a2, 1);
        sub_10003972C((id)a4, a5, 1);
        char v10 = static NSObject.== infix(_:_:)();
        sub_10003975C(a4, (uint64_t)a5, 1);
        uint64_t v11 = (uint64_t)a1;
        uint64_t v12 = (uint64_t)a2;
        char v13 = 1;
LABEL_10:
        sub_10003975C(v11, v12, v13);
        return v10 & 1;
      }
    }
    else if (a6 == 2)
    {
      sub_10001C99C(0, (unint64_t *)&qword_1004C4568);
      sub_10003972C(a1, a2, 2);
      sub_10003972C((id)a4, a5, 2);
      char v10 = static NSObject.== infix(_:_:)();
      sub_10003975C(a4, (uint64_t)a5, 2);
      uint64_t v11 = (uint64_t)a1;
      uint64_t v12 = (uint64_t)a2;
      char v13 = 2;
      goto LABEL_10;
    }
    char v14 = 0;
  }
  else
  {
    char v14 = ((a1 & 1) == 0) ^ a4;
    if (a6) {
      char v14 = 0;
    }
  }
  return v14 & 1;
}

uint64_t sub_100039B28()
{
  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_100039B60()
{
  return sub_10003810C(*(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

unint64_t sub_100039B94()
{
  unint64_t result = qword_1004C5CA0;
  if (!qword_1004C5CA0)
  {
    type metadata accessor for DispatchWorkItemFlags();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C5CA0);
  }
  return result;
}

unint64_t sub_100039BEC()
{
  unint64_t result = qword_1004C5CB0;
  if (!qword_1004C5CB0)
  {
    sub_100016EF4((uint64_t *)&unk_1004C68E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C5CB0);
  }
  return result;
}

uint64_t sub_100039C48()
{
  sub_10003975C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));

  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_100039C84()
{
  return _swift_deallocObject(v0, 25, 7);
}

id sub_100039CBC()
{
  double v1 = 0.0;
  if (*(unsigned char *)(v0 + 24)) {
    double v1 = 1.0;
  }
  return [*(id *)(v0 + 16) setAlpha:v1];
}

uint64_t sub_100039CE0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100039D18()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 33, 7);
}

void sub_100039D58(uint64_t a1)
{
  sub_100038604(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_100039D64()
{
  return sub_100037E60(0, 0, 1);
}

uint64_t sub_100039D94(uint64_t *a1)
{
  return sub_10007DA88(a1, *(void **)(v1 + 16));
}

id sub_100039D9C(double a1, double a2, double a3)
{
  id v6 = [objc_allocWithZone((Class)UIBezierPath) init];
  double v20 = a2 - a3;
  [v6 moveToPoint:a1 + -1.0];
  double v18 = a3 * 0.0 + a2;
  [v6 addLineToPoint:a1 + 0.0, v18];
  double v17 = a3 * 0.03 + a2;
  double v19 = a3 * 0.1 + a2;
  [v6 addCurveToPoint:a1 + 1.11];
  double v16 = a3 * 0.13 + a2;
  [v6 addLineToPoint:a1 + 2.22];
  double v15 = a3 * 0.65 + a2;
  [v6 addLineToPoint:a1 + 4.25];
  double v14 = a3 * 1.86 + a2;
  [v6 addLineToPoint:a1 + 6.03];
  double v7 = a3 * 3.94 + a2;
  [v6 addLineToPoint:a1 + 7.89, v7];
  double v8 = a3 * 6.19 + a2;
  [v6 addLineToPoint:a1 + 9.57, v8];
  double v9 = a3 * 8.2 + a2;
  [v6 addLineToPoint:a1 + 11.05, v9];
  double v10 = a3 * 10.19 + a2;
  [v6 addLineToPoint:a1 + 12.55, v10];
  double v11 = a3 * 12.0 + a2;
  double v12 = a3 * 11.4 + a2;
  [v6 addCurveToPoint:a1 + 15.0 controlPoint1:v11 controlPoint2:a1 + 13.6 v12 controlPoint1:a1 + 14.3 v11];
  [v6 addCurveToPoint:a1 + 17.45 controlPoint1:v10 controlPoint2:a1 + 15.8, v11, a1 + 16.2, v12];
  [v6 addLineToPoint:a1 + 18.95, v9];
  [v6 addLineToPoint:a1 + 20.43, v8];
  [v6 addLineToPoint:a1 + 22.11, v7];
  [v6 addLineToPoint:a1 + 23.97, v14];
  [v6 addLineToPoint:a1 + 25.75, v15];
  [v6 addLineToPoint:a1 + 27.78, v16];
  [v6 addLineToPoint:a1 + 28.89, v17];
  [v6 addCurveToPoint:a1 + 30.0 controlPoint1:v18 controlPoint2:a1 + 29.0];
  [v6 addLineToPoint:a1 + 30.3, v20];
  [v6 setLineJoinStyle:0];
  [v6 setMiterLimit:0.0];
  return v6;
}

void sub_10003A1C0()
{
  uint64_t v1 = v0;
  *(void *)&v0[qword_1004C4FB0] = 0;
  *(void *)&v0[qword_1004C4FB8] = 0;
  *(void *)&v0[qword_1004C4FC0] = 0;
  *(void *)&v0[qword_1004C4FC8] = 0;
  *(void *)&v0[qword_1004C4FD0] = 0;
  *(void *)&v0[qword_1004C4FD8] = 0;
  *(void *)&v0[qword_1004C4FE0] = 0;
  *(void *)&v0[qword_1004C4FE8] = 0;
  *(void *)&v0[qword_1004C4FF0] = 0;
  uint64_t v2 = &v0[qword_1004C5000];
  *(void *)uint64_t v2 = 0;
  v2[8] = 1;
  *(void *)&v0[qword_1004C5018] = 0x4032000000000000;
  uint64_t v3 = qword_1004C5020;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIBezierPath) init];
  *(void *)&v0[qword_1004C5028] = 0;
  int v4 = &v0[qword_1004C5038];
  *(void *)int v4 = 0;
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  uint64_t v5 = &v0[qword_1004C5040];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  *(void *)&v0[qword_1004C5048] = 0;
  v0[qword_1004C5050] = 0;
  *(void *)&v0[qword_1004C5058] = 0;
  id v6 = &v0[qword_1004C5060];
  *(void *)id v6 = 0x3FF0000000000000;
  *((void *)v6 + 1) = 0;
  *((void *)v6 + 2) = 0;
  *((void *)v6 + 3) = 0x3FF0000000000000;
  *((void *)v6 + 4) = 0;
  *((void *)v6 + 5) = 0;
  v0[qword_1004C5068] = 0;
  *(void *)&v0[qword_1004C5070] = 0;
  uint64_t v7 = qword_1004C5078;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v9 = sub_100012894((uint64_t *)&unk_1004C4710);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1004F8630;
  double v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 272);
  swift_retain();
  *(void *)&v1[v7] = v11(KeyPath, v10);
  uint64_t v12 = qword_1004C5080;
  uint64_t v13 = swift_getKeyPath();
  uint64_t v14 = sub_100012894((uint64_t *)&unk_1004CEA40);
  uint64_t v15 = qword_1004F8630;
  double v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 272);
  swift_retain();
  *(void *)&v1[v12] = v16(v13, v15);
  double v17 = &v1[qword_1004C5088];
  *(void *)double v17 = 0;
  *((void *)v17 + 1) = 0;
  v17[16] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t destroy for GuideSnapState(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GuideSnapState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  double v8 = *(void **)(a2 + 136);
  uint64_t v7 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = v8;
  *(void *)(a1 + 144) = v7;
  id v9 = v3;
  id v10 = v8;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GuideSnapState(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  long long v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  long long v7 = *(_OWORD *)(a2 + 16);
  long long v8 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 32) = v8;
  long long v10 = *(_OWORD *)(a2 + 96);
  long long v9 = *(_OWORD *)(a2 + 112);
  long long v11 = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v10;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 80) = v11;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v12 = *(void **)(a1 + 136);
  uint64_t v13 = *(void **)(a2 + 136);
  *(void *)(a1 + 136) = v13;
  id v14 = v13;

  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for GuideSnapState(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for GuideSnapState(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;

  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GuideSnapState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 144);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GuideSnapState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 144) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GuideSnapState()
{
  return &type metadata for GuideSnapState;
}

id sub_10003A76C()
{
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  id result = (id)*((void *)&xmmword_1004F8000 + 1);
  if (*((void *)&xmmword_1004F8000 + 1))
  {
    id v1 = (id)*((void *)&xmmword_1004F8000 + 1);
    qword_1004F7F48 = Contexts.PrivateQueue.init(_:)();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10003A7EC@<X0>(void *a1@<X8>)
{
  if (qword_1004C2900 != -1) {
    swift_once();
  }
  unint64_t v2 = (void *)qword_1004F7F48;
  *a1 = qword_1004F7F48;

  return v2;
}

uint64_t sub_10003A858(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 112);
  void v11[6] = *(_OWORD *)(a1 + 96);
  v11[7] = v2;
  v11[8] = *(_OWORD *)(a1 + 128);
  uint64_t v12 = *(void *)(a1 + 144);
  long long v3 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  void v11[3] = v3;
  long long v4 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v4;
  long long v5 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  v13[6] = *(_OWORD *)(a2 + 96);
  v13[7] = v6;
  v13[8] = *(_OWORD *)(a2 + 128);
  uint64_t v14 = *(void *)(a2 + 144);
  long long v7 = *(_OWORD *)(a2 + 48);
  v13[2] = *(_OWORD *)(a2 + 32);
  v13[3] = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  v13[4] = *(_OWORD *)(a2 + 64);
  v13[5] = v8;
  long long v9 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v9;
  return sub_10003ABA8((uint64_t)v11, (uint64_t)v13) & 1;
}

unint64_t sub_10003A8EC(uint64_t a1)
{
  unint64_t result = sub_10003A914();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10003A914()
{
  unint64_t result = qword_1004C5318;
  if (!qword_1004C5318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C5318);
  }
  return result;
}

uint64_t sub_10003A968(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 112);
  void v11[6] = *(_OWORD *)(a1 + 96);
  v11[7] = v2;
  char v12 = *(unsigned char *)(a1 + 128);
  long long v3 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  void v11[3] = v3;
  long long v4 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v4;
  long long v5 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  v13[6] = *(_OWORD *)(a2 + 96);
  v13[7] = v6;
  char v14 = *(unsigned char *)(a2 + 128);
  long long v7 = *(_OWORD *)(a2 + 48);
  v13[2] = *(_OWORD *)(a2 + 32);
  v13[3] = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  v13[4] = *(_OWORD *)(a2 + 64);
  v13[5] = v8;
  long long v9 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v9;
  return sub_10003A9EC((uint64_t)v11, (uint64_t)v13) & 1;
}

uint64_t sub_10003A9EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(void))((swift_isaMask & **(void **)a1) + 0xB8))();
  uint64_t v6 = v5;
  if (v4 == (*(uint64_t (**)(void))((swift_isaMask & **(void **)a2) + 0xB8))() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v9 & 1) == 0) {
      return result;
    }
  }
  unsigned int v11 = *(unsigned __int8 *)(a1 + 48);
  int v12 = *(unsigned __int8 *)(a2 + 48);
  uint64_t result = v12 & v11;
  if ((v12 & 1) == 0 && (v11 & 1) == 0)
  {
    float32x2_t v13 = *(float32x2_t *)(a1 + 16);
    float32x2_t v14 = *(float32x2_t *)(a2 + 16);
    *(float32x2_t *)v15.f32 = vsub_f32(v13, v14);
    *(float32x2_t *)&v15.u32[2] = vsub_f32(*(float32x2_t *)(a1 + 24), *(float32x2_t *)(a2 + 24));
    float32x4_t v16 = vmulq_f32(v15, v15);
    if (vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v16, 2), vaddq_f32(v16, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v16.f32, 1))).f32[0] <= 0.00000011921)
    {
      float32x2_t v17 = *(float32x2_t *)(a2 + 32);
      float32x2_t v18 = *(float32x2_t *)(a1 + 32);
      *(float32x2_t *)v19.f32 = vsub_f32(v18, v17);
      *(float32x2_t *)&v19.u32[2] = vsub_f32(*(float32x2_t *)(a1 + 40), *(float32x2_t *)(a2 + 40));
      float32x4_t v20 = vmulq_f32(v19, v19);
      return vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v20, 2), vaddq_f32(v20, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v20.f32, 1))).f32[0] <= 0.00000011921;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10003ABA8(uint64_t a1, uint64_t a2)
{
  sub_10003AD94(a1, (uint64_t)v50);
  sub_10003AD94(a2, (uint64_t)v51);
  sub_10003AD94((uint64_t)v50, (uint64_t)v52);
  if (sub_100016B28(v52) == 1)
  {
    sub_10003AD94((uint64_t)v51, (uint64_t)v31);
    if (sub_100016B28(v31) == 1) {
      goto LABEL_7;
    }
LABEL_5:
    sub_10003AD94((uint64_t)v50, (uint64_t)v31);
    sub_10003AD94((uint64_t)v51, (uint64_t)&v40);
    sub_100016B40(v50);
    sub_100016B40(v51);
    sub_10003ADFC((uint64_t)v31);
    goto LABEL_12;
  }
  sub_10003AD94((uint64_t)v51, (uint64_t)v30);
  if (sub_100016B28(v30) == 1) {
    goto LABEL_5;
  }
  sub_10003AD94((uint64_t)v50, (uint64_t)&v12);
  uint64_t v41 = v12;
  long long v42 = v13;
  long long v43 = v14;
  char v44 = v15;
  long long v45 = v16;
  long long v46 = v17;
  long long v47 = v18;
  long long v48 = v19;
  char v49 = v20;
  sub_10003AD94((uint64_t)v51, (uint64_t)&v21);
  v31[0] = v21;
  long long v32 = v22;
  long long v33 = v23;
  char v34 = v24;
  long long v35 = v25;
  long long v36 = v26;
  long long v37 = v27;
  long long v38 = v28;
  char v39 = v29;
  sub_100016B40(v50);
  sub_100016B40(v51);
  char v4 = sub_10003A9EC((uint64_t)&v41, (uint64_t)v31);
  sub_100016B6C(v51);
  sub_100016B6C(v50);
  if ((v4 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_7:
  uint64_t v5 = *(void **)(a1 + 136);
  uint64_t v6 = *(void **)(a2 + 136);
  if (v5)
  {
    if (v6)
    {
      type metadata accessor for WorldEdge();
      id v7 = v6;
      id v8 = v5;
      char v9 = static NSObject.== infix(_:_:)();

      if (v9) {
        goto LABEL_10;
      }
    }
LABEL_12:
    char v10 = 0;
    return v10 & 1;
  }
  if (v6) {
    goto LABEL_12;
  }
LABEL_10:
  sub_100085CE0(*(float32x4_t **)(a1 + 144), *(float32x4_t **)(a2 + 144));
  return v10 & 1;
}

uint64_t sub_10003AD94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894((uint64_t *)&unk_1004CEA30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003ADFC(uint64_t a1)
{
  long long v2 = *(void **)(a1 + 144);

  return a1;
}

void destroy for MotionState(id *a1)
{
}

uint64_t initializeWithCopy for GuideSnapDetails(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  id v7 = v3;
  return a1;
}

uint64_t assignWithCopy for GuideSnapDetails(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  long long v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  long long v7 = *(_OWORD *)(a2 + 16);
  long long v8 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 32) = v8;
  long long v10 = *(_OWORD *)(a2 + 96);
  long long v9 = *(_OWORD *)(a2 + 112);
  long long v11 = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v10;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 80) = v11;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  return a1;
}

__n128 initializeWithTake for GuideSnapDetails(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for GuideSnapDetails(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for GuideSnapDetails(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 129)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GuideSnapDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 128) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 129) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 129) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GuideSnapDetails()
{
  return &type metadata for GuideSnapDetails;
}

void sub_10003B054()
{
}

void sub_10003B07C()
{
  id v1 = (void *)v0;
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v15 = *(void *)(v2 - 8);
  uint64_t v16 = v2;
  __chkstk_darwin(v2);
  long long v14 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  *(unsigned char *)(v0 + 80) = 0;
  *(void *)(v0 + 96) = 0;
  *(void *)(v0 + 104) = 0;
  *(void *)(v0 + 88) = 0;
  uint64_t v6 = sub_100012894(&qword_1004C54B8);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1004F8630;
  long long v9 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 272);
  swift_retain();
  v1[14] = v9(KeyPath, v8);
  sub_100012894(&qword_1004C54C0);
  swift_getKeyPath();
  v1[15] = MutableStateValue.__allocating_init(_:_:)();
  long long v17 = 0;
  sub_100012894(&qword_1004C54C8);
  swift_allocObject();
  v1[16] = Synchronized.init(wrappedValue:)();
  swift_unknownObjectUnownedInit();
  v1[18] = _swiftEmptyArrayStorage;
  uint64_t v10 = swift_getKeyPath();
  uint64_t v11 = sub_100012894(&qword_1004CA010);
  uint64_t v12 = qword_1004F8630;
  long long v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 272);
  swift_retain();
  v1[19] = v13(v10, v12);
  swift_unknownObjectWeakInit();
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  static DispatchQoS.userInitiated.getter();
  long long v17 = _swiftEmptyArrayStorage;
  sub_10003FD08((unint64_t *)&qword_1004C6B50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100012894(&qword_1004CF220);
  sub_10003FD50((unint64_t *)&qword_1004C6B60, &qword_1004CF220);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v14, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v16);
  v1[21] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  swift_release();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10003B48C()
{
  swift_retain();
  StateValue.ifUpdated(_:)();

  return swift_release();
}

void sub_10003B4E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*(unsigned char *)(v0 + 80))
  {
    case 1:
      uint64_t v10 = *(void *)(v0 + 72);
      uint64_t v11 = *(void *)(v10 + 16);
      if (v11)
      {
        swift_bridgeObjectRetain();
        uint64_t v12 = (uint64_t *)(v10 + 40);
        do
        {
          uint64_t v13 = *v12;
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
          swift_unknownObjectRetain();
          v15(ObjectType, v13);
          swift_unknownObjectRelease();
          v12 += 2;
          --v11;
        }
        while (v11);
        swift_bridgeObjectRelease();
      }
      *(unsigned char *)(v0 + 80) = 2;
      break;
    case 2:
      uint64_t v16 = *(void *)(v0 + 72);
      uint64_t v17 = *(void *)(v16 + 16);
      if (v17)
      {
        swift_bridgeObjectRetain();
        long long v18 = (uint64_t *)(v16 + 40);
        do
        {
          uint64_t v19 = *v18;
          uint64_t v20 = swift_getObjectType();
          uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 24);
          swift_unknownObjectRetain();
          LOBYTE(v19) = v21(v20, v19);
          swift_unknownObjectRelease();
          if ((v19 & 1) == 0) {
            goto LABEL_35;
          }
          v18 += 2;
          --v17;
        }
        while (v17);
        swift_bridgeObjectRelease();
      }
      *(unsigned char *)(v0 + 80) = 3;
      break;
    case 3:
      *(unsigned char *)(v0 + 80) = 4;
      break;
    case 4:
      *(unsigned char *)(v0 + 80) = 5;
      sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
      uint64_t v48 = static OS_dispatch_queue.main.getter();
      id v54 = sub_10003FE08;
      uint64_t v55 = v0;
      CGAffineTransform aBlock = _NSConcreteStackBlock;
      uint64_t v51 = 1107296256;
      id v52 = sub_100049AB4;
      id v53 = &unk_100489140;
      long long v22 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      static DispatchQoS.unspecified.getter();
      CGAffineTransform aBlock = (void **)_swiftEmptyArrayStorage;
      sub_10003FD08((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100012894((uint64_t *)&unk_1004C68E0);
      sub_10003FD50((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      long long v23 = (void *)v48;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v22);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      break;
    case 6:
      uint64_t v46 = v7;
      uint64_t v47 = v6;
      uint64_t v48 = v3;
      uint64_t v24 = *(void *)(*(void *)(v0 + 72) + 16);
      if (v24)
      {
        uint64_t v45 = v2;
        uint64_t v44 = swift_bridgeObjectRetain();
        long long v25 = (uint64_t *)(v44 + 40);
        do
        {
          uint64_t v26 = *v25;
          uint64_t v27 = swift_getObjectType();
          long long v28 = *(void (**)(uint64_t, uint64_t))(v26 + 16);
          swift_unknownObjectRetain();
          v28(v27, v26);
          swift_unknownObjectRelease();
          v25 += 2;
          --v24;
        }
        while (v24);
        swift_bridgeObjectRelease();
        uint64_t v2 = v45;
      }
      if ([self jasperAvailable])
      {
        swift_retain();
        Synchronized.wrappedValue.getter();
        swift_release();
        char v29 = aBlock;
        if (aBlock)
        {
          id v30 = *(void **)(v1 + 168);
          uint64_t v31 = swift_allocObject();
          *(void *)(v31 + 16) = v1;
          *(void *)(v31 + 24) = v29;
          id v54 = sub_10003FDE0;
          uint64_t v55 = v31;
          CGAffineTransform aBlock = _NSConcreteStackBlock;
          uint64_t v51 = 1107296256;
          id v52 = sub_100049AB4;
          id v53 = &unk_100489118;
          long long v32 = _Block_copy(&aBlock);
          swift_retain();
          id v33 = v30;
          char v34 = v29;
          static DispatchQoS.unspecified.getter();
          char v49 = _swiftEmptyArrayStorage;
          sub_10003FD08((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_100012894((uint64_t *)&unk_1004C68E0);
          sub_10003FD50((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v32);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v5, v2);
          (*(void (**)(char *, uint64_t))(v46 + 8))(v9, v47);
          swift_release();
        }
        CGAffineTransform aBlock = 0;
        swift_retain();
        Synchronized.wrappedValue.setter();
        swift_release();
      }
      *(unsigned char *)(v1 + 80) = 7;
      break;
    case 7:
      uint64_t v35 = *(void *)(v0 + 72);
      uint64_t v36 = *(void *)(v35 + 16);
      if (v36)
      {
        swift_bridgeObjectRetain();
        long long v37 = (uint64_t *)(v35 + 40);
        while (1)
        {
          uint64_t v38 = *v37;
          uint64_t v39 = swift_getObjectType();
          uint64_t v40 = *(uint64_t (**)(uint64_t, uint64_t))(v38 + 32);
          swift_unknownObjectRetain();
          LOBYTE(v38) = v40(v39, v38);
          swift_unknownObjectRelease();
          if ((v38 & 1) == 0) {
            break;
          }
          v37 += 2;
          if (!--v36)
          {
            swift_bridgeObjectRelease();
            goto LABEL_29;
          }
        }
LABEL_35:
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_29:
        *(unsigned char *)(v0 + 80) = 8;
      }
      break;
    case 8:
      *(unsigned char *)(v0 + 80) = 9;
      break;
    case 9:
      *(unsigned char *)(v0 + 80) = 10;
      sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
      uint64_t v48 = static OS_dispatch_queue.main.getter();
      id v54 = (uint64_t (*)())sub_10003FCE8;
      uint64_t v55 = v0;
      CGAffineTransform aBlock = _NSConcreteStackBlock;
      uint64_t v51 = 1107296256;
      id v52 = sub_100049AB4;
      id v53 = &unk_1004890C8;
      uint64_t v41 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      static DispatchQoS.unspecified.getter();
      CGAffineTransform aBlock = (void **)_swiftEmptyArrayStorage;
      sub_10003FD08((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100012894((uint64_t *)&unk_1004C68E0);
      sub_10003FD50((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      long long v42 = (void *)v48;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v41);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if (qword_1004C2B40 != -1) {
        swift_once();
      }
      v43._object = (void *)0x80000001004207E0;
      v43._uint64_t countAndFlagsBits = 0xD000000000000016;
      Log.default(_:isPrivate:)(v43, 0);
      break;
    default:
      return;
  }
}

uint64_t sub_10003BE0C(uint64_t result, uint64_t a2)
{
  if (!*(unsigned char *)(v2 + 80))
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void **)(v2 + 64);
    id v6 = [v5 snapshotViewAfterScreenUpdates:0];
    if (v6)
    {
      uint64_t v7 = v6;
      [v5 bounds];
      [v7 setFrame:];
      id v8 = [v5 superview];
      [v8 addSubview:v7];

      long long v9 = *(void **)(v2 + 88);
      *(void *)(v2 + 88) = v7;
    }
    uint64_t v10 = *(void *)(v2 + 96);
    *(void *)(v2 + 96) = v4;
    *(void *)(v2 + 104) = a2;
    sub_100028914(v10);
    *(unsigned char *)(v2 + 80) = 1;
    return swift_retain();
  }
  return result;
}

void sub_10003BF08()
{
  swift_bridgeObjectRelease();
  sub_100028914(*(void *)(v0 + 96));
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectUnownedDestroy();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectWeakDestroy();
  uint64_t v1 = *(void **)(v0 + 168);
}

uint64_t sub_10003BF88()
{
  uint64_t v0 = StateObserver.deinit();

  swift_bridgeObjectRelease();
  sub_100028914(*(void *)(v0 + 96));
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectUnownedDestroy();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectWeakDestroy();

  return v0;
}

uint64_t sub_10003C010()
{
  sub_10003BF88();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CaptureController()
{
  uint64_t result = qword_1004C5348;
  if (!qword_1004C5348) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10003C08C()
{
  return swift_initClassMetadata2();
}

uint64_t getEnumTagSinglePayload for CaptureController.CaptureState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CaptureController.CaptureState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    void *result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003C280);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CaptureController.CaptureState()
{
  return &type metadata for CaptureController.CaptureState;
}

unint64_t sub_10003C2BC()
{
  unint64_t result = qword_1004C54B0;
  if (!qword_1004C54B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C54B0);
  }
  return result;
}

void sub_10003C310()
{
  void (*v30)(void *__return_ptr, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t (*v36)(void);
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  long long v53;
  long long v54;
  long long v55;
  long long v56;
  long long v57;
  float32x2_t v58;
  float v59;
  CGPoint v60;
  CGFloat y;
  uint64_t v62;
  void *v63;
  void *v64;
  uint64_t v65;
  long long v66;
  long long v67;
  long long v68;
  long long v69;
  double v70;
  uint64_t v71;
  char v72;
  void *v73;
  long long v74;
  long long v75;
  long long v76;
  long long v77;
  long long v78;
  float v79;
  float v80;
  double v81;
  double v82;
  double v83;
  double v84;
  id v85;
  double v86;
  double v87;
  double v88;
  uint64_t (*v89)(void);
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v97;
  unint64_t v98;
  double *v99;
  uint64_t v100;
  uint64_t j;
  id v102;
  void *v103;
  void (*v104)(void *__return_ptr, uint64_t);
  uint64_t v105;
  void *v106;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  void *v113;
  void *v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  double v119;
  CGFloat v120;
  double v121;
  CGFloat v122;
  double v123;
  CGFloat v124;
  double v125;
  CGFloat v126;
  uint64_t v127;
  void *v128;
  void *v129;
  uint64_t v130;
  long long v131;
  long long v132;
  long long v133;
  long long v134;
  long long v135;
  float32x2_t v136;
  float v137;
  BOOL v138;
  CGPoint v139;
  CGFloat v140;
  uint64_t v141;
  void *v142;
  void *v143;
  uint64_t v144;
  long long v145;
  long long v146;
  long long v147;
  long long v148;
  long long v149;
  float32x2_t v150;
  float v151;
  CGPoint v152;
  CGFloat v153;
  unint64_t v154;
  void *v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  void *v162;
  void *v163;
  long long v164;
  long long v165;
  long long v166;
  long long v167;
  long long v168;
  float v169;
  float v170;
  double v171;
  double v172;
  double v173;
  double v174;
  id v175;
  double v176;
  double v177;
  double v178;
  uint64_t (*v179)(void);
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char v183;
  unint64_t v184;
  double *v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  id v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t k;
  id v193;
  void *v194;
  void *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t (*v198)(uint64_t);
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  id v202;
  uint64_t v203;
  uint64_t v204;
  id v205;
  id v206;
  unint64_t v207;
  id v208;
  unint64_t v209;
  id Strong;
  long long v211;
  long long v212;
  long long v213;
  long long v214;
  long long v215;
  long long v216;
  uint64_t v217;
  unsigned char v218[504];
  _OWORD v219[32];
  unsigned char v220[512];
  _OWORD v221[32];
  void v222[64];
  unint64_t v223;
  CGRect v224;
  CGRect v225;
  CGRect v226;

  uint64_t v3 = v0;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t)&v195 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  *(void *)uint64_t v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_19:
    if (v7 < 0) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = v7 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v10) {
      goto LABEL_23;
    }
    goto LABEL_4;
  }
  v223 = (unint64_t)_swiftEmptyArrayStorage;
  *(void *)&v216 = *(void *)(v3 + 64);
  uint64_t v9 = (uint64_t)[(id)v216 subviews];
  sub_10001C99C(0, (unint64_t *)&qword_1004CA030);
  uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v217 = v3;
  if ((unint64_t)v7 >> 62) {
    goto LABEL_19;
  }
  uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10) {
    goto LABEL_23;
  }
LABEL_4:
  if (v10 < 1)
  {
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
    goto LABEL_164;
  }
  for (uint64_t i = 0; i != v10; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0) {
      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v12 = *(id *)(v7 + 8 * i + 32);
    }
    uint64_t v13 = v12;
    if (([v12 isHidden] & 1) == 0)
    {
      swift_getObjectType();
      if (!(swift_conformsToProtocol2() ? v13 : 0))
      {
        id v15 = v13;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v223 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v223 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        [v15 setHidden:1];
      }
    }
  }
LABEL_23:
  swift_bridgeObjectRelease();
  sub_10001C99C(0, &qword_1004C54D0);
  uint64_t v16 = (uint64_t)[(id)swift_getObjCClassFromMetadata() preferredFormat];
  [(id)v216 bounds];
  id v21 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithBounds:v16 format:v17, v18, v19, v20];
  uint64_t v22 = swift_allocObject();
  unint64_t v1 = v217;
  *(void *)(v22 + 16) = sub_10003FE0C;
  *(void *)(v22 + 24) = v1;
  v222[4] = sub_10003FE6C;
  v222[5] = v22;
  v222[0] = _NSConcreteStackBlock;
  v222[1] = 1107296256;
  v222[2] = sub_1001FD168;
  v222[3] = &unk_100489190;
  long long v23 = _Block_copy(v222);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v24 = (uint64_t)[v21 imageWithActions:v23];
  _Block_release(v23);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v23) {
    goto LABEL_158;
  }
  if (qword_1004C2E30 != -1) {
LABEL_159:
  }
    swift_once();
  v205 = v21;
  v206 = (id)v16;
  swift_retain();
  PublishedValue.wrappedValue.getter();
  swift_release();
  if (!v24
    || (uint64_t v25 = v222[0],
        id v26 = (id)v24,
        uint64_t v27 = (void *)UIImage.rotated(to:)(),
        v26,
        v26,
        !v27))
  {
    uint64_t v9 = v223;
    uint64_t v2 = (uint64_t)&off_1004B7000;
    if (!(v223 >> 62))
    {
      uint64_t v100 = *(void *)((v223 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v100)
      {
LABEL_71:
        if (v100 < 1) {
          goto LABEL_168;
        }
        for (j = 0; j != v100; ++j)
        {
          if ((v9 & 0xC000000000000001) != 0) {
            uint64_t v102 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            uint64_t v102 = *(id *)(v9 + 8 * j + 32);
          }
          id v103 = v102;
          [v102 *(SEL *)(v2 + 2720)];
        }
      }
LABEL_165:
      swift_bridgeObjectRelease();
      *(unsigned char *)(v1 + 80) = 6;
      swift_release();
LABEL_188:
      swift_bridgeObjectRelease();

      return;
    }
LABEL_164:
    swift_bridgeObjectRetain();
    uint64_t v100 = _CocoaArrayWrapper.endIndex.getter();
    if (v100) {
      goto LABEL_71;
    }
    goto LABEL_165;
  }
  long long v28 = self;
  v195 = v27;
  v202 = v27;
  char v29 = &off_1004B7000;
  if ([v28 jasperAvailable])
  {
    uint64_t Strong = (id)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      v196 = v25;
      *(void *)(v1 + 144) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      id v30 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v1 + 152) + 144);
      uint64_t v31 = swift_retain();
      v30(v222, v31);
      swift_release();
      *(void *)&v221[0] = v222[0];
      swift_bridgeObjectRetain();
      long long v32 = sub_100012894(&qword_1004C4358);
      sub_100012894(&qword_1004C4360);
      v209 = v32;
      swift_dynamicCast();
      unint64_t v1 = v222[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v1 >> 62) {
        goto LABEL_169;
      }
      uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_31:
      if (v2)
      {
        if (v2 >= 1)
        {
          id v33 = 0;
          *(void *)&v216 = v1 & 0xC000000000000001;
          while (1)
          {
            char v34 = (void)v216
                ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
                : *(id *)(v1 + 8 * v33 + 32);
            uint64_t v35 = v34;
            uint64_t v36 = *(uint64_t (**)(void))((swift_isaMask & *v34) + 0x250);
            long long v37 = v36();
            uint64_t v38 = v37 >> 62 ? _CocoaArrayWrapper.endIndex.getter() : *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
            uint64_t v39 = swift_bridgeObjectRelease();
            if (v38 >= 2 && ((*(uint64_t (**)(uint64_t))((swift_isaMask & *v35) + 0x2C8))(v39) & 1) != 0)
            {
              uint64_t v40 = [Strong frame];
              long long v42 = v41;
              uint64_t v44 = v43;
              uint64_t v46 = v45;
              uint64_t v48 = v47;
              uint64_t v9 = (uint64_t)v35;
              char v49 = ((uint64_t (*)(id))v36)(v40);
              if ((v49 & 0xC000000000000001) != 0)
              {
                uint64_t v50 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                if (!*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_163;
                }
                uint64_t v50 = *(id *)(v49 + 32);
              }
              uint64_t v51 = v50;
              id v52 = swift_bridgeObjectRelease();
              *(double *)&id v53 = (*(double (**)(uint64_t))((swift_isaMask & *v51) + 0x2B0))(v52);
              v214 = v54;
              v215 = v53;
              v212 = v56;
              v213 = v55;

              simd_float4x4.position.getter();
              v215 = v57;
              type metadata accessor for MeasureCamera();
              swift_retain();
              StateValue.wrappedValue.getter();
              swift_release();
              memcpy(v221, v220, 0x1F8uLL);
              sub_10003FFD4((uint64_t)v221);
              v213 = v221[11];
              v214 = v221[10];
              v211 = v221[13];
              v212 = v221[12];
              swift_retain();
              StateValue.wrappedValue.getter();
              swift_release();
              memcpy(v222, v220, 0x1F8uLL);
              sub_10003FFD4((uint64_t)v222);
              static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
              if (v59 >= 0.0 && v59 <= 1.0)
              {
                id v60 = (CGPoint)vcvtq_f64_f32(v58);
                y = v60.y;
                v224.origin.x = v42;
                v224.origin.y = v44;
                v224.size.width = v46;
                v224.size.height = v48;
                if (CGRectContainsPoint(v224, v60))
                {
                  NSString v62 = v36();
                  if ((v62 & 0xC000000000000001) != 0)
                  {
                    id v63 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else
                  {
                    if (*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
                      goto LABEL_191;
                    }
                    id v63 = *(id *)(v62 + 40);
                  }
                  id v64 = v63;
                  id v65 = swift_bridgeObjectRelease();
                  *(double *)&double v66 = (*(double (**)(uint64_t))((swift_isaMask & *v64) + 0x2B0))(v65);
                  v214 = v67;
                  v215 = v66;
                  v212 = v69;
                  v213 = v68;

                  simd_float4x4.position.getter();
                  id v71 = sub_10003F6FC(v70, v42, v44, v46, v48);
                  if ((v72 & 1) == 0) {
                    break;
                  }
                }
              }
            }

LABEL_35:
            if (v2 == ++v33) {
              goto LABEL_77;
            }
          }
          id v73 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v35) + 0x268))(v71);
          *(double *)&id v74 = (*(double (**)(void))((swift_isaMask & *v73) + 0x2B0))();
          v214 = v75;
          v215 = v74;
          v212 = v77;
          v213 = v76;

          simd_float4x4.position.getter();
          v215 = v78;
          swift_retain();
          StateValue.wrappedValue.getter();
          swift_release();
          memcpy(v219, v220, 0x1F8uLL);
          sub_10003FFD4((uint64_t)v219);
          v213 = v219[11];
          v214 = v219[10];
          v211 = v219[13];
          v212 = v219[12];
          swift_retain();
          StateValue.wrappedValue.getter();
          swift_release();
          memcpy(v220, v218, 0x1F8uLL);
          sub_10003FFD4((uint64_t)v220);
          static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
          id v81 = v80;
          uint64_t v82 = v79;
          switch(v196)
          {
            case 2:
              id v85 = Strong;
              [Strong frame];
              id v81 = v86 - v81;
              [v85 frame];
              id v84 = v87 - v82;
              break;
            case 3:
              [Strong frame];
              id v84 = v88 - v81;
              goto LABEL_61;
            case 4:
              [Strong frame];
              uint64_t v82 = v83 - v82;
              id v84 = v81;
LABEL_61:
              id v89 = *(uint64_t (**)(void))((swift_isaMask & *v35) + 0xB8);
              id v90 = v35;
              uint64_t v91 = v89();
              id v93 = v92;

              id v94 = v217;
              id v95 = *(void **)(v217 + 144);
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(void *)(v94 + 144) = v95;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                id v95 = sub_10006E4BC(0, v95[2] + 1, 1, v95);
                *(void *)(v217 + 144) = v95;
              }
              uint64_t v98 = v95[2];
              uint64_t v97 = v95[3];
              if (v98 >= v97 >> 1)
              {
                id v95 = sub_10006E4BC((void *)(v97 > 1), v98 + 1, 1, v95);
                *(void *)(v217 + 144) = v95;
              }
              v95[2] = v98 + 1;
              double v99 = (double *)&v95[4 * v98];
              v99[4] = v82;
              v99[5] = v84;
              *((void *)v99 + 6) = v91;
              *((void *)v99 + 7) = v93;

              goto LABEL_35;
            default:
              id v84 = v79;
              break;
          }
          uint64_t v82 = v81;
          goto LABEL_61;
        }
        goto LABEL_190;
      }
LABEL_77:
      swift_bridgeObjectRelease();
      id v104 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v217 + 152) + 144);
      uint64_t v105 = swift_retain();
      v104(v222, v105);
      swift_release();
      uint64_t v9 = v222[0];
      uint64_t v24 = v222[1];
      *(void *)&v221[0] = v222[1];
      swift_bridgeObjectRetain();
      sub_100012894(&qword_1004C54D8);
      swift_dynamicCast();
      uint64_t v16 = v222[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v203 = v16;
      if ((unint64_t)v16 >> 62)
      {
        if (v16 < 0) {
          uint64_t v9 = v16;
        }
        else {
          uint64_t v9 = v16 & 0xFFFFFFFFFFFFFF8;
        }
        swift_bridgeObjectRetain();
        id v21 = (id)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v21) {
          goto LABEL_79;
        }
      }
      else
      {
        id v21 = *(id *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v21)
        {
LABEL_79:
          uint64_t v2 = 0;
          v208 = v21;
          v209 = v203 & 0xC000000000000001;
          v200 = v203 + 32;
          v201 = v203 & 0xFFFFFFFFFFFFFF8;
          do
          {
            if (v209)
            {
              double v106 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if ((unint64_t)v2 >= *(void *)(v201 + 16))
              {
                __break(1u);
LABEL_161:
                __break(1u);
                goto LABEL_162;
              }
              double v106 = *(id *)(v200 + 8 * v2);
            }
            unint64_t v1 = (unint64_t)v106;
            if (__OFADD__(v2++, 1))
            {
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
              goto LABEL_159;
            }
            uint64_t v16 = *(void *)((swift_isaMask & *v106) + 0x230);
            uint64_t v108 = (swift_isaMask & *v106) + 560;
            id v109 = ((uint64_t (*)(void))v16)();
            uint64_t v9 = v109;
            if (v109 >> 62) {
              uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
            }
            else {
              uint64_t v24 = *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            simd_float4 v110 = swift_bridgeObjectRelease();
            if (v24 < 4)
            {
            }
            else
            {
              uint64_t v9 = v1;
              id v111 = ((uint64_t (*)(uint64_t))v16)(v110);
              uint64_t v24 = v111;
              if (v111 >> 62)
              {
                id v112 = _CocoaArrayWrapper.endIndex.getter();
                if (!v112)
                {
LABEL_134:
                  v160 = swift_bridgeObjectRelease();
                  v159 = ((uint64_t (*)(uint64_t))v16)(v160);
LABEL_135:
                  if ((v159 & 0xC000000000000001) != 0)
                  {
                    v161 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else
                  {
                    if (!*(void *)((v159 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                      goto LABEL_167;
                    }
                    v161 = *(id *)(v159 + 32);
                  }
                  v162 = v161;
                  swift_bridgeObjectRelease();
                  type metadata accessor for MeasureCamera();
                  v163 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v162) + 0x268))();

                  *(double *)&v164 = (*(double (**)(void))((swift_isaMask & *v163) + 0x2B0))();
                  v215 = v165;
                  v216 = v164;
                  v213 = v167;
                  v214 = v166;

                  simd_float4x4.position.getter();
                  v216 = v168;
                  swift_retain();
                  StateValue.wrappedValue.getter();
                  swift_release();
                  memcpy(v221, v222, 0x1F8uLL);
                  sub_10003FFD4((uint64_t)v221);
                  v214 = v221[11];
                  v215 = v221[10];
                  v212 = v221[13];
                  v213 = v221[12];
                  swift_retain();
                  StateValue.wrappedValue.getter();
                  swift_release();
                  memcpy(v222, v220, 0x1F8uLL);
                  sub_10003FFD4((uint64_t)v222);
                  static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
                  v171 = v170;
                  v172 = v169;
                  switch(v196)
                  {
                    case 2:
                      v175 = Strong;
                      [Strong frame];
                      v171 = v176 - v171;
                      [v175 frame];
                      v174 = v177 - v172;
                      break;
                    case 4:
                      [Strong frame];
                      v172 = v178 - v172;
                      v174 = v171;
                      goto LABEL_146;
                    case 3:
                      [Strong frame];
                      v174 = v173 - v171;
LABEL_146:
                      v179 = *(uint64_t (**)(void))((swift_isaMask & *(void *)v1) + 0xB8);
                      uint64_t v9 = (uint64_t)(id)v1;
                      uint64_t v24 = v179();
                      v181 = v180;

                      v182 = v217;
                      unint64_t v1 = *(void *)(v217 + 144);
                      v183 = swift_isUniquelyReferenced_nonNull_native();
                      *(void *)(v182 + 144) = v1;
                      if ((v183 & 1) == 0)
                      {
                        unint64_t v1 = (unint64_t)sub_10006E4BC(0, *(void *)(v1 + 16) + 1, 1, (void *)v1);
                        *(void *)(v217 + 144) = v1;
                      }
                      uint64_t v16 = *(void *)(v1 + 16);
                      v184 = *(void *)(v1 + 24);
                      if (v16 >= v184 >> 1)
                      {
                        unint64_t v1 = (unint64_t)sub_10006E4BC((void *)(v184 > 1), v16 + 1, 1, (void *)v1);
                        *(void *)(v217 + 144) = v1;
                      }
                      *(void *)(v1 + 16) = v16 + 1;
                      v185 = (double *)(v1 + 32 * v16);
                      v185[4] = v172;
                      v185[5] = v174;
                      *((void *)v185 + 6) = v24;
                      *((void *)v185 + 7) = v181;

                      continue;
                    default:
                      v174 = v169;
                      break;
                  }
                  v172 = v171;
                  goto LABEL_146;
                }
              }
              else
              {
                id v112 = *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10);
                if (!v112) {
                  goto LABEL_134;
                }
              }
              v207 = v24 & 0xC000000000000001;
              v197 = v108;
              v198 = (uint64_t (*)(uint64_t))v16;
              if ((v24 & 0xC000000000000001) != 0)
              {
                uint64_t v113 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_161;
                }
                uint64_t v113 = *(id *)(v24 + 32);
              }
              id v114 = v113;
              uint64_t v16 = *(void *)((swift_isaMask & *v113) + 0x250);
              double v115 = ((uint64_t (*)(void))v16)();
              uint64_t v9 = v115;
              if (v115 >> 62) {
                double v116 = _CocoaArrayWrapper.endIndex.getter();
              }
              else {
                double v116 = *(void *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x10);
              }
              swift_bridgeObjectRelease();
              if (v116 >= 2)
              {
                *(void *)&v216 = type metadata accessor for MeasureCamera();
                objc_super v117 = 0;
                id v21 = (id)v16;
                v199 = v24 & 0xFFFFFFFFFFFFFF8;
                v204 = v112 - 1;
                while (1)
                {
                  (*(void (**)(void))((swift_isaMask & *v114) + 0x2C8))();
                  id v118 = [Strong frame];
                  id v120 = v119;
                  Swift::String v122 = v121;
                  double v124 = v123;
                  uint64_t v126 = v125;
                  id v127 = ((uint64_t (*)(id))v21)(v118);
                  if ((v127 & 0xC000000000000001) != 0)
                  {
                    uint64_t v128 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else
                  {
                    if (!*(void *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                      goto LABEL_155;
                    }
                    uint64_t v128 = *(id *)(v127 + 32);
                  }
                  uint64_t v129 = v128;
                  char v130 = swift_bridgeObjectRelease();
                  *(double *)&uint64_t v131 = (*(double (**)(uint64_t))((swift_isaMask & *v129) + 0x2B0))(v130);
                  v214 = v132;
                  v215 = v131;
                  v212 = v134;
                  v213 = v133;

                  simd_float4x4.position.getter();
                  v215 = v135;
                  uint64_t v16 = v217;
                  swift_retain();
                  StateValue.wrappedValue.getter();
                  swift_release();
                  memcpy(v221, v220, 0x1F8uLL);
                  sub_10003FFD4((uint64_t)v221);
                  v213 = v221[11];
                  v214 = v221[10];
                  v211 = v221[13];
                  v212 = v221[12];
                  swift_retain();
                  StateValue.wrappedValue.getter();
                  swift_release();
                  memcpy(v222, v220, 0x1F8uLL);
                  sub_10003FFD4((uint64_t)v222);
                  uint64_t v9 = v216;
                  static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
                  v138 = v137 < 0.0 || v137 > 1.0;
                  if (v138
                    || (Swift::String v139 = (CGPoint)vcvtq_f64_f32(v136),
                        Swift::String v140 = v139.y,
                        v225.origin.x = v120,
                        v225.origin.y = v122,
                        v225.size.width = v124,
                        v225.size.height = v126,
                        !CGRectContainsPoint(v225, v139)))
                  {

                    swift_bridgeObjectRelease();
                    goto LABEL_128;
                  }
                  Swift::String v141 = ((uint64_t (*)(void))v21)();
                  if ((v141 & 0xC000000000000001) != 0)
                  {
                    Swift::String v142 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else
                  {
                    if (*(void *)((v141 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
                      goto LABEL_156;
                    }
                    Swift::String v142 = *(id *)(v141 + 40);
                  }
                  v143 = v142;
                  v144 = swift_bridgeObjectRelease();
                  *(double *)&v145 = (*(double (**)(uint64_t))((swift_isaMask & *v143) + 0x2B0))(v144);
                  v214 = v146;
                  v215 = v145;
                  v212 = v148;
                  v213 = v147;

                  simd_float4x4.position.getter();
                  v215 = v149;
                  uint64_t v16 = v217;
                  swift_retain();
                  StateValue.wrappedValue.getter();
                  swift_release();
                  memcpy(v219, v218, 0x1F8uLL);
                  sub_10003FFD4((uint64_t)v219);
                  v213 = v219[11];
                  v214 = v219[10];
                  v211 = v219[13];
                  v212 = v219[12];
                  swift_retain();
                  StateValue.wrappedValue.getter();
                  swift_release();
                  memcpy(v220, v218, 0x1F8uLL);
                  sub_10003FFD4((uint64_t)v220);
                  uint64_t v9 = v216;
                  static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
                  id v21 = v208;
                  if (v151 < 0.0 || v151 > 1.0)
                  {
                    swift_bridgeObjectRelease();

                    goto LABEL_81;
                  }
                  v152 = (CGPoint)vcvtq_f64_f32(v150);
                  v153 = v152.y;
                  v226.origin.x = v120;
                  v226.origin.y = v122;
                  v226.size.width = v124;
                  v226.size.height = v126;
                  uint64_t v9 = CGRectContainsPoint(v226, v152);

                  if ((v9 & 1) == 0)
                  {
                    swift_bridgeObjectRelease();

                    goto LABEL_81;
                  }
                  if (v204 == v117)
                  {
                    v158 = swift_bridgeObjectRelease();
                    v159 = v198(v158);
                    goto LABEL_135;
                  }
                  v154 = v117 + 1;
                  if (v207)
                  {
                    v155 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else
                  {
                    if (v154 >= *(void *)(v199 + 16))
                    {
                      __break(1u);
LABEL_167:
                      __break(1u);
LABEL_168:
                      __break(1u);
LABEL_169:
                      swift_bridgeObjectRetain();
                      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
                      swift_bridgeObjectRelease();
                      goto LABEL_31;
                    }
                    v155 = *(id *)(v24 + 8 * v117 + 40);
                  }
                  id v114 = v155;
                  if (__OFADD__(v154, 1)) {
                    goto LABEL_157;
                  }
                  id v21 = *(id *)((swift_isaMask & *v155) + 0x250);
                  uint64_t v16 = (swift_isaMask & *v155) + 592;
                  v156 = ((uint64_t (*)(void))v21)();
                  uint64_t v9 = v156;
                  if (v156 >> 62) {
                    v157 = _CocoaArrayWrapper.endIndex.getter();
                  }
                  else {
                    v157 = *(void *)((v156 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  }
                  swift_bridgeObjectRelease();
                  if (v157 < 2) {
                    break;
                  }
                  ++v117;
                }
              }
              swift_bridgeObjectRelease();

LABEL_128:
              id v21 = v208;
            }
LABEL_81:
            ;
          }
          while ((id)v2 != v21);
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v1 = v217;
      if (*(void *)(*(void *)(v217 + 144) + 16))
      {
        v222[0] = v195;
        v186 = v202;
        swift_retain();
        Synchronized.wrappedValue.setter();

        swift_release();
      }
      else
      {
      }
      char v29 = &off_1004B7000;
    }
  }
  v187 = *(void *)(v1 + 96);
  v188 = *(void *)(v1 + 104);
  sub_10003FFC4(v187);
  v189 = v202;
  sub_10003FE74((uint64_t)v202, v187, v188);
  sub_100028914(v187);

  v190 = v223;
  if (!(v223 >> 62))
  {
    v191 = *(void *)((v223 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v191) {
      goto LABEL_180;
    }
LABEL_187:
    swift_bridgeObjectRelease();
    *(unsigned char *)(v1 + 80) = 6;
    swift_release();

    goto LABEL_188;
  }
  swift_bridgeObjectRetain();
  v191 = _CocoaArrayWrapper.endIndex.getter();
  if (!v191) {
    goto LABEL_187;
  }
LABEL_180:
  if (v191 >= 1)
  {
    for (k = 0; k != v191; ++k)
    {
      if ((v190 & 0xC000000000000001) != 0) {
        v193 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        v193 = *(id *)(v190 + 8 * k + 32);
      }
      v194 = v193;
      [v193 v29[340]:0];
    }
    goto LABEL_187;
  }
  __break(1u);
LABEL_190:
  __break(1u);
LABEL_191:
  __break(1u);
}

uint64_t sub_10003DC74(void *a1)
{
  id v156 = a1;
  uint64_t v153 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v153 - 8);
  __chkstk_darwin(v153);
  v152 = (char *)&v138 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  v150 = (char *)&v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v182 - 8);
  __chkstk_darwin(v182);
  v170 = (char *)&v138 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100012894((uint64_t *)&unk_1004CE670);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v155 = (uint64_t)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v154 = (uint64_t)&v138 - v11;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  v169 = (char *)&v138 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  v168 = (char *)&v138 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  v181 = (char *)&v138 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v175 = (char *)&v138 - v21;
  __chkstk_darwin(v20);
  v178 = (char *)&v138 - v22;
  uint64_t v23 = type metadata accessor for MeasurementCapture();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v147 = (uint64_t)&v138 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  v166 = (char *)&v138 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v142 = (uint64_t)&v138 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  v177 = (char *)&v138 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v146 = (uint64_t)&v138 - v34;
  uint64_t v148 = v35;
  __chkstk_darwin(v33);
  uint64_t v171 = (uint64_t)&v138 - v36;
  uint64_t v37 = type metadata accessor for MeasurementHistoryItem();
  uint64_t v185 = *(void *)(v37 - 8);
  __chkstk_darwin(v37 - 8);
  uint64_t v39 = (uint64_t *)((char *)&v138 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = type metadata accessor for MeasurementsHistory();
  __chkstk_darwin(v40 - 8);
  uint64_t v194 = (uint64_t)&v138 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100012894((uint64_t *)&unk_1004CAEB0);
  uint64_t v43 = __chkstk_darwin(v42 - 8);
  uint64_t v176 = (uint64_t)&v138 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v45 = *(void (**)(void))(v13 + 56);
  uint64_t v183 = (uint64_t)&v138 - v46;
  uint64_t v184 = v12;
  uint64_t v141 = v13 + 56;
  Swift::String v140 = v45;
  v45();
  uint64_t v192 = v1;
  uint64_t v47 = *(void *)(v1 + 144);
  uint64_t v48 = &unk_1003F8000;
  uint64_t v191 = *(void *)(v47 + 16);
  if (!v191)
  {
LABEL_48:
    sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
    uint64_t v131 = (void *)static OS_dispatch_queue.main.getter();
    v200 = sub_100040000;
    uint64_t v201 = v192;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v197 = v48[230];
    v198 = sub_100049AB4;
    v199 = &unk_1004891E0;
    uint64_t v132 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    long long v133 = v150;
    static DispatchQoS.unspecified.getter();
    CGAffineTransform aBlock = (void **)_swiftEmptyArrayStorage;
    sub_10003FD08((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100012894((uint64_t *)&unk_1004C68E0);
    uint64_t v134 = v2;
    sub_10003FD50((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
    uint64_t v135 = v4;
    char v136 = v152;
    uint64_t v137 = v153;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v132);

    (*(void (**)(char *, uint64_t))(v134 + 8))(v136, v137);
    (*(void (**)(char *, uint64_t))(v135 + 8))(v133, v151);
    return sub_10002B9C0(v183, (uint64_t *)&unk_1004CAEB0);
  }
  uint64_t v190 = v47 + 32;
  v174 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  char v49 = (void (**)(void))(v13 + 32);
  v180 = (void (**)(char *, char *, uint64_t))(v13 + 16);
  v179 = (void (**)(char *, uint64_t))(v6 + 8);
  v167 = (void (**)(char *, uint64_t))(v13 + 8);
  v173 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
  v164 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  v145 = &v198;
  uint64_t v139 = v2;
  v144 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v138 = v4;
  v143 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v51 = 0;
  uint64_t v186 = 0;
  uint64_t v188 = v23;
  uint64_t v149 = v24;
  uint64_t v189 = v47;
  v187 = v49;
  while (v51 < *(void *)(v47 + 16))
  {
    unint64_t v193 = v51;
    uint64_t v53 = v190 + 32 * v51;
    uint64_t v55 = *(void *)(v53 + 16);
    uint64_t v54 = *(void *)(v53 + 24);
    uint64_t v56 = *(void (**)(uint64_t))(**(void **)(v192 + 120) + 144);
    swift_bridgeObjectRetain();
    uint64_t v57 = swift_retain();
    uint64_t v58 = v194;
    v56(v57);
    swift_release();
    uint64_t v59 = *(void *)(*(void *)v58 + 16);
    if (v59)
    {
      uint64_t v60 = v185;
      uint64_t v61 = *(void *)v58
          + ((*(unsigned __int8 *)(v185 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v185 + 80));
      swift_bridgeObjectRetain();
      uint64_t v62 = 0;
      uint64_t v63 = *(void *)(v60 + 72);
      while (1)
      {
        sub_1000400D4(v61, (uint64_t)v39, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
        if (*v39 == v55 && v39[1] == v54) {
          break;
        }
        char v65 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_10004013C((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
        if (v65) {
          goto LABEL_17;
        }
        ++v62;
        v61 += v63;
        if (v59 == v62)
        {
          swift_bridgeObjectRelease();
          uint64_t v48 = (void *)&unk_1003F8000;
          goto LABEL_3;
        }
      }
      sub_10004013C((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
LABEL_17:
      swift_bridgeObjectRelease();
      sub_10004013C(v194, (uint64_t (*)(void))type metadata accessor for MeasurementsHistory);
      swift_bridgeObjectRelease();
      uint64_t v66 = v176;
      sub_100040014(v183, v176);
      uint64_t v67 = v184;
      if ((*v174)(v66, 1, v184) == 1)
      {
        sub_10002B9C0(v66, (uint64_t *)&unk_1004CAEB0);
        double v68 = (UIImage *)v156;
        double v69 = UIImageJPEGRepresentation(v68, 1.0);
        if (!v69)
        {

          uint64_t v83 = v155;
          uint64_t v85 = v188;
          uint64_t v48 = (void *)&unk_1003F8000;
          goto LABEL_44;
        }
        double v70 = v69;
        v163 = v68;
        uint64_t v162 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v161 = v71;

        if (qword_1004C2A20 != -1) {
          swift_once();
        }
        uint64_t v160 = sub_1000217E0(v67, (uint64_t)qword_1004F8080);
        v165 = *v180;
        id v72 = v169;
        v165(v169, (char *)v160, v67);
        id v73 = v170;
        UUID.init()();
        UUID.uuidString.getter();
        v159 = *v179;
        v159(v73, v182);
        id v74 = v168;
        URL.appendingPathComponent(_:)();
        swift_bridgeObjectRelease();
        uint64_t v75 = *v167;
        (*v167)(v72, v67);
        v157 = v75;
        URL.appendingPathExtension(_:)();
        v75(v74, v67);
        v172 = (void (*)(void))&v166[*(int *)(v188 + 20)];
        v158 = *v187;
        v158();
        v165(v72, (char *)v160, v67);
        UUID.init()();
        UUID.uuidString.getter();
        uint64_t v76 = v73;
        uint64_t v77 = (uint64_t)v166;
        uint64_t v78 = v157;
        v159(v76, v182);
        URL.appendingPathComponent(_:)();
        swift_bridgeObjectRelease();
        v78(v72, v67);
        id v79 = v181;
        URL.appendingPathExtension(_:)();
        v78(v74, v67);
        ((void (*)(uint64_t, char *, uint64_t))v158)(v77, v79, v67);
        uint64_t v80 = v162;
        unint64_t v81 = v161;
        uint64_t v82 = v186;
        Data.write(to:options:)();
        if (v82)
        {
          sub_1001A3328();

          swift_errorRelease();
          sub_10004007C(v80, v81);
          uint64_t v186 = 0;
          uint64_t v83 = v155;
          uint64_t v84 = v77;
          uint64_t v85 = v188;
          uint64_t v48 = (void *)&unk_1003F8000;
          goto LABEL_43;
        }
        char v105 = sub_1001A2CD8(v80, v81, 1);

        sub_10004007C(v80, v81);
        uint64_t v83 = v155;
        uint64_t v106 = v149;
        uint64_t v48 = (void *)&unk_1003F8000;
        if ((v105 & 1) == 0)
        {
          uint64_t v186 = 0;
          uint64_t v84 = v77;
          uint64_t v85 = v188;
LABEL_43:
          uint64_t v123 = v184;
          v78((char *)v84, v184);
          v78((char *)v172, v123);
LABEL_44:
          unint64_t v52 = v193;
          (*v173)(v83, 1, 1, v85);
          uint64_t v47 = v189;
LABEL_45:
          uint64_t result = sub_10002B9C0(v83, (uint64_t *)&unk_1004CE670);
          goto LABEL_5;
        }
        sub_1000400D4(v77, v155, (uint64_t (*)(void))type metadata accessor for MeasurementCapture);
        uint64_t v107 = v77;
        uint64_t v108 = v188;
        (*v173)(v83, 0, 1, v188);
        sub_10004013C(v107, (uint64_t (*)(void))type metadata accessor for MeasurementCapture);
        if ((*v164)(v83, 1, v108) == 1)
        {
          uint64_t v186 = 0;
          uint64_t v47 = v189;
          unint64_t v52 = v193;
          goto LABEL_45;
        }
        uint64_t v124 = v183;
        sub_10002B9C0(v183, (uint64_t *)&unk_1004CAEB0);
        uint64_t v125 = v83;
        uint64_t v126 = v142;
        sub_10004019C(v125, v142);
        uint64_t v127 = v126;
        uint64_t v128 = v171;
        sub_10004019C(v127, v171);
        uint64_t v129 = v128 + *(int *)(v108 + 20);
        uint64_t v130 = v184;
        v165((char *)v124, (char *)v129, v184);
        uint64_t result = ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v140)(v124, 0, 1, v130);
        goto LABEL_38;
      }
      id v86 = v178;
      v172 = *v187;
      ((void (*)(char *, uint64_t, uint64_t))v172)(v178, v66, v67);
      uint64_t v87 = v67;
      id v88 = *v180;
      id v89 = v175;
      (*v180)(v175, v86, v87);
      v88(&v177[*(int *)(v188 + 20)], v89, v87);
      if (qword_1004C2A20 != -1) {
        swift_once();
      }
      uint64_t v90 = sub_1000217E0(v87, (uint64_t)qword_1004F8080);
      uint64_t v91 = v169;
      v88(v169, (char *)v90, v87);
      uint64_t v92 = v170;
      UUID.init()();
      UUID.uuidString.getter();
      (*v179)(v92, v182);
      id v93 = v168;
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      id v94 = *v167;
      (*v167)(v91, v87);
      id v95 = v181;
      URL.appendingPathExtension(_:)();
      v94(v93, v87);
      uint64_t v96 = (uint64_t)v177;
      ((void (*)(char *, char *, uint64_t))v172)(v177, v95, v87);
      uint64_t v97 = v186;
      uint64_t v98 = Data.init(contentsOf:options:)();
      if (v97)
      {
        v94(v175, v87);
        sub_10004013C(v96, (uint64_t (*)(void))type metadata accessor for MeasurementCapture);
        swift_errorRelease();
        uint64_t v100 = 1;
        uint64_t v101 = v154;
      }
      else
      {
        uint64_t v102 = v98;
        unint64_t v103 = v99;
        sub_100040374(v98, v99);
        uint64_t v104 = v96;
        LODWORD(v186) = sub_1001A2CD8(v102, v103, 0);
        sub_10004007C(v102, v103);
        sub_10004007C(v102, v103);
        v94(v175, v87);
        uint64_t v101 = v154;
        if (v186)
        {
          sub_10004019C(v104, v154);
          uint64_t v100 = 0;
        }
        else
        {
          sub_10004013C(v104, (uint64_t (*)(void))type metadata accessor for MeasurementCapture);
          uint64_t v100 = 1;
        }
        uint64_t v87 = v184;
      }
      uint64_t v109 = v188;
      (*v173)(v101, v100, 1, v188);
      v94(v178, v87);
      uint64_t v48 = (void *)&unk_1003F8000;
      if ((*v164)(v101, 1, v109) != 1)
      {
        uint64_t v110 = v101;
        uint64_t v111 = v146;
        sub_10004019C(v110, v146);
        uint64_t result = sub_10004019C(v111, v171);
        uint64_t v106 = v149;
LABEL_38:
        if (qword_1004C29D8 != -1) {
          uint64_t result = swift_once();
        }
        uint64_t v186 = 0;
        id v112 = (void *)*((void *)&xmmword_1004F8000 + 1);
        if (!*((void *)&xmmword_1004F8000 + 1)) {
          goto LABEL_50;
        }
        uint64_t v113 = (void *)Contexts.PrivateQueue.init(_:)();
        uint64_t v114 = v147;
        sub_1000400D4(v171, v147, (uint64_t (*)(void))type metadata accessor for MeasurementCapture);
        unint64_t v115 = (*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
        uint64_t v116 = swift_allocObject();
        *(void *)(v116 + 16) = v192;
        *(void *)(v116 + 24) = v62;
        sub_10004019C(v114, v116 + v115);
        v200 = sub_100040310;
        uint64_t v201 = v116;
        CGAffineTransform aBlock = _NSConcreteStackBlock;
        uint64_t v197 = 1107296256;
        v198 = sub_100049AB4;
        v199 = &unk_100489230;
        objc_super v117 = _Block_copy(&aBlock);
        id v118 = v112;
        id v119 = v113;
        swift_retain();
        id v120 = v150;
        static DispatchQoS.unspecified.getter();
        v195 = _swiftEmptyArrayStorage;
        sub_10003FD08((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100012894((uint64_t *)&unk_1004C68E0);
        sub_10003FD50((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
        id v121 = v152;
        uint64_t v122 = v153;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v117);

        (*v144)(v121, v122);
        (*v143)(v120, v151);
        sub_10004013C(v171, (uint64_t (*)(void))type metadata accessor for MeasurementCapture);

        uint64_t result = swift_release();
        uint64_t v48 = (void *)&unk_1003F8000;
        goto LABEL_4;
      }
      uint64_t v186 = 0;
      uint64_t result = sub_10002B9C0(v101, (uint64_t *)&unk_1004CE670);
    }
    else
    {
LABEL_3:
      sub_10004013C(v194, (uint64_t (*)(void))type metadata accessor for MeasurementsHistory);
      uint64_t result = swift_bridgeObjectRelease();
    }
LABEL_4:
    uint64_t v47 = v189;
    unint64_t v52 = v193;
LABEL_5:
    unint64_t v51 = v52 + 1;
    if (v51 == v191)
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = v138;
      uint64_t v2 = v139;
      goto LABEL_48;
    }
  }
  __break(1u);
LABEL_50:
  __break(1u);
  return result;
}

void sub_10003F2EC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 88);
  if (v2)
  {
    [v2 removeFromSuperview];
    uint64_t v3 = *(void **)(a1 + 88);
  }
  else
  {
    uint64_t v3 = 0;
  }
  *(void *)(a1 + 88) = 0;

  *(unsigned char *)(a1 + 80) = 0;
}

uint64_t sub_10003F338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MeasurementCapture();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(uint64_t))(**(void **)(a1 + 120) + 200);
  uint64_t v10 = swift_retain();
  uint64_t v11 = v9(v10);
  swift_release();
  sub_1000400D4(a3, (uint64_t)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MeasurementCapture);
  unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  sub_10004019C((uint64_t)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12);
  (*(void (**)(uint64_t (*)(uint64_t *), uint64_t))(*(void *)v11 + 416))(sub_1000404D4, v13);
  swift_release();
  return swift_release();
}

uint64_t sub_10003F4E0(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100012894((uint64_t *)&unk_1004CE670);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000400D4(a3, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MeasurementCapture);
  uint64_t v9 = type metadata accessor for MeasurementCapture();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  uint64_t v10 = (void *)*a1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a1 = (uint64_t)v10;
  if (result)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t result = sub_100030BB0(v10);
  uint64_t v10 = (void *)result;
  *a1 = result;
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_7;
  }
LABEL_3:
  if (v10[2] <= a2)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v12 = type metadata accessor for MeasurementHistoryItem();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = (char *)v10 + v14;
  uint64_t v16 = *(void *)(v13 + 72) * a2;
  sub_100040548((uint64_t)v8, (uint64_t)&v15[*(int *)(v12 + 24) + v16]);
  uint64_t v17 = (void *)*a1;
  uint64_t v18 = (uint64_t)a1 + *(int *)(type metadata accessor for MeasurementsHistory() + 24);
  uint64_t result = sub_10002B9C0(v18, (uint64_t *)&unk_1004D0EF0);
  if (v17[2] > a2)
  {
    sub_1000400D4((uint64_t)v17 + v14 + v16, v18, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10003F6FC(double a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  type metadata accessor for MeasureCamera();
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(__dst, __src, 0x1F8uLL);
  sub_10003FFD4((uint64_t)__dst);
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(__src, v16, 0x1F8uLL);
  sub_10003FFD4((uint64_t)__src);
  static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
  if (v10 < 0.0 || v10 > 1.0) {
    return 0;
  }
  CGPoint v12 = (CGPoint)vcvtq_f64_f32(v9);
  v19.origin.CGFloat x = a2;
  v19.origin.CGFloat y = a3;
  v19.size.width = a4;
  v19.size.height = a5;
  CGFloat y = v12.y;
  CGFloat x = v12.x;
  if (!CGRectContainsPoint(v19, v12)) {
    return 0;
  }
  else {
    return *(void *)&x;
  }
}

uint64_t sub_10003F858(void *a1, uint64_t a2)
{
  uint64_t v3 = (void *)v2;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  __chkstk_darwin(v4);
  uint64_t v23 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8);
  *(unsigned char *)(v2 + 80) = 0;
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + 104) = 0;
  *(void *)(v2 + 88) = 0;
  uint64_t v8 = sub_100012894(&qword_1004C54B8);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v10 = qword_1004C2E30;
  swift_retain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1004F8630;
  CGPoint v12 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 272);
  swift_retain();
  v3[14] = v12(KeyPath, v11);
  sub_100012894(&qword_1004C54C0);
  swift_getKeyPath();
  v3[15] = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v28 = 0;
  sub_100012894(&qword_1004C54C8);
  swift_allocObject();
  v3[16] = Synchronized.init(wrappedValue:)();
  swift_unknownObjectUnownedInit();
  v3[18] = _swiftEmptyArrayStorage;
  uint64_t v13 = swift_getKeyPath();
  uint64_t v14 = sub_100012894(&qword_1004CA010);
  uint64_t v15 = qword_1004F8630;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 272);
  swift_retain();
  v3[19] = v16(v13, v15);
  swift_unknownObjectWeakInit();
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  static DispatchQoS.userInitiated.getter();
  uint64_t v28 = _swiftEmptyArrayStorage;
  sub_10003FD08((unint64_t *)&qword_1004C6B50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100012894(&qword_1004CF220);
  sub_10003FD50((unint64_t *)&qword_1004C6B60, &qword_1004CF220);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v23, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v25);
  v3[21] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v17 = v26;
  v3[8] = v26;
  uint64_t v18 = self;
  id v19 = v17;
  if ([v18 jasperAvailable])
  {
    self;
    uint64_t v20 = (void *)swift_dynamicCastObjCClass();
    if (v20) {
      id v21 = v19;
    }
    swift_unknownObjectWeakAssign();
  }
  v3[9] = v27;
  swift_release();
  uint64_t v29 = &type metadata for Configurations.Default;
  uint64_t v30 = &protocol witness table for Configurations.Default;
  return StateObserver.init(configuration:)();
}

void sub_10003FCE8()
{
  sub_10003F2EC(v0);
}

uint64_t sub_10003FCF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10003FD00()
{
  return swift_release();
}

uint64_t sub_10003FD08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003FD50(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100016EF4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003FDA0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003FDE0()
{
  return sub_10003DC74(*(void **)(v0 + 24));
}

id sub_10003FE0C()
{
  uint64_t v1 = *(void **)(v0 + 64);
  [v1 bounds];

  return [v1 drawViewHierarchyInRect:1];
}

uint64_t sub_10003FE5C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003FE6C(uint64_t a1)
{
  return sub_1001FD140(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_10003FE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = [objc_allocWithZone((Class)SSUIServiceOptions) init];
  [v6 setFlashStyle:0];
  [v6 setSaveLocation:1];
  id v7 = [objc_allocWithZone((Class)SSUIService) init];
  if (a2)
  {
    v11[4] = a2;
    v11[5] = a3;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_100049AB4;
    void v11[3] = &unk_1004891B8;
    uint64_t v8 = _Block_copy(v11);
    id v9 = v6;
    sub_10003FFC4(a2);
    swift_release();
  }
  else
  {
    id v10 = v6;
    uint64_t v8 = 0;
  }
  [v7 showScreenshotUIForImage:a1 options:v6 withCompletion:v8];
  _Block_release(v8);
}

uint64_t sub_10003FFC4(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10003FFD4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100040000()
{
  *(void *)(v0 + 144) = _swiftEmptyArrayStorage;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100040014(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894((uint64_t *)&unk_1004CAEB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004007C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1000400D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10004013C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10004019C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MeasurementCapture();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100040200()
{
  uint64_t v1 = (int *)(type metadata accessor for MeasurementCapture() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v6 + v1[7], v7);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100040310()
{
  uint64_t v1 = *(void *)(type metadata accessor for MeasurementCapture() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_10003F338(v2, v3, v4);
}

uint64_t sub_100040374(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_1000403CC()
{
  uint64_t v1 = (int *)(type metadata accessor for MeasurementCapture() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v6 + v1[7], v7);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1000404D4(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for MeasurementCapture() - 8);
  unint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10003F4E0(a1, v4, v5);
}

uint64_t sub_100040548(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894((uint64_t *)&unk_1004CE670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000405E0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

void sub_100040610()
{
  uint64_t v1 = v0;
  id v2 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___planeGeometry, (uint64_t (*)(void))sub_100040E84);
  uint64_t v3 = self;
  id v4 = [v3 nodeWithGeometry:v2];

  NSString v5 = String._bridgeToObjectiveC()();
  [v4 setName:v5];

  uint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger_detector];
  uint64_t v7 = (*(uint64_t (**)(void))(*(void *)v6 + 544))();
  if ((*(void *)LocalPlaneDetector.DebugOptions.showPlane.unsafeMutableAddressor() & ~v7) != 0)
  {
    uint64_t v8 = 1;
  }
  else
  {
    (*(void (**)(uint64_t *__return_ptr))(*(void *)v6 + 496))(v38);
    uint64_t v8 = v39;
  }
  [v4 setHidden:v8];
  id v9 = [self whiteColor];
  sub_1000421FC((uint64_t)v9, 0.001);
  uint64_t v11 = v10;

  [v4 addChildNode:v11];
  id v12 = self;
  id v13 = [v12 planeWithWidth:0.1 height:0.005];
  id v14 = [v3 nodeWithGeometry:v13];

  NSString v15 = String._bridgeToObjectiveC()();
  [v14 setName:v15];

  id v16 = [v14 geometry];
  if (!v16) {
    goto LABEL_13;
  }
  uint64_t v17 = v16;
  id v18 = [v16 materials];

  sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
  unint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_12;
  }
LABEL_7:
  if ((v19 & 0xC000000000000001) != 0)
  {
    id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_25;
    }
    id v20 = *(id *)(v19 + 32);
  }
  id v21 = v20;
  swift_bridgeObjectRelease();
  [v21 setColorBufferWriteMask:8];

LABEL_13:
  [v4 addChildNode:v14];
  id v23 = [v12 planeWithWidth:0.005 height:0.1];
  id v12 = [v3 nodeWithGeometry:v23];

  NSString v24 = String._bridgeToObjectiveC()();
  [v12 setName:v24];

  id v25 = [v12 geometry];
  if (!v25)
  {
LABEL_22:
    [v4 addChildNode:v12];
    uint64_t v32 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    id v33 = [self textWithString:v32 extrusionDepth:0.01];
    swift_unknownObjectRelease();
    NSString v34 = String._bridgeToObjectiveC()();
    id v35 = [self fontWithName:v34 size:1.0];

    [v33 setFont:v35];
    id v36 = [v3 nodeWithGeometry:v33];
    NSString v37 = String._bridgeToObjectiveC()();
    [v36 setName:v37];

    [v36 position];
    [v36 setPosition:];
    __C::SCNVector3 v40 = SCNVector3.init(_:_:_:)(0.02, 0.02, 0.02);
    [v36 setScale:*(double *)&v40.x, *(double *)&v40.y, *(double *)&v40.z];
    [v4 addChildNode:v36];
    [v1 addChildNode:v4];

    return;
  }
  uint64_t v26 = v25;
  id v27 = [v25 materials];

  sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
  unint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v28 >> 62))
  {
    if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_16;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v31) {
    goto LABEL_21;
  }
LABEL_16:
  if ((v28 & 0xC000000000000001) != 0)
  {
LABEL_25:
    id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_19;
  }
  if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v29 = *(id *)(v28 + 32);
LABEL_19:
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    [v30 setColorBufferWriteMask:8];

    goto LABEL_22;
  }
  __break(1u);
}

void sub_100040CC0()
{
  id v1 = [self sphereWithRadius:0.005];
  id v2 = [v1 materials];
  sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v3 >> 62))
  {
    if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_6;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v4 = *(id *)(v3 + 32);
LABEL_6:
    NSString v5 = v4;
    swift_bridgeObjectRelease();
    [v5 setColorBufferWriteMask:8];

LABEL_9:
    id v7 = [self nodeWithGeometry:v1];
    NSString v8 = String._bridgeToObjectiveC()();
    [v7 setName:v8];

    [v7 setHidden:1];
    [v0 addChildNode:v7];

    return;
  }
  __break(1u);
}

void sub_100040E84()
{
  id v1 = *(float **)(v0 + OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger_detector);
  id v2 = (void (**)(void))(*(void *)v1 + 280);
  unint64_t v3 = *v2;
  double v4 = ((double (*)(void))*v2)();
  v3();
  id v6 = [self planeWithWidth:v4 height:v5];
  [v6 setCornerRadius:v1[6]];
  id v7 = [v6 materials];
  sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v8 & 0xC000000000000001) != 0)
  {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_6;
  }
  if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v9 = *(id *)(v8 + 32);
LABEL_6:
    id v10 = v9;
    swift_bridgeObjectRelease();
    id v11 = [v10 diffuse];
    sub_10001C99C(0, &qword_1004C5548);
    Class isa = UIColor.init(argb:)(0xFF3333FF).super.isa;
    [v11 setContents:isa];

    [v10 setBlendMode:4];
    return;
  }
  __break(1u);
}

id sub_10004108C()
{
  id v1 = v0;
  id v2 = [objc_allocWithZone((Class)SCNNode) init];
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 setName:v3];

  uint64_t v4 = (*(uint64_t (**)(void))(**(void **)&v1[OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger_detector] + 544))();
  [v2 setHidden:(*(void *)LocalPlaneDetector.DebugOptions.showPoints.unsafeMutableAddressor() & ~v4) != 0];
  [v1 addChildNode:v2];
  return v2;
}

id sub_100041188(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2();
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1000411E8()
{
  id v1 = v0;
  id v2 = [objc_allocWithZone((Class)SCNNode) init];
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 setName:v3];

  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger_detector];
  uint64_t v5 = (*(uint64_t (**)(void))(*(void *)v4 + 544))();
  if ((*(void *)LocalPlaneDetector.DebugOptions.showPlane.unsafeMutableAddressor() & ~v5) != 0)
  {
    uint64_t v6 = 1;
  }
  else
  {
    (*(void (**)(uint64_t *__return_ptr))(*(void *)v4 + 496))(v11);
    uint64_t v6 = v12;
  }
  [v2 setHidden:v6];
  id v7 = [self yellowColor];
  sub_1000421FC((uint64_t)v7, 0.0005);
  id v9 = v8;

  [v2 addChildNode:v9];
  [v1 addChildNode:v2];
  return v2;
}

uint64_t sub_10004137C()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___pointPool;
  if (*(void *)&v0[OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___pointPool])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___pointPool];
  }
  else
  {
    NSString v3 = v0;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v3;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_1000431C0;
    *(void *)(v5 + 24) = v4;
    sub_100012894(&qword_1004C4110);
    swift_allocObject();
    uint64_t v6 = v3;
    uint64_t v2 = ObjectPool.init(allocator:deallocator:synchronized:)();
    *(void *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_100041470()
{
  id v0 = [self sphereWithRadius:0.001];
  id v1 = [self nodeWithGeometry:v0];
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setName:v2];

  return v1;
}

id sub_100041548(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___planeNode;
  *(void *)&v4[OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___planeNode] = 0;
  uint64_t v8 = OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___intersectionNode;
  *(void *)&v4[OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___intersectionNode] = 0;
  uint64_t v9 = OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___planeGeometry;
  *(void *)&v4[OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___planeGeometry] = 0;
  uint64_t v10 = OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___pointContainerNode;
  *(void *)&v4[OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___pointContainerNode] = 0;
  uint64_t v11 = OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___mlNode;
  *(void *)&v4[OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___mlNode] = 0;
  *(void *)&v4[OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___pointPool] = 0;
  self;
  uint64_t v12 = swift_dynamicCastObjCClass();
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    *(void *)&v4[OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger_sceneView] = v12;
    *(void *)&v4[OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger_detector] = a3;
    v24.receiver = v4;
    v24.super_class = ObjectType;
    id v14 = a1;
    swift_retain();
    id v15 = [super init];
    NSString v16 = String._bridgeToObjectiveC()();
    [v15 setName:v16];

    uint64_t v17 = self;
    [v17 begin];
    id v18 = [v13 scene];
    id v19 = [v18 rootNode];

    [v19 addChildNode:v15];
    [v17 commit];
    sub_10001C99C(0, (unint64_t *)&unk_1004CA020);
    id v20 = v15;
    LocalPlaneDetector.DebugOptions.keys.unsafeMutableAddressor();
    swift_bridgeObjectRetain();
    static NSUserDefaults.observe(observer:keys:)();
    swift_bridgeObjectRelease();

    swift_release();
  }
  else
  {
    id v21 = v4;

    swift_release();
    swift_release();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v20;
}

void sub_1000418F4()
{
  id v1 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___planeNode, (uint64_t (*)(void))sub_100040610);
  NSString v2 = String._bridgeToObjectiveC()();
  id v19 = [v1 childNodeWithName:v2 recursively:0];

  if (!v19) {
    return;
  }
  id v3 = [v19 geometry];
  if (v3)
  {
    uint64_t v4 = v3;
    self;
    uint64_t v5 = swift_dynamicCastObjCClass();
    if (v5)
    {
      uint64_t v6 = (void *)v5;
      uint64_t v7 = *(_DWORD **)(v0 + OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger_detector);
      (*(void (**)(void *__return_ptr))(*(void *)v7 + 496))(v24);
      sub_100016FEC((uint64_t)v24, (uint64_t)v25, &qword_1004C5550);
      if (v27) {
        v8.i32[0] = v7[6];
      }
      else {
        v8.i32[0] = v26;
      }
      *(float *)v8.i32 = *(float *)v8.i32 / 2.5;
      [v19 setSimdScale:*(double *)vdupq_lane_s32(v8, 0).i64];
      NSString v9 = String._bridgeToObjectiveC()();
      [v6 setString:v9];

      sub_10001C99C(0, &qword_1004C4028);
      SCNBoundingVolume.boundingBox.getter();
      SCNNode.boundingSize.getter();
      float v11 = v10 * -0.5;
      [v20 position];
      *(float *)&double v12 = v11;
      [v20 setPosition:v12];
      [v20 position];
      [v20 setPosition:];
      [v20 scale];
      [v20 position];
      int v21 = v13;
      int v22 = v14;
      int v23 = v15;
      *= infix(_:_:)();
      LODWORD(v16) = v21;
      LODWORD(v17) = v22;
      LODWORD(v18) = v23;
      [v20 setPosition:v16, v17, v18];

      return;
    }
  }
}

void sub_100041BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004137C();
  id v5 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___pointContainerNode, (uint64_t (*)(void))sub_10004108C);
  id v6 = [v5 childNodes];

  sub_10001C99C(0, &qword_1004C4028);
  uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(uint64_t))(*(void *)v4 + 216))(v7);
  swift_release();
  swift_bridgeObjectRelease();
  id v8 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___pointContainerNode, (uint64_t (*)(void))sub_10004108C);
  SCNNode.removeAllChildren()();

  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 16);
    uint64_t v11 = a1 + 32;
    uint64_t v12 = a1;
    uint64_t v13 = a2 + 32;
    uint64_t v35 = v12;
    swift_bridgeObjectRetain();
    uint64_t v14 = 0;
    do
    {
      long long v16 = *(_OWORD *)(v11 + 16 * v14);
      double v36 = *(double *)&v16;
      if (v10)
      {
        uint64_t v17 = 0;
LABEL_9:
        uint64_t v18 = 0;
        long long v19 = *(_OWORD *)(v13 + 16 * v17);
        BOOL v20 = 1;
        while (1)
        {
          while (!v20)
          {
            if (v18 == 2)
            {
LABEL_8:
              if (++v17 == v10) {
                goto LABEL_15;
              }
              goto LABEL_9;
            }
            BOOL v20 = 0;
            ++v18;
          }
          long long v37 = v19;
          float v21 = *(float *)((unint64_t)&v37 & 0xFFFFFFFFFFFFFFF3 | (4 * (v18 & 3)));
          long long v38 = v16;
          float v22 = *(float *)((unint64_t)&v38 & 0xFFFFFFFFFFFFFFF3 | (4 * (v18 & 3)));
          BOOL v20 = v21 == v22;
          if (v18 == 2) {
            break;
          }
          ++v18;
        }
        if (v21 != v22) {
          goto LABEL_8;
        }
        int v23 = &selRef_greenColor;
      }
      else
      {
LABEL_15:
        int v23 = &selRef_redColor;
      }
      uint64_t v24 = sub_10004137C();
      (*(void (**)(id *__return_ptr))(*(void *)v24 + 200))(&v39);
      swift_release();
      id v25 = v39;
      id v26 = [v39 geometry];
      if (v26)
      {
        char v27 = v26;
        self;
        unint64_t v28 = (void *)swift_dynamicCastObjCClass();
        if (v28)
        {
          id v29 = [v28 firstMaterial];
          if (v29)
          {
            uint64_t v30 = v29;
            uint64_t v31 = v9;
            uint64_t v32 = v11;
            id v33 = [v29 diffuse];

            id v34 = [self *v23];
            [v33 setContents:v34];

            uint64_t v11 = v32;
            uint64_t v9 = v31;
          }
        }
      }
      ++v14;
      [v25 setSimdPosition:v36, v35];
      id v15 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___pointContainerNode, (uint64_t (*)(void))sub_10004108C);
      [v15 addChildNode:v25];
    }
    while (v14 != v9);
    swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for SCNLocalPlaneDebugger()
{
  return self;
}

id sub_100042018@<X0>(void *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  id v7 = objc_allocWithZone(v3);
  id result = sub_100041548(a1, v8, a2);
  *a3 = result;
  return result;
}

void sub_100042064(double a1, double a2, float a3, float a4, double a5, double a6, double a7, double a8)
{
}

void sub_1000420A0(char a1)
{
  id v2 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___planeNode, (uint64_t (*)(void))sub_100040610);
  [v2 setHidden:(a1 & 1) == 0];
}

void sub_100042118(char a1, uint64_t a2)
{
  id v4 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___intersectionNode, (uint64_t (*)(void))sub_100040CC0);
  [v4 setHidden:(a1 & 1) == 0];

  sub_100016FEC(a2, (uint64_t)&v10, &qword_1004C3F20);
  if ((v14 & 1) == 0)
  {
    double v8 = *(double *)&v12;
    double v9 = *(double *)&v13;
    double v6 = *(double *)&v10;
    double v7 = *(double *)&v11;
    id v5 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___intersectionNode, (uint64_t (*)(void))sub_100040CC0);
    [v5 setSimdWorldTransform:v6, v7, v8, v9];
  }
}

void sub_1000421FC(uint64_t a1, double a2)
{
  id v3 = [self boxWithWidth:a2 height:a2 length:0.1 chamferRadius:0.0];
  id v4 = [self nodeWithGeometry:v3];

  NSString v5 = String._bridgeToObjectiveC()();
  [v4 setName:v5];

  [v4 position];
  [v4 setPosition:];
  id v6 = [v4 geometry];
  if (!v6) {
    goto LABEL_10;
  }
  double v7 = v6;
  id v8 = [v6 materials];

  sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
  unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_4;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_9;
  }
LABEL_4:
  if ((v9 & 0xC000000000000001) != 0)
  {
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_22;
    }
    id v10 = *(id *)(v9 + 32);
  }
  long long v11 = v10;
  swift_bridgeObjectRelease();
  [v11 setBlendMode:4];

LABEL_10:
  id v13 = [v4 geometry];
  if (!v13) {
    return;
  }
  char v14 = v13;
  id v15 = [v13 materials];

  sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
  unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v16 >> 62))
  {
    if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_13;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v20) {
    goto LABEL_18;
  }
LABEL_13:
  if ((v16 & 0xC000000000000001) != 0)
  {
LABEL_22:
    id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_16;
  }
  if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v17 = *(id *)(v16 + 32);
LABEL_16:
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    id v19 = [v18 diffuse];

    [v19 setContents:a1];
    return;
  }
  __break(1u);
}

void sub_100042530()
{
  *(void *)&v0[OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___planeNode] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___intersectionNode] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___planeGeometry] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___pointContainerNode] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___mlNode] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___pointPool] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1000425D8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = v2;
    uint64_t v6 = LocalPlaneDetector.DebugOptions.keyForFeature.unsafeMutableAddressor();
    uint64_t v7 = *(void *)v6;
    if (*(void *)(*(void *)v6 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v8 = sub_1000E20D4(a1, a2);
      if (v9)
      {
        uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10001C99C(0, (unint64_t *)&unk_1004CA020);
        uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger_detector);
        uint64_t v18 = v10;
        uint64_t v12 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v11 + 560))(v17);
        sub_100043230();
        char v13 = static NSUserDefaults.update<A>(_:key:feature:)();
        v12(v17, 0);
        if (*(void *)LocalPlaneDetector.DebugOptions.showPlane.unsafeMutableAddressor() == v10)
        {
          id v14 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___planeNode, (uint64_t (*)(void))sub_100040610);
          BOOL v15 = (v13 & 1) == 0;
          [v14 setHidden:v15];

          id v16 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___mlNode, (uint64_t (*)(void))sub_1000411E8);
          [v16 setHidden:v15];
        }
        else
        {
          if (*(void *)LocalPlaneDetector.DebugOptions.showPoints.unsafeMutableAddressor() != v10) {
            return;
          }
          id v16 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___pointContainerNode, (uint64_t (*)(void))sub_10004108C);
          [v16 setHidden:(v13 & 1) == 0];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
}

void sub_100042830(double a1, float a2, float a3, double a4, double a5, double a6, double a7)
{
  uint64_t v10 = (uint64_t (**)(void))(**(void **)(v7 + OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger_detector) + 544);
  uint64_t v11 = *v10;
  uint64_t v12 = (*v10)();
  char v13 = (void *)LocalPlaneDetector.DebugOptions.showPlane.unsafeMutableAddressor();
  if ((*v13 & ~v12) == 0)
  {
    id v14 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___planeNode, (uint64_t (*)(void))sub_100040610);
    [v14 setSimdWorldTransform:a4, a5, a6, a7];

    id v15 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___planeNode, (uint64_t (*)(void))sub_100040610);
    [v15 setHidden:0];

    id v16 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___planeGeometry, (uint64_t (*)(void))sub_100040E84);
    [v16 setWidth:(float)(a2 + a2)];

    id v17 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___planeGeometry, (uint64_t (*)(void))sub_100040E84);
    [v17 setHeight:(float)(a2 + a2)];

    id v18 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___planeGeometry, (uint64_t (*)(void))sub_100040E84);
    double v19 = a2;
    [v18 setCornerRadius:a2];

    id v20 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___planeNode, (uint64_t (*)(void))sub_100040610);
    NSString v21 = String._bridgeToObjectiveC()();
    id v22 = [v20 childNodeWithName:v21 recursively:0];

    if (v22)
    {
      id v23 = [v22 geometry];
      if (v23)
      {
        id v24 = v23;
        self;
        id v25 = (void *)swift_dynamicCastObjCClass();
        if (v25)
        {
          id v26 = v25;
          [v25 setLength:v19 + v19];
          [v26 length];
          [v22 position];
          [v22 setPosition:];
          char v27 = v22;
          id v22 = v24;
        }
        else
        {
          char v27 = v24;
        }
      }
    }
    id v28 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___planeNode, (uint64_t (*)(void))sub_100040610);
    NSString v29 = String._bridgeToObjectiveC()();
    id v30 = [v28 childNodeWithName:v29 recursively:0];

    if (v30)
    {
      id v31 = [v30 geometry];
      if (v31)
      {
        id v32 = v31;
        self;
        id v33 = (void *)swift_dynamicCastObjCClass();
        if (v33)
        {
          [v33 setWidth:v19 + v19];
          id v34 = v30;
          id v30 = v32;
        }
        else
        {
          id v34 = v32;
        }
      }
    }
    id v35 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___planeNode, (uint64_t (*)(void))sub_100040610);
    NSString v36 = String._bridgeToObjectiveC()();
    id v37 = [v35 childNodeWithName:v36 recursively:0];

    if (v37)
    {
      id v38 = [v37 geometry];
      if (v38)
      {
        id v39 = v38;
        self;
        __C::SCNVector3 v40 = (void *)swift_dynamicCastObjCClass();
        if (v40)
        {
          [v40 setHeight:v19 + v19];
          uint64_t v41 = v37;
          id v37 = v39;
        }
        else
        {
          uint64_t v41 = v39;
        }
      }
    }
    MeasureCore.shared.unsafeMutableAddressor();
    swift_retain();
    id v42 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___planeNode, (uint64_t (*)(void))sub_100040610);
    [v42 simdWorldTransform];

    simd_float4x4.position.getter();
    uint64_t v43 = MeasureCore.mlNormal(of:)();
    uint64_t v45 = v44;
    char v47 = v46;
    swift_release();
    if (v47) {
      goto LABEL_31;
    }
    *(void *)&long long v48 = v43;
    *((void *)&v48 + 1) = v45;
    *(_OWORD *)uint64_t v78 = v48;
    char v49 = (long long *)SIMD3<>.zero.unsafeMutableAddressor();
    uint64_t v50 = 0;
    long long v51 = *v49;
    while (1)
    {
      long long v80 = *(_OWORD *)v78;
      float v53 = *(float *)((unint64_t)&v80 & 0xFFFFFFFFFFFFFFF3 | (4 * (v50 & 3)));
      long long v81 = v51;
      float v54 = *(float *)((unint64_t)&v81 & 0xFFFFFFFFFFFFFFF3 | (4 * (v50 & 3)));
      BOOL v52 = v53 == v54;
      if (v50 == 2) {
        break;
      }
      while (1)
      {
        ++v50;
        if (v52) {
          break;
        }
        if (v50 == 2) {
          goto LABEL_40;
        }
        BOOL v52 = 0;
      }
    }
    if (v53 == v54)
    {
LABEL_31:
      id v55 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___mlNode, (uint64_t (*)(void))sub_1000411E8);
      [v55 setHidden:1];
    }
    else
    {
LABEL_40:
      id v66 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___mlNode, (uint64_t (*)(void))sub_1000411E8);
      static simd_float4x4.make(position:normalizedForward:)();
      [v66 setSimdWorldTransform:];

      id v67 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___mlNode, (uint64_t (*)(void))sub_1000411E8);
      [v67 setHidden:0];

      id v68 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___mlNode, (uint64_t (*)(void))sub_1000411E8);
      NSString v69 = String._bridgeToObjectiveC()();
      id v55 = [v68 childNodeWithName:v69 recursively:0];

      if (!v55) {
        goto LABEL_33;
      }
      id v70 = [v55 geometry];
      if (v70)
      {
        unint64_t v71 = v70;
        self;
        id v72 = (void *)swift_dynamicCastObjCClass();
        if (v72)
        {
          id v73 = v72;
          [v72 setLength:v19 + v19];
          [v73 length];
          [v55 position];
          [v55 setPosition:];

          id v55 = v71;
        }
        else
        {
        }
      }
    }

LABEL_33:
    sub_100012894((uint64_t *)&unk_1004D2460);
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_1003F87F0;
    *(void *)(v56 + 56) = &type metadata for Float;
    *(void *)(v56 + 64) = &protocol witness table for Float;
    *(float *)(v56 + 32) = a3;
    String.init(format:_:)();
    sub_1000418F4();
    char v13 = (void *)swift_bridgeObjectRelease();
  }
  uint64_t v57 = ((uint64_t (*)(void *))v11)(v13);
  if ((*(void *)LocalPlaneDetector.DebugOptions.showPoints.unsafeMutableAddressor() & ~v57) == 0)
  {
    Swift::tuple_actualPoints_OpaquePointer_bestPoints_OpaquePointer v58 = LocalPlaneDetector.getPointsForDebug()();
    sub_100041BB8((uint64_t)v58.actualPoints._rawValue, (uint64_t)v58.bestPoints._rawValue);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v59 = sub_100041188(&OBJC_IVAR____TtC7Measure21SCNLocalPlaneDebugger____lazy_storage___intersectionNode, (uint64_t (*)(void))sub_100040CC0);
    NSString v60 = String._bridgeToObjectiveC()();
    id v79 = [v59 childNodeWithName:v60 recursively:0];

    if (v79)
    {
      id v61 = [v79 geometry];
      if (v61)
      {
        id v62 = v61;
        self;
        uint64_t v63 = (void *)swift_dynamicCastObjCClass();
        if (v63)
        {
          id v64 = v63;
          [v63 setLength:a2 + a2];
          [v64 length];
          [v79 position];
          [v79 setPosition:];
          char v65 = v79;
          id v79 = v62;
        }
        else
        {
          char v65 = v62;
        }
      }
    }
  }
}

uint64_t sub_100043188()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000431C0()
{
  return sub_100041470();
}

uint64_t sub_1000431C8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100043200@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

unint64_t sub_100043230()
{
  unint64_t result = qword_1004C5558;
  if (!qword_1004C5558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C5558);
  }
  return result;
}

id sub_100043284(void *a1, void *a2, double a3, double a4, double a5, double a6, double a7)
{
  *(void *)&v7[OBJC_IVAR____TtC7Measure31ButtonWithCustomBackgroundColor_backgroundColorNormal] = a1;
  *(void *)&v7[OBJC_IVAR____TtC7Measure31ButtonWithCustomBackgroundColor_backgroundColorHighlighted] = a2;
  *(double *)&v7[OBJC_IVAR____TtC7Measure31ButtonWithCustomBackgroundColor_radius] = a7;
  v37.receiver = v7;
  v37.super_class = (Class)type metadata accessor for ButtonWithCustomBackgroundColor();
  id v15 = a1;
  id v16 = a2;
  [super initWithFrame:a3, a4, a5, a6];
  [v17 setBackgroundColor:v15];
  [v17 bounds];
  id v22 = [self bezierPathWithRoundedRect:12 byRoundingCorners:v18 cornerRadii:v19 v20 v21 a7 a7];
  id v23 = [objc_allocWithZone((Class)CAShapeLayer) init];
  [v17 bounds];
  [v23 setFrame:];
  id v24 = [v22 CGPath];
  [v23 setPath:v24];

  id v25 = [v17 layer];
  [v25 setMask:v23];

  id v26 = [v17 layer];
  [v26 setCornerCurve:kCACornerCurveContinuous];

  sub_100012BE0();
  if ((static UIDevice.isIPhone()() & 1) != 0 && [self jasperAvailable])
  {
    [v17 setContentHorizontalAlignment:4];
    [v17 setContentEdgeInsets:0.0, 16.0, 0.0, 16.0];
    id v27 = [v17 layer];
    [v27 setShadowOffset:0.0, 4.0];

    id v28 = [v17 layer];
    [v28 setShadowPathIsBounds:1];

    id v29 = [v17 layer];
    if (qword_1004C2840 != -1) {
      swift_once();
    }
    [v29 setShadowRadius:*(double *)&qword_1004F7E70];

    id v30 = [v17 layer];
    id v31 = [self blackColor];
    id v32 = [v31 CGColor];

    [v30 setShadowColor:v32];
    id v33 = [v17 layer];
    LODWORD(v34) = 1039516303;
    [v33 setShadowOpacity:v34];

    id v35 = [v17 layer];
    [v35 setCornerCurve:kCACornerCurveContinuous];
  }
  return v17;
}

void sub_1000437F0()
{
  uint64_t v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for ButtonWithCustomBackgroundColor();
  [super layoutSubviews];
  sub_100012BE0();
  if ((static UIDevice.isIPhone()() & 1) != 0 && [self jasperAvailable])
  {
    sub_1000439F0(*(double *)&v0[OBJC_IVAR____TtC7Measure31ButtonWithCustomBackgroundColor_radius]);
  }
  else
  {
    double v2 = *(double *)&v0[OBJC_IVAR____TtC7Measure31ButtonWithCustomBackgroundColor_radius];
    [v0 bounds];
    id v7 = [self bezierPathWithRoundedRect:12 byRoundingCorners:v3 cornerRadii:v4 v5, v6, v2, v2];
    id v8 = [objc_allocWithZone((Class)CAShapeLayer) init];
    [v1 bounds];
    [v8 setFrame:];
    id v9 = [v7 CGPath];
    [v8 setPath:v9];

    id v10 = [v1 layer];
    [v10 setMask:v8];
  }
}

void sub_1000439F0(double a1)
{
  [v1 bounds];
  id v7 = [self bezierPathWithRoundedRect:v3 cornerRadius:v4 v5, v6, a1];
  id v8 = [objc_allocWithZone((Class)CAShapeLayer) init];
  [v1 bounds];
  [v8 setFrame:];
  id v9 = [v7 CGPath];
  [v8 setPath:v9];

  id v10 = [v1 layer];
  [v10 setMask:v8];
}

id sub_100043B74()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ButtonWithCustomBackgroundColor();
  return [super dealloc];
}

uint64_t type metadata accessor for ButtonWithCustomBackgroundColor()
{
  return self;
}

uint64_t initializeWithCopy for CurrentPlatterOnScreenState()
{
  return _swift_unknownObjectWeakCopyInit();
}

uint64_t assignWithCopy for CurrentPlatterOnScreenState()
{
  return _swift_unknownObjectWeakCopyAssign();
}

uint64_t initializeWithTake for CurrentPlatterOnScreenState()
{
  return _swift_unknownObjectWeakTakeInit();
}

uint64_t assignWithTake for CurrentPlatterOnScreenState()
{
  return _swift_unknownObjectWeakTakeAssign();
}

uint64_t getEnumTagSinglePayload for CurrentPlatterOnScreenState(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CurrentPlatterOnScreenState(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CurrentPlatterOnScreenState()
{
  return &type metadata for CurrentPlatterOnScreenState;
}

uint64_t sub_100043C84()
{
  uint64_t result = Contexts.UIKit.init()();
  qword_1004F7F50 = result;
  return result;
}

id sub_100043CA4@<X0>(void *a1@<X8>)
{
  if (qword_1004C2908 != -1) {
    swift_once();
  }
  objc_super v2 = (void *)qword_1004F7F50;
  *a1 = qword_1004F7F50;

  return v2;
}

unint64_t sub_100043D14(uint64_t a1)
{
  unint64_t result = sub_100043D3C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100043D3C()
{
  unint64_t result = qword_1004C55C8;
  if (!qword_1004C55C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C55C8);
  }
  return result;
}

BOOL sub_100043D90()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v1 = swift_unknownObjectWeakLoadStrong();
  objc_super v2 = (void *)v1;
  if (Strong)
  {
    if (v1)
    {
      type metadata accessor for CardContainerView();
      id v3 = Strong;
      char v4 = static NSObject.== infix(_:_:)();

      return (v4 & 1) != 0;
    }
    objc_super v2 = Strong;
  }
  else if (!v1)
  {
    return 1;
  }

  return 0;
}

id sub_100043EB0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BlurredButton();
  [super dealloc];
}

uint64_t type metadata accessor for BlurredButton()
{
  return self;
}

void sub_100043F08(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  id v41 = [self traitCollectionWithPreferredContentSizeCategory:UIContentSizeCategoryLarge];
  id v40 = [self preferredFontForTextStyle:a8 compatibleWithTraitCollection:v41];
  [v40 pointSize];
  id v16 = [self configurationWithPointSize:7 weight:3 scale:v15];
  swift_bridgeObjectRetain();
  id v17 = v16;
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v19 = [self systemImageNamed:v18 withConfiguration:v17];

  id v20 = [objc_allocWithZone((Class)UIImageView) init];
  id v39 = v19;
  [v20 setImage:v19];
  [v20 sizeToFit];
  if (qword_1004C2E90 != -1) {
    swift_once();
  }
  [v20 setTintColor:qword_1004F8670 a1];
  id v21 = [self sharedApplication];
  id v22 = [v21 preferredContentSizeCategory];

  LOBYTE(v21) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v21 & 1) != 0 && (a9)
  {
    [v20 setAdjustsImageSizeForAccessibilityContentSizeCategory:0];
    [v20 setContentMode:1];
    id v23 = v20;
    [v23 bounds];
    [v23 setBounds:];
  }
  id v24 = self;
  id v25 = [v24 effectWithStyle:14];
  id v26 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v25];

  id v27 = [objc_allocWithZone((Class)CAShapeLayer) init];
  v43.origin.CGFloat x = a2;
  v43.origin.CGFloat y = a3;
  v43.size.width = a4;
  v43.size.height = a5;
  CGFloat v28 = CGRectGetWidth(v43) * 0.5;
  id v29 = [self bezierPathWithArcCenter:1 radius:v28 startAngle:v28 endAngle:v28 clockwise:0.0];
  id v30 = [v29 CGPath];
  [v27 setPath:v30];

  [v26 setFrame:a2, a3, a4, a5];
  [v26 setUserInteractionEnabled:0];
  id v31 = [v26 layer];
  [v31 setMask:v27];

  [v37 addSubview:v26];
  id v32 = [v24 effectWithStyle:12];
  id v33 = [self effectForBlurEffect:v32 style:4];

  id v34 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v33];
  [v34 setFrame:a2, a3, a4, a5];
  id v35 = [v26 contentView];
  [v35 addSubview:v34];

  [v20 setCenter:v28, v28];
  id v38 = [v34 contentView];
  [v38 addSubview:v20];
}

char *sub_100044470()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_contentView;
  id v4 = objc_allocWithZone((Class)UIImageView);
  double v5 = v0;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_backgroundColorView;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v7 = OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_shadowView;
  type metadata accessor for PlatterShadowView();
  *(void *)&v5[v7] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v8 = OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_backdropView;
  *(void *)&v5[v8] = [objc_allocWithZone((Class)_UIVisualEffectBackdropView) init];
  uint64_t v9 = OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_backgroundBlur;
  id v10 = [self effectWithStyle:9];
  id v11 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v10];

  *(void *)&v5[v9] = v11;
  *(void *)&v5[OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_viewsToUpdate] = _swiftEmptyArrayStorage;

  v14.receiver = v5;
  v14.super_class = ObjectType;
  uint64_t v12 = (char *)[super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_10004466C();
  [*(id *)&v12[OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_shadowView] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v12[OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_backdropView] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v12[OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_contentView] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v12[OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_backgroundBlur] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v12[OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_backgroundColorView] setTranslatesAutoresizingMaskIntoConstraints:0];

  return v12;
}

uint64_t sub_10004466C()
{
  id v1 = [self clearColor];
  [v0 setBackgroundColor:v1];

  id v2 = [v0 layer];
  if (qword_1004C27F8 != -1) {
    swift_once();
  }
  [v2 setCornerRadius:*(double *)&qword_1004F7E10];

  id v3 = [v0 layer];
  [v3 setCornerCurve:kCACornerCurveContinuous];

  id v4 = *(void **)&v0[OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_contentView];
  [v4 setClipsToBounds:1];
  id v5 = [v4 layer];
  [v5 setCornerRadius:*(double *)&qword_1004F7E10];

  id v6 = [v4 layer];
  [v6 setCornerCurve:kCACornerCurveContinuous];

  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_backgroundBlur];
  [v7 setClipsToBounds:1];
  id v8 = [v7 layer];
  [v8 setCornerRadius:*(double *)&qword_1004F7E10];

  id v9 = [v7 layer];
  [v9 setCornerCurve:kCACornerCurveContinuous];

  id v10 = *(void **)&v0[OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_backgroundColorView];
  [v10 setClipsToBounds:1];
  id v11 = [v10 layer];
  [v11 setCornerRadius:*(double *)&qword_1004F7E10];

  id v12 = [v10 layer];
  [v12 setCornerCurve:kCACornerCurveContinuous];

  char v13 = *(void **)&v0[OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_backdropView];
  [v13 setRenderMode:1];
  NSString v14 = String._bridgeToObjectiveC()();
  [v7 _setGroupName:v14];

  [v7 _setCaptureView:v13];
  if (qword_1004C2F18 != -1) {
    swift_once();
  }
  [v10 setBackgroundColor:qword_1004F8708];
  [v0 addSubview:v13];
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_shadowView]];
  [v0 addSubview:v7];
  [v0 addSubview:v10];
  [v0 addSubview:v4];
  id v15 = [v0 subviews];
  sub_10004507C();
  unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v16 >> 62))
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v17) {
      goto LABEL_7;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v17 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_7:
  if (v17 >= 1)
  {
    uint64_t v19 = 0;
    id v20 = &v0[OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_viewsToUpdate];
    do
    {
      if ((v16 & 0xC000000000000001) != 0) {
        id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v21 = *(id *)(v16 + 8 * v19 + 32);
      }
      id v22 = v21;
      swift_beginAccess();
      id v23 = v22;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v20 & 0xFFFFFFFFFFFFFF8)
                                                                                   + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      ++v19;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
    }
    while (v17 != v19);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void sub_100044B78()
{
  v16.receiver = v0;
  v16.super_class = (Class)swift_getObjectType();
  [super layoutSubviews];
  id v1 = (void **)&v0[OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_viewsToUpdate];
  swift_beginAccess();
  unint64_t v2 = (unint64_t)*v1;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (!v3) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v3) {
      goto LABEL_10;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v4 = 0;
  do
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v5 = *(id *)(v2 + 8 * v4 + 32);
    }
    id v6 = v5;
    ++v4;
    [v0 bounds];
    [v6 setFrame:];
    id v7 = [v6 layer];
    id v8 = [v0 layer];
    [v8 cornerRadius];
    double v10 = v9;

    [v7 setCornerRadius:v10];
  }
  while (v3 != v4);
LABEL_10:
  swift_bridgeObjectRelease_n();
  unint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_contentView];
  id v11 = [(id)v2 subviews];
  sub_10004507C();
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v12 >> 62))
  {
    if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_12;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_17;
  }
LABEL_12:
  if ((v12 & 0xC000000000000001) != 0)
  {
LABEL_19:
    id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_15;
  }
  if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v13 = *(id *)(v12 + 32);
LABEL_15:
    NSString v14 = v13;
    swift_bridgeObjectRelease();
    [(id)v2 bounds];
    [v14 setFrame:];

    return;
  }
  __break(1u);
}

id sub_100044E5C(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_contentView);
  id v4 = [v3 subviews];
  sub_10004507C();
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (id)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v6 = (uint64_t)result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    if (!v6) {
      goto LABEL_10;
    }
  }
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v9 = *(id *)(v5 + 8 * i + 32);
    }
    double v10 = v9;
    [v9 removeFromSuperview];
  }
LABEL_10:
  swift_bridgeObjectRelease_n();

  return [v3 addSubview:a1];
}

uint64_t type metadata accessor for PillToPlatterTransitionView()
{
  return self;
}

unint64_t sub_10004507C()
{
  unint64_t result = qword_1004CA030;
  if (!qword_1004CA030)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1004CA030);
  }
  return result;
}

void sub_1000450BC()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_contentView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v2 = OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_backgroundColorView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v3 = OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_shadowView;
  type metadata accessor for PlatterShadowView();
  *(void *)&v0[v3] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v4 = OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_backdropView;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)_UIVisualEffectBackdropView) init];
  uint64_t v5 = OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_backgroundBlur;
  id v6 = [self effectWithStyle:9];
  id v7 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v6];

  *(void *)&v0[v5] = v7;
  *(void *)&v0[OBJC_IVAR____TtC7Measure27PillToPlatterTransitionView_viewsToUpdate] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t getEnumTagSinglePayload for CaptureState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CaptureState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100045384);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CaptureState()
{
  return &type metadata for CaptureState;
}

id sub_1000453BC()
{
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  id result = (id)*((void *)&xmmword_1004F8000 + 1);
  if (*((void *)&xmmword_1004F8000 + 1))
  {
    id v1 = (id)*((void *)&xmmword_1004F8000 + 1);
    qword_1004F7F58 = Contexts.PrivateQueue.init(_:)();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10004543C@<X0>(void *a1@<X8>)
{
  if (qword_1004C2910 != -1) {
    swift_once();
  }
  int v2 = (void *)qword_1004F7F58;
  *a1 = qword_1004F7F58;

  return v2;
}

BOOL sub_1000454A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t sub_1000454C0(uint64_t a1)
{
  unint64_t result = sub_1000454E8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1000454E8()
{
  unint64_t result = qword_1004C5678;
  if (!qword_1004C5678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C5678);
  }
  return result;
}

void sub_10004553C()
{
}

void sub_100045564()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100012894(&qword_1004C6AA0);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1004F8630;
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 272);
  swift_retain();
  *(void *)(v1 + 64) = v5(KeyPath, v4);
  uint64_t v6 = swift_getKeyPath();
  uint64_t v7 = sub_100012894((uint64_t *)&unk_1004CEA40);
  uint64_t v8 = qword_1004F8630;
  id v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 272);
  swift_retain();
  *(void *)(v1 + 72) = v9(v6, v8);
  uint64_t v10 = sub_100012894(&qword_1004C7170);
  uint64_t v11 = swift_getKeyPath();
  uint64_t v12 = qword_1004F8630;
  id v13 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 272);
  swift_retain();
  *(void *)(v1 + 80) = v13(v11, v12);
  uint64_t v14 = sub_100012894(&qword_1004C58E0);
  uint64_t v15 = swift_getKeyPath();
  uint64_t v16 = qword_1004F8630;
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 272);
  swift_retain();
  *(void *)(v1 + 88) = v17(v15, v16);
  uint64_t v18 = sub_100012894(&qword_1004C58E8);
  uint64_t v19 = swift_getKeyPath();
  uint64_t v20 = qword_1004F8630;
  id v21 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 272);
  swift_retain();
  *(void *)(v1 + 96) = v21(v19, v20);
  uint64_t v22 = sub_100012894(&qword_1004C58F0);
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = qword_1004F8630;
  id v25 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 272);
  swift_retain();
  *(void *)(v1 + 104) = v25(v23, v24);
  uint64_t v26 = sub_100012894(&qword_1004C58F8);
  uint64_t v27 = swift_getKeyPath();
  uint64_t v28 = qword_1004F8630;
  id v29 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 272);
  swift_retain();
  *(void *)(v1 + 112) = v29(v27, v28);
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = sub_100012894((uint64_t *)&unk_1004C6A90);
  uint64_t v32 = qword_1004F8630;
  id v33 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 272);
  swift_retain();
  *(void *)(v1 + 120) = v33(v30, v32);
  uint64_t v34 = swift_getKeyPath();
  uint64_t v35 = sub_100012894(&qword_1004C5900);
  uint64_t v36 = qword_1004F8630;
  id v37 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 272);
  swift_retain();
  *(void *)(v1 + 128) = v37(v34, v36);
  uint64_t v38 = sub_100012894(&qword_1004C5908);
  uint64_t v39 = swift_getKeyPath();
  uint64_t v40 = qword_1004F8630;
  id v41 = *(uint64_t (**)(uint64_t, uint64_t))(v38 + 272);
  swift_retain();
  *(void *)(v1 + 136) = v41(v39, v40);
  uint64_t v42 = swift_getKeyPath();
  uint64_t v43 = sub_100012894(&qword_1004C5910);
  uint64_t v44 = qword_1004F8630;
  uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t))(v43 + 272);
  swift_retain();
  *(void *)(v1 + 144) = v45(v42, v44);
  *(void *)(v1 + 160) = _swiftEmptyArrayStorage;
  *(_DWORD *)(v1 + 168) = 0x1000000;
  *(void *)(v1 + 176) = 0;
  *(unsigned char *)(v1 + 184) = 0;
  uint64_t v46 = v1 + qword_1004C5680;
  uint64_t v47 = type metadata accessor for ARCamera.TrackingState();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 1, 1, v47);
  *(void *)(v1 + qword_1004C5688) = 0;
  *(void *)(v1 + qword_1004C5690) = 0;
  *(unsigned char *)(v1 + qword_1004C5698) = 0;
  *(unsigned char *)(v1 + qword_1004C56A0) = 0;
  *(void *)(v1 + qword_1004C56A8) = 0;
  *(unsigned char *)(v1 + qword_1004C56B0) = 0;
  *(unsigned char *)(v1 + qword_1004C56B8) = 1;
  uint64_t v48 = qword_1004C56C0;
  static Date.timeIntervalSinceReferenceDate.getter();
  *(void *)(v1 + v48) = v49;
  uint64_t v50 = qword_1004C56C8;
  static Date.timeIntervalSinceReferenceDate.getter();
  *(void *)(v1 + v50) = v51;
  swift_release();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_100045A40()
{
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  id result = [self jasperAvailable];
  if (result)
  {
    swift_retain();
    StateValue.ifUpdated(_:)();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_100045BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894(&qword_1004C4750);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = &v20[-v9];
  uint64_t result = __chkstk_darwin(v8);
  id v13 = &v20[-v12];
  char v14 = *(unsigned char *)(a1 + 4);
  *(unsigned char *)(a2 + 184) = v14;
  if ((v14 & 1) == 0)
  {
    uint64_t v15 = a2 + qword_1004C5680;
    swift_beginAccess();
    sub_10002D890(v15, (uint64_t)v13);
    uint64_t v16 = type metadata accessor for ARCamera.TrackingState();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48);
    int v19 = v18(v13, 1, v16);
    uint64_t result = sub_10002D8F8((uint64_t)v13);
    if (v19 != 1)
    {
      sub_10002D890(v15, (uint64_t)v10);
      uint64_t result = v18(v10, 1, v16);
      if (result == 1)
      {
        __break(1u);
      }
      else
      {
        sub_1000491B8((uint64_t)v10, (uint64_t)v7);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v7, 0, 1, v16);
        swift_beginAccess();
        sub_10004921C((uint64_t)v7, v15);
        swift_endAccess();
        sub_100047C08();
        return sub_100049284((uint64_t)v10);
      }
    }
  }
  return result;
}

void sub_100045DEC(const void *a1, uint64_t a2)
{
  void (*v26)(unint64_t *__return_ptr, uint64_t);
  uint64_t v27;
  long long v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  Swift::String v33;
  unsigned char v34[512];

  uint64_t v31 = a2;
  uint64_t v3 = sub_100012894(&qword_1004C4750);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ARCamera.TrackingState();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v34, a1, sizeof(v34));
  uint64_t v10 = (void *)sub_1000A3850();
  id v11 = [v10 lightEstimate];

  if (qword_1004C2B28 != -1) {
    swift_once();
  }
  v33._uint64_t countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(19);
  v12._object = (void *)0x8000000100420EA0;
  v12._uint64_t countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v12);
  if (v11) {
    [v11 ambientIntensity];
  }
  Float.write<A>(to:)();
  Log.debug(_:isPrivate:)(v33, 0);
  swift_bridgeObjectRelease();
  uint64_t v13 = v31;
  char v14 = *(void **)(v31 + qword_1004C5688);
  *(void *)(v31 + qword_1004C5688) = v11;
  id v15 = v11;

  uint64_t v16 = v13 + qword_1004C5680;
  swift_beginAccess();
  sub_10002D890(v16, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10002D8F8((uint64_t)v5);
    goto LABEL_22;
  }
  sub_1000492E0((uint64_t)v5, (uint64_t)v9);
  id v17 = [self standardUserDefaults];
  Defaults.showLightIntensityDebugInfo.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v19 = [v17 BOOLForKey:v18];

  if ((v19 & 1) == 0)
  {
    sub_100049284((uint64_t)v9);
    goto LABEL_22;
  }
  uint64_t v30 = v15;
  swift_beginAccess();
  unint64_t v20 = *(void *)(v13 + 160);
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    if (v21) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v21)
    {
LABEL_10:
      if (v21 < 1)
      {
        __break(1u);
        JUMPOUT(0x1000462B8);
      }
      for (uint64_t i = 0; i != v21; ++i)
      {
        if ((v20 & 0xC000000000000001) != 0)
        {
          uint64_t v23 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v23 = *(void *)(v20 + 8 * i + 32);
          swift_retain();
        }
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v24 = *(void *)(v23 + 24);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(char *, id, uint64_t, uint64_t))(v24 + 144))(v9, v11, ObjectType, v24);
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  sub_100049284((uint64_t)v9);
  id v15 = v30;
  uint64_t v13 = v31;
LABEL_22:
  sub_100047C08();

  uint64_t v26 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v13 + 72) + 144);
  uint64_t v27 = swift_retain();
  v26(&v32, v27);
  swift_release();
  if (v32 >> 62 == 3)
  {
    *((void *)&v28 + 1) = v32;
    *(void *)&uint64_t v28 = v32 + 0x4000000000000000;
    if ((unint64_t)(v28 >> 3) >= 2) {
      *(unsigned char *)(v13 + 168) = 1;
    }
  }
  else
  {
    sub_10001F780(v32);
  }
}

uint64_t sub_1000462C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894(&qword_1004C4750);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SessionState();
  sub_1000491B8(a1 + *(int *)(v7 + 20), (uint64_t)v6);
  uint64_t v8 = type metadata accessor for ARCamera.TrackingState();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 0, 1, v8);
  uint64_t v9 = a2 + qword_1004C5680;
  swift_beginAccess();
  sub_10004921C((uint64_t)v6, v9);
  swift_endAccess();
  return sub_100047C08();
}

void sub_1000463D4(unint64_t a1)
{
  void (*v17)(_OWORD *__return_ptr, uint64_t);
  uint64_t v18;
  BOOL v19;
  void (*v20)(_OWORD *__return_ptr, uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  void (*v30)(_OWORD *__return_ptr, uint64_t);
  uint64_t v31;
  void (*v32)(_OWORD *__return_ptr, uint64_t);
  uint64_t v33;
  char v34;
  void (*v35)(_OWORD *__return_ptr, uint64_t);
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  NSString v45;
  unsigned int v46;
  void (*v47)(_OWORD *__return_ptr, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t k;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t m;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t n;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t ii;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(_OWORD *__return_ptr, uint64_t);
  uint64_t v73;
  char v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  void *v79;
  void *v80;
  const void *v81;
  void *v82;
  double v83;
  double v84;
  void **v85;
  uint64_t v86;
  uint64_t jj;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t mm;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t kk;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  BOOL v102;
  int v103;
  uint64_t *v104;
  uint64_t v105;
  void **v106;
  _OWORD __src[32];
  _OWORD __dst[32];

  uint64_t v4 = qword_1004C56B8;
  *(unsigned char *)(v1 + qword_1004C56B8) = a1 == 0;
  if (*(unsigned char *)(v1 + 184) == 1)
  {
    swift_beginAccess();
    unint64_t v5 = *(void *)(v1 + 160);
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      if (!v6) {
        goto LABEL_197;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v6) {
        goto LABEL_197;
      }
    }
    if (v6 >= 1)
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if ((v5 & 0xC000000000000001) != 0)
        {
          uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v10 = *(void *)(v5 + 8 * i + 32);
          swift_retain();
        }
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v8 = *(void *)(v10 + 24);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v8 + 48))(ObjectType, v8);
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
      goto LABEL_197;
    }
    __break(1u);
    goto LABEL_28;
  }
  if (*(unsigned char *)(v1 + 170)) {
    return;
  }
  unint64_t v3 = a1;
  uint64_t v104 = (uint64_t *)(v1 + 160);
  char v105 = v4;
  swift_beginAccess();
  uint64_t v106 = (void **)v1;
  unint64_t v2 = *(void *)(v1 + 160);
  if (v2 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (!v11) {
      goto LABEL_29;
    }
    goto LABEL_16;
  }
  uint64_t v11 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11) {
    goto LABEL_29;
  }
LABEL_16:
  if (v11 < 1) {
    goto LABEL_186;
  }
  for (uint64_t j = 0; j != v11; ++j)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v15 = *(void *)(v2 + 8 * j + 32);
      swift_retain();
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v13 = *(void *)(v15 + 24);
      uint64_t v14 = swift_getObjectType();
      (*(void (**)(BOOL, uint64_t, uint64_t))(v13 + 128))(v3 != 0, v14, v13);
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
LABEL_29:
  swift_bridgeObjectRelease();
  uint64_t v16 = v106;
  id v17 = *(void (**)(_OWORD *__return_ptr, uint64_t))(*v106[18] + 144);
  NSString v18 = swift_retain();
  v17(__dst, v18);
  swift_release();
  unint64_t v103 = LOBYTE(__dst[0]);
  unsigned __int8 v19 = LOBYTE(__dst[0]) == 1;
  unint64_t v20 = *(void (**)(_OWORD *__return_ptr, uint64_t))(*v106[18] + 144);
  uint64_t v21 = swift_retain();
  v20(__dst, v21);
  swift_release();
  if (LOBYTE(__dst[0]) != 4)
  {
    id v29 = 0;
    goto LABEL_47;
  }
  uint64_t v11 = *v104;
  uint64_t v102 = v19;
  if ((unint64_t)*v104 >> 62) {
    goto LABEL_187;
  }
  uint64_t v22 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_32:
  if (v22)
  {
    uint64_t v23 = 0;
    uint64_t v24 = v11 & 0xC000000000000001;
    if ((v11 & 0xC000000000000001) != 0) {
      goto LABEL_34;
    }
    while (v23 < *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v25 = *(void *)(v11 + 8 * v23 + 32);
      swift_retain();
      uint64_t v26 = v23 + 1;
      if (__OFADD__(v23, 1))
      {
LABEL_167:
        __break(1u);
        goto LABEL_168;
      }
      while (2)
      {
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v27 = *(void *)(v25 + 24);
          uint64_t v28 = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v27 + 80))(v28, v27);
          swift_release();
          swift_unknownObjectRelease();
          if (v26 == v22) {
            goto LABEL_46;
          }
        }
        else
        {
          swift_release();
          if (v26 == v22) {
            goto LABEL_46;
          }
        }
        ++v23;
        if (v24)
        {
LABEL_34:
          id v25 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v26 = v23 + 1;
          if (__OFADD__(v23, 1)) {
            goto LABEL_167;
          }
          continue;
        }
        break;
      }
    }
    __break(1u);
    goto LABEL_184;
  }
LABEL_46:
  swift_bridgeObjectRelease();
  uint64_t v16 = v106;
  id v29 = v22 != 0;
  unsigned __int8 v19 = v102;
LABEL_47:
  uint64_t v30 = *(void (**)(_OWORD *__return_ptr, uint64_t))(*v16[9] + 144);
  uint64_t v31 = swift_retain();
  v30(__dst, v31);
  swift_release();
  LODWORD(v30) = (*(void *)&__dst[0] >> 62) - 1;
  sub_10001F780(*(unint64_t *)&__dst[0]);
  if (v30 > 1)
  {
    if (v3)
    {
      uint64_t v43 = self;
      unint64_t v3 = (unint64_t)(id)v3;
      uint64_t v44 = [v43 standardUserDefaults];
      Defaults.coachingCalloutEnabled.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      uint64_t v45 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v46 = [v44 BOOLForKey:v45];

      if (v46)
      {
        unsigned __int8 v19 = v103 == 1
           || (type metadata accessor for MeasureCamera(),
               swift_retain(),
               StateValue.wrappedValue.getter(),
               swift_release(),
               memcpy(__dst, __src, sizeof(__dst)),
               sub_100016F7C((uint64_t)__dst),
               (static MeasureCamera.planeTooClose(for:transform:)() & 1) != 0)
           || sub_100048A50();
        uint64_t v47 = *(void (**)(_OWORD *__return_ptr, uint64_t))(*v16[9] + 144);
        uint64_t v48 = swift_retain();
        v47(__dst, v48);
        swift_release();
        uint64_t v49 = *(void *)&__dst[0];
        sub_10001F780(*(unint64_t *)&__dst[0]);
        if (v49 != 0xC000000000000010)
        {
          type metadata accessor for MeasureCamera();
          swift_retain();
          StateValue.wrappedValue.getter();
          swift_release();
          memcpy(__dst, __src, sizeof(__dst));
          sub_100016F7C((uint64_t)__dst);
          uint64_t v34 = static MeasureCamera.planeTooFar(for:transform:)();

          id v37 = v105;
          if (v29) {
            return;
          }
          goto LABEL_75;
        }
      }
    }
    id v37 = v105;
    if (v29) {
      return;
    }
    uint64_t v34 = 0;
    goto LABEL_75;
  }
  uint64_t v32 = *(void (**)(_OWORD *__return_ptr, uint64_t))(*v16[18] + 144);
  id v33 = swift_retain();
  v32(__dst, v33);
  swift_release();
  uint64_t v34 = LOBYTE(__dst[0]) == 2;
  uint64_t v35 = *(void (**)(_OWORD *__return_ptr, uint64_t))(*v16[18] + 144);
  uint64_t v36 = swift_retain();
  v35(__dst, v36);
  swift_release();
  id v37 = v105;
  if (v29) {
    return;
  }
  if (LOBYTE(__dst[0]) == 3)
  {
    unint64_t v3 = *v104;
    if (!((unint64_t)*v104 >> 62))
    {
      uint64_t v11 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v11) {
        goto LABEL_52;
      }
      goto LABEL_192;
    }
    goto LABEL_191;
  }
LABEL_75:
  while (*((unsigned char *)v16 + v37) == 1)
  {
    uint64_t v50 = *v104;
    if ((unint64_t)*v104 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
      if (!v51) {
        goto LABEL_197;
      }
    }
    else
    {
      uint64_t v51 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v51) {
        goto LABEL_197;
      }
    }
    if (v51 >= 1)
    {
      for (k = 0; k != v51; ++k)
      {
        if ((v50 & 0xC000000000000001) != 0)
        {
          id v55 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          id v55 = *(void *)(v50 + 8 * k + 32);
          swift_retain();
        }
        if (swift_unknownObjectWeakLoadStrong())
        {
          float v53 = *(void *)(v55 + 24);
          float v54 = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v53 + 56))(v54, v53);
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
      goto LABEL_197;
    }
    __break(1u);
LABEL_191:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (v11)
    {
LABEL_52:
      uint64_t v38 = 0;
      if ((v3 & 0xC000000000000001) != 0)
      {
LABEL_53:
        uint64_t v39 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v40 = v38 + 1;
        if (!__OFADD__(v38, 1)) {
          goto LABEL_58;
        }
LABEL_184:
        __break(1u);
        goto LABEL_185;
      }
      while (v38 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v39 = *(void *)(v3 + 8 * v38 + 32);
        swift_retain();
        uint64_t v40 = v38 + 1;
        if (__OFADD__(v38, 1)) {
          goto LABEL_184;
        }
LABEL_58:
        if (swift_unknownObjectWeakLoadStrong())
        {
          id v41 = *(void *)(v39 + 24);
          uint64_t v42 = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v41 + 72))(v42, v41);
          swift_release();
          swift_unknownObjectRelease();
          if (v40 == v11) {
            goto LABEL_197;
          }
        }
        else
        {
          swift_release();
          if (v40 == v11) {
            goto LABEL_197;
          }
        }
        ++v38;
        if ((v3 & 0xC000000000000001) != 0) {
          goto LABEL_53;
        }
      }
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      goto LABEL_32;
    }
LABEL_192:
    swift_bridgeObjectRelease();
    id v37 = v105;
  }
  if (v34)
  {
    uint64_t v56 = *v104;
    if ((unint64_t)*v104 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v57 = _CocoaArrayWrapper.endIndex.getter();
      if (!v57) {
        goto LABEL_197;
      }
    }
    else
    {
      uint64_t v57 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v57) {
        goto LABEL_197;
      }
    }
    if (v57 >= 1)
    {
      for (CGAffineTransform m = 0; m != v57; ++m)
      {
        if ((v56 & 0xC000000000000001) != 0)
        {
          id v61 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          id v61 = *(void *)(v56 + 8 * m + 32);
          swift_retain();
        }
        if (swift_unknownObjectWeakLoadStrong())
        {
          id v59 = *(void *)(v61 + 24);
          NSString v60 = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v59 + 16))(v60, v59);
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
      goto LABEL_197;
    }
    __break(1u);
LABEL_196:
    swift_bridgeObjectRetain();
    id v62 = _CocoaArrayWrapper.endIndex.getter();
    if (!v62) {
      goto LABEL_197;
    }
    goto LABEL_102;
  }
  if (v19)
  {
    uint64_t v56 = *v104;
    if ((unint64_t)*v104 >> 62) {
      goto LABEL_196;
    }
    id v62 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v62) {
      goto LABEL_197;
    }
LABEL_102:
    if (v62 >= 1)
    {
      for (n = 0; n != v62; ++n)
      {
        if ((v56 & 0xC000000000000001) != 0)
        {
          id v66 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          id v66 = *(void *)(v56 + 8 * n + 32);
          swift_retain();
        }
        if (swift_unknownObjectWeakLoadStrong())
        {
          id v64 = *(void *)(v66 + 24);
          char v65 = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v64 + 24))(v65, v64);
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
      goto LABEL_197;
    }
    __break(1u);
LABEL_200:
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    if (!v24) {
      goto LABEL_201;
    }
LABEL_116:
    if (v24 >= 1)
    {
      for (iuint64_t i = 0; ii != v24; ++ii)
      {
        if ((v62 & 0xC000000000000001) != 0)
        {
          unint64_t v71 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          unint64_t v71 = *(void *)(v62 + 8 * ii + 32);
          swift_retain();
        }
        if (swift_unknownObjectWeakLoadStrong())
        {
          NSString v69 = *(void *)(v71 + 24);
          id v70 = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v69 + 64))(v70, v69);
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
      goto LABEL_201;
    }
    __break(1u);
LABEL_203:
    swift_bridgeObjectRetain();
    uint64_t v91 = _CocoaArrayWrapper.endIndex.getter();
    if (!v91) {
      goto LABEL_197;
    }
    goto LABEL_158;
  }
  uint64_t v56 = *(void *)(*v16[15] + 144);
  id v67 = swift_retain();
  ((void (*)(_OWORD *__return_ptr, uint64_t))v56)(__src, v67);
  swift_release();
  __dst[4] = __src[4];
  __dst[5] = __src[5];
  __dst[6] = __src[6];
  LOBYTE(__dst[7]) = __src[7];
  __dst[0] = __src[0];
  __dst[1] = __src[1];
  __dst[2] = __src[2];
  __dst[3] = __src[3];
  if (!sub_100081594())
  {
    id v72 = *(void (**)(_OWORD *__return_ptr, uint64_t))(*v16[9] + 144);
    id v73 = swift_retain();
    v72(__src, v73);
    swift_release();
    if ((*(void *)&__src[0] >> 62) - 1 >= 2)
    {
      if (*(void *)&__src[0] >> 62)
      {
        id v74 = 0;
      }
      else
      {
        sub_10001F780(*(unint64_t *)&__src[0]);
        id v74 = 1;
      }
      uint64_t v75 = 1;
    }
    else
    {
      sub_10001F780(*(unint64_t *)&__src[0]);
      id v74 = 0;
      uint64_t v75 = 0;
      *((unsigned char *)v16 + qword_1004C56A0) = 0;
    }
    uint64_t v76 = qword_1004C56A0;
    *((unsigned char *)v16 + qword_1004C56A0) = v75 & *((unsigned char *)v16 + qword_1004C56B0);
    if ((*((unsigned char *)v16 + v105) & 1) == 0)
    {
      swift_retain();
      StateValue.wrappedValue.getter();
      swift_release();
      if ((BYTE3(__src[0]) & 1) == 0 && (*((unsigned char *)v16 + v76) & 1) == 0)
      {
        uint64_t v77 = qword_1004C56A8;
        if (!*(void **)((char *)v16 + qword_1004C56A8))
        {
          uint64_t v78 = self;
          *(void *)&__src[2] = sub_100049380;
          *((void *)&__src[2] + 1) = v16;
          *(void *)&__src[0] = _NSConcreteStackBlock;
          *((void *)&__src[0] + 1) = 1107296256;
          *(void *)&__src[1] = sub_100058CEC;
          *((void *)&__src[1] + 1) = &unk_1004894A8;
          id v79 = _Block_copy(__src);
          swift_retain();
          swift_release();
          long long v80 = [v78 scheduledTimerWithTimeInterval:0 repeats:v79 block:5.0];
          long long v81 = v79;
          uint64_t v16 = v106;
          _Block_release(v81);
          uint64_t v82 = *(void **)((char *)v106 + v77);
          *(void **)((char *)v106 + v77) = v80;
        }
      }
    }
    static Date.timeIntervalSinceReferenceDate.getter();
    if (v83 - *(double *)((char *)v16 + qword_1004C56C0) <= 1.0)
    {
      uint64_t v85 = v16;
      uint64_t v24 = 0;
    }
    else
    {
      static Date.timeIntervalSinceReferenceDate.getter();
      uint64_t v85 = v16;
      uint64_t v24 = v84 - *(double *)((char *)v16 + qword_1004C56C8) > 1.0;
    }
    if ((*((unsigned char *)v85 + v105) & 1) == 0)
    {
      if ((*((unsigned char *)v85 + 169) & 1) == 0 && (v74 & *((unsigned char *)v85 + v76)) == 1)
      {
        uint64_t v56 = *v104;
        if (!((unint64_t)*v104 >> 62))
        {
          id v86 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v86) {
            goto LABEL_197;
          }
LABEL_144:
          if (v86 >= 1)
          {
            for (juint64_t j = 0; jj != v86; ++jj)
            {
              if ((v56 & 0xC000000000000001) != 0)
              {
                uint64_t v90 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                uint64_t v90 = *(void *)(v56 + 8 * jj + 32);
                swift_retain();
              }
              if (swift_unknownObjectWeakLoadStrong())
              {
                id v88 = *(void *)(v90 + 24);
                id v89 = swift_getObjectType();
                (*(void (**)(uint64_t, uint64_t))(v88 + 40))(v89, v88);
                swift_release();
                swift_unknownObjectRelease();
              }
              else
              {
                swift_release();
              }
            }
            goto LABEL_197;
          }
          __break(1u);
          goto LABEL_209;
        }
LABEL_206:
        swift_bridgeObjectRetain();
        id v86 = _CocoaArrayWrapper.endIndex.getter();
        if (!v86) {
          goto LABEL_197;
        }
        goto LABEL_144;
      }
      if (((_BYTE)v85[21] & 1) == 0 && !(v74 & 1 | ((*((unsigned char *)v85 + v76) & 1) == 0)))
      {
LABEL_168:
        if (qword_1004C29D8 != -1) {
          swift_once();
        }
        if (!qword_1004F8020 || *(unsigned char *)(qword_1004F8020 + 544))
        {
          uint64_t v56 = *v104;
          if (!((unint64_t)*v104 >> 62))
          {
            uint64_t v96 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (!v96) {
              goto LABEL_197;
            }
LABEL_174:
            if (v96 < 1)
            {
              __break(1u);
              return;
            }
            for (kk = 0; kk != v96; ++kk)
            {
              if ((v56 & 0xC000000000000001) != 0)
              {
                uint64_t v100 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                uint64_t v100 = *(void *)(v56 + 8 * kk + 32);
                swift_retain();
              }
              if (swift_unknownObjectWeakLoadStrong())
              {
                uint64_t v98 = *(void *)(v100 + 24);
                unint64_t v99 = swift_getObjectType();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 32))(v24, v99, v98);
                swift_release();
                swift_unknownObjectRelease();
              }
              else
              {
                swift_release();
              }
            }
            goto LABEL_197;
          }
LABEL_209:
          swift_bridgeObjectRetain();
          uint64_t v96 = _CocoaArrayWrapper.endIndex.getter();
          if (!v96) {
            goto LABEL_197;
          }
          goto LABEL_174;
        }
      }
    }
    if (!v24) {
      return;
    }
    uint64_t v56 = *v104;
    if ((unint64_t)*v104 >> 62) {
      goto LABEL_203;
    }
    uint64_t v91 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v91) {
      goto LABEL_197;
    }
LABEL_158:
    if (v91 >= 1)
    {
      for (mCGAffineTransform m = 0; mm != v91; ++mm)
      {
        if ((v56 & 0xC000000000000001) != 0)
        {
          id v95 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          id v95 = *(void *)(v56 + 8 * mm + 32);
          swift_retain();
        }
        if (swift_unknownObjectWeakLoadStrong())
        {
          id v93 = *(void *)(v95 + 24);
          id v94 = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v93 + 48))(v94, v93);
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
LABEL_197:
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
    goto LABEL_206;
  }
  id v62 = *v104;
  if ((unint64_t)*v104 >> 62) {
    goto LABEL_200;
  }
  uint64_t v24 = *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v24) {
    goto LABEL_116;
  }
LABEL_201:
  swift_bridgeObjectRelease();
  static Date.timeIntervalSinceReferenceDate.getter();
  *(void **)((char *)v106 + qword_1004C56C8) = v101;
}

uint64_t sub_10004755C(uint64_t result, uint64_t a2)
{
  if (!*(void *)(result + 8))
  {
    swift_beginAccess();
    unint64_t v3 = *(void *)(a2 + 160);
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v4 = result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v4)
      {
LABEL_4:
        if (v4 < 1)
        {
          __break(1u);
          return result;
        }
        for (uint64_t i = 0; i != v4; ++i)
        {
          if ((v3 & 0xC000000000000001) != 0)
          {
            uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v6 = *(void *)(v3 + 8 * i + 32);
            swift_retain();
          }
          if (swift_unknownObjectWeakLoadStrong())
          {
            uint64_t v7 = *(void *)(v6 + 24);
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t, uint64_t))(v7 + 136))(ObjectType, v7);
            swift_release();
            swift_unknownObjectRelease();
          }
          else
          {
            swift_release();
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t result = static Date.timeIntervalSinceReferenceDate.getter();
    *(void *)(a2 + qword_1004C56C0) = v9;
  }
  return result;
}

uint64_t sub_1000476AC(char *a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894(&qword_1004C4750);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = &v20[-v9];
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v13 = &v20[-v12];
  char v14 = *a1;
  *(unsigned char *)(a2 + 184) = *a1;
  if ((v14 & 1) == 0)
  {
    uint64_t v15 = a2 + qword_1004C5680;
    swift_beginAccess();
    sub_10002D890(v15, (uint64_t)v13);
    uint64_t v16 = type metadata accessor for ARCamera.TrackingState();
    uint64_t v17 = *(void *)(v16 - 8);
    NSString v18 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48);
    int v19 = v18(v13, 1, v16);
    uint64_t result = sub_10002D8F8((uint64_t)v13);
    if (v19 != 1)
    {
      sub_10002D890(v15, (uint64_t)v10);
      uint64_t result = v18(v10, 1, v16);
      if (result == 1)
      {
        __break(1u);
      }
      else
      {
        sub_1000491B8((uint64_t)v10, (uint64_t)v7);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v7, 0, 1, v16);
        swift_beginAccess();
        sub_10004921C((uint64_t)v7, v15);
        swift_endAccess();
        sub_100047C08();
        return sub_100049284((uint64_t)v10);
      }
    }
  }
  return result;
}

void sub_1000478B4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  sub_10002D8F8(v0 + qword_1004C5680);

  uint64_t v1 = *(void **)(v0 + qword_1004C56A8);
}

uint64_t sub_100047984()
{
  uint64_t v0 = StateObserver.deinit();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  sub_10002D8F8(v0 + qword_1004C5680);

  return v0;
}

uint64_t sub_100047A5C()
{
  sub_100047984();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CoachingController()
{
  uint64_t result = qword_1004C56F8;
  if (!qword_1004C56F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100047AFC()
{
  sub_10002CD28();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t sub_100047C08()
{
  unint64_t v1 = v0;
  unint64_t v2 = type metadata accessor for ARCamera.TrackingState.Reason();
  uint64_t v53 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (uint64_t)&v52 - v6;
  uint64_t v8 = sub_100012894(&qword_1004C4750);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ARCamera.TrackingState();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v52 - v16;
  uint64_t result = sub_10004847C();
  if ((result & 1) == 0 && !*(void *)(v0 + qword_1004C5690))
  {
    uint64_t v19 = v0 + qword_1004C5680;
    swift_beginAccess();
    sub_10002D890(v19, (uint64_t)v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
      return sub_10002D8F8((uint64_t)v10);
    }
    sub_1000492E0((uint64_t)v10, (uint64_t)v17);
    sub_1000491B8((uint64_t)v17, (uint64_t)v15);
    uint64_t v20 = v53;
    if ((*(unsigned int (**)(char *, uint64_t, unint64_t))(v53 + 48))(v15, 2, v2))
    {
      if (*(unsigned char *)(v1 + 170))
      {
LABEL_66:
        sub_100049284((uint64_t)v17);
        *(unsigned char *)(v1 + 170) = 0;
        uint64_t v51 = (uint64_t)v15;
        return sub_100049284(v51);
      }
      swift_beginAccess();
      unint64_t v2 = *(void *)(v1 + 160);
      if (v2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
        if (v7) {
          goto LABEL_9;
        }
      }
      else
      {
        uint64_t v7 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v7)
        {
LABEL_9:
          if (v7 >= 1)
          {
            for (uint64_t i = 0; i != v7; ++i)
            {
              if ((v2 & 0xC000000000000001) != 0)
              {
                uint64_t v22 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                uint64_t v22 = *(void *)(v2 + 8 * i + 32);
                swift_retain();
              }
              uint64_t Strong = swift_unknownObjectWeakLoadStrong();
              uint64_t v24 = *(void *)(v22 + 24);
              swift_release();
              if (Strong)
              {
                uint64_t ObjectType = swift_getObjectType();
                (*(void (**)(uint64_t, uint64_t))(v24 + 120))(ObjectType, v24);
                swift_unknownObjectRelease();
              }
            }
            goto LABEL_65;
          }
          __break(1u);
LABEL_68:
          swift_bridgeObjectRetain();
          uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
          if (!v27) {
            goto LABEL_73;
          }
          goto LABEL_20;
        }
      }
LABEL_65:
      swift_bridgeObjectRelease();
      goto LABEL_66;
    }
    (*(void (**)(uint64_t, char *, unint64_t))(v20 + 32))(v7, v15, v2);
    *(unsigned char *)(v1 + 170) = 1;
    (*(void (**)(char *, uint64_t, unint64_t))(v20 + 16))(v5, v7, v2);
    int v26 = (*(uint64_t (**)(char *, unint64_t))(v20 + 88))(v5, v2);
    if (v26 == enum case for ARCamera.TrackingState.Reason.initializing(_:))
    {
      swift_beginAccess();
      unint64_t v1 = *(void *)(v1 + 160);
      if (v1 >> 62) {
        goto LABEL_68;
      }
      uint64_t v27 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v27)
      {
LABEL_20:
        if (v27 >= 1)
        {
          for (uint64_t j = 0; j != v27; ++j)
          {
            if ((v1 & 0xC000000000000001) != 0)
            {
              uint64_t v31 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              uint64_t v31 = *(void *)(v1 + 8 * j + 32);
              swift_retain();
            }
            if (swift_unknownObjectWeakLoadStrong())
            {
              uint64_t v29 = *(void *)(v31 + 24);
              uint64_t v30 = swift_getObjectType();
              (*(void (**)(uint64_t, uint64_t))(v29 + 104))(v30, v29);
              swift_release();
              swift_unknownObjectRelease();
            }
            else
            {
              swift_release();
            }
          }
          goto LABEL_72;
        }
        __break(1u);
        goto LABEL_71;
      }
    }
    else
    {
      if (v26 == enum case for ARCamera.TrackingState.Reason.excessiveMotion(_:))
      {
        swift_beginAccess();
        unint64_t v1 = *(void *)(v1 + 160);
        if (!(v1 >> 62))
        {
          uint64_t v32 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v32)
          {
LABEL_72:
            uint64_t v20 = v53;
            goto LABEL_73;
          }
          goto LABEL_32;
        }
LABEL_71:
        swift_bridgeObjectRetain();
        uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
        if (!v32) {
          goto LABEL_72;
        }
LABEL_32:
        if (v32 >= 1)
        {
          for (uint64_t k = 0; k != v32; ++k)
          {
            if ((v1 & 0xC000000000000001) != 0)
            {
              uint64_t v36 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              uint64_t v36 = *(void *)(v1 + 8 * k + 32);
              swift_retain();
            }
            if (swift_unknownObjectWeakLoadStrong())
            {
              uint64_t v34 = *(void *)(v36 + 24);
              uint64_t v35 = swift_getObjectType();
              (*(void (**)(uint64_t, uint64_t))(v34 + 64))(v35, v34);
              swift_release();
              swift_unknownObjectRelease();
            }
            else
            {
              swift_release();
            }
          }
          goto LABEL_72;
        }
        __break(1u);
        goto LABEL_77;
      }
      if (v26 != enum case for ARCamera.TrackingState.Reason.insufficientFeatures(_:))
      {
        if (v26 != enum case for ARCamera.TrackingState.Reason.relocalizing(_:))
        {
LABEL_83:
          uint64_t result = _assertionFailure(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        swift_beginAccess();
        unint64_t v43 = *(void *)(v1 + 160);
        if (v43 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
          if (!v44) {
            goto LABEL_73;
          }
        }
        else
        {
          uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v44) {
            goto LABEL_73;
          }
        }
        if (v44 >= 1)
        {
          for (uint64_t m = 0; m != v44; ++m)
          {
            if ((v43 & 0xC000000000000001) != 0)
            {
              uint64_t v50 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              uint64_t v50 = *(void *)(v43 + 8 * m + 32);
              swift_retain();
            }
            if (swift_unknownObjectWeakLoadStrong())
            {
              uint64_t v46 = *(void *)(v50 + 24);
              uint64_t v47 = swift_getObjectType();
              uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v46 + 112);
              uint64_t v49 = v46;
              uint64_t v20 = v53;
              v48(v47, v49);
              swift_release();
              swift_unknownObjectRelease();
            }
            else
            {
              swift_release();
            }
          }
          goto LABEL_73;
        }
LABEL_82:
        __break(1u);
        goto LABEL_83;
      }
      swift_beginAccess();
      unint64_t v1 = *(void *)(v1 + 160);
      if (v1 >> 62)
      {
LABEL_77:
        swift_bridgeObjectRetain();
        uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
        if (!v37) {
          goto LABEL_73;
        }
        goto LABEL_44;
      }
      uint64_t v37 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v37)
      {
LABEL_44:
        if (v37 >= 1)
        {
          for (uint64_t n = 0; n != v37; ++n)
          {
            if ((v1 & 0xC000000000000001) != 0)
            {
              uint64_t v39 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              uint64_t v39 = *(void *)(v1 + 8 * n + 32);
              swift_retain();
            }
            uint64_t v40 = swift_unknownObjectWeakLoadStrong();
            uint64_t v41 = *(void *)(v39 + 24);
            swift_release();
            if (v40)
            {
              uint64_t v42 = swift_getObjectType();
              (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v41);
              swift_unknownObjectRelease();
            }
          }
          goto LABEL_72;
        }
        __break(1u);
        goto LABEL_82;
      }
    }
LABEL_73:
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, unint64_t))(v20 + 8))(v7, v2);
    uint64_t v51 = (uint64_t)v17;
    return sub_100049284(v51);
  }
  return result;
}

uint64_t sub_10004847C()
{
  void (*v23)(unint64_t *__return_ptr, uint64_t);
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t i;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  unint64_t aBlock[6];

  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ARCamera.TrackingState.Reason();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100012894(&qword_1004C4750);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ARCamera.TrackingState();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&aBlock[-1] - v14;
  uint64_t v16 = *(void **)(v1 + qword_1004C5688);
  if (!v16) {
    goto LABEL_6;
  }
  id v17 = v16;
  [v17 ambientIntensity];
  if (v18 >= 500.0)
  {

    goto LABEL_6;
  }
  uint64_t v38 = v17;
  uint64_t v19 = v1 + qword_1004C5680;
  swift_beginAccess();
  sub_10002D890(v19, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {

    sub_10002D8F8((uint64_t)v8);
LABEL_6:
    uint64_t v20 = *(void **)(v1 + qword_1004C5690);
    *(void *)(v1 + qword_1004C5690) = 0;

    uint64_t result = 0;
    *(unsigned char *)(v1 + qword_1004C5698) = 0;
    return result;
  }
  sub_1000492E0((uint64_t)v8, (uint64_t)v15);
  sub_1000491B8((uint64_t)v15, (uint64_t)v13);
  int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v13, 2, v2);
  if (!v22)
  {
    sub_100049284((uint64_t)v15);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v13, v2);
    if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == enum case for ARCamera.TrackingState.Reason.insufficientFeatures(_:)) {
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
LABEL_32:

    goto LABEL_6;
  }
  if (v22 != 1)
  {
    if (*(unsigned char *)(v1 + qword_1004C56B8) == 1)
    {
      uint64_t v23 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v1 + 72) + 144);
      uint64_t v24 = swift_retain();
      v23(aBlock, v24);
      swift_release();
      id v25 = aBlock[0];
      sub_10001F780(aBlock[0]);
      sub_100049284((uint64_t)v15);
      if (v25 != 0xC000000000000010) {
        goto LABEL_15;
      }
    }
    else
    {
      sub_100049284((uint64_t)v15);
    }
    goto LABEL_32;
  }
  sub_100049284((uint64_t)v15);
LABEL_15:
  if (*(unsigned char *)(v1 + qword_1004C5698) == 1)
  {
    swift_beginAccess();
    int v26 = *(void *)(v1 + 160);
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v27 = result;
    }
    else
    {
      uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
    }
    uint64_t v28 = v38;
    if (v27)
    {
      if (v27 < 1)
      {
        __break(1u);
        return result;
      }
      for (uint64_t i = 0; i != v27; ++i)
      {
        if ((v26 & 0xC000000000000001) != 0)
        {
          uint64_t v32 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v32 = *(void *)(v26 + 8 * i + 32);
          swift_retain();
        }
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v30 = *(void *)(v32 + 24);
          uint64_t ObjectType = swift_getObjectType();
          [v28 ambientIntensity];
          (*(void (**)(uint64_t, uint64_t))(v30 + 96))(ObjectType, v30);
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
    }

    swift_bridgeObjectRelease();
    return 1;
  }
  id v33 = qword_1004C5690;
  if (*(void *)(v1 + qword_1004C5690))
  {
    uint64_t v34 = v38;
  }
  else
  {
    uint64_t v35 = self;
    aBlock[4] = (unint64_t)sub_100049344;
    aBlock[5] = v1;
    aBlock[0] = (unint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (unint64_t)sub_100058CEC;
    aBlock[3] = (unint64_t)&unk_100489480;
    uint64_t v36 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    uint64_t v37 = [v35 scheduledTimerWithTimeInterval:0 repeats:v36 block:1.5];

    _Block_release(v36);
    uint64_t v34 = *(id *)(v1 + v33);
    *(void *)(v1 + v33) = v37;
  }

  return 0;
}

BOOL sub_100048A50()
{
  void (*v2)(uint64_t *__return_ptr, uint64_t);
  id v3;
  uint64_t v4;
  float v5;
  double v6;
  float v7;
  void (*v9)(uint64_t *__return_ptr, uint64_t);
  uint64_t v10;
  float v11;
  double v12;
  double v13;
  float v14;
  uint64_t v15;

  unint64_t v1 = *(void **)(v0 + 176);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v0 + 128) + 144);
  uint64_t v3 = v1;
  uint64_t v4 = swift_retain();
  v2((uint64_t *)((char *)&v15 + 4), v4);
  swift_release();
  uint64_t v5 = *((float *)&v15 + 1);
  [v3 bounds];
  uint64_t v7 = v6;
  if (v5 <= v7)
  {
    uint64_t v9 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v0 + 128) + 144);
    uint64_t v10 = swift_retain();
    v9(&v15, v10);
    swift_release();
    uint64_t v11 = *(float *)&v15;
    [v3 bounds];
    uint64_t v13 = v12;

    uint64_t v14 = v13;
    return v11 > v14;
  }
  else
  {

    return 1;
  }
}

uint64_t sub_100048B70(uint64_t result)
{
  *(unsigned char *)(v1 + 171) = result;
  return result;
}

uint64_t sub_100048B78@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 72);
  return swift_retain();
}

uint64_t sub_100048B88@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 64);
  return swift_retain();
}

uint64_t sub_100048B98@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 48);
  return swift_retain();
}

uint64_t sub_100048BA8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 112);
  return swift_retain();
}

uint64_t sub_100048BB8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 144);
  return swift_retain();
}

uint64_t sub_100048BC8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 224);
  return swift_retain();
}

double sub_100048BD8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100012894(&qword_1004C6AA0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = qword_1004C2E30;
  swift_retain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1004F8630;
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 272);
  swift_retain();
  *(void *)(v3 + 64) = v10(KeyPath, v9);
  uint64_t v11 = swift_getKeyPath();
  uint64_t v12 = sub_100012894((uint64_t *)&unk_1004CEA40);
  uint64_t v13 = qword_1004F8630;
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 272);
  swift_retain();
  *(void *)(v3 + 72) = v14(v11, v13);
  uint64_t v15 = sub_100012894(&qword_1004C7170);
  uint64_t v16 = swift_getKeyPath();
  uint64_t v17 = qword_1004F8630;
  double v18 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 272);
  swift_retain();
  *(void *)(v3 + 80) = v18(v16, v17);
  uint64_t v19 = sub_100012894(&qword_1004C58E0);
  uint64_t v20 = swift_getKeyPath();
  uint64_t v21 = qword_1004F8630;
  int v22 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 272);
  swift_retain();
  *(void *)(v3 + 88) = v22(v20, v21);
  uint64_t v23 = sub_100012894(&qword_1004C58E8);
  uint64_t v24 = swift_getKeyPath();
  uint64_t v25 = qword_1004F8630;
  int v26 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 272);
  swift_retain();
  *(void *)(v3 + 96) = v26(v24, v25);
  uint64_t v27 = sub_100012894(&qword_1004C58F0);
  uint64_t v28 = swift_getKeyPath();
  uint64_t v29 = qword_1004F8630;
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 272);
  swift_retain();
  *(void *)(v3 + 104) = v30(v28, v29);
  uint64_t v31 = sub_100012894(&qword_1004C58F8);
  uint64_t v32 = swift_getKeyPath();
  uint64_t v33 = qword_1004F8630;
  uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 272);
  swift_retain();
  *(void *)(v3 + 112) = v34(v32, v33);
  uint64_t v35 = swift_getKeyPath();
  uint64_t v36 = sub_100012894((uint64_t *)&unk_1004C6A90);
  uint64_t v37 = qword_1004F8630;
  uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 272);
  swift_retain();
  *(void *)(v3 + 120) = v38(v35, v37);
  uint64_t v39 = swift_getKeyPath();
  uint64_t v40 = sub_100012894(&qword_1004C5900);
  uint64_t v41 = qword_1004F8630;
  uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 272);
  swift_retain();
  *(void *)(v3 + 128) = v42(v39, v41);
  uint64_t v43 = sub_100012894(&qword_1004C5908);
  uint64_t v44 = swift_getKeyPath();
  uint64_t v45 = qword_1004F8630;
  uint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t))(v43 + 272);
  swift_retain();
  *(void *)(v3 + 136) = v46(v44, v45);
  uint64_t v47 = swift_getKeyPath();
  uint64_t v48 = sub_100012894(&qword_1004C5910);
  uint64_t v49 = qword_1004F8630;
  uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t))(v48 + 272);
  swift_retain();
  *(void *)(v3 + 144) = v50(v47, v49);
  *(void *)(v3 + 160) = _swiftEmptyArrayStorage;
  *(_DWORD *)(v3 + 168) = 0x1000000;
  *(void *)(v3 + 176) = 0;
  *(unsigned char *)(v3 + 184) = 0;
  uint64_t v51 = v3 + qword_1004C5680;
  uint64_t v52 = type metadata accessor for ARCamera.TrackingState();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 1, 1, v52);
  *(void *)(v3 + qword_1004C5688) = 0;
  *(void *)(v3 + qword_1004C5690) = 0;
  *(unsigned char *)(v3 + qword_1004C5698) = 0;
  *(unsigned char *)(v3 + qword_1004C56A0) = 0;
  *(void *)(v3 + qword_1004C56A8) = 0;
  *(unsigned char *)(v3 + qword_1004C56B0) = 0;
  *(unsigned char *)(v3 + qword_1004C56B8) = 1;
  uint64_t v53 = qword_1004C56C0;
  static Date.timeIntervalSinceReferenceDate.getter();
  *(void *)(v3 + v53) = v54;
  uint64_t v55 = qword_1004C56C8;
  static Date.timeIntervalSinceReferenceDate.getter();
  *(void *)(v3 + v55) = v56;
  uint64_t v57 = *(void **)(v3 + 176);
  *(void *)(v3 + 176) = a1;
  id v58 = a1;

  *(void *)(v3 + 152) = a2;
  id v59 = a2;
  swift_release();
  uint64_t v60 = StateObserver.init(configuration:)();
  *(double *)(v60 + qword_1004C56C0) = *(double *)(v60 + qword_1004C56C0) + -1.0;
  double result = *(double *)(v60 + qword_1004C56C8) + -1.0;
  *(double *)(v60 + qword_1004C56C8) = result;
  return result;
}

uint64_t sub_100049108@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 64);
  return swift_retain();
}

uint64_t sub_100049118@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 72);
  return swift_retain();
}

uint64_t sub_100049128@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 48);
  return swift_retain();
}

uint64_t sub_100049138@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 112);
  return swift_retain();
}

uint64_t sub_10004914C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 144);
  return swift_retain();
}

uint64_t sub_100049160@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 224);
  return swift_retain();
}

uint64_t sub_100049170(uint64_t a1)
{
  return sub_100045BE4(a1, v1);
}

void sub_100049178(const void *a1)
{
  sub_100045DEC(a1, v1);
}

uint64_t sub_100049180(uint64_t a1)
{
  return sub_1000462C8(a1, v1);
}

void sub_100049188(uint64_t a1)
{
}

unsigned char *sub_100049190(unsigned char *result)
{
  if (*result == 2) {
    *(unsigned char *)(v1 + 169) = 1;
  }
  return result;
}

uint64_t sub_1000491A8(uint64_t a1)
{
  return sub_10004755C(a1, v1);
}

uint64_t sub_1000491B0(char *a1)
{
  return sub_1000476AC(a1, v1);
}

uint64_t sub_1000491B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ARCamera.TrackingState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004921C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894(&qword_1004C4750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100049284(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ARCamera.TrackingState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000492E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ARCamera.TrackingState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100049344()
{
  *(unsigned char *)(v0 + qword_1004C5698) = 1;
  uint64_t v1 = *(void **)(v0 + qword_1004C5690);
  *(void *)(v0 + qword_1004C5690) = 0;
}

uint64_t sub_100049368(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100049378()
{
  return swift_release();
}

void sub_100049380()
{
  *(unsigned char *)(v0 + qword_1004C56B0) = 1;
}

ValueMetadata *type metadata accessor for DeletedMeasurementsState()
{
  return &type metadata for DeletedMeasurementsState;
}

uint64_t sub_1000493AC()
{
  uint64_t result = Contexts.UIKit.init()();
  qword_1004F7F60 = result;
  return result;
}

id sub_1000493CC@<X0>(void *a1@<X8>)
{
  if (qword_1004C2918 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1004F7F60;
  *a1 = qword_1004F7F60;

  return v2;
}

uint64_t sub_100049438(uint64_t *a1, uint64_t *a2)
{
  return sub_1000494C0(*a1, *a2);
}

unint64_t sub_100049444(uint64_t a1)
{
  unint64_t result = sub_10004946C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10004946C()
{
  unint64_t result = qword_1004C5940;
  if (!qword_1004C5940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C5940);
  }
  return result;
}

uint64_t sub_1000494C0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    uint64_t v14 = result;
    uint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    Swift::Int v18 = Hasher._finalize()();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    int v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    unint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 4;
  if (v3 + 4 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_23;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for PersonHeightCoachingState()
{
  return &type metadata for PersonHeightCoachingState;
}

uint64_t sub_100049760()
{
  uint64_t result = Contexts.UIKit.init()();
  qword_1004F7F68 = result;
  return result;
}

id sub_100049780@<X0>(void *a1@<X8>)
{
  if (qword_1004C2920 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1004F7F68;
  *a1 = qword_1004F7F68;

  return v2;
}

unint64_t sub_1000497EC(uint64_t a1)
{
  unint64_t result = sub_100049814();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100049814()
{
  unint64_t result = qword_1004C5970;
  if (!qword_1004C5970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C5970);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SessionResetEvent(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s7Measure25PersonHeightCoachingStateV13CoachingStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    void *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000499C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonHeightCoachingState.CoachingState()
{
  return &type metadata for PersonHeightCoachingState.CoachingState;
}

unint64_t sub_100049A00()
{
  unint64_t result = qword_1004C5978;
  if (!qword_1004C5978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C5978);
  }
  return result;
}

uint64_t sub_100049A58()
{
  sub_10001FE1C(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WeakCoachingControllerDelegate()
{
  return self;
}

uint64_t sub_100049AB4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_100049AF8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = __chkstk_darwin(v3);
  BOOL v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    Date.init(timeIntervalSince1970:)();
    goto LABEL_5;
  }
  if (*(void *)(v1 + qword_1004C5AA0) != a1)
  {
    Date.init()();
LABEL_5:
    uint64_t v8 = v1 + qword_1004C5A98;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 40))(v8, v7, v3);
    uint64_t result = swift_endAccess();
  }
  *(void *)(v1 + qword_1004C5AA0) = a1;
  return result;
}

void sub_100049C2C(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[qword_1004C5A48] = 0;
  *(void *)&v5[qword_1004C5A50] = 0;
  *(void *)&v5[qword_1004C5A58] = 0;
  uint64_t v12 = qword_1004C5A60;
  sub_100012894((uint64_t *)&unk_1004C5CC0);
  swift_getKeyPath();
  uint64_t v13 = v5;
  *(void *)&v5[v12] = MutableStateBinding.__allocating_init(_:_:)();
  uint64_t v14 = qword_1004C5A68;
  uint64_t v15 = sub_100012894(&qword_1004C3EE8);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_1004F8630;
  Swift::Int v18 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 272);
  swift_retain();
  *(void *)&v13[v14] = v18(KeyPath, v17);
  uint64_t v19 = qword_1004C5A70;
  sub_100012894((uint64_t *)&unk_1004C5CD0);
  swift_getKeyPath();
  *(void *)&v13[v19] = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v20 = qword_1004C5A78;
  uint64_t v21 = sub_100012894((uint64_t *)&unk_1004C7F20);
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = qword_1004F8630;
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 272);
  swift_retain();
  *(void *)&v13[v20] = v24(v22, v23);
  *(void *)&v13[qword_1004C5A90] = 0x3FE3333333333333;
  Date.init()();
  *(void *)&v13[qword_1004C5AA0] = 0;
  CGRect.center.getter();
  static CGSize.* infix(_:_:)();
  CGRect.init(centerPoint:size:)();
  id v29 = [objc_allocWithZone((Class)ARCoachingOverlayView) initWithFrame:v25, v26, v27, v28];
  uint64_t v30 = qword_1004C5A40;
  *(void *)&v13[qword_1004C5A40] = v29;
  [v29 setSession:a1];
  int64_t v31 = *(void **)&v13[v30];
  uint64_t v32 = self;
  id v33 = v31;
  if ([v32 jasperAvailable]) {
    uint64_t v34 = 0;
  }
  else {
    uint64_t v34 = 3;
  }
  [v33 setGoal:v34];

  float v35 = a5;
  if (qword_1004C3140 != -1) {
    swift_once();
  }
  *(float *)&v13[qword_1004C5A80] = *(float *)&dword_1004F8940 + v35;
  float v36 = a5 - a4;
  float v37 = (float)(v36 * 0.5) + v35;
  if (qword_1004C3148 != -1) {
    swift_once();
  }
  *(float *)&v13[qword_1004C5A88] = v37 + *(float *)&dword_1004F8944;

  v65.receiver = v13;
  v65.super_class = ObjectType;
  id v38 = [super initWithFrame:a2, a3, a4, a5];
  uint64_t v39 = self;
  uint64_t v40 = (char *)v38;
  id v41 = [v39 standardUserDefaults];
  Defaults.showLightIntensityDebugInfo.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v43 = [v41 BOOLForKey:v42];

  if (!v43) {
    goto LABEL_18;
  }
  id v44 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v45 = qword_1004C5A58;
  uint64_t v46 = *(void **)&v40[qword_1004C5A58];
  *(void *)&v40[qword_1004C5A58] = v44;

  uint64_t v47 = *(void **)&v40[v45];
  if (!v47)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  [v47 setFrame:a2, a3, a4, a5];
  uint64_t v48 = *(void **)&v40[v45];
  if (!v48)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  [v48 setTextAlignment:1];
  uint64_t v49 = *(void **)&v40[v45];
  if (!v49)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v50 = self;
  id v51 = v49;
  id v52 = [v50 yellowColor];
  [v51 setTextColor:v52];

  uint64_t v53 = *(void **)&v40[v45];
  if (!v53)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v54 = v53;
  id v55 = [v50 blackColor];
  [v54 setShadowColor:v55];

  uint64_t v56 = *(void **)&v40[v45];
  if (!v56)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  [v56 setNumberOfLines:0];
  if (*(void *)&v40[v45])
  {
    [v40 addSubview:];
LABEL_18:
    uint64_t v57 = qword_1004C5A40;
    [*(id *)&v40[qword_1004C5A40] setDelegate:v40];
    [v40 addSubview:*(void *)&v40[v57]];
    uint64_t v58 = self;
    uint64_t v59 = swift_allocObject();
    *(void *)(v59 + 16) = v40;
    uint64_t v60 = swift_allocObject();
    *(void *)(v60 + 16) = sub_10004C8E0;
    *(void *)(v60 + 24) = v59;
    v64[4] = sub_100039980;
    v64[5] = v60;
    v64[0] = _NSConcreteStackBlock;
    v64[1] = 1107296256;
    _OWORD v64[2] = sub_1000FA194;
    v64[3] = &unk_100489B50;
    id v61 = _Block_copy(v64);
    id v62 = v40;
    swift_retain();
    swift_release();
    [(id)v58 performWithoutAnimation:v61];
    _Block_release(v61);
    LOBYTE(v58) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v58 & 1) == 0)
    {
      uint64_t v63 = v62;
      [v63 setUserInteractionEnabled:0];
      swift_release();

      return;
    }
    __break(1u);
    goto LABEL_21;
  }
LABEL_26:
  __break(1u);
}

void sub_10004A354()
{
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  sub_10004A3AC(v0);
}

void sub_10004A3AC(uint64_t a1)
{
  switch(a1)
  {
    case 2:
      double v3 = 3.14159265;
      break;
    case 4:
      double v3 = -*(double *)CGFloat.piDiv2.unsafeMutableAddressor();
      break;
    case 3:
      double v3 = *(double *)CGFloat.piDiv2.unsafeMutableAddressor();
      break;
    default:
      double v3 = 0.0;
      break;
  }
  CGAffineTransformMakeRotation((CGAffineTransform *)&aBlock, v3);
  *(_OWORD *)&m.a = *(_OWORD *)&aBlock.m11;
  *(_OWORD *)&m.c = *(_OWORD *)&aBlock.m13;
  *(_OWORD *)&m.CGFloat tx = *(_OWORD *)&aBlock.m21;
  CATransform3DMakeAffineTransform(&aBlock, &m);
  long long v18 = *(_OWORD *)&aBlock.m13;
  long long v19 = *(_OWORD *)&aBlock.m11;
  long long v16 = *(_OWORD *)&aBlock.m23;
  long long v17 = *(_OWORD *)&aBlock.m21;
  long long v14 = *(_OWORD *)&aBlock.m33;
  long long v15 = *(_OWORD *)&aBlock.m31;
  long long v13 = *(_OWORD *)&aBlock.m41;
  CGFloat m43 = aBlock.m43;
  CGFloat m44 = aBlock.m44;
  BOOL v6 = sub_10004C8F8(a1);
  BOOL v7 = &qword_1004C5A88;
  if (!v6) {
    BOOL v7 = &qword_1004C5A80;
  }
  int v8 = *(_DWORD *)&v1[*v7];
  uint64_t v9 = self;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v1;
  *(_OWORD *)(v10 + 24) = v19;
  *(_OWORD *)(v10 + 40) = v18;
  *(_OWORD *)(v10 + 56) = v17;
  *(_OWORD *)(v10 + 72) = v16;
  *(_OWORD *)(v10 + 88) = v15;
  *(_OWORD *)(v10 + 104) = v14;
  *(_OWORD *)(v10 + 120) = v13;
  *(CGFloat *)(v10 + 136) = m43;
  *(CGFloat *)(v10 + 144) = m44;
  *(_DWORD *)(v10 + 152) = v8;
  *(void *)&aBlock.m21 = sub_10004C940;
  *(void *)&aBlock.m22 = v10;
  *(void *)&aBlock.m11 = _NSConcreteStackBlock;
  *(void *)&aBlock.m12 = 1107296256;
  *(void *)&aBlock.m13 = sub_100049AB4;
  *(void *)&aBlock.m14 = &unk_100489BA0;
  unint64_t v11 = _Block_copy(&aBlock);
  uint64_t v12 = v1;
  swift_release();
  [v9 animateWithDuration:0 delay:v11 options:0 animations:0.25 completion:0.25];
  _Block_release(v11);
}

uint64_t sub_10004A5B4()
{
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v0;
  swift_retain();
  id v1 = v0;
  StateValue.ifUpdated(_:)();
  swift_release();
  return swift_release();
}

void sub_10004A694(unint64_t *a1)
{
  unint64_t v1 = *a1;
  swift_retain();
  StateValue.previous.getter();
  swift_release();
  sub_10004A708(v2, v1);
  sub_10004D04C(v2);
}

uint64_t sub_10004A708(unint64_t a1, unint64_t a2)
{
  double v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t result = __chkstk_darwin(v10);
  long long v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~a1 & 0xF000000000000007) == 0 || (uint64_t result = sub_1000A599C(a1, a2), (result & 1) == 0))
  {
    if (a2 == 0xC000000000000018)
    {
      sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
      long long v15 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = v3;
      aBlock[4] = sub_10004D060;
      aBlock[5] = v16;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100049AB4;
      aBlock[3] = &unk_100489C18;
      long long v17 = _Block_copy(aBlock);
      id v18 = v3;
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_100039B94();
      sub_100012894((uint64_t *)&unk_1004C68E0);
      sub_100039BEC();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v17);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
  }
  return result;
}

id sub_10004A9C8(uint64_t a1, long long *a2, float a3)
{
  long long v17 = a2[1];
  long long v18 = *a2;
  long long v15 = a2[3];
  long long v16 = a2[2];
  long long v13 = a2[5];
  long long v14 = a2[4];
  long long v12 = a2[6];
  uint64_t v5 = *((void *)a2 + 14);
  uint64_t v6 = *((void *)a2 + 15);
  uint64_t v7 = qword_1004C5A40;
  id v8 = [*(id *)(a1 + qword_1004C5A40) layer];
  v19[0] = v18;
  v19[1] = v17;
  v19[2] = v16;
  v19[3] = v15;
  v19[4] = v14;
  v19[5] = v13;
  v19[6] = v12;
  uint64_t v20 = v5;
  uint64_t v21 = v6;
  [v8 setTransform:v19];

  *(float *)&double v9 = a3;
  [*(id *)(a1 + v7) setResetButtonPortraitVerticalOffset:v9];
  *(float *)&double v10 = a3;
  [*(id *)(a1 + v7) setResetButtonLandscapeVerticalOffset:v10];
  [*(id *)(a1 + v7) updateConstraintsIfNeeded];
  return [*(id *)(a1 + v7) layoutIfNeeded];
}

void sub_10004AAEC()
{
  unint64_t v1 = v0;
  id v2 = [v0 superview];
  if (v2)
  {
    id v14 = v2;
    double v3 = self;
    if (![v3 jasperAvailable]
      || (sub_10001C99C(0, (unint64_t *)&qword_1004C6A10), (static UIDevice.isIPhone()() & 1) == 0))
    {
      [v14 frame];
      [v0 setFrame:];
    }
    uint64_t v4 = qword_1004C5A48;
    if (!*(void *)&v0[qword_1004C5A48])
    {
      id v5 = objc_allocWithZone((Class)type metadata accessor for CalloutViewRegular());
      sub_100036C94(v0, 0, 0);
      uint64_t v6 = *(void **)&v0[v4];
      *(void *)&v0[v4] = v7;
    }
    uint64_t v8 = qword_1004C5A50;
    if (*(void *)&v0[qword_1004C5A50])
    {
      double v9 = v14;
    }
    else
    {
      if ([v3 jasperAvailable]
        && (sub_10001C99C(0, (unint64_t *)&qword_1004C6A10), (static UIDevice.isIPad()() & 1) != 0))
      {
        id v10 = objc_allocWithZone((Class)type metadata accessor for CalloutViewSpatial());
        id v11 = sub_1000FA6D4(v0, 1);
      }
      else
      {
        id v12 = objc_allocWithZone((Class)type metadata accessor for CalloutViewRegular());
        sub_100036C94(v0, 0, 1);
      }
      id v13 = v11;

      double v9 = *(void **)&v1[v8];
      *(void *)&v1[v8] = v13;
    }
  }
}

void sub_10004ACAC(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_10004AEB4(a3))
  {
    if ((a2 & 1) == 0
      || *(void *)(v4 + qword_1004C5AA0) == a1
      || (uint64_t v12 = v4 + qword_1004C5A98,
          swift_beginAccess(),
          (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8),
          Date.timeIntervalSinceNow.getter(),
          double v14 = v13,
          (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8),
          v14 < -0.6))
    {
      long long v15 = *(void **)(v4 + qword_1004C5A50);
      if (v15)
      {
        long long v16 = *(void (**)(void, void, uint64_t))((swift_isaMask & *v15) + 0xF8);
        long long v17 = v15;
        v16(0, 0, 1);
      }
      if (a2) {
        uint64_t v18 = a1;
      }
      else {
        uint64_t v18 = 0;
      }
      sub_100049AF8(v18);
      sub_10004AAEC();
      long long v19 = *(void **)(v4 + qword_1004C5A48);
      if (v19)
      {
        id v20 = v19;
        sub_100037E60(a2 & 1, a1, 0);
      }
    }
  }
}

uint64_t sub_10004AEB4(char a1)
{
  void (*v2)(uint64_t *__return_ptr, uint64_t);
  uint64_t v3;
  void (*v4)(uint64_t *__return_ptr, uint64_t);
  uint64_t v5;
  uint64_t v7;
  char v8;

  if (a1)
  {
    if ([*(id *)(v1 + qword_1004C5A40) isActive])
    {
      id v2 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v1 + qword_1004C5A60) + 144);
      uint64_t v3 = swift_retain();
      v2(&v7, v3);
      swift_release();
      if (BYTE4(v7) != 1) {
        return 1;
      }
    }
  }
  uint64_t v4 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v1 + qword_1004C5A60) + 144);
  id v5 = swift_retain();
  v4((uint64_t *)((char *)&v7 + 5), v5);
  swift_release();
  if (v8) {
    return 0;
  }
  else {
    return [*(id *)(v1 + qword_1004C5A40) isActive] ^ 1;
  }
}

void sub_10004AFD0(uint64_t a1, char a2)
{
  void (*v5)(uint64_t *__return_ptr, uint64_t);
  uint64_t v6;
  void *v7;
  void (*v8)(void, uint64_t, void);
  void *v9;
  uint64_t v10;

  id v5 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v2 + qword_1004C5A60) + 144);
  uint64_t v6 = swift_retain();
  v5(&v10, v6);
  swift_release();
  if ((v10 & 0x100000000) == 0 && ([*(id *)(v2 + qword_1004C5A40) isActive] & 1) == 0)
  {
    sub_10004AAEC();
    uint64_t v7 = *(void **)(v2 + qword_1004C5A50);
    if (v7)
    {
      uint64_t v8 = *(void (**)(void, uint64_t, void))((swift_isaMask & *v7) + 0xF8);
      uint64_t v9 = v7;
      v8(a2 & 1, a1, 0);
    }
  }
}

void sub_10004B0DC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_10004C950();
}

void sub_10004B104()
{
}

uint64_t sub_10004B134()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + qword_1004C5A98;
  uint64_t v2 = type metadata accessor for Date();
  id v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_10004B220(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = a1 + qword_1004C5A98;
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t type metadata accessor for CoachingView()
{
  uint64_t result = qword_1004C5AD0;
  if (!qword_1004C5AD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10004B35C()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

uint64_t sub_10004B438()
{
  return type metadata accessor for CoachingView();
}

uint64_t sub_10004B560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = a3;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v3;
  aBlock[4] = a2;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = v17;
  double v14 = _Block_copy(aBlock);
  id v15 = v3;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_100039BEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v18);
}

void sub_10004B7E0(uint64_t a1)
{
  sub_100049AF8(0);
  uint64_t v2 = *(void **)(a1 + qword_1004C5A50);
  if (v2)
  {
    uint64_t v3 = *(void (**)(void, void, uint64_t))((swift_isaMask & *v2) + 0xF8);
    uint64_t v4 = v2;
    v3(0, 0, 1);
  }
  uint64_t v5 = *(void **)(a1 + qword_1004C5A48);
  if (v5)
  {
    id v6 = v5;
    sub_100037E60(0, 0, 1);
  }
}

void sub_10004B8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a1 + qword_1004C5A48);
  if (v3)
  {
    id v4 = v3;
    sub_100037E60(0, 0, 1);
  }
  sub_10004AFD0(a2, 1);
}

void sub_10004B938(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + qword_1004C5AA0)
    || (uint64_t v6 = a1 + qword_1004C5A98,
        swift_beginAccess(),
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2),
        Date.timeIntervalSinceNow.getter(),
        double v8 = v7,
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2),
        v8 < -0.6))
  {
    sub_100049AF8(0);
    uint64_t v9 = *(void **)(a1 + qword_1004C5A50);
    if (v9)
    {
      uint64_t v10 = *(void (**)(void, void, uint64_t))((swift_isaMask & *v9) + 0xF8);
      id v11 = v9;
      v10(0, 0, 1);
    }
    uint64_t v12 = *(void **)(a1 + qword_1004C5A48);
    if (v12)
    {
      id v13 = v12;
      sub_100037E60(0, 0, 1);
    }
  }
}

void sub_10004BB08(char a1)
{
  id v3 = [self currentThread];
  unsigned int v4 = [v3 isMainThread];

  if (v4)
  {
    if (a1)
    {
      uint64_t v5 = qword_1004C5A40;
      [*(id *)&v1[qword_1004C5A40] setGoal:0];
      if ([*(id *)&v1[v5] isActive])
      {
        [*(id *)&v1[v5] setActive:0 animated:1];
        [v1 setUserInteractionEnabled:0];
      }
    }
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

uint64_t sub_10004BC40(uint64_t a1, void *a2)
{
  id v3 = v2;
  uint64_t v27 = a1;
  double v28 = a2;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ARCamera.TrackingState();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t result = __chkstk_darwin(v12 - 8);
  long long v16 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)&v3[qword_1004C5A58])
  {
    sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
    uint64_t v26 = v8;
    uint64_t v25 = static OS_dispatch_queue.main.getter();
    sub_1000491B8(v27, (uint64_t)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    unint64_t v18 = (v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v3;
    sub_1000492E0((uint64_t)v16, v19 + v17);
    id v20 = v28;
    *(void *)(v19 + v18) = v28;
    aBlock[4] = sub_10004C644;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100049AB4;
    aBlock[3] = &unk_1004896C8;
    uint64_t v21 = _Block_copy(aBlock);
    id v22 = v20;
    uint64_t v23 = v3;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100039B94();
    sub_100012894((uint64_t *)&unk_1004C68E0);
    sub_100039BEC();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v24 = (void *)v25;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v26);
  }
  return result;
}

void sub_10004BF94(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = qword_1004C5A58;
  uint64_t v4 = *(void **)(a1 + qword_1004C5A58);
  if (!v4) {
    goto LABEL_15;
  }
  id v7 = v4;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = ARCamera.TrackingState.description.getter();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setText:v9];

  uint64_t v10 = *(void **)(a1 + v3);
  if (!v10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v11 = v10;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  if (!a3) {
    goto LABEL_8;
  }
  [a3 ambientIntensity];
  if ((~*(void *)&v12 & 0x7FF0000000000000) == 0)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v12 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v12 >= 9.22337204e18) {
    __break(1u);
  }
LABEL_8:
  v13._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  id v14 = [v11 text];
  if (!v14)
  {
LABEL_17:
    __break(1u);
    return;
  }
  id v15 = v14;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  v18._uint64_t countAndFlagsBits = 0xD000000000000012;
  v18._object = (void *)0x8000000100421030;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  if (v17)
  {
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v19 = 0;
  }
  [v11 setText:v19];
}

uint64_t sub_10004C1F0()
{
  return sub_10004B560((uint64_t)&unk_100489AC0, (uint64_t)sub_10004C894, (uint64_t)&unk_100489AD8);
}

uint64_t sub_10004C22C()
{
  return sub_10004B560((uint64_t)&unk_100489A70, (uint64_t)sub_10004C864, (uint64_t)&unk_100489A88);
}

uint64_t sub_10004C268()
{
  return sub_10004B560((uint64_t)&unk_100489A20, (uint64_t)sub_10004C844, (uint64_t)&unk_100489A38);
}

uint64_t sub_10004C2A4()
{
  return sub_10004B560((uint64_t)&unk_1004899D0, (uint64_t)sub_10004C824, (uint64_t)&unk_1004899E8);
}

uint64_t sub_10004C2E0()
{
  return sub_10004B560((uint64_t)&unk_100489980, (uint64_t)sub_10004C81C, (uint64_t)&unk_100489998);
}

uint64_t sub_10004C31C()
{
  return sub_10004B560((uint64_t)&unk_100489930, (uint64_t)sub_10004C7EC, (uint64_t)&unk_100489948);
}

uint64_t sub_10004C358()
{
  return sub_10004B560((uint64_t)&unk_1004898E0, (uint64_t)sub_10004C7BC, (uint64_t)&unk_1004898F8);
}

uint64_t sub_10004C394()
{
  return sub_10004B560((uint64_t)&unk_100489890, (uint64_t)sub_10004C78C, (uint64_t)&unk_1004898A8);
}

uint64_t sub_10004C3D0()
{
  return sub_10004B560((uint64_t)&unk_100489840, (uint64_t)sub_10004C75C, (uint64_t)&unk_100489858);
}

uint64_t sub_10004C40C()
{
  return sub_10004B560((uint64_t)&unk_1004897F0, (uint64_t)sub_10004C72C, (uint64_t)&unk_100489808);
}

uint64_t sub_10004C448()
{
  return sub_10004B560((uint64_t)&unk_1004897A0, (uint64_t)sub_10004D100, (uint64_t)&unk_1004897B8);
}

uint64_t sub_10004C484()
{
  return sub_10004B560((uint64_t)&unk_100489750, (uint64_t)sub_10004D100, (uint64_t)&unk_100489768);
}

uint64_t sub_10004C4C4()
{
  return sub_10004B560((uint64_t)&unk_100489700, (uint64_t)sub_10004C6EC, (uint64_t)&unk_100489718);
}

uint64_t sub_10004C504()
{
  uint64_t v1 = *(void *)(type metadata accessor for ARCamera.TrackingState() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);

  uint64_t v5 = type metadata accessor for ARCamera.TrackingState.Reason();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 2, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 8;

  return _swift_deallocObject(v0, v8, v2 | 7);
}

void sub_10004C644()
{
  uint64_t v1 = *(void *)(type metadata accessor for ARCamera.TrackingState() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_10004BF94(v3, v0 + v2, v4);
}

uint64_t sub_10004C6D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10004C6E4()
{
  return swift_release();
}

void sub_10004C6EC()
{
}

uint64_t sub_10004C71C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 128);
  return swift_retain();
}

void sub_10004C72C()
{
}

void sub_10004C75C()
{
}

void sub_10004C78C()
{
}

void sub_10004C7BC()
{
}

void sub_10004C7EC()
{
}

void sub_10004C81C()
{
  sub_10004B938(*(void *)(v0 + 16));
}

void sub_10004C824()
{
  sub_10004B8D0(*(void *)(v0 + 16), 7);
}

void sub_10004C844()
{
  sub_10004B8D0(*(void *)(v0 + 16), 8);
}

void sub_10004C864()
{
}

void sub_10004C894()
{
}

uint64_t sub_10004C8CC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 128);
  return swift_retain();
}

void sub_10004C8E0()
{
}

uint64_t sub_10004C8E8()
{
  return _swift_deallocObject(v0, 32, 7);
}

BOOL sub_10004C8F8(uint64_t a1)
{
  return (unint64_t)(a1 - 3) < 2;
}

uint64_t sub_10004C908()
{
  return _swift_deallocObject(v0, 156, 7);
}

id sub_10004C940()
{
  return sub_10004A9C8(*(void *)(v0 + 16), (long long *)(v0 + 24), *(float *)(v0 + 152));
}

void sub_10004C950()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  *(void *)&v0[qword_1004C5A48] = 0;
  *(void *)&v0[qword_1004C5A50] = 0;
  *(void *)&v0[qword_1004C5A58] = 0;
  uint64_t v2 = qword_1004C5A60;
  sub_100012894((uint64_t *)&unk_1004C5CC0);
  swift_getKeyPath();
  *(void *)&v0[v2] = MutableStateBinding.__allocating_init(_:_:)();
  uint64_t v3 = qword_1004C5A68;
  uint64_t v4 = sub_100012894(&qword_1004C3EE8);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1004F8630;
  unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 272);
  swift_retain();
  *(void *)&v1[v3] = v7(KeyPath, v6);
  uint64_t v8 = qword_1004C5A70;
  sub_100012894((uint64_t *)&unk_1004C5CD0);
  swift_getKeyPath();
  *(void *)&v1[v8] = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v9 = qword_1004C5A78;
  uint64_t v10 = sub_100012894((uint64_t *)&unk_1004C7F20);
  uint64_t v11 = swift_getKeyPath();
  uint64_t v12 = qword_1004F8630;
  Swift::String v13 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 272);
  swift_retain();
  *(void *)&v1[v9] = v13(v11, v12);
  *(void *)&v1[qword_1004C5A90] = 0x3FE3333333333333;
  Date.init()();
  *(void *)&v1[qword_1004C5AA0] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10004CB60()
{
  uint64_t v1 = v0;
  id v2 = [self standardUserDefaults];
  Defaults.disableAllCoaching.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v4 = [v2 BOOLForKey:v3];

  if ((v4 & 1) == 0)
  {
    uint64_t v5 = *(uint64_t (**)(unsigned char *))(**(void **)&v1[qword_1004C5A60] + 400);
    swift_retain();
    uint64_t v6 = (void (*)(unsigned char *, void))v5(v10);
    *(unsigned char *)(v7 + 3) = 1;
    v6(v10, 0);
    swift_release();
    [v1 setUserInteractionEnabled:1];
    id v8 = [self sharedMenuController];
    [v8 hideMenu];

    if (qword_1004C2B30 != -1) {
      swift_once();
    }
    v9._object = (void *)0x80000001004210E0;
    v9._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
    Log.default(_:isPrivate:)(v9, 0);
  }
}

void sub_10004CD20()
{
  uint64_t v1 = v0;
  id v2 = [self standardUserDefaults];
  Defaults.disableAllCoaching.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v4 = [v2 BOOLForKey:v3];

  if ((v4 & 1) == 0)
  {
    uint64_t v5 = *(uint64_t (**)(unsigned char *))(**(void **)&v1[qword_1004C5A60] + 400);
    swift_retain();
    uint64_t v6 = (void (*)(unsigned char *, void))v5(v9);
    *(unsigned char *)(v7 + 3) = 0;
    v6(v9, 0);
    swift_release();
    [v1 setUserInteractionEnabled:0];
    if (qword_1004C2B30 != -1) {
      swift_once();
    }
    v8._object = (void *)0x80000001004210C0;
    v8._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    Log.default(_:isPrivate:)(v8, 0);
  }
}

void sub_10004CEA8()
{
  uint64_t v1 = *(void *)(v0 + qword_1004C5A70);
  char v5 = 3;
  id v2 = *(void (**)(char *))(*(void *)v1 + 392);
  swift_retain();
  v2(&v5);
  swift_release();
  id v3 = [self sharedMenuController];
  [v3 hideMenu];

  if (qword_1004C2B30 != -1) {
    swift_once();
  }
  v4._object = (void *)0x80000001004210A0;
  v4._uint64_t countAndFlagsBits = 0x100000000000001CLL;
  Log.default(_:isPrivate:)(v4, 0);
}

void sub_10004CFBC(unint64_t *a1)
{
}

uint64_t sub_10004CFC4()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10004CFFC(uint64_t a1)
{
}

uint64_t sub_10004D020(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

void sub_10004D04C(unint64_t a1)
{
  if ((~a1 & 0xF000000000000007) != 0) {
    sub_10001F780(a1);
  }
}

void sub_10004D060()
{
  sub_10004B7E0(*(void *)(v0 + 16));
}

id sub_10004D13C()
{
  id v0 = objc_allocWithZone((Class)UISwitch);

  return [v0 init];
}

uint64_t sub_10004D174()
{
  return sub_10004DABC();
}

id sub_10004D18C@<X0>(uint64_t a1@<X8>)
{
  self;
  id result = [(id)swift_dynamicCastObjCClassUnconditional() isOn];
  *(void *)(a1 + 24) = &type metadata for Bool;
  *(unsigned char *)a1 = (_BYTE)result;
  return result;
}

void sub_10004D1F0()
{
  id v9 = sub_10004D574();
  self;
  uint64_t v1 = (void *)swift_dynamicCastObjCClassUnconditional();
  id v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC7Measure11DefaultCell_def);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC7Measure11DefaultCell_def + 8);
  if (v3)
  {
    uint64_t v4 = *v2;
    char v5 = self;
    sub_10004ED8C(v4, v3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v6 = [v5 standardUserDefaults];
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v6 BOOLForKey:v7];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_10004ED48(v4, v3);
  }
  else
  {
    id v8 = 0;
  }
  [v1 setOn:v8];
}

uint64_t type metadata accessor for SwitchCell()
{
  return self;
}

id sub_10004D3A0()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure11DefaultCell____lazy_storage___stack;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC7Measure11DefaultCell____lazy_storage___stack);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Measure11DefaultCell____lazy_storage___stack);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIStackView) init];
    [v4 setAxis:0];
    [v4 setAlignment:3];
    [v4 setDistribution:0];
    char v5 = *(void **)(v0 + v1);
    *(void *)(v0 + vsub_10004ACAC(2, 1, 1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_10004D450()
{
  return sub_10004D468(&OBJC_IVAR____TtC7Measure11DefaultCell____lazy_storage___titleLabel);
}

id sub_10004D45C()
{
  return sub_10004D468(&OBJC_IVAR____TtC7Measure11DefaultCell____lazy_storage___valueLabel);
}

id sub_10004D468(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    id v5 = [objc_allocWithZone((Class)UILabel) init];
    id v6 = [self labelColor];
    [v5 setTextColor:v6];

    id v7 = [self preferredFontForTextStyle:UIFontTextStyleBody];
    [v5 setFont:v7];

    [v5 setNumberOfLines:1];
    id v8 = *(void **)(v1 + v2);
    *(void *)(v1 + vsub_10004ACAC(3, 1, 2) = v5;
    id v4 = v5;

    id v3 = 0;
  }
  id v9 = v3;
  return v4;
}

id sub_10004D574()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure11DefaultCell____lazy_storage___control;
  uint64_t v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC7Measure11DefaultCell____lazy_storage___control);
  if (v2)
  {
    id v3 = *(id *)((char *)v0 + OBJC_IVAR____TtC7Measure11DefaultCell____lazy_storage___control);
  }
  else
  {
    id v4 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x120))();
    id v5 = *(void **)((char *)v0 + v1);
    *(void *)((char *)v0 + vsub_10004ACAC(2, 1, 1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_10004D60C()
{
  id v1 = sub_10004D450();
  uint64_t v2 = (void *)((char *)v0 + OBJC_IVAR____TtC7Measure11DefaultCell_def);
  uint64_t v3 = *(void *)((char *)v0 + OBJC_IVAR____TtC7Measure11DefaultCell_def + 8);
  if (v3 && (uint64_t v4 = v2[3], v5 = *v2, swift_bridgeObjectRetain(), swift_bridgeObjectRetain_n(), sub_10004ED48(v5, v3), v4))
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  [v1 setText:v6];

  (*(void (**)(void))((swift_isaMask & *v0) + 0x130))();
  id v7 = sub_10004D45C();
  (*(void (**)(void))((swift_isaMask & *v0) + 0x138))();
  id v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setText:v8];
}

uint64_t sub_10004D7B0()
{
  uint64_t v1 = sub_100012894(&qword_1004C5E30);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x128))(v3);
  *(void *)(swift_allocObject() + 16) = v0;
  NSString v6 = v0;
  sub_100012894(&qword_1004C5E38);
  sub_10002179C(&qword_1004C5E40, &qword_1004C5E38);
  Publisher.filter(_:)();
  swift_release();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v6;
  sub_10002179C(&qword_1004C5E48, &qword_1004C5E30);
  v6;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  swift_beginAccess();
  sub_100012894(&qword_1004C5E50);
  sub_10002179C(&qword_1004C5E58, &qword_1004C5E50);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10004DA60()
{
  return 0;
}

id sub_10004DA6C()
{
  id v0 = objc_allocWithZone((Class)UISlider);

  return [v0 init];
}

uint64_t sub_10004DAA4()
{
  return sub_10004DABC();
}

uint64_t sub_10004DABC()
{
  uint64_t v0 = sub_100012894(&qword_1004C5E10);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = sub_10004D574();
  v7[0] = v4;
  v7[1] = 4096;
  sub_100012894(&qword_1004C5E18);
  sub_10002179C(&qword_1004C5E20, &qword_1004C5E18);
  Publisher.map<A>(_:)();

  sub_10002179C(&qword_1004C5E28, &qword_1004C5E10);
  uint64_t v5 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

id sub_10004DC44@<X0>(uint64_t a1@<X8>)
{
  self;
  id result = [(id)swift_dynamicCastObjCClassUnconditional() value];
  *(void *)(a1 + 24) = &type metadata for Float;
  *(_DWORD *)a1 = v3;
  return result;
}

void sub_10004DCA8()
{
  id v11 = sub_10004D574();
  self;
  uint64_t v1 = (void *)swift_dynamicCastObjCClassUnconditional();
  int v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC7Measure11DefaultCell_def);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC7Measure11DefaultCell_def + 8);
  if (v4)
  {
    uint64_t v5 = *v3;
    NSString v6 = self;
    sub_10004ED8C(v5, v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v7 = [v6 standardUserDefaults];
    NSString v8 = String._bridgeToObjectiveC()();
    [v7 floatForKey:v8];
    int v10 = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_10004ED48(v5, v4);
  }
  else
  {
    int v10 = 0;
  }
  LODWORD(vsub_10004ACAC(3, 1, 2) = v10;
  [v1 setValue:v2];
}

uint64_t sub_10004DE30()
{
  sub_100012894((uint64_t *)&unk_1004D2460);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1003F87F0;
  id v1 = sub_10004D574();
  self;
  [(id)swift_dynamicCastObjCClassUnconditional() value];
  int v3 = v2;

  *(void *)(v0 + 56) = &type metadata for Float;
  *(void *)(v0 + 64) = &protocol witness table for Float;
  *(_DWORD *)(v0 + 3sub_10004ACAC(3, 1, 2) = v3;

  return String.init(format:_:)();
}

void sub_10004DEF4()
{
  id v1 = sub_10004D574();
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    uint64_t v3 = v0 + OBJC_IVAR____TtC7Measure11DefaultCell_def;
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC7Measure11DefaultCell_def + 8);
    if (v4)
    {
      uint64_t v5 = (void *)v2;
      uint64_t v6 = *(void *)(v3 + 32);
      uint64_t v7 = *(void *)v3;
      char v8 = *(unsigned char *)(v3 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10004ED48(v7, v4);
      if ((v8 & 1) == 0)
      {
        LODWORD(v9) = v6;
        [v5 setMinimumValue:v9];
        LODWORD(v10) = HIDWORD(v6);
        [v5 setMaximumValue:v10];
      }
    }
  }

  sub_10004D60C();
}

uint64_t type metadata accessor for SliderCell()
{
  return self;
}

id sub_10004E024()
{
  type metadata accessor for ColorPicker();
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return [v0 init];
}

uint64_t sub_10004E060()
{
  return sub_10004DABC();
}

uint64_t sub_10004E078@<X0>(void *a1@<X8>)
{
  type metadata accessor for ColorPicker();
  uint64_t result = swift_dynamicCastClassUnconditional();
  uint64_t v3 = *(void *)(result + OBJC_IVAR____TtC7Measure11ColorPicker_value);
  a1[3] = &type metadata for Int;
  *a1 = v3;
  return result;
}

void sub_10004E0DC()
{
  id v9 = sub_10004D574();
  type metadata accessor for ColorPicker();
  uint64_t v1 = swift_dynamicCastClassUnconditional();
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC7Measure11DefaultCell_def + 8);
  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC7Measure11DefaultCell_def);
    uint64_t v5 = self;
    sub_10004ED8C(v4, v3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v6 = [v5 standardUserDefaults];
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v6 integerForKey:v7];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_10004ED48(v4, v3);
  }
  else
  {
    id v8 = 0;
  }
  *(void *)(v1 + OBJC_IVAR____TtC7Measure11ColorPicker_value) = v8;
  sub_10014EB14(v2);
}

uint64_t sub_10004E25C()
{
  id v0 = sub_10004D574();
  type metadata accessor for ColorPicker();
  uint64_t v1 = swift_dynamicCastClassUnconditional();
  *(double *)&long long v2 = sub_10014EC10(*(void *)(v1 + OBJC_IVAR____TtC7Measure11ColorPicker_value));
  long long v5 = v2;

  sub_100012894((uint64_t *)&unk_1004D2460);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1003F8720;
  *(void *)(v3 + 56) = &type metadata for Float;
  *(void *)(v3 + 64) = &protocol witness table for Float;
  *(_DWORD *)(v3 + 3sub_10004ACAC(3, 1, 2) = v5;
  *(_DWORD *)(v3 + 7sub_10004ACAC(3, 1, 2) = DWORD1(v5);
  *(void *)(v3 + 96) = &type metadata for Float;
  *(void *)(v3 + 104) = &protocol witness table for Float;
  *(void *)(v3 + 136) = &type metadata for Float;
  *(void *)(v3 + 144) = &protocol witness table for Float;
  *(_DWORD *)(v3 + 11sub_10004ACAC(3, 1, 2) = DWORD2(v5);
  *(void *)(v3 + 176) = &type metadata for Float;
  *(void *)(v3 + 184) = &protocol witness table for Float;
  *(_DWORD *)(v3 + 15sub_10004ACAC(3, 1, 2) = HIDWORD(v5);

  return String.init(format:_:)();
}

uint64_t type metadata accessor for ColorCell()
{
  return self;
}

void sub_10004E4BC(void *a1, void *a2)
{
  id v4 = sub_10004D45C();
  (*(void (**)(void))((swift_isaMask & *a2) + 0x138))();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v4 setText:v5];

  id v6 = [self standardUserDefaults];
  sub_1000131D4(a1, a1[3]);
  uint64_t v7 = _bridgeAnythingToObjectiveC<A>(_:)();
  if (*(void *)((char *)a2 + OBJC_IVAR____TtC7Measure11DefaultCell_def + 8))
  {
    uint64_t v8 = v7;
    swift_bridgeObjectRetain();
    id v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v6 setObject:v8 forKey:v9];

    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_10004E620()
{
}

void sub_10004E67C()
{
}

void sub_10004E6D8()
{
}

id sub_10004E734()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DefaultCell();
  return [super dealloc];
}

uint64_t type metadata accessor for DefaultCell()
{
  return self;
}

uint64_t sub_10004E828(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC7Measure11DefaultCell____lazy_storage___stack] = 0;
  *(void *)&v2[OBJC_IVAR____TtC7Measure11DefaultCell____lazy_storage___titleLabel] = 0;
  *(void *)&v2[OBJC_IVAR____TtC7Measure11DefaultCell____lazy_storage___valueLabel] = 0;
  *(void *)&v2[OBJC_IVAR____TtC7Measure11DefaultCell____lazy_storage___control] = 0;
  *(void *)&v2[OBJC_IVAR____TtC7Measure11DefaultCell_cancellables] = _swiftEmptyArrayStorage;
  uint64_t v3 = &v2[OBJC_IVAR____TtC7Measure11DefaultCell_def];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + sub_10004ACAC(2, 1, 1) = 0u;
  *(_OWORD *)(v3 + 25) = 0u;
  if (a2)
  {
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v39.receiver = v2;
    v39.super_class = (Class)type metadata accessor for DefaultCell();
    id v5 = [super initWithStyle:0 reuseIdentifier:v4];

    id v6 = v5;
    id v7 = sub_10004D450();
    id v8 = sub_10004D574();
    id v9 = sub_10004D45C();
    id v10 = v7;
    id v11 = sub_10004D3A0();
    [v11 addArrangedSubview:v10];

    id v12 = v8;
    id v13 = sub_10004D3A0();
    [v13 addArrangedSubview:v12];

    id v14 = v9;
    id v15 = sub_10004D3A0();
    [v15 addArrangedSubview:v14];

    id v16 = [v6 contentView];
    id v17 = sub_10004D3A0();
    [v16 addSubview:v17];

    id v18 = sub_10004D3A0();
    [v18 setTranslatesAutoresizingMaskIntoConstraints:0];

    NSString v19 = self;
    sub_100012894((uint64_t *)&unk_1004CEA00);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1003F9450;
    id v21 = sub_10004D3A0();
    id v22 = [v21 leftAnchor];

    id v23 = [v6 leftAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23 constant:16.0];

    *(void *)(v20 + 3sub_10004ACAC(3, 1, 2) = v24;
    id v25 = sub_10004D3A0();
    id v26 = [v25 rightAnchor];

    id v27 = [v6 rightAnchor];
    id v28 = [v26 constraintEqualToAnchor:v27 constant:-16.0];

    *(void *)(v20 + 40) = v28;
    id v29 = sub_10004D3A0();
    id v30 = [v29 topAnchor];

    id v31 = [v6 topAnchor];
    id v32 = [v30 constraintEqualToAnchor:v31];

    *(void *)(v20 + 48) = v32;
    id v33 = sub_10004D3A0();
    id v34 = [v33 bottomAnchor];

    id v35 = [v6 bottomAnchor];
    id v36 = [v34 constraintEqualToAnchor:v35];

    *(void *)(v20 + 56) = v36;
    specialized Array._endMutation()();
    sub_100029878();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v19 activateConstraints:isa];

    sub_10004D7B0();
    return (uint64_t)v6;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

void sub_10004EC8C()
{
  *(void *)&v0[OBJC_IVAR____TtC7Measure11DefaultCell____lazy_storage___stack] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure11DefaultCell____lazy_storage___titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure11DefaultCell____lazy_storage___valueLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure11DefaultCell____lazy_storage___control] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure11DefaultCell_cancellables] = _swiftEmptyArrayStorage;
  uint64_t v1 = &v0[OBJC_IVAR____TtC7Measure11DefaultCell_def];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + sub_10004ACAC(2, 1, 1) = 0u;
  *(_OWORD *)(v1 + 25) = 0u;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10004ED48(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10004ED8C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10004EDD0()
{
  return _swift_deallocObject(v0, 24, 7);
}

BOOL sub_10004EE08()
{
  return *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Measure11DefaultCell_def + 8) != 0;
}

void sub_10004EE28(void *a1)
{
  sub_10004E4BC(a1, *(void **)(v1 + 16));
}

uint64_t sub_10004EE34(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = *(void *)(v4 + 48);
  uint64_t v9 = *(void *)(v4 + 56);
  int v10 = *(unsigned __int8 *)(v4 + 64);
  ARFrame.viewToCamera(screenPoint:sceneView:orientation:)();
  SIMD2<>.init(_:)();
  if (a4
    && ((*(void (**)(void *__return_ptr, void *, uint64_t))(*(void *)a4 + 312))(v23, a1, 7),
        sub_10004FB7C((uint64_t)v23, (uint64_t)v24),
        v25))
  {
    simd_float4x4.position.getter();
    char v11 = 0;
    uint64_t v9 = v12;
    uint64_t v8 = v13;
  }
  else
  {
    char v11 = v10;
  }
  *(void *)(v5 + 48) = v8;
  *(void *)(v5 + 56) = v9;
  *(unsigned char *)(v5 + 64) = v11;
  [a1 timestamp];
  *(void *)(v5 + 7sub_10004ACAC(3, 1, 2) = v14;
  if ((v11 & 1) == 0 && v10)
  {
    if (qword_1004C2B48 != -1) {
      swift_once();
    }
    _StringGuts.grow(_:)(69);
    v15._object = (void *)0x80000001004212F0;
    v15._uint64_t countAndFlagsBits = 0xD000000000000022;
    String.append(_:)(v15);
    v16._uint64_t countAndFlagsBits = CGPoint.debugDescription.getter();
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    v17._uint64_t countAndFlagsBits = 0x65726373206F7420;
    v17._object = (void *)0xEF20736F70206E65;
    String.append(_:)(v17);
    v18._uint64_t countAndFlagsBits = CGPoint.debugDescription.getter();
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    v19._uint64_t countAndFlagsBits = 0x6C726F77206F7420;
    v19._object = (void *)0xEE0020736F702064;
    String.append(_:)(v19);
    sub_100012894((uint64_t *)&unk_1004CEDE0);
    v20._uint64_t countAndFlagsBits = SIMD3.debugDescription.getter();
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    v21._uint64_t countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    Log.debug(_:isPrivate:)(v21, 0);
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_10004F0B8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5[1];
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = v5;
    uint64_t v9 = result;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
LABEL_41:
      uint64_t result = (uint64_t)sub_100030BC4(v6);
      uint64_t v6 = result;
    }
    uint64_t v10 = 0;
    unint64_t v11 = 0;
    id v32 = v8;
    while (1)
    {
      if (v7 == v11)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      unint64_t v12 = *(void *)(v6 + 16);
      if (v11 >= v12) {
        goto LABEL_36;
      }
      if (*(unsigned char *)(v6 + v10 + 120) == 1) {
        break;
      }
LABEL_5:
      ++v11;
      v10 += 96;
      if (v7 == v11)
      {
        v8[1] = v6;
        return result;
      }
    }
    if (*(unsigned char *)(v6 + v10 + 121) == 1 && (a5 & 1) != 0)
    {
      uint64_t v8 = *(void **)(v9 + 16);
      if (v8 && (uint64_t v13 = (void *)(*(uint64_t (**)(void))(*v8 + 112))()) != 0)
      {
      }
      else
      {
        if (qword_1004C2AF8 != -1) {
          swift_once();
        }
        _StringGuts.grow(_:)(62);
        v22._uint64_t countAndFlagsBits = 0xD000000000000027;
        v22._object = (void *)0x80000001004212A0;
        String.append(_:)(v22);
        v23._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v23);
        swift_bridgeObjectRelease();
        v24._uint64_t countAndFlagsBits = 0xD000000000000013;
        v24._object = (void *)0x80000001004212D0;
        String.append(_:)(v24);
        sub_10004FB3C();
        v25._uint64_t countAndFlagsBits = static NSThread.prettyPrintCallStack(toDepth:)();
        String.append(_:)(v25);
        swift_bridgeObjectRelease();
        v26._uint64_t countAndFlagsBits = 0;
        v26._object = (void *)0xE000000000000000;
        Log.error(_:isPrivate:)(v26, 0);
        uint64_t result = swift_bridgeObjectRelease();
        if (!v8)
        {
LABEL_42:
          __break(1u);
          return result;
        }
      }
      uint64_t result = (*(uint64_t (**)(void))(*v8 + 112))();
      if (!result) {
        goto LABEL_42;
      }
      if (v11 >= *(void *)(v6 + 16)) {
        goto LABEL_38;
      }
      id v27 = (void *)result;
      sub_10004EE34((void *)result, a2, a3, a4);

      unint64_t v12 = *(void *)(v6 + 16);
      uint64_t v8 = v32;
    }
    else
    {
      uint64_t v14 = v6 + v10;
      if ((*(unsigned char *)(v6 + v10 + 96) & 1) == 0)
      {
        type metadata accessor for MeasureCamera();
        static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
        CGPoint.init(xy:)();
        uint64_t v16 = v15;
        uint64_t v18 = v17;
        double v19 = *(double *)(v9 + 8);
        double v20 = *(double *)(v14 + 104);
        if ((static MeasureCamera.isOnScreen(screenPoint:viewRect:)() & 1) != 0
          && *(double *)(*v8 + 104) >= v19 - v20)
        {
          unint64_t v21 = *(void *)(v6 + 16);
          if (v11 >= v21) {
            goto LABEL_39;
          }
        }
        else
        {
          unint64_t v21 = *(void *)(v6 + 16);
          if (v11 >= v21) {
            goto LABEL_40;
          }
          *(void *)(v14 + 80) = 0;
          *(void *)(v14 + 88) = 0;
          *(unsigned char *)(v14 + 96) = 1;
        }
        uint64_t v31 = v6 + v10;
        *(void *)(v31 + 64) = v16;
        *(void *)(v31 + 7sub_10004ACAC(3, 1, 2) = v18;
        if (v11 >= v21) {
          goto LABEL_37;
        }
        goto LABEL_26;
      }
    }
    if (v11 >= v12) {
      goto LABEL_37;
    }
LABEL_26:
    long long v37 = *(_OWORD *)(v6 + v10 + 64);
    uint64_t v28 = v8[2];
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_10006E718(0, *(void *)(v28 + 16) + 1, 1, v28);
      uint64_t v28 = result;
    }
    unint64_t v30 = *(void *)(v28 + 16);
    unint64_t v29 = *(void *)(v28 + 24);
    if (v30 >= v29 >> 1)
    {
      uint64_t result = (uint64_t)sub_10006E718((double *)(v29 > 1), v30 + 1, 1, v28);
      uint64_t v28 = result;
    }
    *(void *)(v28 + 16) = v30 + 1;
    *(_OWORD *)(v28 + 16 * v30 + 3sub_10004ACAC(3, 1, 2) = v37;
    v8[2] = v28;
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_10004F4F4(uint64_t a1, void *a2, long long *a3)
{
  uint64_t v4 = a2;
  long long v69 = a3[1];
  long long v70 = *a3;
  long long v68 = a3[2];
  int64_t v5 = *(void *)(a1 + 16);
  CGFloat v6 = COERCE_DOUBLE(_swiftEmptyArrayStorage);
  if (!v5)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    v3[1] = v6;
    id v23 = v4;
    if (![v23 getCornerCount])
    {
LABEL_38:

      uint64_t v52 = *(void *)(*(void *)&v6 + 16);
      if (v52)
      {
        swift_bridgeObjectRetain();
        uint64_t v53 = 0;
        CGFloat a = COERCE_DOUBLE(_swiftEmptyArrayStorage);
        do
        {
          uint64_t v58 = *(void *)&v6 + v53;
          uint64_t v59 = *(void *)(*(void *)&v6 + v53 + 112);
          if (v59 >= 1)
          {
            uint64_t v60 = *(void *)(v58 + 32);
            int v61 = *(_DWORD *)(v58 + 56);
            long long v73 = *(_OWORD *)(v58 + 64);
            long long v75 = *(_OWORD *)(v58 + 40);
            long long v71 = *(_OWORD *)(v58 + 80);
            char v62 = *(unsigned char *)(v58 + 96);
            uint64_t v63 = *(void *)(v58 + 104);
            char v64 = *(unsigned char *)(v58 + 120);
            char v82 = *(unsigned char *)(v58 + 121);
            char v78 = *(unsigned char *)(v58 + 122);
            swift_retain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v83.CGFloat a = a;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1000BBD94(0, *(void *)(*(void *)&a + 16) + 1, 1);
              CGFloat a = v83.a;
            }
            unint64_t v56 = *(void *)(*(void *)&a + 16);
            unint64_t v55 = *(void *)(*(void *)&a + 24);
            if (v56 >= v55 >> 1)
            {
              sub_1000BBD94((double *)(v55 > 1), v56 + 1, 1);
              CGFloat a = v83.a;
            }
            *(void *)(*(void *)&a + 16) = v56 + 1;
            uint64_t v57 = *(void *)&a + 96 * v56;
            *(void *)(v57 + 3sub_10004ACAC(3, 1, 2) = v60;
            *(_OWORD *)(v57 + 40) = v75;
            *(_DWORD *)(v57 + 56) = v61;
            *(_OWORD *)(v57 + 64) = v73;
            *(_OWORD *)(v57 + 80) = v71;
            *(unsigned char *)(v57 + 96) = v62;
            *(void *)(v57 + 104) = v63;
            *(void *)(v57 + 11sub_10004ACAC(3, 1, 2) = v59;
            *(unsigned char *)(v57 + 120) = v64;
            *(unsigned char *)(v57 + 12sub_10004ACAC(2, 1, 1) = v82;
            *(unsigned char *)(v57 + 12sub_10004ACAC(3, 1, 2) = v78;
            uint64_t v3 = v79;
          }
          v53 += 96;
          --v52;
        }
        while (v52);
        swift_bridgeObjectRelease();
      }
      else
      {
        CGFloat a = COERCE_DOUBLE(_swiftEmptyArrayStorage);
      }
      *(double *)&uint64_t result = COERCE_DOUBLE(swift_bridgeObjectRelease());
      v3[1] = a;
      return result;
    }
    Swift::String v24 = 0;
    id v77 = v23;
LABEL_15:
    *(double *)&uint64_t result = COERCE_DOUBLE([v23 getCornerAtIndex:v24, v66]);
    BOOL v12 = __OFADD__(v24++, 1);
    if (v12) {
      goto LABEL_51;
    }
    CGFloat v27 = v83.a;
    CGFloat b = v83.b;
    float v81 = *(float *)&v83.c;
    *(_OWORD *)&v83.CGFloat a = v70;
    *(_OWORD *)&v83.c = v69;
    *(_OWORD *)&v83.CGFloat tx = v68;
    v84.CGFloat x = v27;
    v84.CGFloat y = b;
    CGPoint v28 = CGPointApplyAffineTransform(v84, &v83);
    uint64_t v29 = *(void *)(*(void *)&v6 + 16);
    if (!v29)
    {
LABEL_34:
      CGFloat v49 = *v3;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        CGFloat v6 = COERCE_DOUBLE(sub_10006E600(0, *(void *)(*(void *)&v6 + 16) + 1, 1, *(uint64_t *)&v6));
      }
      unint64_t v51 = *(void *)(*(void *)&v6 + 16);
      unint64_t v50 = *(void *)(*(void *)&v6 + 24);
      if (v51 >= v50 >> 1) {
        CGFloat v6 = COERCE_DOUBLE(sub_10006E600((double *)(v50 > 1), v51 + 1, 1, *(uint64_t *)&v6));
      }
      *(void *)(*(void *)&v6 + 16) = v51 + 1;
      uint64_t v25 = *(void *)&v6 + 96 * v51;
      *(CGFloat *)(v25 + 3sub_10004ACAC(3, 1, 2) = v49;
      *(CGFloat *)(v25 + 40) = v27;
      *(CGFloat *)(v25 + 48) = b;
      *(float *)(v25 + 56) = v81;
      *(CGPoint *)(v25 + 64) = v28;
      *(void *)(v25 + 80) = 0;
      *(void *)(v25 + 88) = 0;
      *(unsigned char *)(v25 + 96) = 1;
      *(void *)(v25 + 104) = 0;
      *(void *)(v25 + 11sub_10004ACAC(3, 1, 2) = 1;
      *(_WORD *)(v25 + 120) = 256;
      *(unsigned char *)(v25 + 12sub_10004ACAC(3, 1, 2) = 0;
      uint64_t v3 = v79;
      goto LABEL_14;
    }
    swift_bridgeObjectRetain();
    unint64_t v30 = 0;
    uint64_t v31 = 64;
    while (1)
    {
      float v32 = *(float *)(*(void *)&v6 + v31 - 8);
      CGFloat v33 = *v3;
      if (*(unsigned char *)(*(void *)&v6 + v31 + 58) == 1)
      {
        static CGPoint.distanceSq(_:_:)();
        float v35 = v34;
        float v36 = *(float *)(*(void *)&v33 + 112);
        long long v37 = self;
        swift_retain();
        swift_retain();
        id v38 = [v37 mainScreen];
        [v38 scale];
        double v40 = v39;

        float v41 = v40;
        if (v35 >= (float)((float)(v36 * v41) * (float)(v36 * v41)))
        {
          swift_release();
          swift_release();
        }
        else
        {
          float v42 = *(float *)(*(void *)&v33 + 116);
          swift_release();
          swift_release();
          if (fabsf(fabsf(v32 / v81) + -1.0) < v42) {
            goto LABEL_26;
          }
        }
      }
      else
      {
        static CGPoint.distanceSq(_:_:)();
        if (v43 < (float)(*(float *)(*(void *)&v33 + 112) * *(float *)(*(void *)&v33 + 112))
          && fabsf(fabsf(v32 / v81) + -1.0) < *(float *)(*(void *)&v33 + 116))
        {
LABEL_26:
          swift_bridgeObjectRelease();
          *(double *)&uint64_t result = COERCE_DOUBLE(swift_isUniquelyReferenced_nonNull_native());
          if ((result & 1) == 0)
          {
            *(double *)&uint64_t result = COERCE_DOUBLE(sub_100030BC4(*(uint64_t *)&v6));
            CGFloat v6 = *(double *)&result;
          }
          if (v30 >= *(void *)(*(void *)&v6 + 16)) {
            goto LABEL_52;
          }
          uint64_t v44 = *(void *)&v6 + v31;
          *(CGFloat *)(v44 - 24) = v27;
          *(CGFloat *)(v44 - 16) = b;
          *(float *)(v44 - 8) = v81;
          *(CGPoint *)uint64_t v44 = v28;
          uint64_t v45 = *(void *)(*(void *)&v6 + v31 + 48);
          BOOL v12 = __OFADD__(v45, 2);
          uint64_t v46 = v45 + 2;
          if (v12) {
            goto LABEL_53;
          }
          uint64_t v47 = *(void *)(*(void *)(v44 - 32) + 96);
          BOOL v48 = v46 >= v47;
          if (v46 >= v47) {
            uint64_t v46 = *(void *)(*(void *)(v44 - 32) + 96);
          }
          *(void *)(v44 + 48) = v46;
          *(unsigned char *)(v44 + 56) = (*(unsigned char *)(v44 + 56) | v48) & 1;
          *(unsigned char *)(v44 + 57) = 1;
          id v23 = v77;
LABEL_14:
          if (v24 == [v23 getCornerCount]) {
            goto LABEL_38;
          }
          goto LABEL_15;
        }
      }
      ++v30;
      v31 += 96;
      if (v29 == v30)
      {
        swift_bridgeObjectRelease();
        id v23 = v77;
        goto LABEL_34;
      }
    }
  }
  uint64_t v7 = a1;
  id v66 = a2;
  *(void *)&v83.CGFloat a = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  *(double *)&uint64_t result = COERCE_DOUBLE(sub_1000BBD94(0, v5, 0));
  uint64_t v9 = 0;
  CGFloat v6 = COERCE_DOUBLE(_swiftEmptyArrayStorage);
  uint64_t v67 = v7;
  while (1)
  {
    uint64_t v10 = v7 + v9;
    uint64_t v11 = *(void *)(v7 + v9 + 112);
    BOOL v12 = __OFSUB__(v11, 1);
    uint64_t v13 = v11 - 1;
    if (v12) {
      break;
    }
    uint64_t v14 = *(void *)(v10 + 32);
    int v15 = *(_DWORD *)(v10 + 56);
    long long v74 = *(_OWORD *)(v10 + 64);
    long long v76 = *(_OWORD *)(v10 + 40);
    long long v72 = *(_OWORD *)(v10 + 80);
    int v16 = *(unsigned __int8 *)(v10 + 96);
    uint64_t v17 = *(void *)(v10 + 104);
    char v18 = *(unsigned char *)(v10 + 120);
    char v80 = *(unsigned char *)(v10 + 121);
    if (v13 <= (v16 ^ 1u)) {
      uint64_t v19 = v16 ^ 1u;
    }
    else {
      uint64_t v19 = v13;
    }
    v83.CGFloat a = v6;
    unint64_t v21 = *(void *)(*(void *)&v6 + 16);
    unint64_t v20 = *(void *)(*(void *)&v6 + 24);
    *(double *)&uint64_t result = COERCE_DOUBLE(swift_retain());
    if (v21 >= v20 >> 1)
    {
      *(double *)&uint64_t result = COERCE_DOUBLE(sub_1000BBD94((double *)(v20 > 1), v21 + 1, 1));
      CGFloat v6 = v83.a;
    }
    *(void *)(*(void *)&v6 + 16) = v21 + 1;
    uint64_t v22 = *(void *)&v6 + 96 * v21;
    *(void *)(v22 + 3sub_10004ACAC(3, 1, 2) = v14;
    *(_OWORD *)(v22 + 40) = v76;
    *(_DWORD *)(v22 + 56) = v15;
    *(_OWORD *)(v22 + 64) = v74;
    *(_OWORD *)(v22 + 80) = v72;
    *(unsigned char *)(v22 + 96) = v16;
    *(void *)(v22 + 104) = v17;
    *(void *)(v22 + 11sub_10004ACAC(3, 1, 2) = v19;
    *(unsigned char *)(v22 + 120) = v18;
    *(unsigned char *)(v22 + 12sub_10004ACAC(2, 1, 1) = 0;
    *(unsigned char *)(v22 + 12sub_10004ACAC(3, 1, 2) = v80;
    v9 += 96;
    --v5;
    uint64_t v3 = v79;
    uint64_t v7 = v67;
    if (!v5)
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = v66;
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

unint64_t sub_10004FB3C()
{
  unint64_t result = qword_1004C5E60;
  if (!qword_1004C5E60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1004C5E60);
  }
  return result;
}

uint64_t sub_10004FB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894(&qword_1004CEA20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for CornerAccumulationBuffer.CornerCandidate()
{
  return swift_release();
}

uint64_t initializeWithCopy for CornerAccumulationBuffer.CornerCandidate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v3 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v3;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 7sub_10004ACAC(3, 1, 2) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(unsigned char *)(a1 + 90) = *(unsigned char *)(a2 + 90);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CornerAccumulationBuffer.CornerCandidate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 7sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(unsigned char *)(a1 + 90) = *(unsigned char *)(a2 + 90);
  return a1;
}

__n128 initializeWithTake for CornerAccumulationBuffer.CornerCandidate(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 75) = *(_OWORD *)(a2 + 75);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 3sub_10004ACAC(3, 1, 2) = result;
  return result;
}

uint64_t assignWithTake for CornerAccumulationBuffer.CornerCandidate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 7sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(unsigned char *)(a1 + 90) = *(unsigned char *)(a2 + 90);
  return a1;
}

uint64_t getEnumTagSinglePayload for CornerAccumulationBuffer.CornerCandidate(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 91)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(vsub_10004ACAC(3, 1, 2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CornerAccumulationBuffer.CornerCandidate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 7sub_10004ACAC(3, 1, 2) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 90) = 0;
    *(_WORD *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9sub_10004ACAC(2, 1, 1) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9sub_10004ACAC(2, 1, 1) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CornerAccumulationBuffer.CornerCandidate()
{
  return &type metadata for CornerAccumulationBuffer.CornerCandidate;
}

uint64_t destroy for CornerAccumulationBuffer()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s7Measure24CornerAccumulationBufferVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CornerAccumulationBuffer(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CornerAccumulationBuffer(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Measurements(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(vsub_10004ACAC(3, 1, 2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Measurements(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CornerAccumulationBuffer()
{
  return &type metadata for CornerAccumulationBuffer;
}

void sub_10005004C(double a1, double a2)
{
  uint64_t v3 = v2;
  if (a2 <= a1)
  {
    double v5 = a1 / a2 * 104.0;
    if (a2 > 0.0) {
      double v4 = v5;
    }
    else {
      double v4 = 179.92;
    }
  }
  else
  {
    double v4 = 104.0;
  }
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  CGFloat v6 = *(void **)&v2[OBJC_IVAR____TtC7Measure13SketchSurface_surfaceView];
  [v2 addSubview:v6];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v7 = self;
  id v8 = [v7 mainBundle];
  v9._uint64_t countAndFlagsBits = 0xD000000000000022;
  v66._object = (void *)0x8000000100421400;
  v9._object = (void *)0x80000001004213D0;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v66._uint64_t countAndFlagsBits = 0xD000000000000022;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v66);

  BOOL v12 = (objc_class *)type metadata accessor for SketchLabel();
  id v13 = objc_allocWithZone(v12);
  uint64_t v14 = sub_100158BA8(v11._countAndFlagsBits, (uint64_t)v11._object);
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  char v64 = v14;
  [v3 addSubview:v14];
  id v15 = [v7 mainBundle];
  v67._object = (void *)0x8000000100421460;
  v16._object = (void *)0x8000000100421430;
  v16._uint64_t countAndFlagsBits = 0xD000000000000021;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v67._uint64_t countAndFlagsBits = 0xD000000000000021;
  Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v67);

  id v19 = objc_allocWithZone(v12);
  unint64_t v20 = sub_100158BA8(v18._countAndFlagsBits, (uint64_t)v18._object);
  [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
  char v62 = v20;
  [v3 addSubview:v20];
  if (qword_1004C2878 != -1) {
    swift_once();
  }
  double v21 = v4 + *(double *)&qword_1004F7EA8;
  double v22 = *(double *)&qword_1004F7EA8 + 104.0;
  id v23 = [v6 widthAnchor];
  id v24 = [v23 constraintEqualToConstant:v21];

  LODWORD(v25) = 1148813312;
  [v24 setPriority:v25];
  NSString v26 = String._bridgeToObjectiveC()();
  [v24 setIdentifier:v26];

  id v27 = [v6 centerYAnchor];
  id v28 = [v3 centerYAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28];

  LODWORD(v30) = 1148764160;
  [v29 setPriority:v30];
  NSString v31 = String._bridgeToObjectiveC()();
  [v29 setIdentifier:v31];

  id v61 = self;
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1003F9400;
  *(void *)(v32 + 3sub_10004ACAC(3, 1, 2) = v29;
  id v60 = v29;
  id v33 = [v6 centerXAnchor];
  id v34 = [v3 centerXAnchor];
  id v35 = [v33 constraintEqualToAnchor:v34];

  *(void *)(v32 + 40) = v35;
  id v36 = [v6 bottomAnchor];
  id v37 = [v3 bottomAnchor];
  id v38 = [v36 constraintLessThanOrEqualToAnchor:v37];

  *(void *)(v32 + 48) = v38;
  *(void *)(v32 + 56) = v24;
  id v59 = v24;
  id v39 = [v6 heightAnchor];
  id v40 = [v39 constraintEqualToConstant:v22];

  *(void *)(v32 + 64) = v40;
  id v41 = [v64 topAnchor];
  id v42 = [v3 topAnchor];
  id v43 = [v41 constraintGreaterThanOrEqualToAnchor:v42 constant:10.0];

  *(void *)(v32 + 7sub_10004ACAC(3, 1, 2) = v43;
  id v44 = [v64 bottomAnchor];
  id v45 = [v6 topAnchor];
  if (qword_1004C2898 != -1) {
    swift_once();
  }
  id v46 = [v44 constraintEqualToAnchor:v45 constant:-*(double *)&qword_1004F7EC8];

  *(void *)(v32 + 80) = v46;
  id v47 = [v64 centerXAnchor];
  id v48 = [v6 centerXAnchor];
  id v49 = [v47 constraintEqualToAnchor:v48];

  *(void *)(v32 + 88) = v49;
  id v50 = [v62 rightAnchor];
  id v51 = [v6 leftAnchor];
  id v52 = [v50 constraintEqualToAnchor:v51 constant:-*(double *)&qword_1004F7EC8];

  *(void *)(v32 + 96) = v52;
  id v53 = [v62 centerYAnchor];
  id v54 = [v6 centerYAnchor];
  id v55 = [v53 constraintEqualToAnchor:v54];

  *(void *)(v32 + 104) = v55;
  id v56 = [v62 leftAnchor];
  id v57 = [v3 leftAnchor];
  id v58 = [v56 constraintGreaterThanOrEqualToAnchor:v57 constant:10.0];

  *(void *)(v32 + 11sub_10004ACAC(3, 1, 2) = v58;
  specialized Array._endMutation()();
  sub_10001C99C(0, (unint64_t *)&qword_1004CE690);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v61 activateConstraints:isa];
}

id sub_100050868()
{
  uint64_t v1 = v0;
  v40.receiver = v0;
  v40.super_class = (Class)type metadata accessor for SketchSurface();
  [super layoutSubviews];
  uint64_t v2 = OBJC_IVAR____TtC7Measure13SketchSurface_rectSublayer;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC7Measure13SketchSurface_rectSublayer];
  if (v3) {
    [v3 removeFromSuperlayer];
  }
  uint64_t v39 = v2;
  uint64_t v4 = OBJC_IVAR____TtC7Measure13SketchSurface_horizontalLineSublayer;
  double v5 = *(void **)&v1[OBJC_IVAR____TtC7Measure13SketchSurface_horizontalLineSublayer];
  if (v5) {
    [v5 removeFromSuperlayer];
  }
  uint64_t v6 = OBJC_IVAR____TtC7Measure13SketchSurface_verticalLineSublayer;
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC7Measure13SketchSurface_verticalLineSublayer];
  if (v7) {
    [v7 removeFromSuperlayer];
  }
  id v8 = &v1[OBJC_IVAR____TtC7Measure13SketchSurface_dotLayers];
  swift_beginAccess();
  uint64_t v9 = *(void *)v8;
  if (*(void *)v8 >> 62)
  {
    swift_bridgeObjectRetain_n();
    id result = (id)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v10 = (uint64_t)result;
    if (!result) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain_n();
    if (!v10) {
      goto LABEL_16;
    }
  }
  if (v10 < 1)
  {
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  for (uint64_t i = 0; i != v10; ++i)
  {
    if ((v9 & 0xC000000000000001) != 0) {
      id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v13 = *(id *)(v9 + 8 * i + 32);
    }
    uint64_t v14 = v13;
    [v13 removeFromSuperlayer];
  }
LABEL_16:
  swift_bridgeObjectRelease_n();
  if (qword_1004C2878 != -1) {
    swift_once();
  }
  double v15 = *(double *)&qword_1004F7EA8;
  if (qword_1004C2880 != -1) {
    swift_once();
  }
  double v16 = *(double *)&qword_1004F7EB0;
  Swift::String v17 = *(void **)&v1[OBJC_IVAR____TtC7Measure13SketchSurface_surfaceView];
  [v17 bounds];
  double Width = CGRectGetWidth(v41);
  [v17 bounds];
  double Height = CGRectGetHeight(v42);
  double v20 = Width - v15;
  double v21 = Height - v15;
  id v22 = sub_10001759C(v16, v16, v20, v21);
  id v23 = *(void **)&v1[v39];
  *(void *)&v1[v39] = v22;

  id v24 = sub_1000177CC(1, v16 + v20 * 0.5, v16, v16 + v20 * 0.5, v16 + v21);
  double v25 = *(void **)&v1[v4];
  *(void *)&v1[v4] = v24;

  id v26 = sub_1000177CC(1, v16, v16 + v21 * 0.5, v16 + v20, v16 + v21 * 0.5);
  id v27 = *(void **)&v1[v6];
  *(void *)&v1[v6] = v26;

  sub_100017A14(0, v16, v16);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v8 & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  double v28 = Width - v16;
  sub_100017A14(0, v28, v16);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v8 & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  double v29 = Height - v16;
  sub_100017A14(0, v28, v29);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v8 & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  sub_100017A14(0, v16, v29);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v8 & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  id result = [v17 layer];
  if (!*(void *)&v1[v39]) {
    goto LABEL_43;
  }
  double v30 = result;
  [result addSublayer:];

  id result = [v17 layer];
  if (!*(void *)&v1[v4])
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  NSString v31 = result;
  [result addSublayer:];

  id result = [v17 layer];
  if (*(void *)&v1[v6])
  {
    uint64_t v32 = result;
    [result addSublayer:];

    uint64_t v33 = *(void *)v8;
    if (*(void *)v8 >> 62)
    {
      swift_bridgeObjectRetain_n();
      id result = (id)_CocoaArrayWrapper.endIndex.getter();
      uint64_t v34 = (uint64_t)result;
      if (result)
      {
LABEL_33:
        if (v34 >= 1)
        {
          uint64_t v35 = 0;
          do
          {
            if ((v33 & 0xC000000000000001) != 0) {
              id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v36 = *(id *)(v33 + 8 * v35 + 32);
            }
            id v37 = v36;
            ++v35;
            id v38 = [v17 layer];
            [v38 addSublayer:v37];
          }
          while (v34 != v35);
          return (id)swift_bridgeObjectRelease_n();
        }
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id result = (id)swift_bridgeObjectRetain_n();
      if (v34) {
        goto LABEL_33;
      }
    }
    return (id)swift_bridgeObjectRelease_n();
  }
LABEL_45:
  __break(1u);
  return result;
}

id sub_100050F88(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC7Measure13SketchSurface_surfaceView;
  id v4 = objc_allocWithZone((Class)UIView);
  double v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  *(void *)&v5[OBJC_IVAR____TtC7Measure13SketchSurface_rectSublayer] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Measure13SketchSurface_horizontalLineSublayer] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Measure13SketchSurface_verticalLineSublayer] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Measure13SketchSurface_dotLayers] = _swiftEmptyArrayStorage;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for SketchSurface();
  id v6 = [super initWithCoder:a1];

  return v6;
}

id sub_100051080()
{
  return sub_10005199C(type metadata accessor for SketchSurface);
}

uint64_t type metadata accessor for SketchSurface()
{
  return self;
}

void sub_100051138(double a1, double a2)
{
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  if (qword_1004C28B8 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1004F7EE8;
  if (qword_1004C28C0 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1004F7EF0;
  if (qword_1004C2878 != -1) {
    swift_once();
  }
  double v7 = *(double *)&qword_1004F7EA8;
  if (qword_1004C2880 != -1) {
    swift_once();
  }
  double v8 = *(double *)&qword_1004F7EB0;
  if (a2 > a1) {
    double v9 = *(double *)&v5;
  }
  else {
    double v9 = *(double *)&v6;
  }
  if (a2 > a1) {
    double v10 = *(double *)&v6;
  }
  else {
    double v10 = *(double *)&v5;
  }
  double v11 = v10 - v7;
  double v12 = v9 - v7;
  double v13 = v7 + v10 - v7;
  double v14 = v7 + v9 - v7;
  id v52 = *(id *)&v2[OBJC_IVAR____TtC7Measure20SketchSurfaceHistory_surfaceView];
  Class v15 = (Class)[v52 layer];
  id v16 = [(objc_class *)v15 sublayers];
  if (v16)
  {
    Swift::String v17 = v16;
    sub_10001C99C(0, &qword_1004C5EE8);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();

    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [(objc_class *)v15 setSublayers:isa];

    Class v15 = isa;
  }
  else
  {
    [(objc_class *)v15 setSublayers:0];
  }

  [v52 removeFromSuperview];
  [v2 addSubview:v52];
  [v52 setTranslatesAutoresizingMaskIntoConstraints:0];
  NSString v19 = String._bridgeToObjectiveC()();
  [v52 setAccessibilityIdentifier:v19];

  double v20 = self;
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1003F9450;
  id v22 = [v52 widthAnchor];
  id v23 = [v22 constraintEqualToConstant:v13];

  *(void *)(v21 + 3sub_10004ACAC(3, 1, 2) = v23;
  id v24 = [v52 heightAnchor];
  id v25 = [v24 constraintEqualToConstant:v14];

  *(void *)(v21 + 40) = v25;
  id v26 = [v52 centerXAnchor];
  id v27 = [v2 centerXAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  *(void *)(v21 + 48) = v28;
  id v29 = [v52 topAnchor];
  id v30 = [v2 topAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  *(void *)(v21 + 56) = v31;
  v54[2] = v21;
  specialized Array._endMutation()();
  sub_10001C99C(0, (unint64_t *)&qword_1004CE690);
  Class v32 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v20 activateConstraints:v32];

  id v33 = [v52 layer];
  id v34 = sub_10001759C(v8, v8, v11, v12);
  [v33 addSublayer:v34];

  *(double *)id v54 = v8;
  *(double *)&v54[1] = v11 + v8;
  uint64_t v35 = self;
  id v36 = self;
  char v37 = 0;
  uint64_t v38 = 0;
  do
  {
    char v39 = 0;
    uint64_t v40 = 0;
    double v41 = *(double *)&v54[v38];
    char v51 = v37;
    *(double *)id v53 = v8;
    *(double *)&v53[1] = v12 + v8;
    do
    {
      char v42 = v39;
      double v43 = *(double *)&v53[v40];
      id v44 = [v52 layer];
      id v45 = [objc_allocWithZone((Class)CAShapeLayer) init];
      id v46 = [v35 bezierPathWithArcCenter:1 radius:v41 startAngle:v43 endAngle:*((double *)&qword_1004F7EB0) clockwise:0.0];
      id v47 = [v46 CGPath];

      [v45 setPath:v47];
      if (qword_1004C2858 != -1) {
        swift_once();
      }
      id v48 = [(id)qword_1004F7E88 CGColor];
      [v45 setFillColor:v48];

      id v49 = [v36 clearColor];
      id v50 = [v49 CGColor];

      [v45 setStrokeColor:v50];
      [v44 addSublayer:v45];

      char v39 = 1;
      uint64_t v40 = 1;
    }
    while ((v42 & 1) == 0);
    char v37 = 1;
    uint64_t v38 = 1;
  }
  while ((v51 & 1) == 0);
}

id sub_100051984()
{
  return sub_10005199C(type metadata accessor for SketchSurfaceHistory);
}

id sub_10005199C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for SketchSurfaceHistory()
{
  return self;
}

uint64_t sub_100051A08()
{
  uint64_t v0 = type metadata accessor for DispatchQoS();
  sub_100021818(v0, qword_1004F7F70);
  sub_1000217E0(v0, (uint64_t)qword_1004F7F70);
  return static DispatchQoS.userInitiated.getter();
}

BOOL sub_100051A54(double *a1, double *a2)
{
  BOOL result = 0;
  if (*(unsigned __int8 *)a1 == *(unsigned __int8 *)a2
    && ((*((unsigned __int8 *)a1 + 1) ^ *((unsigned __int8 *)a2 + 1)) & 1) == 0)
  {
    return a1[1] == a2[1];
  }
  return result;
}

uint64_t sub_100051A90()
{
  [*(id *)(v0 + 40) frame];
  *(void *)(v0 + 208) = v1;
  *(void *)(v0 + 216) = v2;
  *(void *)(v0 + 224) = v3;
  *(void *)(v0 + 23sub_10004ACAC(3, 1, 2) = v4;
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  *(void *)(v0 + 240) = qword_1004F7FF8;
  if (qword_1004C2B18 != -1) {
    swift_once();
  }
  _StringGuts.grow(_:)(37);
  swift_bridgeObjectRelease();
  unint64_t v5 = 0x70616373646E616CLL;
  unint64_t v6 = 0xED00007466654C65;
  switch(*(void *)(v0 + 240))
  {
    case 0:
      unint64_t v6 = 0xE700000000000000;
      unint64_t v5 = 0x6E776F6E6B6E75;
      break;
    case 1:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x7469617274726F70;
      break;
    case 2:
      unint64_t v5 = 0xD000000000000012;
      unint64_t v6 = 0x80000001004215C0;
      break;
    case 3:
      unint64_t v6 = 0xEE00746867695265;
      break;
    case 4:
      break;
    default:
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x100051E1CLL);
  }
  unint64_t v7 = v6;
  String.append(_:)(*(Swift::String *)&v5);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 0xD000000000000023;
  v8._object = (void *)0x8000000100421530;
  Log.default(_:isPrivate:)(v8, 0);
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(37);
  swift_bridgeObjectRelease();
  double v9 = self;
  id v10 = [v9 currentDevice];
  [v10 orientation];

  v11._uint64_t countAndFlagsBits = UIDeviceOrientation.description.getter();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 0xD000000000000023;
  v12._object = (void *)0x8000000100421590;
  Log.default(_:isPrivate:)(v12, 0);
  swift_bridgeObjectRelease();
  if (qword_1004C2C10 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1004F8458;
  id v14 = [v9 currentDevice];
  unint64_t v15 = (unint64_t)[v14 orientation];

  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  uint64_t result = static UIDevice.isIPad()();
  if (result)
  {
    if (v15 - 1 >= 4) {
      return result;
    }
    goto LABEL_17;
  }
  if (v15 <= 4 && ((1 << v15) & 0x1A) != 0) {
LABEL_17:
  }
    *(void *)(v13 + 24) = v15;
  return result;
}

void sub_100051E30(__int16 a1, double a2)
{
  int v4 = a1 & 1;
  int v5 = a1 & 0x100;
  if (*(unsigned char *)(v2 + 248) == 1)
  {
    if ((((v4 != 0) ^ *(unsigned char *)(v2 + 24)) & 1) == 0
      && (((v5 != 0) ^ *(unsigned __int8 *)(v2 + 25)) & 1) == 0
      && *(double *)(v2 + 32) == a2)
    {
      if (qword_1004C2AE8 != -1) {
        swift_once();
      }
      unint64_t v6 = 0xD000000000000047;
      unint64_t v7 = 0x8000000100421730;
      Log.debug(_:isPrivate:)(*(Swift::String *)&v6, 0);
      return;
    }
    if (qword_1004C2AE8 != -1) {
      swift_once();
    }
    _StringGuts.grow(_:)(84);
    v8._uint64_t countAndFlagsBits = 0xD000000000000052;
    v8._object = (void *)0x8000000100421660;
    String.append(_:)(v8);
    _print_unlocked<A, B>(_:_:)();
    v9._uint64_t countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    Log.debug(_:isPrivate:)(v9, 0);
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v2 + 248) == 1)
    {
      v10._uint64_t countAndFlagsBits = 0xD000000000000021;
      v10._object = (void *)0x8000000100421700;
      Log.debug(_:isPrivate:)(v10, 0);
      *(void *)(v2 + 48) = 0;
      swift_release();
      *(unsigned char *)(v2 + 248) = 0;
    }
    else
    {
      v11._uint64_t countAndFlagsBits = 0xD000000000000037;
      v11._object = (void *)0x80000001004216C0;
      Log.debug(_:isPrivate:)(v11, 0);
    }
  }
  if (qword_1004C2AE8 != -1) {
    swift_once();
  }
  _StringGuts.grow(_:)(50);
  v12._uint64_t countAndFlagsBits = 0xD000000000000030;
  v12._object = (void *)0x80000001004215E0;
  String.append(_:)(v12);
  _print_unlocked<A, B>(_:_:)();
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  Log.debug(_:isPrivate:)(v13, 0);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v2 + 24) = v4;
  *(unsigned char *)(v2 + 25) = BYTE1(v5);
  *(double *)(v2 + 3sub_10004ACAC(3, 1, 2) = a2;
  if (v5)
  {
    v14._object = (void *)0x8000000100421640;
    v14._uint64_t countAndFlagsBits = 0xD000000000000015;
    Log.debug(_:isPrivate:)(v14, 0);
    double v15 = *(double *)(v2 + 232);
    type metadata accessor for EdgeDetector();
    uint64_t v16 = swift_allocObject();
    *(_DWORD *)(v16 + 16) = 984861703;
    *(_OWORD *)(v16 + 24) = 0u;
    *(_OWORD *)(v16 + 40) = 0u;
    *(unsigned char *)(v16 + 56) = 1;
    float v17 = v15;
    float v18 = v17 * 0.0013717;
    float v19 = v18 * 5.0;
    float v20 = v18 * 10.0;
    *(void *)(v16 + 64) = 0;
    *(void *)(v16 + 7sub_10004ACAC(3, 1, 2) = 0;
    float v21 = v18 * 15.0;
    *(_OWORD *)(v16 + 88) = xmmword_1003F8800;
    *(_DWORD *)(v16 + 80) = 1056964608;
    float v22 = v18 * 50.0;
    *(void *)(v16 + 104) = 0x4008000000000000;
    *(float *)(v16 + 11sub_10004ACAC(3, 1, 2) = v20;
    *(_DWORD *)(v16 + 116) = 1041865114;
    *(float *)(v16 + 120) = v19;
    *(void *)(v16 + 128) = 0x3FE0000000000000;
    *(_DWORD *)(v16 + 136) = 5;
    *(void *)(v16 + 144) = sub_100083B50;
    *(void *)(v16 + 15sub_10004ACAC(3, 1, 2) = 0;
    *(void *)(v16 + 160) = sub_100083BAC;
    *(void *)(v16 + 168) = 0;
    *(_DWORD *)(v16 + 176) = 5;
    *(float *)(v16 + 180) = v21;
    *(float *)(v16 + 184) = v22;
    *(float *)(v16 + 188) = v20;
    *(float *)(v16 + 19sub_10004ACAC(3, 1, 2) = v22;
    *(_DWORD *)(v16 + 196) = 1008981770;
    *(_WORD *)(v16 + 200) = 257;
    *(unsigned char *)(v16 + 20sub_10004ACAC(3, 1, 2) = 1;
    *(void *)(v2 + 48) = v16;
  }
  else
  {
    v23._uint64_t countAndFlagsBits = 0xD000000000000018;
    v23._object = (void *)0x8000000100421620;
    Log.debug(_:isPrivate:)(v23, 0);
    *(void *)(v2 + 48) = 0;
  }
  swift_release();
  *(unsigned char *)(v2 + 248) = 1;
}

uint64_t sub_1000522D0@<X0>(uint64_t a1@<X8>)
{
  void (*v5)(void *__return_ptr, uint64_t);
  uint64_t v6;
  uint64_t v7;
  unsigned char v9[144];
  void v10[18];

  ariadne_trace(_:_:_:_:_:)();
  uint64_t v3 = sub_1000A3850();
  if (v3)
  {
    int v4 = (void *)v3;
    if (!ARFrame.isVIOTrackingUnacceptable()())
    {
      int v5 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v1 + 16) + 144);
      unint64_t v6 = swift_retain();
      v5(v10, v6);
      unint64_t v7 = swift_release();
      if ((v10[0] & 0x1000000) == 0)
      {
        __chkstk_darwin(v7);
        sub_100012894(&qword_1004C5FD0);
        OS_dispatch_queue.sync<A>(execute:)();

        sub_100016FEC((uint64_t)v10, (uint64_t)v9, &qword_1004C5FD0);
        ariadne_trace(_:_:_:_:_:)();
        goto LABEL_6;
      }
    }
  }
  sub_100053058((uint64_t)v9);
  ariadne_trace(_:_:_:_:_:)();
LABEL_6:
  sub_100016FEC((uint64_t)v9, (uint64_t)v10, &qword_1004C5FD0);
  return sub_100016FEC((uint64_t)v10, a1, &qword_1004C5FD0);
}

uint64_t sub_1000524B0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  uint64_t v8 = a4;
  uint64_t v9 = a3;
  uint64_t v13 = a5;
  if (!*(void *)(a1 + 48))
  {
    id v25 = 0;
LABEL_7:
    sub_100053058((uint64_t)v56);
    sub_100016FEC((uint64_t)v56, (uint64_t)v57, &qword_1004C5FD0);
    goto LABEL_10;
  }
  uint64_t v58 = v7;
  double v15 = *(double *)(a1 + 224);
  double v16 = *(double *)(a1 + 232);
  uint64_t v17 = *(void *)(a1 + 240);
  double v18 = sub_10008493C(a6, a7, *(double *)(a1 + 32), v15, v16);
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  CGFloat v24 = v23;
  swift_retain();
  sub_100084010(a2, v17, (uint64_t)v51, v18, v20, v22, v24, v15, v16);
  id v25 = v51[0];
  id v26 = v51[1];
  id v27 = v51[2];
  id v28 = v51[3];
  id v29 = v51[4];
  id v30 = v51[6];
  id v31 = v51[7];
  id v41 = v51[8];
  id v42 = v51[5];
  id v39 = v51[10];
  id v40 = v51[9];
  id v38 = v51[11];
  swift_release();
  sub_100016FEC((uint64_t)v51, (uint64_t)v52, &qword_1004C5FD8);
  if (!v52[0])
  {
    uint64_t v8 = a4;
    uint64_t v13 = a5;
    uint64_t v9 = a3;
    goto LABEL_7;
  }
  v55[0] = v25;
  v55[1] = v26;
  v55[2] = v27;
  v55[3] = v28;
  v55[4] = v29;
  v55[5] = v42;
  v55[6] = v30;
  v55[7] = v31;
  v55[8] = v41;
  v55[9] = v40;
  v55[10] = v39;
  v55[11] = v38;
  if (*(void *)(a1 + 48))
  {
    swift_beginAccess();
    sub_100016FEC(a1 + 64, (uint64_t)v56, &qword_1004C5FD0);
    sub_100016B40(v51);
    swift_retain();
    sub_100053550((uint64_t)v56, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000535BC);
    sub_100083444((uint64_t)v55, (uint64_t)v56, v49);
    sub_100053550((uint64_t)v56, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000534B8);
    swift_release();
    sub_100016B6C(v51);
    v53[6] = v49[6];
    v53[7] = v49[7];
    char v54 = v50;
    void v53[2] = v49[2];
    v53[3] = v49[3];
    void v53[4] = v49[4];
    v53[5] = v49[5];
    v53[0] = v49[0];
    v53[1] = v49[1];
    nullsub_1(v53);
    Class v32 = v53;
  }
  else
  {
    sub_100053058((uint64_t)v56);
    Class v32 = (__n128 *)v56;
  }
  sub_100016FEC((uint64_t)v32, (uint64_t)v57, &qword_1004C5FD0);
  uint64_t v8 = a4;
  uint64_t v13 = a5;
  uint64_t v9 = a3;
LABEL_10:
  uint64_t v33 = a1 + 64;
  swift_beginAccess();
  sub_100016FEC(a1 + 64, (uint64_t)v47, &qword_1004C5FD0);
  sub_100016FEC((uint64_t)v57, a1 + 64, &qword_1004C5FD0);
  sub_100053550((uint64_t)v47, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000534B8);
  swift_beginAccess();
  sub_100016FEC(a1 + 64, (uint64_t)v48, &qword_1004C5FD0);
  sub_100016FEC((uint64_t)v48, (uint64_t)v49, &qword_1004C5FD0);
  if (sub_100016B28((uint64_t *)v49) != 1) {
    sub_10004F0B8(v9, *(void *)(a1 + 40), *(void *)(a1 + 240), v8, *(unsigned char *)(*(void *)(a1 + 64) + 202));
  }
  uint64_t result = swift_endAccess();
  if (qword_1004C29D8 != -1) {
    uint64_t result = swift_once();
  }
  if (qword_1004F7FE0)
  {
    uint64_t v35 = *(void **)(qword_1004F7FE0 + 72);
    if (v35)
    {
      sub_100016FEC(a1 + 64, (uint64_t)v53, &qword_1004C5FD0);
      uint64_t v36 = *(void *)(a1 + 240);
      id v37 = v35;
      sub_100053550((uint64_t)v53, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000535BC);
      sub_10008AA1C((uint64_t)v53, v36, a6, a7);

      sub_100053550((uint64_t)v53, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000534B8);
    }
    else
    {
      id v37 = v25;
    }

    sub_100016FEC(v33, (uint64_t)v46, &qword_1004C5FD0);
    sub_100016FEC((uint64_t)v46, v13, &qword_1004C5FD0);
    return sub_100053550((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000535BC);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100052968(uint64_t a1, uint64_t a2, char a3, const void *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  Swift::String v12 = *(NSObject **)(v5 + 200);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  *(unsigned char *)(v13 + 3sub_10004ACAC(3, 1, 2) = a3;
  memcpy((void *)(v13 + 48), a4, 0x200uLL);
  *(void *)(v13 + 560) = v6;
  *(void *)(v13 + 568) = a5;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_100052FC0;
  *(void *)(v14 + 24) = v13;
  v17[4] = sub_100039980;
  v17[5] = v14;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  void v17[2] = sub_1000FA194;
  v17[3] = &unk_100489E90;
  double v15 = _Block_copy(v17);
  sub_100053000((uint64_t)a4);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v12, v15);
  _Block_release(v15);
  LOBYTE(v1sub_10004ACAC(3, 1, 2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v12) {
    __break(1u);
  }
  return result;
}

void sub_100052B04(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a3 == 2 || (uint64_t v9 = sub_1000A3850()) == 0)
  {
    swift_beginAccess();
    sub_100016FEC(a5 + 64, (uint64_t)v24, &qword_1004C5FD0);
    sub_100016FEC((uint64_t)v24, (uint64_t)v25, &qword_1004C5FD0);
    if (sub_100016B28(v25) != 1)
    {
      *(void *)(a5 + 176) = 0;
      *(void *)(a5 + 184) = 0;
      *(unsigned char *)(a5 + 19sub_10004ACAC(3, 1, 2) = 2;
    }
  }
  else
  {
    Swift::String v10 = (void *)v9;
    ARFrame.viewToCamera(screenPoint:sceneView:orientation:)();
    if (a6
      && (SIMD2<>.init(_:)(),
          (*(void (**)(void *__return_ptr, void *, uint64_t))(*(void *)a6 + 312))(v26, v10, 7),
          sub_100016FEC((uint64_t)v26, (uint64_t)v27, &qword_1004CEA20),
          v28))
    {
      sub_10005302C((uint64_t)v26);
      simd_float4x4.position.getter();
      int v11 = 0;
      uint64_t v13 = v12;
      uint64_t v15 = v14;
    }
    else
    {
      uint64_t v15 = 0;
      uint64_t v13 = 0;
      int v11 = 1;
    }
    swift_beginAccess();
    sub_100016FEC(a5 + 64, (uint64_t)v24, &qword_1004C5FD0);
    sub_100016FEC((uint64_t)v24, (uint64_t)v25, &qword_1004C5FD0);
    if (sub_100016B28(v25) != 1)
    {
      char v16 = a3 & 1;
      if (v11) {
        uint64_t v17 = 0;
      }
      else {
        uint64_t v17 = v15;
      }
      if (v11) {
        uint64_t v18 = 0;
      }
      else {
        uint64_t v18 = v13;
      }
      if (v11) {
        char v16 = 2;
      }
      *(void *)(a5 + 176) = v17;
      *(void *)(a5 + 184) = v18;
      *(unsigned char *)(a5 + 19sub_10004ACAC(3, 1, 2) = v16;
    }
  }
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  if (qword_1004F7FE0)
  {
    double v19 = *(void **)(qword_1004F7FE0 + 72);
    if (v19)
    {
      swift_beginAccess();
      sub_100016FEC(a5 + 64, (uint64_t)v24, &qword_1004C5FD0);
      sub_100016FEC((uint64_t)v24, (uint64_t)v25, &qword_1004C5FD0);
      if (sub_100016B28(v25) == 1 || *(unsigned char *)(a5 + 192) == 2)
      {
        uint64_t v20 = 0;
        uint64_t v21 = 0;
        char v22 = 1;
      }
      else
      {
        char v22 = 0;
        uint64_t v20 = *(void *)(a5 + 176);
        uint64_t v21 = *(void *)(a5 + 184);
      }
      id v23 = v19;
      sub_10008B850(v20, v21, v22);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100052E34()
{
  swift_release();

  swift_release();
  sub_100016FEC(v0 + 64, (uint64_t)v2, &qword_1004C5FD0);
  sub_100053550((uint64_t)v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000534B8);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CVController()
{
  return self;
}

uint64_t getEnumTagSinglePayload for CVOptions(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[16]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CVOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CVOptions()
{
  return &type metadata for CVOptions;
}

uint64_t sub_100052F78()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 576, 15);
}

void sub_100052FC0()
{
  sub_100052B04(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), v0 + 48, *(void *)(v0 + 560), *(void *)(v0 + 568));
}

uint64_t sub_100052FD8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100052FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100052FF8()
{
  return swift_release();
}

uint64_t sub_100053000(uint64_t a1)
{
  return a1;
}

uint64_t sub_10005302C(uint64_t a1)
{
  return a1;
}

double sub_100053058(uint64_t a1)
{
  *(unsigned char *)(a1 + 128) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 11sub_10004ACAC(3, 1, 2) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 3sub_10004ACAC(3, 1, 2) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_100053074@<X0>(uint64_t a1@<X8>)
{
  return sub_1000524B0(*(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 48), *(void *)(v1 + 56), a1, *(double *)(v1 + 32), *(double *)(v1 + 40));
}

uint64_t sub_100053098(void *a1)
{
  uint64_t v2 = v1;
  CGFloat v24 = a1;
  uint64_t v23 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v21 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  char v22 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v20 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v11 = sub_100012894((uint64_t *)&unk_1004C4710);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_1004F8630;
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 272);
  swift_retain();
  *(void *)(v2 + 16) = v13(KeyPath, v12);
  *(_WORD *)(v2 + 24) = 257;
  *(void *)(v2 + 3sub_10004ACAC(3, 1, 2) = 0x403E000000000000;
  *(void *)(v2 + 48) = 0;
  sub_100053058((uint64_t)v26);
  sub_100016FEC((uint64_t)v26, v2 + 64, &qword_1004C5FD0);
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  if (qword_1004C2928 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1000217E0(v6, (uint64_t)qword_1004F7F70);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v14, v6);
  id v25 = _swiftEmptyArrayStorage;
  sub_100053658();
  sub_100012894(&qword_1004CF220);
  sub_1000536B0();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v22, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v23);
  *(void *)(v2 + 200) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(_OWORD *)(v2 + 208) = 0u;
  *(_OWORD *)(v2 + 224) = 0u;
  *(void *)(v2 + 240) = 4;
  *(unsigned char *)(v2 + 248) = 0;
  uint64_t v15 = v24;
  *(void *)(v2 + 40) = v24;
  id v16 = v15;
  sub_100051A90();
  id v17 = [self defaultCenter];
  [v17 addObserver:v2 selector:"updateForCurrentOrientation" name:UIDeviceOrientationDidChangeNotification object:0];

  if (*(unsigned char *)(v2 + 25)) {
    __int16 v18 = 256;
  }
  else {
    __int16 v18 = 0;
  }
  sub_100051E30(v18 | *(unsigned __int8 *)(v2 + 24), *(double *)(v2 + 32));
  return v2;
}

uint64_t sub_1000534B8(uint64_t result, void *a2, void *a3, void *a4)
{
  if (result)
  {
    swift_release();

    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_100053550(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 128);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), v4);
  return a1;
}

uint64_t sub_1000535BC(uint64_t result, void *a2, void *a3, void *a4)
{
  if (result)
  {
    swift_retain();
    id v7 = a2;
    id v8 = a3;
    id v9 = a4;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

unint64_t sub_100053658()
{
  unint64_t result = qword_1004C6B50;
  if (!qword_1004C6B50)
  {
    type metadata accessor for OS_dispatch_queue.Attributes();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C6B50);
  }
  return result;
}

unint64_t sub_1000536B0()
{
  unint64_t result = qword_1004C6B60;
  if (!qword_1004C6B60)
  {
    sub_100016EF4(&qword_1004CF220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C6B60);
  }
  return result;
}

double sub_10005379C(void *a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  type metadata accessor for MeasureCamera();
  static ComputedCameraProperties.shared.getter();
  static ComputedCameraProperties.shared.getter();
  static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
  int64x2_t v15 = v8;
  static ComputedCameraProperties.shared.getter();
  static ComputedCameraProperties.shared.getter();
  static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
  int64x2_t v14 = v9;
  id v10 = sub_1000551EC(a1, *(double *)v15.i64, *(double *)v9.i64, a4);
  id v11 = [v5 layer];
  [v11 addSublayer:v10];

  sub_100012894(&qword_1004C6020);
  uint64_t v12 = swift_allocObject();
  *(void *)&double result = 2;
  *(_OWORD *)(v12 + 16) = xmmword_1003F8B80;
  *(int64x2_t *)(v12 + 3sub_10004ACAC(3, 1, 2) = vzip1q_s64(v15, v14);
  return result;
}

double sub_1000538E4(void *a1, double a2, float32x2_t a3, float a4, double a5)
{
  return sub_10005379C(a1, a2, COERCE_DOUBLE(vadd_f32(*(float32x2_t *)&a2, vmul_n_f32(a3, a4))), a5);
}

uint64_t type metadata accessor for DebugLineView()
{
  return self;
}

void destroy for DebugRectangle(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 16);
}

void *_s7Measure14DebugRectangleVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  char v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for DebugRectangle(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v4 = (void *)a2[2];
  id v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for DebugRectangle(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  char v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for DebugRectangle()
{
  return &type metadata for DebugRectangle;
}

uint64_t sub_100053B6C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v22 = a4;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v25 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  int64x2_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005536C();
  uint64_t v23 = static OS_dispatch_queue.main.getter();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v5;
  *(void *)(v16 + 24) = a1;
  *(double *)(v16 + 3sub_10004ACAC(3, 1, 2) = a5;
  *(void *)(v16 + 40) = a2;
  *(void *)(v16 + 48) = a3;
  *(void *)(v16 + 56) = v22;
  aBlock[4] = sub_100055B58;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_10048A008;
  id v17 = _Block_copy(aBlock);
  id v18 = v5;
  swift_bridgeObjectRetain();
  id v19 = a2;
  swift_bridgeObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_100039BEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v20 = (void *)v23;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v24);
}

void sub_100053E2C(char *a1, uint64_t a2, void *a3, double a4)
{
  sub_100054164(a2, a3, a4);
  if (v6)
  {
    uint64_t v9 = v6;
    uint64_t v10 = v7;
    uint64_t v11 = v8;
    sub_100054290(3);
    uint64_t v12 = OBJC_IVAR____TtC7Measure13DebugLineView_allRectangles;
    uint64_t v13 = *(char **)&a1[OBJC_IVAR____TtC7Measure13DebugLineView_allRectangles];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v11;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&a1[v12] = v13;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v13 = sub_10006E814(0, *((void *)v13 + 2) + 1, 1, v13);
      *(void *)&a1[v12] = v13;
    }
    unint64_t v17 = *((void *)v13 + 2);
    unint64_t v16 = *((void *)v13 + 3);
    if (v17 >= v16 >> 1)
    {
      uint64_t v13 = sub_10006E814((char *)(v16 > 1), v17 + 1, 1, v13);
      *(void *)&a1[v12] = v13;
    }
    *((void *)v13 + sub_10004ACAC(3, 1, 2) = v17 + 1;
    id v18 = &v13[24 * v17];
    *((void *)v18 + 4) = v9;
    *((void *)v18 + 5) = v10;
    *((void *)v18 + 6) = v14;
    pointClosestToOrigin(_:)();
    if (v19)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      CGPoint.init(_:)();
      id v22 = [objc_allocWithZone((Class)UILabel) initWithFrame:v20, v21, 100.0, 100.0];
      NSString v23 = String._bridgeToObjectiveC()();
      id v24 = [self fontWithName:v23 size:12.0];

      [v22 setFont:v24];
      NSString v25 = String._bridgeToObjectiveC()();
      [v22 setText:v25];

      [v22 setTextColor:a3];
      id v26 = [self blackColor];
      [v22 setShadowColor:v26];

      [a1 addSubview:v22];
      id v27 = &a1[OBJC_IVAR____TtC7Measure13DebugLineView_allRectangleLabels];
      swift_beginAccess();
      id v28 = v22;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v27 & 0xFFFFFFFFFFFFFF8)
                                                                                   + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
}

void sub_100054164(uint64_t a1, void *a2, double a3)
{
  sub_100012894(&qword_1004C6018);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1003F8720;
  unint64_t v7 = *(void *)(a1 + 16);
  if (!v7)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v7 == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  int64x2_t v8 = (void *)v6;
  long long v19 = *(_OWORD *)(a1 + 32);
  long long v20 = *(_OWORD *)(a1 + 48);
  sub_10005379C(a2, *(double *)(a1 + 32), *(double *)&v20, a3);
  void v8[4] = v9;
  v8[5] = v10;
  if (v7 < 3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  double v11 = *(double *)&v20;
  long long v21 = *(_OWORD *)(a1 + 64);
  sub_10005379C(a2, v11, *(double *)(a1 + 64), a3);
  v8[6] = v12;
  v8[7] = v13;
  if (v7 != 3)
  {
    long long v18 = *(_OWORD *)(a1 + 80);
    sub_10005379C(a2, *(double *)&v21, *(double *)(a1 + 80), a3);
    v8[8] = v14;
    v8[9] = v15;
    sub_10005379C(a2, *(double *)&v18, *(double *)&v19, a3);
    v8[10] = v16;
    v8[11] = v17;
    sub_100054DA4(v8);
    swift_bridgeObjectRelease();
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_100054290(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005536C();
  double v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v1;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_1000553E4;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_100489F68;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_100039BEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_100054510(char *a1, double *a2, void *a3)
{
  sub_100054290(3);
  uint64_t v6 = sub_100054818(a2, a3, 1.0);
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = OBJC_IVAR____TtC7Measure13DebugLineView_allRectangles;
  uint64_t v12 = *(char **)&a1[OBJC_IVAR____TtC7Measure13DebugLineView_allRectangles];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v10;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&a1[v11] = v12;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v12 = sub_10006E814(0, *((void *)v12 + 2) + 1, 1, v12);
    *(void *)&a1[v11] = v12;
  }
  unint64_t v16 = *((void *)v12 + 2);
  unint64_t v15 = *((void *)v12 + 3);
  if (v16 >= v15 >> 1)
  {
    uint64_t v12 = sub_10006E814((char *)(v15 > 1), v16 + 1, 1, v12);
    *(void *)&a1[v11] = v12;
  }
  *((void *)v12 + sub_10004ACAC(3, 1, 2) = v16 + 1;
  uint64_t v17 = &v12[24 * v16];
  *((void *)v17 + 4) = v6;
  *((void *)v17 + 5) = v8;
  *((void *)v17 + 6) = v13;
  pointClosestToOrigin(_:)();
  if (v18)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    CGPoint.init(_:)();
    id v21 = [objc_allocWithZone((Class)UILabel) initWithFrame:v19, v20, 100.0, 100.0];
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = [self fontWithName:v22 size:12.0];

    [v21 setFont:v23];
    NSString v24 = String._bridgeToObjectiveC()();
    [v21 setText:v24];

    [v21 setTextColor:a3];
    id v25 = [self blackColor];
    [v21 setShadowColor:v25];

    [a1 addSubview:v21];
    id v26 = &a1[OBJC_IVAR____TtC7Measure13DebugLineView_allRectangleLabels];
    swift_beginAccess();
    id v27 = v21;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v26 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100054818(double *a1, void *a2, double a3)
{
  sub_100012894(&qword_1004C6018);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1003F8720;
  unint64_t v8 = *((void *)a1 + 2);
  if (!v8)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v8 == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v9 = (void *)result;
  double v10 = a1[4];
  double v11 = a1[5];
  id v12 = sub_1000551EC(a2, v10, v11, a3);
  id v13 = [v3 layer];
  [v13 addSublayer:v12];

  sub_100012894(&qword_1004C6020);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1003F8B80;
  *(double *)(result + 3sub_10004ACAC(3, 1, 2) = v10;
  *(double *)(result + 40) = v11;
  void v9[4] = result;
  v9[5] = v12;
  if (v8 < 3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  double v14 = a1[6];
  id v15 = sub_1000551EC(a2, v11, v14, a3);
  id v16 = [v3 layer];
  [v16 addSublayer:v15];

  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1003F8B80;
  *(double *)(result + 3sub_10004ACAC(3, 1, 2) = v11;
  *(double *)(result + 40) = v14;
  v9[6] = result;
  v9[7] = v15;
  if (v8 != 3)
  {
    double v17 = a1[7];
    id v18 = sub_1000551EC(a2, v14, v17, a3);
    id v19 = [v3 layer];
    [v19 addSublayer:v18];

    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1003F8B80;
    *(double *)(v20 + 3sub_10004ACAC(3, 1, 2) = v14;
    *(double *)(v20 + 40) = v17;
    v9[8] = v20;
    v9[9] = v18;
    id v21 = sub_1000551EC(a2, v17, v10, a3);
    id v22 = [v3 layer];
    [v22 addSublayer:v21];

    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1003F8B80;
    *(double *)(v23 + 3sub_10004ACAC(3, 1, 2) = v17;
    *(double *)(v23 + 40) = v10;
    v9[10] = v23;
    v9[11] = v21;
    uint64_t v24 = sub_100054DA4(v9);
    swift_bridgeObjectRelease();
    return v24;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100054AA0(char *a1, uint64_t a2)
{
  uint64_t v2 = &a1[OBJC_IVAR____TtC7Measure13DebugLineView_allRectangles];
  uint64_t v3 = *(void *)(*(void *)&a1[OBJC_IVAR____TtC7Measure13DebugLineView_allRectangles] + 16);
  if (v3 >= a2) {
    uint64_t v4 = a2;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)&a1[OBJC_IVAR____TtC7Measure13DebugLineView_allRectangles] + 16);
  }
  unint64_t v5 = v3 - v4;
  if (__OFSUB__(v3, v4))
  {
    __break(1u);
    goto LABEL_21;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = a1;
  uint64_t v7 = v5;
  unint64_t v5 = 0;
  unint64_t v8 = sub_100054F2C(0, v7, (uint64_t)v6);

  uint64_t v9 = *(void *)(*(void *)v2 + 16);
  double v10 = (char *)(v9 - v4);
  if (__OFSUB__(v9, v4))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (((unint64_t)v10 & 0x8000000000000000) != 0)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  double v11 = v6;
  unint64_t v5 = (unint64_t)sub_1000550A4(0, v10, (uint64_t)v11);

  uint64_t v12 = *((void *)v8 + 2);
  if (v12)
  {
    id v13 = (void **)(v8 + 48);
    do
    {
      double v14 = *v13;
      v13 += 3;
      [v14 removeFromSuperlayer];
      --v12;
    }
    while (v12);
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(*(void *)v2 + 16);
  if (__OFSUB__(v15, v4)) {
    goto LABEL_24;
  }
  uint64_t result = sub_100054CA8(v15 - v4);
  if (!(v5 >> 62))
  {
    uint64_t v17 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v17) {
      goto LABEL_26;
    }
    goto LABEL_14;
  }
LABEL_25:
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v17) {
    goto LABEL_26;
  }
LABEL_14:
  if (v17 < 1) {
    goto LABEL_29;
  }
  for (uint64_t i = 0; i != v17; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v19 = *(id *)(v5 + 8 * i + 32);
    }
    uint64_t v20 = v19;
    [v19 removeFromSuperview];
  }
LABEL_26:
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(*(void *)v2 + 16);
  uint64_t v22 = v21 - v4;
  if (!__OFSUB__(v21, v4))
  {
    swift_beginAccess();
    sub_100054CD0(v22);
    return swift_endAccess();
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_100054CA8(unint64_t result)
{
  if (result)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      unint64_t v2 = *(void *)(*(void *)v1 + 16);
      BOOL v3 = v2 >= result;
      uint64_t result = v2 - result;
      if (v3) {
        return sub_100072A88(result, v2);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100054CD0(uint64_t result)
{
  if (!result) {
    return result;
  }
  uint64_t v2 = result;
  if (result < 0)
  {
    __break(1u);
  }
  else if (!(*v1 >> 62))
  {
    uint64_t v3 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v4 = -v3;
    if (!__OFSUB__(0, v3)) {
      goto LABEL_5;
    }
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v4 = -v3;
  if (__OFSUB__(0, v3)) {
    goto LABEL_19;
  }
LABEL_5:
  uint64_t v5 = -v2;
  if (v4 <= 0 && v4 > v5) {
    goto LABEL_22;
  }
  uint64_t result = v3 - v2;
  if (__OFADD__(v3, v5)) {
    goto LABEL_20;
  }
  if (v3 < result)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    return result;
  }

  return sub_100072BB0(result, v3);
}

uint64_t sub_100054DA4(void *a1)
{
  id v3 = [objc_allocWithZone((Class)CAShapeLayer) init];
  sub_100012894(&qword_1004C6020);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1003F8720;
  unint64_t v5 = a1[2];
  if (!v5)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v6 = a1[4];
  if (!*(void *)(v6 + 16))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v7 = result;
  *(void *)(result + 3sub_10004ACAC(3, 1, 2) = *(void *)(v6 + 32);
  if (v5 < 2)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v8 = a1[6];
  if (!*(void *)(v8 + 16))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  *(void *)(result + 40) = *(void *)(v8 + 32);
  if (v5 < 3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v9 = a1[8];
  if (!*(void *)(v9 + 16))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  *(void *)(result + 48) = *(void *)(v9 + 32);
  if (v5 < 4)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v10 = a1[10];
  if (*(void *)(v10 + 16))
  {
    *(void *)(result + 56) = *(void *)(v10 + 32);
    [v3 addSublayer:a1[5]];
    [v3 addSublayer:a1[7]];
    [v3 addSublayer:a1[9]];
    [v3 addSublayer:a1[11]];
    id v11 = [v1 layer];
    [v11 addSublayer:v3];

    swift_bridgeObjectRetain();
    return v7;
  }
LABEL_17:
  __break(1u);
  return result;
}

char *sub_100054F2C(char *result, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = (uint64_t)result;
  uint64_t v3 = a2 - (void)result;
  if (__OFSUB__(a2, result))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!v3) {
    return (char *)_swiftEmptyArrayStorage;
  }
  uint64_t result = sub_1000BBDD4(0, v3 & ~(v3 >> 63), 0);
  if (a2 >= v16 && (v3 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = OBJC_IVAR____TtC7Measure13DebugLineView_allRectangles;
    unint64_t v6 = v16;
    uint64_t v7 = 24 * v16;
    while (a2 != v6)
    {
      if (v16 < 0) {
        goto LABEL_14;
      }
      uint64_t v8 = *(void *)(a3 + v5);
      if (v6 >= *(void *)(v8 + 16)) {
        goto LABEL_15;
      }
      uint64_t v9 = v8 + v7;
      long long v17 = *(_OWORD *)(v9 + 32);
      uint64_t v10 = *(void **)(v9 + 48);
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = v10;
      id v13 = result;
      if (v12 >= v11 >> 1) {
        uint64_t result = sub_1000BBDD4((char *)(v11 > 1), v12 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v12 + 1;
      double v14 = &_swiftEmptyArrayStorage[3 * v12];
      *((_OWORD *)v14 + sub_10004ACAC(3, 1, 2) = v17;
      v14[6] = v13;
      ++v6;
      v7 += 24;
      if (a2 == v6) {
        return (char *)_swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

char *sub_1000550A4(char *result, char *a2, uint64_t a3)
{
  int64_t v3 = a2 - result;
  if (__OFSUB__(a2, result)) {
    goto LABEL_18;
  }
  uint64_t v4 = (uint64_t)result;
  uint64_t result = (char *)_swiftEmptyArrayStorage;
  if (v3)
  {
    uint64_t result = (char *)specialized ContiguousArray.reserveCapacity(_:)();
    if ((uint64_t)a2 < v4 || v3 < 0) {
      goto LABEL_19;
    }
    uint64_t v7 = (uint64_t *)(a3 + OBJC_IVAR____TtC7Measure13DebugLineView_allRectangleLabels);
    while (a2 != (char *)v4)
    {
      uint64_t result = (char *)swift_beginAccess();
      uint64_t v8 = *v7;
      if ((*v7 & 0xC000000000000001) != 0)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v4 < 0) {
          goto LABEL_16;
        }
        if ((unint64_t)v4 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_17;
        }
        id v9 = *(id *)(v8 + 8 * v4 + 32);
      }
      swift_endAccess();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t result = (char *)specialized ContiguousArray._endMutation()();
      if (a2 == (char *)++v4) {
        return (char *)_swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  return result;
}

id sub_1000551EC(void *a1, double a2, double a3, double a4)
{
  id v6 = [objc_allocWithZone((Class)CAShapeLayer) init];
  id v7 = [objc_allocWithZone((Class)UIBezierPath) init];
  CGPoint.init(_:)();
  [v7 moveToPoint:];
  CGPoint.init(_:)();
  [v7 addLineToPoint:];
  id v8 = [v7 CGPath];
  [v6 setPath:v8];

  [v6 setLineWidth:a4];
  id v9 = [a1 CGColor];
  [v6 setStrokeColor:v9];

  id v10 = [self clearColor];
  id v11 = [v10 CGColor];

  [v6 setFillColor:v11];
  return v6;
}

unint64_t sub_10005536C()
{
  unint64_t result = qword_1004C7F10;
  if (!qword_1004C7F10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1004C7F10);
  }
  return result;
}

uint64_t sub_1000553AC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000553E4()
{
  return sub_100054AA0(*(char **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000553EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000553FC()
{
  return swift_release();
}

id sub_100055404(void *a1, void *a2, double a3, float a4)
{
  id v7 = [objc_allocWithZone((Class)CAShapeLayer) init];
  CGPoint.init(_:)();
  id v10 = [self bezierPathWithArcCenter:1 radius:v8 startAngle:v9 endAngle:a4 clockwise:0.0];
  id v11 = [v10 CGPath];
  [v7 setPath:v11];

  [v7 setLineWidth:1.0];
  id v12 = [a1 CGColor];
  [v7 setStrokeColor:v12];

  id v13 = [a2 CGColor];
  [v7 setFillColor:v13];

  return v7;
}

uint64_t sub_100055570(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v24 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  double v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005536C();
  uint64_t v22 = static OS_dispatch_queue.main.getter();
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v4;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = a3;
  v15[6] = a4;
  aBlock[4] = sub_10005586C;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_100489FB8;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v4;
  swift_bridgeObjectRetain();
  id v18 = a2;
  swift_bridgeObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_100039BEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v19 = (void *)v22;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v23);
}

uint64_t sub_10005581C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10005586C()
{
  sub_100054510(*(char **)(v0 + 16), *(double **)(v0 + 24), *(void **)(v0 + 32));
}

void sub_10005587C(uint64_t a1, void *a2)
{
  id v14 = [objc_allocWithZone((Class)CAShapeLayer) init];
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    type metadata accessor for MeasureCamera();
    uint64_t v4 = self;
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v6 = v5 + 1;
      if (((v5 + 1) & 3uLL) >= v3) {
        break;
      }
      static ComputedCameraProperties.shared.getter();
      static ComputedCameraProperties.shared.getter();
      static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
      static ComputedCameraProperties.shared.getter();
      static ComputedCameraProperties.shared.getter();
      static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
      id v7 = [objc_allocWithZone((Class)CAShapeLayer) init];
      id v8 = [objc_allocWithZone((Class)UIBezierPath) init];
      CGPoint.init(_:)();
      [v8 moveToPoint:];
      CGPoint.init(_:)();
      [v8 addLineToPoint:];
      id v9 = [v8 CGPath];
      [v7 setPath:v9];

      [v7 setLineWidth:1.0];
      id v10 = [a2 CGColor];
      [v7 setStrokeColor:v10];

      id v11 = [v4 clearColor];
      id v12 = [v11 CGColor];

      [v7 setFillColor:v12];
      [v14 addSublayer:v7];

      uint64_t v5 = v6;
      if (v3 == v6) {
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_100055B08()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_100055B58()
{
  sub_100053E2C(*(char **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 40), *(double *)(v0 + 32));
}

void *initializeBufferWithCopyOfBuffer for DebugLine2D(void *a1, void *a2)
{
  unint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  id v4 = v3;
  return a1;
}

void destroy for DebugLine2D(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 8);
}

void *assignWithCopy for DebugLine2D(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for DebugLine2D(uint64_t a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for DebugLine2D()
{
  return &type metadata for DebugLine2D;
}

void destroy for LineDivisionsState(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 48);
}

uint64_t initializeWithCopy for LineDivisionsState(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 64);
  long long v7 = *(_OWORD *)(a2 + 80);
  long long v8 = *(_OWORD *)(a2 + 96);
  long long v9 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 11sub_10004ACAC(3, 1, 2) = v9;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v7;
  uint64_t v10 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v5;
  return a1;
}

uint64_t assignWithCopy for LineDivisionsState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + sub_10004ACAC(2, 1, 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = v4;
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = *(void **)(a1 + 48);
  long long v6 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v6;
  id v7 = v6;

  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  long long v8 = *(_OWORD *)(a2 + 80);
  long long v9 = *(_OWORD *)(a2 + 96);
  long long v10 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 11sub_10004ACAC(3, 1, 2) = v10;
  *(_OWORD *)(a1 + 80) = v8;
  uint64_t v11 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v11;
  return a1;
}

__n128 initializeWithTake for LineDivisionsState(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 3sub_10004ACAC(3, 1, 2) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 11sub_10004ACAC(3, 1, 2) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for LineDivisionsState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + sub_10004ACAC(2, 1, 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 11sub_10004ACAC(3, 1, 2) = v6;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for LineDivisionsState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 145)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(vsub_10004ACAC(3, 1, 2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LineDivisionsState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 7sub_10004ACAC(3, 1, 2) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 144) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 145) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 3sub_10004ACAC(3, 1, 2) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 145) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LineDivisionsState()
{
  return &type metadata for LineDivisionsState;
}

id sub_100055FE4()
{
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  id result = (id)*((void *)&xmmword_1004F8000 + 1);
  if (*((void *)&xmmword_1004F8000 + 1))
  {
    id v1 = (id)*((void *)&xmmword_1004F8000 + 1);
    qword_1004F7F88 = Contexts.PrivateQueue.init(_:)();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100056064@<X0>(void *a1@<X8>)
{
  if (qword_1004C2930 != -1) {
    swift_once();
  }
  unint64_t v2 = (void *)qword_1004F7F88;
  *a1 = qword_1004F7F88;

  return v2;
}

uint64_t sub_1000560D0(float32x4_t *a1, float32x4_t *a2)
{
  float32x4_t v2 = a1[7];
  void v11[6] = a1[6];
  v11[7] = v2;
  _OWORD v11[8] = a1[8];
  __int8 v12 = a1[9].i8[0];
  float32x4_t v3 = a1[3];
  v11[2] = a1[2];
  void v11[3] = v3;
  float32x4_t v4 = a1[5];
  v11[4] = a1[4];
  v11[5] = v4;
  float32x4_t v5 = a1[1];
  v11[0] = *a1;
  v11[1] = v5;
  float32x4_t v6 = a2[7];
  v13[6] = a2[6];
  v13[7] = v6;
  _OWORD v13[8] = a2[8];
  __int8 v14 = a2[9].i8[0];
  float32x4_t v7 = a2[3];
  v13[2] = a2[2];
  v13[3] = v7;
  float32x4_t v8 = a2[5];
  v13[4] = a2[4];
  v13[5] = v8;
  float32x4_t v9 = a2[1];
  v13[0] = *a2;
  v13[1] = v9;
  return sub_100056394(v11, v13) & 1;
}

unint64_t sub_100056164(uint64_t a1)
{
  unint64_t result = sub_10005618C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10005618C()
{
  unint64_t result = qword_1004C6050;
  if (!qword_1004C6050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C6050);
  }
  return result;
}

uint64_t sub_1000561E0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    float v18 = *(float *)(*(void *)(v3 + 56) + 4 * v11);
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1000E20D4(v16, v17);
    char v21 = v20;
    unint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(float *)(*(void *)(a2 + 56) + 4 * v19) != v18) {
      return 0;
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100056394(float32x4_t *a1, float32x4_t *a2)
{
  if ((a1->u8[0] ^ a2->u8[0]) & 1) != 0 || ((a1->u8[1] ^ a2->u8[1])) {
    return 0;
  }
  uint64_t v5 = a1[1].i64[0];
  uint64_t v6 = a2[1].i64[0];
  if (!v5)
  {
    if (v6) {
      return 0;
    }
    goto LABEL_12;
  }
  if (!v6) {
    return 0;
  }
  if (a1->i64[1] == a2->i64[1] && v5 == v6
    || (char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v7 & 1) != 0))
  {
LABEL_12:
    char v8 = a2[1].i8[12];
    if (a1[1].i8[12])
    {
      if (!a2[1].i8[12]) {
        return 0;
      }
    }
    else
    {
      if (a1[1].f32[2] != a2[1].f32[2]) {
        char v8 = 1;
      }
      if (v8) {
        return 0;
      }
    }
    if ((sub_1000561E0(a1[2].i64[0], a2[2].i64[0]) & 1) == 0 || *(double *)&a1[2].i64[1] != *(double *)&a2[2].i64[1]) {
      return 0;
    }
    int64_t v9 = (void *)a1[3].i64[0];
    unint64_t v10 = (void *)a2[3].i64[0];
    if (v9)
    {
      if (!v10) {
        return 0;
      }
      type metadata accessor for WorldLine();
      id v11 = v10;
      id v12 = v9;
      char v13 = static NSObject.== infix(_:_:)();

      if ((v13 & 1) == 0) {
        return 0;
      }
    }
    else if (v10)
    {
      return 0;
    }
    if (a1[8].i8[0])
    {
      if (!a2[8].i8[0]) {
        return 0;
      }
    }
    else if ((a2[8].i8[0] & 1) != 0 {
           || (vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(a1[6], a2[6]), (int8x16_t)vceqq_f32(a1[7], a2[7])), vandq_s8((int8x16_t)vceqq_f32(a1[5], a2[5]), (int8x16_t)vceqq_f32(a1[4], a2[4])))) & 0x80000000) == 0)
    }
    {
      return 0;
    }
    unsigned __int8 v14 = a2[9].u8[0];
    if (a1[9].i8[0]) {
      goto LABEL_33;
    }
    if ((a2[9].i8[0] & 1) == 0)
    {
      int32x2_t v15 = vceq_f32(*(float32x2_t *)&a1[8].u32[2], *(float32x2_t *)&a2[8].u32[2]);
      unsigned __int8 v14 = v15.i8[0] & v15.i8[4];
LABEL_33:
      if (v14) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

double sub_100056598@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v13[0]) = 1;
  LOBYTE(v17) = 0;
  LOBYTE(v15) = 1;
  Date.init()();
  Date.timeIntervalSince1970.getter();
  uint64_t v7 = v6;
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  char v8 = v17;
  char v9 = v15;
  char v14 = 1;
  v12[0] = 1;
  *(unsigned char *)a1 = v13[0];
  *(unsigned char *)(a1 + sub_10004ACAC(2, 1, 1) = v8;
  *(_DWORD *)(a1 + sub_10004ACAC(3, 1, 2) = v17;
  *(_WORD *)(a1 + 6) = v18;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 28) = v9;
  *(_WORD *)(a1 + 29) = v15;
  *(unsigned char *)(a1 + 3sub_10004ACAC(2, 1, 1) = v16;
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = &_swiftEmptyDictionarySingleton;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 11sub_10004ACAC(3, 1, 2) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(unsigned char *)(a1 + 128) = v14;
  int v11 = v13[0];
  *(_DWORD *)(a1 + 13sub_10004ACAC(3, 1, 2) = *(_DWORD *)((char *)v13 + 3);
  *(_DWORD *)(a1 + 129) = v11;
  *(void *)(a1 + 136) = 0;
  *(unsigned char *)(a1 + 144) = v12[0];
  return result;
}

void sub_100056718()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_topLabel];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_bottomLabel];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v25 = self;
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1003FA900;
  id v4 = [v2 leadingAnchor];
  id v5 = [v0 leadingAnchor];
  id v6 = [v4 constraintEqualToAnchor:v5];

  *(void *)(v3 + 3sub_10004ACAC(3, 1, 2) = v6;
  id v7 = [v2 trailingAnchor];
  id v8 = [v0 trailingAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8];

  *(void *)(v3 + 40) = v9;
  id v10 = [v2 bottomAnchor];
  id v11 = [v0 bottomAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  *(void *)(v3 + 48) = v12;
  id v13 = [v2 topAnchor];
  id v14 = [v1 bottomAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  *(void *)(v3 + 56) = v15;
  id v16 = [v1 leadingAnchor];
  id v17 = [v0 leadingAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17];

  *(void *)(v3 + 64) = v18;
  id v19 = [v1 trailingAnchor];
  id v20 = [v0 trailingAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20];

  *(void *)(v3 + 7sub_10004ACAC(3, 1, 2) = v21;
  id v22 = [v1 topAnchor];
  id v23 = [v0 topAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23];

  *(void *)(v3 + 80) = v24;
  specialized Array._endMutation()();
  sub_100029878();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v25 activateConstraints:isa];
}

char *sub_100056AA8(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_topLabel;
  type metadata accessor for InteractiveLabel();
  ObjCClassFromMetauint64_t data = (objc_class *)swift_getObjCClassFromMetadata();
  id v12 = objc_allocWithZone(ObjCClassFromMetadata);
  id v13 = v4;
  *(void *)&v4[v10] = [v12 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v14 = OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_bottomLabel;
  *(void *)&v13[v14] = [objc_allocWithZone(ObjCClassFromMetadata) initWithFrame:0.0, 0.0, 0.0, 0.0];

  v20.receiver = v13;
  v20.super_class = ObjectType;
  id v15 = [super initWithFrame:a1, a2, a3, a4];
  id v16 = *(void **)&v15[OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_topLabel];
  id v17 = v15;
  [v16 setUserInteractionEnabled:1];
  id v18 = *(void **)&v17[OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_bottomLabel];
  [v18 setUserInteractionEnabled:1];
  [v17 addSubview:v16];
  [v17 addSubview:v18];
  sub_100056718();

  return v17;
}

char *sub_100056C3C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_topLabel;
  type metadata accessor for InteractiveLabel();
  ObjCClassFromMetauint64_t data = (objc_class *)swift_getObjCClassFromMetadata();
  id v7 = objc_allocWithZone(ObjCClassFromMetadata);
  id v8 = v2;
  *(void *)&v2[v5] = [v7 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v9 = OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_bottomLabel;
  *(void *)&v8[v9] = [objc_allocWithZone(ObjCClassFromMetadata) initWithFrame:0.0, 0.0, 0.0, 0.0];

  v16.receiver = v8;
  v16.super_class = ObjectType;
  uint64_t v10 = [(char *)[super initWithCoder:a1]];
  id v11 = v10;
  if (v10)
  {
    id v12 = *(void **)&v10[OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_topLabel];
    id v13 = v10;
    [v12 setUserInteractionEnabled:1];
    uint64_t v14 = *(void **)&v13[OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_bottomLabel];
    [v14 setUserInteractionEnabled:1];
    [v13 addSubview:v12];
    [v13 addSubview:v14];
    sub_100056718();
  }
  return v11;
}

void sub_100056DCC(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_topLabel);
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 setText:v4];

  NSString v5 = String._bridgeToObjectiveC()();
  [v3 setAccessibilityLabel:v5];

  id v6 = *(void **)(v1 + OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_bottomLabel);
  NSString v7 = String._bridgeToObjectiveC()();
  [v6 setText:v7];

  sub_100026A8C(a1 + 32, (uint64_t)v9);
  sub_100026A8C((uint64_t)v9, (uint64_t)v10);
  if (v10[1]) {
    NSString v8 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v8 = 0;
  }
  [v6 setAccessibilityLabel:v8];
}

void sub_100056EE0(uint64_t a1, uint64_t a2, uint64_t a3, NSString a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v11 = *(void **)(v8 + OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_topLabel);
  NSString v12 = String._bridgeToObjectiveC()();
  [v11 setText:v12];

  if (a4) {
    a4 = String._bridgeToObjectiveC()();
  }
  [v11 setAccessibilityLabel:a4];

  id v13 = *(void **)(v8 + OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_bottomLabel);
  NSString v14 = String._bridgeToObjectiveC()();
  [v13 setText:v14];

  if (a8) {
    NSString v15 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v15 = 0;
  }
  id v16 = v15;
  [v13 setAccessibilityLabel:];
}

uint64_t type metadata accessor for AccessibilityDoubleStack()
{
  return self;
}

UIColor sub_100057074()
{
  sub_10001C99C(0, &qword_1004C5548);
  result.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 1.0).super.isa;
  qword_1004C6090 = (uint64_t)result.super.isa;
  return result;
}

void sub_1000570C8()
{
  qword_1004C6098 = 0x4032000000000000;
}

char *sub_1000570D8(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC7Measure17AccuracyDebugView_maxWidth] = 0;
  id v9 = objc_allocWithZone((Class)UILabel);
  uint64_t v10 = v4;
  id v11 = [v9 initWithFrame:a1, a2, a3, a4];
  if (qword_1004C2938 != -1) {
    swift_once();
  }
  [v11 setTextColor:qword_1004C6090];
  [v11 setTextAlignment:0];
  NSString v12 = self;
  if (qword_1004C2940 != -1) {
    swift_once();
  }
  id v13 = [v12 systemFontOfSize:*(double *)&qword_1004C6098];
  [v11 setFont:v13];

  *(void *)&v10[OBJC_IVAR____TtC7Measure17AccuracyDebugView_lineLengthLabel] = v11;
  id v14 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v14 setTextColor:qword_1004C6090];
  [v14 setTextAlignment:0];
  id v15 = [v12 systemFontOfSize:*(double *)&qword_1004C6098];
  [v14 setFont:v15];

  *(void *)&v10[OBJC_IVAR____TtC7Measure17AccuracyDebugView_currentLineLabel] = v14;
  id v16 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v16 setTextColor:qword_1004C6090];
  [v16 setTextAlignment:0];
  id v17 = [v12 systemFontOfSize:*(double *)&qword_1004C6098];
  [v16 setFont:v17];

  *(void *)&v10[OBJC_IVAR____TtC7Measure17AccuracyDebugView_currentEstimatedErrorLabel] = v16;
  id v18 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v18 setTextColor:qword_1004C6090];
  [v18 setTextAlignment:0];
  id v19 = [v12 systemFontOfSize:*(double *)&qword_1004C6098];
  [v18 setFont:v19];

  *(void *)&v10[OBJC_IVAR____TtC7Measure17AccuracyDebugView_planeTypesLabel] = v18;
  v25.receiver = v10;
  v25.super_class = ObjectType;
  objc_super v20 = (char *)[v25 initWithFrame:a1, a2, a3, a4];
  uint64_t v21 = *(void *)&v20[OBJC_IVAR____TtC7Measure17AccuracyDebugView_lineLengthLabel];
  id v22 = v20;
  [v22 addSubview:v21];
  [v22 addSubview:*(void *)&v22[OBJC_IVAR____TtC7Measure17AccuracyDebugView_currentLineLabel]];
  [v22 addSubview:*(void *)&v22[OBJC_IVAR____TtC7Measure17AccuracyDebugView_currentEstimatedErrorLabel]];
  [v22 addSubview:*(void *)&v22[OBJC_IVAR____TtC7Measure17AccuracyDebugView_planeTypesLabel]];

  return v22;
}

void sub_100057548()
{
  uint64_t v1 = v0;
  id v2 = [v0 superview];
  if (!v2) {
    return;
  }
  uint64_t v3 = v2;
  [v2 frame];
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;

  id v12 = [v1 subviews];
  uint64_t v56 = sub_10001C99C(0, (unint64_t *)&qword_1004CA030);
  unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    if (!v14) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v14) {
      goto LABEL_12;
    }
  }
  if (v14 < 1)
  {
    __break(1u);
    goto LABEL_62;
  }
  for (uint64_t i = 0; i != v14; ++i)
  {
    if ((v13 & 0xC000000000000001) != 0) {
      id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v16 = *(id *)(v13 + 8 * i + 32);
    }
    id v17 = v16;
    [v16 sizeToFit:v56];
  }
LABEL_12:
  swift_bridgeObjectRelease_n();
  id v18 = &selRef_replaySensorDidFinishReplayingData;
  id v19 = [v1 subviews];
  unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v20 >> 62))
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v21) {
      goto LABEL_14;
    }
LABEL_21:
    double v23 = 0.0;
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
  if (!v21) {
    goto LABEL_21;
  }
LABEL_14:
  if (v21 < 1)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  uint64_t v22 = 0;
  double v23 = 0.0;
  do
  {
    if ((v20 & 0xC000000000000001) != 0) {
      id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v24 = *(id *)(v20 + 8 * v22 + 32);
    }
    objc_super v25 = v24;
    ++v22;
    [v24 frame:v56];
    double v27 = v26;

    double v23 = v23 + v27;
  }
  while (v21 != v22);
LABEL_22:
  swift_bridgeObjectRelease_n();
  uint64_t v28 = OBJC_IVAR____TtC7Measure17AccuracyDebugView_maxWidth;
  double v29 = *(double *)&v1[OBJC_IVAR____TtC7Measure17AccuracyDebugView_maxWidth];
  id v30 = [v1 subviews];
  unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v31 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v32)
    {
LABEL_24:
      sub_1000BBDF4(0, v32 & ~(v32 >> 63), 0);
      if ((v32 & 0x8000000000000000) == 0)
      {
        for (uint64_t j = 0; j != v32; ++j)
        {
          if ((v31 & 0xC000000000000001) != 0) {
            id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v34 = *(id *)(v31 + 8 * j + 32);
          }
          uint64_t v35 = v34;
          [v34 frame:v56];
          double v37 = v36;

          unint64_t v39 = *(void *)&_swiftEmptyArrayStorage[2];
          unint64_t v38 = *(void *)&_swiftEmptyArrayStorage[3];
          if (v39 >= v38 >> 1) {
            sub_1000BBDF4((char *)(v38 > 1), v39 + 1, 1);
          }
          *(void *)&_swiftEmptyArrayStorage[2] = v39 + 1;
          _swiftEmptyArrayStorage[v39 + 4] = v37;
        }
        swift_bridgeObjectRelease();
        id v18 = &selRef_replaySensorDidFinishReplayingData;
        double v40 = _swiftEmptyArrayStorage[2];
        if (v40 != 0.0) {
          goto LABEL_33;
        }
LABEL_41:
        double v41 = 0.0;
        goto LABEL_42;
      }
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
  }
  else
  {
    uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v32) {
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRelease();
  double v40 = _swiftEmptyArrayStorage[2];
  if (v40 == 0.0) {
    goto LABEL_41;
  }
LABEL_33:
  double v41 = _swiftEmptyArrayStorage[4];
  uint64_t v42 = *(void *)&v40 - 1;
  if (v42)
  {
    double v43 = &_swiftEmptyArrayStorage[5];
    do
    {
      double v44 = *v43++;
      double v45 = v44;
      if (v41 < v44) {
        double v41 = v45;
      }
      --v42;
    }
    while (v42);
  }
LABEL_42:
  swift_bridgeObjectRelease();
  if ((*(void *)&v41 & 0xFFFFFFFFFFFFFLL) != 0) {
    double v46 = v29;
  }
  else {
    double v46 = v41;
  }
  if ((~*(void *)&v41 & 0x7FF0000000000000) != 0) {
    double v46 = v41;
  }
  if (v41 < v29) {
    double v46 = v29;
  }
  *(double *)&v1[v28] = v46;
  v58.origin.CGFloat x = v5;
  v58.origin.CGFloat y = v7;
  v58.size.width = v9;
  v58.size.height = v11;
  [v1 setFrame:CGRectMake(0.0, CGRectGetMidY(v58) + 100.0, *(double *)&v1[v28], v23)];
  id v47 = [v1 v18[216]];
  unint64_t v48 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v48 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v49 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v49)
    {
LABEL_51:
      if (v49 >= 1)
      {
        uint64_t v50 = 0;
        double v51 = 0.0;
        do
        {
          if ((v48 & 0xC000000000000001) != 0) {
            id v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v52 = *(id *)(v48 + 8 * v50 + 32);
          }
          id v53 = v52;
          ++v50;
          [v52 frame:v56];
          [v53 setFrame:];
          [v53 frame];
          double v55 = v54;

          double v51 = v51 + v55;
        }
        while (v49 != v50);
        goto LABEL_58;
      }
LABEL_64:
      __break(1u);
      return;
    }
  }
  else
  {
    uint64_t v49 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v49) {
      goto LABEL_51;
    }
  }
LABEL_58:

  swift_bridgeObjectRelease();
}

void sub_100057B20(void *a1)
{
  uint64_t v3 = 0xD000000000000019;
  double v4 = *(void **)(v1 + OBJC_IVAR____TtC7Measure17AccuracyDebugView_lineLengthLabel);
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 setText:v5];

  double v6 = *(void **)(v1 + OBJC_IVAR____TtC7Measure17AccuracyDebugView_currentLineLabel);
  v7._uint64_t countAndFlagsBits = 2112076;
  v7._object = (void *)0xE300000000000000;
  String.append(_:)(v7);
  double v8 = *(void (**)(void))((swift_isaMask & *a1) + 0x340);
  v8();
  Float.write<A>(to:)();
  v9._uint64_t countAndFlagsBits = 28003;
  v9._object = (void *)0xE200000000000000;
  String.append(_:)(v9);
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 setText:v11];

  id v12 = *(float (**)(void))((swift_isaMask & *a1) + 0x360);
  float v13 = v12();
  if (v13 < 0.0)
  {
    id v17 = (void *)0x8000000100421900;
  }
  else
  {
    v14._uint64_t countAndFlagsBits = 2112069;
    v14._object = (void *)0xE300000000000000;
    String.append(_:)(v14);
    v12();
    Float.write<A>(to:)();
    v15._uint64_t countAndFlagsBits = 673213795;
    v15._object = (void *)0xE400000000000000;
    String.append(_:)(v15);
    v12();
    v8();
    Float.write<A>(to:)();
    v16._uint64_t countAndFlagsBits = 10533;
    v16._object = (void *)0xE200000000000000;
    String.append(_:)(v16);
    uint64_t v3 = 0;
    id v17 = (void *)0xE000000000000000;
  }
  id v18 = *(void **)(v1 + OBJC_IVAR____TtC7Measure17AccuracyDebugView_currentEstimatedErrorLabel);
  v19._uint64_t countAndFlagsBits = v3;
  v19._object = v17;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v18 setText:v20];

  uint64_t v21 = *(void **)(v1 + OBJC_IVAR____TtC7Measure17AccuracyDebugView_planeTypesLabel);
  if (v13 < 0.0) {
    goto LABEL_29;
  }
  uint64_t v22 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x250);
  uint64_t v23 = v22();
  uint64_t v24 = v23;
  if ((v23 & 0xC000000000000001) != 0)
  {
    objc_super v25 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_32;
    }
    objc_super v25 = *(id *)(v23 + 32);
  }
  double v26 = v25;
  uint64_t v27 = swift_bridgeObjectRelease();
  uint64_t v28 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v26) + 0x2C0))(v27);

  uint64_t v29 = (*(uint64_t (**)(void))(*(void *)v28 + 216))();
  swift_release();
  if (!v29) {
    goto LABEL_34;
  }
  uint64_t v24 = 0x74694B7261;
  uint64_t v30 = *(unsigned __int8 *)(v29 + 48);
  swift_release();
  unint64_t v31 = 0xE500000000000000;
  uint64_t v32 = 0x74694B7261;
  switch(v30)
  {
    case 1:
      unint64_t v31 = 0xE800000000000000;
      uint64_t v32 = 0x6465727265666E69;
      break;
    case 2:
      unint64_t v31 = 0xE800000000000000;
      uint64_t v32 = 0x6B6361626C6C6166;
      break;
    case 3:
      uint64_t v32 = 0x6C61636F6CLL;
      break;
    case 4:
      unint64_t v31 = 0xE800000000000000;
      uint64_t v32 = 0x73756F6976657270;
      break;
    case 5:
      uint64_t v32 = 0x6863746170;
      break;
    case 6:
      uint64_t v32 = 0x706544656C707061;
      unint64_t v31 = 0xEA00000000006874;
      break;
    default:
      break;
  }
  unint64_t v33 = v31;
  String.append(_:)(*(Swift::String *)&v32);
  swift_bridgeObjectRelease();
  v34._uint64_t countAndFlagsBits = 0x203A3150202CLL;
  v34._object = (void *)0xE600000000000000;
  String.append(_:)(v34);
  uint64_t v35 = v22();
  if ((v35 & 0xC000000000000001) == 0)
  {
    if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
    {
      double v36 = *(id *)(v35 + 40);
      goto LABEL_20;
    }
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
LABEL_32:
  double v36 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_20:
  double v37 = v36;
  uint64_t v38 = swift_bridgeObjectRelease();
  uint64_t v39 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v37) + 0x2C0))(v38);

  uint64_t v40 = (*(uint64_t (**)(void))(*(void *)v39 + 216))();
  swift_release();
  if (!v40)
  {
LABEL_35:
    __break(1u);
    JUMPOUT(0x100058268);
  }
  uint64_t v41 = *(unsigned __int8 *)(v40 + 48);
  swift_release();
  uint64_t v42 = (void *)0xE500000000000000;
  switch(v41)
  {
    case 1:
      uint64_t v42 = (void *)0xE800000000000000;
      uint64_t v24 = 0x6465727265666E69;
      break;
    case 2:
      uint64_t v42 = (void *)0xE800000000000000;
      uint64_t v24 = 0x6B6361626C6C6166;
      break;
    case 3:
      uint64_t v24 = 0x6C61636F6CLL;
      break;
    case 4:
      uint64_t v42 = (void *)0xE800000000000000;
      uint64_t v24 = 0x73756F6976657270;
      break;
    case 5:
      uint64_t v24 = 0x6863746170;
      break;
    case 6:
      uint64_t v24 = 0x706544656C707061;
      uint64_t v42 = (void *)0xEA00000000006874;
      break;
    default:
      break;
  }
  v43._uint64_t countAndFlagsBits = v24;
  v43._object = v42;
  String.append(_:)(v43);
  swift_bridgeObjectRelease();
  v44._uint64_t countAndFlagsBits = 540684368;
  v44._object = (void *)0xE400000000000000;
  String.append(_:)(v44);
  swift_bridgeObjectRelease();
LABEL_29:
  NSString v45 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v21 setText:v45];

  sub_100057548();
}

uint64_t sub_1000582A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  double v2 = *(double *)(a1 + 32);
  uint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    double v4 = (double *)(a1 + 40);
    do
    {
      double v5 = *v4++;
      double v6 = v5;
      if (v2 < v5) {
        double v2 = v6;
      }
      --v3;
    }
    while (v3);
  }
  return *(void *)&v2;
}

unint64_t sub_1000582E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    float v2 = *(float *)(a1 + 32);
    uint64_t v3 = v1 - 1;
    if (v1 != 1)
    {
      double v4 = (float *)(a1 + 36);
      do
      {
        float v5 = *v4++;
        float v6 = v5;
        if (v2 < v5) {
          float v2 = v6;
        }
        --v3;
      }
      while (v3);
    }
    uint64_t v7 = LODWORD(v2);
  }
  else
  {
    uint64_t v7 = 0;
  }
  return v7 | ((unint64_t)(v1 == 0) << 32);
}

uint64_t type metadata accessor for AccuracyDebugView()
{
  return self;
}

void sub_1000583CC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  if (qword_1004C2950 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1004F7F98;
  uint64_t v6 = *(void *)(v2 + 16);
  if ((unint64_t)qword_1004F7F98 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_5;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)((qword_1004F7F98 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v7) {
    goto LABEL_15;
  }
LABEL_5:
  if (v6 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_20;
  }
  unint64_t v8 = v6 % v7;
  if ((v5 & 0xC000000000000001) == 0)
  {
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v8 < *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v9 = *(id *)(v5 + 8 * v8 + 32);
      goto LABEL_11;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_16:
  id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_11:
  Swift::String v10 = v9;
  sub_100058550((uint64_t)v9);
  id v12 = v11;

  if (v12)
  {
    float v13 = self;
    [v13 begin];
    [a2 addChildNode:v12];
    [v13 commit];

    uint64_t v14 = *(void *)(v3 + 16);
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (!v15)
    {
      *(void *)(v3 + 16) = v16;
      return;
    }
    goto LABEL_19;
  }
LABEL_21:
  __break(1u);
}

void sub_100058550(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v40 = a1;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1004C2948 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1004F7F90;
  if (!qword_1004F7F90) {
    return;
  }
  unint64_t v8 = self;
  swift_unknownObjectRetain();
  id v9 = [v8 planeGeometryWithDevice:v7];
  if (!v9)
  {
    swift_unknownObjectRelease();
    return;
  }
  Swift::String v10 = v9;
  id v11 = [v9 materials];
  sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_7;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v12 & 0xC000000000000001) != 0)
  {
    id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_26;
    }
    id v13 = *(id *)(v12 + 32);
  }
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  [v14 setBlendMode:4];

LABEL_15:
  id v16 = [v10 materials];
  unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v17 >> 62))
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v39 = v4;
    if (v18) {
      goto LABEL_17;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v39 = v4;
  if (!v22) {
    goto LABEL_22;
  }
LABEL_17:
  if ((v17 & 0xC000000000000001) != 0)
  {
LABEL_26:
    id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_20;
  }
  if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v19 = *(id *)(v17 + 32);
LABEL_20:
    NSString v20 = v19;
    swift_bridgeObjectRelease();
    id v21 = [v20 diffuse];

    [v21 setContents:v40];
LABEL_23:
    id v23 = [v1 geometry:v39];
    [v10 updateFromPlaneGeometry:v23];

    uint64_t v24 = self;
    id v25 = [v24 nodeWithGeometry:v10];
    unint64_t v41 = 0;
    unint64_t v42 = 0xE000000000000000;
    _StringGuts.grow(_:)(23);
    swift_bridgeObjectRelease();
    unint64_t v41 = 0xD000000000000015;
    unint64_t v42 = 0x8000000100421980;
    id v26 = [v2 identifier];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v27 = UUID.uuidString.getter();
    uint64_t v29 = v28;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v6, v3);
    v30._uint64_t countAndFlagsBits = v27;
    v30._object = v29;
    String.append(_:)(v30);
    swift_bridgeObjectRelease();
    NSString v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v25 setName:v31];

    unint64_t v41 = 0;
    unint64_t v42 = 0xE000000000000000;
    uint64_t v32 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    id v33 = [self textWithString:v32 extrusionDepth:0.01];
    swift_unknownObjectRelease();
    NSString v34 = String._bridgeToObjectiveC()();
    id v35 = [self fontWithName:v34 size:1.0];

    [v33 setFont:v35];
    id v36 = [v24 nodeWithGeometry:v33];
    double v37 = (float *)Float.piDiv2.unsafeMutableAddressor();
    __C::SCNVector4 v44 = SCNVector4.init(_:_:_:_:)(1.0, 0.0, 0.0, -*v37);
    [v36 setRotation:*(double *)&v44.x, *(double *)&v44.y, *(double *)&v44.z, *(double *)&v44.w];
    NSString v38 = String._bridgeToObjectiveC()();
    [v36 setName:v38];

    [v36 position];
    [v36 setPosition:];
    __C::SCNVector3 v43 = SCNVector3.init(_:_:_:)(0.05, 0.05, 0.05);
    [v36 setScale:*(double *)&v43.x, *(double *)&v43.y, *(double *)&v43.z];
    [v25 addChildNode:v36];
    swift_unknownObjectRelease();

    return;
  }
  __break(1u);
}

uint64_t sub_100058B50()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugPlaneVisualizer()
{
  return self;
}

id sub_100058B84()
{
  id result = MTLCreateSystemDefaultDevice();
  qword_1004F7F90 = (uint64_t)result;
  return result;
}

uint64_t sub_100058BA4()
{
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1003FA960;
  sub_10001C99C(0, &qword_1004C5548);
  *(UIColor *)(v0 + 3sub_10004ACAC(3, 1, 2) = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.14913, 0.0, 0.5);
  *(UIColor *)(v0 + 40) = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.99942, 0.98555, 0.0, 0.5);
  *(UIColor *)(v0 + 48) = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.23922, 0.67451, 0.96863, 0.5);
  *(UIColor *)(v0 + 56) = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.96078, 0.70588, 0.2, 0.5);
  *(UIColor *)(v0 + 64) = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.25279, 1.0, 0.5);
  uint64_t result = specialized Array._endMutation()();
  qword_1004F7F98 = v0;
  return result;
}

void sub_100058CEC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_100058D54(double a1)
{
  if (__OFADD__(*(void *)v1, 1))
  {
    __break(1u);
    return;
  }
  double v2 = *(double *)(v1 + 16);
  double v3 = a1 - *(double *)(v1 + 8);
  double v5 = *(double *)(v1 + 24);
  double v4 = *(double *)(v1 + 32);
  if ((*(void *)&v3 & 0xFFFFFFFFFFFFFLL) != 0) {
    double v6 = *(double *)(v1 + 24);
  }
  else {
    double v6 = v3;
  }
  if ((~*(void *)&v3 & 0x7FF0000000000000) != 0) {
    double v6 = v3;
  }
  if (v3 >= v5) {
    double v5 = v6;
  }
  ++*(void *)v1;
  *(double *)(v1 + 16) = v2 + v3;
  *(double *)(v1 + 24) = v5;
  if (v3 < v4)
  {
LABEL_15:
    *(double *)(v1 + 3sub_10004ACAC(3, 1, 2) = v4;
    return;
  }
  if ((~*(void *)&v3 & 0x7FF0000000000000) != 0)
  {
    double v4 = v3;
    goto LABEL_15;
  }
  if ((*(void *)&v3 & 0xFFFFFFFFFFFFFLL) == 0) {
    double v4 = v3;
  }
  *(double *)(v1 + 3sub_10004ACAC(3, 1, 2) = v4;
}

void sub_100058DCC()
{
  if (*(uint64_t *)v0 < 1) {
    double v1 = 0.0;
  }
  else {
    double v1 = *(double *)(v0 + 16) / (double)*(uint64_t *)v0;
  }
  *(void *)uint64_t v0 = 0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  uint64_t v2 = *(void *)(v0 + 48);
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v0 + 48) = v4;
    *(double *)(v0 + 40) = *(double *)(v0 + 40) + (v1 - *(double *)(v0 + 40)) / (double)v4;
  }
}

void sub_100058E2C(_OWORD *a1)
{
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[3] = 0u;
  uint64_t v2 = self;
  v5[4] = sub_100059C54;
  v5[5] = a1;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_100058CEC;
  v5[3] = &unk_10048A220;
  BOOL v3 = _Block_copy(v5);
  swift_retain();
  swift_release();
  id v4 = [v2 scheduledTimerWithTimeInterval:1 repeats:v3 block:1.0];
  _Block_release(v3);
}

uint64_t sub_100058F2C()
{
  return sub_100058F7C((uint64_t)&unk_10048A258, (uint64_t)sub_100059D7C, (uint64_t)&unk_10048A270);
}

uint64_t sub_100058F54()
{
  return sub_100058F7C((uint64_t)&unk_10048A2A8, (uint64_t)sub_100059D8C, (uint64_t)&unk_10048A2C0);
}

uint64_t sub_100058F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = a3;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  CFTimeInterval v12 = CACurrentMediaTime();
  sub_10005536C();
  id v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v3;
  *(CFTimeInterval *)(v14 + 24) = v12;
  aBlock[4] = a2;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = v17;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_100039BEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v18);
}

uint64_t sub_100059204(uint64_t result, double a2)
{
  uint64_t v2 = *(void *)(result + 48);
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
    return result;
  }
  double v5 = *(double *)(result + 64);
  double v6 = a2 - *(double *)(result + 56);
  double v8 = *(double *)(result + 72);
  double v7 = *(double *)(result + 80);
  if ((*(void *)&v6 & 0xFFFFFFFFFFFFFLL) != 0) {
    double v9 = *(double *)(result + 72);
  }
  else {
    double v9 = v6;
  }
  if ((~*(void *)&v6 & 0x7FF0000000000000) != 0) {
    double v9 = v6;
  }
  if (v6 >= v8) {
    double v8 = v9;
  }
  *(void *)(result + 48) = v4;
  *(double *)(result + 64) = v5 + v6;
  *(double *)(result + 7sub_10004ACAC(3, 1, 2) = v8;
  if (v6 < v7)
  {
LABEL_15:
    *(double *)(result + 80) = v7;
    return result;
  }
  if ((~*(void *)&v6 & 0x7FF0000000000000) != 0)
  {
    double v7 = v6;
    goto LABEL_15;
  }
  if ((*(void *)&v6 & 0xFFFFFFFFFFFFFLL) == 0) {
    double v7 = v6;
  }
  *(double *)(result + 80) = v7;
  return result;
}

void sub_10005927C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v5 = Strong;

    if (v5 == a1) {
      return;
    }
  }
  double v6 = CACurrentMediaTime();
  *(double *)(v1 + 11sub_10004ACAC(3, 1, 2) = v6;
  swift_unknownObjectWeakAssign();
  double v7 = (unint64_t *)(v1 + 200);
  swift_beginAccess();
  unint64_t v8 = *(void *)(v1 + 200);
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    if (!v9) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v9) {
      goto LABEL_16;
    }
  }
  if (v9 < 1)
  {
    __break(1u);
    goto LABEL_48;
  }
  for (uint64_t i = 0; i != v9; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0)
    {
      uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v11 = *(void *)(v8 + 8 * i + 32);
      swift_retain();
    }
    CFTimeInterval v12 = (void *)(*(uint64_t (**)(void))(*(void *)v11 + 112))();

    if (v12)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
      swift_release();
    }
  }
LABEL_16:
  swift_bridgeObjectRelease();
  unint64_t *v7 = (unint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  sub_100012894(&qword_1004C6288);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  id v14 = a1;
  uint64_t v15 = NSObject.hashValue.getter();

  *(void *)(v13 + 24) = v15;
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  if (*v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v17 = *(void *)(v2 + 160);
  BOOL v18 = __OFADD__(v17, v16);
  uint64_t v19 = v17 + v16;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 160) = v19;
    uint64_t v13 = *(void *)(v2 + 168);
    unint64_t v20 = *(void *)(v2 + 200);
    if (!(v20 >> 62))
    {
      uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  unint64_t v20 = *v7;
LABEL_23:
  if (v21 <= v13) {
    uint64_t v22 = v13;
  }
  else {
    uint64_t v22 = v21;
  }
  uint64_t v23 = *(void *)(v2 + 176);
  if (v22 > v23) {
    uint64_t v23 = v22;
  }
  *(void *)(v2 + 168) = v22;
  *(void *)(v2 + 176) = v23;
  if (!(v20 >> 62))
  {
    uint64_t v24 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v24) {
      goto LABEL_30;
    }
LABEL_45:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_45;
  }
LABEL_30:
  if ((v20 & 0xC000000000000001) == 0)
  {
    if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    uint64_t v25 = *(void *)(v20 + 32);
    swift_retain();
    goto LABEL_33;
  }
LABEL_48:
  uint64_t v25 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_33:
  uint64_t v26 = swift_bridgeObjectRelease();
  uint64_t v27 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v25 + 112))(v26);
  swift_release();
  if (v27)
  {
    [v27 timestamp];
    double v29 = v28;

    double v30 = *(double *)(v2 + 184);
    if (v6 - v29 >= v30)
    {
      if ((~COERCE__INT64(v6 - v29) & 0x7FF0000000000000) != 0)
      {
        double v30 = v6 - v29;
      }
      else if ((COERCE_UNSIGNED_INT64(v6 - v29) & 0xFFFFFFFFFFFFFLL) == 0)
      {
        double v30 = v6 - v29;
      }
    }
    *(double *)(v2 + 184) = v30;
  }
}

uint64_t sub_100059700()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugStatsController()
{
  return self;
}

__n128 initializeWithTake for UserInputs(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 3sub_10004ACAC(3, 1, 2) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DebugStatsController.FrameSampleWindow(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DebugStatsController.FrameSampleWindow(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 56) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DebugStatsController.FrameSampleWindow()
{
  return &type metadata for DebugStatsController.FrameSampleWindow;
}

uint64_t sub_1000597F0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v32 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v29 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v30 = *(void *)(v6 - 8);
  uint64_t v31 = v6;
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v28 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v27 - v14;
  *(void *)(v2 + 16) = 0;
  *(CFTimeInterval *)(v2 + 3sub_10004ACAC(3, 1, 2) = CACurrentMediaTime();
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 7sub_10004ACAC(3, 1, 2) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 15sub_10004ACAC(3, 1, 2) = 0u;
  *(_OWORD *)(v2 + 168) = 0u;
  *(void *)(v2 + 184) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v2 + 200) = _swiftEmptyArrayStorage;
  *(void *)(v2 + 24) = a1;
  uint64_t v16 = self;
  id v17 = a1;
  id v18 = [v16 displayLinkWithTarget:v2 selector:"tick"];
  id v19 = [self mainRunLoop];
  [v18 addToRunLoop:v19 forMode:NSDefaultRunLoopMode];

  sub_10005536C();
  unint64_t v20 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v21 = v10 + 8;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v27 = v21;
  v22(v13, v9);
  aBlock[4] = sub_100059C34;
  aBlock[5] = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_10048A1F8;
  uint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v24 = v8;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_100039BEC();
  uint64_t v25 = v29;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v4);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v31);
  v22(v15, v28);
  return v2;
}

void sub_100059C34()
{
  sub_100058E2C(v0);
}

uint64_t sub_100059C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100059C4C()
{
  return swift_release();
}

void sub_100059C58()
{
  CFTimeInterval v1 = CACurrentMediaTime();
  uint64_t v2 = *(void *)(v0 + 40);
  CFTimeInterval v3 = v1 - *(double *)(v0 + 32);
  *(CFTimeInterval *)(v0 + 3sub_10004ACAC(3, 1, 2) = v1;
  sub_100059DB4((double)v2 / v3);
  *(void *)(v0 + 40) = 0;
  uint64_t v4 = 0;
  if ([self jasperAvailable]) {
    uint64_t v4 = *(void *)(v0 + 16);
  }
  sub_100058DCC();
  sub_100059F4C(v4, v5, v6, *(Swift::Double *)(v0 + 88), v7, *(Swift::Double *)(v0 + 80));
  uint64_t v8 = *(void *)(v0 + 104);
  if (v8 <= 1) {
    uint64_t v8 = 1;
  }
  double v9 = (double)*(uint64_t *)(v0 + 160) / (double)v8;
  sub_100058DCC();
  sub_10005A458(*(void *)(v0 + 168), *(void *)(v0 + 176), v10, v11, *(Swift::Double *)(v0 + 144), v12, *(Swift::Double *)(v0 + 136), v9, *(Swift::Double *)(v0 + 184));
  *(void *)(v0 + 184) = 0;
  *(void *)(v0 + 160) = 0;
  *(void *)(v0 + 168) = 0;
  sub_10005AB1C();
}

uint64_t sub_100059D44()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

double sub_100059D7C()
{
  double result = *(double *)(v0 + 24);
  *(double *)(*(void *)(v0 + 16) + 56) = result;
  return result;
}

uint64_t sub_100059D8C()
{
  return sub_100059204(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_100059DB4(double a1)
{
  sub_100012894((uint64_t *)&unk_1004D2460);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1003F87F0;
  *(void *)(v3 + 56) = &type metadata for Double;
  *(void *)(v3 + 64) = &protocol witness table for Double;
  *(double *)(v3 + 3sub_10004ACAC(3, 1, 2) = a1;
  v4._uint64_t countAndFlagsBits = String.init(format:_:)();
  uint64_t countAndFlagsBits = v4._countAndFlagsBits;
  object = v4._object;
  Swift::Double v7 = *(void **)(v1 + OBJC_IVAR____TtC7Measure14DebugStatsView_tickFPSLabel);
  String.append(_:)(v4);
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setText:v8, 8224, 0xE200000000000000];

  if (qword_1004C2B50 != -1) {
    swift_once();
  }
  v9._uint64_t countAndFlagsBits = countAndFlagsBits;
  v9._object = object;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 0xD000000000000013;
  v10._object = (void *)0x8000000100421C10;
  Log.default(_:isPrivate:)(v10, 0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100059F4C(uint64_t a1, double a2, Swift::Double a3, Swift::Double a4, Swift::Double a5, Swift::Double a6)
{
  sub_100012894((uint64_t *)&unk_1004D2460);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1003F87F0;
  *(void *)(v13 + 56) = &type metadata for Double;
  *(void *)(v13 + 64) = &protocol witness table for Double;
  *(double *)(v13 + 3sub_10004ACAC(3, 1, 2) = a2;
  uint64_t v14 = String.init(format:_:)();
  uint64_t v16 = v15;
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1003F8B80;
  Swift::String v18 = benchmarkFormat(seconds:)(a3);
  *(void *)(v17 + 56) = &type metadata for String;
  unint64_t v19 = sub_10001D424();
  *(void *)(v17 + 64) = v19;
  *(Swift::String *)(v17 + 3sub_10004ACAC(3, 1, 2) = v18;
  Swift::String v20 = benchmarkFormat(seconds:)(a5);
  *(void *)(v17 + 96) = &type metadata for String;
  *(void *)(v17 + 104) = v19;
  *(Swift::String *)(v17 + 7sub_10004ACAC(3, 1, 2) = v20;
  uint64_t v21 = String.init(format:_:)();
  double v51 = v22;
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1003F8B80;
  Swift::String v24 = benchmarkFormat(seconds:)(a4);
  *(void *)(v23 + 56) = &type metadata for String;
  *(void *)(v23 + 64) = v19;
  *(Swift::String *)(v23 + 3sub_10004ACAC(3, 1, 2) = v24;
  Swift::String v25 = benchmarkFormat(seconds:)(a6);
  *(void *)(v23 + 96) = &type metadata for String;
  *(void *)(v23 + 104) = v19;
  *(Swift::String *)(v23 + 7sub_10004ACAC(3, 1, 2) = v25;
  uint64_t v26 = String.init(format:_:)();
  uint64_t v28 = v27;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1003F87F0;
  *(void *)(v29 + 56) = &type metadata for Int;
  *(void *)(v29 + 64) = &protocol witness table for Int;
  *(void *)(v29 + 3sub_10004ACAC(3, 1, 2) = a1;
  uint64_t v50 = String.init(format:_:)();
  id v52 = v30;
  uint64_t v31 = *(void **)(v6 + OBJC_IVAR____TtC7Measure14DebugStatsView_renderFPSLabel);
  uint64_t v53 = v14;
  v32._uint64_t countAndFlagsBits = v14;
  double v54 = v16;
  v32._object = v16;
  String.append(_:)(v32);
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v31 setText:v33];

  NSString v34 = *(void **)(v6 + OBJC_IVAR____TtC7Measure14DebugStatsView_renderTimeLabel);
  v35._uint64_t countAndFlagsBits = v21;
  v35._object = v51;
  String.append(_:)(v35);
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v34 setText:v36];

  double v37 = *(void **)(v6 + OBJC_IVAR____TtC7Measure14DebugStatsView_renderGlobalTimeLabel);
  v38._uint64_t countAndFlagsBits = v26;
  v38._object = v28;
  String.append(_:)(v38);
  NSString v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v37 setText:v39];

  if ([self jasperAvailable])
  {
    uint64_t v40 = *(void **)(v6 + OBJC_IVAR____TtC7Measure14DebugStatsView_projectorLabel);
    v41._uint64_t countAndFlagsBits = v50;
    v41._object = v52;
    String.append(_:)(v41);
    swift_bridgeObjectRelease();
    NSString v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v40 setText:v42];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_1004C2B50 != -1) {
    swift_once();
  }
  v43._uint64_t countAndFlagsBits = v53;
  v43._object = v54;
  String.append(_:)(v43);
  swift_bridgeObjectRelease();
  v44._uint64_t countAndFlagsBits = 0x74694B656E656353;
  v44._object = (void *)0xEA0000000000203ALL;
  Log.default(_:isPrivate:)(v44, 0);
  swift_bridgeObjectRelease();
  v45._uint64_t countAndFlagsBits = v21;
  v45._object = v51;
  String.append(_:)(v45);
  swift_bridgeObjectRelease();
  v46._uint64_t countAndFlagsBits = 0x74694B656E656353;
  v46._object = (void *)0xEA0000000000203ALL;
  Log.default(_:isPrivate:)(v46, 0);
  swift_bridgeObjectRelease();
  v47._uint64_t countAndFlagsBits = v26;
  v47._object = v28;
  String.append(_:)(v47);
  swift_bridgeObjectRelease();
  v48._uint64_t countAndFlagsBits = 0x74694B656E656353;
  v48._object = (void *)0xEA0000000000203ALL;
  Log.default(_:isPrivate:)(v48, 0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10005A458(uint64_t a1, uint64_t a2, double a3, Swift::Double a4, Swift::Double a5, Swift::Double a6, Swift::Double a7, double a8, Swift::Double a9)
{
  uint64_t v10 = v9;
  sub_100012894((uint64_t *)&unk_1004D2460);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1003F87F0;
  *(void *)(v18 + 56) = &type metadata for Double;
  *(void *)(v18 + 64) = &protocol witness table for Double;
  *(double *)(v18 + 3sub_10004ACAC(3, 1, 2) = a3;
  uint64_t v19 = String.init(format:_:)();
  Swift::String v66 = v20;
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1003F8B80;
  Swift::String v22 = benchmarkFormat(seconds:)(a4);
  *(void *)(v21 + 56) = &type metadata for String;
  unint64_t v23 = sub_10001D424();
  *(void *)(v21 + 64) = v23;
  *(Swift::String *)(v21 + 3sub_10004ACAC(3, 1, 2) = v22;
  Swift::String v24 = benchmarkFormat(seconds:)(a6);
  *(void *)(v21 + 96) = &type metadata for String;
  *(void *)(v21 + 104) = v23;
  *(Swift::String *)(v21 + 7sub_10004ACAC(3, 1, 2) = v24;
  v76._uint64_t countAndFlagsBits = String.init(format:_:)();
  v76._object = v25;
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1003F8B80;
  Swift::String v27 = benchmarkFormat(seconds:)(a5);
  *(void *)(v26 + 56) = &type metadata for String;
  *(void *)(v26 + 64) = v23;
  *(Swift::String *)(v26 + 3sub_10004ACAC(3, 1, 2) = v27;
  Swift::String v28 = benchmarkFormat(seconds:)(a7);
  *(void *)(v26 + 96) = &type metadata for String;
  *(void *)(v26 + 104) = v23;
  *(Swift::String *)(v26 + 7sub_10004ACAC(3, 1, 2) = v28;
  uint64_t v74 = String.init(format:_:)();
  uint64_t v30 = v29;
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1003F8B80;
  *(void *)(v31 + 56) = &type metadata for Double;
  *(void *)(v31 + 64) = &protocol witness table for Double;
  *(double *)(v31 + 3sub_10004ACAC(3, 1, 2) = a8;
  *(void *)(v31 + 96) = &type metadata for Int;
  *(void *)(v31 + 104) = &protocol witness table for Int;
  *(void *)(v31 + 7sub_10004ACAC(3, 1, 2) = a1;
  uint64_t v73 = String.init(format:_:)();
  long long v75 = v32;
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1003F87F0;
  *(void *)(v33 + 56) = &type metadata for Int;
  *(void *)(v33 + 64) = &protocol witness table for Int;
  *(void *)(v33 + 3sub_10004ACAC(3, 1, 2) = a2;
  uint64_t v69 = String.init(format:_:)();
  Swift::String v67 = v34;
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1003F87F0;
  Swift::String v36 = benchmarkFormat(seconds:)(a9);
  *(void *)(v35 + 56) = &type metadata for String;
  *(void *)(v35 + 64) = v23;
  *(Swift::String *)(v35 + 3sub_10004ACAC(3, 1, 2) = v36;
  uint64_t v37 = String.init(format:_:)();
  long long v68 = v38;
  NSString v39 = *(void **)(v10 + OBJC_IVAR____TtC7Measure14DebugStatsView_arFPSLabel);
  uint64_t v71 = v19;
  v40._uint64_t countAndFlagsBits = v19;
  v40._object = v66;
  String.append(_:)(v40);
  NSString v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v39 setText:v41];

  NSString v42 = *(void **)(v10 + OBJC_IVAR____TtC7Measure14DebugStatsView_arTimeLabel);
  String.append(_:)(v76);
  NSString v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v42 setText:v43];

  Swift::String v44 = *(void **)(v10 + OBJC_IVAR____TtC7Measure14DebugStatsView_arGlobalTimeLabel);
  v45._uint64_t countAndFlagsBits = v74;
  v45._object = v30;
  String.append(_:)(v45);
  NSString v46 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v44 setText:v46];

  Swift::String v47 = *(void **)(v10 + OBJC_IVAR____TtC7Measure14DebugStatsView_arFrameCountLabel);
  v48._uint64_t countAndFlagsBits = v73;
  v48._object = v75;
  String.append(_:)(v48);
  NSString v49 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v47 setText:v49];

  uint64_t v50 = *(void **)(v10 + OBJC_IVAR____TtC7Measure14DebugStatsView_arGlobalMaxFrameCountLabel);
  v51._uint64_t countAndFlagsBits = v69;
  v51._object = v67;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  NSString v52 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v50 setText:v52];

  uint64_t v53 = *(void **)(v10 + OBJC_IVAR____TtC7Measure14DebugStatsView_arAgeLabel);
  v54._uint64_t countAndFlagsBits = v37;
  v54._object = v68;
  String.append(_:)(v54);
  NSString v55 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v53 setText:v55];

  if (qword_1004C2B50 != -1) {
    swift_once();
  }
  v56._uint64_t countAndFlagsBits = v71;
  v56._object = v66;
  String.append(_:)(v56);
  swift_bridgeObjectRelease();
  v57._uint64_t countAndFlagsBits = 0x656D617246205241;
  v57._object = (void *)0xEB00000000203A73;
  Log.default(_:isPrivate:)(v57, 0);
  swift_bridgeObjectRelease();
  String.append(_:)(v76);
  swift_bridgeObjectRelease();
  v58._uint64_t countAndFlagsBits = 0x656D617246205241;
  v58._object = (void *)0xEB00000000203A73;
  Log.default(_:isPrivate:)(v58, 0);
  swift_bridgeObjectRelease();
  v59._uint64_t countAndFlagsBits = v74;
  v59._object = v30;
  String.append(_:)(v59);
  swift_bridgeObjectRelease();
  v60._uint64_t countAndFlagsBits = 0x656D617246205241;
  v60._object = (void *)0xEB00000000203A73;
  Log.default(_:isPrivate:)(v60, 0);
  swift_bridgeObjectRelease();
  v61._uint64_t countAndFlagsBits = v73;
  v61._object = v75;
  String.append(_:)(v61);
  swift_bridgeObjectRelease();
  v62._uint64_t countAndFlagsBits = 0x656D617246205241;
  v62._object = (void *)0xEB00000000203A73;
  Log.default(_:isPrivate:)(v62, 0);
  swift_bridgeObjectRelease();
  v63._uint64_t countAndFlagsBits = v37;
  v63._object = v68;
  String.append(_:)(v63);
  swift_bridgeObjectRelease();
  v64._uint64_t countAndFlagsBits = 0x656D617246205241;
  v64._object = (void *)0xEB00000000203A73;
  Log.default(_:isPrivate:)(v64, 0);

  return swift_bridgeObjectRelease();
}

void sub_10005AB1C()
{
  uint64_t v1 = v0;
  id v2 = [v0 subviews];
  uint64_t v45 = sub_10001C99C(0, (unint64_t *)&qword_1004CA030);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (!v4) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_10;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_55;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(v3 + 8 * i + 32);
    }
    Swift::Double v7 = v6;
    [v6 sizeToFit:v45];
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  NSString v8 = &selRef_replaySensorDidFinishReplayingData;
  id v9 = [v1 subviews];
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (!v11) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_19;
    }
  }
  if (v11 < 1)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  uint64_t v12 = 0;
  double v13 = 0.0;
  do
  {
    if ((v10 & 0xC000000000000001) != 0) {
      id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v14 = *(id *)(v10 + 8 * v12 + 32);
    }
    uint64_t v15 = v14;
    ++v12;
    [v14 frame:v45];
    double v17 = v16;

    double v13 = v13 + v17;
  }
  while (v11 != v12);
LABEL_19:
  swift_bridgeObjectRelease_n();
  uint64_t v18 = OBJC_IVAR____TtC7Measure14DebugStatsView_maxWidth;
  double v19 = *(double *)&v1[OBJC_IVAR____TtC7Measure14DebugStatsView_maxWidth];
  id v20 = [v1 subviews];
  unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v21 >> 62))
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v22) {
      goto LABEL_21;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v22) {
    goto LABEL_31;
  }
LABEL_21:
  sub_1000BBDF4(0, v22 & ~(v22 >> 63), 0);
  if (v22 < 0)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  for (uint64_t j = 0; j != v22; ++j)
  {
    if ((v21 & 0xC000000000000001) != 0) {
      id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v24 = *(id *)(v21 + 8 * j + 32);
    }
    Swift::String v25 = v24;
    [v24 frame:v45];
    double v27 = v26;

    double v29 = _swiftEmptyArrayStorage[2];
    double v28 = _swiftEmptyArrayStorage[3];
    if (*(void *)&v29 >= *(void *)&v28 >> 1) {
      sub_1000BBDF4((char *)(*(void *)&v28 > 1uLL), *(void *)&v29 + 1, 1);
    }
    *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v29 + 1;
    _swiftEmptyArrayStorage[*(void *)&v29 + 4] = v27;
  }
  swift_bridgeObjectRelease();
  NSString v8 = &selRef_replaySensorDidFinishReplayingData;
LABEL_32:
  *(double *)&uint64_t v30 = COERCE_DOUBLE(sub_1000582A0((uint64_t)_swiftEmptyArrayStorage));
  char v32 = v31;
  swift_bridgeObjectRelease();
  double v33 = *(double *)&v30;
  if (v32) {
    double v33 = 0.0;
  }
  if ((*(void *)&v33 & 0xFFFFFFFFFFFFFLL) != 0) {
    double v34 = v19;
  }
  else {
    double v34 = v33;
  }
  if ((~*(void *)&v33 & 0x7FF0000000000000) != 0) {
    double v34 = v33;
  }
  if (v33 >= v19) {
    double v35 = v34;
  }
  else {
    double v35 = v19;
  }
  *(double *)&v1[v18] = v35;
  [v1 setFrame:CGRectMake(0.0, 75.0, v45)];
  id v36 = [v1 v8[216]];
  unint64_t v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v37 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v38)
    {
LABEL_44:
      if (v38 >= 1)
      {
        uint64_t v39 = 0;
        double v40 = 0.0;
        do
        {
          if ((v37 & 0xC000000000000001) != 0) {
            id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v41 = *(id *)(v37 + 8 * v39 + 32);
          }
          NSString v42 = v41;
          ++v39;
          [v41 frame];
          [v42 setFrame:];
          [v42 frame];
          double v44 = v43;

          double v40 = v40 + v44;
        }
        while (v38 != v39);
        goto LABEL_51;
      }
LABEL_57:
      __break(1u);
      return;
    }
  }
  else
  {
    uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v38) {
      goto LABEL_44;
    }
  }
LABEL_51:

  swift_bridgeObjectRelease();
}

UIColor sub_10005B004()
{
  sub_10001C99C(0, &qword_1004C5548);
  result.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.0, 0.0, 0.0, 0.5).super.isa;
  qword_1004C6290 = (uint64_t)result.super.isa;
  return result;
}

UIColor sub_10005B058()
{
  sub_10001C99C(0, &qword_1004C5548);
  result.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 1.0, 1.0, 1.0).super.isa;
  qword_1004C6298 = (uint64_t)result.super.isa;
  return result;
}

void sub_10005B0AC()
{
  qword_1004C62A0 = 0x4028000000000000;
}

char *sub_10005B0BC(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC7Measure14DebugStatsView_maxWidth] = 0;
  id v9 = objc_allocWithZone((Class)UILabel);
  unint64_t v10 = v4;
  id v11 = [v9 initWithFrame:a1, a2, a3, a4];
  if (qword_1004C2960 != -1) {
    swift_once();
  }
  [v11 setTextColor:qword_1004C6298];
  [v11 setTextAlignment:0];
  uint64_t v12 = self;
  if (qword_1004C2968 != -1) {
    swift_once();
  }
  id v13 = [v12 systemFontOfSize:*(double *)&qword_1004C62A0];
  [v11 setFont:v13];

  *(void *)&v10[OBJC_IVAR____TtC7Measure14DebugStatsView_tickFPSLabel] = v11;
  id v14 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v14 setTextColor:qword_1004C6298];
  [v14 setTextAlignment:0];
  id v15 = [v12 systemFontOfSize:*(double *)&qword_1004C62A0];
  [v14 setFont:v15];

  *(void *)&v10[OBJC_IVAR____TtC7Measure14DebugStatsView_renderFPSLabel] = v14;
  id v16 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v16 setTextColor:qword_1004C6298];
  [v16 setTextAlignment:0];
  id v17 = [v12 systemFontOfSize:*(double *)&qword_1004C62A0];
  [v16 setFont:v17];

  *(void *)&v10[OBJC_IVAR____TtC7Measure14DebugStatsView_renderTimeLabel] = v16;
  id v18 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v18 setTextColor:qword_1004C6298];
  [v18 setTextAlignment:0];
  id v19 = [v12 systemFontOfSize:*(double *)&qword_1004C62A0];
  [v18 setFont:v19];

  *(void *)&v10[OBJC_IVAR____TtC7Measure14DebugStatsView_renderGlobalTimeLabel] = v18;
  id v20 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v20 setTextColor:qword_1004C6298];
  [v20 setTextAlignment:0];
  id v21 = [v12 systemFontOfSize:*(double *)&qword_1004C62A0];
  [v20 setFont:v21];

  *(void *)&v10[OBJC_IVAR____TtC7Measure14DebugStatsView_projectorLabel] = v20;
  id v22 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v22 setTextColor:qword_1004C6298];
  [v22 setTextAlignment:0];
  id v23 = [v12 systemFontOfSize:*(double *)&qword_1004C62A0];
  [v22 setFont:v23];

  *(void *)&v10[OBJC_IVAR____TtC7Measure14DebugStatsView_arFPSLabel] = v22;
  id v24 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v24 setTextColor:qword_1004C6298];
  [v24 setTextAlignment:0];
  id v25 = [v12 systemFontOfSize:*(double *)&qword_1004C62A0];
  [v24 setFont:v25];

  *(void *)&v10[OBJC_IVAR____TtC7Measure14DebugStatsView_arTimeLabel] = v24;
  id v26 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v26 setTextColor:qword_1004C6298];
  [v26 setTextAlignment:0];
  id v27 = [v12 systemFontOfSize:*(double *)&qword_1004C62A0];
  [v26 setFont:v27];

  *(void *)&v10[OBJC_IVAR____TtC7Measure14DebugStatsView_arGlobalTimeLabel] = v26;
  id v28 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v28 setTextColor:qword_1004C6298];
  [v28 setTextAlignment:0];
  id v29 = [v12 systemFontOfSize:*(double *)&qword_1004C62A0];
  [v28 setFont:v29];

  *(void *)&v10[OBJC_IVAR____TtC7Measure14DebugStatsView_arFrameCountLabel] = v28;
  id v30 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v30 setTextColor:qword_1004C6298];
  [v30 setTextAlignment:0];
  id v31 = [v12 systemFontOfSize:*(double *)&qword_1004C62A0];
  [v30 setFont:v31];

  *(void *)&v10[OBJC_IVAR____TtC7Measure14DebugStatsView_arGlobalMaxFrameCountLabel] = v30;
  id v32 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v32 setTextColor:qword_1004C6298];
  [v32 setTextAlignment:0];
  id v33 = [v12 systemFontOfSize:*(double *)&qword_1004C62A0];
  [v32 setFont:v33];

  *(void *)&v10[OBJC_IVAR____TtC7Measure14DebugStatsView_arAgeLabel] = v32;
  v66.receiver = v10;
  v66.super_class = v61;
  [super initWithFrame:a1, a2, a3, a4];
  [v34 setUserInteractionEnabled:0];
  uint64_t v35 = qword_1004C2958;
  id v36 = (char *)v34;
  if (v35 != -1) {
    swift_once();
  }
  [v36 setBackgroundColor:qword_1004C6290];

  [v36 setContentMode:9];
  id v37 = [self mainBundle];
  id v38 = [v37 infoDictionary];

  if (!v38)
  {
    long long v64 = 0u;
    long long v65 = 0u;
LABEL_16:
    sub_10001C9D8((uint64_t)&v64);
    goto LABEL_17;
  }
  uint64_t v39 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (*(void *)(v39 + 16) && (unint64_t v40 = sub_1000E20D4(0xD00000000000001ALL, 0x8000000100421C90), (v41 & 1) != 0))
  {
    sub_10005C070(*(void *)(v39 + 56) + 32 * v40, (uint64_t)&v64);
  }
  else
  {
    long long v64 = 0u;
    long long v65 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v65 + 1)) {
    goto LABEL_16;
  }
  if (swift_dynamicCast())
  {
    uint64_t v42 = v62;
    unint64_t v43 = v63;
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v42 = 0;
  unint64_t v43 = 0;
LABEL_18:
  sub_100012894((uint64_t *)&unk_1004D2460);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1003F87F0;
  *(void *)(v44 + 56) = &type metadata for String;
  *(void *)(v44 + 64) = sub_10001D424();
  uint64_t v45 = 0x6E776F6E6B6E55;
  if (v43) {
    uint64_t v45 = v42;
  }
  unint64_t v46 = 0xE700000000000000;
  if (v43) {
    unint64_t v46 = v43;
  }
  *(void *)(v44 + 3sub_10004ACAC(3, 1, 2) = v45;
  *(void *)(v44 + 40) = v46;
  String.init(format:_:)();
  id v47 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v47 setTextColor:qword_1004C6298];
  [v47 setTextAlignment:0];
  id v48 = [v12 systemFontOfSize:*(double *)&qword_1004C62A0];
  [v47 setFont:v48];

  NSString v49 = String._bridgeToObjectiveC()();
  [v47 setText:v49];
  swift_bridgeObjectRelease();

  [v36 addSubview:v47];
  id v50 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v50 setTextColor:qword_1004C6298];
  [v50 setTextAlignment:0];
  id v51 = [v12 systemFontOfSize:*(double *)&qword_1004C62A0];
  [v50 setFont:v51];

  NSString v52 = String._bridgeToObjectiveC()();
  [v50 setText:v52];

  [v36 addSubview:v50];
  [v36 addSubview:*(void *)&v36[OBJC_IVAR____TtC7Measure14DebugStatsView_tickFPSLabel]];
  id v53 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v53 setTextColor:qword_1004C6298];
  [v53 setTextAlignment:0];
  id v54 = [v12 systemFontOfSize:*(double *)&qword_1004C62A0];
  [v53 setFont:v54];

  NSString v55 = String._bridgeToObjectiveC()();
  [v53 setText:v55];

  [v36 addSubview:v53];
  [v36 addSubview:*(void *)&v36[OBJC_IVAR____TtC7Measure14DebugStatsView_renderFPSLabel]];
  [v36 addSubview:*(void *)&v36[OBJC_IVAR____TtC7Measure14DebugStatsView_renderTimeLabel]];
  [v36 addSubview:*(void *)&v36[OBJC_IVAR____TtC7Measure14DebugStatsView_renderGlobalTimeLabel]];
  if ([self jasperAvailable]) {
    [v36 addSubview:*(void *)&v36[OBJC_IVAR____TtC7Measure14DebugStatsView_projectorLabel]];
  }
  id v56 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v56 setTextColor:qword_1004C6298];
  [v56 setTextAlignment:0];
  id v57 = [v12 systemFontOfSize:*(double *)&qword_1004C62A0];
  [v56 setFont:v57];

  NSString v58 = String._bridgeToObjectiveC()();
  [v56 setText:v58];

  [v36 addSubview:v56];
  [v36 addSubview:*(void *)&v36[OBJC_IVAR____TtC7Measure14DebugStatsView_arFPSLabel]];
  [v36 addSubview:*(void *)&v36[OBJC_IVAR____TtC7Measure14DebugStatsView_arTimeLabel]];
  [v36 addSubview:*(void *)&v36[OBJC_IVAR____TtC7Measure14DebugStatsView_arGlobalTimeLabel]];
  [v36 addSubview:*(void *)&v36[OBJC_IVAR____TtC7Measure14DebugStatsView_arFrameCountLabel]];
  [v36 addSubview:*(void *)&v36[OBJC_IVAR____TtC7Measure14DebugStatsView_arGlobalMaxFrameCountLabel]];
  [v36 addSubview:*(void *)&v36[OBJC_IVAR____TtC7Measure14DebugStatsView_arAgeLabel]];

  return v36;
}

uint64_t type metadata accessor for DebugStatsView()
{
  return self;
}

uint64_t sub_10005C070(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_10005C0CC()
{
  uint64_t v1 = v0;
  if (qword_1004C31D0 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1004F8A68;
  id v3 = qword_1004F8A70;
  if (byte_1004F8A78)
  {
    char v4 = byte_1004F8A88;
    uint64_t v5 = qword_1004F8A80;
    char v6 = byte_1004D2600;
    id v7 = (id)qword_1004F8A68;
    id v9 = sub_100081B28(v6, v5, v4);
    sub_1000286C0(v2, v3, 1);
  }
  else
  {
    if (byte_1004D2600) {
      id v8 = qword_1004F8A70;
    }
    else {
      id v8 = (id)qword_1004F8A68;
    }
    id v9 = v8;
  }
  [v1 setBackgroundColor:v9];
}

void sub_10005C2F8(char a1)
{
  double v2 = (double)(a1 & 1);
  [v1 alpha];
  if (v3 != v2)
  {
    uint64_t v4 = OBJC_IVAR____TtC7Measure13SeparatorView_targetAlpha;
    if (*(double *)&v1[OBJC_IVAR____TtC7Measure13SeparatorView_targetAlpha] != v2)
    {
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = v1;
      *(double *)(v5 + 24) = v2;
      id v6 = objc_allocWithZone((Class)UIViewPropertyAnimator);
      v10[4] = sub_10005C4C8;
      void v10[5] = v5;
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 1107296256;
      void v10[2] = sub_100049AB4;
      v10[3] = &unk_10048A310;
      id v7 = _Block_copy(v10);
      id v8 = v1;
      swift_release();
      id v9 = [v6 initWithDuration:v7 controlPoint1:0.065 controlPoint2:0.25 animations:0.1];
      _Block_release(v7);
      *(double *)&v1[v4] = v2;
      [v9 startAnimation];
    }
  }
}

id sub_10005C460(void *a1)
{
  return [a1 setAlpha:];
}

uint64_t type metadata accessor for SeparatorView()
{
  return self;
}

uint64_t sub_10005C490()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_10005C4C8()
{
  return [*(id *)(v0 + 16) setAlpha:*(double *)(v0 + 24)];
}

uint64_t sub_10005C4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10005C4EC()
{
  return swift_release();
}

void sub_10005C4F4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v2 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    NSString v2 = 0;
  }
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [self alertControllerWithTitle:v2 message:v3 preferredStyle:1];

  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [self actionWithTitle:v4 style:0 handler:0];

  [v6 addAction:v5];
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  if ((void)xmmword_1004F8000)
  {
    [(id)xmmword_1004F8000 presentViewController:v6 animated:1 completion:0];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10005C684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a3;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005536C();
  id v14 = (void *)static OS_dispatch_queue.main.getter();
  id v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v18;
  v15[3] = a4;
  v15[4] = a1;
  v15[5] = a2;
  aBlock[4] = sub_10005C960;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_10048A360;
  id v16 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_100039BEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v19);
}

uint64_t sub_10005C920()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10005C960()
{
  sub_10005C4F4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10005C96C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10005C97C()
{
  return swift_release();
}

uint64_t sub_10005C984(char **a1, float a2)
{
  NSString v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    NSString v4 = sub_1000BE1F4((uint64_t)v4);
  }
  uint64_t v5 = *((void *)v4 + 2);
  v7[0] = (uint64_t)(v4 + 32);
  v7[1] = v5;
  uint64_t result = sub_1000705E0(v7, a2);
  *a1 = v4;
  return result;
}

uint64_t sub_10005CA00(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_10005CA84()
{
  uint64_t v0 = type metadata accessor for UUID();
  sub_100021818(v0, qword_1004F7FA0);
  sub_1000217E0(v0, (uint64_t)qword_1004F7FA0);
  return UUID.init()();
}

void sub_10005CAD0()
{
  dword_1004F7FB8 = 1059360187;
}

void sub_10005CAE4()
{
  dword_1004F7FBC = 1060439283;
}

id sub_10005CAF8()
{
  uint64_t v1 = qword_1004C6468;
  uint64_t v2 = *(void **)(v0 + qword_1004C6468);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1004C6468);
  }
  else
  {
    uint64_t v4 = v0;
    uint64_t v5 = *(void **)(v0 + qword_1004C6470);
    id v6 = objc_allocWithZone((Class)type metadata accessor for PersonHeightView());
    id v7 = sub_1001F14F8(v5);
    uint64_t v8 = *(void **)(v0 + v1);
    *(void *)(v4 + vsub_10004ACAC(2, 1, 1) = v7;
    id v3 = v7;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

void sub_10005CB7C(void *a1@<X8>)
{
  id v3 = (uint64_t *)(v1 + qword_1004C64A0);
  if ((*(unsigned char *)(v1 + qword_1004C64A0 + 48) & 1) == 0)
  {
    uint64_t v10 = v3[4];
    uint64_t v9 = v3[5];
    uint64_t v8 = v3[2];
    uint64_t v7 = v3[3];
    uint64_t v6 = *v3;
    uint64_t v5 = v3[1];
    goto LABEL_6;
  }
  uint64_t v4 = *(void *)(v1 + qword_1004C6498);
  if (v4)
  {
    swift_beginAccess();
    if (*(void *)(v4 + 208))
    {
      swift_retain();
      ADProcessor.transformer.getter();
      swift_release();
      ADTransformer.viewToAD.getter();
      uint64_t v6 = v11;
      uint64_t v5 = v12;
      uint64_t v8 = v13;
      uint64_t v7 = v14;
      uint64_t v10 = v15;
      uint64_t v9 = v16;
      swift_release();
      *id v3 = v11;
      v3[1] = v12;
      v3[2] = v13;
      v3[3] = v14;
      v3[4] = v15;
      v3[5] = v16;
      *((unsigned char *)v3 + 48) = 0;
LABEL_6:
      *a1 = v6;
      a1[1] = v5;
      a1[2] = v8;
      a1[3] = v7;
      a1[4] = v10;
      a1[5] = v9;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10005CC70(CGFloat *a1@<X8>)
{
  uint64_t v3 = v1 + qword_1004C64B0;
  if ((*(unsigned char *)(v1 + qword_1004C64B0 + 48) & 1) == 0)
  {
    CGFloat v20 = *(double *)(v3 + 32);
    CGFloat v19 = *(double *)(v3 + 40);
    CGFloat c = *(double *)(v3 + 16);
    CGFloat d = *(double *)(v3 + 24);
    CGFloat a = *(double *)v3;
    CGFloat b = *(double *)(v3 + 8);
    goto LABEL_8;
  }
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  uint64_t v4 = (void *)sub_1000A3850();
  sub_100016F7C((uint64_t)__dst);
  if (v4)
  {
    id v5 = [v4 camera];

    [v5 imageResolution];
    if (qword_1004C3238 != -1) {
      swift_once();
    }
    if ((*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80) & 1) == 0)
    {
      effectiveStatusBarOrientation.unsafeMutableAddressor();
      CGAffineTransformMakeScale((CGAffineTransform *)__src, 1.0, -1.0);
      long long v21 = *(_OWORD *)&__src[16];
      long long v23 = *(_OWORD *)__src;
      long long v6 = *(_OWORD *)&__src[32];
      CGAffineTransformMakeTranslation((CGAffineTransform *)__src, 0.0, 1.0);
      long long v7 = *(_OWORD *)__src;
      long long v8 = *(_OWORD *)&__src[16];
      long long v9 = *(_OWORD *)&__src[32];
      *(_OWORD *)__srCGFloat c = v23;
      *(_OWORD *)&__src[16] = v21;
      *(_OWORD *)&__src[32] = v6;
      *(_OWORD *)&t2.CGFloat a = v7;
      *(_OWORD *)&t2.CGFloat c = v8;
      *(_OWORD *)&t2.CGFloat tx = v9;
      CGAffineTransformConcat(&v25, (CGAffineTransform *)__src, &t2);
      long long v22 = *(_OWORD *)&v25.c;
      long long v24 = *(_OWORD *)&v25.a;
      CGFloat tx = v25.tx;
      CGFloat ty = v25.ty;
      ARCameraImageToViewTransform();
      long long v12 = *(_OWORD *)__src;
      long long v13 = *(_OWORD *)&__src[16];
      long long v14 = *(_OWORD *)&__src[32];
      *(_OWORD *)__srCGFloat c = v24;
      *(_OWORD *)&__src[16] = v22;
      *(CGFloat *)&__src[32] = tx;
      *(CGFloat *)&__src[40] = ty;
      *(_OWORD *)&t2.CGFloat a = v12;
      *(_OWORD *)&t2.CGFloat c = v13;
      *(_OWORD *)&t2.CGFloat tx = v14;
      CGAffineTransformConcat(&v25, (CGAffineTransform *)__src, &t2);
      CGFloat a = v25.a;
      CGFloat b = v25.b;
      CGFloat c = v25.c;
      CGFloat d = v25.d;
      CGFloat v20 = v25.tx;
      CGFloat v19 = v25.ty;
      *(CGFloat *)uint64_t v3 = v25.a;
      *(CGFloat *)(v3 + 8) = b;
      *(CGFloat *)(v3 + 16) = c;
      *(CGFloat *)(v3 + 24) = d;
      *(CGFloat *)(v3 + 3sub_10004ACAC(3, 1, 2) = v20;
      *(CGFloat *)(v3 + 40) = v19;
      *(unsigned char *)(v3 + 48) = 0;
LABEL_8:
      *a1 = a;
      a1[1] = b;
      a1[2] = c;
      a1[3] = d;
      a1[4] = v20;
      a1[5] = v19;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10005CEB8()
{
  void (*v1)(unint64_t *__return_ptr, uint64_t);
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;

  uint64_t v1 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v0 + qword_1004C6398) + 144);
  uint64_t v2 = swift_retain();
  v1(&v11, v2);
  swift_release();
  uint64_t v3 = v11;
  if (!(v11 >> 62))
  {
    uint64_t v4 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    return 0;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  if (!v4) {
    goto LABEL_10;
  }
LABEL_3:
  type metadata accessor for WorldPerson();
  ObjCClassFromMetauint64_t data = swift_getObjCClassFromMetadata();
  long long v6 = 4;
  while (1)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      long long v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      long long v7 = *(id *)(v3 + 8 * v6);
    }
    long long v8 = v7;
    long long v9 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
    if ([v7 isKindOfClass:ObjCClassFromMetadata]) {
      break;
    }

    ++v6;
    if (v9 == v4) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_dynamicCastClass();
  if (result) {
    return result;
  }

  return 0;
}

void sub_10005D030(uint64_t a1, uint64_t a2)
{
  id v5 = (char **)(v2 + qword_1004C64D8);
  long long v6 = *v5;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  void *v5 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    long long v6 = sub_10006E930(0, *((void *)v6 + 2) + 1, 1, v6);
    void *v5 = v6;
  }
  unint64_t v9 = *((void *)v6 + 2);
  unint64_t v8 = *((void *)v6 + 3);
  if (v9 >= v8 >> 1)
  {
    long long v6 = sub_10006E930((char *)(v8 > 1), v9 + 1, 1, v6);
    void *v5 = v6;
  }
  *((void *)v6 + sub_10004ACAC(3, 1, 2) = v9 + 1;
  uint64_t v10 = &v6[16 * v9];
  *((void *)v10 + 4) = a1;
  *((void *)v10 + 5) = a2;
  unint64_t v11 = *((void *)*v5 + 2);
  if (v11 >= 6) {
    sub_100072E4C(0, v11 - 5);
  }
  if (qword_1004C2AC8 != -1) {
    swift_once();
  }
  uint64_t v12 = a1;
  uint64_t v13 = a2;

  Log.debug(_:isPrivate:)(*(Swift::String *)&v12, 0);
}

uint64_t sub_10005D168(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v85 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v91 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v89 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v90 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v87);
  id v88 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6 - 8);
  id v86 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for Date();
  uint64_t v83 = *(void *)(v84 - 8);
  uint64_t v8 = __chkstk_darwin(v84);
  float v81 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  char v82 = (char *)&v81 - v10;
  uint64_t v11 = qword_1004C6360;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v13 = sub_100012894((uint64_t *)&unk_1004C6A80);
  uint64_t v14 = qword_1004C2E30;
  uint64_t v15 = v2;
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_1004F8630;
  id v17 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 272);
  swift_retain();
  *(void *)&v2[v11] = v17(KeyPath, v16);
  uint64_t v18 = qword_1004C6368;
  uint64_t v19 = sub_100012894(&qword_1004C7170);
  uint64_t v20 = swift_getKeyPath();
  uint64_t v21 = qword_1004F8630;
  long long v22 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 272);
  swift_retain();
  *(void *)&v15[v18] = v22(v20, v21);
  uint64_t v23 = qword_1004C6370;
  uint64_t v24 = swift_getKeyPath();
  uint64_t v25 = sub_100012894((uint64_t *)&unk_1004C6A90);
  uint64_t v26 = qword_1004F8630;
  id v27 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 272);
  swift_retain();
  *(void *)&v15[v23] = v27(v24, v26);
  uint64_t v28 = qword_1004C6378;
  uint64_t v29 = swift_getKeyPath();
  uint64_t v30 = sub_100012894((uint64_t *)&unk_1004C7450);
  uint64_t v31 = qword_1004F8630;
  id v32 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 272);
  swift_retain();
  *(void *)&v15[v28] = v32(v29, v31);
  uint64_t v33 = qword_1004C6380;
  uint64_t v34 = sub_100012894(&qword_1004C6AA0);
  uint64_t v35 = swift_getKeyPath();
  uint64_t v36 = qword_1004F8630;
  id v37 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 272);
  swift_retain();
  *(void *)&v15[v33] = v37(v35, v36);
  uint64_t v38 = qword_1004C6388;
  sub_100012894(&qword_1004C6AA8);
  swift_getKeyPath();
  *(void *)&v15[v38] = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v39 = qword_1004C6390;
  sub_100012894(&qword_1004C6AB0);
  swift_getKeyPath();
  *(void *)&v15[v39] = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v40 = qword_1004C6398;
  sub_100012894(&qword_1004C6AB8);
  swift_getKeyPath();
  *(void *)&v15[v40] = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v41 = qword_1004C63A0;
  sub_100012894(&qword_1004C6AC0);
  swift_getKeyPath();
  *(void *)&v15[v41] = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v42 = qword_1004C63B0;
  sub_100012894(&qword_1004C6AC8);
  swift_getKeyPath();
  *(void *)&v15[v42] = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v43 = qword_1004C63B8;
  uint64_t v44 = swift_getKeyPath();
  uint64_t v45 = sub_100012894(&qword_1004C6AD0);
  uint64_t v46 = qword_1004F8630;
  id v47 = *(uint64_t (**)(uint64_t, uint64_t))(v45 + 272);
  swift_retain();
  uint64_t result = v47(v44, v46);
  *(void *)&v15[v43] = result;
  if (qword_1004C3238 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v92 = (objc_class *)ObjectType;
  if (*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80))
  {
    __break(1u);
  }
  else
  {
    *(_OWORD *)&v15[qword_1004C63C0] = *(_OWORD *)(qword_1004F8AA8
                                                 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits
                                                 + 64);
    v15[qword_1004C63C8] = 0;
    NSString v49 = &v15[qword_1004C63D0];
    uint64_t v50 = sub_100012894(&qword_1004C6530);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 1, 1, v50);
    v15[qword_1004F7FC0] = 3;
    uint64_t v51 = qword_1004C63D8;
    sub_100012894(&qword_1004C6920);
    swift_allocObject();
    *(void *)&v15[v51] = PassthroughSubject.init()();
    Date.init()();
    *(void *)&v15[qword_1004C63F0] = 0x4000000000000000;
    uint64_t v52 = v83;
    id v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v83 + 56);
    uint64_t v54 = v84;
    v53(&v15[qword_1004C63F8], 1, 1, v84);
    v53(&v15[qword_1004C6400], 1, 1, v54);
    NSString v55 = &v15[qword_1004C6408];
    *(void *)NSString v55 = 0;
    *((void *)v55 + sub_10004ACAC(2, 1, 1) = 0;
    v55[16] = 1;
    uint64_t v56 = qword_1004C6410;
    type metadata accessor for PersonHeightInstrument.HeightResultContainer();
    uint64_t v57 = swift_allocObject();
    NSString v58 = sub_10006E280(0, 8, 0, (char *)_swiftEmptyArrayStorage);
    long long v93 = xmmword_1003FAA60;
    long long v95 = xmmword_1003FAA60;
    *(void *)&long long v96 = v58;
    sub_100012894(&qword_1004C6AD8);
    swift_allocObject();
    *(void *)(v57 + 16) = Synchronized.init(wrappedValue:)();
    *(void *)&v15[v56] = v57;
    uint64_t v59 = qword_1004C6418;
    Swift::String v60 = sub_10006E184(0, 8, 0, (char *)_swiftEmptyArrayStorage);
    long long v95 = v93;
    *(void *)&long long v96 = v60;
    sub_100012894(&qword_1004C6AE0);
    swift_allocObject();
    *(void *)&v15[v59] = Synchronized.init(wrappedValue:)();
    Date.init()();
    uint64_t v61 = qword_1004C6428;
    uint64_t v62 = v82;
    Date.init()();
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v81, v62, v54);
    sub_100012894(&qword_1004C6AE8);
    swift_allocObject();
    uint64_t v63 = Synchronized.init(wrappedValue:)();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v62, v54);
    *(void *)&v15[v61] = v63;
    v53(&v15[qword_1004C6430], 1, 1, v54);
    uint64_t v64 = qword_1004C6438;
    long long v65 = sub_10006E184(0, 8, 0, (char *)_swiftEmptyArrayStorage);
    long long v95 = v93;
    *(void *)&long long v96 = v65;
    swift_allocObject();
    *(void *)&v15[v64] = Synchronized.init(wrappedValue:)();
    v53(&v15[qword_1004C6448], 1, 1, v54);
    v53(&v15[qword_1004C6450], 1, 1, v54);
    v53(&v15[qword_1004C6458], 1, 1, v54);
    v53(&v15[qword_1004C6460], 1, 1, v54);
    *(void *)&v15[qword_1004C6468] = 0;
    *(void *)&v15[qword_1004C6478] = 0;
    *(void *)&v15[qword_1004C6480] = 0;
    *(void *)&v15[qword_1004C6488] = 0;
    Date.init()();
    objc_super v66 = &v15[qword_1004C64A0];
    *((_OWORD *)v66 + sub_10004ACAC(2, 1, 1) = 0u;
    *((_OWORD *)v66 + sub_10004ACAC(3, 1, 2) = 0u;
    *(_OWORD *)objc_super v66 = 0u;
    v66[48] = 1;
    Swift::String v67 = &v15[qword_1004C64A8];
    *((_OWORD *)v67 + sub_10004ACAC(2, 1, 1) = 0u;
    *((_OWORD *)v67 + sub_10004ACAC(3, 1, 2) = 0u;
    *(_OWORD *)Swift::String v67 = 0u;
    v67[48] = 1;
    long long v68 = &v15[qword_1004C64B0];
    *(_OWORD *)long long v68 = 0u;
    *((_OWORD *)v68 + sub_10004ACAC(2, 1, 1) = 0u;
    *((_OWORD *)v68 + sub_10004ACAC(3, 1, 2) = 0u;
    v68[48] = 1;
    *(void *)&v15[qword_1004C64B8] = 0;
    v15[qword_1004C64C0] = 0;
    uint64_t v69 = qword_1004C64C8;
    *(void *)&long long v95 = 0;
    sub_100012894(&qword_1004C6AF0);
    swift_allocObject();
    *(void *)&v15[v69] = Synchronized.init(wrappedValue:)();
    uint64_t v70 = qword_1004C64D0;
    LOBYTE(v95) = 0;
    sub_100012894(&qword_1004C6AF8);
    swift_allocObject();
    *(void *)&v15[v70] = Synchronized.init(wrappedValue:)();
    *(void *)&v15[qword_1004C64D8] = _swiftEmptyArrayStorage;
    v15[qword_1004C64E0] = 0;
    uint64_t v71 = qword_1004C64E8;
    long long v97 = 0u;
    long long v98 = 0u;
    long long v95 = 0u;
    long long v96 = 0u;
    char v99 = 1;
    sub_100012894(&qword_1004C6B00);
    swift_allocObject();
    *(void *)&v15[v71] = Synchronized.init(wrappedValue:)();
    long long v72 = (void *)v85;
    *(void *)&v15[qword_1004C6470] = v85;
    type metadata accessor for PersonHeightCoachingController();
    swift_allocObject();
    *(void *)&long long v93 = v72;
    *(void *)&v15[qword_1004C63A8] = sub_1001CE5E4();
    uint64_t v85 = sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
    static DispatchQoS.userInitiated.getter();
    *(void *)&long long v95 = _swiftEmptyArrayStorage;
    uint64_t v83 = sub_100073B90((unint64_t *)&qword_1004C6B50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
    char v82 = (char *)sub_100012894(&qword_1004CF220);
    uint64_t v84 = sub_10002179C((unint64_t *)&qword_1004C6B60, &qword_1004CF220);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v73 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
    uint64_t v89 = *(void *)(v89 + 104);
    uint64_t v74 = v90;
    uint64_t v75 = v91;
    ((void (*)(char *, void, uint64_t))v89)(v90, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v91);
    *(void *)&v15[qword_1004C63E0] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
    static DispatchQoS.userInitiated.getter();
    *(void *)&long long v95 = _swiftEmptyArrayStorage;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    ((void (*)(char *, uint64_t, uint64_t))v89)(v74, v73, v75);
    *(void *)&v15[qword_1004C6440] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
    uint64_t v76 = *(void *)MeasureCore.shared.unsafeMutableAddressor();
    swift_beginAccess();
    *(void *)&v15[qword_1004C6498] = *(void *)(v76 + 112);
    swift_retain();

    id v77 = v92;
    v94.receiver = v15;
    v94.super_class = v92;
    char v78 = (char *)objc_msgSendSuper2(&v94, "init");
    uint64_t v79 = *(void *)&v78[qword_1004C63A8];
    *((void *)&v96 + sub_10004ACAC(2, 1, 1) = v77;
    *(void *)&long long v97 = &off_10048A4A0;
    char v80 = v78;
    swift_retain();

    *(void *)&long long v95 = v80;
    swift_beginAccess();
    sub_100073BD8((uint64_t)&v95, v79 + 64, qword_1004C6B68);
    swift_endAccess();
    swift_release();
    return (uint64_t)v80;
  }
  return result;
}

uint64_t sub_10005DF58()
{
  id v1 = objc_allocWithZone(v0);
  sub_10005DF78();
  return sub_10005DF78();
}

uint64_t sub_10005DF78()
{
  id v1 = v0;
  swift_getObjectType();
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v67 = *(void *)(v2 - 8);
  uint64_t v68 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  objc_super v66 = (char *)&v65 - v6;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))qword_1004C6360;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v9 = sub_100012894((uint64_t *)&unk_1004C6A80);
  if (qword_1004C2E30 != -1) {
    goto LABEL_6;
  }
  while (1)
  {
    uint64_t v10 = qword_1004F8630;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 272);
    swift_retain();
    *(void *)((char *)v7 + (void)vsub_10004ACAC(2, 1, 1) = v11(KeyPath, v10);
    uint64_t v12 = qword_1004C6368;
    uint64_t v13 = sub_100012894(&qword_1004C7170);
    uint64_t v14 = swift_getKeyPath();
    uint64_t v15 = qword_1004F8630;
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 272);
    swift_retain();
    *(void *)&v1[v12] = v16(v14, v15);
    uint64_t v17 = qword_1004C6370;
    uint64_t v18 = swift_getKeyPath();
    uint64_t v19 = sub_100012894((uint64_t *)&unk_1004C6A90);
    uint64_t v20 = qword_1004F8630;
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 272);
    swift_retain();
    *(void *)&v1[v17] = v21(v18, v20);
    uint64_t v22 = qword_1004C6378;
    uint64_t v23 = swift_getKeyPath();
    uint64_t v24 = sub_100012894((uint64_t *)&unk_1004C7450);
    uint64_t v25 = qword_1004F8630;
    uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 272);
    swift_retain();
    *(void *)&v1[v22] = v26(v23, v25);
    uint64_t v27 = qword_1004C6380;
    uint64_t v28 = sub_100012894(&qword_1004C6AA0);
    uint64_t v29 = swift_getKeyPath();
    uint64_t v30 = qword_1004F8630;
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 272);
    swift_retain();
    *(void *)&v1[v27] = v7(v29, v30);
    uint64_t v31 = qword_1004C6388;
    sub_100012894(&qword_1004C6AA8);
    swift_getKeyPath();
    *(void *)&v1[v31] = MutableStateValue.__allocating_init(_:_:)();
    uint64_t v32 = qword_1004C6390;
    sub_100012894(&qword_1004C6AB0);
    swift_getKeyPath();
    *(void *)&v1[v32] = MutableStateValue.__allocating_init(_:_:)();
    uint64_t v33 = qword_1004C6398;
    sub_100012894(&qword_1004C6AB8);
    swift_getKeyPath();
    *(void *)&v1[v33] = MutableStateValue.__allocating_init(_:_:)();
    uint64_t v34 = qword_1004C63A0;
    sub_100012894(&qword_1004C6AC0);
    swift_getKeyPath();
    *(void *)&v1[v34] = MutableStateValue.__allocating_init(_:_:)();
    uint64_t v35 = qword_1004C63B0;
    sub_100012894(&qword_1004C6AC8);
    swift_getKeyPath();
    *(void *)&v1[v35] = MutableStateValue.__allocating_init(_:_:)();
    uint64_t v36 = qword_1004C63B8;
    uint64_t v37 = swift_getKeyPath();
    uint64_t v38 = sub_100012894(&qword_1004C6AD0);
    uint64_t v9 = qword_1004F8630;
    uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t))(v38 + 272);
    swift_retain();
    uint64_t v40 = v37;
    uint64_t KeyPath = v38;
    *(void *)&v1[v36] = v39(v40, v9);
    if (qword_1004C3238 != -1) {
      swift_once();
    }
    if ((*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80) & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_6:
    swift_once();
  }
  *(_OWORD *)&v1[qword_1004C63C0] = *(_OWORD *)(qword_1004F8AA8
                                              + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits
                                              + 64);
  v1[qword_1004C63C8] = 0;
  uint64_t v41 = &v1[qword_1004C63D0];
  uint64_t v42 = sub_100012894(&qword_1004C6530);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 1, 1, v42);
  v1[qword_1004F7FC0] = 3;
  uint64_t v43 = qword_1004C63D8;
  sub_100012894(&qword_1004C6920);
  swift_allocObject();
  *(void *)&v1[v43] = PassthroughSubject.init()();
  Date.init()();
  *(void *)&v1[qword_1004C63F0] = 0x4000000000000000;
  uint64_t v45 = v67;
  uint64_t v44 = v68;
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 56);
  v46(&v1[qword_1004C63F8], 1, 1, v68);
  v46(&v1[qword_1004C6400], 1, 1, v44);
  id v47 = &v1[qword_1004C6408];
  *(void *)id v47 = 0;
  *((void *)v47 + sub_10004ACAC(2, 1, 1) = 0;
  v47[16] = 1;
  uint64_t v48 = qword_1004C6410;
  type metadata accessor for PersonHeightInstrument.HeightResultContainer();
  uint64_t v49 = swift_allocObject();
  uint64_t v50 = sub_10006E280(0, 8, 0, (char *)_swiftEmptyArrayStorage);
  long long v65 = xmmword_1003FAA60;
  long long v69 = xmmword_1003FAA60;
  *(void *)&long long v70 = v50;
  sub_100012894(&qword_1004C6AD8);
  swift_allocObject();
  *(void *)(v49 + 16) = Synchronized.init(wrappedValue:)();
  *(void *)&v1[v48] = v49;
  uint64_t v51 = qword_1004C6418;
  uint64_t v52 = sub_10006E184(0, 8, 0, (char *)_swiftEmptyArrayStorage);
  long long v69 = v65;
  *(void *)&long long v70 = v52;
  sub_100012894(&qword_1004C6AE0);
  swift_allocObject();
  *(void *)&v1[v51] = Synchronized.init(wrappedValue:)();
  Date.init()();
  uint64_t v53 = qword_1004C6428;
  uint64_t v54 = v66;
  Date.init()();
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v5, v54, v44);
  sub_100012894(&qword_1004C6AE8);
  swift_allocObject();
  uint64_t v55 = Synchronized.init(wrappedValue:)();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v54, v44);
  *(void *)&v1[v53] = v55;
  v46(&v1[qword_1004C6430], 1, 1, v44);
  uint64_t v56 = qword_1004C6438;
  uint64_t v57 = sub_10006E184(0, 8, 0, (char *)_swiftEmptyArrayStorage);
  long long v69 = v65;
  *(void *)&long long v70 = v57;
  swift_allocObject();
  *(void *)&v1[v56] = Synchronized.init(wrappedValue:)();
  v46(&v1[qword_1004C6448], 1, 1, v44);
  v46(&v1[qword_1004C6450], 1, 1, v44);
  v46(&v1[qword_1004C6458], 1, 1, v44);
  v46(&v1[qword_1004C6460], 1, 1, v44);
  *(void *)&v1[qword_1004C6468] = 0;
  *(void *)&v1[qword_1004C6478] = 0;
  *(void *)&v1[qword_1004C6480] = 0;
  *(void *)&v1[qword_1004C6488] = 0;
  Date.init()();
  NSString v58 = &v1[qword_1004C64A0];
  *((_OWORD *)v58 + sub_10004ACAC(2, 1, 1) = 0u;
  *((_OWORD *)v58 + sub_10004ACAC(3, 1, 2) = 0u;
  *(_OWORD *)NSString v58 = 0u;
  v58[48] = 1;
  uint64_t v59 = &v1[qword_1004C64A8];
  *((_OWORD *)v59 + sub_10004ACAC(2, 1, 1) = 0u;
  *((_OWORD *)v59 + sub_10004ACAC(3, 1, 2) = 0u;
  *(_OWORD *)uint64_t v59 = 0u;
  v59[48] = 1;
  Swift::String v60 = &v1[qword_1004C64B0];
  *(_OWORD *)Swift::String v60 = 0u;
  *((_OWORD *)v60 + sub_10004ACAC(2, 1, 1) = 0u;
  *((_OWORD *)v60 + sub_10004ACAC(3, 1, 2) = 0u;
  v60[48] = 1;
  *(void *)&v1[qword_1004C64B8] = 0;
  v1[qword_1004C64C0] = 0;
  uint64_t v61 = qword_1004C64C8;
  *(void *)&long long v69 = 0;
  sub_100012894(&qword_1004C6AF0);
  swift_allocObject();
  *(void *)&v1[v61] = Synchronized.init(wrappedValue:)();
  uint64_t v62 = qword_1004C64D0;
  LOBYTE(v69) = 0;
  sub_100012894(&qword_1004C6AF8);
  swift_allocObject();
  *(void *)&v1[v62] = Synchronized.init(wrappedValue:)();
  *(void *)&v1[qword_1004C64D8] = _swiftEmptyArrayStorage;
  v1[qword_1004C64E0] = 0;
  uint64_t v63 = qword_1004C64E8;
  long long v71 = 0u;
  long long v72 = 0u;
  long long v69 = 0u;
  long long v70 = 0u;
  char v73 = 1;
  sub_100012894(&qword_1004C6B00);
  swift_allocObject();
  *(void *)&v1[v63] = Synchronized.init(wrappedValue:)();

  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10005E918()
{
  return swift_release();
}

void sub_10005E97C(uint64_t a1)
{
  void (*v45)(_OWORD *__return_ptr, uint64_t);
  uint64_t v46;
  unsigned char *v47;
  uint64_t v48;
  void (*v49)(_OWORD *__return_ptr, uint64_t);
  uint64_t v50;
  char v51;
  uint64_t v52;
  int v53;
  void (*v54)(void, void, void);
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t *__return_ptr, uint64_t);
  uint64_t v58;
  void (*v59)(char *, uint64_t, void);
  void (*v60)(void, void, void);
  double v61;
  double v62;
  char *v63;
  void (*v64)(void, void);
  void (*v65)(void, void, void);
  void (*v66)(char *, uint64_t, void);
  void (*v67)(void, void, void);
  char *v68;
  void (*v69)(void, void, void);
  uint64_t v70;
  double v71;
  double v72;
  void (*v73)(void, void);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  void *v77;
  unint64_t v78;
  id v79;
  id v80;
  unsigned __int8 v81;
  uint64_t (*v82)(_OWORD *);
  void (*v83)(_OWORD *, void);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  void (*v88)(_OWORD *__return_ptr, uint64_t);
  uint64_t v89;
  float v90;
  float v91;
  float32x4_t v92;
  float32x4_t v93;
  float32x4_t v94;
  float32x4_t v95;
  float v96;
  char v97;
  float v98;
  float v99;
  uint64_t (*v100)(uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(void *(*)(uint64_t), uint64_t);
  char *v105;
  Swift::String v106;
  Swift::String v107;
  uint64_t v108;
  void *v109;
  float32x4_t v110;
  float32x4_t v111;
  int32x4_t v112;
  float32x2_t v113;
  float32x2_t v114;
  float v115;
  float32x4_t v116;
  float v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  void *v124;
  char *v125;
  char *v126;
  uint64_t v127;
  id v128;
  void (*v129)(char *, char *, void);
  char *v130;
  char *v131;
  char *v132;
  double v133;
  double v134;
  uint64_t v135;
  void (*v136)(void, void);
  char *v137;
  void (*v138)(void, void);
  uint64_t v139;
  char *v140;
  unsigned char *v141;
  char *v142;
  double v143;
  double v144;
  void (*v145)(_OWORD *__return_ptr, uint64_t);
  uint64_t v146;
  void (*v147)(uint64_t *__return_ptr, uint64_t);
  uint64_t v148;
  void (*v149)(__n128 *__return_ptr, uint64_t);
  uint64_t v150;
  uint64_t v151;
  void (*v152)(__n128 *__return_ptr, uint64_t);
  uint64_t v153;
  float v154;
  void (*v155)(__n128 *__return_ptr, uint64_t);
  uint64_t v156;
  float32x2_t v157;
  float32x2_t v158;
  float32x2_t v159;
  float32x2_t v160;
  float32x2_t v161;
  float32x2_t v162;
  float32x2_t v163;
  BOOL v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  double v169;
  double v170;
  uint64_t v171;
  uint64_t v172;
  id v173;
  int v174;
  uint64_t v175;
  unsigned char *v176;
  void (*v177)(uint64_t *__return_ptr, uint64_t);
  uint64_t v178;
  char v179;
  void (*v180)(uint64_t *__return_ptr, uint64_t);
  uint64_t v181;
  void *v182;
  void *v183;
  void (*v184)(void);
  uint64_t v185;
  void (*v186)(unint64_t, char *, void);
  uint64_t v187;
  uint64_t v188;
  void (*v189)(_OWORD *__return_ptr, uint64_t);
  id v190;
  uint64_t v191;
  void (*v192)(_OWORD *__return_ptr, uint64_t);
  uint64_t v193;
  uint64_t v194;
  unsigned char *v195;
  char *v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  float32x4_t v205;
  char *v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  void (*v210)(void, void, void);
  unsigned char v211[512];
  __n128 v212[34];
  uint64_t v213[68];
  _OWORD v214[38];
  _OWORD v215[34];
  unsigned char v216[544];
  double *v217[64];
  unsigned char v218[512];
  unsigned char v219[512];
  unsigned char v220[528];

  __chkstk_darwin(a1);
  uint64_t v2 = v1;
  v204 = type metadata accessor for DispatchWorkItemFlags();
  v202 = *(void *)(v204 - 8);
  __chkstk_darwin(v204);
  v200 = (char *)&v185 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = type metadata accessor for DispatchQoS();
  v199 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  v198 = (char *)&v185 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100012894((uint64_t *)&unk_1004C68F0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v197 = (uint64_t)&v185 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  v208 = (char *)&v185 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  v205.i64[0] = (uint64_t)&v185 - v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v185 - v12;
  uint64_t v14 = type metadata accessor for Date();
  v209 = *(void *)(v14 - 8);
  v210 = (void (*)(void, void, void))v14;
  uint64_t v15 = *(void *)(v209 + 64);
  uint64_t v16 = __chkstk_darwin(v14);
  v196 = (char *)&v185 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v16);
  v203 = (char *)&v185 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  v206 = (char *)&v185 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v185 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v185 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v185 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v32 = (char *)&v185 - v31;
  __chkstk_darwin(v30);
  v207 = (uint64_t)&v185 - v33;
  if ((sub_10006131C() & 1) == 0
    || (uint64_t v34 = qword_1004C6368,
        swift_retain(),
        StateValue.wrappedValue.getter(),
        swift_release(),
        memcpy(v220, v216, 0x200uLL),
        uint64_t v35 = (void *)sub_1000A3850(),
        sub_100016F7C((uint64_t)v220),
        !v35))
  {
    uint64_t v43 = (uint64_t)v208;
    Date.init()();
    (*(void (**)(uint64_t, void, uint64_t, void (*)(void, void, void)))(v209 + 56))(v43, 0, 1, v210);
    uint64_t v44 = (uint64_t)&v2[qword_1004C6430];
    swift_beginAccess();
    sub_100073BD8(v43, v44, (uint64_t *)&unk_1004C68F0);
    swift_endAccess();
    *(void *)&v215[0] = 0;
    swift_retain();
    Synchronized.wrappedValue.setter();
    swift_release();
    uint64_t v45 = *(void (**)(_OWORD *__return_ptr, uint64_t))(**(void **)&v2[qword_1004C6388] + 144);
    uint64_t v46 = swift_retain();
    v45(v215, v46);
    swift_release();
    memcpy(v216, v215, 0x213uLL);
    sub_1000732CC((uint64_t)v216);
    if ((v216[392] & 1) == 0)
    {
      sub_10005D030(0xD000000000000020, 0x80000001004223B0);
      sub_1000607E8();
    }
    return;
  }

  uint64_t v194 = v34;
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(v219, v216, sizeof(v219));
  uint64_t v36 = (void *)sub_1000A3850();
  sub_100016F7C((uint64_t)v219);
  uint64_t v37 = v209;
  if (!v36) {
    goto LABEL_8;
  }
  id v38 = [v36 worldTrackingState];
  v195 = v2;
  id v39 = v38;

  uint64_t v40 = v39;
  uint64_t v2 = v195;
  if (!v40) {
    goto LABEL_8;
  }
  if (([v40 majorRelocalization] & 1) != 0
    || ([v40 minorRelocalization] & 1) != 0)
  {

LABEL_8:
    sub_10005D030(0xD00000000000001ALL, 0x80000001004223E0);
    uint64_t v41 = (uint64_t)v208;
    (*(void (**)(char *, uint64_t, uint64_t, void (*)(void, void, void)))(v37 + 56))(v208, 1, 1, v210);
    uint64_t v42 = (uint64_t)&v2[qword_1004C6430];
    swift_beginAccess();
    sub_100073BD8(v41, v42, (uint64_t *)&unk_1004C68F0);
    swift_endAccess();
    return;
  }
  uint64_t v190 = v40;
  Date.init()();
  unint64_t v193 = qword_1004C64D0;
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  if (v216[0] == 1)
  {
    v216[0] = 0;
    swift_retain();
    Synchronized.wrappedValue.setter();
    swift_release();
    sub_10005D030(0x20676E69646E6550, 0xED00007465736572);
    sub_1000607E8();
  }
  unint64_t v193 = qword_1004C6388;
  id v47 = v195;
  uint64_t v48 = *(void *)&v195[qword_1004C6388];
  uint64_t v49 = *(void (**)(_OWORD *__return_ptr, uint64_t))(*(void *)v48 + 144);
  uint64_t v191 = *(void *)v48 + 144;
  uint64_t v192 = v49;
  uint64_t v50 = swift_retain();
  v192(v215, v50);
  swift_release();
  memcpy(v216, v215, 0x213uLL);
  sub_1000732CC((uint64_t)v216);
  if ((v216[192] & 1) == 0)
  {
    simd_float4x4.position.getter();
    sub_1000617CC();
    if ((v51 & 1) == 0)
    {
      sub_10005D030(0xD000000000000016, 0x8000000100422400);
      sub_1000607E8();
    }
  }
  uint64_t v52 = (uint64_t)&v47[qword_1004C63F8];
  swift_beginAccess();
  sub_1000735DC(v52, (uint64_t)v13, (uint64_t *)&unk_1004C68F0);
  uint64_t v192 = *(void (**)(_OWORD *__return_ptr, uint64_t))(v37 + 48);
  uint64_t v53 = ((uint64_t (*)(char *, uint64_t, void))v192)(v13, 1, v210);
  uint64_t v191 = v37 + 48;
  if (v53 == 1)
  {
    sub_10002B9C0((uint64_t)v13, (uint64_t *)&unk_1004C68F0);
    uint64_t v54 = v210;
    uint64_t v55 = v205.i64[0];
    goto LABEL_26;
  }
  (*(void (**)(char *, char *, void))(v37 + 32))(v32, v13, v210);
  uint64_t v189 = *(void (**)(_OWORD *__return_ptr, uint64_t))(**(void **)&v47[v193] + 144);
  uint64_t v56 = swift_retain();
  v189(v214, v56);
  swift_release();
  memcpy(v215, v214, 0x213uLL);
  sub_1000732CC((uint64_t)v215);
  if ((BYTE8(v215[28]) & 1) == 0)
  {
    objc_super v66 = *(void (**)(char *, uint64_t, void))(v37 + 16);
    uint64_t v67 = v210;
    v66(v29, v207, v210);
    v66(v26, (uint64_t)v32, v67);
    goto LABEL_24;
  }
  uint64_t v57 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)&v47[v193] + 144);
  NSString v58 = swift_retain();
  v57(v213, v58);
  swift_release();
  memcpy(v214, v213, 0x213uLL);
  sub_1000732CC((uint64_t)v214);
  LODWORD(v189) = BYTE8(v214[24]);
  uint64_t v59 = *(void (**)(char *, uint64_t, void))(v37 + 16);
  Swift::String v60 = v210;
  v59(v29, v207, v210);
  v59(v26, (uint64_t)v32, v60);
  if (v189)
  {
LABEL_24:
    uint64_t v68 = v26;
    uint64_t v64 = *(void (**)(void, void))(v37 + 8);
    long long v69 = v210;
    v64(v68, v210);
    v64(v29, v69);
    uint64_t v54 = v69;
    uint64_t v55 = v205.i64[0];
    goto LABEL_25;
  }
  Date.timeIntervalSince(_:)();
  uint64_t v62 = v61;
  uint64_t v63 = v26;
  uint64_t v64 = *(void (**)(void, void))(v37 + 8);
  long long v65 = v210;
  v64(v63, v210);
  v64(v29, v65);
  uint64_t v54 = v65;
  uint64_t v55 = v205.i64[0];
  if (v62 > 0.4)
  {
    sub_10005D030(0xD000000000000012, 0x8000000100422460);
    sub_1000607E8();
    v64(v32, v65);
    goto LABEL_26;
  }
LABEL_25:
  v64(v32, v54);
LABEL_26:
  long long v70 = (uint64_t)&v195[qword_1004C6430];
  swift_beginAccess();
  sub_1000735DC(v70, v55, (uint64_t *)&unk_1004C68F0);
  if (((unsigned int (*)(uint64_t, uint64_t, void))v192)(v55, 1, v54) == 1)
  {
    sub_10002B9C0(v55, (uint64_t *)&unk_1004C68F0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, void))(v37 + 32))(v23, v55, v54);
    Date.timeIntervalSince(_:)();
    long long v72 = v71;
    char v73 = *(void (**)(void, void))(v37 + 8);
    v73(v23, v54);
    if (v72 < 2.0)
    {
      v73(v207, v54);
LABEL_74:

      return;
    }
  }
  uint64_t v74 = v37 + 56;
  uint64_t v75 = (uint64_t)v208;
  uint64_t v189 = *(void (**)(_OWORD *__return_ptr, uint64_t))(v37 + 56);
  ((void (*)(char *, uint64_t, uint64_t, void (*)(void, void, void)))v189)(v208, 1, 1, v54);
  swift_beginAccess();
  sub_100073BD8(v75, v70, (uint64_t *)&unk_1004C68F0);
  swift_endAccess();
  uint64_t v76 = v195;
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  id v77 = *(void **)&v215[0];
  if (*(void *)&v215[0])
  {
    *(void *)&v215[0] = 0;
    swift_retain();
    Synchronized.wrappedValue.setter();
    swift_release();
    swift_retain();
    StateValue.wrappedValue.getter();
    swift_release();
    memcpy(v218, v215, sizeof(v218));
    sub_100061940(v77, v218);
    sub_100016F7C((uint64_t)v218);
  }
  char v78 = sub_100061C98();
  if ((v78 & 0x100000000) != 0)
  {
    swift_retain();
    Synchronized.wrappedValue.getter();
    sub_100012894(&qword_1004C6910);
    RingBuffer.clear()();
  }
  else
  {
    LODWORD(v213[0]) = v78;
    swift_retain();
    Synchronized.wrappedValue.getter();
    sub_100012894(&qword_1004C6910);
    RingBuffer.append(_:)();
  }
  v214[0] = v215[0];
  *(void *)&v214[1] = *(void *)&v215[1];
  Synchronized.wrappedValue.setter();
  swift_release();
  uint64_t v79 = [*(id *)&v76[qword_1004C6470] session];
  char v80 = [v79 configuration];

  if (!v80)
  {
    __break(1u);
    JUMPOUT(0x1000607D8);
  }
  float v81 = [v80 frameSemantics];

  char v82 = *(uint64_t (**)(_OWORD *))(**(void **)&v76[v193] + 400);
  swift_retain();
  uint64_t v83 = (void (*)(_OWORD *, void))v82(v215);
  *(unsigned char *)(v84 + sub_10004ACAC(3, 1, 2) = v81 & 1;
  v83(v215, 0);
  swift_release();
  sub_100061DF0(v207);
  swift_retain();
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  uint64_t v85 = *(void *)(*(void *)&v215[1] + 16);
  swift_release();
  swift_bridgeObjectRelease();
  id v86 = v206;
  uint64_t v188 = v74;
  if (v85 == 8)
  {
    uint64_t v87 = v193;
    id v88 = *(void (**)(_OWORD *__return_ptr, uint64_t))(**(void **)&v76[v193] + 144);
    uint64_t v89 = swift_retain();
    v88(v214, v89);
    swift_release();
    memcpy(v215, v214, 0x213uLL);
    sub_1000732CC((uint64_t)v215);
    if (BYTE8(v215[28]))
    {
      swift_retain();
      sub_10006CD78();
      uint64_t v91 = v90;
      swift_release();
      swift_retain();
      *(double *)v92.i64 = sub_10006CF1C();
      v205 = v92;
      swift_release();
      swift_retain();
      StateValue.wrappedValue.getter();
      swift_release();
      memcpy(v214, v213, 0x200uLL);
      sub_100016F7C((uint64_t)v214);
      simd_float4x4.position.getter();
      objc_super v94 = vsubq_f32(v205, v93);
      long long v95 = vmulq_f32(v94, v94);
      long long v96 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v95, 2), vaddq_f32(v95, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v95.f32, 1))).f32[0]);
      sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
      long long v97 = static UIDevice.isIPad()();
      long long v98 = 0.0;
      if (v97) {
        long long v98 = (float)((float)(v96 * 0.0169) + (float)(v96 * (float)(v96 * -0.0053))) + -0.0089;
      }
      char v99 = v91 - v98;
      uint64_t v100 = *(uint64_t (**)(uint64_t))(**(void **)&v76[v87] + 200);
      uint64_t v101 = swift_retain();
      uint64_t v102 = v100(v101);
      swift_release();
      unint64_t v103 = swift_allocObject();
      *(float *)(v103 + 16) = v99;
      *(void *)(v103 + 24) = v76;
      uint64_t v104 = *(void (**)(void *(*)(uint64_t), uint64_t))(*(void *)v102 + 416);
      char v105 = v76;
      v104(sub_100073498, v103);
      id v86 = v206;
      uint64_t v54 = v210;
      swift_release();
      swift_release();
      v213[0] = 0;
      v213[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(29);
      v106._uint64_t countAndFlagsBits = 0xD000000000000014;
      v106._object = (void *)0x8000000100422440;
      String.append(_:)(v106);
      Float.write<A>(to:)();
      v107._uint64_t countAndFlagsBits = 0x2E726F72726520;
      v107._object = (void *)0xE700000000000000;
      String.append(_:)(v107);
      sub_10005D030(v213[0], v213[1]);
      swift_bridgeObjectRelease();
      uint64_t v108 = sub_10005CEB8();
      if (v108)
      {
        uint64_t v109 = (void *)v108;
        swift_retain();
        StateValue.wrappedValue.getter();
        swift_release();
        memcpy(v213, v212, 0x200uLL);
        sub_100016F7C((uint64_t)v213);
        simd_float4x4.position.getter();
        uint64_t v111 = vsubq_f32(v205, v110);
        id v112 = (int32x4_t)vmulq_f32(v111, v111);
        v112.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v112, 2), vadd_f32(*(float32x2_t *)v112.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v112.i8, 1))).u32[0];
        uint64_t v113 = vrsqrte_f32((float32x2_t)v112.u32[0]);
        uint64_t v114 = vmul_f32(v113, vrsqrts_f32((float32x2_t)v112.u32[0], vmul_f32(v113, v113)));
        v205 = vmulq_n_f32(v111, vmul_f32(v114, vrsqrts_f32((float32x2_t)v112.u32[0], vmul_f32(v114, v114))).f32[0]);
        unint64_t v115 = *(float *)Float.piDiv2.unsafeMutableAddressor();
        uint64_t v116 = vmulq_f32(*(float32x4_t *)SIMD3<>.up.unsafeMutableAddressor(), v205);
        objc_super v117 = (float)(v115
                     - fabsf(acosf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v116, 2), vaddq_f32(v116, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v116.f32, 1))).f32[0])))* 57.296;
        if (qword_1004C2C10 != -1) {
          swift_once();
        }
        sub_100141398(v109, v91, v96, v117);
      }
      id v118 = (uint64_t)v208;
      ((void (*)(char *, uint64_t, uint64_t, void (*)(void, void, void)))v189)(v208, 1, 1, v54);
      id v119 = (uint64_t)&v105[qword_1004C6460];
      swift_beginAccess();
      sub_100073BD8(v118, v119, (uint64_t *)&unk_1004C68F0);
      swift_endAccess();
      uint64_t v76 = v195;
    }
  }
  v205.i64[0] = *(void *)&v76[qword_1004C6440];
  id v120 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v121 = v209;
  v210 = *(void (**)(void, void, void))(v209 + 16);
  v210(v86, v207, v54);
  uint64_t v122 = (*(unsigned __int8 *)(v121 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
  uint64_t v123 = swift_allocObject();
  *(void *)(v123 + 16) = v120;
  uint64_t v186 = *(void (**)(unint64_t, char *, void))(v121 + 32);
  v187 = v121 + 32;
  v186(v123 + v122, v86, v54);
  *(void *)&v215[2] = sub_1000733FC;
  *((void *)&v215[2] + sub_10004ACAC(2, 1, 1) = v123;
  *(void *)&v215[0] = _NSConcreteStackBlock;
  *((void *)&v215[0] + sub_10004ACAC(2, 1, 1) = 1107296256;
  *(void *)&v215[1] = sub_100049AB4;
  *((void *)&v215[1] + sub_10004ACAC(2, 1, 1) = &unk_10048A648;
  uint64_t v124 = _Block_copy(v215);
  swift_retain();
  uint64_t v125 = v198;
  static DispatchQoS.unspecified.getter();
  *(void *)&v214[0] = _swiftEmptyArrayStorage;
  sub_100073B90((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
  uint64_t v126 = v200;
  uint64_t v127 = v204;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v124);
  (*(void (**)(char *, uint64_t))(v202 + 8))(v126, v127);
  (*(void (**)(char *, uint64_t))(v199 + 8))(v125, v201);
  swift_release();
  swift_release();
  uint64_t v128 = [self standardUserDefaults];
  LODWORD(v120) = [v128 kPersonHeightDebugViewEnabled];

  uint64_t v129 = (void (*)(char *, char *, void))v210;
  uint64_t v130 = v203;
  v210(v203, v207, v54);
  if (v120)
  {
    uint64_t v131 = &v195[qword_1004C6490];
    swift_beginAccess();
    uint64_t v132 = v206;
    v129(v206, v131, v54);
    Date.timeIntervalSince(_:)();
    uint64_t v134 = v133;
    uint64_t v135 = v209;
    char v136 = *(void (**)(void, void))(v209 + 8);
    v136(v132, v54);
    uint64_t v137 = v130;
    uint64_t v138 = v136;
    v136(v137, v54);
    if (v134 > 0.0333333333)
    {
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, void))(v135 + 24))(v131, v207, v54);
      swift_endAccess();
      sub_1000630E4();
    }
    uint64_t v139 = v193;
    uint64_t v129 = (void (*)(char *, char *, void))v210;
  }
  else
  {
    Swift::String v140 = v130;
    uint64_t v138 = *(void (**)(void, void))(v209 + 8);
    v138(v140, v54);
    uint64_t v132 = v206;
    uint64_t v139 = v193;
  }
  uint64_t v141 = v195;
  uint64_t v142 = &v195[qword_1004C63E8];
  swift_beginAccess();
  v129(v132, v142, v54);
  Date.timeIntervalSince(_:)();
  v144 = v143;
  v138(v132, v54);
  if (1.0 / *(double *)&v141[qword_1004C63F0] < v144)
  {
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, void))(v209 + 24))(v142, v207, v54);
    swift_endAccess();
    swift_retain();
    StateValue.wrappedValue.getter();
    swift_release();
    memcpy(v217, v215, sizeof(v217));
    sub_1000633C8(v217);
    sub_100016F7C((uint64_t)v217);
  }
  v145 = *(void (**)(_OWORD *__return_ptr, uint64_t))(**(void **)&v141[v139] + 144);
  uint64_t v146 = swift_retain();
  v145(v214, v146);
  swift_release();
  memcpy(v215, v214, 0x213uLL);
  sub_1000732CC((uint64_t)v215);
  if ((BYTE8(v215[24]) & 1) == 0)
  {
    uint64_t v147 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)&v141[v139] + 144);
    uint64_t v148 = swift_retain();
    v147(v213, v148);
    swift_release();
    memcpy(v214, v213, 0x213uLL);
    sub_1000732CC((uint64_t)v214);
    if (BYTE8(v214[28]))
    {
      uint64_t v149 = *(void (**)(__n128 *__return_ptr, uint64_t))(**(void **)&v141[v139] + 144);
      v150 = swift_retain();
      v149(v212, v150);
      swift_release();
      memcpy(v213, v212, 0x213uLL);
      sub_1000732CC((uint64_t)v213);
      if (BYTE2(v213[0]) == 1)
      {
        uint64_t v151 = qword_1004C6370;
        v152 = *(void (**)(__n128 *__return_ptr, uint64_t))(**(void **)&v141[qword_1004C6370] + 144);
        uint64_t v153 = swift_retain();
        v152(v212, v153);
        swift_release();
        if ((v212[6].n128_u8[8] & 1) != 0
          || (uint64_t v154 = v212[6].n128_f32[1],
              uint64_t v155 = *(void (**)(__n128 *__return_ptr, uint64_t))(**(void **)&v141[v151] + 144),
              id v156 = swift_retain(),
              v155(v212, v156),
              swift_release(),
              (v212[7].n128_u8[0] & 1) != 0)
          || v154 >= 0.075
          || v212[6].n128_f32[3] >= 0.4)
        {
          sub_10005D030(0xD000000000000016, 0x8000000100422420);
        }
        else
        {
          swift_retain();
          StateValue.wrappedValue.getter();
          swift_release();
          memcpy(v212, v211, 0x200uLL);
          sub_10006389C(v212, v207);
          sub_100016F7C((uint64_t)v212);
        }
        uint64_t v132 = v206;
      }
    }
  }
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  if (v214[4])
  {
    v141[qword_1004C63C8] = 0;
    goto LABEL_69;
  }
  v210 = *(void (**)(void, void, void))&v214[3];
  SIMD2<>.init(_:)();
  v158 = v157;
  SIMD2<>.init(_:)();
  uint64_t v160 = v159;
  SIMD2<>.init(_:)();
  SIMD2<>.init(_:)();
  uint64_t v162 = v161;
  SIMD2<>.init(_:)();
  v164 = sub_100132260(v158, v160, v162, v163);
  v141[qword_1004C63C8] = v164;
  if (v164)
  {
    if (!sub_1000643EC())
    {
      v165 = (uint64_t)&v141[qword_1004C6458];
      swift_beginAccess();
      v166 = v165;
      v167 = v197;
      sub_1000735DC(v166, v197, (uint64_t *)&unk_1004C68F0);
      if (((unsigned int (*)(uint64_t, uint64_t, void))v192)(v167, 1, v54) == 1)
      {
        sub_10002B9C0(v167, (uint64_t *)&unk_1004C68F0);
        uint64_t v141 = v195;
        goto LABEL_67;
      }
      v168 = v196;
      v186((unint64_t)v196, (char *)v167, v54);
      Date.init()();
      Date.timeIntervalSince(_:)();
      v170 = v169;
      v138(v132, v54);
      v138(v168, v54);
      uint64_t v141 = v195;
      if (v170 >= 0.5)
      {
LABEL_67:
        if (sub_100064744(0.0)) {
          goto LABEL_69;
        }
      }
    }
    uint64_t v171 = (uint64_t)v208;
    Date.init()();
    ((void (*)(uint64_t, void, uint64_t, void (*)(void, void, void)))v189)(v171, 0, 1, v54);
    v172 = (uint64_t)&v141[qword_1004C6460];
    swift_beginAccess();
    sub_100073BD8(v171, v172, (uint64_t *)&unk_1004C68F0);
    swift_endAccess();
  }
LABEL_69:
  sub_100064890();
  v173 = sub_10005CAF8();
  swift_retain();
  Synchronized.wrappedValue.getter();

  swift_release();
  v174 = LOBYTE(v214[0]);
  v175 = qword_1004C64E0;
  switch(v141[qword_1004C64E0])
  {
    case 1:
      v138(v207, v54);

      if (v174)
      {
        v179 = 2;
        goto LABEL_83;
      }
      return;
    case 2:
      if (v214[0])
      {
        v138(v207, v54);
        goto LABEL_74;
      }
      v180 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)&v195[v139] + 144);
      v181 = swift_retain();
      v180(v213, v181);
      swift_release();
      memcpy(v214, v213, 0x213uLL);
      sub_1000732CC((uint64_t)v214);
      if (BYTE8(v214[28])) {
        goto LABEL_81;
      }
      uint64_t v182 = (void *)sub_10005CEB8();
      if (v182)
      {
        uint64_t v183 = v182;
        uint64_t v184 = (void (*)(void))(*(uint64_t (**)(void))((swift_isaMask & *v182) + 0x130))();
        v184();

        swift_release();
LABEL_81:

        v138(v207, v54);
      }
      else
      {
        v138(v207, v54);
      }
      v179 = 3;
LABEL_83:
      v195[v175] = v179;
      break;
    case 3:
      v138(v207, v54);

      v195[v175] = 0;
      return;
    default:
      uint64_t v176 = v195;
      v177 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)&v195[v139] + 144);
      v178 = swift_retain();
      v177(v213, v178);

      swift_release();
      memcpy(v214, v213, 0x213uLL);
      v138(v207, v54);
      sub_1000732CC((uint64_t)v214);
      if ((BYTE8(v214[28]) & 1) == 0) {
        v176[v175] = 1;
      }
      return;
  }
}

uint64_t sub_1000607E8()
{
  void (*v33)(long long *__return_ptr, uint64_t);
  uint64_t v34;
  unint64_t v35;
  id v36;
  void *v37;
  uint64_t (*v38)(long long *);
  void (*v39)(long long *, void);
  void (*v40)(long long *, void);
  id v41;
  uint64_t v42;
  void (*v43)(long long *);
  uint64_t v44;
  uint64_t result;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  long long v51;
  uint64_t (*v52)(uint64_t);
  long long aBlock;
  uint64_t (*v54)(uint64_t);
  void *v55;
  void (*v56)();
  uint64_t v57;

  uint64_t v1 = sub_100012894((uint64_t *)&unk_1004C68F0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v50 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v48 = *(void *)(v7 - 8);
  uint64_t v49 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1004C2AC8 != -1) {
    swift_once();
  }
  v10._object = (void *)0x8000000100422350;
  v10._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  Log.debug(_:isPrivate:)(v10, 0);
  uint64_t v11 = (void *)Contexts.UIKit.init()();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v0;
  uint64_t v56 = sub_10006DC44;
  uint64_t v57 = v12;
  *(void *)&CATransform3D aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + sub_10004ACAC(2, 1, 1) = 1107296256;
  uint64_t v54 = sub_100049AB4;
  uint64_t v55 = &unk_10048A5D0;
  uint64_t v13 = _Block_copy(&aBlock);
  uint64_t v14 = v0;
  static DispatchQoS.unspecified.getter();
  *(void *)&uint64_t v51 = _swiftEmptyArrayStorage;
  sub_100073B90((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v50 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v9, v49);
  swift_release();
  uint64_t v15 = *(uint64_t (**)(uint64_t))(**(void **)&v14[qword_1004C6388] + 200);
  uint64_t v16 = swift_retain();
  uint64_t v17 = v15(v16);
  swift_release();
  (*(void (**)(double (*)(uint64_t), void))(*(void *)v17 + 416))(sub_100065118, 0);
  swift_release();
  uint64_t v18 = &v14[qword_1004C6408];
  *(void *)uint64_t v18 = 0;
  *((void *)v18 + sub_10004ACAC(2, 1, 1) = 0;
  v18[16] = 1;
  v14[qword_1004C64E0] = 0;
  v14[qword_1004C63C8] = 0;
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v3, 1, 1, v19);
  uint64_t v21 = (uint64_t)&v14[qword_1004C6450];
  swift_beginAccess();
  sub_100073BD8((uint64_t)v3, v21, (uint64_t *)&unk_1004C68F0);
  swift_endAccess();
  v20(v3, 1, 1, v19);
  uint64_t v22 = (uint64_t)&v14[qword_1004C6458];
  swift_beginAccess();
  sub_100073BD8((uint64_t)v3, v22, (uint64_t *)&unk_1004C68F0);
  swift_endAccess();
  v20(v3, 1, 1, v19);
  uint64_t v23 = (uint64_t)&v14[qword_1004C6448];
  swift_beginAccess();
  sub_100073BD8((uint64_t)v3, v23, (uint64_t *)&unk_1004C68F0);
  swift_endAccess();
  uint64_t v24 = sub_10005CEB8();
  if (v24)
  {
    uint64_t v25 = (void *)v24;
    uint64_t v26 = *(uint64_t (**)(long long *))(**(void **)&v14[qword_1004C6398] + 400);
    swift_retain();
    uint64_t v27 = (void (*)(long long *, void))v26(&aBlock);
    uint64_t v28 = (*(uint64_t (**)(void))((swift_isaMask & *v25) + 0xB8))();
    sub_100030354(v28, v29);
    swift_bridgeObjectRelease();
    v27(&aBlock, 0);
    swift_release();
    uint64_t v30 = *(void *)&v14[qword_1004C63B0];
    *(void *)&CATransform3D aBlock = 0xC000000000000008;
    uint64_t v31 = *(void (**)(long long *))(*(void *)v30 + 392);
    swift_retain();
    v31(&aBlock);

    swift_release();
  }
  uint64_t v32 = qword_1004C63A0;
  uint64_t v33 = *(void (**)(long long *__return_ptr, uint64_t))(**(void **)&v14[qword_1004C63A0] + 144);
  uint64_t v34 = swift_retain();
  v33(&aBlock, v34);
  swift_release();
  *(void *)&uint64_t v51 = v54;
  swift_bridgeObjectRetain();
  sub_100012894(&qword_1004C4358);
  sub_100012894(&qword_1004C6900);
  swift_dynamicCast();
  uint64_t v35 = aBlock;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v35 >> 62))
  {
    if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_7;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v44) {
    goto LABEL_15;
  }
LABEL_7:
  if ((v35 & 0xC000000000000001) != 0)
  {
    uint64_t v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_19;
    }
    uint64_t v36 = *(id *)(v35 + 32);
  }
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  id v38 = *(uint64_t (**)(long long *))(**(void **)&v14[v32] + 400);
  swift_retain();
  id v39 = (void (*)(long long *, void))v38(&aBlock);
  type metadata accessor for WorldLine();
  if (swift_dynamicCastClass()
    || (type metadata accessor for WorldRectangle(), swift_dynamicCastClass())
    || (type metadata accessor for WorldPerson(), swift_dynamicCastClass()))
  {
    swift_getKeyPath();
    uint64_t v40 = (void (*)(long long *, void))swift_modifyAtWritableKeyPath();
    sub_100069F24((uint64_t)v37, (unint64_t)&type metadata accessor for MeasureObject, (uint64_t)sub_1000305A4);

    v40(&v51, 0);
    swift_release();
    v39(&aBlock, 0);
    swift_release();
    uint64_t v42 = *(void *)&v14[qword_1004C63B0];
    *(void *)&CATransform3D aBlock = 0xC000000000000008;
    uint64_t v43 = *(void (**)(long long *))(*(void *)v42 + 392);
    swift_retain();
    v43(&aBlock);

    swift_release();
LABEL_16:
    swift_retain();
    swift_retain();
    Synchronized.wrappedValue.getter();
    sub_100012894(&qword_1004C6908);
    RingBuffer.clear()();
    uint64_t v51 = aBlock;
    uint64_t v52 = v54;
    Synchronized.wrappedValue.setter();
    swift_release();
    swift_release();
    swift_retain();
    Synchronized.wrappedValue.getter();
    sub_100012894(&qword_1004C6910);
    RingBuffer.clear()();
    uint64_t v51 = aBlock;
    uint64_t v52 = v54;
    Synchronized.wrappedValue.setter();
    swift_release();
    swift_retain();
    Synchronized.wrappedValue.getter();
    RingBuffer.clear()();
    uint64_t v51 = aBlock;
    uint64_t v52 = v54;
    Synchronized.wrappedValue.setter();
    return swift_release();
  }
LABEL_19:
  *(void *)&uint64_t v51 = 0;
  *((void *)&v51 + sub_10004ACAC(2, 1, 1) = 0xE000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  *(void *)&uint64_t v51 = 0xD00000000000001CLL;
  *((void *)&v51 + sub_10004ACAC(2, 1, 1) = 0x8000000100422390;
  swift_getObjectType();
  v46._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v46);
  swift_bridgeObjectRelease();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

float *sub_10006131C()
{
  void (*v2)(_OWORD *__return_ptr, uint64_t);
  uint64_t v3;
  void (*v4)(_OWORD *__return_ptr, uint64_t);
  uint64_t v5;
  void *v6;
  id v7;
  float v8;
  float v9;
  void (*v10)(_OWORD *__return_ptr, uint64_t);
  uint64_t v11;
  void (*v12)(_OWORD *__return_ptr, uint64_t);
  uint64_t v13;
  unint64_t v14;
  float *result;
  float v16;
  float v17;
  int64x2_t v18;
  void (*v19)(_OWORD *__return_ptr, uint64_t);
  uint64_t v20;
  void (*v21)(_OWORD *__return_ptr, uint64_t);
  uint64_t v22;
  long long v23;
  Swift::Bool v24;
  float v25;
  _OWORD v26[7];
  char v27;
  _OWORD v28[34];
  _OWORD __src[34];
  _OWORD v30[9];
  uint64_t v31;
  uint64_t v32[18];
  unsigned char __dst[512];

  uint64_t v1 = v0;
  uint64_t v2 = *(void (**)(_OWORD *__return_ptr, uint64_t))(**(void **)(v0 + qword_1004C63B0) + 144);
  uint64_t v3 = swift_retain();
  v2(__src, v3);
  swift_release();
  if ((*(void *)&__src[0] >> 62) - 1 >= 2)
  {
    if (!(*(void *)&__src[0] >> 62))
    {
      sub_10001F780(*(unint64_t *)&__src[0]);
      return 0;
    }
    *((void *)&v23 + sub_10004ACAC(2, 1, 1) = *(void *)&__src[0];
    *(void *)&uint64_t v23 = *(void *)&__src[0] + 0x4000000000000000;
    if ((unint64_t)(v23 >> 3) >= 2) {
      return 0;
    }
  }
  else
  {
    sub_10001F780(*(unint64_t *)&__src[0]);
  }
  uint64_t v4 = *(void (**)(_OWORD *__return_ptr, uint64_t))(**(void **)(v0 + qword_1004C63B8) + 144);
  uint64_t v5 = swift_retain();
  v4(__src, v5);
  swift_release();
  v30[6] = __src[6];
  v30[7] = __src[7];
  v30[8] = __src[8];
  uint64_t v31 = *(void *)&__src[9];
  _OWORD v30[2] = __src[2];
  v30[3] = __src[3];
  v30[4] = __src[4];
  v30[5] = __src[5];
  v30[0] = __src[0];
  v30[1] = __src[1];
  sub_100016B40((id *)v30);
  sub_100016F3C((uint64_t)v30);
  sub_100016FEC((uint64_t)v30, (uint64_t)v32, (uint64_t *)&unk_1004CEA30);
  if (sub_100016B28(v32) != 1)
  {
    sub_100016B6C((id *)v30);
    return 0;
  }
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  uint64_t v6 = (void *)sub_1000A3850();
  sub_100016F7C((uint64_t)__dst);
  if (!v6) {
    return 0;
  }
  uint64_t v7 = [v6 camera];
  [v7 transform];

  simd_float4x4.forward.getter();
  uint64_t v9 = fabsf(v8);
  if (qword_1004C2978 != -1)
  {
    uint64_t v25 = v9;
    swift_once();
    uint64_t v9 = v25;
  }
  if (*(float *)&dword_1004F7FB8 < v9)
  {
    Swift::String v10 = *(void (**)(_OWORD *__return_ptr, uint64_t))(**(void **)(v1 + qword_1004C6388) + 144);
    uint64_t v11 = swift_retain();
    v10(v28, v11);
    swift_release();
    memcpy(__src, v28, 0x213uLL);
    sub_1000732CC((uint64_t)__src);
    if (BYTE8(__src[28]))
    {
LABEL_17:

      return 0;
    }
  }
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if (static UIDevice.isIPhone()())
  {
    uint64_t v12 = *(void (**)(_OWORD *__return_ptr, uint64_t))(**(void **)(v1 + qword_1004C6370) + 144);
    uint64_t v13 = swift_retain();
    v12(__src, v13);
    swift_release();
    if ((__src[6] & 1) == 0)
    {
      uint64_t v14 = *((void *)&__src[5] + 1);
      uint64_t result = (float *)Float.piDiv2.unsafeMutableAddressor();
      uint64_t v16 = -0.7854 - *result;
      uint64_t v17 = 0.7854 - *result;
      if (v16 > v17)
      {
        __break(1u);
        return result;
      }
      uint64_t v18 = vdupq_n_s64(v14);
      if (v16 > *(float *)&v18.i32[2] || *(float *)&v18.i32[2] > v17) {
        goto LABEL_17;
      }
    }
  }
  uint64_t v19 = *(void (**)(_OWORD *__return_ptr, uint64_t))(**(void **)(v1 + qword_1004C6388) + 144);
  uint64_t v20 = swift_retain();
  v19(v28, v20);
  swift_release();
  memcpy(__src, v28, 0x213uLL);
  sub_1000732CC((uint64_t)__src);
  if (LOBYTE(__src[0]) != 1) {
    goto LABEL_17;
  }
  uint64_t v21 = *(void (**)(_OWORD *__return_ptr, uint64_t))(**(void **)(v1 + qword_1004C6370) + 144);
  uint64_t v22 = swift_retain();
  v21(v26, v22);
  swift_release();
  v28[4] = v26[4];
  v28[5] = v26[5];
  v28[6] = v26[6];
  LOBYTE(v28[7]) = v27;
  v28[0] = v26[0];
  v28[1] = v26[1];
  v28[2] = v26[2];
  v28[3] = v26[3];
  if (sub_100081594()) {
    goto LABEL_17;
  }
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  if (BYTE3(v26[0])) {
    goto LABEL_17;
  }
  uint64_t v24 = ARFrame.isVIOTrackingUnacceptable()();

  return (float *)!v24;
}

void sub_1000617CC()
{
  if (qword_1004C3238 != -1) {
    swift_once();
  }
  uint64_t v0 = (double *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits);
  if (*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80))
  {
    __break(1u);
  }
  else
  {
    CGFloat v2 = v0[8];
    CGFloat v1 = v0[9];
    CGFloat v4 = v0[6];
    CGFloat v3 = v0[7];
    type metadata accessor for MeasureCamera();
    swift_retain();
    StateValue.wrappedValue.getter();
    swift_release();
    memcpy(__dst, __src, sizeof(__dst));
    sub_100016F7C((uint64_t)__dst);
    swift_retain();
    StateValue.wrappedValue.getter();
    swift_release();
    memcpy(__src, v7, sizeof(__src));
    sub_100016F7C((uint64_t)__src);
    static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
    CGPoint.init(xy:)();
    v10.CGFloat x = v5;
    v10.CGFloat y = v6;
    v11.origin.CGFloat x = v4;
    v11.origin.CGFloat y = v3;
    v11.size.width = v2;
    v11.size.height = v1;
    CGRectContainsPoint(v11, v10);
  }
}

uint64_t sub_100061940(void *a1, const void *a2)
{
  CGFloat v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1000A3850();
  if (result)
  {
    uint64_t v15 = (void *)result;
    uint64_t v26 = v7;
    if (qword_1004C29D8 != -1) {
      uint64_t result = swift_once();
    }
    uint64_t v25 = v10;
    uint64_t v16 = (void *)*((void *)&xmmword_1004F8000 + 1);
    if (*((void *)&xmmword_1004F8000 + 1))
    {
      uint64_t v24 = Contexts.PrivateQueue.init(_:)();
      uint64_t v17 = (void *)swift_allocObject();
      void v17[2] = v3;
      v17[3] = a1;
      v17[4] = v15;
      memcpy(v17 + 6, a2, 0x200uLL);
      aBlock[4] = sub_1000734F4;
      aBlock[5] = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100049AB4;
      aBlock[3] = &unk_10048A6C0;
      uint64_t v18 = _Block_copy(aBlock);
      id v19 = v16;
      id v20 = v3;
      id v21 = a1;
      id v22 = v15;
      sub_100053000((uint64_t)a2);
      static DispatchQoS.unspecified.getter();
      uint64_t v27 = _swiftEmptyArrayStorage;
      sub_100073B90((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100012894((uint64_t *)&unk_1004C68E0);
      sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v23 = (void *)v24;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v18);

      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v6);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v25);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

unint64_t sub_100061C98()
{
  void (*v1)(_OWORD *__return_ptr, uint64_t);
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  float32x4_t v5;
  float32x4_t v6;
  float32x4_t v7;
  float32x4_t v8;
  float32x4_t v10;
  unsigned char v11[512];
  _OWORD __src[34];
  void __dst[68];

  CGFloat v1 = *(void (**)(_OWORD *__return_ptr, uint64_t))(**(void **)(v0 + qword_1004C6388) + 144);
  CGFloat v2 = swift_retain();
  v1(__src, v2);
  swift_release();
  memcpy(__dst, __src, 0x213uLL);
  sub_1000732CC((uint64_t)__dst);
  CGFloat v3 = __dst[24];
  if (__dst[24])
  {
    CGFloat v4 = 0;
  }
  else
  {
    simd_float4x4.position.getter();
    uint64_t v10 = v5;
    swift_retain();
    StateValue.wrappedValue.getter();
    swift_release();
    memcpy(__src, v11, 0x200uLL);
    sub_100016F7C((uint64_t)__src);
    simd_float4x4.position.getter();
    uint64_t v7 = vsubq_f32(v10, v6);
    uint64_t v8 = vmulq_f32(v7, v7);
    CGFloat v4 = COERCE_UNSIGNED_INT(sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v8, 2), vaddq_f32(v8, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v8.f32, 1))).f32[0]));
  }
  return v4 | ((unint64_t)v3 << 32);
}

uint64_t sub_100061DF0(uint64_t a1)
{
  void (*v25)(void *__return_ptr, uint64_t);
  uint64_t v26;
  void (*v27)(void *__return_ptr, uint64_t);
  uint64_t v28;
  void (*v29)(void *__return_ptr, uint64_t);
  uint64_t v30;
  uint64_t (*v31)(void *);
  void (*v32)(void *, void);
  uint64_t v33;
  uint64_t (*v34)(void *);
  void (*v35)(void *, void);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void v41[68];
  void v42[68];
  unsigned char v43[544];

  uint64_t v40 = a1;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  CGFloat v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100012894((uint64_t *)&unk_1004C68F0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  id v38 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v37 - v9;
  id v39 = v1;
  uint64_t v11 = v1 + qword_1004C63F8;
  swift_beginAccess();
  sub_1000735DC(v11, (uint64_t)v10, (uint64_t *)&unk_1004C68F0);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  int v13 = v12(v10, 1, v2);
  uint64_t v14 = v5;
  sub_10002B9C0((uint64_t)v10, (uint64_t *)&unk_1004C68F0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v40, v2);
  if (v13 == 1)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v15 = v39;
LABEL_6:
    BOOL v21 = *(unsigned char *)(v15 + qword_1004F7FC0) == 2;
    double v22 = 2.0;
    double v23 = 0.25;
    goto LABEL_7;
  }
  uint64_t v16 = v38;
  sub_1000735DC(v11, v38, (uint64_t *)&unk_1004C68F0);
  uint64_t result = v12((char *)v16, 1, v2);
  if (result == 1)
  {
    __break(1u);
    return result;
  }
  Date.timeIntervalSince(_:)();
  double v19 = v18;
  id v20 = *(void (**)(char *, uint64_t))(v3 + 8);
  v20(v14, v2);
  v20((char *)v16, v2);
  uint64_t v15 = v39;
  if (v19 >= 1.0) {
    goto LABEL_6;
  }
  BOOL v21 = *(unsigned char *)(v39 + qword_1004F7FC0) == 2;
  double v22 = 20.0;
  double v23 = 5.0;
LABEL_7:
  if (v21) {
    double v22 = v23;
  }
  *(double *)(v15 + qword_1004C63F0) = v22;
  uint64_t v24 = qword_1004C6388;
  uint64_t v25 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v15 + qword_1004C6388) + 144);
  uint64_t v26 = swift_retain();
  v25(v42, v26);
  swift_release();
  memcpy(v43, v42, 0x213uLL);
  sub_1000732CC((uint64_t)v43);
  if (v43[456] == 1)
  {
    uint64_t v27 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v15 + v24) + 144);
    uint64_t v28 = swift_retain();
    v27(v41, v28);
    swift_release();
    memcpy(v42, v41, 0x213uLL);
    sub_1000732CC((uint64_t)v42);
    if (LOBYTE(v42[49]) != 1) {
      goto LABEL_12;
    }
  }
  uint64_t v29 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v15 + v24) + 144);
  uint64_t v30 = swift_retain();
  v29(v41, v30);
  swift_release();
  memcpy(v42, v41, 0x213uLL);
  sub_1000732CC((uint64_t)v42);
  if (BYTE2(v42[66]) == 1)
  {
LABEL_12:
    uint64_t v31 = *(uint64_t (**)(void *))(**(void **)(v15 + v24) + 400);
    swift_retain();
    uint64_t v32 = (void (*)(void *, void))v31(v42);
    *(unsigned char *)(v33 + sub_10004ACAC(2, 1, 1) = 1;
    v32(v42, 0);
  }
  else
  {
    uint64_t v34 = *(uint64_t (**)(void *))(**(void **)(v15 + v24) + 400);
    swift_retain();
    uint64_t v35 = (void (*)(void *, void))v34(v41);
    *(unsigned char *)(v36 + sub_10004ACAC(2, 1, 1) = 0;
    v35(v41, 0);
  }
  return swift_release();
}

void *sub_100062288(uint64_t a1, float a2)
{
  *(float *)(a1 + 45sub_10004ACAC(3, 1, 2) = a2;
  *(unsigned char *)(a1 + 456) = 0;
  swift_retain();
  *(double *)&long long v3 = sub_10006D0C0();
  long long v9 = v3;
  swift_release();
  *(_OWORD *)(a1 + 464) = v9;
  *(unsigned char *)(a1 + 480) = 0;
  *(unsigned char *)(a1 + 530) = 1;
  uint64_t result = (void *)sub_10005CEB8();
  if (result)
  {
    CGFloat v5 = result;
    uint64_t v6 = (*(uint64_t (**)(void))((swift_isaMask & *result) + 0xB8))();
    uint64_t v8 = v7;

    uint64_t result = (void *)swift_bridgeObjectRelease();
    *(void *)(a1 + 488) = v6;
    *(void *)(a1 + 496) = v8;
  }
  return result;
}

void sub_100062358(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  long long v9 = (char *)&v22 - v8;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = (char *)Strong;
    swift_retain();
    Synchronized.wrappedValue.getter();
    swift_release();
    Date.timeIntervalSince(_:)();
    double v13 = v12;
    double v23 = *(void (**)(char *, uint64_t))(v4 + 8);
    v23(v9, v3);
    if (v13 > 0.1)
    {
      swift_retain();
      StateValue.wrappedValue.getter();
      swift_release();
      memcpy(v28, v27, 0x200uLL);
      unint64_t v14 = sub_1000626C4();
      sub_100016F7C((uint64_t)v28);
      if ((v14 & 0x100000000) == 0)
      {
        uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
        v15(v9, a2, v3);
        unint64_t v22 = v14;
        v15(v7, (uint64_t)v9, v3);
        swift_retain();
        Synchronized.wrappedValue.setter();
        swift_release();
        v23(v9, v3);
        int v26 = v22;
        swift_retain();
        Synchronized.wrappedValue.getter();
        sub_100012894(&qword_1004C6910);
        RingBuffer.append(_:)();
        long long v24 = v27[0];
        uint64_t v25 = *(void *)&v27[1];
        Synchronized.wrappedValue.setter();
        swift_release();
        uint64_t v16 = *(uint64_t (**)(uint64_t))(**(void **)&v11[qword_1004C6390] + 200);
        uint64_t v17 = swift_retain();
        uint64_t v18 = v16(v17);
        swift_release();
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = v11;
        id v20 = *(void (**)(uint64_t (*)(uint64_t), uint64_t))(*(void *)v18 + 280);
        BOOL v21 = v11;
        v20(sub_100073B5C, v19);
        swift_release();
        swift_release();
      }
    }
  }
}

unint64_t sub_1000626C4()
{
  void (*v1)(void *__return_ptr, uint64_t);
  uint64_t v2;
  int8x16_t v3;
  float32x2_t v4;
  int8x16_t v5;
  void *v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  int32x2_t *v10;
  double *v11;
  unint64_t v12;
  unint64_t v13;
  long long v14;
  float32x2_t v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  uint64_t v18;
  double *v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  float v28;
  float v29;
  float v30;
  float32x4_t v31;
  long long v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  double *v37;
  double v38;
  long long v39;
  unint64_t v40;
  char *v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  float v53;
  uint64_t v54;
  float *v55;
  float v56;
  uint64_t v57;
  float v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  void *v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  float *v66;
  float v67;
  uint64_t v68;
  float v69;
  float v70;
  uint64_t v71;
  float v72;
  uint64_t v73;
  unint64_t v74;
  float v75;
  unint64_t v76;
  float *v77;
  float v78;
  float v79;
  float v80;
  uint64_t v81;
  unsigned __int8 v82;
  unint64_t result;
  float v84;
  void *v85;
  long long v86;
  long long v87;
  int v88;
  float v89;
  double *v90;
  void __src[68];
  void __dst[68];

  uint64_t v1 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v0 + qword_1004C6388) + 144);
  uint64_t v2 = swift_retain();
  v1(__src, v2);
  swift_release();
  memcpy(__dst, __src, 0x213uLL);
  sub_1000732CC((uint64_t)__dst);
  if (__dst[24])
  {
    simd_float4x4.forward.getter();
    uint64_t v4 = vmul_f32((float32x2_t)vzip1_s32(*(int32x2_t *)v3.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL)), (float32x2_t)0xC0000000C0000000);
  }
  else
  {
    simd_float4x4.position.getter();
    uint64_t v4 = (float32x2_t)vzip1_s32(*(int32x2_t *)v5.i8, (int32x2_t)*(_OWORD *)&vextq_s8(v5, v5, 8uLL));
  }
  ariadne_trace(_:_:_:_:_:)();
  uint64_t v6 = (void *)sub_1000A3850();
  if (!v6) {
    goto LABEL_106;
  }
  uint64_t v7 = v6;
  if (!*(void *)(v0 + qword_1004C6498))
  {

    goto LABEL_106;
  }
  swift_retain();
  uint64_t v8 = (unint64_t)DepthProcessor.getJasperPointsPosition(requestedMinConfidence:currentFrame:)(0.99, (ARFrame)v7);
  if (!v8)
  {

    swift_release();
    goto LABEL_106;
  }
  uint64_t v85 = v7;
  long long v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v10 = (int32x2_t *)(v8 + 32);
    uint64_t v11 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v15 = vsub_f32(v4, (float32x2_t)vzip1_s32(*v10, (int32x2_t)*(_OWORD *)&vextq_s8(*(int8x16_t *)v10->i8, *(int8x16_t *)v10->i8, 8uLL)));
      if (vaddv_f32(vmul_f32(v15, v15)) < 0.5625)
      {
        id v86 = *(_OWORD *)v10->i8;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        __src[0] = v11;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000BBE34(0, *((void *)v11 + 2) + 1, 1);
          uint64_t v11 = (double *)__src[0];
        }
        double v13 = *((void *)v11 + 2);
        double v12 = *((void *)v11 + 3);
        unint64_t v14 = v86;
        if (v13 >= v12 >> 1)
        {
          sub_1000BBE34((char *)(v12 > 1), v13 + 1, 1);
          unint64_t v14 = v86;
          uint64_t v11 = (double *)__src[0];
        }
        *((void *)v11 + sub_10004ACAC(3, 1, 2) = v13 + 1;
        *(_OWORD *)&v11[2 * v13 + 4] = v14;
      }
      v10 += 2;
      --v9;
    }
    while (v9);
  }
  else
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = 0;
  uint64_t v18 = *((void *)v11 + 2);
  uint64_t v19 = _swiftEmptyArrayStorage;
  while (1)
  {
    id v20 = v17;
    if (v17 == v18) {
      break;
    }
    while (1)
    {
      if (v20 >= *((void *)v11 + 2))
      {
        __break(1u);
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
LABEL_111:
        __break(1u);
        __break(1u);
        uint64_t result = swift_release();
        __break(1u);
        return result;
      }
      uint64_t v87 = *(_OWORD *)&v11[2 * v20 + 4];
      MeasureCore.shared.unsafeMutableAddressor();
      swift_retain();
      BOOL v21 = MeasureCore.mlLabel(of:kernelRadius:)();
      swift_release();
      if (v21 != 33)
      {
        swift_retain();
        unint64_t v22 = MeasureCore.mlNormal(of:)();
        long long v24 = v23;
        int v26 = v25;
        swift_release();
        if ((v26 & 1) == 0 && v21 == 1) {
          break;
        }
      }
      if (v18 == ++v20) {
        goto LABEL_35;
      }
    }
    uint64_t v27 = SIMD3<>.up.unsafeMutableAddressor();
    uint64_t v28 = *(float *)v27;
    uint64_t v29 = *(float *)(v27 + 4);
    uint64_t v30 = *(float *)(v27 + 8);
    if (qword_1004C2980 != -1)
    {
      uint64_t v84 = *(float *)(v27 + 8);
      swift_once();
      uint64_t v30 = v84;
    }
    v31.i64[0] = v22;
    v31.i64[1] = v24;
    uint64_t v17 = v20 + 1;
    if (*(float *)&dword_1004F7FBC < (float)(vmuls_lane_f32(v30, v31, 2)
                                            + (float)((float)(v28 * *(float *)&v22)
                                                    + vmuls_lane_f32(v29, (float32x2_t)v22, 1))))
    {
      uint64_t v90 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000BBE34(0, *((void *)v19 + 2) + 1, 1);
        uint64_t v19 = v90;
      }
      uint64_t v32 = v87;
      uint64_t v34 = *((void *)v19 + 2);
      uint64_t v33 = *((void *)v19 + 3);
      if (v34 >= v33 >> 1)
      {
        sub_1000BBE34((char *)(v33 > 1), v34 + 1, 1);
        uint64_t v32 = v87;
        uint64_t v19 = v90;
      }
      uint64_t v17 = v20 + 1;
      *((void *)v19 + sub_10004ACAC(3, 1, 2) = v34 + 1;
      *(_OWORD *)&v19[2 * v34 + 4] = v32;
    }
  }
LABEL_35:
  swift_release();
  uint64_t v35 = *((void *)v19 + 2);
  if (v35)
  {
    uint64_t v90 = _swiftEmptyArrayStorage;
    sub_1000BBE14(0, v35, 0);
    uint64_t v36 = 0;
    uint64_t v37 = _swiftEmptyArrayStorage;
    id v38 = _swiftEmptyArrayStorage[2];
    do
    {
      id v39 = *(_OWORD *)&v19[2 * v36 + 4];
      uint64_t v90 = v37;
      uint64_t v40 = *((void *)v37 + 3);
      if (*(void *)&v38 >= v40 >> 1)
      {
        id v88 = DWORD1(v39);
        sub_1000BBE14((char *)(v40 > 1), *(void *)&v38 + 1, 1);
        DWORD1(v39) = v88;
        uint64_t v37 = v90;
      }
      ++v36;
      *((void *)v37 + sub_10004ACAC(3, 1, 2) = *(void *)&v38 + 1;
      *((_DWORD *)v37 + (*(void *)&v38)++ + 8) = DWORD1(v39);
    }
    while (v35 != v36);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v37 = _swiftEmptyArrayStorage;
  }
  uint64_t v90 = v37;
  swift_bridgeObjectRetain();
  sub_10005CA00((uint64_t *)&v90, (uint64_t (*)(uint64_t))sub_1000BE208, sub_100070C40);
  swift_bridgeObjectRelease();
  uint64_t v41 = (char *)v90;
  __src[0] = v90;
  uint64_t v42 = *((void *)v90 + 2);
  if (v42 > 0x28)
  {
    sub_1000731BC(0, v42 - 40);
    uint64_t v41 = (char *)__src[0];
    uint64_t v42 = *(void *)(__src[0] + 16);
  }
  if (v42 < 6)
  {
    swift_release();

    swift_bridgeObjectRelease();
    goto LABEL_106;
  }
  uint64_t v43 = (char *)_swiftEmptyArrayStorage;
  uint64_t v44 = 5;
  do
  {
    if (!*((void *)v41 + 2)) {
      goto LABEL_109;
    }
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      uint64_t v45 = *((void *)v41 + 2);
      if (!v45) {
        goto LABEL_110;
      }
    }
    else
    {
      uint64_t v41 = sub_100030BD8((uint64_t)v41);
      uint64_t v45 = *((void *)v41 + 2);
      if (!v45) {
        goto LABEL_110;
      }
    }
    uint64_t v46 = v45 - 1;
    id v47 = *(_DWORD *)&v41[4 * v46 + 32];
    *((void *)v41 + sub_10004ACAC(3, 1, 2) = v46;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v43 = sub_10006E184(0, *((void *)v43 + 2) + 1, 1, v43);
    }
    uint64_t v49 = *((void *)v43 + 2);
    uint64_t v48 = *((void *)v43 + 3);
    uint64_t v50 = v49 + 1;
    if (v49 >= v48 >> 1) {
      uint64_t v43 = sub_10006E184((char *)(v48 > 1), v49 + 1, 1, v43);
    }
    *((void *)v43 + sub_10004ACAC(3, 1, 2) = v50;
    *(_DWORD *)&v43[4 * v49 + 32] = v47;
    --v44;
  }
  while (v44);
  uint64_t v51 = *((void *)v41 + 2);
  if (v51)
  {
    while (1)
    {
      uint64_t v52 = v51 - 1;
      uint64_t v53 = *(float *)&v41[4 * v52 + 32];
      *((void *)v41 + sub_10004ACAC(3, 1, 2) = v52;
      uint64_t v54 = *((void *)v43 + 2);
      if (v54)
      {
        uint64_t v55 = (float *)(v43 + 32);
        uint64_t v56 = 0.0;
        uint64_t v57 = *((void *)v43 + 2);
        do
        {
          NSString v58 = *v55++;
          uint64_t v56 = v56 + v58;
          --v57;
        }
        while (v57);
      }
      else
      {
        uint64_t v56 = 0.0;
      }
      if (vabds_f32(v56 / (float)v54, v53) >= 0.15) {
        break;
      }
      uint64_t v59 = *((void *)v43 + 3);
      uint64_t v50 = v54 + 1;
      if (v54 >= v59 >> 1) {
        uint64_t v43 = sub_10006E184((char *)(v59 > 1), v54 + 1, 1, v43);
      }
      *((void *)v43 + sub_10004ACAC(3, 1, 2) = v50;
      *(float *)&v43[4 * v54 + 32] = v53;
      uint64_t v51 = *((void *)v41 + 2);
      if (!v51) {
        goto LABEL_71;
      }
    }
    if (!v54)
    {
      swift_bridgeObjectRetain();
      uint64_t v62 = v85;
      goto LABEL_105;
    }
    uint64_t v50 = *((void *)v43 + 2);
  }
LABEL_71:
  swift_bridgeObjectRetain();
  Swift::String v60 = 0;
  uint64_t v61 = v43;
  uint64_t v62 = v85;
  do
  {
    long long v65 = *((void *)v61 + 2);
    if (!v65) {
      goto LABEL_75;
    }
    objc_super v66 = (float *)(v61 + 32);
    uint64_t v67 = 0.0;
    uint64_t v68 = *((void *)v61 + 2);
    do
    {
      long long v69 = *v66++;
      uint64_t v67 = v67 + v69;
      --v68;
    }
    while (v68);
    long long v70 = *(float *)&v43[4 * v60 + 32];
    if (vabds_f32(v70, v67 / (float)v65) <= 0.02) {
      goto LABEL_75;
    }
    if (*((float *)v61 + 8) == v70)
    {
      uint64_t v63 = 0;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        goto LABEL_95;
      }
    }
    else
    {
      if (v65 == 1) {
        goto LABEL_75;
      }
      if (*((float *)v61 + 9) == v70)
      {
        uint64_t v63 = 1;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          goto LABEL_95;
        }
        uint64_t v63 = 1;
      }
      else
      {
        if (v65 == 2) {
          goto LABEL_75;
        }
        if (*((float *)v61 + 10) != v70)
        {
          long long v71 = 0;
          while (v65 - 3 != v71)
          {
            long long v72 = *(float *)&v61[4 * v71++ + 44];
            if (v72 == v70)
            {
              uint64_t v63 = v71 + 2;
              if (swift_isUniquelyReferenced_nonNull_native()) {
                goto LABEL_73;
              }
              goto LABEL_95;
            }
          }
          goto LABEL_75;
        }
        uint64_t v63 = 2;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
LABEL_95:
          uint64_t v61 = sub_100030BD8((uint64_t)v61);
          goto LABEL_73;
        }
        uint64_t v63 = 2;
      }
    }
LABEL_73:
    uint64_t v64 = *((void *)v61 + 2);
    if (v63 >= v64) {
      goto LABEL_111;
    }
    long long v65 = v64 - 1;
    memmove(&v61[4 * v63 + 32], &v61[4 * v63 + 36], 4 * (v64 - 1 - v63));
    *((void *)v61 + sub_10004ACAC(3, 1, 2) = v65;
LABEL_75:
    ++v60;
  }
  while (v60 != v50);
  if ((unint64_t)v65 <= 5)
  {
LABEL_105:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();

    goto LABEL_106;
  }
  char v73 = 0;
  uint64_t v74 = v65 & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v75 = 0.0;
  do
  {
    uint64_t v75 = (float)(v75 + *(float *)&v61[4 * v73 + 32]) + *(float *)&v61[4 * v73 + 36];
    v73 += 2;
  }
  while (v74 != v73);
  uint64_t v76 = v65 - v74;
  if (v76)
  {
    id v77 = (float *)&v61[8 * ((unint64_t)v65 >> 1) + 32];
    do
    {
      char v78 = *v77++;
      uint64_t v75 = v75 + v78;
      --v76;
    }
    while (v76);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v79 = v75 / (float)v65;
  simd_float4x4.position.getter();
  uint64_t v89 = v80;
  swift_release();

  if (vabds_f32(v79, v89) >= 0.85)
  {
    float v81 = LODWORD(v79);
    ariadne_trace(_:_:_:_:_:)();
    char v82 = 0;
    goto LABEL_107;
  }
LABEL_106:
  ariadne_trace(_:_:_:_:_:)();
  float v81 = 0;
  char v82 = 1;
LABEL_107:
  LOBYTE(__dst[0]) = v82;
  return v81 | ((unint64_t)v82 << 32);
}

uint64_t sub_10006306C(uint64_t a1)
{
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  RingBuffer<A>.average()();
  int v3 = v2;
  uint64_t result = swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 148) = v3;
  *(unsigned char *)(a1 + 15sub_10004ACAC(3, 1, 2) = 0;
  return result;
}

uint64_t sub_1000630E4()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  uint64_t v7 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_100073700;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_10048A828;
  long long v9 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100073B90((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v12);
}

void *sub_1000633C8(double **a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (void *)sub_1000A3850();
  if (result)
  {
    uint64_t v25 = v1;
    uint64_t v26 = v8;
    uint64_t v29 = v3;
    id v30 = result;
    uint64_t v27 = v7;
    uint64_t v28 = v4;
    if (qword_1004C2AC8 != -1) {
      swift_once();
    }
    aBlock._uint64_t countAndFlagsBits = 0;
    aBlock._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease();
    aBlock._uint64_t countAndFlagsBits = 0xD000000000000016;
    aBlock._object = (void *)0x8000000100422570;
    uint64_t v36 = *a1;
    v12._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    Log.debug(_:isPrivate:)(aBlock, 0);
    swift_bridgeObjectRelease();
    id v13 = [v30 capturedImage];
    uint64_t v14 = swift_allocObject();
    uint64_t v15 = v25;
    *(void *)(v14 + 16) = v25;
    memcpy((void *)(v14 + 32), a1, 0x200uLL);
    id v16 = objc_allocWithZone((Class)VNDetectFaceRectanglesRequest);
    uint64_t v34 = sub_1000739C8;
    uint64_t v35 = v14;
    aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
    aBlock._object = (void *)1107296256;
    uint64_t v32 = sub_100186E60;
    uint64_t v33 = &unk_10048A878;
    uint64_t v17 = _Block_copy(&aBlock);
    v15;
    sub_100053000((uint64_t)a1);
    swift_release();
    id v18 = [v16 initWithCompletionHandler:v17];
    _Block_release(v17);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v13;
    *(_DWORD *)(v19 + 24) = 1;
    *(void *)(v19 + 3sub_10004ACAC(3, 1, 2) = v18;
    uint64_t v34 = sub_100073A2C;
    uint64_t v35 = v19;
    aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
    aBlock._object = (void *)1107296256;
    uint64_t v32 = sub_100049AB4;
    uint64_t v33 = &unk_10048A8C8;
    id v20 = _Block_copy(&aBlock);
    id v21 = v13;
    id v22 = v18;
    static DispatchQoS.unspecified.getter();
    uint64_t v36 = _swiftEmptyArrayStorage;
    sub_100073B90((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100012894((uint64_t *)&unk_1004C68E0);
    sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
    uint64_t v23 = v29;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v23);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v27);
    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_10006389C(__n128 *a1, uint64_t a2)
{
  void (*v9)(void *__return_ptr, uint64_t);
  uint64_t v10;
  uint64_t result;
  Swift::String v12;
  void (*v13)(_OWORD *__return_ptr, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  unint64_t v20;
  float v21;
  float v22;
  float v23;
  char v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  Swift::String v35;
  float v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  Swift::String v43;
  float32x4_t v44;
  void (*v45)(_OWORD *__return_ptr, uint64_t);
  uint64_t v46;
  float32x4_t v47;
  float32x4_t v48;
  uint64_t v49;
  Swift::String v50;
  float32x4_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  long long v55;
  uint64_t v56;
  long long v57;
  uint64_t v58;
  long long v59;
  uint64_t v60;
  float v61;
  _OWORD v62[34];
  Swift::String v63;
  void v64[68];
  unsigned char v65[48];
  Swift::String v66[2];
  char v67;
  unsigned char v68[544];

  uint64_t v5 = type metadata accessor for Date();
  uint64_t v54 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = qword_1004C6388;
  uint64_t v9 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v2 + qword_1004C6388) + 144);
  uint64_t v10 = swift_retain();
  v9(v64, v10);
  swift_release();
  memcpy(v68, v64, 0x213uLL);
  sub_1000732CC((uint64_t)v68);
  if (v68[2] == 1)
  {
    uint64_t result = sub_100064744(0.0);
    if ((result & 1) == 0) {
      return result;
    }
    uint64_t v52 = v5;
    uint64_t v53 = a2;
    if (qword_1004C2AC8 != -1) {
      swift_once();
    }
    *(void *)&v62[0] = 0;
    *((void *)&v62[0] + sub_10004ACAC(2, 1, 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease();
    v66[0]._uint64_t countAndFlagsBits = 0xD000000000000017;
    v66[0]._object = (void *)0x80000001004225E0;
    swift_retain();
    StateValue.wrappedValue.getter();
    swift_release();
    memcpy(&v63, v62, 0x200uLL);
    sub_100016F7C((uint64_t)&v63);
    *(void *)&v62[0] = v63._countAndFlagsBits;
    v12._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    Log.debug(_:isPrivate:)(v66[0], 0);
    swift_bridgeObjectRelease();
    ariadne_trace(_:_:_:_:_:)();
    id v13 = *(void (**)(_OWORD *__return_ptr, uint64_t))(**(void **)(v2 + v8) + 144);
    uint64_t v14 = swift_retain();
    v13(v62, v14);
    swift_release();
    memcpy(v64, v62, 0x213uLL);
    sub_1000732CC((uint64_t)v64);
    if (v64[49]) {
      return ariadne_trace(_:_:_:_:_:)();
    }
    sub_1000688C8(a1, (uint64_t)v65, *(CGFloat *)&v64[47], *(CGFloat *)&v64[48]);
    sub_100016FEC((uint64_t)v65, (uint64_t)v66, &qword_1004C6A68);
    if (v67) {
      return ariadne_trace(_:_:_:_:_:)();
    }
    uint64_t v50 = v66[1];
    uint64_t v51 = (float32x4_t)v66[0];
    uint64_t v15 = sub_100066D3C(1, (float32x4_t)v66[0]);
    uint64_t v17 = v16;
    uint64_t v19 = v18;
    id v20 = sub_1000626C4();
    if ((v20 & 0x100000000) == 0)
    {
      uint64_t v49 = v15;
      id v21 = *(float *)&v20;
      id v22 = v51.f32[1];
LABEL_9:
      uint64_t v23 = v22 - v21;
      uint64_t v61 = v22 - v21;
      uint64_t v24 = 1;
LABEL_10:
      uint64_t v25 = *(uint64_t (**)(uint64_t))(**(void **)(v2 + v8) + 200);
      uint64_t v26 = swift_retain();
      uint64_t v27 = v25(v26);
      swift_release();
      uint64_t v28 = swift_allocObject();
      *(float *)(v28 + 16) = v23;
      *(void *)(v28 + 3sub_10004ACAC(3, 1, 2) = v49;
      *(void *)(v28 + 40) = v17;
      *(unsigned char *)(v28 + 48) = v19 & 1;
      *(unsigned char *)(v28 + 49) = v24;
      (*(void (**)(uint64_t (*)(uint64_t), uint64_t))(*(void *)v27 + 416))(sub_100073A4C, v28);
      swift_release();
      swift_release();
      uint64_t v29 = v2 + qword_1004C6420;
      swift_beginAccess();
      id v30 = v54;
      uint64_t v31 = v52;
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v7, v29, v52);
      uint64_t v32 = v53;
      Date.timeIntervalSince(_:)();
      uint64_t v34 = v33;
      (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v31);
      if (v34 > 0.5)
      {
        sub_10005D030(0xD000000000000015, 0x8000000100422690);
        swift_retain();
        swift_retain();
        Synchronized.wrappedValue.getter();
        sub_100012894(&qword_1004C6908);
        RingBuffer.clear()();
        uint64_t v59 = v62[0];
        Swift::String v60 = *(void *)&v62[1];
        Synchronized.wrappedValue.setter();
        swift_release();
        swift_release();
      }
      v35._uint64_t countAndFlagsBits = 0xD000000000000020;
      v35._object = (void *)0x8000000100422620;
      Log.debug(_:isPrivate:)(v35, 0);
      swift_beginAccess();
      uint64_t v36 = v61;
      *(float *)uint64_t v62 = v61;
      v62[1] = v51;
      v62[2] = v50;
      swift_retain();
      swift_retain();
      Synchronized.wrappedValue.getter();
      sub_100012894(&qword_1004C6908);
      RingBuffer.append(_:)();
      uint64_t v55 = v57;
      uint64_t v56 = v58;
      Synchronized.wrappedValue.setter();
      swift_release();
      swift_release();
      uint64_t v37 = sub_10005CEB8();
      if (v37)
      {
        id v38 = (void *)v37;
        if (qword_1004C2C10 != -1) {
          swift_once();
        }
        sub_1001417A8(v38, v36);
      }
      swift_beginAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 24))(v29, v32, v31);
      swift_endAccess();
      swift_retain();
      swift_retain();
      Synchronized.wrappedValue.getter();
      swift_release();
      id v39 = *(void *)(*(void *)&v62[1] + 16);
      swift_release();
      swift_bridgeObjectRelease();
      if (v39 == 8)
      {
        swift_retain();
        uint64_t v40 = sub_10006D264();
        swift_release();
        if ((v40 & 0x100000000) == 0)
        {
          *(void *)&v62[0] = 0;
          *((void *)&v62[0] + sub_10004ACAC(2, 1, 1) = 0xE000000000000000;
          if (*(float *)&v40 <= 0.1)
          {
            _StringGuts.grow(_:)(20);
            uint64_t v42 = 0x8000000100422650;
            uint64_t v41 = 0xD000000000000012;
          }
          else
          {
            _StringGuts.grow(_:)(18);
            uint64_t v41 = 0xD000000000000010;
            uint64_t v42 = 0x8000000100422670;
          }
          String.append(_:)(*(Swift::String *)&v41);
          Float.write<A>(to:)();
          sub_10005D030(*(uint64_t *)&v62[0], *((uint64_t *)&v62[0] + 1));
          swift_bridgeObjectRelease();
        }
      }
      return ariadne_trace(_:_:_:_:_:)();
    }
    if ((v19 & 1) == 0)
    {
      uint64_t v49 = v15;
      v44.i64[0] = v15;
      v44.i64[1] = v17;
      uint64_t v48 = v44;
      uint64_t v45 = *(void (**)(_OWORD *__return_ptr, uint64_t))(**(void **)(v2 + qword_1004C6390) + 144);
      uint64_t v46 = swift_retain();
      v45(v62, v46);
      swift_release();
      if ((BYTE8(v62[9]) & 1) == 0)
      {
        id v21 = *((float *)&v62[9] + 1);
        id v22 = v51.f32[1];
        if (*((float *)&v62[9] + 1) >= v48.f32[1])
        {
          uint64_t v24 = 0;
          uint64_t v23 = v51.f32[1] - v48.f32[1];
          uint64_t v61 = v51.f32[1] - v48.f32[1];
          goto LABEL_10;
        }
        goto LABEL_9;
      }
      simd_float4x4.position.getter();
      if (fabsf(COERCE_FLOAT(vsubq_f32(v48, v47).i32[1])) < 0.85)
      {
        uint64_t v24 = 0;
        LODWORD(v23) = vsubq_f32(v51, v48).i32[1];
        uint64_t v61 = v23;
        goto LABEL_10;
      }
    }
    sub_10005D030(0xD000000000000012, 0x8000000100422600);
    return ariadne_trace(_:_:_:_:_:)();
  }
  if (qword_1004C2AC8 != -1) {
    swift_once();
  }
  v64[0] = 0;
  v64[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(44);
  swift_bridgeObjectRelease();
  v63._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  v63._object = (void *)0x80000001004225B0;
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(v64, v62, 0x200uLL);
  sub_100016F7C((uint64_t)v64);
  *(void *)&v62[0] = v64[0];
  v43._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v43);
  swift_bridgeObjectRelease();
  Log.debug(_:isPrivate:)(v63, 0);
  return swift_bridgeObjectRelease();
}

BOOL sub_1000642B0(char a1)
{
  if ((a1 & 1) == 0)
  {
    swift_retain();
    Synchronized.wrappedValue.getter();
    swift_release();
    uint64_t v1 = *(void *)(v11 + 16);
    swift_bridgeObjectRelease();
    if (!v1) {
      return 0;
    }
  }
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  if ((v12 & 1) == 0)
  {
    SIMD2<>.init(_:)();
    float32x2_t v4 = v3;
    SIMD2<>.init(_:)();
    float32x2_t v6 = v5;
    SIMD2<>.init(_:)();
    SIMD2<>.init(_:)();
    float32x2_t v8 = v7;
    SIMD2<>.init(_:)();
    return sub_100132260(v4, v6, v8, v9);
  }
  else
  {
    return 0;
  }
}

BOOL sub_1000643EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100012894((uint64_t *)&unk_1004C68F0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  float32x2_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  float32x2_t v7 = (char *)&v30 - v6;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  char v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v30 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t v18 = v1 + qword_1004C6448;
  swift_beginAccess();
  sub_1000735DC(v18, (uint64_t)v7, (uint64_t *)&unk_1004C68F0);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v20 = v19(v7, 1, v8);
  uint64_t v31 = v9;
  if (v20 == 1)
  {
    sub_10002B9C0((uint64_t)v7, (uint64_t *)&unk_1004C68F0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v7, v8);
    Date.init()();
    Date.timeIntervalSince(_:)();
    double v22 = v21;
    uint64_t v23 = *(void (**)(char *, uint64_t))(v9 + 8);
    v23(v15, v8);
    v23(v17, v8);
    if (v22 < 0.5) {
      return 1;
    }
  }
  uint64_t v24 = v1 + qword_1004C6450;
  swift_beginAccess();
  sub_1000735DC(v24, (uint64_t)v5, (uint64_t *)&unk_1004C68F0);
  if (v19(v5, 1, v8) != 1)
  {
    uint64_t v25 = v31;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v12, v5, v8);
    Date.init()();
    Date.timeIntervalSince(_:)();
    double v27 = v26;
    uint64_t v28 = *(void (**)(char *, uint64_t))(v25 + 8);
    v28(v15, v8);
    v28(v12, v8);
    return v27 < 0.5;
  }
  sub_10002B9C0((uint64_t)v5, (uint64_t *)&unk_1004C68F0);
  return 0;
}

BOOL sub_100064744(float a1)
{
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  uint64_t v2 = *(void *)(v10 + 16);
  swift_bridgeObjectRelease();
  if (!v2) {
    return 0;
  }
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  RingBuffer<A>.average()();
  float v4 = v3;
  swift_bridgeObjectRelease();
  if (v4 < (float)(a1 + 1.5)) {
    return 0;
  }
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  RingBuffer<A>.average()();
  float v6 = v5;
  swift_bridgeObjectRelease();
  if ((float)(3.0 - a1) < v6) {
    return 0;
  }
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  RingBuffer<A>.average()();
  float v9 = v8;
  swift_bridgeObjectRelease();
  return v9 <= 5.0;
}

uint64_t sub_100064890()
{
  uint64_t v1 = sub_100012894(&qword_1004C6A08);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  float v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  float v6 = (char *)&v39 - v5;
  uint64_t v7 = sub_100012894(&qword_1004C6530);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v39 - v12;
  *(void *)&long long v49 = v0;
  uint64_t v14 = v0 + qword_1004C63D0;
  swift_beginAccess();
  sub_1000735DC(v14, (uint64_t)v6, &qword_1004C6A08);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_10002B9C0((uint64_t)v6, &qword_1004C6A08);
  }
  uint64_t v47 = v14;
  uint64_t v48 = v8;
  uint64_t v16 = *(int *)(v7 + 48);
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = v17;
  (*(void (**)(char *, char *))(v18 + 32))(v13, v6);
  int v20 = *(void **)&v6[v16];
  *(void *)&v13[v16] = v20;
  Date.timeIntervalSince(_:)();
  if (v21 >= 3.0)
  {
    sub_10002B9C0((uint64_t)v13, &qword_1004C6530);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v4, 1, 1, v7);
    uint64_t v38 = v47;
    swift_beginAccess();
    sub_100073BD8((uint64_t)v4, v38, &qword_1004C6A08);
    return swift_endAccess();
  }
  uint64_t v40 = v4;
  uint64_t v46 = type metadata accessor for MeasureCamera();
  uint64_t v22 = *(int *)(v7 + 48);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v11, v13, v19);
  *(void *)&v11[v22] = v20;
  uint64_t v23 = *(double (**)(void))((swift_isaMask & *v20) + 0x210);
  uint64_t v24 = v20;
  *(double *)&long long v25 = v23();
  long long v44 = v26;
  long long v45 = v25;
  long long v42 = v28;
  long long v43 = v27;

  simd_float4x4.position.getter();
  long long v45 = v29;
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(v51, v50, sizeof(v51));
  sub_100016F7C((uint64_t)v51);
  long long v43 = v51[12];
  long long v44 = v51[11];
  long long v41 = v51[14];
  long long v42 = v51[13];
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(v52, v50, sizeof(v52));
  sub_100016F7C((uint64_t)v52);
  static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
  long long v49 = v30;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v19);
  uint64_t result = CGPoint.init(xy:)();
  uint64_t v33 = v31;
  uint64_t v34 = v32;
  if (qword_1004C3238 != -1)
  {
    *(void *)&long long v49 = v31;
    uint64_t v46 = v32;
    uint64_t result = swift_once();
    uint64_t v34 = v46;
    uint64_t v33 = v49;
  }
  if (*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80))
  {
    __break(1u);
    return result;
  }
  BOOL v35 = CGRectContainsPoint(*(CGRect *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 48), *(CGPoint *)&v33);
  uint64_t result = sub_10002B9C0((uint64_t)v13, &qword_1004C6530);
  uint64_t v36 = (uint64_t)v40;
  if (!v35)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v40, 1, 1, v7);
    uint64_t v37 = v47;
    swift_beginAccess();
    sub_100073BD8(v36, v37, &qword_1004C6A08);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_100064DA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  int v6 = a4 & 0xFE;
  if (v6 != 2)
  {
    sub_10005D030(0xD000000000000011, 0x8000000100422330);
    sub_1000607E8();
  }
  uint64_t result = sub_100064E18(v6 != 2);
  *(unsigned char *)(a3 + qword_1004F7FC0) = a4;
  return result;
}

uint64_t sub_100064E18(char a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  int v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v16[0] - 8);
  __chkstk_darwin(v16[0]);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1004C2B80 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_1004F83D0;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(unsigned char *)(v11 + 24) = a1 & 1;
  aBlock[4] = sub_10006DC20;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_10048A580;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = v10;
  id v14 = v1;
  static DispatchQoS.unspecified.getter();
  v16[1] = _swiftEmptyArrayStorage;
  sub_100073B90((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, void))(v7 + 8))(v9, v16[0]);
  return swift_release();
}

double sub_100065118(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(unsigned char *)(a1 + 39sub_10004ACAC(3, 1, 2) = 1;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(unsigned char *)(a1 + 19sub_10004ACAC(3, 1, 2) = 1;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 1;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(unsigned char *)(a1 + 35sub_10004ACAC(3, 1, 2) = 1;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(unsigned char *)(a1 + 96) = 1;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 11sub_10004ACAC(3, 1, 2) = 0;
  *(unsigned char *)(a1 + 120) = 1;
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 1;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 7sub_10004ACAC(3, 1, 2) = 1;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(unsigned char *)(a1 + 43sub_10004ACAC(3, 1, 2) = 1;
  *(_DWORD *)(a1 + 45sub_10004ACAC(3, 1, 2) = 0;
  *(unsigned char *)(a1 + 456) = 1;
  *(void *)(a1 + 464) = 0;
  *(void *)(a1 + 47sub_10004ACAC(3, 1, 2) = 0;
  *(unsigned char *)(a1 + 480) = 1;
  return result;
}

uint64_t sub_100065188(void *a1, uint64_t a2, void *a3)
{
  ariadne_trace(_:_:_:_:_:)();
  id v6 = a1;
  sub_1000E1704((uint64_t)_swiftEmptyArrayStorage);
  id v7 = objc_allocWithZone((Class)VNImageRequestHandler);
  type metadata accessor for VNImageOption(0);
  sub_100073B90((unint64_t *)&unk_1004C6A50, type metadata accessor for VNImageOption);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v9 = [v7 initWithCVPixelBuffer:v6 orientation:a2 options:isa];

  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1003F8B20;
  *(void *)(v10 + 3sub_10004ACAC(3, 1, 2) = a3;
  specialized Array._endMutation()();
  sub_10001C99C(0, &qword_1004C6A60);
  id v11 = a3;
  Class v12 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v16 = 0;
  LODWORD(asub_10004ACAC(3, 1, 2) = [v9 performRequests:v12 error:&v16];

  if (a2)
  {
    id v13 = v16;
  }
  else
  {
    id v14 = v16;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
  return ariadne_trace(_:_:_:_:_:)();
}

uint64_t sub_1000653C0(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  void (*v27)(unsigned char *__return_ptr, uint64_t);
  uint64_t v28;
  id v29;
  void *v30;
  unint64_t v31;
  double *v32;
  uint64_t v33;
  unsigned char *v34;
  char **v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  id v39;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  __int32 y_low;
  __int32 height_low;
  uint64_t v51;
  uint64_t v52;
  double *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  double *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  double *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  double *v74;
  uint64_t v75;
  unint64_t v76;
  float32x4_t *v77;
  float32x4_t v78;
  uint64_t v79;
  float *v80;
  uint64_t v81;
  float v82;
  float32x4_t v83;
  int32x2_t v84;
  float32x4_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t, unint64_t);
  char *v91;
  unint64_t v92;
  void *v93;
  uint64_t v94;
  char *v95;
  double (*v96)(void);
  void *v97;
  float32x4_t v98;
  long long v99;
  long long v100;
  long long v101;
  float32x4_t v102;
  float32x4_t v103;
  float32x4_t v104;
  char *v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  unint64_t v111;
  long long v112;
  void (*v113)(uint64_t, uint64_t, uint64_t, unint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  float32x4_t v119;
  float32x4_t v120;
  float32x4_t v121;
  float32x2_t v122;
  float32x2_t v123;
  float32x2_t v124;
  float32x2_t v125;
  float32x2_t v126;
  float32x2_t v127;
  float32x2_t v128;
  char v129;
  double v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  int v136;
  int v137;
  id v138;
  unint64_t v139;
  unint64_t v140;
  float32x4_t v141;
  double *v142;
  double *v143;
  uint64_t v144;
  double *v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(unsigned char *__return_ptr, uint64_t);
  uint64_t v155;
  uint64_t v156;
  id v157;
  void *v158;
  void *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  void *v163;
  long long v164;
  float32x4_t v165;
  int v166;
  char v167;
  id v168;
  char *v169;
  double v170;
  double v171;
  void (*v172)(char *, unint64_t);
  void *v173;
  long long v174;
  float32x4_t v175;
  uint64_t v176;
  void *v177;
  long long v178;
  float32x4_t v179;
  long long v180;
  float32x4_t v181;
  id v182;
  double v183;
  CGFloat v184;
  double v185;
  CGFloat v186;
  double v187;
  CGFloat v188;
  double v189;
  CGFloat v190;
  char *v191;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  void **p_cache;
  void **v197;
  __n128 v198;
  __n128 v199;
  __n128 v200;
  __n128 v201;
  float32x4_t *v202;
  BOOL v203;
  float32x4_t v204;
  float32x4_t v205;
  float32x4_t v206;
  float v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t (*v212)(uint64_t);
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  long long v216;
  uint64_t v217;
  float32x4_t v218;
  uint64_t v219;
  long long v220;
  uint64_t v221;
  long long v222;
  uint64_t v223;
  __n128 v224;
  __n128 v225;
  void (*v226)(void (*)(uint64_t), uint64_t);
  id v227;
  Swift::String v228;
  uint64_t result;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  uint64_t (*v234)(uint64_t);
  uint64_t v235;
  uint64_t v236;
  CGFloat *v237;
  float32x4_t v238;
  char *v239;
  double v240;
  double v241;
  void (*v242)(char *, unint64_t);
  uint64_t v243;
  char *v244;
  char *v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  double *v251;
  uint64_t v252;
  void (**v253)(char *, unint64_t);
  void (**v254)(char *, char *, unint64_t);
  void (**v255)(char *, uint64_t, unint64_t);
  unint64_t v256;
  char *v257;
  unint64_t v258;
  char *v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  long long v263;
  long long v264;
  long long v265;
  float32x4_t v266;
  long long v267;
  void (**v268)(uint64_t, uint64_t, uint64_t, unint64_t);
  unsigned int (**v269)(uint64_t, uint64_t, uint64_t);
  char *v270;
  float32x4_t v271;
  __n128 v272;
  char *v273;
  __n128 v274;
  __n128 v275;
  long long v276;
  __n128 v277;
  long long v278;
  float32x4_t v279;
  long long v280;
  long long v281;
  void v282[64];
  Swift::String v283;
  unsigned char v284[531];
  _OWORD v285[3];
  _OWORD v286[3];
  unsigned char v287[560];
  CGRect v288;
  CGRect v289;
  CGRect v290;
  CGRect v291;
  CGRect v292;
  CGRect v293;

  v262 = a4;
  *(void *)&v278 = a3;
  v277.n128_u64[0] = type metadata accessor for Date();
  v252 = *(void *)(v277.n128_u64[0] - 8);
  uint64_t v8 = __chkstk_darwin(v277.n128_u64[0]);
  uint64_t v10 = (char *)&v243 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  v246 = (char *)&v243 - v12;
  __chkstk_darwin(v11);
  id v14 = (char *)&v243 - v13;
  uint64_t v15 = sub_100012894((uint64_t *)&unk_1004C68F0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  v247 = (char *)&v243 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  v245 = (char *)&v243 - v19;
  __chkstk_darwin(v18);
  v273 = (char *)&v243 - v20;
  uint64_t v21 = sub_100012894(&qword_1004C6A08);
  __chkstk_darwin(v21 - 8);
  v272.n128_u64[0] = (unint64_t)&v243 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v271.i64[0] = sub_100012894(&qword_1004C6530);
  uint64_t v23 = *(uint64_t **)(v271.i64[0] - 8);
  uint64_t v24 = __chkstk_darwin(v271.i64[0]);
  v260 = (char *)&v243 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v259 = (char *)&v243 - v26;
  ariadne_trace(_:_:_:_:_:)();
  v248 = qword_1004C6388;
  long long v27 = *(void (**)(unsigned char *__return_ptr, uint64_t))(**(void **)&a1[qword_1004C6388] + 144);
  long long v28 = swift_retain();
  v27(v284, v28);
  swift_release();
  memcpy(v287, v284, 0x213uLL);
  long long v29 = [a2 results];
  if (!v29
    || (long long v30 = v29,
        sub_10001C99C(0, (unint64_t *)&unk_1004CEA10),
        uint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(),
        v30,
        uint64_t v32 = sub_100180D1C(v31),
        swift_bridgeObjectRelease(),
        (v274.n128_u64[0] = (unint64_t)v32) == 0))
  {
    sub_1000732CC((uint64_t)v287);
    return ariadne_trace(_:_:_:_:_:)();
  }
  v258 = v274.n128_u64[0] & 0xFFFFFFFFFFFFFF8;
  if (v274.n128_u64[0] >> 62) {
    goto LABEL_82;
  }
  uint64_t v33 = *(void *)((v274.n128_u64[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_5:
  uint64_t v34 = v284;
  BOOL v35 = &selRef_replaySensorDidFinishReplayingData;
  v257 = a1;
  v244 = v10;
  *(void *)&v276 = v33;
  if (v33)
  {
    v261 = (uint64_t)&a1[qword_1004C6448];
    v250 = &a1[qword_1004C63C0];
    v249 = (uint64_t)&a1[qword_1004C63F8];
    uint64_t v36 = v274.n128_u64[0];
    v275.n128_u64[0] = v274.n128_u64[0] & 0xC000000000000001;
    v270 = &a1[qword_1004C63D0];
    swift_beginAccess();
    uint64_t v37 = 0;
    v255 = (void (**)(char *, uint64_t, unint64_t))(v252 + 32);
    v256 = v36 + 32;
    v253 = (void (**)(char *, unint64_t))(v252 + 8);
    v254 = (void (**)(char *, char *, unint64_t))(v252 + 16);
    v268 = (void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v252 + 56);
    v269 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 6);
    uint64_t v23 = &qword_1004C6A08;
    v251 = _swiftEmptyArrayStorage;
    while (1)
    {
      if (v275.n128_u64[0])
      {
        uint64_t v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v37 >= *(void *)(v258 + 16)) {
          goto LABEL_81;
        }
        uint64_t v38 = *(id *)(v256 + 8 * v37);
      }
      uint64_t v39 = v38;
      if (__OFADD__(v37++, 1))
      {
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        swift_bridgeObjectRetain();
        uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      [v38 v35[322]];
      long long v42 = v41;
      long long v44 = v43;
      uint64_t v46 = v45;
      uint64_t v48 = v47;
      sub_10005CC70((CGFloat *)v285);
      *(_OWORD *)v284 = v285[0];
      *(_OWORD *)&v284[16] = v285[1];
      *(_OWORD *)&v284[32] = v285[2];
      v288.origin.CGFloat x = v42;
      v288.origin.CGFloat y = v44;
      v288.size.width = v46;
      v288.size.height = v48;
      v289 = CGRectApplyAffineTransform(v288, (CGAffineTransform *)v284);
      y_low = LODWORD(v289.origin.y);
      height_low = LODWORD(v289.size.height);
      *(CGFloat *)&v281 = v289.size.width;
      CGRect.center.getter();
      if (qword_1004C3238 != -1) {
        swift_once();
      }
      uint64_t v51 = qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits;
      if (*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80)) {
        goto LABEL_112;
      }
      *(void *)&v280 = v39;
      CGRectGetWidth(*(CGRect *)(v51 + 48));
      v5.i32[0] = y_low;
      v4.i32[0] = height_low;
      CGRect.center.getter();
      if (*(unsigned char *)(v51 + 80)) {
        goto LABEL_113;
      }
      CGRectGetHeight(*(CGRect *)(v51 + 48));
      uint64_t v52 = -1;
      uint64_t v53 = _swiftEmptyArrayStorage;
      do
      {
        static CGPoint.+ infix(_:_:)();
        uint64_t v55 = v54;
        uint64_t v57 = v56;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v53 = sub_10006E718(0, *((void *)v53 + 2) + 1, 1, (uint64_t)v53);
        }
        uint64_t v59 = *((void *)v53 + 2);
        NSString v58 = *((void *)v53 + 3);
        if (v59 >= v58 >> 1) {
          uint64_t v53 = sub_10006E718((double *)(v58 > 1), v59 + 1, 1, (uint64_t)v53);
        }
        *((void *)v53 + sub_10004ACAC(3, 1, 2) = v59 + 1;
        Swift::String v60 = &v53[2 * v59];
        *((void *)v60 + 4) = v55;
        *((void *)v60 + 5) = v57;
        static CGPoint.+ infix(_:_:)();
        uint64_t v62 = v61;
        uint64_t v64 = v63;
        objc_super v66 = *((void *)v53 + 2);
        long long v65 = *((void *)v53 + 3);
        if (v66 >= v65 >> 1) {
          uint64_t v53 = sub_10006E718((double *)(v65 > 1), v66 + 1, 1, (uint64_t)v53);
        }
        *((void *)v53 + sub_10004ACAC(3, 1, 2) = v66 + 1;
        uint64_t v67 = &v53[2 * v66];
        *((void *)v67 + 4) = v62;
        *((void *)v67 + 5) = v64;
        static CGPoint.+ infix(_:_:)();
        long long v69 = v68;
        long long v71 = v70;
        char v73 = *((void *)v53 + 2);
        long long v72 = *((void *)v53 + 3);
        if (v73 >= v72 >> 1) {
          uint64_t v53 = sub_10006E718((double *)(v72 > 1), v73 + 1, 1, (uint64_t)v53);
        }
        *((void *)v53 + sub_10004ACAC(3, 1, 2) = v73 + 1;
        uint64_t v74 = &v53[2 * v73];
        *((void *)v74 + 4) = v69;
        *((void *)v74 + 5) = v71;
        ++v52;
      }
      while (v52 != 2);
      uint64_t v10 = v14;
      MeasureCore.shared.unsafeMutableAddressor();
      swift_retain();
      uint64_t v75 = swift_bridgeObjectRetain();
      uint64_t v76 = (unint64_t)MeasureCore.adHitTestPositionOnly(screenPoints:frame:)((Swift::OpaquePointer)v75, (ARFrame)v278);
      swift_release();
      swift_bridgeObjectRelease();
      if (!v76) {
        break;
      }
      id v77 = (float32x4_t *)SIMD3<>.zero.unsafeMutableAddressor();
      char v78 = *v77;
      uint64_t v79 = *(void *)(v76 + 16);
      if (v79)
      {
        char v80 = (float *)(v76 + 40);
        float v81 = *(void *)(v76 + 16);
        do
        {
          *(float32x2_t *)v83.f32 = vadd_f32(*(float32x2_t *)v78.f32, *(float32x2_t *)(v80 - 2));
          char v82 = *v80;
          v80 += 4;
          v83.f32[2] = v78.f32[2] + v82;
          v83.i32[3] = 0;
          char v78 = v83;
          --v81;
        }
        while (v81);
      }
      else
      {
        uint64_t v83 = *v77;
      }
      v279 = v83;
      swift_bridgeObjectRelease();
      *(float *)v84.i32 = (float)v79;
      *(float32x2_t *)v85.f32 = vdiv_f32(*(float32x2_t *)v279.f32, (float32x2_t)vdup_lane_s32(v84, 0));
      v85.f32[2] = v279.f32[2] / (float)v79;
      v85.i32[3] = 0;
      v279 = v85;
      id v86 = v272.n128_u64[0];
      sub_1000735DC((uint64_t)v270, v272.n128_i64[0], &qword_1004C6A08);
      uint64_t v87 = v271.i64[0];
      if ((*v269)(v86, 1, v271.i64[0]) == 1)
      {
        sub_10002B9C0(v86, &qword_1004C6A08);
      }
      else
      {
        id v88 = v87;
        uint64_t v89 = *(int *)(v87 + 48);
        uint64_t v90 = *v255;
        *(void *)&v267 = v37;
        uint64_t v91 = v259;
        uint64_t v92 = v277.n128_u64[0];
        v90(v259, v86, v277.n128_u64[0]);
        long long v93 = *(void **)(v86 + v89);
        *(void *)&v91[v89] = v93;
        objc_super v94 = *(int *)(v88 + 48);
        long long v95 = v260;
        (*v254)(v260, v91, v92);
        *(void *)&v95[v94] = v93;
        long long v96 = *(double (**)(void))((swift_isaMask & *v93) + 0x210);
        long long v97 = v93;
        *(double *)v98.i64 = v96();
        uint64_t v10 = v14;
        a1 = v257;
        v265 = v99;
        v266 = v98;
        v263 = v101;
        v264 = v100;

        simd_float4x4.position.getter();
        unint64_t v103 = vsubq_f32(v102, v279);
        uint64_t v104 = vmulq_f32(v103, v103);
        v266 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v104, 2), vaddq_f32(v104, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v104.f32, 1)));
        char v105 = v95;
        uint64_t v23 = &qword_1004C6A08;
        uint64_t v106 = v92;
        uint64_t v34 = v284;
        (*v253)(v105, v106);
        uint64_t v107 = (uint64_t)v91;
        uint64_t v37 = v267;
        sub_10002B9C0(v107, &qword_1004C6530);
        if (v266.f32[0] <= 0.0625) {
          break;
        }
      }
      uint64_t v108 = sub_100066D3C(0, v279);
      if (v110)
      {
        swift_bridgeObjectRelease();
        uint64_t v131 = (uint64_t)v273;
        Date.init()();

        (*v268)(v131, 0, 1, v277.n128_u64[0]);
        uint64_t v132 = v261;
        swift_beginAccess();
        sub_100073BD8(v131, v132, (uint64_t *)&unk_1004C68F0);
        swift_endAccess();
        goto LABEL_8;
      }
      uint64_t v111 = v37;
      *(void *)&id v112 = v108;
      *((void *)&v112 + sub_10004ACAC(2, 1, 1) = v109;
      v267 = v112;
      uint64_t v113 = *v268;
      uint64_t v114 = (uint64_t)v273;
      (*v268)((uint64_t)v273, 1, 1, v277.n128_u64[0]);
      unint64_t v115 = v261;
      swift_beginAccess();
      sub_100073BD8(v114, v115, (uint64_t *)&unk_1004C68F0);
      swift_endAccess();
      sub_100067A3C(v284);
      float32x2_t v4 = *(float32x2_t *)v284;
      float32x2_t v5 = *(float32x2_t *)&v284[8];
      *(void *)&v281 = *(void *)&v284[16];
      *(void *)&v267 = *(void *)&v284[24];
      v266.i64[0] = *(void *)&v284[32];
      uint64_t v116 = *(void *)&v284[40];
      objc_super v117 = *(void *)&v284[48];
      id v118 = *(void *)&v284[56];
      swift_bridgeObjectRelease();
      if ((v287[192] & 1) != 0
        || (simd_float4x4.position.getter(),
            id v120 = vsubq_f32(v119, v279),
            id v121 = vmulq_f32(v120, v120),
            sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v121, 2), vaddq_f32(v121, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v121.f32, 1))).f32[0]) > 0.25))
      {
        SIMD2<>.init(_:)();
        uint64_t v123 = v122;
        uint64_t v124 = v4;
        uint64_t v125 = v5;
        SIMD2<>.init(_:)();
        float32x2_t v4 = v126;
        SIMD2<>.init(_:)();
        SIMD2<>.init(_:)();
        float32x2_t v5 = v127;
        SIMD2<>.init(_:)();
        uint64_t v37 = v111;
        if (!sub_100132260(v123, v4, v5, v128))
        {

LABEL_54:
          BOOL v35 = &selRef_replaySensorDidFinishReplayingData;
          uint64_t v23 = &qword_1004C6A08;
          goto LABEL_9;
        }
        uint64_t v129 = 0;
        uint64_t v23 = &qword_1004C6A08;
        uint64_t v130 = 0.5;
        float32x2_t v4 = v124;
        float32x2_t v5 = v125;
      }
      else
      {
        uint64_t v129 = 1;
        uint64_t v37 = v111;
        uint64_t v23 = &qword_1004C6A08;
        uint64_t v130 = 0.5;
      }
      long long v133 = (uint64_t)v273;
      Date.init()();
      v113(v133, 0, 1, v277.n128_u64[0]);
      uint64_t v134 = v249;
      swift_beginAccess();
      sub_100073BD8(v133, v134, (uint64_t *)&unk_1004C68F0);
      swift_endAccess();
      BOOL v35 = &selRef_replaySensorDidFinishReplayingData;
      uint64_t v135 = (void *)v280;
      [(id)v280 boundingBox];
      CGRect.center.getter();
      static CGPoint.distanceSq(_:_:)();
      uint64_t v137 = v136;
      [v135 boundingBox];
      if (CGRectGetWidth(v290) <= v130)
      {
        [v135 boundingBox];
        if (CGRectGetHeight(v291) <= v130)
        {
          uint64_t v138 = v135;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v251 = sub_10006EB40(0, *((void *)v251 + 2) + 1, 1, v251);
          }
          Swift::String v140 = *((void *)v251 + 2);
          uint64_t v139 = *((void *)v251 + 3);
          uint64_t v141 = v279;
          if (v140 >= v139 >> 1)
          {
            v145 = sub_10006EB40((double *)(v139 > 1), v140 + 1, 1, v251);
            uint64_t v141 = v279;
            v251 = v145;
          }
          uint64_t v142 = v251;
          *((void *)v251 + sub_10004ACAC(3, 1, 2) = v140 + 1;
          v143 = &v142[14 * v140];
          *((void *)v143 + 4) = v138;
          v143[5] = *(double *)&v4;
          v143[6] = *(double *)&v5;
          v144 = v267;
          *((void *)v143 + 7) = v281;
          *((void *)v143 + 8) = v144;
          v143[9] = *(double *)v266.i64;
          *((void *)v143 + 10) = v116;
          *((void *)v143 + 1sub_10004ACAC(2, 1, 1) = v117;
          *((void *)v143 + 1sub_10004ACAC(3, 1, 2) = v118;
          *((float32x4_t *)v143 + 7) = v141;
          *((_DWORD *)v143 + 3sub_10004ACAC(3, 1, 2) = v137;
          *((unsigned char *)v143 + 13sub_10004ACAC(3, 1, 2) = v129;

          goto LABEL_54;
        }
      }

LABEL_9:
      if (v37 == (void)v276) {
        goto LABEL_57;
      }
    }

    swift_bridgeObjectRelease();
LABEL_8:
    BOOL v35 = &selRef_replaySensorDidFinishReplayingData;
    goto LABEL_9;
  }
  v251 = _swiftEmptyArrayStorage;
  uint64_t v10 = v14;
LABEL_57:
  swift_bridgeObjectRelease();
  uint64_t v146 = (unint64_t)v251;
  uint64_t v147 = v277.n128_u64[0];
  if (!*((void *)v251 + 2))
  {
LABEL_64:
    swift_bridgeObjectRelease();
    sub_1000732CC((uint64_t)v287);
    v152 = (uint64_t)v273;
    (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v252 + 56))(v273, 1, 1, v147);
    uint64_t v153 = (uint64_t)&a1[qword_1004C6460];
    swift_beginAccess();
    sub_100073BD8(v152, v153, (uint64_t *)&unk_1004C68F0);
    swift_endAccess();
    return ariadne_trace(_:_:_:_:_:)();
  }
  *(void *)v284 = v251;
  swift_bridgeObjectRetain_n();
  sub_10005CA00((uint64_t *)v284, (uint64_t (*)(uint64_t))sub_1000BE21C, sub_100071290);
  swift_bridgeObjectRelease();
  uint64_t v148 = *(void *)v284;
  uint64_t v149 = *(void *)(*(void *)v284 + 16);
  if (!v149)
  {
    swift_release();
    a1 = v257;
    goto LABEL_64;
  }
  v150 = 0;
  while (1)
  {
    uint64_t v151 = *(void *)v284 + v150;
    if (*(unsigned char *)(*(void *)v284 + v150 + 132)) {
      break;
    }
    v150 += 112;
    if (!--v149) {
      goto LABEL_74;
    }
  }
  if (v150)
  {
    uint64_t v34 = (unsigned char *)(*(void *)v284 + v150);
    v4.i32[0] = *(_DWORD *)(*(void *)v284 + v150 + 128);
    v5.i32[0] = *(_DWORD *)(*(void *)v284 + 128);
    swift_bridgeObjectRelease();
    uint64_t v154 = *(void (**)(unsigned char *__return_ptr, uint64_t))(**(void **)&v257[qword_1004C63A0] + 144);
    uint64_t v155 = swift_retain();
    v154(v284, v155);
    swift_release();
    uint64_t v146 = *(void *)&v284[16];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!(v146 >> 62))
    {
      id v156 = v252;
      if (*(void *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_68;
      }
LABEL_85:
      swift_bridgeObjectRelease();
      goto LABEL_86;
    }
  }
  else
  {
LABEL_74:
    swift_bridgeObjectRelease();
    if (*(void *)(v148 + 16))
    {
      v163 = *(void **)(v148 + 32);
      v164 = *(_OWORD *)(v148 + 88);
      v280 = *(_OWORD *)(v148 + 72);
      v281 = v164;
      v165 = *(float32x4_t *)(v148 + 56);
      v278 = *(_OWORD *)(v148 + 40);
      v279 = v165;
      v276 = *(_OWORD *)(v148 + 112);
      v166 = *(_DWORD *)(v148 + 128);
      v167 = *(unsigned char *)(v148 + 132);
      v168 = v163;
      swift_release();
      goto LABEL_90;
    }
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v176 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  id v156 = v252;
  if (!v176) {
    goto LABEL_85;
  }
LABEL_68:
  if ((v146 & 0xC000000000000001) != 0)
  {
    v157 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_71:
    v158 = v157;
    swift_bridgeObjectRelease();
    type metadata accessor for WorldPerson();
    v159 = (void *)swift_dynamicCastClass();
    if (v159)
    {
      uint64_t v160 = v245;
      (*(void (**)(void))((swift_isaMask & *v159) + 0x240))();
      unint64_t v161 = (uint64_t)v160;
      uint64_t v162 = v160;
      uint64_t v147 = v277.n128_u64[0];
      if ((*(unsigned int (**)(char *, uint64_t, unint64_t))(v156 + 48))(v162, 1, v277.n128_u64[0]) == 1)
      {

        sub_10002B9C0(v161, (uint64_t *)&unk_1004C68F0);
LABEL_86:
        if ((float)(v4.f32[0] / v5.f32[0]) <= 2.5)
        {
          v177 = *(void **)(v151 + 32);
          v180 = *(_OWORD *)(v148 + v150 + 88);
          v280 = *(_OWORD *)(v148 + v150 + 72);
          v281 = v180;
          v181 = *(float32x4_t *)(v148 + v150 + 56);
          v278 = *(_OWORD *)(v148 + v150 + 40);
          v279 = v181;
          v276 = *(_OWORD *)(v148 + v150 + 112);
          v166 = *((_DWORD *)v34 + 32);
          v167 = *(unsigned char *)(v151 + 132);
        }
        else
        {
          v177 = *(void **)(v148 + 32);
          v178 = *(_OWORD *)(v148 + 88);
          v280 = *(_OWORD *)(v148 + 72);
          v281 = v178;
          v179 = *(float32x4_t *)(v148 + 56);
          v278 = *(_OWORD *)(v148 + 40);
          v279 = v179;
          v276 = *(_OWORD *)(v148 + 112);
          v166 = *(_DWORD *)(v148 + 128);
          v167 = *(unsigned char *)(v148 + 132);
        }
        v168 = v177;
        swift_release();
        uint64_t v147 = v277.n128_u64[0];
LABEL_90:
        uint64_t v182 = v168;
        [v182 boundingBox];
        uint64_t v184 = v183;
        uint64_t v186 = v185;
        uint64_t v188 = v187;
        uint64_t v190 = v189;
        uint64_t v191 = v257;
        sub_10005CC70((CGFloat *)v286);
        *(_OWORD *)v284 = v286[0];
        *(_OWORD *)&v284[16] = v286[1];
        *(_OWORD *)&v284[32] = v286[2];
        v292.origin.CGFloat x = v184;
        v292.origin.CGFloat y = v186;
        v292.size.width = v188;
        v292.size.height = v190;
        v293 = CGRectApplyAffineTransform(v292, (CGAffineTransform *)v284);
        CGFloat x = v293.origin.x;
        CGFloat y = v293.origin.y;
        width = v293.size.width;
        height = v293.size.height;
        simd_float4x4.translated(to:)();
        p_cache = &OBJC_METACLASS____TtC7Measure13DebugLineView.cache;
        uint64_t v197 = &OBJC_METACLASS____TtC7Measure13DebugLineView.cache;
        v277 = v198;
        v274 = v199;
        v275 = v200;
        v272 = v201;
        if (v167)
        {
          sub_1000732CC((uint64_t)v287);
LABEL_97:
          v209 = (uint64_t)v273;
          (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v252 + 56))(v273, 1, 1, v147);
          v210 = (uint64_t)p_cache[128] + (void)v191;
          swift_beginAccess();
          sub_100073BD8(v209, v210, (uint64_t *)&unk_1004C68F0);
          swift_endAccess();
          v211 = (char *)v197[129] + (void)v191;
          *(void *)v211 = 0;
          *((void *)v211 + sub_10004ACAC(2, 1, 1) = 0;
          v211[16] = 1;
          v212 = *(uint64_t (**)(uint64_t))(**(void **)&v191[v248] + 200);
          v213 = swift_retain();
          v214 = v212(v213);
          swift_release();
          v215 = swift_allocObject();
          *(CGFloat *)(v215 + 16) = x;
          *(CGFloat *)(v215 + 24) = y;
          *(CGFloat *)(v215 + 3sub_10004ACAC(3, 1, 2) = width;
          *(CGFloat *)(v215 + 40) = height;
          *(void *)(v215 + 48) = v182;
          v216 = v278;
          *(_OWORD *)(v215 + 56) = v278;
          v278 = v216;
          v217 = *((void *)&v216 + 1);
          v218 = v279;
          *(float32x4_t *)(v215 + 7sub_10004ACAC(3, 1, 2) = v279;
          v279 = v218;
          v219 = v218.i64[1];
          v220 = v280;
          *(_OWORD *)(v215 + 88) = v280;
          v280 = v220;
          v221 = *((void *)&v220 + 1);
          v222 = v281;
          *(_OWORD *)(v215 + 104) = v281;
          v281 = v222;
          v223 = *((void *)&v222 + 1);
          *(_OWORD *)(v215 + 128) = v276;
          *(_DWORD *)(v215 + 144) = v166;
          *(unsigned char *)(v215 + 148) = v167;
          *(void *)(v215 + 15sub_10004ACAC(3, 1, 2) = v191;
          v224 = v274;
          *(__n128 *)(v215 + 160) = v272;
          *(__n128 *)(v215 + 176) = v224;
          v225 = v277;
          *(__n128 *)(v215 + 19sub_10004ACAC(3, 1, 2) = v275;
          *(__n128 *)(v215 + 208) = v225;
          v226 = *(void (**)(void (*)(uint64_t), uint64_t))(*(void *)v214 + 416);
          v227 = v182;
          v191;
          v226(sub_100073544, v215);
          swift_release();
          swift_release();
          if (qword_1004C2AC8 != -1) {
            swift_once();
          }
          *(void *)v284 = 0;
          *(void *)&v284[8] = 0xE000000000000000;
          _StringGuts.grow(_:)(22);
          swift_bridgeObjectRelease();
          v283._uint64_t countAndFlagsBits = 0xD000000000000014;
          v283._object = (void *)0x8000000100422480;
          swift_retain();
          StateValue.wrappedValue.getter();
          swift_release();
          memcpy(v284, v282, 0x200uLL);
          sub_100016F7C((uint64_t)v284);
          v282[0] = *(void *)v284;
          v228._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
          String.append(_:)(v228);
          swift_bridgeObjectRelease();
          Log.debug(_:isPrivate:)(v283, 0);
          swift_bridgeObjectRelease();
          v282[0] = v278;
          v282[1] = v217;
          v282[2] = v279.i64[0];
          v282[3] = v219;
          v282[4] = v280;
          v282[5] = v221;
          v282[6] = v281;
          v282[7] = v223;
          LOBYTE(v282[8]) = 0;
          swift_retain();
          Synchronized.wrappedValue.setter();

          swift_release();
          return ariadne_trace(_:_:_:_:_:)();
        }
        v202 = (float32x4_t *)&v191[qword_1004C6408];
        if (v191[qword_1004C6408 + 16])
        {
          sub_1000732CC((uint64_t)v287);
          v203 = 0;
        }
        else
        {
          v271 = *v202;
          simd_float4x4.position.getter();
          v205 = vsubq_f32(v271, v204);
          v206 = vmulq_f32(v205, v205);
          v207 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v206, 2), vaddq_f32(v206, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v206.f32, 1))).f32[0]);
          sub_1000732CC((uint64_t)v287);
          v203 = v207 > 0.25;
        }
        v208 = (uint64_t)v247;
        if (v287[392])
        {
          uint64_t v191 = v257;
          sub_100067D18(v272, v274, v275, v277);
          p_cache = &OBJC_METACLASS____TtC7Measure13DebugLineView.cache;
          goto LABEL_97;
        }
        v230 = (uint64_t)&v257[qword_1004C6400];
        swift_beginAccess();
        sub_1000735DC(v230, v208, (uint64_t *)&unk_1004C68F0);
        v231 = v252;
        if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v252 + 48))(v208, 1, v147) == 1)
        {
          sub_10002B9C0(v208, (uint64_t *)&unk_1004C68F0);
        }
        else
        {
          v232 = v244;
          (*(void (**)(char *, uint64_t, unint64_t))(v231 + 32))(v244, v208, v147);
          if (!v203)
          {
            v239 = v246;
            Date.init()();
            Date.timeIntervalSince(_:)();
            v241 = v240;
            v242 = *(void (**)(char *, unint64_t))(v231 + 8);
            v242(v239, v147);
            if (v241 > 0.5)
            {
              uint64_t v191 = v257;
              sub_100067D18(v272, v274, v275, v277);
              v242(v232, v147);
              uint64_t v197 = (void **)(&OBJC_METACLASS____TtC7Measure13DebugLineView + 16);
              p_cache = (void **)(&OBJC_METACLASS____TtC7Measure13DebugLineView + 16);
              goto LABEL_97;
            }
            v242(v232, v147);
LABEL_106:
            v234 = *(uint64_t (**)(uint64_t))(**(void **)&v257[v248] + 200);
            v235 = swift_retain();
            v236 = v234(v235);
            swift_release();
            v237 = (CGFloat *)swift_allocObject();
            v237[2] = x;
            v237[3] = y;
            v237[4] = width;
            v237[5] = height;
            (*(void (**)(__n128 (*)(uint64_t), CGFloat *))(*(void *)v236 + 416))(sub_1000735CC, v237);
            swift_release();
            swift_release();

            simd_float4x4.position.getter();
            *v202 = v238;
            v202[1].i8[0] = 0;
            return ariadne_trace(_:_:_:_:_:)();
          }
          (*(void (**)(char *, unint64_t))(v231 + 8))(v232, v147);
        }
        v233 = (uint64_t)v273;
        Date.init()();
        (*(void (**)(uint64_t, void, uint64_t, unint64_t))(v252 + 56))(v233, 0, 1, v147);
        swift_beginAccess();
        sub_100073BD8(v233, v230, (uint64_t *)&unk_1004C68F0);
        swift_endAccess();
        goto LABEL_106;
      }
      (*(void (**)(char *, uint64_t, unint64_t))(v156 + 32))(v10, v161, v147);
      v169 = v246;
      Date.init()();
      Date.timeIntervalSince(_:)();
      uint64_t v171 = v170;
      v275.n128_u64[0] = (unint64_t)v10;
      v172 = *(void (**)(char *, unint64_t))(v156 + 8);
      v172(v169, v147);
      if (v171 < 3.0)
      {
        v173 = *(void **)(v151 + 32);
        v174 = *(_OWORD *)(v148 + v150 + 88);
        v280 = *(_OWORD *)(v148 + v150 + 72);
        v281 = v174;
        v175 = *(float32x4_t *)(v148 + v150 + 56);
        v278 = *(_OWORD *)(v148 + v150 + 40);
        v279 = v175;
        v276 = *(_OWORD *)(v148 + v150 + 112);
        v166 = *((_DWORD *)v34 + 32);
        v167 = *(unsigned char *)(v151 + 132);
        v168 = v173;
        swift_release();

        v172((char *)v275.n128_u64[0], v147);
        goto LABEL_90;
      }
      v172((char *)v275.n128_u64[0], v147);
    }

    goto LABEL_86;
  }
  if (*(void *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v157 = *(id *)(v146 + 32);
    goto LABEL_71;
  }
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
  double result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100066D3C(__int32 a1, float32x4_t a2)
{
  void (*v46)(char **__return_ptr, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  id v52;
  void *v53;
  float32x4_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  id v58;
  float32x4_t v59;
  float v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  id v65;
  void *v66;
  float32x4_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  float32x4_t v74;
  long long v75;
  float32x4_t v76;
  long long v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  void *v83;
  id v84;
  void *v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t result;
  char *v90;
  id v91;
  long long v92;
  long long v93;
  long long v94;
  long long v95;
  float32x4_t v96;
  long long v97;
  float32x4_t v98;
  char *v99[16];
  float v100;
  char v101;

  uint64_t v3 = v2;
  long long v96 = a2;
  uint64_t v5 = sub_100012894((uint64_t *)&unk_1004C68F0);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98.i64[0] = type metadata accessor for ARPlaneAnchor.Classification();
  uint64_t v8 = *(void *)(v98.i64[0] - 8);
  __chkstk_darwin(v98.i64[0]);
  *(void *)&long long v97 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000A3850();
  uint64_t v11 = 0;
  if (!v10) {
    return v11;
  }
  uint64_t v12 = (void *)v10;
  MeasureCore.shared.unsafeMutableAddressor();
  swift_retain();
  uint64_t v13 = MeasureCore.allPlaneAnchors.getter();
  swift_release();
  sub_10006BC00(v13);
  unint64_t v15 = v14;
  id v16 = [v12 camera];
  [v16 transform];
  long long v95 = v17;
  objc_super v94 = v18;
  long long v93 = v19;
  uint64_t v92 = v20;

  simd_float4x4.position.getter();
  float32x4_t v22 = vsubq_f32(v96, v21);
  float32x4_t v23 = v22;
  v23.i32[1] = vmuls_lane_f32(0.0, *(float32x2_t *)v22.f32, 1);
  v23.i32[2] = v22.i32[2];
  int32x4_t v24 = (int32x4_t)vmulq_f32(v23, v23);
  v24.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v24, 2), vadd_f32(*(float32x2_t *)v24.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v24.i8, 1))).u32[0];
  float32x2_t v25 = vrsqrte_f32((float32x2_t)v24.u32[0]);
  float32x2_t v26 = vmul_f32(v25, vrsqrts_f32((float32x2_t)v24.u32[0], vmul_f32(v25, v25)));
  float32x4_t v27 = vmulq_n_f32(v23, vmul_f32(v26, vrsqrts_f32((float32x2_t)v24.u32[0], vmul_f32(v26, v26))).f32[0]);
  *(float32x2_t *)&long long v28 = vadd_f32(*(float32x2_t *)v96.f32, vmul_f32(*(float32x2_t *)v27.f32, (float32x2_t)0xBF000000BF000000));
  *((float *)&v28 + sub_10004ACAC(3, 1, 2) = v96.f32[2] + vmuls_lane_f32(-0.5, v27, 2);
  HIDWORD(v28) = 0;
  long long v95 = v28;
  long long v29 = (float32x2_t *)SIMD3<>.up.unsafeMutableAddressor();
  *(float32x2_t *)&long long v30 = vsub_f32(0, *v29);
  *((float *)&v30 + sub_10004ACAC(3, 1, 2) = 0.0 - v29[1].f32[0];
  HIDWORD(v30) = 0;
  objc_super v94 = v30;
  id v31 = objc_allocWithZone((Class)ARRaycastQuery);
  id v32 = [v31 initWithOrigin:0 direction:0 allowingTarget:*(double *)&v95 alignment:*(double *)&v94];
  *(void *)&long long v93 = v3;
  id v33 = [*(id *)(v3 + qword_1004C6470) session];
  *(void *)&uint64_t v92 = v32;
  id v34 = [v33 raycast:v32];

  sub_10001C99C(0, (unint64_t *)&unk_1004C6A30);
  unint64_t v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v36 = swift_bridgeObjectRetain();
  unint64_t v37 = (unint64_t)sub_1000723F4(v36, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v35 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v91 = v12;
  uint64_t v90 = v7;
  if (v38)
  {
    if (!(v37 >> 62))
    {
      if (*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_7;
      }
      goto LABEL_53;
    }
    swift_bridgeObjectRetain();
    char v78 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v78)
    {
LABEL_53:
      swift_bridgeObjectRelease();
      v96.i64[0] = v8 + 88;
      LODWORD(v95) = enum case for ARPlaneAnchor.Classification.none(_:);
      *(void *)&objc_super v94 = v8 + 8;
      swift_bridgeObjectRetain();
      uint64_t v79 = 4;
      char v80 = v97;
      while (1)
      {
        if ((v35 & 0xC000000000000001) != 0) {
          uint64_t v84 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v84 = *(id *)(v35 + 8 * v79);
        }
        uint64_t v85 = v84;
        id v86 = v79 - 3;
        if (__OFADD__(v79 - 4, 1))
        {
          __break(1u);
          goto LABEL_70;
        }
        uint64_t v87 = [v84 anchor];
        if (v87)
        {
          uint64_t v83 = v87;
          self;
          if (!swift_dynamicCastObjCClass())
          {

            goto LABEL_56;
          }
          ARPlaneAnchor.classification.getter();

          float v81 = v98.i64[0];
          char v82 = (*(uint64_t (**)(uint64_t, uint64_t))v96.i64[0])(v80, v98.i64[0]);
          (*(void (**)(uint64_t, uint64_t))v94)(v80, v81);
          if (v82 == v95)
          {
            swift_bridgeObjectRelease_n();

            uint64_t v48 = (uint64_t)v90;
            Date.init()();

            id v88 = type metadata accessor for Date();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v48, 0, 1, v88);
            long long v49 = v93 + qword_1004C6458;
            goto LABEL_66;
          }
        }
        uint64_t v83 = v85;
LABEL_56:

        ++v79;
        if (v86 == v38)
        {

          swift_bridgeObjectRelease_n();
          return 0;
        }
      }
    }
  }
LABEL_7:
  v98.i32[0] = a1;
  swift_bridgeObjectRelease();
  uint64_t v39 = type metadata accessor for Date();
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56);
  v40(v7, 1, 1, v39);
  uint64_t v41 = v93 + qword_1004C6458;
  swift_beginAccess();
  sub_100073BD8((uint64_t)v7, v41, (uint64_t *)&unk_1004C68F0);
  swift_endAccess();
  long long v42 = (double **)swift_bridgeObjectRetain();
  long long v43 = (id *)sub_100072768(v42, v37);
  swift_bridgeObjectRelease_n();
  if ((unint64_t)v43 >> 62)
  {
    swift_bridgeObjectRetain();
    int64_t v44 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v44 > 1) {
      goto LABEL_9;
    }
    swift_bridgeObjectRetain();
    int64_t v44 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    int64_t v44 = *(void *)(((unint64_t)v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v44 > 1)
    {
LABEL_9:
      if (v98.i8[0])
      {
        uint64_t v45 = v93;
        uint64_t v46 = *(void (**)(char **__return_ptr, uint64_t))(**(void **)(v93 + qword_1004C6390) + 144);
        uint64_t v47 = swift_retain();
        v46(v99, v47);
        swift_release();
        if (v101)
        {
          swift_bridgeObjectRelease();
          uint64_t v48 = (uint64_t)v90;
          Date.init()();

          v40((char *)v48, 0, 1, v39);
          long long v49 = v45 + qword_1004C6450;
LABEL_66:
          swift_beginAccess();
          sub_100073BD8(v48, v49, (uint64_t *)&unk_1004C68F0);
          swift_endAccess();
          return 0;
        }
        Swift::String v60 = v100;
        uint64_t v61 = (uint64_t)v90;
        v40(v90, 1, 1, v39);
        uint64_t v62 = v45 + qword_1004C6450;
        swift_beginAccess();
        sub_100073BD8(v61, v62, (uint64_t *)&unk_1004C68F0);
        swift_endAccess();
        v99[0] = (char *)_swiftEmptyArrayStorage;
        sub_1000BBE34(0, v44, 0);
        uint64_t v63 = 0;
        uint64_t v64 = v99[0];
        do
        {
          if (((unint64_t)v43 & 0xC000000000000001) != 0) {
            long long v65 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            long long v65 = v43[v63 + 4];
          }
          objc_super v66 = v65;
          [v65 worldTransform:v90];
          simd_float4x4.position.getter();
          long long v98 = v67;

          v99[0] = v64;
          long long v69 = *((void *)v64 + 2);
          uint64_t v68 = *((void *)v64 + 3);
          if (v69 >= v68 >> 1)
          {
            sub_1000BBE34((char *)(v68 > 1), v69 + 1, 1);
            uint64_t v64 = v99[0];
          }
          ++v63;
          *((void *)v64 + sub_10004ACAC(3, 1, 2) = v69 + 1;
          *(float32x4_t *)&v64[16 * v69 + 32] = v98;
        }
        while (v44 != v63);
        swift_bridgeObjectRelease();
        v99[0] = v64;
        swift_bridgeObjectRetain();
        sub_10005C984(v99, v60);
        swift_bridgeObjectRelease();
        if (*((void *)v99[0] + 2))
        {
          long long v98 = *((float32x4_t *)v99[0] + 2);
        }
        else
        {

          long long v98 = 0u;
        }
        swift_release();
        return v98.i64[0];
      }
      v99[0] = (char *)_swiftEmptyArrayStorage;
      sub_1000BBE34(0, v44, 0);
      uint64_t v50 = 0;
      uint64_t v51 = v99[0];
      do
      {
        if (((unint64_t)v43 & 0xC000000000000001) != 0) {
          uint64_t v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v52 = v43[v50 + 4];
        }
        uint64_t v53 = v52;
        [v52 worldTransform:v90];
        simd_float4x4.position.getter();
        long long v98 = v54;

        v99[0] = v51;
        uint64_t v56 = *((void *)v51 + 2);
        uint64_t v55 = *((void *)v51 + 3);
        if (v56 >= v55 >> 1)
        {
          sub_1000BBE34((char *)(v55 > 1), v56 + 1, 1);
          uint64_t v51 = v99[0];
        }
        ++v50;
        *((void *)v51 + sub_10004ACAC(3, 1, 2) = v56 + 1;
        *(float32x4_t *)&v51[16 * v56 + 32] = v98;
      }
      while (v44 != v50);
      swift_bridgeObjectRelease();
      v99[0] = v51;
      swift_bridgeObjectRetain();
      sub_10005CA00((uint64_t *)v99, (uint64_t (*)(uint64_t))sub_1000BE1F4, sub_10006FF4C);
      swift_bridgeObjectRelease();
      uint64_t v57 = *((void *)v99[0] + 2);
      NSString v58 = v91;
      if (v57)
      {
        if (fabsf(COERCE_FLOAT(vsubq_f32(v96, *(float32x4_t *)(*v99 + 32)).i32[1])) < 2.5)
        {
          uint64_t v59 = *((float32x4_t *)v99[0] + 2);
LABEL_23:
          long long v98 = v59;

          swift_release();
          return v98.i64[0];
        }
        if (v57 == 1)
        {
LABEL_39:
          long long v98 = *((float32x4_t *)v99[0] + 2);

          swift_release();
          return v98.i64[0];
        }
        long long v70 = 3;
        while (1)
        {
          long long v71 = v70 - 1;
          if (__OFADD__(v70 - 2, 1)) {
            break;
          }
          uint64_t v59 = *(float32x4_t *)&v99[0][16 * v70];
          if (fabsf(COERCE_FLOAT(vsubq_f32(v96, v59).i32[1])) < 2.5) {
            goto LABEL_23;
          }
          ++v70;
          if (v71 == v57) {
            goto LABEL_39;
          }
        }
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
      swift_release();

      return 0;
    }
  }
  if (!v44)
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  if (((unint64_t)v43 & 0xC000000000000001) != 0)
  {
LABEL_71:
    long long v72 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_50;
  }
  if (*(void *)(((unint64_t)v43 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    long long v72 = v43[4];
LABEL_50:
    char v73 = v72;
    swift_bridgeObjectRelease();
    [v73 worldTransform];
    long long v98 = v74;
    long long v97 = v75;
    long long v96 = v76;
    long long v95 = v77;

    simd_float4x4.position.getter();
    return v11;
  }
  __break(1u);
  double result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100067A3C@<X0>(void *a1@<X8>)
{
  type metadata accessor for MeasureCamera();
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  sub_100016F7C((uint64_t)__dst);
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(__src, v17, sizeof(__src));
  sub_100016F7C((uint64_t)__src);
  static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
  CGPoint.init(xy:)();
  CGRect.center.getter();
  CGRect.center.getter();
  static CGPoint.- infix(_:_:)();
  CGPoint.length()();
  CGPoint.normalized()();
  CGPoint.multiply(by:)();
  CGPoint.multiply(by:)();
  static CGPoint.- prefix(_:)();
  CGPoint.multiply(by:)();
  static CGPoint.- prefix(_:)();
  static CGPoint.+ infix(_:_:)();
  static CGPoint.+ infix(_:_:)();
  uint64_t v16 = v2;
  uint64_t v15 = v3;
  static CGPoint.+ infix(_:_:)();
  static CGPoint.+ infix(_:_:)();
  uint64_t v13 = v5;
  uint64_t v14 = v4;
  static CGPoint.+ infix(_:_:)();
  static CGPoint.+ infix(_:_:)();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  static CGPoint.+ infix(_:_:)();
  uint64_t result = static CGPoint.+ infix(_:_:)();
  *a1 = v16;
  a1[1] = v15;
  a1[2] = v14;
  a1[3] = v13;
  a1[4] = v7;
  a1[5] = v9;
  a1[6] = v11;
  a1[7] = v12;
  return result;
}

uint64_t sub_100067D18(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  v20[2] = a3;
  v20[3] = a4;
  v20[0] = a1;
  v20[1] = a2;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100012894((uint64_t *)&unk_1004C68F0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v20 - v13;
  uint64_t v15 = (void *)sub_10005CEB8();
  if (v15)
  {

    sub_10005D030(0xD000000000000019, 0x80000001004224A0);
    sub_1000607E8();
  }
  uint64_t v16 = v4 + qword_1004C6460;
  swift_beginAccess();
  sub_1000735DC(v16, (uint64_t)v14, (uint64_t *)&unk_1004C68F0);
  int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5);
  sub_10002B9C0((uint64_t)v14, (uint64_t *)&unk_1004C68F0);
  if (v17 == 1)
  {
    Date.init()();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v12, 0, 1, v5);
    swift_beginAccess();
    sub_100073BD8((uint64_t)v12, v16, (uint64_t *)&unk_1004C68F0);
    swift_endAccess();
  }
  sub_1000680D0();
  Date.init()();
  uint64_t v18 = v4 + qword_1004C6420;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 40))(v18, v8, v5);
  return swift_endAccess();
}

void sub_100067F94(uint64_t a1, void **a2, double a3, double a4, double a5, double a6, __n128 a7, __n128 a8, __n128 a9, __n128 a10)
{
  uint64_t v11 = *a2;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(unsigned char *)(a1 + 43sub_10004ACAC(3, 1, 2) = 1;
  *(double *)(a1 + 360) = a3;
  *(double *)(a1 + 368) = a4;
  *(double *)(a1 + 376) = a5;
  *(double *)(a1 + 384) = a6;
  *(unsigned char *)(a1 + 39sub_10004ACAC(3, 1, 2) = 0;
  [v11 boundingBox];
  CGRect.center.getter();
  double v13 = v12;
  if (qword_1004C3238 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits;
  if (*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80))
  {
    __break(1u);
  }
  else
  {
    double Width = CGRectGetWidth(*(CGRect *)(v14 + 48));
    [v11 boundingBox];
    CGRect.center.getter();
    if ((*(unsigned char *)(v14 + 80) & 1) == 0)
    {
      double v17 = v16;
      CGFloat Height = CGRectGetHeight(*(CGRect *)(v14 + 48));
      *(double *)(a1 + 8) = v13 * Width;
      *(double *)(a1 + 16) = v17 * Height;
      *(unsigned char *)(a1 + 24) = 0;
      *(__n128 *)(a1 + 128) = a7;
      *(__n128 *)(a1 + 144) = a8;
      *(__n128 *)(a1 + 160) = a9;
      *(__n128 *)(a1 + 176) = a10;
      *(unsigned char *)(a1 + 19sub_10004ACAC(3, 1, 2) = 0;
      return;
    }
  }
  __break(1u);
}

void sub_1000680D0()
{
  uint64_t v1 = v0;
  id v2 = objc_allocWithZone((Class)type metadata accessor for WorldPerson());
  uint64_t v3 = (void *)WorldPerson.init(_:)();
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = *(void (**)(void *(*)(), uint64_t))((swift_isaMask & *v3) + 0xF0);
  uint64_t v7 = v3;
  swift_retain();
  v6(sub_100073644, v5);
  swift_release();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  uint64_t v10 = *(void (**)(uint64_t (*)(), uint64_t))((swift_isaMask & *v7) + 0x108);
  uint64_t v11 = v7;
  swift_retain();
  v10(sub_100073650, v9);
  swift_release();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = v1;
  double v13 = *(void (**)(uint64_t (*)(), uint64_t))((swift_isaMask & *v11) + 0x138);
  uint64_t v14 = v11;
  id v15 = v1;
  v13(sub_100073698, v12);

  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = v14;
  uint64_t v18 = *(void (**)(uint64_t (*)(), uint64_t))((swift_isaMask & *v14) + 0x180);
  long long v19 = v14;
  swift_retain();
  v18(sub_1000736A4, v17);
  swift_release();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v15;
  *(void *)(v20 + 24) = v19;
  float32x4_t v21 = *(void (**)(double (*)(), uint64_t))((swift_isaMask & *v19) + 0x1C8);
  float32x4_t v22 = v19;
  float32x4_t v23 = (char *)v15;
  v21(sub_1000736AC, v20);
  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v24;
  *(void *)(v25 + 24) = v22;
  float32x2_t v26 = *(void (**)(void (*)(), uint64_t))((swift_isaMask & *v22) + 0x1B0);
  float32x4_t v27 = v22;
  swift_retain();
  v26(sub_1000736F8, v25);
  swift_release();
  long long v28 = *(void (**)(uint64_t (*)(void), void))((swift_isaMask & *v27) + 0x150);
  long long v29 = v27;
  v28(nullsub_1, 0);

  long long v30 = *(void (**)(uint64_t (*)(void), void))((swift_isaMask & *v29) + 0x168);
  id v31 = v29;
  v30(nullsub_1, 0);

  id v32 = *(void (**)(double (*)(), void))((swift_isaMask & *v31) + 0x1E0);
  id v33 = v31;
  v32(sub_10006CD5C, 0);

  id v34 = *(void (**)(double (*)(), void))((swift_isaMask & *v33) + 0x198);
  unint64_t v35 = v33;
  v34(sub_10006CD5C, 0);

  if (qword_1004C2AC8 != -1) {
    swift_once();
  }
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  _._uint64_t countAndFlagsBits = 0xD000000000000014;
  _._object = (void *)0x80000001004224C0;
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  sub_100016F7C((uint64_t)__dst);
  __src[0] = __dst[0];
  v36._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v36);
  swift_bridgeObjectRelease();
  Log.debug(_:isPrivate:)(_, 0);
  swift_bridgeObjectRelease();
  unint64_t v37 = *(uint64_t (**)(void *))(**(void **)&v23[qword_1004C6398] + 400);
  swift_retain();
  uint64_t v38 = (void (*)(void *, void))v37(__src);
  uint64_t v40 = v39;
  uint64_t v41 = v35;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v38(__src, 0);
  swift_release();
  if (qword_1004C2C10 != -1) {
    swift_once();
  }
  sub_100141BFC(v41);
}

void sub_1000688C8(__n128 *a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D2>, CGFloat a4@<D3>)
{
  void (*v34)(CGAffineTransform *__return_ptr, uint64_t);
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  float v39;
  float *v40;
  double v41;
  uint64_t v42;
  float v43;
  float v44;
  float v45;
  double v46;
  double v47;
  double v48;
  double v49;
  uint64_t v50;
  float v51;
  double v52;
  double v53;
  CGPoint v54;
  double v55;
  float v56;
  double v57;
  double v58;
  CGPoint v59;
  double v60;
  double v61;
  CGFloat v62;
  double v63;
  CGFloat v64;
  CGPoint v65;
  double v66;
  float v67;
  __n128 v68;
  __n128 v69;
  CGFloat v70;
  CGFloat v71;
  CGFloat v72;
  CGFloat v73;
  CGFloat v74;
  CGFloat v75;
  float v76;
  float v77;
  float v78;
  float v79;
  float v80;
  double v81;
  float v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  double v87;
  double v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  double v95;
  double v96;
  double v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  unsigned __int8 *v111;
  float v112;
  float v113;
  uint64_t v114;
  BOOL v115;
  uint64_t v116;
  uint64_t v117;
  double v118;
  double v119;
  double v120;
  double v121;
  long long v122;
  CGPoint v123;
  double v126;
  unsigned int v127;
  float v128;
  uint64_t v130;
  long long v131;
  unint64_t v132;
  unint64_t v133;
  double *v134;
  long long *v135;
  long long v136;
  uint64_t v137;
  float *v138;
  float v139;
  long long v140;
  int32x2_t v141;
  uint64_t v142;
  double *v143;
  uint64_t v144;
  long long v145;
  double v146;
  double v147;
  CVPixelBufferRef v148;
  CVPixelBufferRef v149;
  double *v150;
  __CVBuffer *v151;
  __CVBuffer *v152;
  uint64_t v153;
  long long v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  char *v158;
  char *v159;
  __CVBuffer *v160;
  char *v161;
  uint64_t v162;
  void *v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  double *v168;
  uint64_t v169;
  uint64_t v170;
  CVPixelBufferRef v171;
  int v172;
  double v173;
  double v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  __n128 *v187;
  float v188;
  uint64_t v189;
  double v190;
  __n128 v191;
  CGFloat v192;
  __n128 v193;
  CGFloat v194;
  __n128 v195;
  CGFloat v196;
  __n128 v197;
  __n128 v198;
  __n128 v199;
  __n128 v200;
  size_t v201;
  unsigned __int8 *BaseAddress;
  long long v203;
  double v204;
  double v205;
  uint64_t v206;
  long long v207;
  void v208[6];
  CGAffineTransform v209;
  char v210;
  unint64_t v211;
  char v212;
  CGAffineTransform v213;
  CGAffineTransform v214;
  char v215;
  CGPoint v216;
  CGPoint v217;
  CGPoint v218;
  CGRect v219;

  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v165 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v165 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = a1;
  uint64_t v16 = (double *)sub_1000A3850();
  int64x2_t v17 = 0uLL;
  if (!v16)
  {
    unint64_t v37 = 0;
    uint64_t v38 = 0;
    Swift::String v36 = 1;
    goto LABEL_14;
  }
  uint64_t v18 = v16;
  v177 = v15;
  v178 = v13;
  v179 = v11;
  v180 = v12;
  long long v19 = [v16 segmentationBuffer];
  if (!v19) {
    goto LABEL_12;
  }
  uint64_t v20 = v19;
  id v21 = [v18 sceneDepth];
  if (!v21
    || (float32x4_t v22 = v21,
        float32x4_t v23 = (__CVBuffer *)[v21 depthMap],
        v22,
        (uint64_t v171 = v23) == 0))
  {

LABEL_12:
    unint64_t v37 = 0;
    uint64_t v38 = 0;
    Swift::String v36 = 1;
    goto LABEL_13;
  }
  v170 = v9;
  CGRect.center.getter();
  double v25 = v24;
  double v27 = v26;
  if (qword_1004C3238 != -1) {
    goto LABEL_101;
  }
LABEL_6:
  uint64_t v28 = qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits;
  uint64_t v29 = v206;
  if (*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80))
  {
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
    return;
  }
  v169 = v8;
  double Width = CGRectGetWidth(*(CGRect *)(v28 + 48));
  if (*(unsigned char *)(v28 + 80)) {
    goto LABEL_104;
  }
  double v31 = Width;
  double Height = CGRectGetHeight(*(CGRect *)(v28 + 48));
  CVPixelBufferLockBaseAddress((CVPixelBufferRef)v20, 1uLL);
  id v33 = v171;
  CVPixelBufferLockBaseAddress(v171, 1uLL);
  uint64_t v201 = CVPixelBufferGetWidth((CVPixelBufferRef)v20);
  BaseAddress = (unsigned __int8 *)CVPixelBufferGetBaseAddress((CVPixelBufferRef)v20);
  uint64_t v8 = (uint64_t)CVPixelBufferGetBaseAddress(v33);
  id v34 = *(void (**)(CGAffineTransform *__return_ptr, uint64_t))(**(void **)(v29 + qword_1004C6370) + 144);
  unint64_t v35 = swift_retain();
  v34(&v209, v35);
  swift_release();
  if (v212)
  {
    Swift::String v36 = 1;
    CVPixelBufferUnlockBaseAddress((CVPixelBufferRef)v20, 1uLL);
    CVPixelBufferUnlockBaseAddress(v33, 1uLL);

    unint64_t v37 = 0;
    uint64_t v38 = 0;
LABEL_13:
    int64x2_t v17 = 0uLL;
    goto LABEL_14;
  }
  v200.n128_f64[0] = a4;
  v196 = a3;
  uint64_t v39 = COERCE_FLOAT(vdupq_n_s64(v211).i32[2]);
  uint64_t v40 = (float *)Float.piDiv2.unsafeMutableAddressor();
  CGAffineTransformMakeRotation(&v209, (float)(v39 + (float)(*v40 * 3.0)));
  if (*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80)) {
    goto LABEL_105;
  }
  uint64_t v41 = v25 * v31;
  *(double *)&v203 = v27 * Height;
  long long v42 = v201;
  long long v43 = (float)(uint64_t)v201;
  int64_t v44 = CGRectGetHeight(*(CGRect *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 48));
  uint64_t v45 = v43 / v44;
  CGPoint.divide(by:)();
  static CGPoint.- prefix(_:)();
  uint64_t v190 = v46;
  double v27 = v47;
  uint64_t v188 = v45;
  CGPoint.divide(by:)();
  v204 = v49;
  v205 = v48;
  *(double *)&v207 = (double)v42;
  uint64_t v50 = -1;
  uint64_t v51 = 0.0;
  do
  {
    CGPoint.multiply(by:)();
    double v25 = v41;
    CGPoint.add(_:)();
    CGPoint.multiply(by:)();
    CGPoint.add(_:)();
    a3 = v52;
    a4 = v53;
    sub_10005CB7C(&v213);
    v209 = v213;
    v216.CGFloat x = a3;
    v216.CGFloat y = a4;
    uint64_t v54 = CGPointApplyAffineTransform(v216, &v209);
    uint64_t v55 = round(v54.x) + round(v54.y) * *(double *)&v207;
    if ((~*(void *)&v55 & 0x7FF0000000000000) == 0)
    {
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      swift_once();
      goto LABEL_6;
    }
    if (v55 <= -9.22337204e18) {
      goto LABEL_93;
    }
    if (v55 >= 9.22337204e18) {
      goto LABEL_94;
    }
    uint64_t v56 = *(float *)(v8 + 4 * (uint64_t)v55);
    CGPoint.multiply(by:)();
    CGPoint.add(_:)();
    a3 = v57;
    a4 = v58;
    sub_10005CB7C(&v213);
    v209 = v213;
    v217.CGFloat x = a3;
    v217.CGFloat y = a4;
    uint64_t v59 = CGPointApplyAffineTransform(v217, &v209);
    Swift::String v60 = round(v59.x) + round(v59.y) * *(double *)&v207;
    if ((~*(void *)&v60 & 0x7FF0000000000000) == 0) {
      goto LABEL_92;
    }
    if (v60 <= -9.22337204e18) {
      goto LABEL_93;
    }
    if (v60 >= 9.22337204e18) {
      goto LABEL_94;
    }
    LODWORD(a3) = *(_DWORD *)(v8 + 4 * (uint64_t)v60);
    CGPoint.multiply(by:)();
    CGPoint.add(_:)();
    uint64_t v62 = v61;
    uint64_t v64 = v63;
    sub_10005CB7C(&v213);
    v209 = v213;
    v218.CGFloat x = v62;
    v218.CGFloat y = v64;
    long long v65 = CGPointApplyAffineTransform(v218, &v209);
    objc_super v66 = round(v65.x) + round(v65.y) * *(double *)&v207;
    if ((~*(void *)&v66 & 0x7FF0000000000000) == 0) {
      goto LABEL_92;
    }
    if (v66 <= -9.22337204e18) {
      goto LABEL_93;
    }
    if (v66 >= 9.22337204e18) {
      goto LABEL_94;
    }
    uint64_t v51 = (float)((float)(v51 + v56) + *(float *)&a3) + *(float *)(v8 + 4 * (uint64_t)v66);
    ++v50;
    uint64_t v41 = v25;
  }
  while (v50 != 2);
  v166 = v20;
  v167 = a2;
  v168 = v18;
  uint64_t v67 = v200.n128_f64[0];
  uint64_t v68 = v187[7];
  v199 = v187[8];
  v200 = v68;
  long long v69 = v187[9];
  uint64_t v197 = v187[10];
  v198 = v69;
  long long v70 = v187[19].n128_f64[0];
  long long v71 = v187[19].n128_f64[1];
  char v73 = v187[20].n128_f64[0];
  uint64_t v194 = v187[20].n128_f64[1];
  long long v72 = v194;
  v195 = v187[29];
  unint64_t v193 = v187[30];
  uint64_t v191 = v187[31];
  *(float *)&a4 = v51 / 9.0;
  uint64_t v74 = v70;
  uint64_t v75 = v71;
  v69.n128_f64[0] = v73;
  uint64_t v76 = CGRectGetHeight(*(CGRect *)(&v69 - 1));
  id v77 = v67 * v76;
  char v78 = v196;
  v219.origin.CGFloat x = v70;
  v219.origin.CGFloat y = v71;
  v219.size.width = v73;
  v219.size.height = v194;
  uint64_t v79 = CGRectGetWidth(v219);
  char v80 = v78 * v79;
  float v81 = v25;
  if (v77 > v80) {
    char v80 = v77;
  }
  char v82 = roundf(v188 * (float)(v80 * 0.5));
  double v25 = v190;
  static CGPoint.- prefix(_:)();
  uint64_t v83 = *(double *)&v203;
  uint64_t v85 = v201;
  uint64_t v84 = (uint64_t)BaseAddress;
  id v86 = (char *)v206;
  sub_100072FCC(0, (uint64_t)BaseAddress, v8, v201, v81, *(double *)&v203, *(float *)&a4, v87, v88, v82);
  uint64_t v90 = v89;
  uint64_t v92 = v91;
  sub_100072FCC(1, v84, v8, v85, v81, v83, *(float *)&a4, v25, v27, v82);
  uint64_t v183 = v94;
  uint64_t v184 = v93;
  uint64_t v185 = v92;
  uint64_t v186 = v90;
  static CGPoint.+ infix(_:_:)();
  / infix(_:_:)();
  long long v96 = v95;
  a3 = v97;
  sub_100072FCC(2, v84, v8, v85, v95, v97, *(float *)&a4, v205, v204, v82);
  v181 = v99;
  uint64_t v182 = v98;
  v165 = qword_1004C64C0;
  if (v86[qword_1004C64C0] == 1)
  {
    sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
    uint64_t v100 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v101 = swift_allocObject();
    *(void *)(v101 + 16) = v86;
    uint64_t v102 = v185;
    *(void *)(v101 + 24) = v186;
    *(void *)(v101 + 3sub_10004ACAC(3, 1, 2) = v102;
    unint64_t v103 = v183;
    *(void *)(v101 + 40) = v184;
    *(void *)(v101 + 48) = v103;
    uint64_t v104 = v181;
    *(void *)(v101 + 56) = v182;
    *(void *)(v101 + 64) = v104;
    *(double *)(v101 + 7sub_10004ACAC(3, 1, 2) = v81;
    *(double *)(v101 + 80) = v83;
    *(double *)(v101 + 88) = v96;
    *(CGFloat *)(v101 + 96) = a3;
    *(void *)&v209.CGFloat tx = sub_100073AE8;
    *(void *)&v209.CGFloat ty = v101;
    *(void *)&v209.CGFloat a = _NSConcreteStackBlock;
    *(void *)&v209.CGFloat b = 1107296256;
    *(void *)&v209.CGFloat c = sub_100049AB4;
    *(void *)&v209.CGFloat d = &unk_10048A990;
    char v105 = _Block_copy(&v209);
    uint64_t v106 = v86;
    swift_release();
    uint64_t v107 = v177;
    static DispatchQoS.unspecified.getter();
    *(void *)&v209.CGFloat a = _swiftEmptyArrayStorage;
    *(void *)&v203 = sub_100073B90((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    uint64_t v18 = (double *)sub_100012894((uint64_t *)&unk_1004C68E0);
    sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
    uint64_t v108 = v179;
    uint64_t v109 = v169;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v105);

    (*(void (**)(char *, uint64_t))(v170 + 8))(v108, v109);
    (*(void (**)(char *, uint64_t))(v178 + 8))(v107, v180);
  }
  v175 = 0;
  uint64_t v176 = 0;
  uint64_t v20 = &v86[qword_1004C64A0];
  uint64_t v201 = qword_1004C6498;
  v196 = v195.n128_f64[0];
  uint64_t v194 = v193.n128_f64[0];
  v195.n128_u64[0] = v195.n128_u64[1];
  uint64_t v192 = v191.n128_f64[0];
  v193.n128_u64[0] = v193.n128_u64[1];
  v191.n128_u64[0] = v191.n128_u64[1];
  uint64_t v110 = -3;
  v172 = 1;
  v173 = 0.0;
  v174 = 0.0;
  a2 = 0x4070000000000000;
  uint64_t v111 = BaseAddress;
  while (2)
  {
    CGPoint.multiply(by:)();
    static CGPoint.+ infix(_:_:)();
    static CGPoint.distance(_:_:)();
    uint64_t v113 = v188 * (float)(v112 * 0.5);
    if ((~LODWORD(v113) & 0x7F800000) == 0) {
      goto LABEL_95;
    }
    if (v113 <= -9.2234e18) {
      goto LABEL_96;
    }
    if (v113 >= 9.2234e18) {
      goto LABEL_97;
    }
    uint64_t v114 = (uint64_t)v113;
    if ((uint64_t)v113 < 0)
    {
      unint64_t v115 = __OFSUB__(0, v114);
      uint64_t v114 = -v114;
      if (v115) {
        goto LABEL_100;
      }
    }
    uint64_t v116 = -v114;
    if (__OFSUB__(0, v114)) {
      goto LABEL_98;
    }
    if (v114 < v116) {
      goto LABEL_99;
    }
    uint64_t v189 = v110;
    objc_super v117 = 2 * v114;
    uint64_t v18 = _swiftEmptyArrayStorage;
    while (1)
    {
      CGPoint.multiply(by:)();
      static CGPoint.+ infix(_:_:)();
      id v119 = v118;
      id v121 = v120;
      uint64_t v122 = *((_OWORD *)v20 + 1);
      *(_OWORD *)&v214.CGFloat a = *(_OWORD *)v20;
      *(_OWORD *)&v214.CGFloat c = v122;
      *(_OWORD *)&v214.CGFloat tx = *((_OWORD *)v20 + 2);
      *(double *)&uint64_t v122 = v121;
      uint64_t v123 = CGPointApplyAffineTransform(*(CGPoint *)&v118, &v214);
      if (v123.x < 0.0 || v123.x >= 256.0) {
        goto LABEL_59;
      }
      if (v123.y < 0.0 || v123.y >= 192.0) {
        goto LABEL_59;
      }
      uint64_t v126 = round(v123.x) + round(v123.y) * *(double *)&v207;
      if ((~*(void *)&v126 & 0x7FF0000000000000) == 0) {
        goto LABEL_89;
      }
      if (v126 <= -9.22337204e18) {
        goto LABEL_90;
      }
      if (v126 >= 9.22337204e18) {
        goto LABEL_91;
      }
      uint64_t v127 = v111[(uint64_t)v126];
      LODWORD(a3) = *(_DWORD *)(v8 + 4 * (uint64_t)v126);
      uint64_t v128 = vabds_f32(*(float *)&a3, *(float *)&a4);
      if (v127 < 2 || v128 >= 0.15)
      {
LABEL_59:
        if (!v117) {
          break;
        }
        goto LABEL_60;
      }
      if (!*(void *)&v86[v201])
      {
        __break(1u);
        goto LABEL_103;
      }
      uint64_t v130 = DepthProcessor.transformer.getter();
      v209.CGFloat a = v196;
      *(void *)&v209.CGFloat b = v195.n128_u64[0];
      v209.CGFloat c = v194;
      *(void *)&v209.CGFloat d = v193.n128_u64[0];
      v209.CGFloat tx = v192;
      *(void *)&v209.CGFloat ty = v191.n128_u64[0];
      v210 = 0;
      *(double *)&uint64_t v131 = (*(double (**)(CGAffineTransform *, double, double, float, __n128, __n128, __n128, __n128))(*(void *)v130 + 584))(&v209, v119, v121, *(float *)&a3, v200, v199, v198, v197);
      v203 = v131;
      swift_release();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v18 = sub_10006EA34(0, *((void *)v18 + 2) + 1, 1, (uint64_t)v18);
      }
      long long v133 = *((void *)v18 + 2);
      uint64_t v132 = *((void *)v18 + 3);
      if (v133 >= v132 >> 1) {
        uint64_t v18 = sub_10006EA34((double *)(v132 > 1), v133 + 1, 1, (uint64_t)v18);
      }
      *((void *)v18 + sub_10004ACAC(3, 1, 2) = v133 + 1;
      uint64_t v134 = &v18[6 * v133];
      *((_OWORD *)v134 + sub_10004ACAC(3, 1, 2) = v203;
      *((_DWORD *)v134 + 1sub_10004ACAC(3, 1, 2) = LODWORD(a3);
      v134[7] = v119;
      v134[8] = v121;
      id v86 = (char *)v206;
      uint64_t v111 = BaseAddress;
      if (!v117) {
        break;
      }
LABEL_60:
      --v117;
      unint64_t v115 = __OFADD__(v116++, 1);
      if (v115)
      {
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
    }
    if (*((void *)v18 + 2) < 4uLL)
    {
      swift_bridgeObjectRelease();
      if (v189 != 3)
      {
        uint64_t v110 = v189 + 1;
        if (!__OFADD__(v189, 1)) {
          continue;
        }
        goto LABEL_82;
      }
LABEL_83:
      if (v172)
      {
        Swift::String v36 = 1;
        uint64_t v148 = (CVPixelBufferRef)v166;
        CVPixelBufferUnlockBaseAddress((CVPixelBufferRef)v166, 1uLL);
        uint64_t v149 = v171;
        CVPixelBufferUnlockBaseAddress(v171, 1uLL);

        unint64_t v37 = 0;
        uint64_t v38 = 0;
        a2 = v167;
        goto LABEL_13;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v135 = (long long *)SIMD3<>.zero.unsafeMutableAddressor();
      char v136 = *v135;
      uint64_t v137 = *((void *)v18 + 2);
      if (v137)
      {
        uint64_t v138 = (float *)(v18 + 5);
        do
        {
          *(float32x2_t *)&Swift::String v140 = vadd_f32(*(float32x2_t *)&v136, *(float32x2_t *)(v138 - 2));
          uint64_t v139 = *v138;
          v138 += 12;
          *((float *)&v140 + sub_10004ACAC(3, 1, 2) = *((float *)&v136 + 2) + v139;
          HIDWORD(v140) = 0;
          char v136 = v140;
          --v137;
        }
        while (v137);
      }
      else
      {
        Swift::String v140 = *v135;
      }
      v203 = v140;
      swift_bridgeObjectRelease();
      uint64_t v142 = *((void *)v18 + 2);
      if (v142)
      {
        swift_bridgeObjectRetain();
        v143 = v18 + 8;
        v144 = v142;
        do
        {
          static CGPoint.+ infix(_:_:)();
          v143 += 6;
          --v144;
        }
        while (v144);
        swift_bridgeObjectRelease();
      }
      *(float *)v141.i32 = (float)v142;
      *(float32x2_t *)&v145 = vdiv_f32(*(float32x2_t *)&v203, (float32x2_t)vdup_lane_s32(v141, 0));
      *((float *)&v145 + sub_10004ACAC(3, 1, 2) = *((float *)&v203 + 2) / (float)v142;
      HIDWORD(v145) = 0;
      v203 = v145;
      swift_bridgeObjectRelease();
      CGPoint.divide(by:)();
      v173 = v147;
      v174 = v146;
      v175 = *((void *)&v203 + 1);
      uint64_t v176 = v203;
      if (v189 != 3)
      {
        v172 = 0;
        uint64_t v111 = BaseAddress;
        uint64_t v110 = v189 + 1;
        if (!__OFADD__(v189, 1)) {
          continue;
        }
LABEL_82:
        __break(1u);
        goto LABEL_83;
      }
    }
    break;
  }
  a2 = v167;
  v150 = v168;
  uint64_t v151 = (__CVBuffer *)v166;
  v152 = v171;
  if (!*(void *)&v86[v201]) {
    goto LABEL_106;
  }
  uint64_t v153 = DepthProcessor.transformer.getter();
  v214.CGFloat a = v196;
  *(void *)&v214.CGFloat b = v195.n128_u64[0];
  v214.CGFloat c = v194;
  *(void *)&v214.CGFloat d = v193.n128_u64[0];
  v214.CGFloat tx = v192;
  *(void *)&v214.CGFloat ty = v191.n128_u64[0];
  v215 = 0;
  *(double *)&uint64_t v154 = (*(double (**)(CGAffineTransform *, double, double, float, __n128, __n128, __n128, __n128))(*(void *)v153 + 584))(&v214, v174, v173, *(float *)&a4, v200, v199, v198, v197);
  v207 = v154;
  swift_release();
  if (v86[v165] == 1)
  {
    sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
    v206 = static OS_dispatch_queue.main.getter();
    uint64_t v155 = swift_allocObject();
    *(_OWORD *)(v155 + 16) = v207;
    id v156 = (uint64_t)v187;
    memcpy((void *)(v155 + 32), v187, 0x200uLL);
    *(void *)(v155 + 544) = v86;
    v208[4] = sub_100073AA0;
    v208[5] = v155;
    v208[0] = _NSConcreteStackBlock;
    v208[1] = 1107296256;
    v208[2] = sub_100049AB4;
    v208[3] = &unk_10048A940;
    v157 = _Block_copy(v208);
    v158 = v86;
    sub_100053000(v156);
    swift_release();
    v159 = v177;
    static DispatchQoS.unspecified.getter();
    v208[0] = _swiftEmptyArrayStorage;
    sub_100073B90((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100012894((uint64_t *)&unk_1004C68E0);
    sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
    uint64_t v160 = v151;
    unint64_t v161 = v179;
    uint64_t v162 = v169;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    v163 = (void *)v206;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v157);

    v152 = v171;
    v164 = v161;
    uint64_t v151 = v160;
    v150 = v168;
    (*(void (**)(char *, uint64_t))(v170 + 8))(v164, v162);
    (*(void (**)(char *, uint64_t))(v178 + 8))(v159, v180);
  }
  uint64_t v38 = *((void *)&v207 + 1);
  CVPixelBufferUnlockBaseAddress(v151, 1uLL);
  CVPixelBufferUnlockBaseAddress(v152, 1uLL);

  Swift::String v36 = 0;
  int64x2_t v17 = vdupq_lane_s64(v207, 0);
  v17.i64[0] = v175;
  unint64_t v37 = v176;
LABEL_14:
  *(void *)a2 = v37;
  *(int64x2_t *)(a2 + 8) = v17;
  *(void *)(a2 + 24) = v38;
  *(unsigned char *)(a2 + 3sub_10004ACAC(3, 1, 2) = v36;
}

void sub_100069A78(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  double v26 = (char *)sub_10005CAF8();
  unint64_t v27 = (unint64_t)sub_1001F14A8();
  unint64_t v28 = v27;
  if (v27 >> 62)
  {
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    if (!v29) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v29 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v29) {
      goto LABEL_10;
    }
  }
  if (v29 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v29; ++i)
  {
    if ((v28 & 0xC000000000000001) != 0) {
      id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v31 = *(id *)(v28 + 8 * i + 32);
    }
    id v32 = v31;
    [v31 removeFromParent];
  }
LABEL_10:
  swift_bridgeObjectRelease();
  sub_1001F14A8();
  swift_bridgeObjectRelease();
  *(void *)&v26[qword_1004D1F90] = _swiftEmptyArrayStorage;

  swift_bridgeObjectRelease();
  id v33 = sub_10005CAF8();
  id v34 = self;
  id v35 = [v34 redColor];
  sub_1001EFE68((uint64_t)v35, a1, a2, 3.0);

  id v36 = sub_10005CAF8();
  id v37 = [v34 greenColor];
  sub_1001EFE68((uint64_t)v37, a3, a4, 3.0);

  id v38 = sub_10005CAF8();
  id v39 = [v34 blueColor];
  sub_1001EFE68((uint64_t)v39, a5, a6, 3.0);

  id v40 = sub_10005CAF8();
  id v41 = [v34 orangeColor];
  sub_1001EFE68((uint64_t)v41, a7, a8, 3.0);

  id v42 = sub_10005CAF8();
  id v43 = [v34 yellowColor];
  sub_1001EFE68((uint64_t)v43, a9, a10, 3.0);
}

void sub_100069D2C()
{
  type metadata accessor for MeasureCamera();
  static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
  CGPoint.init(xy:)();
  CGFloat v1 = v0;
  CGFloat v3 = v2;
  id v4 = sub_10005CAF8();
  id v5 = [self grayColor];
  sub_1001EFE68((uint64_t)v5, v1, v3, 3.0);
}

uint64_t sub_100069DE8(uint64_t result, uint64_t a2, float a3, uint64_t a4, char a5, char a6)
{
  *(float *)(result + 436) = a3;
  *(unsigned char *)(result + 440) = 0;
  if (*(unsigned char *)(result + 192))
  {
    __break(1u);
  }
  else
  {
    int v8 = HIDWORD(a2);
    uint64_t v9 = result;
    uint64_t v10 = result + 440;
    uint64_t result = simd_float4x4.position.getter();
    v11.f32[0] = a3 * 0.0;
    v11.f32[1] = a3;
    *(float32x2_t *)&long long v13 = vsub_f32(v12, v11);
    *((float *)&v13 + sub_10004ACAC(3, 1, 2) = v14 - (float)(a3 * 0.0);
    HIDWORD(v13) = 0;
    *(_OWORD *)(v9 + 51sub_10004ACAC(3, 1, 2) = v13;
    *(unsigned char *)(v10 + 88) = 0;
    int v15 = v8;
    if (a5) {
      int v15 = 0;
    }
    *(_DWORD *)(v9 + 444) = v15;
    *(unsigned char *)(v10 + 8) = a5 & 1;
    *(unsigned char *)(v9 + 529) = a6;
  }
  return result;
}

void sub_100069ECC(uint64_t a1)
{
}

void sub_100069EF8(uint64_t a1)
{
}

void sub_100069F24(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = *v3;
  if ((unint64_t)*v3 >> 62) {
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v7) {
    return;
  }
  while (1)
  {
    unint64_t v8 = v6 & 0xC000000000000001;
    uint64_t v18 = (void (*)(unint64_t))a3;
    if ((v6 & 0xC000000000000001) == 0) {
      break;
    }
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_6:
    uint64_t v10 = v9;
    ((void (*)(void))a2)(0);
    char v11 = static NSObject.== infix(_:_:)();

    a2 = 0;
    if (v11) {
      goto LABEL_7;
    }
    if (v7 == 1) {
      return;
    }
    if (v8)
    {
      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
        goto LABEL_32;
      }
      id v12 = *(id *)(v6 + 40);
    }
    long long v13 = v12;
    char v14 = static NSObject.== infix(_:_:)();

    if (v14)
    {
      a2 = 1;
LABEL_7:
      v18(a2);
      return;
    }
    a3 = 1;
    while (1)
    {
      a2 = a3 + 1;
      if (__OFADD__(a3, 1)) {
        break;
      }
      if (a2 == v7) {
        return;
      }
      if (v8)
      {
        id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((a2 & 0x8000000000000000) != 0) {
          goto LABEL_30;
        }
        if (a2 >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_31;
        }
        id v15 = *(id *)(v6 + 32 + 8 * a2);
      }
      uint64_t v16 = v15;
      char v17 = static NSObject.== infix(_:_:)();

      ++a3;
      if (v17) {
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return;
    }
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v9 = *(id *)(v6 + 32);
    goto LABEL_6;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
}

void sub_10006A118()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v18 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  CGFloat v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  uint64_t v7 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v0;
  aBlock[4] = sub_100073C3C;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_10048AA08;
  id v9 = _Block_copy(aBlock);
  uint64_t v10 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100073B90((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v17);
  id v11 = MTLCreateSystemDefaultDevice();
  if (!v11)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v12 = qword_1004C6478;
  *(void *)&v10[qword_1004C6478] = v11;
  swift_unknownObjectRelease();
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  if (!*((void *)&xmmword_1004F7FD0 + 1)) {
    goto LABEL_8;
  }
  id v13 = *((id *)&xmmword_1004F7FD0 + 1);
  id v14 = sub_100205358();

  id v15 = *(void **)&v10[v12];
  if (v15)
  {
    type metadata accessor for PersonHeightDebugNode();
    swift_allocObject();
    uint64_t v16 = v10;
    swift_unknownObjectRetain();
    *(void *)&v16[qword_1004C6480] = sub_10015D088(v14, v16, v15);
    swift_release();
    return;
  }
LABEL_9:
  __break(1u);
}

void sub_10006A4D8(uint64_t a1)
{
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1004F7FE0;
  if (!qword_1004F7FE0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  CGFloat v3 = *(void **)(qword_1004F7FE0 + 88);
  if (v3)
  {
    [v3 frame];
    double MaxY = CGRectGetMaxY(v12);
    uint64_t v2 = qword_1004F7FE0;
    if (!qword_1004F7FE0)
    {
LABEL_16:
      __break(1u);
      return;
    }
    CGFloat v5 = MaxY;
    uint64_t v6 = *(void **)(a1 + qword_1004C6470);
    swift_retain();
    [v6 frame];
    CGRect v14 = CGRectOffset(v13, 0.0, v5);
  }
  else
  {
    uint64_t v7 = *(void **)(a1 + qword_1004C6470);
    swift_retain();
    [v7 frame];
  }
  id v8 = [objc_allocWithZone((Class)type metadata accessor for PersonHeightDebugStatsView()) initWithFrame:v14.origin.x, v14.origin.y, v14.size.width, v14.size.height];
  id v9 = *(void **)(v2 + 24);
  *(void *)(v2 + 24) = v8;
  swift_release();

  if (!qword_1004F7FE0) {
    goto LABEL_14;
  }
  if (!*(void *)(qword_1004F7FE0 + 24))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v10 = *(void **)(qword_1004F7FE0 + 16);

  [v10 addSubview:];
}

uint64_t sub_10006A64C(uint64_t a1, char a2)
{
  char v4 = ~a2;
  uint64_t v5 = qword_1004C6388;
  uint64_t v6 = *(uint64_t (**)(unsigned char *))(**(void **)(a1 + qword_1004C6388) + 400);
  swift_retain();
  uint64_t v7 = (void (*)(unsigned char *, void))v6(v13);
  *id v8 = (a2 & 1) == 0;
  v7(v13, 0);
  uint64_t result = swift_release();
  if ((v4 & 1) == 0)
  {
    uint64_t v10 = *(uint64_t (**)(unsigned char *))(**(void **)(a1 + v5) + 400);
    swift_retain();
    id v11 = (void (*)(unsigned char *, void))v10(v13);
    *(unsigned char *)(v12 + sub_10004ACAC(2, 1, 1) = 0;
    v11(v13, 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_10006A76C(char a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  id v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(unsigned char **)(v1 + qword_1004C6480);
  uint64_t v18 = v9;
  if (a1)
  {
    if (v12)
    {
      swift_beginAccess();
      v12[32] = 0;
      swift_beginAccess();
      v12[33] = 0;
      swift_beginAccess();
      v12[34] = 0;
    }
    sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
    CGRect v13 = (void *)static OS_dispatch_queue.main.getter();
    float32x4_t v23 = sub_10006AB50;
    uint64_t v24 = 0;
    Swift::String aBlock = _NSConcreteStackBlock;
    uint64_t v20 = 1107296256;
    CGRect v14 = &unk_10048AA58;
  }
  else
  {
    if (v12)
    {
      swift_beginAccess();
      v12[32] = 1;
      swift_beginAccess();
      v12[33] = 1;
      swift_beginAccess();
      v12[34] = 1;
    }
    sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
    CGRect v13 = (void *)static OS_dispatch_queue.main.getter();
    float32x4_t v23 = sub_10006ABCC;
    uint64_t v24 = 0;
    Swift::String aBlock = _NSConcreteStackBlock;
    uint64_t v20 = 1107296256;
    CGRect v14 = &unk_10048AA30;
  }
  id v21 = sub_100049AB4;
  float32x4_t v22 = v14;
  id v15 = _Block_copy(&aBlock);
  static DispatchQoS.unspecified.getter();
  Swift::String aBlock = (void **)_swiftEmptyArrayStorage;
  sub_100073B90((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  uint64_t v16 = v18;
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v16);
}

void sub_10006AB50()
{
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  if (qword_1004F7FE0)
  {
    double v0 = *(void **)(qword_1004F7FE0 + 24);
    if (v0)
    {
      [v0 removeFromSuperview];
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10006ABCC()
{
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  if (!qword_1004F7FE0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (!*(void *)(qword_1004F7FE0 + 24))
  {
LABEL_9:
    __break(1u);
    return;
  }
  double v0 = *(void **)(qword_1004F7FE0 + 16);

  [v0 addSubview:];
}

void sub_10006AC48()
{
  void (*v10)(void *__return_ptr, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id *v14;
  void *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  char v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  double v36;
  double v37;
  void __src[68];
  void __dst[67];

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v9 = (unsigned char *)Strong;
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  if ((__dst[8] & 1) == 0)
  {
    double v3 = *(double *)__dst;
    double v4 = *(double *)&__dst[1];
    double v5 = *(double *)&__dst[2];
    double v6 = *(double *)&__dst[3];
    double v7 = *(double *)&__dst[4];
    double v0 = *(double *)&__dst[5];
    double v1 = *(double *)&__dst[6];
    double v2 = *(double *)&__dst[7];
    uint64_t v10 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)&v9[qword_1004C6388] + 144);
    id v11 = swift_retain();
    v10(__src, v11);
    swift_release();
    memcpy(__dst, __src, 0x213uLL);
    sub_1000732CC((uint64_t)__dst);
    if ((__dst[49] & 1) == 0)
    {
      CGRect.center.getter();
      if (qword_1004C29D8 != -1) {
        goto LABEL_32;
      }
      uint64_t v17 = qword_1004F7FE0;
      if (qword_1004F7FE0) {
        goto LABEL_10;
      }
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      return;
    }
  }
  if (qword_1004C29D8 != -1) {
    goto LABEL_30;
  }
  uint64_t v12 = qword_1004F7FE0;
  if (!qword_1004F7FE0) {
    goto LABEL_31;
  }
LABEL_6:
  CGRect v13 = *(char **)(v12 + 24);
  if (v13)
  {
    CGRect v14 = (id *)&v13[qword_1004CD158];
    id v15 = *(void **)&v13[qword_1004CD158];
    uint64_t v16 = v13;
    [v15 removeFromSuperview];
    [v14[1] removeFromSuperview];
    [v14[2] removeFromSuperview];
    [v14[3] removeFromSuperview];
    [*(id *)&v16[qword_1004CD168] removeFromSuperview];
  }
  while (qword_1004C29D8 == -1)
  {
    uint64_t v20 = qword_1004F7FE0;
    if (qword_1004F7FE0) {
      goto LABEL_14;
    }
LABEL_29:
    __break(1u);
LABEL_30:
    swift_once();
    uint64_t v12 = qword_1004F7FE0;
    if (qword_1004F7FE0) {
      goto LABEL_6;
    }
LABEL_31:
    __break(1u);
LABEL_32:
    swift_once();
    uint64_t v17 = qword_1004F7FE0;
    if (!qword_1004F7FE0) {
      goto LABEL_33;
    }
LABEL_10:
    uint64_t v18 = *(void **)(v17 + 24);
    if (v18)
    {
      id v36 = v1;
      id v37 = v2;
      double v2 = v0;
      double v0 = *(double *)&v9[qword_1004C63C0] * 0.5;
      double v1 = *(double *)&v9[qword_1004C63C0 + 8] * 0.5;
      long long v19 = v18;
      sub_100152F28(v3, v4, v5, v6, v7, v2, v36, v37, v0, v1);
    }
  }
  swift_once();
  uint64_t v20 = qword_1004F7FE0;
  if (!qword_1004F7FE0) {
    goto LABEL_29;
  }
LABEL_14:
  id v21 = *(void **)(v20 + 24);
  if (v21)
  {
    float32x4_t v22 = v21;
    float32x4_t v23 = (void *)sub_10005CEB8();
    sub_10014F8A0(v23);

    uint64_t v20 = qword_1004F7FE0;
    if (!qword_1004F7FE0) {
      goto LABEL_34;
    }
  }
  uint64_t v24 = *(void **)(v20 + 24);
  if (v24)
  {
    double v25 = v9[qword_1004C63C8];
    double v26 = v24;
    sub_10014FAAC(v25);

    uint64_t v20 = qword_1004F7FE0;
    if (!qword_1004F7FE0) {
      goto LABEL_35;
    }
  }
  unint64_t v27 = *(void **)(v20 + 24);
  if (v27)
  {
    unint64_t v28 = v27;
    sub_1001500B8();

    uint64_t v20 = qword_1004F7FE0;
    if (!qword_1004F7FE0) {
      goto LABEL_36;
    }
  }
  uint64_t v29 = *(void **)(v20 + 24);
  if (v29)
  {
    long long v30 = v29;
    sub_1001506FC();

    uint64_t v20 = qword_1004F7FE0;
    if (!qword_1004F7FE0) {
      goto LABEL_37;
    }
  }
  id v31 = *(void **)(v20 + 24);
  if (v31)
  {
    id v32 = v31;
    id v33 = swift_bridgeObjectRetain();
    sub_10015080C(v33);

    swift_bridgeObjectRelease();
    uint64_t v20 = qword_1004F7FE0;
    if (!qword_1004F7FE0) {
      goto LABEL_38;
    }
  }
  id v34 = *(void **)(v20 + 24);
  if (v34)
  {
    id v35 = v34;
    sub_10015099C();
  }
}

void sub_10006B02C()
{
}

uint64_t sub_10006B05C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10002B9C0(v0 + qword_1004C63D0, &qword_1004C6A08);
  swift_release();

  uint64_t v1 = v0 + qword_1004C63E8;
  uint64_t v2 = type metadata accessor for Date();
  double v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  sub_10002B9C0(v0 + qword_1004C63F8, (uint64_t *)&unk_1004C68F0);
  sub_10002B9C0(v0 + qword_1004C6400, (uint64_t *)&unk_1004C68F0);
  swift_release();
  swift_release();
  v3(v0 + qword_1004C6420, v2);
  swift_release();
  sub_10002B9C0(v0 + qword_1004C6430, (uint64_t *)&unk_1004C68F0);
  swift_release();

  sub_10002B9C0(v0 + qword_1004C6448, (uint64_t *)&unk_1004C68F0);
  sub_10002B9C0(v0 + qword_1004C6450, (uint64_t *)&unk_1004C68F0);
  sub_10002B9C0(v0 + qword_1004C6458, (uint64_t *)&unk_1004C68F0);
  sub_10002B9C0(v0 + qword_1004C6460, (uint64_t *)&unk_1004C68F0);

  swift_unknownObjectRelease();
  swift_release();

  v3(v0 + qword_1004C6490, v2);
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_10006B3A0(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10002B9C0(a1 + qword_1004C63D0, &qword_1004C6A08);
  swift_release();

  uint64_t v2 = a1 + qword_1004C63E8;
  uint64_t v3 = type metadata accessor for Date();
  double v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  sub_10002B9C0(a1 + qword_1004C63F8, (uint64_t *)&unk_1004C68F0);
  sub_10002B9C0(a1 + qword_1004C6400, (uint64_t *)&unk_1004C68F0);
  swift_release();
  swift_release();
  v4(a1 + qword_1004C6420, v3);
  swift_release();
  sub_10002B9C0(a1 + qword_1004C6430, (uint64_t *)&unk_1004C68F0);
  swift_release();

  sub_10002B9C0(a1 + qword_1004C6448, (uint64_t *)&unk_1004C68F0);
  sub_10002B9C0(a1 + qword_1004C6450, (uint64_t *)&unk_1004C68F0);
  sub_10002B9C0(a1 + qword_1004C6458, (uint64_t *)&unk_1004C68F0);
  sub_10002B9C0(a1 + qword_1004C6460, (uint64_t *)&unk_1004C68F0);

  swift_unknownObjectRelease();
  swift_release();

  v4(a1 + qword_1004C6490, v3);
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t type metadata accessor for PersonHeightInstrument()
{
  uint64_t result = qword_1004C6518;
  if (!qword_1004C6518) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10006B734()
{
  sub_10006B980();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date();
    if (v1 <= 0x3F)
    {
      sub_10006B9DC();
      if (v2 <= 0x3F) {
        swift_initClassMetadata2();
      }
    }
  }
}

id sub_10006B914@<X0>(void *a1@<X8>)
{
  if (qword_1004C2B80 != -1) {
    swift_once();
  }
  unint64_t v2 = (void *)qword_1004F83D0;
  *a1 = qword_1004F83D0;

  return v2;
}

void sub_10006B980()
{
  if (!qword_1004C6528)
  {
    sub_100016EF4(&qword_1004C6530);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1004C6528);
    }
  }
}

void sub_10006B9DC()
{
  if (!qword_1004C6538)
  {
    type metadata accessor for Date();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1004C6538);
    }
  }
}

uint64_t sub_10006BA34()
{
  return type metadata accessor for PersonHeightInstrument();
}

uint64_t sub_10006BA3C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1004C2970 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = sub_1000217E0(v2, (uint64_t)qword_1004F7FA0);
  double v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_10006BAE4()
{
  return *(unsigned __int8 *)(v0 + qword_1004F7FC0);
}

uint64_t sub_10006BAF4()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t sub_10006BB78(char a1)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(unsigned char *)(v3 + 24) = a1;
  sub_100012894((uint64_t *)&unk_1004C68D0);
  swift_allocObject();
  id v4 = v1;
  return Future.init(_:)();
}

void sub_10006BC00(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ARPlaneAnchor.Classification();
  __chkstk_darwin(v2);
  double v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = 0;
  uint64_t v24 = _swiftEmptyArrayStorage;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v21 = a1 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  int64_t v22 = (unint64_t)(v8 + 63) >> 6;
  id v11 = (unsigned int (**)(char *, uint64_t))(v3 + 88);
  int v12 = enum case for ARPlaneAnchor.Classification.floor(_:);
  uint64_t v20 = (void (**)(char *, uint64_t))(v3 + 8);
  if ((v9 & v7) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v15 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v15 < v22)
    {
      unint64_t v16 = *(void *)(v21 + 8 * v15);
      ++v6;
      if (v16) {
        goto LABEL_22;
      }
      int64_t v6 = v15 + 1;
      if (v15 + 1 >= v22) {
        goto LABEL_26;
      }
      unint64_t v16 = *(void *)(v21 + 8 * v6);
      if (v16) {
        goto LABEL_22;
      }
      int64_t v6 = v15 + 2;
      if (v15 + 2 >= v22) {
        goto LABEL_26;
      }
      unint64_t v16 = *(void *)(v21 + 8 * v6);
      if (v16) {
        goto LABEL_22;
      }
      int64_t v6 = v15 + 3;
      if (v15 + 3 >= v22) {
        goto LABEL_26;
      }
      unint64_t v16 = *(void *)(v21 + 8 * v6);
      if (v16)
      {
LABEL_22:
        unint64_t v10 = (v16 - 1) & v16;
        for (unint64_t i = __clz(__rbit64(v16)) + (v6 << 6); ; unint64_t i = v13 | (v6 << 6))
        {
          id v18 = *(id *)(*(void *)(a1 + 56) + 8 * i);
          ARPlaneAnchor.classification.getter();
          if ((*v11)(v5, v2) == v12)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            int64_t v23 = v6;
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            int64_t v6 = v23;
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            if (!v10) {
              goto LABEL_7;
            }
          }
          else
          {
            (*v20)(v5, v2);

            if (!v10) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v13 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
        }
      }
      int64_t v17 = v15 + 4;
      if (v17 < v22)
      {
        unint64_t v16 = *(void *)(v21 + 8 * v17);
        if (v16)
        {
          int64_t v6 = v17;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v6 = v17 + 1;
          if (__OFADD__(v17, 1)) {
            goto LABEL_28;
          }
          if (v6 >= v22) {
            break;
          }
          unint64_t v16 = *(void *)(v21 + 8 * v6);
          ++v17;
          if (v16) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_26:
    swift_release();
    return;
  }
  __break(1u);
LABEL_28:
  __break(1u);
}

BOOL sub_10006BEF0(float a1)
{
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  RingBuffer<A>.average()();
  float v3 = v2;
  swift_bridgeObjectRelease();
  return v3 < (float)(a1 + 1.5);
}

BOOL sub_10006BF74(float a1)
{
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  RingBuffer<A>.average()();
  float v3 = v2;
  swift_bridgeObjectRelease();
  return (float)(3.0 - a1) < v3;
}

BOOL sub_10006BFF8()
{
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  RingBuffer<A>.average()();
  float v1 = v0;
  swift_bridgeObjectRelease();
  return v1 > 5.0;
}

void *sub_10006C074(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100012894((uint64_t *)&unk_1004C68F0);
  __chkstk_darwin(v3 - 8);
  double v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {

    uint64_t v7 = *(uint64_t (**)(void))((swift_isaMask & *a2) + 0xD0);
    uint64_t result = (void *)v7();
    if (result != (void *)6)
    {
      uint64_t result = (void *)v7();
      if (result != (void *)5)
      {
        if (qword_1004C2AC8 != -1) {
          swift_once();
        }
        v8._object = (void *)0x8000000100422550;
        v8._uint64_t countAndFlagsBits = 0xD000000000000019;
        Log.debug(_:isPrivate:)(v8, 0);
        (*(void (**)(uint64_t))((swift_isaMask & *a2) + 0xD8))(6);
        Date.init()();
        uint64_t v9 = type metadata accessor for Date();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 0, 1, v9);
        return (void *)(*(uint64_t (**)(char *))((swift_isaMask & *a2) + 0x248))(v5);
      }
    }
  }
  return result;
}

uint64_t sub_10006C28C(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100012894((uint64_t *)&unk_1004C68F0);
  __chkstk_darwin(v3 - 8);
  double v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int v12 = (char *)v27 - v11;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_4;
  }
  CGRect v14 = (void *)Strong;
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  if (v28)
  {

LABEL_4:
    char v15 = 0;
    return v15 & 1;
  }
  v27[1] = v27[8];
  SIMD2<>.init(_:)();
  float32x2_t v18 = v17;
  SIMD2<>.init(_:)();
  float32x2_t v20 = v19;
  SIMD2<>.init(_:)();
  SIMD2<>.init(_:)();
  float32x2_t v22 = v21;
  SIMD2<>.init(_:)();
  char v15 = sub_100132260(v18, v20, v22, v23);
  (*(void (**)(void))((swift_isaMask & *a2) + 0x240))();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {

    sub_10002B9C0((uint64_t)v5, (uint64_t *)&unk_1004C68F0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
    Date.init()();
    Date.timeIntervalSince(_:)();
    double v25 = v24;

    double v26 = *(void (**)(char *, uint64_t))(v7 + 8);
    v26(v10, v6);
    v26(v12, v6);
    v15 |= v25 < 3.0;
  }
  return v15 & 1;
}

uint64_t sub_10006C5CC(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(uint64_t (**)(void))((swift_isaMask & *(void *)a1) + 0xD0);
  if (v4() == 6 || (uint64_t result = v4(), result == 5))
  {
    if (qword_1004C2AC8 != -1) {
      swift_once();
    }
    v6._object = (void *)0x8000000100422510;
    v6._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
    Log.debug(_:isPrivate:)(v6, 0);
    (*(void (**)(uint64_t))((swift_isaMask & *(void *)a1) + 0xD8))(5);
    uint64_t v7 = *(void *)(a2 + qword_1004C63B0);
    unint64_t v10 = a1 | 0x8000000000000000;
    uint64_t v8 = *(void (**)(unint64_t *))(*(void *)v7 + 392);
    uint64_t v9 = (id)a1;
    swift_retain();
    v8(&v10);
    return swift_release();
  }
  return result;
}

uint64_t sub_10006C750(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = (void *)result;
    if (qword_1004C2AC8 != -1) {
      swift_once();
    }
    v5._object = (void *)0x80000001004224E0;
    v5._uint64_t countAndFlagsBits = 0xD000000000000023;
    Log.debug(_:isPrivate:)(v5, 0);
    sub_10006C83C(a2);
    swift_retain();
    Synchronized.wrappedValue.setter();

    return swift_release();
  }
  return result;
}

uint64_t sub_10006C83C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100012894(&qword_1004C6A08);
  __chkstk_darwin(v4 - 8);
  Swift::String v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MeasureCamera();
  (*(void (**)(void))((swift_isaMask & *a1) + 0x210))();
  simd_float4x4.position.getter();
  v17[4] = v7;
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(v19, v20, sizeof(v19));
  sub_100016F7C((uint64_t)v19);
  void v17[2] = v19[12];
  v17[3] = v19[11];
  v17[0] = v19[14];
  v17[1] = v19[13];
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(v20, v18, sizeof(v20));
  sub_100016F7C((uint64_t)v20);
  static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
  uint64_t result = CGPoint.init(xy:)();
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  if (qword_1004C3238 != -1) {
    uint64_t result = swift_once();
  }
  if (*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80))
  {
    __break(1u);
  }
  else
  {
    v21.CGFloat x = v10;
    v21.CGFloat y = v12;
    uint64_t result = CGRectContainsPoint(*(CGRect *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 48), v21);
    if (result)
    {
      uint64_t v13 = sub_100012894(&qword_1004C6530);
      uint64_t v14 = *(int *)(v13 + 48);
      Date.init()();
      *(void *)&v6[v14] = a1;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 0, 1, v13);
      uint64_t v15 = v2 + qword_1004C63D0;
      swift_beginAccess();
      unint64_t v16 = a1;
      sub_100073BD8((uint64_t)v6, v15, &qword_1004C6A08);
      return swift_endAccess();
    }
  }
  return result;
}

double sub_10006CAE4(uint64_t a1, void *a2)
{
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  sub_100016F7C((uint64_t)__dst);
  SCNMatrix4.init(_:)();
  uint64_t v3 = SCNMatrix4.forward.getter();
  float32x4_t v10 = v4;
  (*(void (**)(uint64_t))((swift_isaMask & *a2) + 0x210))(v3);
  simd_float4x4.position.getter();
  float32x4_t v9 = v5;
  SCNMatrix4.position.getter();
  float32x4_t v7 = vmulq_f32(v10, vsubq_f32(v9, v6));
  return fabsf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v7, 2), vaddq_f32(v7, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v7.f32, 1))).f32[0]);
}

void sub_10006CBF0(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    float32x4_t v4 = (void *)Strong;
    float32x4_t v5 = *(void (**)(void))((swift_isaMask & *a2) + 0x210);
    id v6 = *(id *)(Strong + qword_1004C6470);
    v5();
    simd_float4x4.position.getter();
    SCNVector3.init(_:)();
    [v6 projectPoint:];

    if (qword_1004C3238 != -1) {
      swift_once();
    }
    if (*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80))
    {
      __break(1u);
    }
    else
    {
      CGRect.center.getter();
      static CGPoint.- infix(_:_:)();
      CGPoint.length()();
    }
  }
}

double sub_10006CD5C()
{
  return 1.0;
}

uint64_t sub_10006CD64(uint64_t a1, uint64_t a2)
{
  return sub_100072394(*(float32_t *)a1, *(int32x4_t *)(a1 + 16), *(float32x4_t *)(a1 + 32), *(float32_t *)a2, *(int32x4_t *)(a2 + 16), *(float32x4_t *)(a2 + 32));
}

uint64_t sub_10006CD78()
{
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  int64_t v0 = *(void *)(v13 + 16);
  if (!v0) {
    return swift_bridgeObjectRelease();
  }
  sub_1000BBE14(0, v0, 0);
  for (uint64_t i = 0; i != v0; ++i)
  {
    RingBuffer.subscript.getter();
    double v3 = _swiftEmptyArrayStorage[2];
    double v2 = _swiftEmptyArrayStorage[3];
    if (*(void *)&v3 >= *(void *)&v2 >> 1) {
      sub_1000BBE14((char *)(*(void *)&v2 > 1uLL), *(void *)&v3 + 1, 1);
    }
    *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v3 + 1;
    *((_DWORD *)&_swiftEmptyArrayStorage[4] + *(void *)&v3) = v12;
  }
  if (v3 == 0.0)
  {
    uint64_t v4 = 0;
    float v6 = 0.0;
  }
  else
  {
    uint64_t v4 = (*(void *)&v3 + 1) & 0x7FFFFFFFFFFFFFFELL;
    float32x4_t v5 = (float *)&_swiftEmptyArrayStorage[4] + 1;
    float v6 = 0.0;
    uint64_t v7 = v4;
    do
    {
      float v6 = (float)(v6 + *(v5 - 1)) + *v5;
      v5 += 2;
      v7 -= 2;
    }
    while (v7);
    if (*(void *)&v3 + 1 == v4) {
      goto LABEL_15;
    }
  }
  uint64_t v9 = *(void *)&v3 - v4 + 1;
  float32x4_t v10 = (float *)&_swiftEmptyArrayStorage[4] + v4;
  do
  {
    float v11 = *v10++;
    float v6 = v6 + v11;
    --v9;
  }
  while (v9);
LABEL_15:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_10006CF1C()
{
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  int64_t v0 = *(void *)(v15 + 16);
  if (v0)
  {
    sub_1000BBE34(0, v0, 0);
    for (uint64_t i = 0; i != v0; ++i)
    {
      RingBuffer.subscript.getter();
      long long v2 = v15;
      double v4 = _swiftEmptyArrayStorage[2];
      double v3 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v4 >= *(void *)&v3 >> 1)
      {
        sub_1000BBE34((char *)(*(void *)&v3 > 1uLL), *(void *)&v4 + 1, 1);
        long long v2 = v15;
      }
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v4 + 1;
      *(_OWORD *)&_swiftEmptyArrayStorage[2 * *(void *)&v4 + 4] = v2;
    }
    float32x4_t v5 = (long long *)SIMD3<>.zero.unsafeMutableAddressor();
    long long v6 = *v5;
    double v7 = _swiftEmptyArrayStorage[2];
    if (v7 == 0.0)
    {
      long long v10 = *v5;
    }
    else
    {
      uint64_t v8 = (float *)&_swiftEmptyArrayStorage[5];
      do
      {
        *(float32x2_t *)&long long v10 = vadd_f32(*(float32x2_t *)&v6, *(float32x2_t *)(v8 - 2));
        float v9 = *v8;
        v8 += 4;
        *((float *)&v10 + sub_10004ACAC(3, 1, 2) = *((float *)&v6 + 2) + v9;
        HIDWORD(v10) = 0;
        long long v6 = v10;
        --*(void *)&v7;
      }
      while (v7 != 0.0);
    }
    float32x2_t v14 = (float32x2_t)v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(float *)v12.i32 = (float)v0;
    *(float32x2_t *)&long long v11 = vdiv_f32(v14, (float32x2_t)vdup_lane_s32(v12, 0));
  }
  else
  {
    swift_bridgeObjectRelease();
    long long v11 = *(_OWORD *)SIMD3<>.zero.unsafeMutableAddressor();
  }
  return *(double *)&v11;
}

double sub_10006D0C0()
{
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  int64_t v0 = *(void *)(v15 + 16);
  if (v0)
  {
    sub_1000BBE34(0, v0, 0);
    for (uint64_t i = 0; i != v0; ++i)
    {
      RingBuffer.subscript.getter();
      long long v2 = v16;
      double v4 = _swiftEmptyArrayStorage[2];
      double v3 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v4 >= *(void *)&v3 >> 1)
      {
        sub_1000BBE34((char *)(*(void *)&v3 > 1uLL), *(void *)&v4 + 1, 1);
        long long v2 = v16;
      }
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v4 + 1;
      *(_OWORD *)&_swiftEmptyArrayStorage[2 * *(void *)&v4 + 4] = v2;
    }
    float32x4_t v5 = (long long *)SIMD3<>.zero.unsafeMutableAddressor();
    long long v6 = *v5;
    double v7 = _swiftEmptyArrayStorage[2];
    if (v7 == 0.0)
    {
      long long v10 = *v5;
    }
    else
    {
      uint64_t v8 = (float *)&_swiftEmptyArrayStorage[5];
      do
      {
        *(float32x2_t *)&long long v10 = vadd_f32(*(float32x2_t *)&v6, *(float32x2_t *)(v8 - 2));
        float v9 = *v8;
        v8 += 4;
        *((float *)&v10 + sub_10004ACAC(3, 1, 2) = *((float *)&v6 + 2) + v9;
        HIDWORD(v10) = 0;
        long long v6 = v10;
        --*(void *)&v7;
      }
      while (v7 != 0.0);
    }
    float32x2_t v14 = (float32x2_t)v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(float *)v12.i32 = (float)v0;
    *(float32x2_t *)&long long v11 = vdiv_f32(v14, (float32x2_t)vdup_lane_s32(v12, 0));
  }
  else
  {
    swift_bridgeObjectRelease();
    long long v11 = *(_OWORD *)SIMD3<>.zero.unsafeMutableAddressor();
  }
  return *(double *)&v11;
}

unint64_t sub_10006D264()
{
  sub_10006CD78();
  float v1 = v0;
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  int64_t v2 = *(void *)(v66 + 16);
  if (v2)
  {
    sub_1000BBE14(0, v2, 0);
    for (uint64_t i = 0; i != v2; ++i)
    {
      RingBuffer.subscript.getter();
      double v5 = _swiftEmptyArrayStorage[2];
      double v4 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v5 >= *(void *)&v4 >> 1) {
        sub_1000BBE14((char *)(*(void *)&v4 > 1uLL), *(void *)&v5 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v5 + 1;
      *((float *)&_swiftEmptyArrayStorage[4] + *(void *)&v5) = (float)(v65 - v1) * (float)(v65 - v1);
    }
    swift_bridgeObjectRelease();
    double v6 = _swiftEmptyArrayStorage[2];
    if (v6 != 0.0) {
      goto LABEL_7;
    }
LABEL_10:
    float v8 = 0.0;
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  double v6 = _swiftEmptyArrayStorage[2];
  if (v6 == 0.0) {
    goto LABEL_10;
  }
LABEL_7:
  if (*(void *)&v6 == 1)
  {
    uint64_t v7 = 0;
    float v8 = 0.0;
  }
  else
  {
    uint64_t v7 = *(void *)&v6 & 0x7FFFFFFFFFFFFFFELL;
    float v9 = (float *)&_swiftEmptyArrayStorage[4] + 1;
    float v8 = 0.0;
    uint64_t v10 = *(void *)&v6 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      float v8 = (float)(v8 + *(v9 - 1)) + *v9;
      v9 += 2;
      v10 -= 2;
    }
    while (v10);
    if (*(void *)&v6 == v7) {
      goto LABEL_16;
    }
  }
  uint64_t v11 = *(void *)&v6 - v7;
  int32x2_t v12 = (float *)&_swiftEmptyArrayStorage[4] + v7;
  do
  {
    float v13 = *v12++;
    float v8 = v8 + v13;
    --v11;
  }
  while (v11);
LABEL_16:
  swift_bridgeObjectRelease();
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  uint64_t v14 = *(void *)(v66 + 16);
  swift_bridgeObjectRelease();
  float v15 = sqrtf(v8 / (float)(v14 - 1));
  if (v15 > 0.1)
  {
    swift_retain();
    Synchronized.wrappedValue.getter();
    sub_100012894(&qword_1004C6908);
    RingBuffer.clear()();
    Synchronized.wrappedValue.setter();
    swift_release();
LABEL_84:
    unsigned __int8 v23 = 0;
    float v22 = v15;
    return LODWORD(v22) | ((unint64_t)v23 << 32);
  }
  if (v15 <= 0.01)
  {
    float v22 = 0.0;
    unsigned __int8 v23 = 1;
    return LODWORD(v22) | ((unint64_t)v23 << 32);
  }
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  uint64_t v16 = *(void *)(v66 + 16);
  if (v16)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = 0;
    float32x2_t v18 = (char *)_swiftEmptyArrayStorage;
    do
    {
      RingBuffer.subscript.getter();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        float32x2_t v18 = sub_10006E280(0, *((void *)v18 + 2) + 1, 1, v18);
      }
      unint64_t v20 = *((void *)v18 + 2);
      unint64_t v19 = *((void *)v18 + 3);
      if (v20 >= v19 >> 1) {
        float32x2_t v18 = sub_10006E280((char *)(v19 > 1), v20 + 1, 1, v18);
      }
      *((void *)v18 + sub_10004ACAC(3, 1, 2) = v20 + 1;
      CGPoint v21 = &v18[48 * v20];
      *((float *)v21 + 8) = v65;
      ++v17;
      *((_OWORD *)v21 + 3) = v66;
      *((_OWORD *)v21 + 4) = v67;
    }
    while (v16 != v17);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    float32x2_t v18 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v24 = *((void *)v18 + 2);
  if (!v24)
  {
    uint64_t v28 = (uint64_t)v18;
LABEL_79:
    swift_retain();
    Synchronized.wrappedValue.getter();
    sub_100012894(&qword_1004C6908);
    RingBuffer.clear()();
    Synchronized.wrappedValue.setter();
    swift_release();
    uint64_t v56 = *(void *)(v28 + 16);
    if (v56)
    {
      swift_bridgeObjectRetain();
      uint64_t v57 = v28 + 64;
      do
      {
        swift_retain();
        Synchronized.wrappedValue.getter();
        RingBuffer.append(_:)();
        Synchronized.wrappedValue.setter();
        swift_release();
        v57 += 48;
        --v56;
      }
      while (v56);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_84;
  }
  double v25 = v18 + 32;
  unint64_t result = swift_bridgeObjectRetain();
  uint64_t v27 = 0;
  uint64_t v28 = (uint64_t)v18;
  while (1)
  {
    uint64_t v29 = *(void *)(v28 + 16);
    if (v29)
    {
      long long v30 = &v25[48 * v27];
      float v31 = *(float *)v30;
      int32x4_t v32 = *((int32x4_t *)v30 + 1);
      float32x4_t v33 = *((float32x4_t *)v30 + 2);
      float v34 = 0.0;
      uint64_t v35 = 32;
      uint64_t v36 = *(void *)(v28 + 16);
      do
      {
        float v34 = v34 + *(float *)(v28 + v35);
        v35 += 48;
        --v36;
      }
      while (v36);
      if (vabds_f32(v31, v34 / (float)v29) > 0.01) {
        break;
      }
    }
LABEL_32:
    if (++v27 == v24)
    {
      swift_bridgeObjectRelease();
      goto LABEL_79;
    }
  }
  uint64_t v37 = 0;
  int64_t v38 = 0;
  float32x4_t v39 = (float32x4_t)vextq_s8(vextq_s8((int8x16_t)v32, (int8x16_t)v32, 0xCuLL), (int8x16_t)v33, 8uLL);
  uint64_t v40 = v28 + 48;
  do
  {
    v41.i64[0] = *(void *)(v40 + 4);
    v41.i64[1] = *(void *)(v40 + 16);
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(v41, v39)), 0xFuLL))) & 1) != 0
      && *(float *)v40 == *(float *)v32.i32
      && *(float *)(v40 - 16) == v31
      && *(float *)(v40 + 24) == v33.f32[2])
    {
      unint64_t v43 = v38 + 1;
      if (__OFADD__(v38, 1))
      {
LABEL_92:
        __break(1u);
        goto LABEL_93;
      }
      if (v43 == v29)
      {
LABEL_48:
        if (v29 >= v38)
        {
          if ((v38 & 0x8000000000000000) == 0) {
            goto LABEL_52;
          }
          goto LABEL_90;
        }
      }
      else
      {
        float32x4_t v49 = (float32x4_t)vzip1q_s32(v32, vzip2q_s32(v32, v32));
        v49.f32[1] = v31;
        float32x4_t v58 = v49;
        float32x4_t v59 = v33;
        while (v43 < v29)
        {
          float32x4_t v50 = (float32x4_t)vzip1q_s32(*(int32x4_t *)(v28 + v37 + 96), vzip2q_s32(*(int32x4_t *)(v28 + v37 + 96), *(int32x4_t *)(v28 + v37 + 96)));
          v50.i32[1] = *(_DWORD *)(v28 + v37 + 80);
          if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(v50, v49)), 0xFuLL))) & 1) == 0
            || (int16x4_t v51 = vmovn_s32(vceqq_f32(*(float32x4_t *)(v28 + v37 + 112), v33)), (v51.i8[0] & 1) == 0)
            || (v51.i8[2] & 1) == 0
            || (v51.i8[4] & 1) == 0)
          {
            if (v43 != v38)
            {
              if (v38 >= (unint64_t)v29) {
                goto LABEL_88;
              }
              int v62 = *(_DWORD *)(v28 + v37 + 80);
              long long v63 = *(_OWORD *)(v28 + v37 + 112);
              long long v64 = *(_OWORD *)(v28 + v37 + 96);
              uint64_t v52 = v28 + 32 + 48 * v38;
              int v53 = *(_DWORD *)v52;
              long long v60 = *(_OWORD *)(v52 + 32);
              long long v61 = *(_OWORD *)(v52 + 16);
              unint64_t result = swift_isUniquelyReferenced_nonNull_native();
              if ((result & 1) == 0)
              {
                unint64_t result = (unint64_t)sub_100030BEC(v28);
                uint64_t v28 = result;
              }
              uint64_t v54 = v28 + 48 * v38;
              *(_DWORD *)(v54 + 3sub_10004ACAC(3, 1, 2) = v62;
              *(_OWORD *)(v54 + 48) = v64;
              *(_OWORD *)(v54 + 64) = v63;
              uint64_t v55 = v28 + v37;
              *(_DWORD *)(v55 + 80) = v53;
              *(_OWORD *)(v55 + 96) = v61;
              *(_OWORD *)(v55 + 11sub_10004ACAC(3, 1, 2) = v60;
              float32x4_t v49 = v58;
              float32x4_t v33 = v59;
            }
            BOOL v47 = __OFADD__(v38++, 1);
            if (v47) {
              goto LABEL_87;
            }
            uint64_t v29 = *(void *)(v28 + 16);
          }
          ++v43;
          v37 += 48;
          if (v43 == v29) {
            goto LABEL_48;
          }
        }
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
      }
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
      goto LABEL_92;
    }
    ++v38;
    v40 += 48;
    v37 += 48;
  }
  while (v29 != v38);
  int64_t v38 = *(void *)(v28 + 16);
LABEL_52:
  int64_t v44 = v38 - v29;
  if (__OFADD__(v29, v38 - v29)) {
    goto LABEL_91;
  }
  unint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v38 <= *(void *)(v28 + 24) >> 1)
  {
    if (v38 != v29) {
      goto LABEL_61;
    }
LABEL_31:
    double v25 = v18 + 32;
    goto LABEL_32;
  }
  if (v29 <= v38) {
    int64_t v45 = v38;
  }
  else {
    int64_t v45 = v29;
  }
  unint64_t result = (unint64_t)sub_10006E280((char *)result, v45, 1, (char *)v28);
  uint64_t v28 = result;
  if (v38 == v29) {
    goto LABEL_31;
  }
LABEL_61:
  unint64_t result = (unint64_t)memmove((void *)(v28 + 32 + 48 * v38), (const void *)(v28 + 32 + 48 * v29), 48 * (*(void *)(v28 + 16) - v29));
  uint64_t v46 = *(void *)(v28 + 16);
  BOOL v47 = __OFADD__(v46, v44);
  uint64_t v48 = v46 + v44;
  if (!v47)
  {
    *(void *)(v28 + 16) = v48;
    goto LABEL_31;
  }
LABEL_93:
  __break(1u);
  return result;
}

uint64_t sub_10006DA00()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PersonHeightInstrument.HeightResultContainer()
{
  return self;
}

__n128 initializeWithCopy for PersonHeightInstrument.HeightResultContainer.HeightResult(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 3sub_10004ACAC(3, 1, 2) = v3;
  *(__n128 *)a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for PersonHeightInstrument.HeightResultContainer.HeightResult()
{
  return &type metadata for PersonHeightInstrument.HeightResultContainer.HeightResult;
}

unsigned char *storeEnumTagSinglePayload for PersonHeightInstrument.ConfirmationAnimation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    void *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_10004ACAC(2, 1, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006DB4CLL);
      case 4:
        *(_DWORD *)(result + sub_10004ACAC(2, 1, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_10004ACAC(2, 1, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_10004ACAC(2, 1, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonHeightInstrument.ConfirmationAnimation()
{
  return &type metadata for PersonHeightInstrument.ConfirmationAnimation;
}

unint64_t sub_10006DB88()
{
  unint64_t result = qword_1004C68C8;
  if (!qword_1004C68C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C68C8);
  }
  return result;
}

uint64_t sub_10006DBDC()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_10006DC14(uint64_t a1, uint64_t a2)
{
  return sub_100064DA8(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_10006DC20()
{
  return sub_10006A64C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_10006DC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10006DC3C()
{
  return swift_release();
}

void sub_10006DC44()
{
  id v0 = sub_10005CAF8();
  [v0 toggleViewVisibilityWithIsVisible:0];
}

uint64_t sub_10006DC98@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10006DCA4(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_10006DCE8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10006DCF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 8) = v3;
  return result;
}

uint64_t sub_10006DD38@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10006DD44@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10006DD50(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_10006DD94(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_10006DDD8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10006DDE4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 8) = v3;
  return result;
}

uint64_t sub_10006DE28@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10006DE34(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

char *sub_10006DE78(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C69E8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  float v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + sub_10004ACAC(3, 1, 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v8 << 6);
  }
  swift_bridgeObjectRelease();
  return v10;
}

double *sub_10006DF74(double *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C69B8);
    uint64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  float v13 = (char *)(a4 + 32);
  if (v5)
  {
    if (v10 != (double *)a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_10006E060(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C69D8);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_100012894(&qword_1004C69E0);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_10006E184(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C6938);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  float v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + sub_10004ACAC(3, 1, 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_10006E280(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C6A00);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  float v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + sub_10004ACAC(3, 1, 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 48 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_10006E398(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C69F0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_100012894(&qword_1004C69F8);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_10006E4BC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C6B08);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[4 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_100012894(&qword_1004C6B10);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_10006E5E0(size_t a1, int64_t a2, char a3, void *a4)
{
  return sub_10006FA80(a1, a2, a3, a4, &qword_1004C6930, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
}

double *sub_10006E600(double *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894((uint64_t *)&unk_1004C6950);
    uint64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  float v13 = (char *)(a4 + 32);
  if (v5)
  {
    if (v10 != (double *)a4 || v12 >= &v13[96 * v8]) {
      memmove(v12, v13, 96 * v8);
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

double *sub_10006E718(double *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894((uint64_t *)&unk_1004C71E0);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  float v13 = (char *)(v10 + 4);
  uint64_t v14 = (char *)(a4 + 32);
  if (v5)
  {
    if (v10 != (double *)a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_10006E814(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C6988);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  float v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + sub_10004ACAC(3, 1, 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_10006E930(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C6918);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  float v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + sub_10004ACAC(3, 1, 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

double *sub_10006EA34(double *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894((uint64_t *)&unk_1004C6A70);
    uint64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  float v13 = (char *)(a4 + 32);
  size_t v14 = 48 * v8;
  if (v5)
  {
    if (v10 != (double *)a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    memcpy(v12, v13, v14);
  }
  swift_bridgeObjectRelease();
  return v10;
}

double *sub_10006EB40(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C6A20);
    uint64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 112);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[14 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 112 * v8);
    }
    a4[2] = 0.0;
  }
  else
  {
    sub_100012894(&qword_1004C6A28);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_10006EC7C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C6B48);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  float v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + sub_10004ACAC(3, 1, 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 32 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

double *sub_10006ED78(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C6940);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0.0;
  }
  else
  {
    sub_100012894(&qword_1004C6948);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_10006EE9C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C6B40);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  float v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + sub_10004ACAC(3, 1, 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 40 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_10006EFB0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C6B38);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 95;
    }
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 7);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  float v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[128 * v8]) {
      memmove(v13, v14, v8 << 7);
    }
    *((void *)a4 + sub_10004ACAC(3, 1, 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_10006F0B4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C6B30);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  float v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + sub_10004ACAC(3, 1, 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 32 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_10006F1B0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C6B20);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[6 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_100012894(&qword_1004C6B28);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_10006F2EC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C6B18);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  float v13 = v10 + 32;
  size_t v14 = a4 + 32;
  size_t v15 = v8 << 6;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + sub_10004ACAC(3, 1, 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v15);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_10006F3E4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894((uint64_t *)&unk_1004C6960);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 304);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  float v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[304 * v8]) {
      memmove(v12, v13, 304 * v8);
    }
    *((void *)a4 + sub_10004ACAC(3, 1, 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_10006F504(size_t a1, int64_t a2, char a3, void *a4)
{
  return sub_10006FA80(a1, a2, a3, a4, &qword_1004C6998, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
}

double *sub_10006F524(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C69C8);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0.0;
  }
  else
  {
    sub_100012894(&qword_1004C69D0);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

double *sub_10006F648(double *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C6020);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  float v13 = (char *)(v10 + 4);
  size_t v14 = (char *)(a4 + 32);
  if (v5)
  {
    if (v10 != (double *)a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

double *sub_10006F744(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894((uint64_t *)&unk_1004C6970);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 95;
    }
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 7);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[16 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, v8 << 7);
    }
    a4[2] = 0.0;
  }
  else
  {
    sub_100012894(&qword_1004CEA20);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

double *sub_10006F868(double *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C6980);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  float v13 = (char *)(v10 + 4);
  size_t v14 = (char *)(a4 + 32);
  if (v5)
  {
    if (v10 != (double *)a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

double *sub_10006F964(double *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C69C0);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 95;
    }
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 7);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  float v13 = (char *)(v10 + 4);
  size_t v14 = (char *)(a4 + 32);
  if (v5)
  {
    if (v10 != (double *)a4 || v13 >= &v14[128 * v8]) {
      memmove(v13, v14, v8 << 7);
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    memcpy(v13, v14, v8 << 7);
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_10006FA60(size_t a1, int64_t a2, char a3, void *a4)
{
  return sub_10006FA80(a1, a2, a3, a4, &qword_1004C69B0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
}

size_t sub_10006FA80(size_t result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  char v8 = result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100012894(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t result = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_29;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(result - v15) / v14);
LABEL_19:
  uint64_t v18 = *(void *)(a6(0) - 8);
  if (v8)
  {
    if (v16 < a4
      || (unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80),
          (char *)v16 + v19 >= (char *)a4 + v19 + *(void *)(v18 + 72) * v11))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v16;
}

double *sub_10006FC5C(double *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100012894(&qword_1004C69A0);
    int64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + sub_10004ACAC(3, 1, 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    if (v10 != (double *)a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_10006FD78(unint64_t result, int64_t a2, uint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  char v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < a2)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v7 = result;
  unint64_t v8 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  unint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    return result;
  }
  size_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    char v5 = (void *)sub_10006FA80(isUniquelyReferenced_nonNull_native, v13, 1, v5, &qword_1004C6998, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
    *(void *)uint64_t v3 = v5;
  }
  uint64_t v14 = *(void *)(type metadata accessor for SpatialPlattersHistoryItem() - 8);
  unint64_t v15 = (char *)v5 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v16 = *(void *)(v14 + 72);
  uint64_t v17 = (uint64_t)&v15[v16 * v7];
  uint64_t result = swift_arrayDestroy();
  if (!v9) {
    goto LABEL_24;
  }
  uint64_t v18 = v5[2];
  if (__OFSUB__(v18, a2)) {
    goto LABEL_32;
  }
  uint64_t result = v17 + v16;
  unint64_t v19 = (unint64_t)&v15[v16 * a2];
  if (v17 + v16 < v19 || result >= v19 + (v18 - a2) * v16)
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (result != v19)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v21 = v5[2];
  BOOL v22 = __OFADD__(v21, v9);
  uint64_t v23 = v21 + v9;
  if (v22) {
    goto LABEL_33;
  }
  v5[2] = v23;
LABEL_24:
  if (v16 >= 1) {
    sub_100072F68(a3, v17);
  }
  return sub_10002B9C0(a3, &qword_1004C69A8);
}

uint64_t sub_10006FF4C(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v80 = *a1;
      uint64_t v81 = -1;
      uint64_t v82 = 1;
      uint64_t v83 = *a1;
      do
      {
        long long v84 = *(_OWORD *)(v80 + 16 * v82);
        LODWORD(v85) = HIDWORD(*(void *)(v80 + 16 * v82));
        uint64_t v86 = v81;
        uint64_t v87 = v83;
        do
        {
          if (v85 >= *(float *)(v87 + 4)) {
            break;
          }
          if (!v80) {
            goto LABEL_142;
          }
          *(_OWORD *)(v87 + 16) = *(_OWORD *)v87;
          *(_OWORD *)uint64_t v87 = v84;
          v87 -= 16;
        }
        while (!__CFADD__(v86++, 1));
        ++v82;
        v83 += 16;
        --v81;
      }
      while (v82 != v3);
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_137;
    }
    uint64_t v6 = result;
    long long v96 = a1;
    if (v3 > 1)
    {
      uint64_t v7 = v5 >> 1;
      sub_100012894((uint64_t *)&unk_1004CEDE0);
      uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
      *(void *)(result + 16) = v7;
      uint64_t v100 = (double *)result;
      uint64_t v104 = (float *)(result + 32);
LABEL_13:
      Swift::Int v9 = 0;
      uint64_t v10 = *a1;
      uint64_t v98 = *a1 + 36;
      uint64_t v99 = *a1 + 4;
      uint64_t v97 = *a1 - 16;
      size_t v11 = _swiftEmptyArrayStorage;
      uint64_t v101 = v6;
      Swift::Int v102 = v3;
      uint64_t v103 = v10;
      while (1)
      {
        Swift::Int v13 = v9++;
        if (v9 < v3)
        {
          float v14 = *(float *)(v99 + 16 * v9);
          float v15 = *(float *)(v99 + 16 * v13);
          Swift::Int v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            uint64_t v16 = (float *)(v98 + 16 * v13);
            float v17 = v14;
            while (1)
            {
              float v18 = v17;
              float v17 = *v16;
              if (v14 < v15 == *v16 >= v18) {
                break;
              }
              ++v9;
              v16 += 4;
              if (v3 == v9)
              {
                Swift::Int v9 = v3;
                break;
              }
            }
          }
          if (v14 < v15)
          {
            if (v9 < v13) {
              goto LABEL_139;
            }
            if (v13 < v9)
            {
              unint64_t v19 = (long long *)(v97 + 16 * v9);
              Swift::Int v20 = v9;
              Swift::Int v21 = v13;
              BOOL v22 = (long long *)(v10 + 16 * v13);
              do
              {
                if (v21 != --v20)
                {
                  if (!v10) {
                    goto LABEL_145;
                  }
                  long long v23 = *v22;
                  *BOOL v22 = *v19;
                  *unint64_t v19 = v23;
                }
                ++v21;
                --v19;
                ++v22;
              }
              while (v21 < v20);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13)) {
            goto LABEL_136;
          }
          if (v9 - v13 < v6)
          {
            Swift::Int v24 = v13 + v6;
            if (__OFADD__(v13, v6)) {
              goto LABEL_140;
            }
            if (v24 >= v3) {
              Swift::Int v24 = v3;
            }
            if (v24 < v13)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v9 != v24)
            {
              uint64_t v25 = v97 + 16 * v9;
              do
              {
                long long v26 = *(_OWORD *)(v10 + 16 * v9);
                LODWORD(v27) = HIDWORD(*(void *)(v10 + 16 * v9));
                Swift::Int v28 = v13;
                uint64_t v29 = v25;
                do
                {
                  if (v27 >= *(float *)(v29 + 4)) {
                    break;
                  }
                  if (!v10) {
                    goto LABEL_143;
                  }
                  *(_OWORD *)(v29 + 16) = *(_OWORD *)v29;
                  *(_OWORD *)uint64_t v29 = v26;
                  v29 -= 16;
                  ++v28;
                }
                while (v9 != v28);
                ++v9;
                v25 += 16;
              }
              while (v9 != v24);
              Swift::Int v9 = v24;
            }
          }
        }
        if (v9 < v13) {
          goto LABEL_131;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1000BE0E4(0, *((void *)v11 + 2) + 1, 1, (char *)v11);
          size_t v11 = (double *)result;
        }
        unint64_t v31 = *((void *)v11 + 2);
        unint64_t v30 = *((void *)v11 + 3);
        unint64_t v12 = v31 + 1;
        uint64_t v10 = v103;
        if (v31 >= v30 >> 1)
        {
          uint64_t result = (uint64_t)sub_1000BE0E4((char *)(v30 > 1), v31 + 1, 1, (char *)v11);
          uint64_t v10 = v103;
          size_t v11 = (double *)result;
        }
        *((void *)v11 + sub_10004ACAC(3, 1, 2) = v12;
        int32x4_t v32 = v11 + 4;
        float32x4_t v33 = &v11[2 * v31 + 4];
        *(void *)float32x4_t v33 = v13;
        *((void *)v33 + sub_10004ACAC(2, 1, 1) = v9;
        if (v31)
        {
          while (1)
          {
            unint64_t v34 = v12 - 1;
            if (v12 >= 4)
            {
              float32x4_t v39 = &v32[2 * v12];
              uint64_t v40 = *((void *)v39 - 8);
              uint64_t v41 = *((void *)v39 - 7);
              BOOL v45 = __OFSUB__(v41, v40);
              uint64_t v42 = v41 - v40;
              if (v45) {
                goto LABEL_120;
              }
              uint64_t v44 = *((void *)v39 - 6);
              uint64_t v43 = *((void *)v39 - 5);
              BOOL v45 = __OFSUB__(v43, v44);
              uint64_t v37 = v43 - v44;
              char v38 = v45;
              if (v45) {
                goto LABEL_121;
              }
              unint64_t v46 = v12 - 2;
              BOOL v47 = &v32[2 * v12 - 4];
              uint64_t v49 = *(void *)v47;
              uint64_t v48 = *((void *)v47 + 1);
              BOOL v45 = __OFSUB__(v48, v49);
              uint64_t v50 = v48 - v49;
              if (v45) {
                goto LABEL_122;
              }
              BOOL v45 = __OFADD__(v37, v50);
              uint64_t v51 = v37 + v50;
              if (v45) {
                goto LABEL_124;
              }
              if (v51 >= v42)
              {
                long long v69 = &v32[2 * v34];
                uint64_t v71 = *(void *)v69;
                uint64_t v70 = *((void *)v69 + 1);
                BOOL v45 = __OFSUB__(v70, v71);
                uint64_t v72 = v70 - v71;
                if (v45) {
                  goto LABEL_130;
                }
                BOOL v62 = v37 < v72;
                goto LABEL_83;
              }
            }
            else
            {
              if (v12 != 3)
              {
                uint64_t v63 = *((void *)v11 + 4);
                uint64_t v64 = *((void *)v11 + 5);
                BOOL v45 = __OFSUB__(v64, v63);
                uint64_t v56 = v64 - v63;
                char v57 = v45;
                goto LABEL_77;
              }
              uint64_t v36 = *((void *)v11 + 4);
              uint64_t v35 = *((void *)v11 + 5);
              BOOL v45 = __OFSUB__(v35, v36);
              uint64_t v37 = v35 - v36;
              char v38 = v45;
            }
            if (v38) {
              goto LABEL_123;
            }
            unint64_t v46 = v12 - 2;
            uint64_t v52 = &v32[2 * v12 - 4];
            uint64_t v54 = *(void *)v52;
            uint64_t v53 = *((void *)v52 + 1);
            BOOL v55 = __OFSUB__(v53, v54);
            uint64_t v56 = v53 - v54;
            char v57 = v55;
            if (v55) {
              goto LABEL_125;
            }
            float32x4_t v58 = &v32[2 * v34];
            uint64_t v60 = *(void *)v58;
            uint64_t v59 = *((void *)v58 + 1);
            BOOL v45 = __OFSUB__(v59, v60);
            uint64_t v61 = v59 - v60;
            if (v45) {
              goto LABEL_127;
            }
            if (__OFADD__(v56, v61)) {
              goto LABEL_129;
            }
            if (v56 + v61 >= v37)
            {
              BOOL v62 = v37 < v61;
LABEL_83:
              if (v62) {
                unint64_t v34 = v46;
              }
              goto LABEL_85;
            }
LABEL_77:
            if (v57) {
              goto LABEL_126;
            }
            float v65 = &v32[2 * v34];
            uint64_t v67 = *(void *)v65;
            uint64_t v66 = *((void *)v65 + 1);
            BOOL v45 = __OFSUB__(v66, v67);
            uint64_t v68 = v66 - v67;
            if (v45) {
              goto LABEL_128;
            }
            if (v68 < v56) {
              goto LABEL_15;
            }
LABEL_85:
            unint64_t v73 = v34 - 1;
            if (v34 - 1 >= v12)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v10) {
              goto LABEL_144;
            }
            uint64_t v74 = v11;
            uint64_t v75 = &v32[2 * v73];
            uint64_t v76 = *(void *)v75;
            id v77 = &v32[2 * v34];
            double v78 = v77[1];
            uint64_t result = sub_100071AD8((float *)(v10 + 16 * *(void *)v75), (float *)(v10 + 16 * *(void *)v77), v10 + 16 * *(void *)&v78, v104);
            if (v1) {
              goto LABEL_93;
            }
            if (*(uint64_t *)&v78 < v76) {
              goto LABEL_117;
            }
            if (v34 > *((void *)v74 + 2)) {
              goto LABEL_118;
            }
            *(void *)uint64_t v75 = v76;
            v32[2 * v73 + 1] = v78;
            unint64_t v79 = *((void *)v74 + 2);
            if (v34 >= v79) {
              goto LABEL_119;
            }
            size_t v11 = v74;
            unint64_t v12 = v79 - 1;
            uint64_t result = (uint64_t)memmove(&v32[2 * v34], v77 + 2, 16 * (v79 - 1 - v34));
            *((void *)v74 + sub_10004ACAC(3, 1, 2) = v79 - 1;
            uint64_t v10 = v103;
            if (v79 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v12 = 1;
LABEL_15:
        uint64_t v6 = v101;
        Swift::Int v3 = v102;
        if (v9 >= v102)
        {
          unint64_t v8 = v100;
          goto LABEL_103;
        }
      }
    }
    unint64_t v8 = _swiftEmptyArrayStorage;
    uint64_t v104 = (float *)&_swiftEmptyArrayStorage[4];
    if (v3 == 1)
    {
      uint64_t v100 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    unint64_t v12 = *(void *)&_swiftEmptyArrayStorage[2];
    size_t v11 = _swiftEmptyArrayStorage;
LABEL_103:
    uint64_t result = (uint64_t)v11;
    uint64_t v100 = v8;
    if (v12 >= 2)
    {
      uint64_t v89 = *v96;
      do
      {
        unint64_t v90 = v12 - 2;
        if (v12 < 2) {
          goto LABEL_132;
        }
        if (!v89) {
          goto LABEL_146;
        }
        uint64_t v91 = result;
        uint64_t v92 = *(void *)(result + 32 + 16 * v90);
        uint64_t v93 = *(void *)(result + 32 + 16 * (v12 - 1) + 8);
        uint64_t result = sub_100071AD8((float *)(v89 + 16 * v92), (float *)(v89 + 16 * *(void *)(result + 32 + 16 * (v12 - 1))), v89 + 16 * v93, v104);
        if (v1) {
          break;
        }
        if (v93 < v92) {
          goto LABEL_133;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1000BE1E0(v91);
          uint64_t v91 = result;
        }
        if (v90 >= *(void *)(v91 + 16)) {
          goto LABEL_134;
        }
        objc_super v94 = (void *)(v91 + 32 + 16 * v90);
        *objc_super v94 = v92;
        v94[1] = v93;
        unint64_t v95 = *(void *)(v91 + 16);
        if (v12 > v95) {
          goto LABEL_135;
        }
        memmove((void *)(v91 + 32 + 16 * (v12 - 1)), (const void *)(v91 + 32 + 16 * v12), 16 * (v95 - v12));
        uint64_t result = v91;
        *(void *)(v91 + 16) = v95 - 1;
        unint64_t v12 = v95 - 1;
      }
      while (v95 > 2);
    }
LABEL_93:
    swift_bridgeObjectRelease();
    v100[2] = 0.0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000705E0(uint64_t *a1, float a2)
{
  Swift::Int v5 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v5);
  if (result >= v5)
  {
    if (v5 < 0) {
      goto LABEL_131;
    }
    if (v5) {
      return sub_100071A60(0, v5, 1, a1, a2);
    }
    return result;
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_130;
  }
  uint64_t v8 = result;
  id v88 = a1;
  if (v5 > 1)
  {
    uint64_t v9 = v7 >> 1;
    sub_100012894((uint64_t *)&unk_1004CEDE0);
    uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(result + 16) = v9;
    uint64_t v92 = (double *)result;
    long long v96 = (float *)(result + 32);
LABEL_13:
    Swift::Int v11 = 0;
    uint64_t v12 = *a1;
    uint64_t v90 = *a1 + 36;
    uint64_t v91 = *a1 + 4;
    uint64_t v89 = *a1 - 16;
    Swift::Int v13 = _swiftEmptyArrayStorage;
    uint64_t v93 = v8;
    Swift::Int v94 = v5;
    uint64_t v95 = v12;
    while (1)
    {
      Swift::Int v15 = v11++;
      if (v11 < v5)
      {
        float v16 = *(float *)(v91 + 16 * v11);
        float v17 = vabds_f32(v16, a2);
        float v18 = vabds_f32(*(float *)(v91 + 16 * v15), a2);
        Swift::Int v11 = v15 + 2;
        if (v15 + 2 < v5)
        {
          unint64_t v19 = (float *)(v90 + 16 * v15);
          while (1)
          {
            float v20 = vabds_f32(v16, a2);
            float v16 = *v19;
            if (v17 < v18 == vabds_f32(*v19, a2) >= v20) {
              break;
            }
            ++v11;
            v19 += 4;
            if (v5 == v11)
            {
              Swift::Int v11 = v5;
              break;
            }
          }
        }
        if (v17 < v18)
        {
          if (v11 < v15) {
            goto LABEL_132;
          }
          if (v15 < v11)
          {
            Swift::Int v21 = (long long *)(v89 + 16 * v11);
            Swift::Int v22 = v11;
            Swift::Int v23 = v15;
            Swift::Int v24 = (long long *)(v12 + 16 * v15);
            do
            {
              if (v23 != --v22)
              {
                if (!v12) {
                  goto LABEL_137;
                }
                long long v25 = *v24;
                long long *v24 = *v21;
                *Swift::Int v21 = v25;
              }
              ++v23;
              --v21;
              ++v24;
            }
            while (v23 < v22);
          }
        }
      }
      if (v11 < v5)
      {
        if (__OFSUB__(v11, v15)) {
          goto LABEL_129;
        }
        if (v11 - v15 < v8)
        {
          Swift::Int v26 = v15 + v8;
          if (__OFADD__(v15, v8)) {
            goto LABEL_133;
          }
          if (v26 >= v5) {
            Swift::Int v26 = v5;
          }
          if (v26 < v15)
          {
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
            return result;
          }
          if (v11 != v26)
          {
            uint64_t v27 = v89 + 16 * v11;
            do
            {
              long long v28 = *(_OWORD *)(v12 + 16 * v11);
              float v29 = vabds_f32(COERCE_FLOAT(HIDWORD(*(void *)(v12 + 16 * v11))), a2);
              Swift::Int v30 = v15;
              uint64_t v31 = v27;
              do
              {
                if (v29 >= vabds_f32(*(float *)(v31 + 4), a2)) {
                  break;
                }
                if (!v12) {
                  goto LABEL_135;
                }
                *(_OWORD *)(v31 + 16) = *(_OWORD *)v31;
                *(_OWORD *)uint64_t v31 = v28;
                v31 -= 16;
                ++v30;
              }
              while (v11 != v30);
              ++v11;
              v27 += 16;
            }
            while (v11 != v26);
            Swift::Int v11 = v26;
          }
        }
      }
      if (v11 < v15) {
        goto LABEL_124;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1000BE0E4(0, *((void *)v13 + 2) + 1, 1, (char *)v13);
        Swift::Int v13 = (double *)result;
      }
      unint64_t v33 = *((void *)v13 + 2);
      unint64_t v32 = *((void *)v13 + 3);
      unint64_t v14 = v33 + 1;
      uint64_t v12 = v95;
      if (v33 >= v32 >> 1)
      {
        uint64_t result = (uint64_t)sub_1000BE0E4((char *)(v32 > 1), v33 + 1, 1, (char *)v13);
        uint64_t v12 = v95;
        Swift::Int v13 = (double *)result;
      }
      *((void *)v13 + sub_10004ACAC(3, 1, 2) = v14;
      unint64_t v34 = v13 + 4;
      uint64_t v35 = &v13[2 * v33 + 4];
      *(void *)uint64_t v35 = v15;
      *((void *)v35 + sub_10004ACAC(2, 1, 1) = v11;
      if (v33)
      {
        while (1)
        {
          unint64_t v36 = v14 - 1;
          if (v14 >= 4)
          {
            uint64_t v41 = &v34[2 * v14];
            uint64_t v42 = *((void *)v41 - 8);
            uint64_t v43 = *((void *)v41 - 7);
            BOOL v47 = __OFSUB__(v43, v42);
            uint64_t v44 = v43 - v42;
            if (v47) {
              goto LABEL_113;
            }
            uint64_t v46 = *((void *)v41 - 6);
            uint64_t v45 = *((void *)v41 - 5);
            BOOL v47 = __OFSUB__(v45, v46);
            uint64_t v39 = v45 - v46;
            char v40 = v47;
            if (v47) {
              goto LABEL_114;
            }
            unint64_t v48 = v14 - 2;
            uint64_t v49 = &v34[2 * v14 - 4];
            uint64_t v51 = *(void *)v49;
            uint64_t v50 = *((void *)v49 + 1);
            BOOL v47 = __OFSUB__(v50, v51);
            uint64_t v52 = v50 - v51;
            if (v47) {
              goto LABEL_115;
            }
            BOOL v47 = __OFADD__(v39, v52);
            uint64_t v53 = v39 + v52;
            if (v47) {
              goto LABEL_117;
            }
            if (v53 >= v44)
            {
              uint64_t v71 = &v34[2 * v36];
              uint64_t v73 = *(void *)v71;
              uint64_t v72 = *((void *)v71 + 1);
              BOOL v47 = __OFSUB__(v72, v73);
              uint64_t v74 = v72 - v73;
              if (v47) {
                goto LABEL_123;
              }
              BOOL v64 = v39 < v74;
              goto LABEL_83;
            }
          }
          else
          {
            if (v14 != 3)
            {
              uint64_t v65 = *((void *)v13 + 4);
              uint64_t v66 = *((void *)v13 + 5);
              BOOL v47 = __OFSUB__(v66, v65);
              uint64_t v58 = v66 - v65;
              char v59 = v47;
              goto LABEL_77;
            }
            uint64_t v38 = *((void *)v13 + 4);
            uint64_t v37 = *((void *)v13 + 5);
            BOOL v47 = __OFSUB__(v37, v38);
            uint64_t v39 = v37 - v38;
            char v40 = v47;
          }
          if (v40) {
            goto LABEL_116;
          }
          unint64_t v48 = v14 - 2;
          uint64_t v54 = &v34[2 * v14 - 4];
          uint64_t v56 = *(void *)v54;
          uint64_t v55 = *((void *)v54 + 1);
          BOOL v57 = __OFSUB__(v55, v56);
          uint64_t v58 = v55 - v56;
          char v59 = v57;
          if (v57) {
            goto LABEL_118;
          }
          uint64_t v60 = &v34[2 * v36];
          uint64_t v62 = *(void *)v60;
          uint64_t v61 = *((void *)v60 + 1);
          BOOL v47 = __OFSUB__(v61, v62);
          uint64_t v63 = v61 - v62;
          if (v47) {
            goto LABEL_120;
          }
          if (__OFADD__(v58, v63)) {
            goto LABEL_122;
          }
          if (v58 + v63 >= v39)
          {
            BOOL v64 = v39 < v63;
LABEL_83:
            if (v64) {
              unint64_t v36 = v48;
            }
            goto LABEL_85;
          }
LABEL_77:
          if (v59) {
            goto LABEL_119;
          }
          uint64_t v67 = &v34[2 * v36];
          uint64_t v69 = *(void *)v67;
          uint64_t v68 = *((void *)v67 + 1);
          BOOL v47 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          if (v47) {
            goto LABEL_121;
          }
          if (v70 < v58) {
            goto LABEL_15;
          }
LABEL_85:
          unint64_t v75 = v36 - 1;
          if (v36 - 1 >= v14)
          {
            __break(1u);
LABEL_110:
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
            goto LABEL_134;
          }
          if (!v12) {
            goto LABEL_136;
          }
          uint64_t v76 = &v34[2 * v75];
          uint64_t v77 = *(void *)v76;
          double v78 = &v34[2 * v36];
          double v79 = v78[1];
          uint64_t result = sub_100071D00((float *)(v12 + 16 * *(void *)v76), (float *)(v12 + 16 * *(void *)v78), v12 + 16 * *(void *)&v79, v96, a2);
          if (v2) {
            goto LABEL_93;
          }
          if (*(uint64_t *)&v79 < v77) {
            goto LABEL_110;
          }
          if (v36 > *((void *)v13 + 2)) {
            goto LABEL_111;
          }
          *(void *)uint64_t v76 = v77;
          v34[2 * v75 + 1] = v79;
          unint64_t v80 = *((void *)v13 + 2);
          if (v36 >= v80) {
            goto LABEL_112;
          }
          unint64_t v14 = v80 - 1;
          uint64_t result = (uint64_t)memmove(&v34[2 * v36], v78 + 2, 16 * (v80 - 1 - v36));
          *((void *)v13 + sub_10004ACAC(3, 1, 2) = v80 - 1;
          uint64_t v12 = v95;
          if (v80 <= 2) {
            goto LABEL_15;
          }
        }
      }
      unint64_t v14 = 1;
LABEL_15:
      uint64_t v8 = v93;
      Swift::Int v5 = v94;
      if (v11 >= v94)
      {
        uint64_t v10 = v92;
        goto LABEL_96;
      }
    }
  }
  uint64_t v10 = _swiftEmptyArrayStorage;
  long long v96 = (float *)&_swiftEmptyArrayStorage[4];
  if (v5 == 1)
  {
    uint64_t v92 = _swiftEmptyArrayStorage;
    goto LABEL_13;
  }
  unint64_t v14 = *(void *)&_swiftEmptyArrayStorage[2];
  Swift::Int v13 = _swiftEmptyArrayStorage;
LABEL_96:
  uint64_t result = (uint64_t)v13;
  uint64_t v92 = v10;
  if (v14 >= 2)
  {
    uint64_t v81 = *v88;
    do
    {
      unint64_t v82 = v14 - 2;
      if (v14 < 2) {
        goto LABEL_125;
      }
      if (!v81) {
        goto LABEL_138;
      }
      uint64_t v83 = result;
      uint64_t v84 = *(void *)(result + 32 + 16 * v82);
      uint64_t v85 = *(void *)(result + 32 + 16 * (v14 - 1) + 8);
      uint64_t result = sub_100071D00((float *)(v81 + 16 * v84), (float *)(v81 + 16 * *(void *)(result + 32 + 16 * (v14 - 1))), v81 + 16 * v85, v96, a2);
      if (v2) {
        break;
      }
      if (v85 < v84) {
        goto LABEL_126;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1000BE1E0(v83);
        uint64_t v83 = result;
      }
      if (v82 >= *(void *)(v83 + 16)) {
        goto LABEL_127;
      }
      uint64_t v86 = (void *)(v83 + 32 + 16 * v82);
      *uint64_t v86 = v84;
      v86[1] = v85;
      unint64_t v87 = *(void *)(v83 + 16);
      if (v14 > v87) {
        goto LABEL_128;
      }
      memmove((void *)(v83 + 32 + 16 * (v14 - 1)), (const void *)(v83 + 32 + 16 * v14), 16 * (v87 - v14));
      uint64_t result = v83;
      *(void *)(v83 + 16) = v87 - 1;
      unint64_t v14 = v87 - 1;
    }
    while (v87 > 2);
  }
LABEL_93:
  swift_bridgeObjectRelease();
  v92[2] = 0.0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100070C40(void *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        float v81 = *(float *)(v79 + 4 * i);
        uint64_t v82 = v78;
        do
        {
          uint64_t v83 = v79 + 4 * v82;
          if (*(float *)v83 >= v81) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(_DWORD *)(v83 + 4) = *(_DWORD *)v83;
          *(float *)(v79 + 4 * v82--) = v81;
        }
        while (v82 != -1);
        ++v78;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_136;
    }
    uint64_t v95 = result;
    Swift::Int v96 = v3;
    if (v3 > 1)
    {
      uint64_t v6 = v5 >> 1;
      uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
      *(void *)(result + 16) = v6;
      Swift::Int v3 = v96;
      Swift::Int v94 = (double *)result;
      uint64_t v98 = (float *)(result + 32);
LABEL_13:
      Swift::Int v8 = 0;
      uint64_t v9 = *v2;
      uint64_t v92 = v2;
      uint64_t v93 = *v2 - 4;
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v97 = *v2;
      while (1)
      {
        Swift::Int v12 = v8++;
        if (v8 < v3)
        {
          float v13 = *(float *)(v9 + 4 * v8);
          float v14 = *(float *)(v9 + 4 * v12);
          Swift::Int v8 = v12 + 2;
          if (v12 + 2 < v3)
          {
            float v15 = v13;
            while (1)
            {
              float v16 = v15;
              float v15 = *(float *)(v9 + 4 * v8);
              if (v14 < v13 == v16 >= v15) {
                break;
              }
              if (v3 == ++v8)
              {
                Swift::Int v8 = v3;
                break;
              }
            }
          }
          if (v14 < v13)
          {
            if (v8 < v12) {
              goto LABEL_138;
            }
            if (v12 < v8)
            {
              float v17 = (int *)(v93 + 4 * v8);
              Swift::Int v18 = v8;
              Swift::Int v19 = v12;
              float v20 = (int *)(v9 + 4 * v12);
              do
              {
                if (v19 != --v18)
                {
                  if (!v9) {
                    goto LABEL_144;
                  }
                  int v21 = *v20;
                  *float v20 = *v17;
                  *float v17 = v21;
                }
                ++v19;
                --v17;
                ++v20;
              }
              while (v19 < v18);
            }
          }
        }
        if (v8 < v3)
        {
          if (__OFSUB__(v8, v12)) {
            goto LABEL_135;
          }
          if (v8 - v12 < v95)
          {
            Swift::Int v22 = v12 + v95;
            if (__OFADD__(v12, v95)) {
              goto LABEL_139;
            }
            if (v22 >= v3) {
              Swift::Int v22 = v3;
            }
            if (v22 < v12)
            {
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
              return result;
            }
            if (v8 != v22)
            {
              Swift::Int v23 = (float *)(v93 + 4 * v8);
              do
              {
                float v24 = *(float *)(v9 + 4 * v8);
                Swift::Int v25 = v12;
                Swift::Int v26 = v23;
                do
                {
                  float v27 = *v26;
                  if (*v26 >= v24) {
                    break;
                  }
                  if (!v9) {
                    goto LABEL_142;
                  }
                  float *v26 = v24;
                  v26[1] = v27;
                  --v26;
                  ++v25;
                }
                while (v8 != v25);
                ++v8;
                ++v23;
              }
              while (v8 != v22);
              Swift::Int v8 = v22;
            }
          }
        }
        if (v8 < v12) {
          goto LABEL_130;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1000BE0E4(0, *((void *)v10 + 2) + 1, 1, (char *)v10);
          uint64_t v10 = (double *)result;
        }
        unint64_t v29 = *((void *)v10 + 2);
        unint64_t v28 = *((void *)v10 + 3);
        unint64_t v11 = v29 + 1;
        uint64_t v9 = v97;
        if (v29 >= v28 >> 1)
        {
          uint64_t result = (uint64_t)sub_1000BE0E4((char *)(v28 > 1), v29 + 1, 1, (char *)v10);
          uint64_t v9 = v97;
          uint64_t v10 = (double *)result;
        }
        *((void *)v10 + sub_10004ACAC(3, 1, 2) = v11;
        Swift::Int v30 = v10 + 4;
        uint64_t v31 = &v10[2 * v29 + 4];
        *(void *)uint64_t v31 = v12;
        *((void *)v31 + sub_10004ACAC(2, 1, 1) = v8;
        if (v29)
        {
          while (1)
          {
            unint64_t v32 = v11 - 1;
            if (v11 >= 4)
            {
              uint64_t v37 = &v30[2 * v11];
              uint64_t v38 = *((void *)v37 - 8);
              uint64_t v39 = *((void *)v37 - 7);
              BOOL v43 = __OFSUB__(v39, v38);
              uint64_t v40 = v39 - v38;
              if (v43) {
                goto LABEL_119;
              }
              uint64_t v42 = *((void *)v37 - 6);
              uint64_t v41 = *((void *)v37 - 5);
              BOOL v43 = __OFSUB__(v41, v42);
              uint64_t v35 = v41 - v42;
              char v36 = v43;
              if (v43) {
                goto LABEL_120;
              }
              unint64_t v44 = v11 - 2;
              uint64_t v45 = &v30[2 * v11 - 4];
              uint64_t v47 = *(void *)v45;
              uint64_t v46 = *((void *)v45 + 1);
              BOOL v43 = __OFSUB__(v46, v47);
              uint64_t v48 = v46 - v47;
              if (v43) {
                goto LABEL_121;
              }
              BOOL v43 = __OFADD__(v35, v48);
              uint64_t v49 = v35 + v48;
              if (v43) {
                goto LABEL_123;
              }
              if (v49 >= v40)
              {
                uint64_t v67 = &v30[2 * v32];
                uint64_t v69 = *(void *)v67;
                uint64_t v68 = *((void *)v67 + 1);
                BOOL v43 = __OFSUB__(v68, v69);
                uint64_t v70 = v68 - v69;
                if (v43) {
                  goto LABEL_129;
                }
                BOOL v60 = v35 < v70;
                goto LABEL_83;
              }
            }
            else
            {
              if (v11 != 3)
              {
                uint64_t v61 = *((void *)v10 + 4);
                uint64_t v62 = *((void *)v10 + 5);
                BOOL v43 = __OFSUB__(v62, v61);
                uint64_t v54 = v62 - v61;
                char v55 = v43;
                goto LABEL_77;
              }
              uint64_t v34 = *((void *)v10 + 4);
              uint64_t v33 = *((void *)v10 + 5);
              BOOL v43 = __OFSUB__(v33, v34);
              uint64_t v35 = v33 - v34;
              char v36 = v43;
            }
            if (v36) {
              goto LABEL_122;
            }
            unint64_t v44 = v11 - 2;
            uint64_t v50 = &v30[2 * v11 - 4];
            uint64_t v52 = *(void *)v50;
            uint64_t v51 = *((void *)v50 + 1);
            BOOL v53 = __OFSUB__(v51, v52);
            uint64_t v54 = v51 - v52;
            char v55 = v53;
            if (v53) {
              goto LABEL_124;
            }
            uint64_t v56 = &v30[2 * v32];
            uint64_t v58 = *(void *)v56;
            uint64_t v57 = *((void *)v56 + 1);
            BOOL v43 = __OFSUB__(v57, v58);
            uint64_t v59 = v57 - v58;
            if (v43) {
              goto LABEL_126;
            }
            if (__OFADD__(v54, v59)) {
              goto LABEL_128;
            }
            if (v54 + v59 >= v35)
            {
              BOOL v60 = v35 < v59;
LABEL_83:
              if (v60) {
                unint64_t v32 = v44;
              }
              goto LABEL_85;
            }
LABEL_77:
            if (v55) {
              goto LABEL_125;
            }
            uint64_t v63 = &v30[2 * v32];
            uint64_t v65 = *(void *)v63;
            uint64_t v64 = *((void *)v63 + 1);
            BOOL v43 = __OFSUB__(v64, v65);
            uint64_t v66 = v64 - v65;
            if (v43) {
              goto LABEL_127;
            }
            if (v66 < v54) {
              goto LABEL_15;
            }
LABEL_85:
            unint64_t v71 = v32 - 1;
            if (v32 - 1 >= v11)
            {
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
              goto LABEL_140;
            }
            if (!v9) {
              goto LABEL_143;
            }
            uint64_t v72 = &v30[2 * v71];
            uint64_t v73 = *(void *)v72;
            uint64_t v74 = v30;
            unint64_t v75 = &v30[2 * v32];
            double v76 = v75[1];
            uint64_t result = sub_100071F44((float *)(v9 + 4 * *(void *)v72), (float *)(v9 + 4 * *(void *)v75), v9 + 4 * *(void *)&v76, v98);
            if (v1) {
              goto LABEL_113;
            }
            if (*(uint64_t *)&v76 < v73) {
              goto LABEL_116;
            }
            if (v32 > *((void *)v10 + 2)) {
              goto LABEL_117;
            }
            *(void *)uint64_t v72 = v73;
            v74[2 * v71 + 1] = v76;
            unint64_t v77 = *((void *)v10 + 2);
            if (v32 >= v77) {
              goto LABEL_118;
            }
            unint64_t v11 = v77 - 1;
            uint64_t result = (uint64_t)memmove(v75, v75 + 2, 16 * (v77 - 1 - v32));
            Swift::Int v30 = v74;
            *((void *)v10 + sub_10004ACAC(3, 1, 2) = v77 - 1;
            uint64_t v9 = v97;
            if (v77 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v11 = 1;
LABEL_15:
        Swift::Int v3 = v96;
        if (v8 >= v96)
        {
          uint64_t v7 = v94;
          uint64_t v2 = v92;
          goto LABEL_102;
        }
      }
    }
    uint64_t v7 = _swiftEmptyArrayStorage;
    uint64_t v98 = (float *)&_swiftEmptyArrayStorage[4];
    if (v3 == 1)
    {
      Swift::Int v94 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    unint64_t v11 = *(void *)&_swiftEmptyArrayStorage[2];
    uint64_t v10 = _swiftEmptyArrayStorage;
LABEL_102:
    Swift::Int v94 = v7;
    if (v11 >= 2)
    {
      uint64_t v84 = *v2;
      do
      {
        unint64_t v85 = v11 - 2;
        if (v11 < 2) {
          goto LABEL_131;
        }
        if (!v84) {
          goto LABEL_145;
        }
        uint64_t v86 = (uint64_t)v10;
        unint64_t v87 = v10 + 4;
        double v88 = v10[2 * v85 + 4];
        double v89 = v10[2 * v11 + 3];
        uint64_t result = sub_100071F44((float *)(v84 + 4 * *(void *)&v88), (float *)(v84 + 4 * *(void *)&v87[2 * v11 - 2]), v84 + 4 * *(void *)&v89, v98);
        if (v1) {
          break;
        }
        if (*(uint64_t *)&v89 < *(uint64_t *)&v88) {
          goto LABEL_132;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1000BE1E0(v86);
          uint64_t v86 = result;
        }
        if (v85 >= *(void *)(v86 + 16)) {
          goto LABEL_133;
        }
        uint64_t v90 = (double *)(v86 + 32 + 16 * v85);
        *uint64_t v90 = v88;
        v90[1] = v89;
        unint64_t v91 = *(void *)(v86 + 16);
        if (v11 > v91) {
          goto LABEL_134;
        }
        uint64_t result = (uint64_t)memmove((void *)(v86 + 32 + 16 * (v11 - 1)), (const void *)(v86 + 32 + 16 * v11), 16 * (v91 - v11));
        uint64_t v10 = (double *)v86;
        *(void *)(v86 + 16) = v91 - 1;
        unint64_t v11 = v91 - 1;
      }
      while (v91 > 2);
    }
LABEL_113:
    swift_bridgeObjectRelease();
    v94[2] = 0.0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100071290(void *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_140;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v90 = *v2;
      uint64_t v91 = -1;
      uint64_t v92 = 1;
      uint64_t v93 = *v2;
      do
      {
        uint64_t v94 = v91;
        uint64_t v95 = v93;
        do
        {
          float v96 = *(float *)(v95 + 208);
          if (v96 >= *(float *)(v95 + 96)) {
            break;
          }
          if (!v90) {
            goto LABEL_144;
          }
          uint64_t v97 = v95 + 112;
          uint64_t v98 = *(void *)(v95 + 112);
          long long v99 = *(_OWORD *)(v95 + 192);
          char v100 = *(unsigned char *)(v95 + 212);
          long long v101 = *(_OWORD *)(v95 + 120);
          long long v102 = *(_OWORD *)(v95 + 136);
          long long v103 = *(_OWORD *)(v95 + 152);
          long long v104 = *(_OWORD *)(v95 + 168);
          long long v105 = *(_OWORD *)(v95 + 80);
          *(_OWORD *)(v95 + 176) = *(_OWORD *)(v95 + 64);
          *(_OWORD *)(v95 + 19sub_10004ACAC(3, 1, 2) = v105;
          *(_OWORD *)(v95 + 208) = *(_OWORD *)(v95 + 96);
          long long v106 = *(_OWORD *)(v95 + 16);
          *(_OWORD *)(v95 + 11sub_10004ACAC(3, 1, 2) = *(_OWORD *)v95;
          *(_OWORD *)(v95 + 128) = v106;
          *(_OWORD *)(v95 + 8) = v101;
          long long v108 = *(_OWORD *)(v95 + 32);
          long long v107 = *(_OWORD *)(v95 + 48);
          *(void *)uint64_t v95 = v98;
          *(_OWORD *)(v95 + 24) = v102;
          *(_OWORD *)(v95 + 40) = v103;
          *(_OWORD *)(v95 + 56) = v104;
          *(_OWORD *)(v95 + 80) = v99;
          *(float *)(v95 + 96) = v96;
          *(unsigned char *)(v95 + 100) = v100;
          v95 -= 112;
          *(_OWORD *)(v97 + 3sub_10004ACAC(3, 1, 2) = v108;
          *(_OWORD *)(v97 + 48) = v107;
        }
        while (!__CFADD__(v94++, 1));
        ++v92;
        v93 += 112;
        --v91;
      }
      while (v92 != v3);
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_139;
    }
    uint64_t v121 = result;
    if (v3 > 1)
    {
      uint64_t v6 = v5 >> 1;
      sub_100012894(&qword_1004C6A28);
      uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
      *(void *)(result + 16) = v6;
      id v120 = (double *)result;
      uint64_t v128 = (float *)(result + 32);
LABEL_13:
      Swift::Int v8 = 0;
      id v118 = v2;
      uint64_t v9 = *v2;
      uint64_t v119 = v9 + 96;
      uint64_t v129 = _swiftEmptyArrayStorage;
      Swift::Int v122 = v3;
      while (1)
      {
        Swift::Int v11 = v8++;
        if (v8 < v3)
        {
          float v12 = *(float *)(v119 + 112 * v8);
          float v13 = *(float *)(v119 + 112 * v11);
          Swift::Int v8 = v11 + 2;
          if (v11 + 2 < v3)
          {
            float v14 = (float *)(v9 + 208 + 112 * v11);
            while (v12 < v13 != v14[28] >= *v14)
            {
              ++v8;
              v14 += 28;
              if (v3 == v8)
              {
                Swift::Int v8 = v3;
                break;
              }
            }
          }
          if (v12 < v13)
          {
            if (v8 < v11) {
              goto LABEL_141;
            }
            if (v11 < v8)
            {
              uint64_t v15 = 112 * v8;
              Swift::Int v16 = v8;
              Swift::Int v17 = v11;
              Swift::Int v117 = v11;
              uint64_t v18 = 112 * v11;
              do
              {
                if (v17 != --v16)
                {
                  if (!v9) {
                    goto LABEL_147;
                  }
                  uint64_t v19 = v9 + v15;
                  uint64_t v20 = *(void *)(v9 + v18);
                  int v21 = *(_DWORD *)(v9 + v18 + 96);
                  char v22 = *(unsigned char *)(v9 + v18 + 100);
                  long long v126 = *(_OWORD *)(v9 + v18 + 8);
                  long long v127 = *(_OWORD *)(v9 + v18 + 80);
                  long long v124 = *(_OWORD *)(v9 + v18 + 40);
                  long long v125 = *(_OWORD *)(v9 + v18 + 24);
                  long long v123 = *(_OWORD *)(v9 + v18 + 56);
                  uint64_t result = (uint64_t)memmove((void *)(v9 + v18), (const void *)(v9 + v15 - 112), 0x70uLL);
                  *(void *)(v19 - 11sub_10004ACAC(3, 1, 2) = v20;
                  *(_OWORD *)(v19 - 104) = v126;
                  *(_OWORD *)(v19 - 88) = v125;
                  *(_OWORD *)(v19 - 7sub_10004ACAC(3, 1, 2) = v124;
                  *(_OWORD *)(v19 - 56) = v123;
                  *(_OWORD *)(v19 - 3sub_10004ACAC(3, 1, 2) = v127;
                  *(_DWORD *)(v19 - 16) = v21;
                  *(unsigned char *)(v19 - 1sub_10004ACAC(3, 1, 2) = v22;
                }
                ++v17;
                v15 -= 112;
                v18 += 112;
              }
              while (v17 < v16);
              Swift::Int v3 = v122;
              Swift::Int v11 = v117;
            }
          }
        }
        if (v8 >= v3) {
          goto LABEL_39;
        }
        if (__OFSUB__(v8, v11)) {
          goto LABEL_138;
        }
        if (v8 - v11 >= v121) {
          goto LABEL_39;
        }
        Swift::Int v23 = v11 + v121;
        if (__OFADD__(v11, v121)) {
          goto LABEL_142;
        }
        if (v23 >= v3) {
          Swift::Int v23 = v3;
        }
        if (v23 < v11)
        {
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
          return result;
        }
        if (v8 == v23)
        {
LABEL_39:
          uint64_t v24 = (uint64_t)v129;
          if (v8 < v11) {
            goto LABEL_133;
          }
        }
        else
        {
          uint64_t v74 = v9 - 112 + 112 * v8;
          uint64_t v24 = (uint64_t)v129;
          do
          {
            Swift::Int v75 = v11;
            uint64_t v76 = v74;
            do
            {
              float v77 = *(float *)(v76 + 208);
              if (v77 >= *(float *)(v76 + 96)) {
                break;
              }
              if (!v9) {
                goto LABEL_145;
              }
              uint64_t v78 = v76 + 112;
              uint64_t v79 = *(void *)(v76 + 112);
              long long v80 = *(_OWORD *)(v76 + 192);
              char v81 = *(unsigned char *)(v76 + 212);
              long long v82 = *(_OWORD *)(v76 + 120);
              long long v83 = *(_OWORD *)(v76 + 136);
              long long v84 = *(_OWORD *)(v76 + 152);
              long long v85 = *(_OWORD *)(v76 + 168);
              long long v86 = *(_OWORD *)(v76 + 80);
              *(_OWORD *)(v76 + 176) = *(_OWORD *)(v76 + 64);
              *(_OWORD *)(v76 + 19sub_10004ACAC(3, 1, 2) = v86;
              *(_OWORD *)(v76 + 208) = *(_OWORD *)(v76 + 96);
              long long v87 = *(_OWORD *)(v76 + 16);
              *(_OWORD *)(v76 + 11sub_10004ACAC(3, 1, 2) = *(_OWORD *)v76;
              *(_OWORD *)(v76 + 128) = v87;
              *(_OWORD *)(v76 + 8) = v82;
              long long v89 = *(_OWORD *)(v76 + 32);
              long long v88 = *(_OWORD *)(v76 + 48);
              *(void *)uint64_t v76 = v79;
              *(_OWORD *)(v76 + 24) = v83;
              *(_OWORD *)(v76 + 40) = v84;
              *(_OWORD *)(v76 + 56) = v85;
              *(_OWORD *)(v76 + 80) = v80;
              *(float *)(v76 + 96) = v77;
              *(unsigned char *)(v76 + 100) = v81;
              v76 -= 112;
              ++v75;
              *(_OWORD *)(v78 + 3sub_10004ACAC(3, 1, 2) = v89;
              *(_OWORD *)(v78 + 48) = v88;
            }
            while (v8 != v75);
            ++v8;
            v74 += 112;
          }
          while (v8 != v23);
          Swift::Int v8 = v23;
          if (v23 < v11) {
            goto LABEL_133;
          }
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1000BE0E4(0, *(void *)(v24 + 16) + 1, 1, (char *)v24);
          uint64_t v24 = result;
        }
        unint64_t v26 = *(void *)(v24 + 16);
        unint64_t v25 = *(void *)(v24 + 24);
        unint64_t v10 = v26 + 1;
        if (v26 >= v25 >> 1)
        {
          uint64_t result = (uint64_t)sub_1000BE0E4((char *)(v25 > 1), v26 + 1, 1, (char *)v24);
          uint64_t v24 = result;
        }
        *(void *)(v24 + 16) = v10;
        uint64_t v27 = v24 + 32;
        unint64_t v28 = (Swift::Int *)(v24 + 32 + 16 * v26);
        *unint64_t v28 = v11;
        v28[1] = v8;
        uint64_t v129 = (double *)v24;
        if (v26)
        {
          while (1)
          {
            unint64_t v29 = v10 - 1;
            if (v10 >= 4)
            {
              unint64_t v34 = v27 + 16 * v10;
              uint64_t v35 = *(void *)(v34 - 64);
              uint64_t v36 = *(void *)(v34 - 56);
              BOOL v40 = __OFSUB__(v36, v35);
              uint64_t v37 = v36 - v35;
              if (v40) {
                goto LABEL_122;
              }
              uint64_t v39 = *(void *)(v34 - 48);
              uint64_t v38 = *(void *)(v34 - 40);
              BOOL v40 = __OFSUB__(v38, v39);
              uint64_t v32 = v38 - v39;
              char v33 = v40;
              if (v40) {
                goto LABEL_123;
              }
              unint64_t v41 = v10 - 2;
              uint64_t v42 = (uint64_t *)(v27 + 16 * (v10 - 2));
              uint64_t v44 = *v42;
              uint64_t v43 = v42[1];
              BOOL v40 = __OFSUB__(v43, v44);
              uint64_t v45 = v43 - v44;
              if (v40) {
                goto LABEL_124;
              }
              BOOL v40 = __OFADD__(v32, v45);
              uint64_t v46 = v32 + v45;
              if (v40) {
                goto LABEL_126;
              }
              if (v46 >= v37)
              {
                uint64_t v64 = (uint64_t *)(v27 + 16 * v29);
                uint64_t v66 = *v64;
                uint64_t v65 = v64[1];
                BOOL v40 = __OFSUB__(v65, v66);
                uint64_t v67 = v65 - v66;
                if (v40) {
                  goto LABEL_132;
                }
                BOOL v57 = v32 < v67;
                goto LABEL_76;
              }
            }
            else
            {
              if (v10 != 3)
              {
                uint64_t v58 = *(void *)(v24 + 32);
                uint64_t v59 = *(void *)(v24 + 40);
                BOOL v40 = __OFSUB__(v59, v58);
                uint64_t v51 = v59 - v58;
                char v52 = v40;
                goto LABEL_70;
              }
              uint64_t v31 = *(void *)(v24 + 32);
              uint64_t v30 = *(void *)(v24 + 40);
              BOOL v40 = __OFSUB__(v30, v31);
              uint64_t v32 = v30 - v31;
              char v33 = v40;
            }
            if (v33) {
              goto LABEL_125;
            }
            unint64_t v41 = v10 - 2;
            uint64_t v47 = (uint64_t *)(v27 + 16 * (v10 - 2));
            uint64_t v49 = *v47;
            uint64_t v48 = v47[1];
            BOOL v50 = __OFSUB__(v48, v49);
            uint64_t v51 = v48 - v49;
            char v52 = v50;
            if (v50) {
              goto LABEL_127;
            }
            BOOL v53 = (uint64_t *)(v27 + 16 * v29);
            uint64_t v55 = *v53;
            uint64_t v54 = v53[1];
            BOOL v40 = __OFSUB__(v54, v55);
            uint64_t v56 = v54 - v55;
            if (v40) {
              goto LABEL_129;
            }
            if (__OFADD__(v51, v56)) {
              goto LABEL_131;
            }
            if (v51 + v56 >= v32)
            {
              BOOL v57 = v32 < v56;
LABEL_76:
              if (v57) {
                unint64_t v29 = v41;
              }
              goto LABEL_78;
            }
LABEL_70:
            if (v52) {
              goto LABEL_128;
            }
            BOOL v60 = (uint64_t *)(v27 + 16 * v29);
            uint64_t v62 = *v60;
            uint64_t v61 = v60[1];
            BOOL v40 = __OFSUB__(v61, v62);
            uint64_t v63 = v61 - v62;
            if (v40) {
              goto LABEL_130;
            }
            if (v63 < v51) {
              goto LABEL_15;
            }
LABEL_78:
            unint64_t v68 = v29 - 1;
            if (v29 - 1 >= v10)
            {
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
              goto LABEL_143;
            }
            if (!v9) {
              goto LABEL_146;
            }
            uint64_t v69 = (uint64_t *)(v27 + 16 * v68);
            uint64_t v70 = *v69;
            unint64_t v71 = (void *)(v27 + 16 * v29);
            uint64_t v72 = v71[1];
            uint64_t result = sub_100072148((float *)(v9 + 112 * *v69), (float *)(v9 + 112 * *v71), v9 + 112 * v72, v128);
            if (v1) {
              goto LABEL_95;
            }
            if (v72 < v70) {
              goto LABEL_119;
            }
            if (v29 > *((void *)v129 + 2)) {
              goto LABEL_120;
            }
            uint64_t *v69 = v70;
            *(void *)(v27 + 16 * v68 + 8) = v72;
            unint64_t v73 = *((void *)v129 + 2);
            if (v29 >= v73) {
              goto LABEL_121;
            }
            uint64_t v24 = (uint64_t)v129;
            unint64_t v10 = v73 - 1;
            uint64_t result = (uint64_t)memmove((void *)(v27 + 16 * v29), v71 + 2, 16 * (v73 - 1 - v29));
            *((void *)v129 + sub_10004ACAC(3, 1, 2) = v73 - 1;
            if (v73 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v10 = 1;
LABEL_15:
        Swift::Int v3 = v122;
        if (v8 >= v122)
        {
          uint64_t v7 = v120;
          uint64_t result = (uint64_t)v129;
          uint64_t v2 = v118;
          goto LABEL_105;
        }
      }
    }
    uint64_t v7 = _swiftEmptyArrayStorage;
    uint64_t v128 = (float *)&_swiftEmptyArrayStorage[4];
    if (v3 == 1)
    {
      id v120 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    unint64_t v10 = *(void *)&_swiftEmptyArrayStorage[2];
    uint64_t result = (uint64_t)_swiftEmptyArrayStorage;
LABEL_105:
    id v120 = v7;
    if (v10 >= 2)
    {
      uint64_t v110 = *v2;
      do
      {
        unint64_t v111 = v10 - 2;
        if (v10 < 2) {
          goto LABEL_134;
        }
        if (!v110) {
          goto LABEL_148;
        }
        uint64_t v112 = result;
        uint64_t v113 = *(void *)(result + 32 + 16 * v111);
        uint64_t v114 = *(void *)(result + 32 + 16 * (v10 - 1) + 8);
        uint64_t result = sub_100072148((float *)(v110 + 112 * v113), (float *)(v110 + 112 * *(void *)(result + 32 + 16 * (v10 - 1))), v110 + 112 * v114, v128);
        if (v1) {
          break;
        }
        if (v114 < v113) {
          goto LABEL_135;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1000BE1E0(v112);
          uint64_t v112 = result;
        }
        if (v111 >= *(void *)(v112 + 16)) {
          goto LABEL_136;
        }
        unint64_t v115 = (void *)(v112 + 32 + 16 * v111);
        *unint64_t v115 = v113;
        v115[1] = v114;
        unint64_t v116 = *(void *)(v112 + 16);
        if (v10 > v116) {
          goto LABEL_137;
        }
        memmove((void *)(v112 + 32 + 16 * (v10 - 1)), (const void *)(v112 + 32 + 16 * v10), 16 * (v116 - v10));
        uint64_t result = v112;
        *(void *)(v112 + 16) = v116 - 1;
        unint64_t v10 = v116 - 1;
      }
      while (v116 > 2);
    }
LABEL_95:
    swift_bridgeObjectRelease();
    v120[2] = 0.0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100071A60(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, float a5)
{
  if (a3 != a2)
  {
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 16 * a3 - 16;
LABEL_5:
    long long v7 = *(_OWORD *)(v5 + 16 * a3);
    float v8 = vabds_f32(COERCE_FLOAT(HIDWORD(*(void *)(v5 + 16 * a3))), a5);
    uint64_t v9 = result;
    uint64_t v10 = v6;
    while (1)
    {
      if (v8 >= vabds_f32(*(float *)(v10 + 4), a5))
      {
LABEL_4:
        ++a3;
        v6 += 16;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v5) {
        break;
      }
      *(_OWORD *)(v10 + 16) = *(_OWORD *)v10;
      *(_OWORD *)uint64_t v10 = v7;
      v10 -= 16;
      if (a3 == ++v9) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100071AD8(float *__dst, float *__src, unint64_t a3, float *a4)
{
  unsigned int v4 = a4;
  uint64_t v6 = __src;
  long long v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = (char *)__src - (char *)__dst + 15;
  if ((char *)__src - (char *)__dst >= 0) {
    int64_t v9 = (char *)__src - (char *)__dst;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 15;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 4;
  if (v10 >= v12 >> 4)
  {
    if (a4 != __src || &__src[4 * v13] <= a4) {
      memmove(a4, __src, 16 * v13);
    }
    float v14 = &v4[4 * v13];
    if (v7 >= v6 || v11 < 16) {
      goto LABEL_43;
    }
    uint64_t v18 = (float *)(a3 - 16);
    while (1)
    {
      uint64_t v19 = v18 + 4;
      if (*(v14 - 3) >= *(v6 - 3))
      {
        uint64_t v20 = v14 - 4;
        if (v19 != v14)
        {
          v14 -= 4;
          goto LABEL_40;
        }
        BOOL v21 = v18 >= v14;
        v14 -= 4;
        if (v21) {
          goto LABEL_40;
        }
      }
      else
      {
        uint64_t v20 = v6 - 4;
        if (v19 != v6)
        {
          v6 -= 4;
LABEL_40:
          *(_OWORD *)uint64_t v18 = *(_OWORD *)v20;
          goto LABEL_41;
        }
        BOOL v21 = v18 >= v6;
        v6 -= 4;
        if (v21) {
          goto LABEL_40;
        }
      }
LABEL_41:
      if (v6 > v7)
      {
        v18 -= 4;
        if (v14 > v4) {
          continue;
        }
      }
      goto LABEL_43;
    }
  }
  if (a4 != __dst || &__dst[4 * v10] <= a4) {
    memmove(a4, __dst, 16 * v10);
  }
  float v14 = &v4[4 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      if (v6[1] >= v4[1])
      {
        Swift::Int v17 = v4 + 4;
        Swift::Int v16 = v4;
        uint64_t v15 = v6;
        if (v7 == v4)
        {
          v4 += 4;
          if (v7 < v17) {
            goto LABEL_20;
          }
        }
        else
        {
          v4 += 4;
        }
      }
      else
      {
        uint64_t v15 = v6 + 4;
        Swift::Int v16 = v6;
        if (v7 == v6 && v7 < v15) {
          goto LABEL_20;
        }
      }
      *(_OWORD *)long long v7 = *(_OWORD *)v16;
LABEL_20:
      v7 += 4;
      if (v4 < v14)
      {
        uint64_t v6 = v15;
        if ((unint64_t)v15 < a3) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v6 = v7;
LABEL_43:
  int64_t v22 = (char *)v14 - (char *)v4 + ((char *)v14 - (char *)v4 < 0 ? 0xFuLL : 0);
  if (v6 != v4 || v6 >= (float *)((char *)v4 + (v22 & 0xFFFFFFFFFFFFFFF0))) {
    memmove(v6, v4, 16 * (v22 >> 4));
  }
  return 1;
}

uint64_t sub_100071D00(float *__dst, float *__src, unint64_t a3, float *a4, float a5)
{
  uint64_t v5 = a4;
  int64_t v8 = __src;
  int64_t v9 = __dst;
  int64_t v10 = (char *)__src - (char *)__dst;
  int64_t v11 = (char *)__src - (char *)__dst + 15;
  if ((char *)__src - (char *)__dst >= 0) {
    int64_t v11 = (char *)__src - (char *)__dst;
  }
  uint64_t v12 = v11 >> 4;
  uint64_t v13 = a3 - (void)__src;
  uint64_t v14 = a3 - (void)__src + 15;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v14 = a3 - (void)__src;
  }
  uint64_t v15 = v14 >> 4;
  if (v12 >= v14 >> 4)
  {
    if (a4 != __src || &__src[4 * v15] <= a4) {
      memmove(a4, __src, 16 * v15);
    }
    Swift::Int v16 = &v5[4 * v15];
    if (v9 >= v8 || v13 < 16) {
      goto LABEL_43;
    }
    uint64_t v20 = (float *)(a3 - 16);
    while (1)
    {
      BOOL v21 = v20 + 4;
      if (vabds_f32(*(v16 - 3), a5) >= vabds_f32(*(v8 - 3), a5))
      {
        int64_t v22 = v16 - 4;
        if (v21 != v16)
        {
          v16 -= 4;
          goto LABEL_40;
        }
        BOOL v23 = v20 >= v16;
        v16 -= 4;
        if (v23) {
          goto LABEL_40;
        }
      }
      else
      {
        int64_t v22 = v8 - 4;
        if (v21 != v8)
        {
          v8 -= 4;
LABEL_40:
          *(_OWORD *)uint64_t v20 = *(_OWORD *)v22;
          goto LABEL_41;
        }
        BOOL v23 = v20 >= v8;
        v8 -= 4;
        if (v23) {
          goto LABEL_40;
        }
      }
LABEL_41:
      if (v8 > v9)
      {
        v20 -= 4;
        if (v16 > v5) {
          continue;
        }
      }
      goto LABEL_43;
    }
  }
  if (a4 != __dst || &__dst[4 * v12] <= a4) {
    memmove(a4, __dst, 16 * v12);
  }
  Swift::Int v16 = &v5[4 * v12];
  if ((unint64_t)v8 < a3 && v10 >= 16)
  {
    while (1)
    {
      if (vabds_f32(v8[1], a5) >= vabds_f32(v5[1], a5))
      {
        uint64_t v19 = v5 + 4;
        uint64_t v18 = v5;
        Swift::Int v17 = v8;
        if (v9 == v5)
        {
          v5 += 4;
          if (v9 < v19) {
            goto LABEL_20;
          }
        }
        else
        {
          v5 += 4;
        }
      }
      else
      {
        Swift::Int v17 = v8 + 4;
        uint64_t v18 = v8;
        if (v9 == v8 && v9 < v17) {
          goto LABEL_20;
        }
      }
      *(_OWORD *)int64_t v9 = *(_OWORD *)v18;
LABEL_20:
      v9 += 4;
      if (v5 < v16)
      {
        int64_t v8 = v17;
        if ((unint64_t)v17 < a3) {
          continue;
        }
      }
      break;
    }
  }
  int64_t v8 = v9;
LABEL_43:
  int64_t v24 = (char *)v16 - (char *)v5 + ((char *)v16 - (char *)v5 < 0 ? 0xFuLL : 0);
  if (v8 != v5 || v8 >= (float *)((char *)v5 + (v24 & 0xFFFFFFFFFFFFFFF0))) {
    memmove(v8, v5, 16 * (v24 >> 4));
  }
  return 1;
}

uint64_t sub_100071F44(float *__dst, float *__src, unint64_t a3, float *a4)
{
  unsigned int v4 = a4;
  uint64_t v6 = __src;
  long long v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = (char *)__src - (char *)__dst + 3;
  if ((char *)__src - (char *)__dst >= 0) {
    int64_t v9 = (char *)__src - (char *)__dst;
  }
  uint64_t v10 = v9 >> 2;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 3;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 2;
  if (v10 >= v12 >> 2)
  {
    if (a4 != __src || &__src[v13] <= a4) {
      memmove(a4, __src, 4 * v13);
    }
    uint64_t v14 = &v4[v13];
    if (v7 >= v6 || v11 < 4) {
      goto LABEL_39;
    }
    Swift::Int v17 = (float *)(a3 - 4);
    uint64_t v18 = v6;
    while (1)
    {
      uint64_t v19 = v17 + 1;
      float v20 = *--v18;
      float v21 = v20;
      if (v20 < *(v14 - 1)) {
        break;
      }
      float v21 = *(v14 - 1);
      uint64_t v18 = v6;
      if (v19 != v14)
      {
        --v14;
LABEL_35:
        *Swift::Int v17 = v21;
        goto LABEL_36;
      }
      if (v17 >= v14--) {
        goto LABEL_35;
      }
LABEL_36:
      if (v18 > v7)
      {
        --v17;
        uint64_t v6 = v18;
        if (v14 > v4) {
          continue;
        }
      }
      uint64_t v6 = v18;
      goto LABEL_39;
    }
    if (v19 == v6 && v17 < v6) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (a4 != __dst || &__dst[v10] <= a4) {
    memmove(a4, __dst, 4 * v10);
  }
  uint64_t v14 = &v4[v10];
  if ((unint64_t)v6 < a3 && v8 >= 4)
  {
    while (1)
    {
      float v15 = *v6;
      if (*v4 >= *v6) {
        break;
      }
      BOOL v16 = v7 == v6++;
      if (!v16) {
        goto LABEL_16;
      }
LABEL_17:
      ++v7;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_19;
      }
    }
    float v15 = *v4;
    BOOL v16 = v7 == v4++;
    if (v16) {
      goto LABEL_17;
    }
LABEL_16:
    float *v7 = v15;
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v6 = v7;
LABEL_39:
  int64_t v23 = (char *)v14 - (char *)v4 + ((char *)v14 - (char *)v4 < 0 ? 3uLL : 0);
  if (v6 != v4 || v6 >= (float *)((char *)v4 + (v23 & 0xFFFFFFFFFFFFFFFCLL))) {
    memmove(v6, v4, 4 * (v23 >> 2));
  }
  return 1;
}

uint64_t sub_100072148(float *__dst, float *__src, unint64_t a3, float *a4)
{
  unsigned int v4 = a4;
  uint64_t v6 = __src;
  long long v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = ((char *)__src - (char *)__dst) / 112;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 112;
  if (v9 >= v11)
  {
    uint64_t v17 = 28 * v11;
    if (a4 != __src || &__src[v17] <= a4) {
      memmove(a4, __src, 112 * v11);
    }
    uint64_t v13 = &v4[v17];
    if (v7 >= v6 || v10 < 112) {
      goto LABEL_39;
    }
    uint64_t v18 = (float *)(a3 - 112);
    while (1)
    {
      uint64_t v19 = v18 + 28;
      if (*(v13 - 4) >= *(v6 - 4))
      {
        float v20 = v13 - 28;
        if (v19 != v13)
        {
          v13 -= 28;
          goto LABEL_36;
        }
        BOOL v21 = v18 >= v13;
        v13 -= 28;
        if (v21) {
          goto LABEL_36;
        }
      }
      else
      {
        float v20 = v6 - 28;
        if (v19 != v6)
        {
          v6 -= 28;
LABEL_36:
          memmove(v18, v20, 0x70uLL);
          goto LABEL_37;
        }
        BOOL v21 = v18 >= v6;
        v6 -= 28;
        if (v21) {
          goto LABEL_36;
        }
      }
LABEL_37:
      if (v6 > v7)
      {
        v18 -= 28;
        if (v13 > v4) {
          continue;
        }
      }
      goto LABEL_39;
    }
  }
  size_t v12 = 28 * v9;
  if (a4 != __dst || &__dst[v12] <= a4) {
    memmove(a4, __dst, v12 * 4);
  }
  uint64_t v13 = &v4[v12];
  if ((unint64_t)v6 < a3 && v8 >= 112)
  {
    while (1)
    {
      if (v6[24] >= v4[24])
      {
        BOOL v16 = v4 + 28;
        float v15 = v4;
        uint64_t v14 = v6;
        if (v7 == v4)
        {
          v4 += 28;
          if (v7 < v16) {
            goto LABEL_16;
          }
        }
        else
        {
          v4 += 28;
        }
      }
      else
      {
        uint64_t v14 = v6 + 28;
        float v15 = v6;
        if (v7 == v6 && v7 < v14) {
          goto LABEL_16;
        }
      }
      memmove(v7, v15, 0x70uLL);
LABEL_16:
      v7 += 28;
      if (v4 < v13)
      {
        uint64_t v6 = v14;
        if ((unint64_t)v14 < a3) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v6 = v7;
LABEL_39:
  size_t v22 = 28 * (((char *)v13 - (char *)v4) / 112);
  if (v6 != v4 || v6 >= &v4[v22]) {
    memmove(v6, v4, v22 * 4);
  }
  return 1;
}

uint64_t sub_100072394(float32_t a1, int32x4_t a2, float32x4_t a3, float32_t a4, int32x4_t a5, float32x4_t a6)
{
  float32x4_t v6 = (float32x4_t)vzip1q_s32(a2, vzip2q_s32(a2, a2));
  v6.f32[1] = a1;
  float32x4_t v7 = (float32x4_t)vzip1q_s32(a5, vzip2q_s32(a5, a5));
  v7.f32[1] = a4;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(v6, v7)), 0xFuLL))) & 1) == 0) {
    return 0;
  }
  int16x4_t v9 = vmovn_s32(vceqq_f32(a3, a6));
  return (unsigned __int16)(v9.i16[0] & v9.i16[1]) & v9.i16[2] & 1;
}

double *sub_1000723F4(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_45;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v5 = 0;
      unint64_t v6 = v3 & 0xC000000000000001;
      uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8;
      v3 += 32;
      uint64_t v30 = a2 & 0xFFFFFFFFFFFFFF8;
      unint64_t v28 = v6;
      unint64_t v29 = a2 & 0xC000000000000001;
      int64_t v8 = &selRef_replaySensorDidFinishReplayingData;
      unint64_t v31 = a2 >> 62;
      unint64_t v32 = a2;
      uint64_t v25 = v4;
      uint64_t v26 = v3;
      uint64_t v27 = v7;
      while (1)
      {
        if (v6)
        {
          id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16))
          {
            __break(1u);
LABEL_42:
            __break(1u);
LABEL_43:
            __break(1u);
            goto LABEL_44;
          }
          id v9 = *(id *)(v3 + 8 * v5);
        }
        uint64_t v10 = v9;
        if (__OFADD__(v5++, 1)) {
          goto LABEL_42;
        }
        id v12 = [v9 v8[326]];
        if (v12) {
          break;
        }

LABEL_5:
        if (v5 == v4) {
          return _swiftEmptyArrayStorage;
        }
      }
      uint64_t v13 = v12;
      self;
      if (!swift_dynamicCastObjCClass()) {
        break;
      }
      if (!v31)
      {
        uint64_t v14 = *(void *)(v30 + 16);
        swift_bridgeObjectRetain();
        if (v14) {
          goto LABEL_14;
        }
        goto LABEL_38;
      }
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      if (!v14)
      {
LABEL_38:

        swift_bridgeObjectRelease();
        int64_t v8 = &selRef_replaySensorDidFinishReplayingData;
        goto LABEL_5;
      }
LABEL_14:
      if (v29) {
        id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v15 = *(id *)(a2 + 32);
      }
      BOOL v16 = v15;
      uint64_t v3 = sub_10001C99C(0, (unint64_t *)&unk_1004C6A40);
      char v17 = static NSObject.== infix(_:_:)();

      if (v17)
      {

        swift_bridgeObjectRelease();
LABEL_35:
        int64_t v8 = &selRef_replaySensorDidFinishReplayingData;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        uint64_t v7 = v27;
        unint64_t v6 = v28;
        uint64_t v3 = v26;
        goto LABEL_5;
      }
      if (v14 == 1)
      {

        swift_bridgeObjectRelease();
LABEL_33:
        uint64_t v7 = v27;
        unint64_t v6 = v28;
        uint64_t v3 = v26;
        int64_t v8 = &selRef_replaySensorDidFinishReplayingData;
        goto LABEL_5;
      }
      if (v29)
      {
        uint64_t v18 = 1;
        while (1)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v19 = v18 + 1;
          if (__OFADD__(v18, 1)) {
            goto LABEL_43;
          }
          char v20 = static NSObject.== infix(_:_:)();
          swift_unknownObjectRelease();
          if (v20) {
            goto LABEL_34;
          }
          ++v18;
          a2 = v32;
          if (v19 == v14)
          {

            goto LABEL_32;
          }
        }
      }
      a2 = 5;
      while (1)
      {
        unint64_t v21 = a2 - 3;
        if (__OFADD__(a2 - 4, 1)) {
          break;
        }
        id v22 = *(id *)(v32 + 8 * a2);
        char v23 = static NSObject.== infix(_:_:)();

        if (v23)
        {
LABEL_34:

          a2 = v32;
          swift_bridgeObjectRelease();
          uint64_t v4 = v25;
          goto LABEL_35;
        }
        ++a2;
        if (v21 == v14)
        {

          a2 = v32;
LABEL_32:
          swift_bridgeObjectRelease();
          uint64_t v4 = v25;
          goto LABEL_33;
        }
      }
LABEL_44:
      __break(1u);
LABEL_45:
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      if (!v4) {
        return _swiftEmptyArrayStorage;
      }
    }

    goto LABEL_5;
  }
  return _swiftEmptyArrayStorage;
}

double *sub_100072768(double **a1, unint64_t a2)
{
  uint64_t v3 = a1;
  char v33 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62) {
    goto LABEL_39;
  }
  for (uint64_t i = *(void *)(((unint64_t)a1 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v5 = 0;
    unint64_t v6 = (unint64_t)v3 & 0xC000000000000001;
    unint64_t v29 = v3 + 4;
    uint64_t v30 = (unint64_t)v3 & 0xFFFFFFFFFFFFFF8;
    uint64_t v26 = i;
    unint64_t v25 = (unint64_t)v3 & 0xC000000000000001;
    while (1)
    {
      if (v6)
      {
        uint64_t v7 = (double *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_9;
      }
      if (v5 >= *(void *)(v30 + 16)) {
        break;
      }
      uint64_t v7 = v29[v5];
LABEL_9:
      int64_t v8 = v7;
      if (__OFADD__(v5++, 1)) {
        goto LABEL_38;
      }
      id v31 = [v7 anchor];
      if (!v31)
      {
LABEL_4:

        goto LABEL_5;
      }
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
        if (!v10)
        {
LABEL_33:

          swift_bridgeObjectRelease();
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v10) {
          goto LABEL_33;
        }
      }
      unint64_t v27 = v5;
      uint64_t v11 = 0;
      char v12 = 0;
LABEL_14:
      char v28 = v12;
      do
      {
        if ((a2 & 0xC000000000000001) != 0) {
          id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v14 = *(id *)(a2 + 8 * v11 + 32);
        }
        id v15 = v14;
        uint64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
          goto LABEL_37;
        }
        id v17 = [v14 anchor];
        if (!v17)
        {
          uint64_t v13 = v15;
LABEL_16:

          goto LABEL_17;
        }
        uint64_t v13 = v17;
        uint64_t v3 = (double **)&selRef_replaySensorDidFinishReplayingData;
        [v8 worldTransform];
        simd_float4x4.position.getter();
        float32x4_t v32 = v18;
        [v15 worldTransform];
        simd_float4x4.position.getter();
        if (fabsf(COERCE_FLOAT(vsubq_f32(v32, v19).i32[1])) >= 0.5)
        {

          goto LABEL_16;
        }
        uint64_t v3 = (double **)&selRef_replaySensorDidFinishReplayingData;
        [v31 lastUpdateTimestamp];
        double v21 = v20;
        [v13 lastUpdateTimestamp];
        double v23 = v22;

        if (v21 < v23)
        {
          char v12 = 1;
          ++v11;
          if (v16 != v10) {
            goto LABEL_14;
          }

          swift_bridgeObjectRelease();
          unint64_t v6 = v25;
          uint64_t i = v26;
          unint64_t v5 = v27;
          goto LABEL_5;
        }
LABEL_17:
        ++v11;
      }
      while (v16 != v10);

      swift_bridgeObjectRelease();
      unint64_t v6 = v25;
      uint64_t i = v26;
      unint64_t v5 = v27;
      if (v28) {
        goto LABEL_4;
      }
LABEL_34:
      uint64_t v3 = &v33;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
LABEL_5:
      if (v5 == i) {
        return v33;
      }
    }
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    ;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100072A88(uint64_t result, int64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = result;
  int64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  size_t isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *((void *)v4 + 3) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_10006E814(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_19;
  }
  uint64_t v12 = *((void *)v4 + 2);
  BOOL v13 = __OFSUB__(v12, a2);
  uint64_t v14 = v12 - a2;
  if (v13) {
    goto LABEL_25;
  }
  id v15 = &v4[24 * a2 + 32];
  if (v6 != a2 || &v4[24 * v6 + 32] >= &v15[24 * v14]) {
    uint64_t result = (uint64_t)memmove(&v4[24 * v6 + 32], v15, 24 * v14);
  }
  uint64_t v16 = *((void *)v4 + 2);
  BOOL v13 = __OFADD__(v16, v8);
  uint64_t v17 = v16 - v7;
  if (!v13)
  {
    *((void *)v4 + sub_10004ACAC(3, 1, 2) = v17;
LABEL_19:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100072BB0(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v18 < v2) {
    goto LABEL_28;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v8 = v19 + v5;
    if (!__OFADD__(v19, v5)) {
      goto LABEL_8;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (*v3 >> 62) {
    goto LABEL_31;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_33;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v3 = v9;
      uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_34:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  sub_10001C99C(0, &qword_1004C6990);
  uint64_t result = swift_arrayDestroy();
  if (v5)
  {
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v14 = v20 - v2;
      if (!__OFSUB__(v20, v2)) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v13 = *(void *)(v11 + 16);
      uint64_t v14 = v13 - v2;
      if (!__OFSUB__(v13, v2))
      {
LABEL_17:
        id v15 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14) {
          uint64_t result = (uint64_t)memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
        }
        if (!(v9 >> 62))
        {
          uint64_t v16 = *(void *)(v11 + 16);
          uint64_t v17 = v16 + v5;
          if (!__OFADD__(v16, v5))
          {
LABEL_22:
            *(void *)(v11 + 16) = v17;
            goto LABEL_23;
          }
LABEL_40:
          __break(1u);
          return result;
        }
LABEL_38:
        swift_bridgeObjectRetain();
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v17 = v21 + v5;
        if (!__OFADD__(v21, v5)) {
          goto LABEL_22;
        }
        goto LABEL_40;
      }
    }
    __break(1u);
    goto LABEL_38;
  }
LABEL_23:

  return specialized Array._endMutation()();
}

uint64_t sub_100072E4C(uint64_t result, int64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = result;
  int64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  size_t isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *((void *)v4 + 3) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_10006E930(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_19;
  }
  uint64_t v12 = *((void *)v4 + 2);
  BOOL v13 = __OFSUB__(v12, a2);
  uint64_t v14 = v12 - a2;
  if (v13) {
    goto LABEL_25;
  }
  id v15 = &v4[16 * a2 + 32];
  if (v6 != a2 || &v4[16 * v6 + 32] >= &v15[16 * v14]) {
    uint64_t result = (uint64_t)memmove(&v4[16 * v6 + 32], v15, 16 * v14);
  }
  uint64_t v16 = *((void *)v4 + 2);
  BOOL v13 = __OFADD__(v16, v8);
  uint64_t v17 = v16 - v7;
  if (!v13)
  {
    *((void *)v4 + sub_10004ACAC(3, 1, 2) = v17;
LABEL_19:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100072F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SpatialPlattersHistoryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100072FCC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, float a7, double a8, double a9, float a10)
{
  float v14 = 0.0;
  double v15 = (double)a4;
  char v16 = 1;
  while (1)
  {
    float v17 = v14;
    float v14 = v14 + 1.0;
    CGPoint.multiply(by:)();
    static CGPoint.+ infix(_:_:)();
    CGFloat v19 = v18;
    CGFloat v21 = v20;
    sub_10005CB7C(&v28);
    CGAffineTransform v27 = v28;
    v29.CGFloat x = v19;
    v29.CGFloat y = v21;
    CGPoint v22 = CGPointApplyAffineTransform(v29, &v27);
    double v23 = round(v22.x) + round(v22.y) * v15;
    if ((~*(void *)&v23 & 0x7FF0000000000000) == 0) {
      break;
    }
    if (v23 <= -9.22337204e18) {
      goto LABEL_25;
    }
    if (v23 >= 9.22337204e18) {
      goto LABEL_26;
    }
    BOOL v25 = vabds_f32(*(float *)(a3 + 4 * (uint64_t)v23), a7) < 0.15 && *(unsigned __int8 *)(a2 + (uint64_t)v23) > 1u;
    if (v22.x < 0.0) {
      BOOL v25 = 0;
    }
    if (v22.x >= 256.0) {
      BOOL v25 = 0;
    }
    if (v22.y < 0.0) {
      BOOL v25 = 0;
    }
    if (v22.y >= 192.0) {
      BOOL v25 = 0;
    }
    if (v25 || (v16 & 1) != 0)
    {
      char v16 = v25;
      if (a1 == 2) {
        continue;
      }
      char v16 = v25;
      if (fabsf(v17) < a10) {
        continue;
      }
    }
    CGPoint.multiply(by:)();
    static CGPoint.+ infix(_:_:)();
    return;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
}

unint64_t sub_1000731BC(unint64_t result, int64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v6 = result;
  unint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *(void *)(v4 + 24) >> 1)
  {
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v10 = v5 + v8;
    }
    else {
      int64_t v10 = v5;
    }
    uint64_t result = (unint64_t)sub_10006E184((char *)result, v10, 1, (char *)v4);
    unint64_t v4 = result;
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = *(void *)(v4 + 16);
  BOOL v12 = __OFSUB__(v11, a2);
  uint64_t v13 = v11 - a2;
  if (v12) {
    goto LABEL_26;
  }
  uint64_t result = v4 + 32 + 4 * v6;
  float v14 = (const void *)(v4 + 32 + 4 * a2);
  if (v6 != a2 || result >= (unint64_t)v14 + 4 * v13) {
    uint64_t result = (unint64_t)memmove((void *)result, v14, 4 * v13);
  }
  uint64_t v15 = *(void *)(v4 + 16);
  BOOL v12 = __OFADD__(v15, v8);
  uint64_t v16 = v15 + v8;
  if (!v12)
  {
    *(void *)(v4 + 16) = v16;
LABEL_20:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_1000732C4(uint64_t a1)
{
}

uint64_t sub_1000732CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000732F8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100073330()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1000733FC()
{
  uint64_t v1 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_100062358(v2, v3);
}

uint64_t sub_100073460()
{
  return _swift_deallocObject(v0, 32, 7);
}

void *sub_100073498(uint64_t a1)
{
  return sub_100062288(a1, *(float *)(v1 + 16));
}

uint64_t sub_1000734A4()
{
  swift_release();

  return _swift_deallocObject(v0, 560, 15);
}

uint64_t sub_1000734F4()
{
  return sub_1000653C0(*(char **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), v0 + 48);
}

uint64_t sub_100073504()
{
  return _swift_deallocObject(v0, 224, 15);
}

void sub_100073544(uint64_t a1)
{
  double v2 = *(double *)(v1 + 16);
  double v3 = *(double *)(v1 + 24);
  double v4 = *(double *)(v1 + 32);
  double v5 = *(double *)(v1 + 40);
  long long v6 = *(_OWORD *)(v1 + 128);
  int v7 = *(_DWORD *)(v1 + 144);
  char v8 = *(unsigned char *)(v1 + 148);
  int64_t v9 = *(void **)(v1 + 48);
  long long v10 = *(_OWORD *)(v1 + 56);
  long long v11 = *(_OWORD *)(v1 + 72);
  long long v12 = *(_OWORD *)(v1 + 88);
  long long v13 = *(_OWORD *)(v1 + 104);
  long long v14 = v6;
  int v15 = v7;
  char v16 = v8;
  sub_100067F94(a1, &v9, v2, v3, v4, v5, *(__n128 *)(v1 + 160), *(__n128 *)(v1 + 176), *(__n128 *)(v1 + 192), *(__n128 *)(v1 + 208));
}

uint64_t sub_1000735BC()
{
  return _swift_deallocObject(v0, 48, 7);
}

__n128 sub_1000735CC(uint64_t a1)
{
  __n128 result = *(__n128 *)(v1 + 16);
  long long v3 = *(_OWORD *)(v1 + 32);
  *(__n128 *)(a1 + 400) = result;
  *(_OWORD *)(a1 + 416) = v3;
  *(unsigned char *)(a1 + 43sub_10004ACAC(3, 1, 2) = 0;
  return result;
}

uint64_t sub_1000735DC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100012894(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_100073644()
{
  return sub_10006C074(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100073650()
{
  return sub_10006C28C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100073658()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100073698()
{
  return sub_10006C5CC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000736A4()
{
  return sub_10006C750(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

double sub_1000736AC()
{
  return sub_10006CAE4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1000736B8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000736F8()
{
  sub_10006CBF0(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_100073700()
{
}

uint64_t sub_100073708(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100012894((uint64_t *)&unk_1004C68F0);
  __chkstk_darwin(v4 - 8);
  long long v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  long long v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  long long v13 = (char *)&v20 - v12;
  uint64_t v14 = v2 + qword_1004C6430;
  swift_beginAccess();
  sub_1000735DC(v14, (uint64_t)v6, (uint64_t *)&unk_1004C68F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10002B9C0((uint64_t)v6, (uint64_t *)&unk_1004C68F0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    Date.init()();
    Date.timeIntervalSince(_:)();
    double v16 = v15;
    float v17 = *(void (**)(char *, uint64_t))(v8 + 8);
    v17(v11, v7);
    if (v16 < 2.0)
    {
      double v20 = 0;
      swift_retain();
      Synchronized.wrappedValue.setter();
      swift_release();
      return ((uint64_t (*)(char *, uint64_t))v17)(v13, v7);
    }
    v17(v13, v7);
  }
  double v20 = a1;
  id v19 = a1;
  swift_retain();
  Synchronized.wrappedValue.setter();
  return swift_release();
}

uint64_t sub_100073988()
{
  swift_release();

  return _swift_deallocObject(v0, 544, 15);
}

uint64_t sub_1000739C8(void *a1)
{
  return sub_100073708(a1);
}

uint64_t sub_1000739EC()
{
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100073A2C()
{
  return sub_100065188(*(void **)(v0 + 16), *(unsigned int *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100073A3C()
{
  return _swift_deallocObject(v0, 50, 15);
}

uint64_t sub_100073A4C(uint64_t a1)
{
  return sub_100069DE8(a1, *(void *)(v1 + 32), *(float *)(v1 + 16), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48), *(unsigned char *)(v1 + 49));
}

uint64_t sub_100073A60()
{
  swift_release();

  return _swift_deallocObject(v0, 552, 15);
}

void sub_100073AA0()
{
}

uint64_t sub_100073AB0()
{
  return _swift_deallocObject(v0, 104, 7);
}

void sub_100073AE8()
{
  sub_100069A78(v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10], v0[11], v0[12]);
}

uint64_t sub_100073B24()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100073B5C(uint64_t a1)
{
  return sub_10006306C(a1);
}

uint64_t sub_100073B90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100073BD8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100012894(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void sub_100073C3C()
{
  sub_10006A4D8(*(void *)(v0 + 16));
}

uint64_t sub_100073C44(uint64_t result, int64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = result;
  int64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  size_t isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *((void *)v4 + 3) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_10006F3E4(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_19;
  }
  uint64_t v12 = *((void *)v4 + 2);
  BOOL v13 = __OFSUB__(v12, a2);
  uint64_t v14 = v12 - a2;
  if (v13) {
    goto LABEL_25;
  }
  double v15 = &v4[304 * a2 + 32];
  if (v6 != a2 || &v4[304 * v6 + 32] >= &v15[304 * v14]) {
    uint64_t result = (uint64_t)memmove(&v4[304 * v6 + 32], v15, 304 * v14);
  }
  uint64_t v16 = *((void *)v4 + 2);
  BOOL v13 = __OFADD__(v16, v8);
  uint64_t v17 = v16 - v7;
  if (!v13)
  {
    *((void *)v4 + sub_10004ACAC(3, 1, 2) = v17;
LABEL_19:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100073DD4@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  CGAffineTransform v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v10);
  double v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  double v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t SendableTransfer.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t SendableTransfer.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*SendableTransfer.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t SendableTransfer.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t SendableTransfer.unwrapped<A>()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(a1);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *))(v4 + 16))(v6);
  uint64_t v11 = *(void *)(v3 + 16);
  uint64_t v7 = type metadata accessor for SendableTransfer();
  sub_100073DD4((void (*)(char *, char *))sub_100074354, (uint64_t)v10, (uint64_t)&type metadata for Never, v7, v8, a2);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10007426C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a3, v7, a2);
}

uint64_t sub_100074354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007426C(a1, *(void *)(v2 + 16), a2);
}

uint64_t type metadata accessor for SendableTransfer()
{
  return sub_10002F124();
}

uint64_t sub_10007438C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t sub_100074394()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100074424(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1000744DC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_100074508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_100074558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1000745A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1000745F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_100074648(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1000747A4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1000749BCLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

void sub_1000749E4()
{
  id v1 = [self currentTraitCollection];
  id v2 = [v1 preferredContentSizeCategory];

  LOBYTE(vsub_10004ACAC(2, 1, 1) = UIContentSizeCategory.isAccessibilityCategory.getter();
  uint64_t v3 = &off_1004B7000;
  if ((v1 & 1) == 0)
  {
    uint64_t v4 = &v0[OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_measureContent];
    uint64_t v30 = *(void **)(*(void *)&v0[OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_measureContent]
                   + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_title);
    id v31 = self;
    id v32 = v30;
    id v33 = [v31 labelColor];
    [v32 setTextColor:v33];

    unint64_t v34 = *(void **)v4;
    unint64_t v35 = *(void *)(*(void *)v4
                    + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_horizontalConstraints);
    if (v35 >> 62)
    {
      swift_bridgeObjectRetain_n();
      id v41 = v34;
      uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
      if (!v36) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v36 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      id v37 = v34;
      if (!v36) {
        goto LABEL_14;
      }
    }
    if (v36 < 1)
    {
      __break(1u);
      goto LABEL_19;
    }
    for (uint64_t i = 0; i != v36; ++i)
    {
      if ((v35 & 0xC000000000000001) != 0) {
        id v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v39 = *(id *)(v35 + 8 * i + 32);
      }
      BOOL v40 = v39;
      [v39 setConstant:0.0];
    }
LABEL_14:
    swift_bridgeObjectRelease_n();

    id v27 = [v0 contentView];
    uint64_t v28 = v27;
    uint64_t v29 = *(void *)&v0[OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_sketchView];
    goto LABEL_15;
  }
  uint64_t v4 = &v0[OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_accessibleMeasureContent];
  unsigned int v5 = *(void **)(*(void *)&v0[OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_accessibleMeasureContent]
                + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel);
  uint64_t v6 = self;
  id v7 = v5;
  id v8 = [v6 preferredFontForTextStyle:UIFontTextStyleBody];
  id v9 = [v8 fontDescriptor];

  id v10 = [v9 fontDescriptorWithSymbolicTraits:2];
  if (!v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  id v11 = [v6 fontWithDescriptor:v10 size:0.0];

  [v7 setFont:v11];
  id v12 = *(id *)(*(void *)v4 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel);
  id v13 = [v6 preferredFontForTextStyle:UIFontTextStyleLargeTitle];
  [v12 setFont:v13];

  id v14 = *(id *)(*(void *)v4 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel);
  id v15 = [v6 preferredFontForTextStyle:UIFontTextStyleSubheadline];
  id v16 = [v15 fontDescriptor];

  id v17 = [v16 fontDescriptorWithSymbolicTraits:2];
  if (!v17)
  {
LABEL_20:
    __break(1u);
    return;
  }
  id v18 = [v6 fontWithDescriptor:v17 size:0.0];

  [v14 setFont:v18];
  uint64_t v19 = *(void **)(*(void *)v4 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel);
  double v20 = self;
  id v21 = v19;
  id v22 = [v20 labelColor];
  [v21 setTextColor:v22];

  id v23 = *(id *)(*(void *)v4 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel);
  id v24 = [v20 labelColor];
  [v23 setTextColor:v24];

  id v25 = *(id *)(*(void *)v4 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel);
  id v26 = [v20 secondaryLabelColor];
  [v25 setTextColor:v26];

  id v27 = [v0 contentView];
  uint64_t v28 = v27;
  uint64_t v29 = *(void *)&v0[OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_sketchView];
  uint64_t v3 = &off_1004B7000;
LABEL_15:
  [v27 v3[244]:v29];

  id v42 = [v0 contentView];
  [v42 v3[244]:v4];
}

void sub_100074F64()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_measureContent;
  [*(id *)((char *)v0 + OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_measureContent) setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v2 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_sketchView;
  [*(id *)((char *)v0 + OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_sketchView) setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v3 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_accessibleMeasureContent;
  [*(id *)((char *)v0 + OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_accessibleMeasureContent) setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = [self currentTraitCollection];
  id v5 = [v4 preferredContentSizeCategory];

  LOBYTE(v4) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if ((v4 & 1) == 0)
  {
    id v42 = [*(id *)((char *)v0 + v1) bottomAnchor];
    id v43 = [v0 contentView];
    id v44 = [v43 bottomAnchor];

    id v45 = [v42 constraintEqualToAnchor:v44];
    uint64_t v46 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_bottomContentAnchor;
    uint64_t v47 = *(void **)((char *)v0 + OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_bottomContentAnchor);
    *(void *)((char *)v0 + OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_bottomContentAnchor) = v45;

    id v48 = [*(id *)((char *)v0 + v2) bottomAnchor];
    id v49 = [v0 contentView];
    id v50 = [v49 bottomAnchor];

    if (qword_1004C27E8 != -1) {
      swift_once();
    }
    id v51 = [v48 constraintLessThanOrEqualToAnchor:v50 constant:-*(double *)&qword_1004F7E00];

    uint64_t v52 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_sketchBottomAnchor;
    BOOL v53 = *(void **)((char *)v0 + OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_sketchBottomAnchor);
    *(void *)((char *)v0 + OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_sketchBottomAnchor) = v51;

    uint64_t v55 = *(void **)((char *)v0 + v52);
    if (v55)
    {
      LODWORD(v54) = 1148829696;
      [v55 setPriority:v54];
      sub_100012894((uint64_t *)&unk_1004CEA00);
      uint64_t v56 = swift_allocObject();
      *(_OWORD *)(v56 + 16) = xmmword_1003FAEA0;
      id v57 = [*(id *)((char *)v0 + v2) leadingAnchor];
      id v58 = [v0 contentView];
      id v59 = [v58 leadingAnchor];

      id v60 = [v57 constraintEqualToAnchor:v59 constant:*(double *)&qword_1004F7E00];
      *(void *)(v56 + 3sub_10004ACAC(3, 1, 2) = v60;
      id v61 = [*(id *)((char *)v0 + v2) topAnchor];
      id v62 = [v0 contentView];
      id v63 = [v62 topAnchor];

      id v64 = [v61 constraintEqualToAnchor:v63 constant:*(double *)&qword_1004F7E00];
      *(void *)(v56 + 40) = v64;
      id v65 = [*(id *)((char *)v0 + v2) widthAnchor];
      if (qword_1004C2988 != -1) {
        swift_once();
      }
      id v66 = [v65 constraintEqualToConstant:*(double *)&qword_1004C6BF0];

      *(void *)(v56 + 48) = v66;
      id v67 = [*(id *)((char *)v0 + v2) heightAnchor];
      id v68 = [*(id *)((char *)v0 + v2) widthAnchor];
      id v69 = [v67 constraintEqualToAnchor:v68];

      *(void *)(v56 + 56) = v69;
      uint64_t v70 = *(void **)((char *)v0 + v52);
      if (v70)
      {
        *(void *)(v56 + 64) = v70;
        unint64_t v71 = *(void **)((char *)v0 + v1);
        id v72 = v70;
        id v73 = [v71 leadingAnchor];
        id v74 = [*(id *)((char *)v0 + v2) trailingAnchor];
        id v75 = [v73 constraintEqualToAnchor:v74 constant:*(double *)&qword_1004F7E00];

        *(void *)(v56 + 7sub_10004ACAC(3, 1, 2) = v75;
        id v76 = [*(id *)((char *)v0 + v1) topAnchor];
        id v77 = [v0 contentView];
        id v78 = [v77 topAnchor];

        id v79 = [v76 constraintEqualToAnchor:v78];
        *(void *)(v56 + 80) = v79;
        id v80 = [*(id *)((char *)v0 + v1) trailingAnchor];
        id v81 = [v0 contentView];
        id v82 = [v81 trailingAnchor];

        id v83 = [v80 constraintEqualToAnchor:v82];
        *(void *)(v56 + 88) = v83;
        long long v84 = *(void **)((char *)v0 + v46);
        if (v84)
        {
          long long v85 = self;
          *(void *)(v56 + 96) = v84;
          specialized Array._endMutation()();
          sub_100029878();
          id v86 = v84;
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v85 activateConstraints:isa];
          goto LABEL_16;
        }
LABEL_22:
        __break(1u);
        return;
      }
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v6 = [*(id *)((char *)v0 + v3) bottomAnchor];
  id v7 = [v0 contentView];
  id v8 = [v7 bottomAnchor];

  if (qword_1004C27E8 != -1) {
    swift_once();
  }
  id v9 = [v6 constraintEqualToAnchor:v8 constant:-*(double *)&qword_1004F7E00];

  id v10 = *(void **)((char *)v0 + OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_bottomContentAnchor);
  long long v87 = (char *)OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_bottomContentAnchor;
  *(void *)((char *)v0 + OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_bottomContentAnchor) = v9;

  id v11 = [*(id *)((char *)v0 + v3) topAnchor];
  id v12 = [*(id *)((char *)v0 + v2) bottomAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12 constant:*(double *)&qword_1004F7E00];

  LODWORD(v14) = 1148813312;
  [v13 setPriority:v14];
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1003FAEB0;
  id v16 = [*(id *)((char *)v0 + v2) leadingAnchor];
  id v17 = [v0 contentView];
  id v18 = [v17 leadingAnchor];

  id v19 = [v16 constraintEqualToAnchor:v18 constant:*(double *)&qword_1004F7E00];
  *(void *)(v15 + 3sub_10004ACAC(3, 1, 2) = v19;
  id v20 = [*(id *)((char *)v0 + v2) topAnchor];
  id v21 = [v0 contentView];
  id v22 = [v21 topAnchor];

  id v23 = [v20 constraintEqualToAnchor:v22 constant:*(double *)&qword_1004F7E00];
  *(void *)(v15 + 40) = v23;
  id v24 = [*(id *)((char *)v0 + v2) widthAnchor];
  if (qword_1004C2988 != -1) {
    swift_once();
  }
  id v25 = [v24 constraintEqualToConstant:*(double *)&qword_1004C6BF0];

  *(void *)(v15 + 48) = v25;
  id v26 = [*(id *)((char *)v0 + v2) heightAnchor];
  id v27 = [*(id *)((char *)v0 + v2) widthAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  *(void *)(v15 + 56) = v28;
  id v29 = [*(id *)((char *)v0 + v3) leadingAnchor];
  id v30 = [v0 contentView];
  id v31 = [v30 leadingAnchor];

  id v32 = [v29 constraintEqualToAnchor:v31 constant:*(double *)&qword_1004F7E00];
  *(void *)(v15 + 64) = v32;
  *(void *)(v15 + 7sub_10004ACAC(3, 1, 2) = v13;
  id v33 = *(void **)((char *)v0 + v3);
  id v34 = v13;
  id v35 = [v33 trailingAnchor];
  id v36 = [v0 contentView];
  id v37 = [v36 trailingAnchor];

  id v38 = [v35 constraintEqualToAnchor:v37];
  *(void *)(v15 + 80) = v38;
  id v39 = *(void **)&v87[(void)v0];
  if (!v39)
  {
    __break(1u);
    goto LABEL_20;
  }
  BOOL v40 = self;
  *(void *)(v15 + 88) = v39;
  specialized Array._endMutation()();
  sub_100029878();
  id v41 = v39;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v40 activateConstraints:isa];

LABEL_16:
}

void sub_100075A60()
{
  uint64_t v1 = *(char **)(v0 + OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_measureContent);
  uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits];
  uint64_t v3 = v1;
  [v2 setSelectedRange:0, 0];
  uint64_t v4 = *(void *)&v3[OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels];
  [*(id *)(*(void *)(v4 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];
  [*(id *)(*(void *)(v4 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];

  id v5 = *(char **)(v0 + OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_accessibleMeasureContent);
  id v6 = *(void **)&v5[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel];
  id v7 = v5;
  [v6 setSelectedRange:0, 0];
  [*(id *)&v7[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel] setSelectedRange:0, 0];
  [*(id *)&v7[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel] setSelectedRange:0, 0];
}

void sub_100075BD0()
{
  qword_1004C6BF0 = 0x404C000000000000;
}

id sub_100075BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_measureContent;
  id v7 = objc_allocWithZone((Class)type metadata accessor for MeasureTableViewCellCommonContentView());
  id v8 = v3;
  *(void *)&v3[v6] = [v7 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v9 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_sketchView;
  *(void *)&v8[v9] = [objc_allocWithZone((Class)type metadata accessor for SketchLineHistory()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v10 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_accessibleMeasureContent;
  *(void *)&v8[v10] = [objc_allocWithZone((Class)type metadata accessor for AccessibilityTripleStack()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v8[OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_bottomContentAnchor] = 0;
  *(void *)&v8[OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_sketchBottomAnchor] = 0;

  if (a3)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  v15.receiver = v8;
  v15.super_class = (Class)type metadata accessor for BaseLineHistoryCell();
  id v12 = [super initWithStyle:a1 reuseIdentifier:v11];

  id v13 = v12;
  sub_1000749E4();
  sub_100074F64();

  return v13;
}

id sub_100075D98(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_measureContent;
  id v4 = objc_allocWithZone((Class)type metadata accessor for MeasureTableViewCellCommonContentView());
  id v5 = v1;
  *(void *)&v1[v3] = [v4 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v6 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_sketchView;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)type metadata accessor for SketchLineHistory()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v7 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_accessibleMeasureContent;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)type metadata accessor for AccessibilityTripleStack()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v5[OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_bottomContentAnchor] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_sketchBottomAnchor] = 0;

  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for BaseLineHistoryCell();
  id v8 = [super initWithCoder:a1];
  id v9 = v8;
  if (v8)
  {
    id v10 = v8;
    sub_1000749E4();
    sub_100074F64();
  }
  return v9;
}

void sub_100075EF8()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_measureContent;
  [*(id *)(v0 + OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_measureContent) removeFromSuperview];
  uint64_t v2 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_sketchView;
  [*(id *)(v0 + OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_sketchView) removeFromSuperview];
  uint64_t v3 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_accessibleMeasureContent;
  [*(id *)(v0 + OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_accessibleMeasureContent) removeFromSuperview];
  id v4 = [objc_allocWithZone((Class)type metadata accessor for MeasureTableViewCellCommonContentView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v5 = *(void **)(v0 + v1);
  *(void *)(v0 + vsub_10004ACAC(2, 1, 1) = v4;

  id v6 = [objc_allocWithZone((Class)type metadata accessor for SketchLineHistory()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v7 = *(void **)(v0 + v2);
  *(void *)(v0 + vsub_10004ACAC(3, 1, 2) = v6;

  id v8 = [objc_allocWithZone((Class)type metadata accessor for AccessibilityTripleStack()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v9 = *(void **)(v0 + v3);
  *(void *)(v0 + v3) = v8;

  sub_1000749E4();

  sub_100074F64();
}

id sub_100076054()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseLineHistoryCell();
  return [super dealloc];
}

uint64_t type metadata accessor for BaseLineHistoryCell()
{
  return self;
}

void sub_100076128(void *a1)
{
  [a1 frame];
  v8.width = v2;
  v8.height = v3;
  UIGraphicsBeginImageContext(v8);
  id v4 = [a1 layer];
  id v5 = UIGraphicsGetCurrentContext();
  if (!v5)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v6 = v5;
  [v4 renderInContext:v5];

  uint64_t v7 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();
  if (!v7)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if ([objc_allocWithZone((Class)CIImage) initWithImage:v7])
  {

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1000762DC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *(void *)&v2[OBJC_IVAR____TtC7Measure13PrefixedLabel_prefix + 8];
  uint64_t v11 = *(void *)&v2[OBJC_IVAR____TtC7Measure13PrefixedLabel_prefix];
  uint64_t v12 = v5;
  swift_bridgeObjectRetain();
  v6._uint64_t countAndFlagsBits = 8250;
  v6._object = (void *)0xE200000000000000;
  String.append(_:)(v6);
  if (a2) {
    uint64_t v7 = a1;
  }
  else {
    uint64_t v7 = 0;
  }
  if (!a2) {
    a2 = 0xE000000000000000;
  }
  unint64_t v8 = a2;
  String.append(_:)(*(Swift::String *)&v7);
  swift_bridgeObjectRelease();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for PrefixedLabel();
  [super setText:v9];
}

id sub_1000764DC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PrefixedLabel();
  return [super dealloc];
}

uint64_t type metadata accessor for PrefixedLabel()
{
  return self;
}

void sub_100076548(void *a1, void *a2)
{
  uint64_t v3 = v2;
  *(void *)(v3 + 56) = 0;
  *(_OWORD *)(v3 + 40) = 0u;
  *(_OWORD *)(v3 + 24) = 0u;
  *(_OWORD *)(v3 + 7sub_10004ACAC(3, 1, 2) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 16) = a1;
  id v6 = objc_allocWithZone((Class)type metadata accessor for SceneDebugObserver());
  id v97 = a1;
  id v7 = a2;
  *(void *)(v3 + 64) = sub_1001A7BE0(v7);
  unint64_t v8 = self;
  id v9 = [v8 standardUserDefaults];
  swift_getKeyPath();
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = v7;
  sub_10005536C();
  id v12 = v7;
  id v13 = (void *)static OS_dispatch_queue.main.getter();
  NSUserDefaults.performOnChange<A>(to:on:action:)();

  swift_release();
  swift_release();

  id v14 = [v8 standardUserDefaults];
  swift_getKeyPath();
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = v12;
  id v17 = v12;
  id v18 = (void *)static OS_dispatch_queue.main.getter();
  NSUserDefaults.performOnChange<A>(to:on:action:)();

  swift_release();
  swift_release();

  id v99 = v8;
  id v19 = [v8 standardUserDefaults];
  Defaults.showWorldAnchorDebugInfo.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  LODWORD(v18) = [v19 BOOLForKey:v20];

  if (v18)
  {
    [v17 frame];
    id v25 = [objc_allocWithZone((Class)type metadata accessor for DebugLineView()) initWithFrame:v21, v22, v23, v24];
    id v26 = *(void **)(v3 + 120);
    *(void *)(v3 + 120) = v25;

    id v27 = *(void **)(v3 + 120);
    if (v27)
    {
      type metadata accessor for WorldAnchorDebugVisual();
      id v28 = (void *)swift_allocObject();
      *(void *)(v3 + 56) = sub_100077B54(v17, v27, v28);
      swift_release();
      if (*(void *)(v3 + 120))
      {
        [v97 addSubview:];
        goto LABEL_5;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_31;
  }
LABEL_5:
  id v29 = [v8 standardUserDefaults];
  Defaults.showRectangleDebugInfo.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v31 = [v29 BOOLForKey:v30];

  if (!v31) {
    goto LABEL_8;
  }
  [v17 frame];
  id v36 = [objc_allocWithZone((Class)type metadata accessor for DebugLineView()) initWithFrame:v32, v33, v34, v35];
  id v37 = *(void **)(v3 + 80);
  *(void *)(v3 + 80) = v36;

  if (!*(void *)(v3 + 80))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  [v97 addSubview:];
LABEL_8:
  id v38 = [v8 standardUserDefaults];
  swift_getKeyPath();
  uint64_t v39 = swift_allocObject();
  swift_weakInit();
  BOOL v40 = (void *)swift_allocObject();
  v40[2] = v39;
  v40[3] = v17;
  v40[4] = v97;
  id v41 = v97;
  id v42 = v17;
  id v43 = (void *)static OS_dispatch_queue.main.getter();
  NSUserDefaults.performOnChange<A>(to:on:action:)();

  swift_release();
  swift_release();

  id v44 = [v99 standardUserDefaults];
  swift_getKeyPath();
  uint64_t v45 = swift_allocObject();
  swift_weakInit();
  uint64_t v46 = (void *)swift_allocObject();
  _OWORD v46[2] = v45;
  v46[3] = v42;
  v46[4] = v41;
  id v98 = v41;
  id v47 = v42;
  id v48 = (void *)static OS_dispatch_queue.main.getter();
  NSUserDefaults.performOnChange<A>(to:on:action:)();

  swift_release();
  swift_release();

  id v49 = [v99 standardUserDefaults];
  swift_getKeyPath();
  uint64_t v50 = swift_allocObject();
  swift_weakInit();
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = v50;
  *(void *)(v51 + 24) = v47;
  id v52 = v47;
  BOOL v53 = (void *)static OS_dispatch_queue.main.getter();
  NSUserDefaults.performOnChange<A>(to:on:action:)();

  swift_release();
  swift_release();

  id v54 = [v99 standardUserDefaults];
  swift_getKeyPath();
  uint64_t v55 = swift_allocObject();
  swift_weakInit();
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = v55;
  *(void *)(v56 + 24) = v52;
  id v57 = v52;
  id v58 = (void *)static OS_dispatch_queue.main.getter();
  NSUserDefaults.performOnChange<A>(to:on:action:)();

  swift_release();
  swift_release();

  id v59 = [v99 standardUserDefaults];
  Defaults.drawDebugPlanes.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v60 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  LODWORD(v43) = [v59 BOOLForKey:v60];

  if (v43)
  {
    type metadata accessor for DebugPlaneVisualizer();
    uint64_t v61 = swift_allocObject();
    *(void *)(v61 + 16) = 0;
    *(void *)(v3 + 48) = v61;
    swift_release();
  }
  id v62 = v57;
  id v63 = [v99 standardUserDefaults];
  Defaults.showStatistics.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v64 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v65 = [v63 BOOLForKey:v64];

  [v62 setShowsStatistics:v65];
  id v66 = [v99 standardUserDefaults];
  Defaults.showFeaturePoints.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v67 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  LODWORD(v65) = [v66 BOOLForKey:v67];

  if (v65)
  {
    id v68 = v62;
    unint64_t v69 = (unint64_t)[v68 debugOptions];
    if ((ARSCNDebugOptionShowFeaturePoints & ~v69) != 0) {
      SCNDebugOptions v70 = ARSCNDebugOptionShowFeaturePoints;
    }
    else {
      SCNDebugOptions v70 = 0;
    }
    [v68 setDebugOptions:v70 | v69];
  }
  if (![self jasperAvailable]) {
    goto LABEL_19;
  }
  id v71 = [v99 standardUserDefaults];
  Defaults.peShowADIndicator.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v72 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v73 = [v71 BOOLForKey:v72];

  if (v73)
  {
    id v74 = [v99 standardUserDefaults];
    Defaults.peADTestMode.unsafeMutableAddressor();
    swift_bridgeObjectRetain();
    NSString v75 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v76 = [v74 integerForKey:v75];

    if ((unint64_t)v76 > 3)
    {
LABEL_33:
      __break(1u);
      return;
    }
    v77._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v77);
    swift_bridgeObjectRelease();
    unint64_t v78 = 0xE200000000000000;
  }
  else
  {
LABEL_19:
    unint64_t v78 = 0xE000000000000000;
  }
  id v79 = [v99 standardUserDefaults];
  Defaults.peShowPatchTrackingIndicator.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v80 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v81 = [v79 BOOLForKey:v80];

  if (v81)
  {
    id v82 = [v99 standardUserDefaults];
    Defaults.pePatchTrackingMode.unsafeMutableAddressor();
    swift_bridgeObjectRetain();
    NSString v83 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v84 = [v82 integerForKey:v83];

    if ((unint64_t)v84 <= 4)
    {
      v85._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v85);
      swift_bridgeObjectRelease();
      uint64_t v87 = 21584;
      unint64_t v86 = 0xE200000000000000;
      goto LABEL_24;
    }
    goto LABEL_32;
  }
  uint64_t v87 = 0;
  unint64_t v86 = 0xE000000000000000;
LABEL_24:
  if ((v78 & 0xF00000000000000) != 0 || (v86 & 0xF00000000000000) != 0)
  {
    [v62 frame];
    CGFloat v88 = CGRectGetHeight(v100) + -200.0;
    [v62 frame];
    CGRectGetWidth(v101);
    CGSize.init(_:_:)();
    id v91 = [objc_allocWithZone((Class)UILabel) initWithFrame:10.0, v88, v89, v90];
    [v91 setAlpha:0.5];
    swift_bridgeObjectRetain();
    v92._uint64_t countAndFlagsBits = 32;
    v92._object = (void *)0xE100000000000000;
    String.append(_:)(v92);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v93._uint64_t countAndFlagsBits = v87;
    v93._object = (void *)v86;
    String.append(_:)(v93);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSString v94 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v91 setText:v94];

    id v95 = [self whiteColor];
    [v91 setTextColor:v95];

    float v96 = v98;
    [v98 addSubview:v91];
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    float v96 = v98;
  }
}

uint64_t sub_100077250(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100077D98(a3, result);
    return swift_release();
  }
  return result;
}

void sub_1000772B4(unsigned __int8 *a1, uint64_t a2, void *a3, void *a4)
{
  int v6 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v8 = Strong;
  if (v6 && !*(void *)(Strong + 88))
  {
    [a3 frame];
    id v13 = [objc_allocWithZone((Class)type metadata accessor for DebugStatsView()) initWithFrame:v9, v10, v11, v12];
    id v14 = *(void **)(v8 + 88);
    *(void *)(v8 + 88) = v13;

    uint64_t v15 = *(void **)(v8 + 88);
    if (v15)
    {
      type metadata accessor for DebugStatsController();
      swift_allocObject();
      id v16 = v15;
      uint64_t v17 = sub_1000597F0(v16);

      *(void *)(v8 + 3sub_10004ACAC(3, 1, 2) = v17;
      swift_release();
      if (*(void *)(v8 + 88))
      {
        [a4 addSubview:];
        goto LABEL_7;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
LABEL_7:
  id v18 = *(void **)(v8 + 88);
  if (v18)
  {
    id v19 = v18;
    [v19 setHidden:v6 ^ 1u];
  }
  swift_release();
}

void sub_100077424(unsigned __int8 *a1, uint64_t a2, void *a3, void *a4)
{
  int v6 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v8 = Strong;
  if (v6 && !*(void *)(Strong + 96))
  {
    [a3 frame];
    id v13 = [objc_allocWithZone((Class)type metadata accessor for DebugStateView()) initWithFrame:v9, v10, v11, v12];
    id v14 = *(void **)(v8 + 96);
    *(void *)(v8 + 96) = v13;

    uint64_t v15 = *(void **)(v8 + 96);
    if (v15)
    {
      id v16 = objc_allocWithZone((Class)type metadata accessor for DebugStateController());
      uint64_t v17 = sub_100077F7C(v15);
      id v18 = *(void **)(v8 + 40);
      *(void *)(v8 + 40) = v17;

      if (*(void *)(v8 + 96))
      {
        [a4 addSubview:];
        goto LABEL_7;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
LABEL_7:
  uint64_t v19 = *(void *)(v8 + 40);
  if (v19) {
    *(unsigned char *)(v19 + qword_1004C6DC0) = v6;
  }
  NSString v20 = *(void **)(v8 + 96);
  if (v20) {
    [v20 setHidden:v6 ^ 1u];
  }
  swift_release();
}

void sub_100077580(unsigned __int8 *a1, uint64_t a2, void *a3)
{
  int v4 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    id v7 = *(void **)(Strong + 104);
    if (v4)
    {
      if (v7) {
        goto LABEL_8;
      }
      [a3 frame];
      id v12 = [objc_allocWithZone((Class)type metadata accessor for PlaneSelectionStatsView()) initWithFrame:v8, v9, v10, v11];
      id v13 = *(void **)(v6 + 104);
      *(void *)(v6 + 104) = v12;

      if (!*(void *)(v6 + 104))
      {
        __break(1u);
        return;
      }
      [*(id *)(v6 + 16) addSubview:];
      id v7 = *(void **)(v6 + 104);
      if (v7) {
        goto LABEL_8;
      }
      __break(1u);
    }
    if (!v7)
    {
LABEL_9:
      swift_release();
      return;
    }
LABEL_8:
    [v7 setHidden:v4 ^ 1u];
    goto LABEL_9;
  }
}

void sub_100077690(unsigned __int8 *a1, uint64_t a2, void *a3)
{
  int v4 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    id v7 = *(void **)(Strong + 112);
    if (v4)
    {
      if (v7) {
        goto LABEL_8;
      }
      [a3 frame];
      id v12 = [objc_allocWithZone((Class)type metadata accessor for AccuracyDebugView()) initWithFrame:v8, v9, v10, v11];
      id v13 = *(void **)(v6 + 112);
      *(void *)(v6 + 11sub_10004ACAC(3, 1, 2) = v12;

      if (!*(void *)(v6 + 112))
      {
        __break(1u);
        return;
      }
      [*(id *)(v6 + 16) addSubview:];
      id v7 = *(void **)(v6 + 112);
      if (v7) {
        goto LABEL_8;
      }
      __break(1u);
    }
    if (!v7)
    {
LABEL_9:
      swift_release();
      return;
    }
LABEL_8:
    [v7 setHidden:v4 ^ 1u];
    goto LABEL_9;
  }
}

id *sub_1000777A0()
{
  swift_release();
  swift_release();
  swift_release();

  return v0;
}

uint64_t sub_100077828()
{
  sub_1000777A0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugVisualizer()
{
  return self;
}

const char *sub_100077880()
{
  return "kEdgeDetectionDebugReticleEnabled";
}

id sub_10007788C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 kEdgeDetectionDebugReticleEnabled];
  *a2 = (_BYTE)result;
  return result;
}

id sub_1000778C0(unsigned __int8 *a1, id *a2)
{
  return [*a2 setKEdgeDetectionDebugReticleEnabled:*a1];
}

uint64_t sub_1000778D4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

const char *sub_100077910()
{
  return "showEDLines";
}

id sub_10007791C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 showEDLines];
  *a2 = (_BYTE)result;
  return result;
}

id sub_100077950(unsigned __int8 *a1, id *a2)
{
  return [*a2 setShowEDLines:*a1];
}

uint64_t sub_100077968(uint64_t a1)
{
  return sub_100077250(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

const char *sub_100077984()
{
  return "kShowStatistics";
}

id sub_100077990@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 kShowStatistics];
  *a2 = (_BYTE)result;
  return result;
}

id sub_1000779C4(unsigned __int8 *a1, id *a2)
{
  return [*a2 setKShowStatistics:*a1];
}

void sub_1000779DC(unsigned __int8 *a1)
{
  sub_1000772B4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

const char *sub_1000779E8()
{
  return "kShowOverallState";
}

id sub_1000779F4@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 kShowOverallState];
  *a2 = (_BYTE)result;
  return result;
}

id sub_100077A28(unsigned __int8 *a1, id *a2)
{
  return [*a2 setKShowOverallState:*a1];
}

uint64_t sub_100077A40()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100077A88(unsigned __int8 *a1)
{
  sub_100077424(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

const char *sub_100077A94()
{
  return "kPEShowStats";
}

id sub_100077AA0@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 kPEShowStats];
  *a2 = (_BYTE)result;
  return result;
}

id sub_100077AD4(unsigned __int8 *a1, id *a2)
{
  return [*a2 setKPEShowStats:*a1];
}

void sub_100077AEC(unsigned __int8 *a1)
{
  sub_100077580(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

const char *sub_100077AF4()
{
  return "kPEShowAccuracy";
}

id sub_100077B00@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 kPEShowAccuracy];
  *a2 = (_BYTE)result;
  return result;
}

id sub_100077B34(unsigned __int8 *a1, id *a2)
{
  return [*a2 setKPEShowAccuracy:*a1];
}

void sub_100077B4C(unsigned __int8 *a1)
{
  sub_100077690(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void *sub_100077B54(void *a1, void *a2, void *a3)
{
  uint64_t v3 = a3;
  uint64_t v6 = *a3;
  id v7 = [self standardUserDefaults];
  Defaults.showWorldAnchorDebugInfo.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v9 = [v7 BOOLForKey:v8];

  *((unsigned char *)v3 + 16) = v9;
  v3[3] = sub_1000E3558(_swiftEmptyArrayStorage);
  v3[4] = sub_1000E3668(_swiftEmptyArrayStorage);
  v3[5] = sub_1000E3674((uint64_t)_swiftEmptyArrayStorage);
  v3[6] = sub_1000E374C(_swiftEmptyArrayStorage);
  v3[7] = sub_1000E374C(_swiftEmptyArrayStorage);
  double v10 = self;
  v3[10] = [v10 redColor];
  v3[11] = [v10 greenColor];
  self;
  uint64_t v11 = swift_dynamicCastObjCClass();
  if (v11)
  {
    v3[8] = a2;
    v3[9] = v11;
    id v12 = a1;
    id v13 = a2;
    uint64_t v14 = WorldAnchor.delegate.unsafeMutableAddressor();
    v16[3] = v6;
    v16[4] = &off_100494328;
    v16[0] = v3;
    swift_beginAccess();
    swift_retain();
    sub_100077F10((uint64_t)v16, v14);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

void sub_100077D98(void *a1, uint64_t a2)
{
  int v4 = self;
  id v5 = [v4 standardUserDefaults];
  unsigned __int8 v6 = [v5 kEdgeDetectionDebugReticleEnabled];

  if ((v6 & 1) == 0)
  {
    id v7 = [v4 standardUserDefaults];
    unsigned int v8 = [v7 showEDLines];

    if (!v8)
    {
      uint64_t v15 = 1;
      id v16 = *(void **)(a2 + 72);
      if (!v16) {
        return;
      }
      goto LABEL_7;
    }
  }
  if (!*(void *)(a2 + 72))
  {
    [a1 frame];
    id v13 = [objc_allocWithZone((Class)type metadata accessor for EdgeDetectorDebugView()) initWithFrame:v9, v10, v11, v12];
    uint64_t v14 = *(void **)(a2 + 72);
    *(void *)(a2 + 7sub_10004ACAC(3, 1, 2) = v13;

    if (!*(void *)(a2 + 72))
    {
      __break(1u);
      return;
    }
    [*(id *)(a2 + 16) addSubview:];
  }
  uint64_t v15 = 0;
  id v16 = *(void **)(a2 + 72);
  if (v16)
  {
LABEL_7:
    [v16 setHidden:v15];
  }
}

uint64_t sub_100077F10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894(&qword_1004C6D80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

char *sub_100077F7C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = qword_1004C6D88;
  uint64_t v5 = sub_100012894(&qword_1004C58E0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v7 = qword_1004C2E30;
  unsigned int v8 = v2;
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1004F8630;
  double v10 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 272);
  swift_retain();
  *(void *)&v2[v4] = v10(KeyPath, v9);
  uint64_t v11 = qword_1004C6D90;
  uint64_t v12 = sub_100012894(&qword_1004C6AA0);
  uint64_t v13 = swift_getKeyPath();
  uint64_t v14 = qword_1004F8630;
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 272);
  swift_retain();
  *(void *)&v8[v11] = v15(v13, v14);
  uint64_t v16 = qword_1004C6D98;
  uint64_t v17 = sub_100012894(&qword_1004C6F40);
  uint64_t v18 = swift_getKeyPath();
  uint64_t v19 = qword_1004F8630;
  NSString v20 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 272);
  swift_retain();
  *(void *)&v8[v16] = v20(v18, v19);
  uint64_t v21 = qword_1004C6DA0;
  uint64_t v22 = sub_100012894(&qword_1004C3EF0);
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = qword_1004F8630;
  id v25 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 272);
  swift_retain();
  *(void *)&v8[v21] = v25(v23, v24);
  uint64_t v26 = qword_1004C6DA8;
  uint64_t v27 = sub_100012894(&qword_1004C3EE8);
  uint64_t v28 = swift_getKeyPath();
  uint64_t v29 = qword_1004F8630;
  NSString v30 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 272);
  swift_retain();
  *(void *)&v8[v26] = v30(v28, v29);
  uint64_t v31 = qword_1004C6DB0;
  uint64_t v32 = sub_100012894(&qword_1004C6F48);
  uint64_t v33 = swift_getKeyPath();
  uint64_t v34 = qword_1004F8630;
  double v35 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 272);
  swift_retain();
  *(void *)&v8[v31] = v35(v33, v34);
  *(void *)&v8[qword_1004C6DB8] = a1;
  v8[qword_1004C6DC0] = 1;
  id v36 = a1;

  v44.receiver = v8;
  v44.super_class = ObjectType;
  id v37 = [(char *)[super init]];
  id v38 = v37;
  uint64_t v39 = *(void **)&v37[qword_1004C6DB8];
  if (v39)
  {
    BOOL v40 = v37;
    id v41 = v39;
    sub_1000E3D40();
  }
  return v38;
}

void sub_10007827C(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  sub_1000782A4(a1);
}

void sub_1000782A4(uint64_t a1)
{
  uint64_t v3 = qword_1004C6D88;
  uint64_t v4 = sub_100012894(&qword_1004C58E0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = qword_1004C2E30;
  uint64_t v7 = v1;
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1004F8630;
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 272);
  swift_retain();
  *(void *)&v7[v3] = v9(KeyPath, v8);
  uint64_t v10 = qword_1004C6D90;
  uint64_t v11 = sub_100012894(&qword_1004C6AA0);
  uint64_t v12 = swift_getKeyPath();
  uint64_t v13 = qword_1004F8630;
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 272);
  swift_retain();
  *(void *)&v7[v10] = v14(v12, v13);
  uint64_t v15 = qword_1004C6D98;
  uint64_t v16 = sub_100012894(&qword_1004C6F40);
  uint64_t v17 = swift_getKeyPath();
  uint64_t v18 = qword_1004F8630;
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 272);
  swift_retain();
  *(void *)&v7[v15] = v19(v17, v18);
  uint64_t v20 = qword_1004C6DA0;
  uint64_t v21 = sub_100012894(&qword_1004C3EF0);
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = qword_1004F8630;
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 272);
  swift_retain();
  *(void *)&v7[v20] = v24(v22, v23);
  uint64_t v25 = qword_1004C6DA8;
  uint64_t v26 = sub_100012894(&qword_1004C3EE8);
  uint64_t v27 = swift_getKeyPath();
  uint64_t v28 = qword_1004F8630;
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 272);
  swift_retain();
  *(void *)&v7[v25] = v29(v27, v28);
  uint64_t v30 = qword_1004C6DB0;
  uint64_t v31 = sub_100012894(&qword_1004C6F48);
  uint64_t v32 = swift_getKeyPath();
  uint64_t v33 = qword_1004F8630;
  uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 272);
  swift_retain();
  *(void *)&v7[v30] = v34(v32, v33);
  *(void *)&v7[qword_1004C6DB8] = 0;
  v7[qword_1004C6DC0] = 0;

  sub_10002B8B4(a1, (uint64_t)v35);
  StateObservingNSObject.init(configuration:)();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100078580(uint64_t result)
{
  if (*(void *)(v1 + qword_1004C6DB8))
  {
    if (*(unsigned char *)(v1 + qword_1004C6DC0) == 1)
    {
      __chkstk_darwin(result);
      id v3 = v2;
      swift_retain();
      StateValue.ifUpdated(_:)();
      uint64_t v4 = swift_release();
      __chkstk_darwin(v4);
      swift_retain();
      StateValue.ifUpdated(_:)();
      uint64_t v5 = swift_release();
      __chkstk_darwin(v5);
      swift_retain();
      StateValue.ifUpdated(_:)();
      uint64_t v6 = swift_release();
      __chkstk_darwin(v6);
      swift_retain();
      StateValue.ifUpdated(_:)();
      uint64_t v7 = swift_release();
      __chkstk_darwin(v7);
      swift_retain();
      StateValue.ifUpdated(_:)();
      uint64_t v8 = swift_release();
      __chkstk_darwin(v8);
      swift_retain();
      StateValue.ifUpdated(_:)();

      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10007883C(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a2 + qword_1004CA150);
  uint64_t v3 = a1 + *(int *)(type metadata accessor for SessionState() + 20);
  v7[3] = type metadata accessor for ARCamera.TrackingState();
  uint64_t v4 = sub_100078D1C(v7);
  sub_1000491B8(v3, (uint64_t)v4);
  id v5 = v2;
  sub_1000E47CC(v5);

  return sub_100013218((uint64_t)v7);
}

uint64_t sub_1000788CC(char *a1, uint64_t a2)
{
  char v2 = *a1;
  char v3 = a1[1];
  char v4 = a1[2];
  char v5 = a1[3];
  char v6 = a1[4];
  uint64_t v7 = *(void **)(a2 + qword_1004CA168);
  uint64_t v11 = &type metadata for MeasureAppState;
  v10[0] = v2;
  v10[1] = v3;
  void v10[2] = v4;
  v10[3] = v5;
  v10[4] = v6;
  id v8 = v7;
  sub_1000E47CC(v8);

  return sub_100013218((uint64_t)v10);
}

uint64_t sub_100078954(unint64_t *a1, uint64_t a2)
{
  unint64_t v2 = *a1;
  char v3 = *(void **)(a2 + qword_1004CA180);
  v6[3] = &type metadata for MeasurementState;
  v6[0] = v2;
  id v4 = v3;
  sub_100078CF8(v2);
  sub_1000E47CC(v4);

  return sub_100013218((uint64_t)v6);
}

uint64_t sub_1000789D0(char *a1, uint64_t a2)
{
  char v2 = *a1;
  char v3 = *(void **)(a2 + qword_1004CA188);
  uint64_t v7 = &type metadata for InstrumentationState;
  v6[0] = v2;
  id v4 = v3;
  sub_1000E47CC(v4);

  return sub_100013218((uint64_t)v6);
}

void sub_100078A38()
{
}

void sub_100078A68()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(void **)(v0 + qword_1004C6DB8);
}

void sub_100078AF8(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  char v2 = *(void **)(a1 + qword_1004C6DB8);
}

uint64_t type metadata accessor for DebugStateController()
{
  uint64_t result = qword_1004C6DF0;
  if (!qword_1004C6DF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100078BE0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100078C44()
{
  return type metadata accessor for DebugStateController();
}

uint64_t sub_100078C54@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 40);
  return swift_retain();
}

uint64_t sub_100078C64@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 40);
  return swift_retain();
}

uint64_t sub_100078C80(uint64_t a1)
{
  return sub_10007883C(a1, *(void *)(v1 + 16));
}

uint64_t sub_100078C88(char *a1)
{
  return sub_1000788CC(a1, *(void *)(v1 + 16));
}

uint64_t sub_100078C90(unint64_t *a1)
{
  return sub_1000E4024(*a1);
}

uint64_t sub_100078CB8()
{
  return sub_1000E4590();
}

uint64_t sub_100078CE8(unint64_t *a1)
{
  return sub_100078954(a1, *(void *)(v1 + 16));
}

uint64_t sub_100078CF0(char *a1)
{
  return sub_1000789D0(a1, *(void *)(v1 + 16));
}

unint64_t sub_100078CF8(unint64_t result)
{
  unint64_t v1 = result >> 62;
  if (!(result >> 62)) {
    return (unint64_t)(id)result;
  }
  if (v1 == 2 || v1 == 1)
  {
    result &= 0x3FFFFFFFFFFFFFFFuLL;
    return (unint64_t)(id)result;
  }
  return result;
}

uint64_t *sub_100078D1C(uint64_t *a1)
{
  unint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_100078D80(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1000BE230((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_10007B63C(v5);
  *a1 = v2;
  return result;
}

BOOL sub_100078DEC(char *a1, char *a2)
{
  return qword_1003FB398[*a1] == qword_1003FB398[*a2];
}

Swift::Int sub_100078E10()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1003FB398[v1]);
  return Hasher._finalize()();
}

void sub_100078E60()
{
  Hasher._combine(_:)(qword_1003FB398[*v0]);
}

Swift::Int sub_100078E98()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1003FB398[v1]);
  return Hasher._finalize()();
}

uint64_t sub_100078EE4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10007CE24(*a1);
  *a2 = result;
  return result;
}

void sub_100078F10(void *a1@<X8>)
{
  *a1 = qword_1003FB398[*v1];
}

uint64_t sub_100078F28()
{
  uint64_t v1 = (uint64_t *)(v0 + qword_1004C6F60);
  swift_beginAccess();
  if (*(void *)(*v1 + 16))
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v1;
    uint64_t *v1 = 0x8000000000000000;
    sub_100012894(&qword_1004C7148);
    _NativeDictionary.removeAll(isUnique:)(isUniquelyReferenced_nonNull_native);
    uint64_t *v1 = v6;
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  uint64_t v3 = (uint64_t *)(v0 + qword_1004C6F68);
  swift_beginAccess();
  if (*(void *)(*v3 + 16))
  {
    char v4 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v7 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_100012894(&qword_1004C7140);
    _NativeDictionary.removeAll(isUnique:)(v4);
    *uint64_t v3 = v7;
    swift_bridgeObjectRelease();
  }
  uint64_t result = swift_endAccess();
  *(unsigned char *)(v0 + qword_1004C6F70) = 0;
  *(unsigned char *)(v0 + qword_1004C6F78) = 0;
  *(unsigned char *)(v0 + qword_1004C6F80) = 0;
  return result;
}

uint64_t sub_10007906C(uint64_t a1, void *a2)
{
  uint64_t v80 = a1;
  uint64_t v4 = type metadata accessor for String.Encoding();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v77 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v78 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t *)(v2 + qword_1004C6F60);
  swift_beginAccess();
  if (!*(void *)(*v14 + 16)) {
    return 0;
  }
  uint64_t v73 = v5;
  uint64_t v74 = v4;
  uint64_t v75 = v8;
  uint64_t v76 = v7;
  v81._uint64_t countAndFlagsBits = 0;
  v81._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(73);
  v15._uint64_t countAndFlagsBits = 0x6544202320202020;
  v15._object = (void *)0xEE00203A65636976;
  String.append(_:)(v15);
  uint64_t v16 = self;
  id v17 = [v16 currentDevice];
  id v18 = [v17 name];

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v79 = a2;
  uint64_t v20 = v19;
  uint64_t v22 = v21;

  v23._uint64_t countAndFlagsBits = v20;
  v23._object = v22;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24._uint64_t countAndFlagsBits = 8236;
  v24._object = (void *)0xE200000000000000;
  String.append(_:)(v24);
  id v25 = [v16 currentDevice];
  id v26 = [v25 model];

  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;

  v30._uint64_t countAndFlagsBits = v27;
  v30._object = v29;
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  v31._uint64_t countAndFlagsBits = 8236;
  v31._object = (void *)0xE200000000000000;
  String.append(_:)(v31);
  id v32 = [v16 currentDevice];
  id v33 = [v32 systemName];

  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v36 = v35;

  v37._uint64_t countAndFlagsBits = v34;
  v37._object = v36;
  String.append(_:)(v37);
  swift_bridgeObjectRelease();
  v38._uint64_t countAndFlagsBits = 8236;
  v38._object = (void *)0xE200000000000000;
  String.append(_:)(v38);
  id v39 = [v16 currentDevice];
  id v40 = [v39 systemVersion];

  uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v43 = v42;

  v44._uint64_t countAndFlagsBits = v41;
  v44._object = v43;
  String.append(_:)(v44);
  swift_bridgeObjectRelease();
  v45._uint64_t countAndFlagsBits = 8236;
  v45._object = (void *)0xE200000000000000;
  String.append(_:)(v45);
  id v46 = [v16 currentDevice];
  [v46 batteryLevel];

  Float.write<A>(to:)();
  v47._uint64_t countAndFlagsBits = 0x442023202020200ALL;
  v47._object = (void *)0xED0000203A657461;
  String.append(_:)(v47);
  Date.init()();
  sub_10007D1D4(&qword_1004C7118, (void (*)(uint64_t))&type metadata accessor for Date);
  v48._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v48);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v49._uint64_t countAndFlagsBits = 0x4F2023202020200ALL;
  v49._object = (void *)0xEF203A6E69676972;
  String.append(_:)(v49);
  v50._uint64_t countAndFlagsBits = v80;
  v50._object = v79;
  String.append(_:)(v50);
  v51._uint64_t countAndFlagsBits = 0x202020200A0ALL;
  v51._object = (void *)0xE600000000000000;
  String.append(_:)(v51);
  v52._uint64_t countAndFlagsBits = 0xD000000000000035;
  v52._object = (void *)0x8000000100422A50;
  String.append(_:)(v52);
  v53._uint64_t countAndFlagsBits = 10;
  v53._object = (void *)0xE100000000000000;
  String.append(_:)(v53);
  uint64_t countAndFlagsBits = v81._countAndFlagsBits;
  object = v81._object;
  Swift::String v82 = v81;
  uint64_t v56 = *v14;
  swift_bridgeObjectRetain_n();
  id v57 = sub_10007C1C8(v56);
  swift_bridgeObjectRelease();
  v81._uint64_t countAndFlagsBits = (uint64_t)v57;
  sub_100078D80((char **)&v81);
  swift_bridgeObjectRelease();
  uint64_t v58 = v81._countAndFlagsBits;
  uint64_t v59 = *(void *)(v81._countAndFlagsBits + 16);
  uint64_t v60 = v73;
  if (v59)
  {
    for (uint64_t i = 0; i != v59; ++i)
    {
      uint64_t v62 = *(void *)(v58 + 8 * i + 32);
      swift_beginAccess();
      uint64_t v63 = *v14;
      if (*(void *)(*v14 + 16) && (uint64_t v64 = sub_1000E3D3C(v62), (v65 & 1) != 0))
      {
        id v66 = *(void **)(*(void *)(v63 + 56) + 8 * v64);
        swift_endAccess();
        id v67 = v66;
        v81._uint64_t countAndFlagsBits = sub_10017EB70();
        v81._object = v68;
        swift_bridgeObjectRetain();
        v69._uint64_t countAndFlagsBits = 10;
        v69._object = (void *)0xE100000000000000;
        String.append(_:)(v69);
        swift_bridgeObjectRelease();
        String.append(contentsOf:)(v81);

        swift_bridgeObjectRelease();
      }
      else
      {
        swift_endAccess();
      }
    }
    swift_release();
    uint64_t countAndFlagsBits = v82._countAndFlagsBits;
    object = v82._object;
  }
  else
  {
    swift_release();
  }
  id v71 = v78;
  URL.init(fileURLWithPath:)();
  v81._uint64_t countAndFlagsBits = countAndFlagsBits;
  v81._object = object;
  swift_bridgeObjectRetain();
  NSString v72 = v77;
  static String.Encoding.utf8.getter();
  sub_10007CEE0();
  StringProtocol.write(to:atomically:encoding:)();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v72, v74);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v71, v76);
  swift_bridgeObjectRelease();
  return 1;
}

void sub_100079908(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  sub_100016F7C((uint64_t)__dst);
  if (a4) {
    double v10 = 0.0;
  }
  else {
    double v10 = *(double *)&a3;
  }
  if (a4) {
    double v11 = 0.0;
  }
  else {
    double v11 = *(double *)&a2;
  }
  uint64_t v12 = __dst[0];
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(__src, v20, sizeof(__src));
  sub_100016F7C((uint64_t)__src);
  uint64_t v13 = __src[1];
  uint64_t v14 = (objc_class *)type metadata accessor for FrameEvent();
  Swift::String v15 = objc_allocWithZone(v14);
  v15[OBJC_IVAR____TtC7Measure10FrameEvent_replayed] = 0;
  *(void *)&v15[OBJC_IVAR____TtC7Measure10FrameEvent_index] = v12;
  v15[OBJC_IVAR____TtC7Measure10FrameEvent_button] = a1;
  uint64_t v16 = (double *)&v15[OBJC_IVAR____TtC7Measure10FrameEvent_position];
  double *v16 = v11;
  v16[1] = v10;
  *(void *)&v15[OBJC_IVAR____TtC7Measure10FrameEvent_timestamp] = v13;
  v19.receiver = v15;
  v19.super_class = v14;
  id v17 = [super init];
  sub_100079ACC(v17);
  id v18 = *(void **)(v5 + qword_1004C6F90);
  if (v18)
  {
    if ([(id)swift_unknownObjectRetain() expectCustomData]) {
      [v18 recordCustomData:v17 forTimestamp:*(double *)&v17[OBJC_IVAR____TtC7Measure10FrameEvent_timestamp]];
    }
    swift_unknownObjectRelease();
  }
}

uint64_t sub_100079ACC(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)&a1[OBJC_IVAR____TtC7Measure10FrameEvent_index];
  uint64_t v5 = (uint64_t *)(v2 + qword_1004C6F60);
  swift_beginAccess();
  uint64_t v6 = a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v5;
  uint64_t *v5 = 0x8000000000000000;
  sub_1000D5334((uint64_t)v6, v4, isUniquelyReferenced_nonNull_native);
  uint64_t *v5 = v13;
  swift_bridgeObjectRelease();
  swift_endAccess();
  double v8 = *(double *)&v6[OBJC_IVAR____TtC7Measure10FrameEvent_timestamp];
  uint64_t v9 = (uint64_t *)(v2 + qword_1004C6F68);
  swift_beginAccess();
  double v10 = v6;
  char v11 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *v9;
  uint64_t *v9 = 0x8000000000000000;
  sub_1000D51FC((uint64_t)v10, v11, v8);
  uint64_t *v9 = v14;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_100079C04()
{
  uint64_t v1 = v0;
  uint64_t v32 = type metadata accessor for CharacterSet();
  uint64_t v2 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v5 - 8);
  id v6 = [self defaultManager];
  NSString v7 = String._bridgeToObjectiveC()();
  unsigned int v8 = [v6 fileExistsAtPath:v7];

  if (!v8) {
    return 0;
  }
  sub_100078F28();
  static String.Encoding.utf8.getter();
  uint64_t v33 = String.init(contentsOfFile:encoding:)();
  uint64_t v34 = v10;
  uint64_t v35 = 10;
  unint64_t v36 = 0xE100000000000000;
  sub_10007CEE0();
  uint64_t v11 = StringProtocol.components<A>(separatedBy:)();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(v1 + qword_1004C6F60);
    uint64_t v14 = (uint64_t *)(v1 + qword_1004C6F68);
    Swift::String v15 = (void (**)(char *, uint64_t))(v2 + 8);
    v31[1] = v11;
    uint64_t v16 = (uint64_t *)(v11 + 40);
    do
    {
      uint64_t v17 = *v16;
      uint64_t v33 = *(v16 - 1);
      uint64_t v34 = v17;
      swift_bridgeObjectRetain();
      static CharacterSet.whitespaces.getter();
      uint64_t v18 = StringProtocol.trimmingCharacters(in:)();
      unint64_t v20 = v19;
      (*v15)(v4, v32);
      swift_bridgeObjectRelease();
      uint64_t v21 = HIBYTE(v20) & 0xF;
      if ((v20 & 0x2000000000000000) == 0) {
        uint64_t v21 = v18 & 0xFFFFFFFFFFFFLL;
      }
      if (!v21
        || (v22._uint64_t countAndFlagsBits = 35, v22._object = (void *)0xE100000000000000, String.hasPrefix(_:)(v22)))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        Swift::String v23 = (char *)sub_100180178(v18, v20);
        if (v23)
        {
          Swift::String v24 = v23;
          uint64_t v25 = *(void *)&v23[OBJC_IVAR____TtC7Measure10FrameEvent_index];
          swift_beginAccess();
          id v26 = v24;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v35 = *v13;
          uint64_t *v13 = 0x8000000000000000;
          sub_1000D5334((uint64_t)v26, v25, isUniquelyReferenced_nonNull_native);
          uint64_t *v13 = v35;
          swift_bridgeObjectRelease();
          swift_endAccess();
          double v28 = *(double *)&v26[OBJC_IVAR____TtC7Measure10FrameEvent_timestamp];
          swift_beginAccess();
          uint64_t v29 = v26;
          char v30 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v35 = *v14;
          *uint64_t v14 = 0x8000000000000000;
          sub_1000D51FC((uint64_t)v29, v30, v28);
          *uint64_t v14 = v35;
          swift_bridgeObjectRelease();
          swift_endAccess();
        }
      }
      v16 += 2;
      --v12;
    }
    while (v12);
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_10007A0F0()
{
  return swift_release();
}

void sub_10007A154(void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  id v1 = (id)sub_1000A3850();
  sub_10007A1C8(v1, __dst[0] == 1);
}

void sub_10007A1C8(void *a1, char a2)
{
  if (!a1) {
    return;
  }
  uint64_t v3 = v2;
  if (*(unsigned char *)(v3 + qword_1004C6F78) != 1)
  {
    if (*(unsigned char *)(v3 + qword_1004C6F80) != 1) {
      return;
    }
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      return;
    }
    uint64_t v10 = (void *)Strong;
    id v11 = a1;
    if (a2)
    {
      id v12 = [v10 customDataClasses];
      uint64_t v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v14 = *(void *)(v13 + 16);
      swift_bridgeObjectRelease();
      if (v14)
      {
        [v11 timestamp];
        if (objc_msgSend(v10, "customDataForTimestamp:"))
        {
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v20, 0, sizeof(v20));
        }
        sub_10007CF44((uint64_t)v20, (uint64_t)&v21);
        if (v22)
        {
          type metadata accessor for MetaData();
          if (swift_dynamicCast())
          {
            if (qword_1004C2B00 != -1) {
              swift_once();
            }
            v21._uint64_t countAndFlagsBits = 0;
            v21._object = (void *)0xE000000000000000;
            _StringGuts.grow(_:)(48);
            swift_bridgeObjectRelease();
            v21._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
            v21._object = (void *)0x8000000100422B00;
            v15._uint64_t countAndFlagsBits = sub_100096C94();
            String.append(_:)(v15);
            swift_bridgeObjectRelease();
            v16._uint64_t countAndFlagsBits = 46;
            v16._object = (void *)0xE100000000000000;
            String.append(_:)(v16);
            Log.debug(_:isPrivate:)(v21, 0);

            swift_bridgeObjectRelease();
            goto LABEL_27;
          }
        }
        else
        {
          sub_10001C9D8((uint64_t)&v21);
        }
        if (qword_1004C2B00 != -1) {
          swift_once();
        }
        v17._object = (void *)0x8000000100422AD0;
        v17._uint64_t countAndFlagsBits = 0xD000000000000023;
        Log.error(_:isPrivate:)(v17, 0);
      }
    }
LABEL_27:
    sub_10007ADE4();
    swift_unknownObjectRelease();

    return;
  }
  if (a2)
  {
    id v6 = *(void **)(v3 + qword_1004C6F90);
    if (v6)
    {
      id v18 = a1;
      if ([(id)swift_unknownObjectRetain() expectCustomData])
      {
        id v7 = objc_allocWithZone((Class)type metadata accessor for MetaData());
        id v8 = sub_100096DB4(0, 0, 0, 0);
        [v18 timestamp];
        [v6 recordCustomData:v8];
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
}

uint64_t sub_10007A55C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a3)
  {
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;
    if (a4) {
      goto LABEL_3;
    }
LABEL_6:
    memset(v16, 0, sizeof(v16));
    id v13 = a5;
    id v14 = a1;
    if (!a5) {
      goto LABEL_7;
    }
    goto LABEL_4;
  }
  uint64_t v8 = 0;
  uint64_t v10 = 0;
  if (!a4) {
    goto LABEL_6;
  }
LABEL_3:
  swift_unknownObjectRetain();
  id v11 = a5;
  id v12 = a1;
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  if (a5)
  {
LABEL_4:
    type metadata accessor for NSKeyValueChangeKey(0);
    sub_10007D1D4((unint64_t *)&qword_1004CA040, type metadata accessor for NSKeyValueChangeKey);
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
LABEL_7:
  sub_10007CFAC(v8, v10);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_10001C9D8((uint64_t)v16);
}

uint64_t sub_10007A694(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return sub_10007A6C8(a1);
}

uint64_t sub_10007A6C8(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  uint64_t v4 = qword_1004C6F50;
  uint64_t v5 = sub_100012894(&qword_1004C7170);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v7 = qword_1004C2E30;
  uint64_t v8 = v2;
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1004F8630;
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 272);
  swift_retain();
  *(void *)&v8[v4] = v10(KeyPath, v9);
  uint64_t v11 = qword_1004C6F58;
  sub_100012894(&qword_1004C7178);
  swift_getKeyPath();
  *(void *)&v8[v11] = MutableStateValue.__allocating_init(_:_:)();
  *(void *)&v8[qword_1004C6F60] = _swiftEmptyDictionarySingleton;
  *(void *)&v8[qword_1004C6F68] = _swiftEmptyDictionarySingleton;
  v8[qword_1004C6F70] = 0;
  v8[qword_1004C6F78] = 0;
  v8[qword_1004C6F80] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v8[qword_1004C6F90] = 0;

  sub_10002B8B4(a1, (uint64_t)v14);
  uint64_t v12 = StateObservingNSObject.init(configuration:)();
  sub_100013218(a1);
  return v12;
}

id sub_10007A870()
{
  id v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = qword_1004C6F50;
  uint64_t v4 = sub_100012894(&qword_1004C7170);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = qword_1004C2E30;
  uint64_t v7 = v1;
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1004F8630;
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 272);
  swift_retain();
  *(void *)&v7[v3] = v9(KeyPath, v8);
  uint64_t v10 = qword_1004C6F58;
  sub_100012894(&qword_1004C7178);
  swift_getKeyPath();
  *(void *)&v7[v10] = MutableStateValue.__allocating_init(_:_:)();
  *(void *)&v7[qword_1004C6F60] = _swiftEmptyDictionarySingleton;
  *(void *)&v7[qword_1004C6F68] = _swiftEmptyDictionarySingleton;
  v7[qword_1004C6F70] = 0;
  v7[qword_1004C6F78] = 0;
  v7[qword_1004C6F80] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v7[qword_1004C6F90] = 0;

  v12.receiver = v7;
  v12.super_class = ObjectType;
  return [super init];
}

id sub_10007A9F8()
{
  return sub_10007A870();
}

uint64_t sub_10007AA1C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001FE1C(v0 + qword_1004C6F88);

  return swift_unknownObjectRelease();
}

uint64_t sub_10007AA9C(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001FE1C(a1 + qword_1004C6F88);

  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for EventsRecorder()
{
  uint64_t result = qword_1004C6FC0;
  if (!qword_1004C6FC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10007AB74()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10007ABF0()
{
  return type metadata accessor for EventsRecorder();
}

uint64_t getEnumTagSinglePayload for EventButton(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EventButton(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    void *result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_10004ACAC(2, 1, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007AD54);
      case 4:
        *(_DWORD *)(result + sub_10004ACAC(2, 1, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_10004ACAC(2, 1, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_10004ACAC(2, 1, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventButton()
{
  return &type metadata for EventButton;
}

unint64_t sub_10007AD90()
{
  unint64_t result = qword_1004C7110;
  if (!qword_1004C7110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C7110);
  }
  return result;
}

void sub_10007ADE4()
{
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  id v1 = (void *)sub_1000A3850();
  sub_100016F7C((uint64_t)__dst);
  if (v1)
  {
    [v1 timestamp];
    double v3 = v2;
    swift_retain();
    StateValue.wrappedValue.getter();
    swift_release();
    memcpy(__src, v8, sizeof(__src));
    sub_100016F7C((uint64_t)__src);
    uint64_t v4 = sub_10007AF64(__src[0], v3);
    if (v4 == 10)
    {
    }
    else
    {
      unint64_t v5 = v4;
      unsigned int v6 = *(uint64_t (**)(unsigned char *))(**(void **)(v0 + qword_1004C6F58) + 400);
      swift_retain();
      BOOL v7 = (void (*)(unsigned char *, void))v6(v8);
      sub_1000A4FD8(v5);
      v7(v8, 0);

      swift_release();
    }
  }
}

uint64_t sub_10007AF64(uint64_t a1, double a2)
{
  double v2 = (char *)sub_10007AFD0(a1, a2);
  if (!v2) {
    return 10;
  }
  if (v2[OBJC_IVAR____TtC7Measure10FrameEvent_replayed])
  {

    return 10;
  }
  v2[OBJC_IVAR____TtC7Measure10FrameEvent_replayed] = 1;
  uint64_t v4 = v2[OBJC_IVAR____TtC7Measure10FrameEvent_button];

  return byte_1003FB3E8[v4];
}

void *sub_10007AFD0(uint64_t a1, double a2)
{
  uint64_t v3 = v2;
  unsigned int v6 = (uint64_t *)(v2 + qword_1004C6F68);
  swift_beginAccess();
  uint64_t v7 = *v6;
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1000E237C(a2), (v9 & 1) != 0)
    || (swift_endAccess(), v10 = (uint64_t *)(v3 + qword_1004C6F60), swift_beginAccess(), uint64_t v7 = *v10, *(void *)(v7 + 16))
    && (unint64_t v8 = sub_1000E3D3C(a1), (v11 & 1) != 0))
  {
    objc_super v12 = *(void **)(*(void *)(v7 + 56) + 8 * v8);
    swift_endAccess();
    id v13 = v12;
    return v12;
  }
  swift_endAccess();
  if (*(unsigned char *)(v3 + qword_1004C6F70) != 1) {
    return 0;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  objc_super v12 = Strong;
  if (!Strong) {
    return v12;
  }
  id v15 = [Strong customDataClasses];
  uint64_t v16 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v17 = *(void *)(v16 + 16);
  swift_bridgeObjectRelease();
  if (!v17)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  if ([v12 customDataForTimestamp:a2])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    memset(v20, 0, sizeof(v20));
  }
  sub_10007CF44((uint64_t)v20, (uint64_t)v21);
  if (!v22)
  {
    sub_10001C9D8((uint64_t)v21);
    return 0;
  }
  type metadata accessor for FrameEvent();
  if (swift_dynamicCast()) {
    return (void *)v19;
  }
  else {
    return 0;
  }
}

void *sub_10007B1D4(void *result, void *a2, uint64_t a3, id a4, uint64_t a5)
{
  uint64_t v7 = result;
  if (!a2)
  {
LABEL_8:
    uint64_t v8 = 0;
    goto LABEL_9;
  }
  uint64_t v8 = a3;
  if (!a3)
  {
LABEL_9:
    void *v7 = a4;
    v7[1] = a5;
    uint64_t v7[2] = v8;
    return (void *)v8;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if ([a4 getPointCountAtContourIndex:a5])
    {
      [a4 getPointAtContourIndex:a5 pointIndex:0];
      *a2 = v10;
      a2[1] = v11;
      if (v8 != 1)
      {
        if ([a4 getPointCountAtContourIndex:a5] == (id)1)
        {
          uint64_t v8 = 1;
        }
        else
        {
          [a4 getPointAtContourIndex:a5 pointIndex:1];
          a2[2] = v12;
          a2[3] = v13;
          if (v8 != 2)
          {
            if ([a4 getPointCountAtContourIndex:a5] == (id)2)
            {
              uint64_t v8 = 2;
            }
            else
            {
              id v14 = a2 + 4;
              uint64_t v15 = 3;
              while (1)
              {
                [a4 getPointAtContourIndex:a5 pointIndex:v15 - 1];
                *id v14 = v16;
                v14[1] = v17;
                if (v8 == v15) {
                  break;
                }
                uint64_t v18 = v15 + 1;
                v14 += 2;
                if (v15++ == (void)[a4 getPointCountAtContourIndex:a5])
                {
                  uint64_t v8 = v18 - 1;
                  goto LABEL_9;
                }
              }
            }
          }
        }
      }
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void *sub_10007B334(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  if (!a2)
  {
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_9;
  }
  uint64_t v5 = a3;
  if (!a3)
  {
LABEL_9:
    *uint64_t v4 = v3;
    v4[1] = v5;
    return (void *)v5;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if ([v3 getCornerCount])
    {
      [v3 getCornerAtIndex:0];
      *(_OWORD *)a2 = v11;
      *(_DWORD *)(a2 + 16) = v12;
      if (v5 != 1)
      {
        if ([v3 getCornerCount] == (id)1)
        {
          uint64_t v5 = 1;
        }
        else
        {
          [v3 getCornerAtIndex:1];
          *(_OWORD *)(a2 + 24) = v11;
          *(_DWORD *)(a2 + 40) = v12;
          if (v5 != 2)
          {
            if ([v3 getCornerCount] == (id)2)
            {
              uint64_t v5 = 2;
            }
            else
            {
              uint64_t v7 = a2 + 48;
              uint64_t v8 = 3;
              while (1)
              {
                [v3 getCornerAtIndex:v8 - 1];
                *(_OWORD *)uint64_t v7 = v11;
                *(_DWORD *)(v7 + 16) = v12;
                if (v5 == v8) {
                  break;
                }
                uint64_t v9 = v8 + 1;
                v7 += 24;
                if (v8++ == (void)[v3 getCornerCount])
                {
                  uint64_t v5 = v9 - 1;
                  goto LABEL_9;
                }
              }
            }
          }
        }
      }
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void *sub_10007B49C(void *result, void *a2, uint64_t a3)
{
  uint64_t v4 = result;
  if (!a2) {
    goto LABEL_7;
  }
  uint64_t v5 = a3;
  if (!a3) {
    goto LABEL_8;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if ([v3 getContourCount])
    {
      *a2 = v3;
      a2[1] = 0;
      if (v5 != 1)
      {
        id v8 = v3;
        if ([v8 getContourCount] == (id)1)
        {
          uint64_t v5 = 1;
          goto LABEL_8;
        }
        a2[2] = v8;
        a2[3] = 1;
        if (v5 != 2)
        {
          id v9 = v8;
          if ([v9 getContourCount] == (id)2)
          {
            uint64_t v5 = 2;
            goto LABEL_8;
          }
          uint64_t v10 = a2 + 4;
          uint64_t v11 = 3;
          while (1)
          {
            void *v10 = v9;
            v10[1] = v11 - 1;
            if (v5 == v11) {
              break;
            }
            uint64_t v12 = v11 + 1;
            v10 += 2;
            if (v11++ == (void)[v9 getContourCount])
            {
              uint64_t v5 = v12 - 1;
              goto LABEL_8;
            }
          }
        }
      }
      id v7 = v3;
LABEL_8:
      *uint64_t v4 = v3;
      v4[1] = v5;
      return (void *)v5;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_10007B5B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    BOOL v7 = 0;
    a3 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
    BOOL v7 = 0;
LABEL_14:
    uint64_t v8 = a4;
LABEL_15:
    *(void *)unint64_t result = a4;
    *(void *)(result + 8) = a5;
    *(void *)(result + 16) = v8;
    *(unsigned char *)(result + 24) = v7;
    return a3;
  }
  if (a3 < 0) {
    goto LABEL_17;
  }
  uint64_t v5 = 0;
  uint64_t v6 = a4;
  while (1)
  {
    BOOL v7 = v6 == a5;
    if (v6 != a5) {
      break;
    }
    uint64_t v8 = 0;
LABEL_8:
    *(void *)(a2 + 8 * v5) = v6;
    if (a3 - 1 == v5) {
      goto LABEL_15;
    }
    ++v5;
    BOOL v9 = v6 == a5;
    uint64_t v6 = v8;
    if (v9)
    {
      BOOL v7 = 1;
      a3 = v5;
      goto LABEL_15;
    }
  }
  uint64_t v8 = v6 + 1;
  if (!__OFADD__(v6, 1)) {
    goto LABEL_8;
  }
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_10007B63C(void *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v76 = 0;
      uint64_t v77 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        unint64_t v79 = *(void *)(v77 + 8 * i);
        uint64_t v80 = v76;
        do
        {
          unint64_t v81 = *(void *)(v77 + v80);
          if (v79 >= v81) {
            break;
          }
          if (!v77) {
            goto LABEL_142;
          }
          *(void *)(v77 + v80 + 8) = v81;
          *(void *)(v77 + v80) = v79;
          v80 -= 8;
        }
        while (v80 != -8);
        v76 += 8;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_137;
    }
    uint64_t v93 = result;
    Swift::Int v94 = v3;
    if (v3 > 1)
    {
      uint64_t v6 = v5 >> 1;
      uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
      *(void *)(result + 16) = v6;
      Swift::Int v3 = v94;
      Swift::String v92 = (void *)result;
      float v96 = (char *)(result + 32);
LABEL_13:
      Swift::Int v8 = 0;
      uint64_t v9 = *v2;
      double v90 = v2;
      uint64_t v91 = *v2 - 8;
      uint64_t v10 = (char *)_swiftEmptyArrayStorage;
      uint64_t v95 = *v2;
      while (1)
      {
        Swift::Int v12 = v8++;
        if (v8 < v3)
        {
          unint64_t v13 = *(void *)(v9 + 8 * v8);
          unint64_t v14 = *(void *)(v9 + 8 * v12);
          Swift::Int v8 = v12 + 2;
          if (v12 + 2 < v3)
          {
            unint64_t v15 = v13;
            while (1)
            {
              unint64_t v16 = *(void *)(v9 + 8 * v8);
              if (v13 < v14 == v16 >= v15) {
                break;
              }
              ++v8;
              unint64_t v15 = v16;
              if (v3 == v8)
              {
                Swift::Int v8 = v3;
                break;
              }
            }
          }
          if (v13 < v14)
          {
            if (v8 < v12) {
              goto LABEL_139;
            }
            if (v12 < v8)
            {
              Swift::Int v17 = v8 - 1;
              Swift::Int v18 = v12;
              do
              {
                if (v18 != v17)
                {
                  if (!v9) {
                    goto LABEL_145;
                  }
                  uint64_t v19 = *(void *)(v9 + 8 * v18);
                  *(void *)(v9 + 8 * v18) = *(void *)(v9 + 8 * v17);
                  *(void *)(v9 + 8 * v17) = v19;
                }
                BOOL v58 = ++v18 < v17--;
              }
              while (v58);
            }
          }
        }
        if (v8 < v3)
        {
          if (__OFSUB__(v8, v12)) {
            goto LABEL_136;
          }
          if (v8 - v12 < v93)
          {
            Swift::Int v20 = v12 + v93;
            if (__OFADD__(v12, v93)) {
              goto LABEL_140;
            }
            if (v20 >= v3) {
              Swift::Int v20 = v3;
            }
            if (v20 < v12)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v8 != v20)
            {
              Swift::String v21 = (unint64_t *)(v91 + 8 * v8);
              do
              {
                unint64_t v22 = *(void *)(v9 + 8 * v8);
                Swift::Int v23 = v12;
                Swift::String v24 = v21;
                do
                {
                  unint64_t v25 = *v24;
                  if (v22 >= *v24) {
                    break;
                  }
                  if (!v9) {
                    goto LABEL_143;
                  }
                  unint64_t *v24 = v22;
                  v24[1] = v25;
                  --v24;
                  ++v23;
                }
                while (v8 != v23);
                ++v8;
                ++v21;
              }
              while (v8 != v20);
              Swift::Int v8 = v20;
            }
          }
        }
        if (v8 < v12) {
          goto LABEL_131;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1000BE0E4(0, *((void *)v10 + 2) + 1, 1, v10);
          uint64_t v10 = (char *)result;
        }
        unint64_t v27 = *((void *)v10 + 2);
        unint64_t v26 = *((void *)v10 + 3);
        unint64_t v11 = v27 + 1;
        uint64_t v9 = v95;
        if (v27 >= v26 >> 1)
        {
          uint64_t result = (uint64_t)sub_1000BE0E4((char *)(v26 > 1), v27 + 1, 1, v10);
          uint64_t v9 = v95;
          uint64_t v10 = (char *)result;
        }
        *((void *)v10 + sub_10004ACAC(3, 1, 2) = v11;
        double v28 = v10 + 32;
        uint64_t v29 = &v10[16 * v27 + 32];
        *(void *)uint64_t v29 = v12;
        *((void *)v29 + sub_10004ACAC(2, 1, 1) = v8;
        if (v27)
        {
          while (1)
          {
            unint64_t v30 = v11 - 1;
            if (v11 >= 4)
            {
              uint64_t v35 = &v28[2 * v11];
              uint64_t v36 = *(v35 - 8);
              uint64_t v37 = *(v35 - 7);
              BOOL v41 = __OFSUB__(v37, v36);
              uint64_t v38 = v37 - v36;
              if (v41) {
                goto LABEL_120;
              }
              uint64_t v40 = *(v35 - 6);
              uint64_t v39 = *(v35 - 5);
              BOOL v41 = __OFSUB__(v39, v40);
              uint64_t v33 = v39 - v40;
              char v34 = v41;
              if (v41) {
                goto LABEL_121;
              }
              unint64_t v42 = v11 - 2;
              id v43 = &v28[2 * v11 - 4];
              uint64_t v45 = *v43;
              uint64_t v44 = v43[1];
              BOOL v41 = __OFSUB__(v44, v45);
              uint64_t v46 = v44 - v45;
              if (v41) {
                goto LABEL_122;
              }
              BOOL v41 = __OFADD__(v33, v46);
              uint64_t v47 = v33 + v46;
              if (v41) {
                goto LABEL_124;
              }
              if (v47 >= v38)
              {
                char v65 = &v28[2 * v30];
                uint64_t v67 = *v65;
                uint64_t v66 = v65[1];
                BOOL v41 = __OFSUB__(v66, v67);
                uint64_t v68 = v66 - v67;
                if (v41) {
                  goto LABEL_130;
                }
                BOOL v58 = v33 < v68;
                goto LABEL_84;
              }
            }
            else
            {
              if (v11 != 3)
              {
                uint64_t v59 = *((void *)v10 + 4);
                uint64_t v60 = *((void *)v10 + 5);
                BOOL v41 = __OFSUB__(v60, v59);
                uint64_t v52 = v60 - v59;
                char v53 = v41;
                goto LABEL_78;
              }
              uint64_t v32 = *((void *)v10 + 4);
              uint64_t v31 = *((void *)v10 + 5);
              BOOL v41 = __OFSUB__(v31, v32);
              uint64_t v33 = v31 - v32;
              char v34 = v41;
            }
            if (v34) {
              goto LABEL_123;
            }
            unint64_t v42 = v11 - 2;
            Swift::String v48 = &v28[2 * v11 - 4];
            uint64_t v50 = *v48;
            uint64_t v49 = v48[1];
            BOOL v51 = __OFSUB__(v49, v50);
            uint64_t v52 = v49 - v50;
            char v53 = v51;
            if (v51) {
              goto LABEL_125;
            }
            id v54 = &v28[2 * v30];
            uint64_t v56 = *v54;
            uint64_t v55 = v54[1];
            BOOL v41 = __OFSUB__(v55, v56);
            uint64_t v57 = v55 - v56;
            if (v41) {
              goto LABEL_127;
            }
            if (__OFADD__(v52, v57)) {
              goto LABEL_129;
            }
            if (v52 + v57 >= v33)
            {
              BOOL v58 = v33 < v57;
LABEL_84:
              if (v58) {
                unint64_t v30 = v42;
              }
              goto LABEL_86;
            }
LABEL_78:
            if (v53) {
              goto LABEL_126;
            }
            uint64_t v61 = &v28[2 * v30];
            uint64_t v63 = *v61;
            uint64_t v62 = v61[1];
            BOOL v41 = __OFSUB__(v62, v63);
            uint64_t v64 = v62 - v63;
            if (v41) {
              goto LABEL_128;
            }
            if (v64 < v52) {
              goto LABEL_15;
            }
LABEL_86:
            unint64_t v69 = v30 - 1;
            if (v30 - 1 >= v11)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v9) {
              goto LABEL_144;
            }
            SCNDebugOptions v70 = &v28[2 * v69];
            uint64_t v71 = *v70;
            NSString v72 = v28;
            uint64_t v73 = &v28[2 * v30];
            uint64_t v74 = v73[1];
            uint64_t result = sub_10007C464((char *)(v9 + 8 * *v70), (char *)(v9 + 8 * *v73), v9 + 8 * v74, v96);
            if (v1) {
              goto LABEL_114;
            }
            if (v74 < v71) {
              goto LABEL_117;
            }
            if (v30 > *((void *)v10 + 2)) {
              goto LABEL_118;
            }
            uint64_t *v70 = v71;
            v72[2 * v69 + 1] = v74;
            unint64_t v75 = *((void *)v10 + 2);
            if (v30 >= v75) {
              goto LABEL_119;
            }
            unint64_t v11 = v75 - 1;
            uint64_t result = (uint64_t)memmove(v73, v73 + 2, 16 * (v75 - 1 - v30));
            double v28 = v72;
            *((void *)v10 + sub_10004ACAC(3, 1, 2) = v75 - 1;
            uint64_t v9 = v95;
            if (v75 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v11 = 1;
LABEL_15:
        Swift::Int v3 = v94;
        if (v8 >= v94)
        {
          BOOL v7 = v92;
          uint64_t v2 = v90;
          goto LABEL_103;
        }
      }
    }
    BOOL v7 = _swiftEmptyArrayStorage;
    float v96 = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 == 1)
    {
      Swift::String v92 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    unint64_t v11 = _swiftEmptyArrayStorage[2];
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
    Swift::String v92 = v7;
    if (v11 >= 2)
    {
      uint64_t v82 = *v2;
      do
      {
        unint64_t v83 = v11 - 2;
        if (v11 < 2) {
          goto LABEL_132;
        }
        if (!v82) {
          goto LABEL_146;
        }
        uint64_t v84 = (uint64_t)v10;
        Swift::String v85 = v10 + 32;
        uint64_t v86 = *(void *)&v10[16 * v83 + 32];
        uint64_t v87 = *(void *)&v10[16 * v11 + 24];
        uint64_t result = sub_10007C464((char *)(v82 + 8 * v86), (char *)(v82 + 8 * v85[2 * v11 - 2]), v82 + 8 * v87, v96);
        if (v1) {
          break;
        }
        if (v87 < v86) {
          goto LABEL_133;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1000BE1E0(v84);
          uint64_t v84 = result;
        }
        if (v83 >= *(void *)(v84 + 16)) {
          goto LABEL_134;
        }
        CGFloat v88 = (void *)(v84 + 32 + 16 * v83);
        *CGFloat v88 = v86;
        v88[1] = v87;
        unint64_t v89 = *(void *)(v84 + 16);
        if (v11 > v89) {
          goto LABEL_135;
        }
        uint64_t result = (uint64_t)memmove((void *)(v84 + 32 + 16 * (v11 - 1)), (const void *)(v84 + 32 + 16 * v11), 16 * (v89 - v11));
        uint64_t v10 = (char *)v84;
        *(void *)(v84 + 16) = v89 - 1;
        unint64_t v11 = v89 - 1;
      }
      while (v89 > 2);
    }
LABEL_114:
    swift_bridgeObjectRelease();
    v92[2] = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10007BC84(void *a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t)[a1 getPointCountAtContourIndex:a2];
  uint64_t result = (uint64_t)[a1 getPointCountAtContourIndex:a2];
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = (uint64_t)[a1 getPointCountAtContourIndex:a2];
    if ((v4 & 0x8000000000000000) == 0 && result >= v4)
    {
      if (v4)
      {
        sub_100012894((uint64_t *)&unk_1004C71E0);
        uint64_t v6 = (void *)swift_allocObject();
        int64_t v7 = j__malloc_size(v6);
        uint64_t v8 = v7 - 32;
        if (v7 < 32) {
          uint64_t v8 = v7 - 17;
        }
        _OWORD v6[2] = v4;
        v6[3] = 2 * (v8 >> 4);
        uint64_t v9 = sub_10007B1D4(v10, v6 + 4, v4, a1, a2);

        if (v9 == (void *)v4) {
          return (uint64_t)v6;
        }
        __break(1u);
      }
      return (uint64_t)_swiftEmptyArrayStorage;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10007BD90(void *a1)
{
  uint64_t v2 = (uint64_t)[a1 getCornerCount];
  uint64_t result = (uint64_t)[a1 getCornerCount];
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = (uint64_t)[a1 getCornerCount];
    if ((v2 & 0x8000000000000000) == 0 && result >= v2)
    {
      if (v2)
      {
        sub_100012894(&qword_1004C71D0);
        uint64_t v4 = (void *)swift_allocObject();
        size_t v5 = j__malloc_size(v4);
        v4[2] = v2;
        v4[3] = 2 * ((uint64_t)(v5 - 32) / 24);
        id v6 = a1;
        int64_t v7 = sub_10007B334(v8, (uint64_t)(v4 + 4), v2);

        if (v7 == (void *)v2) {
          return (uint64_t)v4;
        }
        __break(1u);
      }
      return (uint64_t)_swiftEmptyArrayStorage;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10007BE90(void *a1)
{
  uint64_t v2 = (uint64_t)[a1 getContourCount];
  uint64_t result = (uint64_t)[a1 getContourCount];
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = (uint64_t)[a1 getContourCount];
    if ((v2 & 0x8000000000000000) == 0 && result >= v2)
    {
      if (v2)
      {
        sub_100012894(&qword_1004C71D8);
        uint64_t v4 = (void *)swift_allocObject();
        int64_t v5 = j__malloc_size(v4);
        uint64_t v6 = v5 - 32;
        if (v5 < 32) {
          uint64_t v6 = v5 - 17;
        }
        v4[2] = v2;
        v4[3] = 2 * (v6 >> 4);
        id v7 = a1;
        uint64_t v8 = sub_10007B49C(v9, v4 + 4, v2);

        if (v8 == (void *)v2) {
          return (uint64_t)v4;
        }
        __break(1u);
      }
      return (uint64_t)_swiftEmptyArrayStorage;
    }
  }
  __break(1u);
  return result;
}

void *sub_10007BF80(uint64_t a1)
{
  return sub_10007C060(a1, &qword_1004C7190, type metadata accessor for MetricsManager.PersonHeightMetric, type metadata accessor for MetricsManager.PersonHeightMetric, type metadata accessor for MetricsManager.PersonHeightMetric);
}

void *sub_10007BFB8(uint64_t a1)
{
  return sub_10007C060(a1, &qword_1004C7198, type metadata accessor for MetricsManager.VerticalGuideMetric, type metadata accessor for MetricsManager.VerticalGuideMetric, type metadata accessor for MetricsManager.VerticalGuideMetric);
}

void *sub_10007BFF0(uint64_t a1)
{
  return sub_10007C060(a1, &qword_1004C71A0, type metadata accessor for MetricsManager.SurfaceVectorGuideMetric, type metadata accessor for MetricsManager.SurfaceVectorGuideMetric, type metadata accessor for MetricsManager.SurfaceVectorGuideMetric);
}

void *sub_10007C028(uint64_t a1)
{
  return sub_10007C060(a1, &qword_1004C71A8, type metadata accessor for MetricsManager.EdgeGuideMetric, type metadata accessor for MetricsManager.EdgeGuideMetric, type metadata accessor for MetricsManager.EdgeGuideMetric);
}

void *sub_10007C060(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    return _swiftEmptyArrayStorage;
  }
  sub_100012894(a2);
  uint64_t v10 = *(void *)(a3(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  uint64_t result = (void *)j__malloc_size(v13);
  if (v11)
  {
    if ((void *)((char *)result - v12) != (void *)0x8000000000000000 || v11 != -1)
    {
      v13[2] = v5;
      v13[3] = 2 * ((uint64_t)((uint64_t)result - v12) / v11);
      uint64_t v16 = sub_10007C668(&v17, (uint64_t)v13 + v12, v5, a1, a4, a5);
      swift_bridgeObjectRetain();
      sub_100027948();
      if (v16 == v5) {
        return v13;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_10007C1C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100012894(&qword_1004C7138);
  Swift::Int v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  uint64_t v6 = sub_10007C970(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_100027948();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void sub_10007C2B0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_11:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      if (v4 != a3)
      {
LABEL_7:
        sub_100012894(&qword_1004C71B0);
        swift_arrayInitWithCopy();
        return;
      }
    }
    else
    {
      sub_100012894(&qword_1004C71B8);
      id v7 = (void *)swift_allocObject();
      int64_t v8 = j__malloc_size(v7);
      uint64_t v9 = v8 - 32;
      if (v8 < 32) {
        uint64_t v9 = v8 - 1;
      }
      uint64_t v7[2] = v5;
      v7[3] = 2 * (v9 >> 5);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
    goto LABEL_11;
  }
}

void *sub_10007C390(void *result, uint64_t a2)
{
  uint64_t v2 = a2 - (void)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v3 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v2 == -1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v5 = (uint64_t)result;
  if (v3 <= 0)
  {
    uint64_t v6 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_100012894((uint64_t *)&unk_1004C71C0);
    uint64_t v6 = (void *)swift_allocObject();
    int64_t v7 = j__malloc_size(v6);
    uint64_t v8 = v7 - 32;
    if (v7 < 32) {
      uint64_t v8 = v7 - 25;
    }
    _OWORD v6[2] = v3;
    v6[3] = 2 * (v8 >> 3);
  }
  uint64_t result = (void *)sub_10007B5B0((uint64_t)&v9, (uint64_t)(v6 + 4), v3, v5, a2);
  if (result == (void *)v3) {
    return v6;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_10007C464(char *__dst, char *__src, unint64_t a3, char *a4)
{
  unint64_t v4 = a4;
  uint64_t v6 = __src;
  int64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 7;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 3;
  if (v10 >= v12 >> 3)
  {
    if (a4 != __src || &__src[8 * v13] <= a4) {
      memmove(a4, __src, 8 * v13);
    }
    unint64_t v14 = &v4[8 * v13];
    if (v7 >= v6 || v11 < 8) {
      goto LABEL_39;
    }
    uint64_t v17 = (char *)(a3 - 8);
    Swift::Int v18 = v6;
    while (1)
    {
      uint64_t v19 = v17 + 8;
      unint64_t v21 = *((void *)v18 - 1);
      v18 -= 8;
      unint64_t v20 = v21;
      if (*((void *)v14 - 1) < v21) {
        break;
      }
      unint64_t v20 = *((void *)v14 - 1);
      Swift::Int v18 = v6;
      if (v19 != v14)
      {
        v14 -= 8;
LABEL_35:
        *(void *)uint64_t v17 = v20;
        goto LABEL_36;
      }
      BOOL v22 = v17 >= v14;
      v14 -= 8;
      if (v22) {
        goto LABEL_35;
      }
LABEL_36:
      if (v18 > v7)
      {
        v17 -= 8;
        uint64_t v6 = v18;
        if (v14 > v4) {
          continue;
        }
      }
      uint64_t v6 = v18;
      goto LABEL_39;
    }
    if (v19 == v6 && v17 < v6) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (a4 != __dst || &__dst[8 * v10] <= a4) {
    memmove(a4, __dst, 8 * v10);
  }
  unint64_t v14 = &v4[8 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      uint64_t v15 = *(void *)v6;
      if (*(void *)v6 >= *(void *)v4) {
        break;
      }
      BOOL v16 = v7 == v6;
      v6 += 8;
      if (!v16) {
        goto LABEL_16;
      }
LABEL_17:
      v7 += 8;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_19;
      }
    }
    uint64_t v15 = *(void *)v4;
    BOOL v16 = v7 == v4;
    v4 += 8;
    if (v16) {
      goto LABEL_17;
    }
LABEL_16:
    *(void *)int64_t v7 = v15;
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v6 = v7;
LABEL_39:
  int64_t v23 = v14 - v4 + (v14 - v4 < 0 ? 7uLL : 0);
  if (v6 != v4 || v6 >= &v4[v23 & 0xFFFFFFFFFFFFFFF8]) {
    memmove(v6, v4, 8 * (v23 >> 3));
  }
  return 1;
}

uint64_t sub_10007C668(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v11 = a5(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11 - 8);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v13);
  Swift::Int v18 = (char *)&v32 - v17;
  uint64_t v37 = a4;
  uint64_t v20 = a4 + 64;
  uint64_t v19 = *(void *)(a4 + 64);
  uint64_t v34 = -1 << *(unsigned char *)(a4 + 32);
  if (-v34 < 64) {
    uint64_t v21 = ~(-1 << -(char)v34);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v22 = v21 & v19;
  if (!a2)
  {
    int64_t v23 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v31 = ~v34;
    *a1 = v37;
    a1[1] = v20;
    a1[2] = v31;
    a1[3] = v23;
    a1[4] = v22;
    return a3;
  }
  if (!a3)
  {
    int64_t v23 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v33 = a1;
  int64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v35 = v20;
  int64_t v36 = (unint64_t)(63 - v34) >> 6;
  int64_t v32 = v36 - 1;
  if (!v22) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  unint64_t v26 = v25 | (v23 << 6);
  while (1)
  {
    ++v24;
    uint64_t v30 = *(void *)(v12 + 72);
    sub_10007D21C(*(void *)(v37 + 56) + v30 * v26, (uint64_t)v15, a6);
    sub_10007D284((uint64_t)v15, (uint64_t)v18, a6);
    uint64_t result = sub_10007D284((uint64_t)v18, a2, a6);
    if (v24 == a3) {
      goto LABEL_33;
    }
    a2 += v30;
    if (v22) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v27 >= v36)
    {
      unint64_t v22 = 0;
      a3 = v24;
LABEL_33:
      a1 = v33;
      uint64_t v20 = v35;
      goto LABEL_34;
    }
    uint64_t v20 = v35;
    unint64_t v28 = *(void *)(v35 + 8 * v27);
    if (!v28) {
      break;
    }
LABEL_18:
    unint64_t v22 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v27 << 6);
    int64_t v23 = v27;
  }
  v23 += 2;
  if (v27 + 1 >= v36)
  {
    unint64_t v22 = 0;
    int64_t v23 = v27;
LABEL_39:
    a3 = v24;
    a1 = v33;
    goto LABEL_34;
  }
  unint64_t v28 = *(void *)(v35 + 8 * v23);
  if (v28) {
    goto LABEL_14;
  }
  int64_t v29 = v27 + 2;
  if (v27 + 2 >= v36) {
    goto LABEL_36;
  }
  unint64_t v28 = *(void *)(v35 + 8 * v29);
  if (v28) {
    goto LABEL_17;
  }
  int64_t v23 = v27 + 3;
  if (v27 + 3 >= v36)
  {
    unint64_t v22 = 0;
    int64_t v23 = v27 + 2;
    goto LABEL_39;
  }
  unint64_t v28 = *(void *)(v35 + 8 * v23);
  if (v28)
  {
LABEL_14:
    int64_t v27 = v23;
    goto LABEL_18;
  }
  int64_t v29 = v27 + 4;
  if (v27 + 4 >= v36)
  {
LABEL_36:
    unint64_t v22 = 0;
    goto LABEL_39;
  }
  unint64_t v28 = *(void *)(v35 + 8 * v29);
  if (v28)
  {
LABEL_17:
    int64_t v27 = v29;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v27 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v27 >= v36)
    {
      unint64_t v22 = 0;
      int64_t v23 = v32;
      goto LABEL_39;
    }
    unint64_t v28 = *(void *)(v35 + 8 * v27);
    ++v29;
    if (v28) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

void *sub_10007C970(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    void *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_10007CB04(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakAssign();
  id v8 = [a1 sequenceURL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v9 = URL.path.getter();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v24[0] = v9;
  v24[1] = v11;
  swift_bridgeObjectRetain();
  v12._uint64_t countAndFlagsBits = 1735355438;
  v12._object = (void *)0xE400000000000000;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  LOBYTE(v7) = sub_100079C04();
  swift_bridgeObjectRelease();
  if (v7)
  {
    char v13 = 0;
  }
  else
  {
    sub_10001C99C(0, (unint64_t *)&unk_1004C7150);
    sub_100012894(&qword_1004C3D00);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1003F8B80;
    uint64_t v15 = type metadata accessor for MetaData();
    *(void *)(v14 + 56) = sub_100012894(&qword_1004C7160);
    *(void *)(v14 + 3sub_10004ACAC(3, 1, 2) = v15;
    uint64_t v16 = type metadata accessor for FrameEvent();
    *(void *)(v14 + 88) = sub_100012894(&qword_1004C7168);
    *(void *)(v14 + 64) = v16;
    uint64_t v17 = NSSet.init(objects:)();
    v24[0] = 0;
    static Set._forceBridgeFromObjectiveC(_:result:)();
    if (!v24[0]) {
      goto LABEL_10;
    }

    Class isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [a1 setCustomDataClasses:isa];

    char v13 = 1;
  }
  *(unsigned char *)(a2 + qword_1004C6F70) = v13;
  uint64_t v19 = self;
  id v20 = [v19 appleGlobalDomain];
  if (v20)
  {
    uint64_t v21 = v20;
    [v20 addObserver:a2 forKeyPath:ARReplaySensorFilePathAdvanceToFrameUserDefaultsKey options:11 context:0];

    id v22 = [v19 appleGlobalDomain];
    if (v22)
    {
      int64_t v23 = v22;
      [v22 addObserver:a2 forKeyPath:ARReplaySensorFilePathAdvanceFramesPerSecondMultiplierUserDefaultsKey options:11 context:0];

      *(unsigned char *)(a2 + qword_1004C6F80) = 1;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_10:
  __break(1u);
}

uint64_t sub_10007CE24(uint64_t a1)
{
  if (a1 > 99)
  {
    switch(a1)
    {
      case 'd':
        return 7;
      case 'e':
        return 8;
      case 'f':
        return 9;
      default:
        return 10;
    }
  }
  else
  {
    uint64_t result = 1;
    switch(a1)
    {
      case 0:
        uint64_t result = 0;
        break;
      case 1:
        return result;
      case 2:
        uint64_t result = 2;
        break;
      case 3:
        uint64_t result = 3;
        break;
      case 4:
        uint64_t result = 4;
        break;
      case 5:
        uint64_t result = 5;
        break;
      case 6:
        uint64_t result = 6;
        break;
      default:
        return 10;
    }
  }
  return result;
}

unint64_t sub_10007CEE0()
{
  unint64_t result = qword_1004C7120;
  if (!qword_1004C7120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C7120);
  }
  return result;
}

void sub_10007CF3C(void *__src)
{
}

uint64_t sub_10007CF44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894((uint64_t *)&unk_1004C7180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007CFAC(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v5 = (void *)result;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (a2)
  {
    if (v6 == a1 && v7 == a2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0)
      {
        if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a1 && v10 == a2)
        {
          swift_bridgeObjectRelease();
LABEL_27:
          uint64_t v17 = self;
          NSString v18 = String._bridgeToObjectiveC()();
          [v17 floatForKey:v18];
          float v20 = v19;

          LODWORD(v2sub_10004ACAC(2, 1, 1) = 1.0;
          if (v20 > 0.0) {
            *(float *)&double v21 = v20;
          }
          [v5 setAdvanceFramesPerSecondMultiplier:v21];
          goto LABEL_23;
        }
        char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v12) {
          goto LABEL_27;
        }
LABEL_23:
        return swift_unknownObjectRelease();
      }
    }
    char v13 = self;
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [v13 integerForKey:v14];

    if ((uint64_t)v15 <= 0) {
      uint64_t v16 = -1;
    }
    else {
      uint64_t v16 = (uint64_t)v15;
    }
    [v5 advanceToFrameIndex:v16];
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10007D1D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007D21C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007D284(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007D2EC(uint64_t result)
{
  if (*(unsigned char *)(v1 + qword_1004C71F0) == 1)
  {
    __chkstk_darwin(result);
    swift_retain();
    StateValue.ifUpdated(_:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_10007D390(uint64_t a1)
{
  uint64_t countAndFlagsBits = a1;
  switch(a1)
  {
    case 0:
      return countAndFlagsBits;
    case 1:
      id v2 = [self mainBundle];
      unint64_t v3 = 0xE90000000000004ELL;
      unint64_t v8 = 0xE000000000000000;
      unint64_t v4 = 0x574F445F574F4C53;
      goto LABEL_11;
    case 2:
      id v2 = [self mainBundle];
      unint64_t v8 = 0xE000000000000000;
      unint64_t v4 = 0x4B5241445F4F4F54;
      unint64_t v3 = 0xE800000000000000;
      goto LABEL_11;
    case 3:
      id v2 = [self mainBundle];
      unint64_t v8 = 0xE000000000000000;
      unint64_t v4 = 0x4F4C435F45564F4DLL;
      unint64_t v3 = 0xEB00000000524553;
      goto LABEL_11;
    case 4:
      id v2 = [self mainBundle];
      unint64_t v8 = 0xE000000000000000;
      unint64_t v4 = 0x534F4C435F4F4F54;
      unint64_t v3 = 0xE900000000000045;
      goto LABEL_11;
    case 5:
    case 6:
      id v2 = [self mainBundle];
      unint64_t v8 = 0xE000000000000000;
      unint64_t v3 = 0x8000000100422B80;
      unint64_t v4 = 0xD000000000000012;
      goto LABEL_11;
    case 7:
      id v2 = [self mainBundle];
      unint64_t v8 = 0xE000000000000000;
      unint64_t v4 = 0x544345525F444441;
      unint64_t v3 = 0xED0000454C474E41;
      goto LABEL_11;
    case 8:
      id v2 = [self mainBundle];
      unint64_t v3 = 0xE900000000000054;
      unint64_t v8 = 0xE000000000000000;
      unint64_t v4 = 0x4E494F505F444441;
      goto LABEL_11;
    case 9:
      id v2 = [self mainBundle];
      unint64_t v8 = 0xE000000000000000;
      unint64_t v4 = 0x5255535F444E4946;
      unint64_t v3 = 0xEC00000045434146;
      goto LABEL_11;
    case 10:
      id v2 = [self mainBundle];
      unint64_t v4 = 0xD000000000000013;
      unint64_t v8 = 0xE000000000000000;
      unint64_t v3 = 0x8000000100422BA0;
LABEL_11:
      v5._uint64_t countAndFlagsBits = 0;
      v5._object = (void *)0xE000000000000000;
      uint64_t v6 = 0;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, (Swift::String_optional)0, (NSBundle)v2, v5, *(Swift::String *)(&v8 - 1))._countAndFlagsBits;

      return countAndFlagsBits;
    default:
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x10007D700);
  }
}

Swift::Int sub_10007D72C()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10007D774()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10007D7A0()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

unint64_t sub_10007D7E4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_10007DEA8(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_10007D818()
{
  return sub_10007D390(*v0);
}

unsigned char *sub_10007D820(double a1, double a2, double a3, double a4)
{
  v4[qword_1004C71F0] = 0;
  uint64_t v9 = qword_1004C71F8;
  uint64_t v10 = sub_100012894((uint64_t *)&unk_1004C7F20);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = qword_1004C2E30;
  char v13 = v4;
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_1004F8630;
  id v15 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 272);
  swift_retain();
  *(void *)&v13[v9] = v15(KeyPath, v14);

  v17.receiver = v13;
  v17.super_class = (Class)type metadata accessor for CalloutView();
  unint64_t result = [super initWithFrame:a1, a2, a3, a4];
  result[qword_1004C71F0] = 1;
  return result;
}

unsigned char *sub_10007D958(double a1, double a2, double a3, double a4)
{
  return sub_10007D820(a1, a2, a3, a4);
}

void sub_10007D97C(unsigned char *a1, uint64_t a2, void *a3)
{
  a1[qword_1004C71F0] = 0;
  uint64_t v5 = qword_1004C71F8;
  uint64_t v6 = sub_100012894((uint64_t *)&unk_1004C7F20);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = qword_1004C2E30;
  id v9 = a3;
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1004F8630;
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 272);
  swift_retain();
  *(void *)&a1[v5] = v11(KeyPath, v10);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10007DA88(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = v3;
  if (*((unsigned char *)a2 + qword_1004C71F0) == 1)
  {
    uint64_t v5 = *(void (**)(uint64_t))((swift_isaMask & *a2) + 0xF0);
    uint64_t v6 = a2;
    v5(v3);
    return swift_release();
  }
  else
  {
    uint64_t v8 = self;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = sub_10007DEF0;
    *(void *)(v9 + 24) = v4;
    _DWORD v13[4] = sub_100039980;
    v13[5] = v9;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_1000FA194;
    v13[3] = &unk_10048AD00;
    uint64_t v10 = _Block_copy(v13);
    uint64_t v11 = a2;
    swift_retain();
    swift_retain();
    swift_release();
    [v8 performWithoutAnimation:v10];
    _Block_release(v10);
    isEscapingClosureAtFileLocatiouint64_t n = swift_isEscapingClosureAtFileLocation();
    swift_release_n();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

void sub_10007DC7C()
{
}

void sub_10007DCE0()
{
}

uint64_t sub_10007DD44()
{
  return swift_release();
}

id sub_10007DD54()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CalloutView();
  return [super dealloc];
}

uint64_t sub_10007DD8C()
{
  return swift_release();
}

uint64_t type metadata accessor for CalloutView()
{
  uint64_t result = qword_1004C7228;
  if (!qword_1004C7228) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10007DDE8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10007DE38()
{
  return type metadata accessor for CalloutView();
}

ValueMetadata *type metadata accessor for CalloutReason()
{
  return &type metadata for CalloutReason;
}

unint64_t sub_10007DE54()
{
  unint64_t result = qword_1004C7370;
  if (!qword_1004C7370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C7370);
  }
  return result;
}

unint64_t sub_10007DEA8(unint64_t result)
{
  if (result > 0xA) {
    return 0;
  }
  return result;
}

uint64_t sub_10007DEB8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10007DEF0()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **(void **)(v0 + 16)) + 0xF0))(*(void *)(v0 + 24));
}

uint64_t sub_10007DF48()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10007DF58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10007DF68()
{
  return swift_release();
}

void sub_10007DFCC(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC7Measure12DeleteButton_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v4[OBJC_IVAR____TtC7Measure12DeleteButton_isEnabled] = 1;
  uint64_t v10 = v4;
  uint64_t v11 = (void *)static Locale.preferredLanguages.getter();
  if (v11[2])
  {
    char v13 = (objc_class *)v11[4];
    uint64_t v12 = v11[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v40 = v13;
    uint64_t v41 = v12;
    uint64_t v38 = 28261;
    unint64_t v39 = 0xE200000000000000;
    sub_10007EC70();
    sub_10007ECC4();
    char v14 = BidirectionalCollection<>.starts<A>(with:)();
    swift_bridgeObjectRelease();
    if (v14)
    {
      if (qword_1004C2EF0 != -1) {
        swift_once();
      }
      id v15 = objc_allocWithZone((Class)ASVRoundedButton);
      swift_bridgeObjectRetain();
      NSString v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v17 = [v15 initWithTitle:v16 buttonStyle:0 textStyle:1 controlStyle:1];

      *(void *)&v10[OBJC_IVAR____TtC7Measure12DeleteButton_deleteButton] = v17;
LABEL_16:

      v37.receiver = v10;
      v37.super_class = ObjectType;
      [super initWithFrame:a1, a2, a3, a4];
      sub_10007E3E0();
      sub_10007E50C();
      sub_10007E668();
      uint64_t v40 = ObjectType;
      swift_getMetatypeMetadata();
      id v35 = v34;
      String.init<A>(describing:)();
      NSString v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v35 setAccessibilityIdentifier:v36];

      return;
    }
    type metadata accessor for ViewController();
    ObjCClassFromMetauint64_t data = swift_getObjCClassFromMetadata();
    id v19 = [self bundleForClass:ObjCClassFromMetadata];
    NSString v20 = String._bridgeToObjectiveC()();
    id v21 = [self imageNamed:v20 inBundle:v19 compatibleWithTraitCollection:0];

    if (v21)
    {
      id v22 = [v21 imageWithRenderingMode:2];

      id v23 = [objc_allocWithZone((Class)ASVRoundedButton) initWithImage:v22 buttonStyle:0 textStyle:0 controlStyle:1];
      *(void *)&v10[OBJC_IVAR____TtC7Measure12DeleteButton_deleteButton] = v23;
      uint64_t v24 = qword_1004C31B8;
      id v25 = v23;
      if (v24 != -1) {
        swift_once();
      }
      unint64_t v26 = (void *)qword_1004F89F0;
      int64_t v27 = *(void **)algn_1004F89F8;
      if (byte_1004F8A00)
      {
        char v28 = byte_1004F8A10;
        uint64_t v29 = qword_1004F8A08;
        char v30 = byte_1004D2600;
        id v31 = (id)qword_1004F89F0;
        id v32 = sub_100081B28(v30, v29, v28);
        sub_1000286C0(v26, v27, 1);
      }
      else
      {
        if (byte_1004D2600) {
          id v33 = *(id *)algn_1004F89F8;
        }
        else {
          id v33 = (id)qword_1004F89F0;
        }
        id v32 = v33;
      }
      [v25 setTintColor:v32];

      goto LABEL_16;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    __break(1u);
  }
  __break(1u);
}

void sub_10007E3E0()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure12DeleteButton_deleteButton;
  [*(id *)&v0[OBJC_IVAR____TtC7Measure12DeleteButton_deleteButton] addTarget:v0 action:"tapDeleteFrom:" forControlEvents:64];
  [v0 addSubview:*(void *)&v0[v1]];
  id v2 = [*(id *)&v0[v1] widthAnchor];
  id v3 = [v2 constraintEqualToConstant:80.0];

  [v3 setActive:1];
  id v4 = [*(id *)&v0[v1] heightAnchor];
  id v5 = [v4 constraintEqualToConstant:47.0];

  [v5 setActive:1];
}

void sub_10007E50C()
{
  id v1 = [self defaultCenter];
  if (qword_1004C3240 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1004F8AB0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  uint64_t v7[4] = sub_10007ED50;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  uint64_t v7[2] = sub_1000F910C;
  v7[3] = &unk_10048AD50;
  id v4 = _Block_copy(v7);
  id v5 = v0;
  swift_release();
  id v6 = [v1 addObserverForName:v2 object:0 queue:0 usingBlock:v4];
  _Block_release(v4);
  swift_unknownObjectRelease();
}

id sub_10007E668()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Measure12DeleteButton_deleteButton;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC7Measure12DeleteButton_deleteButton);
  uint64_t v4 = qword_1004C31B8;
  id v5 = v3;
  if (v4 != -1) {
    swift_once();
  }
  id v6 = (void *)qword_1004F89F0;
  uint64_t v7 = *(void **)algn_1004F89F8;
  if (byte_1004F8A00)
  {
    char v8 = byte_1004F8A10;
    uint64_t v9 = qword_1004F8A08;
    char v10 = byte_1004D2600;
    id v11 = (id)qword_1004F89F0;
    id v12 = sub_100081B28(v10, v9, v8);
    sub_1000286C0(v6, v7, 1);
  }
  else
  {
    if (byte_1004D2600) {
      id v13 = *(id *)algn_1004F89F8;
    }
    else {
      id v13 = (id)qword_1004F89F0;
    }
    id v12 = v13;
  }
  [v5 setTintColor:v12];

  char v14 = *(void **)(v1 + v2);
  if (byte_1004D2600) {
    uint64_t v15 = 2;
  }
  else {
    uint64_t v15 = 1;
  }

  return [v14 setControlStyle:v15];
}

uint64_t type metadata accessor for DeleteButton()
{
  return self;
}

uint64_t sub_10007E8D8(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005536C();
  id v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  aBlock[4] = sub_10007ED70;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_10048ADA0;
  id v13 = _Block_copy(aBlock);
  id v14 = a2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_100039BEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_10007EC70()
{
  unint64_t result = qword_1004C73B8;
  if (!qword_1004C73B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C73B8);
  }
  return result;
}

unint64_t sub_10007ECC4()
{
  unint64_t result = qword_1004C73C0;
  if (!qword_1004C73C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C73C0);
  }
  return result;
}

uint64_t sub_10007ED18()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007ED50(uint64_t a1)
{
  return sub_10007E8D8(a1, *(void **)(v1 + 16));
}

uint64_t sub_10007ED58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10007ED68()
{
  return swift_release();
}

id sub_10007ED70()
{
  return sub_10007E668();
}

uint64_t sub_10007EDA0(uint64_t result)
{
  uint64_t v2 = v1;
  unint64_t v3 = result;
  uint64_t v4 = OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_state;
  uint64_t v5 = *(void *)&v2[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_state];
  if (v5 == result)
  {
    if (result != 7) {
      return result;
    }
    unint64_t result = (uint64_t)[v2 isHidden];
    if (result) {
      return result;
    }
    uint64_t v5 = *(void *)&v2[v4];
  }
  if (v5 == 5 || v5 == 0)
  {
    if (v3 > 7 || ((1 << v3) & 0x98) == 0) {
      return result;
    }
  }
  else if (v3 - 3 >= 2 && v3 != 7 || v5 != 2)
  {
    if (v5 != 7) {
      return result;
    }
    unint64_t result = (uint64_t)[v2 isHidden];
    if (result) {
      return result;
    }
    goto LABEL_20;
  }
  sub_10007F7E4();
  float32x4_t v28 = v7;
  type metadata accessor for MeasureCamera();
  simd_float4x4.position.getter();
  static ComputedCameraProperties.shared.getter();
  static MeasureCamera.viewSpacePoint(fromWorldSpace:view:)();
  int32x4_t v8 = (int32x4_t)vmulq_f32(v28, (float32x4_t)xmmword_1003F9A60);
  int32x4_t v9 = (int32x4_t)vnegq_f32((float32x4_t)v8);
  int8x16_t v10 = (int8x16_t)vtrn2q_s32(v8, vtrn1q_s32(v8, v9));
  float32x4_t v26 = (float32x4_t)vextq_s8((int8x16_t)v8, (int8x16_t)v9, 8uLL);
  float32x4_t v27 = (float32x4_t)vextq_s8(v10, v10, 8uLL);
  float32x4_t v12 = (float32x4_t)vrev64q_s32(v8);
  v12.i32[0] = v9.i32[1];
  v12.i32[3] = v9.i32[2];
  float32x4_t v24 = v12;
  int32x4_t v13 = (int32x4_t)vmlaq_laneq_f32(vmlaq_n_f32(vmulq_lane_f32(v26, *(float32x2_t *)v11.f32, 1), v27, v11.f32[0]), v12, v11, 2);
  int32x4_t v14 = (int32x4_t)vnegq_f32((float32x4_t)v13);
  int8x16_t v15 = (int8x16_t)vtrn2q_s32(v13, vtrn1q_s32(v13, v14));
  float32x4_t v16 = (float32x4_t)vrev64q_s32(v13);
  v16.i32[0] = v14.i32[1];
  v16.i32[3] = v14.i32[2];
  float32x4_t v25 = vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32((float32x4_t)v13, v28, 3), v16, v28, 2), vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v13, (int8x16_t)v14, 8uLL), *(float32x2_t *)v28.f32, 1), (float32x4_t)vextq_s8(v15, v15, 8uLL), v28.f32[0]));
  simd_float4x4.position.getter();
  static ComputedCameraProperties.shared.getter();
  static MeasureCamera.viewSpacePoint(fromWorldSpace:view:)();
  int32x4_t v18 = (int32x4_t)vmlaq_laneq_f32(vmlaq_n_f32(vmulq_lane_f32(v26, *(float32x2_t *)v17.f32, 1), v27, v17.f32[0]), v24, v17, 2);
  int32x4_t v19 = (int32x4_t)vnegq_f32((float32x4_t)v18);
  int8x16_t v20 = (int8x16_t)vtrn2q_s32(v18, vtrn1q_s32(v18, v19));
  float32x4_t v21 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v18, (int8x16_t)v19, 8uLL), *(float32x2_t *)v28.f32, 1), (float32x4_t)vextq_s8(v20, v20, 8uLL), v28.f32[0]);
  float32x4_t v22 = (float32x4_t)vrev64q_s32(v18);
  v22.i32[0] = v19.i32[1];
  v22.i32[3] = v19.i32[2];
  if (vsubq_f32(vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32((float32x4_t)v18, v28, 3), v22, v28, 2), v21), v25).f32[0] <= 0.0) {
    char v23 = 2;
  }
  else {
    char v23 = 3;
  }
  sub_10007F914(v23);
  v2[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_lastNumbersOrientation] = v23;
LABEL_20:

  return sub_10007F02C();
}

uint64_t sub_10007F02C()
{
  uint64_t v1 = v0;
  ariadne_trace(_:_:_:_:_:)();
  if (qword_1004C2D20 != -1) {
    goto LABEL_42;
  }
  while (1)
  {
    simd_float4x4.position.getter();
    *(_OWORD *)Swift::String v48 = v2;
    simd_float4x4.position.getter();
    float32x4_t v4 = vsubq_f32(*(float32x4_t *)v48, v3);
    float32x4_t v5 = vmulq_f32(v4, v4);
    float v6 = sqrtf(v5.f32[2] + vaddv_f32(*(float32x2_t *)v5.f32));
    [v1 simdTransform];
    *(double *)v10.i64 = sub_100080F08(v7, v8, v9);
    float32x4_t v54 = v10;
    uint64_t v51 = OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_lastNumbersOrientation;
    sub_1001B64AC(v1[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_lastNumbersOrientation]);
    int32x4_t v52 = v11;
    float32x4_t v12 = (float *)Float.piDiv2.unsafeMutableAddressor();
    __float2 v13 = __sincosf_stret(*v12 * -0.5);
    BOOL v14 = (~LODWORD(v6) & 0x7F800000) == 0;
    if (v6 < 0.0) {
      BOOL v14 = 1;
    }
    char v15 = v6 > 1000.0 || v14;
    [v1 setHidden:(v1[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_shouldHide] | v15) & 1];
    if (v15) {
      break;
    }
    float32x4_t v16 = &v1[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_divisionNumbers];
    swift_beginAccess();
    if (*(void *)v16 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = *(void *)((*(void *)v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v50 = sub_100080E2C(v6);
    float v18 = *(float *)&v1[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_widthOffset];
    if (qword_1004C2D08 != -1) {
      swift_once();
    }
    if (v17 < 0)
    {
      __break(1u);
      JUMPOUT(0x10007F7D4);
    }
    int32x4_t v19 = (int32x4_t)vnegq_f32((float32x4_t)v52);
    float32x4_t v20 = (float32x4_t)vrev64q_s32(v52);
    int32x4_t v21 = (int32x4_t)vmulq_n_f32((float32x4_t)xmmword_1003FB560, v13.__sinval);
    int8x16_t v22 = (int8x16_t)vtrn2q_s32(v52, vtrn1q_s32(v52, v19));
    v20.i32[0] = v19.i32[1];
    v21.i32[3] = LODWORD(v13.__cosval);
    v20.i32[3] = v19.i32[2];
    int32x4_t v23 = (int32x4_t)vnegq_f32((float32x4_t)v21);
    float32x4_t v24 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v52, (int8x16_t)v19, 8uLL), *(float32x2_t *)v54.f32, 1), (float32x4_t)vextq_s8(v22, v22, 8uLL), v54.f32[0]);
    float32x4_t v25 = vmlaq_laneq_f32(vmulq_laneq_f32((float32x4_t)v52, v54, 3), v20, v54, 2);
    float32x4_t v26 = (float32x4_t)vrev64q_s32(v21);
    float32x4_t v27 = vaddq_f32(v25, v24);
    int8x16_t v28 = (int8x16_t)vtrn2q_s32(v21, vtrn1q_s32(v21, v23));
    v26.i32[0] = v23.i32[1];
    v26.i32[3] = v23.i32[2];
    *(void *)&double v55 = vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32((float32x4_t)v21, v27, 3), v26, v27, 2), vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v21, (int8x16_t)v23, 8uLL), *(float32x2_t *)v27.f32, 1), (float32x4_t)vextq_s8(v28, v28, 8uLL), v27.f32[0])).u64[0];
    if (!v17)
    {
LABEL_28:
      if (v17 < v50)
      {
        char v53 = self;
        uint64_t v49 = self;
        uint64_t v47 = *(void *)&v1[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_divisionNumbersMaterial];
        do
        {
          ++v17;
          ariadne_trace(_:_:_:_:_:)();
          id v38 = [v53 planeWithWidth:200.0 height:100.0];
          [v38 setFirstMaterial:v47];
          id v39 = [v49 nodeWithGeometry:v38];
          [v39 setSimdPosition:COERCE_DOUBLE((unint64_t)COERCE_UNSIGNED_INT(-v18))];
          uint64_t v40 = v1[v51];
          sub_10001C99C(0, &qword_1004C4028);
          SCNBoundingVolume.boundingBox.getter();
          int v41 = v57;
          int v42 = v58;
          switch(v40)
          {
            case 1:
              int v42 = v56;
              goto LABEL_32;
            case 2:
LABEL_32:
              int v41 = HIDWORD(v58);
              break;
            case 3:
              int v42 = v56;
              break;
            default:
              break;
          }
          uint64_t v57 = 0;
          uint64_t v58 = 0;
          int v56 = 1065353216;
          int v59 = 1065353216;
          uint64_t v60 = 0;
          uint64_t v61 = 0;
          uint64_t v62 = 1065353216;
          int v63 = v42;
          int v64 = v41;
          uint64_t v65 = 0x3F80000000000000;
          [v39 setPivot:&v56];
          [v39 setSimdOrientation:v55];
          if (qword_1004C2D60 != -1) {
            swift_once();
          }
          LODWORD(v43) = dword_1004F8570;
          LODWORD(v44) = *(_DWORD *)algn_1004F8574;
          LODWORD(v45) = dword_1004F8578;
          [v39 setScale:v43, v44, v45];
          swift_beginAccess();
          id v46 = v39;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*(void *)v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v16 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          [v46 setHidden:0];
          [v46 setOpacity:1.0];
          [v1 addChildNode:v46];

          ariadne_trace(_:_:_:_:_:)();
        }
        while (v50 != v17);
      }
      sub_10007FD00(1);
      return ariadne_trace(_:_:_:_:_:)();
    }
    unint64_t v29 = 0;
    while (1)
    {
      swift_beginAccess();
      uint64_t v30 = *(void *)v16;
      if ((*(void *)v16 & 0xC000000000000001) == 0) {
        break;
      }
      id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_18:
      id v32 = v31;
      unint64_t v33 = v29 + 1;
      swift_endAccess();
      [v32 setSimdPosition:COERCE_DOUBLE((unint64_t)COERCE_UNSIGNED_INT(-v18))];

      swift_beginAccess();
      uint64_t v34 = *(void *)v16;
      if ((*(void *)v16 & 0xC000000000000001) != 0)
      {
        id v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v29 >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_41;
        }
        id v35 = *(id *)(v34 + 8 * v29 + 32);
      }
      NSString v36 = v35;
      swift_endAccess();
      [v36 setSimdOrientation:v55];

      unint64_t v29 = v33;
      if (v17 == v33) {
        goto LABEL_28;
      }
    }
    if (v29 < *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v31 = *(id *)(v30 + 8 * v29 + 32);
      goto LABEL_18;
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    swift_once();
  }

  return ariadne_trace(_:_:_:_:_:)();
}

void sub_10007F7E4()
{
  void (*v1)(uint64_t *__return_ptr, uint64_t);
  uint64_t v2;
  float v3;
  float v4;
  uint64_t v5;

  uint64_t v1 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v0
                                                                           + OBJC_IVAR____TtC7Measure20LineDivisionsNumbers__orientationState)
                                                             + 144);
  long long v2 = swift_retain();
  v1(&v5, v2);
  swift_release();
  switch(v5)
  {
    case 2:
      SIMD3<>.forward.unsafeMutableAddressor();
      break;
    case 3:
      float32x4_t v3 = *(float *)Float.piDiv2.unsafeMutableAddressor();
      SIMD3<>.forward.unsafeMutableAddressor();
      float32x4_t v4 = 0.5;
      goto LABEL_6;
    case 4:
      float32x4_t v3 = *(float *)Float.piDiv2.unsafeMutableAddressor();
      SIMD3<>.forward.unsafeMutableAddressor();
      float32x4_t v4 = -0.5;
LABEL_6:
      __sincosf_stret(v3 * v4);
      break;
    default:
      vmulq_f32(*(float32x4_t *)SIMD3<>.forward.unsafeMutableAddressor(), (float32x4_t)0);
      break;
  }
}

void sub_10007F914(char a1)
{
  long long v2 = v1;
  [v2 simdTransform];
  *(double *)v7.i64 = sub_100080F08(v4, v5, v6);
  float32x4_t v41 = v7;
  char v40 = a1;
  sub_1001B64AC(a1);
  int8x16_t v39 = v8;
  __n128 v9 = (float *)Float.piDiv2.unsafeMutableAddressor();
  __float2 v11 = __sincosf_stret(*v9 * -0.5);
  *(float *)&uint64_t v10 = v11.__sinval;
  uint64_t v38 = v10;
  float32x4_t v12 = &v2[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_divisionNumbers];
  swift_beginAccess();
  if (*(void *)v12 >> 62) {
    goto LABEL_25;
  }
  uint64_t v13 = *(void *)((*(void *)v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  if (v13)
  {
    unint64_t v14 = 0;
    int32x4_t v15 = (int32x4_t)vnegq_f32((float32x4_t)v39);
    int8x16_t v16 = (int8x16_t)vtrn2q_s32((int32x4_t)v39, vtrn1q_s32((int32x4_t)v39, v15));
    float32x4_t v17 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8(v39, (int8x16_t)v15, 8uLL), *(float32x2_t *)v41.f32, 1), (float32x4_t)vextq_s8(v16, v16, 8uLL), v41.f32[0]);
    float32x4_t v18 = (float32x4_t)vrev64q_s32((int32x4_t)v39);
    v18.i32[0] = v15.i32[1];
    v18.i32[3] = v15.i32[2];
    float32x4_t v19 = vaddq_f32(v17, vmlaq_laneq_f32(vmulq_laneq_f32((float32x4_t)v39, v41, 3), v18, v41, 2));
    int8x16_t v20 = (int8x16_t)vmulq_n_f32((float32x4_t)xmmword_1003FB560, *(float *)&v38);
    v20.i32[3] = LODWORD(v11.__cosval);
    int32x4_t v21 = (int32x4_t)vnegq_f32((float32x4_t)v20);
    int8x16_t v22 = (int8x16_t)vtrn2q_s32((int32x4_t)v20, vtrn1q_s32((int32x4_t)v20, v21));
    float32x4_t v23 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8(v20, (int8x16_t)v21, 8uLL), *(float32x2_t *)v19.f32, 1), (float32x4_t)vextq_s8(v22, v22, 8uLL), v19.f32[0]);
    float32x4_t v24 = (float32x4_t)vrev64q_s32((int32x4_t)v20);
    v24.i32[0] = v21.i32[1];
    v24.i32[3] = v21.i32[2];
    float32x4_t v41 = vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32((float32x4_t)v20, v19, 3), v24, v19, 2), v23);
    do
    {
      swift_beginAccess();
      uint64_t v27 = *(void *)v12;
      if ((*(void *)v12 & 0xC000000000000001) != 0)
      {
        id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((v14 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
LABEL_25:
          swift_bridgeObjectRetain();
          uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v13 < 0)
          {
            __break(1u);
            JUMPOUT(0x10007FCF0);
          }
          goto LABEL_3;
        }
        if (v14 >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_22;
        }
        id v28 = *(id *)(v27 + 8 * v14 + 32);
      }
      unint64_t v29 = v28;
      swift_endAccess();
      [v29 setSimdOrientation:*(double *)v41.i64];

      swift_beginAccess();
      uint64_t v30 = *(void *)v12;
      if ((*(void *)v12 & 0xC000000000000001) != 0)
      {
        id v32 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((v14 & 0x8000000000000000) != 0) {
          goto LABEL_23;
        }
        if (v14 >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_24;
        }
        id v31 = *(id *)(v30 + 8 * v14 + 32);
        id v32 = v31;
      }
      ++v14;
      swift_endAccess();
      sub_10001C99C(0, &qword_1004C4028);
      SCNBoundingVolume.boundingBox.getter();
      int v33 = v42;
      int v26 = v43;
      int v34 = HIDWORD(v44);
      int v25 = v44;

      switch(v40)
      {
        case 1:
          int v25 = v33;
          goto LABEL_6;
        case 2:
LABEL_6:
          int v26 = v34;
          break;
        case 3:
          int v25 = v33;
          break;
        default:
          break;
      }
      uint64_t v43 = 0;
      uint64_t v44 = 0;
      int v42 = 1065353216;
      int v45 = 1065353216;
      uint64_t v46 = 0;
      uint64_t v47 = 0;
      uint64_t v48 = 1065353216;
      int v49 = v25;
      int v50 = v26;
      uint64_t v51 = 0x3F80000000000000;
      [v32 setPivot:&v42 v38];
    }
    while (v13 != v14);
  }
  id v35 = *(void **)&v2[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_divisionNumbersMaterial];
  Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  NSString v37 = String._bridgeToObjectiveC()();
  [v35 setValue:isa forKeyPath:v37];
}

id sub_10007FD00(char a1)
{
  long long v2 = v1;
  if ((a1 & 1) == 0 && v1[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_shouldRenderNumbers] == 1)
  {
    sub_10007F7E4();
    float32x4_t v45 = v3;
    type metadata accessor for MeasureCamera();
    simd_float4x4.position.getter();
    static ComputedCameraProperties.shared.getter();
    static MeasureCamera.viewSpacePoint(fromWorldSpace:view:)();
    int32x4_t v4 = (int32x4_t)vmulq_f32(v45, (float32x4_t)xmmword_1003F9A60);
    int32x4_t v5 = (int32x4_t)vnegq_f32((float32x4_t)v4);
    int8x16_t v6 = (int8x16_t)vtrn2q_s32(v4, vtrn1q_s32(v4, v5));
    float32x4_t v42 = (float32x4_t)vextq_s8((int8x16_t)v4, (int8x16_t)v5, 8uLL);
    float32x4_t v43 = (float32x4_t)vextq_s8(v6, v6, 8uLL);
    float32x4_t v8 = (float32x4_t)vrev64q_s32(v4);
    v8.i32[0] = v5.i32[1];
    v8.i32[3] = v5.i32[2];
    float32x4_t v40 = v8;
    int32x4_t v9 = (int32x4_t)vmlaq_laneq_f32(vmlaq_n_f32(vmulq_lane_f32(v42, *(float32x2_t *)v7.f32, 1), v43, v7.f32[0]), v8, v7, 2);
    int32x4_t v10 = (int32x4_t)vnegq_f32((float32x4_t)v9);
    int8x16_t v11 = (int8x16_t)vtrn2q_s32(v9, vtrn1q_s32(v9, v10));
    float32x4_t v12 = (float32x4_t)vrev64q_s32(v9);
    v12.i32[0] = v10.i32[1];
    v12.i32[3] = v10.i32[2];
    float32x4_t v41 = vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32((float32x4_t)v9, v45, 3), v12, v45, 2), vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v9, (int8x16_t)v10, 8uLL), *(float32x2_t *)v45.f32, 1), (float32x4_t)vextq_s8(v11, v11, 8uLL), v45.f32[0]));
    simd_float4x4.position.getter();
    static ComputedCameraProperties.shared.getter();
    static MeasureCamera.viewSpacePoint(fromWorldSpace:view:)();
    int32x4_t v14 = (int32x4_t)vmlaq_laneq_f32(vmlaq_n_f32(vmulq_lane_f32(v42, *(float32x2_t *)v13.f32, 1), v43, v13.f32[0]), v40, v13, 2);
    int32x4_t v15 = (int32x4_t)vnegq_f32((float32x4_t)v14);
    int8x16_t v16 = (int8x16_t)vtrn2q_s32(v14, vtrn1q_s32(v14, v15));
    float32x4_t v17 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v14, (int8x16_t)v15, 8uLL), *(float32x2_t *)v45.f32, 1), (float32x4_t)vextq_s8(v16, v16, 8uLL), v45.f32[0]);
    float32x4_t v18 = (float32x4_t)vrev64q_s32(v14);
    v18.i32[0] = v15.i32[1];
    v18.i32[3] = v15.i32[2];
    if (vsubq_f32(vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32((float32x4_t)v14, v45, 3), v18, v45, 2), v17), v41).f32[0] <= 0.0) {
      char v19 = 2;
    }
    else {
      char v19 = 3;
    }
    sub_10007F914(v19);
    v1[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_lastNumbersOrientation] = v19;
  }
  simd_float4x4.position.getter();
  float32x4_t v44 = v20;
  simd_float4x4.position.getter();
  float32x4_t v22 = vsubq_f32(v44, v21);
  float32x4_t v23 = vmulq_f32(v22, v22);
  float v24 = sqrtf(v23.f32[2] + vaddv_f32(*(float32x2_t *)v23.f32));
  BOOL v25 = (~LODWORD(v24) & 0x7F800000) == 0 || v24 < 0.0;
  unsigned __int8 v26 = v1[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_shouldHide];
  char v27 = v24 > 1000.0 || v25;
  id result = [v2 setHidden:(v26 | v27) & 1 *(_OWORD *)&v40, *(_OWORD *)&v41, *(_OWORD *)&v42];
  if ((v27 & 1) == 0)
  {
    unint64_t v29 = &v2[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_divisionNumbers];
    swift_beginAccess();
    if (*(void *)v29 >> 62) {
      goto LABEL_33;
    }
    uint64_t v30 = *(void *)((*(void *)v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_16:
    uint64_t v31 = sub_100080E2C(v24);
    id v32 = self;
    [v32 begin];
    id result = [v32 setAnimationDuration:0.0];
    if (v30 < 0)
    {
      __break(1u);
    }
    else
    {
      if (v30)
      {
        for (unint64_t i = 0; v30 != i; ++i)
        {
          swift_beginAccess();
          uint64_t v34 = *(void *)v29;
          if ((*(void *)v29 & 0xC000000000000001) != 0)
          {
            id v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (i >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_32:
              __break(1u);
LABEL_33:
              swift_bridgeObjectRetain();
              uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              goto LABEL_16;
            }
            id v35 = *(id *)(v34 + 8 * i + 32);
          }
          NSString v36 = v35;
          swift_endAccess();
          [v36 setOpacity:1.0];

          swift_beginAccess();
          uint64_t v37 = *(void *)v29;
          if ((*(void *)v29 & 0xC000000000000001) != 0)
          {
            id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (i >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_32;
            }
            id v38 = *(id *)(v37 + 8 * i + 32);
          }
          int8x16_t v39 = v38;
          swift_endAccess();
          [v39 setHidden:v31 <= (uint64_t)i];
        }
      }
      return [v32 commit];
    }
  }
  return result;
}

char *sub_100080164(__n128 a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  char v19 = v17;
  id v20 = sub_1001B4A50(8);
  [v20 copy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
  if (swift_dynamicCast()) {
    id v21 = v69;
  }
  else {
    id v21 = [objc_allocWithZone((Class)SCNMaterial) init];
  }
  *(void *)&v19[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_divisionNumbersMaterial] = v21;
  uint64_t v22 = OBJC_IVAR____TtC7Measure20LineDivisionsNumbers__orientationState;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v24 = sub_100012894((uint64_t *)&unk_1004C7450);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_1004F8630;
  unsigned __int8 v26 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 272);
  swift_retain();
  *(void *)&v19[v22] = v26(KeyPath, v25);
  *(void *)&v19[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_state] = static MeasureObjectState.default;
  v19[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_shouldHide] = 1;
  v19[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_lastNumbersOrientation] = 2;
  v19[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_shouldRenderNumbers] = 0;
  v19[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_isOcclusionInitialized] = 0;
  char v27 = (__n128 *)&v19[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_endTransforms];
  *char v27 = a1;
  v27[1] = a2;
  v27[2] = a3;
  v27[3] = a4;
  v27[4] = a5;
  v27[5] = a6;
  void v27[6] = a7;
  v27[7] = a8;
  *(void *)&v19[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_divisionNumbers] = _swiftEmptyArrayStorage;
  *(_DWORD *)&v19[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_widthOffset] = a17;

  v68.receiver = v19;
  v68.super_class = ObjectType;
  id v28 = [super init];
  uint64_t v29 = OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_divisionNumbersMaterial;
  uint64_t v30 = *(void **)&v28[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_divisionNumbersMaterial];
  uint64_t v31 = v28;
  id v32 = v30;
  Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  NSString v34 = String._bridgeToObjectiveC()();
  [v32 setValue:isa forKeyPath:v34];

  uint64_t v35 = qword_1004C2D20;
  id v36 = *(id *)&v28[v29];
  if (v35 != -1) {
    swift_once();
  }
  Class v37 = Float._bridgeToObjectiveC()().super.super.isa;
  NSString v38 = String._bridgeToObjectiveC()();
  [v36 setValue:v37 forKeyPath:v38];

  id v39 = *(id *)&v28[v29];
  Class v40 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  NSString v41 = String._bridgeToObjectiveC()();
  [v39 setValue:v40 forKeyPath:v41];

  id v42 = *(id *)&v28[v29];
  Class v43 = Int._bridgeToObjectiveC()().super.super.isa;
  NSString v44 = String._bridgeToObjectiveC()();
  [v42 setValue:v43 forKeyPath:v44];

  uint64_t v45 = qword_1004C2D68;
  id v46 = *(id *)&v28[v29];
  if (v45 != -1) {
    swift_once();
  }
  Class v47 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  NSString v48 = String._bridgeToObjectiveC()();
  [v46 setValue:v47 forKey:v48];

  id v49 = *(id *)&v28[v29];
  Class v50 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  NSString v51 = String._bridgeToObjectiveC()();
  [v49 setValue:v50 forKey:v51];

  uint64_t v52 = qword_1004C2D70;
  id v53 = *(id *)&v28[v29];
  if (v52 != -1) {
    swift_once();
  }
  Class v54 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  NSString v55 = String._bridgeToObjectiveC()();
  [v53 setValue:v54 forKey:v55];

  id v56 = *(id *)&v28[v29];
  Class v57 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  NSString v58 = String._bridgeToObjectiveC()();
  [v56 setValue:v57 forKey:v58];

  return v31;
}

void sub_100080784()
{
  uint64_t v1 = v0;
  if (![self jasperAvailable]
    || (long long v2 = self,
        id v3 = [v2 standardUserDefaults],
        unsigned int v4 = [v3 isLineOcclusionEnabled],
        v3,
        !v4)
    || (uint64_t v5 = *(void *)MeasureCore.shared.unsafeMutableAddressor(),
        swift_beginAccess(),
        (uint64_t v6 = *(void *)(v5 + 112)) == 0))
  {
    float32x4_t v23 = *(void **)(v1 + OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_divisionNumbersMaterial);
    Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
    NSString v25 = String._bridgeToObjectiveC()();
    [v23 setValue:isa forKeyPath:v25];

    return;
  }
  float32x4_t v7 = *(void **)(v1 + OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_divisionNumbersMaterial);
  uint64_t v8 = qword_1004C2FC0;
  swift_retain();
  if (v8 != -1) {
    swift_once();
  }
  UIColor.rgba.getter();
  swift_beginAccess();
  if (!*(void *)(v6 + 208))
  {
    __break(1u);
    goto LABEL_14;
  }
  swift_retain();
  ADProcessor.transformer.getter();
  swift_release();
  Transformer.clipToCameraNormalized.getter();
  swift_release();
  simd_float3x3.copy(from:)();
  id v9 = [v2 standardUserDefaults];
  [v9 isLineOcclusionEnabled];

  Class v10 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  NSString v11 = String._bridgeToObjectiveC()();
  [v7 setValue:v10 forKeyPath:v11];

  SCNVector4.init(_:_:_:_:)();
  Class v12 = SCNVector4._bridgeToObjectiveC()().super.isa;
  NSString v13 = String._bridgeToObjectiveC()();
  [v7 setValue:v12 forKeyPath:v13];

  Class v14 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  NSString v15 = String._bridgeToObjectiveC()();
  [v7 setValue:v14 forKeyPath:v15];

  SCNVector3.init(_:)();
  Class v16 = SCNVector3._bridgeToObjectiveC()().super.isa;
  NSString v17 = String._bridgeToObjectiveC()();
  [v7 setValue:v16 forKey:v17];

  SCNVector3.init(_:)();
  Class v18 = SCNVector3._bridgeToObjectiveC()().super.isa;
  NSString v19 = String._bridgeToObjectiveC()();
  [v7 setValue:v18 forKey:v19];

  SCNVector3.init(_:)();
  Class v20 = SCNVector3._bridgeToObjectiveC()().super.isa;
  NSString v21 = String._bridgeToObjectiveC()();
  [v7 setValue:v20 forKey:v21];

  uint64_t v22 = *(void *)(v6 + 208);
  if (!v22)
  {
LABEL_14:
    __break(1u);
    return;
  }
  swift_beginAccess();
  if (*(unsigned char *)(v22 + 242) == 1)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
  }
  else
  {
    swift_retain();
    ADProcessor.outputDepthTexture.getter();
    swift_release();
  }
  swift_unknownObjectRetain_n();
  sub_100012894((uint64_t *)&unk_1004C7460);
  uint64_t v26 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  id v27 = [self materialPropertyWithContents:v26];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  NSString v28 = String._bridgeToObjectiveC()();
  [v7 setValue:v27 forKey:v28];
  swift_unknownObjectRelease();

  swift_release();
  *(unsigned char *)(v1 + OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_isOcclusionInitialized) = 1;
}

uint64_t type metadata accessor for LineDivisionsNumbers()
{
  return self;
}

float sub_100080DC8()
{
  simd_float4x4.position.getter();
  float32x4_t v5 = v0;
  simd_float4x4.position.getter();
  float32x4_t v2 = vsubq_f32(v5, v1);
  float32x4_t v3 = vmulq_f32(v2, v2);
  return sqrtf(v3.f32[2] + vaddv_f32(*(float32x2_t *)v3.f32));
}

uint64_t sub_100080E2C(float a1)
{
  if (qword_1004C2D20 != -1) {
    uint64_t result = swift_once();
  }
  float v2 = *(float *)&dword_1004F853C;
  if (qword_1004C2D18 != -1) {
    uint64_t result = swift_once();
  }
  float v3 = floorf((float)(a1 - *(float *)&dword_1004F8538) / v2);
  if ((~LODWORD(v3) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v3 <= -9.2234e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v3 < 9.2234e18) {
    return (uint64_t)v3;
  }
LABEL_11:
  __break(1u);
  return result;
}

double sub_100080F08(int8x16_t a1, int8x16_t a2, __n128 a3)
{
  float v3 = a3.n128_f32[2] + (float)(*(float *)a1.i32 + *(float *)&a2.i32[1]);
  if (v3 >= 0.0)
  {
    float v12 = sqrtf(v3 + 1.0);
    float32x2_t v13 = vrecpe_f32((float32x2_t)COERCE_UNSIGNED_INT(v12 + v12));
    float32x2_t v14 = vmul_f32(v13, vrecps_f32((float32x2_t)COERCE_UNSIGNED_INT(v12 + v12), v13));
    float32x2_t v24 = vmul_n_f32(vsub_f32((float32x2_t)vzip1_s32((int32x2_t)*(_OWORD *)&vextq_s8(a2, a2, 8uLL), (int32x2_t)a3.n128_u64[0]), (float32x2_t)vext_s8((int8x8_t)a3.n128_u64[0], (int8x8_t)*(_OWORD *)&vextq_s8(a1, a1, 8uLL), 4uLL)), vmul_f32(v14, vrecps_f32((float32x2_t)COERCE_UNSIGNED_INT(v12 + v12), v14)).f32[0]);
  }
  else if (*(float *)a1.i32 < *(float *)&a2.i32[1] || *(float *)a1.i32 < a3.n128_f32[2])
  {
    float v5 = 1.0 - *(float *)a1.i32;
    if (*(float *)&a2.i32[1] >= a3.n128_f32[2])
    {
      float v25 = sqrtf(*(float *)&a2.i32[1] + (float)(v5 - a3.n128_f32[2]));
      *(float *)&unsigned int v26 = v25 + v25;
      float32x2_t v27 = vrecpe_f32((float32x2_t)v26);
      float32x2_t v28 = vmul_f32(v27, vrecps_f32((float32x2_t)v26, v27));
      v29.i32[0] = vmul_f32(v28, vrecps_f32((float32x2_t)v26, v28)).u32[0];
      v28.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_lane_s32(*(int32x2_t *)a1.i8, 1), *(float32x2_t *)a2.i8).u32[0];
      v28.i32[1] = v26;
      v29.i32[1] = 0.25;
      float32x2_t v24 = vmul_f32(v28, v29);
    }
    else
    {
      float32x2_t v6 = (float32x2_t)__PAIR64__(a1.u32[1], COERCE_UNSIGNED_INT(sqrtf(a3.n128_f32[2] + (float)(v5 - *(float *)&a2.i32[1]))));
      float32x2_t v7 = vadd_f32((float32x2_t)vzip1_s32((int32x2_t)*(_OWORD *)&vextq_s8(a1, a1, 8uLL), (int32x2_t)*(_OWORD *)&vextq_s8(a2, a2, 8uLL)), (float32x2_t)a3.n128_u64[0]);
      float32x2_t v8 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)a2.i8, 0);
      v8.i32[0] = 2.0;
      v8.i32[0] = vmul_f32(v6, v8).u32[0];
      float32x2_t v9 = vrecpe_f32((float32x2_t)v8.u32[0]);
      float32x2_t v10 = vmul_f32(v9, vrecps_f32((float32x2_t)v8.u32[0], v9));
      float32x2_t v24 = vmul_n_f32(v7, vmul_f32(v10, vrecps_f32((float32x2_t)v8.u32[0], v10)).f32[0]);
      __asm { FMOV            V2.2S, #0.25 }
    }
  }
  else
  {
    float32x2_t v15 = (float32x2_t)vdup_lane_s32(*(int32x2_t *)a2.i8, 0);
    float32x2_t v16 = vadd_f32(*(float32x2_t *)a1.i8, v15);
    v15.i32[0] = 2.0;
    v15.i32[0] = vmul_f32((float32x2_t)__PAIR64__(a1.u32[1], COERCE_UNSIGNED_INT(sqrtf(*(float *)a1.i32 + (float)((float)(1.0 - *(float *)&a2.i32[1])- a3.n128_f32[2])))), v15).u32[0];
    v15.i32[1] = v16.i32[1];
    float32x2_t v17 = vrecpe_f32((float32x2_t)v15.u32[0]);
    float32x2_t v18 = vmul_f32(v17, vrecps_f32((float32x2_t)v15.u32[0], v17));
    unsigned __int32 v19 = vmul_f32(v18, vrecps_f32((float32x2_t)v15.u32[0], v18)).u32[0];
    __asm { FMOV            V5.2S, #0.25 }
    _D5.i32[1] = v19;
    float32x2_t v24 = vmul_f32(v15, _D5);
  }
  return *(double *)&v24;
}

void sub_1000810EC()
{
  float32x4_t v1 = v0;
  id v2 = sub_1001B4A50(8);
  [v2 copy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
  if (swift_dynamicCast()) {
    id v3 = v9;
  }
  else {
    id v3 = [objc_allocWithZone((Class)SCNMaterial) init];
  }
  *(void *)&v1[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_divisionNumbersMaterial] = v3;
  uint64_t v4 = OBJC_IVAR____TtC7Measure20LineDivisionsNumbers__orientationState;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = sub_100012894((uint64_t *)&unk_1004C7450);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1004F8630;
  float32x2_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 272);
  swift_retain();
  *(void *)&v1[v4] = v8(KeyPath, v7);
  *(void *)&v1[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_state] = static MeasureObjectState.default;
  v1[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_shouldHide] = 1;
  v1[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_lastNumbersOrientation] = 2;
  v1[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_shouldRenderNumbers] = 0;
  v1[OBJC_IVAR____TtC7Measure20LineDivisionsNumbers_isOcclusionInitialized] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t type metadata accessor for IntrinsicTableView()
{
  return self;
}

__n128 initializeWithCopy for DeviceState(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 3sub_10004ACAC(3, 1, 2) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(unsigned char *)(a1 + 11sub_10004ACAC(3, 1, 2) = *((unsigned char *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DeviceState(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 113)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DeviceState(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 7sub_10004ACAC(3, 1, 2) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 11sub_10004ACAC(3, 1, 2) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 113) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DeviceState()
{
  return &type metadata for DeviceState;
}

BOOL sub_100081594()
{
  sub_1000818F8(v0 + 100, (uint64_t)v14);
  sub_1000818F8((uint64_t)v14, (uint64_t)&v15);
  if (v16) {
    return 0;
  }
  float v1 = v15;
  sub_1000818F8(v0 + 108, (uint64_t)&v13);
  sub_1000818F8((uint64_t)&v13, (uint64_t)&v17);
  if (v18) {
    return 0;
  }
  float v3 = v17;
  long long v4 = self;
  id v5 = [v4 standardUserDefaults];
  Defaults.maxDeviceAcceleration.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v5 floatForKey:v6];
  float v8 = v7;

  if (v8 < v1) {
    return 1;
  }
  id v9 = [v4 standardUserDefaults];
  Defaults.maxDeviceRotation.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 floatForKey:v10];
  float v12 = v11;

  return v12 < v3;
}

id sub_10008170C()
{
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  id result = (id)*((void *)&xmmword_1004F8000 + 1);
  if (*((void *)&xmmword_1004F8000 + 1))
  {
    id v1 = (id)*((void *)&xmmword_1004F8000 + 1);
    qword_1004F7FC8 = Contexts.PrivateQueue.init(_:)();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10008178C@<X0>(void *a1@<X8>)
{
  if (qword_1004C2990 != -1) {
    swift_once();
  }
  long long v2 = (void *)qword_1004F7FC8;
  *a1 = qword_1004F7FC8;

  return v2;
}

uint64_t sub_1000817F8(uint64_t a1, long long *a2)
{
  long long v2 = *(_OWORD *)(a1 + 80);
  unsigned char v12[4] = *(_OWORD *)(a1 + 64);
  v12[5] = v2;
  v12[6] = *(_OWORD *)(a1 + 96);
  char v13 = *(unsigned char *)(a1 + 112);
  long long v3 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v4;
  long long v5 = *a2;
  long long v6 = a2[1];
  long long v7 = a2[3];
  void v14[2] = a2[2];
  v14[3] = v7;
  v14[0] = v5;
  v14[1] = v6;
  long long v8 = a2[4];
  long long v9 = a2[5];
  long long v10 = a2[6];
  char v15 = *((unsigned char *)a2 + 112);
  v14[5] = v9;
  v14[6] = v10;
  v14[4] = v8;
  return sub_100081960((uint64_t)v12, (uint64_t)v14) & 1;
}

unint64_t sub_10008187C(uint64_t a1)
{
  unint64_t result = sub_1000818A4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1000818A4()
{
  unint64_t result = qword_1004C74C0;
  if (!qword_1004C74C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C74C0);
  }
  return result;
}

uint64_t sub_1000818F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894(&qword_1004C74C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100081960(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned char *)(a1 + 64))
  {
    if (!*(unsigned char *)(a2 + 64)) {
      return v2;
    }
  }
  else if ((v2 & 1) != 0 {
         || (vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(*(float32x4_t *)(a1 + 32), *(float32x4_t *)(a2 + 32)), (int8x16_t)vceqq_f32(*(float32x4_t *)(a1 + 48), *(float32x4_t *)(a2 + 48))), vandq_s8((int8x16_t)vceqq_f32(*(float32x4_t *)(a1 + 16), *(float32x4_t *)(a2 + 16)), (int8x16_t)vceqq_f32(*(float32x4_t *)a1, *(float32x4_t *)a2)))) & 0x80000000) == 0)
  }
  {
    return 0;
  }
  uint64_t v2 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned char *)(a1 + 72))
  {
    if (!*(unsigned char *)(a2 + 72)) {
      return v2;
    }
  }
  else
  {
    if (*(float *)(a1 + 68) != *(float *)(a2 + 68)) {
      LOBYTE(vsub_10004ACAC(3, 1, 2) = 1;
    }
    if (v2) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 96))
  {
    if ((*(unsigned char *)(a2 + 96) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(unsigned char *)(a2 + 96)) {
      return 0;
    }
    uint64_t v3 = 0;
    long long v4 = *(_OWORD *)(a1 + 80);
    long long v5 = *(_OWORD *)(a2 + 80);
    while (1)
    {
      long long v11 = v4;
      float v8 = *(float *)((unint64_t)&v11 & 0xFFFFFFFFFFFFFFF3 | (4 * (v3 & 3)));
      long long v12 = v5;
      float v9 = *(float *)((unint64_t)&v12 & 0xFFFFFFFFFFFFFFF3 | (4 * (v3 & 3)));
      BOOL v6 = v8 == v9;
      if (v3 == 2) {
        break;
      }
      while (1)
      {
        ++v3;
        if (v6) {
          break;
        }
        BOOL v6 = 0;
        uint64_t v2 = 0;
        if (v3 == 2) {
          return v2;
        }
      }
    }
    if (v8 != v9) {
      return 0;
    }
  }
  uint64_t v2 = *(unsigned __int8 *)(a2 + 104);
  if (*(unsigned char *)(a1 + 104))
  {
    if (!*(unsigned char *)(a2 + 104)) {
      return v2;
    }
    goto LABEL_30;
  }
  if (*(float *)(a1 + 100) != *(float *)(a2 + 100)) {
    LOBYTE(vsub_10004ACAC(3, 1, 2) = 1;
  }
  if ((v2 & 1) == 0)
  {
LABEL_30:
    char v10 = *(unsigned char *)(a2 + 112);
    if (*(unsigned char *)(a1 + 112))
    {
      if (*(unsigned char *)(a2 + 112)) {
        return 1;
      }
    }
    else
    {
      if (*(float *)(a1 + 108) != *(float *)(a2 + 108)) {
        char v10 = 1;
      }
      if ((v10 & 1) == 0) {
        return 1;
      }
    }
  }
  return 0;
}

id sub_100081B28(char a1, uint64_t a2, char a3)
{
  long long v4 = v3;
  float v8 = self;
  id v9 = [v8 _currentTraitCollection];
  if ((a1 & 1) == 0 && (a3 & 1) != 0 && UIAccessibilityIsInvertColorsEnabled())
  {
    id v10 = [v8 traitCollectionWithUserInterfaceStyle:2];
    [v8 _setCurrentTraitCollection:v10];
LABEL_10:

    id v17 = [v4 CGColor];
    [v8 _setCurrentTraitCollection:v9];
    id v18 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v17];

    return v18;
  }
  if (a1) {
    uint64_t v11 = 2;
  }
  else {
    uint64_t v11 = 1;
  }
  id v12 = [v8 traitCollectionWithUserInterfaceStyle:v11];
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1003F94A0;
  *(void *)(v13 + 3sub_10004ACAC(3, 1, 2) = v12;
  id v14 = v12;
  id result = [v8 _traitCollectionWithBackgroundLevel:a2];
  if (result)
  {
    *(void *)(v13 + 40) = result;
    specialized Array._endMutation()();
    sub_100081D2C();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v10 = [v8 traitCollectionWithTraitsFromCollections:isa];

    [v8 _setCurrentTraitCollection:v10];
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

unint64_t sub_100081D2C()
{
  unint64_t result = qword_1004C74D0;
  if (!qword_1004C74D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1004C74D0);
  }
  return result;
}

uint64_t sub_100081D6C(char *a1, char *a2)
{
  return sub_100113490(*a1, *a2);
}

Swift::Int sub_100081D78()
{
  return Hasher._finalize()();
}

uint64_t sub_100081DF0()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100081E54()
{
  return Hasher._finalize()();
}

uint64_t sub_100081EC8@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100485668, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100081F28(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701274725;
  if (*v1) {
    uint64_t v2 = 0x72656E726F63;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100081F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5 = v4;
  uint64_t v7 = *v4;
  float v8 = *(float *)(*v4 + 184) * *(float *)(*v4 + 184);
  if (*(unsigned char *)(*v4 + 202) == 1 && *(unsigned char *)(v7 + 200) == 1)
  {
    a1 = sub_100016FEC(a4, (uint64_t)v34, &qword_1004C74D8);
    if (v35 != 3)
    {
      *(_OWORD *)id v36 = v34[0];
      *(_OWORD *)&v36[16] = v34[1];
      *(_OWORD *)&v36[32] = v35;
      v37[0] = *(_OWORD *)&v36[8];
      *(_OWORD *)((char *)v37 + 9) = *(_OWORD *)&v36[17];
      sub_100016FEC((uint64_t)v37 + 8, (uint64_t)v38, &qword_1004C74E0);
      a1 = sub_100016FEC((uint64_t)v38, (uint64_t)v46, &qword_1004C74E0);
      if (v47 != 2)
      {
        if (v47)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
          a1 = swift_bridgeObjectRelease();
          if ((v9 & 1) == 0) {
            goto LABEL_16;
          }
        }
        sub_100016FEC((uint64_t)(v4 + 14), (uint64_t)v41, &qword_1004C74E8);
        a1 = sub_100016FEC((uint64_t)v41, (uint64_t)&v42, &qword_1004C74E8);
        if (v43 != 2)
        {
          if (v43)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
            a1 = swift_bridgeObjectRelease();
            if ((v10 & 1) == 0) {
              goto LABEL_16;
            }
          }
          type metadata accessor for MeasureCamera();
          static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
          CGPoint.init(xy:)();
          uint64_t v12 = v11;
          a1 = static CGPoint.distanceSq(_:_:)();
          if (v13 < v8) {
            return v12;
          }
        }
      }
    }
  }
LABEL_16:
  if (*(unsigned char *)(v7 + 200) != 1) {
    goto LABEL_29;
  }
  a1 = sub_100016FEC(a4, (uint64_t)v31, &qword_1004C74D8);
  if (v32 == 3) {
    goto LABEL_29;
  }
  v33[0] = v31[0];
  v33[1] = v31[1];
  v33[2] = v32;
  v39[0] = *(_OWORD *)((char *)v33 + 8);
  *(_OWORD *)((char *)v39 + 9) = *(_OWORD *)((char *)&v33[1] + 1);
  sub_100016FEC((uint64_t)v39 + 8, (uint64_t)v40, &qword_1004C74E0);
  a1 = sub_100016FEC((uint64_t)v40, (uint64_t)&v44, &qword_1004C74E0);
  if (v45 == 2) {
    goto LABEL_29;
  }
  if (v45)
  {
    a1 = swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    a1 = swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
LABEL_29:
      float32x4_t v23 = (*(void *(**)(void *__return_ptr, uint64_t))(*(void *)v5[13] + 144))(v28, a1);
      if ((v30 & 1) == 0 && *(float *)(v7 + 196) < v29) {
        return 0;
      }
      __chkstk_darwin(v23);
      uint64_t v24 = swift_bridgeObjectRetain();
      uint64_t v14 = sub_100082E6C(v24, (uint64_t (*)(void))sub_100082D2C);
      char v26 = v25;
      swift_bridgeObjectRelease();
      if (v26) {
        return 0;
      }
      return v14;
    }
  }
  uint64_t v16 = v5[12];
  uint64_t v17 = *(void *)(v16 + 16);
  if (!v17) {
    goto LABEL_29;
  }
  float v18 = *(float *)(v7 + 112) * *(float *)(v7 + 112);
  uint64_t v19 = v16 + 40;
  while (1)
  {
    uint64_t v20 = *(void *)(v19 - 8);
    a1 = static CGPoint.distanceSq(_:_:)();
    if (v21 < v18)
    {
      a1 = static CGPoint.distanceSq(_:_:)();
      if (v22 < v8) {
        return v20;
      }
    }
    v19 += 16;
    if (!--v17) {
      goto LABEL_29;
    }
  }
}

uint64_t sub_1000823C4(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v10 = *v6;
  uint64_t v11 = sub_100016FEC(a6, (uint64_t)v36, &qword_1004C74D8);
  if (v37 != 3)
  {
    *(_OWORD *)NSString v38 = v36[0];
    *(_OWORD *)&v38[16] = v36[1];
    *(_OWORD *)&v38[32] = v37;
    v39[0] = *(_OWORD *)&v38[8];
    *(_OWORD *)((char *)v39 + 9) = *(_OWORD *)&v38[17];
    sub_100016FEC((uint64_t)v39 + 8, (uint64_t)v40, &qword_1004C74E0);
    uint64_t v11 = sub_100016FEC((uint64_t)v40, (uint64_t)&v41, &qword_1004C74E0);
    if (v42 != 2)
    {
      char v12 = v42 & 1;
      long long v32 = v41;
      if ((v42 & 1) == 0)
      {
        uint64_t v11 = swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t v11 = swift_bridgeObjectRelease();
      if (v13)
      {
LABEL_6:
        v31[1] = v31;
        __chkstk_darwin(v11);
        v25[2] = v7;
        long long v26 = v32;
        char v27 = v12;
        double v28 = a1;
        double v29 = a2;
        int v30 = v14;
        uint64_t v15 = swift_bridgeObjectRetain();
        uint64_t v16 = sub_100082E6C(v15, (uint64_t (*)(void))sub_100082F9C);
        char v18 = v17;
        uint64_t v11 = swift_bridgeObjectRelease();
        if ((v18 & 1) == 0) {
          return v16;
        }
      }
    }
  }
  uint64_t v19 = (*(void *(**)(void *__return_ptr, uint64_t))(*(void *)v7[13] + 144))(v33, v11);
  if ((v35 & 1) == 0 && *(float *)(v10 + 196) < v34) {
    return 0;
  }
  __chkstk_darwin(v19);
  *(double *)&v25[-4] = a1;
  *(double *)&v25[-3] = a2;
  LODWORD(v25[-2]) = v20;
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_100082E6C(v21, (uint64_t (*)(void))sub_100082D2C);
  char v23 = v22;
  swift_bridgeObjectRelease();
  if (v23) {
    return 0;
  }
  return v16;
}

BOOL sub_1000826A4(uint64_t *a1, double a2, double a3, double a4, double a5, double a6, double a7, float a8)
{
  uint64_t v9 = *a1;
  static CGPoint.distanceSq(_:_:)();
  if (v10 >= (float)(*(float *)(v9 + 120) * *(float *)(v9 + 120))) {
    return 0;
  }
  static CGPoint.distanceSq(_:_:)();
  return v11 < a8;
}

float sub_100082728@<S0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100016FEC(a1, (uint64_t)&v10, &qword_1004C74D8);
  sub_100016FEC(a1, (uint64_t)v11, &qword_1004C74D8);
  sub_100012894(&qword_1004C74F0);
  OptionalSmoothedValue.updated(with:)();
  float result = v6;
  *(void *)a2 = v5;
  *(float *)(a2 + 8) = v6;
  *(_OWORD *)(a2 + 16) = v7;
  *(unsigned char *)(a2 + 3sub_10004ACAC(3, 1, 2) = v8;
  *(void *)(a2 + 40) = v9;
  return result;
}

uint64_t sub_10008287C(char a1)
{
  uint64_t v1 = a1 & 1;
  CGPoint.lerped<A>(newValue:t:)();
  return v1;
}

uint64_t sub_1000828B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10008287C(*(unsigned char *)(a1 + 16));
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = result & 1;
  return result;
}

uint64_t Corner.lerped<A>(newValue:t:)()
{
  return CGPoint.lerped<A>(newValue:t:)();
}

uint64_t sub_100082924@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = Corner.lerped<A>(newValue:t:)();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  return result;
}

uint64_t getEnumTagSinglePayload for EdgeDetectionPointInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EdgeDetectionPointInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EdgeDetectionPointInfo()
{
  return &type metadata for EdgeDetectionPointInfo;
}

uint64_t destroy for EdgeDetectionResults(id *a1)
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for EdgeDetectionResults(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  BOOL v4 = *(void **)(a2 + 16);
  int v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 7sub_10004ACAC(3, 1, 2) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 11sub_10004ACAC(3, 1, 2) = *(_OWORD *)(a2 + 112);
  swift_retain();
  id v10 = v3;
  id v11 = v4;
  id v12 = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for EdgeDetectionResults(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  BOOL v4 = *(void **)(a2 + 8);
  int v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 16);
  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  id v10 = *(void **)(a2 + 24);
  id v11 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v10;
  id v12 = v10;

  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 7sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  long long v13 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 11sub_10004ACAC(3, 1, 2) = v13;
  return a1;
}

uint64_t assignWithTake for EdgeDetectionResults(uint64_t a1, uint64_t a2)
{
  swift_release();
  BOOL v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  int v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 7sub_10004ACAC(3, 1, 2) = *(_OWORD *)(a2 + 72);
  swift_release();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  *(_OWORD *)(a1 + 11sub_10004ACAC(3, 1, 2) = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

ValueMetadata *type metadata accessor for EdgeDetectionResults()
{
  return &type metadata for EdgeDetectionResults;
}

uint64_t sub_100082D30(uint64_t result, uint64_t (*a2)(void))
{
  uint64_t v4 = result;
  unint64_t v5 = 0;
  uint64_t v6 = *(void *)(result + 16);
  while (1)
  {
    if (v6 == v5) {
      goto LABEL_12;
    }
    if (v5 >= *(void *)(v4 + 16)) {
      break;
    }
    long long v10 = *(_OWORD *)(v4 + 16 * v5 + 32);
    uint64_t result = a2();
    if (v2)
    {
      swift_release();
LABEL_12:
      swift_bridgeObjectRelease();
      return (uint64_t)_swiftEmptyArrayStorage;
    }
    ++v5;
    if (result)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_1000BBDB4(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
      }
      double v8 = _swiftEmptyArrayStorage[2];
      double v7 = _swiftEmptyArrayStorage[3];
      *(void *)&double v9 = *(void *)&v8 + 1;
      if (*(void *)&v8 >= *(void *)&v7 >> 1)
      {
        uint64_t result = (uint64_t)sub_1000BBDB4((double *)(*(void *)&v7 > 1uLL), *(void *)&v8 + 1, 1);
        *(void *)&double v9 = *(void *)&v8 + 1;
      }
      _swiftEmptyArrayStorage[2] = v9;
      *(_OWORD *)&_swiftEmptyArrayStorage[2 * *(void *)&v8 + 4] = v10;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100082E6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_100082D30(v3, a2);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    double v6 = *(double *)(v4 + 32);
    uint64_t v7 = v5 - 1;
    if (v5 != 1)
    {
      uint64_t v8 = v4 + 56;
      do
      {
        double v9 = *(double *)(v8 - 8);
        static CGPoint.distanceSq(_:_:)();
        float v11 = v10;
        static CGPoint.distanceSq(_:_:)();
        if (v11 < v12) {
          double v6 = v9;
        }
        v8 += 16;
        --v7;
      }
      while (v7);
    }
    swift_bridgeObjectRelease();
    return *(void *)&v6;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

BOOL sub_100082F6C()
{
  float v1 = *(float *)(v0 + 32);
  static CGPoint.distanceSq(_:_:)();
  return v2 < v1;
}

BOOL sub_100082F9C(double a1, double a2)
{
  return sub_1000826A4(*(uint64_t **)(v2 + 16), a1, a2, *(double *)(v2 + 24), *(double *)(v2 + 32), *(double *)(v2 + 48), *(double *)(v2 + 56), *(float *)(v2 + 64));
}

unsigned char *storeEnumTagSinglePayload for EdgeDetectionPointType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    unsigned char *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_10004ACAC(2, 1, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100083080);
      case 4:
        *(_DWORD *)(result + sub_10004ACAC(2, 1, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_10004ACAC(2, 1, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_10004ACAC(2, 1, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unsigned char *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EdgeDetectionPointType()
{
  return &type metadata for EdgeDetectionPointType;
}

unint64_t sub_1000830BC()
{
  unint64_t result = qword_1004C74F8;
  if (!qword_1004C74F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C74F8);
  }
  return result;
}

void sub_100083110(void *a1, CGFloat *a2)
{
  CGFloat v3 = *a2;
  CGFloat v4 = a2[1];
  CGFloat v5 = a2[2];
  CGFloat v6 = a2[3];
  CGFloat v7 = a2[4];
  CGFloat v8 = a2[5];
  sub_100083A5C(a1);
  if (!v9) {
    return;
  }
  uint64_t v10 = v9;
  float v34 = _swiftEmptyArrayStorage;
  int64_t v31 = v9 & ~(v9 >> 63);
  sub_1000BBDB4(0, v31, 0);
  float v11 = _swiftEmptyArrayStorage;
  id v12 = [a1 getContourCount];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = 0;
    if ([a1 getPointCountAtContourIndex:0])
    {
LABEL_4:
      if (v10 < 0) {
        goto LABEL_37;
      }
      char v15 = 0;
      goto LABEL_13;
    }
    if (v13 != (id)1)
    {
      uint64_t v14 = 1;
      while (![a1 getPointCountAtContourIndex:v14])
      {
        uint64_t v16 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          goto LABEL_35;
        }
        ++v14;
        if ((id)v16 == v13) {
          goto LABEL_11;
        }
      }
      goto LABEL_4;
    }
  }
LABEL_11:
  id v17 = [a1 getContourCount];
  if ((v10 & 0x8000000000000000) == 0)
  {
    uint64_t v14 = (uint64_t)v17;
    char v15 = 1;
LABEL_13:
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    int64_t v20 = v31;
    while (v18 != v20)
    {
      if (v15) {
        goto LABEL_39;
      }
      [a1 getPointAtContourIndex:v14 pointIndex:v19];
      v33.CGFloat a = v3;
      v33.CGFloat b = v4;
      v33.CGFloat c = v5;
      v33.CGFloat d = v6;
      v33.CGFloat tx = v7;
      v33.CGFloat ty = v8;
      CGPoint v21 = CGPointApplyAffineTransform(v35, &v33);
      float v34 = v11;
      unint64_t v23 = *((void *)v11 + 2);
      unint64_t v22 = *((void *)v11 + 3);
      if (v23 >= v22 >> 1)
      {
        sub_1000BBDB4((double *)(v22 > 1), v23 + 1, 1);
        int64_t v20 = v31;
        float v11 = v34;
      }
      *((void *)v11 + sub_10004ACAC(3, 1, 2) = v23 + 1;
      *(CGPoint *)&v11[2 * v23 + 4] = v21;
      if (__OFADD__(v19++, 1)) {
        goto LABEL_34;
      }
      if (v19 == [a1 getPointCountAtContourIndex:v14])
      {
        if (__OFADD__(v14, 1)) {
          goto LABEL_40;
        }
        uint64_t v32 = v14 + 1;
        if ((id)(v14 + 1) == [a1 getContourCount])
        {
LABEL_29:
          uint64_t v14 = (uint64_t)[a1 getContourCount];
          uint64_t v19 = 0;
          char v15 = 1;
        }
        else
        {
          sub_1000848A4();
          sub_1000848E4();
          while (1)
          {
            id v25 = a1;
            long long v26 = sub_100153EC0(&v33, &v32);
            uint64_t v28 = *(void *)(v27 + 8);
            id v29 = *(id *)v27;
            ((void (*)(CGAffineTransform *, void))v26)(&v33, 0);

            if ([v29 getPointCountAtContourIndex:v28]) {
              break;
            }

            id v30 = (id)(v32 + 1);
            if (__OFADD__(v32, 1)) {
              goto LABEL_38;
            }
            ++v32;
            if (v30 == [v25 getContourCount]) {
              goto LABEL_29;
            }
          }
          uint64_t v14 = v32;

          uint64_t v19 = 0;
          char v15 = 0;
        }
        int64_t v20 = v31;
      }
      else
      {
        char v15 = 0;
      }
      if (++v18 == v10) {
        return;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

__n128 sub_100083444@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  unint64_t v4 = v3;
  sub_100016FEC(a2, (uint64_t)v115, &qword_1004C5FD0);
  sub_100016FEC((uint64_t)v115, (uint64_t)v118, &qword_1004C5FD0);
  CGFloat v8 = *(void **)a1;
  uint64_t v9 = self;
  int v10 = [v9 calcHistogramMedianForImage:v8];
  double v11 = (double)v10 * 0.8;
  double v12 = (double)v10 * 1.66;
  id v13 = [v8 getSize];
  double v15 = v14;
  double v17 = v16;
  uint64_t v18 = *(unsigned int *)(v3 + 176);
  uint64_t v19 = (*(uint64_t (**)(id))(v3 + 160))(v13);
  uint64_t v20 = (*(uint64_t (**)(double, double))(v3 + 144))(v15, v17);
  id v21 = [v9 blurredImage:v8 blurSize:*(unsigned int *)(v4 + 136)];
  id v22 = [v9 findCannyEdgesInImage:v21 threshold1:v11 threshold2:v12];

  unint64_t v23 = v22;
  id v24 = [v9 findContoursInImage:v22];
  [v9 filterContours:v24 forMinEdgeLength:v20];
  id v25 = [v9 findCornersAndFilterContours:v24 forMaxEdgeTurns:v18 forTurningPointMargin:v19];
  uint64_t v94 = a2;
  sub_100016FEC(a2, (uint64_t)v116, &qword_1004C5FD0);
  float v96 = v25;
  if (sub_100016B28(v116) == 1)
  {
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v26 = sub_100012894((uint64_t *)&unk_1004C6A90);
    uint64_t v27 = v24;
    uint64_t v28 = qword_1004C2E30;
    id v89 = v23;
    uint64_t v91 = v27;
    id v29 = v27;
    id v30 = v25;
    swift_retain();
    if (v28 != -1) {
      swift_once();
    }
    uint64_t v31 = qword_1004F8630;
    uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 272);
    swift_retain();
    uint64_t v33 = v32(KeyPath, v31);
    swift_retain();
    unint64_t v34 = 0;
    unint64_t v35 = 0;
    id v36 = _swiftEmptyArrayStorage;
    int64x2_t v37 = vdupq_n_s64((unint64_t)_swiftEmptyArrayStorage);
    long long v38 = 0uLL;
    char v39 = 2;
    double v40 = 1.0;
    unint64_t v41 = v4;
    unint64_t v42 = v4;
    long long v43 = 0uLL;
    id v24 = v91;
    id v44 = v89;
  }
  else
  {
    sub_100016FEC((uint64_t)v118, (uint64_t)&v101, &qword_1004C5FD0);
    unint64_t v34 = v112;
    unint64_t v35 = v113;
    char v39 = v114;
    uint64_t v33 = v111;
    int64x2_t v37 = v110;
    id v36 = v108;
    unint64_t v42 = v109;
    double v40 = v107;
    long long v38 = v105;
    long long v43 = v106;
    id v29 = v103;
    id v30 = v104;
    unint64_t v41 = v101;
    id v44 = v102;
  }
  uint64_t v88 = v37.i64[0];
  unint64_t v90 = v34;
  unint64_t v92 = v35;
  char v93 = v39;
  unint64_t v101 = v41;
  id v102 = v44;
  id v103 = v29;
  id v104 = v30;
  long long v105 = v38;
  long long v106 = v43;
  double v107 = v40;
  long long v108 = v36;
  unint64_t v109 = v42;
  int64x2_t v110 = v37;
  uint64_t v111 = v33;
  unint64_t v112 = v34;
  unint64_t v113 = v35;
  char v114 = v39;
  unint64_t v45 = *(void *)(v4 + 128);
  sub_100084494(v94);
  unint64_t v95 = v45;
  static CGSize.* infix(_:_:)();
  CGFloat v46 = *(double *)(a1 + 40);
  CGFloat v47 = *(double *)(a1 + 48);
  CGFloat v48 = *(double *)(a1 + 56);
  CGFloat v49 = *(double *)(a1 + 64);
  CGAffineTransformMakeScale(&t1, 1.0 / v50, 1.0 / v51);
  long long v81 = *(_OWORD *)&t1.c;
  long long v84 = *(_OWORD *)&t1.a;
  CGFloat tx = t1.tx;
  CGFloat ty = t1.ty;
  ARCameraImageToViewTransform();
  long long v54 = *(_OWORD *)&t1.a;
  long long v55 = *(_OWORD *)&t1.c;
  long long v56 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.CGFloat a = v84;
  *(_OWORD *)&t1.CGFloat c = v81;
  t1.CGFloat tx = tx;
  t1.CGFloat ty = ty;
  *(_OWORD *)&t2.CGFloat a = v54;
  *(_OWORD *)&t2.CGFloat c = v55;
  *(_OWORD *)&t2.CGFloat tx = v56;
  CGAffineTransformConcat(&v100, &t1, &t2);
  long long v82 = *(_OWORD *)&v100.c;
  long long v85 = *(_OWORD *)&v100.a;
  CGFloat v57 = v100.tx;
  CGFloat v58 = v100.ty;
  CGAffineTransformMakeScale(&t1, v48, v49);
  long long v59 = *(_OWORD *)&t1.a;
  long long v60 = *(_OWORD *)&t1.c;
  long long v61 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.CGFloat a = v85;
  *(_OWORD *)&t1.CGFloat c = v82;
  t1.CGFloat tx = v57;
  t1.CGFloat ty = v58;
  *(_OWORD *)&t2.CGFloat a = v59;
  *(_OWORD *)&t2.CGFloat c = v60;
  *(_OWORD *)&t2.CGFloat tx = v61;
  CGAffineTransformConcat(&v100, &t1, &t2);
  long long v83 = *(_OWORD *)&v100.c;
  long long v86 = *(_OWORD *)&v100.a;
  CGFloat v62 = v100.tx;
  CGFloat v63 = v100.ty;
  CGAffineTransformMakeTranslation(&t1, v46, v47);
  long long v64 = *(_OWORD *)&t1.a;
  long long v65 = *(_OWORD *)&t1.c;
  long long v66 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.CGFloat a = v86;
  *(_OWORD *)&t1.CGFloat c = v83;
  t1.CGFloat tx = v62;
  t1.CGFloat ty = v63;
  *(_OWORD *)&t2.CGFloat a = v64;
  *(_OWORD *)&t2.CGFloat c = v65;
  *(_OWORD *)&t2.CGFloat tx = v66;
  CGAffineTransformConcat(&v100, &t1, &t2);
  CGAffineTransform t2 = v100;
  uint64_t v67 = swift_getKeyPath();
  uint64_t v68 = sub_100012894((uint64_t *)&unk_1004C6A90);
  uint64_t v69 = qword_1004C2E30;
  id v70 = v23;
  id v71 = v24;
  id v72 = v96;
  swift_retain();
  if (v69 != -1) {
    swift_once();
  }
  uint64_t v73 = qword_1004F8630;
  uint64_t v74 = *(uint64_t (**)(uint64_t, uint64_t))(v68 + 272);
  swift_retain();
  uint64_t v75 = v74(v67, v73);
  v98.n128_u64[0] = v41;
  v98.n128_u64[1] = (unint64_t)_swiftEmptyArrayStorage;
  id v99 = _swiftEmptyArrayStorage;
  id v76 = v71;
  swift_retain();
  sub_100083110(v76, &t2.a);
  unint64_t v78 = v77;
  swift_bridgeObjectRelease();

  sub_10004F4F4(v88, v72, (long long *)&t2);
  sub_100084814(&v101);

  unint64_t v79 = v99;
  __n128 result = v98;
  a3->n128_u64[0] = v41;
  a3->n128_u64[1] = (unint64_t)v70;
  a3[1].n128_u64[0] = (unint64_t)v76;
  a3[1].n128_u64[1] = (unint64_t)v72;
  a3[2].n128_f64[0] = v46;
  a3[2].n128_f64[1] = v47;
  a3[3].n128_f64[0] = v48;
  a3[3].n128_f64[1] = v49;
  a3[4].n128_u64[0] = v95;
  a3[4].n128_u64[1] = v78;
  a3[5] = result;
  a3[6].n128_u64[0] = (unint64_t)v79;
  a3[6].n128_u64[1] = v75;
  a3[7].n128_u64[0] = v90;
  a3[7].n128_u64[1] = v92;
  a3[8].n128_u8[0] = v93;
  return result;
}

void sub_100083A5C(void *a1)
{
  id v2 = [a1 getContourCount];
  if (!v2) {
    goto LABEL_9;
  }
  id v3 = v2;
  if ([a1 getPointCountAtContourIndex:0])
  {
    int v4 = 0;
    uint64_t v5 = 0;
LABEL_10:
    id v7 = [a1 getContourCount];
    sub_1000844F8(v5, 0, v4, (uint64_t)v7, 0, 1, a1);
    return;
  }
  if (v3 == (id)1)
  {
LABEL_9:
    uint64_t v5 = (uint64_t)[a1 getContourCount];
    int v4 = 1;
    goto LABEL_10;
  }
  uint64_t v5 = 1;
  while (1)
  {
    if ([a1 getPointCountAtContourIndex:v5])
    {
      int v4 = 0;
      goto LABEL_10;
    }
    uint64_t v6 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    ++v5;
    if ((id)v6 == v3) {
      goto LABEL_9;
    }
  }
  __break(1u);
}

uint64_t sub_100083B50(double a1, double a2)
{
  if (a2 > a1) {
    a1 = a2;
  }
  if (a1 == 40.0) {
    return 30;
  }
  if (a1 == 49.0) {
    return 45;
  }
  if (a1 == 59.0) {
    return 55;
  }
  return 75;
}

uint64_t sub_100083BAC(double a1, double a2)
{
  if (a2 > a1) {
    a1 = a2;
  }
  if (a1 == 49.0 || a1 == 40.0) {
    return 17;
  }
  else {
    return 20;
  }
}

uint64_t sub_100083BE0()
{
  uint64_t v1 = v0;
  id v2 = (_OWORD *)(v0 + 24);
  swift_beginAccess();
  if ((*(unsigned char *)(v1 + 56) & 1) == 0) {
    vImage_Buffer.deallocate()();
  }
  *id v2 = 0u;
  v2[1] = 0u;
  *(unsigned char *)(v1 + 56) = 1;
  swift_endAccess();
  sub_100028914(*(void *)(v1 + 64));
  long long v3 = *(_OWORD *)(v1 + 160);
  uint64_t v7[4] = *(_OWORD *)(v1 + 144);
  v7[5] = v3;
  v8[0] = *(_OWORD *)(v1 + 176);
  *(_OWORD *)((char *)v8 + 1sub_10004ACAC(2, 1, 1) = *(_OWORD *)(v1 + 187);
  long long v4 = *(_OWORD *)(v1 + 96);
  v7[0] = *(_OWORD *)(v1 + 80);
  v7[1] = v4;
  long long v5 = *(_OWORD *)(v1 + 128);
  uint64_t v7[2] = *(_OWORD *)(v1 + 112);
  v7[3] = v5;
  sub_1000849B4((uint64_t)v7);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EdgeDetector()
{
  return self;
}

uint64_t destroy for EdgeDetector.Parameters()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for EdgeDetector.Parameters(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v3 = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 7sub_10004ACAC(3, 1, 2) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = v3;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 11sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(_WORD *)(a1 + 12sub_10004ACAC(2, 1, 1) = *(_WORD *)(a2 + 121);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for EdgeDetector.Parameters(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  uint64_t v4 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 7sub_10004ACAC(3, 1, 2) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
  *(_DWORD *)(a1 + 11sub_10004ACAC(3, 1, 2) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 12sub_10004ACAC(2, 1, 1) = *(unsigned char *)(a2 + 121);
  *(unsigned char *)(a1 + 12sub_10004ACAC(3, 1, 2) = *(unsigned char *)(a2 + 122);
  return a1;
}

__n128 initializeWithTake for EdgeDetector.Parameters(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 3sub_10004ACAC(3, 1, 2) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_OWORD *)(a1 + 107) = *(long long *)((char *)a2 + 107);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for EdgeDetector.Parameters(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = v4;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 100) = *(_OWORD *)(a2 + 100);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 12sub_10004ACAC(2, 1, 1) = *(unsigned char *)(a2 + 121);
  *(unsigned char *)(a1 + 12sub_10004ACAC(3, 1, 2) = *(unsigned char *)(a2 + 122);
  return a1;
}

uint64_t getEnumTagSinglePayload for EdgeDetector.Parameters(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 123)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(vsub_10004ACAC(3, 1, 2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EdgeDetector.Parameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 7sub_10004ACAC(3, 1, 2) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 12sub_10004ACAC(3, 1, 2) = 0;
    *(_WORD *)(result + 120) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 123) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 123) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EdgeDetector.Parameters()
{
  return &type metadata for EdgeDetector.Parameters;
}

void sub_100084010(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>, CGFloat a6@<D2>, CGFloat a7@<D3>, double a8@<D4>, double a9@<D5>)
{
  double v15 = (__CVBuffer *)[a1 capturedImage];
  int64_t WidthOfPlane = CVPixelBufferGetWidthOfPlane(v15, 0);
  CGFloat HeightOfPlane = (double)(uint64_t)CVPixelBufferGetHeightOfPlane(v15, 0);
  CGAffineTransformMakeScale(&t1, 1.0 / a8, 1.0 / a9);
  long long v60 = *(_OWORD *)&t1.c;
  long long v62 = *(_OWORD *)&t1.a;
  CGFloat tx = t1.tx;
  CGFloat ty = t1.ty;
  double v54 = a8;
  double v55 = a9;
  ARViewToCameraImageTransform();
  long long v20 = *(_OWORD *)&t1.a;
  long long v21 = *(_OWORD *)&t1.c;
  long long v22 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.CGFloat a = v62;
  *(_OWORD *)&t1.CGFloat c = v60;
  t1.CGFloat tx = tx;
  t1.CGFloat ty = ty;
  *(_OWORD *)&t2.CGFloat a = v20;
  *(_OWORD *)&t2.CGFloat c = v21;
  *(_OWORD *)&t2.CGFloat tx = v22;
  CGAffineTransformConcat(&v67, &t1, &t2);
  long long v61 = *(_OWORD *)&v67.c;
  long long v63 = *(_OWORD *)&v67.a;
  CGFloat v23 = v67.tx;
  CGFloat v24 = v67.ty;
  CGAffineTransformMakeScale(&t1, (double)WidthOfPlane, HeightOfPlane);
  long long v25 = *(_OWORD *)&t1.a;
  long long v26 = *(_OWORD *)&t1.c;
  long long v27 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.CGFloat a = v63;
  *(_OWORD *)&t1.CGFloat c = v61;
  t1.CGFloat tx = v23;
  t1.CGFloat ty = v24;
  *(_OWORD *)&t2.CGFloat a = v25;
  *(_OWORD *)&t2.CGFloat c = v26;
  *(_OWORD *)&t2.CGFloat tx = v27;
  CGAffineTransformConcat(&v67, &t1, &t2);
  CGFloat c = v67.c;
  CGFloat a = v67.a;
  CGFloat d = v67.d;
  CGFloat v29 = v67.tx;
  CGFloat v58 = v67.ty;
  CGFloat b = v67.b;
  CGAffineTransform t1 = v67;
  CGFloat v30 = v67.b;
  v72.CGFloat x = a4;
  v72.CGFloat y = a5;
  CGPoint v31 = CGPointApplyAffineTransform(v72, &t1);
  v75.origin.CGFloat x = a4;
  v75.origin.CGFloat y = a5;
  v75.size.width = a6;
  v75.size.height = a7;
  CGFloat MidX = CGRectGetMidX(v75);
  v76.origin.CGFloat x = a4;
  v76.origin.CGFloat y = a5;
  v76.size.width = a6;
  v76.size.height = a7;
  v73.CGFloat y = CGRectGetMidY(v76);
  t1.CGFloat a = a;
  t1.CGFloat b = v30;
  t1.CGFloat c = c;
  t1.CGFloat d = d;
  t1.CGFloat tx = v29;
  t1.CGFloat ty = v58;
  v73.CGFloat x = MidX;
  CGPointApplyAffineTransform(v73, &t1);
  CGPoint.init(_:)();
  static CGPoint.+ infix(_:_:)();
  t1.CGFloat a = a;
  t1.CGFloat b = b;
  t1.CGFloat c = c;
  t1.CGFloat d = d;
  t1.CGFloat tx = v29;
  t1.CGFloat ty = v58;
  CGPoint v33 = CGPointApplyAffineTransform(v74, &t1);
  double v34 = vabdd_f64(v33.x, v31.x);
  double v35 = vabdd_f64(v33.y, v31.y);
  static CGSize.* infix(_:_:)();
  CGPoint.init(_:)();
  static CGPoint.- infix(_:_:)();
  CGFloat v37 = v36;
  CGFloat v39 = v38;
  t1.CGFloat a = v36;
  t1.CGFloat b = v38;
  t1.CGFloat c = v34;
  t1.CGFloat d = v35;
  LOBYTE(t1.tx) = 0;
  static vImage_Buffer.wrap(pixelBuffer:planeIndex:srcRect:)();
  sub_100016FEC((uint64_t)v70, (uint64_t)&v67, &qword_1004C4108);
  if ((LOBYTE(v67.tx) & 1) == 0)
  {
    swift_beginAccess();
    sub_100016FEC(v9 + 24, (uint64_t)&t2, &qword_1004C4108);
    static vImage_Buffer.scalePlanar8(srcImageBuffer:dstImageBuffer:scaleFactor:flags:tempBuffer:)();
    sub_100016FEC((uint64_t)v71, v9 + 24, &qword_1004C4108);
  }
  swift_beginAccess();
  if (*(unsigned char *)(v9 + 56))
  {
    if (qword_1004C2B48 != -1) {
      swift_once();
    }
    v40._object = (void *)0x8000000100422EF0;
    v40._uint64_t countAndFlagsBits = 0xD000000000000029;
    Log.error(_:isPrivate:)(v40, 0);

    id v41 = 0;
    a2 = 0;
    CGFloat v37 = 0.0;
    CGFloat v39 = 0.0;
    double v34 = 0.0;
    double v35 = 0.0;
    CGFloat v42 = 0.0;
    CGFloat v43 = 0.0;
    CGFloat v44 = 0.0;
    CGFloat v45 = 0.0;
    double v46 = 0.0;
    double v47 = 0.0;
    goto LABEL_10;
  }
  unint64_t v48 = *(void *)(v9 + 32);
  uint64_t v49 = *(void *)(v9 + 40);
  if ((v49 | v48) >> 31)
  {
    __break(1u);
  }
  else
  {
    uint64_t v50 = *(void *)(v9 + 24);
    if (v50)
    {
      uint64_t v51 = *(void *)(v9 + 48);
      id v52 = objc_allocWithZone((Class)OpenCVWrapperImage);
      LODWORD(v53) = 1.0;
      id v41 = [v52 initWithWidth:v49 height:v48 pixelFormat:0 pixelData:v50 bytesPerRow:v51 scaleFactor:v53];

      double v46 = v54;
      double v47 = v55;
      CGFloat v44 = a6;
      CGFloat v45 = a7;
      CGFloat v42 = a4;
      CGFloat v43 = a5;
LABEL_10:
      *(void *)a3 = v41;
      *(CGFloat *)(a3 + 8) = v37;
      *(CGFloat *)(a3 + 16) = v39;
      *(double *)(a3 + 24) = v34;
      *(double *)(a3 + 3sub_10004ACAC(3, 1, 2) = v35;
      *(CGFloat *)(a3 + 40) = v42;
      *(CGFloat *)(a3 + 48) = v43;
      *(CGFloat *)(a3 + 56) = v44;
      *(CGFloat *)(a3 + 64) = v45;
      *(double *)(a3 + 7sub_10004ACAC(3, 1, 2) = v46;
      *(double *)(a3 + 80) = v47;
      *(void *)(a3 + 88) = a2;
      return;
    }
  }
  __break(1u);
}

uint64_t sub_100084494(uint64_t a1)
{
  return a1;
}

void sub_1000844F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, void *a7)
{
  id v7 = a7;
  uint64_t v11 = a2;
  if (a4 == a1)
  {
    if ((a6 & 1) == 0)
    {
      if (a3)
      {
LABEL_60:
        __break(1u);
        return;
      }
      if (a5 >= a2) {
        goto LABEL_13;
      }
LABEL_9:
      uint64_t v13 = a5;
      id v14 = a7;
      int64_t v15 = (int64_t)[v14 getContourCount];
      id v16 = [v14 getContourCount];
      if (v15 < 0 || (uint64_t)v16 < v15)
      {
LABEL_50:
        __break(1u);
      }
      else
      {
        unint64_t v17 = (unint64_t)[v14 getContourCount];

        if ((v17 & 0x8000000000000000) == 0)
        {
          a5 = v13;
          if (a4 != a1) {
            goto LABEL_15;
          }
LABEL_13:
          if ((a3 | a6)) {
            return;
          }
LABEL_42:
          uint64_t v33 = a5;
          id v34 = v7;
          id v35 = [v34 getPointCountAtContourIndex:a1];
          if ((v11 & 0x8000000000000000) == 0 && (uint64_t)v35 >= v11)
          {
            id v36 = [v34 getPointCountAtContourIndex:a1];

            if ((v33 & 0x8000000000000000) == 0 && (uint64_t)v36 >= v33) {
              return;
            }
            goto LABEL_59;
          }
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
      }
      __break(1u);
      goto LABEL_52;
    }
    if (a3) {
      return;
    }
    __break(1u);
  }
  if (a4 < a1) {
    goto LABEL_9;
  }
LABEL_15:
  if (a4 >= a1)
  {
    uint64_t v37 = a5;
    char v18 = a6 & 1;
    uint64_t v19 = a4;
    uint64_t v20 = a1;
    uint64_t v21 = v11;
    if ((a3 & 1) == 0) {
      goto LABEL_17;
    }
  }
  else
  {
    char v18 = a3 & 1;
    uint64_t v19 = a1;
    uint64_t v20 = a4;
    uint64_t v21 = a5;
    uint64_t v37 = v11;
    if ((a6 & 1) == 0)
    {
LABEL_17:
      char v38 = v18;
      id v22 = v7;
      int64_t v23 = (int64_t)[v22 getPointCountAtContourIndex:v20];
      id v24 = [v22 getPointCountAtContourIndex:v20];
      if ((v21 & 0x8000000000000000) == 0 && (uint64_t)v24 >= v21)
      {
        id v25 = [v22 getPointCountAtContourIndex:v20];

        if ((v23 & 0x8000000000000000) == 0 && (uint64_t)v25 >= v23)
        {
          BOOL v26 = __OFADD__(v20++, 1);
          char v18 = v38;
          if (!v26)
          {
            long long v27 = (char *)(v23 - v21);
            int64_t v28 = v23 - v21;
            if (v20 >= v19) {
              goto LABEL_23;
            }
LABEL_27:
            char v39 = v18;
            int64_t v28 = (int64_t)v27;
            do
            {
              id v29 = v7;
              int64_t v30 = (int64_t)[v29 getPointCountAtContourIndex:v20];
              if (((unint64_t)[v29 getPointCountAtContourIndex:v20] & 0x8000000000000000) != 0)
              {
                __break(1u);
LABEL_48:
                __break(1u);
LABEL_49:
                __break(1u);
                goto LABEL_50;
              }
              id v31 = [v29 getPointCountAtContourIndex:v20];

              if (v30 < 0 || (uint64_t)v31 < v30) {
                goto LABEL_48;
              }
              BOOL v26 = __OFADD__(v28, v30);
              v28 += v30;
              if (v26) {
                goto LABEL_49;
              }
              ++v20;
            }
            while (v20 < v19);
            if (v39) {
              goto LABEL_38;
            }
            goto LABEL_34;
          }
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
  }
  long long v27 = 0;
  int64_t v28 = 0;
  if (v20 < v19) {
    goto LABEL_27;
  }
LABEL_23:
  if (v18) {
    goto LABEL_38;
  }
LABEL_34:
  id v7 = v7;
  if (((unint64_t)[v7 getPointCountAtContourIndex:v20] & 0x8000000000000000) != 0)
  {
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  id v32 = [v7 getPointCountAtContourIndex:v20];

  if (v37 < 0 || (uint64_t)v32 < v37) {
    goto LABEL_56;
  }
  BOOL v26 = __OFADD__(v28, v37);
  v28 += v37;
  if (v26)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
LABEL_38:
  if (a4 < a1)
  {
    BOOL v26 = __OFSUB__(0, v28);
    uint64_t v11 = -v28;
    if (v26)
    {
      __break(1u);
      goto LABEL_42;
    }
  }
}

void *sub_100084814(void *a1)
{
  unint64_t v2 = (void *)a1[1];
  long long v3 = (void *)a1[2];
  uint64_t v4 = (void *)a1[3];
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return a1;
}

unint64_t sub_1000848A4()
{
  unint64_t result = qword_1004C75B8;
  if (!qword_1004C75B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1004C75B8);
  }
  return result;
}

unint64_t sub_1000848E4()
{
  unint64_t result = qword_1004C75C0;
  if (!qword_1004C75C0)
  {
    sub_1000848A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C75C0);
  }
  return result;
}

double sub_10008493C(double a1, double a2, double a3, double a4, double a5)
{
  return fmax(a1 - a3 * 0.00137174211 * a5, 0.0);
}

uint64_t sub_1000849B4(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithCopy for PreparedEdgeDetectionFrame(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 7sub_10004ACAC(3, 1, 2) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for PreparedEdgeDetectionFrame(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 7sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

__n128 initializeWithTake for PreparedEdgeDetectionFrame(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 3sub_10004ACAC(3, 1, 2) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for PreparedEdgeDetectionFrame(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 7sub_10004ACAC(3, 1, 2) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for PreparedEdgeDetectionFrame(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(vsub_10004ACAC(3, 1, 2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PreparedEdgeDetectionFrame(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 7sub_10004ACAC(3, 1, 2) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PreparedEdgeDetectionFrame()
{
  return &type metadata for PreparedEdgeDetectionFrame;
}

void sub_100084C1C(char a1)
{
  if (a1) {
    float v2 = 1.0;
  }
  else {
    float v2 = 0.5;
  }
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(float *)(v3 + 24) = v2;
  id v4 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  void v8[4] = sub_100085394;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  _OWORD v8[2] = sub_100049AB4;
  void v8[3] = &unk_10048B248;
  long long v5 = _Block_copy(v8);
  id v6 = v1;
  swift_release();
  id v7 = [v4 initWithDuration:v5 dampingRatio:0.5 animations:0.6];
  _Block_release(v5);
  [v7 setInterruptible:0];
  [v7 startAnimation];
}

id sub_100084E1C(void *a1, uint64_t a2, SEL *a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for AnimatingUIControl();
  return [super *a3];
}

id sub_100084EB0(char a1)
{
  int v3 = a1 & 1;
  id result = [v1 isHighlighted];
  if (result != v3)
  {
    if (a1)
    {
      if (![v1 isEnabled])
      {
LABEL_7:
        v12.receiver = v1;
        v12.super_class = (Class)type metadata accessor for AnimatingUIControl();
        return [super setHighlighted:a1 & 1];
      }
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = v1;
      *(void *)(v5 + 24) = 0x3FECCCCCCCCCCCCDLL;
      id v6 = objc_allocWithZone((Class)UIViewPropertyAnimator);
      unint64_t v17 = sub_1000853AC;
      uint64_t v18 = v5;
      Swift::String aBlock = _NSConcreteStackBlock;
      uint64_t v14 = 1107296256;
      id v7 = &unk_10048B1F8;
    }
    else
    {
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v1;
      *(void *)(v8 + 24) = 0x3FF0000000000000;
      id v6 = objc_allocWithZone((Class)UIViewPropertyAnimator);
      unint64_t v17 = sub_100085338;
      uint64_t v18 = v8;
      Swift::String aBlock = _NSConcreteStackBlock;
      uint64_t v14 = 1107296256;
      id v7 = &unk_10048B1A8;
    }
    int64_t v15 = sub_100049AB4;
    id v16 = v7;
    uint64_t v9 = _Block_copy(&aBlock);
    id v10 = v1;
    swift_release();
    id v11 = [v6 initWithDuration:v9 dampingRatio:0.5 animations:1.0];
    _Block_release(v9);
    [v11 setInterruptible:0];
    [v11 startAnimation];

    goto LABEL_7;
  }
  return result;
}

id sub_1000850BC(void *a1, CGFloat a2)
{
  [a1 transform];
  CGFloat tx = t1.tx;
  CGFloat ty = t1.ty;
  long double v6 = atan2(t1.b, t1.a);
  CGAffineTransformMakeScale(&t1, a2, a2);
  long long v18 = *(_OWORD *)&t1.c;
  long long v20 = *(_OWORD *)&t1.a;
  CGFloat v7 = t1.tx;
  CGFloat v8 = t1.ty;
  CGAffineTransformMakeRotation(&t1, v6);
  long long v9 = *(_OWORD *)&t1.a;
  long long v10 = *(_OWORD *)&t1.c;
  long long v11 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.CGFloat a = v20;
  *(_OWORD *)&t1.CGFloat c = v18;
  t1.CGFloat tx = v7;
  t1.CGFloat ty = v8;
  *(_OWORD *)&t2.CGFloat a = v9;
  *(_OWORD *)&t2.CGFloat c = v10;
  *(_OWORD *)&t2.CGFloat tx = v11;
  CGAffineTransformConcat(&v22, &t1, &t2);
  long long v19 = *(_OWORD *)&v22.c;
  long long v21 = *(_OWORD *)&v22.a;
  CGFloat v12 = v22.tx;
  CGFloat v13 = v22.ty;
  CGAffineTransformMakeTranslation(&t1, tx, ty);
  long long v14 = *(_OWORD *)&t1.a;
  long long v15 = *(_OWORD *)&t1.c;
  long long v16 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.CGFloat a = v21;
  *(_OWORD *)&t1.CGFloat c = v19;
  t1.CGFloat tx = v12;
  t1.CGFloat ty = v13;
  *(_OWORD *)&t2.CGFloat a = v14;
  *(_OWORD *)&t2.CGFloat c = v15;
  *(_OWORD *)&t2.CGFloat tx = v16;
  CGAffineTransformConcat(&v22, &t1, &t2);
  CGAffineTransform t1 = v22;
  return [a1 setTransform:&t1];
}

id sub_1000852A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnimatingUIControl();
  return [super dealloc];
}

uint64_t type metadata accessor for AnimatingUIControl()
{
  return self;
}

uint64_t sub_100085300()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_100085338()
{
  return sub_1000850BC(*(void **)(v0 + 16), *(CGFloat *)(v0 + 24));
}

uint64_t sub_100085344(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100085354()
{
  return swift_release();
}

uint64_t sub_10008535C()
{
  return _swift_deallocObject(v0, 28, 7);
}

id sub_100085394()
{
  return [*(id *)(v0 + 16) setAlpha:*(float *)(v0 + 24)];
}

uint64_t destroy for DefaultGroup()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s7Measure12DefaultGroupVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DefaultGroup(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DefaultGroup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DefaultGroup(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(vsub_10004ACAC(3, 1, 2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DefaultGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultGroup()
{
  return &type metadata for DefaultGroup;
}

uint64_t destroy for MeasurementStringDetails()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Default(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Default(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = v4;
  return a1;
}

__n128 initializeWithCopy for PointMoveState(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Default(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for Default(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(vsub_10004ACAC(3, 1, 2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Default(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 4sub_10004ACAC(2, 1, 1) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 4sub_10004ACAC(2, 1, 1) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Default()
{
  return &type metadata for Default;
}

uint64_t sub_1000857A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  unsigned int v4 = *((unsigned __int8 *)a2 + 8);
  if (*((unsigned char *)a1 + 8) == 1)
  {
    BOOL v5 = v3 == 0;
    if (v3) {
      unsigned int v6 = 0;
    }
    else {
      unsigned int v6 = *((unsigned __int8 *)a2 + 8);
    }
    if (v5) {
      unsigned int v4 = 0;
    }
    if (v2) {
      return v4;
    }
    else {
      return v6;
    }
  }
  else
  {
    return (v4 & 1) == 0 && *(float *)&v2 == *(float *)&v3 && *((float *)&v2 + 1) == *((float *)&v3 + 1);
  }
}

uint64_t sub_100085810(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 9) = *(long long *)((char *)a1 + 25);
  long long v3 = a2[1];
  long long v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 9) = *(long long *)((char *)a2 + 25);
  return sub_100085EF4(&v5, &v7) & 1;
}

uint64_t sub_10008585C(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  if (v3)
  {
    if (v5)
    {
      BOOL v7 = *a1 == *a2 && v3 == v5;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_8;
      }
    }
    return 0;
  }
  if (v5) {
    return 0;
  }
LABEL_8:

  return sub_100085D9C(v4, v6);
}

uint64_t sub_1000858D8(uint64_t a1, uint64_t a2)
{
  return sub_100085908(a1, a2, (uint64_t (*)(void))&type metadata accessor for MeasureObject);
}

uint64_t sub_1000858F0(uint64_t a1, uint64_t a2)
{
  return sub_100085908(a1, a2, (uint64_t (*)(void))&type metadata accessor for WorldLineGuide);
}

uint64_t sub_100085908(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v7 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    long long v9 = (void *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((void *)v8 == v9) {
      goto LABEL_5;
    }
    return 0;
  }
  long long v9 = *(void **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((void *)v8 != v9) {
    return 0;
  }
LABEL_5:
  if (!v8) {
    return 1;
  }
  uint64_t v10 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v11 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v10 = a1;
  }
  if (v7) {
    uint64_t v11 = v10;
  }
  uint64_t v12 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v13 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v12 = a2;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v13 = v12;
  }
  if (v11 == v13) {
    return 1;
  }
  if (v8 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v25 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_42:
    uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_19;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t result = (uint64_t)*(id *)(a1 + 32);
LABEL_19:
  long long v9 = (void *)result;
  unint64_t v3 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_44:
    id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_22:
    long long v16 = v15;
    a3 = (uint64_t (*)(void))a3(0);
    char v17 = static NSObject.== infix(_:_:)();

    if (v17)
    {
      uint64_t v18 = 1 - v8;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v8 = v18 + i == 5;
        if (v18 + i == 5) {
          return v8;
        }
        unint64_t v23 = i - 4;
        if (v25)
        {
          id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          if (v3) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v23 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          id v24 = *(id *)(a1 + 8 * i);
          if (v3)
          {
LABEL_24:
            id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_25;
          }
        }
        if (v23 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        id v20 = *(id *)(a2 + 8 * i);
LABEL_25:
        long long v21 = v20;
        char v22 = static NSObject.== infix(_:_:)();

        if ((v22 & 1) == 0) {
          return v8;
        }
      }
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v15 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_100085B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MeasurementHistoryItem() - 8;
  uint64_t v5 = __chkstk_darwin(v4);
  unint64_t v7 = (uint64_t *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v10 = (uint64_t *)((char *)&v19 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_1000297B8(a1 + v12, (uint64_t)v10);
        sub_1000297B8(a2 + v12, (uint64_t)v7);
        char v15 = sub_1001E6630(v10, v7);
        sub_10002981C((uint64_t)v7);
        sub_10002981C((uint64_t)v10);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

float sub_100085CE0(float32x4_t *a1, float32x4_t *a2)
{
  uint64_t v2 = a1[1].i64[0];
  if (v2 == a2[1].i64[0])
  {
    if (v2)
    {
      if (a1 != a2)
      {
        float result = COERCE_FLOAT(vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(a1[3], a2[3]), (int8x16_t)vceqq_f32(a1[2], a2[2])), vandq_s8((int8x16_t)vceqq_f32(a1[4], a2[4]), (int8x16_t)vceqq_f32(a1[5], a2[5])))));
        if ((LODWORD(result) & 0x80000000) != 0)
        {
          uint64_t v4 = a2 + 9;
          uint64_t v5 = a1 + 9;
          do
          {
            if (!--v2) {
              break;
            }
            float32x4_t v6 = v4[-3];
            float32x4_t v7 = v4[-2];
            float32x4_t v8 = v4[-1];
            float32x4_t v9 = *v4;
            v4 += 4;
            float32x4_t v11 = v5[-1];
            float32x4_t v10 = *v5;
            float32x4_t v13 = v5[-3];
            float32x4_t v12 = v5[-2];
            v5 += 4;
            float result = COERCE_FLOAT(vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(v12, v7), (int8x16_t)vceqq_f32(v13, v6)), vandq_s8((int8x16_t)vceqq_f32(v11, v8), (int8x16_t)vceqq_f32(v10, v9)))));
          }
          while ((LODWORD(result) & 0x80000000) != 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100085D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2)
  {
    uint64_t v3 = a2;
    uint64_t v4 = a1;
    if (a1 != a2)
    {
      for (uint64_t i = 0; ; i += 48)
      {
        uint64_t v8 = *(void *)(v4 + i + 48);
        uint64_t v7 = *(void *)(v4 + i + 56);
        uint64_t v9 = *(void *)(v4 + i + 64);
        int v10 = *(unsigned __int8 *)(v4 + i + 72);
        uint64_t v12 = *(void *)(v3 + i + 48);
        uint64_t v11 = *(void *)(v3 + i + 56);
        uint64_t v13 = *(void *)(v3 + i + 64);
        int v14 = *(unsigned __int8 *)(v3 + i + 72);
        if (*(void *)(v4 + i + 32) != *(void *)(v3 + i + 32)
          || *(void *)(v4 + i + 40) != *(void *)(v3 + i + 40))
        {
          char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t v4 = a1;
          uint64_t v3 = a2;
          if ((v16 & 1) == 0) {
            break;
          }
        }
        if (v7)
        {
          if (!v11) {
            return 0;
          }
          if (v8 != v12 || v7 != v11)
          {
            char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
            uint64_t v4 = a1;
            uint64_t v3 = a2;
            if ((v18 & 1) == 0) {
              return 0;
            }
          }
        }
        else if (v11)
        {
          return 0;
        }
        if (v10)
        {
          if (v9)
          {
            if (v13) {
              int v19 = v14;
            }
            else {
              int v19 = 0;
            }
            if (v19 != 1) {
              return 0;
            }
          }
          else
          {
            if (v13) {
              char v6 = 0;
            }
            else {
              char v6 = v14;
            }
            if ((v6 & 1) == 0) {
              return 0;
            }
          }
        }
        else
        {
          if (v14) {
            return 0;
          }
          if (*(float *)&v9 != *(float *)&v13 || *((float *)&v9 + 1) != *((float *)&v13 + 1)) {
            return 0;
          }
        }
        if (!--v2) {
          return 1;
        }
      }
      return 0;
    }
  }
  return 1;
}

uint64_t sub_100085EF4(void *a1, void *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = 0;
    if ((v5 & 1) == 0) {
      return result;
    }
  }
  uint64_t v7 = a1[3];
  uint64_t v8 = a2[3];
  if (!v7)
  {
    if (!v8) {
      goto LABEL_15;
    }
    return 0;
  }
  if (!v8) {
    return 0;
  }
  BOOL v9 = a1[2] == a2[2] && v7 == v8;
  if (v9 || (char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v10 & 1) != 0))
  {
LABEL_15:
    sub_100086058(a1 + 4, (uint64_t)&v13);
    sub_100086058(a2 + 4, (uint64_t)&v12);
    sub_100086058(&v13, (uint64_t)&v14);
    if (v15 == 1)
    {
      if (v14)
      {
        sub_100086058(&v12, (uint64_t)&v16);
        if (v17 == 1) {
          return v16 != 0;
        }
      }
      else
      {
        sub_100086058(&v12, (uint64_t)&v16);
        if (v17 == 1) {
          return v16 == 0;
        }
      }
    }
    else
    {
      uint64_t v11 = v14;
      sub_100086058(&v12, (uint64_t)&v16);
      if ((v17 & 1) == 0 && *(float *)&v11 == *(float *)&v16 && *((float *)&v11 + 1) == *((float *)&v16 + 1)) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_100086058(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  *(unsigned char *)(a2 + 8) = *((unsigned char *)a1 + 8);
  *(void *)a2 = v2;
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for ControlType(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ControlType(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ControlType(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1000860D0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1000860EC(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlType()
{
  return &type metadata for ControlType;
}

id sub_10008611C(void *a1, double a2, double a3, double a4, double a5)
{
  char v6 = v5;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR____TtC7Measure16InteractiveLabel_cancellableSubs] = _swiftEmptyArrayStorage;
  uint64_t v13 = &v5[OBJC_IVAR____TtC7Measure16InteractiveLabel_configuration];
  *(_OWORD *)uint64_t v13 = 0u;
  *((_OWORD *)v13 + sub_10004ACAC(2, 1, 1) = 0u;
  *((void *)v13 + 4) = 0;
  v5[OBJC_IVAR____TtC7Measure16InteractiveLabel_shouldDismissSelection] = 0;
  uint64_t v14 = OBJC_IVAR____TtC7Measure16InteractiveLabel__appState;
  uint64_t v15 = sub_100012894(&qword_1004C6AA0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = qword_1004C2E30;
  char v18 = v6;
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_1004F8630;
  id v20 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 272);
  swift_retain();
  *(void *)&v18[v14] = v20(KeyPath, v19);

  v23.receiver = v18;
  v23.super_class = ObjectType;
  [super initWithFrame:a1 textContainer:a2];
  sub_1000862A0();

  return v21;
}

void sub_1000862A0()
{
  swift_getObjectType();
  sub_1000868CC();
  StateObserving.setup()();
  [v0 setTextContainerInset:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  id v1 = [v0 textContainer];
  [v1 setLineFragmentPadding:0.0];

  [v0 setSelectable:1];
  [v0 setScrollEnabled:0];
  [v0 setEditable:0];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setUserInteractionEnabled:1];
  id v2 = [self clearColor];
  [v0 setBackgroundColor:v2];
}

id sub_100086440(void *a1)
{
  id v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC7Measure16InteractiveLabel_cancellableSubs] = _swiftEmptyArrayStorage;
  char v5 = &v1[OBJC_IVAR____TtC7Measure16InteractiveLabel_configuration];
  *(_OWORD *)char v5 = 0u;
  *((_OWORD *)v5 + sub_10004ACAC(2, 1, 1) = 0u;
  *((void *)v5 + 4) = 0;
  v1[OBJC_IVAR____TtC7Measure16InteractiveLabel_shouldDismissSelection] = 0;
  uint64_t v6 = OBJC_IVAR____TtC7Measure16InteractiveLabel__appState;
  uint64_t v7 = sub_100012894(&qword_1004C6AA0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v9 = qword_1004C2E30;
  char v10 = v2;
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1004F8630;
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 272);
  swift_retain();
  *(void *)&v2[v6] = v12(KeyPath, v11);

  v17.receiver = v10;
  v17.super_class = ObjectType;
  id v13 = [super initWithCoder:a1];
  id v14 = v13;
  if (v13)
  {
    id v15 = v13;
    sub_1000862A0();
  }
  return v14;
}

uint64_t type metadata accessor for InteractiveLabel()
{
  return self;
}

_UNKNOWN **sub_100086644()
{
  return &off_100492530;
}

uint64_t sub_100086650@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC7Measure16InteractiveLabel_configuration;
  swift_beginAccess();
  return sub_10002EFD0(v3, a1);
}

uint64_t sub_1000866A4(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC7Measure16InteractiveLabel_configuration;
  swift_beginAccess();
  sub_10002EF68(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_100086700())()
{
  return j__swift_endAccess;
}

uint64_t sub_10008675C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000867A8(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC7Measure16InteractiveLabel_cancellableSubs);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1000867FC())()
{
  return j_j__swift_endAccess;
}

id sub_100086858()
{
  swift_retain();
  StateValue.wrappedValue.getter();
  id result = (id)swift_release();
  if (v2 == 1) {
    return [v0 setSelectedRange:0, 0];
  }
  return result;
}

unint64_t sub_1000868CC()
{
  unint64_t result = qword_1004C76A0;
  if (!qword_1004C76A0)
  {
    type metadata accessor for InteractiveLabel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C76A0);
  }
  return result;
}

uint64_t sub_100086920@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for MeasurementHistoryItem();
  sub_100026A04(a1 + *(int *)(v5 + 28), (uint64_t)v53);
  sub_100026A04((uint64_t)v53, (uint64_t)v54);
  uint64_t result = sub_100026A60((uint64_t)v54);
  if (result) {
    goto LABEL_2;
  }
  id v21 = (float32x4_t *)sub_100026A6C((uint64_t)v54);
  memcpy(__dst, v21, 0x10DuLL);
  uint64_t v22 = *(void *)(v2 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_numberOfRows);
  uint64_t result = IndexPath.item.getter();
  if (v22 != 3)
  {
    if (result != 1)
    {
      if (result) {
        goto LABEL_2;
      }
LABEL_14:
      float v27 = sub_10008A328(v21[8]);
      sub_1000BE4B0((uint64_t)&v38, v27);
      id v28 = [self mainBundle];
      v56._object = (void *)0xE000000000000000;
      v29._uint64_t countAndFlagsBits = 0x45434E4154534944;
      v29._object = (void *)0xED0000594157415FLL;
      v30._uint64_t countAndFlagsBits = 0;
      v30._object = (void *)0xE000000000000000;
      v56._uint64_t countAndFlagsBits = 0;
      Swift::String v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v56);
      uint64_t countAndFlagsBits = v31._countAndFlagsBits;
      object = v31._object;

      uint64_t v8 = v38;
      uint64_t v18 = (uint64_t)v39;
      uint64_t v10 = v41;
      unint64_t v19 = v44;
      uint64_t v33 = v40;
      uint64_t v34 = v43;
      uint64_t v13 = v46;
      unint64_t v20 = v49;
      uint64_t v35 = v45;
      uint64_t v36 = v48;
      uint64_t v16 = v51;
      uint64_t v37 = v50;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = sub_100028648((uint64_t)&v38);
      goto LABEL_15;
    }
LABEL_13:
    uint64_t result = sub_10008A380((uint64_t)__dst, &v38);
    uint64_t v15 = v50;
    uint64_t v16 = v51;
    uint64_t v14 = v48;
    unint64_t v20 = v49;
    uint64_t v12 = v46;
    uint64_t v13 = v47;
    uint64_t v11 = v44;
    unint64_t v19 = v45;
    uint64_t v9 = v42;
    uint64_t v10 = v43;
    uint64_t v8 = v40;
    uint64_t v18 = v41;
    uint64_t countAndFlagsBits = v38;
    object = v39;
    goto LABEL_3;
  }
  if (result == 2) {
    goto LABEL_13;
  }
  if (result == 1) {
    goto LABEL_14;
  }
  if (result)
  {
LABEL_2:
    uint64_t countAndFlagsBits = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    object = (void *)0xE000000000000000;
    uint64_t v18 = 0xE000000000000000;
    unint64_t v19 = 0xE000000000000000;
    unint64_t v20 = 0xE000000000000000;
LABEL_3:
    *a2 = countAndFlagsBits;
    a2[1] = (uint64_t)object;
    a2[2] = v8;
    a2[3] = v18;
    a2[4] = v9;
    a2[5] = v10;
    a2[6] = v11;
    a2[7] = v19;
    a2[8] = v12;
    a2[9] = v13;
    a2[10] = v14;
    a2[11] = v20;
    a2[12] = v15;
    a2[13] = v16;
    return result;
  }
  uint64_t v18 = v21[9].i64[1];
  if (v18)
  {
    uint64_t v16 = v21[15].i64[1];
    unint64_t v20 = v21[14].u64[1];
    uint64_t v36 = v21[14].i64[0];
    uint64_t v37 = v21[15].i64[0];
    uint64_t v13 = v21[13].i64[0];
    unint64_t v19 = v21[12].u64[0];
    uint64_t v34 = v21[11].i64[1];
    uint64_t v35 = v21[12].i64[1];
    uint64_t v10 = v21[10].i64[1];
    uint64_t v33 = v21[10].i64[0];
    uint64_t v8 = v21[9].i64[0];
    objc_super v23 = self;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v32 = [v23 mainBundle];
    v55._object = (void *)0xE000000000000000;
    v24._uint64_t countAndFlagsBits = 0x4F49544156454C45;
    v24._object = (void *)0xE90000000000004ELL;
    v25._uint64_t countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    v55._uint64_t countAndFlagsBits = 0;
    Swift::String v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v32, v25, v55);
    uint64_t countAndFlagsBits = v26._countAndFlagsBits;
    object = v26._object;

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_1000283C4(v8, v18);
LABEL_15:
    uint64_t v9 = v33;
    uint64_t v11 = v34;
    uint64_t v12 = v35;
    uint64_t v14 = v36;
    uint64_t v15 = v37;
    goto LABEL_3;
  }
  __break(1u);
  return result;
}

double sub_100086CFC()
{
  id v1 = [self currentTraitCollection];
  id v2 = [v1 preferredContentSizeCategory];

  LOBYTE(vsub_10004ACAC(2, 1, 1) = UIContentSizeCategory.isAccessibilityCategory.getter();
  [*(id *)(v0 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_sketchView) bounds];
  double Height = CGRectGetHeight(v6);
  if (v1)
  {
    [*(id *)(v0 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityLabelStrip) bounds];
    double Height = Height + CGRectGetHeight(v7);
    if (qword_1004C27E8 != -1) {
      swift_once();
    }
    double v4 = *(double *)&qword_1004F7E00;
  }
  else
  {
    [*(id *)(v0 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_labelStrip) bounds];
    double v4 = CGRectGetHeight(v8);
  }
  return Height + v4;
}

void sub_100086E0C()
{
  id v1 = [self currentTraitCollection];
  id v2 = [v1 preferredContentSizeCategory];

  LOBYTE(vsub_10004ACAC(2, 1, 1) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v1)
  {
    [*(id *)(v0 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityElevation) bounds];
    double Height = CGRectGetHeight(v5);
    [*(id *)(v0 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityDistance) bounds];
    double v4 = Height + CGRectGetHeight(v6);
    [*(id *)(v0 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityAngle) bounds];
    if (v4 + CGRectGetHeight(v7) != 0.0)
    {
      sub_100086CFC();
      if (qword_1004C27E8 != -1) {
        swift_once();
      }
    }
  }
  else
  {
    sub_100086CFC();
    sub_100154F58(*(void *)(v0 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_numberOfRows));
  }
}

void sub_100086F98(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  CGRect v6 = (void *)(v2 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_title);
  *CGRect v6 = v5;
  v6[1] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for MeasurementHistoryItem();
  sub_100026A04(a1 + *(int *)(v7 + 28), (uint64_t)v13);
  sub_100026A04((uint64_t)v13, (uint64_t)v14);
  if (!sub_100026A60((uint64_t)v14))
  {
    CGRect v8 = (void *)sub_100026A6C((uint64_t)v14);
    memcpy(v12, v8, 0x10DuLL);
    uint64_t v9 = 2;
    if (v8[19]) {
      uint64_t v9 = 3;
    }
    if (v9 != *(void *)(v2 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_numberOfRows))
    {
      *(void *)(v2 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_numberOfRows) = v9;
      uint64_t v10 = *(void (**)(uint64_t))(v2
                                           + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_numberOfRowsChangedCallback);
      if (v10)
      {
        uint64_t v11 = swift_retain();
        v10(v11);
        [*(id *)(v2 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_tableView) reloadData];
        sub_100028914((uint64_t)v10);
      }
    }
    sub_1000870BC((uint64_t)v12);
  }
}

void sub_1000870BC(uint64_t a1)
{
  id v3 = [self currentTraitCollection];
  id v4 = [v3 preferredContentSizeCategory];

  LOBYTE(v3) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v3)
  {
    sub_100089514(a1);
  }
  else
  {
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 88);
    uint64_t v23 = *(void *)(a1 + 80);
    uint64_t v24 = *(void *)(a1 + 56);
    uint64_t v21 = *(void *)(a1 + 96);
    uint64_t v22 = *(void **)(a1 + 64);
    uint64_t v20 = *(void *)(a1 + 104);
    uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_labelStrip);
    uint64_t v9 = OBJC_IVAR____TtC7Measure11LabelsStrip_primaryLabel;
    uint64_t v10 = *(void **)(v8 + OBJC_IVAR____TtC7Measure11LabelsStrip_primaryLabel);
    long long v25 = *(_OWORD *)a1;
    v26[0] = *(_OWORD *)(a1 + 16);
    *(void *)((char *)v26 + 14) = *(void *)(a1 + 30);
    id v11 = v10;
    NSString v12 = String._bridgeToObjectiveC()();
    [v11 setText:v12];

    uint64_t v13 = *(void **)(v8 + v9);
    sub_100016FEC((uint64_t)v26, (uint64_t)v27, (uint64_t *)&unk_1004D2450);
    sub_100016FEC((uint64_t)v27, (uint64_t)&v28, (uint64_t *)&unk_1004D2450);
    NSString v14 = v29;
    if (v29)
    {
      id v15 = v13;
      NSString v14 = String._bridgeToObjectiveC()();
    }
    else
    {
      id v16 = v13;
    }
    [v13 setAccessibilityLabel:v14];

    objc_super v17 = *(void **)(v8 + OBJC_IVAR____TtC7Measure11LabelsStrip_secondaryLabelStack);
    if (v25 == __PAIR128__(v6, v5)) {
      char v18 = 1;
    }
    else {
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    id v19 = v17;
    sub_10015E68C(v5, v6, v24, v22, v23, v7, v21, v20, v18 & 1);
  }
}

id sub_100087318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_minContentViewHeight;
  *(void *)&v6[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_minContentViewHeight] = 0x4071400000000000;
  uint64_t v10 = self;
  id v11 = v6;
  id v12 = [v10 currentTraitCollection];
  id v13 = [v12 preferredContentSizeCategory];

  LOBYTE(v1sub_10004ACAC(3, 1, 2) = UIContentSizeCategory.isAccessibilityCategory.getter();
  double v14 = 88.0;
  if (v12) {
    double v14 = 222.0;
  }
  *(double *)&v11[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_tableRowHeight] = v14;
  id v15 = &v11[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_numberOfRowsChangedCallback];
  *(void *)id v15 = 0;
  *((void *)v15 + sub_10004ACAC(2, 1, 1) = 0;
  uint64_t v16 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_sketchView;
  type metadata accessor for SketchLine();
  *(void *)&v11[v16] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v17 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_labelStrip;
  type metadata accessor for LabelsStrip();
  *(void *)&v11[v17] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v18 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_tableView;
  type metadata accessor for IntrinsicTableView();
  *(void *)&v11[v18] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v19 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityLabelStrip;
  type metadata accessor for AccessibilityDoubleStack();
  ObjCClassFromMetauint64_t data = (objc_class *)swift_getObjCClassFromMetadata();
  *(void *)&v11[v19] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v21 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityElevation;
  type metadata accessor for AccessibilityTripleStack();
  uint64_t v22 = (objc_class *)swift_getObjCClassFromMetadata();
  *(void *)&v11[v21] = [objc_allocWithZone(v22) init];
  uint64_t v23 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityDistance;
  *(void *)&v11[v23] = [objc_allocWithZone(v22) init];
  uint64_t v24 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityAngle;
  *(void *)&v11[v24] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v25 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilitySeparatorOne;
  if (qword_1004C27E0 != -1) {
    swift_once();
  }
  double v26 = *(double *)&qword_1004F7DF8;
  *(void *)&v11[v25] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, *(double *)&qword_1004F7DF8, 0.5];
  uint64_t v27 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilitySeparatorTwo;
  *(void *)&v11[v27] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, v26, 0.5];
  uint64_t v28 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilitySeparatorThree;
  *(void *)&v11[v28] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, v26, 0.5];
  Swift::String v29 = &v11[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_measurementID];
  *(void *)Swift::String v29 = a1;
  *((void *)v29 + sub_10004ACAC(2, 1, 1) = a2;
  Swift::String v30 = &v11[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_title];
  *(void *)Swift::String v30 = a4;
  *((void *)v30 + sub_10004ACAC(2, 1, 1) = a5;
  uint64_t v31 = 2;
  if (*(void *)(a3 + 152)) {
    uint64_t v31 = 3;
  }
  *(void *)&v11[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_numberOfRows] = v31;
  uint64_t v32 = *(void *)&v6[v9];
  type metadata accessor for CardContainerView.Configuration();
  uint64_t v33 = swift_allocObject();
  swift_beginAccess();
  Published.init(initialValue:)();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v41 = v32;
  Published.init(initialValue:)();
  swift_endAccess();
  *(void *)(v33 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration_velocityThreshold) = 0x408F400000000000;
  *(void *)(v33 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration_velocityUpperThreshold) = 0x40A7700000000000;
  *(void *)&v11[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_containerConfiguration] = v33;

  v40.receiver = v11;
  v40.super_class = ObjectType;
  id v34 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_1000870BC(a3);
  sub_10008A650(a3);
  sub_10008776C();
  sub_100088444();

  return v34;
}

void sub_10008776C()
{
  uint64_t v1 = v0;
  [v0 setAxis:1];
  id v2 = [self currentTraitCollection];
  id v3 = [v2 preferredContentSizeCategory];

  LOBYTE(vsub_10004ACAC(3, 1, 2) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v2)
  {
    uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityLabelStrip];
    uint64_t v5 = OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_topLabel;
    uint64_t v6 = *(void **)(v4 + OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_topLabel);
    uint64_t v7 = self;
    id v8 = v6;
    id v9 = [v7 systemFontOfSize:60.0 weight:UIFontWeightRegular];
    [v8 setFont:v9];

    uint64_t v10 = OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_bottomLabel;
    id v11 = *(id *)(v4 + OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_bottomLabel);
    id v12 = [v7 preferredFontForTextStyle:UIFontTextStyleSubheadline];
    id v13 = [v12 fontDescriptor];

    id v14 = [v13 fontDescriptorWithSymbolicTraits:2];
    if (v14)
    {
      id v15 = [v7 fontWithDescriptor:v14 size:0.0];

      [v11 setFont:v15];
      uint64_t v16 = *(void **)(v4 + v5);
      uint64_t v17 = self;
      id v18 = v16;
      id v19 = [v17 labelColor];
      [v18 setTextColor:v19];

      uint64_t v115 = v4;
      id v20 = *(id *)(v4 + v10);
      id v21 = [v17 secondaryLabelColor];
      [v20 setTextColor:v21];

      uint64_t v22 = *(void *)&v1[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityElevation];
      uint64_t v23 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel;
      id v24 = *(id *)(v22 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel);
      id v25 = [v7 preferredFontForTextStyle:UIFontTextStyleBody];
      id v26 = [v25 fontDescriptor];

      id v27 = [v26 fontDescriptorWithSymbolicTraits:2];
      if (v27)
      {
        id v28 = [v7 fontWithDescriptor:v27 size:0.0];

        [v24 setFont:v28];
        uint64_t v29 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel;
        id v30 = *(id *)(v22 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel);
        id v31 = [v7 preferredFontForTextStyle:UIFontTextStyleLargeTitle];
        [v30 setFont:v31];

        uint64_t v32 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel;
        id v33 = *(id *)(v22 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel);
        id v34 = [v7 preferredFontForTextStyle:UIFontTextStyleSubheadline];
        uint64_t v35 = v22;
        id v36 = [v34 fontDescriptor];

        id v37 = [v36 fontDescriptorWithSymbolicTraits:2];
        if (v37)
        {
          id v38 = [v7 fontWithDescriptor:v37 size:0.0];

          [v33 setFont:v38];
          id v39 = *(id *)(v35 + v23);
          id v40 = [v17 secondaryLabelColor];
          [v39 setTextColor:v40];

          id v41 = *(id *)(v35 + v29);
          id v42 = [v17 labelColor];
          [v41 setTextColor:v42];

          uint64_t v112 = v35;
          id v43 = *(id *)(v35 + v32);
          id v44 = [v17 secondaryLabelColor];
          [v43 setTextColor:v44];

          uint64_t v45 = *(void *)&v1[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityDistance];
          uint64_t v113 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel;
          id v46 = *(id *)(v45 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel);
          id v47 = [v7 preferredFontForTextStyle:UIFontTextStyleBody];
          id v48 = [v47 fontDescriptor];

          id v49 = [v48 fontDescriptorWithSymbolicTraits:2];
          if (v49)
          {
            id v50 = [v7 fontWithDescriptor:v49 size:0.0];

            [v46 setFont:v50];
            uint64_t v51 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel;
            id v52 = *(id *)(v45 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel);
            id v53 = [v7 preferredFontForTextStyle:UIFontTextStyleLargeTitle];
            [v52 setFont:v53];

            uint64_t v54 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel;
            id v55 = *(id *)(v45 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel);
            id v56 = [v7 preferredFontForTextStyle:UIFontTextStyleSubheadline];
            id v57 = [v56 fontDescriptor];

            id v58 = [v57 fontDescriptorWithSymbolicTraits:2];
            if (v58)
            {
              id v59 = [v7 fontWithDescriptor:v58 size:0.0];

              [v55 setFont:v59];
              id v60 = *(id *)(v45 + v113);
              id v61 = [v17 secondaryLabelColor];
              [v60 setTextColor:v61];

              id v62 = *(id *)(v45 + v51);
              id v63 = [v17 labelColor];
              [v62 setTextColor:v63];

              uint64_t v116 = v45;
              id v64 = *(id *)(v45 + v54);
              id v65 = [v17 secondaryLabelColor];
              [v64 setTextColor:v65];

              uint64_t v66 = *(void *)&v1[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityAngle];
              uint64_t v67 = OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_topLabel;
              id v68 = *(id *)(v66 + OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_topLabel);
              id v69 = [v7 preferredFontForTextStyle:UIFontTextStyleBody];
              id v70 = [v69 fontDescriptor];

              id v71 = [v70 fontDescriptorWithSymbolicTraits:2];
              if (v71)
              {
                id v72 = [v7 fontWithDescriptor:v71 size:0.0];

                [v68 setFont:v72];
                uint64_t v73 = OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_bottomLabel;
                id v74 = *(id *)(v66 + OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_bottomLabel);
                id v75 = [v7 preferredFontForTextStyle:UIFontTextStyleLargeTitle];
                [v74 setFont:v75];

                id v76 = *(id *)(v66 + v67);
                id v77 = [v17 secondaryLabelColor];
                [v76 setTextColor:v77];

                id v78 = *(id *)(v66 + v73);
                id v79 = [v17 labelColor];
                [v78 setTextColor:v79];

                uint64_t v80 = *(void **)&v1[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilitySeparatorOne];
                if (qword_1004C31D0 != -1) {
                  swift_once();
                }
                long long v81 = (void *)qword_1004F8A68;
                id v82 = qword_1004F8A70;
                if (byte_1004F8A78)
                {
                  char v83 = byte_1004F8A88;
                  uint64_t v84 = qword_1004F8A80;
                  char v85 = byte_1004D2600;
                  id v86 = (id)qword_1004F8A68;
                  id v87 = sub_100081B28(v85, v84, v83);
                  sub_1000286C0(v81, v82, 1);
                }
                else
                {
                  if (byte_1004D2600) {
                    id v91 = qword_1004F8A70;
                  }
                  else {
                    id v91 = (id)qword_1004F8A68;
                  }
                  id v87 = v91;
                }
                [v80 setBackgroundColor:v87];

                unint64_t v92 = *(void **)&v1[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilitySeparatorTwo];
                char v93 = (void *)qword_1004F8A68;
                id v94 = qword_1004F8A70;
                uint64_t v114 = v66;
                if (byte_1004F8A78)
                {
                  unint64_t v95 = v80;
                  char v96 = byte_1004F8A88;
                  uint64_t v97 = qword_1004F8A80;
                  char v98 = byte_1004D2600;
                  id v99 = (id)qword_1004F8A68;
                  id v100 = sub_100081B28(v98, v97, v96);
                  sub_1000286C0(v93, v94, 1);
                }
                else
                {
                  unint64_t v95 = v80;
                  if (byte_1004D2600) {
                    id v101 = qword_1004F8A70;
                  }
                  else {
                    id v101 = (id)qword_1004F8A68;
                  }
                  id v100 = v101;
                }
                [v92 setBackgroundColor:v100];

                id v102 = *(void **)&v1[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilitySeparatorThree];
                id v104 = (void *)qword_1004F8A68;
                id v103 = qword_1004F8A70;
                if (byte_1004F8A78)
                {
                  char v105 = byte_1004F8A88;
                  uint64_t v106 = qword_1004F8A80;
                  char v107 = byte_1004D2600;
                  id v108 = (id)qword_1004F8A68;
                  id v109 = sub_100081B28(v107, v106, v105);
                  sub_1000286C0(v104, v103, 1);
                }
                else
                {
                  if (byte_1004D2600) {
                    id v110 = qword_1004F8A70;
                  }
                  else {
                    id v110 = (id)qword_1004F8A68;
                  }
                  id v109 = v110;
                }
                [v102 setBackgroundColor:v109];

                [v1 addSubview:*(void *)&v1[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_sketchView]];
                [v1 addSubview:v95];
                [v1 addSubview:v92];
                uint64_t v111 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_numberOfRows;
                if (*(void *)&v1[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_numberOfRows] == 3) {
                  [v1 addSubview:v102];
                }
                [v1 addSubview:v115];
                if (*(void *)&v1[v111] == 3) {
                  [v1 addSubview:v112];
                }
                [v1 addSubview:v116];
                id v89 = "addSubview:";
                unint64_t v90 = v1;
                uint64_t v88 = v114;
                goto LABEL_34;
              }
LABEL_42:
              __break(1u);
              return;
            }
LABEL_41:
            __break(1u);
            goto LABEL_42;
          }
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_39;
  }
  [v1 addArrangedSubview:*(void *)&v1[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_sketchView]];
  [v1 addArrangedSubview:*(void *)&v1[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_labelStrip]];
  uint64_t v88 = *(void *)&v1[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_tableView];
  id v89 = "addArrangedSubview:";
  unint64_t v90 = v1;
LABEL_34:

  [v90 v89:v88];
}

void sub_100088444()
{
  uint64_t v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_sketchView];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = self;
  id v4 = [v3 currentTraitCollection];
  id v5 = [v4 preferredContentSizeCategory];

  LOBYTE(v4) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v4)
  {
    uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityLabelStrip];
    [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v114 = *(id *)&v1[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityElevation];
    [v114 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v116 = *(id *)&v1[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityDistance];
    [v116 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v118 = *(id *)&v1[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityAngle];
    [v118 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v117 = *(id *)&v1[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilitySeparatorOne];
    [v117 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v119 = *(id *)&v1[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilitySeparatorTwo];
    [v119 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v115 = *(id *)&v1[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilitySeparatorThree];
    [v115 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v113 = sub_100012894((uint64_t *)&unk_1004CEA00);
    unint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1003FB960;
    id v8 = [v2 heightAnchor];
    if (qword_1004C28A8 != -1) {
      swift_once();
    }
    id v9 = [v8 constraintEqualToConstant:*(double *)&qword_1004F7ED8];

    *(void *)(v7 + 3sub_10004ACAC(3, 1, 2) = v9;
    id v10 = [v2 leadingAnchor];
    id v11 = [v1 leadingAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];

    *(void *)(v7 + 40) = v12;
    id v13 = [v2 trailingAnchor];
    id v14 = [v1 trailingAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14];

    *(void *)(v7 + 48) = v15;
    id v16 = [v2 topAnchor];
    id v17 = [v1 topAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    *(void *)(v7 + 56) = v18;
    id v19 = [v6 leadingAnchor];
    id v20 = [v1 leadingAnchor];
    if (qword_1004C27E8 != -1) {
      swift_once();
    }
    id v21 = [v19 constraintEqualToAnchor:v20 constant:*(double *)&qword_1004F7E00];

    *(void *)(v7 + 64) = v21;
    id v22 = [v6 topAnchor];
    id v23 = [v2 bottomAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23];

    *(void *)(v7 + 7sub_10004ACAC(3, 1, 2) = v24;
    id v25 = [v6 trailingAnchor];
    id v26 = [v1 trailingAnchor];
    id v27 = [v25 constraintEqualToAnchor:v26];

    *(void *)(v7 + 80) = v27;
    id v28 = [v117 leadingAnchor];
    id v29 = [v1 leadingAnchor];
    id v30 = [v28 constraintEqualToAnchor:v29 constant:*(double *)&qword_1004F7E00];

    *(void *)(v7 + 88) = v30;
    id v31 = [v117 topAnchor];
    id v32 = [v6 bottomAnchor];
    id v33 = [v31 constraintEqualToAnchor:v32 constant:*(double *)&qword_1004F7E00];

    *(void *)(v7 + 96) = v33;
    id v34 = [v117 trailingAnchor];
    id v35 = [v1 trailingAnchor];
    id v36 = [v34 constraintEqualToAnchor:v35 constant:-*(double *)&qword_1004F7E00];

    *(void *)(v7 + 104) = v36;
    id v37 = [v117 heightAnchor];
    id v38 = [v37 constraintEqualToConstant:0.5];

    *(void *)(v7 + 11sub_10004ACAC(3, 1, 2) = v38;
    id v39 = [v118 leadingAnchor];
    id v40 = [v1 leadingAnchor];
    id v41 = [v39 constraintEqualToAnchor:v40 constant:*(double *)&qword_1004F7E00];

    *(void *)(v7 + 120) = v41;
    id v42 = [v118 trailingAnchor];
    id v43 = [v1 trailingAnchor];
    id v44 = [v42 constraintEqualToAnchor:v43];

    *(void *)(v7 + 128) = v44;
    id v45 = [v118 bottomAnchor];
    id v46 = [v1 bottomAnchor];
    id v47 = [v45 constraintEqualToAnchor:v46 constant:-*(double *)&qword_1004F7E00];

    *(void *)(v7 + 136) = v47;
    id v48 = [v119 leadingAnchor];
    id v49 = [v1 leadingAnchor];
    id v50 = [v48 constraintEqualToAnchor:v49 constant:*(double *)&qword_1004F7E00];

    *(void *)(v7 + 144) = v50;
    id v51 = [v119 trailingAnchor];
    id v52 = [v1 trailingAnchor];
    id v53 = [v51 constraintEqualToAnchor:v52 constant:-*(double *)&qword_1004F7E00];

    *(void *)(v7 + 15sub_10004ACAC(3, 1, 2) = v53;
    id v54 = [v119 heightAnchor];
    id v55 = [v54 constraintEqualToConstant:0.5];

    *(void *)(v7 + 160) = v55;
    id v56 = [v116 leadingAnchor];
    id v57 = [v1 leadingAnchor];
    id v58 = [v56 constraintEqualToAnchor:v57 constant:*(double *)&qword_1004F7E00];

    *(void *)(v7 + 168) = v58;
    id v59 = [v116 trailingAnchor];
    id v60 = [v1 trailingAnchor];
    id v61 = [v59 constraintEqualToAnchor:v60];

    *(void *)(v7 + 176) = v61;
    specialized Array._endMutation()();
    if (*(void *)&v1[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_numberOfRows] == 3)
    {
      unint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1003F9490;
      id v63 = [v115 leadingAnchor];
      id v64 = [v1 leadingAnchor];
      id v65 = [v63 constraintEqualToAnchor:v64 constant:*(double *)&qword_1004F7E00];

      *(void *)(inited + 3sub_10004ACAC(3, 1, 2) = v65;
      id v66 = [v115 topAnchor];
      id v67 = [v116 bottomAnchor];
      id v68 = [v66 constraintEqualToAnchor:v67 constant:*(double *)&qword_1004F7E00];

      *(void *)(inited + 40) = v68;
      id v69 = [v115 trailingAnchor];
      id v70 = [v1 trailingAnchor];
      id v71 = [v69 constraintEqualToAnchor:v70 constant:-*(double *)&qword_1004F7E00];

      *(void *)(inited + 48) = v71;
      id v72 = [v115 heightAnchor];
      id v73 = [v72 constraintEqualToConstant:0.5];

      *(void *)(inited + 56) = v73;
      id v74 = [v114 leadingAnchor];
      id v75 = [v1 leadingAnchor];
      id v76 = [v74 constraintEqualToAnchor:v75 constant:*(double *)&qword_1004F7E00];

      *(void *)(inited + 64) = v76;
      id v77 = [v114 topAnchor];
      id v78 = [v117 bottomAnchor];
      id v79 = [v77 constraintEqualToAnchor:v78 constant:*(double *)&qword_1004F7E00];

      *(void *)(inited + 7sub_10004ACAC(3, 1, 2) = v79;
      id v80 = [v114 trailingAnchor];
      id v81 = [v1 trailingAnchor];
      id v82 = [v80 constraintEqualToAnchor:v81];

      *(void *)(inited + 80) = v82;
      id v83 = [v118 topAnchor];
      id v84 = [v115 bottomAnchor];
      id v85 = [v83 constraintEqualToAnchor:v84 constant:*(double *)&qword_1004F7E00];

      *(void *)(inited + 88) = v85;
      id v86 = [v119 topAnchor];
      id v87 = [v114 bottomAnchor];
      id v88 = [v86 constraintEqualToAnchor:v87 constant:*(double *)&qword_1004F7E00];

      *(void *)(inited + 96) = v88;
      id v89 = [v116 topAnchor];
      id v90 = [v119 bottomAnchor];
      id v91 = [v89 constraintEqualToAnchor:v90 constant:*(double *)&qword_1004F7E00];

      *(void *)(inited + 104) = v91;
      specialized Array._endMutation()();
      sub_100122408(inited);
LABEL_21:
      id v110 = self;
      sub_100029878();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v110 activateConstraints:isa];

      return;
    }
    id v96 = [v118 topAnchor];
    uint64_t v97 = &selRef_replaySensorDidFinishReplayingData;
    id v98 = [v119 bottomAnchor];
    id v99 = [v96 constraintEqualToAnchor:v98 constant:*(double *)&qword_1004F7E00];

    id v100 = [v119 topAnchor];
    id v101 = [v116 bottomAnchor];
    id v102 = [v100 constraintEqualToAnchor:v101 constant:*(double *)&qword_1004F7E00];

    id v103 = [v116 topAnchor];
    id v104 = [v117 bottomAnchor];
    id v105 = [v103 constraintEqualToAnchor:v104 constant:*(double *)&qword_1004F7E00];

    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v112 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v107 = v112 + 3;
      if (!__OFADD__(v112, 3))
      {
LABEL_15:
        sub_100089F90(v107);
        specialized Array._endMutation()();
        uint64_t v97 = (char **)v99;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
LABEL_16:
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v108 = v102;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v109 = v105;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          goto LABEL_21;
        }
LABEL_25:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v106 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v107 = v106 + 3;
      if (!__OFADD__(v106, 3)) {
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  id v92 = [v2 heightAnchor];
  id v93 = [v3 currentTraitCollection];
  id v94 = [v93 preferredContentSizeCategory];

  LOBYTE(v93) = UIContentSizeCategory.isAccessibilityCategory.getter();
  double v95 = 88.0;
  if (v93) {
    double v95 = 222.0;
  }
  id v120 = [v92 constraintEqualToConstant:v95];

  [v120 setActive:1];
}

void sub_100089514(uint64_t a1)
{
  id v2 = [self currentTraitCollection];
  id v3 = [v2 preferredContentSizeCategory];

  LOBYTE(vsub_10004ACAC(3, 1, 2) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v2)
  {
    sub_100056EE0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(NSString *)(a1 + 24), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104));
    sub_100016FEC(a1 + 144, (uint64_t)v39, &qword_1004C7758);
    sub_100016FEC((uint64_t)v39, (uint64_t)&v66, &qword_1004C7758);
    uint64_t v4 = v67;
    if (v67)
    {
      uint64_t v35 = v70;
      uint64_t v36 = v68;
      uint64_t v25 = v66;
      uint64_t v26 = v71;
      uint64_t v5 = v73;
      uint64_t v6 = v75;
      uint64_t v31 = v74;
      uint64_t v33 = v72;
      uint64_t v7 = v77;
      uint64_t v27 = v69;
      uint64_t v29 = v76;
      id v8 = [self mainBundle];
      v78._object = (void *)0xE000000000000000;
      v9._uint64_t countAndFlagsBits = 0x4F49544156454C45;
      v9._object = (void *)0xE90000000000004ELL;
      v10._uint64_t countAndFlagsBits = 0;
      v10._object = (void *)0xE000000000000000;
      v78._uint64_t countAndFlagsBits = 0;
      Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v78);

      Swift::String v53 = v11;
      uint64_t v54 = v25;
      uint64_t v55 = v4;
      uint64_t v56 = v36;
      uint64_t v57 = v27;
      uint64_t v58 = v35;
      uint64_t v59 = v26;
      uint64_t v60 = v33;
      uint64_t v61 = v5;
      uint64_t v62 = v31;
      uint64_t v63 = v6;
      uint64_t v64 = v29;
      uint64_t v65 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10014DC14((uint64_t)&v53);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    float v12 = sub_10008A328(*(float32x4_t *)(a1 + 128));
    sub_1000BE4B0((uint64_t)v37, v12);
    id v13 = [self mainBundle];
    v79._object = (void *)0xE000000000000000;
    v14._uint64_t countAndFlagsBits = 0x45434E4154534944;
    v14._object = (void *)0xED0000594157415FLL;
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    v79._uint64_t countAndFlagsBits = 0;
    Swift::String v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v79);

    uint64_t v17 = v37[0];
    uint64_t v18 = v37[1];
    uint64_t v20 = v37[2];
    uint64_t v19 = v37[3];
    uint64_t v21 = v37[6];
    uint64_t v22 = v37[8];
    uint64_t v32 = v37[7];
    uint64_t v34 = v37[5];
    uint64_t v23 = v37[11];
    uint64_t v24 = v37[13];
    uint64_t v28 = v37[12];
    uint64_t v30 = v37[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100028648((uint64_t)v37);
    Swift::String v40 = v16;
    uint64_t v41 = v17;
    uint64_t v42 = v18;
    uint64_t v43 = v20;
    uint64_t v44 = v19;
    uint64_t v45 = v34;
    uint64_t v46 = v21;
    uint64_t v47 = v32;
    uint64_t v48 = v22;
    uint64_t v49 = v30;
    uint64_t v50 = v23;
    uint64_t v51 = v28;
    uint64_t v52 = v24;
    sub_10014DC14((uint64_t)&v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10008A380(a1, v38);
    sub_100056DCC((uint64_t)v38);
    sub_10008A5C4((uint64_t)v38);
  }
}

id sub_100089918()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  id result = (id)__chkstk_darwin(v1);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v0;
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_numberOfRows);
  if ((v6 & 0x8000000000000000) == 0)
  {
    if (!v6)
    {
LABEL_8:
      uint64_t v15 = v23;
      uint64_t v16 = *(void *)(v23 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_labelStrip);
      [*(id *)(v16 + OBJC_IVAR____TtC7Measure11LabelsStrip_primaryLabel) setSelectedRange:0, 0];
      uint64_t v17 = *(void *)(v16 + OBJC_IVAR____TtC7Measure11LabelsStrip_secondaryLabelStack);
      [*(id *)(*(void *)(v17 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];
      [*(id *)(*(void *)(v17 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];
      uint64_t v18 = *(void *)(v15 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityLabelStrip);
      [*(id *)(v18 + OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_topLabel) setSelectedRange:0, 0];
      [*(id *)(v18 + OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_bottomLabel) setSelectedRange:0, 0];
      uint64_t v19 = *(void *)(v15 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityElevation);
      [*(id *)(v19 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel) setSelectedRange:0, 0];
      [*(id *)(v19 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel) setSelectedRange:0, 0];
      [*(id *)(v19 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel) setSelectedRange:0, 0];
      uint64_t v20 = *(void *)(v15 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityDistance);
      [*(id *)(v20 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel) setSelectedRange:0, 0];
      [*(id *)(v20 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel) setSelectedRange:0, 0];
      [*(id *)(v20 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel) setSelectedRange:0, 0];
      uint64_t v21 = *(void *)(v15 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityAngle);
      [*(id *)(v21 + OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_topLabel) setSelectedRange:0, 0];
      return [*(id *)(v21 + OBJC_IVAR____TtC7Measure24AccessibilityDoubleStack_bottomLabel) setSelectedRange:0, 0];
    }
    uint64_t v7 = 0;
    id v8 = *(void **)(v23 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_tableView);
    Swift::String v9 = (uint64_t (**)(char *, uint64_t))(v3 + 8);
    while (v6 != v7)
    {
      IndexPath.init(row:section:)();
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v11 = [v8 cellForRowAtIndexPath:isa];

      if (!v11) {
        return (id)(*v9)(v5, v1);
      }
      type metadata accessor for DetailedPlatterCellTableViewCell();
      uint64_t v12 = swift_dynamicCastClass();
      if (!v12)
      {

        return (id)(*v9)(v5, v1);
      }
      ++v7;
      uint64_t v13 = *(void *)(v12 + OBJC_IVAR____TtC7Measure32DetailedPlatterCellTableViewCell_measureContent);
      [*(id *)(v13 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits) setSelectedRange:0, 0];
      uint64_t v14 = *(void *)(v13 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels);
      [*(id *)(*(void *)(v14 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];
      [*(id *)(*(void *)(v14 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel)+ OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label) setSelectedRange:0, 0];

      id result = (id)(*v9)(v5, v1);
      if (v6 == v7) {
        goto LABEL_8;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for LinePlatterSpatial()
{
  return self;
}

__n128 sub_100089EA0@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_100086920(a1, (uint64_t *)v6);
  long long v3 = v6[5];
  *(_OWORD *)(a2 + 64) = v6[4];
  *(_OWORD *)(a2 + 80) = v3;
  *(_OWORD *)(a2 + 96) = v6[6];
  long long v4 = v6[1];
  *(_OWORD *)a2 = v6[0];
  *(_OWORD *)(a2 + 16) = v4;
  __n128 result = (__n128)v6[3];
  *(_OWORD *)(a2 + 3sub_10004ACAC(3, 1, 2) = v6[2];
  *(__n128 *)(a2 + 48) = result;
  return result;
}

uint64_t sub_100089EF0()
{
  return *(void *)(v0 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_numberOfRows);
}

uint64_t sub_100089F04()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_title);
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_100089F40()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Measure18LinePlatterSpatial_tableView);
  id v2 = v1;
  return v1;
}

uint64_t sub_100089F70()
{
  return swift_retain();
}

uint64_t sub_100089F90(uint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v3;
  if ((result & 1) == 0
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0
    || a1 > *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
  {
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t *v1 = result;
  }
  return result;
}

id sub_10008A050(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MeasurementHistoryItem();
  sub_100026A04(a1 + *(int *)(v2 + 28), (uint64_t)v48);
  sub_100026A04((uint64_t)v48, (uint64_t)v49);
  id v3 = 0;
  if (!sub_100026A60((uint64_t)v49))
  {
    uint64_t v4 = sub_100026A6C((uint64_t)v49);
    sub_100012894(&qword_1004CE700);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1003F87F0;
    *(void *)(v5 + 3sub_10004ACAC(3, 1, 2) = NSFontAttributeName;
    uint64_t v6 = self;
    uint64_t v7 = NSFontAttributeName;
    [v6 systemFontSize];
    *(void *)(v5 + 40) = [v6 systemFontOfSize:];
    unint64_t v8 = sub_1000E1418(v5);
    swift_bridgeObjectRetain();
    sub_100026E9C(v8);
    swift_bridgeObjectRelease();
    id v9 = objc_allocWithZone((Class)NSAttributedString);
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1000278E0();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v12 = [v9 initWithString:v10 attributes:isa];

    id v3 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v12];
    uint64_t v13 = *(void *)(v4 + 8);
    int v14 = *(_DWORD *)(v4 + 32);
    char v15 = *(unsigned char *)(v4 + 36);
    char v16 = *(unsigned char *)(v4 + 37);
    uint64_t v17 = *(void *)(v4 + 40);
    uint64_t v18 = *(void *)(v4 + 48);
    int v19 = *(_DWORD *)(v4 + 72);
    char v20 = *(unsigned char *)(v4 + 76);
    char v21 = *(unsigned char *)(v4 + 77);
    uint64_t v22 = *(void *)(v4 + 80);
    uint64_t v23 = *(void *)(v4 + 88);
    int v24 = *(_DWORD *)(v4 + 112);
    char v25 = *(unsigned char *)(v4 + 116);
    char v26 = *(unsigned char *)(v4 + 117);
    *(void *)&v32[0] = *(void *)v4;
    *((void *)&v32[0] + sub_10004ACAC(2, 1, 1) = v13;
    v32[1] = *(_OWORD *)(v4 + 16);
    int v33 = v14;
    char v34 = v15;
    char v35 = v16;
    uint64_t v36 = v17;
    uint64_t v37 = v18;
    long long v38 = *(_OWORD *)(v4 + 56);
    int v39 = v19;
    char v40 = v20;
    char v41 = v21;
    uint64_t v42 = v22;
    uint64_t v43 = v23;
    long long v44 = *(_OWORD *)(v4 + 96);
    int v45 = v24;
    char v46 = v25;
    char v47 = v26;
    v27._uint64_t countAndFlagsBits = sub_10001D29C(v32);
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    id v28 = objc_allocWithZone((Class)NSAttributedString);
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v30 = [v28 initWithString:v29];

    [v3 appendAttributedString:v30];
  }
  return v3;
}

float sub_10008A328(float32x4_t a1)
{
  static ComputedCameraProperties.shared.getter();
  simd_float4x4.position.getter();
  float32x4_t v2 = vsubq_f32(a1, v1);
  float32x4_t v3 = vmulq_f32(v2, v2);
  return sqrtf(v3.f32[2] + vaddv_f32(*(float32x2_t *)v3.f32));
}

uint64_t sub_10008A380@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100016FEC(a1 + 264, (uint64_t)v21, &qword_1004C74C8);
  uint64_t result = sub_100016FEC((uint64_t)v21, (uint64_t)&v22, &qword_1004C74C8);
  if ((v23 & 1) != 0 || (~LODWORD(v22) & 0x7F800000) == 0)
  {
    id v4 = [self mainBundle];
    unint64_t v5 = 0xE000000000000000;
    v24._object = (void *)0xE000000000000000;
    v6._uint64_t countAndFlagsBits = 0x454C474E41;
    v6._object = (void *)0xE500000000000000;
    v7._uint64_t countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    v24._uint64_t countAndFlagsBits = 0;
    Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v4, v7, v24);
    uint64_t countAndFlagsBits = v8._countAndFlagsBits;
    object = v8._object;

    uint64_t v11 = 0;
    uint64_t result = 0;
    uint64_t v12 = 0;
LABEL_7:
    *a2 = countAndFlagsBits;
    a2[1] = (uint64_t)object;
    a2[2] = v11;
    a2[3] = v5;
    a2[4] = result;
    a2[5] = v12;
    a2[6] = 0;
    a2[7] = 0xE000000000000000;
    a2[8] = 0;
    a2[9] = 0;
    a2[10] = 0;
    a2[11] = 0xE000000000000000;
    a2[12] = 0;
    a2[13] = 0;
    return result;
  }
  if (v22 <= -9.2234e18)
  {
    __break(1u);
  }
  else if (v22 < 9.2234e18)
  {
    uint64_t v13 = (uint64_t)v22;
    id v14 = [self mainBundle];
    v25._object = (void *)0xE000000000000000;
    v15._uint64_t countAndFlagsBits = 0x454C474E41;
    v15._object = (void *)0xE500000000000000;
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v25._uint64_t countAndFlagsBits = 0;
    Swift::String v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v25);
    uint64_t countAndFlagsBits = v17._countAndFlagsBits;
    object = v17._object;

    sub_100012894((uint64_t *)&unk_1004D2460);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1003F87F0;
    *(void *)(v18 + 56) = &type metadata for Int;
    *(void *)(v18 + 64) = &protocol witness table for Int;
    *(void *)(v18 + 3sub_10004ACAC(3, 1, 2) = v13;
    uint64_t v11 = String.init(format:_:)();
    unint64_t v5 = v19;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1003F87F0;
    *(void *)(v20 + 56) = &type metadata for Int;
    *(void *)(v20 + 64) = &protocol witness table for Int;
    *(void *)(v20 + 3sub_10004ACAC(3, 1, 2) = v13;
    uint64_t result = String.init(format:_:)();
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_10008A5C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_10008A650(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 152);
  uint64_t v4 = *(void *)(a1 + 144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000283C4(v4, v3);
  return a1;
}

void sub_10008A758()
{
  *(void *)&v0[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_minContentViewHeight] = 0x4071400000000000;
  id v1 = [self currentTraitCollection];
  id v2 = [v1 preferredContentSizeCategory];

  LOBYTE(vsub_10004ACAC(2, 1, 1) = UIContentSizeCategory.isAccessibilityCategory.getter();
  double v3 = 88.0;
  if (v1) {
    double v3 = 222.0;
  }
  *(double *)&v0[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_tableRowHeight] = v3;
  uint64_t v4 = &v0[OBJC_IVAR____TtC7Measure18LinePlatterSpatial_numberOfRowsChangedCallback];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + sub_10004ACAC(2, 1, 1) = 0;
  uint64_t v5 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_sketchView;
  type metadata accessor for SketchLine();
  *(void *)&v0[v5] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v6 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_labelStrip;
  type metadata accessor for LabelsStrip();
  *(void *)&v0[v6] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v7 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_tableView;
  type metadata accessor for IntrinsicTableView();
  *(void *)&v0[v7] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v8 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityLabelStrip;
  type metadata accessor for AccessibilityDoubleStack();
  ObjCClassFromMetauint64_t data = (objc_class *)swift_getObjCClassFromMetadata();
  *(void *)&v0[v8] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v10 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityElevation;
  type metadata accessor for AccessibilityTripleStack();
  uint64_t v11 = (objc_class *)swift_getObjCClassFromMetadata();
  *(void *)&v0[v10] = [objc_allocWithZone(v11) init];
  uint64_t v12 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityDistance;
  *(void *)&v0[v12] = [objc_allocWithZone(v11) init];
  uint64_t v13 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilityAngle;
  *(void *)&v0[v13] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v14 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilitySeparatorOne;
  if (qword_1004C27E0 != -1) {
    swift_once();
  }
  double v15 = *(double *)&qword_1004F7DF8;
  *(void *)&v0[v14] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, *(double *)&qword_1004F7DF8, 0.5];
  uint64_t v16 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilitySeparatorTwo;
  *(void *)&v0[v16] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, v15, 0.5];
  uint64_t v17 = OBJC_IVAR____TtC7Measure18LinePlatterSpatial_accessibilitySeparatorThree;
  *(void *)&v0[v17] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, v15, 0.5];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10008AA1C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  void (*v69)(void *__return_ptr, void);
  uint64_t v70;
  unsigned __int8 v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  double v83;
  double v84;
  char *v85;
  void *v86;
  id v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  void *v94;
  uint64_t v95;
  void *v96;
  void *v97;
  id v98;
  id v99;
  char *v100;
  char *v101;
  char *v102;
  long long v103;
  uint64_t v104;
  id v105;
  id v106;
  id v107;
  char *v108;
  long long v109;
  long long v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  long long v116;
  long long v117;
  unsigned char v118[512];
  uint64_t v119;
  _OWORD v120[2];
  uint64_t v121;
  _OWORD v122[8];
  char v123;
  long long v124;
  long long v125;
  long long v126;
  long long v127;
  long long v128;
  long long v129;
  long long v130;
  long long v131;
  char v132;
  uint64_t v133;
  _OWORD v134[2];
  unsigned char v135[24];
  unsigned char v136[48];
  unsigned char v137[48];
  unsigned char v138[48];
  CGAffineTransform v139;
  unsigned char v140[48];
  CGAffineTransform v141;
  void v142[2];
  char v143;

  uint64_t v5 = v4;
  uint64_t v10 = (void *)type metadata accessor for DispatchWorkItemFlags();
  id v115 = *(v10 - 1);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v111 = (char *)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1004C29B0 != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)qword_1004C7780;
  sub_100016FEC(a1, (uint64_t)v122, &qword_1004C5FD0);
  int v17 = sub_100016B28((uint64_t *)v122);
  uint64_t v113 = v12;
  id v114 = v13;
  uint64_t v112 = v14;
  if (v17 == 1)
  {
    id v110 = xmmword_1003FB9A0;
    id v18 = v16;
    id v19 = 0;
    id v116 = 0u;
    uint64_t v20 = _swiftEmptyArrayStorage;
    CGFloat a = 1.0;
    char v22 = 1;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    CGFloat b = 0.0;
    id v117 = 0u;
    id v109 = 0u;
LABEL_70:
    sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
    id v94 = (void *)static OS_dispatch_queue.main.getter();
    double v95 = swift_allocObject();
    *(void *)(v95 + 16) = v5;
    *(CGFloat *)(v95 + 24) = a;
    *(CGFloat *)(v95 + 3sub_10004ACAC(3, 1, 2) = b;
    *(_OWORD *)(v95 + 40) = v110;
    *(_OWORD *)(v95 + 56) = v109;
    *(_OWORD *)(v95 + 7sub_10004ACAC(3, 1, 2) = v116;
    *(_OWORD *)(v95 + 88) = v117;
    *(void *)(v95 + 104) = v19;
    *(unsigned char *)(v95 + 11sub_10004ACAC(3, 1, 2) = v22;
    *(void *)(v95 + 120) = v24;
    *(void *)(v95 + 128) = v23;
    *(void *)(v95 + 136) = v18;
    *(void *)(v95 + 144) = v20;
    *(void *)&v118[32] = sub_10008D0CC;
    *(void *)&v118[40] = v95;
    *(void *)id v118 = _NSConcreteStackBlock;
    *(void *)&v118[8] = 1107296256;
    *(void *)&v118[16] = sub_100049AB4;
    *(void *)&v118[24] = &unk_10048B508;
    id v96 = v18;
    uint64_t v97 = _Block_copy(v118);
    id v98 = v19;
    id v99 = v96;
    id v100 = v5;
    swift_release();
    id v101 = v111;
    static DispatchQoS.unspecified.getter();
    *(void *)id v118 = _swiftEmptyArrayStorage;
    sub_100039B94();
    sub_100012894((uint64_t *)&unk_1004C68E0);
    sub_100039BEC();
    id v102 = v113;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v97);

    (*(void (**)(char *, void *))(v115 + 8))(v102, v10);
    (*(void (**)(char *, uint64_t))(v112 + 8))(v101, v114);
    return;
  }
  *(void *)&id v110 = a2;
  uint64_t v130 = v122[6];
  uint64_t v131 = v122[7];
  uint64_t v132 = v123;
  long long v126 = v122[2];
  long long v127 = v122[3];
  uint64_t v128 = v122[4];
  uint64_t v129 = v122[5];
  long long v124 = v122[0];
  long long v125 = v122[1];
  char v26 = self;
  uint64_t v106 = v16;
  id v104 = a1;
  sub_10008D11C(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000535BC);
  id v27 = [v26 mainScreen];
  [v27 scale];
  double v29 = v28;

  double v30 = v29 * *(double *)&v128;
  id v105 = self;
  uint64_t v31 = (char **)[v105 standardUserDefaults];
  Defaults.edgeDetectionUniqueContours.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v33 = [v31 BOOLForKey:v32];

  uint64_t v34 = v125;
  id v108 = v5;
  if (v33)
  {
    if (qword_1004C2998 != -1)
    {
      uint64_t v31 = &selRef_labelNodeWithText_;
      swift_once();
    }
    double v35 = v30 * *(double *)&qword_1004C7760;
    if ((~COERCE__INT64(v30 * *(double *)&qword_1004C7760) & 0x7FF0000000000000) != 0)
    {
      if (v35 > -2147483650.0)
      {
        if (v35 < 2147483650.0)
        {
          id v36 = [self makeCVImageFromUniqueContours:v34 lineThickness:(int)v35];
          goto LABEL_18;
        }
        goto LABEL_76;
      }
      goto LABEL_74;
    }
    __break(1u);
  }
  else if (qword_1004C2998 == -1)
  {
    goto LABEL_13;
  }
  uint64_t v31 = &selRef_labelNodeWithText_;
  swift_once();
LABEL_13:
  double v37 = v30 * *(double *)&qword_1004C7760;
  if ((~COERCE__INT64(v30 * *(double *)&qword_1004C7760) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  if (v37 <= -2147483650.0)
  {
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  if (v37 >= 2147483650.0)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  uint64_t v31 = (char **)(int)v37;
  if (qword_1004C29C0 != -1) {
LABEL_78:
  }
    swift_once();
  id v36 = [self makeCVImageFromContours:v34 lineThickness:v31 color:qword_1004C7790];
LABEL_18:
  uint64_t v107 = v36;
  long long v133 = *((void *)&v129 + 1);
  uint64_t v38 = *(void *)(*((void *)&v129 + 1) + 16);
  if (v38)
  {
    uint64_t v39 = swift_bridgeObjectRetain() + 64;
    uint64_t v20 = _swiftEmptyArrayStorage;
    do
    {
      if (*(unsigned char *)(v39 + 56))
      {
        id v117 = *(_OWORD *)v39;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v20 = sub_10006E718(0, *((void *)v20 + 2) + 1, 1, (uint64_t)v20);
        }
        unint64_t v41 = *((void *)v20 + 2);
        unint64_t v40 = *((void *)v20 + 3);
        if (v41 >= v40 >> 1) {
          uint64_t v20 = sub_10006E718((double *)(v40 > 1), v41 + 1, 1, (uint64_t)v20);
        }
        *((void *)v20 + sub_10004ACAC(3, 1, 2) = v41 + 1;
        *(_OWORD *)&v20[2 * v41 + 4] = v117;
        swift_release();
      }
      v39 += 96;
      --v38;
    }
    while (v38);
    sub_10008D0F0((uint64_t)&v133);
  }
  else
  {
    uint64_t v20 = _swiftEmptyArrayStorage;
  }
  uint64_t v42 = self;
  id v43 = v107;
  id v19 = [v42 makeUIImageFromCVImage:v107];
  id v116 = v126;
  id v117 = v127;
  [v19 size];
  CGFloat v45 = 1.0 / v44;
  [v19 size];
  CGAffineTransformMakeScale(&v139, v45, 1.0 / v46);
  id v109 = *(_OWORD *)&v139.a;
  id v103 = *(_OWORD *)&v139.c;
  CGFloat v47 = *(void *)&v139.tx;
  CGFloat v48 = *(void *)&v139.ty;
  [v19 size];
  CGFloat v49 = *((double *)&v117 + 1);
  ARCameraImageToViewTransform();
  long long v50 = *(_OWORD *)&v139.a;
  long long v51 = *(_OWORD *)&v139.c;
  long long v52 = *(_OWORD *)&v139.tx;
  *(_OWORD *)&v139.CGFloat a = v109;
  *(_OWORD *)&v139.CGFloat c = v103;
  *(void *)&v139.CGFloat tx = v47;
  *(void *)&v139.CGFloat ty = v48;
  *(_OWORD *)id v118 = v50;
  *(_OWORD *)&v118[16] = v51;
  *(_OWORD *)&v118[32] = v52;
  CGAffineTransformConcat(&v141, &v139, (CGAffineTransform *)v118);
  id v109 = *(_OWORD *)&v141.c;
  id v110 = *(_OWORD *)&v141.a;
  CGFloat tx = v141.tx;
  CGFloat ty = v141.ty;
  CGAffineTransformMakeScale(&v139, *(CGFloat *)&v117, v49);
  long long v55 = *(_OWORD *)&v139.a;
  long long v56 = *(_OWORD *)&v139.c;
  long long v57 = *(_OWORD *)&v139.tx;
  *(_OWORD *)&v139.CGFloat a = v110;
  *(_OWORD *)&v139.CGFloat c = v109;
  v139.CGFloat tx = tx;
  v139.CGFloat ty = ty;
  *(_OWORD *)id v118 = v55;
  *(_OWORD *)&v118[16] = v56;
  *(_OWORD *)&v118[32] = v57;
  CGAffineTransformConcat(&v141, &v139, (CGAffineTransform *)v118);
  CGFloat a = v141.a;
  CGFloat b = v141.b;
  id v109 = *(_OWORD *)&v141.tx;
  id v110 = *(_OWORD *)&v141.c;
  id v58 = v19;
  id v59 = [v105 standardUserDefaults];
  Defaults.edgeDetectionDebugReticleEnabled.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v60 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v61 = [v59 BOOLForKey:v60];

  if (!v61)
  {

    sub_10008D11C(v104, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000534B8);
    char v22 = 1;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    id v18 = v106;
    uint64_t v5 = v108;
    goto LABEL_70;
  }
  *(void *)&id v103 = v58;
  id v105 = v10;
  uint64_t v62 = v108;
  uint64_t v63 = (uint64_t)&v108[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_reticlePoint];
  sub_100016FEC((uint64_t)&v108[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_reticlePoint], (uint64_t)v138, &qword_1004C74D8);
  uint64_t v64 = *(void *)(v63 + 16);
  uint64_t v65 = *(void *)(v63 + 24);
  uint64_t v66 = *(unsigned __int8 *)(v63 + 32);
  sub_100016FEC((uint64_t)v138, (uint64_t)v140, &qword_1004C74D8);
  BOOL v67 = v140[32] == 3 || v66 == 2;
  uint64_t v68 = v67;
  if (v67)
  {
    uint64_t v64 = 0;
    uint64_t v65 = 0;
  }
  uint64_t v69 = *(void (**)(void *__return_ptr, void))(**(void **)&v62[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView__frameState]
                                                            + 144);
  uint64_t v70 = swift_retain();
  v69(v118, v70);
  swift_release();
  memcpy(&v139, v118, 0x200uLL);
  sub_100081F5C(v64, v65, v68, (uint64_t)v138);
  uint64_t v72 = v71;
  sub_100016F7C((uint64_t)&v139);
  if (v72 == 2)
  {
    sub_100016FEC(v63, (uint64_t)v137, &qword_1004C74D8);
    uint64_t v73 = *(void *)(v63 + 16);
    uint64_t v74 = *(void *)(v63 + 24);
    uint64_t v75 = *(unsigned __int8 *)(v63 + 32);
    sub_100016FEC((uint64_t)v137, (uint64_t)&v141, &qword_1004C74D8);
    uint64_t v76 = LOBYTE(v141.tx) == 3 || v75 == 2;
    uint64_t v77 = v76;
    if (v76) {
      Swift::String v78 = 0;
    }
    else {
      Swift::String v78 = v73;
    }
    if (v76) {
      Swift::String v79 = 0;
    }
    else {
      Swift::String v79 = v74;
    }
    sub_1000823C4(a3, a4, v78, v79, v77, (uint64_t)v137);
  }
  sub_100016FEC(v63, (uint64_t)v136, &qword_1004C74D8);
  sub_100082728((uint64_t)v136, (uint64_t)&v119);
  id v80 = LODWORD(v120[0]);
  id v81 = BYTE8(v120[1]);
  id v82 = v121;
  *(void *)uint64_t v63 = v119;
  *(void *)(v63 + 8) = v80;
  *(_OWORD *)(v63 + 16) = *(_OWORD *)((char *)v120 + 8);
  *(void *)(v63 + 3sub_10004ACAC(3, 1, 2) = v81;
  *(void *)(v63 + 40) = v82;
  v134[0] = v120[0];
  *(_OWORD *)((char *)v134 + 9) = *(_OWORD *)((char *)v120 + 9);
  sub_100016FEC((uint64_t)v134 + 8, (uint64_t)v135, &qword_1004C74E0);
  sub_100016FEC((uint64_t)v135, (uint64_t)v142, &qword_1004C74E0);
  uint64_t v10 = v105;
  id v18 = v106;
  uint64_t v5 = v108;
  if (v143 == 2)
  {
LABEL_62:
    (*(void (**)(unsigned char *__return_ptr))(**((void **)&v130 + 1) + 144))(v118);
    if ((v118[72] & 1) != 0 || *(float *)(v124 + 196) >= *(float *)&v118[68])
    {

      sub_10008D11C(v104, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000534B8);
      char v22 = 1;
      uint64_t v23 = 0;
      uint64_t v24 = 0;
    }
    else
    {
      static CGSize.* infix(_:_:)();
      CGPoint.init(_:)();
      static CGPoint.+ infix(_:_:)();
      if (qword_1004C29A8 != -1) {
        swift_once();
      }
      static CGSize.* infix(_:_:)();
      CGPoint.init(_:)();
      static CGPoint.- infix(_:_:)();
      uint64_t v24 = v91;
      uint64_t v23 = v92;
      if (qword_1004C29B8 != -1) {
        swift_once();
      }
      id v93 = (id)qword_1004C7788;

      sub_10008D11C(v104, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000534B8);
      char v22 = 0;
      id v18 = v93;
    }
    goto LABEL_70;
  }
  id v83 = *(double *)v142;
  id v84 = *(double *)&v142[1];
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  if (*((void *)&xmmword_1004F7FD0 + 1))
  {
    id v85 = *(char **)(*((void *)&xmmword_1004F7FD0 + 1) + qword_1004D26B0);
    if (v85)
    {
      id v86 = *(void **)&v85[OBJC_IVAR____TtC7Measure11ReticleView_reticleBoundsLayer];
      id v87 = *((id *)&xmmword_1004F7FD0 + 1);
      id v88 = v85;
      [v86 convertPoint:0 fromLayer:v83];
      LODWORD(v86) = [v86 containsPoint:];

      if (v86)
      {
        if (qword_1004C29A8 != -1) {
          swift_once();
        }
        static CGSize.* infix(_:_:)();
        CGPoint.init(_:)();
        static CGPoint.- infix(_:_:)();
        uint64_t v24 = v89;
        uint64_t v23 = v90;

        sub_10008D11C(v104, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000534B8);
        char v22 = 0;
        goto LABEL_70;
      }
    }
    goto LABEL_62;
  }

  __break(1u);
}

uint64_t sub_10008B850(uint64_t a1, uint64_t a2, char a3)
{
  int v25 = a3 & 1;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  if ((a3 & 1) == 0)
  {
    *(void *)&long long v16 = a1;
    *((void *)&v16 + sub_10004ACAC(2, 1, 1) = a2;
    long long v24 = v16;
    type metadata accessor for MeasureCamera();
    static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
    CGPoint.init(xy:)();
    if (qword_1004C29A8 != -1) {
      swift_once();
    }
    static CGSize.* infix(_:_:)();
    CGPoint.init(_:)();
    static CGPoint.- infix(_:_:)();
    uint64_t v15 = v17;
    uint64_t v14 = v18;
  }
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  id v19 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v3;
  *(unsigned char *)(v20 + 24) = v25;
  *(void *)(v20 + 3sub_10004ACAC(3, 1, 2) = v15;
  *(void *)(v20 + 40) = v14;
  aBlock[4] = sub_10008CFE4;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_10048B4B8;
  char v21 = _Block_copy(aBlock);
  id v22 = v3;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_100039BEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v26);
}

void sub_10008BBB0()
{
  qword_1004C7760 = 0x3FF0000000000000;
}

void sub_10008BBC0()
{
  qword_1004C7768 = 0x4014000000000000;
}

uint64_t sub_10008BBD0()
{
  uint64_t result = CGSize.init(_:_:)();
  qword_1004C7770 = v1;
  *(void *)algn_1004C7778 = v2;
  return result;
}

UIColor sub_10008BBFC()
{
  sub_10001C99C(0, &qword_1004C5548);
  result.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.47451, 0.83922, 0.97647, 1.0).super.isa;
  qword_1004C7780 = (uint64_t)result.super.isa;
  return result;
}

UIColor sub_10008BC68()
{
  sub_10001C99C(0, &qword_1004C5548);
  result.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.7451, 0.15686, 0.07451, 1.0).super.isa;
  qword_1004C7788 = (uint64_t)result.super.isa;
  return result;
}

UIColor sub_10008BCD4()
{
  sub_10001C99C(0, &qword_1004C5548);
  result.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.7451, 0.15686, 0.07451, 1.0).super.isa;
  qword_1004C7790 = (uint64_t)result.super.isa;
  return result;
}

UIColor sub_10008BD40()
{
  sub_10001C99C(0, &qword_1004C5548);
  result.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.9098, 0.47843, 0.64314, 1.0).super.isa;
  qword_1004C7798 = (uint64_t)result.super.isa;
  return result;
}

UIColor sub_10008BDAC()
{
  sub_10001C99C(0, &qword_1004C5548);
  result.super.Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.9098, 0.47843, 0.64314, 1.0).super.isa;
  qword_1004C77A0 = (uint64_t)result.super.isa;
  return result;
}

char *sub_10008BE18(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView__frameState;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = sub_100012894(&qword_1004C3F10);
  uint64_t v13 = qword_1004C2E30;
  uint64_t v14 = v5;
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_1004F8630;
  long long v16 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 272);
  swift_retain();
  *(void *)&v5[v10] = v16(KeyPath, v15);
  *(void *)&v14[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_cornerViews] = _swiftEmptyArrayStorage;
  uint64_t v17 = &v14[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_reticlePoint];
  *(_OWORD *)uint64_t v17 = 0u;
  *((_OWORD *)v17 + sub_10004ACAC(2, 1, 1) = 0u;
  *((_OWORD *)v17 + sub_10004ACAC(3, 1, 2) = xmmword_1003FB9B0;
  v14[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_isRenderingEdges] = 0;
  v14[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_isRenderingLines] = 0;
  v14[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_isRenderingSmoothLines] = 0;
  id v18 = [objc_allocWithZone((Class)UIImageView) init];
  *(void *)&v14[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_imageView] = v18;
  [v18 setContentMode:4];
  [v18 setAlpha:0.65];
  [v18 setHidden:1];
  [v18 setOpaque:0];
  id v19 = [objc_allocWithZone((Class)UIImageView) init];
  *(void *)&v14[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_edgeView] = v19;
  [v19 setContentMode:4];
  [v19 setAlpha:0.65];
  [v19 setHidden:1];
  [v19 setOpaque:0];
  id v20 = [objc_allocWithZone((Class)UIImageView) init];
  *(void *)&v14[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_lineView] = v20;
  [v20 setContentMode:4];
  [v20 setAlpha:0.75];
  [v20 setHidden:1];
  [v20 setOpaque:0];
  id v21 = [objc_allocWithZone((Class)UIImageView) init];
  *(void *)&v14[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_smoothLineView] = v21;
  [v21 setContentMode:4];
  [v21 setAlpha:0.85];
  [v21 setHidden:0];
  [v21 setOpaque:0];
  if (qword_1004C29A8 != -1) {
    swift_once();
  }
  id v22 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, *(double *)&qword_1004C7770, *(double *)algn_1004C7778];
  uint64_t v23 = OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_pointView;
  *(void *)&v14[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_pointView] = v22;
  [v22 setContentMode:4];
  uint64_t v24 = qword_1004C29B0;
  id v25 = v22;
  if (v24 != -1) {
    swift_once();
  }
  [v25 setBackgroundColor:qword_1004C7780];

  [*(id *)&v14[v23] setHidden:1];
  id v26 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, *(double *)&qword_1004C7770, *(double *)algn_1004C7778];
  uint64_t v27 = OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_unprojectedPointView;
  *(void *)&v14[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_unprojectedPointView] = v26;
  [v26 setContentMode:4];
  uint64_t v28 = qword_1004C29D0;
  id v29 = v26;
  if (v28 != -1) {
    swift_once();
  }
  [v29 setBackgroundColor:qword_1004C77A0];

  id v30 = *(id *)&v14[v27];
  [v30 setHidden:1];

  v36.receiver = v14;
  v36.super_class = ObjectType;
  uint64_t v31 = (char *)[super initWithFrame:a1, a2, a3, a4];
  uint64_t v32 = *(void *)&v31[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_imageView];
  unsigned int v33 = v31;
  [v33 addSubview:v32];
  [v33 addSubview:*(void *)&v33[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_edgeView]];
  [v33 addSubview:*(void *)&v33[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_lineView]];
  [v33 addSubview:*(void *)&v33[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_smoothLineView]];
  [v33 addSubview:*(void *)&v33[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_pointView]];
  [v33 addSubview:*(void *)&v33[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_unprojectedPointView]];
  [v33 setUserInteractionEnabled:0];

  return v33;
}

uint64_t sub_10008C3CC(char *a1, long long *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  long long v48 = a2[1];
  long long v49 = *a2;
  uint64_t v22 = *((void *)a2 + 4);
  uint64_t v23 = *((void *)a2 + 5);
  uint64_t v24 = *(void **)&a1[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_imageView];
  id v25 = [self standardUserDefaults];
  unsigned int v26 = [v25 kEdgeDetectionDebugReticleEnabled];

  [v24 setHidden:v26 ^ 1];
  v51[0] = v49;
  v51[1] = v48;
  uint64_t v52 = v22;
  uint64_t v53 = v23;
  [v24 setTransform:v51];
  [v24 setFrame:a7, a8, a9, a10];
  [v24 setImage:a3];
  uint64_t v27 = *(void **)&a1[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_pointView];
  [v27 setHidden:a4 & 1];
  [v27 frame];
  [v27 setFrame:a11, a12];
  [v27 setBackgroundColor:a5];
  uint64_t v28 = &a1[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_cornerViews];
  swift_beginAccess();
  uint64_t v29 = *(void *)v28;
  if (*(void *)v28 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v30 = result;
    if (result) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v30)
    {
LABEL_3:
      if (v30 < 1) {
        goto LABEL_31;
      }
      for (uint64_t i = 0; i != v30; ++i)
      {
        if ((v29 & 0xC000000000000001) != 0) {
          id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v33 = *(id *)(v29 + 8 * i + 32);
        }
        uint64_t v34 = v33;
        [v33 setHidden:1 v48, v49];
      }
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t result = a6;
  uint64_t v35 = *(void *)(a6 + 16);
  if (!v35) {
    return result;
  }
  uint64_t v36 = 0;
  for (uint64_t j = swift_bridgeObjectRetain() + 40; ; j += 16)
  {
    if (*(void *)v28 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v36 < v47) {
        goto LABEL_21;
      }
    }
    else if (v36 < *(void *)((*(void *)v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_21;
    }
    if (qword_1004C29A0 != -1) {
      swift_once();
    }
    id v38 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, *(double *)&qword_1004C7768, *(double *)&qword_1004C7768];
    [v38 setContentMode:4];
    if (qword_1004C29C8 != -1) {
      swift_once();
    }
    [v38 setBackgroundColor:qword_1004C7798 v48, v49];
    [a1 addSubview:v38];
    swift_beginAccess();
    id v39 = v38;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v28 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();

LABEL_21:
    uint64_t result = swift_beginAccess();
    uint64_t v40 = *(void *)v28;
    if ((*(void *)v28 & 0xC000000000000001) != 0)
    {
      id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_24;
    }
    if ((unint64_t)v36 >= *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      break;
    }
    id v41 = *(id *)(v40 + 8 * v36 + 32);
LABEL_24:
    uint64_t v42 = v41;
    ++v36;
    swift_endAccess();
    [v42 setHidden:0];
    [v42 frame];
    static CGSize.* infix(_:_:)();
    CGPoint.init(_:)();
    static CGPoint.- infix(_:_:)();
    double v44 = v43;
    double v46 = v45;
    [v42 frame];
    [v42 setFrame:v44, v46];

    if (v35 == v36) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

void sub_10008C8CC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v40 = [objc_allocWithZone((Class)UIImage) init];
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  if (!*((void *)&xmmword_1004F7FD0 + 1))
  {
    __break(1u);
    goto LABEL_18;
  }
  id v12 = [*((id *)&xmmword_1004F7FD0 + 1) view];
  if (!v12)
  {
LABEL_18:
    __break(1u);
    return;
  }
  uint64_t v13 = v12;
  [v12 bounds];
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;

  v45.origin.CGFloat x = v15;
  v45.origin.CGFloat y = v17;
  v45.size.width = v19;
  v45.size.height = v21;
  CGFloat Width = CGRectGetWidth(v45);
  v46.origin.CGFloat x = v15;
  v46.origin.CGFloat y = v17;
  v46.size.width = v19;
  v46.size.height = v21;
  v44.height = CGRectGetHeight(v46);
  v44.width = Width;
  UIGraphicsBeginImageContextWithOptions(v44, 0, 0.0);
  [v40 drawAtPoint:0.0, 0.0];
  uint64_t v23 = UIGraphicsGetCurrentContext();
  if (v23)
  {
    uint64_t v39 = v5;
    CGContextRef v41 = v23;
    CGContextSetLineWidth(v23, 1.2);
    id v24 = [self greenColor];
    id v25 = (CGColor *)[v24 CGColor];

    CGContextSetStrokeColorWithColor(v41, v25);
    uint64_t v26 = *(void *)(a1 + 16);
    if (v26)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = a1 + 56;
      do
      {
        CGContextRef.move(to:)();
        CGContextRef.addLine(to:)();
        CGContextStrokePath(v41);
        v27 += 32;
        --v26;
      }
      while (v26);
      swift_bridgeObjectRelease();
    }
    uint64_t v28 = UIGraphicsGetImageFromCurrentImageContext();
    if (v28)
    {
      uint64_t v29 = v28;
      UIGraphicsEndImageContext();
      v47.origin.CGFloat x = v15;
      v47.origin.CGFloat y = v17;
      v47.size.width = v19;
      v47.size.height = v21;
      CGFloat v30 = CGRectGetWidth(v47);
      v48.origin.CGFloat x = v15;
      v48.origin.CGFloat y = v17;
      v48.size.width = v19;
      v48.size.height = v21;
      CGFloat Height = CGRectGetHeight(v48);
      sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
      uint64_t v32 = (void *)static OS_dispatch_queue.main.getter();
      id v33 = (CGFloat *)swift_allocObject();
      _OWORD v33[3] = 0.0;
      _OWORD v33[4] = 0.0;
      *((void *)v33 + sub_10004ACAC(3, 1, 2) = v2;
      v33[5] = v30;
      v33[6] = Height;
      *((void *)v33 + 7) = v29;
      aBlock[4] = sub_10008D320;
      aBlock[5] = v33;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100049AB4;
      aBlock[3] = &unk_10048B558;
      uint64_t v34 = _Block_copy(aBlock);
      id v35 = v2;
      uint64_t v36 = v29;
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_100039B94();
      sub_100012894((uint64_t *)&unk_1004C68E0);
      sub_100039BEC();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v34);

      (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v4);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return;
    }

    CGContextRef v37 = v41;
  }
  else
  {
    UIGraphicsEndImageContext();
    CGContextRef v37 = (CGContextRef)v40;
  }
}

id sub_10008CDFC(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v11 = *(void **)(a1 + OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_smoothLineView);
  id v12 = [self standardUserDefaults];
  unsigned int v13 = [v12 showEDLines];

  [v11 setHidden:v13 ^ 1];
  [v11 setFrame:a3, a4, a5, a6];

  return [v11 setImage:a2];
}

uint64_t type metadata accessor for EdgeDetectorDebugView()
{
  return self;
}

uint64_t sub_10008CFAC()
{
  return _swift_deallocObject(v0, 48, 7);
}

id sub_10008CFE4()
{
  double v1 = *(double *)(v0 + 32);
  double v2 = *(double *)(v0 + 40);
  double v3 = *(void **)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_unprojectedPointView);
  [v3 setHidden:*(unsigned __int8 *)(v0 + 24)];
  [v3 frame];

  return [v3 setFrame:v1, v2];
}

uint64_t sub_10008D064(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10008D074()
{
  return swift_release();
}

uint64_t sub_10008D07C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 152, 7);
}

uint64_t sub_10008D0CC()
{
  return sub_10008C3CC(*(char **)(v0 + 16), (long long *)(v0 + 24), *(void *)(v0 + 104), *(unsigned char *)(v0 + 112), *(void *)(v0 + 136), *(void *)(v0 + 144), *(double *)(v0 + 72), *(double *)(v0 + 80), *(double *)(v0 + 88), *(double *)(v0 + 96), *(double *)(v0 + 120), *(double *)(v0 + 128));
}

uint64_t sub_10008D0F0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10008D11C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 128);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), v4);
  return a1;
}

void sub_10008D188()
{
  double v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView__frameState;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v4 = sub_100012894(&qword_1004C3F10);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1004F8630;
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 272);
  swift_retain();
  *(void *)&v1[v2] = v6(KeyPath, v5);
  *(void *)&v1[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_cornerViews] = _swiftEmptyArrayStorage;
  uint64_t v7 = &v1[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_reticlePoint];
  _OWORD *v7 = 0u;
  v7[1] = 0u;
  uint64_t v7[2] = xmmword_1003FB9B0;
  v1[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_isRenderingEdges] = 0;
  v1[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_isRenderingLines] = 0;
  v1[OBJC_IVAR____TtC7Measure21EdgeDetectorDebugView_isRenderingSmoothLines] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10008D2E0()
{
  return _swift_deallocObject(v0, 64, 7);
}

id sub_10008D320()
{
  return sub_10008CDFC(*(void *)(v0 + 16), *(void *)(v0 + 56), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

void sub_10008D43C(char a1)
{
  int v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC7Measure10EditButton_isInputEnabled);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC7Measure10EditButton_isInputEnabled) = a1;
  if (v2 != (a1 & 1) && (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Measure10EditButton_editEnabled) & 1) != 0)
  {
    float v3 = 0.5;
    if (a1) {
      float v3 = 1.0;
    }
    sub_10008E3D0(v3);
  }
}

char *sub_10008D480(unsigned __int8 a1, double a2, double a3, double a4, double a5)
{
  int v10 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR____TtC7Measure10EditButton_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v5[OBJC_IVAR____TtC7Measure10EditButton_animatingView] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Measure10EditButton_animatingBlur] = 0;
  uint64_t v12 = OBJC_IVAR____TtC7Measure10EditButton_pressUpDownAnimation;
  unsigned int v13 = v5;
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [self animationWithKeyPath:v14];

  *(void *)&v5[v12] = v15;
  v13[OBJC_IVAR____TtC7Measure10EditButton_editState] = 0;
  v13[OBJC_IVAR____TtC7Measure10EditButton_editEnabled] = 1;
  v13[OBJC_IVAR____TtC7Measure10EditButton_isInputEnabled] = 0;
  v13[OBJC_IVAR____TtC7Measure10EditButton_isShowingAccessibilityHUD] = 0;

  v71.receiver = v13;
  v71.super_class = ObjectType;
  id v16 = [super initWithFrame:a2, a3, a4, a5];
  id v17 = objc_allocWithZone((Class)UIPointerInteraction);
  double v18 = (char *)v16;
  id v68 = [v17 initWithDelegate:v18];
  [v18 addInteraction:];
  [v18 bounds];
  double Width = CGRectGetWidth(v72);
  id v20 = [objc_allocWithZone((Class)CAShapeLayer) init];
  [v18 setUserInteractionEnabled:1];
  if ((v10 - 1) > 1)
  {
    id v39 = [objc_allocWithZone((Class)UIImageView) init];
    type metadata accessor for ViewController();
    ObjCClassFromMetauint64_t data = swift_getObjCClassFromMetadata();
    id v41 = [self bundleForClass:ObjCClassFromMetadata];
    NSString v42 = String._bridgeToObjectiveC()();
    id v43 = [self imageNamed:v42 inBundle:v41 compatibleWithTraitCollection:0];

    if (v43)
    {
      id v44 = [v43 imageWithRenderingMode:2];
    }
    else
    {
      id v44 = 0;
    }
    double v45 = Width * 0.5;
    id v46 = v39;
    [v18 bounds];
    [v46 setFrame:];

    [v46 setImage:v44];
    id v47 = [v46 layer];
    CGSize.init(_:_:)();
    [v47 setShadowOffset:];

    id v48 = [v46 layer];
    [v48 setShadowRadius:10.0];

    id v49 = [v46 layer];
    LODWORD(v50) = 1036831949;
    [v49 setShadowOpacity:v50];

    if (qword_1004C2E90 != -1) {
      swift_once();
    }
    [v46 setTintColor:qword_1004F8670];
    [v46 setUserInteractionEnabled:0];
    id v51 = [self bezierPathWithArcCenter:1 radius:v45 startAngle:v45 * 0.666667 + v45 * 0.333333 * 0.5 endAngle:0.0 clockwise:6.28318531];
    id v52 = [v51 CGPath];
    [v20 setPath:v52];

    id v53 = [self clearColor];
    id v54 = [v53 CGColor];

    [v20 setFillColor:v54];
    if (qword_1004C2EE0 != -1) {
      swift_once();
    }
    id v55 = [(id)qword_1004F86C0 CGColor];
    [v20 setStrokeColor:v55];

    [v20 setLineWidth:v45 * 0.333333];
    id v56 = [v18 layer];
    [v56 addSublayer:v20];

    long long v57 = v18;
    [v57 addSubview:v46];

    id v58 = *(void **)&v57[OBJC_IVAR____TtC7Measure10EditButton_animatingView];
    *(void *)&v57[OBJC_IVAR____TtC7Measure10EditButton_animatingView] = v46;

    goto LABEL_14;
  }
  if ([self jasperAvailable])
  {
    [v18 bounds];
    double v22 = v21;
    double v24 = v23;
    double v26 = v25;
    double v28 = v27;
    CGSize.init(_:_:)();
    uint64_t v29 = (objc_class *)type metadata accessor for BlurredButton();
    v69.receiver = objc_allocWithZone(v29);
    v69.super_class = v29;
    CGFloat v30 = UIFontTextStyleTitle1;
    id v31 = [super initWithFrame:v22, v24, v26, v28];
    [v31 bounds];
    sub_100043F08((uint64_t)v31, v32, v33, v34, v35, 1937075312, 0xE400000000000000, (uint64_t)v30, 0);

    uint64_t v36 = OBJC_IVAR____TtC7Measure10EditButton_animatingBlur;
    CGContextRef v37 = *(void **)&v18[OBJC_IVAR____TtC7Measure10EditButton_animatingBlur];
    *(void *)&v18[OBJC_IVAR____TtC7Measure10EditButton_animatingBlur] = v31;

    uint64_t result = *(char **)&v18[v36];
    if (result)
    {
      uint64_t result = (char *)[result setUserInteractionEnabled:0];
      if (*(void *)&v18[v36])
      {
        [v18 addSubview:];
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
LABEL_14:
  uint64_t v59 = OBJC_IVAR____TtC7Measure10EditButton_pressUpDownAnimation;
  NSString v60 = *(void **)&v18[OBJC_IVAR____TtC7Measure10EditButton_pressUpDownAnimation];
  [v60 setDamping:30.0];
  [v60 setStiffness:240.0];
  id v61 = v60;
  [v61 settlingDuration];
  [v61 setDuration:];

  uint64_t v62 = *(void **)&v18[v59];
  [v62 setFillMode:kCAFillModeForwards];
  [v62 setRemovedOnCompletion:1];
  [v18 addTarget:v18 action:"editBegan" forControlEvents:1];
  [v18 addTarget:v18 action:"editEnded" forControlEvents:64];
  [v18 addTarget:v18 action:"editCancelled" forControlEvents:256];
  [v18 addTarget:v18 action:"editCancelled" forControlEvents:128];
  uint64_t v63 = OBJC_IVAR____TtC7Measure10EditButton_editEnabled;
  if (v18[OBJC_IVAR____TtC7Measure10EditButton_editEnabled]) {
    float v64 = 1.0;
  }
  else {
    float v64 = 0.5;
  }
  sub_10008E3D0(v64);
  if (v18[v63] == 1)
  {
    if (v18[OBJC_IVAR____TtC7Measure10EditButton_isInputEnabled]) {
      float v65 = 1.0;
    }
    else {
      float v65 = 0.5;
    }
    sub_10008E3D0(v65);
  }
  uint64_t v70 = ObjectType;
  swift_getMetatypeMetadata();
  uint64_t v66 = v18;
  String.init<A>(describing:)();
  NSString v67 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v66 setAccessibilityIdentifier:v67];

  return v66;
}

void sub_10008DD58()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure10EditButton_editState;
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC7Measure10EditButton_editState) & 1) == 0)
  {
    uint64_t v2 = OBJC_IVAR____TtC7Measure10EditButton_animatingView;
    float v3 = *(void **)(v0 + OBJC_IVAR____TtC7Measure10EditButton_animatingView);
    if (v3)
    {
      id v4 = [v3 layer];
      CATransform3DMakeScale(&v12, 0.666667, 0.666667, 1.0);
      [v4 setTransform:&v12];
    }
    uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC7Measure10EditButton_pressUpDownAnimation);
    Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
    [v5 setFromValue:isa];

    Class v7 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    [v5 setToValue:v7];

    uint64_t v8 = *(void **)(v0 + v2);
    if (v8)
    {
      id v9 = [v8 layer];
      NSString v10 = String._bridgeToObjectiveC()();
      [v9 addAnimation:v5 forKey:v10];
    }
    uint64_t v11 = *(void **)(v0 + OBJC_IVAR____TtC7Measure10EditButton_animatingBlur);
    if (v11) {
      [v11 setHighlighted:1];
    }
  }
  *(unsigned char *)(v0 + vsub_10004ACAC(2, 1, 1) = 1;
}

void sub_10008DF64()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Measure10EditButton_editEnabled) == 1
    && *(unsigned char *)(v0 + OBJC_IVAR____TtC7Measure10EditButton_isInputEnabled) == 1)
  {
    uint64_t v1 = v0 + OBJC_IVAR____TtC7Measure10EditButton_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v2 = *(void *)(v1 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
      swift_unknownObjectRelease();
    }
    sub_10008E07C();
    if (qword_1004C2B40 != -1) {
      swift_once();
    }
    unint64_t v4 = 0x80000001004233C0;
    unint64_t v5 = 0xD000000000000012;
    Log.default(_:isPrivate:)(*(Swift::String *)&v5, 0);
  }
}

void sub_10008E07C()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure10EditButton_editState;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Measure10EditButton_editState) == 1)
  {
    uint64_t v2 = OBJC_IVAR____TtC7Measure10EditButton_animatingView;
    float v3 = *(void **)(v0 + OBJC_IVAR____TtC7Measure10EditButton_animatingView);
    if (v3)
    {
      id v4 = [v3 layer];
      CATransform3DMakeScale(&v12, 1.0, 1.0, 1.0);
      [v4 setTransform:&v12];
    }
    unint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC7Measure10EditButton_pressUpDownAnimation);
    Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
    [v5 setFromValue:isa];

    Class v7 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    [v5 setToValue:v7];

    uint64_t v8 = *(void **)(v0 + v2);
    if (v8)
    {
      id v9 = [v8 layer];
      NSString v10 = String._bridgeToObjectiveC()();
      [v9 addAnimation:v5 forKey:v10];
    }
    uint64_t v11 = *(void **)(v0 + OBJC_IVAR____TtC7Measure10EditButton_animatingBlur);
    if (v11) {
      [v11 setHighlighted:0];
    }
  }
  *(unsigned char *)(v0 + vsub_10004ACAC(2, 1, 1) = 0;
}

void sub_10008E248()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Measure10EditButton_editEnabled) == 1
    && *(unsigned char *)(v0 + OBJC_IVAR____TtC7Measure10EditButton_isInputEnabled) == 1
    && (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Measure10EditButton_isShowingAccessibilityHUD) & 1) == 0)
  {
    uint64_t v1 = v0 + OBJC_IVAR____TtC7Measure10EditButton_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v2 = *(void *)(v1 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
      swift_unknownObjectRelease();
    }
    sub_10008E07C();
  }
}

void sub_10008E3D0(float a1)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(float *)(v3 + 24) = a1;
  id v4 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  void v8[4] = sub_100085394;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  _OWORD v8[2] = sub_100049AB4;
  void v8[3] = &unk_10048B638;
  unint64_t v5 = _Block_copy(v8);
  id v6 = v1;
  swift_release();
  id v7 = [v4 initWithDuration:v5 dampingRatio:0.5 animations:0.6];
  _Block_release(v5);
  if (a1 == 0.5) {
    sub_10008E07C();
  }
  [v7 setInterruptible:0];
  [v7 startAnimation];
}

uint64_t type metadata accessor for EditButton()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for EditButton.EditButtonState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    char *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_10004ACAC(2, 1, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10008E710);
      case 4:
        *(_DWORD *)(result + sub_10004ACAC(2, 1, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_10004ACAC(2, 1, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_10004ACAC(2, 1, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EditButton.EditButtonState()
{
  return &type metadata for EditButton.EditButtonState;
}

unint64_t sub_10008E74C()
{
  unint64_t result = qword_1004C7898;
  if (!qword_1004C7898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C7898);
  }
  return result;
}

uint64_t sub_10008E7A0()
{
  return _swift_deallocObject(v0, 28, 7);
}

uint64_t sub_10008E7D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10008E7E8()
{
  return swift_release();
}

void sub_10008E7F0()
{
  *(void *)&v0[OBJC_IVAR____TtC7Measure10EditButton_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC7Measure10EditButton_animatingView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure10EditButton_animatingBlur] = 0;
  uint64_t v1 = OBJC_IVAR____TtC7Measure10EditButton_pressUpDownAnimation;
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [self animationWithKeyPath:v2];

  *(void *)&v0[v1] = v3;
  v0[OBJC_IVAR____TtC7Measure10EditButton_editState] = 0;
  v0[OBJC_IVAR____TtC7Measure10EditButton_editEnabled] = 1;
  v0[OBJC_IVAR____TtC7Measure10EditButton_isInputEnabled] = 0;
  v0[OBJC_IVAR____TtC7Measure10EditButton_isShowingAccessibilityHUD] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10008E91C()
{
  uint64_t v1 = sub_100012894(&qword_1004C78A0);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UIPointerEffect();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v8 = [objc_allocWithZone((Class)UIPreviewParameters) init];
  [v0 bounds];
  CGRect.center.getter();
  [v0 bounds];
  CGRect.init(centerPoint:size:)();
  [self bezierPathWithOvalInRect:v9, v10, v11, v12];
  [v8 setVisiblePath:v13];

  sub_10008EB80();
  void *v7 = [objc_allocWithZone((Class)UITargetedPreview) initWithView:v0 parameters:v8];
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for UIPointerEffect.lift(_:), v4);
  uint64_t v14 = type metadata accessor for UIPointerShape();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v3, 1, 1, v14);
  uint64_t v15 = UIPointerStyle.init(effect:shape:)();

  return v15;
}

unint64_t sub_10008EB80()
{
  unint64_t result = qword_1004C78A8;
  if (!qword_1004C78A8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1004C78A8);
  }
  return result;
}

uint64_t sub_10008EBC0(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v7 = sub_100012894((uint64_t *)&unk_1004CF6F0);
  uint64_t v8 = qword_1004C2E30;
  swift_retain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1004F8630;
  double v10 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 272);
  swift_retain();
  *(void *)(v3 + 80) = v10(KeyPath, v9);
  uint64_t v11 = sub_100012894(&qword_1004C3EE8);
  uint64_t v12 = swift_getKeyPath();
  uint64_t v13 = qword_1004F8630;
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 272);
  swift_retain();
  *(void *)(v3 + 88) = v14(v12, v13);
  uint64_t v15 = sub_100012894(&qword_1004C3EF0);
  uint64_t v16 = swift_getKeyPath();
  uint64_t v17 = qword_1004F8630;
  double v18 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 272);
  swift_retain();
  *(void *)(v3 + 96) = v18(v16, v17);
  uint64_t v19 = swift_getKeyPath();
  uint64_t v20 = sub_100012894(&qword_1004C7A38);
  uint64_t v21 = qword_1004F8630;
  double v22 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 272);
  swift_retain();
  *(void *)(v3 + 104) = v22(v19, v21);
  uint64_t v23 = sub_100012894(&qword_1004C6AA0);
  uint64_t v24 = swift_getKeyPath();
  uint64_t v25 = qword_1004F8630;
  double v26 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 272);
  swift_retain();
  *(void *)(v3 + 11sub_10004ACAC(3, 1, 2) = v26(v24, v25);
  uint64_t v27 = sub_100012894(&qword_1004C58E8);
  uint64_t v28 = swift_getKeyPath();
  uint64_t v29 = qword_1004F8630;
  CGFloat v30 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 272);
  swift_retain();
  *(void *)(v3 + 120) = v30(v28, v29);
  uint64_t v31 = sub_100012894(&qword_1004C5908);
  uint64_t v32 = swift_getKeyPath();
  uint64_t v33 = qword_1004F8630;
  CGFloat v34 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 272);
  swift_retain();
  *(void *)(v3 + 128) = v34(v32, v33);
  *(void *)(v3 + 136) = 0xC000000000000000;
  *(unsigned char *)(v3 + 144) = 0;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 7sub_10004ACAC(3, 1, 2) = a2;
  CGFloat v35 = a1;
  swift_retain();
  swift_release();
  uint64_t v36 = StateObserver.init(configuration:)();
  *(void *)&v35[qword_1004C7A40 + 8] = &off_10048B788;
  swift_unknownObjectWeakAssign();

  swift_release();
  return v36;
}

void sub_10008EEE4()
{
}

void sub_10008EF0C()
{
  uint64_t v1 = v0;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_100012894((uint64_t *)&unk_1004CF6F0);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1004F8630;
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 272);
  swift_retain();
  *(void *)(v1 + 80) = v5(KeyPath, v4);
  uint64_t v6 = sub_100012894(&qword_1004C3EE8);
  uint64_t v7 = swift_getKeyPath();
  uint64_t v8 = qword_1004F8630;
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 272);
  swift_retain();
  *(void *)(v1 + 88) = v9(v7, v8);
  uint64_t v10 = sub_100012894(&qword_1004C3EF0);
  uint64_t v11 = swift_getKeyPath();
  uint64_t v12 = qword_1004F8630;
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 272);
  swift_retain();
  *(void *)(v1 + 96) = v13(v11, v12);
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = sub_100012894(&qword_1004C7A38);
  uint64_t v16 = qword_1004F8630;
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 272);
  swift_retain();
  *(void *)(v1 + 104) = v17(v14, v16);
  uint64_t v18 = sub_100012894(&qword_1004C6AA0);
  uint64_t v19 = swift_getKeyPath();
  uint64_t v20 = qword_1004F8630;
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 272);
  swift_retain();
  *(void *)(v1 + 11sub_10004ACAC(3, 1, 2) = v21(v19, v20);
  uint64_t v22 = sub_100012894(&qword_1004C58E8);
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = qword_1004F8630;
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 272);
  swift_retain();
  *(void *)(v1 + 120) = v25(v23, v24);
  uint64_t v26 = sub_100012894(&qword_1004C5908);
  uint64_t v27 = swift_getKeyPath();
  uint64_t v28 = qword_1004F8630;
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 272);
  swift_retain();
  *(void *)(v1 + 128) = v29(v27, v28);
  *(void *)(v1 + 136) = 0xC000000000000000;
  *(unsigned char *)(v1 + 144) = 0;
  swift_release();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10008F1D8()
{
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  if ([self jasperAvailable])
  {
    swift_retain();
    StateValue.ifUpdated(_:)();
    swift_release();
  }
  swift_retain();
  StateValue.ifUpdated(_:)();

  return swift_release();
}

void sub_10008F310(unint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v32 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  __chkstk_darwin(v3);
  uint64_t v29 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  __chkstk_darwin(v5);
  uint64_t v26 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v25 = *(void *)(v1 + 136);
  if (v25 >> 62)
  {
    sub_100078CF8(v25);
    swift_retain();
    StateValue.wrappedValue.getter();
    swift_release();
    sub_100200834((uint64_t)aBlock, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v7 = (id)v25;
  }
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  uint64_t v8 = sub_100200938(1, (uint64_t)aBlock, v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  char v9 = sub_100200CD0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  uint64_t v10 = aBlock;
  uint64_t v11 = (void *)v34;

  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  char v12 = sub_100090544(v11, (uint64_t)aBlock, v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_10005536C();
  uint64_t v24 = static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  unint64_t v14 = v32;
  *(void *)(v13 + 16) = v1;
  *(void *)(v13 + 24) = v14;
  *(void *)(v13 + 3sub_10004ACAC(3, 1, 2) = v8;
  *(unsigned char *)(v13 + 40) = (v9 & 1) == 0;
  *(unsigned char *)(v13 + 4sub_10004ACAC(2, 1, 1) = v12 & 1;
  unint64_t v15 = v25;
  *(void *)(v13 + 48) = v25;
  CGContextRef v37 = sub_100090E24;
  uint64_t v38 = v13;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v34 = 1107296256;
  CGFloat v35 = sub_100049AB4;
  id v36 = &unk_10048B878;
  uint64_t v16 = _Block_copy(&aBlock);
  sub_100078CF8(v15);
  swift_retain();
  sub_100078CF8(v14);
  uint64_t v17 = v8;
  swift_release();
  uint64_t v18 = v26;
  static DispatchQoS.unspecified.getter();
  Swift::String aBlock = (void **)_swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_100039BEC();
  uint64_t v19 = v29;
  uint64_t v20 = v31;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v21 = (void *)v24;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v20);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v28);
  unint64_t v22 = *(void *)(v2 + 136);
  *(void *)(v2 + 136) = v14;
  sub_100078CF8(v14);
  sub_10001F780(v22);
  sub_10001F780(v15);
}

void sub_10008F7A0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();

  sub_10008F84C(v7, v3, v4);
  unint64_t v5 = *(void *)(a2 + 136);
  sub_100078CF8(v5);
  sub_10008F310(v5);
  sub_10001F780(v5);
}

void sub_10008F84C(void *a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  id v7 = sub_100200938(1, v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (!v7) {
    sub_100091818(0);
  }
  uint64_t v8 = *(void *)(v3 + 64);
  char v9 = sub_100090544(a1, a2, a3);
  uint64_t v10 = *(unsigned char **)(v8 + qword_1004C7A48);
  if (v10)
  {
    int v11 = v10[OBJC_IVAR____TtC7Measure10EditButton_isInputEnabled];
    v10[OBJC_IVAR____TtC7Measure10EditButton_isInputEnabled] = v9 & 1;
    if ((v9 & 1) != v11 && v10[OBJC_IVAR____TtC7Measure10EditButton_editEnabled] == 1)
    {
      if (v9) {
        float v12 = 1.0;
      }
      else {
        float v12 = 0.5;
      }
      uint64_t v13 = v10;
      sub_10008E3D0(v12);
    }
  }
}

void sub_10008F9A0()
{
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  double v0 = 0.0;
  if (v1 & 1 | ((v2 & 1) == 0)) {
    double v0 = 1.0;
  }
  sub_1000903F4(v0);
}

void sub_10008FA2C()
{
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  if ((v2 & 1) == 0)
  {
    swift_retain();
    StateValue.wrappedValue.getter();
    swift_release();
    double v0 = 1.0;
    if (v1) {
      double v0 = 0.0;
    }
    sub_1000903F4(v0);
  }
}

uint64_t sub_10008FAB0(uint64_t a1)
{
  char v1 = *(void **)(a1 + 8);
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  sub_10008F84C(v1, v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_10008FB40()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v1 = *(void *)(v0 + 136);

  sub_10001F780(v1);
}

uint64_t sub_10008FBB0()
{
  uint64_t v0 = StateObserver.deinit();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10001F780(*(void *)(v0 + 136));
  return v0;
}

uint64_t sub_10008FC28()
{
  sub_10008FBB0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EditController()
{
  uint64_t result = qword_1004C78D8;
  if (!qword_1004C78D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10008FCA4()
{
  return swift_initClassMetadata2();
}

unsigned char *storeEnumTagSinglePayload for EditController.EditConditions(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    char *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_10004ACAC(2, 1, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10008FDE8);
      case 4:
        *(_DWORD *)(result + sub_10004ACAC(2, 1, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_10004ACAC(2, 1, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_10004ACAC(2, 1, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EditController.EditConditions()
{
  return &type metadata for EditController.EditConditions;
}

unint64_t sub_10008FE24()
{
  unint64_t result = qword_1004C7A30;
  if (!qword_1004C7A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C7A30);
  }
  return result;
}

unint64_t sub_10008FE78()
{
  return sub_1000A4FD8(4uLL);
}

unint64_t sub_10008FEA0()
{
  return sub_1000A4FD8(8uLL);
}

void sub_10008FEC8()
{
}

void sub_10008FEFC()
{
  uint64_t v1 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  __chkstk_darwin(v1);
  int v3 = (void **)((char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = *(void **)(v4 + qword_1004C7A68);
  if (v5) {
    [v5 setEnabled:0];
  }
  unsigned int v6 = *(void **)(v4 + qword_1004C7A70);
  if (v6) {
    [v6 setEnabled:0];
  }
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_10003BE0C((uint64_t)sub_100090C74, v7);
  swift_release_n();
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_1004F7FE8;
  if (qword_1004F7FE8)
  {
    uint64_t v9 = qword_1004F7FE8 + qword_1004CF758;
    swift_beginAccess();
    sub_100090C7C(v9, (uint64_t)v3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = *v3;
      id v11 = v8;
      id v12 = sub_1000FE9C0();

      sub_100079908(5, 0, 0, 1);
    }
    else
    {
      sub_100090CE0((uint64_t)v3);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000900E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005536C();
  uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_100090D3C;
  aBlock[5] = a1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_10048B7D8;
  id v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_100039BEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_10009034C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)*(id *)(Strong + 64);
    swift_release();
    uint64_t v2 = *(void **)&v1[qword_1004C7A68];
    if (v2) {
      [v2 setEnabled:1];
    }
    uint64_t v3 = *(void **)&v1[qword_1004C7A70];
    if (v3) {
      [v3 setEnabled:1];
    }
  }
}

void sub_1000903F4(double a1)
{
  [*(id *)(v1 + 64) alpha];
  if (v3 != a1)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v1;
    *(double *)(v4 + 24) = a1;
    id v5 = objc_allocWithZone((Class)UIViewPropertyAnimator);
    void v8[4] = sub_100090DBC;
    v8[5] = v4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    _OWORD v8[2] = sub_100049AB4;
    void v8[3] = &unk_10048B828;
    uint64_t v6 = _Block_copy(v8);
    swift_retain();
    swift_release();
    id v7 = [v5 initWithDuration:v6 dampingRatio:0.5 animations:0.6];
    _Block_release(v6);
    [v7 setInterruptible:0];
    [v7 startAnimation];
  }
}

unint64_t sub_100090544(void *a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(v3 + 144)) {
    return 0;
  }
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  if (v17 >> 62 == 2 || v17 >> 62 == 1)
  {
    sub_10001F780(v17);
    return 0;
  }
  sub_10001F780(v17);
  if (a1)
  {
    uint64_t v8 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD0);
    uint64_t v9 = a1;
    uint64_t v10 = v8();

    if (v10 != 4) {
      return 1;
    }
  }
  unint64_t result = sub_100201270(a2, a3);
  unint64_t v11 = result;
  if (!(result >> 62))
  {
    uint64_t v12 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v12) {
      goto LABEL_10;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_27;
    }
    goto LABEL_24;
  }
  unint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v12 = result;
  if (!result) {
    goto LABEL_23;
  }
LABEL_10:
  if (v12 >= 1)
  {
    for (uint64_t i = 0; i != v12; ++i)
    {
      if ((v11 & 0xC000000000000001) != 0) {
        uint64_t v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v14 = *(id *)(v11 + 8 * i + 32);
      }
      uint64_t v15 = v14;
      if ((*(uint64_t (**)(void))((swift_isaMask & *v14) + 0xD0))() == 6)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_27;
    }
LABEL_24:
    if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
    {
      uint64_t v16 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_26:
      swift_release();
      return v16 != 0;
    }
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

void sub_100090798(uint64_t a1, unint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6)
{
  sub_100091030(a2, a3 != 0, a4, a5);
  if (a6 == 0xC000000000000010)
  {
    if (qword_1004C29E0 != -1) {
      swift_once();
    }
    swift_retain();
    sub_100095CF4(7u);
    swift_release();
    swift_retain();
    swift_retain();
    Synchronized.wrappedValue.getter();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1000D4F9C(1, 2, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    Synchronized.wrappedValue.setter();
    swift_release();
    swift_release();
    swift_retain();
    swift_retain();
    Synchronized.wrappedValue.getter();
    char v9 = swift_isUniquelyReferenced_nonNull_native();
    sub_1000D4F9C(1, 1, v9);
    swift_bridgeObjectRelease();
    Synchronized.wrappedValue.setter();
    swift_release();
    swift_release();
  }
  if (a2 >> 62 == 3 && (a2 | 8) == 0xC000000000000018)
  {
    if (qword_1004C29E0 != -1) {
      swift_once();
    }
    swift_retain();
    sub_100095CF4(6u);
    swift_release();
    swift_retain();
    StateValue.wrappedValue.getter();
    swift_release();

    if (v14)
    {
      uint64_t v10 = *(void *)(*(uint64_t (**)(void))((swift_isaMask & *v14) + 0x2C0))();
      (*(void (**)(void))(v10 + 368))();
      swift_release();
      if (simd_float4x4.isAlmostHorizontal(marginInDegrees:)(10.0)
        && (unint64_t)(*(uint64_t (**)(void))((swift_isaMask & *v14) + 0x2F0))() < 3)
      {
        swift_retain();
        swift_retain();
        Synchronized.wrappedValue.getter();
        char v11 = swift_isUniquelyReferenced_nonNull_native();
        sub_1000D4F9C(1, 1, v11);
        swift_bridgeObjectRelease();
        Synchronized.wrappedValue.setter();
        swift_release();
        swift_release();
        swift_retain();
        swift_retain();
        Synchronized.wrappedValue.getter();
        char v12 = swift_isUniquelyReferenced_nonNull_native();
        sub_1000D4F9C(1, 2, v12);
        swift_bridgeObjectRelease();
        Synchronized.wrappedValue.setter();

        swift_release();
        swift_release();
      }
      else
      {
      }
    }
  }
}

void sub_100090BD8()
{
  *(unsigned char *)(v0 + 144) = 1;
}

void sub_100090BE4()
{
  *(unsigned char *)(v0 + 144) = 2;
}

void sub_100090BF0()
{
  *(unsigned char *)(v0 + 144) = 0;
}

void sub_100090BF8()
{
  *(unsigned char *)(v0 + 144) = 3;
}

uint64_t sub_100090C04@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 120);
  return swift_retain();
}

uint64_t sub_100090C20@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 120);
  return swift_retain();
}

uint64_t sub_100090C3C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100090C74()
{
  return sub_1000900E4(v0);
}

uint64_t sub_100090C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100090CE0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100090D3C()
{
}

uint64_t sub_100090D44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100090D54()
{
  return swift_release();
}

void sub_100090D5C(unint64_t *a1)
{
}

void sub_100090D64(uint64_t *a1)
{
  sub_10008F7A0(a1, v1);
}

void sub_100090D6C()
{
}

uint64_t sub_100090D74(uint64_t a1)
{
  return sub_10008FAB0(a1);
}

void sub_100090D7C()
{
}

uint64_t sub_100090D84()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_100090DBC()
{
  return [*(id *)(*(void *)(v0 + 16) + 64) setAlpha:*(double *)(v0 + 24)];
}

uint64_t sub_100090DD4()
{
  swift_release();
  sub_10001F780(*(void *)(v0 + 24));

  sub_10001F780(*(void *)(v0 + 48));

  return _swift_deallocObject(v0, 56, 7);
}

void sub_100090E24()
{
  sub_100090798(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(unsigned char *)(v0 + 41), *(void *)(v0 + 48));
}

uint64_t sub_100090E4C()
{
  return swift_release();
}

uint64_t sub_100090F28()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)(result + 80) + 200);
    uint64_t v3 = swift_retain();
    uint64_t v4 = v2(v3);
    swift_release();
    id v5 = *(void (**)(void (*)(), uint64_t))(*(void *)v4 + 280);
    swift_retain();
    v5(sub_10009384C, v1);
    swift_release();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_100091018()
{
  return sub_1000931DC((uint64_t)sub_10008FEA0);
}

void sub_100091030(unint64_t a1, char a2, char a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = qword_1004C7A48;
  char v11 = *(unsigned char **)(v4 + qword_1004C7A48);
  if (v11)
  {
    int v12 = v11[OBJC_IVAR____TtC7Measure10EditButton_isInputEnabled];
    v11[OBJC_IVAR____TtC7Measure10EditButton_isInputEnabled] = 1;
    if (v12 != 1 && v11[OBJC_IVAR____TtC7Measure10EditButton_editEnabled] == 1)
    {
      uint64_t v13 = v11;
      sub_10008E3D0(1.0);
    }
  }
  if ((a1 >> 62) - 1 >= 2)
  {
    if (a1 >> 62)
    {
      *((void *)&v25 + sub_10004ACAC(2, 1, 1) = a1;
      *(void *)&long long v25 = a1 + 0x4000000000000000;
      switch((unint64_t)(v25 >> 3))
      {
        case 1uLL:
          uint64_t v38 = *(unsigned char **)(v5 + qword_1004C7A58);
          if (v38)
          {
            uint64_t v39 = a3 & 1;
            if (v38[OBJC_IVAR____TtC7Measure12DeleteButton_isEnabled] != v39)
            {
              v38[OBJC_IVAR____TtC7Measure12DeleteButton_isEnabled] = a3 & 1;
              id v40 = *(void **)&v38[OBJC_IVAR____TtC7Measure12DeleteButton_deleteButton];
              id v41 = v38;
              [v40 setEnabled:v39];
              [v41 setUserInteractionEnabled:v39];
            }
          }
          sub_100091818(a2 & 1);
          NSString v42 = *(void **)(v5 + v10);
          if (!v42) {
            return;
          }
          [v42 setHidden:0];
          id v43 = *(unsigned char **)(v5 + v10);
          if (!v43) {
            return;
          }
          int v44 = v43[OBJC_IVAR____TtC7Measure10EditButton_editEnabled];
          v43[OBJC_IVAR____TtC7Measure10EditButton_editEnabled] = 1;
          if (v44 != 1)
          {
            double v45 = v43;
            sub_10008E3D0(1.0);
          }
          id v46 = *(unsigned char **)(v5 + v10);
          if (!v46) {
            return;
          }
          int v47 = v46[OBJC_IVAR____TtC7Measure10EditButton_isInputEnabled];
          v46[OBJC_IVAR____TtC7Measure10EditButton_isInputEnabled] = a4 & 1;
          if (v47 == (a4 & 1) || v46[OBJC_IVAR____TtC7Measure10EditButton_editEnabled] != 1) {
            return;
          }
          uint64_t v62 = v46;
          if ((a4 & 1) == 0) {
            goto LABEL_67;
          }
          float v48 = 1.0;
          break;
        case 2uLL:
          id v49 = *(unsigned char **)(v5 + qword_1004C7A58);
          if (v49 && (v49[OBJC_IVAR____TtC7Measure12DeleteButton_isEnabled] & 1) == 0)
          {
            v49[OBJC_IVAR____TtC7Measure12DeleteButton_isEnabled] = 1;
            double v50 = *(void **)&v49[OBJC_IVAR____TtC7Measure12DeleteButton_deleteButton];
            id v51 = v49;
            [v50 setEnabled:1];
            [v51 setUserInteractionEnabled:1];
          }
          char v24 = 1;
          goto LABEL_51;
        case 3uLL:
          sub_100091818(0);
          id v55 = *(unsigned char **)(v5 + qword_1004C7A58);
          if (v55 && v55[OBJC_IVAR____TtC7Measure12DeleteButton_isEnabled] == 1)
          {
            v55[OBJC_IVAR____TtC7Measure12DeleteButton_isEnabled] = 0;
            id v56 = *(void **)&v55[OBJC_IVAR____TtC7Measure12DeleteButton_deleteButton];
            long long v57 = v55;
            [v56 setEnabled:0];
            [v57 setUserInteractionEnabled:0];
          }
          id v58 = *(void **)(v5 + v10);
          if (v58)
          {
            [v58 setHidden:1];
            uint64_t v59 = *(unsigned char **)(v5 + v10);
            if (v59)
            {
              int v60 = v59[OBJC_IVAR____TtC7Measure10EditButton_editEnabled];
              v59[OBJC_IVAR____TtC7Measure10EditButton_editEnabled] = 0;
              if (v60 == 1) {
                goto LABEL_66;
              }
            }
          }
          return;
        default:
          uint64_t v26 = *(unsigned char **)(v5 + qword_1004C7A58);
          if (v26 && v26[OBJC_IVAR____TtC7Measure12DeleteButton_isEnabled] == 1)
          {
            v26[OBJC_IVAR____TtC7Measure12DeleteButton_isEnabled] = 0;
            uint64_t v27 = *(void **)&v26[OBJC_IVAR____TtC7Measure12DeleteButton_deleteButton];
            uint64_t v28 = v26;
            [v27 setEnabled:0];
            [v28 setUserInteractionEnabled:0];
          }
          sub_100091818(0);
          uint64_t v29 = *(void **)(v5 + v10);
          if (!v29) {
            return;
          }
          [v29 setHidden:0];
          uint64_t v30 = *(unsigned char **)(v5 + v10);
          if (!v30) {
            return;
          }
          int v31 = v30[OBJC_IVAR____TtC7Measure10EditButton_editEnabled];
          v30[OBJC_IVAR____TtC7Measure10EditButton_editEnabled] = 1;
          if (v31 != 1)
          {
            unint64_t v32 = v30;
            sub_10008E3D0(1.0);
          }
          uint64_t v33 = *(unsigned char **)(v5 + v10);
          if (!v33) {
            return;
          }
          int v34 = v33[OBJC_IVAR____TtC7Measure10EditButton_isInputEnabled];
          v33[OBJC_IVAR____TtC7Measure10EditButton_isInputEnabled] = a4 & 1;
          if (v34 != (a4 & 1) && v33[OBJC_IVAR____TtC7Measure10EditButton_editEnabled] == 1)
          {
            if (a4) {
              float v35 = 1.0;
            }
            else {
              float v35 = 0.5;
            }
            id v36 = v33;
            sub_10008E3D0(v35);
          }
          CGContextRef v37 = *(void **)(v5 + v10);
          if (!v37) {
            return;
          }
          uint64_t v62 = v37;
          sub_10008E07C();
          goto LABEL_69;
      }
    }
    else
    {
      uint64_t v21 = *(unsigned char **)(v5 + qword_1004C7A58);
      if (v21 && (v21[OBJC_IVAR____TtC7Measure12DeleteButton_isEnabled] & 1) == 0)
      {
        v21[OBJC_IVAR____TtC7Measure12DeleteButton_isEnabled] = 1;
        unint64_t v22 = *(void **)&v21[OBJC_IVAR____TtC7Measure12DeleteButton_deleteButton];
        uint64_t v23 = v21;
        [v22 setEnabled:1];
        [v23 setUserInteractionEnabled:1];
      }
      char v24 = a2 & 1;
LABEL_51:
      sub_100091818(v24);
      id v52 = *(void **)(v5 + v10);
      if (!v52) {
        return;
      }
      [v52 setHidden:0];
      id v53 = *(unsigned char **)(v5 + v10);
      if (!v53) {
        return;
      }
      char v54 = v53[OBJC_IVAR____TtC7Measure10EditButton_editEnabled];
      v53[OBJC_IVAR____TtC7Measure10EditButton_editEnabled] = 1;
      if (v54) {
        return;
      }
      uint64_t v62 = v53;
      float v48 = 1.0;
    }
  }
  else
  {
    uint64_t v14 = *(unsigned char **)(v5 + qword_1004C7A58);
    if (v14)
    {
      uint64_t v15 = a3 & 1;
      if (v14[OBJC_IVAR____TtC7Measure12DeleteButton_isEnabled] != v15)
      {
        v14[OBJC_IVAR____TtC7Measure12DeleteButton_isEnabled] = a3 & 1;
        uint64_t v16 = *(void **)&v14[OBJC_IVAR____TtC7Measure12DeleteButton_deleteButton];
        unint64_t v17 = v14;
        [v16 setEnabled:v15];
        [v17 setUserInteractionEnabled:v15];
      }
    }
    uint64_t v18 = *(unsigned char **)(v5 + qword_1004C7A50);
    if (v18 && v18[OBJC_IVAR____TtC7Measure10UndoButton_isEnabled] != (a2 & 1))
    {
      v18[OBJC_IVAR____TtC7Measure10UndoButton_isEnabled] = a2 & 1;
      uint64_t v19 = *(void **)&v18[OBJC_IVAR____TtC7Measure10UndoButton_undoButton];
      uint64_t v20 = v18;
      if (v19) {
        [v19 setEnabled:a2 & 1];
      }
      [v18 setUserInteractionEnabled:a2 & 1];
    }
    uint64_t v59 = *(unsigned char **)(v5 + v10);
    if (!v59) {
      return;
    }
    char v61 = v59[OBJC_IVAR____TtC7Measure10EditButton_isInputEnabled];
    v59[OBJC_IVAR____TtC7Measure10EditButton_isInputEnabled] = 0;
    if ((v61 & 1) == 0 || v59[OBJC_IVAR____TtC7Measure10EditButton_editEnabled] != 1) {
      return;
    }
LABEL_66:
    uint64_t v62 = v59;
LABEL_67:
    float v48 = 0.5;
  }
  sub_10008E3D0(v48);
LABEL_69:
}

void sub_1000916EC()
{
  uint64_t v1 = *(unsigned char **)(v0 + qword_1004C7A50);
  if (v1 && v1[OBJC_IVAR____TtC7Measure10UndoButton_isEnabled] == 1)
  {
    v1[OBJC_IVAR____TtC7Measure10UndoButton_isEnabled] = 0;
    uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC7Measure10UndoButton_undoButton];
    uint64_t v3 = v1;
    if (v2) {
      [v2 setEnabled:0];
    }
    [v1 setUserInteractionEnabled:0];
  }
  uint64_t v4 = *(unsigned char **)(v0 + qword_1004C7A58);
  if (v4 && (v4[OBJC_IVAR____TtC7Measure12DeleteButton_isEnabled] & 1) != 0)
  {
    v4[OBJC_IVAR____TtC7Measure12DeleteButton_isEnabled] = 0;
    uint64_t v5 = *(void **)&v4[OBJC_IVAR____TtC7Measure12DeleteButton_deleteButton];
    uint64_t v6 = v4;
    [v5 setEnabled:0];
    [v6 setUserInteractionEnabled:0];
  }
}

void sub_100091818(char a1)
{
  uint64_t v3 = *(unsigned char **)(v1 + qword_1004C7A50);
  if (v3 && v3[OBJC_IVAR____TtC7Measure10UndoButton_isEnabled] != (a1 & 1))
  {
    v3[OBJC_IVAR____TtC7Measure10UndoButton_isEnabled] = a1 & 1;
    uint64_t v4 = *(void **)&v3[OBJC_IVAR____TtC7Measure10UndoButton_undoButton];
    id v6 = v3;
    uint64_t v5 = v3;
    if (v4) {
      [v4 setEnabled:a1 & 1];
    }
    [v6 setUserInteractionEnabled:a1 & 1];
  }
}

uint64_t sub_1000918DC(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = v3;
  if (*((unsigned char *)a2 + qword_1004C7A78) == 1)
  {
    uint64_t v5 = *(void (**)(uint64_t))((swift_isaMask & *a2) + 0x2A0);
    id v6 = a2;
    v5(v3);
    return swift_release();
  }
  else
  {
    uint64_t v8 = self;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = sub_10009388C;
    *(void *)(v9 + 24) = v4;
    _DWORD v13[4] = sub_100039980;
    v13[5] = v9;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_1000FA194;
    v13[3] = &unk_10048B920;
    uint64_t v10 = _Block_copy(v13);
    char v11 = a2;
    swift_retain();
    swift_retain();
    swift_release();
    [v8 performWithoutAnimation:v10];
    _Block_release(v10);
    isEscapingClosureAtFileLocatiouint64_t n = swift_isEscapingClosureAtFileLocation();
    swift_release_n();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100091AD8()
{
  swift_retain();
  StateValue.wrappedValue.getter();
  uint64_t result = swift_release();
  if (v6 == 2)
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v1 = result;
      uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)(result + 80) + 200);
      uint64_t v3 = swift_retain();
      uint64_t v4 = v2(v3);
      swift_release();
      uint64_t v5 = *(void (**)(void (*)(), uint64_t))(*(void *)v4 + 280);
      swift_retain();
      v5(sub_10009384C, v1);
      swift_release();
      return swift_release_n();
    }
  }
  return result;
}

uint64_t sub_100091C04(uint64_t result)
{
  if (*(unsigned char *)result == 3)
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v1 = result;
      uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)(result + 80) + 200);
      uint64_t v3 = swift_retain();
      uint64_t v4 = v2(v3);
      swift_release();
      uint64_t v5 = *(void (**)(void (*)(), uint64_t))(*(void *)v4 + 280);
      swift_retain();
      v5(sub_10009384C, v1);
      swift_release();
      return swift_release_n();
    }
  }
  return result;
}

void sub_100091D00()
{
}

void sub_100091D64()
{
}

void sub_100091DC8()
{
}

void sub_100091E2C()
{
}

void sub_100091E90()
{
}

void sub_100091EF4()
{
}

void sub_100091F58()
{
}

void sub_100091FBC()
{
}

void sub_100092020()
{
}

void sub_100092084()
{
}

uint64_t sub_1000920E8(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  *(void *)&v4[qword_1004C7A40 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v4[qword_1004C7A48] = 0;
  *(void *)&v4[qword_1004C7A50] = 0;
  *(void *)&v4[qword_1004C7A58] = 0;
  *(void *)&v4[qword_1004C7A60] = 0;
  *(void *)&v4[qword_1004C7A68] = 0;
  *(void *)&v4[qword_1004C7A70] = 0;
  v4[qword_1004C7A78] = 0;
  *(void *)&v4[qword_1004C7A80] = 0;
  uint64_t v10 = qword_1004C7A88;
  uint64_t v11 = sub_100012894((uint64_t *)&unk_1004C7F20);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v13 = qword_1004C2E30;
  uint64_t v14 = v5;
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_1004F8630;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 272);
  swift_retain();
  *(void *)&v5[v10] = v16(KeyPath, v15);
  uint64_t v17 = qword_1004C7A90;
  uint64_t v18 = sub_100012894(&qword_1004C6AA0);
  uint64_t v19 = swift_getKeyPath();
  uint64_t v20 = qword_1004F8630;
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 272);
  swift_retain();
  *(void *)&v14[v17] = v21(v19, v20);
  uint64_t v22 = qword_1004C7A98;
  uint64_t v23 = sub_100012894((uint64_t *)&unk_1004C7F30);
  uint64_t v24 = swift_getKeyPath();
  uint64_t v25 = qword_1004F8630;
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 272);
  swift_retain();
  *(void *)&v14[v22] = v26(v24, v25);
  uint64_t v27 = qword_1004C7AA0;
  *(void *)&v14[v27] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v28 = qword_1004C7AA8;
  type metadata accessor for TouchPassThroughView();
  ObjCClassFromMetauint64_t data = (objc_class *)swift_getObjCClassFromMetadata();
  *(void *)&v14[v28] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v30 = qword_1004C7AB0;
  *(void *)&v14[v30] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  int v31 = (double *)&v14[qword_1004C7AB8];
  *int v31 = a1;
  v31[1] = a2;
  void v31[2] = a3;
  _OWORD v31[3] = a4;

  v44.receiver = v14;
  v44.super_class = (Class)type metadata accessor for EditView();
  id v32 = [super initWithFrame:a1, a2, a3, a4];
  id v33 = objc_allocWithZone((Class)UIAccessibilityHUDGestureManager);
  int v34 = (char *)v32;
  id v35 = [v33 initWithView:v34 delegate:v34];
  id v36 = *(void **)&v34[qword_1004C7A80];
  *(void *)&v34[qword_1004C7A80] = v35;

  uint64_t v37 = self;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v34;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = sub_100094988;
  *(void *)(v39 + 24) = v38;
  v43[4] = sub_1000949B8;
  v43[5] = v39;
  v43[0] = _NSConcreteStackBlock;
  v43[1] = 1107296256;
  v43[2] = sub_1000FA194;
  v43[3] = &unk_10048BAB0;
  id v40 = _Block_copy(v43);
  id v41 = v34;
  swift_retain();
  swift_release();
  [(id)v37 performWithoutAnimation:v40];

  _Block_release(v40);
  LOBYTE(v37) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v37 & 1) == 0) {
    return (uint64_t)v41;
  }
  __break(1u);
  return result;
}

uint64_t sub_100092524(void *a1)
{
  return (*(uint64_t (**)())((swift_isaMask & *a1) + 0x2A0))();
}

uint64_t sub_1000925C0(double a1, double a2, double a3, double a4)
{
  return sub_1000920E8(a1, a2, a3, a4);
}

void sub_1000925E4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1000946FC();
}

void sub_10009260C()
{
  uint64_t v1 = (unsigned char *)qword_1004C7A78;
  if ((*((unsigned char *)v0 + qword_1004C7A78) & 1) == 0)
  {
    uint64_t v2 = qword_1004C7AA0;
    id v3 = *(id *)((char *)v0 + qword_1004C7AA0);
    [v0 bounds];
    [v3 setFrame:];

    uint64_t v4 = *(void *)((char *)v0 + v2);
    isEscapingClosureAtFileLocatiouint64_t n = (uint64_t)&off_1004B7000;
    [v0 addSubview:v4];
    CGFloat m22 = *(double *)&qword_1004C7AA8;
    id v7 = *(id *)((char *)v0 + qword_1004C7AA8);
    [v0 bounds];
    [v7 setFrame:];

    [v0 addSubview:*(void *)((char *)v0 + *(void *)&m22)];
    uint64_t v8 = qword_1004C7AB0;
    id v9 = *(id *)((char *)v0 + qword_1004C7AB0);
    [v0 bounds];
    [v9 setFrame:];

    id v10 = [v0 addSubview:*(void *)((char *)v0 + v8)];
    uint64_t v11 = (*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x2D0))(v10);
    uint64_t v12 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x2D8))(v11);
    uint64_t v13 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x2F8))(v12);
    (*(void (**)(uint64_t))((swift_isaMask & *v0) + 0x2F0))(v13);
    uint64_t v14 = *(void **)((char *)v0 + qword_1004C7A48);
    if (v14)
    {
      uint64_t v15 = *(void **)((char *)v0 + *(void *)&m22);
      uint64_t v16 = v14;
      [v15 addSubview:v16];
      *(void *)&v16[OBJC_IVAR____TtC7Measure10EditButton_delegate + 8] = &off_10048B8C0;
      swift_unknownObjectWeakAssign();
    }
    uint64_t v17 = *(void **)((char *)v0 + qword_1004C7A50);
    if (v17)
    {
      uint64_t v18 = *(void **)((char *)v0 + *(void *)&m22);
      uint64_t v19 = v17;
      [v18 addSubview:v19];
      *(void *)&v19[OBJC_IVAR____TtC7Measure10UndoButton_delegate + 8] = &off_10048B8B0;
      swift_unknownObjectWeakAssign();
    }
    uint64_t v20 = qword_1004C7A58;
    uint64_t v21 = *(void **)((char *)v0 + qword_1004C7A58);
    if (v21)
    {
      uint64_t v22 = *(void **)((char *)v0 + *(void *)&m22);
      uint64_t v23 = v21;
      [v22 addSubview:v23];
      *(void *)&v23[OBJC_IVAR____TtC7Measure12DeleteButton_delegate + 8] = &off_10048B8A0;
      swift_unknownObjectWeakAssign();
    }
    id v24 = [self jasperAvailable];
    if (v24)
    {
      (*(void (**)(void))((swift_isaMask & *v0) + 0x300))();
      if (!*(void *)((char *)v0 + qword_1004C7A60))
      {
        __break(1u);
        return;
      }
      id v24 = [*(id *)((char *)v0 + *(void *)&m22) addSubview:];
    }
    (*(void (**)(id))((swift_isaMask & *v0) + 0x2E0))(v24);
    uint64_t v25 = *(void **)((char *)v0 + qword_1004C7A68);
    if (!v25) {
      goto LABEL_16;
    }
    id v26 = v25;
    [v0 frame];
    [v26 setFrame:];

    [v26 setExclusiveTouch:1];
    [v26 addTarget:v0 action:"capture" forControlEvents:64];
    uint64_t v27 = &off_1004B7000;
    id v28 = [v26 layer];
    CGSize.init(_:_:)();
    [v28 setShadowOffset:];

    id v29 = [v26 layer];
    [v29 setShadowRadius:10.0];

    id v30 = [v26 layer];
    LODWORD(v3sub_10004ACAC(2, 1, 1) = 1036831949;
    [v30 setShadowOpacity:v31];

    uint64_t v32 = qword_1004C2E90;
    id v33 = v26;
    if (v32 != -1) {
      goto LABEL_23;
    }
    while (1)
    {
      [v33 setTintColor:qword_1004F8670];

      [*(id *)((char *)v0 + *(void *)&m22) *(SEL *)(isEscapingClosureAtFileLocation + 1952) v33];
      id v34 = [v33 sizeToFit];
      CGFloat v35 = (*(double (**)(id))((swift_isaMask & *v0) + 0x2A8))(v34);
      CGFloat v37 = v36;
      id v38 = [v33 (SEL)v27[298]];
      CATransform3DMakeTranslation(&v55, v35, v37, 0.0);
      [v38 setTransform:&v55];

      [v33 setAdjustsImageWhenDisabled:1];
      uint64_t v39 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v40 = objc_allocWithZone((Class)AVCaptureEventInteraction);
      *(void *)&v55.m21 = sub_1000946F4;
      *(void *)&v55.CGFloat m22 = v39;
      *(void *)&v55.m11 = _NSConcreteStackBlock;
      *(void *)&v55.m12 = 1107296256;
      *(void *)&v55.m13 = sub_100058CEC;
      *(void *)&v55.m14 = &unk_10048BA38;
      id v41 = _Block_copy(&v55);
      swift_retain();
      id v42 = [v40 initWithEventHandler:v41];
      _Block_release(v41);
      swift_release();
      swift_release();
      uint64_t v43 = qword_1004C7A70;
      objc_super v44 = *(void **)((char *)v0 + qword_1004C7A70);
      *(void *)((char *)v0 + qword_1004C7A70) = v42;

      double v45 = *(void **)((char *)v0 + v43);
      if (v45)
      {
        id v46 = *(void **)((char *)v0 + *(void *)&m22);
        id v47 = v45;
        id v48 = v46;
        [v48 addInteraction:v47];
      }
LABEL_16:
      id v49 = *(unsigned char **)((char *)v0 + v20);
      if (v49)
      {
        if (v49[OBJC_IVAR____TtC7Measure12DeleteButton_isEnabled] == 1)
        {
          v49[OBJC_IVAR____TtC7Measure12DeleteButton_isEnabled] = 0;
          double v50 = *(void **)&v49[OBJC_IVAR____TtC7Measure12DeleteButton_deleteButton];
          id v51 = v49;
          [v50 setEnabled:0];
          [v51 setUserInteractionEnabled:0];
        }
      }
      sub_100091818(0);
      v1[(void)v0] = 1;
      id v52 = self;
      id v33 = (void *)swift_allocObject();
      v33[2] = v0;
      uint64_t v53 = swift_allocObject();
      *(void *)(v53 + 16) = sub_1000946A4;
      *(void *)(v53 + 24) = v33;
      *(void *)&v55.m21 = sub_1000949B8;
      *(void *)&v55.CGFloat m22 = v53;
      *(void *)&v55.m11 = _NSConcreteStackBlock;
      *(void *)&v55.m12 = 1107296256;
      *(void *)&v55.m13 = sub_1000FA194;
      *(void *)&v55.m14 = &unk_10048B9E8;
      uint64_t v1 = _Block_copy(&v55);
      CGFloat m22 = v55.m22;
      uint64_t v27 = v0;
      swift_retain();
      swift_release();
      [v52 performWithoutAnimation:v1];
      _Block_release(v1);
      isEscapingClosureAtFileLocatiouint64_t n = swift_isEscapingClosureAtFileLocation();
      uint64_t v54 = swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0) {
        break;
      }
      __break(1u);
LABEL_23:
      swift_once();
    }
    (*(void (**)(uint64_t))((swift_isaMask & (unint64_t)*v27) + 0x2E8))(v54);
    swift_release();
  }
}

void sub_100092F1C(void *a1)
{
  id v1 = [a1 phase];
  if (v1 == (id)2) {
    goto LABEL_7;
  }
  if (v1 == (id)1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v10 = (void *)Strong;
      uint64_t v11 = *(void **)(Strong + qword_1004C7A68);
      id v12 = v11;

      if (v11)
      {
        [v12 setHighlighted:0];
      }
    }
    swift_beginAccess();
    uint64_t v13 = swift_unknownObjectWeakLoadStrong();
    if (v13)
    {
      id v5 = (id)v13;
      if (!swift_unknownObjectWeakLoadStrong()) {
        goto LABEL_10;
      }
      sub_10008FEFC();

      swift_unknownObjectRelease();
    }
    return;
  }
  if (v1)
  {
LABEL_7:
    swift_beginAccess();
    uint64_t v6 = swift_unknownObjectWeakLoadStrong();
    if (v6)
    {
      id v7 = (void *)v6;
      uint64_t v8 = *(void **)(v6 + qword_1004C7A68);
      id v5 = v8;

      if (v8)
      {
        [v5 setHighlighted:0];
        goto LABEL_10;
      }
    }
  }
  else
  {
    swift_beginAccess();
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    if (v2)
    {
      id v3 = (void *)v2;
      uint64_t v4 = *(void **)(v2 + qword_1004C7A68);
      id v5 = v4;

      if (v4)
      {
        [v5 setHighlighted:1];
LABEL_10:
      }
    }
  }
}

uint64_t sub_1000930B8(void *a1)
{
  return (*(uint64_t (**)())((swift_isaMask & *a1) + 0x2A0))();
}

void sub_100093194(void *a1)
{
  id v1 = a1;
  sub_10009260C();
}

uint64_t sub_1000931DC(uint64_t a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v3 = *(uint64_t (**)(uint64_t))(**(void **)(result + 80) + 200);
    uint64_t v4 = swift_retain();
    uint64_t v5 = v3(v4);
    swift_release();
    (*(void (**)(uint64_t, void))(*(void *)v5 + 280))(a1, 0);
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1000932D4(void *a1)
{
  id v1 = a1;
  sub_1000931DC((uint64_t)sub_10008FE78);
}

uint64_t sub_100093334(void *a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v3 = a1;
    sub_10008FEFC();

    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_10009339C(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_100093914();
  id v7 = v6;

  return v7;
}

id sub_100093410(void *a1, uint64_t a2)
{
  id result = [a1 setHighlighted:0];
  uint64_t v5 = qword_1004C7A48;
  if (*(void *)(a2 + qword_1004C7A48))
  {
    id result = [a1 isDescendantOfView:];
    if (result)
    {
      uint64_t v6 = *(void *)(a2 + v5);
      if (v6) {
        *(unsigned char *)(v6 + OBJC_IVAR____TtC7Measure10EditButton_isShowingAccessibilityHUD) = 0;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10009348C(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v8 = a5;
  id v9 = a1;
  sub_1000941D4(a2, a3);
}

uint64_t sub_100093504()
{
  return 0;
}

void sub_10009350C()
{
  sub_10001FE1C(v0 + qword_1004C7A40);

  swift_release();
  swift_release();
  swift_release();

  id v1 = *(void **)(v0 + qword_1004C7AB0);
}

id sub_10009360C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EditView();
  return [super dealloc];
}

void sub_100093644(uint64_t a1)
{
  sub_10001FE1C(a1 + qword_1004C7A40);

  swift_release();
  swift_release();
  swift_release();

  objc_super v2 = *(void **)(a1 + qword_1004C7AB0);
}

uint64_t type metadata accessor for EditView()
{
  uint64_t result = qword_1004C7B48;
  if (!qword_1004C7B48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10009379C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10009382C()
{
  return type metadata accessor for EditView();
}

id sub_100093834()
{
  return [v0 didTapEditButton];
}

void sub_10009384C()
{
}

uint64_t sub_100093854()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009388C()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **(void **)(v0 + 16)) + 0x2A0))(*(void *)(v0 + 24));
}

uint64_t sub_1000938EC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000938FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10009390C()
{
  return swift_release();
}

void sub_100093914()
{
  id v1 = v0;
  id v2 = [v0 hitTest:0];
  if (!v2) {
    return;
  }
  id v3 = v2;
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (!v4)
  {

    return;
  }
  uint64_t v5 = (void *)v4;
  self;
  object = (void *)swift_dynamicCastObjCClass();
  if (object)
  {
    id v7 = v3;
    id v8 = [object imageView];
    id v9 = [v8 image];

    id v10 = [object titleForState:0];
    if (v10)
    {
      uint64_t v11 = v10;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      object = v12;
    }
    else
    {

      object = 0;
    }
  }
  else
  {
    id v9 = 0;
  }
  if (!*(void *)&v1[qword_1004C7A50])
  {
    swift_bridgeObjectRelease();

    __break(1u);
LABEL_66:
    swift_bridgeObjectRelease();

    __break(1u);
    goto LABEL_67;
  }
  if (objc_msgSend(v5, "isDescendantOfView:"))
  {
    swift_bridgeObjectRelease();
    id v13 = [self mainBundle];
    unint64_t v72 = 0xE000000000000000;
    unint64_t v14 = 0x80000001004236B0;
    unint64_t v15 = 0xD00000000000001FLL;
LABEL_20:
    v21._uint64_t countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    uint64_t v22 = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v15, (Swift::String_optional)0, (NSBundle)v13, v21, *(Swift::String *)(&v72 + -8))._object;

    goto LABEL_21;
  }
  uint64_t v16 = *(void **)&v1[qword_1004C7A58];
  if (v16)
  {
    id v17 = v16;
    if ([v5 isDescendantOfView:v17])
    {
      swift_bridgeObjectRelease();
      id v18 = [self mainBundle];
      v19._uint64_t countAndFlagsBits = 0xD000000000000012;
      v73._object = (void *)0xE000000000000000;
      v19._object = (void *)0x8000000100423690;
      v20._uint64_t countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      v73._uint64_t countAndFlagsBits = 0;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v73)._object;

      goto LABEL_21;
    }
  }
  if (!*(void *)&v1[qword_1004C7A68]) {
    goto LABEL_66;
  }
  if (objc_msgSend(v5, "isDescendantOfView:"))
  {
    swift_bridgeObjectRelease();
    id v13 = [self mainBundle];
    unint64_t v15 = 0xD000000000000022;
    unint64_t v72 = 0xE000000000000000;
    unint64_t v14 = 0x8000000100423660;
    goto LABEL_20;
  }
  uint64_t v40 = qword_1004C7A48;
  if (!*(void *)&v1[qword_1004C7A48])
  {
LABEL_67:
    swift_bridgeObjectRelease();

    __break(1u);
    return;
  }
  if (objc_msgSend(v5, "isDescendantOfView:"))
  {
    swift_bridgeObjectRelease();
    id v41 = [self mainBundle];
    v74._object = (void *)0xE000000000000000;
    v42._object = (void *)0x8000000100423640;
    v42._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
    v43._uint64_t countAndFlagsBits = 0;
    v43._object = (void *)0xE000000000000000;
    v74._uint64_t countAndFlagsBits = 0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, (Swift::String_optional)0, (NSBundle)v41, v43, v74)._object;

    uint64_t v44 = *(void *)&v1[v40];
    if (v44) {
      *(unsigned char *)(v44 + OBJC_IVAR____TtC7Measure10EditButton_isShowingAccessibilityHUD) = 1;
    }
  }
LABEL_21:
  double left = UIEdgeInsetsZero.left;
  bottoCGAffineTransform m = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  if (v9)
  {
    id v26 = v9;
    id v27 = [v26 CGImage];
    if (v27)
    {
      id v28 = v27;
      id v29 = self;
      id v30 = [v29 sharedApplication];
      id v31 = [v30 preferredContentSizeCategory];

      LOBYTE(v30) = UIContentSizeCategory.isAccessibilityCategory.getter();
      double v32 = 1.0;
      if ((v30 & 1) == 0)
      {
LABEL_39:
        id v47 = v28;
        [v26 scale];
        id v49 = [objc_allocWithZone((Class)UIImage) initWithCGImage:v47 scale:0 orientation:v32 * v48];

        id v50 = [v49 imageWithRenderingMode:2];
        id v51 = v50;
        if (object)
        {
          NSString v52 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        else
        {
          NSString v52 = 0;
        }
        [objc_allocWithZone((Class)UIAccessibilityHUDItem) initWithTitle:v52 image:v50 imageInsets:UIEdgeInsetsZero.top, left, bottom, right];

        return;
      }
      id v33 = [v29 sharedApplication];
      id v34 = [v33 preferredContentSizeCategory];

      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v37 = v36;
      if (v35 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v37 == v38)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v45 & 1) == 0)
        {
          uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v55 = v54;
          if (v53 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v55 == v56)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v57 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v57 & 1) == 0)
            {
              uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v60 = v59;
              if (v58 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v60 == v61)
              {
                swift_bridgeObjectRelease_n();
              }
              else
              {
                char v62 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v62 & 1) == 0)
                {
                  uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  uint64_t v65 = v64;
                  if (v63 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v65 == v66)
                  {
                    swift_bridgeObjectRelease_n();
                  }
                  else
                  {
                    char v67 = _stringCompareWithSmolCheck(_:_:expecting:)();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v67 & 1) == 0)
                    {
                      uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                      uint64_t v70 = v69;
                      if (v68 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v70 == v71)
                      {
                        double v32 = 0.7;
                      }
                      else if (_stringCompareWithSmolCheck(_:_:expecting:)())
                      {
                        double v32 = 0.7;
                      }
                      else
                      {
                        double v32 = 1.0;
                      }

                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      goto LABEL_39;
                    }
                  }

                  *(double *)&uint64_t v46 = 0.6;
                  goto LABEL_38;
                }
              }

              double v32 = 0.5;
              goto LABEL_39;
            }
          }

          double v32 = 0.4;
          goto LABEL_39;
        }
      }

      *(double *)&uint64_t v46 = 0.3;
LABEL_38:
      double v32 = *(double *)&v46;
      goto LABEL_39;
    }
  }
  if (object)
  {
    NSString v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v39 = 0;
  }
  [objc_allocWithZone((Class)UIAccessibilityHUDItem) initWithTitle:v39 image:v9 imageInsets:UIEdgeInsetsZero.top, left, bottom, right];
}

void sub_1000941D4(double a1, double a2)
{
  id v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v33 = *(void *)(v10 - 8);
  uint64_t v34 = v10;
  __chkstk_darwin(v10);
  id v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchTime();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  id v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  Swift::String v19 = (char *)&v30 - v18;
  Swift::String v20 = *(void **)&v2[qword_1004C7A48];
  if (v20)
  {
    id v21 = v20;
    sub_10008E07C();
  }
  id v35 = [v3 hitTest:0 withEvent:a1, a2];
  if (v35)
  {
    uint64_t v32 = v7;
    self;
    uint64_t v22 = (void *)swift_dynamicCastObjCClass();
    if (v22)
    {
      uint64_t v23 = v22;
      [v22 setHighlighted:1];
      [v23 sendActionsForControlEvents:64];
      sub_10005536C();
      uint64_t v30 = static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)();
      id v31 = *(void (**)(char *, uint64_t))(v14 + 8);
      v31(v17, v13);
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v23;
      *(void *)(v24 + 24) = v3;
      aBlock[4] = sub_100094664;
      aBlock[5] = v24;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100049AB4;
      aBlock[3] = &unk_10048B970;
      uint64_t v25 = _Block_copy(aBlock);
      id v26 = v35;
      id v27 = v3;
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_100039B94();
      sub_100012894((uint64_t *)&unk_1004C68E0);
      sub_100039BEC();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      id v28 = (void *)v30;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v25);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v6);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v34);
      v31(v19, v13);
    }
    else
    {
      id v29 = v35;
    }
  }
}

uint64_t sub_100094624()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_100094664()
{
  return sub_100093410(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10009466C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000946A4()
{
  return sub_1000930B8(*(void **)(v0 + 16));
}

uint64_t sub_1000946AC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000946BC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000946F4(void *a1)
{
}

void sub_1000946FC()
{
  id v1 = v0;
  *(void *)&v0[qword_1004C7A40 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[qword_1004C7A48] = 0;
  *(void *)&v0[qword_1004C7A50] = 0;
  *(void *)&v0[qword_1004C7A58] = 0;
  *(void *)&v0[qword_1004C7A60] = 0;
  *(void *)&v0[qword_1004C7A68] = 0;
  *(void *)&v0[qword_1004C7A70] = 0;
  v0[qword_1004C7A78] = 0;
  *(void *)&v0[qword_1004C7A80] = 0;
  uint64_t v2 = qword_1004C7A88;
  uint64_t v3 = sub_100012894((uint64_t *)&unk_1004C7F20);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1004F8630;
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 272);
  swift_retain();
  *(void *)&v1[v2] = v6(KeyPath, v5);
  uint64_t v7 = qword_1004C7A90;
  uint64_t v8 = sub_100012894(&qword_1004C6AA0);
  uint64_t v9 = swift_getKeyPath();
  uint64_t v10 = qword_1004F8630;
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 272);
  swift_retain();
  *(void *)&v1[v7] = v11(v9, v10);
  uint64_t v12 = qword_1004C7A98;
  uint64_t v13 = sub_100012894((uint64_t *)&unk_1004C7F30);
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = qword_1004F8630;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 272);
  swift_retain();
  *(void *)&v1[v12] = v16(v14, v15);
  uint64_t v17 = qword_1004C7AA0;
  *(void *)&v1[v17] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v18 = qword_1004C7AA8;
  type metadata accessor for TouchPassThroughView();
  ObjCClassFromMetauint64_t data = (objc_class *)swift_getObjCClassFromMetadata();
  *(void *)&v1[v18] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v20 = qword_1004C7AB0;
  *(void *)&v1[v20] = [objc_allocWithZone(ObjCClassFromMetadata) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100094988()
{
  return sub_100092524(*(void **)(v0 + 16));
}

uint64_t sub_100094990()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000949A0(uint64_t *a1)
{
  return sub_1000918DC(a1, *(void **)(v1 + 16));
}

uint64_t sub_1000949A8()
{
  return sub_100091AD8();
}

uint64_t sub_1000949B0(uint64_t result)
{
  return sub_100091C04(result);
}

uint64_t sub_1000949E0(char a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v16 = (uint64_t *)&v7[OBJC_IVAR____TtC7Measure13HistoryButton_tapHandler];
  uint64_t *v16 = 0;
  v16[1] = 0;
  *(void *)&v7[OBJC_IVAR____TtC7Measure13HistoryButton_button] = 0;
  v7[OBJC_IVAR____TtC7Measure13HistoryButton_controlType] = 0;
  uint64_t v17 = *v16;
  uint64_t *v16 = a2;
  v16[1] = a3;
  swift_retain();
  sub_100028914(v17);
  v25.receiver = v7;
  v25.super_class = ObjectType;
  id v18 = [super initWithFrame:a4, a5, a6, a7];
  Swift::String v19 = v18;
  if (a1 == 1)
  {
    id v20 = v18;
    sub_100094E68();
LABEL_5:
    swift_getMetatypeMetadata();
    id v22 = v19;
    String.init<A>(describing:)();
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v22 setAccessibilityIdentifier:v23];

    swift_release();
    return (uint64_t)v22;
  }
  if (a1 == 2)
  {
    id v21 = v18;
    sub_100094BA0();
    goto LABEL_5;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100094BA0()
{
  uint64_t v1 = v0;
  id v2 = sub_1000957AC();
  if (v2)
  {
    uint64_t v3 = v2;
    id v25 = [v2 imageWithRenderingMode:2];

    id v4 = [objc_allocWithZone((Class)ASVRoundedButton) initWithImage:v25 buttonStyle:0 textStyle:0 controlStyle:1];
    uint64_t v5 = OBJC_IVAR____TtC7Measure13HistoryButton_button;
    uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC7Measure13HistoryButton_button];
    *(void *)&v1[OBJC_IVAR____TtC7Measure13HistoryButton_button] = v4;

    uint64_t v7 = *(void **)&v1[v5];
    if (v7)
    {
      self;
      uint64_t v8 = swift_dynamicCastObjCClass();
      if (v8)
      {
        uint64_t v9 = (void *)v8;
        uint64_t v10 = qword_1004C31B8;
        id v11 = v7;
        if (v10 != -1) {
          swift_once();
        }
        uint64_t v12 = (void *)qword_1004F89F0;
        uint64_t v13 = *(void **)algn_1004F89F8;
        if (byte_1004F8A00)
        {
          char v14 = byte_1004F8A10;
          uint64_t v15 = qword_1004F8A08;
          char v16 = byte_1004D2600;
          id v17 = (id)qword_1004F89F0;
          id v18 = sub_100081B28(v16, v15, v14);
          sub_1000286C0(v12, v13, 1);
        }
        else
        {
          if (byte_1004D2600) {
            id v19 = *(id *)algn_1004F89F8;
          }
          else {
            id v19 = (id)qword_1004F89F0;
          }
          id v18 = v19;
        }
        [v9 setTintColor:v18];

        [v9 addTarget:v1 action:"showHistoryFrom:" forControlEvents:64];
        [v1 addSubview:v9];
        id v20 = [v9 widthAnchor];
        id v21 = [v20 constraintEqualToConstant:80.0];

        [v21 setActive:1];
        id v22 = [v9 heightAnchor];
        id v23 = [v22 constraintEqualToConstant:47.0];

        [v23 setActive:1];
        sub_100095030();
        sub_10009518C();
        uint64_t v24 = *(void **)&v1[v5];
        if (v24) {
          [v24 setEnabled:0];
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100094E68()
{
  id v1 = [objc_allocWithZone((Class)UIPointerInteraction) initWithDelegate:v0];
  [v0 addInteraction:v1];
  [v0 bounds];
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  CGSize.init(_:_:)();
  uint64_t v10 = (objc_class *)type metadata accessor for BlurredButton();
  v21.receiver = objc_allocWithZone(v10);
  v21.super_class = v10;
  id v11 = UIFontTextStyleSubheadline;
  id v12 = [super initWithFrame:v3, v5, v7, v9];
  [v12 bounds];
  sub_100043F08((uint64_t)v12, v13, v14, v15, v16, 0x6C75622E7473696CLL, 0xEB0000000074656CLL, (uint64_t)v11, 0);

  uint64_t v17 = OBJC_IVAR____TtC7Measure13HistoryButton_button;
  id v18 = *(void **)&v0[OBJC_IVAR____TtC7Measure13HistoryButton_button];
  *(void *)&v0[OBJC_IVAR____TtC7Measure13HistoryButton_button] = v12;

  if (!*(void *)&v0[v17])
  {
    __break(1u);
    goto LABEL_7;
  }
  [v0 addSubview:];
  id v19 = *(void **)&v0[v17];
  if (!v19)
  {
LABEL_7:
    __break(1u);
    return;
  }
  [v19 addTarget:v0 action:"showHistoryFrom:" forControlEvents:64];
  id v20 = *(void **)&v0[v17];
  if (v20) {
    [v20 setEnabled:0];
  }
}

void sub_100095030()
{
  id v1 = [self defaultCenter];
  if (qword_1004C3240 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1004F8AB0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  uint64_t v7[4] = sub_10009592C;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  uint64_t v7[2] = sub_1000F910C;
  v7[3] = &unk_10048BB00;
  double v4 = _Block_copy(v7);
  id v5 = v0;
  swift_release();
  id v6 = [v1 addObserverForName:v2 object:0 queue:0 usingBlock:v4];
  _Block_release(v4);
  swift_unknownObjectRelease();
}

void sub_10009518C()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC7Measure13HistoryButton_button);
  if (v1)
  {
    self;
    uint64_t v2 = swift_dynamicCastObjCClass();
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      uint64_t v4 = qword_1004C31B8;
      id v14 = v1;
      if (v4 != -1) {
        swift_once();
      }
      id v5 = (void *)qword_1004F89F0;
      id v6 = *(void **)algn_1004F89F8;
      if (byte_1004F8A00)
      {
        char v7 = byte_1004F8A10;
        uint64_t v8 = qword_1004F8A08;
        char v9 = byte_1004D2600;
        id v10 = (id)qword_1004F89F0;
        id v11 = sub_100081B28(v9, v8, v7);
        sub_1000286C0(v5, v6, 1);
      }
      else
      {
        if (byte_1004D2600) {
          id v12 = *(id *)algn_1004F89F8;
        }
        else {
          id v12 = (id)qword_1004F89F0;
        }
        id v11 = v12;
      }
      [v3 setTintColor:v11];

      if (byte_1004D2600) {
        uint64_t v13 = 2;
      }
      else {
        uint64_t v13 = 1;
      }
      [v3 setControlStyle:v13];
    }
  }
}

uint64_t type metadata accessor for HistoryButton()
{
  return self;
}

uint64_t sub_100095454(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  id v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  aBlock[4] = sub_10009594C;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_10048BB50;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = a2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_100039BEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

id sub_1000957AC()
{
  id v0 = [self traitCollectionWithPreferredContentSizeCategory:UIContentSizeCategoryLarge];
  id v1 = [self preferredFontForTextStyle:UIFontTextStyleSubheadline compatibleWithTraitCollection:v0];
  [v1 pointSize];
  id v3 = [self configurationWithPointSize:7 weight:3 scale:v2];
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [self systemImageNamed:v4 withConfiguration:v3];

  return v5;
}

uint64_t sub_1000958F4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10009592C(uint64_t a1)
{
  return sub_100095454(a1, *(void **)(v1 + 16));
}

uint64_t sub_100095934(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_10004ACAC(3, 1, 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100095944()
{
  return swift_release();
}

void sub_10009594C()
{
}

void sub_100095970()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Measure13HistoryButton_button);
  if (v1)
  {
    id v4 = v1;
    if ([v4 isEnabled]
      && (uint64_t v2 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC7Measure13HistoryButton_tapHandler)) != 0)
    {
      uint64_t v3 = swift_retain();
      v2(v3);

      sub_100028914((uint64_t)v2);
    }
    else
    {
    }
  }
}

uint64_t sub_100095A38()
{
  uint64_t v1 = sub_100012894(&qword_1004C78A0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UIPointerEffect();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v8 = [objc_allocWithZone((Class)UIPreviewParameters) init];
  [v0 bounds];
  CGRect.center.getter();
  [v0 bounds];
  CGRect.init(centerPoint:size:)();
  id v13 = [self bezierPathWithOvalInRect:v9, v10, v11, v12];
  [v8 setVisiblePath:v13];

  sub_10001C99C(0, (unint64_t *)&qword_1004C78A8);
  void *v7 = [objc_allocWithZone((Class)UITargetedPreview) initWithView:v0 parameters:v8];
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for UIPointerEffect.lift(_:), v4);
  uint64_t v14 = type metadata accessor for UIPointerShape();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v3, 1, 1, v14);
  uint64_t v15 = UIPointerStyle.init(effect:shape:)();

  return v15;
}

double sub_100095CB8()
{
  uint64_t v0 = *(void *)effectiveStatusBarOrientation.unsafeMutableAddressor();
  double result = 0.0;
  xmmword_1004F7FD0 = 0u;
  *(_OWORD *)&qword_1004F7FE0 = 0u;
  qword_1004F7FF0 = 0;
  qword_1004F7FF8 = v0;
  qword_1004F8030 = 0;
  *(_OWORD *)&qword_1004F8010 = 0u;
  *(_OWORD *)&qword_1004F8020 = 0u;
  xmmword_1004F8000 = 0u;
  return result;
}

void sub_100095CF4(unsigned int a1)
{
  void (*v19)(void *__return_ptr, uint64_t);
  uint64_t v20;
  void *v21;
  id v22;
  char v23;
  void (*v24)(void *__return_ptr, uint64_t);
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  void (*v29)(void *, uint64_t, uint64_t);
  void (*v30)(void *, uint64_t);
  unsigned int v31;
  void v32[3];

  uint64_t v2 = v1;
  id v31 = a1;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = (void **)(v1 + 40);
  swift_beginAccess();
  id v8 = *(void **)(v1 + 40);
  int v9 = *(unsigned __int8 *)(v2 + 48);
  *uint64_t v6 = v8;
  uint64_t v10 = enum case for DispatchPredicate.onQueue(_:);
  id v29 = *(void (**)(void *, uint64_t, uint64_t))(v4 + 104);
  v29(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  id v11 = v8;
  char v12 = _dispatchPreconditionTest(_:)();
  uint64_t v30 = *(void (**)(void *, uint64_t))(v4 + 8);
  v30(v6, v3);

  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  char v13 = v31;
  if ((v32[0] & 1) != 0 || v9 == v31)
  {
LABEL_8:
    swift_beginAccess();
    CGFloat v16 = *v7;
    *uint64_t v6 = *v7;
    v29(v6, v10, v3);
    id v17 = v16;
    LOBYTE(v16) = _dispatchPreconditionTest(_:)();
    v30(v6, v3);
    if (v16) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
  if ((v31 - 1) > 1u)
  {
    sub_10005536C();
    *uint64_t v6 = static OS_dispatch_queue.main.getter();
    v29(v6, v10, v3);
    char v18 = _dispatchPreconditionTest(_:)();
    v30(v6, v3);
    if ((v18 & 1) == 0)
    {
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    id v19 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v2 + 56) + 144);
    id v20 = swift_retain();
    v19(v32, v20);
    swift_release();
    if (((BYTE3(v32[0]) | BYTE4(v32[0])) & 1) == 0) {
      sub_100096348(v31);
    }
    swift_beginAccess();
    objc_super v21 = *v7;
    *uint64_t v6 = *v7;
    v29(v6, v10, v3);
    id v22 = v21;
    LOBYTE(v2sub_10004ACAC(2, 1, 1) = _dispatchPreconditionTest(_:)();
    v30(v6, v3);
    if (v21)
    {
LABEL_19:
      *(unsigned char *)(v2 + 48) = v31;
      swift_endAccess();
      return;
    }
    __break(1u);
  }
  else if ((v9 & 0xFE) == 6)
  {
    swift_beginAccess();
    uint64_t v14 = *v7;
    *uint64_t v6 = *v7;
    v29(v6, v10, v3);
    id v15 = v14;
    LOBYTE(v14) = _dispatchPreconditionTest(_:)();
    v30(v6, v3);
    if (v14)
    {
LABEL_9:
      *(unsigned char *)(v2 + 48) = v13;
      swift_endAccess();
      return;
    }
    __break(1u);
    goto LABEL_8;
  }
  sub_10005536C();
  *uint64_t v6 = static OS_dispatch_queue.main.getter();
  v29(v6, v10, v3);
  id v23 = _dispatchPreconditionTest(_:)();
  v30(v6, v3);
  if (v23)
  {
    uint64_t v24 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v2 + 56) + 144);
    id v25 = swift_retain();
    v24(v32, v25);
    swift_release();
    if (((BYTE3(v32[0]) | BYTE4(v32[0])) & 1) == 0) {
      sub_100096348(v31);
    }
    swift_beginAccess();
    id v26 = *v7;
    *uint64_t v6 = *v7;
    v29(v6, v10, v3);
    id v27 = v26;
    LOBYTE(v26) = _dispatchPreconditionTest(_:)();
    v30(v6, v3);
    if ((v26 & 1) == 0) {
      goto LABEL_24;
    }
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
}

uint64_t sub_1000961CC()
{
  type metadata accessor for FeedbackGenerator();
  swift_allocObject();
  uint64_t result = sub_100096208();
  qword_1004F8038 = result;
  return result;
}

uint64_t sub_100096208()
{
  uint64_t v1 = v0;
  sub_100012894(&qword_1004C80A8);
  swift_allocObject();
  *(void *)(v0 + 16) = Synchronized.init(wrappedValue:)();
  sub_10005536C();
  *(void *)(v0 + 24) = static OS_dispatch_queue.main.getter();
  *(void *)(v0 + 3sub_10004ACAC(3, 1, 2) = 0;
  *(void *)(v0 + 40) = static OS_dispatch_queue.main.getter();
  *(unsigned char *)(v0 + 48) = 0;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_100012894((uint64_t *)&unk_1004C4710);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1004F8630;
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 272);
  swift_retain();
  *(void *)(v1 + 56) = v5(KeyPath, v4);
  sub_100012894(&qword_1004C6AF8);
  swift_allocObject();
  *(void *)(v1 + 64) = Synchronized.init(wrappedValue:)();
  return v1;
}

uint64_t sub_100096348(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10005536C();
  uint64_t *v7 = static OS_dispatch_queue.main.getter();
  uint64_t v8 = enum case for DispatchPredicate.onQueue(_:);
  int v9 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 104);
  v9(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v10 = _dispatchPreconditionTest(_:)();
  uint64_t v34 = *(void (**)(uint64_t *, uint64_t))(v5 + 8);
  v34(v7, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  unint64_t v11 = countAndFlagsBits;
  if (*(void *)(countAndFlagsBits + 16) && (uint64_t v12 = sub_1000E21E0(a1), (v13 & 1) != 0))
  {
    int v14 = *(unsigned __int8 *)(*(void *)(v11 + 56) + v12);
    swift_bridgeObjectRelease();
    if (v14 == 1)
    {
      swift_retain();
      Synchronized.wrappedValue.getter();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v35._unint64_t countAndFlagsBits = countAndFlagsBits;
      unint64_t countAndFlagsBits = 0x8000000000000000;
      sub_1000D4F9C(0, a1, isUniquelyReferenced_nonNull_native);
      unint64_t countAndFlagsBits = v35._countAndFlagsBits;
      swift_bridgeObjectRelease();
      v35._unint64_t countAndFlagsBits = countAndFlagsBits;
      Synchronized.wrappedValue.setter();
      return swift_release();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v32 = a1;
  swift_beginAccess();
  id v17 = *(void **)(v2 + 24);
  uint64_t v16 = *(void *)(v2 + 32);
  uint64_t *v7 = (uint64_t)v17;
  uint64_t v33 = v9;
  v9(v7, v8, v4);
  swift_retain();
  id v18 = v17;
  char v19 = _dispatchPreconditionTest(_:)();
  v34(v7, v4);
  swift_release();

  if ((v19 & 1) == 0) {
    goto LABEL_23;
  }
  if (!v16)
  {
    if (qword_1004C2AE0 != -1) {
      swift_once();
    }
    v20._unint64_t countAndFlagsBits = 0xD000000000000045;
    v20._object = (void *)0x8000000100423880;
    Log.debug(_:isPrivate:)(v20, 0);
    type metadata accessor for HapticFeedbackGenerator();
    swift_allocObject();
    uint64_t v21 = sub_1000A3EB4();
    swift_beginAccess();
    id v22 = *(void **)(v2 + 24);
    uint64_t *v7 = (uint64_t)v22;
    v33(v7, v8, v4);
    swift_retain();
    id v23 = v22;
    LOBYTE(v2sub_10004ACAC(3, 1, 2) = _dispatchPreconditionTest(_:)();
    v34(v7, v4);
    if ((v22 & 1) == 0)
    {
      __break(1u);
      goto LABEL_27;
    }
    *(void *)(v2 + 3sub_10004ACAC(3, 1, 2) = v21;
    swift_endAccess();
    swift_release();
    swift_release();
  }
  uint64_t v24 = *(void **)(v2 + 24);
  uint64_t v25 = *(void *)(v2 + 32);
  uint64_t *v7 = (uint64_t)v24;
  v33(v7, v8, v4);
  swift_retain();
  id v26 = v24;
  char v27 = _dispatchPreconditionTest(_:)();
  v34(v7, v4);

  if (v27)
  {
    if (v25)
    {
      if (qword_1004C2AE0 == -1) {
        goto LABEL_16;
      }
      goto LABEL_25;
    }
LABEL_27:
    __break(1u);
    JUMPOUT(0x10009685CLL);
  }
LABEL_24:
  __break(1u);
LABEL_25:
  swift_once();
LABEL_16:
  v35._unint64_t countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v28._object = (void *)0x8000000100423860;
  v28._unint64_t countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v28);
  char v29 = v32;
  char v36 = v32;
  _print_unlocked<A, B>(_:_:)();
  Log.debug(_:isPrivate:)(v35, 0);
  swift_bridgeObjectRelease();
  switch(v29)
  {
    case 1:
    case 3:
    case 8:
      uint64_t v30 = 1;
      goto LABEL_20;
    case 2:
    case 4:
      uint64_t v30 = 2;
      goto LABEL_20;
    case 5:
    case 6:
    case 7:
      uint64_t v30 = 0;
LABEL_20:
      sub_1000A3C80(v30);
      break;
    default:
      return swift_release();
  }
  return swift_release();
}

void sub_100096880()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t v5 = *(void **)(v0 + 24);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  *(void *)(v0 + 3sub_10004ACAC(3, 1, 2) = 0;
  swift_endAccess();
  swift_release();
  if (qword_1004C2AE0 != -1) {
LABEL_5:
  }
    swift_once();
  v7._object = (void *)0x80000001004238D0;
  v7._unint64_t countAndFlagsBits = 0xD000000000000025;
  Log.default(_:isPrivate:)(v7, 0);
}

uint64_t sub_100096A18()
{
  swift_release();

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeedbackGenerator()
{
  return self;
}

uint64_t getEnumTagSinglePayload for FeedbackGenerator.Feedback(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FeedbackGenerator.Feedback(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    char *result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_10004ACAC(2, 1, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100096C00);
      case 4:
        *(_DWORD *)(result + sub_10004ACAC(2, 1, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_10004ACAC(2, 1, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_10004ACAC(2, 1, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedbackGenerator.Feedback()
{
  return &type metadata for FeedbackGenerator.Feedback;
}

unint64_t sub_100096C3C()
{
  unint64_t result = qword_1004C80A0;
  if (!qword_1004C80A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C80A0);
  }
  return result;
}

unint64_t sub_100096C94()
{
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Measure8MetaData_bundleIdentifier + 8);
  if (v1) {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC7Measure8MetaData_bundleIdentifier);
  }
  else {
    uint64_t v2 = 0;
  }
  if (v1) {
    int v3 = *(void **)(v0 + OBJC_IVAR____TtC7Measure8MetaData_bundleIdentifier + 8);
  }
  else {
    int v3 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v4._unint64_t countAndFlagsBits = v2;
  v4._object = v3;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._unint64_t countAndFlagsBits = 0x6F6973726576202CLL;
  v5._object = (void *)0xEB00000000203A6ELL;
  String.append(_:)(v5);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC7Measure8MetaData_versionString + 8);
  if (v6) {
    uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC7Measure8MetaData_versionString);
  }
  else {
    uint64_t v7 = 0;
  }
  if (v6) {
    int v8 = *(void **)(v0 + OBJC_IVAR____TtC7Measure8MetaData_versionString + 8);
  }
  else {
    int v8 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v9._unint64_t countAndFlagsBits = v7;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._unint64_t countAndFlagsBits = 41;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  return 0xD000000000000012;
}

id sub_100096DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Swift::String v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (a2)
  {
    unint64_t v11 = v5;
  }
  else
  {
    uint64_t v12 = self;
    char v13 = v5;
    id v14 = [v12 mainBundle];
    id v15 = [v14 bundleIdentifier];

    if (v15)
    {
      a1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      a2 = v16;
    }
    else
    {
      a1 = 0;
      a2 = 0;
    }
  }
  id v17 = (uint64_t *)&v5[OBJC_IVAR____TtC7Measure8MetaData_bundleIdentifier];
  *id v17 = a1;
  v17[1] = a2;
  if (!a4)
  {
    id v18 = [self mainBundle];
    id v19 = [v18 infoDictionary];

    if (v19)
    {
      uint64_t v20 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      if (*(void *)(v20 + 16) && (unint64_t v21 = sub_1000E20D4(0xD00000000000001ALL, 0x8000000100421C90), (v22 & 1) != 0))
      {
        sub_10005C070(*(void *)(v20 + 56) + 32 * v21, (uint64_t)&v26);
        swift_bridgeObjectRelease();
        if (*((void *)&v27 + 1))
        {
          if (swift_dynamicCast())
          {
            a3 = v28;
            a4 = v29;
            goto LABEL_18;
          }
LABEL_17:
          a4 = 0;
          a3 = 0;
          uint64_t v28 = 0;
          uint64_t v29 = 0;
          goto LABEL_18;
        }
      }
      else
      {
        long long v26 = 0u;
        long long v27 = 0u;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      long long v26 = 0u;
      long long v27 = 0u;
    }
    sub_10001C9D8((uint64_t)&v26);
    goto LABEL_17;
  }
  uint64_t v28 = a3;
  uint64_t v29 = a4;
LABEL_18:
  id v23 = &v5[OBJC_IVAR____TtC7Measure8MetaData_versionString];
  *(void *)id v23 = a3;
  *((void *)v23 + sub_10004ACAC(2, 1, 1) = a4;

  v25.receiver = v5;
  v25.super_class = ObjectType;
  return [super init];
}

id sub_100096FE0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v5 = v2;
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [a1 decodeObjectForKey:v6];

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
  }
  sub_10007CF44((uint64_t)&v20, (uint64_t)v22);
  if (v23)
  {
    int v8 = swift_dynamicCast();
    if (v8) {
      uint64_t v9 = v18;
    }
    else {
      uint64_t v9 = 0;
    }
    if (v8) {
      uint64_t v10 = v19;
    }
    else {
      uint64_t v10 = 0;
    }
  }
  else
  {
    sub_10001C9D8((uint64_t)v22);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [a1 decodeObjectForKey:v11];

  if (v12)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
  }
  sub_10007CF44((uint64_t)&v20, (uint64_t)v22);
  if (!v23)
  {
    sub_10001C9D8((uint64_t)v22);
    goto LABEL_19;
  }
  if (!swift_dynamicCast())
  {
LABEL_19:

    uint64_t v13 = 0;
    uint64_t v14 = 0;
    goto LABEL_20;
  }
  uint64_t v13 = v18;
  uint64_t v14 = v19;

LABEL_20:
  id v15 = objc_allocWithZone(ObjectType);
  id v16 = sub_100096DB4(v9, v10, v13, v14);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v16;
}

void sub_10009722C(void *a1)
{
  swift_bridgeObjectRetain();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v3 = String._bridgeToObjectiveC()();
  [a1 encodeObject:v2 forKey:v3];

  swift_bridgeObjectRetain();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = String._bridgeToObjectiveC()();
  [a1 encodeObject:v4 forKey:v5];
}

uint64_t type metadata accessor for MetaData()
{
  return self;
}

void **initializeBufferWithCopyOfBuffer for MotionState(void **a1, void **a2)
{
  NSString v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void **assignWithCopy for MotionState(void **a1, void **a2)
{
  NSString v3 = *a1;
  id v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void *initializeWithTake for MeasurementState(void *result, void *a2)
{
  char *result = *a2;
  return result;
}

void **assignWithTake for MotionState(void **a1, void **a2)
{
  NSString v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for MotionState(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MotionState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MeasurementsHistoryLastConfirmed()
{
  return &type metadata for MeasurementsHistoryLastConfirmed;
}

void *sub_10009765C(void *a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a3;
    NSString v6 = a2;
    id v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for MeasurementHistoryItem();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(void))(v12 + 48);
    swift_bridgeObjectRetain();
    if (((unsigned int (*)(void *, uint64_t, uint64_t))v13)(v10, 1, v11))
    {
      uint64_t v14 = sub_100012894((uint64_t *)&unk_1004D0EF0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      long long v123 = v13;
      uint64_t v268 = v12;
      v270 = v7;
      id v15 = v9;
      uint64_t v16 = v10[1];
      *id v15 = *v10;
      v15[1] = v16;
      uint64_t v17 = v10[3];
      _OWORD v15[2] = v10[2];
      v15[3] = v17;
      uint64_t v272 = v11;
      uint64_t v18 = *(int *)(v11 + 24);
      v266 = v15;
      v263 = (char *)v15 + v18;
      uint64_t v19 = (char *)v10 + v18;
      uint64_t v20 = type metadata accessor for MeasurementCapture();
      uint64_t v21 = *(void *)(v20 - 8);
      char v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v120 = v6;
      uint64_t v119 = v5;
      if (v22(v19, 1, v20))
      {
        uint64_t v23 = sub_100012894((uint64_t *)&unk_1004CE670);
        memcpy(v263, v19, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        uint64_t v24 = type metadata accessor for URL();
        objc_super v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
        v25(v263, v19, v24);
        v25(&v263[*(int *)(v20 + 20)], &v19[*(int *)(v20 + 20)], v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v263, 0, 1, v20);
      }
      uint64_t v26 = *(int *)(v272 + 28);
      long long v27 = (char *)v266 + v26;
      uint64_t v28 = (char *)v10 + v26;
      uint64_t v121 = v10;
      uint64_t v261 = *((void *)v28 + 10);
      uint64_t v264 = *((void *)v28 + 9);
      uint64_t v257 = *((void *)v28 + 12);
      uint64_t v259 = *((void *)v28 + 11);
      uint64_t v253 = *((void *)v28 + 14);
      uint64_t v255 = *((void *)v28 + 13);
      uint64_t v249 = *((void *)v28 + 16);
      uint64_t v251 = *((void *)v28 + 15);
      uint64_t v245 = *((void *)v28 + 18);
      uint64_t v247 = *((void *)v28 + 17);
      uint64_t v241 = *((void *)v28 + 20);
      uint64_t v243 = *((void *)v28 + 19);
      uint64_t v237 = *((void *)v28 + 22);
      uint64_t v239 = *((void *)v28 + 21);
      uint64_t v233 = *((void *)v28 + 24);
      uint64_t v235 = *((void *)v28 + 23);
      uint64_t v231 = *((void *)v28 + 25);
      uint64_t v229 = *((void *)v28 + 26);
      uint64_t v227 = *((void *)v28 + 27);
      uint64_t v225 = *((void *)v28 + 28);
      uint64_t v223 = *((void *)v28 + 29);
      uint64_t v221 = *((void *)v28 + 30);
      uint64_t v219 = *((void *)v28 + 31);
      uint64_t v217 = *((void *)v28 + 32);
      uint64_t v215 = *((void *)v28 + 33);
      uint64_t v213 = *((void *)v28 + 34);
      uint64_t v211 = *((void *)v28 + 35);
      uint64_t v209 = *((void *)v28 + 36);
      uint64_t v207 = *((void *)v28 + 37);
      uint64_t v205 = *((void *)v28 + 38);
      uint64_t v203 = *((void *)v28 + 39);
      uint64_t v201 = *((void *)v28 + 40);
      uint64_t v199 = *((void *)v28 + 41);
      uint64_t v197 = *((void *)v28 + 42);
      uint64_t v195 = *((void *)v28 + 43);
      uint64_t v193 = *((void *)v28 + 44);
      uint64_t v191 = *((void *)v28 + 45);
      uint64_t v189 = *((void *)v28 + 46);
      uint64_t v187 = *((void *)v28 + 47);
      uint64_t v185 = *((void *)v28 + 48);
      uint64_t v183 = *((void *)v28 + 49);
      uint64_t v181 = *((void *)v28 + 50);
      uint64_t v179 = *((void *)v28 + 51);
      uint64_t v177 = *((void *)v28 + 52);
      uint64_t v175 = *((void *)v28 + 53);
      uint64_t v173 = *((void *)v28 + 54);
      uint64_t v171 = *((void *)v28 + 55);
      uint64_t v169 = *((void *)v28 + 56);
      uint64_t v167 = *((void *)v28 + 57);
      uint64_t v165 = *((void *)v28 + 58);
      uint64_t v163 = *((void *)v28 + 59);
      uint64_t v161 = *((void *)v28 + 60);
      uint64_t v159 = *((void *)v28 + 61);
      uint64_t v157 = *((void *)v28 + 62);
      uint64_t v155 = *((void *)v28 + 63);
      uint64_t v153 = *((void *)v28 + 64);
      uint64_t v151 = *((void *)v28 + 65);
      uint64_t v149 = *((void *)v28 + 66);
      uint64_t v147 = *((void *)v28 + 67);
      uint64_t v145 = *((void *)v28 + 68);
      uint64_t v143 = *((void *)v28 + 69);
      uint64_t v141 = *((void *)v28 + 70);
      uint64_t v139 = *((void *)v28 + 71);
      uint64_t v137 = *((void *)v28 + 72);
      uint64_t v135 = *((void *)v28 + 73);
      uint64_t v133 = *((void *)v28 + 74);
      uint64_t v131 = *((void *)v28 + 75);
      uint64_t v129 = *((void *)v28 + 76);
      uint64_t v127 = *((void *)v28 + 77);
      uint64_t v125 = *((void *)v28 + 78);
      uint64_t v66 = *((void *)v28 + 79);
      uint64_t v67 = *((void *)v28 + 80);
      uint64_t v68 = *((void *)v28 + 81);
      uint64_t v69 = *((void *)v28 + 82);
      uint64_t v70 = *((void *)v28 + 83);
      uint64_t v72 = *((void *)v28 + 84);
      uint64_t v74 = *((void *)v28 + 85);
      uint64_t v76 = *((void *)v28 + 86);
      uint64_t v78 = *((void *)v28 + 87);
      uint64_t v80 = *((void *)v28 + 88);
      uint64_t v82 = *((void *)v28 + 89);
      uint64_t v84 = *((void *)v28 + 90);
      uint64_t v86 = *((void *)v28 + 91);
      uint64_t v88 = *((void *)v28 + 92);
      uint64_t v90 = *((void *)v28 + 93);
      uint64_t v92 = *((void *)v28 + 94);
      uint64_t v94 = *((void *)v28 + 95);
      uint64_t v96 = *((void *)v28 + 96);
      uint64_t v98 = *((void *)v28 + 97);
      uint64_t v100 = *((void *)v28 + 98);
      uint64_t v103 = *((void *)v28 + 99);
      uint64_t v105 = *((void *)v28 + 100);
      uint64_t v107 = *((void *)v28 + 101);
      uint64_t v109 = *((void *)v28 + 102);
      uint64_t v116 = *((void *)v28 + 103);
      __int16 v117 = *((_WORD *)v28 + 418);
      int v118 = *((_DWORD *)v28 + 208);
      uint64_t v29 = *((void *)v28 + 8);
      uint64_t v30 = *(void *)v28;
      uint64_t v31 = *((void *)v28 + 1);
      uint64_t v32 = *((void *)v28 + 2);
      uint64_t v33 = *((void *)v28 + 3);
      uint64_t v34 = *((void *)v28 + 4);
      uint64_t v35 = *((void *)v28 + 5);
      uint64_t v36 = *((void *)v28 + 6);
      uint64_t v37 = *((void *)v28 + 7);
      sub_100098C10(*(void *)v28, v31, v32, v33, v34, v35, v36, v37, v29, v264, v261, v259, v257, v255, v253, v251, v249, v247, v245,
        v243,
        v241,
        v239,
        v237,
        v235);
      *(void *)long long v27 = v30;
      *((void *)v27 + sub_10004ACAC(2, 1, 1) = v31;
      *((void *)v27 + sub_10004ACAC(3, 1, 2) = v32;
      *((void *)v27 + 3) = v33;
      *((void *)v27 + 4) = v34;
      *((void *)v27 + 5) = v35;
      *((void *)v27 + 6) = v36;
      *((void *)v27 + 7) = v37;
      *((void *)v27 + 8) = v29;
      uint64_t v11 = v272;
      *((void *)v27 + 9) = v264;
      *((void *)v27 + 10) = v261;
      *((void *)v27 + 1sub_10004ACAC(2, 1, 1) = v259;
      *((void *)v27 + 1sub_10004ACAC(3, 1, 2) = v257;
      *((void *)v27 + 13) = v255;
      *((void *)v27 + 14) = v253;
      *((void *)v27 + 15) = v251;
      *((void *)v27 + 16) = v249;
      *((void *)v27 + 17) = v247;
      *((void *)v27 + 18) = v245;
      *((void *)v27 + 19) = v243;
      *((void *)v27 + 20) = v241;
      *((void *)v27 + 2sub_10004ACAC(2, 1, 1) = v239;
      *((void *)v27 + 2sub_10004ACAC(3, 1, 2) = v237;
      *((void *)v27 + 23) = v235;
      *((void *)v27 + 24) = v233;
      *((void *)v27 + 25) = v231;
      *((void *)v27 + 26) = v229;
      *((void *)v27 + 27) = v227;
      *((void *)v27 + 28) = v225;
      *((void *)v27 + 29) = v223;
      *((void *)v27 + 30) = v221;
      *((void *)v27 + 3sub_10004ACAC(2, 1, 1) = v219;
      *((void *)v27 + 3sub_10004ACAC(3, 1, 2) = v217;
      *((void *)v27 + 33) = v215;
      *((void *)v27 + 34) = v213;
      *((void *)v27 + 35) = v211;
      *((void *)v27 + 36) = v209;
      *((void *)v27 + 37) = v207;
      *((void *)v27 + 38) = v205;
      *((void *)v27 + 39) = v203;
      *((void *)v27 + 40) = v201;
      *((void *)v27 + 4sub_10004ACAC(2, 1, 1) = v199;
      *((void *)v27 + 4sub_10004ACAC(3, 1, 2) = v197;
      *((void *)v27 + 43) = v195;
      *((void *)v27 + 44) = v193;
      *((void *)v27 + 45) = v191;
      *((void *)v27 + 46) = v189;
      *((void *)v27 + 47) = v187;
      *((void *)v27 + 48) = v185;
      *((void *)v27 + 49) = v183;
      *((void *)v27 + 50) = v181;
      *((void *)v27 + 5sub_10004ACAC(2, 1, 1) = v179;
      *((void *)v27 + 5sub_10004ACAC(3, 1, 2) = v177;
      *((void *)v27 + 53) = v175;
      *((void *)v27 + 54) = v173;
      *((void *)v27 + 55) = v171;
      *((void *)v27 + 56) = v169;
      *((void *)v27 + 57) = v167;
      *((void *)v27 + 58) = v165;
      *((void *)v27 + 59) = v163;
      *((void *)v27 + 60) = v161;
      *((void *)v27 + 6sub_10004ACAC(2, 1, 1) = v159;
      *((void *)v27 + 6sub_10004ACAC(3, 1, 2) = v157;
      *((void *)v27 + 63) = v155;
      *((void *)v27 + 64) = v153;
      *((void *)v27 + 65) = v151;
      *((void *)v27 + 66) = v149;
      *((void *)v27 + 67) = v147;
      *((void *)v27 + 68) = v145;
      *((void *)v27 + 69) = v143;
      *((void *)v27 + 70) = v141;
      *((void *)v27 + 7sub_10004ACAC(2, 1, 1) = v139;
      *((void *)v27 + 7sub_10004ACAC(3, 1, 2) = v137;
      *((void *)v27 + 73) = v135;
      *((void *)v27 + 74) = v133;
      *((void *)v27 + 75) = v131;
      *((void *)v27 + 76) = v129;
      *((void *)v27 + 77) = v127;
      *((void *)v27 + 78) = v125;
      *((void *)v27 + 79) = v66;
      *((void *)v27 + 80) = v67;
      *((void *)v27 + 8sub_10004ACAC(2, 1, 1) = v68;
      *((void *)v27 + 8sub_10004ACAC(3, 1, 2) = v69;
      *((void *)v27 + 83) = v70;
      *((void *)v27 + 84) = v72;
      *((void *)v27 + 85) = v74;
      *((void *)v27 + 86) = v76;
      *((void *)v27 + 87) = v78;
      *((void *)v27 + 88) = v80;
      *((void *)v27 + 89) = v82;
      *((void *)v27 + 90) = v84;
      *((void *)v27 + 9sub_10004ACAC(2, 1, 1) = v86;
      *((void *)v27 + 9sub_10004ACAC(3, 1, 2) = v88;
      *((void *)v27 + 93) = v90;
      *((void *)v27 + 94) = v92;
      *((void *)v27 + 95) = v94;
      *((void *)v27 + 96) = v96;
      *((void *)v27 + 97) = v98;
      *((void *)v27 + 98) = v100;
      *((void *)v27 + 99) = v103;
      *((void *)v27 + 100) = v105;
      *((void *)v27 + 10sub_10004ACAC(2, 1, 1) = v107;
      *((void *)v27 + 10sub_10004ACAC(3, 1, 2) = v109;
      *((void *)v27 + 103) = v116;
      *((_WORD *)v27 + 418) = v117;
      *((_DWORD *)v27 + 208) = v118;
      uint64_t v12 = v268;
      *((unsigned char *)v266 + *(int *)(v272 + 32)) = *((unsigned char *)v121 + *(int *)(v272 + 32));
      (*(void (**)(void))(v268 + 56))();
      id v7 = v270;
      uint64_t v13 = v123;
      NSString v6 = v120;
      uint64_t v5 = v119;
    }
    uint64_t v38 = *(int *)(v5 + 24);
    NSString v39 = (void *)((char *)v7 + v38);
    uint64_t v40 = (void *)((char *)v6 + v38);
    if (v13())
    {
      uint64_t v41 = sub_100012894((uint64_t *)&unk_1004D0EF0);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      uint64_t v269 = v12;
      v271 = v7;
      uint64_t v42 = v40[1];
      void *v39 = *v40;
      v39[1] = v42;
      uint64_t v43 = v40[3];
      _OWORD v39[2] = v40[2];
      v39[3] = v43;
      uint64_t v273 = v11;
      uint64_t v44 = *(int *)(v11 + 24);
      char v45 = (char *)v39 + v44;
      uint64_t v46 = (char *)v40 + v44;
      uint64_t v47 = type metadata accessor for MeasurementCapture();
      uint64_t v48 = *(void *)(v47 - 8);
      id v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v49(v46, 1, v47))
      {
        uint64_t v50 = sub_100012894((uint64_t *)&unk_1004CE670);
        memcpy(v45, v46, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        uint64_t v51 = type metadata accessor for URL();
        NSString v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16);
        v52(v45, v46, v51);
        v52(&v45[*(int *)(v47 + 20)], &v46[*(int *)(v47 + 20)], v51);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      uint64_t v53 = *(int *)(v273 + 28);
      uint64_t v54 = (char *)v39 + v53;
      id v114 = v40;
      uint64_t v55 = (char *)v40 + v53;
      long long v126 = v39;
      uint64_t v265 = *((void *)v55 + 10);
      uint64_t v267 = *((void *)v55 + 9);
      uint64_t v260 = *((void *)v55 + 12);
      uint64_t v262 = *((void *)v55 + 11);
      uint64_t v256 = *((void *)v55 + 14);
      uint64_t v258 = *((void *)v55 + 13);
      uint64_t v252 = *((void *)v55 + 16);
      uint64_t v254 = *((void *)v55 + 15);
      uint64_t v248 = *((void *)v55 + 18);
      uint64_t v250 = *((void *)v55 + 17);
      uint64_t v244 = *((void *)v55 + 20);
      uint64_t v246 = *((void *)v55 + 19);
      uint64_t v240 = *((void *)v55 + 22);
      uint64_t v242 = *((void *)v55 + 21);
      uint64_t v236 = *((void *)v55 + 24);
      uint64_t v238 = *((void *)v55 + 23);
      uint64_t v232 = *((void *)v55 + 26);
      uint64_t v234 = *((void *)v55 + 25);
      uint64_t v230 = *((void *)v55 + 27);
      uint64_t v228 = *((void *)v55 + 28);
      uint64_t v226 = *((void *)v55 + 29);
      uint64_t v224 = *((void *)v55 + 30);
      uint64_t v222 = *((void *)v55 + 31);
      uint64_t v220 = *((void *)v55 + 32);
      uint64_t v218 = *((void *)v55 + 33);
      uint64_t v216 = *((void *)v55 + 34);
      uint64_t v214 = *((void *)v55 + 35);
      uint64_t v212 = *((void *)v55 + 36);
      uint64_t v210 = *((void *)v55 + 37);
      uint64_t v208 = *((void *)v55 + 38);
      uint64_t v206 = *((void *)v55 + 39);
      uint64_t v204 = *((void *)v55 + 40);
      uint64_t v202 = *((void *)v55 + 41);
      uint64_t v200 = *((void *)v55 + 42);
      uint64_t v198 = *((void *)v55 + 43);
      uint64_t v196 = *((void *)v55 + 44);
      uint64_t v194 = *((void *)v55 + 45);
      uint64_t v192 = *((void *)v55 + 46);
      uint64_t v190 = *((void *)v55 + 47);
      uint64_t v188 = *((void *)v55 + 48);
      uint64_t v186 = *((void *)v55 + 49);
      uint64_t v184 = *((void *)v55 + 50);
      uint64_t v182 = *((void *)v55 + 51);
      uint64_t v180 = *((void *)v55 + 52);
      uint64_t v178 = *((void *)v55 + 53);
      uint64_t v176 = *((void *)v55 + 54);
      uint64_t v174 = *((void *)v55 + 55);
      uint64_t v172 = *((void *)v55 + 56);
      uint64_t v170 = *((void *)v55 + 57);
      uint64_t v168 = *((void *)v55 + 58);
      uint64_t v166 = *((void *)v55 + 59);
      uint64_t v164 = *((void *)v55 + 60);
      uint64_t v162 = *((void *)v55 + 61);
      uint64_t v160 = *((void *)v55 + 62);
      uint64_t v158 = *((void *)v55 + 63);
      uint64_t v156 = *((void *)v55 + 64);
      uint64_t v154 = *((void *)v55 + 65);
      uint64_t v152 = *((void *)v55 + 66);
      uint64_t v150 = *((void *)v55 + 67);
      uint64_t v148 = *((void *)v55 + 68);
      uint64_t v146 = *((void *)v55 + 69);
      uint64_t v144 = *((void *)v55 + 70);
      uint64_t v142 = *((void *)v55 + 71);
      uint64_t v140 = *((void *)v55 + 72);
      uint64_t v138 = *((void *)v55 + 73);
      uint64_t v136 = *((void *)v55 + 74);
      uint64_t v134 = *((void *)v55 + 75);
      uint64_t v132 = *((void *)v55 + 76);
      uint64_t v130 = *((void *)v55 + 77);
      uint64_t v128 = *((void *)v55 + 78);
      uint64_t v71 = *((void *)v55 + 79);
      uint64_t v73 = *((void *)v55 + 80);
      uint64_t v75 = *((void *)v55 + 81);
      uint64_t v77 = *((void *)v55 + 82);
      uint64_t v79 = *((void *)v55 + 83);
      uint64_t v81 = *((void *)v55 + 84);
      uint64_t v83 = *((void *)v55 + 85);
      uint64_t v85 = *((void *)v55 + 86);
      uint64_t v87 = *((void *)v55 + 87);
      uint64_t v89 = *((void *)v55 + 88);
      uint64_t v91 = *((void *)v55 + 89);
      uint64_t v93 = *((void *)v55 + 90);
      uint64_t v95 = *((void *)v55 + 91);
      uint64_t v97 = *((void *)v55 + 92);
      uint64_t v99 = *((void *)v55 + 93);
      uint64_t v101 = *((void *)v55 + 94);
      uint64_t v102 = *((void *)v55 + 95);
      uint64_t v104 = *((void *)v55 + 96);
      uint64_t v106 = *((void *)v55 + 97);
      uint64_t v108 = *((void *)v55 + 98);
      uint64_t v110 = *((void *)v55 + 99);
      uint64_t v111 = *((void *)v55 + 100);
      uint64_t v112 = *((void *)v55 + 101);
      uint64_t v113 = *((void *)v55 + 102);
      uint64_t v115 = *((void *)v55 + 103);
      __int16 v122 = *((_WORD *)v55 + 418);
      int v124 = *((_DWORD *)v55 + 208);
      uint64_t v56 = *((void *)v55 + 8);
      uint64_t v57 = *(void *)v55;
      uint64_t v58 = *((void *)v55 + 1);
      uint64_t v59 = *((void *)v55 + 2);
      uint64_t v60 = *((void *)v55 + 3);
      uint64_t v61 = *((void *)v55 + 4);
      uint64_t v62 = *((void *)v55 + 5);
      uint64_t v63 = *((void *)v55 + 6);
      uint64_t v64 = *((void *)v55 + 7);
      sub_100098C10(*(void *)v55, v58, v59, v60, v61, v62, v63, v64, v56, v267, v265, v262, v260, v258, v256, v254, v252, v250, v248,
        v246,
        v244,
        v242,
        v240,
        v238);
      *(void *)uint64_t v54 = v57;
      *((void *)v54 + sub_10004ACAC(2, 1, 1) = v58;
      *((void *)v54 + sub_10004ACAC(3, 1, 2) = v59;
      *((void *)v54 + 3) = v60;
      *((void *)v54 + 4) = v61;
      *((void *)v54 + 5) = v62;
      *((void *)v54 + 6) = v63;
      *((void *)v54 + 7) = v64;
      *((void *)v54 + 8) = v56;
      *((void *)v54 + 9) = v267;
      *((void *)v54 + 10) = v265;
      *((void *)v54 + 1sub_10004ACAC(2, 1, 1) = v262;
      *((void *)v54 + 1sub_10004ACAC(3, 1, 2) = v260;
      *((void *)v54 + 13) = v258;
      *((void *)v54 + 14) = v256;
      *((void *)v54 + 15) = v254;
      *((void *)v54 + 16) = v252;
      *((void *)v54 + 17) = v250;
      *((void *)v54 + 18) = v248;
      *((void *)v54 + 19) = v246;
      *((void *)v54 + 20) = v244;
      *((void *)v54 + 2sub_10004ACAC(2, 1, 1) = v242;
      *((void *)v54 + 2sub_10004ACAC(3, 1, 2) = v240;
      *((void *)v54 + 23) = v238;
      *((void *)v54 + 24) = v236;
      *((void *)v54 + 25) = v234;
      *((void *)v54 + 26) = v232;
      *((void *)v54 + 27) = v230;
      *((void *)v54 + 28) = v228;
      *((void *)v54 + 29) = v226;
      *((void *)v54 + 30) = v224;
      *((void *)v54 + 3sub_10004ACAC(2, 1, 1) = v222;
      *((void *)v54 + 3sub_10004ACAC(3, 1, 2) = v220;
      *((void *)v54 + 33) = v218;
      *((void *)v54 + 34) = v216;
      *((void *)v54 + 35) = v214;
      *((void *)v54 + 36) = v212;
      *((void *)v54 + 37) = v210;
      *((void *)v54 + 38) = v208;
      *((void *)v54 + 39) = v206;
      *((void *)v54 + 40) = v204;
      *((void *)v54 + 4sub_10004ACAC(2, 1, 1) = v202;
      *((void *)v54 + 4sub_10004ACAC(3, 1, 2) = v200;
      *((void *)v54 + 43) = v198;
      *((void *)v54 + 44) = v196;
      *((void *)v54 + 45) = v194;
      *((void *)v54 + 46) = v192;
      *((void *)v54 + 47) = v190;
      *((void *)v54 + 48) = v188;
      *((void *)v54 + 49) = v186;
      *((void *)v54 + 50) = v184;
      *((void *)v54 + 5sub_10004ACAC(2, 1, 1) = v182;
      *((void *)v54 + 5sub_10004ACAC(3, 1, 2) = v180;
      *((void *)v54 + 53) = v178;
      *((void *)v54 + 54) = v176;
      *((void *)v54 + 55) = v174;
      *((void *)v54 + 56) = v172;
      *((void *)v54 + 57) = v170;
      *((void *)v54 + 58) = v168;
      *((void *)v54 + 59) = v166;
      *((void *)v54 + 60) = v164;
      *((void *)v54 + 6sub_10004ACAC(2, 1, 1) = v162;
      *((void *)v54 + 6sub_10004ACAC(3, 1, 2) = v160;
      *((void *)v54 + 63) = v158;
      *((void *)v54 + 64) = v156;
      *((void *)v54 + 65) = v154;
      *((void *)v54 + 66) = v152;
      *((void *)v54 + 67) = v150;
      *((void *)v54 + 68) = v148;
      *((void *)v54 + 69) = v146;
      *((void *)v54 + 70) = v144;
      *((void *)v54 + 7sub_10004ACAC(2, 1, 1) = v142;
      *((void *)v54 + 7sub_10004ACAC(3, 1, 2) = v140;
      *((void *)v54 + 73) = v138;
      *((void *)v54 + 74) = v136;
      *((void *)v54 + 75) = v134;
      *((void *)v54 + 76) = v132;
      *((void *)v54 + 77) = v130;
      *((void *)v54 + 78) = v128;
      *((void *)v54 + 79) = v71;
      *((void *)v54 + 80) = v73;
      *((void *)v54 + 8sub_10004ACAC(2, 1, 1) = v75;
      *((void *)v54 + 8sub_10004ACAC(3, 1, 2) = v77;
      *((void *)v54 + 83) = v79;
      *((void *)v54 + 84) = v81;
      *((void *)v54 + 85) = v83;
      *((void *)v54 + 86) = v85;
      *((void *)v54 + 87) = v87;
      *((void *)v54 + 88) = v89;
      *((void *)v54 + 89) = v91;
      *((void *)v54 + 90) = v93;
      *((void *)v54 + 9sub_10004ACAC(2, 1, 1) = v95;
      *((void *)v54 + 9sub_10004ACAC(3, 1, 2) = v97;
      *((void *)v54 + 93) = v99;
      *((void *)v54 + 94) = v101;
      *((void *)v54 + 95) = v102;
      *((void *)v54 + 96) = v104;
      *((void *)v54 + 97) = v106;
      *((void *)v54 + 98) = v108;
      *((void *)v54 + 99) = v110;
      *((void *)v54 + 100) = v111;
      *((void *)v54 + 10sub_10004ACAC(2, 1, 1) = v112;
      *((void *)v54 + 10sub_10004ACAC(3, 1, 2) = v113;
      *((void *)v54 + 103) = v115;
      *((_WORD *)v54 + 418) = v122;
      *((_DWORD *)v54 + 208) = v124;
      *((unsigned char *)v126 + *(int *)(v273 + 32)) = *((unsigned char *)v114 + *(int *)(v273 + 32));
      (*(void (**)(void))(v269 + 56))();
      return v271;
    }
  }
  return v7;
}

uint64_t sub_100098C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t result = a24;
  unint64_t v25 = (STACK[0x460] >> 38) & 3;
  switch(v25)
  {
    case 2:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 1:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 0:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_1000990D0(a19, a20);
    default:
      return result;
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1000990D0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100099154(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for MeasurementHistoryItem();
  NSString v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v4 + *(int *)(v5 + 24);
    uint64_t v8 = type metadata accessor for MeasurementCapture();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
    {
      uint64_t v9 = type metadata accessor for URL();
      uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
      v10(v7, v9);
      v10(v7 + *(int *)(v8 + 20), v9);
    }
    uint64_t v11 = (uint64_t *)(v4 + *(int *)(v5 + 28));
    sub_100027F20(*v11, v11[1], v11[2], v11[3], v11[4], v11[5], v11[6], v11[7], v11[8], v11[9], v11[10], v11[11], v11[12], v11[13], v11[14], v11[15], v11[16], v11[17], v11[18],
      v11[19]);
  }
  uint64_t v12 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v12, 1, v5);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v12 + *(int *)(v5 + 24);
    uint64_t v15 = type metadata accessor for MeasurementCapture();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
    {
      uint64_t v16 = type metadata accessor for URL();
      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
      v17(v14, v16);
      v17(v14 + *(int *)(v15 + 20), v16);
    }
    uint64_t v18 = (uint64_t *)(v12 + *(int *)(v5 + 28));
    return sub_100027F20(*v18, v18[1], v18[2], v18[3], v18[4], v18[5], v18[6], v18[7], v18[8], v18[9], v18[10], v18[11], v18[12], v18[13], v18[14], v18[15], v18[16], v18[17], v18[18],
             v18[19]);
  }
  return result;
}

void *sub_1000996C0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for MeasurementHistoryItem();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(void))(v10 + 48);
  swift_bridgeObjectRetain();
  if (((unsigned int (*)(void *, uint64_t, uint64_t))v11)(v8, 1, v9))
  {
    uint64_t v12 = sub_100012894((uint64_t *)&unk_1004D0EF0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v119 = v11;
    uint64_t v120 = v3;
    __int16 v122 = v4;
    uint64_t v266 = v10;
    uint64_t v268 = v5;
    uint64_t v13 = v7;
    uint64_t v14 = v8[1];
    void *v13 = *v8;
    v13[1] = v14;
    uint64_t v15 = v8[3];
    v13[2] = v8[2];
    v13[3] = v15;
    uint64_t v270 = v9;
    uint64_t v16 = *(int *)(v9 + 24);
    uint64_t v264 = v13;
    uint64_t v17 = (char *)v13 + v16;
    uint64_t v18 = (char *)v8 + v16;
    uint64_t v19 = type metadata accessor for MeasurementCapture();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21(v18, 1, v19))
    {
      uint64_t v22 = sub_100012894((uint64_t *)&unk_1004CE670);
      memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      uint64_t v23 = type metadata accessor for URL();
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      v24(v17, v18, v23);
      v24(&v17[*(int *)(v19 + 20)], &v18[*(int *)(v19 + 20)], v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    uint64_t v25 = *(int *)(v270 + 28);
    uint64_t v26 = (char *)v264 + v25;
    long long v27 = (char *)v8 + v25;
    int v118 = v8;
    uint64_t v260 = *((void *)v27 + 10);
    uint64_t v262 = *((void *)v27 + 9);
    uint64_t v256 = *((void *)v27 + 12);
    uint64_t v258 = *((void *)v27 + 11);
    uint64_t v252 = *((void *)v27 + 14);
    uint64_t v254 = *((void *)v27 + 13);
    uint64_t v248 = *((void *)v27 + 16);
    uint64_t v250 = *((void *)v27 + 15);
    uint64_t v244 = *((void *)v27 + 18);
    uint64_t v246 = *((void *)v27 + 17);
    uint64_t v240 = *((void *)v27 + 20);
    uint64_t v242 = *((void *)v27 + 19);
    uint64_t v236 = *((void *)v27 + 22);
    uint64_t v238 = *((void *)v27 + 21);
    uint64_t v232 = *((void *)v27 + 24);
    uint64_t v234 = *((void *)v27 + 23);
    uint64_t v230 = *((void *)v27 + 25);
    uint64_t v228 = *((void *)v27 + 26);
    uint64_t v226 = *((void *)v27 + 27);
    uint64_t v224 = *((void *)v27 + 28);
    uint64_t v222 = *((void *)v27 + 29);
    uint64_t v220 = *((void *)v27 + 30);
    uint64_t v218 = *((void *)v27 + 31);
    uint64_t v216 = *((void *)v27 + 32);
    uint64_t v214 = *((void *)v27 + 33);
    uint64_t v212 = *((void *)v27 + 34);
    uint64_t v210 = *((void *)v27 + 35);
    uint64_t v208 = *((void *)v27 + 36);
    uint64_t v206 = *((void *)v27 + 37);
    uint64_t v204 = *((void *)v27 + 38);
    uint64_t v202 = *((void *)v27 + 39);
    uint64_t v200 = *((void *)v27 + 40);
    uint64_t v198 = *((void *)v27 + 41);
    uint64_t v196 = *((void *)v27 + 42);
    uint64_t v194 = *((void *)v27 + 43);
    uint64_t v192 = *((void *)v27 + 44);
    uint64_t v190 = *((void *)v27 + 45);
    uint64_t v188 = *((void *)v27 + 46);
    uint64_t v186 = *((void *)v27 + 47);
    uint64_t v184 = *((void *)v27 + 48);
    uint64_t v182 = *((void *)v27 + 49);
    uint64_t v180 = *((void *)v27 + 50);
    uint64_t v178 = *((void *)v27 + 51);
    uint64_t v176 = *((void *)v27 + 52);
    uint64_t v174 = *((void *)v27 + 53);
    uint64_t v172 = *((void *)v27 + 54);
    uint64_t v170 = *((void *)v27 + 55);
    uint64_t v168 = *((void *)v27 + 56);
    uint64_t v166 = *((void *)v27 + 57);
    uint64_t v164 = *((void *)v27 + 58);
    uint64_t v162 = *((void *)v27 + 59);
    uint64_t v160 = *((void *)v27 + 60);
    uint64_t v158 = *((void *)v27 + 61);
    uint64_t v156 = *((void *)v27 + 62);
    uint64_t v154 = *((void *)v27 + 63);
    uint64_t v152 = *((void *)v27 + 64);
    uint64_t v150 = *((void *)v27 + 65);
    uint64_t v148 = *((void *)v27 + 66);
    uint64_t v146 = *((void *)v27 + 67);
    uint64_t v144 = *((void *)v27 + 68);
    uint64_t v142 = *((void *)v27 + 69);
    uint64_t v140 = *((void *)v27 + 70);
    uint64_t v138 = *((void *)v27 + 71);
    uint64_t v136 = *((void *)v27 + 72);
    uint64_t v134 = *((void *)v27 + 73);
    uint64_t v132 = *((void *)v27 + 74);
    uint64_t v130 = *((void *)v27 + 75);
    uint64_t v128 = *((void *)v27 + 76);
    uint64_t v126 = *((void *)v27 + 77);
    uint64_t v124 = *((void *)v27 + 78);
    uint64_t v65 = *((void *)v27 + 79);
    uint64_t v66 = *((void *)v27 + 80);
    uint64_t v67 = *((void *)v27 + 81);
    uint64_t v68 = *((void *)v27 + 82);
    uint64_t v69 = *((void *)v27 + 83);
    uint64_t v71 = *((void *)v27 + 84);
    uint64_t v73 = *((void *)v27 + 85);
    uint64_t v75 = *((void *)v27 + 86);
    uint64_t v77 = *((void *)v27 + 87);
    uint64_t v79 = *((void *)v27 + 88);
    uint64_t v81 = *((void *)v27 + 89);
    uint64_t v83 = *((void *)v27 + 90);
    uint64_t v85 = *((void *)v27 + 91);
    uint64_t v87 = *((void *)v27 + 92);
    uint64_t v89 = *((void *)v27 + 93);
    uint64_t v91 = *((void *)v27 + 94);
    uint64_t v93 = *((void *)v27 + 95);
    uint64_t v95 = *((void *)v27 + 96);
    uint64_t v97 = *((void *)v27 + 97);
    uint64_t v99 = *((void *)v27 + 98);
    uint64_t v102 = *((void *)v27 + 99);
    uint64_t v104 = *((void *)v27 + 100);
    uint64_t v106 = *((void *)v27 + 101);
    uint64_t v108 = *((void *)v27 + 102);
    uint64_t v115 = *((void *)v27 + 103);
    __int16 v116 = *((_WORD *)v27 + 418);
    int v117 = *((_DWORD *)v27 + 208);
    uint64_t v28 = *((void *)v27 + 8);
    uint64_t v29 = *(void *)v27;
    uint64_t v30 = *((void *)v27 + 1);
    uint64_t v31 = *((void *)v27 + 2);
    uint64_t v32 = *((void *)v27 + 3);
    uint64_t v33 = *((void *)v27 + 4);
    uint64_t v34 = *((void *)v27 + 5);
    uint64_t v35 = *((void *)v27 + 6);
    uint64_t v36 = *((void *)v27 + 7);
    sub_100098C10(*(void *)v27, v30, v31, v32, v33, v34, v35, v36, v28, v262, v260, v258, v256, v254, v252, v250, v248, v246, v244,
      v242,
      v240,
      v238,
      v236,
      v234);
    *(void *)uint64_t v26 = v29;
    *((void *)v26 + sub_10004ACAC(2, 1, 1) = v30;
    *((void *)v26 + sub_10004ACAC(3, 1, 2) = v31;
    *((void *)v26 + 3) = v32;
    *((void *)v26 + 4) = v33;
    *((void *)v26 + 5) = v34;
    *((void *)v26 + 6) = v35;
    *((void *)v26 + 7) = v36;
    *((void *)v26 + 8) = v28;
    uint64_t v9 = v270;
    *((void *)v26 + 9) = v262;
    *((void *)v26 + 10) = v260;
    *((void *)v26 + 1sub_10004ACAC(2, 1, 1) = v258;
    *((void *)v26 + 1sub_10004ACAC(3, 1, 2) = v256;
    *((void *)v26 + 13) = v254;
    *((void *)v26 + 14) = v252;
    *((void *)v26 + 15) = v250;
    *((void *)v26 + 16) = v248;
    *((void *)v26 + 17) = v246;
    *((void *)v26 + 18) = v244;
    *((void *)v26 + 19) = v242;
    *((void *)v26 + 20) = v240;
    *((void *)v26 + 2sub_10004ACAC(2, 1, 1) = v238;
    *((void *)v26 + 2sub_10004ACAC(3, 1, 2) = v236;
    *((void *)v26 + 23) = v234;
    *((void *)v26 + 24) = v232;
    *((void *)v26 + 25) = v230;
    *((void *)v26 + 26) = v228;
    *((void *)v26 + 27) = v226;
    *((void *)v26 + 28) = v224;
    *((void *)v26 + 29) = v222;
    *((void *)v26 + 30) = v220;
    *((void *)v26 + 3sub_10004ACAC(2, 1, 1) = v218;
    *((void *)v26 + 3sub_10004ACAC(3, 1, 2) = v216;
    *((void *)v26 + 33) = v214;
    *((void *)v26 + 34) = v212;
    *((void *)v26 + 35) = v210;
    *((void *)v26 + 36) = v208;
    *((void *)v26 + 37) = v206;
    *((void *)v26 + 38) = v204;
    *((void *)v26 + 39) = v202;
    *((void *)v26 + 40) = v200;
    *((void *)v26 + 4sub_10004ACAC(2, 1, 1) = v198;
    *((void *)v26 + 4sub_10004ACAC(3, 1, 2) = v196;
    *((void *)v26 + 43) = v194;
    *((void *)v26 + 44) = v192;
    *((void *)v26 + 45) = v190;
    *((void *)v26 + 46) = v188;
    *((void *)v26 + 47) = v186;
    *((void *)v26 + 48) = v184;
    *((void *)v26 + 49) = v182;
    *((void *)v26 + 50) = v180;
    *((void *)v26 + 5sub_10004ACAC(2, 1, 1) = v178;
    *((void *)v26 + 5sub_10004ACAC(3, 1, 2) = v176;
    *((void *)v26 + 53) = v174;
    *((void *)v26 + 54) = v172;
    *((void *)v26 + 55) = v170;
    *((void *)v26 + 56) = v168;
    *((void *)v26 + 57) = v166;
    *((void *)v26 + 58) = v164;
    *((void *)v26 + 59) = v162;
    *((void *)v26 + 60) = v160;
    *((void *)v26 + 6sub_10004ACAC(2, 1, 1) = v158;
    *((void *)v26 + 6sub_10004ACAC(3, 1, 2) = v156;
    *((void *)v26 + 63) = v154;
    *((void *)v26 + 64) = v152;
    *((void *)v26 + 65) = v150;
    *((void *)v26 + 66) = v148;
    *((void *)v26 + 67) = v146;
    *((void *)v26 + 68) = v144;
    *((void *)v26 + 69) = v142;
    *((void *)v26 + 70) = v140;
    *((void *)v26 + 7sub_10004ACAC(2, 1, 1) = v138;
    *((void *)v26 + 7sub_10004ACAC(3, 1, 2) = v136;
    *((void *)v26 + 73) = v134;
    *((void *)v26 + 74) = v132;
    *((void *)v26 + 75) = v130;
    *((void *)v26 + 76) = v128;
    *((void *)v26 + 77) = v126;
    *((void *)v26 + 78) = v124;
    *((void *)v26 + 79) = v65;
    *((void *)v26 + 80) = v66;
    *((void *)v26 + 8sub_10004ACAC(2, 1, 1) = v67;
    *((void *)v26 + 8sub_10004ACAC(3, 1, 2) = v68;
    *((void *)v26 + 83) = v69;
    *((void *)v26 + 84) = v71;
    *((void *)v26 + 85) = v73;
    *((void *)v26 + 86) = v75;
    *((void *)v26 + 87) = v77;
    *((void *)v26 + 88) = v79;
    *((void *)v26 + 89) = v81;
    *((void *)v26 + 90) = v83;
    *((void *)v26 + 9sub_10004ACAC(2, 1, 1) = v85;
    *((void *)v26 + 9sub_10004ACAC(3, 1, 2) = v87;
    *((void *)v26 + 93) = v89;
    *((void *)v26 + 94) = v91;
    *((void *)v26 + 95) = v93;
    *((void *)v26 + 96) = v95;
    *((void *)v26 + 97) = v97;
    *((void *)v26 + 98) = v99;
    *((void *)v26 + 99) = v102;
    *((void *)v26 + 100) = v104;
    *((void *)v26 + 10sub_10004ACAC(2, 1, 1) = v106;
    *((void *)v26 + 10sub_10004ACAC(3, 1, 2) = v108;
    *((void *)v26 + 103) = v115;
    *((_WORD *)v26 + 418) = v116;
    *((_DWORD *)v26 + 208) = v117;
    uint64_t v10 = v266;
    *((unsigned char *)v264 + *(int *)(v270 + 32)) = *((unsigned char *)v118 + *(int *)(v270 + 32));
    (*(void (**)(void))(v266 + 56))();
    uint64_t v5 = v268;
    uint64_t v4 = v122;
    uint64_t v3 = v120;
    uint64_t v11 = v119;
  }
  uint64_t v37 = *(int *)(v3 + 24);
  uint64_t v38 = (void *)((char *)v5 + v37);
  NSString v39 = (void *)((char *)v4 + v37);
  if (v11())
  {
    uint64_t v40 = sub_100012894((uint64_t *)&unk_1004D0EF0);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    uint64_t v267 = v10;
    uint64_t v269 = v5;
    uint64_t v41 = v39[1];
    *uint64_t v38 = *v39;
    v38[1] = v41;
    uint64_t v42 = v39[3];
    v38[2] = v39[2];
    v38[3] = v42;
    uint64_t v271 = v9;
    uint64_t v43 = *(int *)(v9 + 24);
    uint64_t v44 = (char *)v38 + v43;
    char v45 = (char *)v39 + v43;
    uint64_t v46 = type metadata accessor for MeasurementCapture();
    uint64_t v47 = *(void *)(v46 - 8);
    uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v48(v45, 1, v46))
    {
      uint64_t v49 = sub_100012894((uint64_t *)&unk_1004CE670);
      memcpy(v44, v45, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      uint64_t v50 = type metadata accessor for URL();
      uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
      v51(v44, v45, v50);
      v51(&v44[*(int *)(v46 + 20)], &v45[*(int *)(v46 + 20)], v50);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    uint64_t v52 = *(int *)(v271 + 28);
    uint64_t v53 = (char *)v38 + v52;
    uint64_t v113 = v39;
    uint64_t v54 = (char *)v39 + v52;
    uint64_t v125 = v38;
    uint64_t v263 = *((void *)v54 + 10);
    uint64_t v265 = *((void *)v54 + 9);
    uint64_t v259 = *((void *)v54 + 12);
    uint64_t v261 = *((void *)v54 + 11);
    uint64_t v255 = *((void *)v54 + 14);
    uint64_t v257 = *((void *)v54 + 13);
    uint64_t v251 = *((void *)v54 + 16);
    uint64_t v253 = *((void *)v54 + 15);
    uint64_t v247 = *((void *)v54 + 18);
    uint64_t v249 = *((void *)v54 + 17);
    uint64_t v243 = *((void *)v54 + 20);
    uint64_t v245 = *((void *)v54 + 19);
    uint64_t v239 = *((void *)v54 + 22);
    uint64_t v241 = *((void *)v54 + 21);
    uint64_t v235 = *((void *)v54 + 24);
    uint64_t v237 = *((void *)v54 + 23);
    uint64_t v231 = *((void *)v54 + 26);
    uint64_t v233 = *((void *)v54 + 25);
    uint64_t v229 = *((void *)v54 + 27);
    uint64_t v227 = *((void *)v54 + 28);
    uint64_t v225 = *((void *)v54 + 29);
    uint64_t v223 = *((void *)v54 + 30);
    uint64_t v221 = *((void *)v54 + 31);
    uint64_t v219 = *((void *)v54 + 32);
    uint64_t v217 = *((void *)v54 + 33);
    uint64_t v215 = *((void *)v54 + 34);
    uint64_t v213 = *((void *)v54 + 35);
    uint64_t v211 = *((void *)v54 + 36);
    uint64_t v209 = *((void *)v54 + 37);
    uint64_t v207 = *((void *)v54 + 38);
    uint64_t v205 = *((void *)v54 + 39);
    uint64_t v203 = *((void *)v54 + 40);
    uint64_t v201 = *((void *)v54 + 41);
    uint64_t v199 = *((void *)v54 + 42);
    uint64_t v197 = *((void *)v54 + 43);
    uint64_t v195 = *((void *)v54 + 44);
    uint64_t v193 = *((void *)v54 + 45);
    uint64_t v191 = *((void *)v54 + 46);
    uint64_t v189 = *((void *)v54 + 47);
    uint64_t v187 = *((void *)v54 + 48);
    uint64_t v185 = *((void *)v54 + 49);
    uint64_t v183 = *((void *)v54 + 50);
    uint64_t v181 = *((void *)v54 + 51);
    uint64_t v179 = *((void *)v54 + 52);
    uint64_t v177 = *((void *)v54 + 53);
    uint64_t v175 = *((void *)v54 + 54);
    uint64_t v173 = *((void *)v54 + 55);
    uint64_t v171 = *((void *)v54 + 56);
    uint64_t v169 = *((void *)v54 + 57);
    uint64_t v167 = *((void *)v54 + 58);
    uint64_t v165 = *((void *)v54 + 59);
    uint64_t v163 = *((void *)v54 + 60);
    uint64_t v161 = *((void *)v54 + 61);
    uint64_t v159 = *((void *)v54 + 62);
    uint64_t v157 = *((void *)v54 + 63);
    uint64_t v155 = *((void *)v54 + 64);
    uint64_t v153 = *((void *)v54 + 65);
    uint64_t v151 = *((void *)v54 + 66);
    uint64_t v149 = *((void *)v54 + 67);
    uint64_t v147 = *((void *)v54 + 68);
    uint64_t v145 = *((void *)v54 + 69);
    uint64_t v143 = *((void *)v54 + 70);
    uint64_t v141 = *((void *)v54 + 71);
    uint64_t v139 = *((void *)v54 + 72);
    uint64_t v137 = *((void *)v54 + 73);
    uint64_t v135 = *((void *)v54 + 74);
    uint64_t v133 = *((void *)v54 + 75);
    uint64_t v131 = *((void *)v54 + 76);
    uint64_t v129 = *((void *)v54 + 77);
    uint64_t v127 = *((void *)v54 + 78);
    uint64_t v70 = *((void *)v54 + 79);
    uint64_t v72 = *((void *)v54 + 80);
    uint64_t v74 = *((void *)v54 + 81);
    uint64_t v76 = *((void *)v54 + 82);
    uint64_t v78 = *((void *)v54 + 83);
    uint64_t v80 = *((void *)v54 + 84);
    uint64_t v82 = *((void *)v54 + 85);
    uint64_t v84 = *((void *)v54 + 86);
    uint64_t v86 = *((void *)v54 + 87);
    uint64_t v88 = *((void *)v54 + 88);
    uint64_t v90 = *((void *)v54 + 89);
    uint64_t v92 = *((void *)v54 + 90);
    uint64_t v94 = *((void *)v54 + 91);
    uint64_t v96 = *((void *)v54 + 92);
    uint64_t v98 = *((void *)v54 + 93);
    uint64_t v100 = *((void *)v54 + 94);
    uint64_t v101 = *((void *)v54 + 95);
    uint64_t v103 = *((void *)v54 + 96);
    uint64_t v105 = *((void *)v54 + 97);
    uint64_t v107 = *((void *)v54 + 98);
    uint64_t v109 = *((void *)v54 + 99);
    uint64_t v110 = *((void *)v54 + 100);
    uint64_t v111 = *((void *)v54 + 101);
    uint64_t v112 = *((void *)v54 + 102);
    uint64_t v114 = *((void *)v54 + 103);
    __int16 v121 = *((_WORD *)v54 + 418);
    int v123 = *((_DWORD *)v54 + 208);
    uint64_t v55 = *((void *)v54 + 8);
    uint64_t v56 = *(void *)v54;
    uint64_t v57 = *((void *)v54 + 1);
    uint64_t v58 = *((void *)v54 + 2);
    uint64_t v59 = *((void *)v54 + 3);
    uint64_t v60 = *((void *)v54 + 4);
    uint64_t v61 = *((void *)v54 + 5);
    uint64_t v62 = *((void *)v54 + 6);
    uint64_t v63 = *((void *)v54 + 7);
    sub_100098C10(*(void *)v54, v57, v58, v59, v60, v61, v62, v63, v55, v265, v263, v261, v259, v257, v255, v253, v251, v249, v247,
      v245,
      v243,
      v241,
      v239,
      v237);
    *(void *)uint64_t v53 = v56;
    *((void *)v53 + sub_10004ACAC(2, 1, 1) = v57;
    *((void *)v53 + sub_10004ACAC(3, 1, 2) = v58;
    *((void *)v53 + 3) = v59;
    *((void *)v53 + 4) = v60;
    *((void *)v53 + 5) = v61;
    *((void *)v53 + 6) = v62;
    *((void *)v53 + 7) = v63;
    *((void *)v53 + 8) = v55;
    *((void *)v53 + 9) = v265;
    *((void *)v53 + 10) = v263;
    *((void *)v53 + 1sub_10004ACAC(2, 1, 1) = v261;
    *((void *)v53 + 1sub_10004ACAC(3, 1, 2) = v259;
    *((void *)v53 + 13) = v257;
    *((void *)v53 + 14) = v255;
    *((void *)v53 + 15) = v253;
    *((void *)v53 + 16) = v251;
    *((void *)v53 + 17) = v249;
    *((void *)v53 + 18) = v247;
    *((void *)v53 + 19) = v245;
    *((void *)v53 + 20) = v243;
    *((void *)v53 + 2sub_10004ACAC(2, 1, 1) = v241;
    *((void *)v53 + 2sub_10004ACAC(3, 1, 2) = v239;
    *((void *)v53 + 23) = v237;
    *((void *)v53 + 24) = v235;
    *((void *)v53 + 25) = v233;
    *((void *)v53 + 26) = v231;
    *((void *)v53 + 27) = v229;
    *((void *)v53 + 28) = v227;
    *((void *)v53 + 29) = v225;
    *((void *)v53 + 30) = v223;
    *((void *)v53 + 3sub_10004ACAC(2, 1, 1) = v221;
    *((void *)v53 + 3sub_10004ACAC(3, 1, 2) = v219;
    *((void *)v53 + 33) = v217;
    *((void *)v53 + 34) = v215;
    *((void *)v53 + 35) = v213;
    *((void *)v53 + 36) = v211;
    *((void *)v53 + 37) = v209;
    *((void *)v53 + 38) = v207;
    *((void *)v53 + 39) = v205;
    *((void *)v53 + 40) = v203;
    *((void *)v53 + 4sub_10004ACAC(2, 1, 1) = v201;
    *((void *)v53 + 4sub_10004ACAC(3, 1, 2) = v199;
    *((void *)v53 + 43) = v197;
    *((void *)v53 + 44) = v195;
    *((void *)v53 + 45) = v193;
    *((void *)v53 + 46) = v191;
    *((void *)v53 + 47) = v189;
    *((void *)v53 + 48) = v187;
    *((void *)v53 + 49) = v185;
    *((void *)v53 + 50) = v183;
    *((void *)v53 + 5sub_10004ACAC(2, 1, 1) = v181;
    *((void *)v53 + 5sub_10004ACAC(3, 1, 2) = v179;
    *((void *)v53 + 53) = v177;
    *((void *)v53 + 54) = v175;
    *((void *)v53 + 55) = v173;
    *((void *)v53 + 56) = v171;
    *((void *)v53 + 57) = v169;
    *((void *)v53 + 58) = v167;
    *((void *)v53 + 59) = v165;
    *((void *)v53 + 60) = v163;
    *((void *)v53 + 6sub_10004ACAC(2, 1, 1) = v161;
    *((void *)v53 + 6sub_10004ACAC(3, 1, 2) = v159;
    *((void *)v53 + 63) = v157;
    *((void *)v53 + 64) = v155;
    *((void *)v53 + 65) = v153;
    *((void *)v53 + 66) = v151;
    *((void *)v53 + 67) = v149;
    *((void *)v53 + 68) = v147;
    *((void *)v53 + 69) = v145;
    *((void *)v53 + 70) = v143;
    *((void *)v53 + 7sub_10004ACAC(2, 1, 1) = v141;
    *((void *)v53 + 7sub_10004ACAC(3, 1, 2) = v139;
    *((void *)v53 + 73) = v137;
    *((void *)v53 + 74) = v135;
    *((void *)v53 + 75) = v133;
    *((void *)v53 + 76) = v131;
    *((void *)v53 + 77) = v129;
    *((void *)v53 + 78) = v127;
    *((void *)v53 + 79) = v70;
    *((void *)v53 + 80) = v72;
    *((void *)v53 + 8sub_10004ACAC(2, 1, 1) = v74;
    *((void *)v53 + 8sub_10004ACAC(3, 1, 2) = v76;
    *((void *)v53 + 83) = v78;
    *((void *)v53 + 84) = v80;
    *((void *)v53 + 85) = v82;
    *((void *)v53 + 86) = v84;
    *((void *)v53 + 87) = v86;
    *((void *)v53 + 88) = v88;
    *((void *)v53 + 89) = v90;
    *((void *)v53 + 90) = v92;
    *((void *)v53 + 9sub_10004ACAC(2, 1, 1) = v94;
    *((void *)v53 + 9sub_10004ACAC(3, 1, 2) = v96;
    *((void *)v53 + 93) = v98;
    *((void *)v53 + 94) = v100;
    *((void *)v53 + 95) = v101;
    *((void *)v53 + 96) = v103;
    *((void *)v53 + 97) = v105;
    *((void *)v53 + 98) = v107;
    *((void *)v53 + 99) = v109;
    *((void *)v53 + 100) = v110;
    *((void *)v53 + 10sub_10004ACAC(2, 1, 1) = v111;
    *((void *)v53 + 10sub_10004ACAC(3, 1, 2) = v112;
    *((void *)v53 + 103) = v114;
    *((_WORD *)v53 + 418) = v121;
    *((_DWORD *)v53 + 208) = v123;
    *((unsigned char *)v125 + *(int *)(v271 + 32)) = *((unsigned char *)v113 + *(int *)(v271 + 32));
    (*(void (**)(void))(v267 + 56))();
    return v269;
  }
  return v5;
}

void *sub_10009AC0C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)v5 + v6);
  uint64_t v8 = (void *)((char *)v4 + v6);
  uint64_t v9 = type metadata accessor for MeasurementHistoryItem();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void))(v10 + 48);
  uint64_t v12 = v7;
  LODWORD(v7) = ((uint64_t (*)(void *, uint64_t, uint64_t))v11)(v7, 1, v9);
  v527 = (int *)v9;
  int v13 = ((uint64_t (*)(void *, uint64_t, uint64_t))v11)(v8, 1, v9);
  if (v7)
  {
    if (!v13)
    {
      v501 = v11;
      uint64_t v506 = a3;
      uint64_t v519 = v10;
      v524 = v5;
      *uint64_t v12 = *v8;
      v12[1] = v8[1];
      v12[2] = v8[2];
      v12[3] = v8[3];
      uint64_t v14 = *(int *)(v9 + 24);
      uint64_t v15 = (char *)v12 + v14;
      v511 = v4;
      v515 = v8;
      uint64_t v16 = (char *)v8 + v14;
      uint64_t v17 = type metadata accessor for MeasurementCapture();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v19(v16, 1, v17))
      {
        uint64_t v20 = sub_100012894((uint64_t *)&unk_1004CE670);
        memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        uint64_t v32 = type metadata accessor for URL();
        uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
        v33(v15, v16, v32);
        v33(&v15[*(int *)(v17 + 20)], &v16[*(int *)(v17 + 20)], v32);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      uint64_t v34 = v527[7];
      v496 = v12;
      uint64_t v35 = (char *)v12 + v34;
      uint64_t v36 = (char *)v8 + v34;
      uint64_t v487 = *((void *)v36 + 9);
      uint64_t v482 = *((void *)v36 + 10);
      uint64_t v477 = *((void *)v36 + 11);
      uint64_t v472 = *((void *)v36 + 12);
      uint64_t v467 = *((void *)v36 + 13);
      uint64_t v462 = *((void *)v36 + 14);
      uint64_t v458 = *((void *)v36 + 15);
      uint64_t v454 = *((void *)v36 + 16);
      uint64_t v450 = *((void *)v36 + 17);
      uint64_t v446 = *((void *)v36 + 18);
      uint64_t v442 = *((void *)v36 + 19);
      uint64_t v438 = *((void *)v36 + 20);
      uint64_t v434 = *((void *)v36 + 21);
      uint64_t v430 = *((void *)v36 + 22);
      uint64_t v426 = *((void *)v36 + 23);
      uint64_t v422 = *((void *)v36 + 24);
      uint64_t v418 = *((void *)v36 + 25);
      uint64_t v414 = *((void *)v36 + 26);
      uint64_t v410 = *((void *)v36 + 27);
      uint64_t v406 = *((void *)v36 + 28);
      uint64_t v402 = *((void *)v36 + 29);
      uint64_t v398 = *((void *)v36 + 30);
      uint64_t v394 = *((void *)v36 + 31);
      uint64_t v390 = *((void *)v36 + 32);
      uint64_t v386 = *((void *)v36 + 33);
      uint64_t v382 = *((void *)v36 + 34);
      uint64_t v378 = *((void *)v36 + 35);
      uint64_t v374 = *((void *)v36 + 36);
      uint64_t v370 = *((void *)v36 + 37);
      uint64_t v366 = *((void *)v36 + 38);
      uint64_t v362 = *((void *)v36 + 39);
      uint64_t v358 = *((void *)v36 + 40);
      uint64_t v354 = *((void *)v36 + 41);
      uint64_t v350 = *((void *)v36 + 42);
      uint64_t v346 = *((void *)v36 + 43);
      uint64_t v342 = *((void *)v36 + 44);
      uint64_t v338 = *((void *)v36 + 45);
      uint64_t v334 = *((void *)v36 + 46);
      uint64_t v330 = *((void *)v36 + 47);
      uint64_t v326 = *((void *)v36 + 48);
      uint64_t v322 = *((void *)v36 + 49);
      uint64_t v318 = *((void *)v36 + 50);
      uint64_t v314 = *((void *)v36 + 51);
      uint64_t v310 = *((void *)v36 + 52);
      uint64_t v306 = *((void *)v36 + 53);
      uint64_t v302 = *((void *)v36 + 54);
      uint64_t v298 = *((void *)v36 + 55);
      uint64_t v294 = *((void *)v36 + 56);
      uint64_t v290 = *((void *)v36 + 57);
      uint64_t v286 = *((void *)v36 + 58);
      uint64_t v282 = *((void *)v36 + 59);
      uint64_t v278 = *((void *)v36 + 60);
      uint64_t v274 = *((void *)v36 + 61);
      uint64_t v270 = *((void *)v36 + 62);
      uint64_t v266 = *((void *)v36 + 63);
      uint64_t v262 = *((void *)v36 + 64);
      uint64_t v258 = *((void *)v36 + 65);
      uint64_t v254 = *((void *)v36 + 66);
      uint64_t v250 = *((void *)v36 + 67);
      uint64_t v246 = *((void *)v36 + 68);
      uint64_t v242 = *((void *)v36 + 69);
      uint64_t v238 = *((void *)v36 + 70);
      uint64_t v234 = *((void *)v36 + 71);
      uint64_t v230 = *((void *)v36 + 72);
      uint64_t v226 = *((void *)v36 + 73);
      uint64_t v222 = *((void *)v36 + 74);
      uint64_t v218 = *((void *)v36 + 75);
      uint64_t v214 = *((void *)v36 + 76);
      uint64_t v210 = *((void *)v36 + 77);
      uint64_t v207 = *((void *)v36 + 78);
      uint64_t v130 = *((void *)v36 + 79);
      long long v131 = *((_OWORD *)v36 + 40);
      long long v132 = *((_OWORD *)v36 + 41);
      long long v134 = *((_OWORD *)v36 + 42);
      long long v136 = *((_OWORD *)v36 + 43);
      long long v139 = *((_OWORD *)v36 + 44);
      long long v143 = *((_OWORD *)v36 + 45);
      long long v146 = *((_OWORD *)v36 + 46);
      long long v151 = *((_OWORD *)v36 + 47);
      uint64_t v155 = *((void *)v36 + 96);
      uint64_t v159 = *((void *)v36 + 97);
      uint64_t v162 = *((void *)v36 + 98);
      uint64_t v166 = *((void *)v36 + 99);
      uint64_t v170 = *((void *)v36 + 100);
      uint64_t v173 = *((void *)v36 + 101);
      uint64_t v177 = *((void *)v36 + 102);
      uint64_t v198 = *((void *)v36 + 103);
      __int16 v201 = *((_WORD *)v36 + 418);
      int v204 = *((_DWORD *)v36 + 208);
      uint64_t v37 = *((void *)v36 + 8);
      uint64_t v38 = *(void *)v36;
      uint64_t v39 = *((void *)v36 + 1);
      uint64_t v40 = *((void *)v36 + 2);
      uint64_t v41 = *((void *)v36 + 3);
      uint64_t v42 = *((void *)v36 + 4);
      uint64_t v43 = *((void *)v36 + 5);
      uint64_t v44 = *((void *)v36 + 6);
      uint64_t v45 = *((void *)v36 + 7);
      sub_100098C10(*(void *)v36, v39, v40, v41, v42, v43, v44, v45, v37, v487, v482, v477, v472, v467, v462, v458, v454, v450, v446,
        v442,
        v438,
        v434,
        v430,
        v426);
      *(void *)uint64_t v35 = v38;
      *((void *)v35 + sub_10004ACAC(2, 1, 1) = v39;
      *((void *)v35 + sub_10004ACAC(3, 1, 2) = v40;
      *((void *)v35 + 3) = v41;
      *((void *)v35 + 4) = v42;
      *((void *)v35 + 5) = v43;
      *((void *)v35 + 6) = v44;
      *((void *)v35 + 7) = v45;
      *((void *)v35 + 8) = v37;
      *((void *)v35 + 9) = v487;
      *((void *)v35 + 10) = v482;
      *((void *)v35 + 1sub_10004ACAC(2, 1, 1) = v477;
      *((void *)v35 + 1sub_10004ACAC(3, 1, 2) = v472;
      *((void *)v35 + 13) = v467;
      *((void *)v35 + 14) = v462;
      *((void *)v35 + 15) = v458;
      *((void *)v35 + 16) = v454;
      *((void *)v35 + 17) = v450;
      *((void *)v35 + 18) = v446;
      *((void *)v35 + 19) = v442;
      *((void *)v35 + 20) = v438;
      *((void *)v35 + 2sub_10004ACAC(2, 1, 1) = v434;
      *((void *)v35 + 2sub_10004ACAC(3, 1, 2) = v430;
      *((void *)v35 + 23) = v426;
      *((void *)v35 + 24) = v422;
      *((void *)v35 + 25) = v418;
      *((void *)v35 + 26) = v414;
      *((void *)v35 + 27) = v410;
      *((void *)v35 + 28) = v406;
      *((void *)v35 + 29) = v402;
      *((void *)v35 + 30) = v398;
      *((void *)v35 + 3sub_10004ACAC(2, 1, 1) = v394;
      *((void *)v35 + 3sub_10004ACAC(3, 1, 2) = v390;
      *((void *)v35 + 33) = v386;
      *((void *)v35 + 34) = v382;
      *((void *)v35 + 35) = v378;
      *((void *)v35 + 36) = v374;
      *((void *)v35 + 37) = v370;
      *((void *)v35 + 38) = v366;
      *((void *)v35 + 39) = v362;
      *((void *)v35 + 40) = v358;
      *((void *)v35 + 4sub_10004ACAC(2, 1, 1) = v354;
      *((void *)v35 + 4sub_10004ACAC(3, 1, 2) = v350;
      *((void *)v35 + 43) = v346;
      *((void *)v35 + 44) = v342;
      *((void *)v35 + 45) = v338;
      *((void *)v35 + 46) = v334;
      *((void *)v35 + 47) = v330;
      *((void *)v35 + 48) = v326;
      *((void *)v35 + 49) = v322;
      *((void *)v35 + 50) = v318;
      *((void *)v35 + 5sub_10004ACAC(2, 1, 1) = v314;
      *((void *)v35 + 5sub_10004ACAC(3, 1, 2) = v310;
      *((void *)v35 + 53) = v306;
      *((void *)v35 + 54) = v302;
      *((void *)v35 + 55) = v298;
      *((void *)v35 + 56) = v294;
      *((void *)v35 + 57) = v290;
      *((void *)v35 + 58) = v286;
      *((void *)v35 + 59) = v282;
      *((void *)v35 + 60) = v278;
      *((void *)v35 + 6sub_10004ACAC(2, 1, 1) = v274;
      *((void *)v35 + 6sub_10004ACAC(3, 1, 2) = v270;
      *((void *)v35 + 63) = v266;
      *((void *)v35 + 64) = v262;
      *((void *)v35 + 65) = v258;
      *((void *)v35 + 66) = v254;
      *((void *)v35 + 67) = v250;
      *((void *)v35 + 68) = v246;
      *((void *)v35 + 69) = v242;
      *((void *)v35 + 70) = v238;
      *((void *)v35 + 7sub_10004ACAC(2, 1, 1) = v234;
      *((void *)v35 + 7sub_10004ACAC(3, 1, 2) = v230;
      *((void *)v35 + 73) = v226;
      *((void *)v35 + 74) = v222;
      *((void *)v35 + 75) = v218;
      *((void *)v35 + 76) = v214;
      *((void *)v35 + 77) = v210;
      *((void *)v35 + 78) = v207;
      *((void *)v35 + 79) = v130;
      *((_OWORD *)v35 + 40) = v131;
      *((_OWORD *)v35 + 4sub_10004ACAC(2, 1, 1) = v132;
      *((_OWORD *)v35 + 4sub_10004ACAC(3, 1, 2) = v134;
      *((_OWORD *)v35 + 43) = v136;
      *((_OWORD *)v35 + 44) = v139;
      *((_OWORD *)v35 + 45) = v143;
      *((_OWORD *)v35 + 46) = v146;
      *((_OWORD *)v35 + 47) = v151;
      *((void *)v35 + 96) = v155;
      *((void *)v35 + 97) = v159;
      *((void *)v35 + 98) = v162;
      *((void *)v35 + 99) = v166;
      *((void *)v35 + 100) = v170;
      *((void *)v35 + 10sub_10004ACAC(2, 1, 1) = v173;
      *((void *)v35 + 10sub_10004ACAC(3, 1, 2) = v177;
      *((void *)v35 + 103) = v198;
      *((_WORD *)v35 + 418) = v201;
      *((_DWORD *)v35 + 208) = v204;
      uint64_t v10 = v519;
      *((unsigned char *)v496 + v527[8]) = *((unsigned char *)v515 + v527[8]);
      (*(void (**)(void))(v519 + 56))();
      a3 = v506;
      uint64_t v11 = v501;
      uint64_t v4 = v511;
      goto LABEL_17;
    }
LABEL_7:
    uint64_t v21 = sub_100012894((uint64_t *)&unk_1004D0EF0);
    memcpy(v12, v8, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_18;
  }
  if (v13)
  {
    sub_10009DA74((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
    goto LABEL_7;
  }
  v502 = v11;
  uint64_t v507 = a3;
  v512 = v4;
  uint64_t v520 = v10;
  *uint64_t v12 = *v8;
  v12[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[2] = v8[2];
  v12[3] = v8[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(int *)(v9 + 24);
  uint64_t v23 = (char *)v12 + v22;
  v516 = v8;
  uint64_t v24 = (char *)v8 + v22;
  uint64_t v25 = type metadata accessor for MeasurementCapture();
  uint64_t v26 = *(void *)(v25 - 8);
  long long v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  v524 = v5;
  if (!v28)
  {
    if (!v29)
    {
      uint64_t v126 = type metadata accessor for URL();
      uint64_t v127 = *(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 24);
      v127(v23, v24, v126);
      v127(&v23[*(int *)(v25 + 20)], &v24[*(int *)(v25 + 20)], v126);
      goto LABEL_16;
    }
    sub_10009DA74((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for MeasurementCapture);
    goto LABEL_15;
  }
  if (v29)
  {
LABEL_15:
    uint64_t v46 = sub_100012894((uint64_t *)&unk_1004CE670);
    memcpy(v23, v24, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_16;
  }
  uint64_t v30 = type metadata accessor for URL();
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
  v31(v23, v24, v30);
  v31(&v23[*(int *)(v25 + 20)], &v24[*(int *)(v25 + 20)], v30);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_16:
  uint64_t v47 = v527[7];
  uint64_t v48 = (char *)v12 + v47;
  uint64_t v49 = (char *)v516 + v47;
  uint64_t v488 = *((void *)v49 + 5);
  uint64_t v483 = *((void *)v49 + 6);
  uint64_t v478 = *((void *)v49 + 7);
  uint64_t v473 = *((void *)v49 + 8);
  uint64_t v468 = *((void *)v49 + 9);
  uint64_t v463 = *((void *)v49 + 10);
  uint64_t v459 = *((void *)v49 + 11);
  uint64_t v455 = *((void *)v49 + 12);
  uint64_t v451 = *((void *)v49 + 13);
  uint64_t v447 = *((void *)v49 + 14);
  uint64_t v443 = *((void *)v49 + 15);
  uint64_t v439 = *((void *)v49 + 16);
  uint64_t v435 = *((void *)v49 + 17);
  uint64_t v431 = *((void *)v49 + 18);
  uint64_t v427 = *((void *)v49 + 19);
  uint64_t v423 = *((void *)v49 + 20);
  uint64_t v419 = *((void *)v49 + 21);
  uint64_t v415 = *((void *)v49 + 22);
  uint64_t v411 = *((void *)v49 + 23);
  uint64_t v407 = *((void *)v49 + 24);
  uint64_t v403 = *((void *)v49 + 25);
  uint64_t v399 = *((void *)v49 + 26);
  uint64_t v395 = *((void *)v49 + 27);
  uint64_t v391 = *((void *)v49 + 28);
  uint64_t v387 = *((void *)v49 + 29);
  uint64_t v383 = *((void *)v49 + 30);
  uint64_t v379 = *((void *)v49 + 31);
  uint64_t v375 = *((void *)v49 + 32);
  uint64_t v371 = *((void *)v49 + 33);
  uint64_t v367 = *((void *)v49 + 34);
  uint64_t v363 = *((void *)v49 + 35);
  uint64_t v359 = *((void *)v49 + 36);
  uint64_t v355 = *((void *)v49 + 37);
  uint64_t v351 = *((void *)v49 + 38);
  uint64_t v347 = *((void *)v49 + 39);
  uint64_t v343 = *((void *)v49 + 40);
  uint64_t v339 = *((void *)v49 + 41);
  uint64_t v335 = *((void *)v49 + 42);
  uint64_t v331 = *((void *)v49 + 43);
  uint64_t v327 = *((void *)v49 + 44);
  uint64_t v323 = *((void *)v49 + 45);
  uint64_t v319 = *((void *)v49 + 46);
  uint64_t v315 = *((void *)v49 + 47);
  uint64_t v311 = *((void *)v49 + 48);
  uint64_t v307 = *((void *)v49 + 49);
  uint64_t v303 = *((void *)v49 + 50);
  uint64_t v299 = *((void *)v49 + 51);
  uint64_t v295 = *((void *)v49 + 52);
  uint64_t v291 = *((void *)v49 + 53);
  uint64_t v287 = *((void *)v49 + 54);
  uint64_t v283 = *((void *)v49 + 55);
  uint64_t v279 = *((void *)v49 + 56);
  uint64_t v275 = *((void *)v49 + 57);
  uint64_t v271 = *((void *)v49 + 58);
  uint64_t v267 = *((void *)v49 + 59);
  uint64_t v263 = *((void *)v49 + 60);
  uint64_t v259 = *((void *)v49 + 61);
  uint64_t v255 = *((void *)v49 + 62);
  uint64_t v251 = *((void *)v49 + 63);
  uint64_t v247 = *((void *)v49 + 64);
  uint64_t v243 = *((void *)v49 + 65);
  uint64_t v239 = *((void *)v49 + 66);
  uint64_t v235 = *((void *)v49 + 67);
  uint64_t v231 = *((void *)v49 + 68);
  uint64_t v227 = *((void *)v49 + 69);
  uint64_t v223 = *((void *)v49 + 70);
  uint64_t v219 = *((void *)v49 + 71);
  uint64_t v215 = *((void *)v49 + 72);
  uint64_t v211 = *((void *)v49 + 73);
  uint64_t v208 = *((void *)v49 + 74);
  uint64_t v205 = *((void *)v49 + 75);
  uint64_t v202 = *((void *)v49 + 76);
  uint64_t v199 = *((void *)v49 + 77);
  uint64_t v196 = *((void *)v49 + 78);
  uint64_t v193 = *((void *)v49 + 79);
  long long v137 = *((_OWORD *)v49 + 40);
  v497 = v12;
  uint64_t v140 = *((void *)v49 + 82);
  uint64_t v50 = *((void *)v49 + 83);
  long long v142 = *((_OWORD *)v49 + 42);
  uint64_t v51 = *((void *)v49 + 86);
  uint64_t v145 = *((void *)v49 + 87);
  uint64_t v52 = *((void *)v49 + 88);
  long long v147 = *(_OWORD *)(v49 + 712);
  long long v152 = *(_OWORD *)(v49 + 728);
  uint64_t v156 = *((void *)v49 + 93);
  long long v160 = *((_OWORD *)v49 + 47);
  uint64_t v164 = *((void *)v49 + 96);
  uint64_t v167 = *((void *)v49 + 97);
  uint64_t v171 = *((void *)v49 + 98);
  uint64_t v174 = *((void *)v49 + 99);
  uint64_t v178 = *((void *)v49 + 100);
  uint64_t v180 = *((void *)v49 + 101);
  uint64_t v183 = *((void *)v49 + 102);
  uint64_t v186 = *((void *)v49 + 103);
  __int16 v189 = *((_WORD *)v49 + 418);
  int v191 = *((_DWORD *)v49 + 208);
  uint64_t v53 = *(void *)v49;
  uint64_t v54 = *((void *)v49 + 1);
  uint64_t v55 = *((void *)v49 + 2);
  uint64_t v56 = *((void *)v49 + 4);
  uint64_t v57 = *((void *)v49 + 3);
  sub_100098C10(*(void *)v49, v54, v55, v57, v56, v488, v483, v478, v473, v468, v463, v459, v455, v451, v447, v443, v439, v435, v431,
    v427,
    v423,
    v419,
    v415,
    v411);
  uint64_t v58 = *(void *)v48;
  uint64_t v59 = *((void *)v48 + 1);
  *(void *)uint64_t v48 = v53;
  *((void *)v48 + sub_10004ACAC(2, 1, 1) = v54;
  uint64_t v60 = *((void *)v48 + 2);
  uint64_t v61 = *((void *)v48 + 3);
  *((void *)v48 + sub_10004ACAC(3, 1, 2) = v55;
  *((void *)v48 + 3) = v57;
  uint64_t v62 = *((void *)v48 + 4);
  uint64_t v63 = *((void *)v48 + 5);
  *((void *)v48 + 4) = v56;
  *((void *)v48 + 5) = v488;
  uint64_t v64 = *((void *)v48 + 6);
  uint64_t v65 = *((void *)v48 + 7);
  *((void *)v48 + 6) = v483;
  *((void *)v48 + 7) = v478;
  long long v489 = *((_OWORD *)v48 + 4);
  long long v484 = *((_OWORD *)v48 + 5);
  *((void *)v48 + 8) = v473;
  *((void *)v48 + 9) = v468;
  *((void *)v48 + 10) = v463;
  *((void *)v48 + 1sub_10004ACAC(2, 1, 1) = v459;
  long long v479 = *((_OWORD *)v48 + 6);
  long long v474 = *((_OWORD *)v48 + 7);
  *((void *)v48 + 1sub_10004ACAC(3, 1, 2) = v455;
  *((void *)v48 + 13) = v451;
  *((void *)v48 + 14) = v447;
  *((void *)v48 + 15) = v443;
  long long v469 = *((_OWORD *)v48 + 8);
  long long v464 = *((_OWORD *)v48 + 9);
  *((void *)v48 + 16) = v439;
  *((void *)v48 + 17) = v435;
  *((void *)v48 + 18) = v431;
  *((void *)v48 + 19) = v427;
  *((void *)v48 + 20) = v423;
  *((void *)v48 + 2sub_10004ACAC(2, 1, 1) = v419;
  *((void *)v48 + 2sub_10004ACAC(3, 1, 2) = v415;
  *((void *)v48 + 23) = v411;
  *((void *)v48 + 24) = v407;
  *((void *)v48 + 25) = v403;
  *((void *)v48 + 26) = v399;
  *((void *)v48 + 27) = v395;
  *((void *)v48 + 28) = v391;
  *((void *)v48 + 29) = v387;
  *((void *)v48 + 30) = v383;
  *((void *)v48 + 3sub_10004ACAC(2, 1, 1) = v379;
  *((void *)v48 + 3sub_10004ACAC(3, 1, 2) = v375;
  *((void *)v48 + 33) = v371;
  *((void *)v48 + 34) = v367;
  *((void *)v48 + 35) = v363;
  *((void *)v48 + 36) = v359;
  *((void *)v48 + 37) = v355;
  *((void *)v48 + 38) = v351;
  *((void *)v48 + 39) = v347;
  *((void *)v48 + 40) = v343;
  *((void *)v48 + 4sub_10004ACAC(2, 1, 1) = v339;
  *((void *)v48 + 4sub_10004ACAC(3, 1, 2) = v335;
  *((void *)v48 + 43) = v331;
  *((void *)v48 + 44) = v327;
  *((void *)v48 + 45) = v323;
  *((void *)v48 + 46) = v319;
  *((void *)v48 + 47) = v315;
  *((void *)v48 + 48) = v311;
  *((void *)v48 + 49) = v307;
  *((void *)v48 + 50) = v303;
  *((void *)v48 + 5sub_10004ACAC(2, 1, 1) = v299;
  *((void *)v48 + 5sub_10004ACAC(3, 1, 2) = v295;
  *((void *)v48 + 53) = v291;
  *((void *)v48 + 54) = v287;
  *((void *)v48 + 55) = v283;
  *((void *)v48 + 56) = v279;
  *((void *)v48 + 57) = v275;
  *((void *)v48 + 58) = v271;
  *((void *)v48 + 59) = v267;
  *((void *)v48 + 60) = v263;
  *((void *)v48 + 6sub_10004ACAC(2, 1, 1) = v259;
  *((void *)v48 + 6sub_10004ACAC(3, 1, 2) = v255;
  *((void *)v48 + 63) = v251;
  *((void *)v48 + 64) = v247;
  *((void *)v48 + 65) = v243;
  *((void *)v48 + 66) = v239;
  *((void *)v48 + 67) = v235;
  *((void *)v48 + 68) = v231;
  *((void *)v48 + 69) = v227;
  *((void *)v48 + 70) = v223;
  *((void *)v48 + 7sub_10004ACAC(2, 1, 1) = v219;
  *((void *)v48 + 7sub_10004ACAC(3, 1, 2) = v215;
  *((void *)v48 + 73) = v211;
  *((void *)v48 + 74) = v208;
  *((void *)v48 + 75) = v205;
  *((void *)v48 + 76) = v202;
  *((void *)v48 + 77) = v199;
  *((void *)v48 + 78) = v196;
  *((void *)v48 + 79) = v193;
  *((_OWORD *)v48 + 40) = v137;
  *((void *)v48 + 8sub_10004ACAC(3, 1, 2) = v140;
  *((void *)v48 + 83) = v50;
  *((_OWORD *)v48 + 4sub_10004ACAC(3, 1, 2) = v142;
  *((void *)v48 + 86) = v51;
  *((void *)v48 + 87) = v145;
  *((void *)v48 + 88) = v52;
  *(_OWORD *)(v48 + 71sub_10004ACAC(3, 1, 2) = v147;
  *(_OWORD *)(v48 + 728) = v152;
  *((void *)v48 + 93) = v156;
  *((_OWORD *)v48 + 47) = v160;
  *((void *)v48 + 96) = v164;
  *((void *)v48 + 97) = v167;
  *((void *)v48 + 98) = v171;
  *((void *)v48 + 99) = v174;
  *((void *)v48 + 100) = v178;
  *((void *)v48 + 10sub_10004ACAC(2, 1, 1) = v180;
  *((void *)v48 + 10sub_10004ACAC(3, 1, 2) = v183;
  *((void *)v48 + 103) = v186;
  *((_WORD *)v48 + 418) = v189;
  *((_DWORD *)v48 + 208) = v191;
  sub_100027F20(v58, v59, v60, v61, v62, v63, v64, v65, v489, *((uint64_t *)&v489 + 1), v484, *((uint64_t *)&v484 + 1), v479, *((uint64_t *)&v479 + 1), v474, *((uint64_t *)&v474 + 1), v469, *((uint64_t *)&v469 + 1), v464,
    *((uint64_t *)&v464 + 1));
  uint64_t v10 = v520;
  *((unsigned char *)v497 + v527[8]) = *((unsigned char *)v516 + v527[8]);
  uint64_t v4 = v512;
  a3 = v507;
  uint64_t v11 = v502;
LABEL_17:
  uint64_t v5 = v524;
LABEL_18:
  uint64_t v66 = *(int *)(a3 + 24);
  uint64_t v67 = (void *)((char *)v4 + v66);
  uint64_t v68 = (void *)((char *)v5 + v66);
  int v69 = v11();
  uint64_t v70 = v67;
  int v71 = ((uint64_t (*)(void *, uint64_t, int *))v11)(v67, 1, v527);
  if (!v69)
  {
    if (v71)
    {
      sub_10009DA74((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
      goto LABEL_24;
    }
    v526 = v5;
    void *v68 = *v67;
    v68[1] = v67[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v68[2] = v67[2];
    v68[3] = v67[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v80 = v527[6];
    uint64_t v81 = (char *)v68 + v80;
    uint64_t v82 = (char *)v67 + v80;
    uint64_t v83 = type metadata accessor for MeasurementCapture();
    uint64_t v84 = *(void *)(v83 - 8);
    uint64_t v85 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 48);
    int v86 = v85(v81, 1, v83);
    int v87 = v85(v82, 1, v83);
    if (v86)
    {
      if (!v87)
      {
        uint64_t v88 = type metadata accessor for URL();
        uint64_t v89 = *(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16);
        v89(v81, v82, v88);
        v89(&v81[*(int *)(v83 + 20)], &v82[*(int *)(v83 + 20)], v88);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
LABEL_33:
        uint64_t v105 = v527[7];
        uint64_t v106 = (char *)v68 + v105;
        uint64_t v107 = (char *)v70 + v105;
        uint64_t v522 = *(void *)v107;
        uint64_t v509 = *((void *)v107 + 1);
        uint64_t v504 = *((void *)v107 + 2);
        uint64_t v499 = *((void *)v107 + 3);
        uint64_t v494 = *((void *)v107 + 4);
        uint64_t v491 = *((void *)v107 + 5);
        uint64_t v486 = *((void *)v107 + 6);
        uint64_t v481 = *((void *)v107 + 7);
        uint64_t v476 = *((void *)v107 + 8);
        uint64_t v471 = *((void *)v107 + 9);
        uint64_t v466 = *((void *)v107 + 10);
        uint64_t v461 = *((void *)v107 + 11);
        uint64_t v457 = *((void *)v107 + 12);
        uint64_t v453 = *((void *)v107 + 13);
        uint64_t v449 = *((void *)v107 + 14);
        uint64_t v445 = *((void *)v107 + 15);
        uint64_t v441 = *((void *)v107 + 16);
        uint64_t v437 = *((void *)v107 + 17);
        uint64_t v433 = *((void *)v107 + 18);
        uint64_t v429 = *((void *)v107 + 19);
        uint64_t v425 = *((void *)v107 + 20);
        uint64_t v421 = *((void *)v107 + 21);
        uint64_t v417 = *((void *)v107 + 22);
        uint64_t v413 = *((void *)v107 + 23);
        uint64_t v108 = *((void *)v107 + 25);
        uint64_t v409 = *((void *)v107 + 24);
        uint64_t v405 = *((void *)v107 + 26);
        uint64_t v401 = *((void *)v107 + 28);
        uint64_t v397 = *((void *)v107 + 29);
        uint64_t v393 = *((void *)v107 + 30);
        uint64_t v389 = *((void *)v107 + 31);
        uint64_t v385 = *((void *)v107 + 32);
        uint64_t v381 = *((void *)v107 + 33);
        uint64_t v377 = *((void *)v107 + 34);
        uint64_t v373 = *((void *)v107 + 35);
        uint64_t v369 = *((void *)v107 + 36);
        uint64_t v365 = *((void *)v107 + 37);
        uint64_t v361 = *((void *)v107 + 38);
        uint64_t v357 = *((void *)v107 + 39);
        uint64_t v353 = *((void *)v107 + 40);
        uint64_t v349 = *((void *)v107 + 41);
        uint64_t v345 = *((void *)v107 + 42);
        uint64_t v341 = *((void *)v107 + 43);
        uint64_t v337 = *((void *)v107 + 44);
        uint64_t v333 = *((void *)v107 + 45);
        uint64_t v329 = *((void *)v107 + 46);
        uint64_t v325 = *((void *)v107 + 47);
        uint64_t v321 = *((void *)v107 + 48);
        uint64_t v317 = *((void *)v107 + 49);
        uint64_t v313 = *((void *)v107 + 50);
        uint64_t v309 = *((void *)v107 + 51);
        uint64_t v305 = *((void *)v107 + 52);
        uint64_t v301 = *((void *)v107 + 53);
        uint64_t v297 = *((void *)v107 + 54);
        uint64_t v293 = *((void *)v107 + 55);
        uint64_t v289 = *((void *)v107 + 56);
        uint64_t v285 = *((void *)v107 + 57);
        uint64_t v281 = *((void *)v107 + 58);
        uint64_t v277 = *((void *)v107 + 59);
        uint64_t v273 = *((void *)v107 + 60);
        uint64_t v269 = *((void *)v107 + 61);
        uint64_t v265 = *((void *)v107 + 62);
        uint64_t v261 = *((void *)v107 + 63);
        uint64_t v257 = *((void *)v107 + 64);
        uint64_t v253 = *((void *)v107 + 65);
        uint64_t v249 = *((void *)v107 + 66);
        uint64_t v245 = *((void *)v107 + 67);
        uint64_t v241 = *((void *)v107 + 68);
        uint64_t v237 = *((void *)v107 + 69);
        uint64_t v233 = *((void *)v107 + 70);
        uint64_t v229 = *((void *)v107 + 71);
        uint64_t v225 = *((void *)v107 + 72);
        uint64_t v221 = *((void *)v107 + 73);
        uint64_t v217 = *((void *)v107 + 74);
        uint64_t v213 = *((void *)v107 + 75);
        v518 = v70;
        uint64_t v209 = *((void *)v107 + 76);
        uint64_t v206 = *((void *)v107 + 77);
        uint64_t v203 = *((void *)v107 + 78);
        uint64_t v149 = *((void *)v107 + 79);
        uint64_t v109 = *((void *)v107 + 80);
        v514 = v68;
        uint64_t v110 = *((void *)v107 + 81);
        uint64_t v111 = *((void *)v107 + 82);
        uint64_t v112 = *((void *)v107 + 83);
        uint64_t v113 = *((void *)v107 + 84);
        uint64_t v150 = *((void *)v107 + 85);
        uint64_t v114 = *((void *)v107 + 86);
        uint64_t v115 = *((void *)v107 + 87);
        long long v154 = *((_OWORD *)v107 + 44);
        long long v158 = *((_OWORD *)v107 + 45);
        long long v163 = *((_OWORD *)v107 + 46);
        long long v169 = *((_OWORD *)v107 + 47);
        uint64_t v176 = *((void *)v107 + 96);
        uint64_t v179 = *((void *)v107 + 97);
        uint64_t v182 = *((void *)v107 + 98);
        uint64_t v185 = *((void *)v107 + 99);
        uint64_t v188 = *((void *)v107 + 100);
        uint64_t v190 = *((void *)v107 + 101);
        uint64_t v192 = *((void *)v107 + 102);
        uint64_t v195 = *((void *)v107 + 103);
        __int16 v197 = *((_WORD *)v107 + 418);
        int v200 = *((_DWORD *)v107 + 208);
        uint64_t v116 = *((void *)v107 + 27);
        sub_100098C10(*(void *)v107, v509, v504, v499, v494, v491, v486, v481, v476, v471, v466, v461, v457, v453, v449, v445, v441, v437, v433,
          v429,
          v425,
          v421,
          v417,
          v413);
        uint64_t v117 = *(void *)v106;
        uint64_t v118 = *((void *)v106 + 1);
        *(void *)uint64_t v106 = v522;
        *((void *)v106 + sub_10004ACAC(2, 1, 1) = v509;
        uint64_t v119 = *((void *)v106 + 2);
        uint64_t v120 = *((void *)v106 + 3);
        *((void *)v106 + sub_10004ACAC(3, 1, 2) = v504;
        *((void *)v106 + 3) = v499;
        uint64_t v121 = *((void *)v106 + 4);
        uint64_t v122 = *((void *)v106 + 5);
        *((void *)v106 + 4) = v494;
        *((void *)v106 + 5) = v491;
        uint64_t v123 = *((void *)v106 + 6);
        uint64_t v124 = *((void *)v106 + 7);
        *((void *)v106 + 6) = v486;
        *((void *)v106 + 7) = v481;
        long long v523 = *((_OWORD *)v106 + 4);
        long long v510 = *((_OWORD *)v106 + 5);
        *((void *)v106 + 8) = v476;
        *((void *)v106 + 9) = v471;
        *((void *)v106 + 10) = v466;
        *((void *)v106 + 1sub_10004ACAC(2, 1, 1) = v461;
        long long v500 = *((_OWORD *)v106 + 7);
        long long v505 = *((_OWORD *)v106 + 6);
        *((void *)v106 + 1sub_10004ACAC(3, 1, 2) = v457;
        *((void *)v106 + 13) = v453;
        *((void *)v106 + 14) = v449;
        *((void *)v106 + 15) = v445;
        long long v495 = *((_OWORD *)v106 + 8);
        long long v492 = *((_OWORD *)v106 + 9);
        *((void *)v106 + 16) = v441;
        *((void *)v106 + 17) = v437;
        *((void *)v106 + 18) = v433;
        *((void *)v106 + 19) = v429;
        *((void *)v106 + 20) = v425;
        *((void *)v106 + 2sub_10004ACAC(2, 1, 1) = v421;
        *((void *)v106 + 2sub_10004ACAC(3, 1, 2) = v417;
        *((void *)v106 + 23) = v413;
        *((void *)v106 + 24) = v409;
        *((void *)v106 + 25) = v108;
        *((void *)v106 + 26) = v405;
        *((void *)v106 + 27) = v116;
        *((void *)v106 + 28) = v401;
        *((void *)v106 + 29) = v397;
        *((void *)v106 + 30) = v393;
        *((void *)v106 + 3sub_10004ACAC(2, 1, 1) = v389;
        *((void *)v106 + 3sub_10004ACAC(3, 1, 2) = v385;
        *((void *)v106 + 33) = v381;
        *((void *)v106 + 34) = v377;
        *((void *)v106 + 35) = v373;
        *((void *)v106 + 36) = v369;
        *((void *)v106 + 37) = v365;
        *((void *)v106 + 38) = v361;
        *((void *)v106 + 39) = v357;
        *((void *)v106 + 40) = v353;
        *((void *)v106 + 4sub_10004ACAC(2, 1, 1) = v349;
        *((void *)v106 + 4sub_10004ACAC(3, 1, 2) = v345;
        *((void *)v106 + 43) = v341;
        *((void *)v106 + 44) = v337;
        *((void *)v106 + 45) = v333;
        *((void *)v106 + 46) = v329;
        *((void *)v106 + 47) = v325;
        *((void *)v106 + 48) = v321;
        *((void *)v106 + 49) = v317;
        *((void *)v106 + 50) = v313;
        *((void *)v106 + 5sub_10004ACAC(2, 1, 1) = v309;
        *((void *)v106 + 5sub_10004ACAC(3, 1, 2) = v305;
        *((void *)v106 + 53) = v301;
        *((void *)v106 + 54) = v297;
        *((void *)v106 + 55) = v293;
        *((void *)v106 + 56) = v289;
        *((void *)v106 + 57) = v285;
        *((void *)v106 + 58) = v281;
        *((void *)v106 + 59) = v277;
        *((void *)v106 + 60) = v273;
        *((void *)v106 + 6sub_10004ACAC(2, 1, 1) = v269;
        *((void *)v106 + 6sub_10004ACAC(3, 1, 2) = v265;
        *((void *)v106 + 63) = v261;
        *((void *)v106 + 64) = v257;
        *((void *)v106 + 65) = v253;
        *((void *)v106 + 66) = v249;
        *((void *)v106 + 67) = v245;
        *((void *)v106 + 68) = v241;
        *((void *)v106 + 69) = v237;
        *((void *)v106 + 70) = v233;
        *((void *)v106 + 7sub_10004ACAC(2, 1, 1) = v229;
        *((void *)v106 + 7sub_10004ACAC(3, 1, 2) = v225;
        *((void *)v106 + 73) = v221;
        *((void *)v106 + 74) = v217;
        *((void *)v106 + 75) = v213;
        *((void *)v106 + 76) = v209;
        *((void *)v106 + 77) = v206;
        *((void *)v106 + 78) = v203;
        *((void *)v106 + 79) = v149;
        *((void *)v106 + 80) = v109;
        *((void *)v106 + 8sub_10004ACAC(2, 1, 1) = v110;
        *((void *)v106 + 8sub_10004ACAC(3, 1, 2) = v111;
        *((void *)v106 + 83) = v112;
        *((void *)v106 + 84) = v113;
        *((void *)v106 + 85) = v150;
        *((void *)v106 + 86) = v114;
        *((void *)v106 + 87) = v115;
        *((_OWORD *)v106 + 44) = v154;
        *((_OWORD *)v106 + 45) = v158;
        *((_OWORD *)v106 + 46) = v163;
        *((_OWORD *)v106 + 47) = v169;
        *((void *)v106 + 96) = v176;
        *((void *)v106 + 97) = v179;
        *((void *)v106 + 98) = v182;
        *((void *)v106 + 99) = v185;
        *((void *)v106 + 100) = v188;
        *((void *)v106 + 10sub_10004ACAC(2, 1, 1) = v190;
        *((void *)v106 + 10sub_10004ACAC(3, 1, 2) = v192;
        *((void *)v106 + 103) = v195;
        *((_WORD *)v106 + 418) = v197;
        *((_DWORD *)v106 + 208) = v200;
        sub_100027F20(v117, v118, v119, v120, v121, v122, v123, v124, v523, *((uint64_t *)&v523 + 1), v510, *((uint64_t *)&v510 + 1), v505, *((uint64_t *)&v505 + 1), v500, *((uint64_t *)&v500 + 1), v495, *((uint64_t *)&v495 + 1), v492,
          *((uint64_t *)&v492 + 1));
        uint64_t v5 = v526;
        *((unsigned char *)v514 + v527[8]) = *((unsigned char *)v518 + v527[8]);
        return v5;
      }
    }
    else
    {
      if (!v87)
      {
        uint64_t v128 = type metadata accessor for URL();
        uint64_t v129 = *(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 24);
        v129(v81, v82, v128);
        v129(&v81[*(int *)(v83 + 20)], &v82[*(int *)(v83 + 20)], v128);
        goto LABEL_33;
      }
      sub_10009DA74((uint64_t)v81, (uint64_t (*)(void))type metadata accessor for MeasurementCapture);
    }
    uint64_t v104 = sub_100012894((uint64_t *)&unk_1004CE670);
    memcpy(v81, v82, *(void *)(*(void *)(v104 - 8) + 64));
    goto LABEL_33;
  }
  if (v71)
  {
LABEL_24:
    uint64_t v79 = sub_100012894((uint64_t *)&unk_1004D0EF0);
    memcpy(v68, v67, *(void *)(*(void *)(v79 - 8) + 64));
    return v5;
  }
  uint64_t v521 = v10;
  v525 = v5;
  void *v68 = *v67;
  v68[1] = v67[1];
  v68[2] = v67[2];
  v68[3] = v67[3];
  uint64_t v72 = v527[6];
  uint64_t v73 = (char *)v68 + v72;
  uint64_t v74 = (char *)v67 + v72;
  uint64_t v75 = type metadata accessor for MeasurementCapture();
  uint64_t v76 = *(void *)(v75 - 8);
  uint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v77(v74, 1, v75))
  {
    uint64_t v78 = sub_100012894((uint64_t *)&unk_1004CE670);
    memcpy(v73, v74, *(void *)(*(void *)(v78 - 8) + 64));
  }
  else
  {
    uint64_t v90 = type metadata accessor for URL();
    uint64_t v91 = *(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16);
    v91(v73, v74, v90);
    v91(&v73[*(int *)(v75 + 20)], &v74[*(int *)(v75 + 20)], v90);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
  }
  uint64_t v92 = v527[7];
  v513 = v68;
  v517 = v70;
  uint64_t v93 = (char *)v68 + v92;
  uint64_t v94 = (char *)v70 + v92;
  uint64_t v508 = *((void *)v94 + 9);
  uint64_t v503 = *((void *)v94 + 10);
  uint64_t v498 = *((void *)v94 + 11);
  uint64_t v493 = *((void *)v94 + 12);
  uint64_t v490 = *((void *)v94 + 13);
  uint64_t v485 = *((void *)v94 + 14);
  uint64_t v480 = *((void *)v94 + 15);
  uint64_t v475 = *((void *)v94 + 16);
  uint64_t v470 = *((void *)v94 + 17);
  uint64_t v465 = *((void *)v94 + 18);
  uint64_t v460 = *((void *)v94 + 19);
  uint64_t v456 = *((void *)v94 + 20);
  uint64_t v452 = *((void *)v94 + 21);
  uint64_t v448 = *((void *)v94 + 22);
  uint64_t v444 = *((void *)v94 + 23);
  uint64_t v440 = *((void *)v94 + 24);
  uint64_t v436 = *((void *)v94 + 25);
  uint64_t v432 = *((void *)v94 + 26);
  uint64_t v428 = *((void *)v94 + 27);
  uint64_t v424 = *((void *)v94 + 28);
  uint64_t v420 = *((void *)v94 + 29);
  uint64_t v416 = *((void *)v94 + 30);
  uint64_t v412 = *((void *)v94 + 31);
  uint64_t v408 = *((void *)v94 + 32);
  uint64_t v404 = *((void *)v94 + 33);
  uint64_t v400 = *((void *)v94 + 34);
  uint64_t v396 = *((void *)v94 + 35);
  uint64_t v392 = *((void *)v94 + 36);
  uint64_t v388 = *((void *)v94 + 37);
  uint64_t v384 = *((void *)v94 + 38);
  uint64_t v380 = *((void *)v94 + 39);
  uint64_t v376 = *((void *)v94 + 40);
  uint64_t v372 = *((void *)v94 + 41);
  uint64_t v368 = *((void *)v94 + 42);
  uint64_t v364 = *((void *)v94 + 43);
  uint64_t v360 = *((void *)v94 + 44);
  uint64_t v356 = *((void *)v94 + 45);
  uint64_t v352 = *((void *)v94 + 46);
  uint64_t v348 = *((void *)v94 + 47);
  uint64_t v344 = *((void *)v94 + 48);
  uint64_t v340 = *((void *)v94 + 49);
  uint64_t v336 = *((void *)v94 + 50);
  uint64_t v332 = *((void *)v94 + 51);
  uint64_t v328 = *((void *)v94 + 52);
  uint64_t v324 = *((void *)v94 + 53);
  uint64_t v320 = *((void *)v94 + 54);
  uint64_t v316 = *((void *)v94 + 55);
  uint64_t v312 = *((void *)v94 + 56);
  uint64_t v308 = *((void *)v94 + 57);
  uint64_t v304 = *((void *)v94 + 58);
  uint64_t v300 = *((void *)v94 + 59);
  uint64_t v296 = *((void *)v94 + 60);
  uint64_t v292 = *((void *)v94 + 61);
  uint64_t v288 = *((void *)v94 + 62);
  uint64_t v284 = *((void *)v94 + 63);
  uint64_t v280 = *((void *)v94 + 64);
  uint64_t v276 = *((void *)v94 + 65);
  uint64_t v272 = *((void *)v94 + 66);
  uint64_t v268 = *((void *)v94 + 67);
  uint64_t v264 = *((void *)v94 + 68);
  uint64_t v260 = *((void *)v94 + 69);
  uint64_t v256 = *((void *)v94 + 70);
  uint64_t v252 = *((void *)v94 + 71);
  uint64_t v248 = *((void *)v94 + 72);
  uint64_t v244 = *((void *)v94 + 73);
  uint64_t v240 = *((void *)v94 + 74);
  uint64_t v236 = *((void *)v94 + 75);
  uint64_t v232 = *((void *)v94 + 76);
  uint64_t v228 = *((void *)v94 + 77);
  uint64_t v224 = *((void *)v94 + 78);
  uint64_t v133 = *((void *)v94 + 79);
  long long v135 = *((_OWORD *)v94 + 40);
  long long v138 = *((_OWORD *)v94 + 41);
  long long v141 = *((_OWORD *)v94 + 42);
  long long v144 = *((_OWORD *)v94 + 43);
  long long v148 = *((_OWORD *)v94 + 44);
  long long v153 = *((_OWORD *)v94 + 45);
  uint64_t v157 = *((void *)v94 + 92);
  long long v161 = *(_OWORD *)(v94 + 744);
  uint64_t v165 = *((void *)v94 + 95);
  uint64_t v168 = *((void *)v94 + 96);
  uint64_t v172 = *((void *)v94 + 97);
  uint64_t v175 = *((void *)v94 + 98);
  uint64_t v181 = *((void *)v94 + 99);
  uint64_t v184 = *((void *)v94 + 100);
  uint64_t v187 = *((void *)v94 + 101);
  uint64_t v194 = *((void *)v94 + 102);
  uint64_t v212 = *((void *)v94 + 103);
  __int16 v216 = *((_WORD *)v94 + 418);
  int v220 = *((_DWORD *)v94 + 208);
  uint64_t v95 = *((void *)v94 + 8);
  uint64_t v96 = *(void *)v94;
  uint64_t v97 = *((void *)v94 + 1);
  uint64_t v98 = *((void *)v94 + 2);
  uint64_t v99 = *((void *)v94 + 3);
  uint64_t v100 = *((void *)v94 + 4);
  uint64_t v101 = *((void *)v94 + 5);
  uint64_t v102 = *((void *)v94 + 6);
  uint64_t v103 = *((void *)v94 + 7);
  sub_100098C10(*(void *)v94, v97, v98, v99, v100, v101, v102, v103, v95, v508, v503, v498, v493, v490, v485, v480, v475, v470, v465,
    v460,
    v456,
    v452,
    v448,
    v444);
  *(void *)uint64_t v93 = v96;
  *((void *)v93 + sub_10004ACAC(2, 1, 1) = v97;
  *((void *)v93 + sub_10004ACAC(3, 1, 2) = v98;
  *((void *)v93 + 3) = v99;
  *((void *)v93 + 4) = v100;
  *((void *)v93 + 5) = v101;
  *((void *)v93 + 6) = v102;
  *((void *)v93 + 7) = v103;
  *((void *)v93 + 8) = v95;
  *((void *)v93 + 9) = v508;
  *((void *)v93 + 10) = v503;
  *((void *)v93 + 1sub_10004ACAC(2, 1, 1) = v498;
  *((void *)v93 + 1sub_10004ACAC(3, 1, 2) = v493;
  *((void *)v93 + 13) = v490;
  *((void *)v93 + 14) = v485;
  *((void *)v93 + 15) = v480;
  *((void *)v93 + 16) = v475;
  *((void *)v93 + 17) = v470;
  *((void *)v93 + 18) = v465;
  *((void *)v93 + 19) = v460;
  *((void *)v93 + 20) = v456;
  *((void *)v93 + 2sub_10004ACAC(2, 1, 1) = v452;
  *((void *)v93 + 2sub_10004ACAC(3, 1, 2) = v448;
  *((void *)v93 + 23) = v444;
  *((void *)v93 + 24) = v440;
  *((void *)v93 + 25) = v436;
  *((void *)v93 + 26) = v432;
  *((void *)v93 + 27) = v428;
  *((void *)v93 + 28) = v424;
  *((void *)v93 + 29) = v420;
  *((void *)v93 + 30) = v416;
  *((void *)v93 + 3sub_10004ACAC(2, 1, 1) = v412;
  *((void *)v93 + 3sub_10004ACAC(3, 1, 2) = v408;
  *((void *)v93 + 33) = v404;
  *((void *)v93 + 34) = v400;
  *((void *)v93 + 35) = v396;
  *((void *)v93 + 36) = v392;
  *((void *)v93 + 37) = v388;
  *((void *)v93 + 38) = v384;
  *((void *)v93 + 39) = v380;
  *((void *)v93 + 40) = v376;
  *((void *)v93 + 4sub_10004ACAC(2, 1, 1) = v372;
  *((void *)v93 + 4sub_10004ACAC(3, 1, 2) = v368;
  *((void *)v93 + 43) = v364;
  *((void *)v93 + 44) = v360;
  *((void *)v93 + 45) = v356;
  *((void *)v93 + 46) = v352;
  *((void *)v93 + 47) = v348;
  *((void *)v93 + 48) = v344;
  *((void *)v93 + 49) = v340;
  *((void *)v93 + 50) = v336;
  *((void *)v93 + 5sub_10004ACAC(2, 1, 1) = v332;
  *((void *)v93 + 5sub_10004ACAC(3, 1, 2) = v328;
  *((void *)v93 + 53) = v324;
  *((void *)v93 + 54) = v320;
  *((void *)v93 + 55) = v316;
  *((void *)v93 + 56) = v312;
  *((void *)v93 + 57) = v308;
  *((void *)v93 + 58) = v304;
  *((void *)v93 + 59) = v300;
  *((void *)v93 + 60) = v296;
  *((void *)v93 + 6sub_10004ACAC(2, 1, 1) = v292;
  *((void *)v93 + 6sub_10004ACAC(3, 1, 2) = v288;
  *((void *)v93 + 63) = v284;
  *((void *)v93 + 64) = v280;
  *((void *)v93 + 65) = v276;
  *((void *)v93 + 66) = v272;
  *((void *)v93 + 67) = v268;
  *((void *)v93 + 68) = v264;
  *((void *)v93 + 69) = v260;
  *((void *)v93 + 70) = v256;
  *((void *)v93 + 7sub_10004ACAC(2, 1, 1) = v252;
  *((void *)v93 + 7sub_10004ACAC(3, 1, 2) = v248;
  *((void *)v93 + 73) = v244;
  *((void *)v93 + 74) = v240;
  *((void *)v93 + 75) = v236;
  *((void *)v93 + 76) = v232;
  *((void *)v93 + 77) = v228;
  *((void *)v93 + 78) = v224;
  *((void *)v93 + 79) = v133;
  *((_OWORD *)v93 + 40) = v135;
  *((_OWORD *)v93 + 4sub_10004ACAC(2, 1, 1) = v138;
  *((_OWORD *)v93 + 4sub_10004ACAC(3, 1, 2) = v141;
  *((_OWORD *)v93 + 43) = v144;
  *((_OWORD *)v93 + 44) = v148;
  *((_OWORD *)v93 + 45) = v153;
  *((void *)v93 + 9sub_10004ACAC(3, 1, 2) = v157;
  *(_OWORD *)(v93 + 744) = v161;
  *((void *)v93 + 95) = v165;
  *((void *)v93 + 96) = v168;
  *((void *)v93 + 97) = v172;
  *((void *)v93 + 98) = v175;
  *((void *)v93 + 99) = v181;
  *((void *)v93 + 100) = v184;
  *((void *)v93 + 10sub_10004ACAC(2, 1, 1) = v187;
  *((void *)v93 + 10sub_10004ACAC(3, 1, 2) = v194;
  *((void *)v93 + 103) = v212;
  *((_WORD *)v93 + 418) = v216;
  *((_DWORD *)v93 + 208) = v220;
  *((unsigned char *)v513 + v527[8]) = *((unsigned char *)v517 + v527[8]);
  (*(void (**)(void))(v521 + 56))();
  return v525;
}