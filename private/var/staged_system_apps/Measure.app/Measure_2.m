void sub_1001291A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  CGFloat v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  float32x2_t v13;
  float32x2_t v14;
  long long v15;
  double Height;
  float64x2_t v17;
  float32x2_t v18;
  float32x2_t v19;
  float32x2_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void **v25;
  long long *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  long long v32;
  long long v33;
  long long v34;
  long long v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  long long v40;
  long long v41;
  long long v42;
  long long v43;
  double v44;
  void (*v45)(long long *__return_ptr, uint64_t);
  uint64_t v46;
  int v47;
  void (*v48)(long long *__return_ptr, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(id);
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(_OWORD *);
  void (*v59)(_OWORD *, void);
  uint64_t v60;
  uint64_t (*v61)(_OWORD *);
  void (*v62)(_OWORD *, void);
  uint64_t v63;
  uint64_t (*v64)(_OWORD *);
  void (*v65)(_OWORD *, void);
  uint64_t v66;
  char v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(long long *);
  void (*v73)(long long *, void);
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(long long *__return_ptr, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  int v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(long long *__return_ptr, uint64_t);
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  float v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  float v98;
  float v99;
  uint64_t (*v100)(long long *);
  void (*v101)(long long *, void);
  uint64_t v102;
  uint64_t v103;
  char v104;
  void (*v105)(long long *__return_ptr, uint64_t);
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(long long *__return_ptr, uint64_t);
  uint64_t v112;
  long long v113;
  long long v114;
  long long v115;
  long long v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  float v120;
  void (*v121)(void *__return_ptr, uint64_t);
  uint64_t v122;
  long long v123;
  long long v124;
  long long v125;
  long long v126;
  float v127;
  float v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t (*v132)(void *);
  void (*v133)(void *, void);
  uint64_t v134;
  uint64_t (*v135)(void *);
  void (*v136)(void *, void);
  uint64_t v137;
  char v138;
  uint64_t (*v139)(long long *);
  void (*v140)(long long *, void);
  uint64_t v141;
  void (*v142)(long long *__return_ptr, uint64_t);
  uint64_t v143;
  long long v144;
  long long v145;
  long long v146;
  long long v147;
  uint64_t (*v148)(long long *);
  void (*v149)(long long *, void);
  uint64_t v150;
  void *v151;
  uint64_t (*v152)(unsigned char *);
  void (*v153)(unsigned char *, void);
  uint64_t v154;
  void *v155;
  uint64_t (*v156)(unsigned char *);
  void (*v157)(unsigned char *, void);
  uint64_t v158;
  uint64_t (*v159)(unsigned char *);
  void (*v160)(unsigned char *, void);
  uint64_t v161;
  id v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  float v166;
  float v167;
  uint64_t (*v168)(unsigned char *);
  void (*v169)(unsigned char *, void);
  uint64_t v170;
  uint64_t v171;
  char isUniquelyReferenced_nonNull_native;
  long long v173;
  uint64_t v174;
  uint64_t (*v175)(unsigned char *);
  void (*v176)(unsigned char *, void);
  uint64_t v177;
  void *v178;
  uint64_t (*v179)(unsigned char *);
  void (*v180)(unsigned char *, void);
  long long v181;
  uint64_t v182;
  uint64_t (*v183)(unsigned char *);
  void (*v184)(unsigned char *, void);
  uint64_t v185;
  _OWORD v186[4];
  long long v187;
  void **v188;
  long long v189;
  float32x2_t v190;
  long long v191;
  long long v192;
  long long v193;
  uint64_t v194;
  unsigned char v195[32];
  long long v196;
  long long v197;
  long long v198;
  long long v199;
  long long v200;
  long long v201;
  char v202;
  void v203[18];
  char v204;
  long long v205;
  long long v206;
  long long v207;
  long long v208;
  long long v209;
  long long v210;
  long long v211;
  long long v212;
  long long v213;
  char v214;
  long long v215;
  long long v216;
  long long v217;
  long long v218;
  long long v219;
  long long v220;
  long long v221;
  long long v222;
  long long v223;
  char v224;
  long long v225;
  long long v226;
  long long v227;
  long long v228;
  long long v229;
  long long v230;
  long long v231;
  long long v232;
  long long v233;
  char v234;
  _OWORD v235[9];
  char v236;
  _OWORD v237[9];
  char v238;
  id v239[12];
  float32x2_t v240[12];
  void *v241;
  CGRect v242;

  v2 = v1;
  v4 = (void *)type metadata accessor for Date();
  v5 = *(v4 - 1);
  __chkstk_darwin(v4);
  v7 = (char *)v186 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1004C3238 != -1) {
    swift_once();
  }
  v8 = qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits;
  if (*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80))
  {
    __break(1u);
    goto LABEL_71;
  }
  v10 = *(double *)(v8 + 64);
  v9 = *(double *)(v8 + 72);
  v12 = *(double *)(v8 + 48);
  v11 = *(double *)(v8 + 56);
  SIMD2<>.init(_:)();
  v14 = v13;
  v242.origin.x = v12;
  v242.origin.y = v11;
  v242.size.width = v10;
  v242.size.height = v9;
  *(double *)&v15 = CGRectGetWidth(v242);
  v193 = v15;
  if (*(unsigned char *)(v8 + 80))
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  Height = CGRectGetHeight(*(CGRect *)(v8 + 48));
  if ((*(unsigned char *)(v8 + 80) & 1) == 0)
  {
    *(void *)&v17.f64[0] = v193;
    v17.f64[1] = Height;
    v18 = vcvt_f32_f64(v17);
    *(float *)&v10 = sqrtf(vaddv_f32(vmul_f32(v18, v18))) * 0.5;
    SIMD2<>.init(_:)();
    v20 = v19;
    swift_beginAccess();
    v21 = *(void *)(v2 + 88);
    v22 = *(void *)(v2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000A6768(v21, v22, (uint64_t)v239, v14, *(float *)&v10);
    v23 = v239[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = sub_100016FEC((uint64_t)v239, (uint64_t)&v241, &qword_1004CC340);
    if (!v241)
    {
      v58 = *(uint64_t (**)(_OWORD *))(**(void **)(v2 + 136) + 400);
      swift_retain();
      v59 = (void (*)(_OWORD *, void))v58(v237);
      *(void *)(v60 + 8) = 0;
      *(void *)(v60 + 16) = 0;
      swift_bridgeObjectRelease();
      v59(v237, 0);
      swift_release();
      v61 = *(uint64_t (**)(_OWORD *))(**(void **)(v2 + 136) + 400);
      swift_retain();
      v62 = (void (*)(_OWORD *, void))v61(v237);
      *(_DWORD *)(v63 + 24) = 0;
      *(unsigned char *)(v63 + 28) = 1;
      v62(v237, 0);
      swift_release();
      v64 = *(uint64_t (**)(_OWORD *))(**(void **)(v2 + 136) + 400);
      swift_retain();
      v65 = (void (*)(_OWORD *, void))v64(v237);
      *(unsigned char *)(v66 + 1) = 0;
      v65(v237, 0);
LABEL_64:
      swift_release();
      return;
    }
    v188 = (void **)v2;
    *(void *)&v193 = v23;
    v190 = (float32x2_t)a1;
    v25 = (void **)&swift_isaMask;
    v26 = *(long long **)((swift_isaMask & *v241) + 0x250);
    v27 = v241;
    v28 = ((uint64_t (*)(uint64_t))v26)(v24);
    if ((v28 & 0xC000000000000001) != 0)
    {
      v29 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_67;
      }
      v29 = *(id *)(v28 + 32);
    }
    v30 = v29;
    v31 = swift_bridgeObjectRelease();
    *(double *)&v32 = (*(double (**)(uint64_t))((swift_isaMask & *v30) + 0x2B0))(v31);
    v191 = v33;
    v192 = v32;
    v189 = v34;
    v187 = v35;

    v36 = ((uint64_t (*)(void))v26)();
    if ((v36 & 0xC000000000000001) == 0)
    {
      if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
      {
        __break(1u);
        goto LABEL_69;
      }
      v37 = *(id *)(v36 + 40);
LABEL_13:
      v38 = v37;
      v26 = &v196;
      v39 = swift_bridgeObjectRelease();
      *(double *)&v40 = (*(double (**)(uint64_t))((swift_isaMask & *v38) + 0x2B0))(v39);
      v186[2] = v41;
      v186[3] = v40;
      v186[0] = v43;
      v186[1] = v42;

      Date.init()();
      Date.timeIntervalSince1970.getter();
      v10 = v44;
      (*(void (**)(char *, void *))(v5 + 8))(v7, v4);
      v14.i32[0] = sub_1000A62AC();
      v25 = v188;
      v45 = *(void (**)(long long *__return_ptr, uint64_t))(*v188[17] + 144);
      v46 = swift_retain();
      v45(&v225, v46);
      swift_release();
      v235[6] = v231;
      v235[7] = v232;
      v235[8] = v233;
      v236 = v234;
      v235[2] = v227;
      v235[3] = v228;
      v235[4] = v229;
      v235[5] = v230;
      v235[0] = v225;
      v235[1] = v226;
      sub_1000ED828((uint64_t)v235);
      v47 = BYTE1(v235[0]);
      v48 = *(void (**)(long long *__return_ptr, uint64_t))(*v25[17] + 144);
      v49 = swift_retain();
      v48(&v225, v49);
      swift_release();
      v237[6] = v231;
      v237[7] = v232;
      v237[8] = v233;
      v238 = v234;
      v237[2] = v227;
      v237[3] = v228;
      v237[4] = v229;
      v237[5] = v230;
      v237[0] = v225;
      v237[1] = v226;
      v50 = *((void *)&v225 + 1);
      v51 = v226;
      swift_bridgeObjectRetain();
      sub_1000ED828((uint64_t)v237);
      v52 = *(uint64_t (**)(id))((swift_isaMask & *v27) + 0xB8);
      v53 = (swift_isaMask & *v27) + 184;
      v54 = (id)v193;
      *(void *)&v193 = v52;
      *(void *)&v192 = v53;
      v55 = v52(v54);
      v57 = v56;
      sub_100016B6C(v239);
      LODWORD(v189) = v47;
      if (v51)
      {
        if (v50 == v55 && v51 == v57)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          LODWORD(v191) = 0;
          goto LABEL_23;
        }
        v67 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        LODWORD(v191) = 0;
        if (v67)
        {
LABEL_23:
          v4 = v27;
          v77 = ((uint64_t (*)(void))v193)();
          v79 = v78;
          sub_100016B6C(v239);
          v80 = *(void (**)(long long *__return_ptr, uint64_t))(*v25[17] + 144);
          v81 = swift_retain();
          v80(&v215, v81);
          swift_release();
          v231 = v221;
          v232 = v222;
          v233 = v223;
          v234 = v224;
          v227 = v217;
          v228 = v218;
          v229 = v219;
          v230 = v220;
          v225 = v215;
          v226 = v216;
          v82 = *((void *)&v215 + 1);
          v83 = v216;
          swift_bridgeObjectRetain();
          sub_1000ED828((uint64_t)&v225);
          if (v83)
          {
            v84 = v189;
            if (v77 == v82 && v83 == v79)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v84 & 1) == 0)
              {
LABEL_39:
                if ((v191 | v84))
                {
LABEL_42:
                  v107 = v4;
                  v108 = ((uint64_t (*)(void))v193)();
                  v110 = v109;
                  sub_100016B6C(v239);
                  v111 = *(void (**)(long long *__return_ptr, uint64_t))(*v25[17] + 144);
                  v112 = swift_retain();
                  v111(&v205, v112);
                  swift_release();
                  v113 = v26[27];
                  v26[36] = v26[26];
                  v26[37] = v113;
                  v26[38] = v26[28];
                  v224 = v214;
                  v114 = v26[23];
                  v26[32] = v26[22];
                  v26[33] = v114;
                  v115 = v26[25];
                  v26[34] = v26[24];
                  v26[35] = v115;
                  v116 = v26[21];
                  v26[30] = v26[20];
                  v26[31] = v116;
                  v117 = v217;
                  if (!*(void *)(v217 + 16) || (v118 = sub_1000E20D4(v108, v110), (v119 & 1) == 0))
                  {
                    sub_1000ED828((uint64_t)&v215);
                    swift_bridgeObjectRelease();
                    sub_100016B6C(v239);
                    return;
                  }
                  v120 = *(float *)(*(void *)(v117 + 56) + 4 * v118);
                  sub_1000ED828((uint64_t)&v215);
                  swift_bridgeObjectRelease();
                  v121 = *(void (**)(void *__return_ptr, uint64_t))(*v25[17] + 144);
                  v122 = swift_retain();
                  v121(v203, v122);
                  swift_release();
                  v123 = v26[17];
                  v26[26] = v26[16];
                  v26[27] = v123;
                  v26[28] = v26[18];
                  v214 = v204;
                  v124 = v26[13];
                  v26[22] = v26[12];
                  v26[23] = v124;
                  v125 = v26[15];
                  v26[24] = v26[14];
                  v26[25] = v125;
                  v126 = v26[11];
                  v26[20] = v26[10];
                  v26[21] = v126;
                  sub_1000ED828((uint64_t)&v205);
                  if (BYTE1(v205) == 1)
                  {
                    v127 = 0.0;
                    if (v120 >= 0.0) {
                      goto LABEL_53;
                    }
LABEL_52:
                    v128 = v120 * 0.5;
LABEL_54:
                    *(void *)&v189 = v107;
                    v129 = ((uint64_t (*)(void))v193)();
                    v131 = v130;
                    sub_100016B6C(v239);
                    v132 = *(uint64_t (**)(void *))(*v25[17] + 400);
                    swift_retain();
                    v133 = (void (*)(void *, void))v132(v203);
                    *(void *)(v134 + 8) = v129;
                    *(void *)(v134 + 16) = v131;
                    swift_bridgeObjectRelease();
                    v133(v203, 0);
                    swift_release();
                    v135 = *(uint64_t (**)(void *))(*v25[17] + 400);
                    swift_retain();
                    v136 = (void (*)(void *, void))v135(v203);
                    *(_DWORD *)(v137 + 24) = v14.i32[0];
                    *(unsigned char *)(v137 + 28) = 0;
                    v136(v203, 0);
                    swift_release();
                    v138 = (v14.f32[0] <= v128) & ~(_BYTE)v191;
                    v139 = *(uint64_t (**)(long long *))(*v25[17] + 400);
                    swift_retain();
                    v140 = (void (*)(long long *, void))v139(&v196);
                    *(unsigned char *)(v141 + 1) = v138;
                    v140(&v196, 0);
                    swift_release();
                    v142 = *(void (**)(long long *__return_ptr, uint64_t))(*v25[17] + 144);
                    v143 = swift_retain();
                    v142(&v196, v143);
                    swift_release();
                    v144 = v26[7];
                    v26[16] = v26[6];
                    v26[17] = v144;
                    v26[18] = v26[8];
                    v204 = v202;
                    v145 = v199;
                    v26[12] = v198;
                    v26[13] = v145;
                    v146 = v201;
                    v26[14] = v200;
                    v26[15] = v146;
                    v147 = v197;
                    v26[10] = v196;
                    v26[11] = v147;
                    sub_1000ED828((uint64_t)v203);
                    if (BYTE1(v203[0]) == 1)
                    {
                      v148 = *(uint64_t (**)(long long *))(*v25[17] + 400);
                      swift_retain();
                      v149 = (void (*)(long long *, void))v148(&v196);
                      *(CGFloat *)(v150 + 40) = v10;
                      v149(&v196, 0);
                      swift_release();
                    }
                    v151 = (void *)v189;
                    sub_1000A6FB8(v189, v190, v240, v20, 30.0);
                    sub_100016FEC((uint64_t)v240, (uint64_t)&v196, &qword_1004CC560);
                    if (BYTE8(v201))
                    {
                      v152 = *(uint64_t (**)(unsigned char *))(*v25[17] + 400);
                      swift_retain();
                      v153 = (void (*)(unsigned char *, void))v152(v195);
                      v155 = *(void **)(v154 + 48);
                      *(void *)(v154 + 48) = 0;

                      v153(v195, 0);
                      swift_release();
                      v156 = *(uint64_t (**)(unsigned char *))(*v25[17] + 400);
                      swift_retain();
                      v157 = (void (*)(unsigned char *, void))v156(v195);
                      *(_OWORD *)(v158 + 64) = 0u;
                      *(_OWORD *)(v158 + 80) = 0u;
                      *(_OWORD *)(v158 + 96) = 0u;
                      *(_OWORD *)(v158 + 112) = 0u;
                      *(unsigned char *)(v158 + 128) = 1;
                      v157(v195, 0);
                      swift_release();
                      v159 = *(uint64_t (**)(unsigned char *))(*v25[17] + 400);
                      swift_retain();
                      v160 = (void (*)(unsigned char *, void))v159(v195);
                      *(void *)(v161 + 136) = 0;
                      *(unsigned char *)(v161 + 144) = 1;
                      v160(v195, 0);
                      swift_release();
                      v162 = v151;
                      v163 = ((uint64_t (*)(void))v193)();
                      v165 = v164;
                      sub_100016B6C(v239);
                      v166 = 2.0;
                      if (v14.f32[0] <= 2.0) {
                        v166 = v14.f32[0];
                      }
                      if (v166 > v120) {
                        v167 = v166;
                      }
                      else {
                        v167 = v120;
                      }
                      v168 = *(uint64_t (**)(unsigned char *))(*v25[17] + 400);
                      swift_retain();
                      v169 = (void (*)(unsigned char *, void))v168(v195);
                      v171 = v170;
                      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                      v194 = *(void *)(v171 + 32);
                      *(void *)(v171 + 32) = 0x8000000000000000;
                      sub_1000D58E8(v163, v165, isUniquelyReferenced_nonNull_native, v167);
                      *(void *)(v171 + 32) = v194;
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      v169(v195, 0);
                      sub_100016B6C(v239);
                    }
                    else
                    {
                      v192 = v198;
                      v193 = v197;
                      v191 = v199;
                      v173 = v200;
                      v174 = v201;
                      v175 = *(uint64_t (**)(unsigned char *))(*v25[17] + 400);
                      sub_100016B40(v239);
                      swift_retain();
                      v176 = (void (*)(unsigned char *, void))v175(v195);
                      v178 = *(void **)(v177 + 48);
                      *(void *)(v177 + 48) = v27;

                      v176(v195, 0);
                      swift_release();
                      v179 = *(uint64_t (**)(unsigned char *))(*v25[17] + 400);
                      swift_retain();
                      v180 = (void (*)(unsigned char *, void))v179(v195);
                      v181 = v192;
                      *(_OWORD *)(v182 + 64) = v193;
                      *(_OWORD *)(v182 + 80) = v181;
                      *(_OWORD *)(v182 + 96) = v191;
                      *(_OWORD *)(v182 + 112) = v173;
                      *(unsigned char *)(v182 + 128) = 0;
                      v180(v195, 0);
                      swift_release();
                      v183 = *(uint64_t (**)(unsigned char *))(*v25[17] + 400);
                      swift_retain();
                      v184 = (void (*)(unsigned char *, void))v183(v195);
                      *(void *)(v185 + 136) = v174;
                      *(unsigned char *)(v185 + 144) = 0;
                      v184(v195, 0);
                      sub_100016B6C(v239);
                    }
                    goto LABEL_64;
                  }
                  if (v14.f32[0] >= 1.0)
                  {
                    v127 = (float)((float)(v14.f32[0] + -1.0) * 0.5) + 0.15;
                    if (v120 < (float)(v127 + v127)) {
                      goto LABEL_52;
                    }
                  }
                  else
                  {
                    if (v120 < 0.3) {
                      goto LABEL_52;
                    }
                    v127 = 0.15;
                  }
LABEL_53:
                  v128 = v120 - v127;
                  goto LABEL_54;
                }
                v105 = *(void (**)(long long *__return_ptr, uint64_t))(*v25[17] + 144);
                v106 = swift_retain();
                v105(&v205, v106);
                swift_release();
                v221 = v211;
                v222 = v212;
                v223 = v213;
                v224 = v214;
                v217 = v207;
                v218 = v208;
                v219 = v209;
                v220 = v210;
                v215 = v205;
                v216 = v206;
                sub_1000ED828((uint64_t)&v215);
                v11 = *((double *)&v217 + 1);
                if (qword_1004C2DF0 == -1)
                {
LABEL_41:
                  LODWORD(v191) = v10 < v11 + *(float *)&dword_1004F85EC;
                  goto LABEL_42;
                }
LABEL_69:
                swift_once();
                goto LABEL_41;
              }
            }
            else
            {
              v85 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v85 & v84 & 1) == 0) {
                goto LABEL_39;
              }
            }
            v86 = v4;
            *(void *)&v187 = ((uint64_t (*)(void))v193)();
            v88 = v87;
            sub_100016B6C(v239);
            v89 = *(void (**)(long long *__return_ptr, uint64_t))(*v25[17] + 144);
            v90 = swift_retain();
            v89(&v205, v90);
            swift_release();
            v221 = v211;
            v222 = v212;
            v223 = v213;
            v224 = v214;
            v217 = v207;
            v218 = v208;
            v219 = v209;
            v220 = v210;
            v215 = v205;
            v216 = v206;
            v91 = v207;
            if (*(void *)(v207 + 16))
            {
              v92 = sub_1000E20D4(v187, v88);
              if (v93)
              {
                v94 = *(float *)(*(void *)(v91 + 56) + 4 * v92);
                sub_1000ED828((uint64_t)&v215);
                swift_bridgeObjectRelease();
                v95 = v86;
                *(void *)&v187 = ((uint64_t (*)(void))v193)();
                v97 = v96;
                sub_100016B6C(v239);
                v98 = (float)((float)(v14.f32[0] + -1.0) * 0.5) + 0.15;
                if (v14.f32[0] < 1.0) {
                  v98 = 0.15;
                }
                v99 = v14.f32[0] + v98;
                if (v94 >= v99) {
                  v94 = v99;
                }
                v100 = *(uint64_t (**)(long long *))(*v25[17] + 400);
                swift_retain();
                v101 = (void (*)(long long *, void))v100(&v205);
                v103 = v102;
                v104 = swift_isUniquelyReferenced_nonNull_native();
                v203[0] = *(void *)(v103 + 32);
                *(void *)(v103 + 32) = 0x8000000000000000;
                sub_1000D58E8(v187, v97, v104, v94);
                *(void *)(v103 + 32) = v203[0];
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v101(&v205, 0);
                swift_release();
                goto LABEL_38;
              }
            }
            sub_1000ED828((uint64_t)&v215);
          }
          swift_bridgeObjectRelease();
LABEL_38:
          v84 = v189;
          goto LABEL_39;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      LODWORD(v191) = 1;
      if (v14.f32[0] > 1.0 && v14.f32[0] < 2.0)
      {
        v68 = v27;
        v69 = ((uint64_t (*)(void))v193)();
        v71 = v70;
        sub_100016B6C(v239);
        v72 = *(uint64_t (**)(long long *))(*v25[17] + 400);
        swift_retain();
        v73 = (void (*)(long long *, void))v72(&v225);
        v75 = v74;
        v76 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v215 = *(void *)(v75 + 32);
        *(void *)(v75 + 32) = 0x8000000000000000;
        sub_1000D58E8(v69, v71, v76, v14.f32[0]);
        *(void *)(v75 + 32) = v215;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v73(&v225, 0);
        swift_release();
        LODWORD(v191) = 1;
      }
      goto LABEL_23;
    }
LABEL_67:
    v37 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_13;
  }
LABEL_72:
  __break(1u);
}

uint64_t sub_10012A63C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t sub_10012A6C8()
{
  uint64_t v0 = StateObserver.deinit();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_10012A754()
{
  sub_10012A6C8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LinesRenderer()
{
  uint64_t result = qword_1004CC3C0;
  if (!qword_1004CC3C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10012A7D0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10012A848@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 200);
  return swift_retain();
}

uint64_t sub_10012A858(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_10002179C(&qword_1004CC530, &qword_1004CC528);
          swift_bridgeObjectRetain();
          for (unint64_t i = 0; i != v7; ++i)
          {
            sub_100012894(&qword_1004CC528);
            v10 = sub_10015C998(v13, i, a3);
            id v12 = *v11;
            ((void (*)(uint64_t (**)(), void))v10)(v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_10001C99C(0, (unint64_t *)&qword_1004CE690);
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10012AA28(uint64_t result, uint64_t a2, unint64_t a3, void (*a4)(void), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = result;
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (v13)
  {
    if (v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v16 <= a2)
      {
        if (v15 >= 1)
        {
          uint64_t v17 = sub_10002179C(a5, a6);
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v15; ++i)
          {
            uint64_t v19 = sub_100012894(a6);
            v20 = (void (*)(unsigned char *, void))a7(v23, i, a3, v19, v17);
            id v22 = *v21;
            v20(v23, 0);
            *(void *)(v13 + 8 * i) = v22;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        a4(0);
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10012ABFC(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_10002179C(&qword_1004CC570, &qword_1004CC568);
          swift_bridgeObjectRetain();
          for (unint64_t i = 0; i != v7; ++i)
          {
            sub_100012894(&qword_1004CC568);
            v10 = sub_10015C998(v13, i, a3);
            id v12 = *v11;
            ((void (*)(uint64_t (**)(), void))v10)(v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_10001C99C(0, (unint64_t *)&qword_1004CB4B0);
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10012ADCC(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_10002179C(&qword_1004CC550, &qword_1004CC548);
          swift_bridgeObjectRetain();
          for (unint64_t i = 0; i != v7; ++i)
          {
            sub_100012894(&qword_1004CC548);
            v10 = sub_10015C998(v13, i, a3);
            id v12 = *v11;
            ((void (*)(uint64_t (**)(), void))v10)(v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_10001C99C(0, &qword_1004C4028);
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10012AF9C()
{
  return sub_100128B54(v0);
}

uint64_t sub_10012AFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10012AFB4()
{
  return swift_release();
}

uint64_t sub_10012AFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v21[3] = a3;
  v21[4] = a4;
  uint64_t v7 = sub_100078D1C(v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(v7, a1, a3);
  *(void *)(a2 + 64) = _swiftEmptyArrayStorage;
  sub_100012894(&qword_1004CBF50);
  swift_getKeyPath();
  swift_retain();
  *(void *)(a2 + 72) = MutableStateValue.__allocating_init(_:_:)();
  *(void *)(a2 + 80) = _swiftEmptyDictionarySingleton;
  type metadata accessor for WorldLine();
  *(void *)(a2 + 88) = OrderedDictionary.init()();
  *(void *)(a2 + 96) = v8;
  *(void *)(a2 + 104) = v9;
  v20 = _swiftEmptyDictionarySingleton;
  sub_100012894(&qword_1004CBF58);
  swift_allocObject();
  *(void *)(a2 + 112) = Synchronized.init(wrappedValue:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v11 = sub_100012894(&qword_1004CB4A0);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_1004F8630;
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 272);
  swift_retain();
  *(void *)(a2 + 120) = v13(KeyPath, v12);
  *(void *)(a2 + 128) = _swiftEmptyArrayStorage;
  sub_100012894(&qword_1004CBF60);
  swift_getKeyPath();
  *(void *)(a2 + 136) = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = sub_100012894(&qword_1004C3F10);
  uint64_t v16 = qword_1004F8630;
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 272);
  swift_retain();
  *(void *)(a2 + 144) = v17(v14, v16);
  *(unsigned char *)(a2 + 152) = 1;
  swift_release();
  sub_10002B8B4((uint64_t)v21, (uint64_t)&v20);
  uint64_t v18 = StateObserver.init(configuration:)();
  sub_100013218((uint64_t)v21);
  return v18;
}

uint64_t sub_10012B248@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 200);
  return swift_retain();
}

uint64_t type metadata accessor for WeakLinesRendererDelegate()
{
  return self;
}

void sub_10012B284()
{
  qword_1004CC630 = 0x4024000000000000;
}

void sub_10012B294()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure34RectangleHistoryCellWithScreenshot_screenshot;
  [*(id *)&v0[OBJC_IVAR____TtC7Measure34RectangleHistoryCellWithScreenshot_screenshot] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v0[v1] setClipsToBounds:1];
  uint64_t v2 = qword_1004C2B98;
  id v3 = *(id *)&v0[v1];
  if (v2 != -1) {
    swift_once();
  }
  [v3 _setContinuousCornerRadius:*(double *)&qword_1004CC630];

  id v4 = *(id *)&v0[v1];
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 setAccessibilityIdentifier:v5];

  id v6 = [v0 contentView];
  [v6 addSubview:*(void *)&v0[v1]];
}

void sub_10012B3D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Measure34RectangleHistoryCellWithScreenshot_screenshot;
  [*(id *)&v0[OBJC_IVAR____TtC7Measure34RectangleHistoryCellWithScreenshot_screenshot] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = *(void **)&v0[OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_bottomContentAnchor];
  if (v3)
  {
    [v3 setActive:0];
    id v4 = [*(id *)&v0[v2] bottomAnchor];
    id v5 = [v1 contentView];
    id v6 = [v5 bottomAnchor];

    if (qword_1004C27E8 != -1) {
      swift_once();
    }
    id v7 = [v4 constraintEqualToAnchor:v6 constant:-*(double *)&qword_1004F7E00];

    LODWORD(v8) = 1148813312;
    [v7 setPriority:v8];
    sub_100012894((uint64_t *)&unk_1004CEA00);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1003F9450;
    id v10 = [*(id *)&v1[v2] leadingAnchor];
    id v11 = [v1 contentView];
    id v12 = [v11 leadingAnchor];

    if (qword_1004C2830 != -1) {
      swift_once();
    }
    id v13 = [v10 constraintEqualToAnchor:v12 constant:*(double *)&qword_1004F7E60];

    *(void *)(v9 + 32) = v13;
    id v14 = [*(id *)&v1[v2] trailingAnchor];
    id v15 = [v1 contentView];
    id v16 = [v15 trailingAnchor];

    id v17 = [v14 constraintEqualToAnchor:v16 constant:-*(double *)&qword_1004F7E60];
    *(void *)(v9 + 40) = v17;
    id v18 = [*(id *)&v1[v2] heightAnchor];
    id v19 = [*(id *)&v1[v2] widthAnchor];
    id v20 = [v18 constraintLessThanOrEqualToAnchor:v19 multiplier:0.75];

    *(void *)(v9 + 48) = v20;
    *(void *)(v9 + 56) = v7;
    uint64_t v30 = v9;
    specialized Array._endMutation()();
    v21 = self;
    id v29 = v7;
    id v22 = [v21 currentTraitCollection];
    id v23 = [v22 preferredContentSizeCategory];

    LOBYTE(v18) = UIContentSizeCategory.isAccessibilityCategory.getter();
    id v24 = [*(id *)&v1[v2] topAnchor];
    if (v18) {
      id v25 = [*(id *)&v1[OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel] bottomAnchor];
    }
    else {
      id v25 = [*(id *)&v1[OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels] bottomAnchor];
    }
    id v26 = [v24 constraintEqualToAnchor:v25 constant:*(double *)&qword_1004F7E00];

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    v27 = self;
    sub_100029878();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v27 activateConstraints:isa];
  }
  else
  {
    __break(1u);
  }
}

id sub_10012B8BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = OBJC_IVAR____TtC7Measure34RectangleHistoryCellWithScreenshot_screenshot;
  id v9 = objc_allocWithZone((Class)UIImageView);
  id v10 = v4;
  *(void *)&v4[v8] = [v9 init];

  if (a3)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  v15.receiver = v10;
  v15.super_class = ObjectType;
  id v12 = [super initWithStyle:a1 reuseIdentifier:v11];

  id v13 = v12;
  sub_10012B294();
  sub_10012B3D0();

  return v13;
}

id sub_10012B9F8(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = OBJC_IVAR____TtC7Measure34RectangleHistoryCellWithScreenshot_screenshot;
  id v5 = objc_allocWithZone((Class)UIImageView);
  id v6 = v1;
  *(void *)&v1[v4] = [v5 init];

  v11.receiver = v6;
  v11.super_class = ObjectType;
  id v7 = [super initWithCoder:a1];
  id v8 = v7;
  if (v7)
  {
    id v9 = v7;
    sub_10012B294();
    sub_10012B3D0();
  }
  return v8;
}

uint64_t sub_10012BB80(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MeasurementHistoryItem();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  id v7 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000297B8(a1, (uint64_t)v7);
  sub_100026A04((uint64_t)&v7[*(int *)(v5 + 36)], (uint64_t)v117);
  sub_100026A04((uint64_t)v117, (uint64_t)v118);
  if (sub_100026A60((uint64_t)v118) == 1)
  {
    uint64_t v116 = a1;
    uint64_t v8 = sub_100026A6C((uint64_t)v118);
    uint64_t v9 = *(void *)v8;
    uint64_t v98 = *(void *)(v8 + 8);
    float v10 = *(float *)(v8 + 32);
    int v11 = *(unsigned __int8 *)(v8 + 36);
    uint64_t v12 = *(void *)(v8 + 40);
    uint64_t v100 = *(void *)(v8 + 48);
    uint64_t v101 = v12;
    uint64_t v13 = *(void *)(v8 + 56);
    NSString v106 = *(NSString *)(v8 + 64);
    uint64_t v107 = v13;
    uint64_t v14 = *(void *)(v8 + 80);
    uint64_t v104 = *(void *)(v8 + 88);
    uint64_t v105 = v14;
    uint64_t v15 = *(void *)(v8 + 96);
    uint64_t v102 = *(void *)(v8 + 104);
    uint64_t v103 = v15;
    double v16 = v10;
    uint64_t v17 = *(void *)(v8 + 128);
    uint64_t v99 = *(void *)(v8 + 120);
    float v18 = *(float *)(v8 + 152);
    int v19 = *(unsigned __int8 *)(v8 + 156);
    uint64_t v20 = *(void *)(v8 + 160);
    uint64_t v21 = *(void *)(v8 + 168);
    uint64_t v22 = *(void *)(v8 + 176);
    v112 = *(void **)(v8 + 184);
    uint64_t v113 = v22;
    uint64_t v23 = *(void *)(v8 + 200);
    uint64_t v110 = *(void *)(v8 + 208);
    uint64_t v111 = v23;
    uint64_t v24 = *(void *)(v8 + 216);
    uint64_t v108 = *(void *)(v8 + 224);
    uint64_t v109 = v24;
    double v25 = v18;
    if (v11) {
      double v26 = 0.0;
    }
    else {
      double v26 = v16;
    }
    if (v19) {
      double v27 = 0.0;
    }
    else {
      double v27 = v25;
    }
    id v28 = *(id *)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_sketchView);
    sub_100051138(v26, v27);

    id v29 = [self currentTraitCollection];
    id v30 = [v29 preferredContentSizeCategory];

    char v31 = UIContentSizeCategory.isAccessibilityCategory.getter();
    uint64_t v114 = v21;
    uint64_t v115 = v20;
    if (v31)
    {
      v32 = *(char **)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleCellTitle);
      v33 = *(void **)&v32[OBJC_IVAR____TtC7Measure24AccessibilitySingleStack_label];
      v34 = v32;
      NSString v35 = String._bridgeToObjectiveC()();
      [v33 setText:v35];

      NSString v36 = String._bridgeToObjectiveC()();
      [v33 setAccessibilityLabel:v36];

      v37 = *(void **)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleLengthLabel);
      v38 = self;
      id v39 = v37;
      id v40 = [v38 mainBundle];
      v119._object = (void *)0xE000000000000000;
      v41._countAndFlagsBits = 0xD000000000000010;
      v41._object = (void *)0x800000010041F9B0;
      v42._countAndFlagsBits = 0;
      v42._object = (void *)0xE000000000000000;
      v119._countAndFlagsBits = 0;
      Swift::String v43 = NSLocalizedString(_:tableName:bundle:value:comment:)(v41, (Swift::String_optional)0, (NSBundle)v40, v42, v119);

      id v44 = [v38 mainBundle];
      v120._object = (void *)0xE000000000000000;
      v45._countAndFlagsBits = 0xD000000000000010;
      v45._object = (void *)0x800000010041F9B0;
      v46._countAndFlagsBits = 0;
      v46._object = (void *)0xE000000000000000;
      v120._countAndFlagsBits = 0;
      Swift::String v47 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, (Swift::String_optional)0, (NSBundle)v44, v46, v120);

      sub_10014DA7C(v43._countAndFlagsBits, (uint64_t)v43._object, v47._countAndFlagsBits, v47._object, v101, v100, v107, (uint64_t)v106, v105, v104, v103, v102);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v48 = *(id *)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_accessibleWidthLabel);
      id v49 = [v38 mainBundle];
      v121._object = (void *)0xE000000000000000;
      v50._countAndFlagsBits = 0x4C474E4154434552;
      v50._object = (void *)0xEF48544449575F45;
      v51._countAndFlagsBits = 0;
      v51._object = (void *)0xE000000000000000;
      v121._countAndFlagsBits = 0;
      Swift::String v52 = NSLocalizedString(_:tableName:bundle:value:comment:)(v50, (Swift::String_optional)0, (NSBundle)v49, v51, v121);

      id v53 = [v38 mainBundle];
      v122._object = (void *)0xE000000000000000;
      v54._countAndFlagsBits = 0x4C474E4154434552;
      v54._object = (void *)0xEF48544449575F45;
      v55._countAndFlagsBits = 0;
      v55._object = (void *)0xE000000000000000;
      v122._countAndFlagsBits = 0;
      Swift::String v56 = NSLocalizedString(_:tableName:bundle:value:comment:)(v54, (Swift::String_optional)0, (NSBundle)v53, v55, v122);

      sub_10014DA7C(v52._countAndFlagsBits, (uint64_t)v52._object, v56._countAndFlagsBits, v56._object, v115, v114, v113, (uint64_t)v112, v111, v110, v109, v108);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v57 = v116;
    }
    else
    {
      uint64_t v97 = v17;
      id v58 = *(id *)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_cellTitle);
      NSString v59 = String._bridgeToObjectiveC()();
      [v58 setText:v59];

      uint64_t v60 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels;
      v61 = *(void **)(*(void *)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_lengthLabels)
                     + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_title);
      v62 = self;
      id v63 = v61;
      id v96 = v62;
      id v64 = [v62 mainBundle];
      v123._object = (void *)0xE000000000000000;
      v65._object = (void *)0x800000010041F9B0;
      v65._countAndFlagsBits = 0xD000000000000010;
      v66._countAndFlagsBits = 0;
      v66._object = (void *)0xE000000000000000;
      v123._countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v65, (Swift::String_optional)0, (NSBundle)v64, v66, v123);

      NSString v67 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v63 setText:v67];

      id v68 = objc_retain(*(id *)(*(void *)(v2 + v60)
                              + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits));
      uint64_t v69 = v98;
      NSString v70 = String._bridgeToObjectiveC()();
      [v68 setText:v70];

      v71 = *(void **)(*(void *)(v2 + v60)
                     + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels);
      uint64_t v72 = v101;
      if (v9 == v101 && v69 == v100)
      {
        char v73 = 1;
        uint64_t v74 = v100;
      }
      else
      {
        uint64_t v74 = v100;
        char v73 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      id v75 = v71;
      sub_10015E68C(v72, v74, v107, v106, v105, v104, v103, v102, v73 & 1);

      uint64_t v76 = OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels;
      id v77 = objc_retain(*(id *)(*(void *)(v2 + OBJC_IVAR____TtC7Measure24BaseRectangleHistoryCell_widthLabels)
                              + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_title));
      id v78 = [v96 mainBundle];
      v124._object = (void *)0xE000000000000000;
      v79._countAndFlagsBits = 0x4C474E4154434552;
      v79._object = (void *)0xEF48544449575F45;
      v80._countAndFlagsBits = 0;
      v80._object = (void *)0xE000000000000000;
      v124._countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v79, (Swift::String_optional)0, (NSBundle)v78, v80, v124);

      NSString v81 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v77 setText:v81];

      id v82 = objc_retain(*(id *)(*(void *)(v2 + v76)
                              + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits));
      uint64_t v83 = v99;
      uint64_t v84 = v97;
      NSString v85 = String._bridgeToObjectiveC()();
      [v82 setText:v85];

      uint64_t v86 = v84;
      v87 = *(void **)(*(void *)(v2 + v76)
                     + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels);
      uint64_t v89 = v114;
      uint64_t v88 = v115;
      if (v83 == v115 && v86 == v114) {
        char v90 = 1;
      }
      else {
        char v90 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      uint64_t v57 = v116;
      v92 = v112;
      uint64_t v91 = v113;
      id v93 = v87;
      sub_10015E68C(v88, v89, v91, v92, v111, v110, v109, v108, v90 & 1);
    }
    [*(id *)(v2 + OBJC_IVAR____TtC7Measure34RectangleHistoryCellWithScreenshot_screenshot) setImage:*(void *)(v57 + *(int *)(type metadata accessor for SpatialPlattersHistoryItem() + 20))];
    return sub_10002981C((uint64_t)v7);
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

void sub_10012C4A0()
{
}

uint64_t type metadata accessor for RectangleHistoryCellWithScreenshot()
{
  return self;
}

Swift::String *localizationWarning.unsafeMutableAddressor()
{
  return &localizationWarning;
}

uint64_t sub_10012C4F4(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v5 = *a1;
  v6[0] = v2;
  *(void *)((char *)v6 + 14) = *(void *)((char *)a1 + 30);
  long long v3 = a2[1];
  long long v7 = *a2;
  v8[0] = v3;
  *(void *)((char *)v8 + 14) = *(void *)((char *)a2 + 30);
  return sub_10012C858((uint64_t)&v5, (uint64_t)&v7) & 1;
}

void sub_10012C540()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  long long v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v4 setNumberStyle:0];
  static Locale.current.getter();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  [v4 setLocale:isa];

  qword_1004F83F8 = (uint64_t)v4;
}

void sub_10012C65C(uint64_t a1)
{
}

void sub_10012C66C(uint64_t a1)
{
}

void sub_10012C67C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for Locale();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v9 setNumberStyle:1];
  [v9 setMaximumFractionDigits:a2];
  static Locale.current.getter();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  [v9 setLocale:isa];

  *a3 = v9;
}

uint64_t sub_10012C7B4()
{
  uint64_t v1 = *(__CFRunLoopObserver **)(v0 + 16);
  CFRunLoopRemoveObserver(*(CFRunLoopRef *)(v0 + 24), v1, kCFRunLoopCommonModes);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MeasureUtil()
{
  return self;
}

uint64_t type metadata accessor for MeasureUtil.MainRunLoopExitObserver()
{
  return self;
}

uint64_t sub_10012C858(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = 0;
    if ((v5 & 1) == 0) {
      return result;
    }
  }
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a2 + 24);
  if (!v7)
  {
    if (!v8) {
      goto LABEL_15;
    }
    return 0;
  }
  if (!v8) {
    return 0;
  }
  BOOL v9 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && v7 == v8;
  if (v9 || (v10 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v10 & 1) != 0))
  {
LABEL_15:
    char v11 = *(unsigned char *)(a2 + 36);
    if (*(unsigned char *)(a1 + 36))
    {
      if (!*(unsigned char *)(a2 + 36)) {
        return 0;
      }
    }
    else
    {
      if (*(float *)(a1 + 32) != *(float *)(a2 + 32)) {
        char v11 = 1;
      }
      if (v11) {
        return 0;
      }
    }
    int v12 = *(unsigned __int8 *)(a1 + 37);
    int v13 = *(unsigned __int8 *)(a2 + 37);
    if (v12 == 4)
    {
      if (v13 != 4) {
        return 0;
      }
    }
    else if (v13 == 4 || v12 != v13)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

void sub_10012C948(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t *a4@<X8>, float a5@<S0>)
{
  LODWORD(v316) = a3;
  LODWORD(v315) = a2;
  v317 = a4;
  *(void *)&long long v318 = a1;
  uint64_t v6 = sub_100012894(&qword_1004CC7A8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  char v10 = (char *)&v311 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int v12 = (char *)&v311 - v11;
  int v13 = self;
  id v14 = [v13 standardUserDefaults];
  Defaults.showPreciseMeasurement.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v16 = [v14 BOOLForKey:v15];

  float v17 = 0.0;
  if (a5 != 0.0)
  {
    float v17 = fabsf(a5);
    if (v17 > 5000.0) {
      float v17 = 5000.0;
    }
  }
  id v18 = [v13 standardUserDefaults];
  uint64_t v19 = *(void *)(Defaults.measurementBias.unsafeMutableAddressor() + 8);
  swift_bridgeObjectRetain();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v18 floatForKey:v20];
  float v22 = v21;

  float v23 = v17 * (float)(v22 + 1.0);
  if (!(void)v318)
  {
    uint64_t v24 = self;
    id v25 = [v24 meters];
    sub_10001C99C(0, &qword_1004CC7B0);
    Measurement.init(value:unit:)();
    id v26 = [v24 inches];
    Measurement<>.converted(to:)();

    Measurement.value.getter();
    double v28 = v27;
    id v30 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v29 = v7 + 8;
    v30(v10, v6);
    float v23 = v28;
    v30(v12, v6);
    if (v316)
    {
      if (v23 >= 12.0)
      {
LABEL_7:
        float v31 = v23 / 12.0;
        if ((~COERCE_INT(v23 / 12.0) & 0x7F800000) != 0)
        {
          if (v31 <= -9.2234e18)
          {
            __break(1u);
          }
          else if (v31 < 9.2234e18)
          {
            uint64_t v6 = (uint64_t)v31;
            uint64_t v32 = 12 * (uint64_t)v31;
            if ((unsigned __int128)((uint64_t)v31 * (__int128)12) >> 64 == v32 >> 63)
            {
              float v23 = v23 - (float)v32;
              if (v16)
              {
                sub_100012894((uint64_t *)&unk_1004D2460);
                uint64_t v33 = swift_allocObject();
                long long v318 = xmmword_1003F87F0;
                *(_OWORD *)(v33 + 16) = xmmword_1003F87F0;
                *(void *)(v33 + 56) = &type metadata for Float;
                *(void *)(v33 + 64) = &protocol witness table for Float;
                *(float *)(v33 + 32) = v23;
                uint64_t v29 = String.init(format:_:)();
                id v25 = v34;
                uint64_t v35 = swift_allocObject();
                *(_OWORD *)(v35 + 16) = v318;
                *(void *)(v35 + 56) = &type metadata for Int;
                *(void *)(v35 + 64) = &protocol witness table for Int;
                *(void *)(v35 + 32) = v6;
                id v14 = (id)String.init(format:_:)();
                uint64_t v19 = v36;
                if (qword_1004C2BA8 == -1) {
                  goto LABEL_13;
                }
                goto LABEL_95;
              }
              float v187 = roundf(v23);
              if (v187 == 12.0) {
                float v188 = 0.0;
              }
              else {
                float v188 = v187;
              }
              if (v187 == 12.0) {
                ++v6;
              }
              sub_100012894((uint64_t *)&unk_1004D2460);
              uint64_t v189 = swift_allocObject();
              long long v318 = xmmword_1003F87F0;
              *(_OWORD *)(v189 + 16) = xmmword_1003F87F0;
              *(void *)(v189 + 56) = &type metadata for Int;
              *(void *)(v189 + 64) = &protocol witness table for Int;
              *(void *)(v189 + 32) = v6;
              *(void *)&long long v316 = String.init(format:_:)();
              uint64_t v191 = v190;
              if (qword_1004C2BA0 != -1) {
                swift_once();
              }
              v192 = (void *)qword_1004F83F8;
              id v193 = [objc_allocWithZone((Class)NSDecimalNumber) initWithInteger:v6];
              id v194 = [v192 stringFromNumber:v193];

              if (!v194) {
                goto LABEL_105;
              }
              uint64_t v195 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v197 = v196;

              if (v188 == 0.0)
              {
                v198 = self;
                id v199 = [v198 mainBundle];
                v200.value._uint64_t countAndFlagsBits = 0xD000000000000014;
                v332._object = (void *)0x8000000100426F60;
                v200.value._object = (void *)0x8000000100427090;
                v201._uint64_t countAndFlagsBits = 0xB280E240243125;
                v201._object = (void *)0xA700000000000000;
                v202._uint64_t countAndFlagsBits = 0;
                v202._object = (void *)0xE000000000000000;
                v332._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
                NSLocalizedString(_:tableName:bundle:value:comment:)(v201, v200, (NSBundle)v199, v202, v332);

                uint64_t v203 = swift_allocObject();
                *(_OWORD *)(v203 + 16) = v318;
                *(void *)(v203 + 56) = &type metadata for String;
                *(void *)(v203 + 64) = sub_10001D424();
                *(void *)(v203 + 32) = v195;
                *(void *)(v203 + 40) = v197;
                uint64_t v72 = String.init(format:_:)();
                NSString v59 = v204;
                swift_bridgeObjectRelease();
                id v205 = [v198 mainBundle];
                v333._object = (void *)0xE000000000000000;
                v206._uint64_t countAndFlagsBits = 0x74656566204025;
                v206._object = (void *)0xE700000000000000;
                v207._uint64_t countAndFlagsBits = 0;
                v207._object = (void *)0xE000000000000000;
                v333._uint64_t countAndFlagsBits = 0;
                NSLocalizedString(_:tableName:bundle:value:comment:)(v206, (Swift::String_optional)0, (NSBundle)v205, v207, v333);

                uint64_t v208 = swift_allocObject();
                *(_OWORD *)(v208 + 16) = v318;
                *(void *)(v208 + 56) = &type metadata for Int;
                *(void *)(v208 + 64) = &protocol witness table for Int;
                *(void *)(v208 + 32) = v6;
                uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
                object = v209;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                NSString v210 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
                [v210 floatValue];
                float v212 = v211;

                float v143 = v212 * 12.0;
                char v144 = 2;
                goto LABEL_81;
              }
              uint64_t v242 = swift_allocObject();
              *(_OWORD *)(v242 + 16) = v318;
              if ((~LODWORD(v188) & 0x7F800000) != 0)
              {
                if (v188 > -9.2234e18)
                {
                  *(void *)&long long v318 = v191;
                  if (v188 < 9.2234e18)
                  {
                    *(void *)(v242 + 56) = &type metadata for Int;
                    *(void *)(v242 + 64) = &protocol witness table for Int;
                    uint64_t v313 = (uint64_t)v188;
                    *(void *)(v242 + 32) = (uint64_t)v188;
                    uint64_t v314 = String.init(format:_:)();
                    uint64_t v315 = v243;
                    v244 = (void *)qword_1004F83F8;
                    id v245 = objc_allocWithZone((Class)NSDecimalNumber);
                    *(float *)&double v246 = v188;
                    id v247 = [v245 initWithFloat:v246];
                    id v248 = [v244 stringFromNumber:v247];

                    if (v248)
                    {
                      uint64_t v249 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                      uint64_t v312 = v250;

                      v251 = self;
                      id v252 = [v251 mainBundle];
                      v253.value._uint64_t countAndFlagsBits = 0xD000000000000014;
                      v336._object = (void *)0x8000000100426F60;
                      v253.value._object = (void *)0x8000000100427090;
                      v254._uint64_t countAndFlagsBits = 0x20B280E240243125;
                      v254._object = (void *)0xAFB380E240243225;
                      v255._uint64_t countAndFlagsBits = 0;
                      v255._object = (void *)0xE000000000000000;
                      v336._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
                      NSLocalizedString(_:tableName:bundle:value:comment:)(v254, v253, (NSBundle)v252, v255, v336);

                      uint64_t v256 = swift_allocObject();
                      long long v311 = xmmword_1003F8B80;
                      *(_OWORD *)(v256 + 16) = xmmword_1003F8B80;
                      *(void *)(v256 + 56) = &type metadata for String;
                      unint64_t v257 = sub_10001D424();
                      *(void *)(v256 + 32) = v195;
                      *(void *)(v256 + 40) = v197;
                      *(void *)(v256 + 96) = &type metadata for String;
                      *(void *)(v256 + 104) = v257;
                      *(void *)(v256 + 64) = v257;
                      *(void *)(v256 + 72) = v249;
                      *(void *)(v256 + 80) = v312;
                      uint64_t v258 = String.init(format:_:)();
                      NSString v59 = v259;
                      swift_bridgeObjectRelease();
                      id v260 = [v251 mainBundle];
                      v261._uint64_t countAndFlagsBits = 0xD000000000000011;
                      v337._object = (void *)0xE000000000000000;
                      v261._object = (void *)0x80000001004270B0;
                      v262._uint64_t countAndFlagsBits = 0;
                      v262._object = (void *)0xE000000000000000;
                      v337._uint64_t countAndFlagsBits = 0;
                      NSLocalizedString(_:tableName:bundle:value:comment:)(v261, (Swift::String_optional)0, (NSBundle)v260, v262, v337);

                      uint64_t v263 = swift_allocObject();
                      *(_OWORD *)(v263 + 16) = v311;
                      *(void *)(v263 + 56) = &type metadata for Int;
                      *(void *)(v263 + 32) = v6;
                      *(void *)(v263 + 96) = &type metadata for Int;
                      *(void *)(v263 + 104) = &protocol witness table for Int;
                      uint64_t v264 = v313;
                      *(void *)(v263 + 64) = &protocol witness table for Int;
                      *(void *)(v263 + 72) = v264;
                      uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
                      object = v265;
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      NSString v266 = String._bridgeToObjectiveC()();
                      swift_bridgeObjectRelease();
                      [v266 floatValue];
                      float v268 = v267;

                      float v70 = v268 * 12.0;
                      NSString v71 = String._bridgeToObjectiveC()();
                      swift_bridgeObjectRelease();
                      uint64_t v72 = v258;
                      [v71 floatValue];
                      goto LABEL_72;
                    }
                    goto LABEL_107;
                  }
                  goto LABEL_98;
                }
              }
              else
              {
                __break(1u);
              }
              __break(1u);
LABEL_98:
              __break(1u);
LABEL_99:
              swift_once();
LABEL_38:
              v147 = (void *)qword_1004F83F8;
              id v148 = [objc_allocWithZone((Class)NSDecimalNumber) initWithInteger:v6];
              id v149 = [v147 stringFromNumber:v148];

              if (!v149)
              {
LABEL_108:
                __break(1u);
LABEL_109:
                __break(1u);
                goto LABEL_110;
              }
              uint64_t v150 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v152 = v151;

              v153 = self;
              id v154 = [v153 mainBundle];
              v328._object = (void *)0x8000000100426F60;
              v155._uint64_t countAndFlagsBits = 0x9D80E2BDC24025;
              v155._object = (void *)0xA700000000000000;
              v156._uint64_t countAndFlagsBits = 0;
              v156._object = (void *)0xE000000000000000;
              v328._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
              NSLocalizedString(_:tableName:bundle:value:comment:)(v155, (Swift::String_optional)0, (NSBundle)v154, v156, v328);

              uint64_t v157 = swift_allocObject();
              *(_OWORD *)(v157 + 16) = v318;
              *(void *)(v157 + 56) = &type metadata for String;
              *(void *)(v157 + 64) = sub_10001D424();
              *(void *)(v157 + 32) = v150;
              *(void *)(v157 + 40) = v152;
              uint64_t v72 = String.init(format:_:)();
              NSString v59 = v158;
              swift_bridgeObjectRelease();
              id v159 = [v153 mainBundle];
              v160._uint64_t countAndFlagsBits = 0xD000000000000014;
              v329._object = (void *)0xE000000000000000;
              v160._object = (void *)0x80000001004270F0;
              v161._uint64_t countAndFlagsBits = 0;
              v161._object = (void *)0xE000000000000000;
              v329._uint64_t countAndFlagsBits = 0;
              NSLocalizedString(_:tableName:bundle:value:comment:)(v160, (Swift::String_optional)0, (NSBundle)v159, v161, v329);

              uint64_t v162 = swift_allocObject();
              *(_OWORD *)(v162 + 16) = v318;
              *(void *)(v162 + 56) = &type metadata for Int;
              *(void *)(v162 + 64) = &protocol witness table for Int;
              *(void *)(v162 + 32) = v6;
              uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
              object = v163;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              NSString v164 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              [v164 floatValue];
              float v166 = v165;

              float v143 = v166 + 0.5;
              char v144 = 2;
LABEL_81:
              v306 = v317;
              uint64_t *v317 = v72;
              v306[1] = (uint64_t)v59;
              v306[2] = countAndFlagsBits;
              v306[3] = (uint64_t)object;
              *((float *)v306 + 8) = v143;
              *((unsigned char *)v306 + 36) = 0;
              *((unsigned char *)v306 + 37) = v144;
              return;
            }
            goto LABEL_86;
          }
          __break(1u);
LABEL_86:
          __break(1u);
LABEL_87:
          swift_once();
LABEL_27:
          uint64_t v101 = (void *)qword_1004F8400;
          id v102 = objc_allocWithZone((Class)NSNumber);
          *(float *)&double v103 = v23;
          id v104 = [v102 initWithFloat:v103];
          id v105 = [v101 stringFromNumber:v104];

          if (v105)
          {
            uint64_t v106 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v108 = v107;

            uint64_t v109 = self;
            id v110 = [v109 mainBundle];
            v324._object = (void *)0x8000000100426F60;
            v111._uint64_t countAndFlagsBits = 0x9D80E24025;
            v111._object = (void *)0xA500000000000000;
            v112._uint64_t countAndFlagsBits = 0;
            v112._object = (void *)0xE000000000000000;
            v324._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v111, (Swift::String_optional)0, (NSBundle)v110, v112, v324);

            uint64_t v113 = swift_allocObject();
            *(_OWORD *)(v113 + 16) = v318;
            *(void *)(v113 + 56) = &type metadata for String;
            *(void *)(v113 + 64) = sub_10001D424();
            *(void *)(v113 + 32) = v106;
            *(void *)(v113 + 40) = v108;
            uint64_t v72 = String.init(format:_:)();
            NSString v59 = v114;
            swift_bridgeObjectRelease();
            id v115 = [v109 mainBundle];
            v116._uint64_t countAndFlagsBits = 0xD000000000000013;
            v325._object = (void *)0xE000000000000000;
            v116._object = (void *)0x80000001004271B0;
            v117._uint64_t countAndFlagsBits = 0;
            v117._object = (void *)0xE000000000000000;
            v325._uint64_t countAndFlagsBits = 0;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v116, (Swift::String_optional)0, (NSBundle)v115, v117, v325);

            uint64_t v118 = swift_allocObject();
            *(_OWORD *)(v118 + 16) = v318;
            *(void *)(v118 + 56) = &type metadata for Float;
            *(void *)(v118 + 64) = &protocol witness table for Float;
            *(float *)(v118 + 32) = v23;
            uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
            object = v119;
LABEL_64:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            NSString v231 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v231 floatValue];
            float v143 = v232;

            char v144 = 2;
            goto LABEL_81;
          }
          goto LABEL_101;
        }
        __break(1u);
        goto LABEL_83;
      }
    }
    else if (v23 >= 36.0)
    {
      goto LABEL_7;
    }
    if (v16)
    {
      sub_100012894((uint64_t *)&unk_1004D2460);
      uint64_t v100 = swift_allocObject();
      long long v318 = xmmword_1003F87F0;
      *(_OWORD *)(v100 + 16) = xmmword_1003F87F0;
      *(void *)(v100 + 56) = &type metadata for Float;
      *(void *)(v100 + 64) = &protocol witness table for Float;
      *(float *)(v100 + 32) = v23;
      *(void *)&long long v316 = String.init(format:_:)();
      if (qword_1004C2BA8 == -1) {
        goto LABEL_27;
      }
      goto LABEL_87;
    }
    float v145 = roundf(v23 + v23) * 0.5;
    if ((~LODWORD(v145) & 0x7F800000) != 0)
    {
      if (v145 > -9.2234e18)
      {
        if (v145 < 9.2234e18)
        {
          uint64_t v6 = (uint64_t)v145;
          if ((float)(v145 - (float)(uint64_t)v145) > 0.00000011921)
          {
            if (!v6)
            {
              v270 = self;
              id v271 = [v270 mainBundle];
              v338._object = (void *)0x8000000100426F60;
              v272._uint64_t countAndFlagsBits = 0x9D80E2BDC24025;
              v272._object = (void *)0xA700000000000000;
              v273._uint64_t countAndFlagsBits = 0;
              v273._object = (void *)0xE000000000000000;
              v338._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
              NSLocalizedString(_:tableName:bundle:value:comment:)(v272, (Swift::String_optional)0, (NSBundle)v271, v273, v338);

              sub_100012894((uint64_t *)&unk_1004D2460);
              uint64_t v274 = swift_allocObject();
              *(_OWORD *)(v274 + 16) = xmmword_1003F87F0;
              *(void *)(v274 + 56) = &type metadata for String;
              *(void *)(v274 + 64) = sub_10001D424();
              *(void *)(v274 + 32) = 0;
              *(void *)(v274 + 40) = 0xE000000000000000;
              uint64_t v72 = String.init(format:_:)();
              NSString v59 = v275;
              swift_bridgeObjectRelease();
              id v276 = [v270 mainBundle];
              v339._object = (void *)0xE000000000000000;
              v277._uint64_t countAndFlagsBits = 0x206E6120666C6148;
              v277._object = (void *)0xEC00000068636E69;
              v278._uint64_t countAndFlagsBits = 0;
              v278._object = (void *)0xE000000000000000;
              v339._uint64_t countAndFlagsBits = 0;
              Swift::String v279 = NSLocalizedString(_:tableName:bundle:value:comment:)(v277, (Swift::String_optional)0, (NSBundle)v276, v278, v339);
              uint64_t countAndFlagsBits = v279._countAndFlagsBits;
              object = v279._object;

              char v144 = 2;
              float v143 = 0.5;
              goto LABEL_81;
            }
            sub_100012894((uint64_t *)&unk_1004D2460);
            uint64_t v146 = swift_allocObject();
            long long v318 = xmmword_1003F87F0;
            *(_OWORD *)(v146 + 16) = xmmword_1003F87F0;
            *(void *)(v146 + 56) = &type metadata for Int;
            *(void *)(v146 + 64) = &protocol witness table for Int;
            *(void *)(v146 + 32) = v6;
            *(void *)&long long v316 = String.init(format:_:)();
            if (qword_1004C2BA0 == -1) {
              goto LABEL_38;
            }
            goto LABEL_99;
          }
          if (v6)
          {
            sub_100012894((uint64_t *)&unk_1004D2460);
            uint64_t v213 = swift_allocObject();
            long long v318 = xmmword_1003F87F0;
            *(_OWORD *)(v213 + 16) = xmmword_1003F87F0;
            *(void *)(v213 + 56) = &type metadata for Int;
            *(void *)(v213 + 64) = &protocol witness table for Int;
            *(void *)(v213 + 32) = v6;
            *(void *)&long long v316 = String.init(format:_:)();
            if (qword_1004C2BA0 != -1) {
              swift_once();
            }
            v214 = (void *)qword_1004F83F8;
            id v215 = [objc_allocWithZone((Class)NSDecimalNumber) initWithInteger:v6];
            id v216 = [v214 stringFromNumber:v215];

            if (!v216) {
              goto LABEL_109;
            }
            uint64_t v217 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v219 = v218;

            v220 = self;
            id v221 = [v220 mainBundle];
            v334._object = (void *)0x8000000100426F60;
            v222._uint64_t countAndFlagsBits = 0x9D80E24025;
            v222._object = (void *)0xA500000000000000;
            v223._uint64_t countAndFlagsBits = 0;
            v223._object = (void *)0xE000000000000000;
            v334._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v222, (Swift::String_optional)0, (NSBundle)v221, v223, v334);

            uint64_t v224 = swift_allocObject();
            *(_OWORD *)(v224 + 16) = v318;
            *(void *)(v224 + 56) = &type metadata for String;
            *(void *)(v224 + 64) = sub_10001D424();
            *(void *)(v224 + 32) = v217;
            *(void *)(v224 + 40) = v219;
            uint64_t v72 = String.init(format:_:)();
            NSString v59 = v225;
            swift_bridgeObjectRelease();
            id v226 = [v220 mainBundle];
            v335._object = (void *)0xE000000000000000;
            v227._uint64_t countAndFlagsBits = 0x6568636E69204025;
            v227._object = (void *)0xE900000000000073;
            v228._uint64_t countAndFlagsBits = 0;
            v228._object = (void *)0xE000000000000000;
            v335._uint64_t countAndFlagsBits = 0;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v227, (Swift::String_optional)0, (NSBundle)v226, v228, v335);

            uint64_t v229 = swift_allocObject();
            *(_OWORD *)(v229 + 16) = v318;
            *(void *)(v229 + 56) = &type metadata for Int;
            *(void *)(v229 + 64) = &protocol witness table for Int;
            *(void *)(v229 + 32) = v6;
            uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
            object = v230;
            goto LABEL_64;
          }
          v280 = self;
          id v281 = [v280 mainBundle];
          unint64_t v309 = 0x8000000100426F60;
          if (v315)
          {
            v282._uint64_t countAndFlagsBits = 2642469424;
            v282._object = (void *)0xA400000000000000;
            v283._uint64_t countAndFlagsBits = 0;
            v283._object = (void *)0xE000000000000000;
            unint64_t v284 = 0xD00000000000009DLL;
            Swift::String v285 = NSLocalizedString(_:tableName:bundle:value:comment:)(v282, (Swift::String_optional)0, (NSBundle)v281, v283, *(Swift::String *)(&v309 - 1));

            Swift::String v319 = v285;
            uint64_t v72 = String.init<A>(_:)();
            NSString v59 = v286;
            id v287 = [v280 mainBundle];
            unint64_t v310 = 0xE000000000000000;
            unint64_t v288 = 0x636E69206F72655ALL;
            unint64_t v289 = 0xEB00000000736568;
          }
          else
          {
            v298._uint64_t countAndFlagsBits = 0x9D80E2BDC2203CLL;
            v298._object = (void *)0xA700000000000000;
            v299._uint64_t countAndFlagsBits = 0;
            v299._object = (void *)0xE000000000000000;
            unint64_t v300 = 0xD00000000000009DLL;
            Swift::String v301 = NSLocalizedString(_:tableName:bundle:value:comment:)(v298, (Swift::String_optional)0, (NSBundle)v281, v299, *(Swift::String *)(&v309 - 1));

            Swift::String v319 = v301;
            uint64_t v72 = String.init<A>(_:)();
            NSString v59 = v302;
            id v287 = [v280 mainBundle];
            unint64_t v288 = 0xD000000000000016;
            unint64_t v310 = 0xE000000000000000;
            unint64_t v289 = 0x80000001004270D0;
          }
          v303._uint64_t countAndFlagsBits = 0;
          v303._object = (void *)0xE000000000000000;
          uint64_t v304 = 0;
          Swift::String v305 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v288, (Swift::String_optional)0, (NSBundle)v287, v303, *(Swift::String *)(&v310 - 1));
          uint64_t countAndFlagsBits = v305._countAndFlagsBits;
          object = v305._object;

          char v144 = 2;
LABEL_80:
          float v143 = 0.0;
          goto LABEL_81;
        }
        goto LABEL_93;
      }
      goto LABEL_91;
    }
    __break(1u);
    goto LABEL_89;
  }
  if ((void)v318 == 1)
  {
    uint64_t v74 = self;
    id v25 = [v74 meters];
    sub_10001C99C(0, &qword_1004CC7B0);
    Measurement.init(value:unit:)();
    id v75 = [v74 centimeters];
    Measurement<>.converted(to:)();

    Measurement.value.getter();
    double v77 = v76;
    id v78 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v29 = v7 + 8;
    v78(v10, v6);
    float v17 = v77;
    v78(v12, v6);
    float v79 = roundf(v17);
    if (v79 >= 100.0)
    {
      sub_100012894((uint64_t *)&unk_1004D2460);
      uint64_t v120 = swift_allocObject();
      long long v318 = xmmword_1003F87F0;
      *(_OWORD *)(v120 + 16) = xmmword_1003F87F0;
      *(void *)(v120 + 56) = &type metadata for Float;
      *(void *)(v120 + 64) = &protocol witness table for Float;
      *(float *)(v120 + 32) = v23;
      *(void *)&long long v316 = String.init(format:_:)();
      if (qword_1004C2BA8 == -1)
      {
LABEL_30:
        Swift::String v121 = (void *)qword_1004F8400;
        id v122 = objc_allocWithZone((Class)NSNumber);
        *(float *)&double v123 = v23;
        id v124 = [v122 initWithFloat:v123];
        id v125 = [v121 stringFromNumber:v124];

        if (v125)
        {
          uint64_t v126 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v128 = v127;

          v129 = self;
          id v130 = [v129 mainBundle];
          v131.value._uint64_t countAndFlagsBits = 0xD000000000000014;
          v326._object = (void *)0x8000000100426F60;
          v131.value._object = (void *)0x8000000100427090;
          v132._uint64_t countAndFlagsBits = 1830830117;
          v132._object = (void *)0xE400000000000000;
          v133._uint64_t countAndFlagsBits = 0;
          v133._object = (void *)0xE000000000000000;
          v326._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v132, v131, (NSBundle)v130, v133, v326);

          uint64_t v134 = swift_allocObject();
          *(_OWORD *)(v134 + 16) = v318;
          *(void *)(v134 + 56) = &type metadata for String;
          *(void *)(v134 + 64) = sub_10001D424();
          *(void *)(v134 + 32) = v126;
          *(void *)(v134 + 40) = v128;
          uint64_t v72 = String.init(format:_:)();
          NSString v59 = v135;
          swift_bridgeObjectRelease();
          id v136 = [v129 mainBundle];
          v137._uint64_t countAndFlagsBits = 0xD000000000000013;
          v327._object = (void *)0xE000000000000000;
          v137._object = (void *)0x8000000100427150;
          v138._uint64_t countAndFlagsBits = 0;
          v138._object = (void *)0xE000000000000000;
          v327._uint64_t countAndFlagsBits = 0;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v137, (Swift::String_optional)0, (NSBundle)v136, v138, v327);

          uint64_t v139 = swift_allocObject();
          *(_OWORD *)(v139 + 16) = v318;
          *(void *)(v139 + 56) = &type metadata for Float;
          *(void *)(v139 + 64) = &protocol witness table for Float;
          *(float *)(v139 + 32) = v23;
          uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
          object = v140;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          NSString v141 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v141 floatValue];
          float v143 = v142;

          char v144 = 0;
          goto LABEL_81;
        }
        __break(1u);
LABEL_101:
        __break(1u);
        goto LABEL_102;
      }
LABEL_83:
      swift_once();
      goto LABEL_30;
    }
    if (!v16)
    {
      if ((~LODWORD(v79) & 0x7F800000) == 0)
      {
        __break(1u);
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
      if (v79 <= -9.2234e18)
      {
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
      if (v79 >= 9.2234e18)
      {
LABEL_94:
        __break(1u);
LABEL_95:
        swift_once();
LABEL_13:
        v37 = (void *)qword_1004F8400;
        id v38 = objc_allocWithZone((Class)NSNumber);
        *(float *)&double v39 = v23;
        id v40 = [v38 initWithFloat:v39];
        id v41 = [v37 stringFromNumber:v40];

        if (v41)
        {
          uint64_t v314 = (uint64_t)v14;
          uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v312 = v43;
          uint64_t v313 = v42;

          if (qword_1004C2BA0 != -1) {
            swift_once();
          }
          uint64_t v315 = v19;
          *(void *)&long long v316 = v29;
          *(void *)&long long v318 = v25;
          id v44 = (void *)qword_1004F83F8;
          id v45 = [objc_allocWithZone((Class)NSDecimalNumber) initWithInteger:v6];
          id v46 = [v44 stringFromNumber:v45];

          if (v46)
          {
            uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v49 = v48;

            Swift::String v50 = self;
            id v51 = [v50 mainBundle];
            v320._object = (void *)0x8000000100426F60;
            v52._uint64_t countAndFlagsBits = 0x80E2402520274025;
            v52._object = (void *)0xA90000000000009DLL;
            v53._uint64_t countAndFlagsBits = 0;
            v53._object = (void *)0xE000000000000000;
            v320._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v52, (Swift::String_optional)0, (NSBundle)v51, v53, v320);

            uint64_t v54 = swift_allocObject();
            long long v311 = xmmword_1003F8B80;
            *(_OWORD *)(v54 + 16) = xmmword_1003F8B80;
            *(void *)(v54 + 56) = &type metadata for String;
            unint64_t v55 = sub_10001D424();
            *(void *)(v54 + 32) = v47;
            *(void *)(v54 + 40) = v49;
            *(void *)(v54 + 96) = &type metadata for String;
            *(void *)(v54 + 104) = v55;
            uint64_t v56 = v313;
            *(void *)(v54 + 64) = v55;
            *(void *)(v54 + 72) = v56;
            *(void *)(v54 + 80) = v312;
            uint64_t v57 = String.init(format:_:)();
            NSString v59 = v58;
            swift_bridgeObjectRelease();
            id v60 = [v50 mainBundle];
            v61._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
            v321._object = (void *)0xE000000000000000;
            v61._object = (void *)0x8000000100427190;
            v62._uint64_t countAndFlagsBits = 0;
            v62._object = (void *)0xE000000000000000;
            v321._uint64_t countAndFlagsBits = 0;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v61, (Swift::String_optional)0, (NSBundle)v60, v62, v321);

            uint64_t v63 = swift_allocObject();
            *(_OWORD *)(v63 + 16) = v311;
            *(void *)(v63 + 56) = &type metadata for Int;
            *(void *)(v63 + 64) = &protocol witness table for Int;
            *(void *)(v63 + 32) = v6;
            *(void *)(v63 + 96) = &type metadata for Float;
            *(void *)(v63 + 104) = &protocol witness table for Float;
            *(float *)(v63 + 72) = v23;
            uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
            object = v65;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            NSString v67 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v67 floatValue];
            float v69 = v68;

            float v70 = v69 * 12.0;
            NSString v71 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            uint64_t v72 = v57;
            [v71 floatValue];
LABEL_72:
            float v269 = v73;

            float v143 = v70 + v269;
            char v144 = 2;
            goto LABEL_81;
          }
          goto LABEL_104;
        }
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
LABEL_107:
        __break(1u);
        goto LABEL_108;
      }
      uint64_t v167 = (uint64_t)v79;
      if (!(uint64_t)v79)
      {
        v233 = self;
        id v234 = [v233 mainBundle];
        unint64_t v307 = 0x8000000100426F60;
        if (v315)
        {
          v235._uint64_t countAndFlagsBits = 1835212848;
          v235._object = (void *)0xE400000000000000;
          v236._uint64_t countAndFlagsBits = 0;
          v236._object = (void *)0xE000000000000000;
          unint64_t v237 = 0xD00000000000009DLL;
          Swift::String v238 = NSLocalizedString(_:tableName:bundle:value:comment:)(v235, (Swift::String_optional)0, (NSBundle)v234, v236, *(Swift::String *)(&v307 - 1));
          NSString v59 = v238._object;

          id v239 = [v233 mainBundle];
          unint64_t v240 = 0xD000000000000010;
          unint64_t v308 = 0xE000000000000000;
          uint64_t v72 = v238._countAndFlagsBits;
          v241 = "Zero centimeters";
        }
        else
        {
          v290._uint64_t countAndFlagsBits = 0x6D632031203CLL;
          v290._object = (void *)0xE600000000000000;
          v291._uint64_t countAndFlagsBits = 0;
          v291._object = (void *)0xE000000000000000;
          unint64_t v292 = 0xD00000000000009DLL;
          Swift::String v293 = NSLocalizedString(_:tableName:bundle:value:comment:)(v290, (Swift::String_optional)0, (NSBundle)v234, v291, *(Swift::String *)(&v307 - 1));
          NSString v59 = v293._object;

          id v239 = [v233 mainBundle];
          unint64_t v240 = 0xD000000000000018;
          unint64_t v308 = 0xE000000000000000;
          uint64_t v72 = v293._countAndFlagsBits;
          v241 = "Less than one centimeter";
        }
        unint64_t v294 = (unint64_t)(v241 - 32) | 0x8000000000000000;
        v295._uint64_t countAndFlagsBits = 0;
        v295._object = (void *)0xE000000000000000;
        uint64_t v296 = 0;
        Swift::String v297 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v240, (Swift::String_optional)0, (NSBundle)v239, v295, *(Swift::String *)(&v308 - 1));
        uint64_t countAndFlagsBits = v297._countAndFlagsBits;
        object = v297._object;

        char v144 = 1;
        goto LABEL_80;
      }
      v319._uint64_t countAndFlagsBits = (uint64_t)v79;
      *(void *)&long long v318 = dispatch thunk of CustomStringConvertible.description.getter();
      if (qword_1004C2BA0 != -1) {
        swift_once();
      }
      v168 = (void *)qword_1004F83F8;
      id v169 = [objc_allocWithZone((Class)NSDecimalNumber) initWithInteger:v167];
      id v170 = [v168 stringFromNumber:v169];

      if (!v170) {
        goto LABEL_106;
      }
      uint64_t v171 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v173 = v172;

      v174 = self;
      id v175 = [v174 mainBundle];
      v330._object = (void *)0x8000000100426F60;
      v176._uint64_t countAndFlagsBits = 0x6D63204025;
      v176._object = (void *)0xE500000000000000;
      v177._uint64_t countAndFlagsBits = 0;
      v177._object = (void *)0xE000000000000000;
      v330._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v176, (Swift::String_optional)0, (NSBundle)v175, v177, v330);

      sub_100012894((uint64_t *)&unk_1004D2460);
      uint64_t v178 = swift_allocObject();
      long long v316 = xmmword_1003F87F0;
      *(_OWORD *)(v178 + 16) = xmmword_1003F87F0;
      *(void *)(v178 + 56) = &type metadata for String;
      *(void *)(v178 + 64) = sub_10001D424();
      *(void *)(v178 + 32) = v171;
      *(void *)(v178 + 40) = v173;
      uint64_t v72 = String.init(format:_:)();
      NSString v59 = v179;
      swift_bridgeObjectRelease();
      id v180 = [v174 mainBundle];
      v331._object = (void *)0xE000000000000000;
      v181._uint64_t countAndFlagsBits = 0x69746E6563204025;
      v181._object = (void *)0xEE0073726574656DLL;
      v182._uint64_t countAndFlagsBits = 0;
      v182._object = (void *)0xE000000000000000;
      v331._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v181, (Swift::String_optional)0, (NSBundle)v180, v182, v331);

      uint64_t v183 = swift_allocObject();
      *(_OWORD *)(v183 + 16) = v316;
      *(void *)(v183 + 56) = &type metadata for Int;
      *(void *)(v183 + 64) = &protocol witness table for Int;
      *(void *)(v183 + 32) = v167;
      uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
      object = v184;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_48:
      NSString v185 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v185 floatValue];
      float v143 = v186;

      char v144 = 1;
      goto LABEL_81;
    }
    sub_100012894((uint64_t *)&unk_1004D2460);
    uint64_t v80 = swift_allocObject();
    long long v318 = xmmword_1003F87F0;
    *(_OWORD *)(v80 + 16) = xmmword_1003F87F0;
    *(void *)(v80 + 56) = &type metadata for Float;
    *(void *)(v80 + 64) = &protocol witness table for Float;
    *(float *)(v80 + 32) = v17;
    *(void *)&long long v316 = String.init(format:_:)();
    if (qword_1004C2BA8 == -1)
    {
LABEL_22:
      NSString v81 = (void *)qword_1004F8400;
      id v82 = objc_allocWithZone((Class)NSNumber);
      *(float *)&double v83 = v17;
      id v84 = [v82 initWithFloat:v83];
      id v85 = [v81 stringFromNumber:v84];

      if (!v85)
      {
LABEL_102:
        __break(1u);
        goto LABEL_103;
      }
      uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v88 = v87;

      uint64_t v89 = self;
      id v90 = [v89 mainBundle];
      v322._object = (void *)0x8000000100426F60;
      v91._uint64_t countAndFlagsBits = 0x6D63204025;
      v91._object = (void *)0xE500000000000000;
      v92._uint64_t countAndFlagsBits = 0;
      v92._object = (void *)0xE000000000000000;
      v322._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v91, (Swift::String_optional)0, (NSBundle)v90, v92, v322);

      uint64_t v93 = swift_allocObject();
      *(_OWORD *)(v93 + 16) = v318;
      *(void *)(v93 + 56) = &type metadata for String;
      *(void *)(v93 + 64) = sub_10001D424();
      *(void *)(v93 + 32) = v86;
      *(void *)(v93 + 40) = v88;
      uint64_t v72 = String.init(format:_:)();
      NSString v59 = v94;
      swift_bridgeObjectRelease();
      id v95 = [v89 mainBundle];
      v96._uint64_t countAndFlagsBits = 0xD000000000000018;
      v323._object = (void *)0xE000000000000000;
      v96._object = (void *)0x8000000100427170;
      v97._uint64_t countAndFlagsBits = 0;
      v97._object = (void *)0xE000000000000000;
      v323._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v96, (Swift::String_optional)0, (NSBundle)v95, v97, v323);

      uint64_t v98 = swift_allocObject();
      *(_OWORD *)(v98 + 16) = v318;
      *(void *)(v98 + 56) = &type metadata for Float;
      *(void *)(v98 + 64) = &protocol witness table for Float;
      *(float *)(v98 + 32) = v17;
      uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
      object = v99;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    }
LABEL_89:
    swift_once();
    goto LABEL_22;
  }
LABEL_110:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10012EDC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  uint64_t v6 = sub_100012894(&qword_1004CC7A8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  char v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int v12 = (char *)v32 - v11;
  float v13 = 5000.0;
  if (a3 <= 5000.0) {
    float v13 = a3;
  }
  if (a3 < 0.0) {
    float v13 = 0.0;
  }
  if (a1 == 1)
  {
    id v14 = v34;
    NSString v15 = &v35;
    sub_10012C948(1, 0, 0, v34, v13);
    unsigned int v16 = (uint64_t *)&v36;
LABEL_20:
    uint64_t v26 = *v14;
    uint64_t v27 = v14[1];
    int v28 = *((_DWORD *)v14 + 8);
    char v29 = *((unsigned char *)v14 + 36);
    char v30 = *((unsigned char *)v14 + 37);
    sub_100026A8C((uint64_t)v15, (uint64_t)v16);
    uint64_t result = sub_1000DB4E0((uint64_t)v16);
    *(void *)a2 = v26;
    *(void *)(a2 + 8) = v27;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0;
    *(_DWORD *)(a2 + 32) = v28;
    *(unsigned char *)(a2 + 36) = v29;
    *(unsigned char *)(a2 + 37) = v30;
    return result;
  }
  if (!a1)
  {
    float v17 = self;
    id v18 = [v17 meters];
    sub_10001C99C(0, &qword_1004CC7B0);
    Measurement.init(value:unit:)();
    id v19 = [v17 inches];
    Measurement<>.converted(to:)();

    Measurement.value.getter();
    double v21 = v20;
    float v22 = *(void (**)(char *, uint64_t))(v7 + 8);
    v22(v10, v6);
    *(float *)&double v21 = v21;
    v22(v12, v6);
    float v23 = roundf(*(float *)&v21 + *(float *)&v21) * 0.5;
    if ((~LODWORD(v23) & 0x7F800000) != 0)
    {
      if (v23 > -9.2234e18)
      {
        if (v23 < 9.2234e18)
        {
          NSString v15 = &v33;
          uint64_t v24 = (uint64_t)v23;
          if ((unint64_t)(uint64_t)v23 >= 0xA)
          {
            if ((unint64_t)((uint64_t)v23 - 10) >= 0x1A)
            {
              if (v24 >= 36)
              {
                float v25 = 30.455;
                if ((unint64_t)v24 < 0x78) {
                  float v25 = 1.17;
                }
              }
              else
              {
                float v25 = 30.455;
              }
            }
            else
            {
              float v25 = 0.85;
            }
          }
          else
          {
            float v25 = 0.089;
          }
          id v14 = v32;
          sub_10012C948(0, 0, 0, v32, v25);
          unsigned int v16 = v34;
          goto LABEL_20;
        }
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_23:
    __break(1u);
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10012F124(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100012894(&qword_1004CC7A8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  char v10 = (char *)&v152 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int v12 = (char *)&v152 - v11;
  float v13 = self;
  id v14 = [v13 meters];
  sub_10001C99C(0, &qword_1004CC7B0);
  Measurement.init(value:unit:)();
  id v15 = [v13 inches];
  Measurement<>.converted(to:)();

  Measurement.value.getter();
  double v17 = v16;
  id v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v10, v6);
  float v19 = v17;
  v18(v12, v6);
  float v20 = roundf(v19 + v19) * 0.5;
  if ((~LODWORD(v20) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_49;
  }
  if (v20 <= -9.2234e18)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if (v20 >= 9.2234e18)
  {
LABEL_50:
    __break(1u);
LABEL_51:
    swift_once();
    goto LABEL_8;
  }
  char v10 = (char *)(uint64_t)v20;
  if ((uint64_t)v20)
  {
    sub_100012894((uint64_t *)&unk_1004D2460);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1003F87F0;
    *(void *)(v21 + 56) = &type metadata for Int;
    *(void *)(v21 + 64) = &protocol witness table for Int;
    *(void *)(v21 + 32) = v10;
    uint64_t v159 = String.init(format:_:)();
    *(void *)&long long v161 = v22;
  }
  else
  {
    uint64_t v159 = 0;
    *(void *)&long long v161 = 0xE000000000000000;
  }
  uint64_t v160 = a3;
  if (qword_1004C2BA0 != -1) {
    goto LABEL_51;
  }
LABEL_8:
  float v23 = (void *)qword_1004F83F8;
  id v24 = [objc_allocWithZone((Class)NSDecimalNumber) initWithInteger:v10];
  id v25 = [v23 stringFromNumber:v24];

  if (!v25)
  {
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v27;

  if (v19 >= 0.0 && v19 < 12.0)
  {
    if ((float)(v20 - (float)(uint64_t)v10) <= 0.00000011921)
    {
      uint64_t v31 = v160;
      if (v10)
      {
        uint64_t v98 = self;
        id v99 = [v98 mainBundle];
        v166._object = (void *)0x8000000100426F60;
        v100._uint64_t countAndFlagsBits = 0x9D80E24025;
        v100._object = (void *)0xA500000000000000;
        v101._uint64_t countAndFlagsBits = 0;
        v101._object = (void *)0xE000000000000000;
        v166._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v100, (Swift::String_optional)0, (NSBundle)v99, v101, v166);

        sub_100012894((uint64_t *)&unk_1004D2460);
        uint64_t v102 = swift_allocObject();
        long long v158 = xmmword_1003F87F0;
        *(_OWORD *)(v102 + 16) = xmmword_1003F87F0;
        *(void *)(v102 + 56) = &type metadata for String;
        *(void *)(v102 + 64) = sub_10001D424();
        *(void *)(v102 + 32) = v26;
        *(void *)(v102 + 40) = v28;
        uint64_t countAndFlagsBits = String.init(format:_:)();
        object = v103;
        swift_bridgeObjectRelease();
        id v104 = [v98 mainBundle];
        v167._object = (void *)0xE000000000000000;
        v105._uint64_t countAndFlagsBits = 0x6568636E69204025;
        v105._object = (void *)0xE900000000000073;
        v106._uint64_t countAndFlagsBits = 0;
        v106._object = (void *)0xE000000000000000;
        v167._uint64_t countAndFlagsBits = 0;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v105, (Swift::String_optional)0, (NSBundle)v104, v106, v167);

        uint64_t v107 = swift_allocObject();
        *(_OWORD *)(v107 + 16) = v158;
        *(void *)(v107 + 56) = &type metadata for Int;
        *(void *)(v107 + 64) = &protocol witness table for Int;
        *(void *)(v107 + 32) = v10;
        uint64_t v44 = static String.localizedStringWithFormat(_:_:)();
        id v46 = v108;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        NSString v109 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v109 floatValue];
        float v50 = v110;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v134 = self;
        id v135 = [v134 mainBundle];
        unint64_t v150 = 0x8000000100426F60;
        if (a2)
        {
          v136._uint64_t countAndFlagsBits = 2642469424;
          v136._object = (void *)0xA400000000000000;
          v137._uint64_t countAndFlagsBits = 0;
          v137._object = (void *)0xE000000000000000;
          unint64_t v138 = 0xD00000000000009DLL;
          Swift::String v139 = NSLocalizedString(_:tableName:bundle:value:comment:)(v136, (Swift::String_optional)0, (NSBundle)v135, v137, *(Swift::String *)(&v150 - 1));
          uint64_t countAndFlagsBits = v139._countAndFlagsBits;
          object = v139._object;

          id v140 = [v134 mainBundle];
          unint64_t v151 = 0xE000000000000000;
          unint64_t v141 = 0x636E69206F72655ALL;
          unint64_t v142 = 0xEB00000000736568;
        }
        else
        {
          v143._uint64_t countAndFlagsBits = 0x9D80E2BDC2203CLL;
          v143._object = (void *)0xA700000000000000;
          v144._uint64_t countAndFlagsBits = 0;
          v144._object = (void *)0xE000000000000000;
          unint64_t v145 = 0xD00000000000009DLL;
          Swift::String v146 = NSLocalizedString(_:tableName:bundle:value:comment:)(v143, (Swift::String_optional)0, (NSBundle)v135, v144, *(Swift::String *)(&v150 - 1));
          uint64_t countAndFlagsBits = v146._countAndFlagsBits;
          object = v146._object;

          id v140 = [v134 mainBundle];
          unint64_t v141 = 0xD000000000000016;
          unint64_t v151 = 0xE000000000000000;
          unint64_t v142 = 0x80000001004270D0;
        }
        v147._uint64_t countAndFlagsBits = 0;
        v147._object = (void *)0xE000000000000000;
        uint64_t v148 = 0;
        Swift::String v149 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v141, (Swift::String_optional)0, (NSBundle)v140, v147, *(Swift::String *)(&v151 - 1));
        uint64_t v44 = v149._countAndFlagsBits;
        id v46 = v149._object;

        float v50 = 0.0;
      }
    }
    else
    {
      uint64_t v31 = v160;
      if (v10)
      {
        uint64_t v32 = self;
        id v33 = [v32 mainBundle];
        v162._object = (void *)0x8000000100426F60;
        v34._uint64_t countAndFlagsBits = 0x9D80E2BDC24025;
        v34._object = (void *)0xA700000000000000;
        v35._uint64_t countAndFlagsBits = 0;
        v35._object = (void *)0xE000000000000000;
        v162._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v34, (Swift::String_optional)0, (NSBundle)v33, v35, v162);

        sub_100012894((uint64_t *)&unk_1004D2460);
        uint64_t v36 = swift_allocObject();
        long long v158 = xmmword_1003F87F0;
        *(_OWORD *)(v36 + 16) = xmmword_1003F87F0;
        *(void *)(v36 + 56) = &type metadata for String;
        *(void *)(v36 + 64) = sub_10001D424();
        *(void *)(v36 + 32) = v26;
        *(void *)(v36 + 40) = v28;
        uint64_t countAndFlagsBits = String.init(format:_:)();
        object = v38;
        swift_bridgeObjectRelease();
        id v40 = [v32 mainBundle];
        v41._uint64_t countAndFlagsBits = 0xD000000000000014;
        v163._object = (void *)0xE000000000000000;
        v41._object = (void *)0x80000001004270F0;
        v42._uint64_t countAndFlagsBits = 0;
        v42._object = (void *)0xE000000000000000;
        v163._uint64_t countAndFlagsBits = 0;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v41, (Swift::String_optional)0, (NSBundle)v40, v42, v163);

        uint64_t v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = v158;
        *(void *)(v43 + 56) = &type metadata for Int;
        *(void *)(v43 + 64) = &protocol witness table for Int;
        *(void *)(v43 + 32) = v10;
        uint64_t v44 = static String.localizedStringWithFormat(_:_:)();
        id v46 = v45;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        NSString v47 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v47 floatValue];
        float v49 = v48;

        float v50 = v49 + 0.5;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v124 = self;
        id v125 = [v124 mainBundle];
        v170._object = (void *)0x8000000100426F60;
        v126._uint64_t countAndFlagsBits = 0x9D80E2BDC24025;
        v126._object = (void *)0xA700000000000000;
        v127._uint64_t countAndFlagsBits = 0;
        v127._object = (void *)0xE000000000000000;
        v170._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v126, (Swift::String_optional)0, (NSBundle)v125, v127, v170);

        sub_100012894((uint64_t *)&unk_1004D2460);
        uint64_t v128 = swift_allocObject();
        *(_OWORD *)(v128 + 16) = xmmword_1003F87F0;
        *(void *)(v128 + 56) = &type metadata for String;
        *(void *)(v128 + 64) = sub_10001D424();
        *(void *)(v128 + 32) = 0;
        *(void *)(v128 + 40) = 0xE000000000000000;
        uint64_t countAndFlagsBits = String.init(format:_:)();
        object = v129;
        swift_bridgeObjectRelease();
        id v130 = [v124 mainBundle];
        v171._object = (void *)0xE000000000000000;
        v131._uint64_t countAndFlagsBits = 0x206E6120666C6148;
        v131._object = (void *)0xEC00000068636E69;
        v132._uint64_t countAndFlagsBits = 0;
        v132._object = (void *)0xE000000000000000;
        v171._uint64_t countAndFlagsBits = 0;
        Swift::String v133 = NSLocalizedString(_:tableName:bundle:value:comment:)(v131, (Swift::String_optional)0, (NSBundle)v130, v132, v171);
        uint64_t v44 = v133._countAndFlagsBits;
        id v46 = v133._object;

        float v50 = 0.5;
      }
    }
    goto LABEL_42;
  }
  BOOL v30 = v19 >= 12.0 && v19 < 36.0;
  if (!v30 || (a1 & 1) == 0)
  {
    Swift::String v111 = self;
    id v112 = [v111 mainBundle];
    v168._object = (void *)0x8000000100426F60;
    v113._uint64_t countAndFlagsBits = 0x9D80E24025;
    v113._object = (void *)0xA500000000000000;
    v114._uint64_t countAndFlagsBits = 0;
    v114._object = (void *)0xE000000000000000;
    v168._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v113, (Swift::String_optional)0, (NSBundle)v112, v114, v168);

    sub_100012894((uint64_t *)&unk_1004D2460);
    uint64_t v115 = swift_allocObject();
    long long v158 = xmmword_1003F87F0;
    *(_OWORD *)(v115 + 16) = xmmword_1003F87F0;
    *(void *)(v115 + 56) = &type metadata for String;
    *(void *)(v115 + 64) = sub_10001D424();
    *(void *)(v115 + 32) = v26;
    *(void *)(v115 + 40) = v28;
    uint64_t countAndFlagsBits = String.init(format:_:)();
    object = v116;
    swift_bridgeObjectRelease();
    id v117 = [v111 mainBundle];
    v169._object = (void *)0xE000000000000000;
    v118._uint64_t countAndFlagsBits = 0x6568636E69204025;
    v118._object = (void *)0xE900000000000073;
    v119._uint64_t countAndFlagsBits = 0;
    v119._object = (void *)0xE000000000000000;
    v169._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v118, (Swift::String_optional)0, (NSBundle)v117, v119, v169);

    uint64_t v120 = swift_allocObject();
    *(_OWORD *)(v120 + 16) = v158;
    *(void *)(v120 + 56) = &type metadata for Int;
    *(void *)(v120 + 64) = &protocol witness table for Int;
    *(void *)(v120 + 32) = v10;
    uint64_t v44 = static String.localizedStringWithFormat(_:_:)();
    id v46 = v121;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSString v122 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v122 floatValue];
    float v50 = v123;

    goto LABEL_41;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  float v51 = v19 / 12.0;
  if ((~COERCE_INT(v19 / 12.0) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_53;
  }
  if (v51 <= -9.2234e18)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (v51 >= 9.2234e18)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  uint64_t v52 = (uint64_t)v51;
  uint64_t v53 = 12 * (uint64_t)v51;
  if ((unsigned __int128)((uint64_t)v51 * (__int128)12) >> 64 != v53 >> 63)
  {
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  float v54 = roundf(v19 - (float)v53);
  if (v54 == 12.0) {
    float v55 = 0.0;
  }
  else {
    float v55 = v54;
  }
  if (v54 == 12.0) {
    uint64_t v56 = v52 + 1;
  }
  else {
    uint64_t v56 = v52;
  }
  sub_100012894((uint64_t *)&unk_1004D2460);
  uint64_t v57 = swift_allocObject();
  long long v161 = xmmword_1003F87F0;
  *(_OWORD *)(v57 + 16) = xmmword_1003F87F0;
  *(void *)(v57 + 56) = &type metadata for Int;
  *(void *)(v57 + 64) = &protocol witness table for Int;
  *(void *)(v57 + 32) = v56;
  uint64_t v159 = String.init(format:_:)();
  uint64_t v59 = v58;
  id v60 = (void *)qword_1004F83F8;
  id v61 = [objc_allocWithZone((Class)NSDecimalNumber) initWithInteger:v56];
  id v62 = [v60 stringFromNumber:v61];

  if (!v62) {
    goto LABEL_60;
  }
  uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v65 = v64;

  uint64_t v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = v161;
  if ((~LODWORD(v55) & 0x7F800000) == 0) {
    goto LABEL_56;
  }
  if (v55 <= -9.2234e18)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  if (v55 >= 9.2234e18)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v153 = v65;
  uint64_t v154 = v63;
  *(void *)&long long v158 = v59;
  *(void *)&long long v161 = v56;
  *(void *)(v66 + 56) = &type metadata for Int;
  *(void *)(v66 + 64) = &protocol witness table for Int;
  uint64_t v155 = (uint64_t)v55;
  *(void *)(v66 + 32) = (uint64_t)v55;
  uint64_t v156 = String.init(format:_:)();
  uint64_t v157 = v67;
  float v68 = (void *)qword_1004F83F8;
  id v69 = objc_allocWithZone((Class)NSDecimalNumber);
  *(float *)&double v70 = v55;
  id v71 = [v69 initWithFloat:v70];
  id v72 = [v68 stringFromNumber:v71];

  if (v72)
  {
    uint64_t v73 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v75 = v74;

    double v76 = self;
    id v77 = [v76 mainBundle];
    v78.value._uint64_t countAndFlagsBits = 0xD000000000000014;
    v164._object = (void *)0x8000000100426F60;
    v78.value._object = (void *)0x8000000100427090;
    v79._uint64_t countAndFlagsBits = 0x20B280E240243125;
    v79._object = (void *)0xAFB380E240243225;
    v80._uint64_t countAndFlagsBits = 0;
    v80._object = (void *)0xE000000000000000;
    v164._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v79, v78, (NSBundle)v77, v80, v164);

    uint64_t v81 = swift_allocObject();
    long long v152 = xmmword_1003F8B80;
    *(_OWORD *)(v81 + 16) = xmmword_1003F8B80;
    *(void *)(v81 + 56) = &type metadata for String;
    unint64_t v82 = sub_10001D424();
    uint64_t v83 = v153;
    *(void *)(v81 + 32) = v154;
    *(void *)(v81 + 40) = v83;
    *(void *)(v81 + 96) = &type metadata for String;
    *(void *)(v81 + 104) = v82;
    *(void *)(v81 + 64) = v82;
    *(void *)(v81 + 72) = v73;
    *(void *)(v81 + 80) = v75;
    uint64_t countAndFlagsBits = String.init(format:_:)();
    object = v84;
    swift_bridgeObjectRelease();
    id v85 = [v76 mainBundle];
    v86._uint64_t countAndFlagsBits = 0xD000000000000011;
    v165._object = (void *)0xE000000000000000;
    v86._object = (void *)0x80000001004270B0;
    v87._uint64_t countAndFlagsBits = 0;
    v87._object = (void *)0xE000000000000000;
    v165._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v86, (Swift::String_optional)0, (NSBundle)v85, v87, v165);

    uint64_t v88 = swift_allocObject();
    *(_OWORD *)(v88 + 16) = v152;
    *(void *)(v88 + 56) = &type metadata for Int;
    *(void *)(v88 + 32) = v161;
    *(void *)(v88 + 96) = &type metadata for Int;
    *(void *)(v88 + 104) = &protocol witness table for Int;
    uint64_t v89 = v155;
    *(void *)(v88 + 64) = &protocol witness table for Int;
    *(void *)(v88 + 72) = v89;
    uint64_t v44 = static String.localizedStringWithFormat(_:_:)();
    id v46 = v90;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSString v91 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v91 floatValue];
    float v93 = v92;

    float v94 = v93 * 12.0;
    NSString v95 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v95 floatValue];
    float v97 = v96;

    float v50 = v94 + v97;
LABEL_41:
    uint64_t v31 = v160;
LABEL_42:
    *(void *)uint64_t v31 = countAndFlagsBits;
    *(void *)(v31 + 8) = object;
    *(void *)(v31 + 16) = v44;
    *(void *)(v31 + 24) = v46;
    *(float *)(v31 + 32) = v50;
    *(_WORD *)(v31 + 36) = 1024;
    return;
  }
LABEL_61:
  __break(1u);
}

void sub_10013029C(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100012894(&qword_1004CC7A8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  char v10 = (char *)v65 - v9;
  uint64_t v11 = self;
  id v12 = [v11 meters];
  sub_10001C99C(0, &qword_1004CC7B0);
  Measurement.init(value:unit:)();
  id v13 = [v11 centimeters];
  Measurement<>.converted(to:)();

  Measurement.value.getter();
  double v15 = v14;
  double v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v8, v4);
  float v17 = v15;
  v16(v10, v4);
  float v18 = roundf(v17);
  if (v18 == 0.0)
  {
    float v19 = self;
    id v20 = [v19 mainBundle];
    unint64_t v63 = 0x8000000100426F60;
    if (a1)
    {
      v21._uint64_t countAndFlagsBits = 1835212848;
      v21._object = (void *)0xE400000000000000;
      v22._uint64_t countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      unint64_t v23 = 0xD00000000000009DLL;
      Swift::String v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, *(Swift::String *)(&v63 - 1));
      uint64_t countAndFlagsBits = v24._countAndFlagsBits;
      object = v24._object;

      id v27 = [v19 mainBundle];
      unint64_t v28 = 0xD000000000000010;
      unint64_t v64 = 0xE000000000000000;
      char v29 = "Zero centimeters";
    }
    else
    {
      v55._uint64_t countAndFlagsBits = 0x6D632031203CLL;
      v55._object = (void *)0xE600000000000000;
      v56._uint64_t countAndFlagsBits = 0;
      v56._object = (void *)0xE000000000000000;
      unint64_t v57 = 0xD00000000000009DLL;
      Swift::String v58 = NSLocalizedString(_:tableName:bundle:value:comment:)(v55, (Swift::String_optional)0, (NSBundle)v20, v56, *(Swift::String *)(&v63 - 1));
      uint64_t countAndFlagsBits = v58._countAndFlagsBits;
      object = v58._object;

      id v27 = [v19 mainBundle];
      unint64_t v28 = 0xD000000000000018;
      unint64_t v64 = 0xE000000000000000;
      char v29 = "Less than one centimeter";
    }
    unint64_t v59 = (unint64_t)(v29 - 32) | 0x8000000000000000;
    v60._uint64_t countAndFlagsBits = 0;
    v60._object = (void *)0xE000000000000000;
    uint64_t v61 = 0;
    Swift::String v62 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v28, (Swift::String_optional)0, (NSBundle)v27, v60, *(Swift::String *)(&v64 - 1));
    uint64_t v49 = v62._countAndFlagsBits;
    float v51 = v62._object;

    int v54 = 0;
    goto LABEL_13;
  }
  sub_100012894((uint64_t *)&unk_1004D2460);
  uint64_t v30 = swift_allocObject();
  long long v66 = xmmword_1003F87F0;
  *(_OWORD *)(v30 + 16) = xmmword_1003F87F0;
  *(void *)(v30 + 56) = &type metadata for Float;
  *(void *)(v30 + 64) = &protocol witness table for Float;
  *(float *)(v30 + 32) = v17;
  v65[1] = String.init(format:_:)();
  if (qword_1004C2BB0 != -1) {
    swift_once();
  }
  uint64_t v31 = (void *)qword_1004F8408;
  id v32 = objc_allocWithZone((Class)NSDecimalNumber);
  *(float *)&double v33 = v17;
  id v34 = [v32 initWithFloat:v33];
  id v35 = [v31 stringFromNumber:v34];

  if (v35)
  {
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v38 = v37;

    double v39 = self;
    id v40 = [v39 mainBundle];
    v67._object = (void *)0x8000000100426F60;
    v41._uint64_t countAndFlagsBits = 0x6D63204025;
    v41._object = (void *)0xE500000000000000;
    v42._uint64_t countAndFlagsBits = 0;
    v42._object = (void *)0xE000000000000000;
    v67._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v41, (Swift::String_optional)0, (NSBundle)v40, v42, v67);

    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = v66;
    *(void *)(v43 + 56) = &type metadata for String;
    *(void *)(v43 + 64) = sub_10001D424();
    *(void *)(v43 + 32) = v36;
    *(void *)(v43 + 40) = v38;
    uint64_t countAndFlagsBits = String.init(format:_:)();
    object = v44;
    swift_bridgeObjectRelease();
    id v45 = [v39 mainBundle];
    v68._object = (void *)0xE000000000000000;
    v46._uint64_t countAndFlagsBits = 0x69746E6563204025;
    v46._object = (void *)0xEE0073726574656DLL;
    v47._uint64_t countAndFlagsBits = 0;
    v47._object = (void *)0xE000000000000000;
    v68._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v46, (Swift::String_optional)0, (NSBundle)v45, v47, v68);

    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = v66;
    if ((~LODWORD(v18) & 0x7F800000) != 0)
    {
      if (v18 > -9.2234e18)
      {
        if (v18 < 9.2234e18)
        {
          *(void *)(v48 + 56) = &type metadata for Int;
          *(void *)(v48 + 64) = &protocol witness table for Int;
          *(void *)(v48 + 32) = (uint64_t)v18;
          uint64_t v49 = static String.localizedStringWithFormat(_:_:)();
          float v51 = v50;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          NSString v52 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v52 floatValue];
          int v54 = v53;

LABEL_13:
          *(void *)a2 = countAndFlagsBits;
          *(void *)(a2 + 8) = object;
          *(void *)(a2 + 16) = v49;
          *(void *)(a2 + 24) = v51;
          *(_DWORD *)(a2 + 32) = v54;
          *(_WORD *)(a2 + 36) = 1024;
          return;
        }
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
}

float sub_1001308E4(char a1, char a2)
{
  uint64_t v4 = sub_100012894(&qword_1004CC7A8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  char v10 = (char *)&v18 - v9;
  id v11 = [self *(&off_10048F080)[a1]];
  sub_10001C99C(0, &qword_1004CC7B0);
  Measurement.init(value:unit:)();
  switch(a2)
  {
    case 1:
      id v12 = [self centimeters];
      break;
    case 2:
      id v12 = [self inches];
      break;
    case 3:
      id v12 = [self feet];
      break;
    default:
      id v12 = [self meters];
      break;
  }
  id v13 = v12;
  Measurement<>.converted(to:)();

  Measurement.value.getter();
  double v15 = v14;
  double v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v8, v4);
  v16(v10, v4);
  return v15;
}

uint64_t sub_100130B38@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t *a5@<X8>, float a6@<S0>)
{
  *(float *)&double v10 = a6;
  uint64_t v12 = sub_100012894(&qword_1004CC7B8);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  double v16 = &v178[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  uint64_t v18 = &v178[-v17];
  Swift::String v181 = a5;
  if (a1 == 1)
  {
    if (a4)
    {
      if (qword_1004C2BA8 == -1)
      {
LABEL_4:
        float v19 = (void *)qword_1004F8400;
        id v20 = objc_allocWithZone((Class)NSNumber);
        LODWORD(v21) = LODWORD(v10);
        id v22 = [v20 initWithFloat:v21];
        id v23 = [v19 stringFromNumber:v22];

        if (v23)
        {
          uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v26 = v25;

          id v27 = self;
          id v28 = [v27 mainBundle];
          v182._object = (void *)0x8000000100426F60;
          v29._uint64_t countAndFlagsBits = 0xB2C26D204025;
          v29._object = (void *)0xA600000000000000;
          v30._uint64_t countAndFlagsBits = 0;
          v30._object = (void *)0xE000000000000000;
          v182._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v182);

          sub_100012894((uint64_t *)&unk_1004D2460);
          uint64_t v31 = swift_allocObject();
          long long v180 = xmmword_1003F87F0;
          *(_OWORD *)(v31 + 16) = xmmword_1003F87F0;
          *(void *)(v31 + 56) = &type metadata for String;
          *(void *)(v31 + 64) = sub_10001D424();
          *(void *)(v31 + 32) = v24;
          *(void *)(v31 + 40) = v26;
          uint64_t v32 = String.init(format:_:)();
          uint64_t v34 = v33;
          swift_bridgeObjectRelease();
          id v35 = [v27 mainBundle];
          unint64_t v36 = 0xD00000000000001ALL;
          unint64_t v177 = 0xE000000000000000;
LABEL_21:
          id v77 = "%@ square meters (precise)";
LABEL_28:
          unint64_t v93 = (unint64_t)(v77 - 32) | 0x8000000000000000;
          v94._uint64_t countAndFlagsBits = 0;
          v94._object = (void *)0xE000000000000000;
          uint64_t v95 = 0;
          NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v36, (Swift::String_optional)0, (NSBundle)v35, v94, *(Swift::String *)(&v177 - 1));

          uint64_t v96 = swift_allocObject();
          *(_OWORD *)(v96 + 16) = v180;
          *(void *)(v96 + 56) = &type metadata for Float;
          *(void *)(v96 + 64) = &protocol witness table for Float;
          *(_DWORD *)(v96 + 32) = LODWORD(v10);
          uint64_t v97 = static String.localizedStringWithFormat(_:_:)();
          uint64_t v99 = v98;
          swift_bridgeObjectRelease();
LABEL_29:
          uint64_t result = swift_bridgeObjectRelease();
          Swift::String v101 = v181;
          *Swift::String v181 = v32;
          v101[1] = v34;
          v101[2] = v97;
          v101[3] = v99;
          *((_DWORD *)v101 + 8) = 0;
          *((_WORD *)v101 + 18) = 1025;
          return result;
        }
        __break(1u);
        goto LABEL_62;
      }
LABEL_55:
      swift_once();
      goto LABEL_4;
    }
    if ((*(float *)&v10 >= 0.1) | a2 & 1 && *(float *)&v10 >= 0.01 && (a3 & 1) == 0)
    {
      if (qword_1004C2BA8 == -1) {
        goto LABEL_19;
      }
      goto LABEL_57;
    }
    double v10 = *(float *)&v10;
    uint64_t v102 = self;
    id v103 = [v102 squareMeters];
    sub_10001C99C(0, &qword_1004CC7C0);
    Measurement.init(value:unit:)();
    id v104 = [v102 squareCentimeters];
    Measurement<>.converted(to:)();

    Measurement.value.getter();
    double v106 = v105;
    uint64_t v107 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
    v107(v16, v12);
    *(float *)&double v106 = v106;
    v107(v18, v12);
    float v108 = roundf(*(float *)&v106);
    if ((~LODWORD(v108) & 0x7F800000) == 0)
    {
      __break(1u);
LABEL_57:
      swift_once();
LABEL_19:
      Swift::String v62 = (void *)qword_1004F8400;
      id v63 = objc_allocWithZone((Class)NSNumber);
      LODWORD(v64) = LODWORD(v10);
      id v65 = [v63 initWithFloat:v64];
      id v66 = [v62 stringFromNumber:v65];

      if (v66)
      {
        uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v69 = v68;

        double v70 = self;
        id v71 = [v70 mainBundle];
        v72.value._uint64_t countAndFlagsBits = 0xD000000000000014;
        v184._object = (void *)0x8000000100426F60;
        v72.value._object = (void *)0x8000000100427090;
        v73._uint64_t countAndFlagsBits = 0xB2C26D204025;
        v73._object = (void *)0xA600000000000000;
        v74._uint64_t countAndFlagsBits = 0;
        v74._object = (void *)0xE000000000000000;
        v184._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v73, v72, (NSBundle)v71, v74, v184);

        sub_100012894((uint64_t *)&unk_1004D2460);
        uint64_t v75 = swift_allocObject();
        long long v180 = xmmword_1003F87F0;
        *(_OWORD *)(v75 + 16) = xmmword_1003F87F0;
        *(void *)(v75 + 56) = &type metadata for String;
        *(void *)(v75 + 64) = sub_10001D424();
        *(void *)(v75 + 32) = v67;
        *(void *)(v75 + 40) = v69;
        uint64_t v32 = String.init(format:_:)();
        uint64_t v34 = v76;
        swift_bridgeObjectRelease();
        id v35 = [v70 mainBundle];
        unint64_t v36 = 0xD00000000000001ALL;
        unint64_t v177 = 0xE000000000000000;
        goto LABEL_21;
      }
      goto LABEL_63;
    }
    if (v108 <= -9.2234e18)
    {
      __break(1u);
    }
    else if (v108 < 9.2234e18)
    {
      uint64_t v109 = (uint64_t)v108;
      if (!(uint64_t)v108)
      {
        id v143 = [v102 squareMeters];
        Measurement.init(value:unit:)();
        id v144 = [v102 squareCentimeters];
        Measurement<>.converted(to:)();

        Measurement.value.getter();
        double v10 = v145;
        v107(v16, v12);
        *(float *)&double v10 = v10;
        v107(v18, v12);
        if (qword_1004C2BA8 != -1) {
          swift_once();
        }
        Swift::String v146 = (void *)qword_1004F8400;
        id v147 = objc_allocWithZone((Class)NSNumber);
        LODWORD(v148) = LODWORD(v10);
        id v149 = [v147 initWithFloat:v148];
        id v150 = [v146 stringFromNumber:v149];

        if (v150)
        {
          uint64_t v151 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v153 = v152;

          uint64_t v154 = self;
          id v155 = [v154 mainBundle];
          v190._object = (void *)0x8000000100426F60;
          v156._uint64_t countAndFlagsBits = 0xB2C26D63204025;
          v156._object = (void *)0xA700000000000000;
          v157._uint64_t countAndFlagsBits = 0;
          v157._object = (void *)0xE000000000000000;
          v190._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v156, (Swift::String_optional)0, (NSBundle)v155, v157, v190);

          sub_100012894((uint64_t *)&unk_1004D2460);
          uint64_t v158 = swift_allocObject();
          long long v180 = xmmword_1003F87F0;
          *(_OWORD *)(v158 + 16) = xmmword_1003F87F0;
          *(void *)(v158 + 56) = &type metadata for String;
          *(void *)(v158 + 64) = sub_10001D424();
          *(void *)(v158 + 32) = v151;
          *(void *)(v158 + 40) = v153;
          uint64_t v32 = String.init(format:_:)();
          uint64_t v34 = v159;
          swift_bridgeObjectRelease();
          id v35 = [v154 mainBundle];
          unint64_t v36 = 0xD000000000000015;
          unint64_t v177 = 0xE000000000000000;
          id v77 = "%@ square centimeters";
          goto LABEL_28;
        }
        goto LABEL_67;
      }
      if (qword_1004C2BA0 != -1) {
        swift_once();
      }
      float v110 = (void *)qword_1004F83F8;
      id v111 = [objc_allocWithZone((Class)NSDecimalNumber) initWithInteger:v109];
      id v112 = [v110 stringFromNumber:v111];

      if (!v112) {
        goto LABEL_65;
      }
      uint64_t v113 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v115 = v114;

      Swift::String v116 = self;
      id v117 = [v116 mainBundle];
      v186._object = (void *)0x8000000100426F60;
      v118._uint64_t countAndFlagsBits = 0xB2C26D63204025;
      v118._object = (void *)0xA700000000000000;
      v119._uint64_t countAndFlagsBits = 0;
      v119._object = (void *)0xE000000000000000;
      v186._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v118, (Swift::String_optional)0, (NSBundle)v117, v119, v186);

      sub_100012894((uint64_t *)&unk_1004D2460);
      uint64_t v120 = swift_allocObject();
      long long v180 = xmmword_1003F87F0;
      *(_OWORD *)(v120 + 16) = xmmword_1003F87F0;
      *(void *)(v120 + 56) = &type metadata for String;
      *(void *)(v120 + 64) = sub_10001D424();
      *(void *)(v120 + 32) = v113;
      *(void *)(v120 + 40) = v115;
      uint64_t v32 = String.init(format:_:)();
      uint64_t v34 = v121;
      swift_bridgeObjectRelease();
      id v122 = [v116 mainBundle];
      v123._uint64_t countAndFlagsBits = 0xD000000000000015;
      v187._object = (void *)0xE000000000000000;
      v123._object = (void *)0x80000001004271F0;
      v124._uint64_t countAndFlagsBits = 0;
      v124._object = (void *)0xE000000000000000;
      v187._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v123, (Swift::String_optional)0, (NSBundle)v122, v124, v187);

      uint64_t v125 = swift_allocObject();
      *(_OWORD *)(v125 + 16) = v180;
      *(void *)(v125 + 56) = &type metadata for Int;
      *(void *)(v125 + 64) = &protocol witness table for Int;
      *(void *)(v125 + 32) = v109;
LABEL_43:
      uint64_t v97 = static String.localizedStringWithFormat(_:_:)();
      uint64_t v99 = v142;
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    __break(1u);
    goto LABEL_60;
  }
  int v179 = a3;
  LODWORD(v180) = a4;
  if (!a1)
  {
    uint64_t v37 = self;
    id v38 = [v37 squareMeters];
    sub_10001C99C(0, &qword_1004CC7C0);
    Measurement.init(value:unit:)();
    id v39 = [v37 squareFeet];
    Measurement<>.converted(to:)();

    Measurement.value.getter();
    double v10 = v40;
    Swift::String v41 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
    v41(v16, v12);
    *(float *)&double v10 = v10;
    v41(v18, v12);
    id v42 = [v37 squareFeet];
    Measurement.init(value:unit:)();
    id v43 = [v37 squareInches];
    Measurement<>.converted(to:)();

    Measurement.value.getter();
    double v45 = v44;
    v41(v16, v12);
    *(float *)&double v45 = v45;
    v41(v18, v12);
    float v46 = roundf(*(float *)&v45);
    if ((~LODWORD(v46) & 0x7F800000) != 0)
    {
      if (v46 > -9.2234e18)
      {
        if (v46 < 9.2234e18)
        {
          if (v180)
          {
            if (qword_1004C2BA8 != -1) {
              swift_once();
            }
            Swift::String v47 = (void *)qword_1004F8400;
            id v48 = objc_allocWithZone((Class)NSNumber);
            LODWORD(v49) = roundf(*(float *)&v10);
            id v50 = [v48 initWithFloat:v49];
            id v51 = [v47 stringFromNumber:v50];

            if (!v51)
            {
LABEL_62:
              __break(1u);
LABEL_63:
              __break(1u);
              goto LABEL_64;
            }
            uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v54 = v53;

            Swift::String v55 = self;
            id v56 = [v55 mainBundle];
            v183._object = (void *)0x8000000100426F60;
            v57._uint64_t countAndFlagsBits = 0xB2C27466204025;
            v57._object = (void *)0xA700000000000000;
            v58._uint64_t countAndFlagsBits = 0;
            v58._object = (void *)0xE000000000000000;
            v183._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v57, (Swift::String_optional)0, (NSBundle)v56, v58, v183);

            sub_100012894((uint64_t *)&unk_1004D2460);
            uint64_t v59 = swift_allocObject();
            long long v180 = xmmword_1003F87F0;
            *(_OWORD *)(v59 + 16) = xmmword_1003F87F0;
            *(void *)(v59 + 56) = &type metadata for String;
            *(void *)(v59 + 64) = sub_10001D424();
            *(void *)(v59 + 32) = v52;
            *(void *)(v59 + 40) = v54;
            uint64_t v32 = String.init(format:_:)();
            uint64_t v34 = v60;
            swift_bridgeObjectRelease();
            id v61 = [v55 mainBundle];
LABEL_27:
            id v35 = v61;
            unint64_t v36 = 0xD000000000000018;
            unint64_t v177 = 0xE000000000000000;
            id v77 = "%@ square feet (precise)";
            goto LABEL_28;
          }
          uint64_t v78 = (uint64_t)v46;
          if (uint64_t)v46 < 36 || (v179)
          {
            if (!v78)
            {
              id v160 = [v37 squareFeet];
              Measurement.init(value:unit:)();
              id v161 = [v37 squareInches];
              Measurement<>.converted(to:)();

              Measurement.value.getter();
              double v10 = v162;
              v41(v16, v12);
              *(float *)&double v10 = v10;
              v41(v18, v12);
              if (qword_1004C2BA8 != -1) {
                swift_once();
              }
              Swift::String v163 = (void *)qword_1004F8400;
              id v164 = objc_allocWithZone((Class)NSNumber);
              LODWORD(v165) = LODWORD(v10);
              id v166 = [v164 initWithFloat:v165];
              id v167 = [v163 stringFromNumber:v166];

              if (v167)
              {
                uint64_t v168 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v170 = v169;

                Swift::String v171 = self;
                id v172 = [v171 mainBundle];
                v191._object = (void *)0x8000000100426F60;
                v173._uint64_t countAndFlagsBits = 0x6E69207173204025;
                v173._object = (void *)0xE800000000000000;
                v174._uint64_t countAndFlagsBits = 0;
                v174._object = (void *)0xE000000000000000;
                v191._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
                NSLocalizedString(_:tableName:bundle:value:comment:)(v173, (Swift::String_optional)0, (NSBundle)v172, v174, v191);

                sub_100012894((uint64_t *)&unk_1004D2460);
                uint64_t v175 = swift_allocObject();
                long long v180 = xmmword_1003F87F0;
                *(_OWORD *)(v175 + 16) = xmmword_1003F87F0;
                *(void *)(v175 + 56) = &type metadata for String;
                *(void *)(v175 + 64) = sub_10001D424();
                *(void *)(v175 + 32) = v168;
                *(void *)(v175 + 40) = v170;
                uint64_t v32 = String.init(format:_:)();
                uint64_t v34 = v176;
                swift_bridgeObjectRelease();
                id v35 = [v171 mainBundle];
                unint64_t v36 = 0xD000000000000010;
                unint64_t v177 = 0xE000000000000000;
                id v77 = "%@ square inches";
                goto LABEL_28;
              }
              goto LABEL_68;
            }
            if (qword_1004C2BA0 != -1) {
              swift_once();
            }
            Swift::String v126 = (void *)qword_1004F83F8;
            id v127 = [objc_allocWithZone((Class)NSDecimalNumber) initWithInteger:v78];
            id v128 = [v126 stringFromNumber:v127];

            if (!v128) {
              goto LABEL_66;
            }
            uint64_t v129 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v131 = v130;

            Swift::String v132 = self;
            id v133 = [v132 mainBundle];
            v188._object = (void *)0x8000000100426F60;
            v134._uint64_t countAndFlagsBits = 0x6E69207173204025;
            v134._object = (void *)0xE800000000000000;
            v135._uint64_t countAndFlagsBits = 0;
            v135._object = (void *)0xE000000000000000;
            v188._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v134, (Swift::String_optional)0, (NSBundle)v133, v135, v188);

            sub_100012894((uint64_t *)&unk_1004D2460);
            uint64_t v136 = swift_allocObject();
            long long v180 = xmmword_1003F87F0;
            *(_OWORD *)(v136 + 16) = xmmword_1003F87F0;
            *(void *)(v136 + 56) = &type metadata for String;
            *(void *)(v136 + 64) = sub_10001D424();
            *(void *)(v136 + 32) = v129;
            *(void *)(v136 + 40) = v131;
            uint64_t v32 = String.init(format:_:)();
            uint64_t v34 = v137;
            swift_bridgeObjectRelease();
            id v138 = [v132 mainBundle];
            v139._uint64_t countAndFlagsBits = 0xD000000000000010;
            v189._object = (void *)0xE000000000000000;
            v139._object = (void *)0x8000000100427230;
            v140._uint64_t countAndFlagsBits = 0;
            v140._object = (void *)0xE000000000000000;
            v189._uint64_t countAndFlagsBits = 0;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v139, (Swift::String_optional)0, (NSBundle)v138, v140, v189);

            uint64_t v141 = swift_allocObject();
            *(_OWORD *)(v141 + 16) = v180;
            *(void *)(v141 + 56) = &type metadata for Int;
            *(void *)(v141 + 64) = &protocol witness table for Int;
            *(void *)(v141 + 32) = v78;
            goto LABEL_43;
          }
          if (qword_1004C2BA8 == -1)
          {
LABEL_25:
            Swift::String v79 = (void *)qword_1004F8400;
            id v80 = objc_allocWithZone((Class)NSNumber);
            LODWORD(v81) = LODWORD(v10);
            id v82 = [v80 initWithFloat:v81];
            id v83 = [v79 stringFromNumber:v82];

            if (!v83)
            {
LABEL_64:
              __break(1u);
LABEL_65:
              __break(1u);
LABEL_66:
              __break(1u);
LABEL_67:
              __break(1u);
LABEL_68:
              __break(1u);
              goto LABEL_69;
            }
            uint64_t v84 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v86 = v85;

            Swift::String v87 = self;
            id v88 = [v87 mainBundle];
            v185._object = (void *)0x8000000100426F60;
            v89._uint64_t countAndFlagsBits = 0x7466207173204025;
            v89._object = (void *)0xE800000000000000;
            v90._uint64_t countAndFlagsBits = 0;
            v90._object = (void *)0xE000000000000000;
            v185._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v89, (Swift::String_optional)0, (NSBundle)v88, v90, v185);

            sub_100012894((uint64_t *)&unk_1004D2460);
            uint64_t v91 = swift_allocObject();
            long long v180 = xmmword_1003F87F0;
            *(_OWORD *)(v91 + 16) = xmmword_1003F87F0;
            *(void *)(v91 + 56) = &type metadata for String;
            *(void *)(v91 + 64) = sub_10001D424();
            *(void *)(v91 + 32) = v84;
            *(void *)(v91 + 40) = v86;
            uint64_t v32 = String.init(format:_:)();
            uint64_t v34 = v92;
            swift_bridgeObjectRelease();
            id v61 = [v87 mainBundle];
            goto LABEL_27;
          }
LABEL_60:
          swift_once();
          goto LABEL_25;
        }
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_54;
  }
LABEL_69:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

float sub_10013200C(char a1, char a2)
{
  uint64_t v4 = sub_100012894(&qword_1004CC7B8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  double v10 = (char *)&v18 - v9;
  id v11 = [self *(&off_10048F0A0)[a1]];
  sub_10001C99C(0, &qword_1004CC7C0);
  Measurement.init(value:unit:)();
  switch(a2)
  {
    case 1:
      id v12 = [self squareCentimeters];
      break;
    case 2:
      id v12 = [self squareInches];
      break;
    case 3:
      id v12 = [self squareFeet];
      break;
    default:
      id v12 = [self squareMeters];
      break;
  }
  id v13 = v12;
  Measurement<>.converted(to:)();

  Measurement.value.getter();
  double v15 = v14;
  double v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v8, v4);
  v16(v10, v4);
  return v15;
}

BOOL sub_100132260(float32x2_t a1, float32x2_t a2, float32x2_t a3, float32x2_t a4)
{
  BOOL v4 = 0;
  float32x2_t v5 = vsub_f32(a3, a4);
  float32x2_t v6 = vsub_f32(a2, a4);
  float32x2_t v7 = vmul_f32(v5, v5);
  unsigned __int32 v8 = vadd_f32(v7, (float32x2_t)vdup_lane_s32((int32x2_t)v7, 1)).u32[0];
  float32x2_t v9 = vrsqrte_f32((float32x2_t)v8);
  float32x2_t v10 = vmul_f32(v9, vrsqrts_f32((float32x2_t)v8, vmul_f32(v9, v9)));
  float32x2_t v11 = vmul_n_f32(v5, vmul_f32(v10, vrsqrts_f32((float32x2_t)v8, vmul_f32(v10, v10))).f32[0]);
  float32x2_t v12 = vsub_f32(a1, a4);
  float32x2_t v13 = vmul_f32(v12, v11);
  float32x2_t v14 = vmul_f32(v6, v6);
  LODWORD(v15) = vadd_f32(v14, (float32x2_t)vdup_lane_s32((int32x2_t)v14, 1)).u32[0];
  if (vaddv_f32(v13) > 0.0)
  {
    float32x2_t v16 = vsub_f32(a1, vadd_f32(vmul_n_f32(v11, vadd_f32(v13, (float32x2_t)vdup_lane_s32((int32x2_t)v13, 1)).f32[0]), a4));
    float v17 = sqrtf(vaddv_f32(vmul_f32(v16, v16)));
    if (v17 > 0.0) {
      BOOL v4 = v17 < sqrtf(v15);
    }
  }
  BOOL result = 0;
  float32x2_t v19 = vrsqrte_f32((float32x2_t)LODWORD(v15));
  float32x2_t v20 = vmul_f32(v19, vrsqrts_f32((float32x2_t)LODWORD(v15), vmul_f32(v19, v19)));
  float32x2_t v21 = vmul_n_f32(v6, vmul_f32(v20, vrsqrts_f32((float32x2_t)LODWORD(v15), vmul_f32(v20, v20))).f32[0]);
  float32x2_t v22 = vmul_f32(v12, v21);
  if (vaddv_f32(v22) > 0.0)
  {
    float32x2_t v23 = vsub_f32(a1, vadd_f32(vmul_n_f32(v21, vadd_f32(v22, (float32x2_t)vdup_lane_s32((int32x2_t)v22, 1)).f32[0]), a4));
    float v24 = sqrtf(vaddv_f32(vmul_f32(v23, v23)));
    if (v24 > 0.0) {
      return v24 < sqrtf(vaddv_f32(v7)) && v4;
    }
  }
  return result;
}

uint64_t initializeWithCopy for MeasurementStringDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MeasurementStringDetails(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 37) = *(unsigned char *)(a2 + 37);
  return a1;
}

__n128 initializeWithTake for MeasurementStringDetails(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 30) = *(void *)(a2 + 30);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MeasurementStringDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  return a1;
}

uint64_t getEnumTagSinglePayload for MeasurementStringDetails(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 38)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MeasurementStringDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 36) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 38) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 38) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MeasurementStringDetails()
{
  return &type metadata for MeasurementStringDetails;
}

void *sub_100132548(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  __n128 result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_1000BBE34(0, v2, 0);
    __n128 result = _swiftEmptyArrayStorage;
    uint64_t v4 = (long long *)(a1 + 32);
    do
    {
      long long v5 = *v4;
      float32x2_t v9 = result;
      unint64_t v7 = result[2];
      unint64_t v6 = result[3];
      if (v7 >= v6 >> 1)
      {
        long long v8 = *v4;
        sub_1000BBE34((char *)(v6 > 1), v7 + 1, 1);
        long long v5 = v8;
        __n128 result = v9;
      }
      result[2] = v7 + 1;
      *(_OWORD *)&result[2 * v7 + 4] = v5;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_100132614(void **a1)
{
  int64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int64_t v2 = sub_1000BE244(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_10013A590(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_100132680()
{
  uint64_t v0 = type metadata accessor for UUID();
  sub_100021818(v0, qword_1004F8410);
  sub_1000217E0(v0, (uint64_t)qword_1004F8410);
  return UUID.init()();
}

uint64_t sub_1001326CC(void (*a1)(unsigned char *), uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 >= 2u)
  {
    swift_retain();
  }
  else
  {
    unint64_t v7 = *(uint64_t (**)(unsigned char *))(**(void **)(a3 + 144) + 400);
    swift_retain();
    swift_retain();
    long long v8 = (void (*)(unsigned char *, void))v7(v12);
    float32x2_t v10 = *v9;
    *float32x2_t v9 = 0;

    v8(v12, 0);
    swift_release();
  }
  *(unsigned char *)(a3 + 64) = a4;
  v12[0] = 0;
  a1(v12);
  return swift_release();
}

void sub_1001327C4()
{
  qword_1004F8428 = 0x3FA999999999999ALL;
}

void sub_1001327DC()
{
  dword_1004F8430 = 1147207680;
}

void sub_1001327EC()
{
  dword_1004F8434 = 1163984896;
}

void sub_1001327FC()
{
  dword_1004F8438 = 1063105495;
}

void sub_100132810()
{
  dword_1004F843C = 1048871919;
}

void sub_100132824()
{
  dword_1004F8440 = 1065289374;
}

void sub_100132838()
{
  dword_1004F8444 = 1064781546;
}

void sub_10013284C()
{
  dword_1004F8448 = 1065098332;
}

void sub_100132860()
{
  id v0 = [self standardUserDefaults];
  Defaults.peFirstPointMaxDistance.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 floatForKey:v1];
  int v3 = v2;

  dword_1004F844C = v3;
}

void sub_100132900()
{
  qword_1004F8450 = 30;
}

uint64_t sub_100132910()
{
  void (*v1)(void *__return_ptr, void);
  uint64_t v2;
  float v3;
  void (*v4)(void *__return_ptr, void);
  uint64_t v5;
  float v6;
  void (*v7)(void *__return_ptr, void);
  uint64_t v8;
  float v10;
  float v11;
  BOOL v12;
  void v13[8];
  char v14;
  float v15;
  char v16;
  float v17;
  char v18;

  NSString v1 = *(void (**)(void *__return_ptr, void))(**(void **)(v0 + 88) + 144);
  int v2 = swift_retain();
  v1(v13, v2);
  swift_release();
  if (v16) {
    return 0;
  }
  int v3 = v15;
  uint64_t v4 = *(void (**)(void *__return_ptr, void))(**(void **)(v0 + 88) + 144);
  long long v5 = swift_retain();
  v4(v13, v5);
  swift_release();
  if (v18) {
    return 0;
  }
  unint64_t v6 = v17;
  unint64_t v7 = *(void (**)(void *__return_ptr, void))(**(void **)(v0 + 88) + 144);
  long long v8 = swift_retain();
  v7(v13, v8);
  swift_release();
  if (v14) {
    return 0;
  }
  swift_beginAccess();
  sub_100012894(&qword_1004C6910);
  RingBuffer.append(_:)();
  swift_endAccess();
  swift_bridgeObjectRetain();
  RingBuffer<A>.average()();
  float32x2_t v11 = v10;
  swift_bridgeObjectRelease();
  float32x2_t v12 = v11 > 0.3;
  if (v3 > 0.3) {
    float32x2_t v12 = 1;
  }
  return v6 > 4.0 || v12;
}

BOOL sub_100132AC0(void *a1)
{
  void (*v16)(unint64_t *__return_ptr);
  id v17;
  unint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  void (*v22)(unint64_t *__return_ptr, uint64_t);
  uint64_t v23;
  id v24;
  unsigned __int8 v25;
  void (*v26)(unint64_t *__return_ptr, uint64_t);
  uint64_t v27;
  void *v28;
  void *v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  char v33;
  void (*v34)(unint64_t *__return_ptr, uint64_t);
  uint64_t v35;
  unint64_t v36;
  void *v37;
  double v38;
  double v39;
  unsigned char v40[16];
  unint64_t v41;
  void *v42;
  id v43;
  id v44;

  int v2 = (void **)v1;
  uint64_t v4 = type metadata accessor for ARCamera.TrackingState();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  unint64_t v7 = &v40[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  float32x2_t v9 = &v40[-v8];
  uint64_t v10 = type metadata accessor for SessionState();
  __chkstk_darwin(v10);
  float32x2_t v12 = &v40[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a1) {
    return 0;
  }
  if (*(unsigned char *)(v1 + 232))
  {
    [a1 timestamp];
    BOOL result = 0;
    *(void *)(v1 + 224) = v14;
    *(unsigned char *)(v1 + 232) = 0;
    return result;
  }
  double v15 = *(double *)(v1 + 224);
  float32x2_t v16 = *(void (**)(unint64_t *__return_ptr))(**(void **)(v1 + 136) + 144);
  swift_retain();
  float v17 = a1;
  v16(&v41);
  swift_release();
  uint64_t v18 = v41;
  if (v41 >> 62 == 2) {
    goto LABEL_15;
  }
  if (v41 >> 62 == 1) {
    goto LABEL_15;
  }
  [v17 timestamp];
  float32x2_t v20 = v19;
  [v17 timestamp];
  *(void *)(v1 + 224) = v21;
  *(unsigned char *)(v1 + 232) = 0;
  if (!*(unsigned char *)(v1 + 64)) {
    goto LABEL_15;
  }
  if (*(unsigned char *)(v1 + 64) == 1) {
    goto LABEL_15;
  }
  float32x2_t v22 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v1 + 104) + 144);
  float32x2_t v23 = swift_retain();
  v22(&v41, v23);
  swift_release();
  if ((v41 & 0x1000000) != 0) {
    goto LABEL_15;
  }
  if (ARFrame.isVIOTrackingUnacceptable()()) {
    goto LABEL_15;
  }
  float v24 = [self standardUserDefaults];
  uint64_t v25 = [v24 kADEdgeDetectionEnabled];

  if ((v25 & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v26 = *(void (**)(unint64_t *__return_ptr, uint64_t))(*v2[15] + 144);
  id v27 = swift_retain();
  v26(&v41, v27);
  swift_release();
  id v28 = (void *)v41;
  Swift::String v29 = v42;

  if (!v28) {
    goto LABEL_15;
  }
  (*(void (**)(void))((swift_isaMask & *v28) + 0x200))();

  Swift::String v30 = *(void (**)(uint64_t))(*v2[12] + 144);
  uint64_t v31 = swift_retain();
  v30(v31);
  swift_release();
  sub_1000491B8((uint64_t)&v12[*(int *)(v10 + 20)], (uint64_t)v9);
  sub_10013E6C8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SessionState);
  uint64_t v32 = type metadata accessor for ARCamera.TrackingState.Reason();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v7, 2, 2, v32);
  uint64_t v33 = static ARCamera.TrackingState.== infix(_:_:)();
  sub_10013E6C8((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for ARCamera.TrackingState);
  sub_10013E6C8((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for ARCamera.TrackingState);
  if (v33 & 1) == 0 || (sub_100132910() & 1) != 0 || (sub_100132FB0())
  {
LABEL_15:

LABEL_16:
    sub_10001F780(v18);
    return 0;
  }
  uint64_t v34 = *(void (**)(unint64_t *__return_ptr, uint64_t))(*v2[16] + 144);
  id v35 = swift_retain();
  v34(&v41, v35);
  swift_release();
  unint64_t v36 = sub_100201270(v41, (uint64_t)v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_10013B818(v36, (uint64_t)&off_100485898);
  swift_bridgeObjectRelease();
  if (v37)
  {

    goto LABEL_16;
  }
  id v38 = v20 - v15;
  if (qword_1004C2BC0 != -1) {
    swift_once();
  }
  id v39 = *(double *)&qword_1004F8428;

  sub_10001F780(v18);
  return v38 < v39;
}

uint64_t sub_100132FB0()
{
  void (*v2)(void *__return_ptr, uint64_t);
  uint64_t v3;
  void *v4;
  void *v5;
  float32x2_t v6;
  void (*v7)(void *__return_ptr, uint64_t);
  uint64_t v8;
  void *v9;
  void *v10;
  void (*v12)(void *__return_ptr, uint64_t);
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t (*v21)(void *);
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(void *__return_ptr, uint64_t);
  uint64_t v31;
  void (*v32)(void *__return_ptr, uint64_t);
  uint64_t v33;
  uint64_t v34;
  long long v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(void *__return_ptr, uint64_t);
  uint64_t v43;
  void (*v44)(void *__return_ptr, uint64_t);
  uint64_t v45;
  float32x2_t v46;
  float v47;
  BOOL v49;
  char v50;
  void *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  long long v55;
  uint64_t v56;
  void v57[64];
  _OWORD v58[32];
  void __src[64];
  _OWORD __dst[32];
  void v61[66];

  uint64_t v1 = v0;
  int v2 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v0 + 120) + 144);
  int v3 = swift_retain();
  v2(v61, v3);
  swift_release();
  uint64_t v4 = (void *)v61[0];
  uint64_t v5 = (void *)v61[1];

  if (!v4) {
    return 1;
  }
  uint64_t v6 = COERCE_FLOAT32X2_T((*(double (**)(void))((swift_isaMask & *v4) + 0x200))());

  unint64_t v7 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v1 + 120) + 144);
  uint64_t v8 = swift_retain();
  v7(v61, v8);
  swift_release();
  float32x2_t v9 = (void *)v61[0];
  uint64_t v10 = (void *)v61[1];

  if (!v10) {
    return 1;
  }
  if ((*(uint64_t (**)(void))((swift_isaMask & *v10) + 0x2F0))())
  {

    return 1;
  }
  id v51 = v10;
  float32x2_t v12 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v1 + 128) + 144);
  float32x2_t v13 = swift_retain();
  v12(v61, v13);
  swift_release();
  *(void *)&__dst[0] = v61[0];
  swift_bridgeObjectRetain();
  sub_100012894(&qword_1004C4358);
  sub_100012894(&qword_1004C4360);
  swift_dynamicCast();
  uint64_t v14 = v61[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    double v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_8;
    }
LABEL_47:

    swift_bridgeObjectRelease();
    return 0;
  }
  double v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v15) {
    goto LABEL_47;
  }
LABEL_8:
  uint64_t v53 = v14;
  uint64_t v54 = v14 & 0xC000000000000001;
  float32x2_t v16 = 4;
  id v56 = v1;
  uint64_t v52 = v15;
  float v17 = v1;
  while (1)
  {
    uint64_t v18 = v54 ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v14 + 8 * v16);
    float32x2_t v19 = v18;
    float32x2_t v20 = v16 - 3;
    if (__OFADD__(v16 - 4, 1)) {
      break;
    }
    float32x2_t v21 = *(uint64_t (**)(void *))((swift_isaMask & *v18) + 0xD0);
    float32x2_t v22 = v21(v18);
    if (v22 != 5)
    {
      float32x2_t v22 = v21((void *)v22);
      if (v22)
      {
        float32x2_t v22 = v21((void *)v22);
        if (v22 != 2) {
          goto LABEL_9;
        }
      }
    }
    float32x2_t v23 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v19) + 0x250);
    float v24 = v23(v22);
    if ((v24 & 0xC000000000000001) != 0)
    {
      uint64_t v25 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
        goto LABEL_43;
      }
      uint64_t v25 = *(id *)(v24 + 40);
    }
    uint64_t v26 = v25;
    swift_bridgeObjectRelease();
    id v27 = type metadata accessor for MeasureCamera();
    id v28 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v26) + 0x2C0))(v27);

    (*(void (**)(uint64_t))(*(void *)v28 + 368))(v29);
    swift_release();
    simd_float4x4.position.getter();
    Swift::String v30 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v17 + 80) + 144);
    uint64_t v31 = swift_retain();
    v30(__src, v31);
    swift_release();
    memcpy(__dst, __src, sizeof(__dst));
    sub_100016F7C((uint64_t)__dst);
    uint64_t v32 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v17 + 80) + 144);
    uint64_t v33 = swift_retain();
    v32(__src, v33);
    swift_release();
    memcpy(v61, __src, 0x200uLL);
    sub_100016F7C((uint64_t)v61);
    uint64_t v34 = static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
    Swift::String v55 = v35;
    unint64_t v36 = v23(v34);
    if ((v36 & 0xC000000000000001) != 0)
    {
      uint64_t v37 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_44;
      }
      uint64_t v37 = *(id *)(v36 + 32);
    }
    id v38 = v37;
    id v39 = swift_bridgeObjectRelease();
    double v40 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v38) + 0x2C0))(v39);

    (*(void (**)(uint64_t))(*(void *)v40 + 368))(v41);
    swift_release();
    simd_float4x4.position.getter();
    id v42 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v56 + 80) + 144);
    id v43 = swift_retain();
    v42(v57, v43);
    swift_release();
    memcpy(v58, v57, sizeof(v58));
    sub_100016F7C((uint64_t)v58);
    double v44 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v56 + 80) + 144);
    double v45 = swift_retain();
    v44(v57, v45);
    swift_release();
    memcpy(__src, v57, sizeof(__src));
    sub_100016F7C((uint64_t)__src);
    static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
    if ((~DWORD2(v55) & 0x7F800000) == 0 && (DWORD2(v55) & 0x7FFFFF) != 0)
    {

      double v15 = v52;
      uint64_t v14 = v53;
      float32x2_t v20 = v16 - 3;
      goto LABEL_10;
    }
    if ((v15 = v52, uint64_t v14 = v53, v20 = v16 - 3, *((float *)&v55 + 2) <= 1.0)
      && *((float *)&v55 + 2) >= 0.0
      && ((~LODWORD(v47) & 0x7F800000) == 0 ? (double v49 = (LODWORD(v47) & 0x7FFFFF) == 0) : (double v49 = 1),
          v49 && v47 <= 1.0 && v47 >= 0.0))
    {
      id v50 = sub_10013CDC8(v6, *(float32x2_t *)&v55, v46, 6400.0);

      if (v50) {
        goto LABEL_45;
      }
    }
    else
    {
LABEL_9:
    }
LABEL_10:
    ++v16;
    if (v20 == v15) {
      goto LABEL_47;
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:

  swift_bridgeObjectRelease();
  return 1;
}

void *sub_100133790()
{
  if (*(void *)(v0 + 248))
  {
    uint64_t v1 = *(void **)(v0 + 248);
  }
  else
  {
    uint64_t v1 = sub_10013B98C(v0);
    *(void *)(v0 + 248) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

void sub_1001337F0(void *__src, uint64_t a2)
{
  memcpy(v9, __src, sizeof(v9));
  int v3 = (void *)sub_1000A3850();
  BOOL v4 = sub_100132AC0(v3);

  if (v4)
  {
    int v5 = *(unsigned __int8 *)(a2 + 64);
    uint64_t v6 = 16 * (v5 == 2);
    BOOL v7 = v5 == 3;
    uint64_t v8 = 4;
    if (!v7) {
      uint64_t v8 = v6;
    }
    if (!v8) {
      __break(1u);
    }
  }
}

uint64_t sub_10013388C@<X0>(void *__src@<X0>, uint64_t a2@<X8>)
{
  memcpy(v5, __src, sizeof(v5));
  memcpy(__dst, __src, sizeof(__dst));
  nullsub_1(__dst);
  sub_100016FEC((uint64_t)__dst, a2, &qword_1004CCA30);
  return sub_100053000((uint64_t)v5);
}

uint64_t sub_100133904@<X0>(void *__src@<X0>, void *a2@<X8>)
{
  memcpy(v5, __src, sizeof(v5));
  memcpy(a2, __src, 0x200uLL);
  return sub_100053000((uint64_t)v5);
}

void sub_100133960()
{
  uint64_t v1 = v0;
  *(unsigned char *)(v0 + 64) = 3;
  sub_100012894(&qword_1004C6920);
  swift_allocObject();
  swift_retain();
  *(void *)(v0 + 72) = PassthroughSubject.init()();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_100012894(&qword_1004C3F10);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1004F8630;
  int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 272);
  swift_retain();
  *(void *)(v1 + 80) = v5(KeyPath, v4);
  uint64_t v6 = swift_getKeyPath();
  uint64_t v7 = sub_100012894((uint64_t *)&unk_1004C6A90);
  uint64_t v8 = qword_1004F8630;
  float32x2_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 272);
  swift_retain();
  *(void *)(v1 + 88) = v9(v6, v8);
  uint64_t v10 = swift_getKeyPath();
  uint64_t v11 = sub_100012894((uint64_t *)&unk_1004C6A80);
  uint64_t v12 = qword_1004F8630;
  float32x2_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 272);
  swift_retain();
  *(void *)(v1 + 96) = v13(v10, v12);
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = sub_100012894((uint64_t *)&unk_1004C4710);
  uint64_t v16 = qword_1004F8630;
  float v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 272);
  swift_retain();
  *(void *)(v1 + 104) = v17(v14, v16);
  uint64_t v18 = swift_getKeyPath();
  uint64_t v19 = sub_100012894(&qword_1004C6AD0);
  uint64_t v20 = qword_1004F8630;
  float32x2_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 272);
  swift_retain();
  *(void *)(v1 + 112) = v21(v18, v20);
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = sub_100012894(&qword_1004C3EE0);
  uint64_t v24 = qword_1004F8630;
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 272);
  swift_retain();
  *(void *)(v1 + 120) = v25(v22, v24);
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = sub_100012894(&qword_1004CA010);
  uint64_t v28 = qword_1004F8630;
  Swift::String v29 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 272);
  swift_retain();
  *(void *)(v1 + 128) = v29(v26, v28);
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = sub_100012894((uint64_t *)&unk_1004CEA40);
  uint64_t v32 = qword_1004F8630;
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 272);
  swift_retain();
  *(void *)(v1 + 136) = v33(v30, v32);
  sub_100012894(&qword_1004CC990);
  swift_getKeyPath();
  *(void *)(v1 + 144) = MutableStateValue.__allocating_init(_:_:)();
  *(void *)(v1 + 152) = _swiftEmptyArrayStorage;
  *(void *)(v1 + 160) = 0;
  *(_WORD *)(v1 + 168) = 257;
  if (qword_1004C2C08 != -1) {
    swift_once();
  }
  uint64_t v34 = qword_1004F8450;
  id v35 = sub_10006E184(0, qword_1004F8450 & ~(qword_1004F8450 >> 63), 0, (char *)_swiftEmptyArrayStorage);
  *(void *)(v1 + 176) = v34;
  *(void *)(v1 + 184) = 0;
  *(void *)(v1 + 192) = v35;
  unint64_t v36 = sub_10006E060(0, 4, 0, _swiftEmptyArrayStorage);
  *(_OWORD *)(v1 + 200) = xmmword_1003FCE40;
  *(void *)(v1 + 216) = v36;
  *(void *)(v1 + 224) = 0;
  *(unsigned char *)(v1 + 232) = 1;
  *(void *)(v1 + 248) = 0;
  *(void *)(v1 + 256) = 0;
  *(void *)(v1 + 240) = _swiftEmptyArrayStorage;
  id v37 = [objc_allocWithZone((Class)SCNNode) init];
  id v38 = *(void **)(v1 + 256);
  *(void *)(v1 + 256) = v37;

  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  id v39 = (void *)*((void *)&xmmword_1004F7FD0 + 1);
  if (!*((void *)&xmmword_1004F7FD0 + 1))
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v53 = (void *)qword_1004F8028;
  double v40 = (void *)*((void *)&xmmword_1004F8000 + 1);
  Swift::String v41 = (void *)xmmword_1004F8000;
  id v42 = (void *)qword_1004F7FE8;
  id v43 = (void *)xmmword_1004F7FD0;
  id v55 = (id)qword_1004F8030;
  id v57 = v43;
  id v44 = v39;
  swift_retain();
  id v56 = v42;
  swift_retain();
  id v54 = v41;
  id v45 = v40;
  swift_retain();
  swift_retain();
  swift_retain();
  id v46 = v53;
  id v47 = sub_1002053D0();
  id v48 = [v47 scene];

  id v49 = [v48 rootNode];
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  id v50 = *(void **)(v1 + 256);
  if (!v50)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v51 = v50;
  [v49 addChildNode:v51];

  swift_release();
  StateObserver.init(configuration:)();
  swift_retain();
  uint64_t v52 = sub_100133790()[9];
  swift_retain();
  swift_release();
  if (v52)
  {
    swift_retain();
    sub_100012894(&qword_1004CC998);
    sub_10002179C(&qword_1004CC9A0, &qword_1004CC998);
    Publisher<>.sink(receiveValue:)();
    swift_release();
    swift_release();
    swift_beginAccess();
    sub_100012894(&qword_1004C5E50);
    sub_10002179C(&qword_1004C5E58, &qword_1004C5E50);
    AnyCancellable.store<A>(in:)();
    swift_endAccess();
    swift_release();
    swift_release();
    return;
  }
LABEL_13:
  __break(1u);
}

void sub_10013409C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  memcpy(v31, a1 + 2, sizeof(v31));
  uint64_t v9 = v8;
  uint64_t v10 = (void *)sub_1000A3850();
  long long v29 = v31[22];
  long long v30 = v31[21];
  long long v27 = v31[24];
  long long v28 = v31[23];
  ariadne_trace(_:_:_:_:_:)();
  uint64_t v11 = *(void *)(v9 + 16);
  if (v11)
  {
    uint64_t v26 = v10;
    swift_bridgeObjectRetain();
    uint64_t v25 = v9;
    uint64_t v12 = (uint64_t *)(v9 + 56);
    do
    {
      uint64_t v13 = *(v12 - 3);
      uint64_t v14 = *(v12 - 2);
      uint64_t v15 = *(v12 - 1);
      uint64_t v16 = *v12;
      Date.init()();
      Date.timeIntervalSince1970.getter();
      uint64_t v18 = v17;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v19 = *(char **)(a2 + 152);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(a2 + 152) = v19;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v19 = sub_10006EE9C(0, *((void *)v19 + 2) + 1, 1, v19);
        *(void *)(a2 + 152) = v19;
      }
      unint64_t v22 = *((void *)v19 + 2);
      unint64_t v21 = *((void *)v19 + 3);
      if (v22 >= v21 >> 1)
      {
        uint64_t v19 = sub_10006EE9C((char *)(v21 > 1), v22 + 1, 1, v19);
        *(void *)(a2 + 152) = v19;
      }
      *((void *)v19 + 2) = v22 + 1;
      uint64_t v23 = &v19[40 * v22];
      *((void *)v23 + 4) = v13;
      *((void *)v23 + 5) = v14;
      *((void *)v23 + 6) = v15;
      *((void *)v23 + 7) = v16;
      *((void *)v23 + 8) = v18;
      v12 += 4;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v10 = v26;
  }
  if (v10)
  {
    id v24 = v10;
    sub_100134A1C(v24, *(double *)&v30, *(double *)&v29, *(double *)&v28, *(double *)&v27);
    sub_100134C88();
  }
  *(void *)(a2 + 152) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  ariadne_trace(_:_:_:_:_:)();
}

void sub_100134330()
{
}

void sub_100134358()
{
  uint64_t v1 = v0;
  *(unsigned char *)(v0 + 64) = 3;
  sub_100012894(&qword_1004C6920);
  swift_allocObject();
  *(void *)(v0 + 72) = PassthroughSubject.init()();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_100012894(&qword_1004C3F10);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1004F8630;
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 272);
  swift_retain();
  *(void *)(v1 + 80) = v5(KeyPath, v4);
  uint64_t v6 = swift_getKeyPath();
  uint64_t v7 = sub_100012894((uint64_t *)&unk_1004C6A90);
  uint64_t v8 = qword_1004F8630;
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 272);
  swift_retain();
  *(void *)(v1 + 88) = v9(v6, v8);
  uint64_t v10 = swift_getKeyPath();
  uint64_t v11 = sub_100012894((uint64_t *)&unk_1004C6A80);
  uint64_t v12 = qword_1004F8630;
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 272);
  swift_retain();
  *(void *)(v1 + 96) = v13(v10, v12);
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = sub_100012894((uint64_t *)&unk_1004C4710);
  uint64_t v16 = qword_1004F8630;
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 272);
  swift_retain();
  *(void *)(v1 + 104) = v17(v14, v16);
  uint64_t v18 = swift_getKeyPath();
  uint64_t v19 = sub_100012894(&qword_1004C6AD0);
  uint64_t v20 = qword_1004F8630;
  unint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 272);
  swift_retain();
  *(void *)(v1 + 112) = v21(v18, v20);
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = sub_100012894(&qword_1004C3EE0);
  uint64_t v24 = qword_1004F8630;
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 272);
  swift_retain();
  *(void *)(v1 + 120) = v25(v22, v24);
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = sub_100012894(&qword_1004CA010);
  uint64_t v28 = qword_1004F8630;
  long long v29 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 272);
  swift_retain();
  *(void *)(v1 + 128) = v29(v26, v28);
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = sub_100012894((uint64_t *)&unk_1004CEA40);
  uint64_t v32 = qword_1004F8630;
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 272);
  swift_retain();
  *(void *)(v1 + 136) = v33(v30, v32);
  sub_100012894(&qword_1004CC990);
  swift_getKeyPath();
  *(void *)(v1 + 144) = MutableStateValue.__allocating_init(_:_:)();
  *(void *)(v1 + 152) = _swiftEmptyArrayStorage;
  *(void *)(v1 + 160) = 0;
  *(_WORD *)(v1 + 168) = 257;
  if (qword_1004C2C08 != -1) {
    swift_once();
  }
  uint64_t v34 = qword_1004F8450;
  id v35 = sub_10006E184(0, qword_1004F8450 & ~(qword_1004F8450 >> 63), 0, (char *)_swiftEmptyArrayStorage);
  *(void *)(v1 + 176) = v34;
  *(void *)(v1 + 184) = 0;
  *(void *)(v1 + 192) = v35;
  unint64_t v36 = sub_10006E060(0, 4, 0, _swiftEmptyArrayStorage);
  *(_OWORD *)(v1 + 200) = xmmword_1003FCE40;
  *(void *)(v1 + 216) = v36;
  *(void *)(v1 + 224) = 0;
  *(unsigned char *)(v1 + 232) = 1;
  *(void *)(v1 + 248) = 0;
  *(void *)(v1 + 256) = 0;
  *(void *)(v1 + 240) = _swiftEmptyArrayStorage;
  swift_release();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100134794()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 256);
}

uint64_t sub_10013483C()
{
  uint64_t v1 = *(void **)(v0 + 256);
  if (v1) {
    [v1 removeFromParentNode];
  }
  uint64_t v2 = StateObserver.deinit();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v2;
}

uint64_t sub_100134900()
{
  sub_10013483C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EdgeInstrument()
{
  uint64_t result = qword_1004CC7F0;
  if (!qword_1004CC7F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10013497C()
{
  return swift_initClassMetadata2();
}

void sub_100134A1C(void *a1, double a2, double a3, double a4, double a5)
{
  void (*v8)(void *__return_ptr, uint64_t);
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  unsigned int v17;
  void *v18;
  float32x4_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  float32x4_t v28;
  void v29[2];
  id v30;
  void *v31;

  uint64_t v6 = v5;
  uint64_t v8 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v5 + 120) + 144);
  uint64_t v9 = swift_retain();
  v8(v29, v9);
  swift_release();
  uint64_t v10 = (void *)v29[0];
  uint64_t v11 = (void *)v29[1];
  uint64_t v12 = v30;
  uint64_t v13 = v31;
  uint64_t v14 = v30;

  if (v12)
  {
    (*(void (**)(void))((swift_isaMask & *v14) + 0x200))();

    CGPoint.init(_:)();
    sub_100136224(a1, (uint64_t)v29, a2, a3, a4, a5);
    uint64_t v15 = (void *)v29[0];
    uint64_t v16 = [self standardUserDefaults];
    uint64_t v17 = [v16 guideSnapPointsEnabled];

    if (v17)
    {
      uint64_t v18 = (void *)sub_10013D56C(a1, a2, a3, a4, a5);
      if (!v15) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v18 = 0;
      if (!v15)
      {
LABEL_9:
        swift_beginAccess();
        uint64_t v23 = v18;
        sub_100012894(&qword_1004CC9C0);
        RingBuffer.append(_:)();
        swift_endAccess();

        return;
      }
    }
    simd_float4x4.position.getter();
    uint64_t v28 = v19;
    uint64_t v20 = v15;
    if (sub_10013DAF0((uint64_t)v20, v28))
    {
      swift_beginAccess();
      unint64_t v21 = v18;
      uint64_t v22 = v20;
      sub_100012894(&qword_1004CC9C0);
      RingBuffer.append(_:)();
      swift_endAccess();

      *(_WORD *)(v6 + 168) = 257;
      return;
    }

    goto LABEL_9;
  }
}

void sub_100134C88()
{
  void (*v2)(long long *__return_ptr, uint64_t);
  uint64_t v3;
  long long v4;
  float32x2_t v5;
  void (*v6)(long long *__return_ptr, uint64_t);
  uint64_t v7;
  long long v8;
  int8x16_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  id v16;
  unsigned int v17;
  char *v18;
  char **v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  long long v24;
  char *v25;
  char *v26;
  char *v27;
  float32x2_t v28;
  unint64_t v29;
  char *v30;
  const double *v31;
  float32x2_t v32;
  float64x2_t v33;
  char *v34;
  char *v35;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v37;
  unint64_t v38;
  char **v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  long long v44;
  char *v45;
  char *v46;
  char *v47;
  float32x2_t v48;
  unint64_t v49;
  char *v50;
  const double *v51;
  float32x2_t v52;
  float64x2_t v53;
  char *v54;
  char *v55;
  char v56;
  unint64_t v57;
  unint64_t v58;
  void (*v59)(long long *__return_ptr, uint64_t);
  uint64_t v60;
  void *v61;
  id v62;
  void (*v63)(_OWORD *__return_ptr, uint64_t);
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  float32x2_t v68;
  float32x2_t v69;
  char v70;
  char v71;
  float v72;
  void *v73;
  char *v74;
  void *v75;
  id v76;
  float v77;
  Swift::String v78;
  id v79;
  char *v80;
  char *v81;
  char *v82;
  float *v83;
  char *v84;
  char *v85;
  void *v86;
  uint64_t v87;
  void (*v88)(void *);
  id v89;
  char *v90;
  id v91;
  char *v92;
  void *v93;
  id v94;
  float v95;
  char *v96;
  char *v97;
  char *v98;
  void *v99;
  int8x16_t v100;
  char *v101;
  uint64_t v102;
  char **v103;
  char *v104;
  float32x4_t v105;
  float32x4_t v106;
  long long v107;
  long long v108;
  long long v109;
  long long v110;
  _OWORD v111[8];
  long long v112;
  uint64_t v113;
  void v114[2];
  long long v115;
  long long v116;
  long long v117;
  long long v118;
  long long v119;
  long long v120;
  long long v121;
  long long v122;
  long long v123;
  uint64_t v124;
  long long v125;
  long long v126;
  long long v127;
  long long v128;
  long long v129;
  long long v130;
  long long v131;
  long long v132;
  long long v133;
  uint64_t v134;

  uint64_t v1 = v0;
  uint64_t v2 = *(void (**)(long long *__return_ptr, uint64_t))(**(void **)(v0 + 120) + 144);
  uint64_t v3 = swift_retain();
  v2(&v125, v3);
  swift_release();
  uint64_t v4 = v125;

  if ((void)v4)
  {
    uint64_t v5 = COERCE_FLOAT32X2_T((*(double (**)(void))((swift_isaMask & *(void *)v4) + 0x200))());

    uint64_t v6 = *(void (**)(long long *__return_ptr, uint64_t))(**(void **)(v0 + 120) + 144);
    uint64_t v7 = swift_retain();
    v6(&v125, v7);
    swift_release();
    uint64_t v8 = v125;

    if (*((void *)&v8 + 1))
    {
      (*(void (**)(void))((swift_isaMask & **((void **)&v8 + 1)) + 0x2B0))();

      simd_float4x4.position.getter();
      Swift::String v100 = v9;
      uint64_t v10 = (char *)sub_1001356B4();
      uint64_t v11 = v10;
      uint64_t v13 = v12;
      if (v10 == (char *)1)
      {
        uint64_t v15 = 0;
      }
      else
      {
        uint64_t v14 = v10;
        uint64_t v15 = v11;
      }
      uint64_t v16 = [self standardUserDefaults];
      uint64_t v17 = [v16 guideSnapPointsEnabled];

      id v104 = 0;
      uint64_t v98 = v11;
      if (v11 != (char *)1 && v17)
      {
        uint64_t v18 = v13;
        id v104 = v13;
      }
      uint64_t v99 = v13;
      Swift::String v101 = v15;
      uint64_t v102 = v1;
      if (v15)
      {
        uint64_t v19 = (char **)&v15[direct field offset for WorldEdge.connectedSurfaces];
        swift_beginAccess();
        id v103 = v19;
        *uint64_t v19 = (char *)_swiftEmptyArrayStorage;
        uint64_t v20 = v15;
        swift_bridgeObjectRelease();
        uint64_t v96 = v20;
        sub_10013DEE0((uint64_t)v20, v100);
        uint64_t v22 = *(void *)(v21 + 16);
        if (v22)
        {
          uint64_t v23 = (_OWORD *)(v21 + 64);
          do
          {
            uint64_t v26 = (char *)*((void *)v23 - 4);
            uint64_t v107 = *v23;
            uint64_t v109 = *(v23 - 1);
            uint64_t v27 = &v26[direct field offset for WorldEdge.p1];
            swift_beginAccess();
            if ((v27[16] & 1) == 0)
            {
              uint64_t v28 = *(float32x2_t *)v27;
              long long v29 = *((void *)v27 + 1);
              uint64_t v30 = &v26[direct field offset for WorldEdge.p2];
              swift_beginAccess();
              if (v30[16] != 1)
              {
                uint64_t v31 = (const double *)(v30 + 8);
                uint64_t v32 = *(float32x2_t *)v30;
                uint64_t v33 = vld1q_dup_f64(v31);
                double v105 = (float32x4_t)v33;
                uint64_t v34 = *v103;
                id v35 = v26;
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *id v103 = v34;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  uint64_t v34 = sub_10006F2EC(0, *((void *)v34 + 2) + 1, 1, v34);
                  *id v103 = v34;
                }
                id v38 = *((void *)v34 + 2);
                id v37 = *((void *)v34 + 3);
                if (v38 >= v37 >> 1)
                {
                  uint64_t v34 = sub_10006F2EC((char *)(v37 > 1), v38 + 1, 1, v34);
                  *id v103 = v34;
                }
                *(float32x2_t *)&uint64_t v24 = vsub_f32(v32, v28);
                *((void *)&v24 + 1) = vsubq_f32(v105, (float32x4_t)vdupq_n_s64(v29)).u32[2];
                *((void *)v34 + 2) = v38 + 1;
                uint64_t v25 = &v34[64 * v38];
                *((_OWORD *)v25 + 2) = v24;
                *((_OWORD *)v25 + 3) = v109;
                *((_OWORD *)v25 + 4) = v107;
                v25[80] = 0;
              }
            }
            v23 += 3;
            --v22;
          }
          while (v22);
        }

        swift_bridgeObjectRelease();
        uint64_t v15 = v101;
        uint64_t v1 = v102;
      }
      if (v104)
      {
        id v39 = (char **)&v104[direct field offset for WorldEdge.connectedSurfaces];
        swift_beginAccess();
        *id v39 = (char *)_swiftEmptyArrayStorage;
        double v40 = v104;
        swift_bridgeObjectRelease();
        uint64_t v97 = v40;
        sub_10013DEE0((uint64_t)v40, v100);
        id v42 = *(void *)(v41 + 16);
        if (v42)
        {
          id v43 = (_OWORD *)(v41 + 64);
          do
          {
            id v46 = (char *)*((void *)v43 - 4);
            float v108 = *v43;
            float v110 = *(v43 - 1);
            id v47 = &v46[direct field offset for WorldEdge.p1];
            swift_beginAccess();
            if ((v47[16] & 1) == 0)
            {
              id v48 = *(float32x2_t *)v47;
              id v49 = *((void *)v47 + 1);
              id v50 = &v46[direct field offset for WorldEdge.p2];
              swift_beginAccess();
              if (v50[16] != 1)
              {
                id v51 = (const double *)(v50 + 8);
                uint64_t v52 = *(float32x2_t *)v50;
                uint64_t v53 = vld1q_dup_f64(v51);
                double v106 = (float32x4_t)v53;
                id v54 = *v39;
                id v55 = v46;
                id v56 = swift_isUniquelyReferenced_nonNull_native();
                *id v39 = v54;
                if ((v56 & 1) == 0)
                {
                  id v54 = sub_10006F2EC(0, *((void *)v54 + 2) + 1, 1, v54);
                  *id v39 = v54;
                }
                Swift::String v58 = *((void *)v54 + 2);
                id v57 = *((void *)v54 + 3);
                if (v58 >= v57 >> 1)
                {
                  id v54 = sub_10006F2EC((char *)(v57 > 1), v58 + 1, 1, v54);
                  *id v39 = v54;
                }
                *(float32x2_t *)&id v44 = vsub_f32(v52, v48);
                *((void *)&v44 + 1) = vsubq_f32(v106, (float32x4_t)vdupq_n_s64(v49)).u32[2];
                *((void *)v54 + 2) = v58 + 1;
                id v45 = &v54[64 * v58];
                *((_OWORD *)v45 + 2) = v44;
                *((_OWORD *)v45 + 3) = v110;
                *((_OWORD *)v45 + 4) = v108;
                v45[80] = 0;
              }
            }
            v43 += 3;
            --v42;
          }
          while (v42);
        }

        swift_bridgeObjectRelease();
        uint64_t v15 = v101;
        uint64_t v1 = v102;
      }
      uint64_t v59 = *(void (**)(long long *__return_ptr, uint64_t))(**(void **)(v1 + 112) + 144);
      uint64_t v60 = swift_retain();
      v59(&v115, v60);
      swift_release();
      uint64_t v131 = v121;
      Swift::String v132 = v122;
      id v133 = v123;
      Swift::String v134 = v124;
      id v127 = v117;
      id v128 = v118;
      uint64_t v129 = v119;
      uint64_t v130 = v120;
      uint64_t v125 = v115;
      Swift::String v126 = v116;
      id v61 = (void *)*((void *)&v123 + 1);
      Swift::String v62 = *((id *)&v123 + 1);
      sub_100016F3C((uint64_t)&v125);
      if (v61)
      {
        id v63 = *(void (**)(_OWORD *__return_ptr, uint64_t))(**(void **)(v1 + 112) + 144);
        double v64 = swift_retain();
        v63(v111, v64);
        swift_release();
        uint64_t v121 = v111[6];
        id v122 = v111[7];
        Swift::String v123 = v112;
        Swift::String v124 = v113;
        id v117 = v111[2];
        Swift::String v118 = v111[3];
        Swift::String v119 = v111[4];
        uint64_t v120 = v111[5];
        uint64_t v115 = v111[0];
        Swift::String v116 = v111[1];
        id v65 = *((void *)&v112 + 1);
        id v66 = *((id *)&v112 + 1);
        sub_100016F3C((uint64_t)&v115);
        if (!v65 || (uint64_t v67 = WorldEdge.projected(for:)(), v69 = v68, v71 = v70, v66, (v71 & 1) != 0))
        {

          sub_100016AB8(v98, v99);
          return;
        }
        sub_10013CD38(v5, (float32x2_t)v67, v69);
        if (qword_1004C2BD0 != -1)
        {
          uint64_t v95 = v72;
          swift_once();
          Swift::String_optional v72 = v95;
        }
        if (v72 >= *(float *)&dword_1004F8434)
        {

          Swift::String v73 = 0;
          id v61 = 0;
          uint64_t v75 = *(void **)(v1 + 160);
          if (!v75) {
            goto LABEL_53;
          }
        }
        else
        {
          Swift::String v73 = v104;
          Swift::String v74 = v104;
          uint64_t v75 = *(void **)(v1 + 160);
          if (!v75) {
            goto LABEL_53;
          }
        }
      }
      else
      {
        Swift::String v73 = 0;
        uint64_t v75 = *(void **)(v1 + 160);
        if (!v75) {
          goto LABEL_53;
        }
      }
      CGPoint.init(_:)();
      uint64_t v76 = v75;
      WorldEdge.getClosestScreenSpacePoint(from:for:)();

      sub_100016FEC((uint64_t)v111, (uint64_t)&v115, &qword_1004CC9A8);
      if ((BYTE4(v117) & 1) == 0)
      {
        id v77 = *(float *)&v117 * *(float *)&v117;
        if (qword_1004C2BC8 != -1) {
          swift_once();
        }
        if (v77 < *(float *)&dword_1004F8430)
        {
          if (qword_1004C2AC0 != -1) {
            swift_once();
          }
          v78._object = (void *)0x8000000100427380;
          v78._uint64_t countAndFlagsBits = 0xD000000000000022;
          Log.debug(_:isPrivate:)(v78, 0);

          id v61 = *(void **)(v1 + 160);
          if (!v61)
          {
            __break(1u);
            return;
          }
          Swift::String v79 = v61;
          Swift::String v73 = v104;
          id v80 = v104;
          double v81 = v80;
          goto LABEL_59;
        }
      }
LABEL_53:
      if (!v15 || v61)
      {
        id v80 = v104;
        double v81 = (char *)v73;
      }
      else
      {
        id v82 = v15;

        id v83 = (float *)&v82[direct field offset for WorldEdge.adVariance];
        swift_beginAccess();
        if (*v83 <= 0.5)
        {
          uint64_t v84 = v82;
          id v61 = v15;
        }
        Swift::String v73 = v104;
        id v80 = v104;
        uint64_t v85 = v82;
        sub_100135E30((char *)v61, v104, v15);

        double v81 = v80;
      }
LABEL_59:
      uint64_t v86 = v15;
      Swift::String v87 = *(void *)(v1 + 144);
      v114[0] = v61;
      v114[1] = v73;
      id v88 = *(void (**)(void *))(*(void *)v87 + 392);
      Swift::String v89 = v61;
      Swift::String v90 = v81;
      uint64_t v91 = v89;
      uint64_t v92 = v90;
      swift_retain();
      v88(v114);
      sub_100016AB8(v98, v99);
      swift_release();

      unint64_t v93 = *(void **)(v1 + 160);
      *(void *)(v1 + 160) = v61;
      Swift::String v94 = v91;

      *(_WORD *)(v1 + 168) = 257;
    }
  }
}

uint64_t sub_1001356B4()
{
  id v1 = [self standardUserDefaults];
  unsigned int v2 = [v1 throttleEdges];

  uint64_t v3 = 1;
  if (v2) {
    uint64_t v4 = 2;
  }
  else {
    uint64_t v4 = 1;
  }
  swift_beginAccess();
  if (*(void *)(*(void *)(v0 + 216) + 16) < 4uLL) {
    return v3;
  }
  swift_beginAccess();
  sub_100012894(&qword_1004C69E0);
  RingBuffer.subscript.getter();
  uint64_t v3 = (uint64_t)v73;
  swift_endAccess();
  if (!v73)
  {
LABEL_48:

    return 1;
  }
  uint64_t v5 = (float32x2_t *)&v73[direct field offset for WorldEdge.p1];
  swift_beginAccess();
  if ((v5[2].i8[0] & 1) != 0
    || (float32x2_t v7 = *v5,
        float32x2_t v6 = v5[1],
        uint64_t v8 = (float32x2_t *)&v73[direct field offset for WorldEdge.p2],
        swift_beginAccess(),
        (v8[2].i8[0] & 1) != 0))
  {
LABEL_47:

    goto LABEL_48;
  }
  float32x2_t v66 = v7;
  float32x2_t v67 = v6;
  uint64_t v68 = v4;
  float32x2_t v64 = *v8;
  float32x2_t v65 = v8[1];
  swift_retain();
  uint64_t v9 = sub_10013B69C(0, (char *)4, v0);
  swift_release();
  uint64_t v10 = *((void *)v9 + 2);
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_10006E060(0, 1, 1, _swiftEmptyArrayStorage);
    for (uint64_t i = 0; i != v10; ++i)
    {
      long long v70 = *(_OWORD *)&v9[16 * i + 32];
      uint64_t v13 = *(void **)&v9[16 * i + 40];
      unint64_t v14 = v11[2];
      unint64_t v15 = v11[3];
      id v16 = (id)v70;
      id v17 = v13;
      if (v14 >= v15 >> 1) {
        uint64_t v11 = sub_10006E060((void *)(v15 > 1), v14 + 1, 1, v11);
      }
      v11[2] = v14 + 1;
      *(_OWORD *)&v11[2 * v14 + 4] = v70;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = v11[2];
  if (v18)
  {
    uint64_t v19 = v11 + 4;
    do
    {
      if (*v19)
      {
        long long v71 = *(_OWORD *)v19;
        uint64_t v23 = (void *)v19[1];
        id v24 = (id)*v19;
        id v25 = v23;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000BBF84(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        unint64_t v21 = _swiftEmptyArrayStorage[2];
        unint64_t v20 = _swiftEmptyArrayStorage[3];
        long long v22 = v71;
        if (v21 >= v20 >> 1)
        {
          sub_1000BBF84((void *)(v20 > 1), v21 + 1, 1);
          long long v22 = v71;
        }
        _swiftEmptyArrayStorage[2] = v21 + 1;
        *(_OWORD *)&_swiftEmptyArrayStorage[2 * v21 + 4] = v22;
      }
      v19 += 2;
      --v18;
    }
    while (v18);
  }
  swift_bridgeObjectRelease();
  if (qword_1004C2AC0 != -1) {
    swift_once();
  }
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  int64_t v26 = _swiftEmptyArrayStorage[2];
  v27._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = 0xD000000000000017;
  v28._object = (void *)0x80000001004273B0;
  Log.debug(_:isPrivate:)(v28, 0);
  swift_bridgeObjectRelease();
  unint64_t v69 = v26;
  if (v26)
  {
    *(float32x2_t *)v29.f32 = vsub_f32(v64, v66);
    float32x2_t v30 = vmul_f32(*(float32x2_t *)v29.f32, *(float32x2_t *)v29.f32);
    *(float32x2_t *)&v29.u32[2] = vsub_f32(v65, v67);
    unsigned __int32 v31 = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32((int32x4_t)vmulq_f32(v29, v29), 2), vadd_f32(v30, (float32x2_t)vdup_lane_s32((int32x2_t)v30, 1))).u32[0];
    float32x2_t v32 = vrsqrte_f32((float32x2_t)v31);
    float32x2_t v33 = vmul_f32(v32, vrsqrts_f32((float32x2_t)v31, vmul_f32(v32, v32)));
    float32x4_t v72 = vmulq_n_f32(v29, vmul_f32(v33, vrsqrts_f32((float32x2_t)v31, vmul_f32(v33, v33))).f32[0]);
    sub_1000BBE14(0, v26, 0);
    uint64_t v34 = &_swiftEmptyArrayStorage[4];
    int64_t v35 = v26;
    do
    {
      uint64_t v37 = *v34;
      v34 += 2;
      uint64_t v36 = v37;
      float v38 = 1.0;
      if (v37)
      {
        uint64_t v39 = v36 + direct field offset for WorldEdge.p2;
        swift_beginAccess();
        if ((*(unsigned char *)(v39 + 16) & 1) == 0)
        {
          float32x2_t v40 = *(float32x2_t *)v39;
          unint64_t v41 = *(void *)(v39 + 8);
          id v42 = (float32x2_t *)(v36 + direct field offset for WorldEdge.p1);
          swift_beginAccess();
          if ((v42[2].i8[0] & 1) == 0)
          {
            id v44 = (const double *)&v42[1];
            float32x4_t v45 = (float32x4_t)vld1q_dup_f64(v44);
            *(float32x2_t *)v43.f32 = vsub_f32(v40, *v42);
            v43.i32[2] = vsubq_f32((float32x4_t)vdupq_n_s64(v41), v45).i32[2];
            float32x4_t v46 = v43;
            v46.i32[3] = 0;
            int32x4_t v47 = (int32x4_t)vmulq_f32(v46, v46);
            v47.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v47, 2), vadd_f32(*(float32x2_t *)v47.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v47.i8, 1))).u32[0];
            float32x2_t v48 = vrsqrte_f32((float32x2_t)v47.u32[0]);
            float32x2_t v49 = vmul_f32(v48, vrsqrts_f32((float32x2_t)v47.u32[0], vmul_f32(v48, v48)));
            float32x4_t v50 = vmulq_f32(v72, vmulq_n_f32(v43, vmul_f32(v49, vrsqrts_f32((float32x2_t)v47.u32[0], vmul_f32(v49, v49))).f32[0]));
            float v38 = 1.0 - fabsf(v50.f32[2] + vaddv_f32(*(float32x2_t *)v50.f32));
          }
        }
      }
      unint64_t v52 = _swiftEmptyArrayStorage[2];
      unint64_t v51 = _swiftEmptyArrayStorage[3];
      unint64_t v53 = v52 + 1;
      if (v52 >= v51 >> 1) {
        sub_1000BBE14((char *)(v51 > 1), v52 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v53;
      *((float *)&_swiftEmptyArrayStorage[4] + v52) = v38;
      --v35;
    }
    while (v35);
  }
  else
  {
    unint64_t v53 = _swiftEmptyArrayStorage[2];
    if (!v53)
    {
      unint64_t v54 = v68;
      goto LABEL_45;
    }
  }
  unint64_t v54 = v68;
  if (v53 >= 2)
  {
    unint64_t v57 = 0;
    unint64_t v55 = v53 & 0xFFFFFFFFFFFFFFFELL;
    float v56 = 0.0;
    do
    {
      float v56 = (float)(v56 + *(float *)&_swiftEmptyArrayStorage[v57 / 2 + 4])
          + *((float *)&_swiftEmptyArrayStorage[v57 / 2 + 4] + 1);
      v57 += 2;
    }
    while (v55 != v57);
    goto LABEL_44;
  }
  unint64_t v55 = 0;
  float v56 = 0.0;
  do
  {
    float v58 = *((float *)&_swiftEmptyArrayStorage[4] + v55++);
    float v56 = v56 + v58;
LABEL_44:
    ;
  }
  while (v53 != v55);
LABEL_45:
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(24);
  v59._object = (void *)0x80000001004273D0;
  v59._uint64_t countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v59);
  Float.write<A>(to:)();
  v60._uint64_t countAndFlagsBits = 0;
  v60._object = (void *)0xE000000000000000;
  Log.debug(_:isPrivate:)(v60, 0);
  swift_bridgeObjectRelease();
  id v61 = &v73[direct field offset for WorldEdge.typeConfidence];
  swift_beginAccess();
  *(_DWORD *)id v61 = 1065353216;
  swift_release();
  if (v69 < v54)
  {
    v62._object = (void *)0x80000001004273F0;
    v62._uint64_t countAndFlagsBits = 0xD000000000000016;
    Log.debug(_:isPrivate:)(v62, 0);
    goto LABEL_47;
  }
  return v3;
}

void sub_100135E30(char *a1, char *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = self;
  id v9 = [v8 standardUserDefaults];
  unsigned int v10 = [v9 showSnappableEdges];

  if (v10)
  {
    if (a1)
    {
      uint64_t v11 = &a1[direct field offset for WorldEdge.p1];
      swift_beginAccess();
      if (v11[16])
      {
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      uint64_t v12 = &a1[direct field offset for WorldEdge.p2];
      swift_beginAccess();
      if (v12[16])
      {
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      uint64_t v13 = self;
      unint64_t v14 = a1;
      id v15 = [v13 magentaColor];
      sub_10013A130((uint64_t)v15);
    }
    if (a2)
    {
      id v16 = &a2[direct field offset for WorldEdge.p1];
      swift_beginAccess();
      if (v16[16])
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      id v17 = &a2[direct field offset for WorldEdge.p2];
      swift_beginAccess();
      if (v17[16])
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v18 = self;
      uint64_t v19 = a2;
      id v20 = [v18 blueColor];
      sub_10013A130((uint64_t)v20);
    }
  }
  if (!a3) {
    return;
  }
  unint64_t v21 = a3;
  id v22 = [v8 standardUserDefaults];
  unsigned int v23 = [v22 showFinalPlanes];

  if (v23)
  {
    id v24 = *(void **)(v4 + 256);
    if (v24)
    {
      id v25 = v24;
      SCNNode.removeAllChildren()();
    }
    int64_t v26 = &v21[direct field offset for WorldEdge.backingPlanes];
    swift_beginAccess();
    if (*(void *)(*(void *)v26 + 16))
    {
      static simd_float4x4.make(position:normalizedForward:)();
      Swift::String v27 = &v21[direct field offset for WorldEdge.type];
      swift_beginAccess();
      int v28 = *v27;
      if (v28 != 4)
      {
        id v29 = sub_10013E57C(v28);
        if (a1) {
          swift_beginAccess();
        }
        sub_100012894(&qword_1004C74C8);
        v30._uint64_t countAndFlagsBits = String.init<A>(describing:)();
        String.append(_:)(v30);
        swift_bridgeObjectRelease();
        sub_100138F34(v29, 1, 0x203A726F727265, 0xE700000000000000, 3);
        swift_bridgeObjectRelease();
        if (*(void *)(*(void *)v26 + 16) == 2)
        {
          static simd_float4x4.make(position:normalizedForward:)();
          sub_100138F34(v29, 1, 0, 0, 3);
        }

        goto LABEL_22;
      }
LABEL_29:
      __break(1u);
      return;
    }
    __break(1u);
    goto LABEL_25;
  }
  id v29 = v21;
LABEL_22:
}

uint64_t sub_100136224@<X0>(void *a1@<X0>, uint64_t a2@<X8>, double a3@<D2>, double a4@<D3>, double a5@<D4>, double a6@<D5>)
{
  uint64_t v8 = *(void *)(v6 + 152);
  CGFloat v9 = *(double *)(v8 + 16);
  if (v9 == 0.0)
  {
    uint64_t result = 0;
    CGFloat v12 = 0.0;
    CGFloat v52 = 0.0;
    CGFloat v13 = 0.0;
    CGFloat v49 = 0.0;
    char v51 = 1;
  }
  else
  {
    CGPoint.floats.getter();
    float32x2_t v63 = v10;
    float v11 = v10.f32[1];
    swift_bridgeObjectRetain();
    CGFloat v12 = 0.0;
    CGFloat v61 = 0.0;
    CGFloat v62 = 0.0;
    CGFloat v13 = 0.0;
    CGFloat v14 = 0.0;
    uint64_t v15 = 0;
    uint64_t v16 = -*(void *)&v9;
    char v17 = 1;
    float v18 = INFINITY;
LABEL_3:
    char v58 = v17;
    double v59 = v14;
    double v60 = v12;
    float v19 = v18;
    id v20 = (double *)(v8 + 64 + 40 * v15++);
    do
    {
      double v22 = *(v20 - 4);
      double v21 = *(v20 - 3);
      double v24 = *(v20 - 2);
      double v23 = *(v20 - 1);
      CGFloat v14 = *v20;
      CGPoint.floats.getter();
      float32x2_t v64 = v25;
      CGPoint.floats.getter();
      float32x2_t v27 = v26;
      if (qword_1004C2BC8 != -1) {
        swift_once();
      }
      float32x2_t v28 = vsub_f32(v27, v64);
      float32x2_t v29 = vmul_f32(v28, v28);
      unsigned __int32 v30 = vadd_f32(v29, (float32x2_t)vdup_lane_s32((int32x2_t)v29, 1)).u32[0];
      float32x2_t v31 = vrsqrte_f32((float32x2_t)v30);
      float32x2_t v32 = vmul_f32(v31, vrsqrts_f32((float32x2_t)v30, vmul_f32(v31, v31)));
      float32x2_t v33 = vmul_n_f32(v28, vmul_f32(v32, vrsqrts_f32((float32x2_t)v30, vmul_f32(v32, v32))).f32[0]);
      float32x2_t v34 = vmul_f32(v33, v33);
      v34.i32[0] = vadd_f32(v34, (float32x2_t)vdup_lane_s32((int32x2_t)v34, 1)).u32[0];
      float32x2_t v35 = vrsqrte_f32((float32x2_t)v34.u32[0]);
      float32x2_t v36 = vmul_f32(v35, vrsqrts_f32((float32x2_t)v34.u32[0], vmul_f32(v35, v35)));
      float32x2_t v37 = vmul_n_f32(v33, vmul_f32(v36, vrsqrts_f32((float32x2_t)v34.u32[0], vmul_f32(v36, v36))).f32[0]);
      float32x2_t v38 = vsub_f32(v63, v64);
      v36.f32[0] = vmul_f32(v38, v37).f32[0] + vmuls_lane_f32(v11 - v64.f32[1], v37, 1);
      float v39 = v36.f32[0] * v37.f32[0];
      v37.f32[0] = vmuls_lane_f32(v36.f32[0], v37, 1);
      float v40 = v64.f32[0] + v39;
      float v41 = v64.f32[1] + v37.f32[0];
      float v18 = (float)((float)(v63.f32[0] - v40) * (float)(v63.f32[0] - v40))
          + (float)((float)(v11 - v41) * (float)(v11 - v41));
      BOOL v44 = (float)(vmul_f32(v38, v38).f32[0] + (float)((float)(v11 - v64.f32[1]) * (float)(v11 - v64.f32[1]))) < *(float *)&dword_1004F8430;
      float32x2_t v42 = vsub_f32(v63, v27);
      float v43 = vaddv_f32(vmul_f32(v42, v42));
      BOOL v44 = v44 || v43 < *(float *)&dword_1004F8430;
      if (v44)
      {
        if (v18 < v19) {
          goto LABEL_21;
        }
      }
      else if (v18 < *(float *)&dword_1004F8430)
      {
        float v45 = (float)((float)(v40 - v64.f32[0]) * v28.f32[0]) + vmuls_lane_f32(v41 - v64.f32[1], v28, 1);
        float v46 = v29.f32[0] + vmuls_lane_f32(v28.f32[1], v28, 1);
        BOOL v47 = v45 < 0.0 || v45 > v46;
        if (!v47 && v18 < v19)
        {
LABEL_21:
          char v17 = 0;
          CGFloat v12 = v22;
          CGFloat v61 = v24;
          CGFloat v62 = v21;
          CGFloat v13 = v23;
          if (v16 + v15) {
            goto LABEL_3;
          }
          swift_bridgeObjectRelease();
          CGFloat v49 = v14;
          goto LABEL_27;
        }
      }
      v20 += 5;
      ++v15;
    }
    while (v16 + v15 != 1);
    swift_bridgeObjectRelease();
    if (v58)
    {
      uint64_t result = 0;
      char v51 = 1;
      CGFloat v49 = v59;
      CGFloat v12 = v60;
      CGFloat v52 = v61;
      CGFloat v9 = v62;
      goto LABEL_28;
    }
    CGFloat v49 = v59;
    CGFloat v12 = v60;
    CGFloat v14 = v59;
LABEL_27:
    CGFloat v52 = v61;
    CGFloat v9 = v62;
    v65[0] = v12;
    v65[1] = v62;
    void v65[2] = v61;
    v65[3] = v13;
    v65[4] = v14;
    uint64_t result = sub_10013653C(v65, a1, a3, a4, a5, a6);
    char v51 = 0;
  }
LABEL_28:
  *(void *)a2 = result;
  *(CGFloat *)(a2 + 8) = v12;
  *(CGFloat *)(a2 + 16) = v9;
  *(CGFloat *)(a2 + 24) = v52;
  *(CGFloat *)(a2 + 32) = v13;
  *(CGFloat *)(a2 + 40) = v49;
  *(unsigned char *)(a2 + 48) = v51;
  return result;
}

uint64_t sub_10013653C(CGFloat *a1, void *a2, double a3, double a4, double a5, double a6)
{
  void (*v46)(void *__return_ptr, uint64_t);
  uint64_t v47;
  void (*v48)(void *__return_ptr, uint64_t);
  uint64_t v49;
  float32x2_t v50;
  float32x2_t v51;
  float32x2_t v52;
  void (*v53)(void *__return_ptr, uint64_t);
  uint64_t v54;
  void (*v55)(void *__return_ptr, uint64_t);
  uint64_t v56;
  float32x2_t v57;
  float32x2_t v58;
  float32x2_t v59;
  unint64_t v60;
  const char *v61;
  unint64_t v62;
  Swift::String v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  Swift::String v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  long long v81;
  long long v82;
  float32x2_t v83;
  float32x2_t v84;
  void v89[64];
  unsigned char v90[512];
  void __src[64];
  unsigned char __dst[512];
  unsigned char _[512];
  long long v94;
  long long v95;
  uint64_t v96;
  uint64_t v97;
  long long v98;
  long long v99;
  uint64_t v100;
  uint64_t v101;
  CGPoint v102;
  CGPoint v103;

  uint64_t v7 = v6;
  CGFloat v10 = *a1;
  CGFloat v11 = a1[1];
  CGFloat v12 = (uint64_t *)MeasureCore.shared.unsafeMutableAddressor();
  uint64_t v13 = *v12;
  uint64_t result = swift_beginAccess();
  uint64_t v15 = *(void *)(v13 + 112);
  if (!v15)
  {
    __break(1u);
    goto LABEL_36;
  }
  uint64_t result = swift_beginAccess();
  if (!*(void *)(v15 + 208))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  swift_retain();
  ADProcessor.transformer.getter();
  swift_release();
  Transformer.viewToCameraNormalized.getter();
  swift_release();
  *(_OWORD *)_ = v94;
  *(_OWORD *)&_[16] = v95;
  *(void *)&_[32] = v96;
  *(void *)&_[40] = v97;
  v102.x = v10;
  v102.y = v11;
  CGPointApplyAffineTransform(v102, (CGAffineTransform *)_);
  CGPoint.floats.getter();
  ARFrame.getHitRay(cameraPoint:)();
  CGFloat v16 = a1[2];
  CGFloat v17 = a1[3];
  uint64_t v18 = *v12;
  uint64_t result = swift_beginAccess();
  uint64_t v19 = *(void *)(v18 + 112);
  if (!v19)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t result = swift_beginAccess();
  if (*(void *)(v19 + 208))
  {
    swift_retain();
    ADProcessor.transformer.getter();
    swift_release();
    Transformer.viewToCameraNormalized.getter();
    double v81 = v99;
    id v82 = v98;
    uint64_t v20 = v100;
    uint64_t v21 = v101;
    swift_release();
    *(_OWORD *)_ = v82;
    *(_OWORD *)&_[16] = v81;
    *(void *)&_[32] = v20;
    *(void *)&_[40] = v21;
    v103.x = v16;
    v103.y = v17;
    CGPointApplyAffineTransform(v103, (CGAffineTransform *)_);
    CGPoint.floats.getter();
    ARFrame.getHitRay(cameraPoint:)();
    sub_1001375B0(a2, (uint64_t)_, a3, a4, a5, a6);
    if (_[32]) {
      goto LABEL_19;
    }
    uint64_t v22 = *(void *)_;
    uint64_t v23 = *(void *)&_[8];
    Swift::String v79 = *(void *)&_[56];
    id v80 = *(void *)&_[48];
    id v77 = *(void *)&_[72];
    uint64_t v78 = *(void *)&_[64];
    uint64_t v76 = _[80];
    uint64_t v24 = *(void *)&_[84];
    int v25 = *(_DWORD *)&_[92];
    int v26 = *(_DWORD *)&_[96];
    Swift::String v74 = *(void *)&_[24];
    uint64_t v75 = *(void *)&_[16];
    type metadata accessor for PlaneUtil();
    uint64_t v27 = static PlaneUtil.getIntersection(ray:plane:)();
    if ((v29 & 1) != 0
      || (float32x2_t v30 = (float32x2_t)v27, v31 = v28, v32 = static PlaneUtil.getIntersection(ray:plane:)(), (v35 & 1) != 0))
    {
LABEL_19:
      if (qword_1004C2AC0 != -1) {
        swift_once();
      }
      v63._uint64_t countAndFlagsBits = 0xD000000000000047;
      v63._object = (void *)0x8000000100427410;
      Log.default(_:isPrivate:)(v63, 0);
      return 0;
    }
    *(float32x2_t *)v34.f32 = vsub_f32(v30, (float32x2_t)v32);
    v34.f32[2] = v31 - v33;
    float32x4_t v36 = v34;
    v36.i32[3] = 0;
    int32x4_t v37 = (int32x4_t)vmulq_f32(v36, v36);
    v37.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v37, 2), vadd_f32(*(float32x2_t *)v37.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v37.i8, 1))).u32[0];
    float32x2_t v38 = vrsqrte_f32((float32x2_t)v37.u32[0]);
    float32x2_t v39 = vmul_f32(v38, vrsqrts_f32((float32x2_t)v37.u32[0], vmul_f32(v38, v38)));
    int8x16_t v40 = (int8x16_t)vmulq_n_f32(v34, vmul_f32(v39, vrsqrts_f32((float32x2_t)v37.u32[0], vmul_f32(v39, v39))).f32[0]);
    v37.i32[0] = v40.i32[1];
    v39.i32[0] = vextq_s8(v40, v40, 8uLL).u32[0];
    v39.i32[1] = v40.i32[0];
    *(float32x2_t *)v40.i8 = vmul_f32(v39, 0);
    Swift::String v73 = v24;
    if (fabsf(*(float *)v40.i32 + (float)(*(float *)v37.i32 + *(float *)&v40.i32[1])) < 0.20791)
    {
      if (qword_1004C2AC0 != -1) {
        swift_once();
      }
      *(void *)_ = 0;
      *(void *)&_[8] = 0xE000000000000000;
      _StringGuts.grow(_:)(93);
      v41._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
      v41._object = (void *)0x8000000100427540;
      String.append(_:)(v41);
      Float.write<A>(to:)();
      v42._uint64_t countAndFlagsBits = 0x646E6520646E6120;
      v42._object = (void *)0xED00002079622059;
      String.append(_:)(v42);
      Float.write<A>(to:)();
      v43._uint64_t countAndFlagsBits = 0x6E6169726156202ELL;
      v43._object = (void *)0xEF20736177206563;
      String.append(_:)(v43);
      Float.write<A>(to:)();
      Log.default(_:isPrivate:)(*(Swift::String *)_, 0);
      swift_bridgeObjectRelease();
    }
    createTransform(forward:normal:position:)();
    id v44 = objc_allocWithZone((Class)type metadata accessor for WorldEdge());
    float v45 = (char *)WorldEdge.init(transform:p1:p2:type:adVariance:)();
    type metadata accessor for MeasureCamera();
    float v46 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v7 + 80) + 144);
    BOOL v47 = swift_retain();
    v46(__src, v47);
    swift_release();
    memcpy(__dst, __src, sizeof(__dst));
    sub_100016F7C((uint64_t)__dst);
    float32x2_t v48 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v7 + 80) + 144);
    CGFloat v49 = swift_retain();
    v48(__src, v49);
    swift_release();
    memcpy(_, __src, sizeof(_));
    sub_100016F7C((uint64_t)_);
    static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
    id v83 = v50;
    CGPoint.floats.getter();
    CGFloat v52 = vsub_f32(v83, v51);
    if (vaddv_f32(vmul_f32(v52, v52)) > 25.0) {
      goto LABEL_14;
    }
    unint64_t v53 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v7 + 80) + 144);
    unint64_t v54 = swift_retain();
    v53(v89, v54);
    swift_release();
    memcpy(v90, v89, sizeof(v90));
    sub_100016F7C((uint64_t)v90);
    unint64_t v55 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v7 + 80) + 144);
    float v56 = swift_retain();
    v55(v89, v56);
    swift_release();
    memcpy(__src, v89, sizeof(__src));
    sub_100016F7C((uint64_t)__src);
    static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
    uint64_t v84 = v57;
    CGPoint.floats.getter();
    double v59 = vsub_f32(v84, v58);
    if (vaddv_f32(vmul_f32(v59, v59)) <= 25.0)
    {
      sub_100012894(&qword_1004C96D8);
      float32x2_t v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = xmmword_1003F8B80;
      *(void *)(v64 + 32) = v22;
      *(void *)(v64 + 40) = v23;
      *(void *)(v64 + 48) = v75;
      *(void *)(v64 + 56) = v74;
      *(unsigned char *)(v64 + 64) = 0;
      *(void *)(v64 + 80) = v80;
      *(void *)(v64 + 88) = v79;
      *(void *)(v64 + 96) = v78;
      *(void *)(v64 + 104) = v77;
      *(unsigned char *)(v64 + 112) = v76;
      float32x2_t v65 = sub_10013851C(v64, (uint64_t)v45);
      float32x2_t v67 = v66;
      swift_setDeallocating();
      swift_deallocClassInstance();
      if (v65 != 2)
      {
        if (v65 != 4)
        {
          uint64_t v68 = &v45[direct field offset for WorldEdge.type];
          swift_beginAccess();
          *uint64_t v68 = v65;
          unint64_t v69 = &v45[direct field offset for WorldEdge.backingPlanes];
          swift_beginAccess();
          *(void *)unint64_t v69 = v67;
          swift_bridgeObjectRelease();
          long long v70 = &v45[direct field offset for WorldEdge.edgePlanesMetrics];
          swift_beginAccess();
          *(void *)long long v70 = v73;
          *((_DWORD *)v70 + 2) = v25;
          long long v71 = &v45[direct field offset for WorldEdge.adVariance];
          swift_beginAccess();
          *(_DWORD *)long long v71 = v26;
          if (qword_1004C2AC0 != -1) {
            swift_once();
          }
          v72._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
          v72._object = (void *)0x8000000100427490;
          Log.default(_:isPrivate:)(v72, 0);
          return (uint64_t)v45;
        }
        swift_bridgeObjectRelease();
        if (qword_1004C2AC0 != -1) {
          swift_once();
        }
        CGFloat v62 = 0x8000000100427460;
        double v60 = 0xD000000000000026;
        goto LABEL_18;
      }
      swift_bridgeObjectRelease();
      if (qword_1004C2AC0 != -1) {
        swift_once();
      }
      double v60 = 0xD000000000000029;
      CGFloat v61 = "Dropped edge. Reason: Edge type is planar";
    }
    else
    {
LABEL_14:
      if (qword_1004C2AC0 != -1) {
        swift_once();
      }
      double v60 = 0xD000000000000040;
      CGFloat v61 = "Dropped edge. Reason: Screen space projection error is too high.";
    }
    CGFloat v62 = (unint64_t)(v61 - 32) | 0x8000000000000000;
LABEL_18:
    Log.default(_:isPrivate:)(*(Swift::String *)&v60, 0);

    return 0;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for CandidateEdge(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CandidateEdge(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CandidateEdge()
{
  return &type metadata for CandidateEdge;
}

uint64_t sub_1001370F8@<X0>(uint64_t a1@<X8>)
{
  if (qword_1004C2BB8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = sub_1000217E0(v2, (uint64_t)qword_1004F8410);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1001371A0()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t sub_1001371A8()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t sub_100137224(char a1)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(unsigned char *)(v3 + 24) = a1;
  sub_100012894((uint64_t *)&unk_1004C68D0);
  swift_allocObject();
  swift_retain();
  return Future.init(_:)();
}

uint64_t sub_1001372B0()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1001372E8(void (*a1)(unsigned char *), uint64_t a2)
{
  return sub_1001326CC(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

void sub_1001372F4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void (*v9)(void *__return_ptr, uint64_t);
  uint64_t v10;
  void *v11;
  void *v12;
  float32x2_t v13;
  float32x2_t v14;
  float32x2_t v15;
  float32x2_t v16;
  float32x2_t v17;
  float32x2_t v18;
  float32x2_t v19;
  float32x2_t v20;
  float32x2_t v21;
  float32x2_t v22;
  float32x2_t v23;
  float32x2_t v24;
  float32x2_t v25;
  float32x2_t v26;
  float32x2_t v27;
  float v28;
  float v29;
  float v30;
  float v31;
  float v32;
  float v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  char v38;
  float32x2_t v39;
  float32x2_t v40;
  float32x2_t v41;
  float32x2_t v42;
  void v43[4];
  void v44[5];
  char v45;

  sub_100016FEC(a1, (uint64_t)v44, &qword_1004CC9E0);
  if (v45) {
    goto LABEL_11;
  }
  uint64_t v5 = (void *)v44[0];
  uint64_t v4 = v44[1];
  uint64_t v7 = v44[2];
  uint64_t v6 = v44[3];
  uint64_t v8 = v44[4];
  CGFloat v9 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v2 + 120) + 144);
  CGFloat v10 = swift_retain();
  v9(v43, v10);
  swift_release();
  CGFloat v11 = (void *)v43[0];
  CGFloat v12 = (void *)v43[1];

  if (!v11)
  {
LABEL_12:
    float32x4_t v34 = 0;
    char v35 = 0;
    float32x4_t v36 = 0;
    uint64_t v8 = 0;
    float32x2_t v38 = 1;
    int32x4_t v37 = 2139095040;
    goto LABEL_13;
  }
  uint64_t v13 = COERCE_FLOAT32X2_T((*(double (**)(void))((swift_isaMask & *v11) + 0x200))());

  CGPoint.floats.getter();
  Swift::String v42 = v14;
  CGPoint.floats.getter();
  int8x16_t v40 = v15;
  CGFloat v16 = vsub_f32(v42, v15);
  CGFloat v17 = vmul_f32(v16, v16);
  v17.i32[0] = vadd_f32(v17, (float32x2_t)vdup_lane_s32((int32x2_t)v17, 1)).u32[0];
  uint64_t v18 = vrsqrte_f32((float32x2_t)v17.u32[0]);
  uint64_t v19 = vmul_f32(v18, vrsqrts_f32((float32x2_t)v17.u32[0], vmul_f32(v18, v18)));
  uint64_t v20 = vmul_n_f32(v16, vmul_f32(v19, vrsqrts_f32((float32x2_t)v17.u32[0], vmul_f32(v19, v19))).f32[0]);
  CGPoint.floats.getter();
  Swift::String v41 = v21;
  CGPoint.floats.getter();
  uint64_t v23 = v22;
  uint64_t v24 = vsub_f32(v41, v22);
  int v25 = vmul_f32(v24, v24);
  v25.i32[0] = vadd_f32(v25, (float32x2_t)vdup_lane_s32((int32x2_t)v25, 1)).u32[0];
  int v26 = vrsqrte_f32((float32x2_t)v25.u32[0]);
  uint64_t v27 = vmul_f32(v26, vrsqrts_f32((float32x2_t)v25.u32[0], vmul_f32(v26, v26)));
  if (fabsf(vaddv_f32(vmul_f32(v20, vmul_n_f32(v24, vmul_f32(v27, vrsqrts_f32((float32x2_t)v25.u32[0], vmul_f32(v27, v27))).f32[0])))) > 0.3|| ((v39 = v23, lineIntersection(line1P1:line1P2:line2P1:line2P2:)(), v29 <= 0.0) || v28 >= 1.0)&& ((sub_10013CD38(v41, v42, v40), float v31 = v30, sub_10013CD38(v39, v42, v40), v32 >= v31) ? (v33 = v31) : (v33 = v32), v33 >= 64.0))
  {
LABEL_11:
    CGFloat v11 = 0;
    goto LABEL_12;
  }
  CGFloat v11 = v5;
  float32x4_t v34 = v4;
  char v35 = v7;
  float32x4_t v36 = v6;
  sub_10013CDC8(v13, v41, v39, INFINITY);
  float32x2_t v38 = 0;
LABEL_13:
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v34;
  *(void *)(a2 + 16) = v35;
  *(void *)(a2 + 24) = v36;
  *(void *)(a2 + 32) = v8;
  *(unsigned char *)(a2 + 40) = v38;
  *(_DWORD *)(a2 + 44) = v37;
}

__n128 sub_1001375B0@<Q0>(void *a1@<X1>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  CGPoint.floats.getter();
  float32x2_t v8 = v7;
  CGPoint.floats.getter();
  float32x2_t v10 = v9;
  float32x2_t v11 = vsub_f32(v8, v9);
  float32x2_t v161 = vmul_f32(v11, v11);
  unsigned __int32 v12 = vadd_f32(v161, (float32x2_t)vdup_lane_s32((int32x2_t)v161, 1)).u32[0];
  float32x2_t v13 = vrsqrte_f32((float32x2_t)v12);
  float32x2_t v14 = vmul_f32(v13, vrsqrts_f32((float32x2_t)v12, vmul_f32(v13, v13)));
  float32x2_t v15 = vmul_n_f32(v11, vmul_f32(v14, vrsqrts_f32((float32x2_t)v12, vmul_f32(v14, v14))).f32[0]);
  CGFloat v16 = sub_10007C390((void *)1, 15);
  int64_t v17 = v16[2];
  if (v17)
  {
    float32x2_t v18 = vmul_n_f32(v15, sqrtf(vaddv_f32(v161)) * 0.066667);
    sub_1000BBF44(0, v17, 0);
    uint64_t v19 = 0;
    unint64_t v20 = _swiftEmptyArrayStorage[2];
    do
    {
      uint64_t v21 = v16[v19 + 4];
      unint64_t v22 = _swiftEmptyArrayStorage[3];
      if (v20 >= v22 >> 1) {
        sub_1000BBF44((char *)(v22 > 1), v20 + 1, 1);
      }
      ++v19;
      _swiftEmptyArrayStorage[2] = v20 + 1;
      _swiftEmptyArrayStorage[v20++ + 4] = vadd_f32(v10, vmul_n_f32(v18, (float)v21));
    }
    while (v17 != v19);
  }
  swift_release();
  int64_t v23 = _swiftEmptyArrayStorage[2];
  if (v23)
  {
    sub_1000BBF44(0, v23, 0);
    uint64_t v24 = (float32x2_t *)&_swiftEmptyArrayStorage[4];
    float32x2_t v25 = (float32x2_t)vrev64_s32((int32x2_t)vmul_f32(v15, (float32x2_t)vdup_n_s32(0x42480000u)));
    unint64_t v26 = _swiftEmptyArrayStorage[2];
    int64_t v27 = v23;
    do
    {
      float32x2_t v28 = *v24;
      unint64_t v29 = _swiftEmptyArrayStorage[3];
      if (v26 >= v29 >> 1) {
        sub_1000BBF44((char *)(v29 > 1), v26 + 1, 1);
      }
      LODWORD(v30) = vsub_f32(v28, v25).u32[0];
      HIDWORD(v30) = vadd_f32(v28, v25).i32[1];
      _swiftEmptyArrayStorage[2] = v26 + 1;
      _swiftEmptyArrayStorage[v26 + 4] = v30;
      ++v24;
      ++v26;
      --v27;
    }
    while (v27);
  }
  id v31 = a1;
  uint64_t v32 = sub_10013CB28((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  Swift::String v157 = v31;

  int64_t v33 = *((void *)v32 + 2);
  if (!v33)
  {
    swift_bridgeObjectRelease();
    if (!v23) {
      goto LABEL_23;
    }
    goto LABEL_17;
  }
  sub_1000BBEC4(0, v33, 0);
  float32x4_t v34 = v32 + 80;
  do
  {
    uint64_t v35 = *((void *)v34 + 7);
    simd_float4x4.position.getter();
    int8x16_t v162 = v36;
    unint64_t v38 = _swiftEmptyArrayStorage[2];
    unint64_t v37 = _swiftEmptyArrayStorage[3];
    swift_retain();
    if (v38 >= v37 >> 1) {
      sub_1000BBEC4((void *)(v37 > 1), v38 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v38 + 1;
    float32x2_t v39 = (int8x16_t *)&_swiftEmptyArrayStorage[4 * v38];
    v39[2] = v162;
    v39[3].i64[0] = v35;
    v34 += 128;
    --v33;
  }
  while (v33);
  swift_bridgeObjectRelease();
  if (v23)
  {
LABEL_17:
    sub_1000BBF44(0, v23, 0);
    uint64_t v40 = 0;
    float32x2_t v41 = (float32x2_t)vrev64_s32((int32x2_t)vmul_f32(v15, (float32x2_t)vdup_n_s32(0x42480000u)));
    unint64_t v42 = _swiftEmptyArrayStorage[2];
    do
    {
      float32x2_t v43 = (float32x2_t)_swiftEmptyArrayStorage[v40 + 4];
      unint64_t v44 = _swiftEmptyArrayStorage[3];
      if (v42 >= v44 >> 1) {
        sub_1000BBF44((char *)(v44 > 1), v42 + 1, 1);
      }
      LODWORD(v45) = vadd_f32(v43, v41).u32[0];
      HIDWORD(v45) = vsub_f32(v43, v41).i32[1];
      ++v40;
      _swiftEmptyArrayStorage[2] = v42 + 1;
      _swiftEmptyArrayStorage[v42++ + 4] = v45;
    }
    while (v23 != v40);
  }
LABEL_23:
  swift_bridgeObjectRelease();
  id v46 = v157;
  BOOL v47 = sub_10013CB28((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();

  int64_t v48 = *((void *)v47 + 2);
  if (v48)
  {
    sub_1000BBEC4(0, v48, 0);
    CGFloat v49 = v47 + 80;
    do
    {
      uint64_t v50 = *((void *)v49 + 7);
      simd_float4x4.position.getter();
      int8x16_t v163 = v51;
      unint64_t v52 = _swiftEmptyArrayStorage[2];
      unint64_t v53 = _swiftEmptyArrayStorage[3];
      swift_retain();
      if (v52 >= v53 >> 1) {
        sub_1000BBEC4((void *)(v53 > 1), v52 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v52 + 1;
      unint64_t v54 = (int8x16_t *)&_swiftEmptyArrayStorage[4 * v52];
      v54[2] = v163;
      v54[3].i64[0] = v50;
      v49 += 128;
      --v48;
    }
    while (v48);
  }
  swift_bridgeObjectRelease();
  unint64_t v55 = sub_10013CE7C();
  swift_bridgeObjectRelease();
  float v56 = sub_10013CE7C();
  swift_bridgeObjectRelease();
  unint64_t v57 = self;
  id v58 = [v57 standardUserDefaults];
  unsigned __int8 v59 = [v58 showRefinementPlanes];

  if (v59)
  {
    double v60 = *(void **)(v156 + 256);
    if (v60)
    {
      id v61 = v60;
      SCNNode.removeAllChildren()();
    }
    sub_100012894(&qword_1004CC9C8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1003F8B80;
    *(void *)(inited + 32) = v55;
    *(void *)(inited + 40) = v56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10013BF64(inited, (void (*)(uint64_t, __n128))sub_10013E5F0);
    swift_setDeallocating();
    sub_100012894(&qword_1004CC9D0);
    swift_arrayDestroy();
  }
  float32x2_t v63 = sub_10013CE7C();
  swift_bridgeObjectRelease();
  float32x2_t v64 = sub_10013CE7C();
  swift_bridgeObjectRelease();
  id v65 = [v57 standardUserDefaults];
  unsigned int v66 = [v65 showRefinementPlanes];

  if (v66)
  {
    id v67 = [v57 standardUserDefaults];
    unsigned int v68 = [v67 showFilteredRefinementPlanes];

    if (v68)
    {
      sub_100012894(&qword_1004CC9C8);
      uint64_t v69 = swift_initStackObject();
      *(_OWORD *)(v69 + 16) = xmmword_1003F8B80;
      *(void *)(v69 + 32) = v63;
      *(void *)(v69 + 40) = v64;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10013BF64(v69, (void (*)(uint64_t, __n128))sub_10013E5E8);
      swift_setDeallocating();
      sub_100012894(&qword_1004CC9D0);
      swift_arrayDestroy();
    }
  }
  uint64_t v70 = sub_100139750((uint64_t)v63, (uint64_t)v64);
  uint64_t v72 = v71;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v73 = swift_bridgeObjectRetain();
  uint64_t v74 = sub_10013C1B0(v73);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  uint64_t v75 = swift_bridgeObjectRetain();
  uint64_t v76 = sub_10013C3DC(v75);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  uint64_t v77 = swift_bridgeObjectRetain();
  uint64_t v78 = sub_10013C1B0(v77);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  uint64_t v79 = swift_bridgeObjectRetain();
  uint64_t v80 = sub_10013C3DC(v79);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v81 = *(void *)(v80 + 16);
  if ((unint64_t)v81 >= 4)
  {
    swift_bridgeObjectRelease();
    __n128 v159 = sub_10013D090(v80);
    float32x4_t v82 = *(float32x4_t *)SIMD3<>.up.unsafeMutableAddressor();
    int8x16_t v164 = (int8x16_t)v82;
    if (qword_1004C2BE0 != -1)
    {
      swift_once();
      float32x4_t v82 = (float32x4_t)v164;
    }
    BOOL v83 = sub_10013D2B4(v82, a3, a4, a5, a6, *(float *)&dword_1004F843C);
    swift_bridgeObjectRelease();
    v85.i64[0] = v159.n128_u64[0];
    int8x16_t v84 = vextq_s8((int8x16_t)v159, v164, 8uLL);
    v85.i64[1] = v164.i64[1];
    if (v83) {
      unint64_t v86 = -1;
    }
    else {
      unint64_t v86 = 0;
    }
    int8x16_t v87 = (int8x16_t)vdupq_n_s64(v86);
    int8x16_t v148 = vbicq_s8(v85, v87);
    int8x16_t v149 = vbicq_s8(v84, v87);
    float v88 = (float)v81 / 15.0;
    uint64_t v89 = 0x1000000;
    goto LABEL_49;
  }
  swift_bridgeObjectRelease();
  unint64_t v90 = *(void *)(v78 + 16);
  if (v90 < 4)
  {
    swift_bridgeObjectRelease();
    int8x16_t v148 = 0u;
    int8x16_t v149 = 0u;
    BOOL v83 = 1;
    float v88 = 0.0;
    uint64_t v89 = 0x2000000;
LABEL_49:
    uint64_t v147 = v89;
    goto LABEL_56;
  }
  uint64_t v143 = v76;
  uint64_t v145 = v74;
  __n128 v150 = sub_10013D090(v78);
  sub_1000BBE34(0, v90, 0);
  uint64_t v91 = 48;
  uint64_t v141 = v90;
  do
  {
    uint64_t v92 = *(uint64_t (**)(uint64_t))(**(void **)(v78 + v91) + 160);
    uint64_t v93 = swift_retain();
    Swift::String v94 = (void *)v92(v93);
    [v94 transform];

    simd_float4x4.up.getter();
    int8x16_t v165 = v95;
    swift_release();
    unint64_t v97 = _swiftEmptyArrayStorage[2];
    unint64_t v96 = _swiftEmptyArrayStorage[3];
    if (v97 >= v96 >> 1) {
      sub_1000BBE34((char *)(v96 > 1), v97 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v97 + 1;
    *(int8x16_t *)&_swiftEmptyArrayStorage[2 * v97 + 4] = v165;
    v91 += 32;
    --v90;
  }
  while (v90);
  static SIMD3<>.average(_:)();
  float32x4_t v166 = v98;
  swift_bridgeObjectRelease();
  float32x4_t v99 = vmulq_f32(v166, v166);
  v99.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32((int32x4_t)v99, 2), vadd_f32(*(float32x2_t *)v99.f32, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v99.f32, 1))).u32[0];
  float32x2_t v100 = vrsqrte_f32((float32x2_t)v99.u32[0]);
  float32x2_t v101 = vmul_f32(v100, vrsqrts_f32((float32x2_t)v99.u32[0], vmul_f32(v100, v100)));
  *(float32x2_t *)v99.f32 = vmul_f32(v101, vrsqrts_f32((float32x2_t)v99.u32[0], vmul_f32(v101, v101)));
  v99.i64[1] = v99.i64[0];
  float32x4_t v102 = (float32x4_t)vtrn2q_s32(vrev64q_s32((int32x4_t)vmulq_f32(v166, v99)), (int32x4_t)0);
  uint64_t v76 = v143;
  int8x16_t v167 = (int8x16_t)v102;
  if (qword_1004C2BE0 != -1)
  {
    swift_once();
    float32x4_t v102 = (float32x4_t)v167;
  }
  BOOL v83 = sub_10013D2B4(v102, a3, a4, a5, a6, *(float *)&dword_1004F843C);
  swift_bridgeObjectRelease();
  uint64_t v147 = 0;
  v104.i64[0] = v150.n128_u64[0];
  int8x16_t v103 = vextq_s8((int8x16_t)v150, v167, 8uLL);
  v104.i64[1] = v167.i64[1];
  if (v83) {
    unint64_t v105 = -1;
  }
  else {
    unint64_t v105 = 0;
  }
  int8x16_t v106 = (int8x16_t)vdupq_n_s64(v105);
  int8x16_t v148 = vbicq_s8(v104, v106);
  int8x16_t v149 = vbicq_s8(v103, v106);
  float v88 = (float)v141 / 15.0;
  uint64_t v74 = v145;
LABEL_56:
  uint64_t v107 = *(void *)(v76 + 16);
  if ((unint64_t)v107 < 4)
  {
    swift_bridgeObjectRelease();
    unint64_t v118 = *(void *)(v74 + 16);
    if (v118 < 4)
    {
      swift_bridgeObjectRelease();
      int8x16_t v160 = 0u;
      int8x16_t v169 = 0u;
      BOOL v109 = 1;
      float v114 = 0.0;
      int v113 = 2139095040;
      uint64_t v115 = 0x20000;
      uint64_t v116 = *(void *)(v72 + 16);
      if (!v116) {
        goto LABEL_80;
      }
      goto LABEL_63;
    }
    BOOL v146 = v83;
    __n128 v142 = sub_10013D090(v74);
    sub_1000BBE34(0, v118, 0);
    uint64_t v119 = 48;
    uint64_t v144 = v118;
    unint64_t v120 = v118;
    do
    {
      uint64_t v121 = v74;
      id v122 = *(uint64_t (**)(uint64_t))(**(void **)(v74 + v119) + 160);
      uint64_t v123 = swift_retain();
      Swift::String v124 = (void *)v122(v123);
      [v124 transform];

      simd_float4x4.up.getter();
      int8x16_t v170 = v125;
      swift_release();
      unint64_t v127 = _swiftEmptyArrayStorage[2];
      unint64_t v126 = _swiftEmptyArrayStorage[3];
      if (v127 >= v126 >> 1) {
        sub_1000BBE34((char *)(v126 > 1), v127 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v127 + 1;
      *(int8x16_t *)&_swiftEmptyArrayStorage[2 * v127 + 4] = v170;
      v119 += 32;
      --v120;
      uint64_t v74 = v121;
    }
    while (v120);
    static SIMD3<>.average(_:)();
    float32x4_t v171 = v128;
    swift_bridgeObjectRelease();
    float32x4_t v129 = vmulq_f32(v171, v171);
    v129.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32((int32x4_t)v129, 2), vadd_f32(*(float32x2_t *)v129.f32, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v129.f32, 1))).u32[0];
    float32x2_t v130 = vrsqrte_f32((float32x2_t)v129.u32[0]);
    float32x2_t v131 = vmul_f32(v130, vrsqrts_f32((float32x2_t)v129.u32[0], vmul_f32(v130, v130)));
    *(float32x2_t *)v129.f32 = vmul_f32(v131, vrsqrts_f32((float32x2_t)v129.u32[0], vmul_f32(v131, v131)));
    v129.i64[1] = v129.i64[0];
    float32x4_t v132 = (float32x4_t)vtrn2q_s32(vrev64q_s32((int32x4_t)vmulq_f32(v171, v129)), (int32x4_t)0);
    int8x16_t v172 = (int8x16_t)v132;
    if (qword_1004C2BE0 != -1)
    {
      swift_once();
      float32x4_t v132 = (float32x4_t)v172;
    }
    BOOL v109 = sub_10013D2B4(v132, a3, a4, a5, a6, *(float *)&dword_1004F843C);
    if (v109) {
      unint64_t v133 = -1;
    }
    else {
      unint64_t v133 = 0;
    }
    int8x16_t v134 = (int8x16_t)vdupq_n_s64(v133);
    int8x16_t v160 = vbicq_s8(v172, v134);
    int8x16_t v169 = vbicq_s8((int8x16_t)v142, v134);
    sub_10013D3C8(v121);
    int v113 = v135;
    swift_bridgeObjectRelease();
    uint64_t v115 = 0;
    float v114 = (float)v144 / 15.0;
    BOOL v83 = v146;
    uint64_t v116 = *(void *)(v72 + 16);
    if (v116)
    {
LABEL_63:
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v117 = 48;
      do
      {
        swift_retain();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v117 += 32;
        --v116;
      }
      while (v116);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    __n128 v158 = sub_10013D090(v76);
    float32x4_t v108 = *(float32x4_t *)SIMD3<>.up.unsafeMutableAddressor();
    int8x16_t v168 = (int8x16_t)v108;
    if (qword_1004C2BE0 != -1)
    {
      swift_once();
      float32x4_t v108 = (float32x4_t)v168;
    }
    BOOL v109 = sub_10013D2B4(v108, a3, a4, a5, a6, *(float *)&dword_1004F843C);
    if (v109) {
      unint64_t v110 = -1;
    }
    else {
      unint64_t v110 = 0;
    }
    int8x16_t v111 = (int8x16_t)vdupq_n_s64(v110);
    int8x16_t v160 = vbicq_s8(v168, v111);
    int8x16_t v169 = vbicq_s8((int8x16_t)v158, v111);
    sub_10013D3C8(v76);
    int v113 = v112;
    swift_bridgeObjectRelease();
    float v114 = (float)v107 / 15.0;
    uint64_t v115 = 0x10000;
    uint64_t v116 = *(void *)(v72 + 16);
    if (v116) {
      goto LABEL_63;
    }
  }
LABEL_80:
  swift_bridgeObjectRelease();
  unsigned __int8 v136 = sub_100139C3C();
  swift_bridgeObjectRelease();
  uint64_t v137 = *(void *)(v70 + 16);
  if (v137)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v138 = 48;
    do
    {
      swift_retain();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v138 += 32;
      --v137;
    }
    while (v137);
  }
  swift_bridgeObjectRelease();
  unsigned __int8 v139 = sub_100139C3C();
  swift_bridgeObjectRelease();
  *(int8x16_t *)a2 = v169;
  *(int8x16_t *)(a2 + 16) = v160;
  *(unsigned char *)(a2 + 32) = v109;
  *(void *)(a2 + 48) = v148.i64[0];
  *(void *)(a2 + 72) = v148.i64[1];
  __n128 result = (__n128)v149;
  *(int8x16_t *)(a2 + 56) = v149;
  *(unsigned char *)(a2 + 80) = v83;
  *(void *)(a2 + 84) = v139 | ((unint64_t)v136 << 8) | v115 | v147 | ((unint64_t)LODWORD(v114) << 32);
  *(float *)(a2 + 92) = v88;
  *(_DWORD *)(a2 + 96) = v113;
  return result;
}

uint64_t sub_10013851C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (float32x2_t *)(a2 + direct field offset for WorldEdge.p1);
  swift_beginAccess();
  if (v3[2].i8[0]) {
    return 4;
  }
  uint64_t v6 = v3;
  float32x2_t v4 = *v3;
  unint64_t v5 = (unint64_t)v6[1];
  float32x2_t v7 = (float32x2_t *)(a2 + direct field offset for WorldEdge.p2);
  swift_beginAccess();
  if (v7[2].i8[0]) {
    return 4;
  }
  float32x2_t v9 = (const double *)&v7[1];
  int64x2_t v10 = vdupq_n_s64(v5);
  float64x2_t v11 = vld1q_dup_f64(v9);
  *(float32x2_t *)v12.f32 = vmul_f32(vadd_f32(v4, *v7), (float32x2_t)0x3F0000003F000000);
  v12.f32[2] = (float)(*(float *)&v10.i32[2] + *(float *)&v11.f64[1]) * 0.5;
  v12.i32[3] = 0;
  *(float32x2_t *)v8.f32 = vsub_f32(*v7, v4);
  v8.f32[2] = *(float *)&v11.f64[1] - *(float *)&v10.i32[2];
  int32x4_t v13 = (int32x4_t)vmulq_f32(v8, v8);
  v13.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v13, 2), vadd_f32(*(float32x2_t *)v13.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v13.i8, 1))).u32[0];
  *(float32x2_t *)v10.i8 = vrsqrte_f32((float32x2_t)v13.u32[0]);
  *(float32x2_t *)v10.i8 = vmul_f32(*(float32x2_t *)v10.i8, vrsqrts_f32((float32x2_t)v13.u32[0], vmul_f32(*(float32x2_t *)v10.i8, *(float32x2_t *)v10.i8)));
  float32x4_t v54 = v12;
  float32x4_t v57 = vmulq_n_f32(v8, vmul_f32(*(float32x2_t *)v10.i8, vrsqrts_f32((float32x2_t)v13.u32[0], vmul_f32(*(float32x2_t *)v10.i8, *(float32x2_t *)v10.i8))).f32[0]);
  swift_retain();
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_10013C8FC(v14, v54, v57);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    int64_t v17 = (unsigned char *)(v15 + 64);
    float32x2_t v18 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if ((*v17 & 1) == 0)
      {
        uint64_t v20 = *((void *)v17 - 4);
        uint64_t v21 = *((void *)v17 - 3);
        uint64_t v22 = *((void *)v17 - 2);
        uint64_t v23 = *((void *)v17 - 1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          float32x2_t v18 = sub_10006F0B4(0, *((void *)v18 + 2) + 1, 1, v18);
        }
        unint64_t v25 = *((void *)v18 + 2);
        unint64_t v24 = *((void *)v18 + 3);
        if (v25 >= v24 >> 1) {
          float32x2_t v18 = sub_10006F0B4((char *)(v24 > 1), v25 + 1, 1, v18);
        }
        *((void *)v18 + 2) = v25 + 1;
        uint64_t v19 = &v18[32 * v25];
        *((void *)v19 + 4) = v20;
        *((void *)v19 + 5) = v21;
        *((void *)v19 + 6) = v22;
        *((void *)v19 + 7) = v23;
      }
      v17 += 48;
      --v16;
    }
    while (v16);
  }
  else
  {
    float32x2_t v18 = (char *)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = *((void *)v18 + 2);
  if ((unint64_t)(v26 - 3) < 0xFFFFFFFFFFFFFFFELL)
  {
    swift_bridgeObjectRelease();
    if (qword_1004C2AC0 != -1) {
      swift_once();
    }
    v27._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
    v27._object = (void *)0x8000000100427610;
    Log.default(_:isPrivate:)(v27, 0);
    return 4;
  }
  if (v26 != 1)
  {
    float32x4_t v30 = *((float32x4_t *)v18 + 3);
    int32x4_t v31 = (int32x4_t)vmulq_f32(v30, v30);
    v31.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v31, 2), vadd_f32(*(float32x2_t *)v31.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v31.i8, 1))).u32[0];
    float32x2_t v32 = vrsqrte_f32((float32x2_t)v31.u32[0]);
    float32x2_t v33 = vmul_f32(v32, vrsqrts_f32((float32x2_t)v31.u32[0], vmul_f32(v32, v32)));
    float32x4_t v34 = vmulq_n_f32(v30, vmul_f32(v33, vrsqrts_f32((float32x2_t)v31.u32[0], vmul_f32(v33, v33))).f32[0]);
    float32x4_t v35 = *((float32x4_t *)v18 + 5);
    int32x4_t v36 = (int32x4_t)vmulq_f32(v35, v35);
    v36.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v36, 2), vadd_f32(*(float32x2_t *)v36.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v36.i8, 1))).u32[0];
    float32x2_t v37 = vrsqrte_f32((float32x2_t)v36.u32[0]);
    float32x2_t v38 = vmul_f32(v37, vrsqrts_f32((float32x2_t)v36.u32[0], vmul_f32(v37, v37)));
    float32x4_t v39 = vmulq_f32(v34, vmulq_n_f32(v35, vmul_f32(v38, vrsqrts_f32((float32x2_t)v36.u32[0], vmul_f32(v38, v38))).f32[0]));
    LODWORD(v40) = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v39, 2), vaddq_f32(v39, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v39.f32, 1))).u32[0];
    if (qword_1004C2BE8 != -1)
    {
      float v55 = v40;
      swift_once();
      float v40 = v55;
    }
    if (*(float *)&dword_1004F8440 < v40)
    {
      float32x4_t v62 = *((float32x4_t *)v18 + 3);
      if (sub_10013C10C(v62, 5.0)
        && sub_10013C10C(*((float32x4_t *)v18 + 5), 5.0)
        && (float)(COERCE_FLOAT(HIDWORD(*((void *)v18 + 4))) - *((float *)v18 + 17)) > 0.04)
      {
        long long v60 = *((_OWORD *)v18 + 2);
      }
      else
      {
        if (!sub_10013C06C(v62, 5.0)) {
          return 2;
        }
        if (!sub_10013C06C(*((float32x4_t *)v18 + 5), 5.0)) {
          return 2;
        }
        type metadata accessor for PlaneUtil();
        long long v60 = *((_OWORD *)v18 + 2);
        static PlaneUtil.distance(point:plane:)();
        if (v43 <= 0.04) {
          return 2;
        }
      }
      sub_100012894(&qword_1004C6B30);
      unint64_t v44 = (_OWORD *)swift_allocObject();
      v44[1] = xmmword_1003F87F0;
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      v44[2] = v60;
      float32x4_t v45 = v62;
      goto LABEL_51;
    }
    if (qword_1004C2BF0 != -1)
    {
      float v56 = v40;
      swift_once();
      float v40 = v56;
    }
    if (v40 < *(float *)&dword_1004F8444 && v40 > (float)-*(float *)&dword_1004F8444)
    {
      float32x4_t v41 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(*((int32x4_t *)v18 + 5), *((int32x4_t *)v18 + 5)), *((int8x16_t *)v18 + 5), 0xCuLL), vnegq_f32(*((float32x4_t *)v18 + 3))), *((float32x4_t *)v18 + 5), (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(*((int32x4_t *)v18 + 3), *((int32x4_t *)v18 + 3)), *((int8x16_t *)v18 + 3), 0xCuLL));
      float v42 = fabsf(vaddq_f32((float32x4_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vmulq_laneq_f32(v41, v57, 2), 1), vaddq_f32(vmulq_laneq_f32(v57, v41, 2), vmulq_lane_f32(v41, *(float32x2_t *)v57.f32, 1))).f32[0]);
      if (qword_1004C2BF8 != -1)
      {
        float v59 = v42;
        swift_once();
        float v42 = v59;
      }
      if (*(float *)&dword_1004F8448 < v42) {
        return 1;
      }
      float32x4_t v58 = *((float32x4_t *)v18 + 2);
      simd_float4x4.position.getter();
      float32x4_t v47 = vsubq_f32(v58, v46);
      int8x16_t v48 = (int8x16_t)vmulq_f32(v47, v47);
      v49.i32[0] = vextq_s8(v48, v48, 8uLL).u32[0];
      v49.i32[1] = v48.i32[0];
      *(float32x2_t *)v46.f32 = vsub_f32(*(float32x2_t *)(v18 + 64), *(float32x2_t *)v46.f32);
      *(float32x2_t *)v46.f32 = vmul_f32(*(float32x2_t *)v46.f32, *(float32x2_t *)v46.f32);
      float32x2_t v50 = (float32x2_t)vext_s8(v49, *(int8x8_t *)v46.f32, 4uLL);
      v46.i32[0] = v48.i32[1];
      *(float *)&v49.i32[1] = (float)(*((float *)v18 + 18) - v46.f32[2]) * (float)(*((float *)v18 + 18) - v46.f32[2]);
      *(float32x2_t *)v46.f32 = vadd_f32((float32x2_t)v49, vadd_f32(v50, *(float32x2_t *)v46.f32));
      if (vcgt_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v46.f32, 1), *(float32x2_t *)v46.f32).u8[0])
      {
        if (qword_1004C2AC0 != -1) {
          swift_once();
        }
        v51._object = (void *)0x8000000100427580;
        v51._uint64_t countAndFlagsBits = 0xD000000000000043;
        Log.default(_:isPrivate:)(v51, 0);
        sub_100012894(&qword_1004C6B30);
        unint64_t v44 = (_OWORD *)swift_allocObject();
        v44[1] = xmmword_1003F87F0;
        long long v63 = *((_OWORD *)v18 + 2);
        float32x4_t v52 = *((float32x4_t *)v18 + 3);
      }
      else
      {
        if (qword_1004C2AC0 != -1) {
          swift_once();
        }
        v53._object = (void *)0x8000000100427580;
        v53._uint64_t countAndFlagsBits = 0xD000000000000043;
        Log.default(_:isPrivate:)(v53, 0);
        sub_100012894(&qword_1004C6B30);
        unint64_t v44 = (_OWORD *)swift_allocObject();
        v44[1] = xmmword_1003F87F0;
        long long v63 = *((_OWORD *)v18 + 4);
        float32x4_t v52 = *((float32x4_t *)v18 + 5);
      }
      float32x4_t v61 = v52;
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      v44[2] = v63;
      float32x4_t v45 = v61;
LABEL_51:
      v44[3] = v45;
      return result;
    }
    swift_bridgeObjectRelease();
    return 4;
  }
  if (qword_1004C2AC0 != -1) {
    swift_once();
  }
  v29._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
  v29._object = (void *)0x80000001004275D0;
  Log.default(_:isPrivate:)(v29, 0);
  return 0;
}

void sub_100138CB4(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)a1 + 160);
  uint64_t v3 = (void *)v2();
  [v3 transform];

  simd_float4x4.up.getter();
  uint64_t v4 = static simd_float4x4.make(position:normalizedForward:)();
  unint64_t v5 = (void *)((uint64_t (*)(uint64_t))v2)(v4);
  [v5 transform];

  uint64_t v6 = simd_float4x4.up.getter();
  int32x4_t v8 = (int32x4_t)vmulq_f32(v7, v7);
  v8.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v8, 2), vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v8.i8, 1))).u32[0];
  float32x2_t v9 = vrsqrte_f32((float32x2_t)v8.u32[0]);
  float32x2_t v10 = vmul_f32(v9, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v9, v9)));
  int8x16_t v11 = (int8x16_t)vmulq_n_f32(v7, vmul_f32(v10, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v10, v10))).f32[0]);
  v8.i32[0] = v11.i32[1];
  v10.i32[0] = vextq_s8(v11, v11, 8uLL).u32[0];
  v10.i32[1] = v11.i32[0];
  *(float32x2_t *)v11.i8 = vmul_f32(v10, 0);
  if (fabsf(*(float *)v11.i32 + (float)(*(float *)v8.i32 + *(float *)&v11.i32[1])) >= 0.20791)
  {
    int32x4_t v13 = (void *)((uint64_t (*)(uint64_t))v2)(v6);
    [v13 transform];

    simd_float4x4.up.getter();
    int32x4_t v15 = (int32x4_t)vmulq_f32(v14, v14);
    v15.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v15, 2), vadd_f32(*(float32x2_t *)v15.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v15.i8, 1))).u32[0];
    float32x2_t v16 = vrsqrte_f32((float32x2_t)v15.u32[0]);
    float32x2_t v17 = vmul_f32(v16, vrsqrts_f32((float32x2_t)v15.u32[0], vmul_f32(v16, v16)));
    int8x16_t v18 = (int8x16_t)vmulq_n_f32(v14, vmul_f32(v17, vrsqrts_f32((float32x2_t)v15.u32[0], vmul_f32(v17, v17))).f32[0]);
    v15.i32[0] = v18.i32[1];
    v17.i32[0] = vextq_s8(v18, v18, 8uLL).u32[0];
    v17.i32[1] = v18.i32[0];
    *(float32x2_t *)v18.i8 = vmul_f32(v17, 0);
    float v19 = fabsf(*(float *)v18.i32 + (float)(*(float *)v15.i32 + *(float *)&v18.i32[1]));
    if (v19 > 1.0) {
      float v19 = 1.0;
    }
    char v12 = (float)(acosf(v19) * 57.296) < 12.0;
  }
  else
  {
    char v12 = 1;
  }
  id v20 = sub_10013E5F8(a1);
  sub_100138F34(v20, v12, 0, 0, 1);
}

void sub_100138F34(id a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  double v10 = (double)a5 * 0.04;
  int8x16_t v11 = self;
  id v12 = [v11 boxWithWidth:v10 height:v10 length:0.0 chamferRadius:0.0];
  id v13 = [v11 boxWithWidth:0.001 height:0.001 length:0.05 chamferRadius:0.0];
  id v14 = [v13 firstMaterial];
  if (!v14)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  int32x4_t v15 = v14;
  id v16 = [v14 diffuse];

  float32x2_t v17 = self;
  id v18 = [v17 redColor];
  [v16 setContents:v18];

  id v19 = [v17 blackColor];
  if (v19 == a1
    || (sub_10001C99C(0, (unint64_t *)&qword_1004C4568),
        id v20 = [v17 magentaColor],
        char v21 = static NSObject.== infix(_:_:)(),
        v20,
        (v21 & 1) != 0))
  {
    [v12 setWidth:0.07];
    [v12 setHeight:0.07];
  }
  id v22 = [v12 firstMaterial];
  if (!v22) {
    goto LABEL_17;
  }
  uint64_t v23 = v22;
  id v24 = [v22 diffuse];

  [v24 setContents:a1];
  id v25 = [objc_allocWithZone((Class)SCNNode) init];
  id v26 = [objc_allocWithZone((Class)SCNNode) init];
  SCNMatrix4.init(_:)();
  long long v44 = v43[4];
  long long v45 = v43[5];
  long long v46 = v43[6];
  long long v47 = v43[7];
  [v25 setTransform:&v44];
  simd_float4x4.forward.getter();
  static simd_float4x4.make(position:normalizedForward:)();
  SCNMatrix4.init(_:)();
  v43[0] = v44;
  v43[1] = v45;
  v43[2] = v46;
  v43[3] = v47;
  [v26 setTransform:v43];
  double v27 = 0.4;
  if (a2) {
    double v27 = 0.9;
  }
  [v25 setOpacity:v27];
  [v25 setGeometry:v12];
  [v26 setGeometry:v13];
  if (a4)
  {
    *(void *)&v43[0] = a3;
    *((void *)&v43[0] + 1) = a4;
    swift_bridgeObjectRetain();
    uint64_t v28 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    id v29 = [self textWithString:v28 extrusionDepth:0.1];
    swift_unknownObjectRelease();
    id v30 = [self systemFontOfSize:1.0];
    [v29 setFont:v30];

    [v29 setFlatness:0.1];
    id v31 = [v29 firstMaterial];
    if (v31)
    {
      float32x2_t v32 = v31;
      id v33 = [v31 diffuse];

      id v34 = [v17 whiteColor];
      [v33 setContents:v34];
    }
    id v35 = [self nodeWithGeometry:v29];
    __C::SCNVector3 v48 = SCNVector3.init(_:_:_:)(0.01, 0.01, 0.01);
    [v35 setScale:*(double *)&v48.x, *(double *)&v48.y, *(double *)&v48.z];
    *(float *)&double v36 = SCNVector3Zero.x;
    *(float *)&double v37 = SCNVector3Zero.y;
    *(float *)&double v38 = SCNVector3Zero.z;
    [v35 setPosition:v36, v37, v38];
    [v25 addChildNode:v35];
  }
  float32x4_t v39 = *(void **)(v6 + 256);
  if (v39)
  {
    [v39 addChildNode:v25];
    float v40 = *(void **)(v6 + 256);
    if (v40)
    {
      id v41 = v40;
      [v41 addChildNode:v26];
    }
  }
}

void sub_1001394B8(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)a1 + 160);
  uint64_t v2 = (void *)v1();
  [v2 transform];

  simd_float4x4.up.getter();
  uint64_t v3 = static simd_float4x4.make(position:normalizedForward:)();
  uint64_t v4 = (void *)((uint64_t (*)(uint64_t))v1)(v3);
  [v4 transform];

  uint64_t v5 = simd_float4x4.up.getter();
  int32x4_t v7 = (int32x4_t)vmulq_f32(v6, v6);
  v7.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v7, 2), vadd_f32(*(float32x2_t *)v7.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v7.i8, 1))).u32[0];
  float32x2_t v8 = vrsqrte_f32((float32x2_t)v7.u32[0]);
  float32x2_t v9 = vmul_f32(v8, vrsqrts_f32((float32x2_t)v7.u32[0], vmul_f32(v8, v8)));
  int8x16_t v10 = (int8x16_t)vmulq_n_f32(v6, vmul_f32(v9, vrsqrts_f32((float32x2_t)v7.u32[0], vmul_f32(v9, v9))).f32[0]);
  v7.i32[0] = v10.i32[1];
  v9.i32[0] = vextq_s8(v10, v10, 8uLL).u32[0];
  v9.i32[1] = v10.i32[0];
  *(float32x2_t *)v10.i8 = vmul_f32(v9, 0);
  if (fabsf(*(float *)v10.i32 + (float)(*(float *)v7.i32 + *(float *)&v10.i32[1])) >= 0.20791)
  {
    id v12 = (void *)((uint64_t (*)(uint64_t))v1)(v5);
    [v12 transform];

    simd_float4x4.up.getter();
    int32x4_t v14 = (int32x4_t)vmulq_f32(v13, v13);
    v14.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v14, 2), vadd_f32(*(float32x2_t *)v14.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v14.i8, 1))).u32[0];
    float32x2_t v15 = vrsqrte_f32((float32x2_t)v14.u32[0]);
    float32x2_t v16 = vmul_f32(v15, vrsqrts_f32((float32x2_t)v14.u32[0], vmul_f32(v15, v15)));
    int8x16_t v17 = (int8x16_t)vmulq_n_f32(v13, vmul_f32(v16, vrsqrts_f32((float32x2_t)v14.u32[0], vmul_f32(v16, v16))).f32[0]);
    v14.i32[0] = v17.i32[1];
    v16.i32[0] = vextq_s8(v17, v17, 8uLL).u32[0];
    v16.i32[1] = v17.i32[0];
    *(float32x2_t *)v17.i8 = vmul_f32(v16, 0);
    float v18 = fabsf(*(float *)v17.i32 + (float)(*(float *)v14.i32 + *(float *)&v17.i32[1]));
    if (v18 > 1.0) {
      float v18 = 1.0;
    }
    char v11 = (float)(acosf(v18) * 57.296) < 12.0;
  }
  else
  {
    char v11 = 1;
  }
  id v19 = [self blackColor];
  sub_100138F34(v19, v11, 0, 0, 1);
}

uint64_t sub_100139750(uint64_t a1, uint64_t a2)
{
  int64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    sub_1000BBE14(0, v4, 0);
    simd_float4x4.position.getter();
    float v6 = *((float *)&v5 + 1);
    float v7 = *((float *)&v5 + 2);
    unint64_t v8 = _swiftEmptyArrayStorage[2];
    float32x2_t v9 = (float *)(a1 + 40);
    int64_t v10 = v4;
    unint64_t v11 = v8;
    do
    {
      float v12 = *(v9 - 2);
      float v13 = *(v9 - 1);
      float v14 = *v9;
      unint64_t v15 = _swiftEmptyArrayStorage[3];
      unint64_t v16 = v11 + 1;
      if (v11 >= v15 >> 1)
      {
        long long v58 = v5;
        sub_1000BBE14((char *)(v15 > 1), v11 + 1, 1);
        long long v5 = v58;
      }
      _swiftEmptyArrayStorage[2] = v16;
      *((float *)&_swiftEmptyArrayStorage[4] + v11) = sqrtf((float)((float)(v14 - v7) * (float)(v14 - v7))+ (float)((float)((float)(v12 - *(float *)&v5)* (float)(v12 - *(float *)&v5))+ (float)((float)(v13 - v6) * (float)(v13 - v6))));
      v9 += 8;
      ++v11;
      --v10;
    }
    while (v10);
    unint64_t v17 = v4 + v8;
    if (v4 + v8 >= 2)
    {
      unint64_t v18 = v17 & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v23 = (float *)&_swiftEmptyArrayStorage[4] + 1;
      float v19 = 0.0;
      unint64_t v24 = v17 & 0xFFFFFFFFFFFFFFFELL;
      do
      {
        float v19 = (float)(v19 + *(v23 - 1)) + *v23;
        v23 += 2;
        v24 -= 2;
      }
      while (v24);
      if (v17 == v18)
      {
LABEL_14:
        swift_bridgeObjectRelease();
        float v20 = v19 / (float)v4;
        int64_t v21 = *(void *)(a2 + 16);
        if (v21) {
          goto LABEL_15;
        }
LABEL_9:
        float v22 = INFINITY;
        goto LABEL_26;
      }
    }
    else
    {
      unint64_t v18 = 0;
      float v19 = 0.0;
    }
    do
    {
      float v25 = *((float *)&_swiftEmptyArrayStorage[4] + v18++);
      float v19 = v19 + v25;
    }
    while (v16 != v18);
    goto LABEL_14;
  }
  float v20 = INFINITY;
  int64_t v21 = *(void *)(a2 + 16);
  if (!v21) {
    goto LABEL_9;
  }
LABEL_15:
  sub_1000BBE14(0, v21, 0);
  simd_float4x4.position.getter();
  float v27 = *((float *)&v26 + 1);
  float v28 = *((float *)&v26 + 2);
  unint64_t v29 = _swiftEmptyArrayStorage[2];
  id v30 = (float *)(a2 + 40);
  int64_t v31 = v21;
  unint64_t v32 = v29;
  do
  {
    float v33 = *(v30 - 2);
    float v34 = *(v30 - 1);
    float v35 = *v30;
    unint64_t v36 = _swiftEmptyArrayStorage[3];
    unint64_t v37 = v32 + 1;
    if (v32 >= v36 >> 1)
    {
      long long v59 = v26;
      sub_1000BBE14((char *)(v36 > 1), v32 + 1, 1);
      long long v26 = v59;
    }
    _swiftEmptyArrayStorage[2] = v37;
    *((float *)&_swiftEmptyArrayStorage[4] + v32) = sqrtf((float)((float)(v35 - v28) * (float)(v35 - v28))+ (float)((float)((float)(v33 - *(float *)&v26)* (float)(v33 - *(float *)&v26))+ (float)((float)(v34 - v27) * (float)(v34 - v27))));
    v30 += 8;
    ++v32;
    --v31;
  }
  while (v31);
  unint64_t v38 = v21 + v29;
  if (v21 + v29 >= 2)
  {
    unint64_t v39 = v38 & 0xFFFFFFFFFFFFFFFELL;
    id v41 = (float *)&_swiftEmptyArrayStorage[4] + 1;
    float v40 = 0.0;
    unint64_t v42 = v38 & 0xFFFFFFFFFFFFFFFELL;
    do
    {
      float v40 = (float)(v40 + *(v41 - 1)) + *v41;
      v41 += 2;
      v42 -= 2;
    }
    while (v42);
    if (v38 == v39) {
      goto LABEL_25;
    }
  }
  else
  {
    unint64_t v39 = 0;
    float v40 = 0.0;
  }
  do
  {
    float v43 = *((float *)&_swiftEmptyArrayStorage[4] + v39++);
    float v40 = v40 + v43;
  }
  while (v37 != v39);
LABEL_25:
  swift_bridgeObjectRelease();
  float v22 = v40 / (float)v21;
LABEL_26:
  if (vabds_f32(v20, v22) >= 0.04) {
    goto LABEL_41;
  }
  swift_retain();
  uint64_t v44 = swift_bridgeObjectRetain();
  uint64_t v45 = sub_10013C1B0(v44);
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v46 = *(void *)(v45 + 16);
  swift_bridgeObjectRelease();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v47 = swift_bridgeObjectRetain();
  uint64_t v48 = sub_10013C1B0(v47);
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v49 = *(void *)(v48 + 16);
  swift_bridgeObjectRelease();
  if (v49 <= v46) {
    unint64_t v50 = v46;
  }
  else {
    unint64_t v50 = v49;
  }
  if (v49 >= v46) {
    unint64_t v51 = v46;
  }
  else {
    unint64_t v51 = v49;
  }
  if ((uint64_t)(v50 - v51) < 8)
  {
    swift_bridgeObjectRelease();
LABEL_41:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20 >= v22) {
      return a2;
    }
    else {
      return a1;
    }
  }
  uint64_t v52 = qword_1004C2AC0;
  swift_bridgeObjectRetain();
  if (v52 != -1) {
    swift_once();
  }
  v53._object = (void *)0x80000001004276D0;
  v53._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
  Log.default(_:isPrivate:)(v53, 0);
  sub_100012894(&qword_1004CC9D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003F8B80;
  *(void *)(inited + 32) = v46;
  *(void *)(inited + 40) = a1;
  *(void *)(inited + 48) = v49;
  *(void *)(inited + 56) = a2;
  if (v49 >= v46) {
    uint64_t v55 = a1;
  }
  else {
    uint64_t v55 = a2;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = swift_initStackObject();
  *(_OWORD *)(v56 + 16) = xmmword_1003F8B80;
  *(void *)(v56 + 32) = v46;
  *(void *)(v56 + 40) = a1;
  *(void *)(v56 + 48) = v49;
  *(void *)(v56 + 56) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v55;
}

uint64_t sub_100139C3C()
{
  swift_retain();
  unint64_t v0 = swift_bridgeObjectRetain();
  unint64_t v1 = (unint64_t)sub_10013C628(v0);
  swift_bridgeObjectRelease();
  swift_release();
  if (v1 >> 62)
  {
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (!v2) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      goto LABEL_13;
    }
  }
  sub_1000BBF24(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0) {
    goto LABEL_33;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      char v4 = *(unsigned char *)(specialized _ArrayBuffer._getElementSlowPath(_:)() + 48);
      swift_unknownObjectRelease();
    }
    else
    {
      char v4 = *(unsigned char *)(*(void *)(v1 + 8 * i + 32) + 48);
    }
    unint64_t v6 = _swiftEmptyArrayStorage[2];
    unint64_t v5 = _swiftEmptyArrayStorage[3];
    if (v6 >= v5 >> 1) {
      sub_1000BBF24((char *)(v5 > 1), v6 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v6 + 1;
    *((unsigned char *)&_swiftEmptyArrayStorage[4] + v6) = v4;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  float v7 = (void *)sub_1000E384C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v8 = _swiftEmptyArrayStorage[2];
  if (!v8)
  {
LABEL_27:
    swift_bridgeObjectRelease();
    unsigned int v26 = sub_100139F10((uint64_t)v7);
    swift_bridgeObjectRelease();
    if (v26 == 7) {
      return 7;
    }
    else {
      return v26;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  while (1)
  {
    unsigned __int8 v10 = *((unsigned char *)&_swiftEmptyArrayStorage[4] + v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v13 = sub_1000E21E4(v10);
    uint64_t v14 = v7[2];
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15)) {
      break;
    }
    char v17 = v12;
    if (v7[3] >= v16)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1000D862C();
      }
    }
    else
    {
      sub_1000D1D3C(v16, isUniquelyReferenced_nonNull_native);
      unint64_t v18 = sub_1000E21E4(v10);
      if ((v17 & 1) != (v19 & 1)) {
        goto LABEL_34;
      }
      unint64_t v13 = v18;
    }
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      v7[(v13 >> 6) + 8] |= 1 << v13;
      *(unsigned char *)(v7[6] + v13) = v10;
      *(void *)(v7[7] + 8 * v13) = 0;
      uint64_t v20 = v7[2];
      BOOL v21 = __OFADD__(v20, 1);
      uint64_t v22 = v20 + 1;
      if (v21) {
        goto LABEL_32;
      }
      v7[2] = v22;
    }
    uint64_t v23 = v7[7];
    uint64_t v24 = *(void *)(v23 + 8 * v13);
    BOOL v21 = __OFADD__(v24, 1);
    uint64_t v25 = v24 + 1;
    if (v21) {
      goto LABEL_31;
    }
    ++v9;
    *(void *)(v23 + 8 * v13) = v25;
    if (v8 == v9)
    {
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100139F10(uint64_t a1)
{
  uint64_t v1 = a1 + 64;
  char v2 = *(unsigned char *)(a1 + 32);
  uint64_t v3 = 1 << v2;
  uint64_t v4 = -1;
  if (1 << v2 < 64) {
    uint64_t v4 = ~(-1 << (1 << v2));
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  if (!v5)
  {
    LODWORD(v6) = v2 & 0x3F;
    if (v6 > 6)
    {
      int64_t v9 = (unint64_t)(v3 + 63) >> 6;
      unint64_t v22 = *(void *)(a1 + 72);
      if (v22)
      {
        uint64_t v6 = 1;
LABEL_32:
        unint64_t v8 = (v22 - 1) & v22;
        unint64_t v7 = __clz(__rbit64(v22)) + (v6 << 6);
        goto LABEL_5;
      }
      if (v6 >= 8)
      {
        unint64_t v22 = *(void *)(a1 + 80);
        if (v22)
        {
          uint64_t v6 = 2;
          goto LABEL_32;
        }
        unint64_t v22 = *(void *)(a1 + 88);
        if (v22)
        {
          uint64_t v6 = 3;
          goto LABEL_32;
        }
LABEL_39:
        if (v6 >= 9)
        {
          unint64_t v22 = *(void *)(a1 + 96);
          if (v22)
          {
            uint64_t v6 = 4;
          }
          else
          {
            unint64_t v22 = *(void *)(a1 + 104);
            if (!v22) {
              goto LABEL_46;
            }
            uint64_t v6 = 5;
          }
          goto LABEL_32;
        }
      }
    }
    return 7;
  }
  uint64_t v6 = 0;
  unint64_t v7 = __clz(__rbit64(v5));
  unint64_t v8 = (v5 - 1) & v5;
  int64_t v9 = (unint64_t)(v3 + 63) >> 6;
LABEL_5:
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  unsigned __int8 v12 = *(unsigned char *)(v10 + v7);
  uint64_t v13 = *(void *)(v11 + 8 * v7);
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v6 << 6);
      goto LABEL_7;
    }
    int64_t v18 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v18 >= v9) {
      return v12;
    }
    unint64_t v19 = *(void *)(v1 + 8 * v18);
    ++v6;
    if (!v19)
    {
      uint64_t v6 = v18 + 1;
      if (v18 + 1 >= v9) {
        return v12;
      }
      unint64_t v19 = *(void *)(v1 + 8 * v6);
      if (!v19)
      {
        uint64_t v6 = v18 + 2;
        if (v18 + 2 >= v9) {
          return v12;
        }
        unint64_t v19 = *(void *)(v1 + 8 * v6);
        if (!v19)
        {
          uint64_t v6 = v18 + 3;
          if (v18 + 3 >= v9) {
            return v12;
          }
          unint64_t v19 = *(void *)(v1 + 8 * v6);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v8 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v6 << 6);
LABEL_7:
    unsigned __int8 v16 = *(unsigned char *)(v10 + v15);
    uint64_t v17 = *(void *)(v11 + 8 * v15);
    if (v13 < v17) {
      unsigned __int8 v12 = v16;
    }
    if (v13 <= v17) {
      uint64_t v13 = v17;
    }
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v9) {
    return v12;
  }
  unint64_t v19 = *(void *)(v1 + 8 * v20);
  if (v19)
  {
    uint64_t v6 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    uint64_t v6 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v6 >= v9) {
      return v12;
    }
    unint64_t v19 = *(void *)(v1 + 8 * v6);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_46:
  uint64_t v23 = 0;
  uint64_t v24 = 6;
  if (v9 > 6) {
    uint64_t v24 = v9;
  }
  while (v24 - 6 != v23)
  {
    unint64_t v22 = *(void *)(a1 + 112 + 8 * v23++);
    if (v22)
    {
      uint64_t v6 = v23 + 5;
      goto LABEL_32;
    }
  }
  return 7;
}

void sub_10013A130(uint64_t a1)
{
  SCNVector3.init(_:)();
  int v2 = v1;
  int v4 = v3;
  int v6 = v5;
  SCNVector3.init(_:)();
  v40[0] = v2;
  v40[1] = v4;
  v40[2] = v6;
  v40[3] = v7;
  v40[4] = v8;
  v40[5] = v9;
  id v10 = [objc_allocWithZone((Class)NSData) initWithBytes:v40 length:24];
  uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v13 = v12;

  unint64_t v14 = SCNGeometrySourceSemanticVertex;
  sub_100040374(v11, v13);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v16 = [self geometrySourceWithData:isa semantic:v14 vectorCount:2 floatComponents:1 componentsPerVector:3 bytesPerComponent:4 dataOffset:0 dataStride:12];

  sub_10004007C(v11, v13);
  id v17 = [objc_allocWithZone((Class)NSData) initWithBytes:&unk_100485910 length:8];
  uint64_t v18 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v20 = v19;

  sub_100040374(v18, v20);
  Class v21 = Data._bridgeToObjectiveC()().super.isa;
  sub_10004007C(v18, v20);
  id v22 = [self geometryElementWithData:v21 primitiveType:2 primitiveCount:1 bytesPerIndex:4];

  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1003F8B20;
  *(void *)(v23 + 32) = v16;
  specialized Array._endMutation()();
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1003F8B20;
  *(void *)(v24 + 32) = v22;
  specialized Array._endMutation()();
  sub_10001C99C(0, &qword_1004CC9B0);
  id v38 = v16;
  id v37 = v22;
  Class v25 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_10001C99C(0, &qword_1004CC9B8);
  Class v26 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v27 = [self geometryWithSources:v25 elements:v26];

  id v28 = [v27 firstMaterial];
  if (v28)
  {
    unint64_t v29 = v28;
    [v28 setLightingModelName:SCNLightingModelConstant];
  }
  id v30 = [v27 firstMaterial];
  if (v30)
  {
    int64_t v31 = v30;
    id v32 = [v30 diffuse];

    [v32 setContents:a1];
  }
  id v33 = [self nodeWithGeometry:v27];
  float v34 = *(void **)(v39 + 256);
  if (v34)
  {
    id v35 = v34;
    [v35 addChildNode:v33];
    sub_10004007C(v11, v13);
    sub_10004007C(v18, v20);
  }
  else
  {
    sub_10004007C(v11, v13);
    sub_10004007C(v18, v20);
  }
}

uint64_t sub_10013A548@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 192);
  return swift_retain();
}

uint64_t sub_10013A578@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 192);
  return swift_retain();
}

void sub_10013A588(uint64_t *a1)
{
  sub_10013409C(a1, v1);
}

uint64_t sub_10013A590(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_142;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v86 = *a1;
      uint64_t v87 = *a1 + 32;
      uint64_t v88 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v90 = v87;
        uint64_t v91 = v88;
        do
        {
          float v92 = *(float *)(v90 + 24);
          if (v92 >= *(float *)(v90 - 8)) {
            break;
          }
          if (!v86) {
            goto LABEL_146;
          }
          long long v93 = *(_OWORD *)v90;
          uint64_t v94 = *(void *)(v90 + 16);
          long long v95 = *(_OWORD *)(v90 - 16);
          *(_OWORD *)uint64_t v90 = *(_OWORD *)(v90 - 32);
          *(_OWORD *)(v90 + 16) = v95;
          *(void *)(v90 - 16) = v94;
          *(float *)(v90 - 8) = v92;
          *(_OWORD *)(v90 - 32) = v93;
          v90 -= 32;
        }
        while (!__CFADD__(v91++, 1));
        --v88;
        v87 += 32;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_141;
    }
    uint64_t v6 = result;
    int8x16_t v104 = a1;
    if (v3 > 1)
    {
      uint64_t v7 = v5 >> 1;
      sub_100012894(&qword_1004C96E8);
      uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
      *(void *)(result + 16) = v7;
      uint64_t v107 = (void *)result;
      int8x16_t v111 = (float *)(result + 32);
LABEL_13:
      Swift::Int v9 = 0;
      uint64_t v10 = *a1;
      uint64_t v105 = *a1 + 88;
      uint64_t v106 = *a1 + 24;
      uint64_t v11 = (char *)_swiftEmptyArrayStorage;
      uint64_t v108 = v6;
      Swift::Int v109 = v3;
      uint64_t v110 = v10;
      while (1)
      {
        Swift::Int v13 = v9++;
        if (v9 < v3)
        {
          float v14 = *(float *)(v106 + 32 * v9);
          uint64_t v15 = 32 * v13;
          float v16 = *(float *)(v106 + 32 * v13);
          Swift::Int v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            id v17 = (float *)(v105 + 32 * v13);
            while (v14 < v16 != *v17 >= *(v17 - 8))
            {
              ++v9;
              v17 += 8;
              if (v3 == v9)
              {
                Swift::Int v9 = v3;
                break;
              }
            }
          }
          if (v14 < v16)
          {
            if (v9 < v13) {
              goto LABEL_143;
            }
            if (v13 < v9)
            {
              uint64_t v18 = 32 * v9 - 32;
              Swift::Int v19 = v9;
              Swift::Int v20 = v13;
              do
              {
                if (v20 != --v19)
                {
                  if (!v10) {
                    goto LABEL_149;
                  }
                  uint64_t v23 = (_OWORD *)(v10 + v15);
                  uint64_t v24 = (_OWORD *)(v10 + v18);
                  long long v25 = *(_OWORD *)(v10 + v15);
                  uint64_t v26 = *(void *)(v10 + v15 + 16);
                  int v27 = *(_DWORD *)(v10 + v15 + 24);
                  if (v15 != v18 || v23 >= v24 + 2)
                  {
                    long long v21 = v24[1];
                    *uint64_t v23 = *v24;
                    v23[1] = v21;
                  }
                  uint64_t v22 = v10 + v18;
                  *(_OWORD *)uint64_t v22 = v25;
                  *(void *)(v22 + 16) = v26;
                  *(_DWORD *)(v22 + 24) = v27;
                }
                ++v20;
                v18 -= 32;
                v15 += 32;
              }
              while (v20 < v19);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13)) {
            goto LABEL_140;
          }
          if (v9 - v13 < v6)
          {
            Swift::Int v28 = v13 + v6;
            if (__OFADD__(v13, v6)) {
              goto LABEL_144;
            }
            if (v28 >= v3) {
              Swift::Int v28 = v3;
            }
            if (v28 < v13)
            {
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
              return result;
            }
            if (v9 != v28)
            {
              unint64_t v29 = (float *)(v10 + 32 * v9);
              do
              {
                id v30 = v29;
                Swift::Int v31 = v13;
                do
                {
                  float v32 = v30[6];
                  if (v32 >= *(v30 - 2)) {
                    break;
                  }
                  if (!v10) {
                    goto LABEL_147;
                  }
                  long long v33 = *(_OWORD *)v30;
                  uint64_t v34 = *((void *)v30 + 2);
                  long long v35 = *((_OWORD *)v30 - 1);
                  *(_OWORD *)id v30 = *((_OWORD *)v30 - 2);
                  *((_OWORD *)v30 + 1) = v35;
                  *((void *)v30 - 2) = v34;
                  *(v30 - 2) = v32;
                  *((_OWORD *)v30 - 2) = v33;
                  v30 -= 8;
                  ++v31;
                }
                while (v9 != v31);
                ++v9;
                v29 += 8;
              }
              while (v9 != v28);
              Swift::Int v9 = v28;
            }
          }
        }
        if (v9 < v13) {
          goto LABEL_135;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1000BE0E4(0, *((void *)v11 + 2) + 1, 1, v11);
          uint64_t v11 = (char *)result;
        }
        unint64_t v37 = *((void *)v11 + 2);
        unint64_t v36 = *((void *)v11 + 3);
        unint64_t v12 = v37 + 1;
        uint64_t v10 = v110;
        if (v37 >= v36 >> 1)
        {
          uint64_t result = (uint64_t)sub_1000BE0E4((char *)(v36 > 1), v37 + 1, 1, v11);
          uint64_t v10 = v110;
          uint64_t v11 = (char *)result;
        }
        *((void *)v11 + 2) = v12;
        id v38 = v11 + 32;
        uint64_t v39 = &v11[16 * v37 + 32];
        *(void *)uint64_t v39 = v13;
        *((void *)v39 + 1) = v9;
        if (v37)
        {
          while (1)
          {
            unint64_t v40 = v12 - 1;
            if (v12 >= 4)
            {
              uint64_t v45 = &v38[2 * v12];
              uint64_t v46 = *(v45 - 8);
              uint64_t v47 = *(v45 - 7);
              BOOL v51 = __OFSUB__(v47, v46);
              uint64_t v48 = v47 - v46;
              if (v51) {
                goto LABEL_124;
              }
              uint64_t v50 = *(v45 - 6);
              uint64_t v49 = *(v45 - 5);
              BOOL v51 = __OFSUB__(v49, v50);
              uint64_t v43 = v49 - v50;
              char v44 = v51;
              if (v51) {
                goto LABEL_125;
              }
              unint64_t v52 = v12 - 2;
              Swift::String v53 = &v38[2 * v12 - 4];
              uint64_t v55 = *v53;
              uint64_t v54 = v53[1];
              BOOL v51 = __OFSUB__(v54, v55);
              uint64_t v56 = v54 - v55;
              if (v51) {
                goto LABEL_126;
              }
              BOOL v51 = __OFADD__(v43, v56);
              uint64_t v57 = v43 + v56;
              if (v51) {
                goto LABEL_128;
              }
              if (v57 >= v48)
              {
                uint64_t v75 = &v38[2 * v40];
                uint64_t v77 = *v75;
                uint64_t v76 = v75[1];
                BOOL v51 = __OFSUB__(v76, v77);
                uint64_t v78 = v76 - v77;
                if (v51) {
                  goto LABEL_134;
                }
                BOOL v68 = v43 < v78;
                goto LABEL_87;
              }
            }
            else
            {
              if (v12 != 3)
              {
                uint64_t v69 = *((void *)v11 + 4);
                uint64_t v70 = *((void *)v11 + 5);
                BOOL v51 = __OFSUB__(v70, v69);
                uint64_t v62 = v70 - v69;
                char v63 = v51;
                goto LABEL_81;
              }
              uint64_t v42 = *((void *)v11 + 4);
              uint64_t v41 = *((void *)v11 + 5);
              BOOL v51 = __OFSUB__(v41, v42);
              uint64_t v43 = v41 - v42;
              char v44 = v51;
            }
            if (v44) {
              goto LABEL_127;
            }
            unint64_t v52 = v12 - 2;
            long long v58 = &v38[2 * v12 - 4];
            uint64_t v60 = *v58;
            uint64_t v59 = v58[1];
            BOOL v61 = __OFSUB__(v59, v60);
            uint64_t v62 = v59 - v60;
            char v63 = v61;
            if (v61) {
              goto LABEL_129;
            }
            float32x2_t v64 = &v38[2 * v40];
            uint64_t v66 = *v64;
            uint64_t v65 = v64[1];
            BOOL v51 = __OFSUB__(v65, v66);
            uint64_t v67 = v65 - v66;
            if (v51) {
              goto LABEL_131;
            }
            if (__OFADD__(v62, v67)) {
              goto LABEL_133;
            }
            if (v62 + v67 >= v43)
            {
              BOOL v68 = v43 < v67;
LABEL_87:
              if (v68) {
                unint64_t v40 = v52;
              }
              goto LABEL_89;
            }
LABEL_81:
            if (v63) {
              goto LABEL_130;
            }
            uint64_t v71 = &v38[2 * v40];
            uint64_t v73 = *v71;
            uint64_t v72 = v71[1];
            BOOL v51 = __OFSUB__(v72, v73);
            uint64_t v74 = v72 - v73;
            if (v51) {
              goto LABEL_132;
            }
            if (v74 < v62) {
              goto LABEL_15;
            }
LABEL_89:
            unint64_t v79 = v40 - 1;
            if (v40 - 1 >= v12)
            {
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
              goto LABEL_145;
            }
            if (!v10) {
              goto LABEL_148;
            }
            uint64_t v80 = v11;
            uint64_t v81 = &v38[2 * v79];
            uint64_t v82 = *v81;
            BOOL v83 = &v38[2 * v40];
            uint64_t v84 = v83[1];
            uint64_t result = sub_10013AC58((float *)(v10 + 32 * *v81), (float *)(v10 + 32 * *v83), v10 + 32 * v84, v111);
            if (v1) {
              goto LABEL_97;
            }
            if (v84 < v82) {
              goto LABEL_121;
            }
            if (v40 > *((void *)v80 + 2)) {
              goto LABEL_122;
            }
            *uint64_t v81 = v82;
            v38[2 * v79 + 1] = v84;
            unint64_t v85 = *((void *)v80 + 2);
            if (v40 >= v85) {
              goto LABEL_123;
            }
            uint64_t v11 = v80;
            unint64_t v12 = v85 - 1;
            uint64_t result = (uint64_t)memmove(&v38[2 * v40], v83 + 2, 16 * (v85 - 1 - v40));
            *((void *)v80 + 2) = v85 - 1;
            uint64_t v10 = v110;
            if (v85 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v12 = 1;
LABEL_15:
        uint64_t v6 = v108;
        Swift::Int v3 = v109;
        if (v9 >= v109)
        {
          int v8 = v107;
          goto LABEL_107;
        }
      }
    }
    int v8 = _swiftEmptyArrayStorage;
    int8x16_t v111 = (float *)&_swiftEmptyArrayStorage[4];
    if (v3 == 1)
    {
      uint64_t v107 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    unint64_t v12 = _swiftEmptyArrayStorage[2];
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_107:
    uint64_t result = (uint64_t)v11;
    uint64_t v107 = v8;
    if (v12 >= 2)
    {
      uint64_t v97 = *v104;
      do
      {
        unint64_t v98 = v12 - 2;
        if (v12 < 2) {
          goto LABEL_136;
        }
        if (!v97) {
          goto LABEL_150;
        }
        uint64_t v99 = result;
        uint64_t v100 = *(void *)(result + 32 + 16 * v98);
        uint64_t v101 = *(void *)(result + 32 + 16 * (v12 - 1) + 8);
        uint64_t result = sub_10013AC58((float *)(v97 + 32 * v100), (float *)(v97 + 32 * *(void *)(result + 32 + 16 * (v12 - 1))), v97 + 32 * v101, v111);
        if (v1) {
          break;
        }
        if (v101 < v100) {
          goto LABEL_137;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1000BE1E0(v99);
          uint64_t v99 = result;
        }
        if (v98 >= *(void *)(v99 + 16)) {
          goto LABEL_138;
        }
        float32x4_t v102 = (void *)(v99 + 32 + 16 * v98);
        *float32x4_t v102 = v100;
        v102[1] = v101;
        unint64_t v103 = *(void *)(v99 + 16);
        if (v12 > v103) {
          goto LABEL_139;
        }
        memmove((void *)(v99 + 32 + 16 * (v12 - 1)), (const void *)(v99 + 32 + 16 * v12), 16 * (v103 - v12));
        uint64_t result = v99;
        *(void *)(v99 + 16) = v103 - 1;
        unint64_t v12 = v103 - 1;
      }
      while (v103 > 2);
    }
LABEL_97:
    swift_bridgeObjectRelease();
    v107[2] = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10013AC58(float *__dst, float *__src, unint64_t a3, float *a4)
{
  int v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = (char *)__src - (char *)__dst + 31;
  if ((char *)__src - (char *)__dst >= 0) {
    int64_t v9 = (char *)__src - (char *)__dst;
  }
  uint64_t v10 = v9 >> 5;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 31;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 5;
  if (v10 >= v13)
  {
    uint64_t v20 = 8 * v13;
    if (a4 != __src || &__src[v20] <= a4) {
      memmove(a4, __src, 32 * v13);
    }
    uint64_t v15 = &v4[v20];
    if (v7 >= v6 || v11 < 32) {
      goto LABEL_43;
    }
    long long v21 = (float *)(a3 - 32);
    while (1)
    {
      uint64_t v22 = v21 + 8;
      if (*(v15 - 2) >= *(v6 - 2))
      {
        uint64_t v23 = v15 - 8;
        if (v22 != v15)
        {
          v15 -= 8;
          goto LABEL_40;
        }
        BOOL v24 = v21 >= v15;
        v15 -= 8;
        if (v24) {
          goto LABEL_40;
        }
      }
      else
      {
        uint64_t v23 = v6 - 8;
        if (v22 != v6)
        {
          v6 -= 8;
LABEL_40:
          long long v25 = *((_OWORD *)v23 + 1);
          *(_OWORD *)long long v21 = *(_OWORD *)v23;
          *((_OWORD *)v21 + 1) = v25;
          goto LABEL_41;
        }
        BOOL v24 = v21 >= v6;
        v6 -= 8;
        if (v24) {
          goto LABEL_40;
        }
      }
LABEL_41:
      if (v6 > v7)
      {
        v21 -= 8;
        if (v15 > v4) {
          continue;
        }
      }
      goto LABEL_43;
    }
  }
  size_t v14 = 8 * v10;
  if (a4 != __dst || &__dst[v14] <= a4) {
    memmove(a4, __dst, v14 * 4);
  }
  uint64_t v15 = &v4[v14];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    while (1)
    {
      if (v6[6] >= v4[6])
      {
        uint64_t v18 = v4 + 8;
        id v17 = v4;
        float v16 = v6;
        if (v7 == v4)
        {
          v4 += 8;
          if (v7 < v18) {
            goto LABEL_20;
          }
        }
        else
        {
          v4 += 8;
        }
      }
      else
      {
        float v16 = v6 + 8;
        id v17 = v6;
        if (v7 == v6 && v7 < v16) {
          goto LABEL_20;
        }
      }
      long long v19 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v17;
      *((_OWORD *)v7 + 1) = v19;
LABEL_20:
      v7 += 8;
      if (v4 < v15)
      {
        uint64_t v6 = v16;
        if ((unint64_t)v16 < a3) {
          continue;
        }
      }
      break;
    }
  }
  uint64_t v6 = v7;
LABEL_43:
  size_t v26 = ((char *)v15 - (char *)v4 + ((char *)v15 - (char *)v4 < 0 ? 0x1FuLL : 0)) & 0xFFFFFFFFFFFFFFE0;
  if (v6 != v4 || v6 >= (float *)((char *)v4 + v26)) {
    memmove(v6, v4, v26);
  }
  return 1;
}

uint64_t sub_10013AE78(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  Swift::Int v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  uint64_t v48 = _swiftEmptyArrayStorage;
  sub_1000BBEF4(0, v2, 0);
  uint64_t v6 = 0;
  uint64_t result = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v40 = a1 + 32;
  unint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = a2 + 32;
  int64_t v39 = v2;
  do
  {
    uint64_t v41 = (void *)result;
    uint64_t v42 = v6;
    uint64_t v10 = (long long *)(v40 + 32 * v6);
    long long v43 = *v10;
    uint64_t v11 = *((void *)v10 + 2);
    uint64_t v12 = *(uint64_t (**)(uint64_t))(*(void *)v11 + 160);
    uint64_t v13 = swift_retain();
    size_t v14 = (void *)v12(v13);
    [v14 transform];

    uint64_t v15 = simd_float4x4.position.getter();
    float v16 = (void *)v12(v15);
    [v16 transform];

    simd_float4x4.up.getter();
    swift_retain();
    uint64_t result = swift_bridgeObjectRetain();
    if (!v8) {
      goto LABEL_25;
    }
    unint64_t v17 = 0;
    long long v18 = v43;
    while (2)
    {
      if (v17 <= v8) {
        unint64_t v19 = v8;
      }
      else {
        unint64_t v19 = v17;
      }
      while (2)
      {
        if (v17 == v19)
        {
          __break(1u);
          return result;
        }
        uint64_t v20 = 0;
        long long v21 = (long long *)(v9 + 32 * v17);
        long long v22 = *v21;
        uint64_t v23 = *((void *)v21 + 2);
        ++v17;
        BOOL v24 = 1;
        long long v44 = v22;
        while (!v24)
        {
          if (v20 == 2) {
            goto LABEL_19;
          }
          BOOL v24 = 0;
LABEL_11:
          ++v20;
        }
        long long v45 = v22;
        float v25 = *(float *)((unint64_t)&v45 & 0xFFFFFFFFFFFFFFF3 | (4 * (v20 & 3)));
        long long v46 = v18;
        float v26 = *(float *)((unint64_t)&v46 & 0xFFFFFFFFFFFFFFF3 | (4 * (v20 & 3)));
        BOOL v24 = v25 == v26;
        if (v20 != 2) {
          goto LABEL_11;
        }
        if (v25 != v26)
        {
LABEL_19:
          swift_retain();
          break;
        }
        type metadata accessor for WorldPlane();
        swift_retain_n();
        swift_retain();
        char v27 = static WorldPlane.== infix(_:_:)();
        swift_release();
        swift_release();
        if (v27)
        {
          uint64_t result = swift_release();
          long long v18 = v43;
          if (v17 != v8) {
            continue;
          }
          goto LABEL_25;
        }
        break;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v47 = v3;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1000BBEC4(0, v3[2] + 1, 1);
        Swift::Int v3 = v47;
      }
      long long v18 = v43;
      long long v28 = v44;
      unint64_t v30 = v3[2];
      unint64_t v29 = v3[3];
      if (v30 >= v29 >> 1)
      {
        uint64_t result = (uint64_t)sub_1000BBEC4((void *)(v29 > 1), v30 + 1, 1);
        long long v18 = v43;
        long long v28 = v44;
        Swift::Int v3 = v47;
      }
      v3[2] = v30 + 1;
      Swift::Int v31 = &v3[4 * v30];
      *((_OWORD *)v31 + 2) = v28;
      v31[6] = v23;
      if (v17 != v8) {
        continue;
      }
      break;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v32 = v3[2];
    if (v32)
    {
      type metadata accessor for PlaneUtil();
      long long v33 = v3 + 4;
      float v34 = 0.0;
      do
      {
        v33 += 4;
        static PlaneUtil.distance(point:plane:)();
        float v34 = v34 + v35;
        --v32;
      }
      while (v32);
    }
    else
    {
      float v34 = 0.0;
    }
    swift_release();
    uint64_t result = (uint64_t)v41;
    uint64_t v48 = v41;
    unint64_t v37 = v41[2];
    unint64_t v36 = v41[3];
    if (v37 >= v36 >> 1)
    {
      sub_1000BBEF4((void *)(v36 > 1), v37 + 1, 1);
      uint64_t result = (uint64_t)v48;
    }
    *(void *)(result + 16) = v37 + 1;
    uint64_t v38 = result + 32 * v37;
    *(_OWORD *)(v38 + 32) = v43;
    uint64_t v6 = v42 + 1;
    *(void *)(v38 + 48) = v11;
    *(float *)(v38 + 56) = v34;
    Swift::Int v3 = _swiftEmptyArrayStorage;
  }
  while (v42 + 1 != v39);
  return result;
}

uint64_t sub_10013B22C(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  uint64_t v59 = _swiftEmptyArrayStorage;
  sub_1000BBEF4(0, v2, 0);
  uint64_t v5 = 0;
  uint64_t result = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v7 = a1 + 32;
  uint64_t v8 = a2 + 32;
  uint64_t v9 = &selRef_replaySensorDidFinishReplayingData;
  int64_t v48 = v2;
  uint64_t v49 = a2;
  uint64_t v47 = a1 + 32;
  while (1)
  {
    uint64_t v10 = (long long *)(v7 + 32 * v5);
    long long v53 = *v10;
    uint64_t v11 = (unsigned char *)*((void *)v10 + 2);
    if (v11[48] != 6)
    {
      uint64_t v35 = result;
      swift_retain();
      uint64_t result = v35;
      float v36 = 0.0;
      goto LABEL_34;
    }
    uint64_t v50 = result;
    uint64_t v51 = v5;
    uint64_t v12 = *(uint64_t (**)(uint64_t))(*(void *)v11 + 160);
    uint64_t v13 = swift_retain();
    size_t v14 = (void *)v12(v13);
    [v14 v9[54]];

    uint64_t v15 = simd_float4x4.position.getter();
    float v16 = (void *)v12(v15);
    [v16 v9[54]];

    simd_float4x4.up.getter();
    float32x4_t v52 = v17;
    unint64_t v18 = *(void *)(a2 + 16);
    swift_retain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v18) {
      break;
    }
    uint64_t v20 = _swiftEmptyArrayStorage;
LABEL_29:
    a2 = v49;
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v37 = v20[2];
    if (v37)
    {
      swift_retain();
      float v36 = 0.0;
      uint64_t v38 = 6;
      do
      {
        int64_t v39 = *(uint64_t (**)(uint64_t))(*(void *)v20[v38] + 160);
        uint64_t v40 = swift_retain();
        uint64_t v41 = (void *)v39(v40);
        [v41 transform];

        simd_float4x4.up.getter();
        float32x4_t v55 = v42;
        swift_release();
        float32x4_t v43 = vmulq_f32(v52, v55);
        float v36 = v36 + (float)(1.0 - fabsf(v43.f32[2] + vaddv_f32(*(float32x2_t *)v43.f32)));
        v38 += 4;
        --v37;
      }
      while (v37);
      swift_release_n();
      uint64_t v7 = v47;
      int64_t v2 = v48;
      uint64_t result = v50;
      uint64_t v5 = v51;
      a2 = v49;
    }
    else
    {
      swift_release();
      float v36 = 0.0;
      uint64_t v7 = v47;
      int64_t v2 = v48;
      uint64_t result = v50;
      uint64_t v5 = v51;
    }
LABEL_34:
    uint64_t v59 = (void *)result;
    unint64_t v45 = *(void *)(result + 16);
    unint64_t v44 = *(void *)(result + 24);
    if (v45 >= v44 >> 1)
    {
      sub_1000BBEF4((void *)(v44 > 1), v45 + 1, 1);
      uint64_t result = (uint64_t)v59;
    }
    *(void *)(result + 16) = v45 + 1;
    uint64_t v46 = result + 32 * v45;
    *(_OWORD *)(v46 + 32) = v53;
    ++v5;
    *(void *)(v46 + 48) = v11;
    *(float *)(v46 + 56) = v36;
    uint64_t v9 = &selRef_replaySensorDidFinishReplayingData;
    if (v5 == v2) {
      return result;
    }
  }
  unint64_t v19 = 0;
  uint64_t v20 = _swiftEmptyArrayStorage;
  long long v21 = v53;
LABEL_6:
  if (v19 <= v18) {
    unint64_t v22 = v18;
  }
  else {
    unint64_t v22 = v19;
  }
  while (2)
  {
    if (v19 != v22)
    {
      uint64_t v23 = 0;
      BOOL v24 = (long long *)(v8 + 32 * v19);
      long long v25 = *v24;
      uint64_t v26 = *((void *)v24 + 2);
      ++v19;
      BOOL v27 = 1;
      long long v54 = v25;
      while (1)
      {
        while (!v27)
        {
          if (v23 == 2) {
            goto LABEL_20;
          }
          BOOL v27 = 0;
          ++v23;
        }
        long long v56 = v25;
        float v28 = *(float *)((unint64_t)&v56 & 0xFFFFFFFFFFFFFFF3 | (4 * (v23 & 3)));
        long long v57 = v21;
        float v29 = *(float *)((unint64_t)&v57 & 0xFFFFFFFFFFFFFFF3 | (4 * (v23 & 3)));
        BOOL v27 = v28 == v29;
        if (v23 == 2) {
          break;
        }
        ++v23;
      }
      if (v28 != v29)
      {
LABEL_20:
        swift_retain();
        goto LABEL_21;
      }
      type metadata accessor for WorldPlane();
      swift_retain_n();
      swift_retain();
      char v30 = static WorldPlane.== infix(_:_:)();
      swift_release();
      swift_release();
      if (v30)
      {
        uint64_t result = swift_release();
        long long v21 = v53;
        if (v19 != v18) {
          continue;
        }
        goto LABEL_29;
      }
LABEL_21:
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      long long v58 = v20;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1000BBEC4(0, v20[2] + 1, 1);
        uint64_t v20 = v58;
      }
      long long v21 = v53;
      long long v31 = v54;
      unint64_t v33 = v20[2];
      unint64_t v32 = v20[3];
      if (v33 >= v32 >> 1)
      {
        uint64_t result = (uint64_t)sub_1000BBEC4((void *)(v32 > 1), v33 + 1, 1);
        long long v31 = v54;
        long long v21 = v53;
        uint64_t v20 = v58;
      }
      v20[2] = v33 + 1;
      float v34 = &v20[4 * v33];
      *((_OWORD *)v34 + 2) = v31;
      v34[6] = v26;
      if (v19 != v18) {
        goto LABEL_6;
      }
      goto LABEL_29;
    }
    break;
  }
  __break(1u);
  return result;
}

char *sub_10013B69C(char *result, char *a2, uint64_t a3)
{
  uint64_t v3 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (!v3) {
    return (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v6 = result;
  uint64_t result = (char *)sub_1000BBF84(0, v3 & ~(v3 >> 63), 0);
  if ((uint64_t)a2 >= (uint64_t)v6 && (v3 & 0x8000000000000000) == 0)
  {
    while (a2 != v6)
    {
      uint64_t result = (char *)swift_beginAccess();
      uint64_t v7 = *(void *)(*(void *)(a3 + 216) + 16);
      BOOL v8 = __OFSUB__(v7, v6);
      uint64_t v9 = v7 - (void)v6;
      if (v8) {
        goto LABEL_13;
      }
      if (__OFSUB__(v9, 1)) {
        goto LABEL_14;
      }
      sub_100012894(&qword_1004C69E0);
      RingBuffer.subscript.getter();
      uint64_t result = (char *)swift_endAccess();
      long long v10 = v13;
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1)
      {
        uint64_t result = (char *)sub_1000BBF84((void *)(v11 > 1), v12 + 1, 1);
        long long v10 = v13;
      }
      _swiftEmptyArrayStorage[2] = v12 + 1;
      *(_OWORD *)&_swiftEmptyArrayStorage[2 * v12 + 4] = v10;
      if (a2 == ++v6) {
        return (char *)_swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
  return result;
}

void *sub_10013B818(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v5 = 0;
    uint64_t v6 = *(void *)(a2 + 16);
    while (1)
    {
      uint64_t v7 = (a1 & 0xC000000000000001) != 0
         ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 32 + 8 * v5);
      BOOL v8 = v7;
      if (__OFADD__(v5++, 1)) {
        break;
      }
      uint64_t v10 = (*(uint64_t (**)(void))((swift_isaMask & *v7) + 0xD0))();
      if (v6)
      {
        if (*(void *)(a2 + 32) == v10) {
          goto LABEL_23;
        }
        if (v6 != 1)
        {
          uint64_t v11 = 5;
          while (1)
          {
            uint64_t v12 = v11 - 3;
            if (__OFADD__(v11 - 4, 1)) {
              break;
            }
            if (*(void *)(a2 + 8 * v11) == v10) {
              goto LABEL_23;
            }
            ++v11;
            if (v12 == v6) {
              goto LABEL_4;
            }
          }
          __break(1u);
          break;
        }
      }
LABEL_4:

      if (v5 == v4)
      {
        BOOL v8 = 0;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
  BOOL v8 = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_10013B98C(uint64_t a1)
{
  uint64_t v2 = sub_100012894(&qword_1004C9B20);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100012894(&qword_1004CC9E8);
  uint64_t v30 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100012894(&qword_1004CC9F0);
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100012894(&qword_1004CC9F8);
  uint64_t v29 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100012894(&qword_1004CCA00);
  uint64_t v28 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  long long v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  size_t v14 = *(uint64_t (**)(uint64_t))(**(void **)(a1 + 80) + 200);
  uint64_t v15 = swift_retain();
  uint64_t v16 = v14(v15);
  uint64_t v17 = swift_release();
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 208))(v17);
  swift_release();
  uint64_t v37 = v18;
  if (qword_1004C2AB0 != -1) {
    swift_once();
  }
  unint64_t v19 = (void *)qword_1004CA940;
  id v36 = (id)qword_1004CA940;
  uint64_t v20 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v4, 1, 1, v20);
  id v21 = v19;
  sub_100012894(&qword_1004CCA08);
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  sub_10002179C(&qword_1004CCA10, &qword_1004CCA08);
  sub_10011206C();
  Publisher.receive<A>(on:options:)();
  sub_10013E660((uint64_t)v4);

  swift_release();
  sub_10002179C(&qword_1004CCA18, &qword_1004CC9E8);
  swift_retain();
  uint64_t v22 = v33;
  Publisher.filter(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v22);
  sub_10002179C(&qword_1004CCA20, &qword_1004CC9F0);
  uint64_t v23 = v35;
  Publisher.compactMap<A>(_:)();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v23);
  uint64_t v24 = v32;
  Publishers.CompactMap.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v24);
  sub_10002179C(&qword_1004CCA28, &qword_1004CCA00);
  uint64_t v25 = v31;
  uint64_t v26 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v25);
  type metadata accessor for DepthEdgeDetector();
  swift_allocObject();
  return sub_1000E7818(v26);
}

uint64_t sub_10013BF64(uint64_t a1, void (*a2)(uint64_t, __n128))
{
  uint64_t v4 = a1 + 32;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v6 = 0;
  while (1)
  {
LABEL_6:
    unint64_t v11 = *(void *)(a1 + 16);
    if (v6 == v11)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if (v6 >= v11) {
      break;
    }
    uint64_t v12 = *(void *)(v4 + 8 * v6);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    ++v6;
    if (v12)
    {
      unint64_t v7 = *(void *)(v12 + 16);
      if (v7)
      {
        unint64_t v8 = 0;
        uint64_t v9 = v12 + 48;
        while (v8 < v7)
        {
          ++v8;
          __n128 v13 = *(__n128 *)(v9 - 16);
          uint64_t v10 = swift_retain();
          a2(v10, v13);
          uint64_t result = swift_release();
          unint64_t v7 = *(void *)(v12 + 16);
          v9 += 32;
          if (v8 == v7) {
            goto LABEL_6;
          }
        }
        __break(1u);
        break;
      }
    }
  }
  __break(1u);
  return result;
}

BOOL sub_10013C06C(float32x4_t a1, float a2)
{
  int32x4_t v2 = (int32x4_t)vmulq_f32(a1, a1);
  v2.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v2, 2), vadd_f32(*(float32x2_t *)v2.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v2.i8, 1))).u32[0];
  float32x2_t v3 = vrsqrte_f32((float32x2_t)v2.u32[0]);
  float32x2_t v4 = vmul_f32(v3, vrsqrts_f32((float32x2_t)v2.u32[0], vmul_f32(v3, v3)));
  int8x16_t v5 = (int8x16_t)vmulq_n_f32(a1, vmul_f32(v4, vrsqrts_f32((float32x2_t)v2.u32[0], vmul_f32(v4, v4))).f32[0]);
  v2.i32[0] = v5.i32[1];
  v4.i32[0] = vextq_s8(v5, v5, 8uLL).u32[0];
  v4.i32[1] = v5.i32[0];
  *(float32x2_t *)v5.i8 = vmul_f32(v4, 0);
  return fabsf(*(float *)v5.i32 + (float)(*(float *)v2.i32 + *(float *)&v5.i32[1])) < cosf((float)(90.0 - a2) * 0.017453);
}

BOOL sub_10013C10C(float32x4_t a1, float a2)
{
  int32x4_t v3 = (int32x4_t)vmulq_f32(a1, a1);
  v3.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v3, 2), vadd_f32(*(float32x2_t *)v3.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v3.i8, 1))).u32[0];
  float32x2_t v4 = vrsqrte_f32((float32x2_t)v3.u32[0]);
  float32x2_t v5 = vmul_f32(v4, vrsqrts_f32((float32x2_t)v3.u32[0], vmul_f32(v4, v4)));
  int8x16_t v6 = (int8x16_t)vmulq_n_f32(a1, vmul_f32(v5, vrsqrts_f32((float32x2_t)v3.u32[0], vmul_f32(v5, v5))).f32[0]);
  v3.i32[0] = v6.i32[1];
  v5.i32[0] = vextq_s8(v6, v6, 8uLL).u32[0];
  v5.i32[1] = v6.i32[0];
  *(float32x2_t *)v6.i8 = vmul_f32(v5, 0);
  float v7 = fabsf(*(float *)v6.i32 + (float)(*(float *)v3.i32 + *(float *)&v6.i32[1]));
  if (v7 > 1.0) {
    float v7 = 1.0;
  }
  return (float)(acosf(v7) * 57.296) < a2;
}

uint64_t sub_10013C1B0(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v2 = 0;
  uint64_t v3 = result + 48;
  uint64_t v4 = -(uint64_t)v1;
  float32x2_t v5 = _swiftEmptyArrayStorage;
  uint64_t v22 = result + 48;
  unint64_t v23 = *(void *)(result + 16);
  do
  {
    uint64_t v24 = v5;
    if (v2 <= v1) {
      unint64_t v6 = v1;
    }
    else {
      unint64_t v6 = v2;
    }
    uint64_t v7 = -(uint64_t)v6;
    for (uint64_t i = v3 + 32 * v2++; ; i += 32)
    {
      if (v7 + v2 == 1)
      {
        __break(1u);
        return result;
      }
      long long v25 = *(_OWORD *)(i - 16);
      uint64_t v9 = *(void *)i;
      uint64_t v10 = *(uint64_t (**)(uint64_t))(**(void **)i + 160);
      uint64_t v11 = swift_retain();
      uint64_t v12 = (void *)v10(v11);
      [v12 transform];

      simd_float4x4.up.getter();
      int32x4_t v14 = (int32x4_t)vmulq_f32(v13, v13);
      v14.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v14, 2), vadd_f32(*(float32x2_t *)v14.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v14.i8, 1))).u32[0];
      float32x2_t v15 = vrsqrte_f32((float32x2_t)v14.u32[0]);
      float32x2_t v16 = vmul_f32(v15, vrsqrts_f32((float32x2_t)v14.u32[0], vmul_f32(v15, v15)));
      int8x16_t v17 = (int8x16_t)vmulq_n_f32(v13, vmul_f32(v16, vrsqrts_f32((float32x2_t)v14.u32[0], vmul_f32(v16, v16))).f32[0]);
      v14.i32[0] = v17.i32[1];
      v16.i32[0] = vextq_s8(v17, v17, 8uLL).u32[0];
      v16.i32[1] = v17.i32[0];
      *(float32x2_t *)v17.i8 = vmul_f32(v16, 0);
      if (fabsf(*(float *)v17.i32 + (float)(*(float *)v14.i32 + *(float *)&v17.i32[1])) < 0.20791) {
        break;
      }
      uint64_t result = swift_release();
      ++v2;
      if (v4 + v2 == 1) {
        return (uint64_t)v24;
      }
    }
    float32x2_t v5 = v24;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1000BBEC4(0, v24[2] + 1, 1);
      float32x2_t v5 = v24;
    }
    long long v18 = v25;
    unint64_t v20 = v5[2];
    unint64_t v19 = v5[3];
    if (v20 >= v19 >> 1)
    {
      uint64_t result = (uint64_t)sub_1000BBEC4((void *)(v19 > 1), v20 + 1, 1);
      long long v18 = v25;
      float32x2_t v5 = v24;
    }
    uint64_t v5[2] = v20 + 1;
    id v21 = &v5[4 * v20];
    *((_OWORD *)v21 + 2) = v18;
    v21[6] = v9;
    uint64_t v3 = v22;
    unint64_t v1 = v23;
  }
  while (v4 + v2);
  return (uint64_t)v5;
}

uint64_t sub_10013C3DC(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v2 = 0;
  uint64_t v3 = result + 48;
  uint64_t v4 = _swiftEmptyArrayStorage;
  uint64_t v5 = -(uint64_t)v1;
  uint64_t v23 = result + 48;
  unint64_t v24 = *(void *)(result + 16);
  do
  {
    long long v25 = v4;
    if (v2 <= v1) {
      unint64_t v6 = v1;
    }
    else {
      unint64_t v6 = v2;
    }
    uint64_t v7 = -(uint64_t)v6;
    for (uint64_t i = v3 + 32 * v2++; ; i += 32)
    {
      if (v7 + v2 == 1)
      {
        __break(1u);
        return result;
      }
      long long v26 = *(_OWORD *)(i - 16);
      uint64_t v9 = *(void *)i;
      uint64_t v10 = *(uint64_t (**)(uint64_t))(**(void **)i + 160);
      uint64_t v11 = swift_retain();
      uint64_t v12 = (void *)v10(v11);
      [v12 transform];

      simd_float4x4.up.getter();
      int32x4_t v14 = (int32x4_t)vmulq_f32(v13, v13);
      v14.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v14, 2), vadd_f32(*(float32x2_t *)v14.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v14.i8, 1))).u32[0];
      float32x2_t v15 = vrsqrte_f32((float32x2_t)v14.u32[0]);
      float32x2_t v16 = vmul_f32(v15, vrsqrts_f32((float32x2_t)v14.u32[0], vmul_f32(v15, v15)));
      int8x16_t v17 = (int8x16_t)vmulq_n_f32(v13, vmul_f32(v16, vrsqrts_f32((float32x2_t)v14.u32[0], vmul_f32(v16, v16))).f32[0]);
      v14.i32[0] = v17.i32[1];
      v16.i32[0] = vextq_s8(v17, v17, 8uLL).u32[0];
      v16.i32[1] = v17.i32[0];
      *(float32x2_t *)v17.i8 = vmul_f32(v16, 0);
      float v18 = fabsf(*(float *)v17.i32 + (float)(*(float *)v14.i32 + *(float *)&v17.i32[1]));
      if (v18 > 1.0) {
        float v18 = 1.0;
      }
      if ((float)(acosf(v18) * 57.296) < 12.0) {
        break;
      }
      uint64_t result = swift_release();
      ++v2;
      if (v5 + v2 == 1) {
        return (uint64_t)v25;
      }
    }
    uint64_t v4 = v25;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1000BBEC4(0, v25[2] + 1, 1);
      uint64_t v4 = v25;
    }
    long long v19 = v26;
    unint64_t v21 = v4[2];
    unint64_t v20 = v4[3];
    if (v21 >= v20 >> 1)
    {
      uint64_t result = (uint64_t)sub_1000BBEC4((void *)(v20 > 1), v21 + 1, 1);
      long long v19 = v26;
      uint64_t v4 = v25;
    }
    v4[2] = v21 + 1;
    uint64_t v22 = &v4[4 * v21];
    *((_OWORD *)v22 + 2) = v19;
    v22[6] = v9;
    uint64_t v3 = v23;
    unint64_t v1 = v24;
  }
  while (v5 + v2);
  return (uint64_t)v4;
}

void *sub_10013C628(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_19:
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2)
    {
LABEL_3:
      for (unint64_t i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          unint64_t v5 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_16:
            __break(1u);
            return _swiftEmptyArrayStorage;
          }
        }
        else
        {
          if (i >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_19;
          }
          uint64_t v4 = *(void *)(a1 + 8 * i + 32);
          swift_retain();
          unint64_t v5 = i + 1;
          if (__OFADD__(i, 1)) {
            goto LABEL_16;
          }
        }
        unint64_t v6 = *(uint64_t (**)(void))(*(void *)v4 + 160);
        uint64_t v7 = (void *)v6();
        [v7 transform];

        uint64_t v8 = simd_float4x4.up.getter();
        int32x4_t v10 = (int32x4_t)vmulq_f32(v9, v9);
        v10.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v10, 2), vadd_f32(*(float32x2_t *)v10.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v10.i8, 1))).u32[0];
        float32x2_t v11 = vrsqrte_f32((float32x2_t)v10.u32[0]);
        float32x2_t v12 = vmul_f32(v11, vrsqrts_f32((float32x2_t)v10.u32[0], vmul_f32(v11, v11)));
        int8x16_t v13 = (int8x16_t)vmulq_n_f32(v9, vmul_f32(v12, vrsqrts_f32((float32x2_t)v10.u32[0], vmul_f32(v12, v12))).f32[0]);
        v10.i32[0] = v13.i32[1];
        v12.i32[0] = vextq_s8(v13, v13, 8uLL).u32[0];
        v12.i32[1] = v13.i32[0];
        *(float32x2_t *)v13.i8 = vmul_f32(v12, 0);
        if (fabsf(*(float *)v13.i32 + (float)(*(float *)v10.i32 + *(float *)&v13.i32[1])) < 0.17365) {
          goto LABEL_4;
        }
        int32x4_t v14 = (void *)((uint64_t (*)(uint64_t))v6)(v8);
        [v14 transform];

        simd_float4x4.up.getter();
        int32x4_t v16 = (int32x4_t)vmulq_f32(v15, v15);
        v16.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v16, 2), vadd_f32(*(float32x2_t *)v16.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v16.i8, 1))).u32[0];
        float32x2_t v17 = vrsqrte_f32((float32x2_t)v16.u32[0]);
        float32x2_t v18 = vmul_f32(v17, vrsqrts_f32((float32x2_t)v16.u32[0], vmul_f32(v17, v17)));
        int8x16_t v19 = (int8x16_t)vmulq_n_f32(v15, vmul_f32(v18, vrsqrts_f32((float32x2_t)v16.u32[0], vmul_f32(v18, v18))).f32[0]);
        v16.i32[0] = v19.i32[1];
        v18.i32[0] = vextq_s8(v19, v19, 8uLL).u32[0];
        v18.i32[1] = v19.i32[0];
        *(float32x2_t *)v19.i8 = vmul_f32(v18, 0);
        float v20 = fabsf(*(float *)v19.i32 + (float)(*(float *)v16.i32 + *(float *)&v19.i32[1]));
        if (v20 > 1.0) {
          float v20 = 1.0;
        }
        if ((float)(acosf(v20) * 57.296) < 10.0)
        {
LABEL_4:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
          swift_release();
        }
        if (v5 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10013C8FC(uint64_t result, float32x4_t a2, float32x4_t a3)
{
  uint64_t v4 = v3;
  unint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    unint64_t v7 = 0;
    int32x4_t v8 = (int32x4_t)vmulq_f32(a3, a3);
    v8.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v8, 2), vadd_f32(*(float32x2_t *)v8.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v8.i8, 1))).u32[0];
    float v9 = a2.f32[2];
    uint64_t v10 = result + 64;
    float32x2_t v11 = vrsqrte_f32((float32x2_t)v8.u32[0]);
    float32x2_t v12 = vmul_f32(v11, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v11, v11)));
    float32x4_t v13 = vmulq_n_f32(a3, vmul_f32(v12, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v12, v12))).f32[0]);
    do
    {
      if (v7 <= v5) {
        unint64_t v14 = v5;
      }
      else {
        unint64_t v14 = v7;
      }
      uint64_t v15 = -(uint64_t)v14;
      for (unint64_t i = (unsigned char *)(v10 + 48 * v7++); ; i += 48)
      {
        if (v15 + v7 == 1)
        {
          __break(1u);
          return result;
        }
        if ((*i & 1) == 0)
        {
          float32x2_t v17 = *(float32x2_t *)(i - 32);
          unint64_t v18 = *((void *)i - 3);
          *(float32x2_t *)a3.f32 = v17;
          int64x2_t v19 = vdupq_n_s64(v18);
          a3 = vsubq_f32(a3, a2);
          a3.f32[0] = vmuls_lane_f32(*(float *)&v19.i32[2] - v9, v13, 2)
                    + (float)((float)((float)(v17.f32[0] - a2.f32[0]) * v13.f32[0])
                            + vmuls_lane_f32(a3.f32[1], *(float32x2_t *)v13.f32, 1));
          *(float *)v19.i32 = (float)(v9 + vmuls_lane_f32(a3.f32[0], v13, 2)) - *(float *)&v19.i32[2];
          float32x2_t v20 = vsub_f32(vadd_f32(*(float32x2_t *)a2.f32, vmul_n_f32(*(float32x2_t *)v13.f32, a3.f32[0])), v17);
          if ((float)((float)(*(float *)v19.i32 * *(float *)v19.i32) + vaddv_f32(vmul_f32(v20, v20))) < 0.0225) {
            break;
          }
        }
        if (++v7 - v5 == 1) {
          return (uint64_t)_swiftEmptyArrayStorage;
        }
      }
      float32x4_t v27 = v13;
      float32x4_t v28 = a2;
      uint64_t v24 = *((void *)i - 1);
      uint64_t v25 = *((void *)i - 2);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v26 = v4;
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_1000BBF64(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v22 = _swiftEmptyArrayStorage[2];
      unint64_t v21 = _swiftEmptyArrayStorage[3];
      float32x4_t v13 = v27;
      a2 = v28;
      if (v22 >= v21 >> 1)
      {
        uint64_t result = (uint64_t)sub_1000BBF64((char *)(v21 > 1), v22 + 1, 1);
        float32x4_t v13 = v27;
        a2 = v28;
      }
      _swiftEmptyArrayStorage[2] = v22 + 1;
      uint64_t v23 = &_swiftEmptyArrayStorage[6 * v22];
      v23[4] = v17;
      v23[5] = v18;
      v23[6] = v25;
      v23[7] = v24;
      *((unsigned char *)v23 + 64) = 0;
      uint64_t v4 = v26;
    }
    while (v7 != v5);
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

char *sub_10013CB28(uint64_t a1)
{
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return (char *)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  unint64_t v1 = (char *)_swiftEmptyArrayStorage;
  MeasureCore.shared.unsafeMutableAddressor();
  for (uint64_t i = 0; i != v13; ++i)
  {
    swift_retain();
    MeasureCore.edgeHitTest(screenPoint:frame:orientation:planeTypes:useHyperLocalStrategy:)();
    uint64_t v5 = v23[0];
    uint64_t v4 = v23[1];
    uint64_t v6 = v23[5];
    uint64_t v20 = v23[4];
    uint64_t v21 = v23[2];
    uint64_t v7 = v23[7];
    uint64_t v8 = v23[9];
    uint64_t v18 = v23[8];
    uint64_t v19 = v23[6];
    uint64_t v14 = v23[3];
    uint64_t v15 = v23[11];
    uint64_t v16 = v23[10];
    char v17 = v24;
    uint64_t v22 = v25;
    int v9 = v26;
    swift_release();
    sub_100016FEC((uint64_t)v23, (uint64_t)v27, &qword_1004CEA20);
    if (v28)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v1 = sub_10006EFB0(0, *((void *)v1 + 2) + 1, 1, v1);
      }
      unint64_t v11 = *((void *)v1 + 2);
      unint64_t v10 = *((void *)v1 + 3);
      if (v11 >= v10 >> 1) {
        unint64_t v1 = sub_10006EFB0((char *)(v10 > 1), v11 + 1, 1, v1);
      }
      *((void *)v1 + 2) = v11 + 1;
      uint64_t v3 = &v1[128 * v11];
      *((void *)v3 + 4) = v5;
      *((void *)v3 + 5) = v4;
      *((void *)v3 + 6) = v21;
      *((void *)v3 + 7) = v14;
      *((void *)v3 + 8) = v20;
      *((void *)v3 + 9) = v6;
      *((void *)v3 + 10) = v19;
      *((void *)v3 + 11) = v7;
      *((void *)v3 + 12) = v18;
      *((void *)v3 + 13) = v8;
      *((void *)v3 + 14) = v16;
      *((void *)v3 + 15) = v15;
      v3[128] = v17 & 1;
      *((void *)v3 + 17) = v22;
      *((_DWORD *)v3 + 36) = v9;
    }
  }
  swift_bridgeObjectRelease();
  return v1;
}

float32x2_t sub_10013CD38(float32x2_t a1, float32x2_t a2, float32x2_t a3)
{
  float32x2_t v3 = vsub_f32(a3, a2);
  float32x2_t v4 = vmul_f32(v3, v3);
  v4.i32[0] = vadd_f32(v4, (float32x2_t)vdup_lane_s32((int32x2_t)v4, 1)).u32[0];
  float32x2_t v5 = vrsqrte_f32((float32x2_t)v4.u32[0]);
  float32x2_t v6 = vmul_f32(v5, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v5, v5)));
  float32x2_t v7 = vmul_n_f32(v3, vmul_f32(v6, vrsqrts_f32((float32x2_t)v4.u32[0], vmul_f32(v6, v6))).f32[0]);
  float32x2_t v8 = vmul_f32(v7, v7);
  v8.i32[0] = vadd_f32(v8, (float32x2_t)vdup_lane_s32((int32x2_t)v8, 1)).u32[0];
  float32x2_t v9 = vrsqrte_f32((float32x2_t)v8.u32[0]);
  float32x2_t v10 = vmul_f32(v9, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v9, v9)));
  float32x2_t v11 = vmul_n_f32(v7, vmul_f32(v10, vrsqrts_f32((float32x2_t)v8.u32[0], vmul_f32(v10, v10))).f32[0]);
  float32x2_t v12 = vmul_f32(vsub_f32(a1, a2), v11);
  return vadd_f32(vmul_n_f32(v11, vadd_f32(v12, (float32x2_t)vdup_lane_s32((int32x2_t)v12, 1)).f32[0]), a2);
}

uint64_t sub_10013CDC8(float32x2_t a1, float32x2_t a2, float32x2_t a3, float a4)
{
  float32x2_t v8 = sub_10013CD38(a1, a2, a3);
  float v10 = v9;
  float32x2_t v11 = vsub_f32(a1, a2);
  if (vaddv_f32(vmul_f32(v11, v11)) < a4) {
    return 1;
  }
  float32x2_t v12 = vsub_f32(a1, a3);
  if (vaddv_f32(vmul_f32(v12, v12)) < a4) {
    return 1;
  }
  if (v10 >= a4) {
    return 0;
  }
  float32x2_t v14 = vsub_f32(a3, a2);
  int32x2_t v15 = (int32x2_t)vmul_f32(v14, vsub_f32(v8, a2));
  int32x2_t v16 = (int32x2_t)vmul_f32(v14, v14);
  float32x2_t v17 = vadd_f32((float32x2_t)vzip1_s32(v15, v16), (float32x2_t)vzip2_s32(v15, v16));
  return (v17.f32[0] >= 0.0) & vcge_f32((float32x2_t)vdup_lane_s32((int32x2_t)v17, 1), v17).u32[0];
}

void *sub_10013CE7C()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  unint64_t v1 = (void *)sub_10013AE78(v0, v0);
  swift_bridgeObjectRelease();
  uint64_t v19 = v1;
  swift_bridgeObjectRetain();
  sub_100132614(&v19);
  swift_bridgeObjectRelease();
  uint64_t v2 = v19;
  int64_t v3 = v19[2];
  if (v3)
  {
    uint64_t v19 = _swiftEmptyArrayStorage;
    sub_1000BBEC4(0, v3, 0);
    uint64_t v4 = 0;
    float32x2_t v5 = v19;
    unint64_t v6 = v19[2];
    uint64_t v7 = 4 * v6;
    do
    {
      long long v18 = *(_OWORD *)&v2[v4 + 4];
      uint64_t v8 = v2[v4 + 6];
      uint64_t v19 = v5;
      unint64_t v9 = v5[3];
      int64_t v10 = v6 + 1;
      swift_retain();
      if (v6 >= v9 >> 1)
      {
        sub_1000BBEC4((void *)(v9 > 1), v10, 1);
        float32x2_t v5 = v19;
      }
      uint64_t v5[2] = v10;
      float32x2_t v11 = &v5[v7 + v4];
      *((_OWORD *)v11 + 2) = v18;
      v11[6] = v8;
      v4 += 4;
      ++v6;
      --v3;
    }
    while (v3);
    swift_release();
  }
  else
  {
    swift_release();
    float32x2_t v5 = _swiftEmptyArrayStorage;
  }
  if (v5[2] >= 0xAuLL) {
    uint64_t v12 = 10;
  }
  else {
    uint64_t v12 = v5[2];
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain_n();
  uint64_t v13 = (void *)swift_dynamicCastClass();
  if (!v13)
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  uint64_t v14 = v13[2];
  swift_release();
  if (v14 == v12)
  {
    int32x2_t v15 = (void *)swift_dynamicCastClass();
    if (!v15)
    {
      swift_bridgeObjectRelease();
      int32x2_t v15 = _swiftEmptyArrayStorage;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_10007C2B0((uint64_t)v5, (uint64_t)(v5 + 4), 0, (2 * v12) | 1);
    int32x2_t v15 = v17;
  }
  swift_bridgeObjectRelease();
  return v15;
}

__n128 sub_10013D090(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = a1 + 48;
    do
    {
      uint64_t v7 = *(void *)v3;
      if (!*(unsigned char *)(*(void *)v3 + 48))
      {
        long long v20 = *(_OWORD *)(v3 - 16);
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000BBEC4(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        unint64_t v5 = _swiftEmptyArrayStorage[2];
        unint64_t v4 = _swiftEmptyArrayStorage[3];
        if (v5 >= v4 >> 1) {
          sub_1000BBEC4((void *)(v4 > 1), v5 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v5 + 1;
        unint64_t v6 = &_swiftEmptyArrayStorage[4 * v5];
        *((_OWORD *)v6 + 2) = v20;
        v6[6] = v7;
      }
      v3 += 32;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = (long long *)SIMD3<>.zero.unsafeMutableAddressor();
  long long v9 = *v8;
  uint64_t v10 = _swiftEmptyArrayStorage[2];
  if (v10)
  {
    float32x2_t v11 = (float *)&_swiftEmptyArrayStorage[5];
    uint64_t v12 = _swiftEmptyArrayStorage[2];
    do
    {
      *(float32x2_t *)&long long v14 = vadd_f32(*(float32x2_t *)&v9, *(float32x2_t *)(v11 - 2));
      float v13 = *v11;
      v11 += 8;
      *((float *)&v14 + 2) = *((float *)&v9 + 2) + v13;
      HIDWORD(v14) = 0;
      long long v9 = v14;
      --v12;
    }
    while (v12);
  }
  else
  {
    long long v14 = *v8;
  }
  long long v21 = v14;
  swift_release();
  if ((unint64_t)v10 >= 2)
  {
    *(float *)v15.i32 = (float)v10;
    *(float32x2_t *)&long long v16 = vdiv_f32(*(float32x2_t *)&v21, (float32x2_t)vdup_lane_s32(v15, 0));
    *((float *)&v16 + 2) = *((float *)&v21 + 2) / (float)v10;
    if (qword_1004C2AC0 != -1)
    {
      long long v23 = v16;
      swift_once();
      long long v16 = v23;
    }
    HIDWORD(v16) = 0;
    long long v22 = v16;
    v18._object = (void *)0x80000001004276A0;
    v18._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
    Log.default(_:isPrivate:)(v18, 0);
  }
  else
  {
    sub_100132548(a1);
    static SIMD3<>.average(_:)();
    long long v22 = v17;
    swift_bridgeObjectRelease();
  }
  return (__n128)v22;
}

BOOL sub_10013D2B4(float32x4_t a1, double a2, double a3, double a4, double a5, float a6)
{
  simd_float4x4.forward.getter();
  int32x4_t v7 = (int32x4_t)vmulq_f32(a1, a1);
  v7.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v7, 2), vadd_f32(*(float32x2_t *)v7.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v7.i8, 1))).u32[0];
  float32x2_t v8 = vrsqrte_f32((float32x2_t)v7.u32[0]);
  float32x2_t v9 = vmul_f32(v8, vrsqrts_f32((float32x2_t)v7.u32[0], vmul_f32(v8, v8)));
  int8x16_t v10 = (int8x16_t)vmulq_n_f32(a1, vmul_f32(v9, vrsqrts_f32((float32x2_t)v7.u32[0], vmul_f32(v9, v9))).f32[0]);
  v9.f32[0] = vmuls_n_f32(*(float *)v11.i32, *(float *)v10.i32);
  v11.i32[0] = vextq_s8(v11, v11, 8uLL).u32[0];
  v10.i32[0] = vextq_s8(v10, v10, 8uLL).u32[0];
  *(float32x2_t *)v11.i8 = vmul_f32(*(float32x2_t *)v11.i8, *(float32x2_t *)v10.i8);
  float v12 = fabsf(*(float *)v11.i32 + (float)(v9.f32[0] + *(float *)&v11.i32[1]));
  if (v12 > a6)
  {
    if (qword_1004C2AC0 != -1) {
      swift_once();
    }
    v13._object = (void *)0x8000000100427640;
    v13._uint64_t countAndFlagsBits = 0xD000000000000057;
    Log.default(_:isPrivate:)(v13, 0);
  }
  return v12 <= a6;
}

uint64_t sub_10013D3C8(uint64_t result)
{
  if (*(void *)(result + 16))
  {
    uint64_t v1 = swift_bridgeObjectRetain();
    uint64_t v2 = sub_10013B22C(v1, v1);
    swift_bridgeObjectRelease();
    int64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      sub_1000BBE14(0, v3, 0);
      unint64_t v4 = (int *)(v2 + 56);
      unint64_t v5 = _swiftEmptyArrayStorage[2];
      int64_t v6 = v3;
      do
      {
        int v7 = *v4;
        unint64_t v8 = _swiftEmptyArrayStorage[3];
        unint64_t v9 = v5 + 1;
        if (v5 >= v8 >> 1) {
          sub_1000BBE14((char *)(v8 > 1), v5 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v9;
        *((_DWORD *)&_swiftEmptyArrayStorage[4] + v5) = v7;
        v4 += 8;
        ++v5;
        --v6;
      }
      while (v6);
    }
    else
    {
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      if (!v9) {
        goto LABEL_17;
      }
    }
    if (v9 >= 2)
    {
      unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      float v12 = (float *)&_swiftEmptyArrayStorage[4] + 1;
      float v11 = 0.0;
      unint64_t v13 = v9 & 0xFFFFFFFFFFFFFFFELL;
      do
      {
        float v11 = (float)(v11 + *(v12 - 1)) + *v12;
        v12 += 2;
        v13 -= 2;
      }
      while (v13);
      if (v9 == v10) {
        goto LABEL_17;
      }
    }
    else
    {
      unint64_t v10 = 0;
      float v11 = 0.0;
    }
    unint64_t v14 = v9 - v10;
    int32x2_t v15 = (float *)&_swiftEmptyArrayStorage[4] + v10;
    do
    {
      float v16 = *v15++;
      float v11 = v11 + v16;
      --v14;
    }
    while (v14);
LABEL_17:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10013D56C(void *a1, double a2, double a3, double a4, double a5)
{
  void (*v8)(_OWORD *__return_ptr, uint64_t);
  uint64_t v9;
  void *v10;
  void (*v11)(void **__return_ptr, uint64_t);
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  unsigned __int8 (*v16)(void);
  uint64_t v17;
  float v18;
  float v19;
  uint64_t result;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  float v34;
  float v35;
  float v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  double *v42;
  char v43;
  double v44;
  double v45;
  double v46;
  double v47;
  float v48;
  float v49;
  double v50;
  void *v51;
  float v52;
  float v53;
  void *v58;
  void *v59;
  id v60;
  id v61;
  uint64_t v62;
  char v63;
  float v64;
  _OWORD v65[9];
  uint64_t v66;
  void v67[5];
  char v68;
  double v69;
  double v70;
  double v71;
  double v72;
  uint64_t v73;
  _OWORD v74[9];
  uint64_t v75;

  uint64_t v6 = v5;
  static ComputedCameraProperties.shared(for:)();
  unint64_t v8 = *(void (**)(_OWORD *__return_ptr, uint64_t))(**(void **)(v5 + 112) + 144);
  unint64_t v9 = swift_retain();
  v8(v65, v9);
  swift_release();
  v74[6] = v65[6];
  v74[7] = v65[7];
  v74[8] = v65[8];
  uint64_t v75 = v66;
  v74[2] = v65[2];
  v74[3] = v65[3];
  v74[4] = v65[4];
  v74[5] = v65[5];
  v74[0] = v65[0];
  v74[1] = v65[1];
  sub_100016B40((id *)v74);
  sub_100016F3C((uint64_t)v74);
  sub_100016FEC((uint64_t)v74, (uint64_t)v65, (uint64_t *)&unk_1004CEA30);
  if (sub_100016B28((uint64_t *)v65) == 1) {
    return 0;
  }
  unint64_t v10 = *(void **)&v65[0];
  float v11 = *(void (**)(void **__return_ptr, uint64_t))(**(void **)(v5 + 120) + 144);
  float v12 = swift_retain();
  v11(&v58, v12);
  swift_release();
  unint64_t v14 = v58;
  unint64_t v13 = v59;

  if (!v13
    || ((*(void (**)(void))((swift_isaMask & *v13) + 0x2B0))(),
        v13,
        int32x2_t v15 = simd_float4x4.position.getter(),
        float v16 = *(unsigned __int8 (**)(void))((swift_isaMask & *v10) + 0x258),
        ((unsigned __int8 (*)(uint64_t))v16)(v15))
    && v16() != 1)
  {
    sub_100016B6C((id *)v74);
    return 0;
  }
  (*(void (**)(void))((swift_isaMask & *v10) + 0x2A8))();
  long long v17 = simd_float4x4.position.getter();
  (*(void (**)(uint64_t))((swift_isaMask & *v10) + 0x2A0))(v17);
  simd_float4x4.position.getter();
  type metadata accessor for MeasureCamera();
  static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
  float32x4_t v52 = v18;
  static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
  long long v53 = v19;
  sub_100016B6C((id *)v74);
  uint64_t result = 0;
  long long v21 = (LODWORD(v52) & 0x7FFFFF) != 0 && (~LODWORD(v52) & 0x7F800000) == 0;
  long long v22 = v52 >= 0.0 && v52 <= 1.0;
  if (v22 && !v21)
  {
    uint64_t result = 0;
    long long v23 = (LODWORD(v53) & 0x7FFFFF) != 0 && (~LODWORD(v53) & 0x7F800000) == 0;
    uint64_t v24 = v53 >= 0.0 && v53 <= 1.0;
    if (v24 && !v23)
    {
      CGPoint.init(xy:)();
      int v26 = v25;
      uint64_t v28 = v27;
      CGPoint.init(xy:)();
      uint64_t v69 = v26;
      uint64_t v70 = v28;
      uint64_t v71 = v29;
      uint64_t v72 = v30;
      uint64_t v73 = 0;
      uint64_t v31 = *(void *)(v6 + 152);
      uint64_t v32 = *(void *)(v31 + 16);
      if (v32)
      {
        uint64_t v51 = a1;
        uint64_t v33 = v26 - v29;
        uint64_t v34 = v28 - v30;
        uint64_t v35 = v33;
        id v36 = atan2f(fabsf(v34), fabsf(v35)) * 57.296;
        swift_bridgeObjectRetain();
        uint64_t v37 = 0;
        uint64_t v38 = 0;
        int64_t v39 = 0;
        uint64_t v40 = 0;
        uint64_t v41 = 0;
        float32x4_t v42 = (double *)(v31 + 64);
        float32x4_t v43 = 1;
        do
        {
          unint64_t v44 = *(v42 - 4);
          unint64_t v45 = *(v42 - 3);
          uint64_t v46 = *(v42 - 2);
          uint64_t v47 = *(v42 - 1);
          int64_t v48 = v45 - v47;
          uint64_t v49 = v44 - v46;
          if ((float)(atan2f(fabsf(v48), fabsf(v49)) * 57.296) != v36)
          {
            uint64_t v50 = *v42;
            *(double *)uint64_t v67 = v44;
            *(double *)&v67[1] = v45;
            *(double *)&v67[2] = v46;
            *(double *)&v67[3] = v47;
            *(double *)&v67[4] = v50;
            BOOL v68 = 0;
            sub_1001372F4((uint64_t)v67, (uint64_t)&v58);
            if (v64 < INFINITY)
            {
              uint64_t v37 = v58;
              uint64_t v38 = v59;
              int64_t v39 = v60;
              uint64_t v40 = v61;
              uint64_t v41 = v62;
              float32x4_t v43 = v63;
            }
          }
          v42 += 5;
          --v32;
        }
        while (v32);
        swift_bridgeObjectRelease();
        if ((v43 & 1) == 0)
        {
          long long v58 = v37;
          uint64_t v59 = v38;
          uint64_t v60 = v39;
          BOOL v61 = v40;
          uint64_t v62 = v41;
          return sub_10013653C((CGFloat *)&v58, v51, a2, a3, a4, a5);
        }
      }
      return 0;
    }
  }
  return result;
}

BOOL sub_10013DAF0(uint64_t a1, float32x4_t a2)
{
  uint64_t v3 = a1 + direct field offset for WorldEdge.p1;
  swift_beginAccess();
  if (*(unsigned char *)(v3 + 16)) {
    return 0;
  }
  float32x2_t v4 = *(float32x2_t *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = (float32x2_t *)(a1 + direct field offset for WorldEdge.p2);
  swift_beginAccess();
  if (v6[2].i8[0]) {
    return 0;
  }
  *(float32x2_t *)v8.f32 = v4;
  v8.i64[1] = v5;
  *(float32x2_t *)v7.f32 = vsub_f32(*v6, v4);
  float32x4_t v33 = vsubq_f32(*(float32x4_t *)v6->f32, v8);
  float32x4_t v34 = v7;
  float v9 = vmuls_lane_f32(v33.f32[2], v33, 2) + vaddv_f32(vmul_f32(*(float32x2_t *)v7.f32, *(float32x2_t *)v7.f32));
  closestPointOnLine(lineP1:lineP2:point:)();
  float32x4_t v11 = vsubq_f32(v10, a2);
  float32x4_t v12 = vmulq_f32(v11, v11);
  float32x4_t v13 = vaddq_f32(v12, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v12.f32, 1));
  float32x4_t v14 = (float32x4_t)vdupq_laneq_s32((int32x4_t)v12, 2);
  if (v9 <= 0.0225)
  {
    float32x4_t v32 = v14;
    float32x4_t v38 = v13;
    if (qword_1004C2AC0 != -1) {
      swift_once();
    }
    v15._uint64_t countAndFlagsBits = 0xD000000000000028;
    v15._object = (void *)0x8000000100427720;
    Log.default(_:isPrivate:)(v15, 0);
    float32x4_t v13 = v38;
    float32x4_t v14 = v32;
  }
  LODWORD(v39) = vaddq_f32(v14, v13).u32[0];
  if (v9 >= 2.25)
  {
    if (qword_1004C2AC0 != -1) {
      swift_once();
    }
    v16._object = (void *)0x8000000100427750;
    v16._uint64_t countAndFlagsBits = 0xD000000000000027;
    Log.default(_:isPrivate:)(v16, 0);
  }
  float32x4_t v17 = v34;
  v17.i32[2] = v33.i32[2];
  if (qword_1004C2C00 != -1)
  {
    float32x4_t v36 = v17;
    swift_once();
    float32x4_t v17 = v36;
  }
  v17.i32[3] = 0;
  if (v39 >= *(float *)&dword_1004F844C)
  {
    float32x4_t v35 = v17;
    if (qword_1004C2AC0 != -1) {
      swift_once();
    }
    v18._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
    v18._object = (void *)0x8000000100427780;
    Log.default(_:isPrivate:)(v18, 0);
    float32x4_t v17 = v35;
  }
  int32x4_t v19 = (int32x4_t)vmulq_f32(v17, v17);
  v19.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v19, 2), vadd_f32(*(float32x2_t *)v19.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v19.i8, 1))).u32[0];
  float32x2_t v20 = vrsqrte_f32((float32x2_t)v19.u32[0]);
  float32x2_t v21 = vmul_f32(v20, vrsqrts_f32((float32x2_t)v19.u32[0], vmul_f32(v20, v20)));
  int8x16_t v22 = (int8x16_t)vmulq_n_f32(v17, vmul_f32(v21, vrsqrts_f32((float32x2_t)v19.u32[0], vmul_f32(v21, v21))).f32[0]);
  v21.i32[0] = v22.i32[1];
  v23.i32[0] = vextq_s8(v22, v22, 8uLL).u32[0];
  v23.i32[1] = v22.i32[0];
  *(float32x2_t *)v22.i8 = vmul_f32(v23, 0);
  float v24 = fabsf(*(float *)v22.i32 + (float)(v21.f32[0] + *(float *)&v22.i32[1]));
  float v25 = 1.0;
  if (v24 <= 1.0) {
    float v25 = v24;
  }
  float v26 = acosf(v25) * 57.296;
  if (v26 >= 3.0 && v24 >= 0.052336)
  {
    if (qword_1004C2AC0 != -1) {
      swift_once();
    }
    v28._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
    v28._object = (void *)0x80000001004277B0;
    Log.default(_:isPrivate:)(v28, 0);
  }
  BOOL v29 = v9 > 0.0225 && v9 < 2.25;
  if (!v29 || v39 >= *(float *)&dword_1004F844C) {
    return 0;
  }
  if (v26 >= 10.0) {
    return v24 < 0.17365;
  }
  return 1;
}

void sub_10013DEE0(uint64_t a1, int8x16_t a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = a1 + direct field offset for WorldEdge.p1;
  swift_beginAccess();
  if ((*(unsigned char *)(v4 + 16) & 1) == 0)
  {
    float32x2_t v5 = *(float32x2_t *)v4;
    unint64_t v6 = *(void *)(v4 + 8);
    uint64_t v7 = a1 + direct field offset for WorldEdge.p2;
    swift_beginAccess();
    if ((*(unsigned char *)(v7 + 16) & 1) == 0)
    {
      float32x4_t v8 = (const double *)(v7 + 8);
      float32x2_t v9 = *(float32x2_t *)v7;
      float64x2_t v10 = vld1q_dup_f64(v8);
      float v78 = *(float *)&v10.f64[1];
      uint64_t v11 = a1 + direct field offset for WorldEdge.backingPlanes;
      swift_beginAccess();
      uint64_t v67 = *(void *)(*(void *)v11 + 16);
      if (v67)
      {
        int64x2_t v13 = vdupq_n_s64(v6);
        *(float32x2_t *)v12.f32 = vsub_f32(v9, v5);
        v12.f32[2] = v78 - *(float *)&v13.i32[2];
        int32x4_t v14 = (int32x4_t)vmulq_f32(v12, v12);
        v14.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v14, 2), vadd_f32(*(float32x2_t *)v14.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v14.i8, 1))).u32[0];
        float32x2_t v15 = vrsqrte_f32((float32x2_t)v14.u32[0]);
        float32x2_t v16 = vmul_f32(v15, vrsqrts_f32((float32x2_t)v14.u32[0], vmul_f32(v15, v15)));
        float32x4_t v17 = vmulq_n_f32(v12, vmul_f32(v16, vrsqrts_f32((float32x2_t)v14.u32[0], vmul_f32(v16, v16))).f32[0]);
        int32x4_t v18 = (int32x4_t)vmulq_f32(v17, v17);
        v18.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v18, 2), vadd_f32(*(float32x2_t *)v18.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v18.i8, 1))).u32[0];
        float32x2_t v19 = vrsqrte_f32((float32x2_t)v18.u32[0]);
        float32x2_t v20 = vmul_f32(v19, vrsqrts_f32((float32x2_t)v18.u32[0], vmul_f32(v19, v19)));
        float32x4_t v21 = vmulq_n_f32(v17, vmul_f32(v20, vrsqrts_f32((float32x2_t)v18.u32[0], vmul_f32(v20, v20))).f32[0]);
        float32x2_t v22 = vmul_f32(vadd_f32(v5, v9), (float32x2_t)0x3F0000003F000000);
        int8x16_t v23 = a2;
        v23.i32[0] = vextq_s8(v23, v23, 8uLL).u32[0];
        v20.i32[1] = v22.i32[1];
        v20.f32[0] = (float)(*(float *)&v13.i32[2] + v78) * 0.5;
        v24.i32[1] = v21.i32[1];
        v24.i32[0] = vextq_s8((int8x16_t)v21, (int8x16_t)v21, 8uLL).u32[0];
        float32x2_t v25 = vmul_f32(vsub_f32(*(float32x2_t *)v23.i8, v20), v24);
        float v26 = v25.f32[0] + (float)((float)((float)(*(float *)a2.i32 - v22.f32[0]) * v21.f32[0]) + v25.f32[1]);
        float v72 = (float)((float)(*(float *)&v13.i32[2] + v78) * 0.5) + vmuls_lane_f32(v26, v21, 2);
        float32x2_t v73 = vadd_f32(v22, vmul_n_f32(*(float32x2_t *)v21.f32, v26));
        uint64_t v66 = *(void *)v11 + 32;
        float32x4_t v64 = vnegq_f32(v17);
        float32x4_t v65 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v17, (int32x4_t)v17), (int8x16_t)v17, 0xCuLL);
        uint64_t v27 = swift_bridgeObjectRetain();
        unint64_t v28 = 0;
        BOOL v29 = _swiftEmptyArrayStorage;
        uint64_t v62 = v27;
        char v63 = ObjectType;
        while (v28 < *(void *)(v27 + 16))
        {
          unint64_t v70 = v28;
          uint64_t v31 = (float32x4_t *)(v66 + 32 * v28);
          float32x4_t v69 = v31[1];
          float32x4_t v32 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v69, (int32x4_t)v69), (int8x16_t)v69, 0xCuLL), v64), v69, v65);
          float32x4_t v33 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v32, (int32x4_t)v32), (int8x16_t)v32, 0xCuLL);
          int32x4_t v34 = (int32x4_t)vmulq_f32(v32, v32);
          v34.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v34.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v34, 2), *(float32x2_t *)v34.i8)).u32[0];
          float32x2_t v35 = vrsqrte_f32((float32x2_t)v34.u32[0]);
          float32x2_t v36 = vmul_f32(v35, vrsqrts_f32((float32x2_t)v34.u32[0], vmul_f32(v35, v35)));
          float32x4_t v37 = vmulq_n_f32(v33, vmul_f32(v36, vrsqrts_f32((float32x2_t)v34.u32[0], vmul_f32(v36, v36))).f32[0]);
          int8x16_t v68 = *(int8x16_t *)v31;
          float32x2_t v38 = vmul_f32(vsub_f32((float32x2_t)__PAIR64__(HIDWORD(v31->i64[0]), vextq_s8(*(int8x16_t *)v31, *(int8x16_t *)v31, 8uLL).u32[0]), (float32x2_t)__PAIR64__(v73.u32[1], LODWORD(v72))), (float32x2_t)__PAIR64__(v37.u32[1], vextq_s8((int8x16_t)v37, (int8x16_t)v37, 8uLL).u32[0]));
          if ((float)(v38.f32[0] + (float)((float)((float)(COERCE_FLOAT(*v31) - v73.f32[0]) * v37.f32[0]) + v38.f32[1])) <= 0.0) {
            float v39 = -1.0;
          }
          else {
            float v39 = 1.0;
          }
          float v76 = vmuls_lane_f32(v39, v37, 2);
          float32x2_t v77 = vmul_n_f32(*(float32x2_t *)v37.f32, v39);
          static simd_float4x4.make(position:normalizedForward:)();
          id v40 = objc_allocWithZone(ObjectType);
          uint64_t v71 = (void *)WorldEdge.init(transform:p1:p2:type:adVariance:)();
          uint64_t v41 = v29[2];
          swift_bridgeObjectRetain();
          if (v41)
          {
            unint64_t v42 = 0;
            float32x4_t v43 = v29 + 8;
            do
            {
              unint64_t v44 = &v43[6 * v42];
              unint64_t v45 = v42;
              while (1)
              {
                if (v45 >= v29[2])
                {
                  __break(1u);
                  goto LABEL_34;
                }
                uint64_t v46 = (void *)*((void *)v44 - 4);
                long long v74 = *v44;
                long long v75 = *(v44 - 1);
                swift_beginAccess();
                simd_float4x4.forward.getter();
                float32x4_t v80 = v47;
                uint64_t v48 = qword_1004C2BD8;
                id v49 = v46;
                if (v48 != -1) {
                  swift_once();
                }
                int32x4_t v50 = (int32x4_t)vmulq_f32(v80, v80);
                v50.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v50, 2), vadd_f32(*(float32x2_t *)v50.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v50.i8, 1))).u32[0];
                float32x2_t v51 = vrsqrte_f32((float32x2_t)v50.u32[0]);
                float32x2_t v52 = vmul_f32(v51, vrsqrts_f32((float32x2_t)v50.u32[0], vmul_f32(v51, v51)));
                float32x4_t v53 = vmulq_n_f32(v80, vmul_f32(v52, vrsqrts_f32((float32x2_t)v50.u32[0], vmul_f32(v52, v52))).f32[0]);
                if (*(float *)&dword_1004F8438 < (float)(vmuls_lane_f32(v76, v53, 2)
                                                        + (float)((float)(v77.f32[0] * v53.f32[0])
                                                                + vmuls_lane_f32(v77.f32[1], *(float32x2_t *)v53.f32, 1))))
                  break;
                ++v45;

                v44 += 3;
                if (v41 == v45) {
                  goto LABEL_25;
                }
              }
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                sub_1000BBFA4(0, _swiftEmptyArrayStorage[2] + 1, 1);
              }
              unint64_t v55 = _swiftEmptyArrayStorage[2];
              unint64_t v54 = _swiftEmptyArrayStorage[3];
              if (v55 >= v54 >> 1) {
                sub_1000BBFA4((void *)(v54 > 1), v55 + 1, 1);
              }
              _swiftEmptyArrayStorage[2] = v55 + 1;
              long long v56 = &_swiftEmptyArrayStorage[6 * v55];
              v56[4] = v49;
              unint64_t v42 = v45 + 1;
              *((_OWORD *)v56 + 3) = v75;
              *((_OWORD *)v56 + 4) = v74;
              float32x4_t v43 = v29 + 8;
            }
            while (v41 - 1 != v45);
          }
LABEL_25:
          swift_bridgeObjectRelease();
          uint64_t v57 = _swiftEmptyArrayStorage[2];
          swift_release();
          if (v57)
          {
            ObjectType = v63;
            uint64_t v30 = v71;
          }
          else
          {
            uint64_t v30 = v71;
            id v58 = v71;
            ObjectType = v63;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              BOOL v29 = sub_10006F1B0(0, v29[2] + 1, 1, v29);
            }
            unint64_t v60 = v29[2];
            unint64_t v59 = v29[3];
            if (v60 >= v59 >> 1) {
              BOOL v29 = sub_10006F1B0((void *)(v59 > 1), v60 + 1, 1, v29);
            }
            v29[2] = v60 + 1;
            BOOL v61 = (int8x16_t *)&v29[6 * v60];
            v61[2].i64[0] = (uint64_t)v58;
            v61[3] = v68;
            v61[4] = (int8x16_t)v69;
          }
          unint64_t v28 = v70 + 1;

          uint64_t v27 = v62;
          if (v70 + 1 == v67)
          {
            swift_bridgeObjectRelease();
            return;
          }
        }
LABEL_34:
        __break(1u);
      }
    }
  }
}

id sub_10013E57C(unsigned __int8 a1)
{
  if (a1 > 2u) {
    uint64_t v1 = (SEL *)&selRef_whiteColor;
  }
  else {
    uint64_t v1 = (SEL *)off_10048F1B0[(char)a1];
  }
  id v2 = [self *v1];

  return v2;
}

void sub_10013E5E8(uint64_t a1)
{
}

void sub_10013E5F0(uint64_t a1)
{
}

id sub_10013E5F8(uint64_t a1)
{
  unint64_t v1 = *(char *)(a1 + 48);
  if (v1 > 6) {
    id v2 = (SEL *)&selRef_redColor;
  }
  else {
    id v2 = (SEL *)off_10048F1C8[v1];
  }
  id v3 = [self *v2];

  return v3;
}

uint64_t sub_10013E660(uint64_t a1)
{
  uint64_t v2 = sub_100012894(&qword_1004C9B20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10013E6C0(void *a1)
{
  sub_1001337F0(a1, v1);
}

uint64_t sub_10013E6C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10013E728(void *a1, uint64_t a2, __n128 a3, __n128 a4, float32x4_t a5, float32x4_t a6)
{
  uint64_t v7 = v6;
  *(float32x4_t *)uint64_t v86 = a6;
  float32x4_t v85 = a5;
  __n128 v84 = a4;
  __n128 v83 = a3;
  uint64_t v10 = sub_100012894(&qword_1004CCE78);
  __chkstk_darwin(v10 - 8);
  float32x4_t v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64x2_t v13 = (int *)type metadata accessor for MetricsManager.EdgeGuideMetric(0);
  uint64_t v14 = *((void *)v13 - 1);
  __chkstk_darwin(v13);
  float32x2_t v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  float32x4_t v17 = (unint64_t *)(a2 + direct field offset for WorldEdge.edgePlanesMetrics);
  uint64_t result = swift_beginAccess();
  unint64_t v19 = *v17;
  if ((*v17 & 0xFF0000) != 0x30000)
  {
    uint64_t v75 = v14;
    float v76 = v12;
    uint64_t v77 = v7;
    int v20 = *((_DWORD *)v17 + 2);
    unint64_t v74 = HIDWORD(v19);
    float32x4_t v21 = *(void (**)(void))((swift_isaMask & *a1) + 0x2A0);
    v82.i64[0] = (swift_isaMask & *a1) + 672;
    *(double *)v22.i64 = ((double (*)(uint64_t))v21)(result);
    float32x4_t v81 = v22;
    float32x4_t v80 = v23;
    long long v79 = v24;
    long long v78 = v25;
    float v26 = *(void (**)(void))((swift_isaMask & *a1) + 0x2A8);
    v26();
    slerp(transform1:transform2:percent:)();
    simd_float4x4.position.getter();
    float32x4_t v81 = v27;
    simd_float4x4.position.getter();
    float32x4_t v29 = vsubq_f32(v28, v81);
    float32x4_t v85 = v29;
    v29.i32[3] = 0;
    *(float32x4_t *)uint64_t v86 = v29;
    uint64_t v30 = (float32x4_t **)(a2 + direct field offset for WorldEdge.backingPlanes);
    swift_beginAccess();
    float32x4_t v31 = *(float32x4_t *)v86;
    if ((*v30)[1].i64[0]) {
      float32x4_t v31 = (*v30)[3];
    }
    int32x4_t v32 = (int32x4_t)vmulq_f32(v31, v31);
    v32.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v32, 2), vadd_f32(*(float32x2_t *)v32.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v32.i8, 1))).u32[0];
    float32x2_t v33 = vrsqrte_f32((float32x2_t)v32.u32[0]);
    float32x2_t v34 = vmul_f32(v33, vrsqrts_f32((float32x2_t)v32.u32[0], vmul_f32(v33, v33)));
    float32x4_t v35 = vmulq_n_f32(v31, vmul_f32(v34, vrsqrts_f32((float32x2_t)v32.u32[0], vmul_f32(v34, v34))).f32[0]);
    int32x4_t v36 = (int32x4_t)vmulq_f32(*(float32x4_t *)v86, *(float32x4_t *)v86);
    v36.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v36, 2), vadd_f32(*(float32x2_t *)v36.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v36.i8, 1))).u32[0];
    float32x2_t v37 = vrsqrte_f32((float32x2_t)v36.u32[0]);
    float32x2_t v38 = vmul_f32(v37, vrsqrts_f32((float32x2_t)v36.u32[0], vmul_f32(v37, v37)));
    *(float32x4_t *)uint64_t v86 = vmulq_n_f32(*(float32x4_t *)v86, vmul_f32(v38, vrsqrts_f32((float32x2_t)v36.u32[0], vmul_f32(v38, v38))).f32[0]);
    float32x4_t v39 = vmulq_f32(v35, *(float32x4_t *)v86);
    float v40 = acosf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v39, 2), vaddq_f32(v39, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v39.f32, 1))).f32[0])* 57.296;
    float v41 = *(float *)Float.piDiv2.unsafeMutableAddressor();
    float32x4_t v42 = vmulq_f32(*(float32x4_t *)v86, *(float32x4_t *)SIMD3<>.up.unsafeMutableAddressor());
    float v43 = (float)(v41
                - fabsf(acosf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v42, 2), vaddq_f32(v42, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v42.f32, 1))).f32[0])))* 57.296;
    uint64_t v44 = (swift_isaMask & *a1) + 184;
    v86[0] = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8);
    v84.n128_u64[0] = v44;
    v83.n128_u64[0] = v86[0]();
    v81.i64[0] = v45;
    v21();
    uint64_t v46 = simd_float4x4.position.getter();
    float32x4_t v82 = v47;
    ((void (*)(uint64_t))v26)(v46);
    simd_float4x4.position.getter();
    float32x4_t v80 = v48;
    id v49 = (unsigned char *)(a2 + direct field offset for WorldEdge.type);
    swift_beginAccess();
    unint64_t v50 = 0xE500000000000000;
    uint64_t v51 = 0x6666696C63;
    switch(*v49)
    {
      case 1:
        unint64_t v50 = 0xE400000000000000;
        uint64_t v51 = 1684828006;
        goto LABEL_8;
      case 2:
        unint64_t v50 = 0xE600000000000000;
        uint64_t v51 = 0x72616E616C70;
        goto LABEL_8;
      case 3:
        unint64_t v50 = 0xE200000000000000;
        uint64_t v51 = 30323;
        goto LABEL_8;
      case 4:
        goto LABEL_12;
      default:
LABEL_8:
        float32x4_t v52 = vsubq_f32(v82, v80);
        float32x4_t v53 = vmulq_f32(v52, v52);
        float32x4_t v54 = vmulq_f32(v85, v85);
        float v55 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v53, 2), vaddq_f32(v53, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v53.f32, 1))).f32[0]);
        float v56 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v54, 2), vaddq_f32(v54, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v54.f32, 1))).f32[0]);
        Swift::String v57 = EdgePlanesMetrics.metricDescriptionForBestPlaneType()();
        Swift::String v58 = EdgePlanesMetrics.metricDescriptionForOtherPlaneType()();
        Date.init()();
        unint64_t v59 = &v16[v13[17]];
        uint64_t v60 = type metadata accessor for Date();
        uint64_t v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v59, 1, 1, v60);
        uint64_t v62 = v81.i64[0];
        *(void *)float32x2_t v16 = v83.n128_u64[0];
        *((void *)v16 + 1) = v62;
        *((float *)v16 + 4) = v55;
        *((float *)v16 + 5) = v40;
        *((float *)v16 + 6) = v56;
        *((void *)v16 + 4) = v51;
        *((void *)v16 + 5) = v50;
        *((float *)v16 + 12) = v43;
        *((_DWORD *)v16 + 13) = v74;
        *(Swift::String *)(v16 + 56) = v57;
        *((_DWORD *)v16 + 18) = v20;
        *((Swift::String *)v16 + 5) = v58;
        *((_WORD *)v16 + 48) = 0;
        char v63 = &v16[v13[18]];
        *(void *)char v63 = 0;
        *((void *)v63 + 1) = 0;
        v63[16] = 1;
        float32x4_t v64 = &v16[v13[19]];
        *(void *)float32x4_t v64 = 0;
        *((void *)v64 + 1) = 0;
        v64[16] = 1;
        uint64_t v65 = ((uint64_t (*)(uint64_t))v86[0])(v61);
        uint64_t v67 = v66;
        uint64_t v68 = (uint64_t)v76;
        sub_10014C440((uint64_t)v16, (uint64_t)v76, type metadata accessor for MetricsManager.EdgeGuideMetric);
        (*(void (**)(uint64_t, void, uint64_t, int *))(v75 + 56))(v68, 0, 1, v13);
        uint64_t v69 = v77;
        swift_beginAccess();
        sub_100141F0C(v68, v65, v67);
        swift_endAccess();
        sub_10014C3E0((uint64_t)v16, type metadata accessor for MetricsManager.EdgeGuideMetric);
        uint64_t v70 = v69 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
        uint64_t result = swift_beginAccess();
        uint64_t v71 = *(void *)(v70 + 80);
        BOOL v72 = __OFADD__(v71, 1);
        uint64_t v73 = v71 + 1;
        if (v72)
        {
          __break(1u);
LABEL_12:
          __break(1u);
          JUMPOUT(0x10013EE48);
        }
        *(void *)(v70 + 80) = v73;
        break;
    }
  }
  return result;
}

uint64_t sub_10013EE5C(void *a1, uint64_t a2, __n128 a3, __n128 a4, float32x4_t a5, float32x4_t a6)
{
  uint64_t v7 = v6;
  float32x4_t v85 = a6;
  float32x4_t v84 = a5;
  __n128 v83 = a4;
  __n128 v82 = a3;
  uint64_t v10 = sub_100012894(&qword_1004CCE80);
  __chkstk_darwin(v10 - 8);
  float32x4_t v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64x2_t v13 = (int *)type metadata accessor for MetricsManager.SurfaceVectorGuideMetric(0);
  uint64_t v14 = *((void *)v13 - 1);
  __chkstk_darwin(v13);
  float32x2_t v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  float32x4_t v17 = (unint64_t *)(a2 + direct field offset for WorldEdge.edgePlanesMetrics);
  uint64_t result = swift_beginAccess();
  unint64_t v19 = *v17;
  if ((*v17 & 0xFF0000) != 0x30000)
  {
    uint64_t v79 = v14;
    float32x4_t v80 = v12;
    uint64_t v81 = v7;
    int v20 = *((_DWORD *)v17 + 2);
    unint64_t v78 = HIDWORD(v19);
    uint64_t v21 = simd_float4x4.position.getter();
    float32x4_t v85 = v22;
    uint64_t v23 = (swift_isaMask & *a1) + 672;
    long long v24 = *(void (**)(void))((swift_isaMask & *a1) + 0x2A0);
    ((void (*)(uint64_t))v24)(v21);
    simd_float4x4.position.getter();
    float32x4_t v26 = vsubq_f32(v85, v25);
    v26.i32[3] = 0;
    float32x4_t v84 = v26;
    float32x4_t v27 = (float32x4_t **)(a2 + direct field offset for WorldEdge.backingPlanes);
    swift_beginAccess();
    float32x4_t v28 = v84;
    if ((*v27)[1].i64[0]) {
      float32x4_t v28 = (*v27)[3];
    }
    int32x4_t v29 = (int32x4_t)vmulq_f32(v28, v28);
    v29.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v29, 2), vadd_f32(*(float32x2_t *)v29.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v29.i8, 1))).u32[0];
    float32x2_t v30 = vrsqrte_f32((float32x2_t)v29.u32[0]);
    float32x2_t v31 = vmul_f32(v30, vrsqrts_f32((float32x2_t)v29.u32[0], vmul_f32(v30, v30)));
    float32x4_t v32 = vmulq_n_f32(v28, vmul_f32(v31, vrsqrts_f32((float32x2_t)v29.u32[0], vmul_f32(v31, v31))).f32[0]);
    int32x4_t v33 = (int32x4_t)vmulq_f32(v84, v84);
    v33.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v33, 2), vadd_f32(*(float32x2_t *)v33.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v33.i8, 1))).u32[0];
    float32x2_t v34 = vrsqrte_f32((float32x2_t)v33.u32[0]);
    float32x2_t v35 = vmul_f32(v34, vrsqrts_f32((float32x2_t)v33.u32[0], vmul_f32(v34, v34)));
    float32x4_t v36 = vmulq_f32(v32, vmulq_n_f32(v84, vmul_f32(v35, vrsqrts_f32((float32x2_t)v33.u32[0], vmul_f32(v35, v35))).f32[0]));
    float v37 = acosf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v36, 2), vaddq_f32(v36, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v36.f32, 1))).f32[0])* 57.296;
    uint64_t v38 = (swift_isaMask & *a1) + 184;
    v82.n128_u64[0] = *(void *)((swift_isaMask & *a1) + 0xB8);
    uint64_t v77 = v38;
    uint64_t v76 = ((uint64_t (*)(void))v82.n128_u64[0])();
    uint64_t v75 = v39;
    v24();
    uint64_t v40 = simd_float4x4.position.getter();
    float32x4_t v74 = v41;
    (*(void (**)(uint64_t))((swift_isaMask & *a1) + 0x2A8))(v40);
    uint64_t v42 = simd_float4x4.position.getter();
    float32x4_t v73 = v43;
    v84.i64[0] = v23;
    v83.n128_u64[0] = (unint64_t)v24;
    ((void (*)(uint64_t))v24)(v42);
    simd_float4x4.position.getter();
    float32x4_t v72 = v44;
    uint64_t v45 = (unsigned char *)(a2 + direct field offset for WorldEdge.type);
    swift_beginAccess();
    unint64_t v46 = 0xE500000000000000;
    uint64_t v47 = 0x6666696C63;
    switch(*v45)
    {
      case 1:
        unint64_t v46 = 0xE400000000000000;
        uint64_t v47 = 1684828006;
        goto LABEL_8;
      case 2:
        unint64_t v46 = 0xE600000000000000;
        uint64_t v47 = 0x72616E616C70;
        goto LABEL_8;
      case 3:
        unint64_t v46 = 0xE200000000000000;
        uint64_t v47 = 30323;
        goto LABEL_8;
      case 4:
        goto LABEL_12;
      default:
LABEL_8:
        float32x4_t v48 = vsubq_f32(v74, v73);
        float32x4_t v49 = vmulq_f32(v48, v48);
        float32x4_t v50 = vsubq_f32(v85, v72);
        float32x4_t v51 = vmulq_f32(v50, v50);
        float v52 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v49, 2), vaddq_f32(v49, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v49.f32, 1))).f32[0]);
        float v53 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v51, 2), vaddq_f32(v51, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v51.f32, 1))).f32[0]);
        Swift::String v54 = EdgePlanesMetrics.metricDescriptionForBestPlaneType()();
        Swift::String v55 = EdgePlanesMetrics.metricDescriptionForOtherPlaneType()();
        Date.init()();
        float v56 = &v16[v13[15]];
        uint64_t v57 = type metadata accessor for Date();
        uint64_t v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 1, 1, v57);
        ((void (*)(uint64_t))v83.n128_u64[0])(v58);
        uint64_t v59 = simd_float4x4.position.getter();
        uint64_t v60 = v75;
        *(void *)float32x2_t v16 = v76;
        *((void *)v16 + 1) = v60;
        *((float *)v16 + 4) = v52;
        *((float *)v16 + 5) = v37;
        *((float *)v16 + 6) = v53;
        *((void *)v16 + 4) = v47;
        *((void *)v16 + 5) = v46;
        *((_DWORD *)v16 + 12) = v78;
        *(Swift::String *)(v16 + 56) = v54;
        *((_DWORD *)v16 + 18) = v20;
        *((Swift::String *)v16 + 5) = v55;
        v16[96] = 0;
        *(_OWORD *)&v16[v13[16]] = v61;
        uint64_t v62 = &v16[v13[17]];
        *(void *)uint64_t v62 = 0;
        *((void *)v62 + 1) = 0;
        v62[16] = 1;
        uint64_t v63 = ((uint64_t (*)(uint64_t))v82.n128_u64[0])(v59);
        uint64_t v65 = v64;
        uint64_t v66 = (uint64_t)v80;
        sub_10014C440((uint64_t)v16, (uint64_t)v80, type metadata accessor for MetricsManager.SurfaceVectorGuideMetric);
        (*(void (**)(uint64_t, void, uint64_t, int *))(v79 + 56))(v66, 0, 1, v13);
        uint64_t v67 = v81;
        swift_beginAccess();
        sub_1001420DC(v66, v63, v65);
        swift_endAccess();
        sub_10014C3E0((uint64_t)v16, type metadata accessor for MetricsManager.SurfaceVectorGuideMetric);
        uint64_t v68 = v67 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
        uint64_t result = swift_beginAccess();
        uint64_t v69 = *(void *)(v68 + 80);
        BOOL v70 = __OFADD__(v69, 1);
        uint64_t v71 = v69 + 1;
        if (v70)
        {
          __break(1u);
LABEL_12:
          __break(1u);
          JUMPOUT(0x10013F514);
        }
        *(void *)(v68 + 80) = v71;
        break;
    }
  }
  return result;
}

uint64_t sub_10013F528(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100012894(&qword_1004CCE58);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v30 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v29 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 8;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v29) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v30 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v29) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v30 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v29) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v30 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v29) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v30 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    float32x4_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_10002B8B4(*(void *)(a1 + 56) + 40 * v12, (uint64_t)v37);
    *(void *)&long long v36 = v19;
    *((void *)&v36 + 1) = v18;
    long long v33 = v36;
    v34[0] = v37[0];
    v34[1] = v37[1];
    uint64_t v35 = v38;
    swift_bridgeObjectRetain();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    sub_100021C48(v34, (uint64_t)v31);
    sub_100012894(&qword_1004CCE60);
    sub_10001C99C(0, (unint64_t *)&qword_1004C4568);
    swift_dynamicCast();
    uint64_t v21 = v32;
    uint64_t result = NSObject._rawHashValue(seed:)(v2[5]);
    uint64_t v22 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~v6[v23 >> 6]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v23) & ~v6[v23 >> 6])) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = v6[v24];
      }
      while (v28 == -1);
      unint64_t v9 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)((char *)v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = 8 * v9;
    *(void *)(v2[6] + v10) = v20;
    *(void *)(v2[7] + v10) = v21;
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v29)
  {
LABEL_37:
    swift_release();
    sub_100027948();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v30 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v29) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v30 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_10013F8B4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100012894(&qword_1004CCE68);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v4) >> 6;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v6 << 6);
      int64_t v12 = v6;
    }
    else
    {
      int64_t v13 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_36;
      }
      if (v13 >= v26)
      {
LABEL_33:
        sub_100027948();
        return;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v13);
      int64_t v12 = v6 + 1;
      if (!v14)
      {
        int64_t v12 = v6 + 2;
        if (v6 + 2 >= v26) {
          goto LABEL_33;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v12);
        if (!v14)
        {
          int64_t v12 = v6 + 3;
          if (v6 + 3 >= v26) {
            goto LABEL_33;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v12);
          if (!v14)
          {
            int64_t v12 = v6 + 4;
            if (v6 + 4 >= v26) {
              goto LABEL_33;
            }
            unint64_t v14 = *(void *)(v27 + 8 * v12);
            if (!v14)
            {
              int64_t v15 = v6 + 5;
              if (v6 + 5 >= v26) {
                goto LABEL_33;
              }
              unint64_t v14 = *(void *)(v27 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  int64_t v12 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_37;
                  }
                  if (v12 >= v26) {
                    goto LABEL_33;
                  }
                  unint64_t v14 = *(void *)(v27 + 8 * v12);
                  ++v15;
                  if (v14) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v12 = v6 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v10 = (v14 - 1) & v14;
      unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    int64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    sub_10002B8B4(*(void *)(a1 + 56) + 40 * v11, (uint64_t)v31);
    v30[0] = v18;
    v30[1] = v17;
    sub_10002B8B4((uint64_t)v31, (uint64_t)v29);
    swift_bridgeObjectRetain_n();
    sub_10002B9C0((uint64_t)v30, &qword_1004CCE70);
    sub_100012894(&qword_1004CCE60);
    sub_10001C99C(0, (unint64_t *)&qword_1004C4568);
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();

      sub_100027948();
      swift_release();
      return;
    }
    unint64_t v19 = sub_1000E20D4(v18, v17);
    unint64_t v20 = v19;
    if (v21)
    {
      uint64_t v7 = (uint64_t *)(v2[6] + 16 * v19);
      swift_bridgeObjectRelease();
      *uint64_t v7 = v18;
      v7[1] = v17;
      uint64_t v8 = v2[7];
      uint64_t v9 = 8 * v20;

      *(void *)(v8 + v9) = v28;
      goto LABEL_8;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v19;
    uint64_t v22 = (uint64_t *)(v2[6] + 16 * v19);
    *uint64_t v22 = v18;
    v22[1] = v17;
    *(void *)(v2[7] + 8 * v19) = v28;
    uint64_t v23 = v2[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_35;
    }
    v2[2] = v25;
LABEL_8:
    int64_t v6 = v12;
    unint64_t v5 = v10;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

Class sub_10013FC14(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_10001C99C(0, (unint64_t *)&qword_1004C4568);
    v4.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.Class isa = 0;
  }

  return v4.super.isa;
}

void sub_10013FCB0()
{
  uint64_t v1 = type metadata accessor for AppSession();
  uint64_t v2 = (int *)(v1 - 8);
  __chkstk_darwin(v1);
  NSDictionary v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v4 + 58) = 0u;
  *((_OWORD *)v4 + 2) = 0u;
  *((_OWORD *)v4 + 3) = 0u;
  *(_OWORD *)NSDictionary v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_OWORD *)v4 + 5) = 0u;
  *((_OWORD *)v4 + 6) = 0u;
  *((CFTimeInterval *)v4 + 14) = CACurrentMediaTime();
  *((_WORD *)v4 + 60) = 1;
  v4[122] = 0;
  unint64_t v5 = &v4[v2[25]];
  uint64_t v6 = type metadata accessor for ARCamera.TrackingState();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = v2[26];
  *(CFTimeInterval *)&v4[v7] = CACurrentMediaTime();
  v4[v2[27]] = 0;
  uint64_t v8 = v0 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  swift_beginAccess();
  sub_10014CD14((uint64_t)v4, v8);
  swift_endAccess();
  id v9 = [objc_allocWithZone((Class)SBSExternalDisplayService) init];
  aBlock[4] = sub_10014CD78;
  uint64_t v12 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10014676C;
  aBlock[3] = &unk_10048F3E0;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v9 getConnectedDisplayInfoWithCompletionHandler:v10];
  _Block_release(v10);
}

uint64_t sub_10013FE90()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100012894(&qword_1004CCE88);
  __chkstk_darwin(v2 - 8);
  uint64_t v229 = (uint64_t)&v209 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100012894(&qword_1004CCE48);
  __chkstk_darwin(v4 - 8);
  uint64_t v228 = (uint64_t)&v209 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100012894(&qword_1004CCE80);
  __chkstk_darwin(v6 - 8);
  Swift::String v227 = (char *)&v209 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100012894(&qword_1004CCE78);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v209 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_100012894((uint64_t *)&unk_1004C68F0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v219 = (uint64_t)&v209 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  v220 = (char *)&v209 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v209 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v226 = (uint64_t)&v209 - v20;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v209 - v21;
  uint64_t v23 = type metadata accessor for Date();
  uint64_t v210 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  float v211 = (char *)&v209 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v218 = (char *)&v209 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v217 = (char *)&v209 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  id v216 = (char *)&v209 - v31;
  __chkstk_darwin(v30);
  id v215 = (char *)&v209 - v32;
  uint64_t v33 = type metadata accessor for AppSession();
  __chkstk_darwin(v33 - 8);
  uint64_t v35 = (char *)&v209 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v1 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  swift_beginAccess();
  sub_10014C440(v36, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for AppSession);
  sub_10002CD80();
  sub_10014C3E0((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for AppSession);
  float v37 = (uint64_t *)(v1 + OBJC_IVAR____TtC7Measure14MetricsManager_edgeGuideMetrics);
  swift_beginAccess();
  uint64_t v38 = swift_bridgeObjectRetain();
  uint64_t v39 = sub_10007C028(v38);
  swift_bridgeObjectRelease();
  int64_t v241 = (int64_t)v39;
  uint64_t v242 = v23;
  uint64_t v40 = v39[2];
  uint64_t v209 = v1;
  unint64_t v240 = v18;
  if (v40)
  {
    uint64_t v41 = type metadata accessor for MetricsManager.EdgeGuideMetric(0);
    uint64_t v42 = *(void *)(v41 - 8);
    unint64_t v43 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    float32x4_t v44 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v42 + 72);
    float v212 = (void (**)(char *, uint64_t))(v210 + 8);
    uint64_t v213 = (void (**)(char *, uint64_t, uint64_t))(v210 + 32);
    id v221 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56);
    Swift::String v222 = (unsigned int (**)(char *, uint64_t, uint64_t))(v210 + 48);
    swift_retain();
    uint64_t v224 = v22;
    v225 = v10;
    v214 = v37;
    Swift::String v223 = v44;
    do
    {
      uint64_t v239 = v40;
      unint64_t v233 = *(unsigned int *)(v241 + v43 + 24);
      unint64_t v231 = *(unsigned int *)(v241 + v43 + 16);
      float v232 = (void (**)(char *, uint64_t, uint64_t))*(unsigned int *)(v241 + v43 + 20);
      uint64_t v230 = *(unsigned int *)(v241 + v43 + 48);
      unint64_t v237 = *(unsigned int *)(v241 + v43 + 52);
      unint64_t v235 = *(unsigned int *)(v241 + v43 + 72);
      uint64_t v47 = *(void *)(v241 + v43 + 64);
      Swift::String v236 = *(uint64_t **)(v241 + v43 + 56);
      uint64_t v48 = *(void *)(v241 + v43 + 88);
      Swift::String v238 = *(int **)(v241 + v43 + 80);
      uint64_t v49 = v241 + v43 + *(int *)(v41 + 68);
      uint64_t v50 = *(void *)(v241 + v43 + 40);
      id v234 = *(void (***)(uint64_t, uint64_t, uint64_t, int *))(v241 + v43 + 32);
      sub_1000DB36C(v49, (uint64_t)v22);
      float32x4_t v51 = v22;
      uint64_t v52 = v41;
      uint64_t v53 = (uint64_t)v22;
      uint64_t v54 = v242;
      if ((*v222)(v51, 1, v242) == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10002B9C0(v53, (uint64_t *)&unk_1004C68F0);
        float v55 = 0.0;
      }
      else
      {
        float v56 = v215;
        (*v213)(v215, v53, v54);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        Date.timeIntervalSince(_:)();
        float v55 = v57;
        uint64_t v58 = v56;
        float v37 = v214;
        (*v212)(v58, v54);
      }
      uint64_t v41 = v52;
      uint64_t v59 = *(int *)(v52 + 72);
      uint64_t v60 = (char *)(v241 + v43);
      long long v61 = (float32x2_t *)(v241 + v43 + v59);
      float v62 = 0.0;
      uint64_t v63 = v223;
      if ((v61[2].i8[0] & 1) == 0)
      {
        uint64_t v64 = *(int *)(v41 + 76);
        if ((v60[v64 + 16] & 1) == 0)
        {
          v65.i64[0] = *(void *)&v60[v64];
          *(float32x2_t *)v66.f32 = *v61;
          v66.i64[1] = *(void *)(v241 + v59 + v43 + 8);
          v65.i64[1] = *(void *)(v241 + v64 + v43 + 8);
          float32x4_t v67 = vsubq_f32(v66, v65);
          float32x2_t v68 = vsub_f32(*v61, *(float32x2_t *)&v60[v64]);
          float v62 = sqrtf(COERCE_FLOAT(vmulq_f32(v67, v67).i32[2]) + vaddv_f32(vmul_f32(v68, v68)));
        }
      }
      __int16 v69 = v60[96];
      int v70 = v60[97];
      v258[0] = v231 | (v230 << 32);
      v258[1] = v233 | ((void)v232 << 32);
      v258[2] = v237 | (v235 << 32);
      v258[3] = v236;
      v258[4] = v47;
      if (v70) {
        __int16 v71 = 256;
      }
      else {
        __int16 v71 = 0;
      }
      v258[5] = v238;
      v258[6] = v48;
      v258[7] = v234;
      v258[8] = v50;
      float v259 = v55;
      float v260 = v62;
      __int16 v261 = v71 | v69;
      sub_10014BE84((uint64_t)v258);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v72 = *(void *)v60;
      uint64_t v73 = *((void *)v60 + 1);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v74 = sub_1000E20D4(v72, v73);
      LOBYTE(v72) = v75;
      swift_bridgeObjectRelease();
      if (v72)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v77 = *v37;
        v252[0] = *v37;
        uint64_t *v37 = 0x8000000000000000;
        uint64_t v22 = v224;
        uint64_t v46 = (uint64_t)v225;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000D71E8();
          uint64_t v77 = v252[0];
        }
        swift_bridgeObjectRelease();
        sub_10014C378(*(void *)(v77 + 56) + v74 * (void)v63, v46, type metadata accessor for MetricsManager.EdgeGuideMetric);
        sub_1000A8E2C(v74, v77);
        uint64_t *v37 = v77;
        swift_bridgeObjectRelease();
        uint64_t v45 = 0;
      }
      else
      {
        uint64_t v45 = 1;
        uint64_t v22 = v224;
        uint64_t v46 = (uint64_t)v225;
      }
      (*v221)(v46, v45, 1, v41);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_10002B9C0(v46, &qword_1004CCE78);
      v43 += (unint64_t)v63;
      uint64_t v40 = v239 - 1;
    }
    while (v239 != 1);
    swift_release();
    uint64_t v1 = v209;
    uint64_t v18 = v240;
  }
  swift_release();
  unint64_t v78 = (uint64_t *)(v1 + OBJC_IVAR____TtC7Measure14MetricsManager_surfaceVectorGuideMetrics);
  swift_beginAccess();
  uint64_t v79 = swift_bridgeObjectRetain();
  float32x4_t v80 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10007BFF0(v79);
  swift_bridgeObjectRelease();
  uint64_t v81 = v80[2];
  if (v81)
  {
    uint64_t v82 = type metadata accessor for MetricsManager.SurfaceVectorGuideMetric(0);
    uint64_t v83 = *(void *)(v82 - 8);
    unint64_t v84 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
    float32x4_t v85 = *(char **)(v83 + 72);
    id v221 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v210 + 32);
    id v215 = (char *)(v210 + 8);
    Swift::String v222 = (unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 56);
    Swift::String v223 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v210 + 48);
    swift_retain();
    uint64_t v230 = v82;
    unint64_t v231 = (unint64_t)v80;
    uint64_t v224 = v85;
    v225 = v78;
    do
    {
      int64_t v241 = (int64_t)v81;
      unint64_t v233 = *(unsigned int *)((char *)v80 + v84 + 24);
      float v232 = (void (**)(char *, uint64_t, uint64_t))*(unsigned int *)((char *)v80 + v84 + 16);
      unint64_t v235 = *(unsigned int *)((char *)v80 + v84 + 20);
      id v234 = (void (**)(uint64_t, uint64_t, uint64_t, int *))*(unsigned int *)((char *)v80 + v84 + 48);
      uint64_t v239 = *(unsigned int *)((char *)v80 + v84 + 72);
      uint64_t v89 = *(int **)((char *)v80 + v84 + 56);
      uint64_t v90 = *(uint64_t *)((char *)v80 + v84 + 64);
      uint64_t v91 = *(uint64_t *)((char *)v80 + v84 + 88);
      unint64_t v237 = *(unint64_t *)((char *)v80 + v84 + 80);
      Swift::String v238 = v89;
      uint64_t v92 = (uint64_t)v80 + v84 + *(int *)(v82 + 60);
      uint64_t v93 = *(uint64_t *)((char *)v80 + v84 + 40);
      Swift::String v236 = *(uint64_t **)((char *)v80 + v84 + 32);
      uint64_t v94 = v226;
      sub_1000DB36C(v92, v226);
      uint64_t v95 = v242;
      if ((*v223)(v94, 1, v242) == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10002B9C0(v94, (uint64_t *)&unk_1004C68F0);
        float v96 = 0.0;
      }
      else
      {
        uint64_t v97 = v216;
        ((void (*)(char *, uint64_t, uint64_t))*v221)(v216, v94, v95);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        Date.timeIntervalSince(_:)();
        float v96 = v98;
        uint64_t v99 = v97;
        float32x4_t v80 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v231;
        (*(void (**)(char *, uint64_t))v215)(v99, v95);
      }
      uint64_t v100 = *(int *)(v82 + 68);
      uint64_t v101 = (char *)v80 + v84;
      float32x4_t v102 = (char *)v80 + v84 + v100;
      float v103 = 0.0;
      if ((v102[16] & 1) == 0)
      {
        int8x16_t v104 = (const double *)((char *)v80 + v100 + v84 + 8);
        uint64_t v106 = *(void *)v102;
        unsigned int v105 = *(void *)v102;
        float64x2_t v107 = vld1q_dup_f64(v104);
        uint64_t v108 = (float32x2_t *)&v101[*(int *)(v230 + 64)];
        float32x2_t v109 = vsub_f32(*v108, (float32x2_t)__PAIR64__(HIDWORD(v106), v105));
        float v103 = sqrtf((float)((float)(v108[1].f32[0] - *(float *)&v107.f64[1])* (float)(v108[1].f32[0] - *(float *)&v107.f64[1]))+ vaddv_f32(vmul_f32(v109, v109)));
      }
      __int16 v110 = v101[96];
      v254[0] = (unint64_t)v232 | (v233 << 32);
      v254[1] = v235 | ((void)v234 << 32);
      v254[2] = v239;
      v254[3] = v238;
      v254[4] = v90;
      v254[5] = v237;
      v254[6] = v91;
      v254[7] = v236;
      v254[8] = v93;
      float v255 = v96;
      float v256 = v103;
      __int16 v257 = v110 | 0x4000;
      sub_10014BE84((uint64_t)v254);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v111 = *(void *)v101;
      uint64_t v112 = *((void *)v101 + 1);
      int v113 = v225;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v114 = sub_1000E20D4(v111, v112);
      LOBYTE(v111) = v115;
      swift_bridgeObjectRelease();
      if (v111)
      {
        char v116 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v117 = *v113;
        uint64_t v245 = *v113;
        *int v113 = 0x8000000000000000;
        uint64_t v18 = v240;
        uint64_t v87 = (uint64_t)v227;
        uint64_t v88 = v224;
        if ((v116 & 1) == 0)
        {
          sub_1000D721C();
          uint64_t v117 = v245;
        }
        swift_bridgeObjectRelease();
        sub_10014C378(*(void *)(v117 + 56) + v114 * (void)v88, v87, type metadata accessor for MetricsManager.SurfaceVectorGuideMetric);
        sub_1000A8E44(v114, v117);
        *int v113 = v117;
        swift_bridgeObjectRelease();
        uint64_t v86 = 0;
      }
      else
      {
        uint64_t v86 = 1;
        uint64_t v18 = v240;
        uint64_t v87 = (uint64_t)v227;
        uint64_t v88 = v224;
      }
      uint64_t v82 = v230;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v222)(v87, v86, 1, v230);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_10002B9C0(v87, &qword_1004CCE80);
      v84 += (unint64_t)v88;
      uint64_t v81 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v241 - 1);
      float32x4_t v80 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v231;
    }
    while (v241 != 1);
    swift_release();
    uint64_t v1 = v209;
  }
  swift_release();
  unint64_t v118 = (uint64_t *)(v1 + OBJC_IVAR____TtC7Measure14MetricsManager_verticalGuideMetrics);
  swift_beginAccess();
  unint64_t v233 = (unint64_t)v118;
  uint64_t v119 = swift_bridgeObjectRetain();
  unint64_t v120 = sub_10007BFB8(v119);
  swift_bridgeObjectRelease();
  uint64_t v121 = v120[2];
  if (v121)
  {
    id v122 = (int *)type metadata accessor for MetricsManager.VerticalGuideMetric(0);
    uint64_t v123 = *((void *)v122 - 1);
    unint64_t v124 = (*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80);
    int8x16_t v125 = *(unsigned int (***)(uint64_t, uint64_t, void))(v123 + 72);
    unint64_t v231 = v210 + 8;
    float v232 = (void (**)(char *, uint64_t, uint64_t))(v210 + 32);
    unint64_t v235 = (unint64_t)v253;
    Swift::String v236 = (uint64_t *)(v210 + 48);
    id v234 = (void (**)(uint64_t, uint64_t, uint64_t, int *))(v123 + 56);
    swift_retain();
    unint64_t v126 = (uint64_t *)v233;
    unint64_t v237 = (unint64_t)v125;
    Swift::String v238 = v122;
    do
    {
      float32x2_t v130 = v120;
      uint64_t v239 = *(unsigned int *)((char *)v120 + v124 + 28);
      uint64_t v131 = *(unsigned int *)((char *)v120 + v124 + 20);
      int64_t v241 = *(unsigned int *)((char *)v120 + v124 + 16);
      sub_1000DB36C((uint64_t)v120 + v124 + v122[10], (uint64_t)v18);
      float32x4_t v132 = v18;
      uint64_t v133 = (uint64_t)v18;
      uint64_t v134 = v242;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))*v236)(v132, 1, v242) == 1)
      {
        sub_10002B9C0(v133, (uint64_t *)&unk_1004C68F0);
        float v135 = 0.0;
      }
      else
      {
        unsigned __int8 v136 = v217;
        (*v232)(v217, v133, v134);
        Date.timeIntervalSince(_:)();
        float v135 = v137;
        uint64_t v138 = v136;
        unint64_t v126 = (uint64_t *)v233;
        (*(void (**)(char *, uint64_t))v231)(v138, v134);
      }
      uint64_t v139 = v122[12];
      unint64_t v120 = v130;
      Swift::String v140 = (char *)v130 + v124;
      uint64_t v141 = (char *)v130 + v124 + v139;
      float v142 = 0.0;
      if ((v141[16] & 1) == 0)
      {
        uint64_t v143 = (const double *)((char *)v130 + v139 + v124 + 8);
        uint64_t v145 = *(void *)v141;
        unsigned int v144 = *(void *)v141;
        float64x2_t v146 = vld1q_dup_f64(v143);
        uint64_t v147 = (float32x2_t *)&v140[v122[11]];
        float32x2_t v148 = vsub_f32(*v147, (float32x2_t)__PAIR64__(HIDWORD(v145), v144));
        float v142 = sqrtf((float)((float)(v147[1].f32[0] - *(float *)&v146.f64[1])* (float)(v147[1].f32[0] - *(float *)&v146.f64[1]))+ vaddv_f32(vmul_f32(v148, v148)));
      }
      int v149 = v140[24];
      v252[0] = v239 | (v131 << 32);
      v252[1] = v241 | ((unint64_t)LODWORD(v135) << 32);
      BOOL v150 = v149 == 0;
      uint64_t v151 = &_mh_execute_header;
      if (v150) {
        uint64_t v151 = 0;
      }
      v252[2] = (unint64_t)v151 | LODWORD(v142);
      unint64_t v152 = v235;
      *(_OWORD *)unint64_t v235 = 0u;
      *(_OWORD *)(v152 + 16) = 0u;
      *(_OWORD *)(v152 + 32) = 0u;
      *(void *)(v152 + 48) = 0;
      v253[28] = 0x8000;
      sub_10014BE84((uint64_t)v252);
      uint64_t v154 = *(void *)v140;
      uint64_t v153 = *((void *)v140 + 1);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v155 = sub_1000E20D4(v154, v153);
      char v157 = v156;
      swift_bridgeObjectRelease();
      if (v157)
      {
        char v158 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v159 = *v126;
        uint64_t v244 = *v126;
        *unint64_t v126 = 0x8000000000000000;
        if ((v158 & 1) == 0)
        {
          sub_1000D829C();
          uint64_t v159 = v244;
        }
        swift_bridgeObjectRelease();
        unint64_t v129 = v237;
        uint64_t v128 = v228;
        sub_10014C378(*(void *)(v159 + 56) + v155 * v237, v228, type metadata accessor for MetricsManager.VerticalGuideMetric);
        sub_1000A9344(v155, v159);
        *unint64_t v126 = v159;
        swift_bridgeObjectRelease();
        uint64_t v127 = 0;
      }
      else
      {
        uint64_t v127 = 1;
        uint64_t v128 = v228;
        unint64_t v129 = v237;
      }
      id v122 = v238;
      (*v234)(v128, v127, 1, v238);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_10002B9C0(v128, &qword_1004CCE48);
      v124 += v129;
      --v121;
      uint64_t v18 = v240;
    }
    while (v121);
    swift_release();
    uint64_t v1 = v209;
  }
  swift_release();
  int8x16_t v160 = (uint64_t *)(v1 + OBJC_IVAR____TtC7Measure14MetricsManager_personHeightMetrics);
  swift_beginAccess();
  uint64_t v161 = swift_bridgeObjectRetain();
  int8x16_t v162 = sub_10007BF80(v161);
  swift_bridgeObjectRelease();
  int8x16_t v163 = (void (**)(uint64_t, uint64_t, uint64_t, int *))v162[2];
  if (v163)
  {
    uint64_t v164 = type metadata accessor for MetricsManager.PersonHeightMetric(0);
    uint64_t v165 = *(void *)(v164 - 8);
    Swift::String v238 = (int *)((char *)v162
                 + ((*(unsigned __int8 *)(v165 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v165 + 80)));
    unint64_t v240 = *(char **)(v165 + 72);
    unint64_t v237 = v210 + 48;
    float v232 = (void (**)(char *, uint64_t, uint64_t))(v210 + 8);
    unint64_t v233 = v210 + 32;
    float32x4_t v166 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v165 + 56);
    uint64_t v230 = (uint64_t)v162;
    swift_retain();
    int64_t v167 = 0;
    uint64_t v168 = (uint64_t)v220;
    uint64_t v239 = v164;
    id v234 = v163;
    Swift::String v236 = v160;
    unint64_t v231 = (unint64_t)v166;
    do
    {
      int64_t v241 = v167;
      float32x4_t v171 = (char *)v238 + (void)v240 * v167;
      int v172 = v171[32];
      float v173 = sub_100145C3C();
      sub_1000DB36C((uint64_t)&v171[*(int *)(v164 + 44)], v168);
      Swift::String v174 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v237;
      uint64_t v175 = v164;
      uint64_t v176 = v242;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v237)(v168, 1, v242) == 1)
      {
        sub_10002B9C0(v168, (uint64_t *)&unk_1004C68F0);
        float v177 = 0.0;
        uint64_t v178 = v236;
      }
      else
      {
        LODWORD(v235) = v172;
        int v179 = *(void (**)(char *, uint64_t, uint64_t))v233;
        long long v180 = v218;
        (*(void (**)(char *, uint64_t, uint64_t))v233)(v218, v168, v176);
        uint64_t v181 = v219;
        sub_1000DB36C((uint64_t)&v171[*(int *)(v175 + 48)], v219);
        if (v174(v181, 1, v176) == 1)
        {
          ((void (*)(char *, uint64_t))*v232)(v180, v176);
          sub_10002B9C0(v181, (uint64_t *)&unk_1004C68F0);
          float v177 = 0.0;
        }
        else
        {
          Swift::String v182 = v211;
          v179(v211, v181, v176);
          Date.timeIntervalSince(_:)();
          float v177 = v183;
          Swift::String v184 = *v232;
          ((void (*)(char *, uint64_t))*v232)(v182, v176);
          ((void (*)(char *, uint64_t))v184)(v180, v176);
        }
        uint64_t v168 = (uint64_t)v220;
        int8x16_t v163 = v234;
        uint64_t v178 = v236;
        float32x4_t v166 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v231;
        LOBYTE(v172) = v235;
      }
      uint64_t v185 = *((void *)v171 + 3);
      uint64_t v164 = v239;
      Swift::String v186 = &v171[*(int *)(v239 + 52)];
      float v187 = *(float *)v186;
      if (v186[4]) {
        float v187 = 0.0;
      }
      uint64_t v188 = *((void *)v171 + 2);
      uint64_t v189 = *(void *)(v188 + 16);
      if (v189)
      {
        float v190 = *(float *)(v188 + 32);
        uint64_t v191 = v189 - 1;
        if (v191)
        {
          uint64_t v193 = 0;
          float v194 = *(float *)(v188 + 32);
          do
          {
            if (*(float *)(v188 + 36 + 4 * v193) < v194) {
              float v194 = *(float *)(v188 + 36 + 4 * v193);
            }
            ++v193;
          }
          while (v191 != v193);
          float v192 = vabds_f32(v187, v194);
          uint64_t v195 = (float *)(v188 + 36);
          do
          {
            float v196 = *v195++;
            float v197 = v196;
            if (v190 < v196) {
              float v190 = v197;
            }
            --v191;
          }
          while (v191);
        }
        else
        {
          float v192 = vabds_f32(v187, v190);
        }
      }
      else
      {
        float v192 = fabsf(v187);
        float v190 = 0.0;
      }
      float v198 = vabds_f32(v190, v187);
      double v199 = sub_10014587C();
      uint64_t v200 = *(void *)(*((void *)v171 + 2) + 16);
      LOBYTE(v245) = v172;
      *((float *)&v245 + 1) = v173;
      float v246 = v177;
      uint64_t v247 = v185;
      float v248 = v192;
      float v249 = v198;
      int v250 = LODWORD(v199);
      uint64_t v251 = v200;
      sub_10014C95C((long long *)&v245);
      uint64_t v202 = *(void *)v171;
      uint64_t v201 = *((void *)v171 + 1);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v203 = sub_1000E20D4(v202, v201);
      char v205 = v204;
      swift_bridgeObjectRelease();
      if (v205)
      {
        char v206 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v207 = *v178;
        uint64_t v243 = *v178;
        *uint64_t v178 = 0x8000000000000000;
        if ((v206 & 1) == 0)
        {
          sub_1000D7D10();
          uint64_t v207 = v243;
        }
        swift_bridgeObjectRelease();
        uint64_t v170 = v229;
        sub_10014C378(*(void *)(v207 + 56) + v203 * (void)v240, v229, type metadata accessor for MetricsManager.PersonHeightMetric);
        sub_1000A8E5C(v203, v207);
        *uint64_t v178 = v207;
        swift_bridgeObjectRelease();
        uint64_t v169 = 0;
      }
      else
      {
        uint64_t v169 = 1;
        uint64_t v170 = v229;
      }
      (*v166)(v170, v169, 1, v164);
      int64_t v167 = v241 + 1;
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_10002B9C0(v170, &qword_1004CCE88);
    }
    while ((void (**)(uint64_t, uint64_t, uint64_t, int *))v167 != v163);
    swift_release();
  }
  return swift_release();
}

uint64_t sub_100141398(void *a1, float a2, float a3, float a4)
{
  uint64_t v9 = sub_100012894((uint64_t *)&unk_1004C68F0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100012894(&qword_1004CCE88);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v41 = (uint64_t)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v39 - v15;
  uint64_t v17 = type metadata accessor for MetricsManager.PersonHeightMetric(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (float *)((char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xB8);
  uint64_t v39 = (swift_isaMask & *a1) + 184;
  uint64_t v40 = v22;
  uint64_t v23 = v22(v19);
  uint64_t v25 = v24;
  uint64_t v26 = (uint64_t *)(v4 + OBJC_IVAR____TtC7Measure14MetricsManager_personHeightMetrics);
  swift_beginAccess();
  uint64_t v27 = *v26;
  if (*(void *)(*v26 + 16) && (unint64_t v28 = sub_1000E20D4(v23, v25), (v29 & 1) != 0))
  {
    sub_10014C440(*(void *)(v27 + 56) + *(void *)(v18 + 72) * v28, (uint64_t)v16, type metadata accessor for MetricsManager.PersonHeightMetric);
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v30(v16, 0, 1, v17);
  }
  else
  {
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v30(v16, 1, 1, v17);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_10002B9C0((uint64_t)v16, &qword_1004CCE88);
    return swift_endAccess();
  }
  else
  {
    sub_10014C378((uint64_t)v16, (uint64_t)v21, type metadata accessor for MetricsManager.PersonHeightMetric);
    swift_endAccess();
    v21[6] = a3;
    v21[7] = a4;
    uint64_t v32 = (char *)v21 + *(int *)(v17 + 52);
    *(float *)uint64_t v32 = a2;
    v32[4] = 0;
    Date.init()();
    uint64_t v33 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v11, 0, 1, v33);
    uint64_t v34 = sub_100073BD8((uint64_t)v11, (uint64_t)v21 + *(int *)(v17 + 44), (uint64_t *)&unk_1004C68F0);
    *((unsigned char *)v21 + 32) = 1;
    uint64_t v35 = v40(v34);
    uint64_t v37 = v36;
    uint64_t v38 = v41;
    sub_10014C440((uint64_t)v21, v41, type metadata accessor for MetricsManager.PersonHeightMetric);
    v30((char *)v38, 0, 1, v17);
    swift_beginAccess();
    sub_1001422AC(v38, v35, v37);
    swift_endAccess();
    return sub_10014C3E0((uint64_t)v21, type metadata accessor for MetricsManager.PersonHeightMetric);
  }
}

uint64_t sub_1001417A8(void *a1, float a2)
{
  uint64_t v5 = sub_100012894((uint64_t *)&unk_1004C68F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100012894(&qword_1004CCE88);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v39 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = type metadata accessor for MetricsManager.PersonHeightMetric(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xB8);
  uint64_t v37 = (swift_isaMask & *a1) + 184;
  uint64_t v38 = v18;
  uint64_t v19 = v18(v15);
  uint64_t v21 = v20;
  uint64_t v22 = (uint64_t *)(v2 + OBJC_IVAR____TtC7Measure14MetricsManager_personHeightMetrics);
  swift_beginAccess();
  uint64_t v23 = *v22;
  if (*(void *)(*v22 + 16) && (unint64_t v24 = sub_1000E20D4(v19, v21), (v25 & 1) != 0))
  {
    sub_10014C440(*(void *)(v23 + 56) + *(void *)(v14 + 72) * v24, (uint64_t)v12, type metadata accessor for MetricsManager.PersonHeightMetric);
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v26(v12, 0, 1, v13);
  }
  else
  {
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v26(v12, 1, 1, v13);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10002B9C0((uint64_t)v12, &qword_1004CCE88);
    return swift_endAccess();
  }
  else
  {
    sub_10014C378((uint64_t)v12, (uint64_t)v17, type metadata accessor for MetricsManager.PersonHeightMetric);
    swift_endAccess();
    unint64_t v28 = (char *)*((void *)v17 + 2);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v28 = sub_10006E184(0, *((void *)v28 + 2) + 1, 1, v28);
    }
    unint64_t v30 = *((void *)v28 + 2);
    unint64_t v29 = *((void *)v28 + 3);
    if (v30 >= v29 >> 1) {
      unint64_t v28 = sub_10006E184((char *)(v29 > 1), v30 + 1, 1, v28);
    }
    *((void *)v28 + 2) = v30 + 1;
    *(float *)&v28[4 * v30 + 32] = a2;
    *((void *)v17 + 2) = v28;
    Date.init()();
    uint64_t v31 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v7, 0, 1, v31);
    uint64_t v32 = sub_100073BD8((uint64_t)v7, (uint64_t)&v17[*(int *)(v13 + 40)], (uint64_t *)&unk_1004C68F0);
    uint64_t v33 = v38(v32);
    uint64_t v35 = v34;
    uint64_t v36 = v39;
    sub_10014C440((uint64_t)v17, v39, type metadata accessor for MetricsManager.PersonHeightMetric);
    v26((char *)v36, 0, 1, v13);
    swift_beginAccess();
    sub_1001422AC(v36, v33, v35);
    swift_endAccess();
    return sub_10014C3E0((uint64_t)v17, type metadata accessor for MetricsManager.PersonHeightMetric);
  }
}

uint64_t sub_100141BFC(void *a1)
{
  uint64_t v2 = sub_100012894(&qword_1004CCE88);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (int *)type metadata accessor for MetricsManager.PersonHeightMetric(0);
  uint64_t v30 = *((void *)v5 - 1);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xB8);
  uint64_t v10 = v9(v6);
  uint64_t v28 = v11;
  uint64_t v29 = v10;
  uint64_t v12 = &v8[v5[9]];
  Date.init()();
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v14(v12, 0, 1, v13);
  v14(&v8[v5[10]], 1, 1, v13);
  v14(&v8[v5[11]], 1, 1, v13);
  uint64_t v15 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v14)(&v8[v5[12]], 1, 1, v13);
  uint64_t v16 = v28;
  *(void *)uint64_t v8 = v29;
  *((void *)v8 + 1) = v16;
  *((void *)v8 + 2) = _swiftEmptyArrayStorage;
  *((void *)v8 + 3) = 0;
  v8[32] = 0;
  uint64_t v17 = &v8[v5[13]];
  *(_DWORD *)uint64_t v17 = 0;
  v17[4] = 1;
  uint64_t v18 = v9(v15);
  uint64_t v20 = v19;
  sub_10014C440((uint64_t)v8, (uint64_t)v4, type metadata accessor for MetricsManager.PersonHeightMetric);
  (*(void (**)(char *, void, uint64_t, int *))(v30 + 56))(v4, 0, 1, v5);
  uint64_t v21 = v31;
  swift_beginAccess();
  sub_1001422AC((uint64_t)v4, v18, v20);
  swift_endAccess();
  sub_10014C3E0((uint64_t)v8, type metadata accessor for MetricsManager.PersonHeightMetric);
  uint64_t v22 = v21 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  uint64_t result = swift_beginAccess();
  uint64_t v24 = *(void *)(v22 + 96);
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25) {
    __break(1u);
  }
  else {
    *(void *)(v22 + 96) = v26;
  }
  return result;
}

uint64_t sub_100141F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100012894(&qword_1004CCE78);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MetricsManager.EdgeGuideMetric(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_10002B9C0(a1, &qword_1004CCE78);
    sub_1000A8530(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_10002B9C0((uint64_t)v10, &qword_1004CCE78);
  }
  else
  {
    sub_10014C378(a1, (uint64_t)v13, type metadata accessor for MetricsManager.EdgeGuideMetric);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_1000D4DC8((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001420DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100012894(&qword_1004CCE80);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MetricsManager.SurfaceVectorGuideMetric(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_10002B9C0(a1, &qword_1004CCE80);
    sub_1000A8584(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_10002B9C0((uint64_t)v10, &qword_1004CCE80);
  }
  else
  {
    sub_10014C378(a1, (uint64_t)v13, type metadata accessor for MetricsManager.SurfaceVectorGuideMetric);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_1000D4E10((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001422AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100012894(&qword_1004CCE88);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MetricsManager.PersonHeightMetric(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_10002B9C0(a1, &qword_1004CCE88);
    sub_1000A879C(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_10002B9C0((uint64_t)v10, &qword_1004CCE88);
  }
  else
  {
    sub_10014C378(a1, (uint64_t)v13, type metadata accessor for MetricsManager.PersonHeightMetric);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_1000D535C((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10014247C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100012894(&qword_1004CCE48);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MetricsManager.VerticalGuideMetric(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_10002B9C0(a1, &qword_1004CCE48);
    sub_1000A8930(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_10002B9C0((uint64_t)v10, &qword_1004CCE48);
  }
  else
  {
    sub_10014C378(a1, (uint64_t)v13, type metadata accessor for MetricsManager.VerticalGuideMetric);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_1000D56F8((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10014264C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ARCamera.TrackingState();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100012894(&qword_1004C4750);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  CFTimeInterval v10 = CACurrentMediaTime();
  if (*(unsigned char *)(v1 + 16) == 1)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
    uint64_t v11 = v1 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
    swift_beginAccess();
    uint64_t v12 = type metadata accessor for AppSession();
    sub_100073BD8((uint64_t)v9, v11 + *(int *)(v12 + 92), &qword_1004C4750);
    *(CFTimeInterval *)(v11 + *(int *)(v12 + 96)) = v10;
  }
  else
  {
    uint64_t v13 = v1 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
    char v14 = 1;
    swift_beginAccess();
    if ((*(unsigned char *)(v13 + 121) & 1) == 0) {
      char v14 = *(unsigned char *)(v13 + 120) ^ 1;
    }
    sub_10014C440(a1, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for ARCamera.TrackingState);
    uint64_t v15 = type metadata accessor for ARCamera.TrackingState.Reason();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v6, 2, v15) == 2
      && (v14 & 1) == 0)
    {
      *(unsigned char *)(v13 + 121) = 1;
    }
    sub_10014C3E0((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for ARCamera.TrackingState);
    sub_10014C440(a1, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for ARCamera.TrackingState);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
    swift_beginAccess();
    uint64_t v16 = type metadata accessor for AppSession();
    sub_100073BD8((uint64_t)v9, v13 + *(int *)(v16 + 92), &qword_1004C4750);
    *(CFTimeInterval *)(v13 + *(int *)(v16 + 96)) = v10;
  }
  return swift_endAccess();
}

uint64_t sub_100142924(unint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(v3 + 73) & 1) == 0)
  {
    if (a1 >> 62) {
      goto LABEL_21;
    }
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v7 = i + 1;
          if (__OFADD__(i, 1)) {
            break;
          }
          self;
          if (swift_dynamicCastObjCClass())
          {
            swift_bridgeObjectRelease();
            uint64_t result = swift_unknownObjectRelease();
            goto LABEL_17;
          }
          swift_unknownObjectRelease();
          if (v7 == v5) {
            return swift_bridgeObjectRelease();
          }
        }
        __break(1u);
      }
      else
      {
        for (uint64_t j = 0; ; ++j)
        {
          uint64_t v9 = j + 1;
          if (__OFADD__(j, 1)) {
            break;
          }
          self;
          if (swift_dynamicCastObjCClass())
          {
            uint64_t result = swift_bridgeObjectRelease();
LABEL_17:
            *(unsigned char *)(v3 + 73) = 1;
            return result;
          }
          if (v9 == v5) {
            return swift_bridgeObjectRelease();
          }
        }
      }
      __break(1u);
LABEL_21:
      swift_bridgeObjectRetain();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100142A9C(void *a1, __n128 a2, __n128 a3, float32x4_t a4, float32x4_t a5)
{
  float32x4_t v56 = a5;
  v51[1] = a3;
  float32x4_t v52 = a4;
  v51[0] = a2;
  uint64_t v6 = sub_100012894(&qword_1004CCE48);
  __chkstk_darwin(v6 - 8);
  uint64_t v54 = (uint64_t)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for MetricsManager.VerticalGuideMetric(0);
  uint64_t v53 = *((void *)v8 - 1);
  __chkstk_darwin(v8);
  CFTimeInterval v10 = (char *)v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = simd_float4x4.position.getter();
  float32x4_t v56 = v12;
  uint64_t v13 = *(void (**)(uint64_t))((swift_isaMask & *a1) + 0x2A0);
  v13(v11);
  simd_float4x4.position.getter();
  float32x4_t v15 = vsubq_f32(v56, v14);
  int32x4_t v16 = (int32x4_t)vmulq_f32(v15, v15);
  v16.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v16, 2), vadd_f32(*(float32x2_t *)v16.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v16.i8, 1))).u32[0];
  float32x2_t v17 = vrsqrte_f32((float32x2_t)v16.u32[0]);
  float32x2_t v18 = vmul_f32(v17, vrsqrts_f32((float32x2_t)v16.u32[0], vmul_f32(v17, v17)));
  float32x4_t v52 = vmulq_n_f32(v15, vmul_f32(v18, vrsqrts_f32((float32x2_t)v16.u32[0], vmul_f32(v18, v18))).f32[0]);
  float32x4_t v19 = vmulq_f32(*(float32x4_t *)SIMD3<>.up.unsafeMutableAddressor(), v52);
  float v20 = acosf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v19, 2), vaddq_f32(v19, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v19.f32, 1))).f32[0])* 57.296;
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))((swift_isaMask & *a1) + 0xB8);
  uint64_t v26 = v21(v22, v23, v24, v25);
  uint64_t v28 = v27;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v13)(v26, v27, v29, v30);
  simd_float4x4.position.getter();
  float32x4_t v32 = vsubq_f32(v56, v31);
  float32x4_t v33 = vmulq_f32(v32, v32);
  float v34 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v33, 2), vaddq_f32(v33, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v33.f32, 1))).f32[0]);
  Date.init()();
  uint64_t v35 = &v10[v8[10]];
  uint64_t v36 = type metadata accessor for Date();
  uint64_t v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 1, 1, v36);
  v13(v37);
  uint64_t v38 = simd_float4x4.position.getter();
  *(void *)CFTimeInterval v10 = v26;
  *((void *)v10 + 1) = v28;
  *((float *)v10 + 4) = v20;
  *((float *)v10 + 5) = v34;
  v10[24] = 0;
  *((_DWORD *)v10 + 7) = 0;
  *(_OWORD *)&v10[v8[11]] = v39;
  uint64_t v40 = &v10[v8[12]];
  *(void *)uint64_t v40 = 0;
  *((void *)v40 + 1) = 0;
  v40[16] = 1;
  uint64_t v41 = ((uint64_t (*)(uint64_t))v21)(v38);
  uint64_t v43 = v42;
  uint64_t v44 = v54;
  sub_10014C440((uint64_t)v10, v54, type metadata accessor for MetricsManager.VerticalGuideMetric);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v53 + 56))(v44, 0, 1, v8);
  uint64_t v45 = v55;
  swift_beginAccess();
  sub_10014247C(v44, v41, v43);
  swift_endAccess();
  sub_10014C3E0((uint64_t)v10, type metadata accessor for MetricsManager.VerticalGuideMetric);
  uint64_t v46 = v45 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  uint64_t result = swift_beginAccess();
  uint64_t v48 = *(void *)(v46 + 80);
  BOOL v49 = __OFADD__(v48, 1);
  uint64_t v50 = v48 + 1;
  if (v49) {
    __break(1u);
  }
  else {
    *(void *)(v46 + 80) = v50;
  }
  return result;
}

uint64_t sub_100142E78(void *a1, uint64_t a2)
{
  *(void *)&long long v44 = a2;
  uint64_t v4 = sub_100012894((uint64_t *)&unk_1004C68F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100012894(&qword_1004CCE78);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v45 = (uint64_t)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v41 - v10;
  uint64_t v12 = type metadata accessor for MetricsManager.EdgeGuideMetric(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  int32x4_t v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  float32x2_t v17 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xB8);
  uint64_t v42 = (swift_isaMask & *a1) + 184;
  uint64_t v43 = v17;
  uint64_t v18 = v17(v14);
  uint64_t v20 = v19;
  uint64_t v21 = (uint64_t *)(v2 + OBJC_IVAR____TtC7Measure14MetricsManager_edgeGuideMetrics);
  swift_beginAccess();
  uint64_t v22 = *v21;
  if (*(void *)(*v21 + 16) && (unint64_t v23 = sub_1000E20D4(v18, v20), (v24 & 1) != 0))
  {
    sub_10014C440(*(void *)(v22 + 56) + *(void *)(v13 + 72) * v23, (uint64_t)v11, type metadata accessor for MetricsManager.EdgeGuideMetric);
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v25(v11, 0, 1, v12);
  }
  else
  {
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v25(v11, 1, 1, v12);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10002B9C0((uint64_t)v11, &qword_1004CCE78);
    return swift_endAccess();
  }
  else
  {
    sub_10014C378((uint64_t)v11, (uint64_t)v16, type metadata accessor for MetricsManager.EdgeGuideMetric);
    swift_endAccess();
    Date.init()();
    uint64_t v27 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v6, 0, 1, v27);
    uint64_t v28 = sub_100073BD8((uint64_t)v6, (uint64_t)&v16[*(int *)(v12 + 68)], (uint64_t *)&unk_1004C68F0);
    v16[96] = 1;
    uint64_t v29 = *(void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *(void *)v44) + 0x2C0))(v28);
    *(double *)&long long v30 = (*(double (**)(void))(v29 + 368))();
    long long v44 = v30;
    v41[1] = v32;
    v41[2] = v31;
    v41[0] = v33;
    swift_release();
    uint64_t v34 = simd_float4x4.position.getter();
    uint64_t v35 = &v16[*(int *)(v12 + 72)];
    *(_OWORD *)uint64_t v35 = v36;
    v35[16] = 0;
    uint64_t v37 = v43(v34);
    uint64_t v39 = v38;
    uint64_t v40 = v45;
    sub_10014C440((uint64_t)v16, v45, type metadata accessor for MetricsManager.EdgeGuideMetric);
    v25((char *)v40, 0, 1, v12);
    swift_beginAccess();
    sub_100141F0C(v40, v37, v39);
    swift_endAccess();
    return sub_10014C3E0((uint64_t)v16, type metadata accessor for MetricsManager.EdgeGuideMetric);
  }
}

uint64_t sub_100143318(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100012894((uint64_t *)&unk_1004C68F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100012894(&qword_1004CCE48);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)type metadata accessor for MetricsManager.VerticalGuideMetric(0);
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = __chkstk_darwin(v12);
  int32x4_t v16 = (float *)((char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xB8))(v14);
  uint64_t v19 = v18;
  uint64_t v20 = (uint64_t *)(v3 + OBJC_IVAR____TtC7Measure14MetricsManager_verticalGuideMetrics);
  swift_beginAccess();
  uint64_t v21 = *v20;
  if (*(void *)(v21 + 16) && (unint64_t v22 = sub_1000E20D4(v17, v19), (v23 & 1) != 0))
  {
    sub_10014C440(*(void *)(v21 + 56) + *(void *)(v13 + 72) * v22, (uint64_t)v11, type metadata accessor for MetricsManager.VerticalGuideMetric);
    uint64_t v24 = 0;
  }
  else
  {
    uint64_t v24 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, int *))(v13 + 56))(v11, v24, 1, v12);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10002B9C0((uint64_t)v11, &qword_1004CCE48);
    return swift_endAccess();
  }
  else
  {
    sub_10014C378((uint64_t)v11, (uint64_t)v16, type metadata accessor for MetricsManager.VerticalGuideMetric);
    swift_endAccess();
    Date.init()();
    uint64_t v26 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v8, 0, 1, v26);
    uint64_t v27 = sub_100073BD8((uint64_t)v8, (uint64_t)v16 + v12[10], (uint64_t *)&unk_1004C68F0);
    *((unsigned char *)v16 + 24) = 1;
    uint64_t v28 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a2) + 0x2C0);
    uint64_t v29 = *(void *)v28(v27);
    *(double *)&long long v30 = (*(double (**)(void))(v29 + 368))();
    long long v52 = v31;
    long long v53 = v30;
    long long v50 = v33;
    long long v51 = v32;
    swift_release();
    uint64_t v34 = simd_float4x4.position.getter();
    uint64_t v35 = (char *)v16 + v12[12];
    *(_OWORD *)uint64_t v35 = v36;
    v35[16] = 0;
    uint64_t v37 = *(void *)v28(v34);
    *(double *)&long long v38 = (*(double (**)(void))(v37 + 368))();
    long long v52 = v39;
    long long v53 = v38;
    long long v50 = v41;
    long long v51 = v40;
    swift_release();
    simd_float4x4.position.getter();
    uint64_t v42 = (float *)((char *)v16 + v12[11]);
    v16[7] = sqrtf((float)((float)(v45 - v42[2]) * (float)(v45 - v42[2]))+ (float)((float)((float)(v43 - *v42) * (float)(v43 - *v42))+ (float)((float)(v44 - v42[1]) * (float)(v44 - v42[1]))));
    sub_10014555C((uint64_t)v16);
    uint64_t v46 = v3 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
    uint64_t result = swift_beginAccess();
    uint64_t v47 = *(void *)(v46 + 88);
    BOOL v48 = __OFADD__(v47, 1);
    uint64_t v49 = v47 + 1;
    if (v48)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v46 + 88) = v49;
      return sub_10014C3E0((uint64_t)v16, type metadata accessor for MetricsManager.VerticalGuideMetric);
    }
  }
  return result;
}

uint64_t sub_1001437CC(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100012894((uint64_t *)&unk_1004C68F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100012894(&qword_1004CCE78);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for MetricsManager.EdgeGuideMetric(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  int32x4_t v16 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xB8))(v14);
  uint64_t v19 = v18;
  uint64_t v20 = (uint64_t *)(v3 + OBJC_IVAR____TtC7Measure14MetricsManager_edgeGuideMetrics);
  swift_beginAccess();
  uint64_t v21 = *v20;
  if (*(void *)(v21 + 16) && (unint64_t v22 = sub_1000E20D4(v17, v19), (v23 & 1) != 0))
  {
    sub_10014C440(*(void *)(v21 + 56) + *(void *)(v13 + 72) * v22, (uint64_t)v11, type metadata accessor for MetricsManager.EdgeGuideMetric);
    uint64_t v24 = 0;
  }
  else
  {
    uint64_t v24 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v24, 1, v12);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10002B9C0((uint64_t)v11, &qword_1004CCE78);
    return swift_endAccess();
  }
  else
  {
    sub_10014C378((uint64_t)v11, (uint64_t)v16, type metadata accessor for MetricsManager.EdgeGuideMetric);
    swift_endAccess();
    Date.init()();
    uint64_t v26 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v8, 0, 1, v26);
    uint64_t v27 = sub_100073BD8((uint64_t)v8, (uint64_t)&v16[*(int *)(v12 + 68)], (uint64_t *)&unk_1004C68F0);
    v16[97] = 1;
    uint64_t v28 = *(void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *a2) + 0x2C0))(v27);
    *(double *)&long long v29 = (*(double (**)(void))(v28 + 368))();
    v39[2] = v30;
    v39[3] = v29;
    v39[0] = v32;
    v39[1] = v31;
    swift_release();
    simd_float4x4.position.getter();
    long long v33 = &v16[*(int *)(v12 + 76)];
    *(_OWORD *)long long v33 = v34;
    v33[16] = 0;
    sub_100144E48((uint64_t)v16);
    uint64_t v35 = v3 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
    uint64_t result = swift_beginAccess();
    uint64_t v36 = *(void *)(v35 + 88);
    BOOL v37 = __OFADD__(v36, 1);
    uint64_t v38 = v36 + 1;
    if (v37)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v35 + 88) = v38;
      return sub_10014C3E0((uint64_t)v16, type metadata accessor for MetricsManager.EdgeGuideMetric);
    }
  }
  return result;
}

uint64_t sub_100143BD8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100012894((uint64_t *)&unk_1004C68F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100012894(&qword_1004CCE80);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for MetricsManager.SurfaceVectorGuideMetric(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  int32x4_t v16 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xB8))(v14);
  uint64_t v19 = v18;
  uint64_t v20 = (uint64_t *)(v3 + OBJC_IVAR____TtC7Measure14MetricsManager_surfaceVectorGuideMetrics);
  swift_beginAccess();
  uint64_t v21 = *v20;
  if (*(void *)(v21 + 16) && (unint64_t v22 = sub_1000E20D4(v17, v19), (v23 & 1) != 0))
  {
    sub_10014C440(*(void *)(v21 + 56) + *(void *)(v13 + 72) * v22, (uint64_t)v11, type metadata accessor for MetricsManager.SurfaceVectorGuideMetric);
    uint64_t v24 = 0;
  }
  else
  {
    uint64_t v24 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v24, 1, v12);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10002B9C0((uint64_t)v11, &qword_1004CCE80);
    return swift_endAccess();
  }
  else
  {
    sub_10014C378((uint64_t)v11, (uint64_t)v16, type metadata accessor for MetricsManager.SurfaceVectorGuideMetric);
    swift_endAccess();
    Date.init()();
    uint64_t v26 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v8, 0, 1, v26);
    uint64_t v27 = sub_100073BD8((uint64_t)v8, (uint64_t)&v16[*(int *)(v12 + 60)], (uint64_t *)&unk_1004C68F0);
    v16[96] = 1;
    uint64_t v28 = *(void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *a2) + 0x2C0))(v27);
    *(double *)&long long v29 = (*(double (**)(void))(v28 + 368))();
    v39[2] = v30;
    v39[3] = v29;
    v39[0] = v32;
    v39[1] = v31;
    swift_release();
    simd_float4x4.position.getter();
    long long v33 = &v16[*(int *)(v12 + 68)];
    *(_OWORD *)long long v33 = v34;
    v33[16] = 0;
    sub_1001451E8((uint64_t)v16);
    uint64_t v35 = v3 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
    uint64_t result = swift_beginAccess();
    uint64_t v36 = *(void *)(v35 + 88);
    BOOL v37 = __OFADD__(v36, 1);
    uint64_t v38 = v36 + 1;
    if (v37)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v35 + 88) = v38;
      return sub_10014C3E0((uint64_t)v16, type metadata accessor for MetricsManager.SurfaceVectorGuideMetric);
    }
  }
  return result;
}

uint64_t sub_100143FE4(void *a1, void *a2)
{
  void (*v11)(void *__return_ptr, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t (*v14)(uint64_t);
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  unsigned char *v25;
  uint64_t v26;
  float v27;
  unint64_t v28;
  uint64_t v29;
  float v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v37;
  unsigned char *v38;
  uint64_t v39;
  unint64_t v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  void *v46;
  id v47;
  id v48;
  uint64_t v49;
  id v50;
  double v51;
  double v52;
  void (*v53)(char *, uint64_t);
  float v54;
  uint64_t v55;
  long long v56;
  id v57;
  id v58;
  id v59;
  double v60;
  double v61;
  float v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  float v75;
  uint64_t v76;
  uint64_t v77;
  float v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(void);
  unint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  long long v105;
  long long v106;
  long long v107;
  long long v108;
  long long v109;
  long long v110;
  long long v111;
  long long v112;
  long long v113;
  long long v114;
  _OWORD v115[10];
  void v116[8];
  char v117;

  uint64_t v3 = v2;
  int8x16_t v104 = a2;
  uint64_t v5 = sub_100012894(&qword_1004CC7A8);
  *(void *)&unsigned int v105 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v79 - v9;
  uint64_t v11 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v2
                                                                           + OBJC_IVAR____TtC7Measure14MetricsManager__device)
                                                             + 144);
  uint64_t v12 = swift_retain();
  v11(v116, v12);
  uint64_t result = swift_release();
  if ((v117 & 1) == 0)
  {
    double v98 = v116[2];
    uint64_t v99 = v116[0];
    float32x4_t v102 = v116[3];
    float v103 = v116[1];
    float v96 = v116[6];
    uint64_t v97 = v116[4];
    uint64_t v100 = v116[7];
    uint64_t v101 = v116[5];
    uint64_t v14 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x250);
    uint64_t v15 = v14(result);
    int32x4_t v16 = v15 >> 62 ? _CocoaArrayWrapper.endIndex.getter() : *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRelease();
    if (v16 >= 2)
    {
      uint64_t v17 = v14(result);
      if ((v17 & 0xC000000000000001) != 0)
      {
        uint64_t v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_56;
        }
        uint64_t v18 = *(id *)(v17 + 32);
      }
      int32x4_t v16 = (uint64_t)v18;
      uint64_t v19 = swift_bridgeObjectRelease();
      uint64_t v20 = v14(v19);
      if ((v20 & 0xC000000000000001) == 0)
      {
        if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        {
          __break(1u);
          goto LABEL_58;
        }
        uint64_t v95 = *(id *)(v20 + 40);
LABEL_11:
        uint64_t v93 = 0x6E776F6E6B6E75;
        uint64_t v94 = 0x74694B7261;
        uint64_t v21 = swift_bridgeObjectRelease();
        unint64_t v22 = *(uint64_t (**)(void))((swift_isaMask & *(void *)v16) + 0x2C0);
        char v23 = (swift_isaMask & *(void *)v16) + 704;
        uint64_t v90 = (void *)v16;
        uint64_t v87 = v23;
        uint64_t v88 = v22;
        uint64_t v24 = ((uint64_t (*)(uint64_t))v22)(v21);
        uint64_t v25 = (unsigned char *)(*(uint64_t (**)(void))(*(void *)v24 + 216))();
        uint64_t v26 = swift_release();
        uint64_t v27 = 0.0;
        uint64_t v91 = v3;
        if (v25)
        {
          uint64_t v28 = 0xE500000000000000;
          long long v29 = 0x74694B7261;
          switch(v25[48])
          {
            case 1:
              uint64_t v28 = 0xE800000000000000;
              long long v29 = 0x6465727265666E69;
              break;
            case 2:
              uint64_t v28 = 0xE800000000000000;
              long long v29 = 0x6B6361626C6C6166;
              break;
            case 3:
              long long v29 = 0x6C61636F6CLL;
              break;
            case 4:
              uint64_t v28 = 0xE800000000000000;
              long long v29 = 0x73756F6976657270;
              break;
            case 5:
              long long v29 = 0x6863746170;
              break;
            case 6:
              long long v29 = 0x706544656C707061;
              uint64_t v28 = 0xEA00000000006874;
              break;
            default:
              break;
          }
          uint64_t v86 = v29;
          uint64_t v89 = v28;
          long long v30 = (*(float (**)(uint64_t))(*(void *)v25 + 232))(v26);
          long long v31 = (void *)(*(uint64_t (**)(void))(*(void *)v25 + 160))();
          self;
          long long v32 = (void *)swift_dynamicCastObjCClass();
          if (v32)
          {
            long long v33 = [v32 alignment];
            swift_release();

            if (v33) {
              long long v34 = 0x6C61636974726576;
            }
            else {
              long long v34 = 0x746E6F7A69726F68;
            }
            uint64_t v35 = 0xEA00000000006C61;
            if (v33) {
              uint64_t v35 = 0xE800000000000000;
            }
            uint64_t v81 = v35;
            uint64_t v82 = v34;
          }
          else
          {
            swift_release();

            uint64_t v81 = 0xE700000000000000;
            uint64_t v82 = 0x6E776F6E6B6E75;
          }
        }
        else
        {
          uint64_t v81 = 0xE700000000000000;
          uint64_t v82 = 0x6E776F6E6B6E75;
          long long v30 = 0.0;
          uint64_t v86 = 0x6E776F6E6B6E75;
          uint64_t v89 = 0xE700000000000000;
        }
        uint64_t v36 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v95) + 0x2C0);
        unint64_t v84 = (swift_isaMask & *v95) + 704;
        float32x4_t v85 = v36;
        BOOL v37 = v36(v26);
        uint64_t v38 = (unsigned char *)(*(uint64_t (**)(void))(*(void *)v37 + 216))();
        long long v39 = swift_release();
        if (v38)
        {
          long long v40 = 0xE500000000000000;
          switch(v38[48])
          {
            case 1:
              long long v40 = 0xE800000000000000;
              uint64_t v94 = 0x6465727265666E69;
              break;
            case 2:
              long long v40 = 0xE800000000000000;
              uint64_t v94 = 0x6B6361626C6C6166;
              break;
            case 3:
              uint64_t v94 = 0x6C61636F6CLL;
              break;
            case 4:
              long long v40 = 0xE800000000000000;
              uint64_t v94 = 0x73756F6976657270;
              break;
            case 5:
              uint64_t v94 = 0x6863746170;
              break;
            case 6:
              uint64_t v94 = 0x706544656C707061;
              long long v40 = 0xEA00000000006874;
              break;
            default:
              break;
          }
          uint64_t v83 = v40;
          uint64_t v27 = (*(float (**)(uint64_t))(*(void *)v38 + 232))(v39);
          long long v41 = (void *)(*(uint64_t (**)(void))(*(void *)v38 + 160))();
          self;
          uint64_t v42 = (void *)swift_dynamicCastObjCClass();
          if (v42)
          {
            float v43 = [v42 alignment];
            swift_release();

            float v44 = 0x6C61636974726576;
            if (!v43) {
              float v44 = 0x746E6F7A69726F68;
            }
            uint64_t v93 = v44;
            float v45 = 0xEA00000000006C61;
            if (v43) {
              float v45 = 0xE800000000000000;
            }
          }
          else
          {
            swift_release();

            float v45 = 0xE700000000000000;
          }
          float32x4_t v80 = v45;
        }
        else
        {
          float32x4_t v80 = 0xE700000000000000;
          uint64_t v94 = 0x6E776F6E6B6E75;
          uint64_t v83 = 0xE700000000000000;
        }
        (*(void (**)(uint64_t))((swift_isaMask & *a1) + 0x340))(v39);
        uint64_t v46 = self;
        uint64_t v47 = [v46 meters];
        BOOL v48 = [v46 millimeters];
        uint64_t v49 = sub_10001C99C(0, &qword_1004CC7B0);
        long long v50 = v47;
        uint64_t v92 = v49;
        Measurement.init(value:unit:)();
        Measurement<>.converted(to:)();
        Measurement.value.getter();
        long long v52 = v51;
        long long v53 = *(void (**)(char *, uint64_t))(v105 + 8);
        v53(v8, v5);
        uint64_t v54 = v52;
        v53(v10, v5);

        if ((~LODWORD(v54) & 0x7F800000) != 0)
        {
          if (v54 > -9.2234e18)
          {
            if (v54 < 9.2234e18)
            {
              uint64_t v55 = simd_float4x4.position.getter();
              unsigned int v105 = v56;
              (*(void (**)(uint64_t))((swift_isaMask & *v104) + 0x2B0))(v55);
              double v57 = [v46 meters];
              uint64_t v58 = [v46 millimeters];
              uint64_t v59 = v57;
              Measurement.init(value:unit:)();
              Measurement<>.converted(to:)();
              Measurement.value.getter();
              long long v61 = v60;
              v53(v8, v5);
              float v62 = v61;
              v53(v10, v5);

              if ((~LODWORD(v62) & 0x7F800000) != 0)
              {
                if (v62 > -9.2234e18)
                {
                  if (v62 < 9.2234e18)
                  {
                    int8x16_t v104 = (void *)(uint64_t)v62;
                    *(void *)&unsigned int v105 = (uint64_t)v54;
                    uint64_t v63 = UIDeviceOrientation.description.getter();
                    float32x4_t v65 = v64;
                    float32x4_t v66 = v90;
                    (*(void (**)(void))((swift_isaMask & *v90) + 0x2F0))();
                    float32x4_t v67 = WorldPointType.description.getter();
                    __int16 v69 = v68;
                    int v70 = v95;
                    (*(void (**)(void))((swift_isaMask & *v95) + 0x2F0))();
                    __int16 v71 = WorldPointType.description.getter();
                    uint64_t v73 = v72;
                    unint64_t v74 = v88();
                    char v75 = (*(float (**)(uint64_t))(*(void *)v74 + 192))(v74);
                    uint64_t v76 = swift_release();
                    uint64_t v77 = v85(v76);
                    unint64_t v78 = (*(float (**)(uint64_t))(*(void *)v77 + 192))(v77);
                    swift_release();
                    *(void *)&uint64_t v106 = v105;
                    *((void *)&v106 + 1) = v104;
                    *(void *)&float64x2_t v107 = v63;
                    *((void *)&v107 + 1) = v65;
                    *(void *)&uint64_t v108 = v67;
                    *((void *)&v108 + 1) = v69;
                    *(void *)&float32x2_t v109 = v71;
                    *((void *)&v109 + 1) = v73;
                    *(void *)&__int16 v110 = __PAIR64__(LODWORD(v78), LODWORD(v75));
                    *((void *)&v110 + 1) = __PAIR64__(LODWORD(v27), LODWORD(v30));
                    *(void *)&uint64_t v111 = v86;
                    *((void *)&v111 + 1) = v89;
                    *(void *)&uint64_t v112 = v94;
                    *((void *)&v112 + 1) = v83;
                    *(void *)&int v113 = v82;
                    *((void *)&v113 + 1) = v81;
                    *(void *)&unint64_t v114 = v93;
                    *((void *)&v114 + 1) = v80;
                    v115[0] = v106;
                    v115[1] = v107;
                    v115[7] = v113;
                    v115[8] = v114;
                    v115[5] = v111;
                    v115[6] = v112;
                    v115[3] = v109;
                    v115[4] = v110;
                    v115[2] = v108;
                    sub_10014C4A8((uint64_t)v115);
                    sub_100022E88((uint64_t)v115, (uint64_t)v116);
                    sub_10014C4B4((uint64_t)v116);

                    return sub_10014C800((uint64_t)&v106);
                  }
LABEL_63:
                  __break(1u);
                  JUMPOUT(0x100144C30);
                }
LABEL_62:
                __break(1u);
                goto LABEL_63;
              }
LABEL_61:
              __break(1u);
              goto LABEL_62;
            }
LABEL_60:
            __break(1u);
            goto LABEL_61;
          }
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
LABEL_58:
        __break(1u);
        goto LABEL_59;
      }
LABEL_56:
      uint64_t v95 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_100144C68()
{
  type metadata accessor for MetricsManager(0);
  swift_allocObject();
  uint64_t result = sub_100146550();
  qword_1004F8458 = result;
  return result;
}

float sub_100144CA8()
{
  uint64_t v1 = type metadata accessor for MetricsManager.VerticalGuideMetric(0);
  uint64_t v2 = (uint64_t *)(v0 + *(int *)(v1 + 48));
  if (v2[2]) {
    return 0.0;
  }
  uint64_t v4 = (const double *)(v2 + 1);
  uint64_t v6 = *v2;
  unsigned int v5 = *v2;
  float64x2_t v7 = vld1q_dup_f64(v4);
  uint64_t v8 = (float32x2_t *)(v0 + *(int *)(v1 + 44));
  float32x2_t v9 = vsub_f32(*v8, (float32x2_t)__PAIR64__(HIDWORD(v6), v5));
  return sqrtf((float)((float)(v8[1].f32[0] - *(float *)&v7.f64[1]) * (float)(v8[1].f32[0] - *(float *)&v7.f64[1]))+ vaddv_f32(vmul_f32(v9, v9)));
}

float sub_100144D28()
{
  uint64_t v1 = type metadata accessor for MetricsManager.EdgeGuideMetric(0);
  uint64_t v2 = (float32x4_t *)(v0 + *(int *)(v1 + 72));
  if (v2[1].i8[0]) {
    return 0.0;
  }
  uint64_t v3 = (float32x4_t *)(v0 + *(int *)(v1 + 76));
  if (v3[1].i8[0]) {
    return 0.0;
  }
  float32x4_t v5 = vsubq_f32(*v2, *v3);
  float32x2_t v6 = vsub_f32(*(float32x2_t *)v2->f32, *(float32x2_t *)v3->f32);
  return sqrtf(COERCE_FLOAT(vmulq_f32(v5, v5).i32[2]) + vaddv_f32(vmul_f32(v6, v6)));
}

float sub_100144DC8()
{
  uint64_t v1 = type metadata accessor for MetricsManager.SurfaceVectorGuideMetric(0);
  uint64_t v2 = (uint64_t *)(v0 + *(int *)(v1 + 68));
  if (v2[2]) {
    return 0.0;
  }
  uint64_t v4 = (const double *)(v2 + 1);
  uint64_t v6 = *v2;
  unsigned int v5 = *v2;
  float64x2_t v7 = vld1q_dup_f64(v4);
  uint64_t v8 = (float32x2_t *)(v0 + *(int *)(v1 + 64));
  float32x2_t v9 = vsub_f32(*v8, (float32x2_t)__PAIR64__(HIDWORD(v6), v5));
  return sqrtf((float)((float)(v8[1].f32[0] - *(float *)&v7.f64[1]) * (float)(v8[1].f32[0] - *(float *)&v7.f64[1]))+ vaddv_f32(vmul_f32(v9, v9)));
}

uint64_t sub_100144E48(uint64_t a1)
{
  uint64_t v2 = sub_100012894(&qword_1004CCE78);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100012894((uint64_t *)&unk_1004C68F0);
  __chkstk_darwin(v5 - 8);
  float64x2_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *(unsigned int *)(a1 + 24);
  uint64_t v29 = *(unsigned int *)(a1 + 16);
  uint64_t v28 = *(unsigned int *)(a1 + 20);
  uint64_t v27 = *(unsigned int *)(a1 + 48);
  uint64_t v35 = *(unsigned int *)(a1 + 52);
  uint64_t v33 = *(unsigned int *)(a1 + 72);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v34 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 88);
  uint64_t v32 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v31 = *(void *)(a1 + 32);
  uint64_t v15 = type metadata accessor for MetricsManager.EdgeGuideMetric(0);
  sub_1000DB36C(a1 + *(int *)(v15 + 68), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10002B9C0((uint64_t)v7, (uint64_t *)&unk_1004C68F0);
    uint64_t v16 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    Date.timeIntervalSince(_:)();
    *(float *)&unsigned int v18 = v17;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v16 = v18;
  }
  float v19 = sub_100144D28();
  __int16 v20 = *(unsigned __int8 *)(a1 + 96);
  int v21 = *(unsigned __int8 *)(a1 + 97);
  v36[0] = v29 | (v27 << 32);
  v36[1] = v30 | (v28 << 32);
  v36[2] = v35 | (v33 << 32);
  v36[3] = v34;
  v36[4] = v12;
  v36[5] = v32;
  if (v21) {
    __int16 v22 = 256;
  }
  else {
    __int16 v22 = 0;
  }
  v36[6] = v13;
  v36[7] = v31;
  v36[8] = v14;
  v36[9] = v16 | ((unint64_t)LODWORD(v19) << 32);
  __int16 v37 = v22 | v20;
  sub_10014BE84((uint64_t)v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)a1;
  uint64_t v24 = *(void *)(a1 + 8);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1000A8530(v23, v24, (uint64_t)v4);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return sub_10002B9C0((uint64_t)v4, &qword_1004CCE78);
}

uint64_t sub_1001451E8(uint64_t a1)
{
  uint64_t v2 = sub_100012894(&qword_1004CCE80);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100012894((uint64_t *)&unk_1004C68F0);
  __chkstk_darwin(v5 - 8);
  float64x2_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(unsigned int *)(a1 + 24);
  uint64_t v27 = *(unsigned int *)(a1 + 16);
  uint64_t v26 = *(unsigned int *)(a1 + 20);
  uint64_t v25 = *(unsigned int *)(a1 + 48);
  uint64_t v32 = *(unsigned int *)(a1 + 72);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v14 = *(void *)(a1 + 88);
  uint64_t v30 = *(void *)(a1 + 80);
  uint64_t v31 = v12;
  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v29 = *(void *)(a1 + 32);
  uint64_t v16 = type metadata accessor for MetricsManager.SurfaceVectorGuideMetric(0);
  sub_1000DB36C(a1 + *(int *)(v16 + 60), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10002B9C0((uint64_t)v7, (uint64_t *)&unk_1004C68F0);
    uint64_t v17 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    Date.timeIntervalSince(_:)();
    *(float *)&unsigned int v19 = v18;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v17 = v19;
  }
  float v20 = sub_100144DC8();
  __int16 v21 = *(unsigned __int8 *)(a1 + 96);
  v33[0] = v27 | (v28 << 32);
  v33[1] = v26 | (v25 << 32);
  v33[2] = v32;
  v33[3] = v31;
  v33[4] = v13;
  v33[5] = v30;
  v33[6] = v14;
  v33[7] = v29;
  v33[8] = v15;
  v33[9] = v17 | ((unint64_t)LODWORD(v20) << 32);
  __int16 v34 = v21 | 0x4000;
  sub_10014BE84((uint64_t)v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)a1;
  uint64_t v23 = *(void *)(a1 + 8);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1000A8584(v22, v23, (uint64_t)v4);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return sub_10002B9C0((uint64_t)v4, &qword_1004CCE80);
}

uint64_t sub_10014555C(uint64_t a1)
{
  uint64_t v2 = sub_100012894(&qword_1004CCE48);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
  uint64_t v5 = sub_100012894((uint64_t *)&unk_1004C68F0);
  __chkstk_darwin(v5 - 8);
  float64x2_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
  uint64_t v12 = *(unsigned int *)(a1 + 28);
  uint64_t v13 = *(unsigned int *)(a1 + 16);
  uint64_t v14 = *(unsigned int *)(a1 + 20);
  uint64_t v15 = type metadata accessor for MetricsManager.VerticalGuideMetric(0);
  sub_1000DB36C(a1 + *(int *)(v15 + 40), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10002B9C0((uint64_t)v7, (uint64_t *)&unk_1004C68F0);
    unint64_t v16 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    Date.timeIntervalSince(_:)();
    *(float *)&unsigned int v18 = v17;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    unint64_t v16 = (unint64_t)v18 << 32;
  }
  float v19 = sub_100144CA8();
  float v20 = &_mh_execute_header;
  if (!*(unsigned char *)(a1 + 24)) {
    float v20 = 0;
  }
  v25[0] = v12 | (v14 << 32);
  v25[1] = v16 | v13;
  v25[2] = (unint64_t)v20 | LODWORD(v19);
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  uint64_t v29 = 0;
  __int16 v30 = 0x8000;
  sub_10014BE84((uint64_t)v25);
  uint64_t v21 = *(void *)a1;
  uint64_t v22 = *(void *)(a1 + 8);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1000A8930(v21, v22, (uint64_t)v4);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return sub_10002B9C0((uint64_t)v4, &qword_1004CCE48);
}

unint64_t sub_100145824(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    float v2 = *(float *)(a1 + 32);
    uint64_t v3 = v1 - 1;
    if (v1 != 1)
    {
      uint64_t v4 = (float *)(a1 + 36);
      do
      {
        float v5 = *v4++;
        float v6 = v5;
        if (v5 < v2) {
          float v2 = v6;
        }
        --v3;
      }
      while (v3);
    }
    uint64_t v7 = LODWORD(v2);
  }
  else
  {
    uint64_t v7 = 0;
  }
  return v7 | ((unint64_t)(v1 == 0) << 32);
}

double sub_10014587C()
{
  uint64_t v1 = *(float32x4_t **)(v0 + 16);
  unint64_t v2 = v1[1].u64[0];
  if (!v2) {
    return 0.0;
  }
  if (v2 == 1)
  {
    uint64_t v3 = 0;
    double result = 0.0;
LABEL_7:
    unint64_t v7 = v2 - v3;
    uint64_t v8 = &v1[2].f32[v3];
    do
    {
      float v9 = *v8++;
      *(float *)&double result = *(float *)&result + v9;
      --v7;
    }
    while (v7);
    goto LABEL_9;
  }
  uint64_t v3 = v2 & 0x7FFFFFFFFFFFFFFELL;
  float v5 = &v1[2].f32[1];
  double result = 0.0;
  uint64_t v6 = v2 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    *(float *)&double result = (float)(*(float *)&result + *(v5 - 1)) + *v5;
    v5 += 2;
    v6 -= 2;
  }
  while (v6);
  if (v2 != v3) {
    goto LABEL_7;
  }
LABEL_9:
  *(float *)&double result = *(float *)&result / (float)(uint64_t)v2;
  if (v2 < 8)
  {
    uint64_t v10 = 0;
    float v11 = 0.0;
LABEL_14:
    unint64_t v19 = v2 - v10;
    float v20 = &v1[2].f32[v10];
    do
    {
      float v21 = *v20++;
      float v11 = v11 + (float)((float)(v21 - *(float *)&result) * (float)(v21 - *(float *)&result));
      --v19;
    }
    while (v19);
    goto LABEL_16;
  }
  uint64_t v10 = v2 & 0x7FFFFFFFFFFFFFF8;
  float32x4_t v12 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&result, 0);
  uint64_t v13 = v1 + 3;
  float v11 = 0.0;
  uint64_t v14 = v2 & 0x7FFFFFFFFFFFFFF8;
  do
  {
    float32x4_t v15 = vsubq_f32(v13[-1], v12);
    float32x4_t v16 = vsubq_f32(*v13, v12);
    float32x4_t v17 = vmulq_f32(v15, v15);
    float32x4_t v18 = vmulq_f32(v16, v16);
    float v11 = (float)((float)((float)((float)((float)((float)((float)(v11 + v17.f32[0]) + v17.f32[1]) + v17.f32[2])
                                        + v17.f32[3])
                                + v18.f32[0])
                        + v18.f32[1])
                + v18.f32[2])
        + v18.f32[3];
    v13 += 2;
    v14 -= 8;
  }
  while (v14);
  if (v2 != v10) {
    goto LABEL_14;
  }
LABEL_16:
  BOOL v22 = v2 > 1;
  uint64_t v23 = v2 - 1;
  if (v22)
  {
    *(float *)&double result = sqrtf(v11 / (float)v23);
    return result;
  }
  return 0.0;
}

float sub_1001459BC()
{
  uint64_t v1 = sub_100012894((uint64_t *)&unk_1004C68F0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v24 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void **)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  float v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = type metadata accessor for MetricsManager.PersonHeightMetric(0);
  sub_1000DB36C(v0 + *(int *)(v14 + 44), (uint64_t)v6);
  float32x4_t v15 = (unsigned int (*)(char *, uint64_t, uint64_t))v8[6];
  if (v15(v6, 1, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
  }
  else
  {
    uint64_t v25 = v11;
    float32x4_t v17 = v6;
    float32x4_t v18 = (void (*)(char *, char *, uint64_t))v8[4];
    v18(v13, v17, v7);
    sub_1000DB36C(v0 + *(int *)(v14 + 48), (uint64_t)v4);
    if (v15(v4, 1, v7) != 1)
    {
      float v20 = v25;
      v18(v25, v4, v7);
      Date.timeIntervalSince(_:)();
      float v19 = v21;
      BOOL v22 = (void (*)(char *, uint64_t))v8[1];
      v22(v20, v7);
      v22(v13, v7);
      return v19;
    }
    ((void (*)(char *, uint64_t))v8[1])(v13, v7);
    uint64_t v16 = (uint64_t)v4;
  }
  sub_10002B9C0(v16, (uint64_t *)&unk_1004C68F0);
  return 0.0;
}

float sub_100145C3C()
{
  uint64_t v1 = sub_100012894((uint64_t *)&unk_1004C68F0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  long long v41 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v37 - v5;
  uint64_t v7 = __chkstk_darwin(v4);
  long long v39 = (char *)v37 - v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v37 - v9;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void **)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v38 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  long long v40 = (char *)v37 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  float v19 = (char *)v37 - v18;
  __chkstk_darwin(v17);
  double v21 = (char *)v37 - v20;
  if ((*(unsigned char *)(v0 + 32) & 1) == 0)
  {
    uint64_t v22 = type metadata accessor for MetricsManager.PersonHeightMetric(0);
    sub_1000DB36C(v0 + *(int *)(v22 + 36), (uint64_t)v10);
    uint64_t v23 = (unsigned int (*)(char *, uint64_t, uint64_t))v12[6];
    if (v23(v10, 1, v11) == 1)
    {
      uint64_t v24 = v0;
    }
    else
    {
      v37[0] = v12[4];
      v37[1] = v12 + 4;
      ((void (*)(char *, char *, uint64_t))v37[0])(v21, v10, v11);
      uint64_t v25 = *(int *)(v22 + 40);
      uint64_t v24 = v0;
      uint64_t v10 = v39;
      sub_1000DB36C(v0 + v25, (uint64_t)v39);
      if (v23(v10, 1, v11) != 1)
      {
        ((void (*)(char *, char *, uint64_t))v37[0])(v19, v10, v11);
        Date.timeIntervalSince(_:)();
        float v30 = v34;
        uint64_t v35 = (void (*)(char *, uint64_t))v12[1];
        v35(v19, v11);
        v35(v21, v11);
        return v30;
      }
      ((void (*)(char *, uint64_t))v12[1])(v21, v11);
    }
    sub_10002B9C0((uint64_t)v10, (uint64_t *)&unk_1004C68F0);
    uint64_t v0 = v24;
  }
  uint64_t v26 = type metadata accessor for MetricsManager.PersonHeightMetric(0);
  sub_1000DB36C(v0 + *(int *)(v26 + 36), (uint64_t)v6);
  long long v27 = (unsigned int (*)(char *, uint64_t, uint64_t))v12[6];
  if (v27(v6, 1, v11) != 1)
  {
    long long v28 = (void (*)(char *, char *, uint64_t))v12[4];
    uint64_t v29 = v40;
    v28(v40, v6, v11);
    uint64_t v6 = v41;
    sub_1000DB36C(v0 + *(int *)(v26 + 44), (uint64_t)v41);
    if (v27(v6, 1, v11) != 1)
    {
      uint64_t v31 = v38;
      v28(v38, v6, v11);
      Date.timeIntervalSince(_:)();
      float v30 = v32;
      uint64_t v33 = (void (*)(char *, uint64_t))v12[1];
      v33(v31, v11);
      v33(v29, v11);
      return v30;
    }
    ((void (*)(char *, uint64_t))v12[1])(v29, v11);
  }
  sub_10002B9C0((uint64_t)v6, (uint64_t *)&unk_1004C68F0);
  return 0.0;
}

uint64_t sub_100146070(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100012894((uint64_t *)&unk_1004C68F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100012894(&qword_1004CCE88);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for MetricsManager.PersonHeightMetric(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC7Measure14MetricsManager_personHeightMetrics);
  swift_beginAccess();
  uint64_t v17 = *v16;
  if (!*(void *)(v17 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
LABEL_7:
    sub_10002B9C0((uint64_t)v11, &qword_1004CCE88);
    return swift_endAccess();
  }
  swift_bridgeObjectRetain();
  unint64_t v18 = sub_1000E20D4(a1, a2);
  if (v19)
  {
    sub_10014C440(*(void *)(v17 + 56) + *(void *)(v13 + 72) * v18, (uint64_t)v11, type metadata accessor for MetricsManager.PersonHeightMetric);
    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v20 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v20, 1, v12);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    goto LABEL_7;
  }
  sub_10014C378((uint64_t)v11, (uint64_t)v15, type metadata accessor for MetricsManager.PersonHeightMetric);
  swift_endAccess();
  Date.init()();
  uint64_t v22 = type metadata accessor for Date();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v8, 0, 1, v22);
  sub_100073BD8((uint64_t)v8, (uint64_t)&v15[*(int *)(v12 + 48)], (uint64_t *)&unk_1004C68F0);
  sub_1001463C0((uint64_t)v15);
  uint64_t v23 = v3 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  uint64_t result = swift_beginAccess();
  *(double *)uint64_t v23 = *(double *)v23 + 1.0;
  uint64_t v24 = *(void *)(v23 + 104);
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v23 + 104) = v26;
    return sub_10014C3E0((uint64_t)v15, type metadata accessor for MetricsManager.PersonHeightMetric);
  }
  return result;
}

uint64_t sub_1001463C0(uint64_t a1)
{
  uint64_t v2 = sub_100012894(&qword_1004CCE88);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v5 = *(unsigned char *)(a1 + 32);
  float v6 = sub_100145C3C();
  float v7 = sub_1001459BC();
  uint64_t v8 = a1 + *(int *)(type metadata accessor for MetricsManager.PersonHeightMetric(0) + 52);
  if (*(unsigned char *)(v8 + 4)) {
    float v9 = 0.0;
  }
  else {
    float v9 = *(float *)v8;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  unint64_t v12 = sub_100145824(v10);
  float v13 = *(float *)&v12;
  if ((v12 & (unint64_t)&_mh_execute_header) != 0) {
    float v13 = 0.0;
  }
  float v14 = vabds_f32(v9, v13);
  unint64_t v15 = sub_1000582E4(v10);
  float v16 = *(float *)&v15;
  if ((v15 & (unint64_t)&_mh_execute_header) != 0) {
    float v16 = 0.0;
  }
  float v17 = vabds_f32(v16, v9);
  double v18 = sub_10014587C();
  uint64_t v19 = *(void *)(v10 + 16);
  char v24 = v5;
  float v25 = v6;
  float v26 = v7;
  uint64_t v27 = v11;
  float v28 = v14;
  float v29 = v17;
  int v30 = LODWORD(v18);
  uint64_t v31 = v19;
  sub_10014C95C((long long *)&v24);
  uint64_t v20 = *(void *)a1;
  uint64_t v21 = *(void *)(a1 + 8);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1000A879C(v20, v21, (uint64_t)v4);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return sub_10002B9C0((uint64_t)v4, &qword_1004CCE88);
}

uint64_t sub_100146550()
{
  uint64_t v1 = v0;
  *(unsigned char *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  sub_10002D714(v0 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState);
  uint64_t v2 = OBJC_IVAR____TtC7Measure14MetricsManager__device;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v4 = sub_100012894((uint64_t *)&unk_1004C6A90);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1004F8630;
  float v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 272);
  swift_retain();
  *(void *)(v1 + v2) = v6(KeyPath, v5);
  uint64_t v7 = OBJC_IVAR____TtC7Measure14MetricsManager__unitState;
  uint64_t v8 = swift_getKeyPath();
  uint64_t v9 = sub_100012894(&qword_1004C96C8);
  uint64_t v10 = qword_1004F8630;
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 272);
  swift_retain();
  *(void *)(v1 + v7) = v11(v8, v10);
  *(void *)(v1 + OBJC_IVAR____TtC7Measure14MetricsManager_verticalGuideMetrics) = &_swiftEmptyDictionarySingleton;
  *(void *)(v1 + OBJC_IVAR____TtC7Measure14MetricsManager_edgeGuideMetrics) = &_swiftEmptyDictionarySingleton;
  *(void *)(v1 + OBJC_IVAR____TtC7Measure14MetricsManager_surfaceVectorGuideMetrics) = &_swiftEmptyDictionarySingleton;
  *(void *)(v1 + OBJC_IVAR____TtC7Measure14MetricsManager_personHeightMetrics) = &_swiftEmptyDictionarySingleton;
  return v1;
}

unint64_t sub_1001466C0(unint64_t result, uint64_t a2)
{
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return result;
    }
  }
  else if (!*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  uint64_t v3 = a2 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  swift_beginAccess();
  uint64_t result = type metadata accessor for AppSession();
  *(unsigned char *)(v3 + *(int *)(result + 100)) = 1;
  return result;
}

uint64_t sub_10014676C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_10001C99C(0, &qword_1004CCE90);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t *sub_1001467F0(void *a1)
{
  void (*v19)(void *__return_ptr, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *i;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  void *v46;
  void *v47;
  id v48;
  uint64_t v49;
  long long v50;
  long long v51;
  long long v52;
  long long v53;
  float32x4_t v54;
  int32x4_t v55;
  float32x2_t v56;
  float32x2_t v57;
  float32x4_t v58;
  int32x4_t v59;
  float32x2_t v60;
  float32x2_t v61;
  float32x4_t v62;
  float v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  double v68;
  double v69;
  void (*v70)(char *, void *);
  float v71;
  void *v72;
  int v73;
  long long v74;
  void *v75;
  id v76;
  uint64_t v77;
  double v78;
  double v79;
  void (*v80)(char *, uint64_t);
  float v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  long long v88;
  long long v89;
  long long v90;
  long long v91;
  uint64_t v92;
  uint64_t v93;
  float32x4_t v94;
  char *v95;
  char *v96;
  long long v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  float v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106[38];
  uint64_t v107[38];
  unsigned char v108[304];
  uint64_t v109;
  uint64_t v110;
  unsigned char v111[32];
  unsigned char v112[32];
  void v113[8];
  char v114;
  float32x4_t v115;
  char v116;
  long long v117;
  char v118;
  int v119;
  char v120;
  int v121;
  char v122;

  uint64_t v2 = v1;
  uint64_t v4 = sub_100012894(&qword_1004CC7A8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  float v96 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v95 = (char *)&v82 - v8;
  uint64_t v9 = (void *)sub_100012894(&qword_1004CC7B8);
  *(void *)&uint64_t v97 = *(v9 - 1);
  uint64_t v10 = __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  float v14 = (char *)&v82 - v13;
  uint64_t v15 = v1 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  uint64_t v16 = swift_beginAccess();
  *(double *)(v15 + 32) = *(double *)(v15 + 32) + 1.0;
  float v17 = &swift_isaMask;
  (*(void (**)(uint64_t *__return_ptr, uint64_t))((swift_isaMask & *a1) + 0x260))(v106, v16);
  sub_100016FEC((uint64_t)v106, (uint64_t)v107, &qword_1004CCE98);
  uint64_t result = (uint64_t *)sub_10014CD80(v107);
  if (result != 1)
  {
    uint64_t v93 = v4;
    v94.i64[0] = v5;
    memcpy(v108, v107, sizeof(v108));
    uint64_t v19 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v2
                                                                             + OBJC_IVAR____TtC7Measure14MetricsManager__device)
                                                               + 144);
    uint64_t v20 = swift_retain();
    v19(v113, v20);
    uint64_t v21 = swift_release();
    if (v114) {
      return sub_10014CDA4(v106);
    }
    *(void *)&uint64_t v91 = v113[1];
    uint64_t v86 = v113[2];
    uint64_t v87 = v113[0];
    *(void *)&uint64_t v90 = v113[3];
    *(void *)&uint64_t v89 = v113[5];
    unint64_t v84 = v113[6];
    float32x4_t v85 = v113[4];
    *(void *)&uint64_t v88 = v113[7];
    uint64_t v22 = *(void *)((swift_isaMask & *a1) + 0x230);
    uint64_t v23 = ((uint64_t (*)(uint64_t))v22)(v21);
    if (v23 >> 62) {
      char v24 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      char v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v92 = 0x6E776F6E6B6E75;
    float v25 = swift_bridgeObjectRelease();
    if (v24 < 1) {
      goto LABEL_22;
    }
    float v26 = ((uint64_t (*)(uint64_t))v22)(v25);
    if ((v26 & 0xC000000000000001) != 0) {
      goto LABEL_55;
    }
    if (!*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_57;
    }
    for (uint64_t i = *(id *)(v26 + 32); ; uint64_t i = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)())
    {
      float v28 = i;
      float v29 = swift_bridgeObjectRelease();
      int v30 = (*(uint64_t (**)(uint64_t))((*v17 & *v28) + 0x250))(v29);

      if (v30 >> 62)
      {
LABEL_57:
        swift_bridgeObjectRetain();
        uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      double v32 = swift_bridgeObjectRelease();
      if (v31 < 1)
      {
LABEL_22:
        float v45 = 0xE700000000000000;
        uint64_t v83 = 0x6E776F6E6B6E75;
        float v17 = (void *)0xE700000000000000;
        uint64_t v22 = v94.i64[0];
        goto LABEL_36;
      }
      uint64_t v33 = ((uint64_t (*)(uint64_t))v22)(v32);
      if ((v33 & 0xC000000000000001) != 0)
      {
        double v34 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_60;
        }
        double v34 = *(id *)(v33 + 32);
      }
      uint64_t v35 = v34;
      uint64_t v22 = v94.i64[0];
      uint64_t v36 = swift_bridgeObjectRelease();
      __int16 v37 = (*(uint64_t (**)(uint64_t))((*v17 & *v35) + 0x250))(v36);

      if ((v37 & 0xC000000000000001) == 0)
      {
        if (!*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
          JUMPOUT(0x1001473F4);
        }
        uint64_t v38 = *(id *)(v37 + 32);
        goto LABEL_19;
      }
LABEL_60:
      uint64_t v38 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_19:
      long long v39 = v38;
      long long v40 = swift_bridgeObjectRelease();
      long long v41 = (*(uint64_t (**)(uint64_t))((*v17 & *v39) + 0x2C0))(v40);

      uint64_t v42 = (*(uint64_t (**)(void))(*(void *)v41 + 216))();
      float v43 = swift_release();
      if (v42)
      {
        float v17 = (void *)0xE500000000000000;
        float v44 = 0x74694B7261;
        switch((*(unsigned __int8 (**)(uint64_t))(*(void *)v42 + 248))(v43))
        {
          case 1u:
            float v17 = (void *)0xE800000000000000;
            float v44 = 0x6465727265666E69;
            break;
          case 2u:
            float v17 = (void *)0xE800000000000000;
            float v44 = 0x6B6361626C6C6166;
            break;
          case 3u:
            float v44 = 0x6C61636F6CLL;
            break;
          case 4u:
            float v17 = (void *)0xE800000000000000;
            float v44 = 0x73756F6976657270;
            break;
          case 5u:
            float v44 = 0x6863746170;
            break;
          case 6u:
            float v44 = 0x706544656C707061;
            float v17 = (void *)0xEA00000000006874;
            break;
          default:
            break;
        }
        uint64_t v46 = (void *)(*(uint64_t (**)(void))(*(void *)v42 + 160))();
        self;
        uint64_t v47 = (void *)swift_dynamicCastObjCClass();
        uint64_t v83 = v44;
        if (v47)
        {
          BOOL v48 = [v47 alignment];
          swift_release();

          uint64_t v49 = 0x6C61636974726576;
          if (!v48) {
            uint64_t v49 = 0x746E6F7A69726F68;
          }
          uint64_t v92 = v49;
          if (v48) {
            float v45 = 0xE800000000000000;
          }
          else {
            float v45 = 0xEA00000000006C61;
          }
        }
        else
        {
          swift_release();

          float v45 = 0xE700000000000000;
        }
      }
      else
      {
        float v45 = 0xE700000000000000;
        uint64_t v83 = 0x6E776F6E6B6E75;
        float v17 = (void *)0xE700000000000000;
      }
LABEL_36:
      *(void *)&long long v50 = v87;
      *(void *)&long long v51 = v86;
      *(void *)&long long v52 = v85;
      *(void *)&long long v53 = v84;
      *((void *)&v50 + 1) = v91;
      *((void *)&v51 + 1) = v90;
      *((void *)&v52 + 1) = v89;
      *((void *)&v53 + 1) = v88;
      uint64_t v90 = v51;
      uint64_t v91 = v50;
      uint64_t v88 = v53;
      uint64_t v89 = v52;
      simd_float4x4.forward.getter();
      uint64_t v94 = v54;
      sub_100016FEC((uint64_t)&v108[208], (uint64_t)v112, &qword_1004CCEA0);
      sub_100016FEC((uint64_t)v112, (uint64_t)&v115, &qword_1004CCEA0);
      if (v116) {
        goto LABEL_62;
      }
      uint64_t v87 = v45;
      uint64_t v55 = (int32x4_t)vmulq_f32(v115, v115);
      v55.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v55, 2), vadd_f32(*(float32x2_t *)v55.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v55.i8, 1))).u32[0];
      float32x4_t v56 = vrsqrte_f32((float32x2_t)v55.u32[0]);
      double v57 = vmul_f32(v56, vrsqrts_f32((float32x2_t)v55.u32[0], vmul_f32(v56, v56)));
      uint64_t v58 = vmulq_n_f32(v115, vmul_f32(v57, vrsqrts_f32((float32x2_t)v55.u32[0], vmul_f32(v57, v57))).f32[0]);
      uint64_t v59 = (int32x4_t)vmulq_f32(v94, v94);
      v59.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v59, 2), vadd_f32(*(float32x2_t *)v59.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v59.i8, 1))).u32[0];
      uint64_t v60 = vrsqrte_f32((float32x2_t)v59.u32[0]);
      long long v61 = vmul_f32(v60, vrsqrts_f32((float32x2_t)v59.u32[0], vmul_f32(v60, v60)));
      float v62 = vmulq_f32(v58, vmulq_n_f32(v94, vmul_f32(v61, vrsqrts_f32((float32x2_t)v59.u32[0], vmul_f32(v61, v61))).f32[0]));
      uint64_t v63 = acosf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v62, 2), vaddq_f32(v62, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v62.f32, 1))).f32[0]);
      sub_100016FEC((uint64_t)&v108[132], (uint64_t)&v109, &qword_1004C74C8);
      sub_100016FEC((uint64_t)&v109, (uint64_t)&v121, &qword_1004C74C8);
      if (v122) {
        goto LABEL_63;
      }
      uint64_t v64 = self;
      float32x4_t v65 = [v64 squareMeters];
      float32x4_t v66 = [v64 squareMillimeters];
      sub_10001C99C(0, &qword_1004CC7C0);
      float32x4_t v67 = v65;
      Measurement.init(value:unit:)();
      Measurement<>.converted(to:)();
      Measurement.value.getter();
      __int16 v69 = v68;
      int v70 = *(void (**)(char *, void *))(v97 + 8);
      v70(v12, v9);
      __int16 v71 = v69;
      v70(v14, v9);

      if ((~LODWORD(v71) & 0x7F800000) == 0)
      {
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      if (v71 <= -9.2234e18) {
        goto LABEL_50;
      }
      if (v71 >= 9.2234e18) {
        goto LABEL_51;
      }
      sub_100016FEC((uint64_t)&v108[140], (uint64_t)&v110, &qword_1004C74C8);
      sub_100016FEC((uint64_t)&v110, (uint64_t)&v119, &qword_1004C74C8);
      if (v120) {
        goto LABEL_64;
      }
      uint64_t v72 = v17;
      uint64_t v73 = v119;
      simd_float4x4.position.getter();
      uint64_t v97 = v74;
      sub_100016FEC((uint64_t)&v108[112], (uint64_t)v111, &qword_1004CCEA0);
      sub_100016FEC((uint64_t)v111, (uint64_t)&v117, &qword_1004CCEA0);
      if (v118) {
        goto LABEL_65;
      }
      char v75 = self;
      uint64_t v76 = [v75 meters];
      uint64_t v9 = [v75 millimeters];
      sub_10001C99C(0, &qword_1004CC7B0);
      unint64_t v12 = (char *)v76;
      float v14 = v95;
      Measurement.init(value:unit:)();
      float v17 = v96;
      uint64_t v77 = v93;
      Measurement<>.converted(to:)();
      Measurement.value.getter();
      uint64_t v79 = v78;
      float32x4_t v80 = *(void (**)(char *, uint64_t))(v22 + 8);
      v22 += 8;
      v80((char *)v17, v77);
      uint64_t v81 = v79;
      v80(v14, v77);

      if ((~LODWORD(v81) & 0x7F800000) == 0) {
        goto LABEL_52;
      }
      if (v81 <= -9.2234e18) {
        goto LABEL_53;
      }
      if (v81 < 9.2234e18)
      {
        double v98 = (uint64_t)v71;
        uint64_t v99 = v73;
        uint64_t v100 = (uint64_t)v81;
        uint64_t v101 = v63 * 57.296;
        float32x4_t v102 = v83;
        float v103 = v72;
        int8x16_t v104 = v92;
        unsigned int v105 = v87;
        sub_100122004((uint64_t)&v98);
        sub_100022E88((uint64_t)&v98, (uint64_t)v113);
        sub_10014C4B4((uint64_t)v113);
        sub_10014CDA4(v106);
        swift_bridgeObjectRelease();
        return (uint64_t *)swift_bridgeObjectRelease();
      }
LABEL_54:
      __break(1u);
LABEL_55:
      ;
    }
  }
  return result;
}

uint64_t sub_100147410()
{
  sub_10014C3E0(v0 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState, (uint64_t (*)(void))type metadata accessor for AppSession);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1001474E8()
{
  return type metadata accessor for MetricsManager(0);
}

uint64_t type metadata accessor for MetricsManager(uint64_t a1)
{
  return sub_1000E9730(a1, qword_1004CCA98);
}

uint64_t sub_100147510()
{
  uint64_t result = type metadata accessor for AppSession();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *sub_1001475DC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = a2[3];
    uint64_t v8 = a3[9];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100012894((uint64_t *)&unk_1004C68F0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[10];
    float v17 = (char *)v4 + v16;
    double v18 = (char *)a2 + v16;
    if (v13((char *)a2 + v16, 1, v11))
    {
      uint64_t v19 = sub_100012894((uint64_t *)&unk_1004C68F0);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    uint64_t v20 = a3[11];
    uint64_t v21 = (char *)v4 + v20;
    uint64_t v22 = (char *)a2 + v20;
    if (v13((char *)a2 + v20, 1, v11))
    {
      uint64_t v23 = sub_100012894((uint64_t *)&unk_1004C68F0);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v21, v22, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v11);
    }
    uint64_t v24 = a3[12];
    float v25 = (char *)v4 + v24;
    float v26 = (char *)a2 + v24;
    if (v13((char *)a2 + v24, 1, v11))
    {
      uint64_t v27 = sub_100012894((uint64_t *)&unk_1004C68F0);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v25, v26, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
    }
    uint64_t v28 = a3[13];
    float v29 = (char *)v4 + v28;
    uint64_t v30 = (uint64_t)a2 + v28;
    *(_DWORD *)float v29 = *(_DWORD *)v30;
    v29[4] = *(unsigned char *)(v30 + 4);
  }
  return v4;
}

uint64_t sub_100147974(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + a2[10];
  if (!v6(v7, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v7, v5);
  }
  uint64_t v8 = a1 + a2[11];
  if (!v6(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v8, v5);
  }
  uint64_t v9 = a1 + a2[12];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v9, 1, v5);
  if (!result)
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
    return v11(v9, v5);
  }
  return result;
}

uint64_t sub_100147B24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if (v11((const void *)(a2 + v13), 1, v9))
  {
    uint64_t v16 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v14, v15, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[11];
  double v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  if (v11((const void *)(a2 + v17), 1, v9))
  {
    uint64_t v20 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v18, v19, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
  }
  uint64_t v21 = a3[12];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (const void *)(a2 + v21);
  if (v11((const void *)(a2 + v21), 1, v9))
  {
    uint64_t v24 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v22, v23, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
  }
  uint64_t v25 = a3[13];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(unsigned char *)(v26 + 4) = *(unsigned char *)(v27 + 4);
  return a1;
}

uint64_t sub_100147E74(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[10];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  int v18 = v11((void *)(a1 + v15), 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = a3[11];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  int v24 = v11((void *)(a1 + v21), 1, v9);
  int v25 = v11(v23, 1, v9);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v22, v23, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v25)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v22, v9);
LABEL_18:
    uint64_t v26 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v22, v23, v9);
LABEL_19:
  uint64_t v27 = a3[12];
  uint64_t v28 = (void *)(a1 + v27);
  float v29 = (void *)(a2 + v27);
  int v30 = v11((void *)(a1 + v27), 1, v9);
  int v31 = v11(v29, 1, v9);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v28, v29, v9);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v28, v9);
    goto LABEL_24;
  }
  if (v31)
  {
LABEL_24:
    uint64_t v32 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v28, v29, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v9);
LABEL_25:
  uint64_t v33 = a3[13];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = (int *)(a2 + v33);
  int v36 = *v35;
  *(unsigned char *)(v34 + 4) = *((unsigned char *)v35 + 4);
  *(_DWORD *)uint64_t v34 = v36;
  return a1;
}

uint64_t sub_100148354(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if (v11((const void *)(a2 + v13), 1, v9))
  {
    uint64_t v16 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[11];
  int v18 = (void *)(a1 + v17);
  int v19 = (const void *)(a2 + v17);
  if (v11((const void *)(a2 + v17), 1, v9))
  {
    uint64_t v20 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v18, v19, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
  }
  uint64_t v21 = a3[12];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (const void *)(a2 + v21);
  if (v11((const void *)(a2 + v21), 1, v9))
  {
    uint64_t v24 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v22, v23, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
  }
  uint64_t v25 = a3[13];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(unsigned char *)(v26 + 4) = *(unsigned char *)(v27 + 4);
  return a1;
}

uint64_t sub_100148688(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = a3[9];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[10];
  uint64_t v17 = (void *)(a1 + v16);
  int v18 = (void *)(a2 + v16);
  int v19 = v12((void *)(a1 + v16), 1, v10);
  int v20 = v12(v18, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v17, v18, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
LABEL_12:
    uint64_t v21 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v17, v18, v10);
LABEL_13:
  uint64_t v22 = a3[11];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  int v25 = v12((void *)(a1 + v22), 1, v10);
  int v26 = v12(v24, 1, v10);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v23, v24, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v23, 0, 1, v10);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v23, v10);
LABEL_18:
    uint64_t v27 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v23, v24, v10);
LABEL_19:
  uint64_t v28 = a3[12];
  float v29 = (void *)(a1 + v28);
  int v30 = (void *)(a2 + v28);
  int v31 = v12((void *)(a1 + v28), 1, v10);
  int v32 = v12(v30, 1, v10);
  if (!v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v29, v30, v10);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v29, v10);
    goto LABEL_24;
  }
  if (v32)
  {
LABEL_24:
    uint64_t v33 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v29, v30, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v29, 0, 1, v10);
LABEL_25:
  uint64_t v34 = a3[13];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
  *(unsigned char *)(v35 + 4) = *(unsigned char *)(v36 + 4);
  return a1;
}

uint64_t sub_100148B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100148B5C);
}

uint64_t sub_100148B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100012894((uint64_t *)&unk_1004C68F0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100148C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100148C24);
}

uint64_t sub_100148C24(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100012894((uint64_t *)&unk_1004C68F0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MetricsManager.PersonHeightMetric(uint64_t a1)
{
  return sub_1000E9730(a1, qword_1004CCBB8);
}

void sub_100148CF0()
{
  sub_10006B9DC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_100148DC0(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    uint64_t v9 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v9;
    *(_DWORD *)(a1 + 72) = *((_DWORD *)a2 + 18);
    uint64_t v10 = a2[10];
    uint64_t v11 = a2[11];
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    uint64_t v12 = a3[14];
    uint64_t v25 = (uint64_t)a2 + v12;
    uint64_t v26 = a1 + v12;
    *(void *)(a1 + 80) = v10;
    *(void *)(a1 + 88) = v11;
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v26, v25, v13);
    uint64_t v16 = a3[15];
    uint64_t v17 = (char *)v4 + v16;
    int v18 = (char *)a2 + v16;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))((uint64_t)a2 + v16, 1, v13))
    {
      uint64_t v19 = sub_100012894((uint64_t *)&unk_1004C68F0);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      v15((uint64_t)v17, (uint64_t)v18, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
    }
    uint64_t v21 = a3[17];
    *(_OWORD *)((char *)v4 + a3[16]) = *(_OWORD *)((char *)a2 + a3[16]);
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = (uint64_t)a2 + v21;
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    v22[16] = *(unsigned char *)(v23 + 16);
  }
  return v4;
}

uint64_t sub_100148FF0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 56);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v4, v5);
  uint64_t v7 = a1 + *(int *)(a2 + 60);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v5);
  }
  return result;
}

uint64_t sub_100149110(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 80);
  uint64_t v9 = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v10 = a3[14];
  uint64_t v23 = (const void *)(a2 + v10);
  uint64_t v24 = (void *)(a1 + v10);
  *(void *)(a1 + 80) = v8;
  *(void *)(a1 + 88) = v9;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v24, v23, v11);
  uint64_t v14 = a3[15];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v14, 1, v11))
  {
    uint64_t v17 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  uint64_t v18 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  return a1;
}

uint64_t sub_1001492F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v6 = *(int *)(a3 + 56);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v22 = *(void (**)(void *, const void *, uint64_t))(v10 + 24);
  v22(v7, v8, v9);
  uint64_t v23 = a3;
  uint64_t v11 = *(int *)(a3 + 60);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(a3) = v14((const void *)(a1 + v11), 1, v9);
  int v15 = v14(v13, 1, v9);
  if (!a3)
  {
    if (!v15)
    {
      v22(v12, v13, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v12, v13, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v9);
LABEL_7:
  *(_OWORD *)(a1 + *(int *)(v23 + 64)) = *(_OWORD *)(a2 + *(int *)(v23 + 64));
  uint64_t v17 = *(int *)(v23 + 68);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (long long *)(a2 + v17);
  long long v20 = *v19;
  *(unsigned char *)(v18 + 16) = *((unsigned char *)v19 + 16);
  *(_OWORD *)uint64_t v18 = v20;
  return a1;
}

uint64_t sub_10014958C(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  long long v6 = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v7 = a3[14];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  uint64_t v13 = a3[15];
  uint64_t v14 = (void *)(a1 + v13);
  int v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    uint64_t v16 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  uint64_t v17 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
  return a1;
}

uint64_t sub_100149740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v10 = *(int *)(a3 + 56);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v25 = *(void (**)(void *, const void *, uint64_t))(v14 + 40);
  v25(v11, v12, v13);
  uint64_t v26 = a3;
  uint64_t v15 = *(int *)(a3 + 60);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(a3) = v18((const void *)(a1 + v15), 1, v13);
  int v19 = v18(v17, 1, v13);
  if (!a3)
  {
    if (!v19)
    {
      v25(v16, v17, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v16, v17, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v13);
LABEL_7:
  uint64_t v21 = *(int *)(v26 + 68);
  *(_OWORD *)(a1 + *(int *)(v26 + 64)) = *(_OWORD *)(a2 + *(int *)(v26 + 64));
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(unsigned char *)(v22 + 16) = *(unsigned char *)(v23 + 16);
  return a1;
}

uint64_t sub_100149990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001499A4);
}

uint64_t sub_1001499A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 56);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100012894((uint64_t *)&unk_1004C68F0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 60);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100149AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100149AE8);
}

uint64_t sub_100149AE8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 56);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100012894((uint64_t *)&unk_1004C68F0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 60);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for MetricsManager.SurfaceVectorGuideMetric(uint64_t a1)
{
  return sub_1000E9730(a1, qword_1004CCC68);
}

void sub_100149C38()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_10006B9DC();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_100149D48(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = a2[6];
    uint64_t v9 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v9;
    *(_DWORD *)(a1 + 72) = *((_DWORD *)a2 + 18);
    uint64_t v10 = a2[10];
    uint64_t v11 = a2[11];
    *(_WORD *)(a1 + 96) = *((_WORD *)a2 + 48);
    uint64_t v12 = a3[16];
    uint64_t v28 = (uint64_t)a2 + v12;
    uint64_t v29 = a1 + v12;
    *(void *)(a1 + 80) = v10;
    *(void *)(a1 + 88) = v11;
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v29, v28, v13);
    uint64_t v16 = a3[17];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))((uint64_t)a2 + v16, 1, v13))
    {
      uint64_t v19 = sub_100012894((uint64_t *)&unk_1004C68F0);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      v15((uint64_t)v17, (uint64_t)v18, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
    }
    uint64_t v21 = a3[18];
    uint64_t v22 = a3[19];
    uint64_t v23 = (char *)v4 + v21;
    uint64_t v24 = (uint64_t)a2 + v21;
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    v23[16] = *(unsigned char *)(v24 + 16);
    uint64_t v25 = (char *)v4 + v22;
    uint64_t v26 = (uint64_t)a2 + v22;
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    v25[16] = *(unsigned char *)(v26 + 16);
  }
  return v4;
}

uint64_t sub_100149F88(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 64);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v4, v5);
  uint64_t v7 = a1 + *(int *)(a2 + 68);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v5);
  }
  return result;
}

uint64_t sub_10014A0A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 80);
  uint64_t v9 = *(void *)(a2 + 88);
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  uint64_t v10 = a3[16];
  uint64_t v26 = (const void *)(a2 + v10);
  uint64_t v27 = (void *)(a1 + v10);
  *(void *)(a1 + 80) = v8;
  *(void *)(a1 + 88) = v9;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v27, v26, v11);
  uint64_t v14 = a3[17];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v14, 1, v11))
  {
    uint64_t v17 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  uint64_t v18 = a3[18];
  uint64_t v19 = a3[19];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v21 + 16);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(unsigned char *)(v22 + 16) = *(unsigned char *)(v23 + 16);
  return a1;
}

uint64_t sub_10014A298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  uint64_t v6 = *(int *)(a3 + 64);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v26 = *(void (**)(void *, const void *, uint64_t))(v10 + 24);
  v26(v7, v8, v9);
  uint64_t v27 = a3;
  uint64_t v11 = *(int *)(a3 + 68);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(a3) = v14((const void *)(a1 + v11), 1, v9);
  int v15 = v14(v13, 1, v9);
  if (!a3)
  {
    if (!v15)
    {
      v26(v12, v13, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v12, v13, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v9);
LABEL_7:
  uint64_t v17 = *(int *)(v27 + 72);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (long long *)(a2 + v17);
  long long v20 = *v19;
  *(unsigned char *)(v18 + 16) = *((unsigned char *)v19 + 16);
  *(_OWORD *)uint64_t v18 = v20;
  uint64_t v21 = *(int *)(v27 + 76);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (long long *)(a2 + v21);
  long long v24 = *v23;
  *(unsigned char *)(v22 + 16) = *((unsigned char *)v23 + 16);
  *(_OWORD *)uint64_t v22 = v24;
  return a1;
}

uint64_t sub_10014A554(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  long long v6 = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  uint64_t v7 = a3[16];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  uint64_t v13 = a3[17];
  uint64_t v14 = (void *)(a1 + v13);
  int v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    uint64_t v16 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  uint64_t v17 = a3[18];
  uint64_t v18 = a3[19];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  uint64_t v21 = a1 + v18;
  uint64_t v22 = a2 + v18;
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(unsigned char *)(v21 + 16) = *(unsigned char *)(v22 + 16);
  return a1;
}

uint64_t sub_10014A720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  uint64_t v10 = *(int *)(a3 + 64);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v28 = *(void (**)(void *, const void *, uint64_t))(v14 + 40);
  v28(v11, v12, v13);
  uint64_t v29 = a3;
  uint64_t v15 = *(int *)(a3 + 68);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(a3) = v18((const void *)(a1 + v15), 1, v13);
  int v19 = v18(v17, 1, v13);
  if (!a3)
  {
    if (!v19)
    {
      v28(v16, v17, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v16, v17, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v13);
LABEL_7:
  uint64_t v21 = *(int *)(v29 + 72);
  uint64_t v22 = *(int *)(v29 + 76);
  uint64_t v23 = a1 + v21;
  uint64_t v24 = a2 + v21;
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *(unsigned char *)(v23 + 16) = *(unsigned char *)(v24 + 16);
  uint64_t v25 = a1 + v22;
  uint64_t v26 = a2 + v22;
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(unsigned char *)(v25 + 16) = *(unsigned char *)(v26 + 16);
  return a1;
}

uint64_t sub_10014A988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10014A99C);
}

uint64_t sub_10014A99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 64);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100012894((uint64_t *)&unk_1004C68F0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 68);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10014AACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10014AAE0);
}

uint64_t sub_10014AAE0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 64);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100012894((uint64_t *)&unk_1004C68F0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 68);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for MetricsManager.EdgeGuideMetric(uint64_t a1)
{
  return sub_1000E9730(a1, qword_1004CCD28);
}

void sub_10014AC30()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_10006B9DC();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_10014AD38(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = a3[9];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    *(_DWORD *)(a1 + 28) = *((_DWORD *)a2 + 7);
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v11);
    uint64_t v14 = a3[10];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))((uint64_t)a2 + v14, 1, v11))
    {
      uint64_t v17 = sub_100012894((uint64_t *)&unk_1004C68F0);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v13((uint64_t)v15, (uint64_t)v16, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    uint64_t v19 = a3[12];
    *(_OWORD *)((char *)v4 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
    uint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = (uint64_t)a2 + v19;
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    v20[16] = *(unsigned char *)(v21 + 16);
  }
  return v4;
}

uint64_t sub_10014AF1C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v4, v5);
  uint64_t v7 = a1 + *(int *)(a2 + 40);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v5);
  }
  return result;
}

uint64_t sub_10014B024(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  uint64_t v7 = a3[9];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v12(v8, v9, v10);
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    uint64_t v16 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  uint64_t v17 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
  return a1;
}

uint64_t sub_10014B1B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v22 = *(void (**)(void *, const void *, uint64_t))(v10 + 24);
  v22(v7, v8, v9);
  uint64_t v23 = a3;
  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(a3) = v14((const void *)(a1 + v11), 1, v9);
  int v15 = v14(v13, 1, v9);
  if (!a3)
  {
    if (!v15)
    {
      v22(v12, v13, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v12, v13, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v9);
LABEL_7:
  *(_OWORD *)(a1 + *(int *)(v23 + 44)) = *(_OWORD *)(a2 + *(int *)(v23 + 44));
  uint64_t v17 = *(int *)(v23 + 48);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (long long *)(a2 + v17);
  long long v20 = *v19;
  *(unsigned char *)(v18 + 16) = *((unsigned char *)v19 + 16);
  *(_OWORD *)uint64_t v18 = v20;
  return a1;
}

uint64_t sub_10014B3E4(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = a3[10];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a2 + v12, 1, v9))
  {
    uint64_t v15 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  uint64_t v16 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  return a1;
}

uint64_t sub_10014B570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v22 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v22(v8, v9, v10);
  uint64_t v23 = a3;
  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(a3) = v15((const void *)(a1 + v12), 1, v10);
  int v16 = v15(v14, 1, v10);
  if (!a3)
  {
    if (!v16)
    {
      v22(v13, v14, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_100012894((uint64_t *)&unk_1004C68F0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v13, v14, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
LABEL_7:
  uint64_t v18 = *(int *)(v23 + 48);
  *(_OWORD *)(a1 + *(int *)(v23 + 44)) = *(_OWORD *)(a2 + *(int *)(v23 + 44));
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  return a1;
}

uint64_t sub_10014B780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10014B794);
}

uint64_t sub_10014B794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100012894((uint64_t *)&unk_1004C68F0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10014B8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10014B8D8);
}

uint64_t sub_10014B8D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100012894((uint64_t *)&unk_1004C68F0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for MetricsManager.VerticalGuideMetric(uint64_t a1)
{
  return sub_1000E9730(a1, qword_1004CCDF0);
}

void sub_10014BA28()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_10006B9DC();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10014BB38(long long *a1)
{
  void v25[3] = &type metadata for SessionEvent;
  v25[4] = &off_100488620;
  v25[0] = swift_allocObject();
  sub_100022EC8(a1, (_OWORD *)(v25[0] + 16));
  sub_10014CCC0((uint64_t)a1);
  unint64_t v2 = sub_100021CB8();
  sub_10013F8B4(v2);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (v4)
  {
    if (qword_1004C2A18 != -1) {
      swift_once();
    }
    aBlock = (void **)qword_1004F8070;
    uint64_t v19 = *(void *)algn_1004F8078;
    swift_bridgeObjectRetain();
    v5._uint64_t countAndFlagsBits = 46;
    v5._object = (void *)0xE100000000000000;
    String.append(_:)(v5);
    sub_100022EC8(a1, v26);
    if (v27 < 0) {
      unint64_t v6 = 0xD000000000000011;
    }
    else {
      unint64_t v6 = 0x536E6F6973736573;
    }
    if (v27 < 0) {
      unint64_t v7 = 0x8000000100427970;
    }
    else {
      unint64_t v7 = 0xEE007972616D6D75;
    }
    v27 &= ~0x8000000000000000;
    unint64_t v8 = v7;
    String.append(_:)(*(Swift::String *)&v6);
    swift_bridgeObjectRelease();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v4;
    uint64_t v22 = sub_10014CEA8;
    uint64_t v23 = v10;
    aBlock = _NSConcreteStackBlock;
    uint64_t v19 = 1107296256;
    uint64_t v20 = sub_10013FC14;
    uint64_t v21 = &unk_10048F3B8;
    uint64_t v11 = _Block_copy(&aBlock);
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v11);

    return sub_100013218((uint64_t)v25);
  }
  else
  {
    sub_10002B8B4((uint64_t)v25, (uint64_t)&aBlock);
    *(void *)&v26[0] = 0;
    *((void *)&v26[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(53);
    long long v24 = v26[0];
    v13._uint64_t countAndFlagsBits = 0xD000000000000020;
    v13._object = (void *)0x80000001004278E0;
    String.append(_:)(v13);
    uint64_t v14 = (long long *)sub_1000131D4(&aBlock, (uint64_t)v21);
    sub_100022EC8(v14, v26);
    unint64_t v15 = sub_100021CB8();
    sub_10013F528(v15);
    swift_bridgeObjectRelease();
    sub_10001C99C(0, &qword_1004CA050);
    sub_10001C99C(0, (unint64_t *)&qword_1004C4568);
    sub_10014C2B8();
    v16._uint64_t countAndFlagsBits = Dictionary.description.getter();
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17._uint64_t countAndFlagsBits = 0xD000000000000013;
    v17._object = (void *)0x8000000100427910;
    String.append(_:)(v17);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_10014BE84(uint64_t a1)
{
  v29[3] = &type metadata for GuidesEvent;
  v29[4] = &off_100488668;
  v29[0] = swift_allocObject();
  sub_100022E60(a1, v29[0] + 16);
  sub_10014C264(a1);
  unint64_t v2 = sub_1000227BC();
  sub_10013F8B4(v2);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (v4)
  {
    if (qword_1004C2A18 != -1) {
      swift_once();
    }
    aBlock = (void **)qword_1004F8070;
    uint64_t v22 = *(void *)algn_1004F8078;
    swift_bridgeObjectRetain();
    v5._uint64_t countAndFlagsBits = 46;
    v5._object = (void *)0xE100000000000000;
    String.append(_:)(v5);
    sub_100022E60(a1, (uint64_t)&v30);
    int v6 = v32 >> 14;
    unint64_t v7 = 0x8000000100427950;
    if (v6 == 1) {
      unint64_t v8 = 0xD000000000000014;
    }
    else {
      unint64_t v8 = 0x762E736564697567;
    }
    if (v6 != 1) {
      unint64_t v7 = 0xEF6C616369747265;
    }
    if (v6) {
      uint64_t v9 = v8;
    }
    else {
      uint64_t v9 = 0x652E736564697567;
    }
    if (v6) {
      unint64_t v10 = v7;
    }
    else {
      unint64_t v10 = 0xEB00000000656764;
    }
    v32 &= 0x3FFFu;
    unint64_t v11 = v10;
    String.append(_:)(*(Swift::String *)&v9);
    swift_bridgeObjectRelease();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v4;
    uint64_t v25 = sub_10014C358;
    uint64_t v26 = v13;
    aBlock = _NSConcreteStackBlock;
    uint64_t v22 = 1107296256;
    uint64_t v23 = sub_10013FC14;
    long long v24 = &unk_10048F250;
    uint64_t v14 = _Block_copy(&aBlock);
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v14);

    return sub_100013218((uint64_t)v29);
  }
  else
  {
    sub_10002B8B4((uint64_t)v29, (uint64_t)&aBlock);
    uint64_t v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    _StringGuts.grow(_:)(53);
    uint64_t v27 = v30;
    unint64_t v28 = v31;
    v16._uint64_t countAndFlagsBits = 0xD000000000000020;
    v16._object = (void *)0x80000001004278E0;
    String.append(_:)(v16);
    Swift::String v17 = sub_1000131D4(&aBlock, (uint64_t)v24);
    sub_100022E60((uint64_t)v17, (uint64_t)&v30);
    unint64_t v18 = sub_1000227BC();
    sub_10013F528(v18);
    swift_bridgeObjectRelease();
    sub_10001C99C(0, &qword_1004CA050);
    sub_10001C99C(0, (unint64_t *)&qword_1004C4568);
    sub_10014C2B8();
    v19._uint64_t countAndFlagsBits = Dictionary.description.getter();
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20._object = (void *)0x8000000100427910;
    v20._uint64_t countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v20);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_10014C208()
{
  sub_100023A50(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(_WORD *)(v0 + 96));

  return _swift_deallocObject(v0, 98, 7);
}

uint64_t sub_10014C264(uint64_t a1)
{
  return a1;
}

unint64_t sub_10014C2B8()
{
  unint64_t result = qword_1004CCE50;
  if (!qword_1004CCE50)
  {
    sub_10001C99C(255, &qword_1004CA050);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CCE50);
  }
  return result;
}

uint64_t sub_10014C320()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10014C358()
{
  return j__swift_bridgeObjectRetain(*(void *)(v0 + 16));
}

uint64_t sub_10014C360(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10014C370()
{
  return swift_release();
}

uint64_t sub_10014C378(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10014C3E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10014C440(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10014C4A8(uint64_t result)
{
  *(unsigned char *)(result + 144) = 1;
  return result;
}

uint64_t sub_10014C4B4(uint64_t a1)
{
  v27[3] = &type metadata for ConfirmedEvent;
  v27[4] = &off_100488650;
  v27[0] = swift_allocObject();
  sub_100022E88(a1, v27[0] + 16);
  sub_10014C8F8(a1);
  unint64_t v2 = sub_100022110();
  sub_10013F8B4(v2);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (v4)
  {
    if (qword_1004C2A18 != -1) {
      swift_once();
    }
    aBlock = (void **)qword_1004F8070;
    uint64_t v20 = *(void *)algn_1004F8078;
    swift_bridgeObjectRetain();
    v5._uint64_t countAndFlagsBits = 46;
    v5._object = (void *)0xE100000000000000;
    String.append(_:)(v5);
    sub_100022E88(a1, (uint64_t)&v28);
    int v6 = sub_100022EC0((uint64_t)&v28);
    nullsub_1(&v28);
    if (v6 == 1) {
      uint64_t v7 = 1701734764;
    }
    else {
      uint64_t v7 = 0x6C676E6174636572;
    }
    if (v6 == 1) {
      unint64_t v8 = 0xE400000000000000;
    }
    else {
      unint64_t v8 = 0xE900000000000065;
    }
    unint64_t v9 = v8;
    String.append(_:)(*(Swift::String *)&v7);
    swift_bridgeObjectRelease();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v4;
    uint64_t v23 = sub_10014CEA8;
    uint64_t v24 = v11;
    aBlock = _NSConcreteStackBlock;
    uint64_t v20 = 1107296256;
    uint64_t v21 = sub_10013FC14;
    uint64_t v22 = &unk_10048F2C8;
    NSString v12 = _Block_copy(&aBlock);
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v12);

    return sub_100013218((uint64_t)v27);
  }
  else
  {
    sub_10002B8B4((uint64_t)v27, (uint64_t)&aBlock);
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    _StringGuts.grow(_:)(53);
    uint64_t v25 = v28;
    unint64_t v26 = v29;
    v14._uint64_t countAndFlagsBits = 0xD000000000000020;
    v14._object = (void *)0x80000001004278E0;
    String.append(_:)(v14);
    unint64_t v15 = sub_1000131D4(&aBlock, (uint64_t)v22);
    sub_100022E88((uint64_t)v15, (uint64_t)&v28);
    unint64_t v16 = sub_100022110();
    sub_10013F528(v16);
    swift_bridgeObjectRelease();
    sub_10001C99C(0, &qword_1004CA050);
    sub_10001C99C(0, (unint64_t *)&qword_1004C4568);
    sub_10014C2B8();
    v17._uint64_t countAndFlagsBits = Dictionary.description.getter();
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18._object = (void *)0x8000000100427910;
    v18._uint64_t countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v18);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_10014C800(uint64_t a1)
{
  return a1;
}

uint64_t sub_10014C88C()
{
  sub_1000234F8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(unsigned char *)(v0 + 160));

  return _swift_deallocObject(v0, 161, 7);
}

uint64_t sub_10014C8F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10014C95C(long long *a1)
{
  void v25[3] = &type metadata for PersonHeightEvent;
  v25[4] = &off_100488638;
  v25[0] = swift_allocObject();
  sub_100021C48(a1, v25[0] + 16);
  unint64_t v2 = sub_1000225B4();
  sub_10013F8B4(v2);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (v4)
  {
    if (qword_1004C2A18 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    v5._uint64_t countAndFlagsBits = 46;
    v5._object = (void *)0xE100000000000000;
    String.append(_:)(v5);
    v6._uint64_t countAndFlagsBits = 0x65486E6F73726570;
    v6._object = (void *)0xEC00000074686769;
    String.append(_:)(v6);
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v4;
    uint64_t v20 = sub_10014CEA8;
    uint64_t v21 = v8;
    aBlock = _NSConcreteStackBlock;
    unint64_t v17 = 1107296256;
    Swift::String v18 = sub_10013FC14;
    Swift::String v19 = &unk_10048F340;
    unint64_t v9 = _Block_copy(&aBlock);
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v9);

    return sub_100013218((uint64_t)v25);
  }
  else
  {
    sub_10002B8B4((uint64_t)v25, (uint64_t)v24);
    aBlock = 0;
    unint64_t v17 = 0xE000000000000000;
    _StringGuts.grow(_:)(53);
    uint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    v11._uint64_t countAndFlagsBits = 0xD000000000000020;
    v11._object = (void *)0x80000001004278E0;
    String.append(_:)(v11);
    NSString v12 = (long long *)sub_1000131D4(v24, v24[3]);
    sub_100021C48(v12, (uint64_t)&aBlock);
    unint64_t v13 = sub_1000225B4();
    sub_10013F528(v13);
    swift_bridgeObjectRelease();
    sub_10001C99C(0, &qword_1004CA050);
    sub_10001C99C(0, (unint64_t *)&qword_1004C4568);
    sub_10014C2B8();
    v14._uint64_t countAndFlagsBits = Dictionary.description.getter();
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15._object = (void *)0x8000000100427910;
    v15._uint64_t countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v15);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_10014CC54()
{
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10014CC64()
{
  sub_100022F80();

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_10014CCC0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10014CD14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppSession();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_10014CD78(unint64_t a1)
{
  return sub_1001466C0(a1, v1);
}

uint64_t sub_10014CD80(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t *sub_10014CDA4(uint64_t *a1)
{
  return a1;
}

uint64_t sub_10014CE28(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10014CEBC(void *a1, double a2, double a3, double a4, double a5)
{
  Swift::String v6 = v5;
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1003F9450;
  id v13 = [v6 leadingAnchor];
  id v14 = [a1 leadingAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14 constant:a3];

  *(void *)(v12 + 32) = v15;
  id v16 = [v6 trailingAnchor];
  id v17 = [a1 trailingAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17 constant:a5];

  *(void *)(v12 + 40) = v18;
  id v19 = [v6 topAnchor];
  id v20 = [a1 topAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20 constant:a2];

  *(void *)(v12 + 48) = v21;
  id v22 = [v6 bottomAnchor];
  id v23 = [a1 bottomAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23 constant:a4];

  *(void *)(v12 + 56) = v24;
  specialized Array._endMutation()();
  return v12;
}

uint64_t sub_10014D0DC(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = sub_1000BEC00(a1, v3);
  __chkstk_darwin(v5);
  NSString v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  uint64_t v9 = sub_10014D90C((uint64_t)v7, v2, v3, v4);
  sub_100013218(a1);
  return v9;
}

void sub_10014D1E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10005536C();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    NSString v7 = *(void **)(v1 + 80);
    id v8 = sub_10014D3A4();
    aBlock[4] = sub_10014DA5C;
    void aBlock[5] = v1;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10014D6BC;
    aBlock[3] = &unk_10048F408;
    uint64_t v9 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v7 startDeviceMotionUpdatesToQueue:v8 withHandler:v9];
    _Block_release(v9);
  }
  else
  {
    __break(1u);
  }
}

id sub_10014D3A4()
{
  uint64_t v1 = *(void **)(v0 + 96);
  if (v1)
  {
    id v2 = *(id *)(v0 + 96);
  }
  else
  {
    uint64_t v3 = v0;
    id v4 = [objc_allocWithZone((Class)NSOperationQueue) init];
    if (qword_1004C2C18 != -1) {
      swift_once();
    }
    [v4 setUnderlyingQueue:qword_1004F8460];
    OS_dispatch_queue.label.getter();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v4 setName:v5];

    char v6 = *(void **)(v0 + 96);
    *(void *)(v3 + 96) = v4;
    id v2 = v4;

    uint64_t v1 = 0;
  }
  id v7 = v1;
  return v2;
}

void sub_10014D494(void *a1, uint64_t a2, uint64_t a3)
{
  void (*v7)(id *__return_ptr, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void (*v10)(id *);
  id v11;
  void (*v12)(id *__return_ptr, uint64_t);
  uint64_t v13;
  id v14;
  id v15[2];

  if (a2)
  {
    swift_errorRetain();
    if (qword_1004C2B10 != -1) {
      swift_once();
    }
    v15[0] = 0;
    v15[1] = (id)0xE000000000000000;
    _StringGuts.grow(_:)(31);
    v5._object = (void *)0x8000000100427A40;
    v5._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    String.append(_:)(v5);
    sub_100012894(&qword_1004C7128);
    _print_unlocked<A, B>(_:_:)();
    v6._uint64_t countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    Log.error(_:isPrivate:)(v6, 0);
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  id v7 = *(void (**)(id *__return_ptr, uint64_t))(**(void **)(a3 + 72) + 144);
  id v8 = swift_retain();
  v7(v15, v8);
  swift_release();

  uint64_t v9 = *(void *)(a3 + 72);
  v15[0] = a1;
  NSString v10 = *(void (**)(id *))(*(void *)v9 + 392);
  uint64_t v11 = a1;
  swift_retain();
  v10(v15);
  swift_release();
  uint64_t v12 = *(void (**)(id *__return_ptr, uint64_t))(**(void **)(a3 + 72) + 144);
  id v13 = swift_retain();
  v12(v15, v13);
  swift_release();
  id v14 = v15[0];
  CurrentValueSubject.send(_:)();
}

void sub_10014D6BC(uint64_t a1, void *a2, void *a3)
{
  Swift::String v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_10014D748()
{
  swift_release();
  swift_release();

  uint64_t v1 = *(void **)(v0 + 96);
}

uint64_t sub_10014D788()
{
  uint64_t v0 = StateObserver.deinit();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MotionObserver()
{
  uint64_t result = qword_1004CCED0;
  if (!qword_1004CCED0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10014D834()
{
  return swift_initClassMetadata2();
}

id sub_10014D8A0@<X0>(void *a1@<X8>)
{
  if (qword_1004C2C18 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1004F8460;
  *a1 = qword_1004F8460;

  return v2;
}

uint64_t sub_10014D90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[3] = a3;
  v11[4] = a4;
  id v7 = sub_100078D1C(v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(v7, a1, a3);
  v10[0] = 0;
  sub_100012894((uint64_t *)&unk_1004D2950);
  swift_allocObject();
  swift_retain();
  *(void *)(a2 + 64) = CurrentValueSubject.init(_:)();
  sub_100012894(&qword_1004CCFF0);
  swift_getKeyPath();
  *(void *)(a2 + 72) = MutableStateValue.__allocating_init(_:_:)();
  *(void *)(a2 + 80) = [objc_allocWithZone((Class)CMMotionManager) init];
  *(unsigned char *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = 0;
  swift_release();
  sub_10002B8B4((uint64_t)v11, (uint64_t)v10);
  uint64_t v8 = StateObserver.init(configuration:)();
  sub_100013218((uint64_t)v11);
  return v8;
}

void sub_10014DA5C(void *a1, uint64_t a2)
{
  sub_10014D494(a1, a2, v2);
}

uint64_t sub_10014DA64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10014DA74()
{
  return swift_release();
}

void sub_10014DA7C(uint64_t a1, uint64_t a2, uint64_t a3, NSString a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  id v15 = *(void **)(v12 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel);
  NSString v16 = String._bridgeToObjectiveC()();
  [v15 setText:v16];

  if (a4) {
    a4 = String._bridgeToObjectiveC()();
  }
  [v15 setAccessibilityLabel:a4, a7];

  id v17 = *(void **)(v12 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel);
  NSString v18 = String._bridgeToObjectiveC()();
  [v17 setText:v18];

  if (a8) {
    NSString v19 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v19 = 0;
  }
  [v17 setAccessibilityLabel:v19];

  id v20 = *(void **)(v12 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel);
  NSString v21 = String._bridgeToObjectiveC()();
  [v20 setText:v21];

  if (a12) {
    NSString v22 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v22 = 0;
  }
  id v24 = v22;
  [v20 setAccessibilityLabel:];
}

void sub_10014DC14(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel);
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 setText:v4];

  NSString v5 = String._bridgeToObjectiveC()();
  [v3 setAccessibilityLabel:v5];

  id v6 = *(void **)(v1 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel);
  NSString v7 = String._bridgeToObjectiveC()();
  [v6 setText:v7];

  sub_100026A8C(a1 + 32, (uint64_t)v13);
  sub_100026A8C((uint64_t)v13, (uint64_t)v14);
  if (v14[1]) {
    NSString v8 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v8 = 0;
  }
  [v6 setAccessibilityLabel:v8];

  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel);
  NSString v10 = String._bridgeToObjectiveC()();
  [v9 setText:v10];

  sub_100026A8C(a1 + 96, (uint64_t)v12);
  sub_100026A8C((uint64_t)v12, (uint64_t)v15);
  if (v15[1]) {
    NSString v11 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v11 = 0;
  }
  [v9 setAccessibilityLabel:v11];
}

void sub_10014DD9C()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v38 = self;
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1003F9400;
  id v5 = [v3 leadingAnchor];
  id v6 = [v0 leadingAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  *(void *)(v4 + 32) = v7;
  id v8 = [v3 trailingAnchor];
  id v9 = [v0 trailingAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  *(void *)(v4 + 40) = v10;
  id v11 = [v3 bottomAnchor];
  id v12 = [v0 bottomAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  *(void *)(v4 + 48) = v13;
  id v14 = [v3 topAnchor];
  id v15 = [v2 bottomAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  *(void *)(v4 + 56) = v16;
  id v17 = [v2 leadingAnchor];
  id v18 = [v0 leadingAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  *(void *)(v4 + 64) = v19;
  id v20 = [v2 trailingAnchor];
  id v21 = [v0 trailingAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(v4 + 72) = v22;
  id v23 = [v2 bottomAnchor];
  id v24 = [v3 topAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  *(void *)(v4 + 80) = v25;
  id v26 = [v2 topAnchor];
  id v27 = [v1 bottomAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  *(void *)(v4 + 88) = v28;
  id v29 = [v1 leadingAnchor];
  id v30 = [v0 leadingAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  *(void *)(v4 + 96) = v31;
  id v32 = [v1 trailingAnchor];
  id v33 = [v0 trailingAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  *(void *)(v4 + 104) = v34;
  id v35 = [v1 topAnchor];
  id v36 = [v0 topAnchor];
  id v37 = [v35 constraintEqualToAnchor:v36];

  *(void *)(v4 + 112) = v37;
  specialized Array._endMutation()();
  sub_100029878();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v38 activateConstraints:isa];
}

char *sub_10014E2C0(double a1, double a2, double a3, double a4)
{
  id v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel;
  type metadata accessor for InteractiveLabel();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v13 = objc_allocWithZone(ObjCClassFromMetadata);
  id v14 = v4;
  *(void *)&v5[v11] = [v13 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v15 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel;
  *(void *)&v14[v15] = [objc_allocWithZone(ObjCClassFromMetadata) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v16 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel;
  *(void *)&v14[v16] = [objc_allocWithZone(ObjCClassFromMetadata) initWithFrame:0.0, 0.0, 0.0, 0.0];

  v23.receiver = v14;
  v23.super_class = ObjectType;
  id v17 = [super initWithFrame:a1, a2, a3, a4];
  id v18 = *(void **)&v17[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel];
  id v19 = v17;
  [v18 setUserInteractionEnabled:1];
  id v20 = *(void **)&v19[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel];
  [v20 setUserInteractionEnabled:1];
  id v21 = *(void **)&v19[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel];
  [v21 setUserInteractionEnabled:1];
  [v19 addSubview:v18];
  [v19 addSubview:v20];
  [v19 addSubview:v21];
  sub_10014DD9C();

  return v19;
}

char *sub_10014E4AC(void *a1)
{
  uint64_t v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel;
  type metadata accessor for InteractiveLabel();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v7 = objc_allocWithZone(ObjCClassFromMetadata);
  id v8 = v2;
  *(void *)&v2[v5] = [v7 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v9 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel;
  *(void *)&v8[v9] = [objc_allocWithZone(ObjCClassFromMetadata) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v10 = OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel;
  *(void *)&v8[v10] = [objc_allocWithZone(ObjCClassFromMetadata) initWithFrame:0.0, 0.0, 0.0, 0.0];

  v18.receiver = v8;
  v18.super_class = ObjectType;
  uint64_t v11 = (char *)[super initWithCoder:a1];
  id v12 = v11;
  if (v11)
  {
    id v13 = *(void **)&v11[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_topLabel];
    id v14 = v11;
    [v13 setUserInteractionEnabled:1];
    uint64_t v15 = *(void **)&v14[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_middleLabel];
    [v15 setUserInteractionEnabled:1];
    uint64_t v16 = *(void **)&v14[OBJC_IVAR____TtC7Measure24AccessibilityTripleStack_bottomLabel];
    [v16 setUserInteractionEnabled:1];
    [v14 addSubview:v13];
    [v14 addSubview:v15];
    [v14 addSubview:v16];
    sub_10014DD9C();
  }
  return v12;
}

uint64_t type metadata accessor for AccessibilityTripleStack()
{
  return self;
}

ValueMetadata *type metadata accessor for MotionState()
{
  return &type metadata for MotionState;
}

uint64_t sub_10014E71C()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  v10[1] = sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  if (qword_1004C2A18 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1004F8070;
  unint64_t v6 = *(void *)algn_1004F8078;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = (double *)v7;
  unint64_t v12 = v6;
  v8._uint64_t countAndFlagsBits = 0x2D6E6F69746F6D2DLL;
  v8._object = (void *)0xEE0073746E657665;
  String.append(_:)(v8);
  static DispatchQoS.unspecified.getter();
  uint64_t v11 = _swiftEmptyArrayStorage;
  sub_100053658();
  sub_100012894(&qword_1004CF220);
  sub_1000536B0();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t result = Contexts.PrivateQueue.init(_:)();
  qword_1004F8460 = result;
  return result;
}

uint64_t sub_10014E9B8(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      sub_10001C99C(0, &qword_1004CD070);
      id v4 = v3;
      id v5 = v2;
      char v6 = static NSObject.== infix(_:_:)();

      if (v6) {
        return 1;
      }
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

unint64_t sub_10014EA44()
{
  unint64_t result = qword_1004CD038;
  if (!qword_1004CD038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CD038);
  }
  return result;
}

unint64_t sub_10014EA98(uint64_t a1)
{
  unint64_t result = sub_10014EAC0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10014EAC0()
{
  unint64_t result = qword_1004CD068;
  if (!qword_1004CD068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CD068);
  }
  return result;
}

id sub_10014EB14(double a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC7Measure11ColorPicker_value);
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC7Measure11ColorPicker_redSlider);
  if (v3)
  {
    *(float *)&a1 = (float)BYTE3(v2) / 255.0;
    [v3 setValue:a1];
  }
  id v4 = *(void **)(v1 + OBJC_IVAR____TtC7Measure11ColorPicker_greenSlider);
  if (v4)
  {
    *(float *)&a1 = (float)BYTE2(v2) / 255.0;
    [v4 setValue:a1];
  }
  id v5 = *(void **)(v1 + OBJC_IVAR____TtC7Measure11ColorPicker_blueSlider);
  if (v5)
  {
    *(float *)&a1 = (float)BYTE1(v2) / 255.0;
    [v5 setValue:a1];
  }
  id result = *(id *)(v1 + OBJC_IVAR____TtC7Measure11ColorPicker_alphaSlider);
  if (result)
  {
    *(float *)&a1 = (float)v2 / 255.0;
    return [result setValue:a1];
  }
  return result;
}

double sub_10014EC10(unint64_t a1)
{
  v1.i64[0] = a1 >> 8;
  v1.i64[1] = a1;
  v2.i64[0] = 255;
  v2.i64[1] = 255;
  *(void *)&double result = vdivq_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_u64((uint64x2_t)vdupq_n_s64(a1), (uint64x2_t)xmmword_1003FFDF0), v2))), vcvtq_f64_s64((int64x2_t)vandq_s8(v1, v2))), (float32x4_t)vdupq_n_s32(0x437F0000u)).u64[0];
  return result;
}

void sub_10014EC58()
{
  int8x16_t v1 = v0;
  id v2 = [objc_allocWithZone((Class)UISlider) init];
  id v3 = [objc_allocWithZone((Class)UISlider) init];
  id v4 = [objc_allocWithZone((Class)UISlider) init];
  id v5 = [objc_allocWithZone((Class)UISlider) init];
  char v6 = *(void **)&v1[OBJC_IVAR____TtC7Measure11ColorPicker_redSlider];
  *(void *)&v1[OBJC_IVAR____TtC7Measure11ColorPicker_redSlider] = v2;
  id v7 = v2;

  Swift::String v8 = *(void **)&v1[OBJC_IVAR____TtC7Measure11ColorPicker_greenSlider];
  *(void *)&v1[OBJC_IVAR____TtC7Measure11ColorPicker_greenSlider] = v3;
  id v9 = v3;

  uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC7Measure11ColorPicker_blueSlider];
  *(void *)&v1[OBJC_IVAR____TtC7Measure11ColorPicker_blueSlider] = v4;
  id v11 = v4;

  unint64_t v12 = *(void **)&v1[OBJC_IVAR____TtC7Measure11ColorPicker_alphaSlider];
  *(void *)&v1[OBJC_IVAR____TtC7Measure11ColorPicker_alphaSlider] = v5;
  id v13 = v5;

  [v7 addTarget:v1 action:"updateValue:" forControlEvents:4096];
  [v9 addTarget:v1 action:"updateValue:" forControlEvents:4096];
  [v11 addTarget:v1 action:"updateValue:" forControlEvents:4096];
  [v13 addTarget:v1 action:"updateValue:" forControlEvents:4096];
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1003F9450;
  *(void *)(v14 + 32) = v7;
  *(void *)(v14 + 40) = v9;
  *(void *)(v14 + 48) = v11;
  *(void *)(v14 + 56) = v13;
  specialized Array._endMutation()();
  id v15 = objc_allocWithZone((Class)UIStackView);
  sub_10001C99C(0, (unint64_t *)&qword_1004CA030);
  id v16 = v7;
  id v60 = v9;
  id v59 = v11;
  id v56 = v13;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v18 = [v15 initWithArrangedSubviews:isa];

  [v18 setAxis:1];
  [v18 setAlignment:3];
  [v18 setDistribution:0];
  [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 addSubview:v18];
  double v57 = self;
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1003FFE00;
  id v20 = [v16 leftAnchor];
  id v21 = [v18 leftAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(v19 + 32) = v22;
  id v23 = [v16 rightAnchor];
  id v24 = [v18 rightAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  *(void *)(v19 + 40) = v25;
  id v26 = [v60 leftAnchor];
  id v27 = [v18 leftAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  *(void *)(v19 + 48) = v28;
  id v29 = [v60 rightAnchor];
  id v30 = [v18 rightAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  *(void *)(v19 + 56) = v31;
  id v32 = [v59 leftAnchor];
  id v33 = [v18 leftAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  *(void *)(v19 + 64) = v34;
  id v35 = [v59 rightAnchor];
  id v36 = [v18 rightAnchor];
  id v37 = [v35 constraintEqualToAnchor:v36];

  *(void *)(v19 + 72) = v37;
  id v38 = [v56 leftAnchor];
  id v39 = [v18 leftAnchor];
  id v40 = [v38 constraintEqualToAnchor:v39];

  *(void *)(v19 + 80) = v40;
  id v41 = [v56 rightAnchor];
  id v42 = [v18 rightAnchor];
  id v43 = [v41 constraintEqualToAnchor:v42];

  *(void *)(v19 + 88) = v43;
  id v44 = [v18 leftAnchor];
  id v45 = [v1 leftAnchor];
  id v46 = [v44 constraintEqualToAnchor:v45 constant:16.0];

  *(void *)(v19 + 96) = v46;
  id v47 = [v18 rightAnchor];
  id v48 = [v1 rightAnchor];
  id v49 = [v47 constraintEqualToAnchor:v48 constant:-16.0];

  *(void *)(v19 + 104) = v49;
  id v50 = [v18 topAnchor];
  id v51 = [v1 topAnchor];
  id v52 = [v50 constraintEqualToAnchor:v51];

  *(void *)(v19 + 112) = v52;
  id v53 = [v18 bottomAnchor];
  id v54 = [v1 bottomAnchor];
  id v55 = [v53 constraintEqualToAnchor:v54];

  *(void *)(v19 + 120) = v55;
  specialized Array._endMutation()();
  sub_10001C99C(0, (unint64_t *)&qword_1004CE690);
  Class v58 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v57 activateConstraints:v58];
}

uint64_t type metadata accessor for ColorPicker()
{
  return self;
}

id sub_10014F678()
{
  id result = *(id *)&v0[OBJC_IVAR____TtC7Measure11ColorPicker_redSlider];
  if (!result) {
    goto LABEL_38;
  }
  id result = [result value];
  float v3 = v2 * 255.0;
  if ((~COERCE_INT(v2 * 255.0) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v3 <= -9.2234e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v3 >= 9.2234e18)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id result = *(id *)&v0[OBJC_IVAR____TtC7Measure11ColorPicker_greenSlider];
  if (!result)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  id result = [result value];
  float v5 = v4 * 255.0;
  if ((~COERCE_INT(v4 * 255.0) & 0x7F800000) == 0) {
    goto LABEL_26;
  }
  if (v5 <= -9.2234e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v5 >= 9.2234e18)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  id result = *(id *)&v0[OBJC_IVAR____TtC7Measure11ColorPicker_blueSlider];
  if (!result)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  id result = [result value];
  float v7 = v6 * 255.0;
  if ((~COERCE_INT(v6 * 255.0) & 0x7F800000) == 0) {
    goto LABEL_29;
  }
  if (v7 <= -9.2234e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v7 >= 9.2234e18)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  id result = *(id *)&v0[OBJC_IVAR____TtC7Measure11ColorPicker_alphaSlider];
  if (!result)
  {
LABEL_41:
    __break(1u);
    return result;
  }
  id result = [result value];
  *(float *)&double v8 = *(float *)&v8 * 255.0;
  if ((~LODWORD(v8) & 0x7F800000) == 0) {
    goto LABEL_32;
  }
  if (*(float *)&v8 <= -9.2234e18)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (*(float *)&v8 >= 9.2234e18)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v9 = (uint64_t)v3 << 24;
  BOOL v10 = __OFADD__(v9, (uint64_t)v5 << 16);
  uint64_t v11 = v9 + ((uint64_t)v5 << 16);
  if (v10)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  BOOL v10 = __OFADD__(v11, (uint64_t)v7 << 8);
  uint64_t v12 = v11 + ((uint64_t)v7 << 8);
  if (v10)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  BOOL v10 = __OFADD__(v12, (uint64_t)*(float *)&v8);
  uint64_t v13 = v12 + (uint64_t)*(float *)&v8;
  if (v10)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  *(void *)&v0[OBJC_IVAR____TtC7Measure11ColorPicker_value] = v13;
  sub_10014EB14(v8);

  return [v0 sendActionsForControlEvents:4096];
}

void sub_10014F8A0(void *a1)
{
  uint64_t v2 = v1;
  if (!a1)
  {
    id v6 = *(id *)(v1 + qword_1004CD138);
    uint64_t v9 = String._bridgeToObjectiveC()();
    [v6 setText:];
LABEL_7:

    goto LABEL_8;
  }
  float v3 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD0);
  float v4 = a1;
  if (!v3() || (v4 = v4, uint64_t v5 = v3(), v4, v5 == 5))
  {
    id v6 = *(id *)(v2 + qword_1004CD138);
    uint64_t v9 = String._bridgeToObjectiveC()();
    [v6 setText:];

    goto LABEL_7;
  }
  uint64_t v9 = v4;
  uint64_t v7 = v3();

  if (v7 == 6)
  {
    id v6 = *(id *)(v2 + qword_1004CD138);
    double v8 = String._bridgeToObjectiveC()();
    [v6 setText:v8];

    uint64_t v9 = v8;
    goto LABEL_7;
  }
LABEL_8:
}

void sub_10014FAAC(char a1)
{
  void (*v18)(void *__return_ptr, uint64_t);
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  void (*v26)(void *__return_ptr, uint64_t);
  uint64_t v27;
  unint64_t v28;
  void *v29;
  float v30;
  uint64_t v31;
  void *v32;
  void (*v33)(void *__return_ptr, uint64_t);
  uint64_t v34;
  void *v35;
  float v36;
  uint64_t v37;
  void *v38;
  id v39;
  Swift::String v40;
  NSString v41;
  id v42;
  Swift::String v43;
  NSString v44;
  id v45;
  Swift::String v46;
  NSString v47;
  unint64_t v48;
  unint64_t v49;
  void v50[68];
  void v51[68];
  void __src[68];
  void __dst[68];

  uint64_t v2 = v1;
  id v4 = *(id *)(v1 + qword_1004CD150);
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  __dst[0] = 0xD000000000000014;
  __dst[1] = 0x8000000100428040;
  if (a1) {
    uint64_t v5 = 2728370160;
  }
  else {
    uint64_t v5 = 3029639152;
  }
  v6._uint64_t countAndFlagsBits = v5;
  v6._object = (void *)0xA400000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v4 setText:v7];

  double v8 = (id *)(v1 + qword_1004CD158);
  id v9 = *(id *)(v1 + qword_1004CD158);
  NSString v10 = String._bridgeToObjectiveC()();
  [v9 setText:v10];

  id v11 = v8[1];
  NSString v12 = String._bridgeToObjectiveC()();
  [v11 setText:v12];

  id v13 = v8[2];
  NSString v14 = String._bridgeToObjectiveC()();
  [v13 setText:v14];

  id v15 = v8[3];
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 setText:v16];

  uint64_t v17 = qword_1004CD190;
  id v18 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v2 + qword_1004CD190) + 144);
  uint64_t v19 = swift_retain();
  v18(__src, v19);
  swift_release();
  memcpy(__dst, __src, 0x213uLL);
  sub_1000732CC((uint64_t)__dst);
  if (__dst[3])
  {
    id v20 = (void *)0x8000000100428060;
    id v49 = 0xD000000000000028;
  }
  else
  {
    id v21 = __dst[2];
    id v22 = __dst[1];
    sub_100012894((uint64_t *)&unk_1004D2460);
    id v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1003F8B80;
    *(void *)(v23 + 56) = &type metadata for CGFloat;
    id v24 = sub_100153558();
    *(void *)(v23 + 64) = v24;
    *(void *)(v23 + 32) = v22;
    *(void *)(v23 + 96) = &type metadata for CGFloat;
    *(void *)(v23 + 104) = v24;
    *(void *)(v23 + 72) = v21;
    id v49 = String.init(format:_:)();
    id v20 = v25;
  }
  id v26 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v2 + v17) + 144);
  id v27 = swift_retain();
  v26(v51, v27);
  swift_release();
  memcpy(__src, v51, 0x213uLL);
  sub_1000732CC((uint64_t)__src);
  if (__src[56])
  {
    id v28 = 0xD000000000000027;
    id v29 = (void *)0x8000000100428090;
  }
  else
  {
    id v30 = *((float *)&__src[55] + 1);
    sub_100012894((uint64_t *)&unk_1004D2460);
    id v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1003F87F0;
    *(void *)(v31 + 56) = &type metadata for Float;
    *(void *)(v31 + 64) = &protocol witness table for Float;
    *(float *)(v31 + 32) = v30 * 39.37;
    id v28 = String.init(format:_:)();
    id v29 = v32;
  }
  id v33 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v2 + v17) + 144);
  id v34 = swift_retain();
  v33(v50, v34);
  swift_release();
  memcpy(v51, v50, 0x213uLL);
  sub_1000732CC((uint64_t)v51);
  if (v51[55])
  {
    id v35 = (void *)0x80000001004280C0;
    id v48 = 0xD000000000000028;
  }
  else
  {
    id v36 = *((float *)&v51[54] + 1);
    sub_100012894((uint64_t *)&unk_1004D2460);
    id v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1003F87F0;
    *(void *)(v37 + 56) = &type metadata for Float;
    *(void *)(v37 + 64) = &protocol witness table for Float;
    *(float *)(v37 + 32) = v36 * 39.37;
    id v48 = String.init(format:_:)();
    id v35 = v38;
  }
  id v39 = sub_100151024(&qword_1004CD0E0);
  v50[0] = 8224;
  v50[1] = 0xE200000000000000;
  v40._uint64_t countAndFlagsBits = v49;
  v40._object = v20;
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  id v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v39 setText:v41];

  id v42 = sub_100151024(&qword_1004CD0E8);
  v50[0] = 8224;
  v50[1] = 0xE200000000000000;
  v43._uint64_t countAndFlagsBits = v28;
  v43._object = v29;
  String.append(_:)(v43);
  swift_bridgeObjectRelease();
  id v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v42 setText:v44];

  id v45 = sub_100151024(&qword_1004CD0F0);
  v50[0] = 8224;
  v50[1] = 0xE200000000000000;
  v46._uint64_t countAndFlagsBits = v48;
  v46._object = v35;
  String.append(_:)(v46);
  swift_bridgeObjectRelease();
  id v47 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v45 setText:v47];
}

void sub_1001500B8()
{
  void (*v3)(void *__return_ptr, uint64_t);
  uint64_t v4;
  char v5;
  float32x2_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void (*v10)(void *__return_ptr, uint64_t);
  uint64_t v11;
  float v12;
  uint64_t v13;
  void *v14;
  void *v15;
  float v16;
  void (*v17)(void *__return_ptr, uint64_t);
  uint64_t v18;
  float v19;
  uint64_t v20;
  void *v21;
  void (*v22)(void *__return_ptr, uint64_t);
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  Swift::String v29;
  NSString v30;
  id v31;
  Swift::String v32;
  NSString v33;
  id v34;
  NSString v35;
  id v36;
  Swift::String v37;
  NSString v38;
  id v39;
  Swift::String v40;
  NSString v41;
  void *v42;
  uint64_t v43;
  float v44;
  void *v45;
  Swift::String v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  float32x2_t v50;
  void __src[68];
  void __dst[68];

  unint64_t v1 = 0xD00000000000001ELL;
  uint64_t v2 = qword_1004CD188;
  float v3 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v0 + qword_1004CD188) + 144);
  id v4 = swift_retain();
  v3(__dst, v4);
  swift_release();
  uint64_t v5 = __dst[8];
  if (__dst[8])
  {
    id v49 = 0xD000000000000032;
    id v45 = (void *)0x8000000100427E90;
    id v47 = 0xD000000000000018;
    id v48 = (void *)0x8000000100427EB0;
  }
  else
  {
    simd_float4x4.position.getter();
    id v50 = v6;
    sub_100012894((uint64_t *)&unk_1004D2460);
    NSString v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1003F87F0;
    *(void *)(v7 + 56) = &type metadata for Float;
    *(void *)(v7 + 64) = &protocol witness table for Float;
    *(float *)(v7 + 32) = vmuls_lane_f32(39.37, v50, 1);
    double v8 = String.init(format:_:)();
    id v48 = v9;
    id v49 = v8;
    id v47 = 0xD00000000000001DLL;
    id v45 = (void *)0x8000000100427FF0;
  }
  NSString v10 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v0 + v2) + 144);
  id v11 = swift_retain();
  v10(__dst, v11);
  swift_release();
  if ((__dst[19] & 1) == 0)
  {
    NSString v12 = *((float *)&__dst[18] + 1);
    sub_100012894((uint64_t *)&unk_1004D2460);
    id v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1003F87F0;
    *(void *)(v13 + 56) = &type metadata for Float;
    *(void *)(v13 + 64) = &protocol witness table for Float;
    *(float *)(v13 + 32) = v12 * 39.37;
  }
  v46._uint64_t countAndFlagsBits = String.init(format:_:)();
  v46._object = v14;
  id v15 = (void *)0x8000000100427F20;
  if ((v5 & 1) == 0)
  {
    simd_float4x4.position.getter();
    id v44 = v16;
    uint64_t v17 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v0 + v2) + 144);
    id v18 = swift_retain();
    v17(__dst, v18);
    swift_release();
    if ((__dst[19] & 1) == 0)
    {
      uint64_t v19 = *((float *)&__dst[18] + 1);
      sub_100012894((uint64_t *)&unk_1004D2460);
      id v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1003F87F0;
      *(void *)(v20 + 56) = &type metadata for Float;
      *(void *)(v20 + 64) = &protocol witness table for Float;
      *(float *)(v20 + 32) = (float)(v44 - v19) * 39.37;
      unint64_t v1 = String.init(format:_:)();
      id v15 = v21;
    }
  }
  id v22 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v0 + qword_1004CD190) + 144);
  id v23 = swift_retain();
  v22(__src, v23);
  swift_release();
  memcpy(__dst, __src, 0x213uLL);
  sub_1000732CC((uint64_t)__dst);
  id v24 = 0x100000000000001BLL;
  if ((__dst[66] & 0x100) != 0) {
    id v24 = 0x100000000000001ALL;
  }
  id v25 = 0x8000000100427F60;
  if ((__dst[66] & 0x100) != 0) {
    id v25 = 0x8000000100427F80;
  }
  if (BYTE1(__dst[66]) == 2) {
    id v26 = 0x100000000000001ELL;
  }
  else {
    id v26 = v24;
  }
  id v43 = v26;
  id v27 = 0x8000000100427F40;
  if (BYTE1(__dst[66]) != 2) {
    id v27 = v25;
  }
  id v42 = (void *)v27;
  id v28 = sub_100151024(&qword_1004CD0F8);
  __src[0] = 8224;
  __src[1] = 0xE200000000000000;
  v29._uint64_t countAndFlagsBits = v47;
  v29._object = v45;
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  id v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v28 setText:v30];

  id v31 = sub_100151024(&qword_1004CD100);
  __src[0] = 8224;
  __src[1] = 0xE200000000000000;
  v32._uint64_t countAndFlagsBits = v49;
  v32._object = v48;
  String.append(_:)(v32);
  swift_bridgeObjectRelease();
  id v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v31 setText:v33];

  id v34 = sub_100151024(&qword_1004CD110);
  __src[0] = 8224;
  __src[1] = 0xE200000000000000;
  String.append(_:)(v46);
  swift_bridgeObjectRelease();
  id v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v34 setText:v35];

  id v36 = sub_100151024(&qword_1004CD108);
  __src[0] = 8224;
  __src[1] = 0xE200000000000000;
  v37._uint64_t countAndFlagsBits = v1;
  v37._object = v15;
  String.append(_:)(v37);
  swift_bridgeObjectRelease();
  id v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v36 setText:v38];

  id v39 = sub_100151024(&qword_1004CD118);
  __src[0] = 8224;
  __src[1] = 0xE200000000000000;
  v40._uint64_t countAndFlagsBits = v43;
  v40._object = v42;
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  id v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v39 setText:v41];
}

void sub_1001506FC()
{
  void (*v1)(void *__return_ptr, uint64_t);
  uint64_t v2;
  id v3;
  NSString v4;
  void v5[68];
  unsigned char __dst[544];

  unint64_t v1 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v0 + qword_1004CD190) + 144);
  uint64_t v2 = swift_retain();
  v1(v5, v2);
  swift_release();
  memcpy(__dst, v5, 0x213uLL);
  sub_1000732CC((uint64_t)__dst);
  float v3 = sub_100151024(&qword_1004CD120);
  id v4 = String._bridgeToObjectiveC()();
  [v3 setText:v4];
}

void sub_10015080C(uint64_t a1)
{
  unint64_t v1 = 0;
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = v2 - 1;
  for (uint64_t i = (void **)(a1 + 16 * v2 + 24); ; i -= 2)
  {
    uint64_t v11 = sub_1001511B0();
    unint64_t v12 = v11 & 0xC000000000000001;
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v2) {
        break;
      }
    }
    if (v12)
    {
      id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v1 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_17;
      }
      id v13 = *(id *)(v11 + 8 * v1 + 32);
    }
    Swift::String v6 = v13;
    swift_bridgeObjectRelease();
    NSString v10 = String._bridgeToObjectiveC()();
LABEL_4:
    [v6 setText:v10, v14, v15];
    ++v1;

    --v3;
    if (v1 == 5) {
      return;
    }
  }
  if (v12)
  {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_3:
    Swift::String v6 = v5;
    swift_bridgeObjectRelease();
    uint64_t v7 = (uint64_t)*(i - 1);
    double v8 = *i;
    uint64_t v14 = 8224;
    unint64_t v15 = 0xE200000000000000;
    swift_bridgeObjectRetain();
    v9._uint64_t countAndFlagsBits = v7;
    v9._object = v8;
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  if (v1 < *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v11 + 8 * v1 + 32);
    goto LABEL_3;
  }
  __break(1u);
LABEL_17:
  __break(1u);
}

void sub_10015099C()
{
  unint64_t v1 = v0;
  id v2 = [v0 superview];
  if (!v2) {
    return;
  }
  uint64_t v3 = v2;
  [v2 frame];

  id v4 = [v1 subviews];
  uint64_t v51 = sub_10001C99C(0, (unint64_t *)&qword_1004CA030);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (!v6) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v6) {
      goto LABEL_12;
    }
  }
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_64;
  }
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(v5 + 8 * i + 32);
    }
    Swift::String v9 = v8;
    [v8 sizeToFit:v51];
  }
LABEL_12:
  swift_bridgeObjectRelease_n();
  uint64_t v10 = qword_1004CD130;
  double v11 = *(double *)&v1[qword_1004CD130];
  unint64_t v12 = &selRef_replaySensorDidFinishReplayingData;
  id v13 = [v1 subviews];
  unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v14 >> 62))
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15) {
      goto LABEL_14;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_24;
  }
LABEL_14:
  sub_1000BBDF4(0, v15 & ~(v15 >> 63), 0);
  if (v15 < 0)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  for (uint64_t j = 0; j != v15; ++j)
  {
    if ((v14 & 0xC000000000000001) != 0) {
      id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v17 = *(id *)(v14 + 8 * j + 32);
    }
    id v18 = v17;
    [v17 frame:v51];
    double v20 = v19;

    double v22 = _swiftEmptyArrayStorage[2];
    double v21 = _swiftEmptyArrayStorage[3];
    if (*(void *)&v22 >= *(void *)&v21 >> 1) {
      sub_1000BBDF4((char *)(*(void *)&v21 > 1uLL), *(void *)&v22 + 1, 1);
    }
    *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v22 + 1;
    _swiftEmptyArrayStorage[*(void *)&v22 + 4] = v20;
  }
  swift_bridgeObjectRelease();
  unint64_t v12 = &selRef_replaySensorDidFinishReplayingData;
LABEL_25:
  *(double *)&uint64_t v23 = COERCE_DOUBLE(sub_1000582A0((uint64_t)_swiftEmptyArrayStorage));
  char v25 = v24;
  swift_bridgeObjectRelease();
  double v26 = *(double *)&v23;
  if (v25) {
    double v26 = 0.0;
  }
  if ((*(void *)&v26 & 0xFFFFFFFFFFFFFLL) != 0) {
    double v27 = v11;
  }
  else {
    double v27 = v26;
  }
  if ((~*(void *)&v26 & 0x7FF0000000000000) != 0) {
    double v27 = v26;
  }
  if (v26 >= v11) {
    double v28 = v27;
  }
  else {
    double v28 = v11;
  }
  *(double *)&v1[v10] = v28;
  [v1 frame:v51];
  double v30 = v29;
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  if (!qword_1004F7FE0) {
    goto LABEL_67;
  }
  id v31 = *(void **)(qword_1004F7FE0 + 88);
  if (v31)
  {
    [v31 frame];
    double MaxY = CGRectGetMaxY(v53);
  }
  else
  {
    double MaxY = 75.0;
  }
  id v33 = [v1 v12[216]];
  unint64_t v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v34 >> 62))
  {
    uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v35) {
      goto LABEL_43;
    }
LABEL_50:
    double v37 = 0.0;
    goto LABEL_51;
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
  if (!v35) {
    goto LABEL_50;
  }
LABEL_43:
  if (v35 < 1)
  {
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    return;
  }
  uint64_t v36 = 0;
  double v37 = 0.0;
  do
  {
    if ((v34 & 0xC000000000000001) != 0) {
      id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v38 = *(id *)(v34 + 8 * v36 + 32);
    }
    id v39 = v38;
    ++v36;
    [v38 frame];
    double v41 = v40;

    double v37 = v37 + v41;
  }
  while (v35 != v36);
LABEL_51:
  swift_bridgeObjectRelease_n();
  [v1 setFrame:v30 MaxY:*(double *)&v1[v10] v37];
  id v42 = [v1 v12[216]];
  unint64_t v43 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v43 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v44)
    {
LABEL_53:
      if (v44 >= 1)
      {
        uint64_t v45 = 0;
        double v46 = 0.0;
        do
        {
          if ((v43 & 0xC000000000000001) != 0) {
            id v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v47 = *(id *)(v43 + 8 * v45 + 32);
          }
          id v48 = v47;
          ++v45;
          [v47 frame];
          [v48 setFrame:];
          [v48 frame];
          double v50 = v49;

          double v46 = v46 + v50;
        }
        while (v44 != v45);
        goto LABEL_60;
      }
      goto LABEL_66;
    }
  }
  else
  {
    uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v44) {
      goto LABEL_53;
    }
  }
LABEL_60:

  swift_bridgeObjectRelease();
}

id sub_100150F48()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.0 blue:0.0 alpha:0.5];
  qword_1004CD0C8 = (uint64_t)result;
  return result;
}

id sub_100150F8C()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:1.0 green:1.0 blue:1.0 alpha:1.0];
  qword_1004CD0D0 = (uint64_t)result;
  return result;
}

uint64_t sub_100150FD0()
{
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  uint64_t result = static UIDevice.isIPad()();
  double v1 = 9.0;
  if (result) {
    double v1 = 12.0;
  }
  qword_1004CD0D8 = *(void *)&v1;
  return result;
}

id sub_100151024(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void **)&v1[*a1];
  if (v3)
  {
    id v4 = *(id *)&v1[*a1];
  }
  else
  {
    [v1 frame];
    id v9 = [objc_allocWithZone((Class)UILabel) initWithFrame:v5, v6, v7, v8];
    if (qword_1004C2C28 != -1) {
      swift_once();
    }
    [v9 setTextColor:qword_1004CD0D0];
    [v9 setTextAlignment:0];
    uint64_t v10 = self;
    if (qword_1004C2C30 != -1) {
      swift_once();
    }
    id v11 = [v10 systemFontOfSize:*(double *)&qword_1004CD0D8];
    [v9 setFont:v11];

    unint64_t v12 = *(void **)&v1[v2];
    *(void *)&v1[v2] = v9;
    id v4 = v9;

    uint64_t v3 = 0;
  }
  id v13 = v3;
  return v4;
}

uint64_t sub_1001511B0()
{
  if (*(void *)&v0[qword_1004CD128])
  {
    uint64_t v1 = *(void *)&v0[qword_1004CD128];
  }
  else
  {
    uint64_t v2 = v0;
    uint64_t v35 = qword_1004CD128;
    sub_100012894((uint64_t *)&unk_1004CEA00);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1003FA960;
    [v2 frame];
    id v7 = [objc_allocWithZone((Class)UILabel) initWithFrame:v3, v4, v5, v6];
    if (qword_1004C2C28 != -1) {
      swift_once();
    }
    [v7 setTextColor:qword_1004CD0D0 v35];
    [v7 setTextAlignment:0];
    double v8 = self;
    if (qword_1004C2C30 != -1) {
      swift_once();
    }
    id v9 = [v8 systemFontOfSize:*(double *)&qword_1004CD0D8];
    [v7 setFont:v9];

    *(void *)(v1 + 32) = v7;
    [v2 frame];
    id v14 = [objc_allocWithZone((Class)UILabel) initWithFrame:v10, v11, v12, v13];
    [v14 setTextColor:qword_1004CD0D0];
    [v14 setTextAlignment:0];
    id v15 = [v8 systemFontOfSize:*(double *)&qword_1004CD0D8];
    [v14 setFont:v15];

    *(void *)(v1 + 40) = v14;
    [v2 frame];
    id v20 = [objc_allocWithZone((Class)UILabel) initWithFrame:v16, v17, v18, v19];
    [v20 setTextColor:qword_1004CD0D0];
    [v20 setTextAlignment:0];
    id v21 = [v8 systemFontOfSize:*(double *)&qword_1004CD0D8];
    [v20 setFont:v21];

    *(void *)(v1 + 48) = v20;
    [v2 frame];
    id v26 = [objc_allocWithZone((Class)UILabel) initWithFrame:v22, v23, v24, v25];
    [v26 setTextColor:qword_1004CD0D0];
    [v26 setTextAlignment:0];
    id v27 = [v8 systemFontOfSize:*(double *)&qword_1004CD0D8];
    [v26 setFont:v27];

    *(void *)(v1 + 56) = v26;
    [v2 frame];
    id v32 = [objc_allocWithZone((Class)UILabel) initWithFrame:v28, v29, v30, v31];
    [v32 setTextColor:qword_1004CD0D0];
    [v32 setTextAlignment:0];
    id v33 = [v8 systemFontOfSize:*(double *)&qword_1004CD0D8];
    [v32 setFont:v33];

    *(void *)(v1 + 64) = v32;
    specialized Array._endMutation()();
    *(void *)&v2[v36] = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100151634(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[qword_1004CD0E0] = 0;
  *(void *)&v4[qword_1004CD0E8] = 0;
  *(void *)&v4[qword_1004CD0F0] = 0;
  *(void *)&v4[qword_1004CD0F8] = 0;
  *(void *)&v4[qword_1004CD100] = 0;
  *(void *)&v4[qword_1004CD108] = 0;
  *(void *)&v4[qword_1004CD110] = 0;
  *(void *)&v4[qword_1004CD118] = 0;
  *(void *)&v4[qword_1004CD120] = 0;
  *(void *)&v4[qword_1004CD128] = 0;
  *(void *)&v4[qword_1004CD130] = 0;
  uint64_t v10 = qword_1004CD138;
  id v11 = objc_allocWithZone((Class)UILabel);
  double v12 = v4;
  *(void *)&v4[v10] = [v11 init];
  uint64_t v13 = qword_1004CD140;
  *(void *)&v12[v13] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v14 = qword_1004CD148;
  *(void *)&v12[v14] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v15 = qword_1004CD150;
  *(void *)&v12[v15] = [objc_allocWithZone((Class)UILabel) init];
  double v16 = &v12[qword_1004CD158];
  id v17 = [objc_allocWithZone((Class)UILabel) init];
  id v18 = [objc_allocWithZone((Class)UILabel) init];
  id v19 = [objc_allocWithZone((Class)UILabel) init];
  id v20 = [objc_allocWithZone((Class)UILabel) init];
  *(void *)double v16 = v17;
  *((void *)v16 + 1) = v18;
  *((void *)v16 + 2) = v19;
  *((void *)v16 + 3) = v20;
  uint64_t v21 = qword_1004CD160;
  *(void *)&v12[v21] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v22 = qword_1004CD168;
  *(void *)&v12[v22] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v12[qword_1004CD170] = _swiftEmptyArrayStorage;
  uint64_t v23 = qword_1004CD178;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = sub_100012894((uint64_t *)&unk_1004CEA40);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v26 = qword_1004F8630;
  id v27 = *(uint64_t (**)(void, void))(v25 + 272);
  swift_retain();
  *(void *)&v12[v23] = v27(KeyPath, v26);
  uint64_t v28 = qword_1004CD180;
  uint64_t v29 = swift_getKeyPath();
  uint64_t v30 = sub_100012894(&qword_1004CA010);
  uint64_t v31 = qword_1004F8630;
  id v32 = *(uint64_t (**)(void, void))(v30 + 272);
  swift_retain();
  *(void *)&v12[v28] = v32(v29, v31);
  uint64_t v33 = qword_1004CD188;
  uint64_t v34 = swift_getKeyPath();
  uint64_t v35 = sub_100012894(&qword_1004CB2C0);
  uint64_t v36 = qword_1004F8630;
  double v37 = *(uint64_t (**)(void, void))(v35 + 272);
  swift_retain();
  *(void *)&v12[v33] = v37(v34, v36);
  uint64_t v38 = qword_1004CD190;
  uint64_t v39 = swift_getKeyPath();
  uint64_t v40 = sub_100012894(qword_1004CDAF0);
  uint64_t v41 = qword_1004F8630;
  id v42 = *(uint64_t (**)(void, void))(v40 + 272);
  swift_retain();
  *(void *)&v12[v38] = v42(v39, v41);

  v166.receiver = v12;
  v166.super_class = ObjectType;
  id v43 = [super initWithFrame:a1, a2, a3, a4];
  uint64_t v44 = qword_1004C2C20;
  uint64_t v45 = (char *)v43;
  if (v44 != -1) {
    swift_once();
  }
  [v45 setBackgroundColor:qword_1004CD0C8];
  [v45 setContentMode:9];
  uint64_t v46 = qword_1004CD148;
  id v47 = *(id *)&v45[qword_1004CD148];
  NSString v48 = String._bridgeToObjectiveC()();
  [v47 setText:v48];

  double v49 = *(void **)&v45[v46];
  id v163 = self;
  uint64_t v50 = qword_1004C2C30;
  id v51 = v49;
  if (v50 != -1) {
    swift_once();
  }
  id v52 = [v163 systemFontOfSize:*(double *)&qword_1004CD0D8];
  [v51 setFont:v52];

  CGRect v53 = *(void **)&v45[v46];
  id v54 = self;
  id v55 = v53;
  id v56 = [v54 whiteColor];
  [v55 setTextColor:v56];

  [v45 addSubview:*(void *)&v45[v46]];
  uint64_t v57 = qword_1004CD150;
  id v58 = *(id *)&v45[qword_1004CD150];
  NSString v59 = String._bridgeToObjectiveC()();
  [v58 setText:v59];

  double v60 = *(double *)&qword_1004CD0D8;
  id v61 = *(id *)&v45[v57];
  id v62 = [v163 systemFontOfSize:v60];
  [v61 setFont:v62];

  id v63 = *(id *)&v45[v57];
  id v64 = [v54 whiteColor];
  [v63 setTextColor:v64];

  [v45 addSubview:*(void *)&v45[v57]];
  uint64_t v65 = qword_1004CD138;
  id v66 = *(id *)&v45[qword_1004CD138];
  NSString v67 = String._bridgeToObjectiveC()();
  [v66 setText:v67];

  double v68 = *(double *)&qword_1004CD0D8;
  id v69 = *(id *)&v45[v65];
  id v70 = [v163 systemFontOfSize:v68];
  [v69 setFont:v70];

  id v71 = *(id *)&v45[v65];
  id v72 = [v54 whiteColor];
  [v71 setTextColor:v72];

  [v45 addSubview:*(void *)&v45[v65]];
  uint64_t v73 = qword_1004CD140;
  id v74 = *(id *)&v45[qword_1004CD140];
  NSString v75 = String._bridgeToObjectiveC()();
  [v74 setText:v75];

  double v76 = *(double *)&qword_1004CD0D8;
  id v77 = *(id *)&v45[v73];
  id v78 = [v163 systemFontOfSize:v76];
  [v77 setFont:v78];

  id v79 = *(id *)&v45[v73];
  id v80 = [v54 whiteColor];
  [v79 setTextColor:v80];

  [v45 addSubview:*(void *)&v45[v73]];
  id v81 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  if (qword_1004C2C28 != -1) {
    swift_once();
  }
  [v81 setTextColor:qword_1004CD0D0];
  [v81 setTextAlignment:0];
  id v82 = [v163 systemFontOfSize:*(double *)&qword_1004CD0D8];
  [v81 setFont:v82];

  NSString v83 = String._bridgeToObjectiveC()();
  [v81 setText:v83];

  int8x16_t v162 = v81;
  [v45 addSubview:v81];
  unint64_t v84 = v45;
  id v85 = sub_100151024(&qword_1004CD0E0);
  [v84 addSubview:v85];

  uint64_t v86 = v84;
  id v87 = sub_100151024(&qword_1004CD0E8);
  [v86 addSubview:v87];

  uint64_t v88 = v86;
  id v89 = sub_100151024(&qword_1004CD0F0);
  [v88 addSubview:v89];

  id v90 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v90 setTextColor:qword_1004CD0D0];
  [v90 setTextAlignment:0];
  id v91 = [v163 systemFontOfSize:*(double *)&qword_1004CD0D8];
  [v90 setFont:v91];

  NSString v92 = String._bridgeToObjectiveC()();
  [v90 setText:v92];

  [v88 addSubview:v90];
  uint64_t v93 = v88;
  id v94 = sub_100151024(&qword_1004CD0F8);
  [v93 addSubview:v94];

  uint64_t v95 = v93;
  id v96 = sub_100151024(&qword_1004CD100);
  [v95 addSubview:v96];

  uint64_t v97 = v95;
  id v98 = sub_100151024(&qword_1004CD110);
  [v97 addSubview:v98];

  uint64_t v99 = v97;
  id v100 = sub_100151024(&qword_1004CD108);
  [v99 addSubview:v100];

  uint64_t v101 = v99;
  id v102 = sub_100151024(&qword_1004CD118);
  [v101 addSubview:v102];

  id v103 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v103 setTextColor:qword_1004CD0D0];
  [v103 setTextAlignment:0];
  id v104 = [v163 systemFontOfSize:*(double *)&qword_1004CD0D8];
  [v103 setFont:v104];

  NSString v105 = String._bridgeToObjectiveC()();
  [v103 setText:v105];

  uint64_t v161 = v103;
  [v101 addSubview:v103];
  id v106 = v101;
  id v107 = sub_100151024(&qword_1004CD120);
  [v106 addSubview:v107];

  id v108 = [objc_allocWithZone((Class)UILabel) initWithFrame:a1, a2, a3, a4];
  [v108 setTextColor:qword_1004CD0D0];
  [v108 setTextAlignment:0];
  id v109 = [v163 systemFontOfSize:*(double *)&qword_1004CD0D8];
  [v108 setFont:v109];

  NSString v110 = String._bridgeToObjectiveC()();
  [v108 setText:v110];

  [v106 addSubview:v108];
  uint64_t v111 = (char *)v106;
  uint64_t v112 = sub_1001511B0();
  if ((v112 & 0xC000000000000001) != 0)
  {
    id v113 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_35;
    }
    id v113 = *(id *)(v112 + 32);
  }
  unint64_t v114 = v113;
  swift_bridgeObjectRelease();
  [v111 addSubview:v114];

  uint64_t v111 = v111;
  uint64_t v115 = sub_1001511B0();
  if ((v115 & 0xC000000000000001) != 0)
  {
LABEL_35:
    id v116 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_15;
  }
  if (*(void *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
  {
    __break(1u);
    goto LABEL_37;
  }
  id v116 = *(id *)(v115 + 40);
LABEL_15:
  uint64_t v117 = v116;
  swift_bridgeObjectRelease();
  [v111 addSubview:v117];

  uint64_t v111 = v111;
  uint64_t v118 = sub_1001511B0();
  if ((v118 & 0xC000000000000001) != 0)
  {
LABEL_37:
    id v119 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_18;
  }
  if (*(void *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
  {
    __break(1u);
    goto LABEL_39;
  }
  id v119 = *(id *)(v118 + 48);
LABEL_18:
  unint64_t v120 = v119;
  swift_bridgeObjectRelease();
  [v111 addSubview:v120];

  uint64_t v111 = v111;
  uint64_t v121 = sub_1001511B0();
  if ((v121 & 0xC000000000000001) != 0)
  {
LABEL_39:
    id v122 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_21;
  }
  if (*(void *)((v121 & 0xFFFFFFFFFFFFFF8) + 0x10) < 4uLL)
  {
    __break(1u);
    goto LABEL_41;
  }
  id v122 = *(id *)(v121 + 56);
LABEL_21:
  uint64_t v123 = v122;
  swift_bridgeObjectRelease();
  [v111 addSubview:v123];

  uint64_t v111 = v111;
  uint64_t result = sub_1001511B0();
  int8x16_t v160 = v108;
  if ((result & 0xC000000000000001) != 0)
  {
LABEL_41:
    id v125 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_24;
  }
  if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) < 5uLL)
  {
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  id v125 = *(id *)(result + 64);
LABEL_24:
  unint64_t v126 = v125;
  swift_bridgeObjectRelease();
  [v111 addSubview:v126];

  sub_10015099C();
  id v164 = [objc_allocWithZone((Class)UILabel) init];
  id v158 = [objc_allocWithZone((Class)UILabel) init];
  id v156 = [objc_allocWithZone((Class)UILabel) init];
  id v154 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v127 = 0;
  uint64_t v128 = qword_1004CD170;
  __int16 v129 = 0;
  do
  {
    uint64_t v130 = static String._uncheckedFromUTF8(_:)();
    uint64_t v132 = v131;
    uint64_t v133 = *(char **)&v111[v128];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v111[v128] = v133;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v133 = sub_10006E930(0, *((void *)v133 + 2) + 1, 1, v133);
      *(void *)&v111[v128] = v133;
    }
    unint64_t v136 = *((void *)v133 + 2);
    unint64_t v135 = *((void *)v133 + 3);
    if (v136 >= v135 >> 1)
    {
      uint64_t v133 = sub_10006E930((char *)(v135 > 1), v136 + 1, 1, v133);
      *(void *)&v111[v128] = v133;
    }
    *((void *)v133 + 2) = v136 + 1;
    double v137 = &v133[16 * v136];
    *((void *)v137 + 4) = v130;
    *((void *)v137 + 5) = v132;
    ++v127;
    v129 += 256;
  }
  while (v127 != 80);
  uint64_t v138 = (id *)&v111[qword_1004CD158];
  uint64_t v139 = *(void **)&v111[qword_1004CD158];
  Swift::String v140 = *(void **)&v111[qword_1004CD158 + 8];
  *uint64_t v138 = v164;
  v138[1] = v158;
  id v141 = v138[2];
  id v142 = v138[3];
  v138[2] = v156;
  v138[3] = v154;
  id v165 = v164;
  id v159 = v158;
  id v157 = v156;
  id v155 = v154;

  [*v138 setFrame:0.0, 0.0, 100.0, 100.0];
  [v138[1] setFrame:0.0, 0.0, 100.0, 100.0];
  [v138[2] setFrame:0.0, 0.0, 100.0, 100.0];
  [v138[3] setFrame:0.0, 0.0, 100.0, 100.0];
  [*v138 setTextAlignment:1];
  [v138[1] setTextAlignment:1];
  [v138[2] setTextAlignment:1];
  [v138[3] setTextAlignment:1];
  uint64_t v143 = qword_1004CD160;
  id v144 = *(id *)&v111[qword_1004CD160];
  uint64_t result = (uint64_t)[v144 font];
  if (!result) {
    goto LABEL_43;
  }
  uint64_t v145 = (void *)result;
  id v146 = [(id)result fontWithSize:80.0];

  [v144 setFont:v146];
  [*(id *)&v111[v143] setFrame:0.0, 0.0, 100.0, 100.0];
  [*(id *)&v111[v143] setTextAlignment:1];
  uint64_t v147 = qword_1004CD168;
  id v148 = *(id *)&v111[qword_1004CD168];
  NSString v149 = String._bridgeToObjectiveC()();
  [v148 setText:v149];

  id v150 = *(id *)&v111[v147];
  uint64_t result = (uint64_t)[v150 font];
  if (result)
  {
    uint64_t v151 = (void *)result;
    id v152 = [(id)result fontWithSize:80.0];

    [v150 setFont:v152];
    [*(id *)&v111[v147] setFrame:0.0, 0.0, 100.0, 100.0];
    id v153 = *(id *)&v111[v147];
    [v153 setTextAlignment:1];

    return (uint64_t)v111;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_100152A4C(double a1, double a2, double a3, double a4)
{
  return sub_100151634(a1, a2, a3, a4);
}

void sub_100152A70(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_10015319C();
}

void sub_100152A98(void *a1)
{
  id v1 = a1;
  sub_10015099C();
}

uint64_t sub_100152AE0()
{
  swift_bridgeObjectRelease();
  id v1 = *(void **)(v0 + qword_1004CD158);
  uint64_t v2 = *(void **)(v0 + qword_1004CD158 + 8);
  id v3 = *(void **)(v0 + qword_1004CD158 + 16);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_100152C84(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + qword_1004CD158);
  id v3 = *(void **)(a1 + qword_1004CD158 + 8);
  double v4 = *(void **)(a1 + qword_1004CD158 + 16);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t type metadata accessor for PersonHeightDebugStatsView()
{
  uint64_t result = qword_1004CD1C0;
  if (!qword_1004CD1C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100152E78()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100152F20()
{
  return type metadata accessor for PersonHeightDebugStatsView();
}

void sub_100152F28(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  uint64_t v26 = (id *)&v18[qword_1004CD158];
  id v27 = [*(id *)&v18[qword_1004CD158] superview];

  if (v27)
  {
    [*v26 setCenter:a1, a2];
    [v26[1] setCenter:a3, a4];
    [v26[2] setCenter:a5, a6];
    [v26[3] setCenter:a7, a8];
    uint64_t v28 = *(void **)&v18[qword_1004CD168];
    [v28 setCenter:a9, a10];
  }
  else
  {
    id v29 = [v18 superview];
    if (v29)
    {
      uint64_t v30 = v29;
      [v29 addSubview:*v26];
    }
    id v31 = [v18 superview];
    if (v31)
    {
      id v32 = v31;
      [v31 addSubview:v26[1]];
    }
    id v33 = [v18 superview];
    if (v33)
    {
      uint64_t v34 = v33;
      [v33 addSubview:v26[2]];
    }
    id v35 = [v18 superview];
    if (v35)
    {
      uint64_t v36 = v35;
      [v35 addSubview:v26[3]];
    }
    id v37 = [v18 superview];
    if (v37)
    {
      id v39 = v37;
      [v37 addSubview:*(void *)&v18[qword_1004CD168]];
    }
  }
}

void sub_10015319C()
{
  id v1 = v0;
  *(void *)&v0[qword_1004CD0E0] = 0;
  *(void *)&v0[qword_1004CD0E8] = 0;
  *(void *)&v0[qword_1004CD0F0] = 0;
  *(void *)&v0[qword_1004CD0F8] = 0;
  *(void *)&v0[qword_1004CD100] = 0;
  *(void *)&v0[qword_1004CD108] = 0;
  *(void *)&v0[qword_1004CD110] = 0;
  *(void *)&v0[qword_1004CD118] = 0;
  *(void *)&v0[qword_1004CD120] = 0;
  *(void *)&v0[qword_1004CD128] = 0;
  *(void *)&v0[qword_1004CD130] = 0;
  uint64_t v2 = qword_1004CD138;
  *(void *)&v1[v2] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v3 = qword_1004CD140;
  *(void *)&v1[v3] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v4 = qword_1004CD148;
  *(void *)&v1[v4] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v5 = qword_1004CD150;
  *(void *)&v1[v5] = [objc_allocWithZone((Class)UILabel) init];
  double v6 = &v1[qword_1004CD158];
  id v7 = [objc_allocWithZone((Class)UILabel) init];
  id v8 = [objc_allocWithZone((Class)UILabel) init];
  id v9 = [objc_allocWithZone((Class)UILabel) init];
  id v10 = [objc_allocWithZone((Class)UILabel) init];
  *(void *)double v6 = v7;
  *((void *)v6 + 1) = v8;
  *((void *)v6 + 2) = v9;
  *((void *)v6 + 3) = v10;
  uint64_t v11 = qword_1004CD160;
  *(void *)&v1[v11] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v12 = qword_1004CD168;
  *(void *)&v1[v12] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v1[qword_1004CD170] = _swiftEmptyArrayStorage;
  uint64_t v13 = qword_1004CD178;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = sub_100012894((uint64_t *)&unk_1004CEA40);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_1004F8630;
  id v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 272);
  swift_retain();
  *(void *)&v1[v13] = v17(KeyPath, v16);
  uint64_t v18 = qword_1004CD180;
  uint64_t v19 = swift_getKeyPath();
  uint64_t v20 = sub_100012894(&qword_1004CA010);
  uint64_t v21 = qword_1004F8630;
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 272);
  swift_retain();
  *(void *)&v1[v18] = v22(v19, v21);
  uint64_t v23 = qword_1004CD188;
  uint64_t v24 = swift_getKeyPath();
  uint64_t v25 = sub_100012894(&qword_1004CB2C0);
  uint64_t v26 = qword_1004F8630;
  id v27 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 272);
  swift_retain();
  *(void *)&v1[v23] = v27(v24, v26);
  uint64_t v28 = qword_1004CD190;
  uint64_t v29 = swift_getKeyPath();
  uint64_t v30 = sub_100012894(qword_1004CDAF0);
  uint64_t v31 = qword_1004F8630;
  id v32 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 272);
  swift_retain();
  *(void *)&v1[v28] = v32(v29, v31);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

unint64_t sub_100153558()
{
  unint64_t result = qword_1004CD370;
  if (!qword_1004CD370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CD370);
  }
  return result;
}

id sub_1001535AC()
{
  ObjectType = (objc_class *)swift_getObjectType();
  Swift::Int32 v2 = CVPixelBufferUnlockBaseAddress(*(CVPixelBufferRef *)&v0[OBJC_IVAR____TtC7Measure25OpenCVWrapperCVBufferLock_buffer], *(void *)&v0[OBJC_IVAR____TtC7Measure25OpenCVWrapperCVBufferLock_lockFlags]);
  v3._object = (void *)0x80000001004282C0;
  v3._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  logCVError(_:label:)(v2, v3);
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return [super dealloc];
}

id OpenCVWrapperContourIterator.endIndex.getter(void *a1, uint64_t a2)
{
  return [a1 getPointCountAtContourIndex:a2];
}

id OpenCVWrapperContourIterator.subscript.getter(uint64_t a1, id a2, uint64_t a3)
{
  return [a2 getPointAtContourIndex:a3 pointIndex:a1];
}

Swift::Int __swiftcall OpenCVWrapperCorners.index(after:)(Swift::Int after)
{
  BOOL v1 = __OFADD__(after, 1);
  Swift::Int result = after + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

id sub_10015373C(int64_t a1, uint64_t a2, int64_t a3, id a4, uint64_t a5)
{
  id result = [a4 getPointCountAtContourIndex:a5];
  if (a1 < 0 || (uint64_t)result < a1)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id result = [a4 getPointCountAtContourIndex:a5];
  if (a3 < 0 || (uint64_t)result < a3) {
    goto LABEL_17;
  }
  uint64_t v11 = a3 - a1;
  if (a2 >= 1)
  {
    if (v11 < 0 || v11 >= a2) {
      goto LABEL_12;
    }
    return 0;
  }
  if (v11 <= 0 && v11 > a2) {
    return 0;
  }
LABEL_12:
  BOOL v13 = __OFADD__(a1, a2);
  int64_t v12 = a1 + a2;
  if (v13)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  id result = [a4 getPointCountAtContourIndex:a5];
  if ((v12 & 0x8000000000000000) == 0 && (uint64_t)result >= v12) {
    return (id)v12;
  }
LABEL_19:
  __break(1u);
  return result;
}

id sub_10015382C(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id result = [v4 *a4];
  if (a1 < 0 || (uint64_t)result < a1)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id result = [v4 *a4];
  if (a3 < 0 || (uint64_t)result < a3) {
    goto LABEL_17;
  }
  uint64_t v10 = a3 - a1;
  if (a2 >= 1)
  {
    if (v10 < 0 || v10 >= a2) {
      goto LABEL_12;
    }
    return 0;
  }
  if (v10 <= 0 && v10 > a2) {
    return 0;
  }
LABEL_12:
  BOOL v12 = __OFADD__(a1, a2);
  uint64_t v11 = a1 + a2;
  if (v12)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  id result = [v4 *a4];
  if ((v11 & 0x8000000000000000) == 0 && (uint64_t)result >= v11) {
    return (id)v11;
  }
LABEL_19:
  __break(1u);
  return result;
}

void *sub_10015390C@<X0>(void *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else
  {
    id result = [*(id *)v2 getPointCountAtContourIndex:*(void *)(v2 + 8)];
    if ((v4 & 0x8000000000000000) == 0 && v4 < (uint64_t)result)
    {
      *a2 = v4;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t *sub_100153968(uint64_t *result)
{
  uint64_t v2 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else
  {
    Swift::String v3 = result;
    id result = (uint64_t *)[*(id *)v1 getPointCountAtContourIndex:*(void *)(v1 + 8)];
    if ((v2 & 0x8000000000000000) == 0 && v2 < (uint64_t)result)
    {
      *Swift::String v3 = v2;
      return result;
    }
  }
  __break(1u);
  return result;
}

id sub_1001539C4@<X0>(void *a1@<X8>)
{
  id result = [*(id *)v1 getPointCountAtContourIndex:*(void *)(v1 + 8)];
  *a1 = result;
  return result;
}

uint64_t (*sub_1001539F8(void *a1, void *a2))(void)
{
  [*(id *)v2 getPointAtContourIndex:*(void *)(v2 + 8) pointIndex:*a2];
  *a1 = v4;
  a1[1] = v5;
  return nullsub_1;
}

uint64_t sub_100153A4C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  double v6 = *(void **)v2;
  uint64_t v7 = *(void *)(v2 + 8);
  id v9 = v6;
  uint64_t result = (uint64_t)[v6 getPointCountAtContourIndex:v7];
  if (result < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v5 < 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (result < v4)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  *a2 = v5;
  a2[1] = v4;
  a2[2] = v9;
  a2[3] = v7;

  return (uint64_t)v9;
}

unint64_t sub_100153AD0@<X0>(void *a1@<X8>)
{
  unint64_t result = (unint64_t)[*(id *)v1 getPointCountAtContourIndex:*(void *)(v1 + 8)];
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *a1 = 0;
    a1[1] = result;
  }
  return result;
}

BOOL sub_100153B0C()
{
  return [*(id *)v0 getPointCountAtContourIndex:*(void *)(v0 + 8)] == 0;
}

void sub_100153B3C(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

void *sub_100153B4C@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *result + a2;
  if (__OFADD__(*result, a2))
  {
    __break(1u);
  }
  else
  {
    unint64_t result = [*(id *)v3 getPointCountAtContourIndex:*(void *)(v3 + 8)];
    if ((v5 & 0x8000000000000000) == 0 && (uint64_t)result >= v5)
    {
      *a3 = v5;
      return result;
    }
  }
  __break(1u);
  return result;
}

id sub_100153BA8@<X0>(int64_t *a1@<X0>, uint64_t a2@<X1>, int64_t *a3@<X2>, uint64_t a4@<X8>)
{
  id result = sub_10015373C(*a1, a2, *a3, *(id *)v4, *(void *)(v4 + 8));
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v7 & 1;
  return result;
}

id sub_100153BE4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  id v6 = *(id *)v2;
  uint64_t v5 = *(void *)(v2 + 8);
  id result = [*(id *)v2 getPointCountAtContourIndex:v5];
  if (v3 < 0 || (uint64_t)result < v3)
  {
    __break(1u);
  }
  else
  {
    id result = [v6 getPointCountAtContourIndex:v5];
    if ((v4 & 0x8000000000000000) == 0 && (uint64_t)result >= v4) {
      return (id)(v4 - v3);
    }
  }
  __break(1u);
  return result;
}

uint64_t *sub_100153C64(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = a2[1];
  if (*result >= *a2)
  {
    BOOL v5 = __OFSUB__(v2, v3);
    BOOL v4 = v2 - v3 < 0;
  }
  else
  {
    BOOL v5 = 0;
    BOOL v4 = 0;
  }
  if (v4 == v5) {
    __break(1u);
  }
  return result;
}

void *sub_100153C80(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < *result) {
    __break(1u);
  }
  return result;
}

void *sub_100153C9C(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < result[1]) {
    __break(1u);
  }
  return result;
}

void *sub_100153CB8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result + 1;
  }
  return result;
}

void *sub_100153CD0(void *result)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

void sub_100153CE8(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = 0;
}

int64_t sub_100153CF8()
{
  uint64_t v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  int64_t v3 = (int64_t)[v2 getPointCountAtContourIndex:v1];
  int64_t result = (int64_t)[v2 getPointCountAtContourIndex:v1];
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    int64_t result = (int64_t)[v2 getPointCountAtContourIndex:v1];
    if ((v3 & 0x8000000000000000) == 0 && result >= v3) {
      return v3;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100153D74()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = sub_10007BC84(*(void **)v0, *(void *)(v0 + 8));

  return v2;
}

void *sub_100153DA8(void *a1, void *a2, uint64_t a3)
{
  return sub_10007B1D4(a1, a2, a3, *(id *)v3, *(void *)(v3 + 8));
}

uint64_t sub_100153DB0()
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)();
}

id OpenCVWrapperContours.endIndex.getter()
{
  return [v0 getContourCount];
}

void *OpenCVWrapperContours.subscript.getter()
{
  id v1 = v0;
  return v0;
}

void *sub_100153E10@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_100154C18(a1, a2, (SEL *)&selRef_getContourCount, a3);
}

id sub_100153E1C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_100153E4C(a1, a2, a3, (SEL *)&selRef_getContourCount, a4);
}

id sub_100153E28(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100154C70(a1, a2, a3, a4, (SEL *)&selRef_getContourCount);
}

void *sub_100153E34@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100154970(a1, (SEL *)&selRef_getContourCount, a2);
}

uint64_t *sub_100153E40(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001549D4(a1, a2, a3, (SEL *)&selRef_getContourCount);
}

id sub_100153E4C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, SEL *a4@<X5>, uint64_t a5@<X8>)
{
  id result = sub_10015382C(*a1, a2, *a3, a4);
  *(void *)a5 = result;
  *(unsigned char *)(a5 + 8) = v7 & 1;
  return result;
}

id sub_100153E8C@<X0>(void *a1@<X8>)
{
  id result = [*v1 getContourCount];
  *a1 = result;
  return result;
}

uint64_t (*sub_100153EC0(void *a1, uint64_t *a2))()
{
  uint64_t v3 = *a2;
  *a1 = *v2;
  a1[1] = v3;
  return nullsub_1;
}

uint64_t sub_100153EF0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100154B58(a1, (SEL *)&selRef_getContourCount, a2);
}

unint64_t sub_100153EFC@<X0>(void *a1@<X8>)
{
  return sub_100154BE0((SEL *)&selRef_getContourCount, a1);
}

uint64_t sub_100153F1C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return Collection.underestimatedCount.getter(a1, WitnessTable);
}

uint64_t sub_100153F70()
{
  id v1 = *v0;
  uint64_t v2 = sub_10007BE90(*v0);

  return v2;
}

void *sub_100153FA4(void *a1, void *a2, uint64_t a3)
{
  return sub_10007B49C(a1, a2, a3);
}

uint64_t sub_100153FC8()
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)();
}

id OpenCVWrapperCorners.endIndex.getter()
{
  return [v0 getCornerCount];
}

double OpenCVWrapperCorners.subscript.getter(uint64_t a1)
{
  [v1 getCornerAtIndex:a1];
  return v3;
}

unint64_t sub_100154094()
{
  unint64_t result = qword_1004CD378;
  if (!qword_1004CD378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CD378);
  }
  return result;
}

uint64_t sub_1001540E8()
{
  return sub_1001543E8(&qword_1004CD380);
}

unint64_t sub_10015411C()
{
  unint64_t result = qword_1004CD390;
  if (!qword_1004CD390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CD390);
  }
  return result;
}

uint64_t sub_100154170()
{
  return sub_1001542E0(&qword_1004CD398, (void (*)(void))sub_1001541B8);
}

unint64_t sub_1001541B8()
{
  unint64_t result = qword_1004CD3A8;
  if (!qword_1004CD3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CD3A8);
  }
  return result;
}

unint64_t sub_100154210()
{
  unint64_t result = qword_1004CD3B0;
  if (!qword_1004CD3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CD3B0);
  }
  return result;
}

uint64_t sub_100154264()
{
  return sub_1001543E8(&qword_1004CD3B8);
}

uint64_t sub_100154298()
{
  return sub_1001542E0(&qword_1004CD3C0, (void (*)(void))sub_100154094);
}

uint64_t sub_1001542E0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100016EF4(&qword_1004CD3A0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100154354()
{
  unint64_t result = qword_1004CD3C8;
  if (!qword_1004CD3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CD3C8);
  }
  return result;
}

void *sub_1001543A8()
{
  return &protocol witness table for Int;
}

uint64_t sub_1001543B4()
{
  return sub_1001543E8(&qword_1004CD3D0);
}

uint64_t sub_1001543E8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100016EF4(&qword_1004CD388);
    sub_10015411C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100154458()
{
  return sub_10002179C(&qword_1004CD3D8, &qword_1004CD3A0);
}

uint64_t sub_100154494()
{
  return sub_10002179C(&qword_1004CD3E0, &qword_1004CD3E8);
}

uint64_t sub_1001544D0()
{
  return sub_100154564(&qword_1004CD3F0, (unint64_t *)&qword_1004C75B8);
}

uint64_t sub_100154514()
{
  return sub_10015463C(&qword_1004CD3F8, &qword_1004CD408);
}

uint64_t sub_100154564(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001C99C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001545A8()
{
  return sub_100154564((unint64_t *)&qword_1004C75C0, (unint64_t *)&qword_1004C75B8);
}

uint64_t sub_1001545EC()
{
  return sub_10015463C(&qword_1004CD410, &qword_1004CD3F0);
}

uint64_t sub_10015463C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100016EF4(&qword_1004CD400);
    sub_100154564(a2, (unint64_t *)&qword_1004C75B8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001546CC()
{
  return sub_100154564(&qword_1004CD418, (unint64_t *)&qword_1004C75B8);
}

uint64_t sub_100154710()
{
  return sub_10002179C(&qword_1004CD420, &qword_1004CD400);
}

uint64_t sub_10015474C()
{
  return sub_10002179C(&qword_1004CD428, &qword_1004CD430);
}

uint64_t sub_100154788()
{
  return sub_100154564(&qword_1004CD438, &qword_1004CD440);
}

uint64_t sub_1001547CC()
{
  return sub_10015481C(&qword_1004CD448, &qword_1004CD458);
}

uint64_t sub_10015481C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100016EF4(&qword_1004CD450);
    sub_100154564(a2, &qword_1004CD440);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1001548AC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_100154C18(a1, a2, (SEL *)&selRef_getCornerCount, a3);
}

id sub_1001548B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_100153E4C(a1, a2, a3, (SEL *)&selRef_getCornerCount, a4);
}

id sub_1001548C4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100154C70(a1, a2, a3, a4, (SEL *)&selRef_getCornerCount);
}

uint64_t sub_1001548D0()
{
  return sub_100154564(&qword_1004CD460, &qword_1004CD440);
}

uint64_t sub_100154914()
{
  return sub_10015481C(&qword_1004CD468, &qword_1004CD438);
}

void *sub_100154964@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100154970(a1, (SEL *)&selRef_getCornerCount, a2);
}

void *sub_100154970@<X0>(void *result@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t result = [*v3 *a2];
    if ((v5 & 0x8000000000000000) == 0 && v5 < (uint64_t)result)
    {
      *a3 = v5;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t *sub_1001549C8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001549D4(a1, a2, a3, (SEL *)&selRef_getCornerCount);
}

uint64_t *sub_1001549D4(uint64_t *result, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v5 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else
  {
    id v6 = result;
    uint64_t result = (uint64_t *)[*v4 *a4];
    if ((v5 & 0x8000000000000000) == 0 && v5 < (uint64_t)result)
    {
      *id v6 = v5;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100154A2C()
{
  return sub_100154564(&qword_1004CD470, &qword_1004CD440);
}

uint64_t sub_100154A70()
{
  return sub_10002179C(&qword_1004CD478, &qword_1004CD450);
}

id sub_100154AAC@<X0>(void *a1@<X8>)
{
  id result = [*v1 getCornerCount];
  *a1 = result;
  return result;
}

uint64_t (*sub_100154AE0(uint64_t a1, void *a2))(void)
{
  [*v2 getCornerAtIndex:*a2];
  int v4 = v7;
  *(_OWORD *)a1 = v6;
  *(_DWORD *)(a1 + 16) = v4;
  return nullsub_1;
}

uint64_t sub_100154B4C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100154B58(a1, (SEL *)&selRef_getCornerCount, a2);
}

uint64_t sub_100154B58@<X0>(uint64_t *a1@<X0>, SEL *a2@<X3>, void *a3@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  id v8 = *v3;
  uint64_t result = (uint64_t)[*v3 *a2];
  if (result < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v6 < 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (result < v5)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  *a3 = v6;
  a3[1] = v5;
  a3[2] = v8;

  return (uint64_t)v8;
}

unint64_t sub_100154BD4@<X0>(void *a1@<X8>)
{
  return sub_100154BE0((SEL *)&selRef_getCornerCount, a1);
}

unint64_t sub_100154BE0@<X0>(SEL *a1@<X2>, void *a2@<X8>)
{
  unint64_t result = (unint64_t)[*v2 *a1];
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *a2 = 0;
    a2[1] = result;
  }
  return result;
}

void *sub_100154C18@<X0>(void *result@<X0>, uint64_t a2@<X1>, SEL *a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v6 = *result + a2;
  if (__OFADD__(*result, a2))
  {
    __break(1u);
  }
  else
  {
    unint64_t result = [*v4 *a3];
    if ((v6 & 0x8000000000000000) == 0 && (uint64_t)result >= v6)
    {
      *a4 = v6;
      return result;
    }
  }
  __break(1u);
  return result;
}

id sub_100154C70(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v7 = *a1;
  uint64_t v8 = *a2;
  id v9 = *v5;
  id result = [v9 *a5];
  if (v7 < 0 || (uint64_t)result < v7)
  {
    __break(1u);
  }
  else
  {
    id result = [v9 *a5];
    if ((v8 & 0x8000000000000000) == 0 && (uint64_t)result >= v8) {
      return (id)(v8 - v7);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100154CE0()
{
  return sub_10002179C(&qword_1004CD480, &qword_1004CD488);
}

void sub_100154D1C(void *a1@<X8>)
{
  *a1 = *v1;
  a1[1] = 0;
}

uint64_t sub_100154D28(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return Collection.underestimatedCount.getter(a1, WitnessTable);
}

uint64_t sub_100154D7C()
{
  id v1 = *v0;
  uint64_t v2 = sub_10007BD90(*v0);

  return v2;
}

void *sub_100154DB0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_10007B334(a1, a2, a3);
}

uint64_t sub_100154DD4()
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)();
}

uint64_t type metadata accessor for OpenCVWrapperCVBufferLock()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for OpenCVWrapperContourIterator(void *a1, uint64_t a2)
{
  double v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for OpenCVWrapperContourIterator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for OpenCVWrapperContourIterator(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for OpenCVWrapperContourIterator()
{
  return &type metadata for OpenCVWrapperContourIterator;
}

uint64_t sub_100154F58(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t result = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 0)
  {
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = 0;
    id v9 = (void (**)(char *, uint64_t))(v6 + 8);
    double v10 = 0.0;
    do
    {
      uint64_t v11 = result + 1;
      IndexPath.init(row:section:)();
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*v9)(v8, v4);
      [v2 rectForRowAtIndexPath:isa];
      CGFloat v14 = v13;
      CGFloat v16 = v15;
      CGFloat v18 = v17;
      CGFloat v20 = v19;

      v22.origin.x = v14;
      v22.origin.y = v16;
      v22.size.width = v18;
      v22.size.height = v20;
      double v10 = v10 + CGRectGetHeight(v22);
      uint64_t result = v11;
    }
    while (a1 != v11);
  }
  return result;
}

uint64_t sub_1001550D4(unint64_t a1)
{
  sub_100012BE0();
  char v2 = static UIDevice.isIPad()();
  unsigned int v3 = (0x1Au >> a1) & 1;
  if (a1 > 4) {
    unsigned int v3 = 0;
  }
  if (v2) {
    return a1 - 1 < 4;
  }
  else {
    return v3;
  }
}

uint64_t sub_10015512C()
{
  id v1 = [v0 length];
  sub_100012894((uint64_t *)&unk_1004CE6D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003F87F0;
  *(void *)(inited + 32) = NSDocumentTypeDocumentAttribute;
  type metadata accessor for DocumentType(0);
  *(void *)(inited + 64) = v3;
  *(void *)(inited + 40) = NSRTFTextDocumentType;
  uint64_t v4 = NSDocumentTypeDocumentAttribute;
  id v5 = NSRTFTextDocumentType;
  sub_1000E1920(inited);
  type metadata accessor for DocumentAttributeKey(0);
  sub_1001552C4();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v12 = 0;
  id v7 = [v0 dataFromRange:0 documentAttributes:v1 error:&v12];

  id v8 = v12;
  if (v7)
  {
    uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    double v10 = v8;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    return 0;
  }
  return v9;
}

unint64_t sub_1001552C4()
{
  unint64_t result = qword_1004C3928;
  if (!qword_1004C3928)
  {
    type metadata accessor for DocumentAttributeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C3928);
  }
  return result;
}

uint64_t type metadata accessor for PerformanceTestRunner()
{
  return self;
}

void sub_100155340(char a1, void *a2)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a2 startedTest:v5];

  if (a1)
  {
    uint64_t v6 = *(void **)(*(void *)(v2 + 16) + 104);
    if (!v6)
    {
      __break(1u);
      __break(1u);
      return;
    }
    id v7 = v6;
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v8)
    {
      uint64_t v9 = 0;
    }
    else
    {
      uint64_t v9 = 1;
      swift_bridgeObjectRelease();
    }
    [v7 setSelectedIndex:v9];
  }
  id v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a2 finishedTest:v10];
}

uint64_t sub_10015554C(double a1, double a2, double a3, double a4)
{
  [*(id *)(v4 + OBJC_IVAR____TtC7Measure11PointRender_point) setSimdWorldTransform:];
  [*(id *)(v4 + OBJC_IVAR____TtC7Measure11PointRender_pointPrime) setSimdWorldTransform:a1, a2, a3, a4];
  NSString v5 = (unint64_t *)(v4 + OBJC_IVAR____TtC7Measure11PointRender_pointNodes);
  swift_beginAccess();
  unint64_t v6 = *v5;
  if (v6 >> 62) {
    goto LABEL_15;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v7; uint64_t v7 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v8 = 4;
    uint64_t v9 = 0;
    if ((v6 & 0xC000000000000001) != 0)
    {
LABEL_4:
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_6;
    }
    while (1)
    {
      id v10 = *(id *)(v6 + 8 * v8);
LABEL_6:
      uint64_t v11 = v10;
      uint64_t v12 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      id v13 = [v10 geometry];
      if (v13
        && (CGFloat v14 = v13,
            id v15 = [v13 firstMaterial],
            v14,
            v15))
      {
        simd_float4x4.position.getter();
        SCNVector3.init(_:)();
        Class isa = SCNVector3._bridgeToObjectiveC()().super.isa;
        NSString v17 = String._bridgeToObjectiveC()();
        [v15 setValue:isa forKeyPath:v17];

        if (v12 == v7) {
          return swift_bridgeObjectRelease_n();
        }
      }
      else
      {

        if (v12 == v7) {
          return swift_bridgeObjectRelease_n();
        }
      }
      uint64_t v9 = ++v8 - 4;
      if ((v6 & 0xC000000000000001) != 0) {
        goto LABEL_4;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain_n();
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_10015573C(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  NSString v5 = (__n128 *)(v4 + OBJC_IVAR____TtC7Measure11PointRender_connectedEndpointTransform);
  *NSString v5 = a1;
  v5[1] = a2;
  uint64_t v5[2] = a3;
  v5[3] = a4;
  v5[4].n128_u8[0] = 0;
  unint64_t v6 = (unint64_t *)(v4 + OBJC_IVAR____TtC7Measure11PointRender_pointNodes);
  swift_beginAccess();
  unint64_t v7 = *v6;
  if (v7 >> 62) {
    goto LABEL_15;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v8; uint64_t v8 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v9 = 4;
    uint64_t v10 = 0;
    if ((v7 & 0xC000000000000001) != 0)
    {
LABEL_4:
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_6;
    }
    while (1)
    {
      id v11 = *(id *)(v7 + 8 * v9);
LABEL_6:
      uint64_t v12 = v11;
      uint64_t v13 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        break;
      }
      id v14 = [v11 geometry];
      if (v14
        && (id v15 = v14,
            id v16 = [v14 firstMaterial],
            v15,
            v16))
      {
        simd_float4x4.position.getter();
        SCNVector3.init(_:)();
        Class isa = SCNVector3._bridgeToObjectiveC()().super.isa;
        NSString v18 = String._bridgeToObjectiveC()();
        [v16 setValue:isa forKeyPath:v18];

        if (v13 == v8) {
          return swift_bridgeObjectRelease_n();
        }
      }
      else
      {

        if (v13 == v8) {
          return swift_bridgeObjectRelease_n();
        }
      }
      uint64_t v10 = ++v9 - 4;
      if ((v7 & 0xC000000000000001) != 0) {
        goto LABEL_4;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain_n();
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_100155910()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___isOcclusionInitialized);
  if (v1 != 2) {
    return v1 & 1;
  }
  uint64_t result = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___isOcclusionInitialized) = 0;
  return result;
}

id sub_100155938()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___pointMaterial;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___pointMaterial);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___pointMaterial);
  }
  else
  {
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Measure11PointRender_isPartOfRectangle)) {
      uint64_t v4 = 4;
    }
    else {
      uint64_t v4 = 0;
    }
    id v5 = sub_1001B4A50(v4);
    [v5 copy];

    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_100035334();
    if (swift_dynamicCast()) {
      id v6 = v10;
    }
    else {
      id v6 = [objc_allocWithZone((Class)SCNMaterial) init];
    }
    unint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_100155A30()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___pointPrimeMaterial;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___pointPrimeMaterial);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___pointPrimeMaterial);
  }
  else
  {
    id v4 = sub_1001B4A50(0);
    [v4 copy];

    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_100035334();
    if (swift_dynamicCast()) {
      id v5 = v9;
    }
    else {
      id v5 = [objc_allocWithZone((Class)SCNMaterial) init];
    }
    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

void sub_100155B14(uint64_t a1)
{
  id v3 = [*(id *)&v1[OBJC_IVAR____TtC7Measure11PointRender_point] geometry];
  if (!v3) {
    return;
  }
  id v89 = v3;
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    id v5 = (void *)v4;
    id v6 = self;
    [v6 begin];
    [v6 setAnimationDuration:0.0];
    switch(a1)
    {
      case 0:
      case 5:
        *(void *)&v1[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity] = 0x3FF0000000000000;
        if (qword_1004C27C8 != -1) {
          swift_once();
        }
        id v7 = (id)qword_1004F7DD8;
        char v8 = UIContentSizeCategory.isAccessibilityCategory.getter();

        if (v8)
        {
          double v9 = 0.00800000038;
        }
        else
        {
          BOOL IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
          double v9 = 0.00400000019;
          if (IsBoldTextEnabled) {
            double v9 = 0.00800000038;
          }
        }
        [v5 setRadius:v9, v89];
        id v36 = [v5 firstMaterial];
        if (v36)
        {
          id v37 = v36;
          id v38 = [v36 diffuse];

          if (qword_1004C2FD0 != -1) {
            swift_once();
          }
          [v38 setContents:qword_1004F87C0];
        }
        id v39 = [v5 firstMaterial];
        if (!v39) {
          goto LABEL_118;
        }
        uint64_t v40 = v39;
        id v23 = [v39 emission];

        if (qword_1004C2FF8 != -1) {
          swift_once();
        }
        uint64_t v24 = &qword_1004F87E8;
        goto LABEL_117;
      case 1:
        *(void *)&v1[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity] = 0;
        if (qword_1004C27C8 != -1) {
          swift_once();
        }
        id v25 = (id)qword_1004F7DD8;
        char v26 = UIContentSizeCategory.isAccessibilityCategory.getter();

        if (v26)
        {
          double v27 = 0.00800000038;
        }
        else
        {
          BOOL v54 = UIAccessibilityIsBoldTextEnabled();
          double v27 = 0.00400000019;
          if (v54) {
            double v27 = 0.00800000038;
          }
        }
        [v5 setRadius:v27, v89];
        id v55 = [v5 firstMaterial];
        if (v55)
        {
          id v56 = v55;
          id v57 = [v55 diffuse];

          if (qword_1004C2FC8 != -1) {
            swift_once();
          }
          [v57 setContents:qword_1004F87B8];
        }
        id v58 = [v5 firstMaterial];
        if (!v58) {
          goto LABEL_118;
        }
        NSString v59 = v58;
        id v23 = [v58 emission];

        if (qword_1004C3000 != -1) {
          swift_once();
        }
        uint64_t v24 = &qword_1004F87F0;
        goto LABEL_117;
      case 2:
        *(void *)&v1[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity] = 0x3FF0000000000000;
        if (qword_1004C27C8 != -1) {
          swift_once();
        }
        id v32 = (id)qword_1004F7DD8;
        char v33 = UIContentSizeCategory.isAccessibilityCategory.getter();

        if (v33)
        {
          double v34 = 0.00800000038;
        }
        else
        {
          BOOL v65 = UIAccessibilityIsBoldTextEnabled();
          double v34 = 0.00400000019;
          if (v65) {
            double v34 = 0.00800000038;
          }
        }
        [v5 setRadius:v34, v89];
        id v66 = [v5 firstMaterial];
        if (v66)
        {
          NSString v67 = v66;
          id v68 = [v66 diffuse];

          if (qword_1004C2FE8 != -1) {
            swift_once();
          }
          [v68 setContents:qword_1004F87D8];
        }
        id v64 = [v5 firstMaterial];
        if (v64) {
          goto LABEL_97;
        }
        goto LABEL_118;
      case 3:
      case 4:
        *(void *)&v1[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity] = 0;
        if (qword_1004C27C8 != -1) {
          swift_once();
        }
        id v10 = (id)qword_1004F7DD8;
        char v11 = UIContentSizeCategory.isAccessibilityCategory.getter();

        if (v11)
        {
          double v12 = 0.00800000038;
        }
        else
        {
          BOOL v17 = UIAccessibilityIsBoldTextEnabled();
          double v12 = 0.00400000019;
          if (v17) {
            double v12 = 0.00800000038;
          }
        }
        [v5 setRadius:v12 v89];
        id v18 = [v5 firstMaterial];
        if (v18)
        {
          double v19 = v18;
          id v20 = [v18 diffuse];

          if (qword_1004C2FD8 != -1) {
            swift_once();
          }
          [v20 setContents:qword_1004F87C8];
        }
        id v21 = [v5 firstMaterial];
        if (!v21) {
          goto LABEL_118;
        }
        CGRect v22 = v21;
        id v23 = [v21 emission];

        if (qword_1004C3008 != -1) {
          swift_once();
        }
        uint64_t v24 = &qword_1004F87F8;
        goto LABEL_117;
      case 6:
        double v41 = 0.49;
        if (*(void *)&v1[OBJC_IVAR____TtC7Measure11PointRender_type] == 2) {
          double v41 = 0.0;
        }
        *(double *)&v1[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity] = v41;
        if (qword_1004C27C8 != -1) {
          swift_once();
        }
        id v42 = (id)qword_1004F7DD8;
        char v43 = UIContentSizeCategory.isAccessibilityCategory.getter();

        if (v43)
        {
          double v44 = 0.00800000038;
        }
        else
        {
          BOOL v70 = UIAccessibilityIsBoldTextEnabled();
          double v44 = 0.00400000019;
          if (v70) {
            double v44 = 0.00800000038;
          }
        }
        [v5 setRadius:v44, v89];
        id v71 = [v5 firstMaterial];
        if (v71)
        {
          id v72 = v71;
          id v73 = [v71 diffuse];

          if (qword_1004C2FE0 != -1) {
            swift_once();
          }
          [v73 setContents:qword_1004F87D0];
        }
        id v74 = [v5 firstMaterial];
        if (!v74) {
          goto LABEL_118;
        }
        NSString v75 = v74;
        id v23 = [v74 emission];

        if (qword_1004C3010 != -1) {
          swift_once();
        }
        uint64_t v24 = &qword_1004F8800;
        goto LABEL_117;
      case 7:
        double v28 = 1.0;
        if (*(void *)&v1[OBJC_IVAR____TtC7Measure11PointRender_type] == 2) {
          double v28 = 0.0;
        }
        *(double *)&v1[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity] = v28;
        if (qword_1004C27C8 != -1) {
          swift_once();
        }
        id v29 = (id)qword_1004F7DD8;
        char v30 = UIContentSizeCategory.isAccessibilityCategory.getter();

        if (v30)
        {
          double v31 = 0.00800000038;
        }
        else
        {
          BOOL v60 = UIAccessibilityIsBoldTextEnabled();
          double v31 = 0.00400000019;
          if (v60) {
            double v31 = 0.00800000038;
          }
        }
        [v5 setRadius:v31, v89];
        id v61 = [v5 firstMaterial];
        if (v61)
        {
          id v62 = v61;
          id v63 = [v61 diffuse];

          if (qword_1004C2FE8 != -1) {
            swift_once();
          }
          [v63 setContents:qword_1004F87D8];
        }
        id v64 = [v5 firstMaterial];
        if (!v64) {
          goto LABEL_118;
        }
LABEL_97:
        id v69 = v64;
        id v23 = [v64 emission];

        if (qword_1004C3018 != -1) {
          swift_once();
        }
        uint64_t v24 = &qword_1004F8808;
        goto LABEL_117;
      case 8:
        *(void *)&v1[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity] = 0x3FF0000000000000;
        if (qword_1004C27C8 != -1) {
          swift_once();
        }
        id v45 = (id)qword_1004F7DD8;
        char v46 = UIContentSizeCategory.isAccessibilityCategory.getter();

        if (v46)
        {
          double v47 = 0.00800000038;
        }
        else
        {
          BOOL v76 = UIAccessibilityIsBoldTextEnabled();
          double v47 = 0.00400000019;
          if (v76) {
            double v47 = 0.00800000038;
          }
        }
        [v5 setRadius:v47, v89];
        id v77 = [v5 firstMaterial];
        if (!v77) {
          goto LABEL_131;
        }
        id v78 = v77;
        id v79 = [v77 diffuse];

        if (qword_1004C2FE0 != -1) {
          swift_once();
        }
        [v79 setContents:qword_1004F87D0];

        id v80 = [v5 firstMaterial];
        if (!v80) {
          goto LABEL_132;
        }
        id v81 = v80;
        id v23 = [v80 emission];

        uint64_t v24 = &qword_1004F87D0;
        goto LABEL_117;
      case 9:
        double v13 = 0.49;
        if (*(void *)&v1[OBJC_IVAR____TtC7Measure11PointRender_type] == 2) {
          double v13 = 0.0;
        }
        *(double *)&v1[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity] = v13;
        if (qword_1004C27C8 != -1) {
          swift_once();
        }
        id v14 = (id)qword_1004F7DD8;
        char v15 = UIContentSizeCategory.isAccessibilityCategory.getter();

        if (v15)
        {
          double v16 = 0.00800000038;
        }
        else
        {
          BOOL v48 = UIAccessibilityIsBoldTextEnabled();
          double v16 = 0.00400000019;
          if (v48) {
            double v16 = 0.00800000038;
          }
        }
        [v5 setRadius:v16, v89];
        id v49 = [v5 firstMaterial];
        if (v49)
        {
          uint64_t v50 = v49;
          id v51 = [v49 diffuse];

          if (qword_1004C2FF0 != -1) {
            swift_once();
          }
          [v51 setContents:qword_1004F87E0];

          id v52 = [v5 firstMaterial];
          if (v52)
          {
            CGRect v53 = v52;
            id v23 = [v52 emission];

            if (qword_1004C3020 != -1) {
              swift_once();
            }
            uint64_t v24 = &qword_1004F8810;
LABEL_117:
            [v23 setContents:*v24];

LABEL_118:
            id v82 = *(void **)&v1[OBJC_IVAR____TtC7Measure11PointRender_pointPrime];
            if (v82)
            {
              id v83 = v82;
              id v84 = [v83 geometry];
              if (v84)
              {
                id v85 = v84;
                self;
                uint64_t v86 = swift_dynamicCastObjCClass();
                if (v86)
                {
                  id v87 = (void *)v86;
                  [v5 radius];
                  [v87 setRadius:];
                  uint64_t v88 = v83;
                  id v83 = v85;
                }
                else
                {
                  uint64_t v88 = v85;
                }
              }
            }
            [v1 setOpacity:*(double *)&v1[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity]];
            [v6 commit];
            break;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
        __break(1u);
        JUMPOUT(0x100156960);
      default:
        goto LABEL_133;
    }
  }
}

char *sub_100156A48(void *a1, char a2)
{
  id v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  id v7 = &v3[OBJC_IVAR____TtC7Measure11PointRender_connectedEndpointTransform];
  *(_OWORD *)id v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_OWORD *)v7 + 2) = 0u;
  *((_OWORD *)v7 + 3) = 0u;
  v7[64] = 1;
  v3[OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___isOcclusionInitialized] = 2;
  *(void *)&v3[OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___pointMaterial] = 0;
  *(void *)&v3[OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___pointPrimeMaterial] = 0;
  uint64_t v8 = OBJC_IVAR____TtC7Measure11PointRender_shouldOcclude;
  v3[OBJC_IVAR____TtC7Measure11PointRender_shouldOcclude] = 1;
  *(void *)&v3[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity] = 0;
  uint64_t v9 = OBJC_IVAR____TtC7Measure11PointRender_point;
  id v10 = objc_allocWithZone((Class)SCNNode);
  char v11 = v3;
  *(void *)&v3[v9] = [v10 init];
  *(void *)&v11[OBJC_IVAR____TtC7Measure11PointRender_pointPrime] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Measure11PointRender_pointNodes] = _swiftEmptyArrayStorage;
  *(void *)&v11[OBJC_IVAR____TtC7Measure11PointRender_state] = static MeasureObjectState.default;
  if (qword_1004C27C8 != -1) {
    swift_once();
  }
  id v12 = (id)qword_1004F7DD8;
  char v13 = UIContentSizeCategory.isAccessibilityCategory.getter();

  BOOL v14 = (v13 & 1) != 0 || UIAccessibilityIsBoldTextEnabled();
  v11[OBJC_IVAR____TtC7Measure11PointRender_accessibleSizeOn] = v14;
  *(void *)&v11[OBJC_IVAR____TtC7Measure11PointRender_type] = static WorldPointType.default;
  *(void *)&v11[OBJC_IVAR____TtC7Measure11PointRender_lines] = _swiftEmptyArrayStorage;
  id v15 = a1;
  v3[v8] = a1 & 1;
  v11[OBJC_IVAR____TtC7Measure11PointRender_isPartOfRectangle] = a2 & 1;

  v67.receiver = v11;
  v67.super_class = ObjectType;
  [super init];
  BOOL v17 = (void *)qword_1004F7DD8;
  id v18 = (char *)v16;
  id v19 = v17;
  char v20 = UIContentSizeCategory.isAccessibilityCategory.getter();

  float v21 = 2.0;
  if ((v20 & 1) == 0)
  {
    BOOL IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
    float v21 = 1.0;
    if (IsBoldTextEnabled) {
      float v21 = 2.0;
    }
  }
  double v23 = (float)(v21 * 0.004);
  uint64_t v24 = self;
  id v25 = [v24 sphereWithRadius:v23];
  uint64_t v26 = OBJC_IVAR____TtC7Measure11PointRender_point;
  double v27 = *(void **)&v18[OBJC_IVAR____TtC7Measure11PointRender_point];
  [v27 setGeometry:v25];
  [v18 addChildNode:v27];
  uint64_t result = (char *)[v27 geometry];
  if (!result)
  {
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  id v29 = result;
  id v30 = sub_100155938();
  [v29 setFirstMaterial:v30];

  double v31 = *(void **)&v18[v26];
  [v31 setRenderingOrder:2];
  uint64_t v32 = (uint64_t)&v18[OBJC_IVAR____TtC7Measure11PointRender_pointNodes];
  swift_beginAccess();
  v31;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v32 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  id v66 = v25;
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  char v33 = &selRef_replaySensorDidFinishReplayingData;
  if (![self jasperAvailable]) {
    goto LABEL_31;
  }
  id v34 = [self standardUserDefaults];
  unsigned int v35 = [v34 isPointOcclusionEnabled];

  if (!v35 || (v15 & 1) == 0) {
    goto LABEL_31;
  }
  id v36 = [objc_allocWithZone((Class)SCNNode) init];
  uint64_t v37 = OBJC_IVAR____TtC7Measure11PointRender_pointPrime;
  id v38 = *(void **)&v18[OBJC_IVAR____TtC7Measure11PointRender_pointPrime];
  *(void *)&v18[OBJC_IVAR____TtC7Measure11PointRender_pointPrime] = v36;

  id v39 = (id)qword_1004F7DD8;
  char v40 = UIContentSizeCategory.isAccessibilityCategory.getter();

  if (v40)
  {
    double v41 = 0.00800000038;
  }
  else
  {
    BOOL v42 = UIAccessibilityIsBoldTextEnabled();
    double v41 = 0.00400000019;
    if (v42) {
      double v41 = 0.00800000038;
    }
  }
  id v15 = [v24 sphereWithRadius:v41];
  uint64_t result = *(char **)&v18[v37];
  if (!result) {
    goto LABEL_52;
  }
  uint64_t result = (char *)[result setGeometry:v15];
  if (!*(void *)&v18[v37])
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  [v18 addChildNode:];
  uint64_t result = *(char **)&v18[v37];
  if (!result)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  uint64_t result = (char *)[result geometry];
  if (!result)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  char v43 = result;
  id v44 = sub_100155A30();
  [v43 setFirstMaterial:v44];

  uint64_t result = *(char **)&v18[v37];
  if (!result)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  uint64_t result = (char *)[result geometry];
  if (!result)
  {
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  id v45 = result;
  id v46 = [result firstMaterial];

  if (v46)
  {
    [v46 setColorBufferWriteMask:0];
  }
  uint64_t result = *(char **)&v18[v37];
  if (!result) {
    goto LABEL_58;
  }
  uint64_t result = (char *)[result setRenderingOrder:0];
  double v47 = *(void **)&v18[v37];
  if (v47)
  {
    swift_beginAccess();
    id v48 = v47;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v32 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      goto LABEL_50;
    while (1)
    {
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();

LABEL_31:
      id v49 = *(void **)&v18[v26];
      [v49 simdWorldTransform:v65];
      simd_float4x4.position.getter();
      [v49 simdWorldTransform];
      simd_float4x4.position.getter();
      SIMD3<>.up.unsafeMutableAddressor();
      uint64_t v50 = *(void *)v32;
      BOOL v65 = v18;
      if (*(void *)v32 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
        if (!v32)
        {
LABEL_48:
          swift_bridgeObjectRelease_n();
          sub_100155B14(*(void *)&v65[OBJC_IVAR____TtC7Measure11PointRender_state]);
          sub_100157284();
          sub_1000F92F0();

          return v65;
        }
      }
      else
      {
        uint64_t v32 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (!v32) {
          goto LABEL_48;
        }
      }
      uint64_t v51 = v32 - 1;
      if (v32 >= 1)
      {
        uint64_t v52 = 0;
        if ((v50 & 0xC000000000000001) == 0) {
          goto LABEL_36;
        }
        while (1)
        {
          for (id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(); ; id i = *(id *)(v50 + 8 * v52 + 32))
          {
            BOOL v54 = i;
            id v55 = [i v33[91] v65 v66];
            if (v55)
            {
              id v56 = v55;
              id v57 = [v55 firstMaterial];

              if (v57)
              {
                SCNVector3.init(_:)();
                Class isa = SCNVector3._bridgeToObjectiveC()().super.isa;
                NSString v59 = String._bridgeToObjectiveC()();
                [v57 setValue:isa forKeyPath:v59];

                char v33 = &selRef_replaySensorDidFinishReplayingData;
              }
            }
            id v60 = [v54 v33[91]];
            if (v60
              && (id v61 = v60,
                  id v62 = [v60 firstMaterial],
                  v61,
                  v62))
            {
              SCNVector3.init(_:)();
              Class v63 = SCNVector3._bridgeToObjectiveC()().super.isa;
              NSString v64 = String._bridgeToObjectiveC()();
              [v62 setValue:v63 forKeyPath:v64];

              char v33 = &selRef_replaySensorDidFinishReplayingData;
              if (v51 == v52) {
                goto LABEL_48;
              }
            }
            else
            {

              if (v51 == v52) {
                goto LABEL_48;
              }
            }
            ++v52;
            if ((v50 & 0xC000000000000001) != 0) {
              break;
            }
LABEL_36:
            ;
          }
        }
      }
      __break(1u);
LABEL_50:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
  }
LABEL_59:
  __break(1u);
  return result;
}

void sub_100157284()
{
  id v1 = [self defaultCenter];
  if (qword_1004C3240 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1004F8AB0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  v7[4] = sub_100157E18;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1000F910C;
  v7[3] = &unk_10048F598;
  uint64_t v4 = _Block_copy(v7);
  id v5 = v0;
  swift_release();
  id v6 = [v1 addObserverForName:v2 object:0 queue:0 usingBlock:v4];
  _Block_release(v4);
  swift_unknownObjectRelease();
}

void sub_100157408()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  if ([v2 jasperAvailable])
  {
    sub_100012894((uint64_t *)&unk_1004CEA00);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1003F94A0;
    *(void *)(v3 + 32) = sub_100155938();
    *(void *)(v3 + 40) = sub_100155A30();
    uint64_t v50 = v3;
    specialized Array._endMutation()();
    uint64_t v4 = (double *)v3;
  }
  else
  {
    uint64_t v4 = _swiftEmptyArrayStorage;
  }
  id v49 = v4;
  if (![v2 jasperAvailable]
    || *(unsigned char *)(v1 + OBJC_IVAR____TtC7Measure11PointRender_shouldOcclude) != 1
    || (id v44 = self,
        id v5 = [v44 standardUserDefaults],
        unsigned int v6 = [v5 isPointOcclusionEnabled],
        v5,
        !v6))
  {
    goto LABEL_15;
  }
  uint64_t v7 = *(void *)MeasureCore.shared.unsafeMutableAddressor();
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 112);
  if (!v8)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return;
  }
  swift_retain();
  uint64_t v9 = (char **)[v44 standardUserDefaults];
  swift_getKeyPath();
  if (qword_1004C29D8 != -1) {
LABEL_33:
  }
    swift_once();
  id v10 = (void *)*((void *)&xmmword_1004F8000 + 1);
  if (!*((void *)&xmmword_1004F8000 + 1)) {
    goto LABEL_38;
  }
  char v11 = (void *)Contexts.PrivateQueue.init(_:)();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = v4;
  id v14 = v10;
  swift_bridgeObjectRetain();
  NSUserDefaults.performOnChange<A>(to:on:action:)();

  swift_release();
  swift_release();
  swift_beginAccess();
  id v15 = v49;
  uint64_t v42 = v1;
  if ((unint64_t)v49 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
    if (v1) {
      goto LABEL_12;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v42 + OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___isOcclusionInitialized) = 1;
    return;
  }
  uint64_t v1 = *(void *)(((unint64_t)v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v1) {
    goto LABEL_35;
  }
LABEL_12:
  id v16 = (uint64_t *)(v8 + 208);
  swift_beginAccess();
  uint64_t v17 = 4;
  uint64_t v43 = v1;
  while (1)
  {
    uint64_t v4 = (double *)(v17 - 4);
    if (((unint64_t)v15 & 0xC000000000000001) != 0) {
      id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v22 = *(id *)&v15[v17];
    }
    double v23 = v22;
    uint64_t v8 = v17 - 3;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (qword_1004C2FC0 != -1) {
      swift_once();
    }
    UIColor.rgba.getter();
    long long v47 = 0u;
    long long v48 = 0u;
    long long v46 = 0u;
    if (!*v16) {
      break;
    }
    swift_retain();
    ADProcessor.transformer.getter();
    swift_release();
    Transformer.clipToCameraNormalized.getter();
    swift_release();
    simd_float3x3.copy(from:)();
    id v24 = [v44 standardUserDefaults];
    [v24 isLineOcclusionAlphaBlendingEnabled];

    Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
    NSString v26 = String._bridgeToObjectiveC()();
    [v23 setValue:isa forKeyPath:v26];

    SCNVector4.init(_:_:_:_:)();
    Class v27 = SCNVector4._bridgeToObjectiveC()().super.isa;
    NSString v28 = String._bridgeToObjectiveC()();
    [v23 setValue:v27 forKeyPath:v28];

    Class v29 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    NSString v30 = String._bridgeToObjectiveC()();
    [v23 setValue:v29 forKeyPath:v30];

    Class v31 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    NSString v32 = String._bridgeToObjectiveC()();
    [v23 setValue:v31 forKeyPath:v32];

    Class v33 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    NSString v34 = String._bridgeToObjectiveC()();
    [v23 setValue:v33 forKeyPath:v34];

    SCNVector3.init(_:)();
    Class v35 = SCNVector3._bridgeToObjectiveC()().super.isa;
    NSString v36 = String._bridgeToObjectiveC()();
    uint64_t v9 = &selRef_replaySensorDidFinishReplayingData;
    [v23 setValue:v35 forKey:v36];

    SCNVector3.init(_:)();
    Class v37 = SCNVector3._bridgeToObjectiveC()().super.isa;
    NSString v38 = String._bridgeToObjectiveC()();
    [v23 setValue:v37 forKey:v38];

    SCNVector3.init(_:)();
    Class v39 = SCNVector3._bridgeToObjectiveC()().super.isa;
    NSString v40 = String._bridgeToObjectiveC()();
    [v23 setValue:v39 forKey:v40];

    uint64_t v41 = *v16;
    if (!*v16) {
      goto LABEL_37;
    }
    swift_beginAccess();
    if (*(unsigned char *)(v41 + 242) == 1)
    {
      swift_beginAccess();
      uint64_t v18 = *(void *)(v41 + 256);
      if (!v18)
      {

        goto LABEL_18;
      }
      swift_unknownObjectRetain_n();
    }
    else
    {
      swift_retain();
      uint64_t v18 = ADProcessor.outputDepthTexture.getter();
      swift_release();
      swift_unknownObjectRetain();
    }
    v45[3] = swift_getObjectType();
    v45[0] = v18;
    swift_unknownObjectRetain();
    uint64_t v19 = _bridgeAnythingToObjectiveC<A>(_:)();
    id v20 = [self materialPropertyWithContents:v19];
    swift_unknownObjectRelease();
    sub_100013218((uint64_t)v45);
    NSString v21 = String._bridgeToObjectiveC()();
    [v23 setValue:v20 forKey:v21];

    swift_unknownObjectRelease_n();
    uint64_t v1 = v43;
LABEL_18:
    ++v17;
    if (v8 == v1) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t type metadata accessor for PointRender()
{
  return self;
}

uint64_t sub_100157DE0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100157E18()
{
  sub_100155B14(*(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Measure11PointRender_state));
}

uint64_t sub_100157E48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100157E58()
{
  return swift_release();
}

uint64_t sub_100157E60()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC7Measure11PointRender_connectedEndpointTransform];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_OWORD *)v1 + 2) = 0u;
  *((_OWORD *)v1 + 3) = 0u;
  v1[64] = 1;
  v0[OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___isOcclusionInitialized] = 2;
  *(void *)&v0[OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___pointMaterial] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure11PointRender____lazy_storage___pointPrimeMaterial] = 0;
  v0[OBJC_IVAR____TtC7Measure11PointRender_shouldOcclude] = 1;
  *(void *)&v0[OBJC_IVAR____TtC7Measure11PointRender_desiredOpacity] = 0;
  uint64_t v2 = OBJC_IVAR____TtC7Measure11PointRender_point;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)SCNNode) init];
  *(void *)&v0[OBJC_IVAR____TtC7Measure11PointRender_pointPrime] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure11PointRender_pointNodes] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC7Measure11PointRender_state] = static MeasureObjectState.default;
  if (qword_1004C27C8 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1004F7DD8;
  char v4 = UIContentSizeCategory.isAccessibilityCategory.getter();

  BOOL v5 = (v4 & 1) != 0 || UIAccessibilityIsBoldTextEnabled();
  v0[OBJC_IVAR____TtC7Measure11PointRender_accessibleSizeOn] = v5;
  *(void *)&v0[OBJC_IVAR____TtC7Measure11PointRender_type] = static WorldPointType.default;
  *(void *)&v0[OBJC_IVAR____TtC7Measure11PointRender_lines] = _swiftEmptyArrayStorage;

  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100158014()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10015804C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100158108()
{
  v23.receiver = v0;
  v23.super_class = (Class)type metadata accessor for SketchLine();
  [super layoutSubviews];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v1 = [v0 heightAnchor];
  if (qword_1004C28A8 != -1) {
    swift_once();
  }
  id v2 = [v1 constraintEqualToConstant:*(double *)&qword_1004F7ED8];

  [v2 setActive:1];
  if (qword_1004C2878 != -1) {
    swift_once();
  }
  double v3 = *(double *)&qword_1004F7EA8;
  if (qword_1004C2880 != -1) {
    swift_once();
  }
  double v4 = *(double *)&qword_1004F7EB0;
  id v5 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v6 = [v5 layer];
  id v7 = sub_1000177CC(0, v4, v4, v3 + 180.0 - v4, v4);
  [v6 addSublayer:v7];

  id v8 = [v5 layer];
  id v9 = sub_100017A14(0, v4, v4);
  [v8 addSublayer:v9];

  id v10 = [v5 layer];
  id v11 = sub_100017A14(0, v3 + 180.0 - v4, v4);
  [v10 addSublayer:v11];

  [v0 addSubview:v5];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v12 = [v5 widthAnchor];
  id v13 = [v12 constraintEqualToConstant:v3 + 180.0];

  NSString v14 = String._bridgeToObjectiveC()();
  [v13 setIdentifier:v14];

  [v13 setActive:1];
  id v15 = [v5 heightAnchor];
  id v16 = [v15 constraintEqualToConstant:v3];

  [v16 setActive:1];
  id v17 = [v0 centerXAnchor];
  id v18 = [v5 centerXAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  [v19 setActive:1];
  id v20 = [v0 centerYAnchor];
  id v21 = [v5 centerYAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  [v22 setActive:1];
}

id sub_1001585BC()
{
  return sub_100159190(type metadata accessor for SketchLine);
}

uint64_t type metadata accessor for SketchLine()
{
  return self;
}

id sub_100158618(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t (*a7)(void), uint64_t *a8)
{
  v17.receiver = a1;
  v17.super_class = (Class)a7();
  [super initWithFrame:a2, a3, a4, a5];
  swift_getObjectType();
  id v14 = v13;
  sub_100012894(a8);
  String.init<A>(describing:)();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 setAccessibilityIdentifier:v15];

  return v14;
}

void sub_100158758()
{
  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for SketchLineHistory();
  [super layoutSubviews];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  if (qword_1004C2878 != -1) {
    swift_once();
  }
  double v1 = *(double *)&qword_1004F7EA8;
  if (qword_1004C2880 != -1) {
    swift_once();
  }
  double v2 = *(double *)&qword_1004F7EB0;
  if (qword_1004C28B8 != -1) {
    swift_once();
  }
  double v3 = *(double *)&qword_1004F7EE8;
  id v4 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v5 = [v4 layer];
  id v6 = sub_1000177CC(0, v2, v2, v2, v3 - v2);
  [v5 addSublayer:v6];

  id v7 = [v4 layer];
  id v8 = sub_100017A14(0, v2, v2);
  [v7 addSublayer:v8];

  id v9 = [v4 layer];
  id v10 = sub_100017A14(0, v2, v3 - v2);
  [v9 addSublayer:v10];

  [v0 addSubview:v4];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v11 = [v4 widthAnchor];
  id v12 = [v11 constraintEqualToConstant:v1];

  [v12 setActive:1];
  id v13 = [v4 heightAnchor];
  id v14 = [v13 constraintEqualToConstant:v3];

  [v14 setActive:1];
  id v15 = [v0 centerXAnchor];
  id v16 = [v4 centerXAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  [v17 setActive:1];
  id v18 = [v0 centerYAnchor];
  id v19 = [v4 centerYAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19];

  [v20 setActive:1];
}

id sub_100158B6C()
{
  return sub_100159190(type metadata accessor for SketchLineHistory);
}

uint64_t type metadata accessor for SketchLineHistory()
{
  return self;
}

char *sub_100158BA8(uint64_t a1, uint64_t a2)
{
  double v3 = &v2[OBJC_IVAR____TtC7Measure11SketchLabel_text];
  *(void *)double v3 = a1;
  *((void *)v3 + 1) = a2;
  id v4 = objc_allocWithZone((Class)UILabel);
  id v5 = v2;
  swift_bridgeObjectRetain();
  id v6 = [v4 initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v5[OBJC_IVAR____TtC7Measure11SketchLabel_label] = v6;

  v38.receiver = v5;
  v38.super_class = (Class)type metadata accessor for SketchLabel();
  id v7 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v8 = [v7 layer];
  [v8 setMasksToBounds:1];

  id v9 = [v7 layer];
  if (qword_1004C2888 != -1) {
    swift_once();
  }
  [v9 setCornerRadius:*(double *)&qword_1004F7EB8 * 0.5];

  id v10 = self;
  id v11 = (char *)v7;
  id v12 = [v10 systemBackgroundColor];
  [v11 setBackgroundColor:v12];

  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v13 = OBJC_IVAR____TtC7Measure11SketchLabel_label;
  id v14 = *(id *)&v11[OBJC_IVAR____TtC7Measure11SketchLabel_label];
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 setText:v15];

  uint64_t v16 = qword_1004C28A0;
  id v17 = *(id *)&v11[v13];
  if (v16 != -1) {
    swift_once();
  }
  [v17 setFont:qword_1004F7ED0];

  id v18 = *(void **)&v11[v13];
  [v18 setTextAlignment:1];
  id v19 = v18;
  id v20 = [v10 labelColor];
  [v19 setTextColor:v20];

  objc_super v21 = *(void **)&v11[v13];
  LODWORD(v22) = 1148846080;
  [v21 setContentCompressionResistancePriority:0 forAxis:v22];
  swift_getObjectType();
  id v23 = v21;
  sub_100012894(&qword_1004CD688);
  String.init<A>(describing:)();
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v23 setAccessibilityIdentifier:v24];

  id v25 = *(void **)&v11[v13];
  [v11 addSubview:v25];
  [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v26 = [v25 centerXAnchor];
  id v27 = [v11 centerXAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  [v28 setActive:1];
  id v29 = [*(id *)&v11[v13] centerYAnchor];
  id v30 = [v11 centerYAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  [v31 setActive:1];
  id v32 = [v11 heightAnchor];
  id v33 = [v32 constraintEqualToConstant:*(double *)&qword_1004F7EB8];

  [v33 setActive:1];
  id v34 = [v11 widthAnchor];
  id v35 = [*(id *)&v11[v13] widthAnchor];
  if (qword_1004C2890 != -1) {
    swift_once();
  }
  id v36 = [v34 constraintEqualToAnchor:v35 constant:*(double *)&qword_1004F7EC0];

  [v36 setActive:1];
  return v11;
}

id sub_100159178()
{
  return sub_100159190(type metadata accessor for SketchLabel);
}

id sub_100159190(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for SketchLabel()
{
  return self;
}

void sub_10015923C()
{
  uint64_t inited = swift_initStackObject();
  *(unsigned char *)(inited + 72) = 0;
  *(void *)(inited + 80) = 0;
  *(_DWORD *)(inited + 88) = 0;
  *(void *)(inited + 96) = 0;
  *(void *)(inited + 104) = 0;
  uint64_t v1 = sub_100012894(&qword_1004C7170);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1004F8630;
  id v4 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 272);
  swift_retain();
  *(void *)(inited + 112) = v4(KeyPath, v3);
  uint64_t v5 = sub_100012894(&qword_1004C54B8);
  uint64_t v6 = swift_getKeyPath();
  uint64_t v7 = qword_1004F8630;
  id v8 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 272);
  swift_retain();
  *(void *)(inited + 120) = v8(v6, v7);
  swift_release();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100159398()
{
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  swift_retain();
  StateValue.ifUpdated(_:)();

  return swift_release();
}

uint64_t sub_100159424()
{
  swift_beginAccess();
  os_unfair_lock_lock((os_unfair_lock_t)(v0 + 88));
  if ((*(unsigned char *)(v0 + 72) & 1) == 0
    && *(unsigned char *)(*(void *)(v0 + 64) + OBJC_IVAR____TtC7Measure11PrivacyView_blurred) == 1
    && !*(void *)(v0 + 80))
  {
    *(void *)(v0 + 80) = 1;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(v0 + 88));
  return swift_endAccess();
}

uint64_t sub_1001594AC()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = (os_unfair_lock_s *)(v0 + 88);
  swift_beginAccess();
  os_unfair_lock_lock((os_unfair_lock_t)(v0 + 88));
  swift_endAccess();
  if ((*(unsigned char *)(v0 + 72) & 1) == 0
    && *(unsigned char *)(*(void *)(v0 + 64) + OBJC_IVAR____TtC7Measure11PrivacyView_blurred) == 1)
  {
    uint64_t v10 = *(void *)(v0 + 80);
    if (v10)
    {
      if (v10 == 1)
      {
        *(void *)(v0 + 80) = 2;
      }
      else
      {
        sub_10005536C();
        uint64_t v11 = static OS_dispatch_queue.main.getter();
        aBlock[4] = sub_100159E98;
        void aBlock[5] = v0;
        uint64_t v16 = (void *)v11;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100049AB4;
        aBlock[3] = &unk_10048F610;
        id v12 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100039B94();
        sub_100012894((uint64_t *)&unk_1004C68E0);
        sub_100039BEC();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v13 = v16;
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v12);

        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
  }
  swift_beginAccess();
  os_unfair_lock_unlock(v9);
  return swift_endAccess();
}

uint64_t sub_10015979C(char a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v21 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 88));
  swift_endAccess();
  uint64_t v16 = *(void *)(v5 + 96);
  *(void *)(v5 + 96) = a3;
  *(void *)(v5 + 104) = a4;
  sub_100028914(v16);
  if ((a1 & 1) == 0)
  {
    if (*(unsigned char *)(*(void *)(v5 + 64) + OBJC_IVAR____TtC7Measure11PrivacyView_blurred))
    {
      if (a2)
      {
        sub_10005536C();
        swift_retain();
        id v17 = (void *)static OS_dispatch_queue.main.getter();
        id v27 = sub_100159E98;
        uint64_t v28 = v5;
        aBlock = _NSConcreteStackBlock;
        uint64_t v24 = 1107296256;
        id v18 = &unk_10048F638;
        goto LABEL_7;
      }
      *(unsigned char *)(v5 + 72) = 0;
      *(void *)(v5 + 80) = 0;
    }
LABEL_9:
    swift_retain();
    goto LABEL_10;
  }
  if (*(unsigned char *)(*(void *)(v5 + 64) + OBJC_IVAR____TtC7Measure11PrivacyView_blurred)) {
    goto LABEL_9;
  }
  *(unsigned char *)(v5 + 72) = 1;
  sub_10005536C();
  swift_retain();
  id v17 = (void *)static OS_dispatch_queue.main.getter();
  id v27 = sub_100159ED0;
  uint64_t v28 = v5;
  aBlock = _NSConcreteStackBlock;
  uint64_t v24 = 1107296256;
  id v18 = &unk_10048F660;
LABEL_7:
  id v25 = sub_100049AB4;
  id v26 = v18;
  id v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock = (void **)_swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_100039BEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v13);
LABEL_10:
  swift_beginAccess();
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 88));
  return swift_endAccess();
}

uint64_t sub_100159B38()
{
  sub_100028914(*(void *)(v0 + 96));
  swift_release();

  return swift_release();
}

uint64_t sub_100159B78()
{
  uint64_t v0 = StateObserver.deinit();

  sub_100028914(*(void *)(v0 + 96));
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PrivacyController()
{
  uint64_t result = qword_1004CD6C8;
  if (!qword_1004CD6C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100159C24()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100159CAC(uint64_t a1, char a2)
{
  sub_100159F00(a2);
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 96);
  if (v3)
  {
    uint64_t v4 = swift_retain();
    v3(v4);
    sub_100028914((uint64_t)v3);
    uint64_t v5 = *(void *)(a1 + 96);
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;

  return sub_100028914(v5);
}

uint64_t sub_100159D30(void *a1)
{
  uint64_t v2 = (void *)v1;
  *(unsigned char *)(v1 + 72) = 0;
  *(void *)(v1 + 80) = 0;
  *(_DWORD *)(v1 + 88) = 0;
  *(void *)(v1 + 96) = 0;
  *(void *)(v1 + 104) = 0;
  uint64_t v4 = sub_100012894(&qword_1004C7170);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = qword_1004C2E30;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1004F8630;
  id v8 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 272);
  swift_retain();
  v2[14] = v8(KeyPath, v7);
  uint64_t v9 = sub_100012894(&qword_1004C54B8);
  uint64_t v10 = swift_getKeyPath();
  uint64_t v11 = qword_1004F8630;
  id v12 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 272);
  swift_retain();
  v2[15] = v12(v10, v11);
  v2[8] = a1;
  id v13 = a1;
  swift_release();
  return StateObserver.init(configuration:)();
}

uint64_t sub_100159E98()
{
  return sub_100159CAC(v0, 0);
}

uint64_t sub_100159EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100159EC8()
{
  return swift_release();
}

uint64_t sub_100159ED0()
{
  return sub_100159CAC(v0, 1);
}

void sub_100159F00(char a1)
{
  if (a1)
  {
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Measure11PrivacyView_blurred))
    {
LABEL_15:
      *(unsigned char *)(v1 + OBJC_IVAR____TtC7Measure11PrivacyView_blurred) = a1 & 1;
      return;
    }
    if (qword_1004C2B18 != -1) {
      swift_once();
    }
    v3._object = (void *)0x80000001004286B0;
    v3._uint64_t countAndFlagsBits = 0xD000000000000014;
    Log.default(_:isPrivate:)(v3, 0);
    uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC7Measure11PrivacyView_blurEffectAnimation);
    if (v4) {
      [v4 stopAnimation:1];
    }
    uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC7Measure11PrivacyView_visualEffectView);
    if (v5)
    {
      [v5 setAlpha:1.0];
      goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
    if (!*(unsigned char *)(v1 + OBJC_IVAR____TtC7Measure11PrivacyView_blurred)) {
      goto LABEL_15;
    }
    if (qword_1004C2B18 != -1) {
      swift_once();
    }
    v6._uint64_t countAndFlagsBits = 0xD000000000000015;
    v6._object = (void *)0x8000000100428690;
    Log.default(_:isPrivate:)(v6, 0);
    uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC7Measure11PrivacyView_visualEffectView);
    if (!v7) {
      goto LABEL_15;
    }
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v7;
    id v9 = objc_allocWithZone((Class)UIViewPropertyAnimator);
    v16[4] = sub_10015A484;
    v16[5] = v8;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_100049AB4;
    v16[3] = &unk_10048F6B0;
    uint64_t v10 = _Block_copy(v16);
    id v11 = v7;
    swift_release();
    id v12 = [v9 initWithDuration:v10 dampingRatio:0.3 animations:1.0];
    _Block_release(v10);
    uint64_t v13 = OBJC_IVAR____TtC7Measure11PrivacyView_blurEffectAnimation;
    uint64_t v14 = *(void **)(v1 + OBJC_IVAR____TtC7Measure11PrivacyView_blurEffectAnimation);
    *(void *)(v1 + OBJC_IVAR____TtC7Measure11PrivacyView_blurEffectAnimation) = v12;

    uint64_t v15 = *(void **)(v1 + v13);
    if (v15)
    {
      [v15 startAnimation];

      goto LABEL_15;
    }
  }
  __break(1u);
}

char *sub_10015A188(double a1, double a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  v2[OBJC_IVAR____TtC7Measure11PrivacyView_blurred] = 0;
  *(void *)&v2[OBJC_IVAR____TtC7Measure11PrivacyView_visualEffectView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC7Measure11PrivacyView_blurEffectAnimation] = 0;
  static CGSize.* infix(_:_:)();
  double v7 = v6;
  double v9 = v8;
  v18.receiver = v2;
  v18.super_class = ObjectType;
  [super initWithFrame:a1, a2, v6, v8];
  id v11 = self;
  id v12 = (char *)v10;
  id v13 = [v11 effectWithStyle:4];
  id v14 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v13];
  uint64_t v15 = OBJC_IVAR____TtC7Measure11PrivacyView_visualEffectView;
  uint64_t v16 = *(void **)&v12[OBJC_IVAR____TtC7Measure11PrivacyView_visualEffectView];
  *(void *)&v12[OBJC_IVAR____TtC7Measure11PrivacyView_visualEffectView] = v14;

  uint64_t result = *(char **)&v12[v15];
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  [result setFrame:a1, a2, v7, v9];
  uint64_t result = *(char **)&v12[v15];
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = (char *)[result setAlpha:0.0];
  if (*(void *)&v12[v15])
  {
    [v12 addSubview:];
    [v12 setUserInteractionEnabled:0];

    return v12;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for PrivacyView()
{
  return self;
}

uint64_t sub_10015A44C()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_10015A484()
{
  return [*(id *)(v0 + 16) setAlpha:0.0];
}

uint64_t sub_10015A498(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10015A4A8()
{
  return swift_release();
}

uint64_t sub_10015A4B0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void **sub_10015A550(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  double v9 = (char *)*a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (void **)&v9[(v6 & 0xF8 ^ 0x1F8) & (v6 + 16)];
    swift_retain();
  }
  else
  {
    uint64_t v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    id v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    uint64_t v15 = v9;
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_10015A654(id *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = ((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void **sub_10015A6C8(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  id v11 = v4;
  v7(v9, v10, v5);
  return a1;
}

void **sub_10015A758(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

void *sub_10015A7E4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void **sub_10015A854(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_10015A8DC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_10015AA7C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 8) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x10015ACD8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 8] & ~v9;
          id v20 = *(void (**)(unint64_t))(v6 + 56);
          v20(v19);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = a2 - 1;
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for QueueLocal()
{
  return sub_10002F124();
}

unsigned char *storeEnumTagSinglePayload for CardContainerLockingState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10015ADE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardContainerLockingState()
{
  return &type metadata for CardContainerLockingState;
}

Swift::Int sub_10015AE1C()
{
  return Hasher._finalize()();
}

Swift::Int sub_10015AECC(char a1)
{
  Hasher.init(_seed:)();
  if (a1) {
    Swift::UInt64 v2 = qword_100400870[a1];
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

Swift::Int sub_10015AF28()
{
  return Hasher._finalize()();
}

Swift::Int sub_10015AFD4(uint64_t a1, char a2)
{
  Hasher.init(_seed:)();
  if (a2) {
    Swift::UInt64 v3 = qword_100400870[a2];
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

BOOL sub_10015B02C(char *a1, char *a2)
{
  return dbl_100400888[*a1] == dbl_100400888[*a2];
}

Swift::Int sub_10015B050()
{
  return sub_10015AECC(*v0);
}

void sub_10015B058()
{
  if (*v0) {
    Swift::UInt64 v1 = qword_100400870[(char)*v0];
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  Hasher._combine(_:)(v1);
}

Swift::Int sub_10015B098(uint64_t a1)
{
  return sub_10015AFD4(a1, *v1);
}

double *sub_10015B0A0@<X0>(double *result@<X0>, char *a2@<X8>)
{
  double v2 = *result;
  if (*result == 0.0)
  {
    *a2 = 0;
  }
  else if (v2 == 1.0)
  {
    *a2 = 1;
  }
  else
  {
    if (v2 == -1.0) {
      char v3 = 2;
    }
    else {
      char v3 = 3;
    }
    *a2 = v3;
  }
  return result;
}

double sub_10015B0E8@<D0>(double *a1@<X8>)
{
  double result = dbl_100400888[*v1];
  *a1 = result;
  return result;
}

unint64_t sub_10015B104()
{
  unint64_t result = qword_1004CD8C0;
  if (!qword_1004CD8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CD8C0);
  }
  return result;
}

id SCNSegmentationDebugger.segmentedTexture.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___segmentedTexture;
  double v2 = *(void **)(v0 + OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___segmentedTexture);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___segmentedTexture);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_allocWithZone((Class)type metadata accessor for SegmentationProcessor.SegmentedTexture());
    unsigned int v6 = (void *)SurfaceTexture.init(width:height:backgroundColor:)();
    unsigned int v7 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = v6;
    id v3 = v6;

    double v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_10015B1D8()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointContainerNode;
  double v2 = *(void **)&v0[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointContainerNode];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointContainerNode];
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)SCNNode) init];
    NSString v5 = String._bridgeToObjectiveC()();
    [v4 setName:v5];

    unsigned int v6 = self;
    [v6 begin];
    [v0 addChildNode:v4];
    [v6 commit];
    unsigned int v7 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    double v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_10015B2C8()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointTrail;
  double v2 = *(void **)&v0[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointTrail];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointTrail];
  }
  else
  {
    id v4 = v0;
    id v5 = objc_allocWithZone((Class)type metadata accessor for SCNSegmentationDebugger.DebugPointTrail());
    uint64_t v6 = swift_retain();
    id v7 = (id)sub_10015BE74(v6);
    NSString v8 = String._bridgeToObjectiveC()();
    [v7 setName:v8];

    uint64_t v9 = self;
    [v9 begin];
    [v4 addChildNode:v7];
    [v9 commit];
    size_t v10 = *(void **)&v4[v1];
    *(void *)&v4[v1] = v7;
    id v3 = v7;

    double v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_10015B3D0()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointPool;
  if (*(void *)&v0[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointPool])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointPool];
  }
  else
  {
    id v3 = v0;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v3;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_10015CFF4;
    *(void *)(v5 + 24) = v4;
    sub_100012894(&qword_1004C4110);
    swift_allocObject();
    uint64_t v6 = v3;
    uint64_t v2 = ObjectPool.init(allocator:deallocator:synchronized:)();
    *(void *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id SCNSegmentationDebugger.__allocating_init(sceneView:processor:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_allocWithZone(v3);
  return SCNSegmentationDebugger.init(sceneView:processor:)(a1, v7, a3);
}

id SCNSegmentationDebugger.init(sceneView:processor:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___segmentedTexture;
  *(void *)&v3[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___segmentedTexture] = 0;
  uint64_t v7 = OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointContainerNode;
  *(void *)&v3[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointContainerNode] = 0;
  uint64_t v8 = OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointTrail;
  *(void *)&v3[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointTrail] = 0;
  *(void *)&v3[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___pointPool] = 0;
  self;
  uint64_t v9 = swift_dynamicCastObjCClass();
  if (v9)
  {
    size_t v10 = (void *)v9;
    *(void *)&v3[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger_sceneView] = v9;
    *(void *)&v3[OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger_processor] = a3;
    v27.receiver = v3;
    v27.super_class = (Class)type metadata accessor for SCNSegmentationDebugger();
    id v11 = a1;
    swift_retain();
    [super init];
    NSString v13 = String._bridgeToObjectiveC()();
    [v12 setName:v13];

    unsigned int v14 = self;
    [v14 begin];
    id v15 = [v10 scene];
    id v16 = [v15 rootNode];

    [v16 addChildNode:v12];
    id v17 = [v14 commit];
    uint64_t v18 = *(uint64_t (**)(void))(*(void *)a3 + 592);
    uint64_t v19 = ((uint64_t (*)(id))v18)(v17);
    if ((*(void *)SegmentationProcessor.DebugOptions.showSegmentedBackground.unsafeMutableAddressor() & ~v19) == 0
      || (uint64_t v20 = v18(),
          (*(void *)SegmentationProcessor.DebugOptions.showNormalsBackground.unsafeMutableAddressor() & ~v20) == 0))
    {
      id v21 = [v10 scene];
      id v22 = [v21 background];

      id v23 = SCNSegmentationDebugger.segmentedTexture.getter();
      uint64_t v24 = (*(uint64_t (**)(void))((swift_isaMask & *v23) + 0x110))();

      [v22 setContents:v24];
      swift_unknownObjectRelease();
    }

    swift_release();
  }
  else
  {
    id v25 = v3;

    swift_release();
    swift_release();
    type metadata accessor for SCNSegmentationDebugger();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v12;
}

uint64_t type metadata accessor for SCNSegmentationDebugger()
{
  return self;
}

Swift::Void __swiftcall SCNSegmentationDebugger.clearPoints()()
{
  uint64_t v0 = self;
  [v0 begin];
  uint64_t v1 = sub_10015B3D0();
  id v2 = sub_10015B1D8();
  id v3 = [v2 childNodes];

  sub_10001C99C(0, &qword_1004C4028);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(uint64_t))(*(void *)v1 + 216))(v4);
  swift_release();
  swift_bridgeObjectRelease();
  id v5 = sub_10015B1D8();
  SCNNode.removeAllChildren()();

  [v0 commit];
}

void SCNSegmentationDebugger.addPoint(transform:normal:color:opacity:)(Swift::UInt32 a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, double a6, double a7)
{
  uint64_t v9 = self;
  [v9 begin];
  uint64_t v10 = sub_10015B3D0();
  (*(void (**)(id *__return_ptr))(*(void *)v10 + 200))(&v26);
  swift_release();
  id v11 = v26;
  [v26 setOpacity:a7];
  id v12 = [v11 geometry];
  if (!v12) {
    goto LABEL_10;
  }
  NSString v13 = v12;
  id v14 = [v12 materials];

  sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
  unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v15 >> 62))
  {
    if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v20) {
    goto LABEL_9;
  }
LABEL_4:
  if ((v15 & 0xC000000000000001) != 0)
  {
    id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v16 = *(id *)(v15 + 32);
LABEL_7:
    id v17 = v16;
    swift_bridgeObjectRelease();
    id v18 = [v17 diffuse];

    sub_10001C99C(0, &qword_1004C5548);
    Class isa = UIColor.init(argb:)(a1).super.isa;
    [v18 setContents:isa];

LABEL_10:
    [v11 setSimdWorldTransform:a2.n128_f64[0], a3.n128_f64[0], a4.n128_f64[0], a5.n128_f64[0], *(_OWORD *)&a2, *(_OWORD *)&a3, *(_OWORD *)&a4, *(_OWORD *)&a5];
    SCNNode.setForwardDirection(direction:)();
    id v21 = sub_10015B1D8();
    [v21 addChildNode:v11];

    [v9 commit];
    return;
  }
  __break(1u);
}

void SCNSegmentationDebugger.updateTrail(headTransform:)(uint64_t a1)
{
  sub_100113308(a1, (uint64_t)v7);
  if ((v8 & 1) == 0)
  {
    __n128 v5 = (__n128)v7[1];
    __n128 v6 = (__n128)v7[0];
    __n128 v3 = (__n128)v7[3];
    __n128 v4 = (__n128)v7[2];
    id v1 = sub_10015B2C8();
    PointTrail.setHeadPosition(_:)(v6, v5, v4, v3);
  }
  id v2 = sub_10015B2C8();
  SCNSegmentationDebugger.DebugPointTrail.updateLabels()();
}

uint64_t sub_10015BE74(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtCC7Measure23SCNSegmentationDebugger15DebugPointTrail_processor] = a1;
  *(void *)&v1[OBJC_IVAR____TtC7Measure10PointTrail_pointNodes] = _swiftEmptyArrayStorage;
  *(_DWORD *)&v1[OBJC_IVAR____TtC7Measure10PointTrail_minDistance] = 0;
  *(_DWORD *)&v1[OBJC_IVAR____TtC7Measure10PointTrail_stretchingRate] = 0;
  v1[OBJC_IVAR____TtC7Measure10PointTrail_isStarted] = 0;
  *(_DWORD *)&v1[OBJC_IVAR____TtC7Measure10PointTrail_minDistanceSquared] = 0;
  v25.receiver = v1;
  v25.super_class = (Class)type metadata accessor for PointTrail();
  swift_retain();
  id v2 = [super init];
  __n128 v3 = &v2[OBJC_IVAR____TtC7Measure10PointTrail_pointNodes];
  id v24 = self;
  __n128 v4 = self;
  id v23 = self;
  __n128 v5 = v2;
  uint64_t v6 = 30;
  do
  {
    id v7 = [v24 boxWithWidth:0.0003 height:0.0003 length:0.03 chamferRadius:0.0];
    id v8 = [v4 nodeWithGeometry:v7];

    NSString v9 = String._bridgeToObjectiveC()();
    [v8 setName:v9];

    id v10 = [v23 planeWithWidth:0.01 height:0.01];
    id v11 = [v4 nodeWithGeometry:v10];

    NSString v12 = String._bridgeToObjectiveC()();
    [v11 setName:v12];

    [v11 addChildNode:v8];
    [v11 setOpacity:0.5];

    [v11 setHidden:1];
    swift_beginAccess();
    id v13 = v11;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    [v5 addChildNode:v13];

    --v6;
  }
  while (v6);

  id v14 = &v5[OBJC_IVAR____TtC7Measure10PointTrail_minDistance];
  swift_beginAccess();
  *(_DWORD *)id v14 = 1008981770;
  *(_DWORD *)&v5[OBJC_IVAR____TtC7Measure10PointTrail_minDistanceSquared] = 953267991;
  unint64_t v15 = &v5[OBJC_IVAR____TtC7Measure10PointTrail_stretchingRate];
  swift_beginAccess();
  *(_DWORD *)unint64_t v15 = 981668463;
  unint64_t v16 = *(void *)&v5[OBJC_IVAR____TtC7Measure10PointTrail_pointNodes];
  if (!(v16 >> 62))
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v18 = v5;
    uint64_t result = swift_bridgeObjectRetain();
    if (v17) {
      goto LABEL_7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_13;
  }
  id v22 = v5;
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_12;
  }
LABEL_7:
  if ((v16 & 0xC000000000000001) != 0)
  {
LABEL_13:
    id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_10;
  }
  if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v20 = *(id *)(v16 + 32);
LABEL_10:
    id v21 = v20;
    swift_bridgeObjectRelease();
    [v21 setOpacity:1.0];

    swift_release();
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall SCNSegmentationDebugger.DebugPointTrail.updateLabels()()
{
  id v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC7Measure10PointTrail_pointNodes);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (v2 >> 62)
  {
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3) {
      goto LABEL_3;
    }
LABEL_32:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_32;
  }
LABEL_3:
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtCC7Measure23SCNSegmentationDebugger15DebugPointTrail_processor);
  unint64_t v6 = v2 & 0xC000000000000001;
  uint64_t v7 = 4;
  id v29 = *(uint64_t (**)(id))(*(void *)v5 + 952);
  unint64_t v28 = v2;
  while (1)
  {
    int v30 = v4;
    unint64_t v0 = v7 - 4;
    if (v6) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(v2 + 8 * v7);
    }
    NSString v9 = v8;
    uint64_t v10 = v7 - 3;
    if (__OFADD__(v0, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    id v11 = [v8 geometry];
    if (!v11)
    {
      id v14 = 0;
      goto LABEL_18;
    }
    NSString v12 = v11;
    id v13 = [v11 materials];

    sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
    unint64_t v0 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v0 >> 62)
    {
      swift_bridgeObjectRetain();
      id v14 = (void *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v14)
      {
LABEL_12:
        if ((v0 & 0xC000000000000001) != 0)
        {
          id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_30;
          }
          id v15 = *(id *)(v0 + 32);
        }
        id v14 = v15;
      }
    }
    else
    {
      id v14 = *(void **)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v14) {
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_18:
    double v16 = COERCE_DOUBLE(v29([v9 simdWorldPosition]));
    if (v18) {
      break;
    }
    double v19 = v16;
    double v20 = v17;
    int v21 = (*(unsigned __int8 (**)(void, double, double))(*(void *)v5 + 976))(0, v16, v17);
    if (!v21 || v21 == 33) {
      break;
    }
    if (!v14) {
      goto LABEL_34;
    }
    id v24 = [v14 diffuse];
    sub_10001C99C(0, &qword_1004C5548);
    Swift::UInt32 v25 = SegmentationResult.Label.debugColor.getter();
    Class isa = UIColor.init(argb:)(v25).super.isa;
    [v24 setContents:isa];

    (*(void (**)(double, double))(*(void *)v5 + 1008))(v19, v20);
    unint64_t v2 = v28;
    if ((v27 & 1) == 0) {
      SCNNode.setForwardDirection(direction:)();
    }
LABEL_4:

    ++v7;
    int v4 = v30;
    if (v10 == v3) {
      goto LABEL_32;
    }
  }
  if (v14)
  {
    id v22 = [v14 diffuse];
    id v23 = [self blackColor];
    [v22 setContents:v23];

    goto LABEL_4;
  }
  __break(1u);
LABEL_34:
  __break(1u);
}

void SCNSegmentationDebugger.DebugPointTrail.init(numberOfPoints:nodeCreator:)()
{
}

uint64_t sub_10015C6E8()
{
  return swift_release();
}

id SCNSegmentationDebugger.DebugPointTrail.__deallocating_deinit()
{
  return sub_10015C798(type metadata accessor for SCNSegmentationDebugger.DebugPointTrail);
}

void SCNSegmentationDebugger.init()()
{
}

id SCNSegmentationDebugger.__deallocating_deinit()
{
  return sub_10015C798(type metadata accessor for SCNSegmentationDebugger);
}

id sub_10015C798(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  [super dealloc];
}

id sub_10015C85C()
{
  return SCNSegmentationDebugger.segmentedTexture.getter();
}

id sub_10015C880@<X0>(void *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  id v6 = objc_allocWithZone((Class)type metadata accessor for SCNSegmentationDebugger());
  id result = SCNSegmentationDebugger.init(sceneView:processor:)(a1, (uint64_t)v6, a2);
  *a3 = result;
  return result;
}

void sub_10015C8D0()
{
}

void sub_10015C8F4(Swift::UInt32 a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, double a6, double a7)
{
}

void sub_10015C918(uint64_t a1)
{
  sub_100113308(a1, (uint64_t)v7);
  if ((v8 & 1) == 0)
  {
    __n128 v5 = (__n128)v7[1];
    __n128 v6 = (__n128)v7[0];
    __n128 v3 = (__n128)v7[3];
    __n128 v4 = (__n128)v7[2];
    id v1 = sub_10015B2C8();
    PointTrail.setHeadPosition(_:)(v6, v5, v4, v3);
  }
  id v2 = sub_10015B2C8();
  SCNSegmentationDebugger.DebugPointTrail.updateLabels()();
}

uint64_t (*sub_10015C998(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  __n128 v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10015CAB4(v6, a2, a3);
  return sub_10015CA00;
}

uint64_t (*sub_10015CA04(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  __n128 v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10015CB34(v6, a2, a3);
  return sub_10015CA00;
}

void sub_10015CA6C(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_10015CAB4(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  __n128 v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)__n128 v3 = v4;
    return j__s7Measure11MotionStateVwxx;
  }
  __break(1u);
  return result;
}

void (*sub_10015CB34(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  __n128 v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)__n128 v3 = v4;
    return destroy for MotionState;
  }
  __break(1u);
  return result;
}

id sub_10015CBB4()
{
  id v0 = [self boxWithWidth:0.0003 height:0.0003 length:0.015 chamferRadius:0.0];
  id v1 = self;
  id v2 = [v1 nodeWithGeometry:v0];

  NSString v3 = String._bridgeToObjectiveC()();
  [v2 setName:v3];

  [v2 position];
  [v2 setPosition:];
  id v4 = [self planeWithWidth:0.005 height:0.005];
  id v5 = [v1 nodeWithGeometry:v4];

  NSString v6 = String._bridgeToObjectiveC()();
  [v5 setName:v6];

  [v5 addChildNode:v2];
  return v5;
}

void _s7Measure23SCNSegmentationDebuggerC12observeValue10forKeyPath2of6change7contextySSSg_ypSgSDySo05NSKeye6ChangeG0aypGSgSvSgtF_0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = v2;
    uint64_t v6 = SegmentationProcessor.DebugOptions.keyForFeature.unsafeMutableAddressor();
    uint64_t v7 = *(void *)v6;
    if (*(void *)(*(void *)v6 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v8 = sub_1000E20D4(a1, a2);
      if (v9)
      {
        uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10001C99C(0, (unint64_t *)&unk_1004CA020);
        uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger_processor);
        uint64_t v17 = v10;
        NSString v12 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v11 + 608))(v16);
        sub_10015D030();
        char v13 = static NSUserDefaults.update<A>(_:key:feature:)();
        v12(v16, 0);
        if (*(void *)SegmentationProcessor.DebugOptions.showSampledPoints.unsafeMutableAddressor() == v10)
        {
          id v14 = sub_10015B1D8();
        }
        else
        {
          if (*(void *)SegmentationProcessor.DebugOptions.showUnprojectedTrail.unsafeMutableAddressor() != v10) {
            return;
          }
          id v14 = sub_10015B2C8();
        }
        id v15 = v14;
        [v14 setHidden:(v13 & 1) == 0];
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t type metadata accessor for SCNSegmentationDebugger.DebugPointTrail()
{
  return self;
}

id sub_10015CF40@<X0>(void *a1@<X8>)
{
  id result = SCNSegmentationDebugger.segmentedTexture.getter();
  *a1 = result;
  return result;
}

void sub_10015CF6C(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  id v4 = *(id *)(*a2 + OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___segmentedTexture);
  *(void *)(*a2 + OBJC_IVAR____TtC7Measure23SCNSegmentationDebugger____lazy_storage___segmentedTexture) = *a1;
  id v3 = v2;
}

uint64_t sub_10015CFBC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10015CFF8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10015D030()
{
  unint64_t result = qword_1004CD950;
  if (!qword_1004CD950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CD950);
  }
  return result;
}

id sub_10015D088(void *a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v9 = sub_100012894(qword_1004CDAF0);
  uint64_t v10 = qword_1004C2E30;
  swift_retain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1004F8630;
  NSString v12 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 272);
  swift_retain();
  *(void *)(v4 + 40) = v12(KeyPath, v11);
  *(void *)(v4 + 88) = 0;
  *(unsigned char *)(v4 + 96) = 0;
  *(void *)(v4 + 104) = 0;
  *(unsigned char *)(v4 + 112) = 0;
  *(void *)(v4 + 64) = 0;
  *(void *)(v4 + 72) = 0;
  *(_WORD *)(v4 + 80) = 0;
  *(void *)(v4 + 56) = a2;
  *(void *)(v4 + 120) = a1;
  *(void *)(v4 + 128) = a3;
  char v13 = a1;
  swift_unknownObjectRetain();
  id v14 = a2;
  id result = [a3 newDefaultLibrary];
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v16 = sub_10015D964(v13, result);
  id result = (id)swift_unknownObjectRelease();
  if (!v16)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  *(void *)(v4 + 48) = v16;
  swift_release();
  uint64_t v17 = MetalNode.init()();
  char v18 = &v13[direct field offset for OverlayMetalView.scene];
  id result = (id)swift_beginAccess();
  uint64_t v19 = *(void *)v18;
  if (v19)
  {
    swift_beginAccess();
    double v20 = *(void (**)(uint64_t, void, uint64_t))(**(void **)(v19 + 16) + 248);
    swift_retain();
    swift_retain();
    v20(v17, 0, 1);
    swift_release();
    swift_release();

    swift_unknownObjectRelease();
    return (id)v17;
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_10015D2A8(void *a1)
{
  void (*v8)(void *__return_ptr, uint64_t);
  uint64_t v9;
  void (*v10)(void *__return_ptr, uint64_t);
  uint64_t v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat MinY;
  float64x2_t v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat MaxY;
  float64x2_t v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  float64x2_t v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  CGFloat v32;
  float64x2_t v33;
  void (*v34)(void *__return_ptr, uint64_t);
  uint64_t v35;
  char v36;
  void (*v37)(void *__return_ptr, uint64_t);
  uint64_t v38;
  char v39;
  CGFloat MaxX;
  CGFloat v41;
  CGFloat MinX;
  int32x2_t v43;
  float32x4_t v44;
  CGFloat v45;
  int32x2_t v46;
  float64x2_t v47;
  float64x2_t v48;
  void v49[68];
  void v50[68];
  void __src[68];
  unsigned char __dst[531];
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;

  uint64_t v2 = v1;
  uint64_t v4 = (void *)(*(void *)(v1 + 120) + direct field offset for OverlayMetalView.scene);
  swift_beginAccess();
  if (!*v4) {
    return;
  }
  swift_retain();
  id v5 = (void *)MetalScene.makeDefaultRenderPassDescriptor()();
  swift_release();
  if (!v5) {
    return;
  }
  id v6 = [a1 renderCommandEncoderWithDescriptor:v5];
  if (!v6)
  {

    return;
  }
  uint64_t v7 = v6;
  unint64_t v8 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v1 + 40) + 144);
  uint64_t v9 = swift_retain();
  v8(__src, v9);
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  sub_1000732CC((uint64_t)__dst);
  if ((__dst[432] & 1) == 0)
  {
    NSString v12 = *(double *)&__dst[424];
    char v13 = *(double *)&__dst[416];
    id v14 = *(double *)&__dst[408];
    id v15 = *(double *)&__dst[400];
    MinX = CGRectGetMinX(*(CGRect *)&__dst[400]);
    v53.origin.x = v15;
    v53.origin.y = v14;
    v53.size.width = v13;
    v53.size.height = v12;
    MinY = CGRectGetMinY(v53);
    v17.f64[0] = MinX;
    v17.f64[1] = MinY;
    uint64_t v43 = (int32x2_t)vcvt_f32_f64(v17);
    char v18 = v15;
    v17.f64[0] = v14;
    uint64_t v19 = v13;
    double v20 = v12;
    MaxX = CGRectGetMaxX(*(CGRect *)((char *)&v17 - 8));
    v54.origin.x = v15;
    v54.origin.y = v14;
    v54.size.width = v13;
    v54.size.height = v12;
    double MaxY = CGRectGetMaxY(v54);
    v22.f64[0] = MaxX;
    v22.f64[1] = MaxY;
    id v44 = vcvt_hight_f32_f64(v43, v22);
    swift_beginAccess();
    *(_WORD *)(v1 + 80) = 257;
LABEL_10:
    *(float32x4_t *)(v1 + 64) = v44;
    goto LABEL_11;
  }
  uint64_t v10 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v1 + 40) + 144);
  uint64_t v11 = swift_retain();
  v10(v50, v11);
  swift_release();
  memcpy(__src, v50, 0x213uLL);
  sub_1000732CC((uint64_t)__src);
  if ((__src[49] & 1) == 0)
  {
    id v23 = *(double *)&__src[48];
    id v24 = *(double *)&__src[47];
    Swift::UInt32 v25 = *(double *)&__src[46];
    id v26 = *(double *)&__src[45];
    id v45 = CGRectGetMinX(*(CGRect *)&__src[45]);
    v55.origin.x = v26;
    v55.origin.y = v25;
    v55.size.width = v24;
    v55.size.height = v23;
    char v27 = CGRectGetMinY(v55);
    v28.f64[0] = v45;
    v28.f64[1] = v27;
    long long v46 = (int32x2_t)vcvt_f32_f64(v28);
    id v29 = v26;
    v28.f64[0] = v25;
    int v30 = v24;
    id v31 = v23;
    uint64_t v41 = CGRectGetMaxX(*(CGRect *)((char *)&v28 - 8));
    v56.origin.x = v26;
    v56.origin.y = v25;
    v56.size.width = v24;
    v56.size.height = v23;
    id v32 = CGRectGetMaxY(v56);
    v33.f64[0] = v41;
    v33.f64[1] = v32;
    id v44 = vcvt_hight_f32_f64(v46, v33);
    swift_beginAccess();
    *(_WORD *)(v1 + 80) = 1;
    goto LABEL_10;
  }
  swift_beginAccess();
  *(unsigned char *)(v1 + 80) = 0;
LABEL_11:
  id v34 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v1 + 40) + 144);
  id v35 = swift_retain();
  v34(v50, v35);
  swift_release();
  memcpy(__src, v50, 0x213uLL);
  sub_1000732CC((uint64_t)__src);
  if (__src[9])
  {
    swift_beginAccess();
    id v36 = 0;
  }
  else
  {
    long long v47 = *(float64x2_t *)&__src[7];
    id v36 = 1;
    swift_beginAccess();
    *(float32x2_t *)(v2 + 88) = vcvt_f32_f64(v47);
  }
  *(unsigned char *)(v2 + 96) = v36;
  Class v37 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v2 + 40) + 144);
  objc_super v38 = swift_retain();
  v37(v49, v38);
  swift_release();
  memcpy(v50, v49, 0x213uLL);
  sub_1000732CC((uint64_t)v50);
  if (v50[15])
  {
    swift_beginAccess();
    Class v39 = 0;
  }
  else
  {
    long long v48 = *(float64x2_t *)&v50[13];
    Class v39 = 1;
    swift_beginAccess();
    *(float32x2_t *)(v2 + 104) = vcvt_f32_f64(v48);
  }
  *(unsigned char *)(v2 + 112) = v39;
  swift_beginAccess();
  [v7 setFragmentBytes:v2 + 64 length:64 atIndex:0];
  swift_endAccess();
  [v7 setRenderPipelineState:*(void *)(v2 + 48)];
  [v7 drawPrimitives:4 vertexStart:0 vertexCount:4 instanceCount:1];
  [v7 endEncoding];

  swift_unknownObjectRelease();
}

void sub_10015D788()
{
}

uint64_t sub_10015D7B8()
{
  swift_release();
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_10015D800()
{
  uint64_t v0 = MetalNode.deinit();
  swift_release();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PersonHeightDebugNode()
{
  return self;
}

__n128 initializeWithCopy for PersonHeightDebugNode.PassedUniforms(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PersonHeightDebugNode.PassedUniforms(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonHeightDebugNode.PassedUniforms(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonHeightDebugNode.PassedUniforms()
{
  return &type metadata for PersonHeightDebugNode.PassedUniforms;
}

uint64_t sub_10015D964(void *a1, void *a2)
{
  id v4 = [objc_allocWithZone((Class)MTLRenderPipelineDescriptor) init];
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [a2 newFunctionWithName:v5];

  [v4 setVertexFunction:v6];
  swift_unknownObjectRelease();
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [a2 newFunctionWithName:v7];

  if (!v8)
  {
    __break(1u);
    goto LABEL_10;
  }
  [v4 setFragmentFunction:v8];
  swift_unknownObjectRelease();
  id v9 = [v4 colorAttachments];
  id v10 = [v9 objectAtIndexedSubscript:0];

  if (!v10)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
  }
  [v10 setPixelFormat:[a1 colorPixelFormat]];

  id v11 = [v4 colorAttachments];
  id v12 = [v11 objectAtIndexedSubscript:0];

  if (!v12) {
    goto LABEL_11;
  }
  [v12 setBlendingEnabled:0];

  id v13 = [a1 device];
  if (!v13)
  {

    return 0;
  }
  id v18 = 0;
  id v14 = [v13 newRenderPipelineStateWithDescriptor:v4 error:&v18];
  swift_unknownObjectRelease();
  id v15 = v18;
  if (v14)
  {

    return (uint64_t)v14;
  }
  uint64_t v17 = v15;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_10015DC04()
{
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10015DCA0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = type metadata accessor for Optional();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  NSString v5 = (char *)&v8 - v4;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 56))((char *)&v8 - v4, 1, 1, v1);
  uint64_t v6 = v0 + *(void *)(*(void *)v0 + 104);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 40))(v6, v5, v2);
  return swift_endAccess();
}

uint64_t sub_10015DDE8(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(a1);
  NSString v5 = (char *)&v9 - v4;
  uint64_t v7 = v1 + *(void *)(v6 + 104);
  swift_beginAccess();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v7, 1, v2);
  if (!result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
    uint64_t v9 = *(void *)(v1 + *(void *)(*(void *)v1 + 112));
    dispatch thunk of Subscriber.receive(_:)();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

uint64_t sub_10015DF7C()
{
  uint64_t v0 = swift_retain();
  sub_10015DDE8(v0);

  return swift_release();
}

uint64_t sub_10015DFB8()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t v2 = type metadata accessor for Optional();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t sub_10015E05C()
{
  sub_10015DFB8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UIControlSubscription()
{
  return sub_10002F124();
}

uint64_t sub_10015E0CC()
{
  return sub_10015DCA0();
}

uint64_t sub_10015E0F0()
{
  return CustomCombineIdentifierConvertible<>.combineIdentifier.getter();
}

uint64_t sub_10015E114()
{
  return swift_getWitnessTable();
}

uint64_t sub_10015E130()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for UIControlPublisher()
{
  return sub_10002F124();
}

void *sub_10015E164()
{
  return &protocol witness table for Never;
}

uint64_t sub_10015E170(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UIControlSubscription();
  swift_allocObject();
  uint64_t v7 = sub_10015E25C(a1, a2, a3);
  v9[3] = v6;
  v9[4] = swift_getWitnessTable();
  v9[0] = v7;
  dispatch thunk of Subscriber.receive(subscription:)();
  return sub_100013218((uint64_t)v9);
}

uint64_t sub_10015E248(uint64_t a1)
{
  return sub_10015E170(a1, *(void **)v1, *(void *)(v1 + 8));
}

uint64_t *sub_10015E25C(uint64_t a1, void *a2, uint64_t a3)
{
  id v18 = a2;
  uint64_t v19 = a3;
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 80);
  uint64_t v7 = type metadata accessor for Optional();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v17 - v9;
  uint64_t v11 = (uint64_t)v3 + *(void *)(v5 + 104);
  uint64_t v12 = *(void *)(v6 - 8);
  id v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v13(v11, 1, 1, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a1, v6);
  v13((uint64_t)v10, 0, 1, v6);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(v11, v10, v7);
  swift_endAccess();
  id v14 = v18;
  uint64_t v15 = v19;
  *(uint64_t *)((char *)v3 + *(void *)(*v3 + 112)) = (uint64_t)v18;
  [v14 addTarget:v3 action:"eventHandler" forControlEvents:v15];
  return v3;
}

void sub_10015E448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v12 = Strong;
  if ((a9 & 1) == 0)
  {
    if (!Strong)
    {
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    unsigned int v17 = [Strong isHidden];

    if (v17)
    {
      id v18 = (void *)swift_unknownObjectWeakLoadStrong();
      if (!v18)
      {
LABEL_32:
        __break(1u);
        return;
      }
      uint64_t v19 = v18;
      [v18 setHidden:0];
    }
    uint64_t v20 = swift_unknownObjectWeakLoadStrong();
    if (!v20) {
      goto LABEL_29;
    }
    int v21 = (void *)v20;
    NSString v22 = String._bridgeToObjectiveC()();
    [v21 setText:v22];

    uint64_t v23 = swift_unknownObjectWeakLoadStrong();
    if (!v23)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    id v24 = (void *)v23;
    if (a4) {
      NSString v16 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v16 = 0;
    }
    id v14 = &selRef_replaySensorDidFinishReplayingData;
    [v24 setAccessibilityLabel:v16];

    goto LABEL_16;
  }
  if (!Strong)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unsigned __int8 v13 = [Strong isHidden];

  id v14 = &selRef_replaySensorDidFinishReplayingData;
  if ((v13 & 1) == 0)
  {
    uint64_t v15 = (void *)swift_unknownObjectWeakLoadStrong();
    if (!v15)
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    NSString v16 = v15;
    [v15 setHidden:1];
LABEL_16:
  }
  uint64_t v25 = swift_unknownObjectWeakLoadStrong();
  if (!v25)
  {
    __break(1u);
    goto LABEL_26;
  }
  id v26 = (void *)v25;
  NSString v27 = String._bridgeToObjectiveC()();
  [v26 setText:v27];

  uint64_t v28 = swift_unknownObjectWeakLoadStrong();
  if (!v28)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v29 = (void *)v28;
  if (a8) {
    NSString v30 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v30 = 0;
  }
  id v31 = v30;
  [v29 v14[123]];
}

void sub_10015E68C(uint64_t a1, uint64_t a2, uint64_t a3, NSString a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v12 = *(char **)(v9 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel);
  [v12 setHidden:a9 & 1];
  if ((a9 & 1) == 0)
  {
    id v13 = *(id *)&v12[OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label];
    NSString v14 = String._bridgeToObjectiveC()();
    [v13 setText:v14];

    if (a4) {
      a4 = String._bridgeToObjectiveC()();
    }
    [v12 setAccessibilityLabel:a4];
  }
  uint64_t v15 = *(char **)(v9 + OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel);
  id v16 = *(id *)&v15[OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label];
  NSString v17 = String._bridgeToObjectiveC()();
  [v16 setText:v17];

  if (a8) {
    NSString v18 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v18 = 0;
  }
  id v19 = v18;
  [v15 setAccessibilityLabel:];
}

void sub_10015E814()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v2 = *(char **)&v0[OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = [*(id *)&v2[OBJC_IVAR____TtC7Measure24ViewWithInteractiveLabel_label] topAnchor];
  id v4 = [v2 topAnchor];
  id v5 = [v3 constraintEqualToAnchor:v4];

  [v5 setActive:1];
  uint64_t v28 = self;
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1003FA900;
  id v7 = [v2 leadingAnchor];
  id v8 = [v0 leadingAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8];

  *(void *)(v6 + 32) = v9;
  id v10 = [v2 trailingAnchor];
  id v11 = [v0 trailingAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  *(void *)(v6 + 40) = v12;
  id v13 = [v2 bottomAnchor];
  id v14 = [v0 bottomAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  *(void *)(v6 + 48) = v15;
  id v16 = [v2 topAnchor];
  id v17 = [v1 bottomAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17];

  *(void *)(v6 + 56) = v18;
  id v19 = [v1 leadingAnchor];
  id v20 = [v0 leadingAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20];

  *(void *)(v6 + 64) = v21;
  id v22 = [v1 trailingAnchor];
  id v23 = [v0 trailingAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23];

  *(void *)(v6 + 72) = v24;
  id v25 = [v1 topAnchor];
  id v26 = [v0 topAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26];

  *(void *)(v6 + 80) = v27;
  specialized Array._endMutation()();
  sub_100029878();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v28 activateConstraints:isa];
}

char *sub_10015EC24(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel;
  id v11 = (objc_class *)type metadata accessor for SecondaryLabelStackLabel();
  id v12 = objc_allocWithZone(v11);
  id v13 = v4;
  *(void *)&v4[v10] = [v12 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v14 = OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel;
  *(void *)&v13[v14] = [objc_allocWithZone(v11) initWithFrame:0.0, 0.0, 0.0, 0.0];

  v20.receiver = v13;
  v20.super_class = ObjectType;
  id v15 = [super initWithFrame:a1, a2, a3, a4];
  id v16 = *(void **)&v15[OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel];
  id v17 = v15;
  [v16 setUserInteractionEnabled:1];
  id v18 = *(void **)&v17[OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel];
  [v18 setUserInteractionEnabled:1];
  [v17 addSubview:v16];
  [v17 addSubview:v18];
  sub_10015E814();

  return v17;
}

char *sub_10015EDB4(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel;
  id v5 = (objc_class *)type metadata accessor for SecondaryLabelStackLabel();
  id v6 = objc_allocWithZone(v5);
  id v7 = v1;
  *(void *)&v1[v4] = [v6 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v8 = OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel;
  *(void *)&v7[v8] = [objc_allocWithZone(v5) initWithFrame:0.0, 0.0, 0.0, 0.0];

  v15.receiver = v7;
  v15.super_class = ObjectType;
  id v9 = [super initWithCoder:a1];
  uint64_t v10 = v9;
  if (v9)
  {
    id v11 = *(void **)&v9[OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_topLabel];
    id v12 = v9;
    [v11 setUserInteractionEnabled:1];
    id v13 = *(void **)&v12[OBJC_IVAR____TtC7Measure22NewSecondaryLabelStack_bottomLabel];
    [v13 setUserInteractionEnabled:1];
    [v12 addSubview:v11];
    [v12 addSubview:v13];
    sub_10015E814();
  }
  return v10;
}

uint64_t type metadata accessor for NewSecondaryLabelStack()
{
  return self;
}

id sub_10015F16C(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC7Measure19SecondaryLabelStack_contentView] = 0;
  v12.receiver = v4;
  v12.super_class = ObjectType;
  id v10 = [super initWithFrame:a1, a2, a3, a4];
  sub_10015F264();

  return v10;
}

void sub_10015F264()
{
  id v1 = [self mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();

  uint64_t v3 = OBJC_IVAR____TtC7Measure19SecondaryLabelStack_contentView;
  if (!*(void *)&v0[OBJC_IVAR____TtC7Measure19SecondaryLabelStack_contentView])
  {
    __break(1u);
    goto LABEL_11;
  }
  [v0 addSubview:];
  uint64_t v4 = *(void **)&v0[v3];
  if (!v4)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v5 = v4;
  [v0 bounds];
  [v5 setFrame:];

  sub_10010B8BC();
  id v7 = v6;
  id v9 = v8;
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v11 = Strong;
  [Strong setFont:v7];

  objc_super v12 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v12)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v13 = v12;
  [v12 setFont:v7];

  uint64_t v14 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v14)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  objc_super v15 = v14;
  [v14 setTextColor:v9];

  id v16 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v16)
  {
LABEL_15:
    __break(1u);
    return;
  }
  id v17 = v16;
  [v16 setTextColor:v9];
}

id sub_10015F460(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC7Measure19SecondaryLabelStack_contentView] = 0;
  v8.receiver = v1;
  v8.super_class = ObjectType;
  [super initWithCoder:a1];
  id v5 = v4;
  if (v4)
  {
    id v6 = v4;
    sub_10015F264();
  }
  return v5;
}

uint64_t type metadata accessor for SecondaryLabelStack()
{
  return self;
}

id sub_10015F790()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TouchPassThroughView();
  return [super dealloc];
}

uint64_t type metadata accessor for TouchPassThroughView()
{
  return self;
}

char *PointTrail.init(numberOfPoints:nodeCreator:)(uint64_t a1, uint64_t (*a2)(void))
{
  *(void *)&v2[OBJC_IVAR____TtC7Measure10PointTrail_pointNodes] = _swiftEmptyArrayStorage;
  *(_DWORD *)&v2[OBJC_IVAR____TtC7Measure10PointTrail_minDistance] = 0;
  *(_DWORD *)&v2[OBJC_IVAR____TtC7Measure10PointTrail_stretchingRate] = 0;
  v2[OBJC_IVAR____TtC7Measure10PointTrail_isStarted] = 0;
  *(_DWORD *)&v2[OBJC_IVAR____TtC7Measure10PointTrail_minDistanceSquared] = 0;
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for PointTrail();
  uint64_t result = (char *)[super init];
  if (a1 < 0)
  {
    __break(1u);
  }
  else if (a1)
  {
    id v6 = &result[OBJC_IVAR____TtC7Measure10PointTrail_pointNodes];
    id v10 = result;
    id v7 = result;
    do
    {
      objc_super v8 = (void *)a2();
      [v8 setHidden:1];
      swift_beginAccess();
      id v9 = v8;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      [v7 addChildNode:v9];

      --a1;
    }
    while (a1);

    return v10;
  }
  return result;
}

uint64_t type metadata accessor for PointTrail()
{
  return self;
}

uint64_t PointTrail.pointNodes.getter()
{
  return swift_bridgeObjectRetain();
}

float PointTrail.minDistance.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Measure10PointTrail_minDistance;
  swift_beginAccess();
  return *(float *)v1;
}

float PointTrail.minDistance.setter(float a1)
{
  uint64_t v3 = (float *)(v1 + OBJC_IVAR____TtC7Measure10PointTrail_minDistance);
  swift_beginAccess();
  *uint64_t v3 = a1;
  float result = a1 * a1;
  *(float *)(v1 + OBJC_IVAR____TtC7Measure10PointTrail_minDistanceSquared) = a1 * a1;
  return result;
}

void (*PointTrail.minDistance.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC7Measure10PointTrail_minDistance;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_10015FAF8;
}

void sub_10015FAF8(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0) {
    *(float *)(v3[3] + OBJC_IVAR____TtC7Measure10PointTrail_minDistanceSquared) = *(float *)(v3[3] + v3[4])
  }
                                                                                * *(float *)(v3[3] + v3[4]);

  free(v3);
}

float PointTrail.stretchingRate.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Measure10PointTrail_stretchingRate;
  swift_beginAccess();
  return *(float *)v1;
}

uint64_t PointTrail.stretchingRate.setter(float a1)
{
  uint64_t v3 = (float *)(v1 + OBJC_IVAR____TtC7Measure10PointTrail_stretchingRate);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*PointTrail.stretchingRate.modify())()
{
  return j__swift_endAccess;
}

uint64_t PointTrail.setStartPosition(_:)(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  __n128 v14 = a3;
  __n128 v15 = a4;
  __n128 v12 = a1;
  __n128 v13 = a2;
  id v5 = (unint64_t *)(v4 + OBJC_IVAR____TtC7Measure10PointTrail_pointNodes);
  swift_beginAccess();
  unint64_t v6 = *v5;
  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)(v4 + OBJC_IVAR____TtC7Measure10PointTrail_isStarted) = 1;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v7 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = *(id *)(v6 + 8 * v9 + 32);
      }
      objc_super v11 = v10;
      ++v9;
      [v10 setSimdTransform:v12.n128_f64[0], v13.n128_f64[0], v14.n128_f64[0], v15.n128_f64[0], *(_OWORD *)&v12, *(_OWORD *)&v13, *(_OWORD *)&v14, *(_OWORD *)&v15];
      [v11 setHidden:0];
    }
    while (v7 != v9);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void PointTrail.setHeadPosition(_:)(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  __n128 v36 = a3;
  __n128 v37 = a4;
  __n128 v34 = a1;
  __n128 v35 = a2;
  id v5 = (unsigned char *)OBJC_IVAR____TtC7Measure10PointTrail_isStarted;
  unint64_t v6 = v4 + OBJC_IVAR____TtC7Measure10PointTrail_pointNodes;
  if (*(unsigned char *)(v4 + OBJC_IVAR____TtC7Measure10PointTrail_isStarted) != 1)
  {
    swift_beginAccess();
    unint64_t v6 = *(void *)v6;
    if (v6 >> 62) {
      goto LABEL_36;
    }
    uint64_t v27 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v27) {
      goto LABEL_21;
    }
LABEL_37:
    swift_bridgeObjectRelease();
    v5[v4] = 1;
    return;
  }
  swift_beginAccess();
  if (*(void *)v6 >> 62) {
    goto LABEL_33;
  }
  uint64_t v7 = *(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - 1;
  if (__OFSUB__(v7, 1)) {
    goto LABEL_35;
  }
  while (2)
  {
    uint64_t v9 = OBJC_IVAR____TtC7Measure10PointTrail_minDistanceSquared;
    id v10 = (float *)(v4 + OBJC_IVAR____TtC7Measure10PointTrail_stretchingRate);
    Class v39 = (float *)(v4 + OBJC_IVAR____TtC7Measure10PointTrail_minDistance);
    swift_beginAccess();
    objc_super v38 = v10;
    swift_beginAccess();
    char v11 = 0;
    while (1)
    {
      unint64_t v12 = v8 - 1;
      if (v8 <= 1)
      {
        if ((v8 != 1) | v11 & 1)
        {
          unint64_t v31 = *(void *)v6;
          if ((v31 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_bridgeObjectRelease();
          }
          else
          {
            if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_40;
            }
            id v32 = *(id *)(v31 + 32);
          }
          [v32 setSimdTransform:v34.n128_f64[0], v35.n128_f64[0], v36.n128_f64[0], v37.n128_f64[0], *(_OWORD *)&v34, *(_OWORD *)&v35, *(_OWORD *)&v36, *(_OWORD *)&v37];

          return;
        }
        char v11 = 1;
        uint64_t v13 = 1;
      }
      else
      {
        uint64_t v13 = v8 - 1;
      }
      unint64_t v14 = *(void *)v6;
      if ((*(void *)v6 & 0xC000000000000001) == 0) {
        break;
      }
      swift_bridgeObjectRetain();
      id v5 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
      unint64_t v14 = *(void *)v6;
      if ((*(void *)v6 & 0xC000000000000001) != 0)
      {
LABEL_18:
        swift_bridgeObjectRetain();
        id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
LABEL_13:
      if (v12 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_32;
      }
      id v15 = *(id *)(v14 + 8 * v12 + 32);
LABEL_15:
      [v5 simdPosition:*(_OWORD *)&v34, *(_OWORD *)&v35, *(_OWORD *)&v36, *(_OWORD *)&v37];
      float32x4_t v40 = v16;
      [v15 simdPosition];
      float32x4_t v18 = vsubq_f32(v40, v17);
      float32x4_t v19 = vmulq_f32(v18, v18);
      if (*(float *)(v4 + v9) < (float)(v19.f32[2] + vaddv_f32(*(float32x2_t *)v19.f32)))
      {
        [v5 simdPosition];
        float32x4_t v41 = v20;
        [v15 simdTransform];
        [v5 setSimdTransform:];
        [v15 simdPosition];
        float32x4_t v22 = vsubq_f32(v21, v41);
        int32x4_t v23 = (int32x4_t)vmulq_f32(v22, v22);
        v23.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v23, 2), vadd_f32(*(float32x2_t *)v23.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v23.i8, 1))).u32[0];
        float32x2_t v24 = vrsqrte_f32((float32x2_t)v23.u32[0]);
        float32x2_t v25 = vmul_f32(v24, vrsqrts_f32((float32x2_t)v23.u32[0], vmul_f32(v24, v24)));
        v41.i64[0] = vmulq_n_f32(v22, vmul_f32(v25, vrsqrts_f32((float32x2_t)v23.u32[0], vmul_f32(v25, v25))).f32[0]).u64[0];
        [v15 simdPosition];
        [v5 setSimdPosition:COERCE_DOUBLE(vsub_f32(v26, vmul_n_f32(*(float32x2_t *)v41.f32, *v39 + (float)(*v38 * (float)v8))))];
      }

      uint64_t v8 = v13;
    }
    if ((unint64_t)v8 < *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v5 = *(id *)(v14 + 8 * v8 + 32);
      if ((v14 & 0xC000000000000001) != 0) {
        goto LABEL_18;
      }
      goto LABEL_13;
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v8 = v33 - 1;
    if (!__OFSUB__(v33, 1)) {
      continue;
    }
    break;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  swift_bridgeObjectRetain();
  uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
  if (!v27) {
    goto LABEL_37;
  }
LABEL_21:
  if (v27 >= 1)
  {
    uint64_t v28 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v29 = *(id *)(v6 + 8 * v28 + 32);
      }
      NSString v30 = v29;
      ++v28;
      [v29 setSimdTransform:v34.n128_f64[0], v35.n128_f64[0], v36.n128_f64[0], v37.n128_f64[0], *(_OWORD *)&v34, *(_OWORD *)&v35, *(_OWORD *)&v36, *(_OWORD *)&v37];
      [v30 setHidden:0];
    }
    while (v27 != v28);
    goto LABEL_37;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_1001601E4(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC7Measure10PointTrail_pointNodes);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

char *PointTrail.__allocating_init(numberOfPoints:nodeCreator:)(uint64_t a1, uint64_t (*a2)(void))
{
  id v5 = objc_allocWithZone(v2);
  return PointTrail.init(numberOfPoints:nodeCreator:)(a1, a2);
}

void PointTrail.init()()
{
}

id PointTrail.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PointTrail();
  return [super dealloc];
}

uint64_t sub_1001603F0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC7Measure10PointTrail_pointNodes);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t initializeBufferWithCopyOfBuffer for PlatterState(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PlatterState(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
  }
  unsigned int v4 = *(unsigned __int8 *)a1;
  BOOL v5 = v4 >= 2;
  int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for PlatterState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)uint64_t result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)uint64_t result = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlatterState()
{
  return &type metadata for PlatterState;
}

uint64_t sub_10016057C()
{
  uint64_t result = Contexts.UIKit.init()();
  qword_1004F8468 = result;
  return result;
}

id sub_10016059C@<X0>(void *a1@<X8>)
{
  if (qword_1004C2C38 != -1) {
    swift_once();
  }
  int v2 = (void *)qword_1004F8468;
  *a1 = qword_1004F8468;

  return v2;
}

BOOL sub_100160608(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a1[1] ^ a2[1] | a2[2] ^ a1[2]) & 1) == 0;
}

unint64_t sub_100160640(uint64_t a1)
{
  unint64_t result = sub_100160668();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100160668()
{
  unint64_t result = qword_1004CDD30;
  if (!qword_1004CDD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CDD30);
  }
  return result;
}

unint64_t sub_1001606BC@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t result = sub_1000E20D4(result, a2), (v6 & 1) != 0))
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a3 + 56) + 48 * result);
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    uint64_t v10 = v7[2];
    uint64_t v11 = v7[3];
    uint64_t v12 = v7[4];
    uint64_t v13 = (void *)v7[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = v13;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
  }
  *a4 = v9;
  a4[1] = v8;
  a4[2] = v10;
  a4[3] = v11;
  a4[4] = v12;
  a4[5] = v13;
  return result;
}

uint64_t sub_10016076C(uint64_t a1, char **a2)
{
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v20 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v9 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    uint64_t v14 = *(void *)(*(void *)(a1 + 48) + 8 * i);
    memcpy(__dst, (const void *)(*(void *)(a1 + 56) + 304 * i), sizeof(__dst));
    uint64_t v22 = v14;
    memcpy(v23, __dst, sizeof(v23));
    id v15 = *a2;
    sub_1000DBFA4((uint64_t)__dst);
    sub_10016DC68((uint64_t)&v22);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      id v15 = sub_10006F3E4(0, *((void *)v15 + 2) + 1, 1, v15);
      *a2 = v15;
    }
    unint64_t v18 = *((void *)v15 + 2);
    unint64_t v17 = *((void *)v15 + 3);
    if (v18 >= v17 >> 1)
    {
      id v15 = sub_10006F3E4((char *)(v17 > 1), v18 + 1, 1, v15);
      *a2 = v15;
    }
    *((void *)v15 + 2) = v18 + 1;
    memcpy(&v15[304 * v18 + 32], __dst, 0x130uLL);
    uint64_t result = sub_10016B21C((uint64_t)__dst);
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v20) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v19 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v20) {
        return swift_release();
      }
      unint64_t v12 = *(void *)(v19 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v20) {
          return swift_release();
        }
        unint64_t v12 = *(void *)(v19 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v20) {
            return swift_release();
          }
          unint64_t v12 = *(void *)(v19 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v6 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v20) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v19 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v20) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v19 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1001609E0()
{
  uint64_t v0 = type metadata accessor for UUID();
  sub_100021818(v0, qword_1004F8470);
  sub_1000217E0(v0, (uint64_t)qword_1004F8470);
  return UUID.init()();
}

uint64_t sub_100160A2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + 64))
  {
    uint64_t v5 = *(void *)(v1 + 64);
  }
  else
  {
    id v6 = *(id *)(v1 + 96);
    static DispatchQoS.userInitiated.getter();
    type metadata accessor for RectangleDetector();
    swift_allocObject();
    uint64_t v5 = sub_1001873A8(v6, (uint64_t)v4);

    *(void *)(v1 + 64) = v5;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v5;
}

uint64_t sub_100160B14(void *a1)
{
  uint64_t v2 = v1;
  id v55 = a1;
  uint64_t v3 = sub_100012894(&qword_1004C9B20);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100012894(&qword_1004CDF50);
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v54 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 64) = 0;
  *(unsigned char *)(v1 + 104) = 0;
  *(void *)(v1 + 80) = 0;
  *(void *)(v1 + 88) = 0;
  *(void *)(v1 + 112) = _swiftEmptyDictionarySingleton;
  *(void *)(v1 + 120) = 0;
  uint64_t v9 = sub_100012894(&qword_1004C7170);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v11 = qword_1004C2E30;
  swift_retain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_1004F8630;
  int64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 272);
  swift_retain();
  *(void *)(v2 + 128) = v13(KeyPath, v12);
  uint64_t v14 = sub_100012894(&qword_1004C54B8);
  uint64_t v15 = swift_getKeyPath();
  uint64_t v16 = qword_1004F8630;
  unint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 272);
  swift_retain();
  *(void *)(v2 + 136) = v17(v15, v16);
  uint64_t v18 = sub_100012894(&qword_1004CDF30);
  uint64_t v19 = swift_getKeyPath();
  uint64_t v20 = qword_1004F8630;
  float32x4_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 272);
  swift_retain();
  *(void *)(v2 + 144) = v21(v19, v20);
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = sub_100012894((uint64_t *)&unk_1004C4710);
  uint64_t v24 = qword_1004F8630;
  float32x2_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 272);
  swift_retain();
  *(void *)(v2 + 152) = v25(v22, v24);
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = sub_100012894(&qword_1004C3EE0);
  uint64_t v28 = qword_1004F8630;
  id v29 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 272);
  swift_retain();
  *(void *)(v2 + 160) = v29(v26, v28);
  sub_100012894(&qword_1004CDF38);
  swift_getKeyPath();
  *(void *)(v2 + 168) = MutableStateValue.__allocating_init(_:_:)();
  sub_100012894(&qword_1004CDF40);
  swift_getKeyPath();
  *(void *)(v2 + 176) = MutableStateValue.__allocating_init(_:_:)();
  sub_100012894(&qword_1004CDF48);
  swift_getKeyPath();
  *(void *)(v2 + 184) = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v30 = sub_100012894(&qword_1004C58E0);
  uint64_t v31 = swift_getKeyPath();
  uint64_t v32 = qword_1004F8630;
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 272);
  swift_retain();
  *(void *)(v2 + 192) = v33(v31, v32);
  uint64_t v34 = swift_getKeyPath();
  uint64_t v35 = sub_100012894(&qword_1004CA010);
  uint64_t v36 = qword_1004F8630;
  __n128 v37 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 272);
  swift_retain();
  *(void *)(v2 + 200) = v37(v34, v36);
  type metadata accessor for WorldRectangle();
  *(void *)(v2 + 208) = OrderedDictionary.init()();
  *(void *)(v2 + 216) = v38;
  *(void *)(v2 + 224) = v39;
  *(_OWORD *)(v2 + 232) = 0u;
  *(_OWORD *)(v2 + 248) = 0u;
  *(void *)(v2 + 264) = _swiftEmptyArrayStorage;
  *(_WORD *)(v2 + 272) = 768;
  sub_100012894(&qword_1004C6920);
  swift_allocObject();
  *(void *)(v2 + 280) = PassthroughSubject.init()();
  float32x4_t v40 = v55;
  *(void *)(v2 + 96) = v55;
  id v41 = v40;
  id v42 = [v41 scene];
  type metadata accessor for RectangleRenderer();
  swift_allocObject();
  uint64_t v43 = sub_100193C70(v42);

  *(void *)(v2 + 72) = v43;
  swift_release();
  id v58 = &type metadata for Configurations.Default;
  NSString v59 = &protocol witness table for Configurations.Default;
  uint64_t v44 = StateObserver.init(configuration:)();
  swift_retain();
  uint64_t v57 = *(void *)(sub_100160A2C() + 64);
  sub_100012894(&qword_1004CDF58);
  sub_10002179C(&qword_1004CDF60, &qword_1004CDF58);
  uint64_t v45 = Publisher.eraseToAnyPublisher()();
  uint64_t result = swift_release();
  uint64_t v57 = v45;
  if (qword_1004C29D8 != -1) {
    uint64_t result = swift_once();
  }
  long long v47 = (void *)*((void *)&xmmword_1004F8000 + 1);
  if (*((void *)&xmmword_1004F8000 + 1))
  {
    id v56 = (id)Contexts.PrivateQueue.init(_:)();
    uint64_t v48 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v5, 1, 1, v48);
    id v49 = v47;
    sub_100012894(&qword_1004CDF68);
    sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
    sub_10002179C(&qword_1004CDF70, &qword_1004CDF68);
    sub_10011206C();
    Publisher.receive<A>(on:options:)();
    sub_10013E660((uint64_t)v5);

    swift_release();
    sub_10002179C(&qword_1004CDF78, &qword_1004CDF50);
    swift_retain();
    uint64_t v50 = v54;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v8, v50);
    swift_beginAccess();
    sub_100012894(&qword_1004C5E50);
    sub_10002179C(&qword_1004C5E58, &qword_1004C5E50);
    AnyCancellable.store<A>(in:)();
    swift_endAccess();
    swift_release();
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = v44;
    *(unsigned char *)(v51 + 24) = 3;
    sub_100012894((uint64_t *)&unk_1004C68D0);
    swift_allocObject();
    swift_retain();
    Future.init(_:)();
    swift_release();
    swift_release();

    return v44;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100161328(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return result;
  }
  swift_retain();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_10016B2F8(v2);
  swift_bridgeObjectRelease();
  swift_release();
  Swift::String v321 = (char *)v3;
  if (!*(void *)(v3 + 16)) {
    return swift_bridgeObjectRelease();
  }
  memcpy(__dst, (const void *)(v3 + 32), sizeof(__dst));
  sub_1000DBFA4((uint64_t)__dst);
  sub_100073C44(0, 1);
  if (v1 == 1)
  {
    sub_100166158((uint64_t)__dst);
    sub_10016B21C((uint64_t)__dst);
    return swift_bridgeObjectRelease();
  }
  long long v4 = __dst[15];
  long long v5 = __dst[16];
  long long v6 = __dst[17];
  long long v7 = __dst[18];
  int v8 = DWORD1(__dst[14]);
  char v9 = BYTE8(__dst[14]);
  long long v10 = __dst[13];
  char v11 = __dst[14];
  char v12 = BYTE1(__dst[12]);
  int v13 = HIDWORD(__dst[11]);
  char v14 = __dst[12];
  uint64_t v15 = (void *)DWORD1(__dst[11]);
  char v16 = BYTE8(__dst[11]);
  int v17 = HIDWORD(__dst[10]);
  char v18 = __dst[11];
  double v19 = *(double *)&__dst[10];
  char v20 = BYTE8(__dst[10]);
  uint64_t v21 = *(void *)((char *)&__dst[9] + 4);
  char v22 = BYTE12(__dst[9]);
  int v23 = HIDWORD(__dst[8]);
  char v24 = __dst[9];
  int v25 = DWORD1(__dst[8]);
  char v26 = BYTE8(__dst[8]);
  char v27 = __dst[8];
  long long v28 = __dst[4];
  long long v29 = __dst[5];
  long long v30 = __dst[7];
  long long v31 = __dst[6];
  long long v32 = __dst[2];
  char v33 = __dst[3];
  long long v34 = __dst[1];
  long long v35 = __dst[0];
  uint64_t v36 = _swiftEmptyDictionarySingleton;
  Swift::String v320 = _swiftEmptyDictionarySingleton;
  uint64_t v37 = *((void *)v321 + 2);
  if (v37)
  {
    char v164 = BYTE8(__dst[10]);
    long long v178 = __dst[0];
    long long v182 = __dst[2];
    long long v185 = __dst[1];
    long long v188 = __dst[7];
    long long v191 = __dst[6];
    char v195 = __dst[3];
    long long v198 = __dst[4];
    long long v202 = __dst[5];
    char v206 = __dst[8];
    int v209 = DWORD1(__dst[8]);
    int v213 = HIDWORD(__dst[8]);
    char v216 = BYTE8(__dst[8]);
    uint64_t v219 = *(void *)((char *)&__dst[9] + 4);
    char v222 = __dst[9];
    char v226 = BYTE12(__dst[9]);
    int v229 = HIDWORD(__dst[10]);
    int v165 = DWORD1(__dst[11]);
    int v167 = HIDWORD(__dst[11]);
    char v169 = __dst[14];
    long long v233 = __dst[13];
    long long v236 = __dst[15];
    int v171 = DWORD1(__dst[14]);
    char v176 = BYTE8(__dst[14]);
    long long v239 = __dst[16];
    long long v243 = __dst[17];
    long long v246 = __dst[18];
    float v173 = v321;
    swift_bridgeObjectRetain();
    memcpy(__src, v321 + 32, 0x130uLL);
    if ((__src[21] & 1) == 0)
    {
      uint64_t v15 = _swiftEmptyDictionarySingleton;
      uint64_t v38 = 336;
      do
      {
        double v39 = *(double *)&__src[20];
        sub_1000DBFA4((uint64_t)__src);
        float32x4_t v40 = v15;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v319[0] = v15;
        unint64_t v43 = sub_1000E237C(v39);
        uint64_t v44 = v15[2];
        BOOL v45 = (v42 & 1) == 0;
        uint64_t v46 = v44 + v45;
        if (__OFADD__(v44, v45)) {
          goto LABEL_88;
        }
        char v47 = v42;
        if (v40[3] >= v46)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            char v9 = v176;
            if ((v42 & 1) == 0) {
              goto LABEL_18;
            }
          }
          else
          {
            sub_1000D8D58();
            char v9 = v176;
            if ((v47 & 1) == 0) {
              goto LABEL_18;
            }
          }
        }
        else
        {
          sub_1000D29AC(v46, isUniquelyReferenced_nonNull_native);
          unint64_t v48 = sub_1000E237C(v39);
          if ((v47 & 1) != (v49 & 1)) {
            goto LABEL_95;
          }
          unint64_t v43 = v48;
          char v9 = v176;
          if ((v47 & 1) == 0)
          {
LABEL_18:
            uint64_t v51 = *(void **)&v319[0];
            *(void *)(*(void *)&v319[0] + 8 * (v43 >> 6) + 64) |= 1 << v43;
            *(double *)(v51[6] + 8 * v43) = v39;
            memcpy((void *)(v51[7] + 304 * v43), __src, 0x130uLL);
            uint64_t v52 = v51[2];
            BOOL v53 = __OFADD__(v52, 1);
            uint64_t v54 = v52 + 1;
            if (v53) {
              goto LABEL_90;
            }
            uint64_t v15 = v51;
            _OWORD v51[2] = v54;
            goto LABEL_20;
          }
        }
        uint64_t v15 = *(void **)&v319[0];
        uint64_t v50 = (void *)(*(void *)(*(void *)&v319[0] + 56) + 304 * v43);
        memcpy(v323, v50, sizeof(v323));
        sub_10016B21C((uint64_t)v323);
        memcpy(v50, __src, 0x130uLL);
LABEL_20:
        swift_bridgeObjectRelease();
        if (!--v37) {
          goto LABEL_23;
        }
        memcpy(__src, &v173[v38], 0x130uLL);
        v38 += 304;
      }
      while ((__src[21] & 1) == 0);
    }
    __break(1u);
LABEL_23:
    swift_bridgeObjectRelease();
    uint64_t v36 = v15;
    long long v6 = v243;
    long long v7 = v246;
    long long v4 = v236;
    long long v5 = v239;
    char v11 = v169;
    int v8 = v171;
    long long v10 = v233;
    int v13 = v167;
    LODWORD(v15) = v165;
    int v17 = v229;
    char v22 = v226;
    char v24 = v222;
    uint64_t v21 = v219;
    char v26 = v216;
    int v23 = v213;
    int v25 = v209;
    char v27 = v206;
    long long v28 = v198;
    long long v29 = v202;
    char v33 = v195;
    long long v30 = v188;
    long long v31 = v191;
    long long v32 = v182;
    long long v34 = v185;
    long long v35 = v178;
    char v20 = v164;
  }
  if ((v20 & 1) == 0)
  {
    while (1)
    {
      v319[0] = v35;
      v319[1] = v34;
      v319[2] = v32;
      LOBYTE(v319[3]) = v33 & 1;
      v319[4] = v28;
      v319[5] = v29;
      v319[6] = v31;
      v319[7] = v30;
      LOBYTE(v319[8]) = v27 & 1;
      DWORD1(v319[8]) = v25;
      BYTE8(v319[8]) = v26 & 1;
      HIDWORD(v319[8]) = v23;
      LOBYTE(v319[9]) = v24 & 1;
      *(void *)((char *)&v319[9] + 4) = v21;
      BYTE12(v319[9]) = v22 & 1;
      *(double *)&v319[10] = v19;
      BYTE8(v319[10]) = 0;
      HIDWORD(v319[10]) = v17;
      LOBYTE(v319[11]) = v18 & 1;
      DWORD1(v319[11]) = v15;
      BYTE8(v319[11]) = v16 & 1;
      HIDWORD(v319[11]) = v13;
      LOBYTE(v319[12]) = v14 & 1;
      BYTE1(v319[12]) = v12 & 1;
      v319[13] = v10;
      LOBYTE(v319[14]) = v11 & 1;
      DWORD1(v319[14]) = v8;
      BYTE8(v319[14]) = v9 & 1;
      v319[15] = v4;
      v319[16] = v5;
      v319[17] = v6;
      v319[18] = v7;
      memcpy(__src, v319, 0x130uLL);
      sub_100012894((uint64_t *)&unk_1004C6960);
      uint64_t v55 = swift_allocObject();
      *(_OWORD *)(v55 + 16) = xmmword_1003F87F0;
      memcpy((void *)(v55 + 32), v319, 0x130uLL);
      sub_1000DBFA4((uint64_t)v319);
      id v56 = v320;
      char v57 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v323[0] = v56;
      sub_1000D5F00(v55, v57, v19);
      Swift::String v320 = *(unint64_t **)&v323[0];
      swift_bridgeObjectRelease();
      id v58 = sub_100190E38((double ****)v323, v19);
      if (*v59)
      {
        id v60 = v321;
        sub_1000DBFA4((uint64_t)v319);
        swift_bridgeObjectRetain();
        id v61 = sub_10016C978((uint64_t)__src, (uint64_t)v60);
        swift_bridgeObjectRelease();
        sub_10016B21C((uint64_t)v319);
        sub_100122628((uint64_t)v61);
      }
      ((void (*)(_OWORD *, void))v58)(v323, 0);
      id v62 = v320;
      if (!v320[2]) {
        break;
      }
      unint64_t v63 = sub_1000E237C(v19);
      if ((v64 & 1) == 0) {
        goto LABEL_86;
      }
      uint64_t v65 = *(void *)(v62[7] + 8 * v63);
      uint64_t v66 = *(void *)(v65 + 16);
      if (v66)
      {
        swift_bridgeObjectRetain();
        memcpy(v323, (const void *)(v65 + 32), sizeof(v323));
        if (BYTE8(v323[10])) {
          goto LABEL_94;
        }
        double v67 = *(double *)&v323[10];
        uint64_t v68 = 336;
        while (1)
        {
          unint64_t v69 = sub_1000E237C(v67);
          if (v70)
          {
            unint64_t v71 = v69;
            sub_1000DBFA4((uint64_t)v323);
            *(void *)&long long v250 = v36;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1000D8D58();
              uint64_t v36 = (void *)v250;
            }
            memcpy(v318, (const void *)(v36[7] + 304 * v71), sizeof(v318));
            sub_1000A9940(v71, (uint64_t)v36);
            swift_bridgeObjectRelease();
            sub_10016B21C((uint64_t)v323);
            sub_10016B21C((uint64_t)v318);
          }
          if (!--v66) {
            break;
          }
          memcpy(v323, (const void *)(v65 + v68), sizeof(v323));
          double v67 = *(double *)&v323[10];
          v68 += 304;
          if (BYTE8(v323[10])) {
            goto LABEL_94;
          }
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      Swift::String v321 = (char *)_swiftEmptyArrayStorage;
      uint64_t v72 = swift_bridgeObjectRetain();
      sub_10016076C(v72, &v321);
      swift_bridgeObjectRelease();
      id v73 = v321;
      if (*((void *)v321 + 2) < 2uLL) {
        goto LABEL_44;
      }
      sub_10016B21C((uint64_t)v319);
      if (!*((void *)v73 + 2)) {
        goto LABEL_87;
      }
      memcpy(v323, v73 + 32, sizeof(v323));
      char v196 = v323[3];
      long long v179 = v323[0];
      long long v183 = v323[2];
      long long v199 = v323[4];
      long long v203 = v323[5];
      char v207 = v323[8];
      long long v192 = v323[6];
      long long v186 = v323[1];
      long long v189 = v323[7];
      char v217 = BYTE8(v323[8]);
      int v210 = DWORD1(v323[8]);
      char v223 = v323[9];
      int v214 = HIDWORD(v323[8]);
      char v227 = BYTE12(v323[9]);
      uint64_t v220 = *(void *)((char *)&v323[9] + 4);
      char v177 = BYTE8(v323[10]);
      double v19 = *(double *)&v323[10];
      char v174 = v323[11];
      int v230 = HIDWORD(v323[10]);
      char v74 = BYTE8(v323[11]);
      LODWORD(v15) = DWORD1(v323[11]);
      char v75 = v323[12];
      int v76 = HIDWORD(v323[11]);
      char v77 = BYTE1(v323[12]);
      char v78 = v323[14];
      char v9 = BYTE8(v323[14]);
      int v79 = DWORD1(v323[14]);
      long long v244 = v323[17];
      long long v247 = v323[18];
      long long v240 = v323[16];
      long long v234 = v323[13];
      long long v237 = v323[15];
      sub_1000DBFA4((uint64_t)v323);
      sub_100073C44(0, 1);
      long long v35 = v179;
      long long v32 = v183;
      long long v34 = v186;
      long long v30 = v189;
      long long v31 = v192;
      char v33 = v196;
      long long v28 = v199;
      long long v29 = v203;
      char v27 = v207;
      int v25 = v210;
      int v23 = v214;
      char v26 = v217;
      uint64_t v21 = v220;
      char v24 = v223;
      char v22 = v227;
      int v17 = v230;
      int v13 = v76;
      char v18 = v174;
      long long v10 = v234;
      long long v4 = v237;
      char v11 = v78;
      char v12 = v77;
      char v14 = v75;
      char v16 = v74;
      int v8 = v79;
      long long v5 = v240;
      long long v6 = v244;
      long long v7 = v247;
      if (v177) {
        goto LABEL_43;
      }
    }
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  uint64_t v80 = swift_bridgeObjectRetain();
  id v81 = sub_10016AB84(v80);
  swift_bridgeObjectRelease();
  Swift::String v320 = v81;
  swift_bridgeObjectRelease();
  uint64_t v145 = v81 + 8;
  uint64_t v82 = 1 << *((unsigned char *)v81 + 32);
  uint64_t v83 = -1;
  if (v82 < 64) {
    uint64_t v83 = ~(-1 << v82);
  }
  unint64_t v149 = v83 & v81[8];
  int64_t v146 = (unint64_t)(v82 + 63) >> 6;
  uint64_t v147 = v81;
  swift_bridgeObjectRetain();
  int64_t v84 = 0;
  uint64_t v151 = (char *)_swiftEmptyArrayStorage;
  unint64_t v85 = v149;
  if (v149)
  {
LABEL_47:
    unint64_t v86 = __clz(__rbit64(v85));
    uint64_t v87 = (v85 - 1) & v85;
    unint64_t v88 = v86 | (v84 << 6);
    goto LABEL_62;
  }
LABEL_48:
  int64_t v89 = v84 + 1;
  if (__OFADD__(v84, 1))
  {
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  if (v89 >= v146) {
    goto LABEL_78;
  }
  unint64_t v90 = v145[v89];
  ++v84;
  if (!v90)
  {
    int64_t v84 = v89 + 1;
    if (v89 + 1 >= v146) {
      goto LABEL_78;
    }
    unint64_t v90 = v145[v84];
    if (!v90)
    {
      int64_t v84 = v89 + 2;
      if (v89 + 2 >= v146) {
        goto LABEL_78;
      }
      unint64_t v90 = v145[v84];
      if (!v90)
      {
        int64_t v91 = v89 + 3;
        if (v91 < v146)
        {
          unint64_t v90 = v145[v91];
          if (!v90)
          {
            while (1)
            {
              int64_t v84 = v91 + 1;
              if (__OFADD__(v91, 1)) {
                break;
              }
              if (v84 >= v146) {
                goto LABEL_78;
              }
              unint64_t v90 = v145[v84];
              ++v91;
              if (v90) {
                goto LABEL_61;
              }
            }
LABEL_91:
            __break(1u);
            goto LABEL_92;
          }
          int64_t v84 = v91;
          goto LABEL_61;
        }
LABEL_78:
        swift_release();
        sub_10016B21C((uint64_t)v319);
        uint64_t v143 = *((void *)v151 + 2);
        if (v143)
        {
          id v144 = v151 + 32;
          do
          {
            memcpy(v323, v144, sizeof(v323));
            sub_1000DBFA4((uint64_t)v323);
            sub_100166158((uint64_t)v323);
            sub_10016B21C((uint64_t)v323);
            v144 += 304;
            --v143;
          }
          while (v143);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
LABEL_61:
  uint64_t v87 = (v90 - 1) & v90;
  unint64_t v88 = __clz(__rbit64(v90)) + (v84 << 6);
LABEL_62:
  uint64_t v92 = *(void *)(v147[7] + 8 * v88);
  if (!*(void *)(v92 + 16))
  {
    __break(1u);
    goto LABEL_85;
  }
  uint64_t v249 = *(void *)(v92 + 16);
  int64_t v148 = v84;
  unint64_t v150 = v87;
  memcpy(v323, (const void *)(v92 + 32), sizeof(v323));
  uint64_t v245 = *((void *)&v323[18] + 1);
  uint64_t v93 = *(void *)&v323[18];
  uint64_t v94 = *((void *)&v323[17] + 1);
  uint64_t v95 = *(void *)&v323[17];
  uint64_t v96 = *((void *)&v323[16] + 1);
  uint64_t v97 = *(void *)&v323[16];
  uint64_t v98 = *((void *)&v323[15] + 1);
  uint64_t v248 = *(void *)&v323[15];
  char v221 = BYTE8(v323[14]);
  int v99 = DWORD1(v323[14]);
  char v218 = v323[14];
  uint64_t v100 = *((void *)&v323[13] + 1);
  uint64_t v101 = *(void *)&v323[13];
  char v102 = BYTE1(v323[12]);
  char v208 = v323[12];
  int v103 = HIDWORD(v323[11]);
  char v204 = BYTE8(v323[11]);
  int v104 = DWORD1(v323[11]);
  char v200 = v323[11];
  int v105 = HIDWORD(v323[10]);
  char v193 = BYTE8(v323[10]);
  uint64_t v241 = *(void *)&v323[10];
  char v180 = BYTE12(v323[9]);
  uint64_t v231 = *(void *)((char *)&v323[9] + 4);
  int v224 = HIDWORD(v323[8]);
  char v106 = BYTE8(v323[8]);
  float v107 = *((float *)&v323[8] + 1);
  char v170 = v323[8];
  char v172 = v323[9];
  uint64_t v215 = *((void *)&v323[7] + 1);
  uint64_t v211 = *(void *)&v323[7];
  long long v235 = v323[5];
  long long v238 = v323[6];
  long long v228 = v323[4];
  char v168 = v323[3];
  uint64_t v197 = *((void *)&v323[2] + 1);
  uint64_t v190 = *(void *)&v323[2];
  uint64_t v187 = *((void *)&v323[1] + 1);
  uint64_t v184 = *(void *)&v323[1];
  long long v175 = v323[0];
  uint64_t v166 = v92;
  swift_bridgeObjectRetain();
  sub_1000DBFA4((uint64_t)v323);
  memcpy(v318, (const void *)(v92 + 32), sizeof(v318));
  if ((BYTE8(v318[8]) & 1) == 0)
  {
    float v108 = *((float *)&v318[8] + 1);
    uint64_t v109 = 336;
    while ((v106 & 1) == 0)
    {
      float v110 = v107;
      if (v107 < v108)
      {
        uint64_t v111 = v98;
        uint64_t v112 = *(void *)&v318[15];
        uint64_t v113 = v97;
        uint64_t v114 = *((void *)&v318[15] + 1);
        uint64_t v115 = v96;
        uint64_t v116 = *(void *)&v318[16];
        uint64_t v117 = v95;
        uint64_t v118 = *((void *)&v318[16] + 1);
        uint64_t v119 = v94;
        uint64_t v120 = *(void *)&v318[17];
        uint64_t v121 = v93;
        uint64_t v122 = *((void *)&v318[17] + 1);
        long long v123 = v318[18];
        long long v250 = v175;
        char v162 = BYTE8(v318[14]);
        int v163 = DWORD1(v318[14]);
        uint64_t v251 = v184;
        uint64_t v252 = v187;
        long long v124 = v318[13];
        uint64_t v253 = v190;
        char v161 = v318[14];
        uint64_t v254 = v197;
        char v255 = v168 & 1;
        int v159 = HIDWORD(v318[11]);
        char v160 = BYTE1(v318[12]);
        uint64_t v259 = v211;
        uint64_t v260 = v215;
        int v157 = DWORD1(v318[11]);
        char v158 = v318[12];
        char v261 = v170 & 1;
        int v264 = v224;
        int v155 = HIDWORD(v318[10]);
        char v156 = BYTE8(v318[11]);
        char v265 = v172 & 1;
        char v154 = v318[11];
        uint64_t v266 = v231;
        uint64_t v153 = *(void *)&v318[10];
        char v267 = v180 & 1;
        char v152 = BYTE8(v318[10]);
        uint64_t v268 = v241;
        uint64_t v242 = *(void *)((char *)&v318[9] + 4);
        char v269 = v193 & 1;
        char v194 = BYTE12(v318[9]);
        int v270 = v105;
        int v232 = HIDWORD(v318[8]);
        char v271 = v200 & 1;
        char v201 = v318[9];
        int v272 = v104;
        char v273 = v204 & 1;
        uint64_t v215 = *((void *)&v318[7] + 1);
        uint64_t v125 = *(void *)&v318[7];
        int v274 = v103;
        char v225 = v318[8];
        long long v181 = v318[4];
        long long v205 = v318[5];
        long long v212 = v318[6];
        char v275 = v208 & 1;
        char v276 = v102 & 1;
        uint64_t v126 = *((void *)&v318[2] + 1);
        uint64_t v127 = *(void *)&v318[2];
        uint64_t v277 = v101;
        char v128 = v318[3];
        uint64_t v278 = v100;
        char v279 = v218 & 1;
        uint64_t v129 = *((void *)&v318[1] + 1);
        uint64_t v130 = v36;
        uint64_t v131 = *(void *)&v318[1];
        int v280 = v99;
        char v281 = v221 & 1;
        uint64_t v132 = *((void *)&v318[0] + 1);
        uint64_t v133 = *(void *)&v318[0];
        long long v256 = v228;
        long long v257 = v235;
        long long v258 = v238;
        float v262 = v107;
        char v263 = 0;
        uint64_t v282 = v248;
        uint64_t v283 = v111;
        uint64_t v284 = v113;
        uint64_t v285 = v115;
        uint64_t v286 = v117;
        uint64_t v287 = v119;
        uint64_t v288 = v121;
        uint64_t v289 = v245;
        uint64_t v134 = v109;
        sub_1000DBFA4((uint64_t)v318);
        sub_10016B21C((uint64_t)&v250);
        uint64_t v109 = v134;
        *(void *)&long long v175 = v133;
        *((void *)&v175 + 1) = v132;
        uint64_t v184 = v131;
        uint64_t v36 = v130;
        uint64_t v187 = v129;
        uint64_t v190 = v127;
        uint64_t v197 = v126;
        long long v228 = v181;
        long long v235 = v205;
        long long v238 = v212;
        uint64_t v211 = v125;
        char v168 = v128;
        char v170 = v225;
        float v110 = v108;
        int v224 = v232;
        char v172 = v201;
        uint64_t v231 = v242;
        char v180 = v194;
        uint64_t v241 = v153;
        char v193 = v152;
        int v105 = v155;
        char v200 = v154;
        int v104 = v157;
        char v204 = v156;
        int v103 = v159;
        char v208 = v158;
        char v102 = v160;
        uint64_t v100 = *((void *)&v124 + 1);
        uint64_t v101 = v124;
        char v218 = v161;
        int v99 = v163;
        char v221 = v162;
        uint64_t v248 = v112;
        uint64_t v98 = v114;
        uint64_t v97 = v116;
        uint64_t v96 = v118;
        uint64_t v95 = v120;
        uint64_t v94 = v122;
        uint64_t v245 = *((void *)&v123 + 1);
        uint64_t v93 = v123;
      }
      float v107 = v110;
      if (v249 == 1)
      {
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v151 = sub_10006F3E4(0, *((void *)v151 + 2) + 1, 1, v151);
        }
        unint64_t v137 = *((void *)v151 + 2);
        unint64_t v136 = *((void *)v151 + 3);
        if (v137 >= v136 >> 1)
        {
          id v142 = sub_10006F3E4((char *)(v136 > 1), v137 + 1, 1, v151);
          float v138 = v107;
          uint64_t v151 = v142;
        }
        else
        {
          float v138 = v107;
        }
        char v317 = v168 & 1;
        char v316 = v170 & 1;
        char v310 = v172 & 1;
        char v307 = v180 & 1;
        char v304 = v193 & 1;
        char v301 = v200 & 1;
        char v298 = v204 & 1;
        char v295 = v208 & 1;
        char v294 = v218 & 1;
        char v291 = v221 & 1;
        *((void *)v151 + 2) = v137 + 1;
        char v313 = 0;
        uint64_t v139 = &v151[304 * v137];
        *((_OWORD *)v139 + 2) = v175;
        v139 += 32;
        *((void *)v139 + 2) = v184;
        *((void *)v139 + 3) = v187;
        *((void *)v139 + 4) = v190;
        *((void *)v139 + 5) = v197;
        v139[48] = v317;
        uint64_t v140 = *(void *)&v318[0];
        *((void *)v139 + 7) = *(void *)((char *)v318 + 7);
        *(void *)(v139 + 49) = v140;
        *((_OWORD *)v139 + 4) = v228;
        *((_OWORD *)v139 + 5) = v235;
        *((_OWORD *)v139 + 6) = v238;
        *((void *)v139 + 14) = v211;
        *((void *)v139 + 15) = v215;
        v139[128] = v316;
        LOWORD(v140) = v314;
        v139[131] = v315;
        *(_WORD *)(v139 + 129) = v140;
        *((float *)v139 + 33) = v138;
        v139[136] = v313;
        LOWORD(v140) = v311;
        v139[139] = v312;
        *(_WORD *)(v139 + 137) = v140;
        *((_DWORD *)v139 + 35) = v224;
        v139[144] = v310;
        LOWORD(v140) = v308;
        v139[147] = v309;
        *(_WORD *)(v139 + 145) = v140;
        *(void *)(v139 + 148) = v231;
        v139[156] = v307;
        LOWORD(v140) = v305;
        v139[159] = v306;
        *(_WORD *)(v139 + 157) = v140;
        *((void *)v139 + 20) = v241;
        v139[168] = v304;
        LOWORD(v140) = v302;
        v139[171] = v303;
        *(_WORD *)(v139 + 169) = v140;
        *((_DWORD *)v139 + 43) = v105;
        v139[176] = v301;
        LOWORD(v140) = v299;
        v139[179] = v300;
        *(_WORD *)(v139 + 177) = v140;
        *((_DWORD *)v139 + 45) = v104;
        v139[184] = v298;
        LOWORD(v140) = v296;
        v139[187] = v297;
        *(_WORD *)(v139 + 185) = v140;
        *((_DWORD *)v139 + 47) = v103;
        v139[192] = v295;
        v139[193] = v102 & 1;
        uint64_t v141 = v250;
        *((void *)v139 + 25) = *(void *)((char *)&v250 + 6);
        *((void *)v139 + 26) = v101;
        *(void *)(v139 + 194) = v141;
        *((void *)v139 + 27) = v100;
        v139[224] = v294;
        LOWORD(v141) = v292;
        v139[227] = v293;
        *(_WORD *)(v139 + 225) = v141;
        *((_DWORD *)v139 + 57) = v99;
        v139[232] = v291;
        LODWORD(v141) = *(_DWORD *)v290;
        *((_DWORD *)v139 + 59) = *(_DWORD *)&v290[3];
        *(_DWORD *)(v139 + 233) = v141;
        *((void *)v139 + 30) = v248;
        *((void *)v139 + 31) = v98;
        *((void *)v139 + 32) = v97;
        *((void *)v139 + 33) = v96;
        *((void *)v139 + 34) = v95;
        *((void *)v139 + 35) = v94;
        *((void *)v139 + 36) = v93;
        *((void *)v139 + 37) = v245;
        int64_t v84 = v148;
        unint64_t v85 = v150;
        if (v150) {
          goto LABEL_47;
        }
        goto LABEL_48;
      }
      --v249;
      uint64_t v135 = v109 + 304;
      memcpy(v318, (const void *)(v166 + v109), sizeof(v318));
      char v106 = 0;
      float v108 = *((float *)&v318[8] + 1);
      uint64_t v109 = v135;
      if (BYTE8(v318[8])) {
        goto LABEL_92;
      }
    }
    goto LABEL_93;
  }
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_10016253C()
{
}

void sub_100162564()
{
  uint64_t v1 = v0;
  *(void *)(v0 + 64) = 0;
  *(unsigned char *)(v0 + 104) = 0;
  *(void *)(v0 + 80) = 0;
  *(void *)(v0 + 88) = 0;
  *(void *)(v0 + 112) = _swiftEmptyDictionarySingleton;
  *(void *)(v0 + 120) = 0;
  uint64_t v2 = sub_100012894(&qword_1004C7170);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1004F8630;
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 272);
  swift_retain();
  *(void *)(v1 + 128) = v5(KeyPath, v4);
  uint64_t v6 = sub_100012894(&qword_1004C54B8);
  uint64_t v7 = swift_getKeyPath();
  uint64_t v8 = qword_1004F8630;
  char v9 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 272);
  swift_retain();
  *(void *)(v1 + 136) = v9(v7, v8);
  uint64_t v10 = sub_100012894(&qword_1004CDF30);
  uint64_t v11 = swift_getKeyPath();
  uint64_t v12 = qword_1004F8630;
  int v13 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 272);
  swift_retain();
  *(void *)(v1 + 144) = v13(v11, v12);
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = sub_100012894((uint64_t *)&unk_1004C4710);
  uint64_t v16 = qword_1004F8630;
  int v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 272);
  swift_retain();
  *(void *)(v1 + 152) = v17(v14, v16);
  uint64_t v18 = swift_getKeyPath();
  uint64_t v19 = sub_100012894(&qword_1004C3EE0);
  uint64_t v20 = qword_1004F8630;
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 272);
  swift_retain();
  *(void *)(v1 + 160) = v21(v18, v20);
  sub_100012894(&qword_1004CDF38);
  swift_getKeyPath();
  *(void *)(v1 + 168) = MutableStateValue.__allocating_init(_:_:)();
  sub_100012894(&qword_1004CDF40);
  swift_getKeyPath();
  *(void *)(v1 + 176) = MutableStateValue.__allocating_init(_:_:)();
  sub_100012894(&qword_1004CDF48);
  swift_getKeyPath();
  *(void *)(v1 + 184) = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v22 = sub_100012894(&qword_1004C58E0);
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = qword_1004F8630;
  int v25 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 272);
  swift_retain();
  *(void *)(v1 + 192) = v25(v23, v24);
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = sub_100012894(&qword_1004CA010);
  uint64_t v28 = qword_1004F8630;
  long long v29 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 272);
  swift_retain();
  *(void *)(v1 + 200) = v29(v26, v28);
  type metadata accessor for WorldRectangle();
  *(void *)(v1 + 208) = OrderedDictionary.init()();
  *(void *)(v1 + 216) = v30;
  *(void *)(v1 + 224) = v31;
  *(_OWORD *)(v1 + 232) = 0u;
  *(_OWORD *)(v1 + 248) = 0u;
  *(void *)(v1 + 264) = _swiftEmptyArrayStorage;
  *(_WORD *)(v1 + 272) = 768;
  sub_100012894(&qword_1004C6920);
  swift_allocObject();
  *(void *)(v1 + 280) = PassthroughSubject.init()();
  swift_release();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100162950(void (*a1)(char *), uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 >= 2u)
  {
    if (a4 == 2)
    {
      swift_retain();
      sub_100160A2C();
      double v7 = 0.5;
    }
    else
    {
      swift_retain();
      sub_100160A2C();
      double v7 = 1.0;
    }
    sub_100180F0C(v7);
  }
  else
  {
    swift_retain();
    sub_100160A2C();
    sub_100181210();
  }
  swift_release();
  *(unsigned char *)(a3 + 273) = a4;
  char v9 = 0;
  a1(&v9);

  return swift_release();
}

uint64_t sub_100162A24()
{
  swift_retain();
  StateValue.ifUpdated(_:)();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + 152) + 200);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  (*(void (**)(unsigned __int8 *(*)(unsigned __int8 *), uint64_t))(*(void *)v3 + 296))(sub_10016B134, v0);
  swift_release();
  swift_retain();
  StateValue.ifUpdated(_:)();

  return swift_release();
}

unsigned __int8 *sub_100162B50(unsigned __int8 *result, uint64_t a2)
{
  int v2 = result[3];
  if (v2 != *(unsigned __int8 *)(a2 + 272))
  {
    uint64_t v4 = *(void *)(a2 + 72);
    long long v5 = self;
    [v5 begin];
    double v6 = 1.0;
    if (v2) {
      double v6 = 0.0;
    }
    [*(id *)(v4 + 72) setOpacity:v6];
    uint64_t result = (unsigned __int8 *)[v5 commit];
    *(unsigned char *)(a2 + 272) = v2;
  }
  return result;
}

id sub_100162BDC(uint64_t a1)
{
  void (*v10)(uint64_t *__return_ptr, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ARCamera.TrackingState();
  __chkstk_darwin(v4 - 8);
  double v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SessionState();
  sub_1000491B8(a1 + *(int *)(v7 + 20), (uint64_t)v6);
  uint64_t v8 = type metadata accessor for ARCamera.TrackingState.Reason();
  id result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 2, v8);
  if (result)
  {
    if (result != 1)
    {
      uint64_t v10 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(v2 + 152) + 144);
      uint64_t v11 = swift_retain();
      v10(&v17, v11);
      id result = (id)swift_release();
      if ((v17 & 0x1000000) == 0 && *(unsigned char *)(v2 + 272) == 1)
      {
        uint64_t v12 = *(void *)(v2 + 72);
        int v13 = self;
        [v13 begin];
        [*(id *)(v12 + 72) setOpacity:1.0];
        id result = [v13 commit];
        *(unsigned char *)(v2 + 272) = 0;
      }
      return result;
    }
  }
  else
  {
    id result = (id)sub_100049284((uint64_t)v6);
  }
  if ((*(unsigned char *)(v2 + 272) & 1) == 0)
  {
    uint64_t v14 = *(void *)(v2 + 72);
    uint64_t v15 = self;
    [v15 begin];
    [*(id *)(v14 + 72) setOpacity:0.0];
    id result = [v15 commit];
    *(unsigned char *)(v2 + 272) = 1;
  }
  return result;
}

uint64_t sub_100162DAC()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  type metadata accessor for WorldRectangle();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v2 = OrderedDictionary.values.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2 >> 62) {
    goto LABEL_66;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v3) {
    goto LABEL_3;
  }
  while (1)
  {
LABEL_15:
    swift_bridgeObjectRelease_n();
LABEL_16:
    unint64_t v2 = v1 + 112;
    swift_beginAccess();
    uint64_t v10 = *(void *)(v1 + 112);
    uint64_t v11 = *(void *)(v10 + 64);
    uint64_t v40 = v10 + 64;
    uint64_t v12 = 1 << *(unsigned char *)(v10 + 32);
    uint64_t v13 = -1;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    unint64_t v14 = v13 & v11;
    int64_t v41 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v42 = *(void *)(v1 + 112);
    swift_bridgeObjectRetain();
    int64_t v15 = 0;
    if (v14)
    {
LABEL_22:
      while (1)
      {
        unint64_t v16 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v17 = v16 | (v15 << 6);
LABEL_39:
        uint64_t result = (uint64_t)memcpy(__dst, (const void *)(*(void *)(v42 + 56) + 304 * v17), 0x130uLL);
        if (!__dst[0]) {
          break;
        }
        uint64_t v22 = *(void *)(__dst[0] + 16);
        if (v22)
        {
          int64_t v43 = v15;
          type metadata accessor for MeasureCamera();
          sub_1000DBFA4((uint64_t)__dst);
          swift_bridgeObjectRetain();
          uint64_t v23 = 0;
          uint64_t v24 = 0;
          unint64_t v2 = v22 - 1;
          while (1)
          {
            swift_retain();
            StateValue.wrappedValue.getter();
            swift_release();
            memcpy(v47, __src, sizeof(v47));
            sub_100016F7C((uint64_t)v47);
            swift_retain();
            StateValue.wrappedValue.getter();
            swift_release();
            memcpy(v48, __src, sizeof(v48));
            sub_100016F7C((uint64_t)v48);
            static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
            if (qword_1004C3238 != -1)
            {
              float v44 = v25;
              swift_once();
              float v25 = v44;
            }
            uint64_t v26 = (double *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits);
            if (*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80)) {
              goto LABEL_65;
            }
            if (v25 > 0.0)
            {
              CGFloat v28 = v26[8];
              CGFloat v27 = v26[9];
              CGFloat v30 = v26[6];
              CGFloat v29 = v26[7];
              CGPoint.init(_:)();
              v50.x = v31;
              v50.y = v32;
              v51.origin.x = v30;
              v51.origin.y = v29;
              v51.size.width = v28;
              v51.size.height = v27;
              if (CGRectContainsPoint(v51, v50) && __OFADD__(v24++, 1))
              {
                __break(1u);
                goto LABEL_62;
              }
            }
            if (v2 == v23)
            {
              uint64_t result = swift_bridgeObjectRelease();
              if (v24 <= 1)
              {
                unint64_t v2 = v1 + 112;
                int64_t v15 = v43;
                goto LABEL_53;
              }
              sub_10016B21C((uint64_t)__dst);
              unint64_t v2 = v1 + 112;
              int64_t v15 = v43;
              if (v14) {
                goto LABEL_22;
              }
              goto LABEL_23;
            }
            ++v23;
          }
        }
        uint64_t result = sub_1000DBFA4((uint64_t)__dst);
LABEL_53:
        if (__dst[21]) {
          goto LABEL_70;
        }
        double v34 = *(double *)&__dst[20];
        swift_beginAccess();
        unint64_t v35 = sub_1000E237C(v34);
        if (v36)
        {
          unint64_t v37 = v35;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v39 = *(void *)v2;
          uint64_t v45 = *(void *)v2;
          *(void *)unint64_t v2 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1000D8D58();
            uint64_t v39 = v45;
          }
          memcpy(__src, (const void *)(*(void *)(v39 + 56) + 304 * v37), 0x130uLL);
          sub_1000A9940(v37, v39);
          *(void *)unint64_t v2 = v39;
          swift_bridgeObjectRelease();
          memcpy(v47, __src, 0x130uLL);
          nullsub_1(v47);
        }
        else
        {
          sub_10016B270((uint64_t)v47);
        }
        sub_100016FEC((uint64_t)v47, (uint64_t)v48, &qword_1004CCE98);
        swift_endAccess();
        sub_10016B21C((uint64_t)__dst);
        sub_10014CDA4(v48);
        if (!v14) {
          goto LABEL_23;
        }
      }
      __break(1u);
LABEL_70:
      __break(1u);
      return result;
    }
LABEL_23:
    int64_t v18 = v15 + 1;
    if (!__OFADD__(v15, 1)) {
      break;
    }
LABEL_62:
    __break(1u);
    while (1)
    {
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      if (!v3) {
        break;
      }
LABEL_3:
      if ((v2 & 0xC000000000000001) != 0) {
        uint64_t v4 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v4 = *(id *)(v2 + 32);
      }
      uint64_t v5 = v4;
      if ((*(uint64_t (**)(void))((swift_isaMask & *v4) + 0xD0))() == 6)
      {
LABEL_6:
        uint64_t v6 = swift_bridgeObjectRelease_n();
        (*(void (**)(uint64_t))((swift_isaMask & *v5) + 0x2E0))(v6);

        goto LABEL_16;
      }

      if (v3 == 1) {
        goto LABEL_15;
      }
      uint64_t v7 = 5;
      while (1)
      {
        uint64_t v8 = (v2 & 0xC000000000000001) != 0
           ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v2 + 8 * v7);
        uint64_t v5 = v8;
        uint64_t v9 = v7 - 3;
        if (__OFADD__(v7 - 4, 1)) {
          break;
        }
        if ((*(uint64_t (**)(void))((swift_isaMask & *v8) + 0xD0))() == 6) {
          goto LABEL_6;
        }

        ++v7;
        if (v9 == v3) {
          goto LABEL_15;
        }
      }
    }
  }
  if (v18 >= v41) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v40 + 8 * v18);
  ++v15;
  if (v19) {
    goto LABEL_38;
  }
  int64_t v15 = v18 + 1;
  if (v18 + 1 >= v41) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v40 + 8 * v15);
  if (v19) {
    goto LABEL_38;
  }
  int64_t v15 = v18 + 2;
  if (v18 + 2 >= v41) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v40 + 8 * v15);
  if (v19) {
    goto LABEL_38;
  }
  int64_t v15 = v18 + 3;
  if (v18 + 3 >= v41) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v40 + 8 * v15);
  if (v19)
  {
LABEL_38:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v15 << 6);
    goto LABEL_39;
  }
  int64_t v20 = v18 + 4;
  if (v20 < v41)
  {
    unint64_t v19 = *(void *)(v40 + 8 * v20);
    if (v19)
    {
      int64_t v15 = v20;
      goto LABEL_38;
    }
    while (1)
    {
      int64_t v15 = v20 + 1;
      if (__OFADD__(v20, 1)) {
        goto LABEL_64;
      }
      if (v15 >= v41) {
        break;
      }
      unint64_t v19 = *(void *)(v40 + 8 * v15);
      ++v20;
      if (v19) {
        goto LABEL_38;
      }
    }
  }
  return swift_release();
}

uint64_t *sub_10016343C(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = (uint64_t *)__chkstk_darwin(v4);
  uint64_t v8 = (uint64_t *)&v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1004C29D8 != -1) {
    uint64_t result = (uint64_t *)swift_once();
  }
  uint64_t v9 = (void *)*((void *)&xmmword_1004F8000 + 1);
  if (*((void *)&xmmword_1004F8000 + 1))
  {
    *uint64_t v8 = Contexts.PrivateQueue.init(_:)();
    (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4);
    id v10 = v9;
    char v11 = _dispatchPreconditionTest(_:)();
    uint64_t v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v8, v4);
    if (v11)
    {
      (*(void (**)(uint64_t))((swift_isaMask & *a1) + 0x278))(v12);
      if (*(void *)(v13 + 16))
      {
        RingBuffer.subscript.getter();
        swift_bridgeObjectRelease();
        unint64_t v14 = memcpy(v26, v25, sizeof(v26));
        uint64_t v15 = (*(uint64_t (**)(void *))((swift_isaMask & *a1) + 0xB8))(v14);
        sub_1001637C0(v15, v16, (uint64_t)v26);
        swift_bridgeObjectRelease();
        uint64_t v17 = sub_10016B21C((uint64_t)v26);
      }
      else
      {
        uint64_t v17 = swift_bridgeObjectRelease();
      }
      int64_t v18 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xB8);
      v2[31] = v18(v17);
      v2[32] = v19;
      uint64_t v20 = swift_bridgeObjectRelease();
      uint64_t v21 = v18(v20);
      sub_100163A2C(v21, v22, (void *)5);
      swift_bridgeObjectRelease();
      swift_retain();
      sub_10016561C(a1, (uint64_t)sub_10016B214, (uint64_t)v2);
      swift_release();
      uint64_t v23 = v2[23];
      v25[0] = 2;
      uint64_t v24 = *(void (**)(unsigned char *))(*(void *)v23 + 392);
      swift_retain();
      v24(v25);
      swift_release();
      sub_1001648A8(5);
      if (qword_1004C2C10 == -1) {
        return sub_1001467F0(a1);
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
    return sub_1001467F0(a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001637C0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t)v3;
  uint64_t v8 = *v3;
  swift_beginAccess();
  uint64_t v9 = v3[27];
  if (!*(void *)(v9 + 16)) {
    return swift_endAccess();
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1000E20D4(a1, (uint64_t)a2);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  uint64_t v12 = *(void **)(*(void *)(v9 + 56) + 8 * v10);
  swift_endAccess();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if (qword_1004C2AD0 != -1) {
    swift_once();
  }
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = a1;
  v14._object = a2;
  String.append(_:)(v14);
  v15._uint64_t countAndFlagsBits = 0xD000000000000014;
  v15._object = (void *)0x8000000100428E30;
  Log.default(_:isPrivate:)(v15, 0);
  swift_bridgeObjectRelease();
  unint64_t v16 = (void *)swift_allocObject();
  v16[2] = v4;
  v16[3] = v13;
  v16[4] = v8;
  uint64_t v17 = *(void (**)(uint64_t, uint64_t (*)(uint64_t), void *))((swift_isaMask & *v13) + 0x2C8);
  int64_t v18 = v13;
  swift_retain();
  v17(a3, sub_10016D8C4, v16);
  swift_release();
  swift_retain();
  sub_10016561C(v18, (uint64_t)sub_10016B214, v4);

  return swift_release();
}

void sub_100163A2C(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v22)(unint64_t *__return_ptr, uint64_t);
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t (*v29)(void);
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t (*v51)(void);
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  void *v65;
  void *v66;
  void *v67;
  uint64_t v68;
  BOOL v69;
  char v70;
  uint64_t v71;
  void (*v72)(unint64_t *);
  void *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t (*v78)(void);
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  void *v99;
  void *v100;
  uint64_t v101;
  BOOL v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(unint64_t *);
  void *v108;
  void *v109;
  void *v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;

  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v3 + 216);
  if (!*(void *)(v8 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_1000E20D4(a1, a2);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_endAccess();
    return;
  }
  char v11 = *(void **)(*(void *)(v8 + 56) + 8 * v9);
  swift_endAccess();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v13 = *(void *)(v4 + 216);
  if (!*(void *)(v13 + 16))
  {
LABEL_10:
    swift_endAccess();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_1000E20D4(a1, a2);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  unint64_t v16 = *(void **)(*(void *)(v13 + 56) + 8 * v14);
  swift_endAccess();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  (*(void (**)(void *))((swift_isaMask & *v17) + 0xD8))(a3);
  swift_retain();
  sub_10016561C(v17, (uint64_t)sub_10016B214, v4);

  swift_release();
LABEL_11:
  switch((unint64_t)a3)
  {
    case 1uLL:
      int64_t v18 = *(uint64_t (**)(unint64_t *))(**(void **)(v4 + 176) + 400);
      swift_retain();
      uint64_t v19 = (void (*)(unint64_t *, void))v18(&v117);
      uint64_t v20 = (*(uint64_t (**)(void))((swift_isaMask & *v12) + 0xB8))();
      sub_100030354(v20, v21);
      swift_bridgeObjectRelease();
      v19(&v117, 0);
      swift_release();
      uint64_t v22 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v4 + 200) + 144);
      uint64_t v23 = swift_retain();
      v22(&v117, v23);
      swift_release();
      uint64_t v24 = sub_100200CD0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v24) {
        goto LABEL_109;
      }
      if (qword_1004C29D8 == -1) {
        goto LABEL_15;
      }
LABEL_111:
      swift_once();
LABEL_15:
      if (!qword_1004F7FF0) {
        goto LABEL_127;
      }
      swift_retain();
      sub_100124874();
      swift_release();
      type metadata accessor for WorldRectangle();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      float v25 = OrderedDictionary.values.getter();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v25 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
        if (!v26) {
          goto LABEL_107;
        }
      }
      else
      {
        uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v26) {
          goto LABEL_107;
        }
      }
      if ((v25 & 0xC000000000000001) != 0) {
        CGFloat v27 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        CGFloat v27 = *(id *)(v25 + 32);
      }
      CGFloat v28 = v27;
      if ((*(uint64_t (**)(void))((swift_isaMask & *v27) + 0xD0))() == 9) {
        goto LABEL_21;
      }

      if (v26 != 1)
      {
        int v103 = 5;
        while (1)
        {
          if ((v25 & 0xC000000000000001) != 0) {
            int v104 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            int v104 = *(id *)(v25 + 8 * v103);
          }
          CGFloat v28 = v104;
          int v105 = v103 - 3;
          if (__OFADD__(v103 - 4, 1))
          {
            __break(1u);
            goto LABEL_111;
          }
          if ((*(uint64_t (**)(void))((swift_isaMask & *v104) + 0xD0))() == 9) {
            break;
          }

          ++v103;
          if (v105 == v26) {
            goto LABEL_107;
          }
        }
LABEL_21:
        swift_bridgeObjectRelease_n();
        CGFloat v29 = *(uint64_t (**)(void))((swift_isaMask & *v28) + 0xB8);
        CGFloat v30 = v28;
        CGFloat v31 = v29();
        char v33 = v32;

        sub_100163A2C(v31, v33, 5);
        goto LABEL_108;
      }
LABEL_107:
      swift_bridgeObjectRelease();
LABEL_108:
      swift_bridgeObjectRelease();
LABEL_109:
      char v106 = *(void *)(v4 + 168);
      uint64_t v117 = 0xC000000000000008;
      float v107 = *(void (**)(unint64_t *))(*(void *)v106 + 392);
      swift_retain();
      v107(&v117);

      swift_release();
      return;
    case 5uLL:
      swift_beginAccess();
      double v34 = *(void *)(v4 + 216);
      if (!*(void *)(v34 + 16)) {
        goto LABEL_98;
      }
      swift_bridgeObjectRetain();
      unint64_t v35 = sub_1000E20D4(a1, a2);
      if ((v36 & 1) == 0) {
        goto LABEL_97;
      }
      unint64_t v37 = *(void **)(*(void *)(v34 + 56) + 8 * v35);
      swift_endAccess();
      uint64_t v38 = v37;
      uint64_t v39 = swift_bridgeObjectRelease();
      uint64_t v40 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v38) + 0x230))(v39);
      if ((v40 & 0xC000000000000001) != 0)
      {
        int64_t v41 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_120;
        }
        int64_t v41 = *(id *)(v40 + 32);
      }
      uint64_t v42 = v41;
      int64_t v43 = swift_bridgeObjectRelease();
      float v44 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v42) + 0x250))(v43);

      if ((v44 & 0xC000000000000001) != 0)
      {
LABEL_120:
        uint64_t v45 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_30;
      }
      if (!*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_122;
      }
      uint64_t v45 = *(id *)(v44 + 32);
LABEL_30:
      a3 = v45;
      swift_bridgeObjectRelease();
      if (qword_1004C29D8 == -1) {
        goto LABEL_31;
      }
LABEL_122:
      swift_once();
LABEL_31:
      uint64_t v109 = v38;
      if (!qword_1004F7FF0)
      {
LABEL_128:
        __break(1u);
        JUMPOUT(0x100164884);
      }
      swift_retain();
      float v108 = a3;
      sub_100124540(a3);
      swift_release();
      type metadata accessor for WorldRectangle();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v46 = OrderedDictionary.values.getter();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v46 >> 62)
      {
        swift_bridgeObjectRetain();
        char v47 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v47)
        {
LABEL_34:
          if (v47 >= 1)
          {
            unint64_t v48 = 0;
            uint64_t v111 = v46 & 0xC000000000000001;
            uint64_t v113 = v47;
            uint64_t v115 = v46;
            while (1)
            {
              CGPoint v50 = v111
                  ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
                  : *(id *)(v46 + 8 * v48 + 32);
              CGRect v51 = *(uint64_t (**)(void))((swift_isaMask & *v50) + 0xB8);
              uint64_t v52 = v50;
              BOOL v53 = v51();
              uint64_t v55 = v54;

              if (v53 == a1 && v55 == a2) {
                break;
              }
              char v57 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if ((v57 & 1) == 0)
              {
                id v58 = v52;
                NSString v59 = v51();
                id v61 = v60;

                swift_beginAccess();
                id v62 = *(void *)(v4 + 216);
                if (*(void *)(v62 + 16))
                {
                  swift_bridgeObjectRetain();
                  unint64_t v63 = sub_1000E20D4(v59, v61);
                  if (v64)
                  {
                    uint64_t v65 = *(void **)(*(void *)(v62 + 56) + 8 * v63);
                    swift_endAccess();
                    uint64_t v66 = v12;
                    double v67 = v65;
                    swift_bridgeObjectRelease();
                    sub_100169A78(v67);

                    uint64_t v12 = v66;
                    uint64_t v68 = *(void *)(v4 + 256);
                    if (!v68) {
                      goto LABEL_60;
                    }
                    goto LABEL_54;
                  }
                  swift_bridgeObjectRelease();
                }
                swift_endAccess();
                uint64_t v68 = *(void *)(v4 + 256);
                if (!v68) {
                  goto LABEL_60;
                }
LABEL_54:
                unint64_t v69 = *(void *)(v4 + 248) == v59 && v68 == v61;
                if (v69 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  char v49 = v113;
                  uint64_t v46 = v115;
                  *(void *)(v4 + 248) = 0;
                  *(void *)(v4 + 256) = 0;

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_38;
                }
LABEL_60:

LABEL_61:
                swift_bridgeObjectRelease();
                goto LABEL_37;
              }

LABEL_37:
              char v49 = v113;
              uint64_t v46 = v115;
LABEL_38:
              if (v49 == ++v48) {
                goto LABEL_124;
              }
            }

            goto LABEL_61;
          }
          goto LABEL_126;
        }
      }
      else
      {
        char v47 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v47) {
          goto LABEL_34;
        }
      }
LABEL_124:

      swift_bridgeObjectRelease();
      return;
    case 6uLL:
      swift_beginAccess();
      if (!*(void *)(*(void *)(v4 + 216) + 16)) {
        goto LABEL_98;
      }
      swift_bridgeObjectRetain();
      sub_1000E20D4(a1, a2);
      if ((v70 & 1) == 0)
      {
LABEL_97:
        swift_bridgeObjectRelease();
LABEL_98:
        swift_endAccess();

        return;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      unint64_t v71 = *(void *)(v4 + 168);
      uint64_t v117 = (unint64_t)v12;
      uint64_t v72 = *(void (**)(unint64_t *))(*(void *)v71 + 392);
      id v73 = v12;
      swift_retain();
      v72(&v117);
      swift_release();
      type metadata accessor for WorldRectangle();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v74 = OrderedDictionary.values.getter();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v74 >> 62)
      {
        swift_bridgeObjectRetain();
        char v75 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v75) {
          goto LABEL_66;
        }
      }
      else
      {
        char v75 = *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v75)
        {
LABEL_66:
          float v110 = v73;
          if (v75 < 1)
          {
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
            goto LABEL_128;
          }
          int v76 = 0;
          uint64_t v112 = v74 & 0xC000000000000001;
          uint64_t v114 = v75;
          uint64_t v116 = v74;
          while (1)
          {
            if (v112) {
              char v77 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              char v77 = *(id *)(v74 + 8 * v76 + 32);
            }
            char v78 = *(uint64_t (**)(void))((swift_isaMask & *v77) + 0xB8);
            int v79 = v77;
            uint64_t v80 = v78();
            uint64_t v82 = v81;

            if (v80 == a1 && v82 == a2)
            {

              swift_bridgeObjectRelease();
            }
            else
            {
              int64_t v84 = _stringCompareWithSmolCheck(_:_:expecting:)();
              unint64_t v85 = swift_bridgeObjectRelease();
              if ((v84 & 1) != 0
                || (unint64_t v86 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v79) + 0xD0))(v85), v86 == 9))
              {
              }
              else
              {
                if (v86 != 5)
                {
                  uint64_t v92 = v79;
                  uint64_t v93 = v78();
                  uint64_t v95 = v94;

                  swift_beginAccess();
                  uint64_t v96 = *(void *)(v4 + 216);
                  char v74 = v116;
                  if (*(void *)(v96 + 16))
                  {
                    swift_bridgeObjectRetain();
                    uint64_t v97 = sub_1000E20D4(v93, v95);
                    if (v98)
                    {
                      int v99 = *(void **)(*(void *)(v96 + 56) + 8 * v97);
                      swift_endAccess();
                      uint64_t v100 = v99;
                      swift_bridgeObjectRelease();
                      sub_100169A78(v100);

LABEL_89:
                      uint64_t v101 = *(void *)(v4 + 256);
                      int64_t v91 = v114;
                      if (v101
                        && (*(void *)(v4 + 248) == v93 ? (char v102 = v101 == v95) : (char v102 = 0),
                            v102 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
                      {
                        *(void *)(v4 + 248) = 0;
                        *(void *)(v4 + 256) = 0;
                        swift_bridgeObjectRelease();

                        swift_bridgeObjectRelease();
                      }
                      else
                      {
                        swift_bridgeObjectRelease();
                      }
                      goto LABEL_82;
                    }
                    swift_bridgeObjectRelease();
                  }
                  swift_endAccess();
                  goto LABEL_89;
                }
                uint64_t v87 = v79;
                unint64_t v88 = v78();
                unint64_t v90 = v89;

                sub_100163A2C(v88, v90, 9);
                swift_bridgeObjectRelease();
              }
            }
            int64_t v91 = v114;
            char v74 = v116;
LABEL_82:
            if (v91 == ++v76)
            {

              goto LABEL_118;
            }
          }
        }
      }

LABEL_118:
      swift_bridgeObjectRelease();
      return;
    default:

      return;
  }
}

uint64_t sub_1001648A8(char a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  char v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(unsigned char *)(v11 + 24) = a1;
  aBlock[4] = sub_10016B1F0;
  void aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_10048FB48;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10016DC20((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v15);
}

uint64_t sub_100164B94()
{
  void (*v1)(void *__return_ptr, uint64_t);
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void v13[4];

  uint64_t v1 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v0 + 160) + 144);
  unint64_t v2 = swift_retain();
  v1(v13, v2);
  swift_release();
  uint64_t v3 = (void *)v13[0];
  uint64_t v4 = (void *)v13[1];
  uint64_t v5 = (void *)v13[3];
  uint64_t v6 = (id)v13[2];

  uint64_t v7 = sub_100164CCC(v5);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = *(void (**)(void))((swift_isaMask & *v7) + 0x2B0);
  v8();
  unint64_t v9 = simd_float4x4.position.getter();
  ((void (*)(uint64_t))v8)(v9);
  simd_float4x4.up.getter();
  sub_10018E940();
  uint64_t v11 = v10;

  return v11;
}

void *sub_100164CCC(void *a1)
{
  if (!a1)
  {
    if (qword_1004C2AD0 != -1) {
      swift_once();
    }
    *(void *)&__dst[0] = 0;
    *((void *)&__dst[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(42);
    swift_bridgeObjectRelease();
    unint64_t v4 = 0xD00000000000003CLL;
    unint64_t v5 = 0x8000000100428D20;
    goto LABEL_14;
  }
  uint64_t v1 = a1;
  type metadata accessor for MeasureCamera();
  id v2 = v1;
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  sub_100016F7C((uint64_t)__dst);
  if (static MeasureCamera.planeTooFar(for:transform:)())
  {

    if (qword_1004C2AD0 != -1) {
      swift_once();
    }
    *(void *)&__src[0] = 0;
    *((void *)&__src[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(42);
    swift_bridgeObjectRelease();
    uint64_t v3 = "Not suggesting rectangle due to reason: Reticle too far from plane.";
LABEL_13:
    unint64_t v5 = (unint64_t)(v3 - 32) | 0x8000000000000000;
    unint64_t v4 = 0xD000000000000043;
LABEL_14:
    Log.debug(_:isPrivate:)(*(Swift::String *)&v4, 0);
    return 0;
  }
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(__src, v7, sizeof(__src));
  sub_100016F7C((uint64_t)__src);
  if (static MeasureCamera.planeTooClose(for:transform:)())
  {

    if (qword_1004C2AD0 != -1) {
      swift_once();
    }
    v7[0] = 0;
    v7[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(42);
    swift_bridgeObjectRelease();
    uint64_t v3 = "Not suggesting rectangle due to reason: Reticle too close to plane.";
    goto LABEL_13;
  }
  return v1;
}

void sub_100164F44()
{
  void (*v2)(void **__return_ptr, uint64_t);
  uint64_t v3;
  unint64_t v4;
  void (*v5)(void **__return_ptr, uint64_t);
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  void (*v13)(void);
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  uint64_t v30;
  void *v31;
  void (*v32)(unint64_t *__return_ptr, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t (*v45)(void);
  uint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  void v53[6];
  void v54[6];
  void v55[6];
  void v56[6];
  unint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  id v61;
  void *v62;

  uint64_t v1 = v0;
  id v2 = *(void (**)(void **__return_ptr, uint64_t))(**(void **)(v0 + 168) + 144);
  uint64_t v3 = swift_retain();
  v2(&v59, v3);
  swift_release();
  unint64_t v4 = (unint64_t)v59;
  unint64_t v5 = *(void (**)(void **__return_ptr, uint64_t))(**(void **)(v0 + 160) + 144);
  uint64_t v6 = swift_retain();
  v5(&v59, v6);
  swift_release();
  uint64_t v7 = v59;
  uint64_t v8 = v60;
  unint64_t v9 = v62;
  char v10 = v61;

  uint64_t v11 = sub_100164CCC(v9);
  if (!v11)
  {
    sub_10001F780(v4);
    goto LABEL_5;
  }
  if ((v4 | 8) == 0xC000000000000018)
  {

LABEL_5:
    *(void *)(v1 + 80) = 0;
    *(void *)(v1 + 88) = 0;
LABEL_6:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v12 = *(void *)(v1 + 72);
  uint64_t v13 = *(void (**)(void))((swift_isaMask & *v11) + 0x2B0);
  v13();
  uint64_t v14 = simd_float4x4.position.getter();
  ((void (*)(uint64_t))v13)(v14);
  simd_float4x4.up.getter();
  sub_10018E940();
  uint64_t v17 = v15;
  uint64_t v19 = *(void *)(v1 + 80);
  int64_t v18 = *(void *)(v1 + 88);
  if (!v16)
  {
    if (!v18) {
      goto LABEL_17;
    }
    uint64_t v20 = 0;
    goto LABEL_34;
  }
  uint64_t v20 = v16;
  if (v18)
  {
    uint64_t v21 = v15 == v19 && v16 == v18;
    if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
LABEL_17:
      sub_10001F780(v4);

      return;
    }
  }
  swift_beginAccess();
  uint64_t v22 = *(void *)(v1 + 216);
  uint64_t v23 = *(void *)(v22 + 16);
  swift_bridgeObjectRetain();
  if (!v23) {
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1000E20D4(v17, v20);
  if ((v25 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_23:
    swift_endAccess();
    goto LABEL_24;
  }
  uint64_t v26 = *(void **)(*(void *)(v22 + 56) + 8 * v24);
  swift_endAccess();
  CGFloat v27 = v26;
  CGFloat v28 = swift_bridgeObjectRelease();
  CGFloat v29 = *(uint64_t (**)(void))((swift_isaMask & *v27) + 0xD0);
  if (((uint64_t (*)(uint64_t))v29)(v28) == 5)
  {
    swift_bridgeObjectRelease_n();

LABEL_31:
    uint64_t v17 = 0;
    uint64_t v20 = 0;
    goto LABEL_32;
  }
  unint64_t v37 = v29();

  if (v37 == 9) {
    goto LABEL_30;
  }
LABEL_24:
  swift_beginAccess();
  CGFloat v30 = *(void *)(v12 + 24);
  swift_bridgeObjectRetain();
  sub_1001606BC(v17, v20, v30, v53);
  swift_bridgeObjectRelease();
  sub_100016FEC((uint64_t)v53, (uint64_t)&v59, &qword_1004CDF20);
  if (!v60)
  {
    swift_endAccess();
    goto LABEL_30;
  }
  CGFloat v31 = v59;
  swift_endAccess();
  sub_10016B140((uint64_t)v53);
  if (v31 != (void *)1)
  {
LABEL_30:
    swift_bridgeObjectRelease_n();
    goto LABEL_31;
  }
  CGFloat v32 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v1 + 200) + 144);
  char v33 = swift_retain();
  v32(&v57, v33);
  swift_release();
  v56[0] = v58;
  swift_bridgeObjectRetain();
  sub_100012894(&qword_1004C4358);
  double v34 = v17;
  sub_100012894(&qword_1004C54D8);
  swift_dynamicCast();
  unint64_t v35 = v57;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  char v36 = sub_10016AE30(v35, v34, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v36)
  {
    sub_100163A2C(v34, v20, (void *)6);
    swift_bridgeObjectRelease();
    sub_1001648A8(3);
    uint64_t v17 = v34;
LABEL_32:
    int64_t v18 = *(void *)(v1 + 88);
    if (!v18) {
      goto LABEL_50;
    }
    uint64_t v19 = *(void *)(v1 + 80);
LABEL_34:
    swift_beginAccess();
    uint64_t v38 = *(void *)(v1 + 216);
    uint64_t v39 = *(void *)(v38 + 16);
    swift_bridgeObjectRetain();
    if (v39)
    {
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_1000E20D4(v19, v18);
      if (v41)
      {
        uint64_t v52 = v17;
        uint64_t v42 = *(void **)(*(void *)(v38 + 56) + 8 * v40);
        swift_endAccess();
        int64_t v43 = v42;
        float v44 = swift_bridgeObjectRelease();
        uint64_t v45 = *(uint64_t (**)(void))((swift_isaMask & *v43) + 0xD0);
        if (((uint64_t (*)(uint64_t))v45)(v44) == 5)
        {

LABEL_53:
          swift_bridgeObjectRelease();
          sub_10001F780(v4);
          swift_bridgeObjectRelease();
          uint64_t v17 = 0;
          uint64_t v20 = 0;
          goto LABEL_54;
        }
        CGRect v51 = v45();

        uint64_t v21 = v51 == 9;
        uint64_t v17 = v52;
        if (v21) {
          goto LABEL_53;
        }
        goto LABEL_40;
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
LABEL_40:
    uint64_t v46 = (uint64_t *)(v12 + 24);
    swift_beginAccess();
    char v47 = *(void *)(v12 + 24);
    swift_bridgeObjectRetain();
    sub_1001606BC(v19, v18, v47, v54);
    swift_bridgeObjectRelease();
    sub_100016FEC((uint64_t)v54, (uint64_t)&v57, &qword_1004CDF20);
    if (v58)
    {
      unint64_t v48 = v57;
      swift_endAccess();
      sub_10016B140((uint64_t)v54);
      if (v48 == 5) {
        goto LABEL_53;
      }
    }
    else
    {
      swift_endAccess();
    }
    swift_beginAccess();
    char v49 = *v46;
    swift_bridgeObjectRetain();
    sub_1001606BC(v19, v18, v49, v55);
    swift_bridgeObjectRelease();
    sub_100016FEC((uint64_t)v55, (uint64_t)v56, &qword_1004CDF20);
    if (v56[1])
    {
      CGPoint v50 = v56[0];
      swift_endAccess();
      sub_10016B140((uint64_t)v55);
      if (v50 == 9) {
        goto LABEL_53;
      }
    }
    else
    {
      swift_endAccess();
    }
    sub_100163A2C(v19, v18, (void *)1);
    swift_bridgeObjectRelease();
    if (!v20) {
      sub_1001648A8(4);
    }
LABEL_50:
    sub_10001F780(v4);
LABEL_54:

    *(void *)(v1 + 80) = v17;
    *(void *)(v1 + 88) = v20;
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  sub_10001F780(v4);
  swift_bridgeObjectRelease();
}

uint64_t sub_10016561C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void (**)(uint64_t))((swift_isaMask & *a1) + 0xD0);
  if (((uint64_t (*)(void))v6)() != 5)
  {
    uint64_t v16 = a2;
    if (qword_1004C2AD0 != -1) {
      swift_once();
    }
    _StringGuts.grow(_:)(18);
    uint64_t v7 = swift_bridgeObjectRelease();
    v6(v7);
    v8._uint64_t countAndFlagsBits = MeasureObjectState.description.getter();
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    v9._uint64_t countAndFlagsBits = 0xD000000000000010;
    v9._object = (void *)0x8000000100428CE0;
    Log.debug(_:isPrivate:)(v9, 0);
    uint64_t v10 = swift_bridgeObjectRelease();
    uint64_t v11 = ((uint64_t (*)(uint64_t))v6)(v10);
    uint64_t v12 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8))();
    sub_10018F118(v11, v12, v13);
    swift_bridgeObjectRelease();
    a2 = v16;
  }
  if (qword_1004C2AD0 != -1) {
    swift_once();
  }
  v14._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v14._object = (void *)0x8000000100428D00;
  Log.debug(_:isPrivate:)(v14, 0);
  return sub_10018F4EC(a1, a2, a3);
}

uint64_t sub_10016585C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_100165948()
{
  uint64_t v0 = StateObserver.deinit();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_100165A34()
{
  sub_100165948();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RectangleInstrument()
{
  uint64_t result = qword_1004CDD60;
  if (!qword_1004CDD60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100165AB0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100165B64@<X0>(uint64_t a1@<X8>)
{
  if (qword_1004C2C40 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = sub_1000217E0(v2, (uint64_t)qword_1004F8470);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100165C0C()
{
  return *(unsigned __int8 *)(v0 + 273);
}

uint64_t sub_100165C14()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t sub_100165C90(char a1)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(unsigned char *)(v3 + 24) = a1;
  sub_100012894((uint64_t *)&unk_1004C68D0);
  swift_allocObject();
  swift_retain();
  return Future.init(_:)();
}

uint64_t sub_100165D1C()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100165D54(uint64_t result)
{
  uint64_t v1 = (void *)result;
  if (qword_1004C29D8 != -1) {
    uint64_t result = swift_once();
  }
  if (!qword_1004F8010)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xD0);
  uint64_t v3 = swift_retain();
  if (v2(v3) != 5) {
    sub_1000DDC98(v1);
  }
  uint64_t result = swift_release();
  if (!qword_1004F8010) {
    goto LABEL_11;
  }
  swift_retain();
  sub_1000A8004(v1);

  return swift_release();
}

uint64_t sub_100165E50(uint64_t a1, uint64_t a2)
{
  void (*v8)(unsigned char *__return_ptr, uint64_t);
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  void (*v13)(unsigned char *__return_ptr, uint64_t);
  uint64_t v14;
  unsigned char v15[14];
  char v16;
  char v17;

  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)&v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Swift::String v8 = *(void (**)(unsigned char *__return_ptr, uint64_t))(**(void **)(a1 + 152) + 144);
  Swift::String v9 = swift_retain();
  v8(&v15[11], v9);
  uint64_t result = swift_release();
  if ((v16 & 1) == 0 && (v17 & 1) == 0)
  {
    if (qword_1004C29E0 != -1) {
      swift_once();
    }
    uint64_t v11 = qword_1004F8038;
    sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
    *uint64_t v7 = static OS_dispatch_queue.main.getter();
    (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
    uint64_t v12 = _dispatchPreconditionTest(_:)();
    uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
    if (v12)
    {
      uint64_t v13 = *(void (**)(unsigned char *__return_ptr, uint64_t))(**(void **)(v11 + 56) + 144);
      Swift::String v14 = swift_retain();
      v13(&v15[6], v14);
      uint64_t result = swift_release();
      if ((v15[9] & 1) == 0 && (v15[10] & 1) == 0) {
        return sub_100096348(a2);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100166060(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 216);
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1000E20D4(a1, a2);
    if (v8)
    {
      Swift::String v9 = *(void **)(*(void *)(v6 + 56) + 8 * v7);
      swift_endAccess();
      uint64_t v10 = v9;
      swift_bridgeObjectRelease();
      sub_100169A78(v10);

      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
LABEL_6:
  uint64_t result = *(void *)(v3 + 248);
  uint64_t v12 = *(void *)(v3 + 256);
  if (v12)
  {
    BOOL v13 = result == a1 && v12 == a2;
    if (v13 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
      *(void *)(v3 + 248) = 0;
      *(void *)(v3 + 256) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_100166158(uint64_t a1)
{
  void (*v77)(uint64_t *__return_ptr);
  float v78;
  float32x4_t v79;
  float32x4_t v80;
  uint64_t (*v81)(void);
  uint64_t *v82;
  uint64_t v83;
  uint64_t (*v84)(void);
  uint64_t v85;
  void *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  id v92;
  uint64_t v93;
  id v94;
  void *v95;
  id v96;
  id v97;
  uint64_t (*v98)(void);
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  char v107;
  int v108;
  char v109;
  char v110;
  uint64_t *v111;
  char *v112;
  char v113;
  int v114;
  int v115;
  char v116;
  char v117;
  uint64_t *v118;
  int v119;
  id v120;
  id v121;
  long long v122;
  int v123;
  int v124;
  int v125;
  long long v126;
  long long v127;
  void *v128;
  long long v129;
  long long v130;
  uint64_t *v131;
  char *v132;
  id v133;
  void *v134;
  long long v135;
  long long v136;
  void *v137;
  long long v138;
  long long v139;
  long long v140;
  long long v141;
  char *v142;
  void *v143;
  uint64_t v144;
  uint64_t *v145;
  void *v146;
  long long v147;
  long long v148;
  float32x4_t v149;
  float32x4_t v150;
  long long v151;
  _OWORD v152[24];
  unsigned char v153[304];
  long long v154;
  unsigned char v155[304];
  unsigned char v156[304];
  char v157;
  char v158;
  int v159;
  char v160;
  char v161;
  char v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  long long v166;
  long long v167;
  long long v168;
  long long v169;
  void *v170;
  int v171;
  char *v172;
  char v173;
  _OWORD v174[95];
  uint64_t v175[38];
  uint64_t v176[180];
  void v177[38];
  uint64_t v178;
  uint64_t v179[38];
  uint64_t v180[38];
  uint64_t v181[38];
  unsigned char v182[1440];
  uint64_t v183[38];
  unsigned char v184[304];
  uint64_t v185[38];
  unsigned char v186[304];
  unsigned char v187[1440];
  void v188[180];
  uint64_t v189[38];
  unsigned char v190[304];
  uint64_t v191[38];
  unsigned char v192[312];
  uint64_t v193;
  unsigned char v194[16];
  unsigned char v195[24];
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unsigned char v199[32];
  uint64_t v200;
  uint64_t v201;
  unsigned char v202[24];
  uint64_t v203;
  unsigned char v204[312];
  uint64_t v205;
  float32x4_t v206;
  char v207;
  float v208;
  char v209;
  uint64_t v210;
  float32x4_t v211;
  char v212;
  float v213;
  char v214;
  uint64_t v215;
  float v216;
  char v217;
  float32x4_t v218;
  char v219;
  unsigned char v220[16];
  void *v221;

  uint64_t v134 = v1;
  unint64_t v7 = (uint64_t *)__chkstk_darwin(a1);
  uint64_t v143 = (void *)type metadata accessor for DispatchWorkItemFlags();
  *(void *)&unint64_t v136 = *(v143 - 1);
  __chkstk_darwin(v143);
  id v142 = (char *)&v122 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&uint64_t v141 = type metadata accessor for DispatchQoS();
  *(void *)&uint64_t v135 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  *(void *)&uint64_t v140 = (char *)&v122 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1004C29D8 != -1) {
    goto LABEL_136;
  }
LABEL_2:
  uint64_t v10 = qword_1004F7FF0;
  if (!qword_1004F7FF0) {
    goto LABEL_149;
  }
  uint64_t v131 = &v165;
  uint64_t v132 = (char *)&v174[82];
  swift_beginAccess();
  id v2 = *(id *)(v10 + 80);
  unint64_t v4 = (unint64_t)v2 + 64;
  uint64_t v11 = 1 << *((unsigned char *)v2 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v5 = v12 & *((void *)v2 + 8);
  uint64_t v145 = v7 + 14;
  int64_t v146 = (void *)((unint64_t)(v11 + 63) >> 6);
  *(void *)&uint64_t v151 = v7;
  id v144 = (uint64_t)v7 + 228;
  swift_bridgeObjectRetain();
  uint64_t v13 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v14 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v15 = v14 | (v13 << 6);
      goto LABEL_25;
    }
    uint64_t v16 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_133;
    }
    if (v16 >= (uint64_t)v146) {
      goto LABEL_31;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v16);
    ++v13;
    if (!v17)
    {
      uint64_t v13 = v16 + 1;
      if (v16 + 1 >= (uint64_t)v146) {
        goto LABEL_31;
      }
      unint64_t v17 = *(void *)(v4 + 8 * v13);
      if (!v17)
      {
        uint64_t v13 = v16 + 2;
        if (v16 + 2 >= (uint64_t)v146) {
          goto LABEL_31;
        }
        unint64_t v17 = *(void *)(v4 + 8 * v13);
        if (!v17)
        {
          uint64_t v13 = v16 + 3;
          if (v16 + 3 >= (uint64_t)v146) {
            goto LABEL_31;
          }
          unint64_t v17 = *(void *)(v4 + 8 * v13);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v5 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
LABEL_25:
    uint64_t v3 = *(void *)(*((void *)v2 + 7) + 8 * v15);
    uint64_t v19 = *(void (**)(void))((swift_isaMask & *(void *)v3) + 0x280);
    uint64_t v6 = (uint64_t *)((swift_isaMask & *(void *)v3) + 640);
    unint64_t v7 = (uint64_t *)(id)v3;
    v19();
    uint64_t v10 = v20;
    uint64_t v21 = swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_6;
    }
    uint64_t v3 = *(void *)((swift_isaMask & *v7) + 0x2C0);
    uint64_t v22 = *(void *)((uint64_t (*)(uint64_t))v3)(v21);
    *(double *)v23.i64 = (*(double (**)(void))(v22 + 368))();
    unint64_t v149 = v24;
    unint64_t v150 = v23;
    uint64_t v147 = v26;
    int64_t v148 = v25;
    swift_release();
    simd_float4x4.position.getter();
    unint64_t v150 = v27;
    sub_100016FEC((uint64_t)v145, (uint64_t)v199, &qword_1004CCEA0);
    sub_100016FEC((uint64_t)v199, (uint64_t)&v211, &qword_1004CCEA0);
    uint64_t v10 = (uint64_t)&v206;
    if (v212) {
      goto LABEL_145;
    }
    unint64_t v149 = v211;
    uint64_t v6 = &qword_1004C74C8;
    sub_100016FEC(v144, (uint64_t)&v198, &qword_1004C74C8);
    uint64_t v28 = sub_100016FEC((uint64_t)&v198, (uint64_t)&v213, &qword_1004C74C8);
    if (v214) {
      goto LABEL_146;
    }
    float32x4_t v29 = vsubq_f32(v150, v149);
    float32x4_t v30 = vmulq_f32(v29, v29);
    if (v213 < sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v30, 2), vaddq_f32(v30, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v30.f32, 1))).f32[0]))
    {
LABEL_6:
    }
    else
    {
      uint64_t v31 = ((uint64_t (*)(uint64_t, float))v3)(v28, v213);
      *(double *)v32.i64 = (*(double (**)(uint64_t))(*(void *)v31 + 368))(v31);
      unint64_t v149 = v33;
      unint64_t v150 = v32;
      uint64_t v147 = v35;
      int64_t v148 = v34;
      swift_release();
      simd_float4x4.position.getter();
      uint64_t v10 = static WorldRectangleData.pointLiesWithinRectangle(point:rectangle:pointsCoplanar:)();

      if (v10)
      {
        swift_release();
        return;
      }
    }
  }
  uint64_t v18 = v16 + 4;
  if (v18 >= (uint64_t)v146) {
    goto LABEL_31;
  }
  unint64_t v17 = *(void *)(v4 + 8 * v18);
  if (v17)
  {
    uint64_t v13 = v18;
    goto LABEL_24;
  }
  while (1)
  {
    uint64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      goto LABEL_135;
    }
    if (v13 >= (uint64_t)v146) {
      break;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_24;
    }
  }
LABEL_31:
  swift_release();
  if (!qword_1004F7FE0) {
    goto LABEL_150;
  }
  char v36 = v134;
  uint64_t v133 = *(id *)(qword_1004F7FE0 + 80);
  if (!v133) {
    goto LABEL_45;
  }
  unint64_t v37 = v134;
  swift_beginAccess();
  id v2 = (id)v37[28];
  uint64_t v3 = type metadata accessor for WorldRectangle();
  *(void *)&uint64_t v147 = v133;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v38 = OrderedDictionary.values.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v38 >> 62) {
    goto LABEL_138;
  }
  unint64_t v7 = *(uint64_t **)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7) {
    goto LABEL_35;
  }
LABEL_43:
  while (2)
  {
    swift_bridgeObjectRelease();
    sub_100016FEC(v151, (uint64_t)&v203, &qword_1004CDF88);
    sub_100016FEC((uint64_t)&v203, (uint64_t)&v205, &qword_1004CDF88);
    uint64_t v10 = v205;
    if (!v205) {
      goto LABEL_151;
    }
    uint64_t v46 = self;
    id v47 = (id)v147;
    id v48 = [v46 whiteColor];
    sub_100053B6C(v10, v48, 0x74616469646E6143, 0xE900000000000065, 1.0);

    char v36 = v134;
LABEL_45:
    char v49 = v36;
    swift_beginAccess();
    uint64_t v50 = v49[14];
    id v2 = (id)(v50 + 64);
    uint64_t v51 = 1 << *(unsigned char *)(v50 + 32);
    uint64_t v52 = -1;
    if (v51 < 64) {
      uint64_t v52 = ~(-1 << v51);
    }
    unint64_t v4 = v52 & *(void *)(v50 + 64);
    uint64_t v3 = (unint64_t)(v51 + 63) >> 6;
    swift_bridgeObjectRetain();
    uint64_t v53 = 0;
    unint64_t v38 = 304;
    unint64_t v7 = &qword_1004CDF80;
    while (2)
    {
      if (v4)
      {
        unint64_t v54 = __clz(__rbit64(v4));
        v4 &= v4 - 1;
        unint64_t v55 = v54 | (v53 << 6);
LABEL_66:
        memcpy(v204, (const void *)(*(void *)(v50 + 56) + 304 * v55), 0x130uLL);
        sub_1000DBFA4((uint64_t)v204);
        unint64_t v5 = v151;
        sub_1000DBFA4(v151);
        sub_10018AFB8((uint64_t)v204);
        sub_100016FEC((uint64_t)v176, (uint64_t)v182, &qword_1004CDF80);
        if (sub_10016CB9C((uint64_t)v182) == 1) {
          continue;
        }
        unint64_t v5 = v182[1432];
        sub_10016CBB4(v176);
        if ((v5 & 1) == 0) {
          continue;
        }
        swift_release();
LABEL_120:
        int v103 = v133;
LABEL_121:

        return;
      }
      break;
    }
    uint64_t v56 = v53 + 1;
    if (__OFADD__(v53, 1)) {
      goto LABEL_134;
    }
    if (v56 < v3)
    {
      unint64_t v57 = *((void *)v2 + v56);
      ++v53;
      if (v57) {
        goto LABEL_65;
      }
      uint64_t v53 = v56 + 1;
      if (v56 + 1 >= v3) {
        break;
      }
      unint64_t v57 = *((void *)v2 + v53);
      if (v57) {
        goto LABEL_65;
      }
      uint64_t v53 = v56 + 2;
      if (v56 + 2 >= v3) {
        break;
      }
      unint64_t v57 = *((void *)v2 + v53);
      if (v57) {
        goto LABEL_65;
      }
      uint64_t v53 = v56 + 3;
      if (v56 + 3 >= v3) {
        break;
      }
      unint64_t v57 = *((void *)v2 + v53);
      if (v57) {
        goto LABEL_65;
      }
      uint64_t v58 = v56 + 4;
      if (v58 >= v3) {
        break;
      }
      unint64_t v57 = *((void *)v2 + v58);
      if (v57)
      {
        uint64_t v53 = v58;
LABEL_65:
        unint64_t v4 = (v57 - 1) & v57;
        unint64_t v55 = __clz(__rbit64(v57)) + (v53 << 6);
        goto LABEL_66;
      }
      while (1)
      {
        uint64_t v53 = v58 + 1;
        if (__OFADD__(v58, 1)) {
          break;
        }
        if (v53 >= v3) {
          goto LABEL_69;
        }
        unint64_t v57 = *((void *)v2 + v53);
        ++v58;
        if (v57) {
          goto LABEL_65;
        }
      }
      __break(1u);
LABEL_138:
      swift_bridgeObjectRetain();
      unint64_t v7 = (uint64_t *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v7) {
        continue;
      }
LABEL_35:
      int64_t v146 = (void *)(v38 & 0xC000000000000001);
      unint64_t v137 = &v188[2];
      *(void *)&unint64_t v136 = v136 + 8;
      *(void *)&uint64_t v135 = v135 + 8;
      unint64_t v5 = 4;
      *(void *)&uint64_t v139 = v38;
      *(void *)&float v138 = v7;
      while (1)
      {
        uint64_t v39 = v146
            ? (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : (uint64_t *)*(id *)(v38 + 8 * v5);
        uint64_t v6 = v39;
        unint64_t v4 = v5 - 3;
        if (__OFADD__(v5 - 4, 1)) {
          break;
        }
        id v2 = *(id *)((swift_isaMask & *v39) + 0x260);
        uint64_t v3 = (swift_isaMask & *v39) + 608;
        id v40 = (id)v147;
        uint64_t v10 = (uint64_t)v6;
        ((void (*)(uint64_t *__return_ptr))v2)(v175);
        sub_100016FEC((uint64_t)v175, (uint64_t)v191, &qword_1004CCE98);
        if (sub_10014CD80(v191) == 1) {
          goto LABEL_147;
        }
        v149.i64[0] = (uint64_t)v6;
        v150.i64[0] = v5 - 3;
        memcpy(v192, v191, 0x130uLL);
        uint64_t v10 = (uint64_t)&qword_1004CDF88;
        sub_100016FEC((uint64_t)v192, (uint64_t)&v193, &qword_1004CDF88);
        sub_10016D4F0((uint64_t)&v193);
        sub_10014CDA4(v175);
        sub_100016FEC((uint64_t)&v193, (uint64_t)&v221, &qword_1004CDF88);
        id v2 = v221;
        if (!v221) {
          goto LABEL_148;
        }
        id v41 = [self greenColor];
        sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
        uint64_t v3 = static OS_dispatch_queue.main.getter();
        uint64_t v42 = (void *)swift_allocObject();
        v42[2] = v40;
        v42[3] = v2;
        v42[4] = 0x3FF0000000000000;
        v42[5] = v41;
        v42[6] = 0;
        v42[7] = 0xE000000000000000;
        v188[4] = sub_100055B58;
        v188[5] = v42;
        v188[0] = _NSConcreteStackBlock;
        v188[1] = 1107296256;
        v188[2] = sub_100049AB4;
        v188[3] = &unk_10048FBC0;
        id v2 = _Block_copy(v188);
        *(void *)&int64_t v148 = v40;
        sub_10016D4F0((uint64_t)&v193);
        uint64_t v6 = (uint64_t *)v41;
        swift_release();
        uint64_t v43 = v140;
        static DispatchQoS.unspecified.getter();
        v188[0] = _swiftEmptyArrayStorage;
        unint64_t v4 = sub_10016DC20((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100012894((uint64_t *)&unk_1004C68E0);
        sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
        uint64_t v45 = v142;
        float v44 = v143;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v2);

        (*(void (**)(char *, void *))v136)(v45, v44);
        (*(void (**)(uint64_t, void))v135)(v43, v141);

        sub_10008D0F0((uint64_t)&v193);
        ++v5;
        unint64_t v7 = (uint64_t *)v138;
        unint64_t v38 = v139;
        if (v150.i64[0] == (void)v138) {
          goto LABEL_43;
        }
      }
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      swift_once();
      goto LABEL_2;
    }
    break;
  }
LABEL_69:
  swift_release();
  id v2 = v134;
  *(void *)&int64_t v148 = v134 + 26;
  swift_beginAccess();
  uint64_t v10 = *((void *)v2 + 26);
  type metadata accessor for WorldRectangle();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v3 = OrderedDictionary.values.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0) {
      uint64_t v10 = v3;
    }
    else {
      uint64_t v10 = v3 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v59 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v59 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v7 = (uint64_t *)v151;
  if (!v59)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    unint64_t v5 = 0;
    goto LABEL_115;
  }
  if (v59 < 1)
  {
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:

    __break(1u);
LABEL_153:
    uint64_t v120 = v133;

    __break(1u);
    goto LABEL_154;
  }
  unint64_t v4 = 0;
  uint64_t v6 = 0;
  unint64_t v5 = 0;
  uint64_t v60 = 0;
  int64_t v146 = v134 + 31;
  while (2)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v61 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v61 = *(id *)(v3 + 8 * v60 + 32);
    }
    id v62 = v61;
    switch((*(uint64_t (**)(void))((swift_isaMask & *v61) + 0xD0))())
    {
      case 1:
        v150.i64[0] = v4;
        v149.i64[0] = v5;
        unint64_t v63 = *(uint64_t (**)(void))((swift_isaMask & *v62) + 0xB8);
        char v64 = v62;
        uint64_t v65 = v63();
        uint64_t v67 = v66;

        swift_beginAccess();
        uint64_t v68 = v134[27];
        if (*(void *)(v68 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v69 = sub_1000E20D4(v65, v67);
          if (v70)
          {
            unint64_t v71 = *(void **)(*(void *)(v68 + 56) + 8 * v69);
            swift_endAccess();
            uint64_t v72 = v71;
            *(void *)&uint64_t v147 = v6;
            id v73 = v72;
            swift_bridgeObjectRelease();
            sub_100169A78(v73);

            uint64_t v6 = (uint64_t *)v147;
            goto LABEL_88;
          }
          swift_bridgeObjectRelease();
        }
        swift_endAccess();
LABEL_88:
        uint64_t v74 = v134[32];
        if (v74
          && (v134[31] == v65 ? (BOOL v75 = v74 == v67) : (BOOL v75 = 0),
              v75 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
        {
          unint64_t v5 = v149.i64[0];
          int v76 = v146;
          *int64_t v146 = 0;
          v76[1] = 0;
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          unint64_t v7 = (uint64_t *)v151;
          unint64_t v4 = v150.i64[0];
        }
        else
        {
          swift_bridgeObjectRelease();

          unint64_t v7 = (uint64_t *)v151;
          unint64_t v5 = v149.i64[0];
          unint64_t v4 = v150.i64[0];
        }
        break;
      case 5:

        unint64_t v5 = (unint64_t)v62;
        break;
      case 6:

        unint64_t v4 = (unint64_t)v62;
        break;
      case 9:

        uint64_t v6 = v62;
        break;
      default:

        break;
    }
    if (v59 != ++v60) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_100;
  }
  unint64_t v7 = *(uint64_t **)((swift_isaMask & *(void *)v5) + 0x260);
  uint64_t v3 = (swift_isaMask & *(void *)v5) + 608;
  id v2 = (id)v5;
  uint64_t v10 = (uint64_t)v2;
  ((void (*)(void *__return_ptr))v7)(v177);
  sub_100016FEC((uint64_t)v177, (uint64_t)v189, &qword_1004CCE98);
  if (sub_10014CD80(v189) == 1) {
    goto LABEL_152;
  }
  memcpy(v190, v189, sizeof(v190));
  uint64_t v3 = (uint64_t)v133;
  unint64_t v7 = (uint64_t *)v151;
  sub_1000DBFA4(v151);
  sub_10018AFB8((uint64_t)v190);
  sub_100016FEC((uint64_t)&v178, (uint64_t)v187, &qword_1004CDF80);
  if (sub_10016CB9C((uint64_t)v187) != 1)
  {
    memcpy(v188, v187, 0x599uLL);
    sub_100016FEC((uint64_t)&v188[166], (uint64_t)v194, &qword_1004CDF90);
    memcpy(v174, v188, 0x599uLL);
    int v104 = sub_100016FEC((uint64_t)v194, (uint64_t)v220, &qword_1004CDF90);
    if (v220[8] == 1) {
      sub_10018A120(v104);
    }
    if (v132[24]) {
      goto LABEL_160;
    }
    uint64_t v143 = (void *)v3;
    v150.i64[0] = v4;
    int64_t v146 = v2;
    *(void *)&uint64_t v147 = v6;
    int v105 = *(void *)&v174[83];

    *(void *)&int64_t v148 = v105;
    if (v105 < 1)
    {
      v149.i64[0] = v5;
      uint64_t v112 = v132;
      LODWORD(v142) = v132[120];
      uint64_t v140 = v174[1];
      uint64_t v141 = v174[0];
      *(void *)&uint64_t v139 = *(void *)&v174[2];
      LODWORD(v138) = BYTE8(v174[2]);
      unint64_t v137 = *(void **)&v174[4];
      memcpy(v183, &v174[5], sizeof(v183));
      memcpy(v184, &v174[24], sizeof(v184));
      uint64_t v122 = v174[3];
      uint64_t v126 = v174[43];
      sub_100016FEC((uint64_t)&v174[44], (uint64_t)v185, &qword_1004CCE98);
      sub_100016FEC((uint64_t)&v174[63], (uint64_t)v186, &qword_1004CCE98);
      uint64_t v113 = *v112;
      uint64_t v114 = v112[1];
      uint64_t v115 = DWORD1(v174[82]);
      long long v124 = v112[8];
      uint64_t v125 = v114;
      uint64_t v116 = v112[9];
      uint64_t v117 = v112[10];
      long long v123 = v112[11];
      uint64_t v135 = v174[85];
      unint64_t v136 = v174[84];
      uint64_t v129 = v174[87];
      uint64_t v130 = v174[86];
      char v128 = *(void **)&v174[88];
      LODWORD(v127) = DWORD2(v174[88]);
      uint64_t v3 = v112[108];
      uint64_t v132 = *(char **)&v174[89];
      v152[0] = v141;
      v152[1] = v140;
      *(void *)&v152[2] = v139;
      BYTE8(v152[2]) = v138;
      v152[3] = v122;
      *(void *)&v152[4] = v137;
      memcpy(&v152[5], v183, 0x130uLL);
      memcpy(v153, v184, sizeof(v153));
      char v154 = v126;
      sub_100016FEC((uint64_t)v185, (uint64_t)v155, &qword_1004CCE98);
      sub_100016FEC((uint64_t)v186, (uint64_t)v156, &qword_1004CCE98);
      int v157 = v113;
      char v158 = v125;
      int v159 = v115;
      char v160 = v124;
      char v161 = v116;
      char v162 = v117;
      int v163 = v123;
      char v164 = v148;
      uint64_t v118 = v131;
      *(unsigned char *)uint64_t v131 = 0;
      uint64_t v166 = v136;
      int v167 = v135;
      char v168 = v130;
      char v169 = v129;
      char v170 = v128;
      int v171 = v127;
      *((unsigned char *)v118 + 84) = v3;
      char v172 = v132;
      uint64_t v119 = (int)v142;
      float v173 = (char)v142;
      sub_10016D51C((uint64_t)v152);
      if (v119 != 1)
      {
        unint64_t v7 = (uint64_t *)v151;
        uint64_t v6 = (uint64_t *)v147;
        unint64_t v5 = v149.i64[0];
        unint64_t v4 = v150.i64[0];
        if (v150.i64[0]) {
          goto LABEL_101;
        }
LABEL_115:
        sub_100167E10((uint64_t)v7);
        if (!v133) {
          goto LABEL_118;
        }
        sub_100016FEC((uint64_t)v7, (uint64_t)v152, &qword_1004CDF88);
        sub_100016FEC((uint64_t)v152, (uint64_t)v174, &qword_1004CDF88);
        uint64_t v10 = *(void *)&v174[0];
        if (*(void *)&v174[0])
        {
          uint64_t v95 = self;
          uint64_t v96 = v133;
          uint64_t v97 = [v95 greenColor];
          sub_100053B6C(v10, v97, 5719374, 0xE300000000000000, 1.0);

          goto LABEL_118;
        }
        goto LABEL_153;
      }
    }
    else
    {
      uint64_t v151 = v174[0];
      unint64_t v149 = (float32x4_t)v174[1];
      uint64_t v145 = *(uint64_t **)&v174[2];
      LODWORD(v144) = BYTE8(v174[2]);
      id v142 = *(char **)&v174[4];
      memcpy(v183, &v174[5], sizeof(v183));
      memcpy(v184, &v174[24], sizeof(v184));
      uint64_t v127 = v174[3];
      uint64_t v130 = v174[43];
      sub_100016FEC((uint64_t)&v174[44], (uint64_t)v185, &qword_1004CCE98);
      sub_100016FEC((uint64_t)&v174[63], (uint64_t)v186, &qword_1004CCE98);
      char v106 = *v132;
      float v107 = v132[1];
      float v108 = DWORD1(v174[82]);
      uint64_t v109 = v132[8];
      float v110 = v132[9];
      LODWORD(v129) = v132[10];
      LODWORD(v128) = v132[11];
      uint64_t v140 = v174[85];
      uint64_t v141 = v174[84];
      float v138 = v174[87];
      uint64_t v139 = v174[86];
      unint64_t v137 = *(void **)&v174[88];
      LODWORD(v136) = DWORD2(v174[88]);
      LODWORD(v135) = v132[108];
      uint64_t v134 = *(void **)&v174[89];
      LODWORD(v133) = v132[120];
      v152[0] = v151;
      v152[1] = v149;
      *(void *)&v152[2] = v145;
      BYTE8(v152[2]) = v144;
      v152[3] = v127;
      *(void *)&v152[4] = v142;
      memcpy(&v152[5], v183, 0x130uLL);
      memcpy(v153, v184, sizeof(v153));
      char v154 = v130;
      sub_100016FEC((uint64_t)v185, (uint64_t)v155, &qword_1004CCE98);
      sub_100016FEC((uint64_t)v186, (uint64_t)v156, &qword_1004CCE98);
      int v157 = v106;
      char v158 = v107;
      int v159 = v108;
      char v160 = v109;
      char v161 = v110;
      char v162 = v129;
      int v163 = (char)v128;
      char v164 = v148;
      uint64_t v111 = v131;
      *(unsigned char *)uint64_t v131 = 0;
      uint64_t v166 = v141;
      int v167 = v140;
      char v168 = v139;
      char v169 = v138;
      char v170 = v137;
      int v171 = v136;
      *((unsigned char *)v111 + 84) = v135;
      char v172 = (char *)v134;
      float v173 = (char)v133;
      sub_10016D51C((uint64_t)v152);
    }

    int v103 = v146;
    goto LABEL_121;
  }

LABEL_100:
  if (!v4) {
    goto LABEL_115;
  }
LABEL_101:
  uint64_t v10 = (uint64_t)&qword_1004CCEA0;
  sub_100016FEC((uint64_t)v145, (uint64_t)v202, &qword_1004CCEA0);
  sub_100016FEC((uint64_t)v202, (uint64_t)&v206, &qword_1004CCEA0);
  if (v207 == 1)
  {
LABEL_154:

    __break(1u);
    goto LABEL_155;
  }
  unint64_t v150 = v206;
  char v77 = *(void (**)(uint64_t *__return_ptr))((swift_isaMask & *(void *)v4) + 0x260);
  uint64_t v10 = (uint64_t)(id)v4;
  v77(v179);

  sub_100016FEC((uint64_t)v179, (uint64_t)v152, &qword_1004CCE98);
  if (sub_10014CD80((uint64_t *)v152) == 1)
  {
LABEL_155:

    __break(1u);
    goto LABEL_156;
  }
  memcpy(v174, v152, 0x130uLL);
  sub_10014CDA4(v179);
  unint64_t v7 = &qword_1004CCEA0;
  sub_100016FEC((uint64_t)&v174[7], (uint64_t)v195, &qword_1004CCEA0);
  sub_100016FEC((uint64_t)v195, (uint64_t)&v218, &qword_1004CCEA0);
  if (v219 == 1)
  {
LABEL_156:

    __break(1u);
    goto LABEL_157;
  }
  unint64_t v149 = v218;
  unint64_t v7 = &qword_1004C74C8;
  sub_100016FEC(v144, (uint64_t)&v201, &qword_1004C74C8);
  sub_100016FEC((uint64_t)&v201, (uint64_t)&v208, &qword_1004C74C8);
  uint64_t v3 = (uint64_t)&v206;
  if (v209 == 1)
  {
LABEL_157:

    __break(1u);
    goto LABEL_158;
  }
  char v78 = v208;
  unint64_t v7 = (uint64_t *)(id)v10;
  v77(v180);

  sub_100016FEC((uint64_t)v180, (uint64_t)v185, &qword_1004CCE98);
  if (sub_10014CD80(v185) == 1)
  {
LABEL_158:

    __break(1u);
    goto LABEL_159;
  }
  memcpy(v186, v185, sizeof(v186));
  sub_10014CDA4(v180);
  sub_100016FEC((uint64_t)&v186[228], (uint64_t)&v196, &qword_1004C74C8);
  sub_100016FEC((uint64_t)&v196, (uint64_t)&v216, &qword_1004C74C8);
  if (v217 == 1)
  {
LABEL_159:

    __break(1u);
LABEL_160:
    __break(1u);
    goto LABEL_161;
  }
  int v79 = vsubq_f32(v150, v149);
  uint64_t v80 = vmulq_f32(v79, v79);
  if (sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v80, 2), vaddq_f32(v80, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v80.f32, 1))).f32[0]) >= (float)(v78 + v216)|| (id v81 = *(uint64_t (**)(void))((swift_isaMask & *v7) + 0xD0), v82 = v7, v83 = v81(), v82, v83 != 6))
  {
    uint64_t v98 = *(uint64_t (**)(void))((swift_isaMask & *v7) + 0xB8);
    int v99 = v7;
    uint64_t v100 = v98();
    char v102 = v101;

    sub_100166060(v100, v102);
    swift_bridgeObjectRelease();
    sub_100167E10(v151);

    goto LABEL_120;
  }
  int64_t v84 = *(uint64_t (**)(void))((swift_isaMask & *v82) + 0xB8);
  uint64_t v3 = v82;
  unint64_t v85 = v84();
  uint64_t v87 = v86;

  unint64_t v88 = v151;
  sub_1001637C0(v85, v87, v151);
  swift_bridgeObjectRelease();
  if (v133)
  {
    sub_100016FEC(v88, (uint64_t)&v200, &qword_1004CDF88);
    sub_100016FEC((uint64_t)&v200, (uint64_t)&v210, &qword_1004CDF88);
    int64_t v89 = v210;
    if (v210)
    {
      unint64_t v90 = self;
      int64_t v91 = v133;
      uint64_t v92 = [v90 greenColor];
      sub_100053B6C(v89, v92, 5719374, 0xE300000000000000, 1.0);

      uint64_t v3 = (uint64_t)(id)v3;
      v77(v181);

      sub_100016FEC((uint64_t)v181, (uint64_t)v183, &qword_1004CCE98);
      if (sub_10014CD80(v183) != 1)
      {
        memcpy(v184, v183, sizeof(v184));
        sub_100016FEC((uint64_t)v184, (uint64_t)&v197, &qword_1004CDF88);
        sub_10016D4F0((uint64_t)&v197);
        sub_10014CDA4(v181);
        sub_100016FEC((uint64_t)&v197, (uint64_t)&v215, &qword_1004CDF88);
        uint64_t v93 = v215;
        if (v215)
        {
          uint64_t v94 = [v90 redColor];
          sub_100053B6C(v93, v94, 4475983, 0xE300000000000000, 1.0);

          sub_10008D0F0((uint64_t)&v197);
          return;
        }
LABEL_163:

        __break(1u);
        JUMPOUT(0x100167DECLL);
      }
LABEL_162:

      __break(1u);
      goto LABEL_163;
    }
LABEL_161:
    uint64_t v121 = v133;

    __break(1u);
    goto LABEL_162;
  }

LABEL_118:
}

void sub_100167E10(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_100168670(a1);
  if (v3)
  {
    unint64_t v4 = v3;
    uint64_t v5 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xB8))();
    uint64_t v54 = v6;
    unint64_t v55 = v4;
    uint64_t v53 = v5;
    swift_beginAccess();
    unint64_t v7 = v4;
    sub_100012894(&qword_1004CDF28);
    OrderedDictionary.subscript.setter();
    swift_endAccess();
    uint64_t v8 = swift_allocObject();
    swift_weakInit();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v7;
    *(void *)(v9 + 24) = v8;
    uint64_t v10 = *(void (**)(uint64_t (*)(), uint64_t))((swift_isaMask & *v7) + 0xF0);
    uint64_t v11 = v7;
    swift_retain();
    v10(sub_10016D93C, v9);
    swift_release();
    uint64_t v12 = swift_allocObject();
    swift_weakInit();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v11;
    *(void *)(v13 + 24) = v12;
    unint64_t v14 = *(void (**)(uint64_t (*)(), uint64_t))((swift_isaMask & *v11) + 0x108);
    unint64_t v15 = v11;
    swift_retain();
    v14(sub_10016D948, v13);
    swift_release();
    uint64_t v16 = swift_allocObject();
    swift_weakInit();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v16;
    *(void *)(v17 + 24) = v15;
    uint64_t v18 = *(void (**)(BOOL (*)(double, double), uint64_t))((swift_isaMask & *v15) + 0x120);
    uint64_t v19 = v15;
    swift_retain();
    v18(sub_10016D958, v17);
    swift_release();
    uint64_t v20 = swift_allocObject();
    swift_weakInit();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v19;
    *(void *)(v21 + 24) = v20;
    uint64_t v22 = *(void (**)(uint64_t (*)(), uint64_t))((swift_isaMask & *v19) + 0x138);
    float32x4_t v23 = v19;
    swift_retain();
    v22(sub_10016D964, v21);
    swift_release();
    uint64_t v24 = swift_allocObject();
    swift_weakInit();
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v23;
    *(void *)(v25 + 24) = v24;
    long long v26 = *(void (**)(uint64_t (*)(), uint64_t))((swift_isaMask & *v23) + 0x150);
    float32x4_t v27 = v23;
    swift_retain();
    v26(sub_10016D970, v25);
    swift_release();
    uint64_t v28 = swift_allocObject();
    swift_weakInit();
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v27;
    *(void *)(v29 + 24) = v28;
    float32x4_t v30 = *(void (**)(uint64_t (*)(), uint64_t))((swift_isaMask & *v27) + 0x168);
    uint64_t v31 = v27;
    swift_retain();
    v30(sub_10016D97C, v29);
    swift_release();
    uint64_t v32 = swift_allocObject();
    swift_weakInit();
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v31;
    *(void *)(v33 + 24) = v32;
    long long v34 = *(void (**)(uint64_t (*)(), uint64_t))((swift_isaMask & *v31) + 0x180);
    long long v35 = v31;
    swift_retain();
    v34(sub_10016D988, v33);
    swift_release();
    uint64_t v36 = swift_allocObject();
    swift_weakInit();
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v36;
    *(void *)(v37 + 24) = v35;
    unint64_t v38 = *(void (**)(id *(*)(), uint64_t))((swift_isaMask & *v35) + 0x1B0);
    uint64_t v39 = v35;
    swift_retain();
    v38(sub_10016D998, v37);
    swift_release();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v2;
    *(void *)(v40 + 24) = v39;
    id v41 = *(void (**)(uint64_t (*)(), uint64_t))((swift_isaMask & *v39) + 0x1C8);
    uint64_t v42 = v39;
    swift_retain();
    v41(sub_10016D9F4, v40);
    uint64_t v43 = *(void (**)(double (*)(), void))((swift_isaMask & *v42) + 0x198);
    float v44 = v42;
    v43(sub_10006CD5C, 0);

    uint64_t v45 = *(void (**)(double (*)(), void))((swift_isaMask & *v44) + 0x1E0);
    uint64_t v46 = v44;
    v45(sub_10016A864, 0);

    id v47 = *(uint64_t (**)(unsigned char *))(**(void **)(v2 + 176) + 400);
    swift_retain();
    id v48 = (void (*)(unsigned char *, void))v47(v52);
    uint64_t v50 = v49;
    uint64_t v51 = v46;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    v48(v52, 0);

    swift_release();
  }
}

void sub_100168670(uint64_t a1)
{
  void (*v7)(void *__return_ptr, uint64_t);
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  void (*v24)(uint64_t);
  char v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  char v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  void *v60;
  void *v61;
  uint64_t v62;
  void *v63;
  void *v64;
  void *v65;
  id v66;
  void *v67;
  void *v68;
  void *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  objc_class *v73;
  objc_class *v74;
  unint64_t v75;
  unint64_t v76;
  void v77[5];

  uint64_t v5 = v1;
  unint64_t v7 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v1 + 160) + 144);
  uint64_t v8 = swift_retain();
  v7(v77, v8);
  swift_release();
  uint64_t v9 = (void *)v77[0];
  uint64_t v10 = (void *)v77[1];
  uint64_t v11 = (void *)v77[3];
  uint64_t v12 = (id)v77[2];

  uint64_t v13 = sub_100164CCC(v11);
  if (!v13) {
    return;
  }
  swift_beginAccess();
  swift_retain();
  unint64_t v14 = v13;
  unint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_10016B9BC(v15, v5, (void *)v14);
  swift_bridgeObjectRelease();
  swift_release();

  uint64_t v17 = *(void **)(v16 + 16);
  swift_release();
  if (!v17)
  {
    *(void *)(v5 + 112) = _swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = *(void *)(a1 + 16);
  if (!v18) {
    goto LABEL_112;
  }
  BOOL v75 = v18 & 0xC000000000000001;
  if ((v18 & 0xC000000000000001) != 0) {
    goto LABEL_87;
  }
  if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_89;
  }
  swift_retain();
  while (1)
  {
    uint64_t v74 = (objc_class *)type metadata accessor for WorldPoint();
    uint64_t v19 = objc_allocWithZone(v74);
    uint64_t v17 = (void *)WorldPoint.init(anchor:type:state:)();
    char v70 = a1;
    unint64_t v71 = (void *)v14;
    if (v75)
    {
LABEL_89:
      unint64_t v14 = v18;
      specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_11:
      uint64_t v20 = objc_allocWithZone(v74);
      uint64_t v21 = (void *)WorldPoint.init(anchor:type:state:)();
      id v73 = (objc_class *)type metadata accessor for WorldLine();
      uint64_t v22 = objc_allocWithZone(v73);
      uint64_t v2 = v17;
      id v3 = v21;
      float32x4_t v23 = (void *)WorldLine.init(end1:end2:initialState:)();
      uint64_t v24 = *(void (**)(uint64_t))((swift_isaMask & *v23) + 0xD8);
      uint64_t v18 = (swift_isaMask & *v23) + 216;
      uint64_t v4 = v23;
      v24(1);
      uint64_t v17 = &swift_isaMask;

      (*(void (**)(void))((swift_isaMask & *(void *)v4) + 0x2D0))(0);
      if (qword_1004C29D8 == -1) {
        goto LABEL_12;
      }
      goto LABEL_91;
    }
    if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
    {
      unint64_t v14 = v18;
      swift_retain();
      goto LABEL_11;
    }
    __break(1u);
LABEL_91:
    swift_once();
LABEL_12:
    if (!qword_1004F7FF0) {
      goto LABEL_113;
    }
    swift_retain();
    uint64_t v25 = sub_1001238E0((void *)v4, 0);
    swift_release();
    if ((v25 & 1) == 0) {
      goto LABEL_48;
    }
    sub_100012894((uint64_t *)&unk_1004CEA00);
    long long v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1003F8B20;
    *(void *)(v26 + 32) = v4;
    int v76 = v26;
    specialized Array._endMutation()();
    float32x4_t v27 = v76;
    uint64_t v72 = v14 & 0xFFFFFFFFFFFFFF8;
    if (v14 >> 62)
    {
      uint64_t v66 = (id)v4;
      swift_bridgeObjectRetain();
      a1 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (a1 < 2)
      {
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
    }
    else
    {
      a1 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v28 = (id)v4;
      if (a1 < 2) {
        goto LABEL_93;
      }
    }
    if (!(v76 >> 62))
    {
      uint64_t v29 = *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      goto LABEL_18;
    }
LABEL_94:
    swift_bridgeObjectRetain_n();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_18:
    uint64_t v68 = (void *)v4;
    unint64_t v69 = v3;
    uint64_t v67 = (void *)v2;
    if (!v29)
    {
LABEL_47:
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_48:

      return;
    }
    type metadata accessor for WorldAnchor();
    float32x4_t v30 = v29 - 1;
    if (!__OFSUB__(v29, 1)) {
      break;
    }
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  uint64_t v2 = a1 == 2;
  uint64_t v4 = 2;
  uint64_t v18 = a1;
  while (1)
  {
    if ((v27 & 0xC000000000000001) != 0)
    {
      uint64_t v31 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if ((v30 & 0x8000000000000000) != 0) {
        goto LABEL_80;
      }
      if (v30 >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_81;
      }
      uint64_t v31 = *(id *)(v27 + 8 * v30 + 32);
    }
    uint64_t v32 = v31;
    uint64_t v33 = swift_bridgeObjectRelease();
    long long v34 = (*(uint64_t (**)(uint64_t))((*v17 & *v32) + 0x250))(v33);

    if ((v34 & 0xC000000000000001) != 0)
    {
      long long v35 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
        goto LABEL_82;
      }
      long long v35 = *(id *)(v34 + 40);
    }
    uint64_t v36 = v35;
    swift_bridgeObjectRelease();
    uint64_t v37 = v4 % a1;
    if (v75)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if ((v37 & 0x8000000000000000) != 0) {
        goto LABEL_85;
      }
      if (v37 >= *(void *)(v72 + 16)) {
        goto LABEL_86;
      }
      swift_retain();
    }
    unint64_t v38 = WorldAnchor.__allocating_init(anchor:shouldAutoUpdate:)();
    (*(void (**)(uint64_t))((*v17 & *v36) + 0x2F0))(v38);
    (*(void (**)(void))((*v17 & *v36) + 0xD0))();
    uint64_t v39 = objc_allocWithZone(v74);
    uint64_t v40 = (void *)WorldPoint.init(anchor:type:state:)();
    id v41 = objc_allocWithZone(v73);
    a1 = v36;
    uint64_t v42 = v40;
    uint64_t v43 = (void *)WorldLine.init(end1:end2:initialState:)();
    (*(void (**)(void))((*v17 & *v43) + 0x2D0))(0);
    if (!qword_1004F7FF0) {
      goto LABEL_111;
    }
    float v44 = (*v17 & *v43) + 792;
    uint64_t v45 = *(void (**)(uint64_t))((*v17 & *v43) + 0x318);
    id v3 = (id)v44;
    swift_retain();
    v45(a1);
    uint64_t v46 = sub_1001238E0(v43, 0);
    swift_release();
    if ((v46 & 1) == 0)
    {

      swift_bridgeObjectRelease();
      return;
    }
    unint64_t v14 = v43;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    uint64_t v17 = &swift_isaMask;
    if (v2) {
      break;
    }
    if (__OFADD__(v4, 1)) {
      goto LABEL_83;
    }
    float32x4_t v27 = v76;
    if (v76 >> 62)
    {
      swift_bridgeObjectRetain_n();
      id v47 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      a1 = v18;
      if (!v47) {
        goto LABEL_47;
      }
    }
    else
    {
      id v47 = *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      a1 = v18;
      if (!v47) {
        goto LABEL_47;
      }
    }
    uint64_t v2 = ++v4 == a1;
    float32x4_t v30 = v47 - 1;
    if (__OFSUB__(v47, 1)) {
      goto LABEL_79;
    }
  }
  if (!qword_1004F7FF0) {
    goto LABEL_114;
  }
  uint64_t v4 = v76;
  id v48 = v76 >> 62;
  id v3 = v68;
  unint64_t v14 = (unint64_t)v69;
  if (!(v76 >> 62))
  {
    char v49 = *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v49) {
      goto LABEL_53;
    }
LABEL_96:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_97;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  char v49 = _CocoaArrayWrapper.endIndex.getter();
  if (!v49) {
    goto LABEL_96;
  }
LABEL_53:
  uint64_t v50 = v49 - 1;
  if (__OFSUB__(v49, 1))
  {
LABEL_97:
    __break(1u);
LABEL_98:
    uint64_t v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_58:
    uint64_t v2 = (uint64_t)v51;
    swift_bridgeObjectRelease();
    if (v48) {
      goto LABEL_101;
    }
    uint64_t v52 = *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v52) {
      goto LABEL_60;
    }
LABEL_102:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_103:
    uint64_t v53 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_63:
    uint64_t v54 = v53;
    unint64_t v55 = swift_bridgeObjectRelease();
    uint64_t v56 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v54) + 0x250))(v55);

    if ((v56 & 0xC000000000000001) != 0) {
      goto LABEL_105;
    }
    if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      unint64_t v57 = *(id *)(v56 + 32);
      goto LABEL_66;
    }
    __break(1u);
    goto LABEL_107;
  }
  a1 = v76 & 0xC000000000000001;
  if ((v76 & 0xC000000000000001) != 0) {
    goto LABEL_98;
  }
  if ((v50 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v50 < *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v51 = *(id *)(v76 + 8 * v50 + 32);
    goto LABEL_58;
  }
  __break(1u);
LABEL_101:
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_102;
  }
LABEL_60:
  if (a1) {
    goto LABEL_103;
  }
  if (*(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v53 = *(id *)(v76 + 32);
    goto LABEL_63;
  }
  __break(1u);
LABEL_105:
  unint64_t v57 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_66:
  uint64_t v58 = v57;
  swift_bridgeObjectRelease();
  sub_100123D44(v2, 0, v58, 0);

  swift_release();
  if (!v48)
  {
    uint64_t v59 = *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v59) {
      goto LABEL_68;
    }
LABEL_108:
    swift_bridgeObjectRelease();
    sub_10016BBBC(v76, v70);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_107:
  swift_bridgeObjectRetain();
  uint64_t v59 = _CocoaArrayWrapper.endIndex.getter();
  if (!v59) {
    goto LABEL_108;
  }
LABEL_68:
  if (v59 >= 1)
  {
    uint64_t v2 = 0;
    uint64_t v18 = (uint64_t)&swift_isaMask;
    do
    {
      if (a1) {
        uint64_t v60 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v60 = *(id *)(v76 + 8 * v2 + 32);
      }
      id v61 = v60;
      id v62 = (*(uint64_t (**)(void))((swift_isaMask & *v60) + 0x250))();
      if ((v62 & 0xC000000000000001) != 0)
      {
        unint64_t v63 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_84;
        }
        unint64_t v63 = *(id *)(v62 + 32);
      }
      char v64 = v63;
      ++v2;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))((swift_isaMask & *v64) + 0x2F8))(1);

      uint64_t v65 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v61) + 0x268))();
      (*(void (**)(uint64_t))((swift_isaMask & *v65) + 0x2F8))(2);
    }
    while (v59 != v2);
    goto LABEL_108;
  }
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
}

uint64_t sub_1001692E0(void *a1)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD0))();
  if (result != 6)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v3 = result;
      swift_retain();
      sub_10016561C(a1, (uint64_t)sub_10016B214, v3);
      return swift_release_n();
    }
  }
  return result;
}

uint64_t sub_1001693A4(void *a1)
{
  if ((*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD0))() == 5) {
    goto LABEL_2;
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  char v2 = Strong;
  if (!Strong) {
    return v2 & 1;
  }
  uint64_t v4 = sub_100164B94();
  uint64_t v6 = v5;
  uint64_t v7 = swift_release();
  if (!v6)
  {
LABEL_2:
    char v2 = 0;
  }
  else
  {
    if (v4 == (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xB8))(v7) && v6 == v8) {
      char v2 = 1;
    }
    else {
      char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

BOOL sub_1001694E0(double a1, double a2)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    BOOL v4 = sub_10016D9FC(a1, a2);
    swift_release();
  }
  else
  {
    return 0;
  }
  return v4;
}

uint64_t sub_100169560(void *a1)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD0))();
  if (result != 5)
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      BOOL v4 = *(uint64_t (**)(unsigned char *))(**(void **)(Strong + 176) + 400);
      swift_retain();
      uint64_t v5 = (void (*)(unsigned char *, void))v4(v8);
      uint64_t v6 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8))();
      sub_100030354(v6, v7);
      swift_bridgeObjectRelease();
      v5(v8, 0);
      swift_release();
      swift_release();
    }
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_10016343C(a1);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1001696FC(void *a1)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD0))();
  if (result == 5)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8))();
      sub_100163A2C(v3, v4, (void *)9);
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1001697E0(void *a1)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD0))();
  if (result == 9)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8))();
      sub_100163A2C(v3, v4, (void *)5);
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1001698C4(void *a1)
{
  char v2 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD0);
  if (v2() != 9 || (uint64_t result = v2(), result != 1))
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v5 = *(uint64_t (**)(unsigned char *))(**(void **)(Strong + 176) + 400);
      swift_retain();
      uint64_t v6 = (void (*)(unsigned char *, void))v5(v9);
      uint64_t v7 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8))();
      sub_100030354(v7, v8);
      swift_bridgeObjectRelease();
      v6(v9, 0);
      swift_release();
      swift_release();
    }
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_100169A78(a1);
      return swift_release();
    }
  }
  return result;
}

void *sub_100169A78(void *a1)
{
  char v2 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8);
  uint64_t v3 = v2();
  uint64_t v5 = v4;
  swift_beginAccess();
  uint64_t v76 = v1;
  uint64_t v6 = *(void *)(v1 + 216);
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_1000E20D4(v3, v5), (v8 & 1) != 0))
  {
    uint64_t v9 = *(void **)(*(void *)(v6 + 56) + 8 * v7);
    swift_endAccess();
    uint64_t v10 = v9;
    uint64_t v11 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))((swift_isaMask & *v10) + 0x2D8))(v11);
  }
  else
  {
    swift_endAccess();
    uint64_t v12 = swift_bridgeObjectRelease();
  }
  uint64_t v83 = ((uint64_t (*)(uint64_t))v2)(v12);
  uint64_t v84 = v13;
  swift_beginAccess();
  sub_100012894(&qword_1004CDF28);
  OrderedDictionary.removeValue(forKey:)();
  swift_endAccess();
  swift_bridgeObjectRelease();

  unint64_t v14 = *(uint64_t (**)(unsigned char *))(**(void **)(v76 + 176) + 400);
  swift_retain();
  unint64_t v15 = (void (*)(unsigned char *, void))v14(v82);
  uint64_t v16 = v2();
  sub_100030354(v16, v17);
  swift_bridgeObjectRelease();
  v15(v82, 0);
  uint64_t v18 = swift_release();
  unint64_t v19 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x248))(v18);
  unint64_t v20 = v19;
  if (v19 >> 62)
  {
LABEL_32:
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    if (v21) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v21 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v21)
    {
LABEL_7:
      unint64_t v78 = v20;
      unint64_t v80 = v20 & 0xC000000000000001;
      uint64_t v22 = 4;
      do
      {
        if (v80) {
          uint64_t result = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t result = *(id *)(v20 + 8 * v22);
        }
        uint64_t v25 = result;
        uint64_t v26 = v22 - 3;
        if (__OFADD__(v22 - 4, 1))
        {
          __break(1u);
          goto LABEL_32;
        }
        if (qword_1004C29D8 != -1) {
          uint64_t result = (void *)swift_once();
        }
        uint64_t v27 = qword_1004F7FF0;
        if (!qword_1004F7FF0)
        {
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
          return result;
        }
        uint64_t v28 = v21;
        uint64_t v29 = *(uint64_t (**)(void))((swift_isaMask & *v25) + 0xB8);
        swift_retain();
        float32x4_t v30 = v25;
        uint64_t v31 = v29();
        uint64_t v33 = v32;

        swift_beginAccess();
        uint64_t v34 = *(void *)(v27 + 96);
        if (*(void *)(v34 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v35 = sub_1000E20D4(v31, v33);
          if (v36)
          {
            uint64_t v37 = *(void **)(*(void *)(v34 + 56) + 8 * v35);
            swift_endAccess();
            unint64_t v38 = v37;
            swift_bridgeObjectRelease();
            sub_1001257A8(v38, 0, 1uLL);
            if (([self jasperAvailable] & 1) == 0) {
              goto LABEL_30;
            }
            if (qword_1004C2D00 != -1) {
              swift_once();
            }
            if (byte_1004F8530 & 1) != 0 && ((*(uint64_t (**)(void))((swift_isaMask & *v38) + 0x2C8))())
            {
              uint64_t v72 = *(uint64_t (**)(unsigned char *))(**(void **)(v27 + 136) + 400);
              swift_retain();
              id v73 = (void (*)(unsigned char *, void))v72(v82);
              uint64_t v40 = v39;
              swift_bridgeObjectRetain();
              unint64_t v70 = sub_1000E20D4(v31, v33);
              char v42 = v41;
              swift_bridgeObjectRelease();
              if (v42)
              {
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v44 = *(void *)(v40 + 32);
                uint64_t v83 = v44;
                *(void *)(v40 + 32) = 0x8000000000000000;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  sub_1000D82D0();
                  uint64_t v44 = v83;
                }
                swift_bridgeObjectRelease();
                sub_1000A957C(v70, v44);
                *(void *)(v40 + 32) = v44;
                swift_bridgeObjectRelease();
              }
              v73(v82, 0);

              swift_release();
              swift_bridgeObjectRelease();

              swift_release();
            }
            else
            {
LABEL_30:

              swift_release();
              swift_bridgeObjectRelease();
            }
            goto LABEL_10;
          }
          swift_bridgeObjectRelease();
        }
        swift_endAccess();

        swift_release();
        swift_bridgeObjectRelease();
LABEL_10:
        ++v22;
        uint64_t v21 = v28;
        BOOL v23 = v26 == v28;
        unint64_t v20 = v78;
      }
      while (!v23);
    }
  }
  uint64_t v45 = swift_bridgeObjectRelease();
  unint64_t v46 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x230))(v45);
  unint64_t v47 = v46;
  if (v46 >> 62) {
    goto LABEL_60;
  }
  uint64_t v48 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v48)
  {
LABEL_35:
    unint64_t v79 = v47;
    unint64_t v81 = v47 & 0xC000000000000001;
    uint64_t v49 = 4;
    do
    {
      if (v81) {
        uint64_t result = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t result = *(id *)(v47 + 8 * v49);
      }
      uint64_t v50 = result;
      uint64_t v51 = v49 - 3;
      if (__OFADD__(v49 - 4, 1))
      {
        __break(1u);
LABEL_60:
        uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
        if (!v48) {
          break;
        }
        goto LABEL_35;
      }
      if (qword_1004C29D8 != -1) {
        uint64_t result = (void *)swift_once();
      }
      uint64_t v52 = qword_1004F7FF0;
      if (!qword_1004F7FF0) {
        goto LABEL_66;
      }
      uint64_t v53 = v48;
      uint64_t v54 = *(uint64_t (**)(void))((swift_isaMask & *v50) + 0xB8);
      swift_retain();
      unint64_t v55 = v50;
      uint64_t v56 = v54();
      uint64_t v58 = v57;

      swift_beginAccess();
      uint64_t v59 = *(void *)(v52 + 96);
      if (*(void *)(v59 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v60 = sub_1000E20D4(v56, v58);
        if (v61)
        {
          id v62 = *(void **)(*(void *)(v59 + 56) + 8 * v60);
          swift_endAccess();
          unint64_t v63 = v62;
          swift_bridgeObjectRelease();
          sub_1001257A8(v63, 0, 1uLL);
          if (([self jasperAvailable] & 1) == 0) {
            goto LABEL_58;
          }
          if (qword_1004C2D00 != -1) {
            swift_once();
          }
          if (byte_1004F8530 & 1) != 0 && ((*(uint64_t (**)(void))((swift_isaMask & *v63) + 0x2C8))())
          {
            uint64_t v74 = *(uint64_t (**)(unsigned char *))(**(void **)(v52 + 136) + 400);
            swift_retain();
            BOOL v75 = (void (*)(unsigned char *, void))v74(v82);
            uint64_t v65 = v64;
            swift_bridgeObjectRetain();
            unint64_t v71 = sub_1000E20D4(v56, v58);
            char v67 = v66;
            swift_bridgeObjectRelease();
            if (v67)
            {
              char v68 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v69 = *(void *)(v65 + 32);
              uint64_t v83 = v69;
              *(void *)(v65 + 32) = 0x8000000000000000;
              if ((v68 & 1) == 0)
              {
                sub_1000D82D0();
                uint64_t v69 = v83;
              }
              swift_bridgeObjectRelease();
              sub_1000A957C(v71, v69);
              *(void *)(v65 + 32) = v69;
              swift_bridgeObjectRelease();
            }
            v75(v82, 0);

            swift_release();
            swift_bridgeObjectRelease();

            swift_release();
          }
          else
          {
LABEL_58:

            swift_release();
            swift_bridgeObjectRelease();
          }
          goto LABEL_38;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();

      swift_release();
      swift_bridgeObjectRelease();
LABEL_38:
      ++v49;
      uint64_t v48 = v53;
      BOOL v23 = v51 == v53;
      unint64_t v47 = v79;
    }
    while (!v23);
  }
  uint64_t result = (void *)swift_bridgeObjectRelease();
  if (qword_1004C29D8 != -1) {
    uint64_t result = (void *)swift_once();
  }
  if (!qword_1004F8010) {
    goto LABEL_67;
  }
  swift_retain();
  sub_1000DE394(a1);
  swift_release();
  return (void *)sub_100190EA0(a1);
}

id *sub_10016A4C4(uint64_t a1, void *a2)
{
  void (*v5)(uint64_t *__return_ptr);
  id v6;
  uint64_t v7;
  id *v8;
  uint64_t v9[38];
  uint64_t __src[38];
  unsigned char __dst[304];
  unsigned char v12[32];
  long long v13;
  char v14;

  swift_beginAccess();
  uint64_t result = (id *)swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void (**)(uint64_t *__return_ptr))((swift_isaMask & *a2) + 0x260);
    uint64_t v6 = result[12];
    v5(v9);
    sub_100016FEC((uint64_t)v9, (uint64_t)__src, &qword_1004CCE98);
    uint64_t result = (id *)sub_10014CD80(__src);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      memcpy(__dst, __src, sizeof(__dst));
      sub_10014CDA4(v9);
      sub_100016FEC((uint64_t)&__dst[112], (uint64_t)v12, &qword_1004CCEA0);
      uint64_t result = (id *)sub_100016FEC((uint64_t)v12, (uint64_t)&v13, &qword_1004CCEA0);
      if ((v14 & 1) == 0)
      {
        SCNVector3.init(_:)();
        [v6 projectPoint:];

        unint64_t v7 = qword_1004C3238;
        uint64_t result = (id *)v4[12];
        char v8 = result;
        if (v7 != -1) {
          uint64_t result = (id *)swift_once();
        }
        if ((*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80) & 1) == 0)
        {

          CGRect.center.getter();
          static CGPoint.- infix(_:_:)();
          CGPoint.length()();
          return (id *)swift_release();
        }
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
  return result;
}

uint64_t sub_10016A6DC(uint64_t a1, void *a2)
{
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  sub_100016F7C((uint64_t)__dst);
  SCNMatrix4.init(_:)();
  uint64_t v3 = SCNMatrix4.forward.getter();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))((swift_isaMask & *a2) + 0x260))(v6, v3);
  sub_100016FEC((uint64_t)v6, (uint64_t)v7, &qword_1004CCE98);
  uint64_t result = sub_10014CD80(v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    memcpy(__src, v7, 0x130uLL);
    sub_10014CDA4(v6);
    sub_100016FEC((uint64_t)&__src[112], (uint64_t)v8, &qword_1004CCEA0);
    uint64_t result = sub_100016FEC((uint64_t)v8, (uint64_t)&v9, &qword_1004CCEA0);
    if ((v10 & 1) == 0) {
      return SCNMatrix4.position.getter();
    }
  }
  __break(1u);
  return result;
}

double sub_10016A864()
{
  return 0.33;
}

uint64_t sub_10016A870(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v19[0] - 8);
  uint64_t result = __chkstk_darwin(v19[0]);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1004C29D8 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v13 = (void *)*((void *)&xmmword_1004F8000 + 1);
  if (*((void *)&xmmword_1004F8000 + 1))
  {
    unint64_t v14 = (void *)Contexts.PrivateQueue.init(_:)();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a2;
    *(void *)(v15 + 24) = a3;
    aBlock[4] = sub_10016D8D8;
    void aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100049AB4;
    aBlock[3] = &unk_10048FC38;
    uint64_t v16 = _Block_copy(aBlock);
    id v17 = v13;
    swift_retain();
    id v18 = a3;
    static DispatchQoS.unspecified.getter();
    v19[1] = _swiftEmptyArrayStorage;
    sub_10016DC20((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100012894((uint64_t *)&unk_1004C68E0);
    sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, void))(v9 + 8))(v12, v19[0]);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t *sub_10016AB84(uint64_t isStackAllocationSafe)
{
  char v2 = (unint64_t *)isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_10016ACDC((unint64_t *)((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, (uint64_t)v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    char v2 = sub_10016ACDC((unint64_t *)v7, v4, (uint64_t)v2);
    swift_slowDealloc();
  }
  return v2;
}

unint64_t *sub_10016ACDC(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10) {
      return (unint64_t *)sub_1001B4544(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      int64_t v5 = v13 + 1;
      if (v13 + 1 >= v10) {
        return (unint64_t *)sub_1001B4544(result, a2, v4, a3);
      }
      unint64_t v14 = *(void *)(v6 + 8 * v5);
      if (!v14)
      {
        int64_t v5 = v13 + 2;
        if (v13 + 2 >= v10) {
          return (unint64_t *)sub_1001B4544(result, a2, v4, a3);
        }
        unint64_t v14 = *(void *)(v6 + 8 * v5);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    if (*(void *)(*(void *)(*(void *)(a3 + 56) + 8 * v12) + 16) >= 2uLL)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1001B4544(result, a2, v4, a3);
      }
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v10) {
    return (unint64_t *)sub_1001B4544(result, a2, v4, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v10) {
      return (unint64_t *)sub_1001B4544(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10016AE30(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v7 = 4;
    while (1)
    {
      uint64_t v8 = (a1 & 0xC000000000000001) != 0
         ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v7);
      unint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      if ((*(uint64_t (**)(void))((swift_isaMask & *v8) + 0xB8))() == a2 && v11 == a3)
      {
        swift_bridgeObjectRelease();

        char v13 = 1;
        goto LABEL_20;
      }
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        ++v7;
        if (v10 != v6) {
          continue;
        }
      }
      goto LABEL_20;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  char v13 = 0;
LABEL_20:
  swift_bridgeObjectRelease();
  return v13 & 1;
}

void *sub_10016AFB0(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v5 = *(void *)(a2 + 72);
    uint64_t v6 = 4;
    while (1)
    {
      a2 = v6 - 4;
      id v7 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(a2, 1)) {
        break;
      }
      id v10 = [v7 node];
      id v11 = *(id *)(v5 + 56);
      Swift::Bool v12 = SCNNode.isDecendent(of:)((SCNNode)v11);

      if (v12)
      {
        swift_bridgeObjectRelease();
        return v8;
      }

      ++v6;
      if (v9 == v4) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_10016B10C()
{
  sub_100162DAC();

  sub_100164F44();
}

unsigned __int8 *sub_10016B134(unsigned __int8 *a1)
{
  return sub_100162B50(a1, v1);
}

uint64_t sub_10016B140(uint64_t a1)
{
  return a1;
}

void sub_10016B178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10016B1F0()
{
  return sub_100165E50(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_10016B1FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10016B20C()
{
  return swift_release();
}

uint64_t sub_10016B214(uint64_t result)
{
  return sub_100165D54(result);
}

uint64_t sub_10016B21C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10016B270(uint64_t a1)
{
  *(void *)a1 = 1;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(void *)(a1 + 296) = 0;
  *(_OWORD *)(a1 + 8) = 0u;
  uint64_t result = a1 + 8;
  *(_OWORD *)(result + 256) = 0u;
  *(_OWORD *)(result + 272) = 0u;
  return result;
}

uint64_t sub_10016B2F0(uint64_t *a1)
{
  return sub_100161328(*a1);
}

uint64_t sub_10016B2F8(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    unint64_t v2 = 0;
    uint64_t v22 = result + 32;
    unint64_t v20 = _swiftEmptyArrayStorage;
    unint64_t v21 = *(void *)(result + 16);
LABEL_3:
    if (v2 <= v1) {
      unint64_t v3 = v1;
    }
    else {
      unint64_t v3 = v2;
    }
    unint64_t v23 = v3;
    while (1)
    {
      if (v2 == v23)
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      uint64_t result = (uint64_t)memcpy(__dst, (const void *)(v22 + 304 * v2), 0x130uLL);
      if (!__dst[0]) {
        goto LABEL_33;
      }
      ++v2;
      uint64_t v4 = *(void *)(__dst[0] + 16);
      if (v4) {
        break;
      }
LABEL_9:
      if (v2 == v1) {
        return (uint64_t)v20;
      }
    }
    type metadata accessor for MeasureCamera();
    sub_1000DBFA4((uint64_t)__dst);
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      swift_retain();
      StateValue.wrappedValue.getter();
      swift_release();
      memcpy(v26, __src, sizeof(v26));
      sub_100016F7C((uint64_t)v26);
      swift_retain();
      StateValue.wrappedValue.getter();
      swift_release();
      memcpy(v27, __src, sizeof(v27));
      sub_100016F7C((uint64_t)v27);
      uint64_t result = static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
      if (qword_1004C3238 != -1)
      {
        float v24 = v7;
        uint64_t result = swift_once();
        float v7 = v24;
      }
      uint64_t v8 = (double *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits);
      if (*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80)) {
        break;
      }
      if (v7 > 0.0)
      {
        CGFloat v10 = v8[8];
        CGFloat v9 = v8[9];
        CGFloat v12 = v8[6];
        CGFloat v11 = v8[7];
        CGPoint.init(_:)();
        v30.x = v13;
        v30.y = v14;
        v31.origin.x = v12;
        v31.origin.y = v11;
        v31.size.width = v10;
        v31.size.height = v9;
        uint64_t result = CGRectContainsPoint(v31, v30);
        if (result)
        {
          if (__OFADD__(v6++, 1))
          {
            __break(1u);
            goto LABEL_31;
          }
        }
      }
      if (v4 - 1 == v5)
      {
        swift_bridgeObjectRelease();
        if (v6 != 4)
        {
          uint64_t result = sub_10016B21C((uint64_t)__dst);
          unint64_t v1 = v21;
          goto LABEL_9;
        }
        uint64_t v16 = v20;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v29 = v20;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000BBFE4(0, v20[2] + 1, 1);
          uint64_t v16 = v29;
        }
        unint64_t v19 = v16[2];
        unint64_t v18 = v16[3];
        if (v19 >= v18 >> 1)
        {
          sub_1000BBFE4((char *)(v18 > 1), v19 + 1, 1);
          uint64_t v16 = v29;
        }
        v16[2] = v19 + 1;
        unint64_t v20 = v16;
        uint64_t result = (uint64_t)memcpy(&v16[38 * v19 + 4], __dst, 0x130uLL);
        unint64_t v1 = v21;
        if (v2 != v21) {
          goto LABEL_3;
        }
        return (uint64_t)v20;
      }
      ++v5;
    }
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  else
  {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_10016B614(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v26 = (unint64_t *)result;
  uint64_t v27 = 0;
  int64_t v5 = 0;
  uint64_t v8 = *(void *)(a3 + 64);
  uint64_t v6 = a3 + 64;
  uint64_t v7 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v7;
  uint64_t v28 = v6;
  int64_t v29 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    unint64_t v12 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v13 = v12 | (v5 << 6);
LABEL_18:
    memcpy(__dst, (const void *)(*(void *)(a3 + 56) + 304 * v13), sizeof(__dst));
    id v17 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a4) + 0x2C0);
    uint64_t v18 = sub_1000DBFA4((uint64_t)__dst);
    uint64_t v19 = *(void *)v17(v18);
    (*(void (**)(void))(v19 + 368))();
    swift_release();
    simd_float4x4.position.getter();
    float32x4_t v32 = v20;
    sub_100016FEC((uint64_t)&__dst[112], (uint64_t)v34, &qword_1004CCEA0);
    uint64_t result = sub_100016FEC((uint64_t)v34, (uint64_t)&v36, &qword_1004CCEA0);
    if (v37) {
      goto LABEL_34;
    }
    float32x4_t v31 = v36;
    sub_100016FEC((uint64_t)&__dst[228], (uint64_t)v35, &qword_1004C74C8);
    uint64_t result = sub_100016FEC((uint64_t)v35, (uint64_t)&v38, &qword_1004C74C8);
    if (v39) {
      goto LABEL_33;
    }
    float32x4_t v21 = vsubq_f32(v32, v31);
    float32x4_t v22 = vmulq_f32(v21, v21);
    if (v38 < sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v22, 2), vaddq_f32(v22, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v22.f32, 1))).f32[0]))
    {
      uint64_t result = sub_10016B21C((uint64_t)__dst);
    }
    else
    {
      uint64_t v23 = ((uint64_t (*)(uint64_t, float))v17)(result, v38);
      (*(void (**)(uint64_t))(*(void *)v23 + 368))(v23);
      swift_release();
      simd_float4x4.position.getter();
      char v24 = static WorldRectangleData.pointLiesWithinRectangle(point:rectangle:pointsCoplanar:)();
      uint64_t result = sub_10016B21C((uint64_t)__dst);
      if (v24)
      {
        *(unint64_t *)((char *)v26 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        BOOL v14 = __OFADD__(v27++, 1);
        if (v14) {
          goto LABEL_32;
        }
      }
    }
  }
  BOOL v14 = __OFADD__(v5++, 1);
  if (v14)
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v5 >= v29) {
    return sub_1001B42B0(v26, a2, v27, a3);
  }
  unint64_t v15 = *(void *)(v28 + 8 * v5);
  if (v15)
  {
LABEL_17:
    unint64_t v11 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
    goto LABEL_18;
  }
  int64_t v16 = v5 + 1;
  if (v5 + 1 >= v29) {
    return sub_1001B42B0(v26, a2, v27, a3);
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v5 + 2;
  if (v5 + 2 >= v29) {
    return sub_1001B42B0(v26, a2, v27, a3);
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v5 + 3;
  if (v5 + 3 >= v29) {
    return sub_1001B42B0(v26, a2, v27, a3);
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
LABEL_16:
    int64_t v5 = v16;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v29) {
      return sub_1001B42B0(v26, a2, v27, a3);
    }
    unint64_t v15 = *(void *)(v28 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_17;
    }
  }
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_10016B9BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  char v7 = *(unsigned char *)(a1 + 32);
  unsigned int v8 = v7 & 0x3F;
  unint64_t v9 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v10 = 8 * v9;
  swift_retain_n();
  uint64_t isStackAllocationSafe = a3;
  unint64_t v12 = (void *)isStackAllocationSafe;
  if (v8 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    unint64_t v13 = (char *)&v19 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v13, v10);
    swift_retain();
    BOOL v14 = v12;
    uint64_t v15 = sub_10016B614((uint64_t)v13, v9, a1, v14);
    swift_release();

    if (v4) {
      swift_willThrow();
    }

    swift_release();
  }
  else
  {
    int64_t v16 = (void *)swift_slowAlloc();
    bzero(v16, v10);
    swift_retain();
    id v17 = v12;
    uint64_t v15 = sub_10016B614((uint64_t)v16, v9, a1, v17);
    swift_release();

    swift_slowDealloc();
    swift_release();
  }

  swift_release();
  return v15;
}

uint64_t sub_10016BBBC(unint64_t a1, uint64_t a2)
{
  void (*v68)(uint64_t *__return_ptr, uint64_t);
  Swift::String v69;
  uint64_t v70;
  Swift::String v71;
  Swift::String v72;
  uint64_t v73;
  char *v74;
  uint64_t v76;
  id v78;
  Swift::String v79;
  uint64_t v80[38];
  uint64_t v81[38];
  uint64_t v82[38];
  Swift::String v83[19];
  uint64_t __src[38];
  Swift::String __dst[19];
  char v86[8];
  char v87[8];
  uint64_t v88;
  uint64_t v89;

  unint64_t v2 = a1;
  char v3 = 0;
  unint64_t v4 = 0;
  unint64_t v5 = a1 & 0xC000000000000001;
  uint64_t v6 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v7 = a1 + 32;
  while (1)
  {
    char v8 = v3;
    if (v5)
    {
      unint64_t v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v4 >= *(void *)(v6 + 16))
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        swift_bridgeObjectRetain();
        uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
        if (!v36) {
          goto LABEL_30;
        }
LABEL_21:
        uint64_t result = self;
        if (v36 >= 1)
        {
          char v37 = (void *)result;
          uint64_t v38 = 0;
          do
          {
            if (v5) {
              char v39 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              char v39 = *(id *)(v2 + 8 * v38 + 32);
            }
            uint64_t v40 = v39;
            ++v38;
            (*(void (**)(void))((swift_isaMask & *v39) + 0x340))();
            id v41 = [v37 standardUserDefaults];
            Defaults.measurementBias.unsafeMutableAddressor();
            swift_bridgeObjectRetain();
            NSString v42 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v41 floatForKey:v42];

            __dst[0]._uint64_t countAndFlagsBits = 0;
            __dst[0]._object = (void *)0xE000000000000000;
            _StringGuts.grow(_:)(34);
            v43._uint64_t countAndFlagsBits = 0xD000000000000010;
            v43._object = (void *)0x8000000100428E70;
            String.append(_:)(v43);
            uint64_t v44 = *(uint64_t (**)(void))((swift_isaMask & *v40) + 0xB8);
            uint64_t v45 = v40;
            uint64_t v46 = v44();
            uint64_t v48 = v47;

            v49._uint64_t countAndFlagsBits = v46;
            v49._object = v48;
            String.append(_:)(v49);
            swift_bridgeObjectRelease();
            v50._uint64_t countAndFlagsBits = 0x656C206874697720;
            v50._object = (void *)0xEE00203A6874676ELL;
            String.append(_:)(v50);
            Float.write<A>(to:)();
            v51._uint64_t countAndFlagsBits = 0;
            v51._object = (void *)0xE000000000000000;
            String.append(_:)(v51);

            swift_bridgeObjectRelease();
            unint64_t v2 = a1;
          }
          while (v36 != v38);
          goto LABEL_30;
        }
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
      unint64_t v9 = *(id *)(v7 + 8 * v4);
    }
    size_t v10 = v9;
    (*(void (**)(void))((swift_isaMask & *v9) + 0x268))();

    unint64_t v11 = v4 | 2;
    if (v5)
    {
      unint64_t v12 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v11 >= *(void *)(v6 + 16)) {
        goto LABEL_28;
      }
      unint64_t v12 = *(id *)(v7 + 8 * v11);
    }
    unint64_t v13 = v12;
    (*(void (**)(void))((swift_isaMask & *v12) + 0x268))();

    id v14 = objc_allocWithZone((Class)type metadata accessor for WorldLine());
    uint64_t v15 = (void *)WorldLine.init(end1:end2:initialState:)();
    int64_t v16 = *(void (**)(uint64_t))((swift_isaMask & *v15) + 0xD8);
    id v17 = v15;
    v16(1);

    uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v17) + 0x2D0))(0);
    if (qword_1004C29D8 != -1) {
      uint64_t result = swift_once();
    }
    if (!qword_1004F7FF0) {
      goto LABEL_51;
    }
    swift_retain();
    char v19 = sub_1001238E0(v17, 0);
    uint64_t v20 = swift_release();
    unint64_t v2 = a1;
    if ((v19 & 1) == 0) {
      break;
    }
    float32x4_t v21 = *(uint64_t (**)(void))((swift_isaMask & *v17) + 0x268);
    float32x4_t v22 = (void *)((uint64_t (*)(uint64_t))v21)(v20);
    (*(void (**)(uint64_t))((swift_isaMask & *v22) + 0xD8))(1);

    uint64_t v23 = (void *)v21();
    (*(void (**)(uint64_t))((swift_isaMask & *v23) + 0x2F8))(2);

    char v24 = v17;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    char v3 = 1;
    unint64_t v4 = 1;
    if (v8) {
      goto LABEL_19;
    }
  }

LABEL_19:
  id v25 = objc_allocWithZone((Class)type metadata accessor for WorldRectangle());
  sub_1000DBFA4(a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = (void *)WorldRectangle.init(data:edges:splitters:)();
  uint64_t v27 = *(uint64_t (**)(void))((swift_isaMask & *v26) + 0xB8);
  v83[0]._uint64_t countAndFlagsBits = (uint64_t)v26;
  __src[0] = v27();
  __src[1] = v28;
  swift_beginAccess();
  int64_t v29 = v26;
  sub_100012894(&qword_1004CDF28);
  OrderedDictionary.subscript.setter();
  swift_endAccess();
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease();
  __dst[0]._uint64_t countAndFlagsBits = 0xD000000000000011;
  __dst[0]._object = (void *)0x8000000100428E50;
  CGPoint v30 = v29;
  uint64_t v31 = v27();
  uint64_t v33 = v32;

  v34._uint64_t countAndFlagsBits = v31;
  v34._object = v33;
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  v35._uint64_t countAndFlagsBits = 0x6C2068746977202CLL;
  v35._object = (void *)0xEE00203A73656E69;
  String.append(_:)(v35);
  v79._uint64_t countAndFlagsBits = 0xD000000000000011;
  v79._object = (void *)0x8000000100428E50;
  uint64_t v74 = (char *)v30;
  if (a1 >> 62) {
    goto LABEL_29;
  }
  uint64_t v36 = *(void *)(v6 + 16);
  swift_bridgeObjectRetain();
  if (v36) {
    goto LABEL_21;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
    if (!v52) {
      goto LABEL_39;
    }
LABEL_32:
    uint64_t result = self;
    unint64_t v78 = (id)result;
    if (v52 >= 1)
    {
      uint64_t v53 = 0;
      do
      {
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
          uint64_t v54 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v54 = (id)_swiftEmptyArrayStorage[v53 + 4];
        }
        unint64_t v55 = v54;
        ++v53;
        (*(void (**)(void))((swift_isaMask & *v54) + 0x340))();
        id v56 = [v78 standardUserDefaults];
        Defaults.measurementBias.unsafeMutableAddressor();
        swift_bridgeObjectRetain();
        NSString v57 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v56 floatForKey:v57];

        __dst[0]._uint64_t countAndFlagsBits = 0;
        __dst[0]._object = (void *)0xE000000000000000;
        _StringGuts.grow(_:)(34);
        v58._uint64_t countAndFlagsBits = 0xD000000000000010;
        v58._object = (void *)0x8000000100428E90;
        String.append(_:)(v58);
        uint64_t v59 = *(uint64_t (**)(void))((swift_isaMask & *v55) + 0xB8);
        unint64_t v60 = v55;
        uint64_t v61 = v59();
        unint64_t v63 = v62;

        v64._uint64_t countAndFlagsBits = v61;
        v64._object = v63;
        String.append(_:)(v64);
        swift_bridgeObjectRelease();
        v65._uint64_t countAndFlagsBits = 0x656C206874697720;
        v65._object = (void *)0xEE00203A6874676ELL;
        String.append(_:)(v65);
        Float.write<A>(to:)();
        v66._uint64_t countAndFlagsBits = 0;
        v66._object = (void *)0xE000000000000000;
        String.append(_:)(v66);

        swift_bridgeObjectRelease();
      }
      while (v52 != v53);
      goto LABEL_39;
    }
    goto LABEL_50;
  }
  uint64_t v52 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v52) {
    goto LABEL_32;
  }
LABEL_39:
  swift_bridgeObjectRelease();
  __dst[0]._uint64_t countAndFlagsBits = 0;
  __dst[0]._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(33);
  uint64_t v67 = swift_bridgeObjectRelease();
  v83[0]._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v83[0]._object = (void *)0x8000000100428EB0;
  char v68 = *(void (**)(uint64_t *__return_ptr, uint64_t))((swift_isaMask & *(void *)v74) + 0x260);
  v68(v80, v67);
  sub_100016FEC((uint64_t)v80, (uint64_t)__src, &qword_1004CCE98);
  uint64_t result = sub_10014CD80(__src);
  if (result == 1) {
    goto LABEL_52;
  }
  memcpy(__dst, __src, sizeof(__dst));
  sub_100016FEC((uint64_t)&__dst[0]._object, (uint64_t)v86, &qword_1004CDF88);
  sub_10016D4F0((uint64_t)v86);
  sub_10014CDA4(v80);
  uint64_t result = sub_100016FEC((uint64_t)v86, (uint64_t)&v89, &qword_1004CDF88);
  if (!v89)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  sub_100012894((uint64_t *)&unk_1004CEDE0);
  v69._uint64_t countAndFlagsBits = Array.description.getter();
  String.append(_:)(v69);
  swift_bridgeObjectRelease();
  sub_10008D0F0((uint64_t)v86);
  String.append(_:)(v83[0]);
  swift_bridgeObjectRelease();
  v83[0]._uint64_t countAndFlagsBits = 0;
  v83[0]._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(34);
  unint64_t v70 = swift_bridgeObjectRelease();
  v68(v81, v70);
  sub_100016FEC((uint64_t)v81, (uint64_t)v82, &qword_1004CCE98);
  uint64_t result = sub_10014CD80(v82);
  if (result == 1)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  memcpy(v83, v82, sizeof(v83));
  sub_100016FEC((uint64_t)v83, (uint64_t)v87, &qword_1004CDF88);
  sub_10016D4F0((uint64_t)v87);
  sub_10014CDA4(v81);
  uint64_t result = sub_100016FEC((uint64_t)v87, (uint64_t)&v88, &qword_1004CDF88);
  if (!v88)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  swift_bridgeObjectRelease();
  v71._uint64_t countAndFlagsBits = Array.description.getter();
  String.append(_:)(v71);
  swift_bridgeObjectRelease();
  sub_10008D0F0((uint64_t)v87);
  v72._uint64_t countAndFlagsBits = 0xD000000000000020;
  v72._object = (void *)0x8000000100428ED0;
  String.append(_:)(v72);
  swift_bridgeObjectRelease();
  if (qword_1004C2AD0 != -1) {
    swift_once();
  }
  Log.default(_:isPrivate:)(v79, 0);
  swift_bridgeObjectRelease();
  if (qword_1004C2C10 != -1) {
    swift_once();
  }
  id v73 = qword_1004F8458 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  swift_beginAccess();
  *(double *)(v73 + 24) = *(double *)(v73 + 24) + 1.0;
  (*(void (**)(uint64_t))((swift_isaMask & *(void *)v74) + 0xD8))(1);
  *(unsigned char *)(v76 + 104) = 1;
  uint64_t result = sub_100190524(v74);
  if (qword_1004F8010)
  {
    swift_retain();
    sub_1000A7E00(v74);
    swift_release();
    return (uint64_t)v74;
  }
LABEL_56:
  __break(1u);
  return result;
}

char *sub_10016C978(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    sub_100016FEC(a1 + 112, (uint64_t)v19, &qword_1004CCEA0);
    swift_bridgeObjectRetain();
    memcpy(__dst, (const void *)(a2 + 32), 0x130uLL);
    uint64_t result = (char *)sub_100016FEC((uint64_t)v19, (uint64_t)&v20, &qword_1004CCEA0);
    if ((v21 & 1) == 0)
    {
      uint64_t v6 = a1 + 228;
      unint64_t v7 = (char *)_swiftEmptyArrayStorage;
      uint64_t v8 = 336;
      while ((__dst[16] & 1) == 0)
      {
        float32x4_t v16 = v20;
        uint64_t v10 = __dst[14];
        uint64_t v9 = __dst[15];
        sub_100016FEC(v6, (uint64_t)v18, &qword_1004C74C8);
        uint64_t result = (char *)sub_100016FEC((uint64_t)v18, (uint64_t)&v22, &qword_1004C74C8);
        if (v23) {
          goto LABEL_20;
        }
        if (__dst[29]) {
          goto LABEL_21;
        }
        v11.i64[0] = v10;
        v11.i64[1] = v9;
        float32x4_t v12 = vsubq_f32(v16, v11);
        float32x4_t v13 = vmulq_f32(v12, v12);
        if (sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v13, 2), vaddq_f32(v13, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v13.f32, 1))).f32[0]) < (float)(*((float *)&__dst[28] + 1) + v22))
        {
          sub_1000DBFA4((uint64_t)__dst);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v7 = sub_10006F3E4(0, *((void *)v7 + 2) + 1, 1, v7);
          }
          unint64_t v15 = *((void *)v7 + 2);
          unint64_t v14 = *((void *)v7 + 3);
          if (v15 >= v14 >> 1) {
            unint64_t v7 = sub_10006F3E4((char *)(v14 > 1), v15 + 1, 1, v7);
          }
          *((void *)v7 + 2) = v15 + 1;
          memcpy(&v7[304 * v15 + 32], __dst, 0x130uLL);
        }
        if (!--v2)
        {
          swift_bridgeObjectRelease();
          return v7;
        }
        memcpy(__dst, (const void *)(a2 + v8), 0x130uLL);
        uint64_t result = (char *)sub_100016FEC((uint64_t)v19, (uint64_t)&v20, &qword_1004CCEA0);
        v8 += 304;
        if (v21) {
          goto LABEL_22;
        }
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
    }
LABEL_22:
    __break(1u);
  }
  else
  {
    return (char *)_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_10016CB9C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 48);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t *sub_10016CBB4(uint64_t *a1)
{
  return a1;
}

uint64_t sub_10016CFE8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a7)
  {
    uint64_t v9 = STACK[0x790];
    uint64_t v8 = STACK[0x660];
    unint64_t v7 = (void *)result;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10014CE28(v8);
    sub_10014CE28(v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10016D4F0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10016D51C(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void *)(a1 + 704);
  uint64_t v5 = *(void *)(a1 + 1008);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10014CE28(v4);
  sub_10014CE28(v5);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10016D86C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10016D8BC()
{
  return sub_10016D9A8(40);
}

uint64_t sub_10016D8C4(uint64_t a1)
{
  return sub_10016A870(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10016D8D0()
{
  return sub_10016D9A8(32);
}

void *sub_10016D8D8()
{
  return sub_100169A78(*(void **)(v0 + 24));
}

uint64_t sub_10016D900()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016D93C()
{
  return sub_1001692E0(*(void **)(v0 + 16));
}

uint64_t sub_10016D948()
{
  return sub_1001693A4(*(void **)(v0 + 16));
}

uint64_t sub_10016D950()
{
  return sub_10016D9A8(32);
}

BOOL sub_10016D958(double a1, double a2)
{
  return sub_1001694E0(a1, a2);
}

uint64_t sub_10016D964()
{
  return sub_100169560(*(void **)(v0 + 16));
}

uint64_t sub_10016D970()
{
  return sub_1001696FC(*(void **)(v0 + 16));
}

uint64_t sub_10016D97C()
{
  return sub_1001697E0(*(void **)(v0 + 16));
}

uint64_t sub_10016D988()
{
  return sub_1001698C4(*(void **)(v0 + 16));
}

uint64_t sub_10016D990()
{
  return sub_10016D9A8(32);
}

id *sub_10016D998()
{
  return sub_10016A4C4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10016D9A0()
{
  return sub_10016D9A8(32);
}

uint64_t sub_10016D9A8(uint64_t a1)
{
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_10016D9F4()
{
  return sub_10016A6DC(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

BOOL sub_10016D9FC(double a1, double a2)
{
  uint64_t v5 = *(void **)(v2 + 96);
  sub_100012894(&qword_1004CDF98);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003F8720;
  *(void *)(inited + 32) = SCNHitTestIgnoreHiddenNodesKey;
  *(unsigned char *)(inited + 40) = 0;
  *(void *)(inited + 64) = &type metadata for Bool;
  *(void *)(inited + 72) = SCNHitTestIgnoreChildNodesKey;
  *(unsigned char *)(inited + 80) = 0;
  *(void *)(inited + 120) = 1;
  *(void *)(inited + 104) = &type metadata for Bool;
  *(void *)(inited + 112) = SCNHitTestOptionSearchMode;
  *(void *)(inited + 144) = &type metadata for Int;
  *(void *)(inited + 152) = SCNHitTestRootNodeKey;
  unint64_t v7 = *(void **)(*(void *)(v2 + 72) + 56);
  *(void *)(inited + 184) = sub_10001C99C(0, &qword_1004C4028);
  *(void *)(inited + 160) = v7;
  id v8 = v5;
  uint64_t v9 = SCNHitTestIgnoreHiddenNodesKey;
  uint64_t v10 = SCNHitTestIgnoreChildNodesKey;
  float32x4_t v11 = SCNHitTestOptionSearchMode;
  float32x4_t v12 = SCNHitTestRootNodeKey;
  id v13 = v7;
  sub_1000E1A80(inited);
  type metadata accessor for SCNHitTestOption(0);
  sub_10016DC20(&qword_1004C38F8, type metadata accessor for SCNHitTestOption);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v15 = [v8 hitTest:isa options:a1];

  sub_10001C99C(0, &qword_1004CDFA0);
  unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_retain();
  id v17 = sub_10016AFB0(v16, v2);
  swift_bridgeObjectRelease();
  swift_release();
  if (v17) {

  }
  return v17 != 0;
}

uint64_t sub_10016DC20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10016DC68(uint64_t a1)
{
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for HistoryUIState(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for HistoryUIState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HistoryUIState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HistoryUIState()
{
  return &type metadata for HistoryUIState;
}

uint64_t sub_10016DD8C()
{
  uint64_t result = Contexts.UIKit.init()();
  qword_1004F8488 = result;
  return result;
}

id sub_10016DDAC@<X0>(void *a1@<X8>)
{
  if (qword_1004C2C48 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1004F8488;
  *a1 = qword_1004F8488;

  return v2;
}

BOOL sub_10016DE18(uint64_t a1, uint64_t a2)
{
  return ((*(void *)a1 != *(void *)a2) | ((*(unsigned char *)(a1 + 8) ^ *(unsigned char *)(a2 + 8)) | (*(unsigned char *)(a2 + 9) ^ *(unsigned char *)(a1 + 9))) & 1) == 0;
}

unint64_t sub_10016DE54(uint64_t a1)
{
  unint64_t result = sub_10016DE7C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10016DE7C()
{
  unint64_t result = qword_1004CDFD0;
  if (!qword_1004CDFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CDFD0);
  }
  return result;
}

void sub_10016DED0()
{
  qword_1004CDFE0 = 0;
  *(void *)algn_1004CDFE8 = 0;
}

void sub_10016DEE0()
{
  qword_1004CDFF0 = 0x3FF0000000000000;
}

double sub_10016DEF0()
{
  if (qword_1004C27D8 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1004F7DF0 + *(double *)&qword_1004F7DF0;
  *(double *)&qword_1004CDFF8 = *(double *)&qword_1004F7DF0 + *(double *)&qword_1004F7DF0;
  return result;
}

uint64_t sub_10016DF48()
{
  if (qword_1004C2820 != -1) {
    swift_once();
  }
  if (qword_1004C2C60 != -1) {
    swift_once();
  }
  id v0 = [self currentTraitCollection];
  id v1 = [v0 preferredContentSizeCategory];

  UIContentSizeCategory.isAccessibilityCategory.getter();
  type metadata accessor for CardContainerView.Configuration();
  uint64_t v2 = swift_allocObject();
  swift_beginAccess();
  Published.init(initialValue:)();
  swift_endAccess();
  swift_beginAccess();
  Published.init(initialValue:)();
  uint64_t result = swift_endAccess();
  *(void *)(v2 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration_velocityThreshold) = 0x408F400000000000;
  *(void *)(v2 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration_velocityUpperThreshold) = 0x40A7700000000000;
  qword_1004CE000 = v2;
  return result;
}

uint64_t sub_10016E14C()
{
  uint64_t v1 = type metadata accessor for SpatialPlattersHistoryItem();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  BOOL v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = v0 + qword_1004CE058;
  swift_beginAccess();
  uint64_t v6 = *(void *)(*(void *)v5 + 16);
  if (!v6) {
    goto LABEL_6;
  }
  sub_10017DBF8(*(void *)v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)), (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
  if (v6 != 1)
  {
    sub_10017E4C4((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
LABEL_6:
    BOOL v10 = 0;
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)&v4[*(int *)(v1 + 20)];
  uint64_t v8 = type metadata accessor for MeasurementHistoryItem();
  sub_100026A04((uint64_t)&v4[*(int *)(v8 + 28)], (uint64_t)v15);
  sub_10017DCD8(v15, sub_100098C10);
  sub_10017E4C4((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
  sub_100026A04((uint64_t)v15, (uint64_t)v16);
  if (sub_100026A60((uint64_t)v16))
  {
    sub_10017DCD8(v15, sub_100027F20);
    char v9 = 1;
    return v9 & 1;
  }
  BOOL v10 = v7 != 0;
  sub_100026A6C((uint64_t)v16);
  sub_10017DCD8(v15, sub_100027F20);
LABEL_7:
  unint64_t v11 = *(void *)(*(void *)v5 + 16);
  char v9 = 1;
  if (v11 <= 1 && !v10)
  {
    id v12 = [self sharedApplication];
    id v13 = [v12 preferredContentSizeCategory];

    char v9 = UIContentSizeCategory.isAccessibilityCategory.getter();
  }
  return v9 & 1;
}

double sub_10016E3B4()
{
  if (qword_1004C2820 != -1) {
    swift_once();
  }
  double v1 = *(double *)&qword_1004F7E38;
  double v2 = sub_10016E484();
  uint64_t v3 = *(void *)(v0 + qword_1004CE018);
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if (static UIDevice.isIPhone()()) {
    BOOL v4 = &OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView;
  }
  else {
    BOOL v4 = &OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView;
  }
  [*(id *)(v3 + *v4) bounds];
  return v1 + v2 + -0.5 + CGRectGetHeight(v6);
}

double sub_10016E484()
{
  uint64_t v1 = sub_100012894((uint64_t *)&unk_1004CE670);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v4 = self;
  id v5 = [v4 currentTraitCollection];
  id v6 = [v5 preferredContentSizeCategory];

  LOBYTE(v5) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v5)
  {
    id v7 = [v4 currentTraitCollection];
    id v8 = [v7 preferredContentSizeCategory];

    LOBYTE(v7) = UIContentSizeCategory.isAccessibilityCategory.getter();
    if (v7) {
      double v9 = 222.0;
    }
    else {
      double v9 = 88.0;
    }
    if (qword_1004C27E8 != -1) {
      swift_once();
    }
    return v9 + *(double *)&qword_1004F7E00;
  }
  else
  {
    if (*(unsigned char *)(v0 + qword_1004CE148 + 8))
    {
      id v11 = [v4 currentTraitCollection];
      id v12 = [v11 preferredContentSizeCategory];

      LOBYTE(v11) = UIContentSizeCategory.isAccessibilityCategory.getter();
      if (v11) {
        double v10 = 222.0;
      }
      else {
        double v10 = 88.0;
      }
    }
    else
    {
      double v10 = *(double *)(v0 + qword_1004CE148);
    }
    id v13 = (uint64_t *)(v0 + qword_1004CE058);
    swift_beginAccess();
    uint64_t v14 = *v13;
    unint64_t v15 = *(void *)(v14 + 16);
    if (v15 >= 2) {
      return v10 * 0.25 * 7.0;
    }
    if (v15 == 1)
    {
      uint64_t v16 = *(void *)(type metadata accessor for SpatialPlattersHistoryItem() - 8);
      unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      uint64_t v18 = type metadata accessor for MeasurementHistoryItem();
      sub_1000735DC(v14 + *(int *)(v18 + 24) + v17, (uint64_t)v3, (uint64_t *)&unk_1004CE670);
      uint64_t v19 = type metadata accessor for MeasurementCapture();
      LODWORD(v17) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v3, 1, v19);
      sub_10002B9C0((uint64_t)v3, (uint64_t *)&unk_1004CE670);
      if (v17 != 1) {
        return v10 * 0.25 * 7.0;
      }
    }
  }
  return v10;
}

double *sub_10016E77C()
{
  uint64_t v1 = type metadata accessor for SpatialPlattersHistoryItem();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8);
  BOOL v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MeasurementHistoryItem();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  id v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v9 = (uint64_t *)(v0 + qword_1004CE058);
  swift_beginAccess();
  uint64_t v10 = *v9;
  int64_t v11 = *(void *)(*v9 + 16);
  id v12 = _swiftEmptyArrayStorage;
  if (v11)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1000BC004(0, v11, 0);
    uint64_t v13 = v10 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v14 = *(void *)(v2 + 72);
    id v12 = v18;
    do
    {
      sub_10017DBF8(v13, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
      sub_10017DBF8((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
      sub_10017E4C4((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000BC004(0, *((void *)v12 + 2) + 1, 1);
        id v12 = v18;
      }
      unint64_t v16 = *((void *)v12 + 2);
      unint64_t v15 = *((void *)v12 + 3);
      if (v16 >= v15 >> 1)
      {
        sub_1000BC004(v15 > 1, v16 + 1, 1);
        id v12 = v18;
      }
      *((void *)v12 + 2) = v16 + 1;
      sub_10017DC60((uint64_t)v8, (uint64_t)v12+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
      v13 += v14;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_10016EA14(void *a1, void **a2, int a3, double a4, double a5, double a6, double a7)
{
  LODWORD(v100) = a3;
  id v101 = a1;
  char v102 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v99 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v97 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v98 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v95);
  uint64_t v96 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = qword_1004CE008;
  id v17 = objc_allocWithZone((Class)UIView);
  uint64_t v18 = v7;
  *(void *)&v7[v16] = [v17 init];
  uint64_t v19 = qword_1004CE020;
  uint64_t v20 = sub_100012894(&qword_1004CE600);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_1004F8630;
  char v23 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 272);
  swift_retain();
  *(void *)&v18[v19] = v23(KeyPath, v22);
  uint64_t v24 = qword_1004CE028;
  sub_100012894(&qword_1004CE608);
  swift_getKeyPath();
  *(void *)&v18[v24] = MutableStateBinding.__allocating_init(_:_:)();
  uint64_t v25 = qword_1004CE030;
  sub_100012894(&qword_1004CE610);
  swift_getKeyPath();
  *(void *)&v18[v25] = MutableStateBinding.__allocating_init(_:_:)();
  uint64_t v26 = qword_1004CE038;
  sub_100012894((uint64_t *)&unk_1004CE618);
  swift_getKeyPath();
  *(void *)&v18[v26] = MutableStateBinding.__allocating_init(_:_:)();
  uint64_t v27 = qword_1004CE040;
  uint64_t v28 = sub_100012894((uint64_t *)&unk_1004C7F20);
  uint64_t v29 = swift_getKeyPath();
  uint64_t v30 = qword_1004F8630;
  uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 272);
  swift_retain();
  *(void *)&v18[v27] = v31(v29, v30);
  uint64_t v32 = qword_1004CE048;
  sub_100012894(&qword_1004CE628);
  swift_getKeyPath();
  *(void *)&v18[v32] = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v33 = qword_1004CE050;
  sub_100012894(&qword_1004CE630);
  swift_getKeyPath();
  type metadata accessor for SpatialGenericPlatter();
  *(void *)&v18[v33] = MutableStateValue.__allocating_init(_:_:)();
  *(void *)&v18[qword_1004CE058] = _swiftEmptyArrayStorage;
  *(void *)&v18[qword_1004CE060] = &_swiftEmptySetSingleton;
  *(void *)&v18[qword_1004CE068] = 0;
  v18[qword_1004CE090] = 0;
  *(void *)&v18[qword_1004CE098] = 0;
  uint64_t v34 = qword_1004CE0A8;
  Swift::String v35 = (objc_class *)ObjectType;
  if (qword_1004C27E0 != -1) {
    swift_once();
  }
  double v36 = *(double *)&qword_1004F7DF8;
  if (qword_1004C2800 != -1) {
    swift_once();
  }
  *(double *)&v18[v34] = v36 + *(double *)&qword_1004F7E18;
  *(void *)&v18[qword_1004CE0B0] = 0;
  *(void *)&v18[qword_1004CE0B8] = 0;
  *(void *)&v18[qword_1004CE0C0] = 0;
  swift_unknownObjectWeakInit();
  v18[qword_1004CE0D0] = 0;
  *(void *)&v18[qword_1004CE0D8] = &_swiftEmptySetSingleton;
  *(void *)&v18[qword_1004CE0E0] = &_swiftEmptySetSingleton;
  *(void *)&v18[qword_1004CE0E8] = 0;
  *(void *)&v18[qword_1004CE0F0] = 0;
  *(void *)&v18[qword_1004CE0F8] = 0;
  uint64_t v37 = qword_1004CE108;
  v18[qword_1004CE108] = 0;
  v18[qword_1004CE110] = 1;
  v18[qword_1004CE118] = 1;
  v18[qword_1004CE120] = 1;
  v18[qword_1004CE128] = 1;
  v18[qword_1004CE130] = 0;
  v18[qword_1004CE138] = 1;
  v18[qword_1004CE140] = 0;
  uint64_t v38 = &v18[qword_1004CE148];
  *(void *)uint64_t v38 = 0;
  v38[8] = 1;
  swift_unknownObjectWeakInit();
  uint64_t v39 = qword_1004CE158;
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  static DispatchQoS.userInteractive.getter();
  aBlock = (void **)_swiftEmptyArrayStorage;
  sub_10017E9EC((unint64_t *)&qword_1004C6B50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100012894(&qword_1004CF220);
  sub_10002179C((unint64_t *)&qword_1004C6B60, &qword_1004CF220);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v97 + 104))(v98, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v99);
  *(void *)&v18[v39] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v18[qword_1004CE160] = 0;
  *(void *)&v18[qword_1004CE168] = 0;
  id v41 = v101;
  uint64_t v40 = v102;
  *(void *)&v18[qword_1004CE0A0] = v101;
  NSString v42 = (double *)&v18[qword_1004CE070];
  *NSString v42 = a4;
  v42[1] = a5;
  v42[2] = a6;
  v42[3] = a7;
  *(void *)&v18[qword_1004CE100] = v40;
  v18[v37] = v100 & 1;
  id v43 = objc_allocWithZone((Class)type metadata accessor for HistoryView());
  id v44 = v41;
  swift_retain();
  id v45 = [v43 initWithFrame:a4, a5, a6, a7];
  uint64_t v46 = qword_1004CE010;
  *(void *)&v18[qword_1004CE010] = v45;
  [v45 setHidden:1];
  if (qword_1004C2C68 != -1) {
    swift_once();
  }
  uint64_t v47 = qword_1004CE000;
  *(void *)&v18[qword_1004CE088] = qword_1004CE000;
  uint64_t v48 = *(char **)&v18[v46];
  Swift::String v49 = *(void **)&v48[OBJC_IVAR____TtC7Measure11HistoryView_tableView];
  id v50 = objc_allocWithZone((Class)type metadata accessor for CardContainerView());
  swift_retain_n();
  id v51 = sub_100198F88(v49, v49, v47);
  uint64_t v52 = qword_1004CE018;
  *(void *)&v18[qword_1004CE018] = v51;
  swift_unknownObjectWeakAssign();
  id v53 = [v51 leftAnchor];
  id v54 = [v48 leftAnchor];
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  char v55 = static UIDevice.isIPhone()();
  double v56 = -*(double *)&qword_1004F7DF8;
  if (v55) {
    double v56 = 0.0;
  }
  id v57 = [v53 constraintEqualToAnchor:v54 constant:v56];

  *(void *)&v18[qword_1004CE080] = v57;
  Swift::String v58 = *(void **)&v18[v52];
  id v59 = objc_allocWithZone((Class)type metadata accessor for CardContainerController());
  unint64_t v60 = sub_1001B8458(v58);
  *(void *)&v18[qword_1004CE078] = v60;
  uint64_t v61 = v60;

  v61[OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded] = 0;
  v109.receiver = v18;
  v109.super_class = v35;
  id v62 = [super init];
  sub_10016F924();
  sub_10016FC04();
  char v63 = static UIDevice.isIPhone()();
  id v101 = v44;
  if (v63)
  {
    Swift::String v64 = *(void **)&v62[qword_1004CE010];
    id v65 = objc_retain(*(id *)(*(void *)&v62[qword_1004CE078]
                            + OBJC_IVAR____TtC7Measure23CardContainerController_containerView));
    id v66 = v64;
    sub_100198B58(v66);

    uint64_t v67 = self;
    uint64_t v68 = swift_allocObject();
    *(void *)(v68 + 16) = v62;
    uint64_t v69 = swift_allocObject();
    unint64_t v70 = sub_10017D0F0;
    *(void *)(v69 + 16) = sub_10017D0F0;
    *(void *)(v69 + 24) = v68;
    float v107 = sub_1000949B8;
    uint64_t v108 = v69;
    aBlock = _NSConcreteStackBlock;
    uint64_t v104 = 1107296256;
    int v105 = sub_1000FA194;
    char v106 = &unk_1004902C0;
    unint64_t v71 = _Block_copy(&aBlock);
    uint64_t v72 = v62;
    swift_retain();
    swift_release();
    [(id)v67 performWithoutAnimation:v71];
    _Block_release(v71);
    LOBYTE(v67) = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if ((v67 & 1) == 0)
    {
      uint64_t v74 = &qword_1004CE000;
      BOOL v75 = 0;
      uint64_t v100 = 0;
LABEL_16:
      swift_retain();
      uint64_t v90 = StateValue.publisher.getter();
      swift_release();
      aBlock = (void **)v90;
      swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_100012894(&qword_1004CE648);
      sub_10002179C((unint64_t *)&unk_1004CE650, &qword_1004CE648);
      uint64_t v91 = Publisher<>.sink(receiveValue:)();
      swift_release();
      swift_release();
      *(void *)&v62[v74[22]] = v91;
      swift_release();
      aBlock = v102;
      swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_100012894((uint64_t *)&unk_1004CA000);
      sub_10002179C((unint64_t *)&unk_1004CE660, (uint64_t *)&unk_1004CA000);
      uint64_t v92 = Publisher<>.sink(receiveValue:)();
      swift_release();
      *(void *)&v62[qword_1004CE0B8] = v92;
      swift_release();
      id v93 = *(id *)&v62[qword_1004CE078];
      sub_1001B7844();

      swift_release();
      v62[qword_1004CE108] = 0;
      sub_100028914((uint64_t)v70);
      sub_100028914((uint64_t)v75);
      return (uint64_t)v62;
    }
    __break(1u);
  }
  else
  {
    uint64_t v76 = self;
    uint64_t v77 = swift_allocObject();
    *(void *)(v77 + 16) = v62;
    uint64_t v78 = swift_allocObject();
    *(void *)(v78 + 16) = sub_10017D00C;
    *(void *)(v78 + 24) = v77;
    float v107 = sub_1000949B8;
    uint64_t v108 = v78;
    aBlock = _NSConcreteStackBlock;
    uint64_t v104 = 1107296256;
    int v105 = sub_1000FA194;
    char v106 = &unk_1004901D0;
    unint64_t v79 = _Block_copy(&aBlock);
    unint64_t v80 = v62;
    swift_retain();
    swift_release();
    [v76 performWithoutAnimation:v79];
    _Block_release(v79);
    LOBYTE(v79) = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if ((v79 & 1) == 0)
    {
      uint64_t v74 = &qword_1004CE000;
      unint64_t v81 = *(uint64_t (**)(uint64_t))(**(void **)&v80[qword_1004CE030] + 200);
      uint64_t v100 = v77;
      uint64_t v82 = swift_retain();
      uint64_t v83 = v81(v82);
      uint64_t v84 = swift_release();
      uint64_t v85 = (*(uint64_t (**)(uint64_t))(*(void *)v83 + 208))(v84);
      swift_release();
      aBlock = (void **)v85;
      uint64_t v86 = swift_allocObject();
      *(void *)(v86 + 16) = v80;
      uint64_t v87 = swift_allocObject();
      *(void *)(v87 + 16) = sub_10017D024;
      *(void *)(v87 + 24) = v86;
      unint64_t v88 = v80;
      sub_100012894(&qword_1004CE638);
      sub_10002179C(&qword_1004CE640, &qword_1004CE638);
      uint64_t v89 = Publisher<>.sink(receiveValue:)();
      swift_release();
      swift_release();
      *(void *)&v88[qword_1004CE0C0] = v89;
      swift_release();
      unint64_t v70 = 0;
      BOOL v75 = sub_10017D00C;
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}

void sub_10016F924()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(char **)&v0[qword_1004CE010];
  uint64_t v3 = *(void *)&v0[qword_1004CE018];
  [v2 addSubview:v3];
  uint64_t v4 = OBJC_IVAR____TtC7Measure17CardContainerView_titleView;
  uint64_t v5 = *(void **)(*(void *)(v3 + OBJC_IVAR____TtC7Measure17CardContainerView_titleView)
                + OBJC_IVAR____TtC7Measure13CardTitleView_title);
  uint64_t v6 = self;
  id v7 = v5;
  id v8 = [v6 mainBundle];
  v17._object = (void *)0xE000000000000000;
  v9._uint64_t countAndFlagsBits = 0x5F59524F54534948;
  v9._object = (void *)0xED0000454C544954;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v17._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v17);

  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setText:v11];

  id v12 = *(void **)&v2[OBJC_IVAR____TtC7Measure11HistoryView_tableView];
  [v12 setDataSource:v1];
  [v12 setDelegate:v1];
  uint64_t v13 = *(void *)(v3 + v4);
  [*(id *)(v13 + OBJC_IVAR____TtC7Measure13CardTitleView_rightItem) addTarget:v1 action:"closeHistory" forControlEvents:64];
  [*(id *)(v3 + OBJC_IVAR____TtC7Measure17CardContainerView_copyCustomButton) addTarget:v1 action:"copyToPasteboard" forControlEvents:64];
  [*(id *)(v13 + OBJC_IVAR____TtC7Measure13CardTitleView_leftItem) addTarget:v1 action:"presentShareSheet" forControlEvents:64];
  uint64_t v14 = v1;
  sub_10019B778(v3, (uint64_t)v14);

  *(unsigned char *)(v3 + OBJC_IVAR____TtC7Measure17CardContainerView_shouldScrollviewBeAccountedByCardController) = 1;
  *(unsigned char *)(*(void *)&v14[qword_1004CE078]
           + OBJC_IVAR____TtC7Measure23CardContainerController_isDraggableFromBottomStack) = 0;
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if ((static UIDevice.isIPad()() & 1) == 0)
  {
    id v15 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v14 action:"closeHistory"];
    [v15 setDelegate:v14];
    [v2 addGestureRecognizer:v15];
  }
}

void sub_10016FC04()
{
  if (qword_1004C2800 != -1) {
    swift_once();
  }
  double v1 = *(double *)&qword_1004F7E18;
  uint64_t v2 = *(void **)(v0 + qword_1004CE010);
  sub_1001B737C(v2);
  uint64_t v3 = *(void **)(v0 + qword_1004CE018);
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1003FD540;
  id v5 = [v3 bottomAnchor];
  id v6 = [v2 bottomAnchor];
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  char v7 = static UIDevice.isIPhone()();
  double v8 = -v1;
  if (v7) {
    double v8 = 0.0;
  }
  id v9 = [v5 constraintEqualToAnchor:v6 constant:v8];

  Swift::String v10 = *(void **)(v0 + qword_1004CE080);
  *(void *)(v4 + 32) = v9;
  *(void *)(v4 + 40) = v10;
  id v11 = v10;
  char v12 = static UIDevice.isIPhone()();
  id v13 = [v3 widthAnchor];
  if (v12)
  {
    id v14 = [v2 widthAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14];

    id v13 = v14;
  }
  else
  {
    if (qword_1004C27E0 != -1) {
      swift_once();
    }
    id v15 = [v13 constraintEqualToConstant:*(double *)&qword_1004F7DF8];
  }

  uint64_t v16 = self;
  *(void *)(v4 + 48) = v15;
  specialized Array._endMutation()();
  sub_10001C99C(0, (unint64_t *)&qword_1004CE690);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v16 activateConstraints:isa];
}

uint64_t sub_10016FECC(uint64_t a1)
{
  double v1 = *(void **)(a1 + qword_1004CE078);
  sub_1001B7844();
  sub_1001B91E0(2, 0, 0, 0.4);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v2 = v1;
  static Published.subscript.setter();
  sub_1001B8090();
  uint64_t v3 = &v2[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
  *(void *)uint64_t v3 = 0;
  v3[8] = 1;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = Strong;
    [Strong setEnabled:1];
  }
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_10016FFBC(uint64_t a1)
{
  double v1 = *(void **)(a1 + qword_1004CE078);
  sub_1001B91E0(2, 0, 0, 0.4);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v2 = v1;
  static Published.subscript.setter();
  sub_1001B8090();
  uint64_t v3 = &v2[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
  *(void *)uint64_t v3 = 0;
  v3[8] = 1;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = Strong;
    [Strong setEnabled:1];
  }
  return swift_unknownObjectWeakAssign();
}

void sub_1001700A8(__int16 a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100012894((uint64_t *)&unk_1004CE5F0);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x100) == 0) {
    return;
  }
  char v7 = *(uint64_t (**)(unsigned char *))(**(void **)(v2 + qword_1004CE030) + 400);
  swift_retain();
  double v8 = (void (*)(unsigned char *, void))v7(v44);
  *(unsigned char *)(v9 + 1) = 0;
  v8(v44, 0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v44[0] > 1u) {
    return;
  }
  id v10 = [*(id *)(v2 + qword_1004CE010) superview];
  if (!v10) {
    return;
  }
  id v11 = v10;
  uint64_t v12 = qword_1004CE068;
  id v13 = *(void **)(v2 + qword_1004CE068);
  if (!v13)
  {
    sub_100176288();
    unint64_t v16 = v32;
    if (v32 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
      if (v33)
      {
LABEL_23:
        uint64_t v40 = v12;
        id v41 = v6;
        uint64_t v42 = v2;
        id v43 = v11;
        uint64_t v34 = 4;
        while (1)
        {
          if ((v16 & 0xC000000000000001) != 0) {
            Swift::String v35 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            Swift::String v35 = (char *)*(id *)(v16 + 8 * v34);
          }
          double v36 = v35;
          id v14 = (id)(v34 - 3);
          if (__OFADD__(v34 - 4, 1))
          {
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
          uint64_t v37 = *(void **)&v35[qword_1004D0BD0];
          if (!v37) {
            goto LABEL_43;
          }
          swift_getKeyPath();
          swift_getKeyPath();
          id v38 = v37;
          static Published.subscript.getter();

          swift_release();
          swift_release();
          if (v44[0] < 2u) {
            break;
          }
          ++v34;
          if (v14 == (id)v33)
          {
            swift_bridgeObjectRelease();
            goto LABEL_36;
          }
        }
LABEL_18:
        uint64_t v27 = (uint64_t)v41;
        uint64_t v26 = v42;
        uint64_t v28 = v40;
        swift_bridgeObjectRelease_n();
        uint64_t v29 = *(void **)(v26 + v28);
        if (v29)
        {
          id v30 = v29;
          sub_1001C14AC(0);
          uint64_t v31 = type metadata accessor for IndexPath();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v27, 1, 1, v31);
          sub_100172CC0(0, v27);

          sub_10002B9C0(v27, (uint64_t *)&unk_1004CE5F0);
        }
        sub_100171B4C(0, 0, 1);
        id v11 = v43;
        goto LABEL_38;
      }
    }
    else
    {
      uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v33) {
        goto LABEL_23;
      }
    }
    swift_bridgeObjectRelease();
LABEL_37:
    swift_bridgeObjectRelease();
LABEL_38:

    return;
  }
  id v14 = v13;
  sub_100176288();
  unint64_t v16 = v15;
  id v41 = v6;
  uint64_t v42 = v2;
  id v43 = v11;
  uint64_t v40 = v12;
  if (v15 >> 62)
  {
LABEL_34:
    id v39 = v14;
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    if (v17) {
      goto LABEL_7;
    }
    goto LABEL_35;
  }
  uint64_t v17 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v18 = v14;
  swift_bridgeObjectRetain();
  if (!v17)
  {
LABEL_35:

    swift_bridgeObjectRelease();
LABEL_36:
    id v11 = v43;
    goto LABEL_37;
  }
LABEL_7:
  uint64_t v19 = 4;
  while (1)
  {
    if ((v16 & 0xC000000000000001) != 0) {
      uint64_t v20 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v20 = (char *)*(id *)(v16 + 8 * v19);
    }
    uint64_t v21 = v20;
    uint64_t v22 = v19 - 3;
    if (__OFADD__(v19 - 4, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    char v23 = *(void **)&v20[qword_1004D0BD0];
    if (!v23) {
      break;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    id v24 = v23;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    if (v44[0] >= 2u)
    {
    }
    else
    {
      type metadata accessor for SpatialGenericPlatter();
      char v25 = static NSObject.== infix(_:_:)();

      if ((v25 & 1) == 0)
      {

        goto LABEL_18;
      }
    }
    ++v19;
    if (v22 == v17) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
}

uint64_t sub_100170588(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v20 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  char v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MeasurementsHistory();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v12 = (void *)result;
    id v13 = (void *)Contexts.UIKit.init()();
    sub_10017DBF8(a1, (uint64_t)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MeasurementsHistory);
    unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v15 = swift_allocObject();
    sub_10017DC60((uint64_t)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, (uint64_t (*)(void))type metadata accessor for MeasurementsHistory);
    *(void *)(v15 + ((v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v12;
    aBlock[4] = sub_10017D888;
    void aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100049AB4;
    aBlock[3] = &unk_100490630;
    unint64_t v16 = _Block_copy(aBlock);
    id v17 = v13;
    id v18 = v12;
    static DispatchQoS.unspecified.getter();
    uint64_t v21 = _swiftEmptyArrayStorage;
    sub_10017E9EC((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100012894((uint64_t *)&unk_1004C68E0);
    sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v19);

    return swift_release();
  }
  return result;
}

size_t sub_10017095C(uint64_t a1, uint64_t a2)
{
  void (*v19)(uint64_t *__return_ptr, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  size_t *v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  char v27;
  size_t *v28;
  size_t v29;
  void *v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  Swift::Int v41;
  Swift::Int v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  size_t *v46;
  void *v47;
  Swift::Int v48;
  uint64_t v49[3];

  uint64_t v4 = sub_100012894((uint64_t *)&unk_1004CE670);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100012894((uint64_t *)&unk_1004D0EF0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MeasurementHistoryItem();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unint64_t v16 = (uint64_t *)((char *)&v43 - v15);
  uint64_t v17 = type metadata accessor for MeasurementsHistory();
  sub_1000735DC(a1 + *(int *)(v17 + 24), (uint64_t)v9, (uint64_t *)&unk_1004D0EF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
    return sub_10002B9C0((uint64_t)v9, (uint64_t *)&unk_1004D0EF0);
  }
  uint64_t v47 = v14;
  sub_10017DC60((uint64_t)v9, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
  uint64_t v19 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(a2 + qword_1004CE048) + 144);
  uint64_t v20 = swift_retain();
  v19(v49, v20);
  swift_release();
  uint64_t v21 = v49[0];
  uint64_t v22 = *v16;
  char v23 = (size_t *)v16[1];
  swift_bridgeObjectRetain();
  id v24 = sub_1001C183C(v22, (uint64_t)v23, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v24) {
    return sub_10017E4C4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
  }
  char v25 = (uint64_t *)(a2 + qword_1004CE060);
  swift_beginAccess();
  uint64_t v26 = *v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1001C183C(v22, (uint64_t)v23, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v27 & 1) == 0) {
    return sub_10017E4C4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
  }
  id v44 = v6;
  id v45 = a2;
  uint64_t v28 = (size_t *)(a2 + qword_1004CE058);
  swift_beginAccess();
  uint64_t v46 = v28;
  uint64_t v29 = *v28;
  id v30 = *(void **)(v29 + 16);
  if (!v30) {
    return sub_10017E4C4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
  }
  uint64_t v31 = 0;
  unint64_t v32 = *(void *)(type metadata accessor for SpatialPlattersHistoryItem() - 8);
  uint64_t v33 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v34 = *(void *)(v32 + 72);
  while (1)
  {
    Swift::String v35 = *(void *)(v29 + v33) == v22 && *(void *)(v29 + v33 + 8) == (void)v23;
    if (v35 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      break;
    }
    ++v31;
    v33 += v34;
    if (v30 == (void *)v31) {
      return sub_10017E4C4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
    }
  }
  if (v31 >= *(void *)(v29 + 16))
  {
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  double v36 = v29 + v33;
  uint64_t v37 = v47;
  sub_10017DBF8(v36, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
  uint64_t v22 = sub_1001E6630(v37, v16);
  sub_10017E4C4((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
  if (v22) {
    return sub_10017E4C4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
  }
  char v23 = v46;
  if (v31 >= *(void *)(*v46 + 16)) {
    goto LABEL_26;
  }
  id v38 = (uint64_t)v44;
  sub_1000735DC(*v46 + *(int *)(v10 + 24) + v33, (uint64_t)v44, (uint64_t *)&unk_1004CE670);
  id v39 = type metadata accessor for MeasurementCapture();
  LODWORD(v10) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v38, 1, v39);
  sub_10002B9C0(v38, (uint64_t *)&unk_1004CE670);
  swift_beginAccess();
  id v30 = (void *)*v23;
  size_t result = swift_isUniquelyReferenced_nonNull_native();
  *char v23 = (size_t)v30;
  uint64_t v22 = v45;
  if ((result & 1) == 0)
  {
LABEL_27:
    size_t result = sub_100030C90(v30);
    id v30 = (void *)result;
    *char v23 = result;
  }
  if (v31 >= v30[2])
  {
    __break(1u);
    return result;
  }
  sub_1000BE824((uint64_t)v16, (uint64_t)v30 + v33);
  swift_endAccess();
  uint64_t v40 = *(void *)(v22 + qword_1004CE078);
  *(unsigned char *)(v40 + OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded) = sub_10016E14C() & 1;
  if (*(unsigned char *)(v22 + qword_1004CE0D0))
  {
    id v41 = *v16;
    uint64_t v42 = v16[1];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1001C7A6C(&v48, v41, v42);
    swift_endAccess();
    swift_bridgeObjectRelease();
    if (v10 == 1)
    {
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1001C7A6C(&v48, v41, v42);
      swift_endAccess();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_100170F48(v31, (uint64_t)v16, v10 != 1);
  }
  return sub_10017E4C4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
}

uint64_t sub_100170F48(unint64_t a1, uint64_t a2, int a3)
{
  LODWORD(v93) = a3;
  uint64_t v90 = type metadata accessor for SpatialPlattersHistoryItem();
  uint64_t v94 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  unint64_t v92 = (unint64_t)v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100012894(&qword_1004CE680);
  uint64_t v7 = __chkstk_darwin(v87);
  uint64_t v9 = (char *)v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v86 = (char *)v83 - v10;
  uint64_t v11 = (void (**)(uint64_t, uint64_t, void *))&unk_1004CE670;
  uint64_t v12 = sub_100012894((uint64_t *)&unk_1004CE670);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (char *)v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for MeasurementCapture();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v18 = (char *)v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for IndexPath();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v91 = (char *)v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  unint64_t v88 = (char *)v83 - v23;
  IndexPath.init(row:section:)();
  uint64_t v24 = type metadata accessor for MeasurementHistoryItem();
  sub_1000735DC(a2 + *(int *)(v24 + 24), (uint64_t)v14, (uint64_t *)&unk_1004CE670);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_10002B9C0((uint64_t)v14, (uint64_t *)&unk_1004CE670);
LABEL_5:
    id v25 = *(id *)(*(void *)(v89 + qword_1004CE010) + OBJC_IVAR____TtC7Measure11HistoryView_tableView);
    uint64_t v9 = v88;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    uint64_t v27 = [v25 cellForRowAtIndexPath:isa];

    if (!v27) {
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v9, v19);
    }
    swift_getObjectType();
    uint64_t v28 = swift_conformsToProtocol2();
    if (v28) {
      uint64_t v11 = (void (**)(uint64_t, uint64_t, void *))v28;
    }
    else {
      uint64_t v11 = 0;
    }
    if (v28) {
      uint64_t v29 = v27;
    }
    else {
      uint64_t v29 = 0;
    }
    if (!v29)
    {

      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v9, v19);
    }
    uint64_t ObjectType = swift_getObjectType();
    id v18 = (char *)(v89 + qword_1004CE058);
    swift_beginAccess();
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v31 = *(void *)v18;
      if (*(void *)(*(void *)v18 + 16) > a1)
      {
        uint64_t v32 = v92;
        sub_10017DBF8(v31+ ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80))+ *(void *)(v94 + 72) * a1, v92, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
        v11[2](v32, ObjectType, v11);

        sub_10017E4C4(v32, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
        return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v9, v19);
      }
    }
    __break(1u);
LABEL_38:
    uint64_t v29 = (void *)sub_100030C90(v29);
    *(void *)uint64_t ObjectType = v29;
    if ((a1 & 0x8000000000000000) != 0) {
      goto LABEL_39;
    }
    goto LABEL_18;
  }
  sub_10017DC60((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for MeasurementCapture);
  if (v93)
  {
    sub_10017E4C4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for MeasurementCapture);
    goto LABEL_5;
  }
  uint64_t ObjectType = v89 + qword_1004CE058;
  swift_beginAccess();
  uint64_t v29 = *(void **)ObjectType;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t ObjectType = v29;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_38;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
LABEL_18:
  if (v29[2] > a1)
  {
    unint64_t v92 = (*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
    uint64_t v93 = *(void *)(v94 + 72);
    uint64_t v34 = (uint64_t)v29 + v92 + v93 * a1;
    uint64_t v84 = v18;
    URL.path.getter();
    id v35 = objc_allocWithZone((Class)UIImage);
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v37 = [v35 initWithContentsOfFile:v36];
    uint64_t v38 = *(int *)(v90 + 20);
    id v39 = *(void **)(v34 + v38);
    *(void *)(v34 + v38) = v37;
    swift_endAccess();

    uint64_t v40 = v89;
    uint64_t v41 = *(void *)(v89 + qword_1004CE078);
    char v42 = sub_10016E14C();
    v83[2] = v41;
    *(unsigned char *)(v41 + OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded) = v42 & 1;
    unint64_t v43 = *(void *)(v40 + qword_1004CE010);
    uint64_t v44 = OBJC_IVAR____TtC7Measure11HistoryView_tableView;
    id v45 = *(void **)(v43 + OBJC_IVAR____TtC7Measure11HistoryView_tableView);
    sub_100012894(&qword_1004CE688);
    unint64_t v46 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_1003F87F0;
    (*(void (**)(unint64_t, char *, uint64_t))(v20 + 16))(v47 + v46, v88, v19);
    id v48 = v45;
    Class v49 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v48 reloadRowsAtIndexPaths:v49 withRowAnimation:0];

    unint64_t v50 = *(void *)(*(void *)ObjectType + 16);
    if (v50 < 2)
    {
      uint64_t v52 = v91;
    }
    else
    {
      id v51 = *(id *)(v43 + v44);
      uint64_t v52 = v91;
      IndexPath.init(row:section:)();
      Class v53 = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v52, v19);
      [v51 scrollToRowAtIndexPath:v53 atScrollPosition:1 animated:0];

      unint64_t v50 = *(void *)(*(void *)ObjectType + 16);
    }
    uint64_t v94 = v19;
    uint64_t v55 = swift_bridgeObjectRetain();
    uint64_t v85 = v20;
    v83[1] = v55;
    if (v50)
    {
      uint64_t v56 = 0;
      uint64_t v57 = v55 + v92;
      uint64_t v91 = (char *)(v20 + 8);
      unint64_t v92 = v43;
      double v58 = 0.0;
      id v59 = v52;
      uint64_t v61 = v86;
      uint64_t v60 = v87;
      uint64_t v90 = v44;
      do
      {
        uint64_t v62 = v56 + 1;
        unint64_t v63 = v50;
        uint64_t v64 = (uint64_t)&v9[*(int *)(v60 + 48)];
        sub_10017DBF8(v57, v64, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
        uint64_t v65 = (uint64_t)v61 + *(int *)(v60 + 48);
        void *v61 = v56;
        sub_10017DC60(v64, v65, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
        sub_100016FEC((uint64_t)v61, (uint64_t)v9, &qword_1004CE680);
        id v66 = *(id *)(v92 + v90);
        IndexPath.init(row:section:)();
        Class v67 = IndexPath._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))v91)(v59, v94);
        [v66 rectForRowAtIndexPath:v67];
        CGFloat v69 = v68;
        CGFloat v71 = v70;
        CGFloat v73 = v72;
        CGFloat v75 = v74;

        unint64_t v50 = v63;
        v96.origin.x = v69;
        v96.origin.y = v71;
        v96.size.width = v73;
        v96.size.height = v75;
        double v58 = v58 + CGRectGetHeight(v96);
        sub_10002B9C0((uint64_t)v9, &qword_1004CE680);
        v57 += v93;
        uint64_t v56 = v62;
      }
      while (v63 != v62);
    }
    else
    {
      double v58 = 0.0;
    }
    swift_bridgeObjectRelease();
    uint64_t v76 = qword_1004CE098;
    uint64_t v77 = v89;
    *(double *)(v89 + qword_1004CE098) = v58;
    swift_retain();
    double v78 = sub_10016E3B4();
    swift_getKeyPath();
    swift_getKeyPath();
    double v95 = v78;
    static Published.subscript.setter();
    uint64_t v11 = *(void (***)(uint64_t, uint64_t, void *))(v77 + qword_1004CE018);
    swift_retain();
    sub_10001D4A4((uint64_t)v11);
    if (*(double *)(v77 + v76) < v79) {
      double v79 = *(double *)(v77 + v76);
    }
    double v3 = v79 + -0.5;
    if (qword_1004C2820 == -1) {
      goto LABEL_32;
    }
    goto LABEL_41;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  swift_once();
LABEL_32:
  double v80 = *(double *)&qword_1004F7E38;
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if (static UIDevice.isIPhone()()) {
    unint64_t v81 = &OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView;
  }
  else {
    unint64_t v81 = &OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView;
  }
  [*(void (**)(uint64_t, uint64_t, void *))((char *)v11 + *v81) bounds];
  double v82 = v3 + v80 + CGRectGetHeight(v97);
  swift_getKeyPath();
  swift_getKeyPath();
  double v95 = v82;
  static Published.subscript.setter();
  sub_1001B7844();
  sub_10017E4C4((uint64_t)v84, (uint64_t (*)(void))type metadata accessor for MeasurementCapture);
  return (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v88, v94);
}

void sub_1001719A8()
{
  uint64_t v0 = sub_100012894((uint64_t *)&unk_1004CE5F0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v7[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    if ((*(unsigned char *)(Strong + qword_1004CE130) & 1) == 0)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (v7[7] >= 2u)
      {
        int v6 = 1;
      }
      else
      {
        if (*(void *)&v4[qword_1004CE068])
        {
          uint64_t v5 = type metadata accessor for IndexPath();
          (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
          sub_100172CC0(0, (uint64_t)v2);

          sub_10002B9C0((uint64_t)v2, (uint64_t *)&unk_1004CE5F0);
          return;
        }
        int v6 = 0;
      }
      sub_100171B4C(v6, 1u, 0);
    }
  }
}

void sub_100171B4C(int a1, unsigned __int8 a2, int a3)
{
  uint64_t v4 = v3;
  LODWORD(v5) = a3;
  int v121 = a1;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(char **)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v118 = (char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for DispatchTime();
  uint64_t v117 = *(void *)(v120 - 8);
  uint64_t v14 = __chkstk_darwin(v120);
  uint64_t v16 = (char *)&v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v119 = (char *)&v113 - v17;
  if (*(unsigned char *)(v3 + qword_1004CE130) == 1)
  {
    if ((v5 & 1) == 0) {
      return;
    }
  }
  else if ((v5 & 1) == 0)
  {
    *(unsigned char *)(v3 + qword_1004CE130) = 1;
    uint64_t v18 = **(void **)(v3 + qword_1004CE028);
    uint64_t v115 = v3;
    uint64_t v116 = v10;
    int v19 = (int)v5;
    uint64_t v5 = *(uint64_t (**)(void ***))(v18 + 400);
    swift_retain();
    uint64_t v20 = (void (*)(void ***, void))v5(&aBlock);
    LODWORD(v5) = v19;
    uint64_t v4 = v115;
    uint64_t v10 = v116;
    *(unsigned char *)(v21 + 9) = 1;
    v20(&aBlock, 0);
    swift_release();
  }
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if ((static UIDevice.isIPhone()() & 1) == 0)
  {
    Class v53 = &unk_1003F8000;
    if (v121)
    {
      char v54 = (char)v5;
      unsigned __int8 v55 = *(unsigned char *)(v4 + qword_1004CE138);
      [*(id *)(v4 + qword_1004CE010) setHidden:0];
      Class v53 = (void *)v4;
      uint64_t v56 = *(uint64_t (**)(void ***))(**(void **)(v4 + qword_1004CE050) + 400);
      swift_retain();
      uint64_t v57 = (void (*)(void ***, void))v56(&aBlock);
      swift_unknownObjectWeakAssign();
      v57(&aBlock, 0);
      swift_release();
      double v58 = self;
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = v53;
      *(unsigned char *)(v4 + 24) = v55;
      id v59 = (void *)swift_allocObject();
      v59[2] = sub_10017D1A4;
      v59[3] = v4;
      uint64_t v126 = sub_1000949B8;
      uint64_t v127 = v59;
      aBlock = _NSConcreteStackBlock;
      uint64_t v123 = 1107296256;
      long long v124 = sub_1000FA194;
      uint64_t v125 = &unk_1004903D8;
      uint64_t v60 = _Block_copy(&aBlock);
      uint64_t v61 = v53;
      swift_retain();
      swift_release();
      [v58 performWithoutAnimation:v60];
      _Block_release(v60);
      LOBYTE(v60) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v60 & 1) == 0)
      {
        uint64_t v62 = qword_1004C2800;
        id v63 = *(id *)((char *)v61 + qword_1004CE080);
        if (v62 != -1) {
          swift_once();
        }
        [v63 setConstant:*(double *)&qword_1004F7E18];

        sub_1001737F4(v55, 1);
        uint64_t v64 = sub_10017D1A4;
        uint64_t v65 = v53;
        Class v53 = (void *)&unk_1003F8000;
        goto LABEL_32;
      }
      __break(1u);
    }
    else
    {
      unsigned __int8 v55 = a2;
      double v78 = *(void **)(v4 + qword_1004CE078);
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (aBlock <= 1u)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        *(unsigned char *)(v4 + qword_1004CE138) = (_BYTE)aBlock;
      }
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(aBlock) = 2;
      double v79 = v78;
      static Published.subscript.setter();
      sub_1001B8090();
      double v80 = &v79[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
      *(void *)double v80 = 0;
      v80[8] = 1;
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        double v82 = Strong;
        [Strong setEnabled:1];
      }
      char v54 = (char)v5;
      swift_unknownObjectWeakAssign();
      uint64_t v83 = qword_1004C27E0;
      id v59 = *(id *)(v4 + qword_1004CE080);
      if (v83 == -1) {
        goto LABEL_31;
      }
    }
    swift_once();
LABEL_31:
    [v59 setConstant:-*(double *)&qword_1004F7DF8];

    char v84 = v55 & 1;
    unsigned __int8 v55 = 2;
    sub_1001737F4(2u, v84);
    uint64_t v64 = 0;
    uint64_t v65 = (void *)v4;
LABEL_32:
    uint64_t v85 = self;
    uint64_t v86 = swift_allocObject();
    *(void *)(v86 + 16) = v65;
    uint64_t v126 = sub_10017D108;
    uint64_t v127 = (void *)v86;
    aBlock = _NSConcreteStackBlock;
    uint64_t v123 = v53[230];
    uint64_t v87 = v123;
    long long v124 = sub_100049AB4;
    uint64_t v125 = &unk_100490310;
    unint64_t v88 = _Block_copy(&aBlock);
    id v89 = v65;
    swift_release();
    uint64_t v90 = swift_allocObject();
    *(unsigned char *)(v90 + 16) = v54 & 1;
    *(void *)(v90 + 24) = v89;
    *(unsigned char *)(v90 + 32) = v55;
    uint64_t v126 = sub_10017D15C;
    uint64_t v127 = (void *)v90;
    aBlock = _NSConcreteStackBlock;
    uint64_t v123 = v87;
    long long v124 = sub_100176FA8;
    uint64_t v125 = &unk_100490360;
    uint64_t v91 = _Block_copy(&aBlock);
    id v92 = v89;
    swift_release();
    [v85 animateWithDuration:0 delay:v88 options:v91 animations:0.3 completion:0.0];
    _Block_release(v91);
    _Block_release(v88);
    sub_100028914((uint64_t)v64);
    return;
  }
  uint64_t v116 = v12;
  uint64_t v22 = &selRef_replaySensorDidFinishReplayingData;
  if (v121)
  {
    char v23 = (char)v5;
    uint64_t v24 = *(uint64_t (**)(void ***))(**(void **)(v4 + qword_1004CE038) + 400);
    swift_retain();
    id v25 = (void (*)(void ***, void))v24(&aBlock);
    *(unsigned char *)(v26 + 4) = 1;
    v25(&aBlock, 0);
    swift_release();
    uint64_t v27 = *(char **)(v4 + qword_1004CE018);
    [*(id *)&v27[OBJC_IVAR____TtC7Measure17CardContainerView_contentScrollView] frame];
    double MaxY = CGRectGetMaxY(v128);
    [*(id *)&v27[OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView] frame];
    double MinY = CGRectGetMinY(v129);
    uint64_t v30 = v4;
    uint64_t v31 = *(char **)(v4 + qword_1004CE010);
    uint64_t v32 = OBJC_IVAR____TtC7Measure11HistoryView_tableView;
    id v33 = [*(id *)&v31[OBJC_IVAR____TtC7Measure11HistoryView_tableView] tableFooterView];
    if (!v33)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    uint64_t v34 = v33;
    double v35 = MaxY - MinY;
    [v33 frame];
    CGFloat v37 = v36;
    CGFloat v39 = v38;
    CGFloat v41 = v40;
    CGFloat v43 = v42;

    v130.origin.x = v37;
    v130.origin.y = v39;
    v130.size.width = v41;
    v130.size.height = v43;
    if (v35 != CGRectGetHeight(v130))
    {
      id v44 = [*(id *)&v31[v32] tableFooterView];
      if (!v44)
      {
LABEL_45:
        __break(1u);
        return;
      }
      id v45 = v44;
      CGSize.init(_:_:)();
      [v45 setFrame:0.0, 0.0, v46, v47];

      [*(id *)&v31[v32] reloadData];
    }
    if (qword_1004C29D8 != -1) {
      swift_once();
    }
    if (!*((void *)&xmmword_1004F7FD0 + 1))
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    id v48 = [*((id *)&xmmword_1004F7FD0 + 1) tabBarController];
    if (v48)
    {
      Class v49 = v48;
      id v50 = [v48 tabBar];
      [v50 alpha];
      double v52 = v51;

      if (v52 == 0.0)
      {
      }
      else
      {
        uint64_t v93 = self;
        uint64_t v94 = swift_allocObject();
        *(void *)(v94 + 16) = v49;
        *(void *)(v94 + 24) = 0;
        uint64_t v126 = sub_1000B8DA4;
        uint64_t v127 = (void *)v94;
        aBlock = _NSConcreteStackBlock;
        uint64_t v123 = 1107296256;
        long long v124 = sub_100049AB4;
        uint64_t v125 = &unk_1004904F0;
        uint64_t v5 = (uint64_t (*)(void ***))_Block_copy(&aBlock);
        id v95 = v49;
        swift_release();
        [v93 animateWithDuration:0 delay:v5 options:0 animations:0.15 completion:0.0];

        CGRect v96 = v5;
        LOBYTE(v5) = v23;
        _Block_release(v96);
      }
      uint64_t v4 = v30;
    }
    [v31 setHidden:0];
    CGRect v97 = *(uint64_t (**)(void ***))(**(void **)(v4 + qword_1004CE050) + 400);
    swift_retain();
    uint64_t v98 = (void *)v4;
    uint64_t v99 = (void (*)(void ***, void))v97(&aBlock);
    swift_unknownObjectWeakAssign();
    v99(&aBlock, 0);
    swift_release();
    uint64_t v100 = *(void **)(v4 + qword_1004CE078);
    char v101 = *(unsigned char *)(v4 + qword_1004CE138);
    uint64_t v102 = swift_allocObject();
    *(unsigned char *)(v102 + 16) = v5 & 1;
    *(void *)(v102 + 24) = v98;
    id v103 = v98;
    sub_1001B91E0(v101, (uint64_t)sub_10017D248, v102, 0.4);
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(aBlock) = v101;
    uint64_t v104 = v100;
    static Published.subscript.setter();
    sub_1001B8090();
    int v105 = &v104[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
    *(void *)int v105 = 0;
    v105[8] = 1;
    char v106 = (void *)swift_unknownObjectWeakLoadStrong();
    [v106 setEnabled:1];

    swift_unknownObjectWeakAssign();
    swift_release();
    double v77 = 1.0;
  }
  else
  {
    sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
    uint64_t v115 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    int v121 = (int)v5;
    uint64_t v117 = *(void *)(v117 + 8);
    ((void (*)(char *, uint64_t))v117)(v16, v120);
    uint64_t v126 = sub_1001769C0;
    uint64_t v127 = 0;
    aBlock = _NSConcreteStackBlock;
    uint64_t v123 = 1107296256;
    long long v124 = sub_100049AB4;
    uint64_t v125 = &unk_100490400;
    id v66 = _Block_copy(&aBlock);
    Class v67 = v118;
    static DispatchQoS.unspecified.getter();
    aBlock = (void **)_swiftEmptyArrayStorage;
    sub_10017E9EC((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    uint64_t v114 = v11;
    sub_100012894((uint64_t *)&unk_1004C68E0);
    sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    double v68 = v119;
    CGFloat v69 = (void *)v115;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v66);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*((void (**)(char *, uint64_t))v116 + 1))(v67, v114);
    ((void (*)(char *, uint64_t))v117)(v68, v120);
    double v70 = *(void **)(v4 + qword_1004CE078);
    uint64_t v71 = swift_allocObject();
    *(void *)(v71 + 16) = v4;
    *(unsigned char *)(v71 + 24) = v121 & 1;
    double v72 = (char *)(id)v4;
    sub_1001B91E0(2, (uint64_t)sub_10017D1C0, v71, 0.4);
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(aBlock) = 2;
    CGFloat v73 = v70;
    static Published.subscript.setter();
    sub_1001B8090();
    double v74 = &v73[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
    *(void *)double v74 = 0;
    v74[8] = 1;
    CGFloat v75 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v75)
    {
      uint64_t v76 = v75;
      [v75 setEnabled:1];
    }
    swift_unknownObjectWeakAssign();
    swift_release();
    uint64_t v27 = *(char **)&v72[qword_1004CE018];
    double v77 = 0.0;
    uint64_t v22 = &selRef_replaySensorDidFinishReplayingData;
  }
  float v107 = *(void **)&v27[OBJC_IVAR____TtC7Measure17CardContainerView_darkeningView];
  if (!v107)
  {
    __break(1u);
    goto LABEL_43;
  }
  [v107 v22[307]];
  if (v77 != v108)
  {
    objc_super v109 = self;
    uint64_t v110 = swift_allocObject();
    *(void *)(v110 + 16) = v27;
    *(double *)(v110 + 24) = v77;
    uint64_t v126 = sub_10017D204;
    uint64_t v127 = (void *)v110;
    aBlock = _NSConcreteStackBlock;
    uint64_t v123 = 1107296256;
    long long v124 = sub_100049AB4;
    uint64_t v125 = &unk_100490478;
    uint64_t v111 = _Block_copy(&aBlock);
    uint64_t v112 = v27;
    swift_release();
    [v109 animateWithDuration:v111 animations:0.2];
    _Block_release(v111);
  }
}

uint64_t sub_100172CC0(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v70 = a2;
  uint64_t v5 = sub_100012894((uint64_t *)&unk_1004CE5F0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t result = __chkstk_darwin(v5 - 8);
  uint64_t v9 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v2[qword_1004CE130] & 1) == 0)
  {
    v2[qword_1004CE130] = 1;
    uint64_t v10 = *(uint64_t (**)(CGAffineTransform *))(**(void **)&v2[qword_1004CE028] + 400);
    swift_retain();
    uint64_t v11 = (void (*)(CGAffineTransform *, void))v10(&aBlock);
    *(unsigned char *)(v12 + 9) = 1;
    v11(&aBlock, 0);
    uint64_t result = swift_release();
    uint64_t v13 = *(void **)&v2[qword_1004CE068];
    if (v13)
    {
      sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
      uint64_t v14 = v13;
      char v15 = static UIDevice.isIPhone()();
      char v16 = v15;
      if (a1)
      {
        if (v15)
        {
          CGFloat v69 = (char *)self;
          uint64_t v17 = swift_allocObject();
          *(void *)(v17 + 16) = v14;
          uint64_t v18 = swift_allocObject();
          *(void *)(v18 + 16) = sub_10017CE58;
          *(void *)(v18 + 24) = v17;
          *(void *)&aBlock.tx = sub_100039980;
          *(void *)&aBlock.ty = v18;
          *(void *)&aBlock.a = _NSConcreteStackBlock;
          *(void *)&aBlock.b = 1107296256;
          *(void *)&aBlock.c = sub_1000FA194;
          *(void *)&aBlock.d = &unk_100490108;
          int v19 = _Block_copy(&aBlock);
          uint64_t v20 = v14;
          swift_retain();
          swift_release();
          [v69 performWithoutAnimation:v19];
          _Block_release(v19);
          LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
          uint64_t result = swift_release();
          if (v19)
          {
            __break(1u);
          }
          else
          {
            CGFloat v69 = v14;
            *(void *)&v20[qword_1004D0BE0 + 8] = &off_10048FE78;
            uint64_t result = swift_unknownObjectWeakAssign();
            uint64_t v21 = *(void **)&v20[qword_1004D0BD0];
            if (v21)
            {
              sub_1000735DC(v70, (uint64_t)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_1004CE5F0);
              unint64_t v22 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
              uint64_t v23 = swift_allocObject();
              sub_100016FEC((uint64_t)v9, v23 + v22, (uint64_t *)&unk_1004CE5F0);
              *(void *)(v23 + ((v7 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v3;
              uint64_t v24 = v3;
              id v25 = v21;
              sub_1001B91E0(1, (uint64_t)sub_10017CDC8, v23, 0.4);
              swift_getKeyPath();
              swift_getKeyPath();
              LOBYTE(aBlock.a) = 1;
              uint64_t v26 = (char *)v25;
              static Published.subscript.setter();
              sub_1001B8090();
              uint64_t v27 = &v26[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
              *(void *)uint64_t v27 = 0;
              v27[8] = 1;
              uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
              [Strong setEnabled:1];

              swift_unknownObjectWeakAssign();
              swift_release();

              uint64_t v29 = *(void **)&v24[qword_1004CE078];
              swift_getKeyPath();
              swift_getKeyPath();
              static Published.subscript.getter();
              swift_release();
              swift_release();
              v24[qword_1004CE138] = LOBYTE(aBlock.a);
              uint64_t v30 = swift_allocObject();
              *(void *)(v30 + 16) = v24;
              uint64_t v31 = v24;
              sub_1001B91E0(2, (uint64_t)sub_10017CFB0, v30, 0.4);
              swift_getKeyPath();
              swift_getKeyPath();
              LOBYTE(aBlock.a) = 2;
              uint64_t v32 = v29;
              static Published.subscript.setter();
              sub_1001B8090();
              id v33 = &v32[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
              *(void *)id v33 = 0;
              v33[8] = 1;
              uint64_t v34 = (void *)swift_unknownObjectWeakLoadStrong();
              [v34 setEnabled:1];

              swift_unknownObjectWeakAssign();
              swift_release();
              double v35 = sub_10017CE58;
LABEL_11:
              uint64_t v14 = v69;
LABEL_15:
              UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, v14);

              return sub_100028914((uint64_t)v35);
            }
          }
          __break(1u);
          goto LABEL_19;
        }
        id v48 = v14;
        [v48 transform];
        CGAffineTransformTranslate(&v71, &aBlock, -*(double *)&v3[qword_1004CE0A8], 0.0);
        CGAffineTransform aBlock = v71;
        [v48 setTransform:&aBlock];

        *(void *)&v48[qword_1004D0BE0 + 8] = &off_10048FE78;
        swift_unknownObjectWeakAssign();
        CGFloat v69 = (char *)self;
        uint64_t v49 = swift_allocObject();
        *(void *)(v49 + 16) = v48;
        *(void *)(v49 + 24) = v3;
        *(void *)&aBlock.tx = sub_10017CDBC;
        *(void *)&aBlock.ty = v49;
        *(void *)&aBlock.a = _NSConcreteStackBlock;
        *(void *)&aBlock.b = 1107296256;
        *(void *)&aBlock.c = sub_100049AB4;
        *(void *)&aBlock.d = &unk_100490040;
        id v50 = _Block_copy(&aBlock);
        double v51 = v48;
        double v52 = v3;
        swift_release();
        sub_1000735DC(v70, (uint64_t)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_1004CE5F0);
        Class v53 = v14;
        unint64_t v54 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
        unint64_t v55 = (v7 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v56 = swift_allocObject();
        uint64_t v57 = v56 + v54;
        uint64_t v14 = v53;
        sub_100016FEC((uint64_t)v9, v57, (uint64_t *)&unk_1004CE5F0);
        *(void *)(v56 + v55) = v52;
        *(void *)&aBlock.tx = sub_10017CDC8;
        *(void *)&aBlock.ty = v56;
        *(void *)&aBlock.a = _NSConcreteStackBlock;
        *(void *)&aBlock.b = 1107296256;
        *(void *)&aBlock.c = sub_100176FA8;
        *(void *)&aBlock.d = &unk_100490090;
        double v58 = _Block_copy(&aBlock);
        id v59 = v52;
        swift_release();
        [v69 animateWithDuration:0 delay:v50 options:v58 animations:0.2 completion:0.0];
        _Block_release(v58);
        uint64_t v60 = v50;
      }
      else
      {
        *(void *)&v14[qword_1004D0BE0 + 8] = 0;
        uint64_t result = swift_unknownObjectWeakAssign();
        if (v16)
        {
          CGFloat v69 = v14;
          double v36 = *(void **)&v14[qword_1004D0BD0];
          if (v36)
          {
            uint64_t v37 = swift_allocObject();
            *(void *)(v37 + 16) = v3;
            double v38 = v3;
            id v39 = v36;
            sub_1001B91E0(2, (uint64_t)sub_10017CC70, v37, 0.4);
            swift_getKeyPath();
            swift_getKeyPath();
            LOBYTE(aBlock.a) = 2;
            double v40 = (char *)v39;
            static Published.subscript.setter();
            sub_1001B8090();
            CGFloat v41 = &v40[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
            *(void *)CGFloat v41 = 0;
            v41[8] = 1;
            double v42 = (void *)swift_unknownObjectWeakLoadStrong();
            [v42 setEnabled:1];

            swift_unknownObjectWeakAssign();
            swift_release();
            CGFloat v43 = *(void **)&v38[qword_1004CE078];
            char v44 = v38[qword_1004CE138];
            sub_1001B91E0(v44, 0, 0, 0.4);
            swift_getKeyPath();
            swift_getKeyPath();
            LOBYTE(aBlock.a) = v44;
            id v45 = v43;
            static Published.subscript.setter();
            sub_1001B8090();
            double v46 = &v45[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
            *(void *)double v46 = 0;
            v46[8] = 1;
            double v47 = (void *)swift_unknownObjectWeakLoadStrong();
            [v47 setEnabled:1];

            swift_unknownObjectWeakAssign();
            double v35 = 0;
            goto LABEL_11;
          }
LABEL_19:
          __break(1u);
          return result;
        }
        uint64_t v61 = self;
        uint64_t v62 = swift_allocObject();
        *(void *)(v62 + 16) = v14;
        *(void *)(v62 + 24) = v3;
        *(void *)&aBlock.tx = sub_10017CC60;
        *(void *)&aBlock.ty = v62;
        *(void *)&aBlock.a = _NSConcreteStackBlock;
        *(void *)&aBlock.b = 1107296256;
        *(void *)&aBlock.c = sub_100049AB4;
        *(void *)&aBlock.d = &unk_10048FF78;
        id v63 = _Block_copy(&aBlock);
        uint64_t v64 = v14;
        uint64_t v65 = v3;
        swift_release();
        uint64_t v66 = swift_allocObject();
        *(void *)(v66 + 16) = v65;
        *(void *)&aBlock.tx = sub_10017CC68;
        *(void *)&aBlock.ty = v66;
        *(void *)&aBlock.a = _NSConcreteStackBlock;
        *(void *)&aBlock.b = 1107296256;
        *(void *)&aBlock.c = sub_100176FA8;
        *(void *)&aBlock.d = &unk_10048FFC8;
        Class v67 = _Block_copy(&aBlock);
        double v68 = v65;
        swift_release();
        [v61 animateWithDuration:0 delay:v63 options:v67 animations:0.2 completion:0.0];
        _Block_release(v67);
        uint64_t v60 = v63;
      }
      _Block_release(v60);
      double v35 = 0;
      goto LABEL_15;
    }
  }
  return result;
}

void sub_1001737F4(unsigned __int8 a1, char a2)
{
  uint64_t v3 = v2;
  if (a1 <= 1u)
  {
    *(unsigned char *)(v2 + qword_1004CE138) = a1;
    return;
  }
  if ((*(unsigned char *)(v2 + qword_1004CE130) & 1) == 0)
  {
    uint64_t v5 = qword_1004CE068;
    uint64_t v6 = *(void **)(v2 + qword_1004CE068);
    if (v6)
    {
      id v7 = v6;
      sub_1001C16E0(v7);
      [v7 removeFromSuperview];

      uint64_t v6 = *(void **)(v3 + v5);
    }
    *(void *)(v3 + v5) = 0;
  }
  if (a2)
  {
    uint64_t v8 = *(uint64_t (**)(void ***))(**(void **)(v3 + qword_1004CE050) + 400);
    swift_retain();
    uint64_t v9 = (void (*)(void ***, void))v8(&v31);
    swift_unknownObjectWeakAssign();
    v9(&v31, 0);
    swift_release();
  }
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  if (!Strong)
  {
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  uint64_t v11 = Strong;
  [Strong setEnabled:1];

  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if ((static UIDevice.isIPhone()() & 1) == 0) {
    return;
  }
  uint64_t v12 = *(uint64_t (**)(void ***))(**(void **)(v3 + qword_1004CE038) + 400);
  swift_retain();
  uint64_t v13 = (void (*)(void ***, void))v12(&v31);
  *(unsigned char *)(v14 + 4) = 0;
  v13(&v31, 0);
  swift_release();
  char v15 = *(char **)(v3 + qword_1004CE018);
  char v16 = *(void **)&v15[OBJC_IVAR____TtC7Measure17CardContainerView_darkeningView];
  if (!v16) {
    goto LABEL_23;
  }
  [v16 alpha];
  if (v17 != 0.0)
  {
    uint64_t v18 = self;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v15;
    *(void *)(v19 + 24) = 0;
    double v35 = (void (*)())sub_10017EA34;
    uint64_t v36 = v19;
    uint64_t v31 = _NSConcreteStackBlock;
    uint64_t v32 = 1107296256;
    id v33 = sub_100049AB4;
    uint64_t v34 = &unk_100490590;
    uint64_t v20 = _Block_copy(&v31);
    uint64_t v21 = v15;
    swift_release();
    [v18 animateWithDuration:v20 animations:0.2];
    _Block_release(v20);
  }
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  if (!*((void *)&xmmword_1004F7FD0 + 1)) {
    goto LABEL_24;
  }
  id v22 = [*((id *)&xmmword_1004F7FD0 + 1) tabBarController];
  if (v22)
  {
    uint64_t v23 = v22;
    id v24 = [v22 tabBar];
    [v24 alpha];
    double v26 = v25;

    if (v26 == 1.0)
    {
    }
    else
    {
      uint64_t v27 = self;
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v23;
      *(void *)(v28 + 24) = 0x3FF0000000000000;
      double v35 = sub_1000B9480;
      uint64_t v36 = v28;
      uint64_t v31 = _NSConcreteStackBlock;
      uint64_t v32 = 1107296256;
      id v33 = sub_100049AB4;
      uint64_t v34 = &unk_1004905E0;
      uint64_t v29 = _Block_copy(&v31);
      id v30 = v23;
      swift_release();
      [v27 animateWithDuration:0 delay:v29 options:0 animations:0.15 completion:0.0];

      _Block_release(v29);
    }
  }
}

void sub_100173C54(unsigned __int8 a1)
{
  unsigned int v2 = a1;
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v2 >= 2)
  {
    id v7 = *(char **)(v1 + qword_1004CE010);
    uint64_t v8 = OBJC_IVAR____TtC7Measure11HistoryView_tableView;
    [*(id *)&v7[OBJC_IVAR____TtC7Measure11HistoryView_tableView] reloadData];
    *(unsigned char *)(v1 + qword_1004CE090) = 0;
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    if (Strong)
    {
      uint64_t v10 = Strong;
      [Strong setEnabled:1];

      [v7 setHidden:1];
      uint64_t v11 = v1 + qword_1004CE058;
      swift_beginAccess();
      if (*(void *)(*(void *)v11 + 16) >= 2uLL)
      {
        id v12 = *(id *)&v7[v8];
        IndexPath.init(row:section:)();
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        [v12 scrollToRowAtIndexPath:isa atScrollPosition:1 animated:1];
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100173E30()
{
  id v1 = objc_allocWithZone(v0);
  sub_100173E50();
}

void sub_100173E50()
{
  id v1 = v0;
  swift_getObjectType();
  uint64_t v28 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v26 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[0] = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v25[0]);
  v25[1] = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = qword_1004CE008;
  *(void *)&v1[v5] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v6 = qword_1004CE020;
  uint64_t v7 = sub_100012894(&qword_1004CE600);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1004F8630;
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 272);
  swift_retain();
  *(void *)&v1[v6] = v10(KeyPath, v9);
  uint64_t v11 = qword_1004CE028;
  sub_100012894(&qword_1004CE608);
  swift_getKeyPath();
  *(void *)&v1[v11] = MutableStateBinding.__allocating_init(_:_:)();
  uint64_t v12 = qword_1004CE030;
  sub_100012894(&qword_1004CE610);
  swift_getKeyPath();
  *(void *)&v1[v12] = MutableStateBinding.__allocating_init(_:_:)();
  uint64_t v13 = qword_1004CE038;
  sub_100012894((uint64_t *)&unk_1004CE618);
  swift_getKeyPath();
  *(void *)&v1[v13] = MutableStateBinding.__allocating_init(_:_:)();
  uint64_t v14 = qword_1004CE040;
  uint64_t v15 = sub_100012894((uint64_t *)&unk_1004C7F20);
  uint64_t v16 = swift_getKeyPath();
  uint64_t v17 = qword_1004F8630;
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 272);
  swift_retain();
  *(void *)&v1[v14] = v18(v16, v17);
  uint64_t v19 = qword_1004CE048;
  sub_100012894(&qword_1004CE628);
  swift_getKeyPath();
  *(void *)&v1[v19] = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v20 = qword_1004CE050;
  sub_100012894(&qword_1004CE630);
  swift_getKeyPath();
  type metadata accessor for SpatialGenericPlatter();
  *(void *)&v1[v20] = MutableStateValue.__allocating_init(_:_:)();
  *(void *)&v1[qword_1004CE058] = _swiftEmptyArrayStorage;
  *(void *)&v1[qword_1004CE060] = &_swiftEmptySetSingleton;
  *(void *)&v1[qword_1004CE068] = 0;
  v1[qword_1004CE090] = 0;
  *(void *)&v1[qword_1004CE098] = 0;
  uint64_t v21 = qword_1004CE0A8;
  if (qword_1004C27E0 != -1) {
    swift_once();
  }
  double v22 = *(double *)&qword_1004F7DF8;
  if (qword_1004C2800 != -1) {
    swift_once();
  }
  *(double *)&v1[v21] = v22 + *(double *)&qword_1004F7E18;
  *(void *)&v1[qword_1004CE0B0] = 0;
  *(void *)&v1[qword_1004CE0B8] = 0;
  *(void *)&v1[qword_1004CE0C0] = 0;
  swift_unknownObjectWeakInit();
  v1[qword_1004CE0D0] = 0;
  *(void *)&v1[qword_1004CE0D8] = &_swiftEmptySetSingleton;
  *(void *)&v1[qword_1004CE0E0] = &_swiftEmptySetSingleton;
  *(void *)&v1[qword_1004CE0E8] = 0;
  *(void *)&v1[qword_1004CE0F0] = 0;
  *(void *)&v1[qword_1004CE0F8] = 0;
  v1[qword_1004CE108] = 0;
  v1[qword_1004CE110] = 1;
  v1[qword_1004CE118] = 1;
  v1[qword_1004CE120] = 1;
  v1[qword_1004CE128] = 1;
  v1[qword_1004CE130] = 0;
  v1[qword_1004CE138] = 1;
  v1[qword_1004CE140] = 0;
  uint64_t v23 = &v1[qword_1004CE148];
  *(void *)uint64_t v23 = 0;
  v23[8] = 1;
  swift_unknownObjectWeakInit();
  uint64_t v24 = qword_1004CE158;
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  static DispatchQoS.userInteractive.getter();
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_10017E9EC((unint64_t *)&qword_1004C6B50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100012894(&qword_1004CF220);
  sub_10002179C((unint64_t *)&qword_1004C6B60, &qword_1004CF220);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v27, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v28);
  *(void *)&v1[v24] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v1[qword_1004CE160] = 0;
  *(void *)&v1[qword_1004CE168] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1001744F4()
{
  uint64_t v1 = sub_100012894((uint64_t *)&unk_1004D0EF0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for MeasurementHistoryItem();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  sub_1001746A4((uint64_t)v3);
  sub_10002B9C0((uint64_t)v3, (uint64_t *)&unk_1004D0EF0);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + qword_1004CE038) + 200);
  uint64_t v6 = swift_retain();
  uint64_t v7 = v5(v6);
  swift_release();
  uint64_t v12 = v0;
  (*(void (**)(void (*)(), unsigned char *))(*(void *)v7 + 296))(sub_10017E888, v11);
  swift_release();
  uint64_t v10 = v0;
  swift_retain();
  StateValue.ifUpdated(_:)();
  return swift_release();
}

void *sub_1001746A4(uint64_t a1)
{
  void (*v36)(double *__return_ptr, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char isUniquelyReferenced_nonNull_native;
  void *v51;
  void *v52;
  char *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  unsigned char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  void *v68;
  const void *v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  Class isa;
  double v74;
  CGFloat v75;
  double v76;
  CGFloat v77;
  double v78;
  CGFloat v79;
  double v80;
  CGFloat v81;
  double Height;
  double *v83;
  id v84;
  char *v85;
  Class v86;
  double v87;
  uint64_t v88;
  double v89;
  uint64_t v90;
  double v91;
  double v92;
  uint64_t v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  uint64_t *v101;
  double v102;
  void *v103;
  uint64_t v104;
  void *v105;
  unsigned char *v106;
  uint64_t v107;
  uint64_t (*v108)(double *);
  void (*v109)(double *, void);
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  void v125[106];
  double v126;
  uint64_t v127;
  void *v128;
  void *v129;
  void *v130;
  uint64_t v131;
  CGRect v132;
  CGRect v133;

  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v119 = *(void *)(v3 - 8);
  uint64_t v120 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v116 = v5;
  uint64_t v117 = (char *)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v118 = (char *)&v111 - v6;
  uint64_t v7 = sub_100012894(&qword_1004C69A8);
  __chkstk_darwin(v7 - 8);
  uint64_t v115 = (uint64_t)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SpatialPlattersHistoryItem();
  __chkstk_darwin(v9 - 8);
  uint64_t v114 = (uint64_t)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MeasurementHistoryItem();
  uint64_t v12 = *(char **)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v113 = (uint64_t)&v111 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v122 = (uint64_t *)((char *)&v111 - v15);
  uint64_t v16 = sub_100012894((uint64_t *)&unk_1004D0EF0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v123 = (uint64_t)&v111 - v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v111 - v22;
  long long v124 = type metadata accessor for MeasurementsHistory();
  uint64_t v24 = __chkstk_darwin(v124);
  uint64_t v26 = (char *)&v111 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v111 - v27;
  int v121 = v12;
  uint64_t v29 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((void *)v12 + 6);
  if (v29(a1, 1, v11) != 1) {
    goto LABEL_4;
  }
  uint64_t v112 = a1;
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  sub_1000735DC((uint64_t)&v28[*(int *)(v124 + 20)], (uint64_t)v23, (uint64_t *)&unk_1004D0EF0);
  sub_10017E4C4((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for MeasurementsHistory);
  unsigned int v30 = v29((uint64_t)v23, 1, v11);
  a1 = v112;
  uint64_t result = (void *)sub_10002B9C0((uint64_t)v23, (uint64_t *)&unk_1004D0EF0);
  if (v30 != 1 && (v1[qword_1004CE108] & 1) == 0)
  {
LABEL_4:
    sub_1000735DC(a1, (uint64_t)v19, (uint64_t *)&unk_1004D0EF0);
    uint64_t v32 = v11;
    if (v29((uint64_t)v19, 1, v11) == 1)
    {
      swift_retain();
      StateValue.wrappedValue.getter();
      swift_release();
      uint64_t v33 = v123;
      sub_1000735DC((uint64_t)&v26[*(int *)(v124 + 20)], v123, (uint64_t *)&unk_1004D0EF0);
      sub_10017E4C4((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for MeasurementsHistory);
      sub_10002B9C0((uint64_t)v19, (uint64_t *)&unk_1004D0EF0);
    }
    else
    {
      uint64_t v33 = v123;
      sub_10017DC60((uint64_t)v19, v123, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
      (*((void (**)(uint64_t, void, uint64_t, uint64_t))v121 + 7))(v33, 0, 1, v11);
    }
    if (v29(v33, 1, v11) == 1) {
      return (void *)sub_10002B9C0(v33, (uint64_t *)&unk_1004D0EF0);
    }
    uint64_t v34 = v122;
    sub_10017DC60(v33, (uint64_t)v122, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
    double v35 = v1;
    uint64_t v36 = *(void (**)(double *__return_ptr, uint64_t))(**(void **)&v1[qword_1004CE048] + 144);
    uint64_t v37 = swift_retain();
    v36(&v126, v37);
    swift_release();
    double v38 = *(void *)&v126;
    id v39 = *v34;
    double v40 = v34[1];
    swift_bridgeObjectRetain();
    LOBYTE(v36) = sub_1001C183C(v39, v40, v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v36) {
      return (void *)sub_10017E4C4((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
    }
    CGFloat v41 = (uint64_t *)&v35[qword_1004CE060];
    swift_beginAccess();
    double v42 = *v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    CGFloat v43 = sub_1001C183C(v39, v40, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v43) {
      return (void *)sub_10017E4C4((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
    }
    uint64_t v112 = v32;
    char v44 = v113;
    sub_10017DBF8((uint64_t)v34, v113, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
    id v45 = v114;
    sub_1000A2EC8(v44, v114);
    double v46 = &v35[qword_1004CE058];
    swift_beginAccess();
    double v47 = v45;
    id v48 = v115;
    sub_10017DC60(v47, v115, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
    sub_10006FD78(0, 0, v48);
    uint64_t v49 = *(void *)&v35[qword_1004CE078];
    *(unsigned char *)(v49 + OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded) = sub_10016E14C() & 1;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v125[0] = *v41;
    *CGFloat v41 = 0x8000000000000000;
    sub_10017D914(v39, v40, isUniquelyReferenced_nonNull_native);
    *CGFloat v41 = v125[0];
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_bridgeObjectRelease();
    double v51 = v35;
    if (v35[qword_1004CE090] == 1)
    {
      v35[qword_1004CE090] = 0;
      uint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
      if (!result)
      {
        __break(1u);
        return result;
      }
      double v52 = result;
      [result setEnabled:1];
    }
    long long v124 = v49;
    Class v53 = v118;
    IndexPath.init(row:section:)();
    uint64_t v115 = *(void *)&v35[qword_1004CE010];
    unint64_t v54 = OBJC_IVAR____TtC7Measure11HistoryView_tableView;
    unint64_t v55 = *(void **)(v115 + OBJC_IVAR____TtC7Measure11HistoryView_tableView);
    int v121 = v46;
    uint64_t v57 = v119;
    uint64_t v56 = v120;
    double v58 = v117;
    (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v117, v53, v120);
    id v59 = (*(unsigned __int8 *)(v57 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    uint64_t v60 = swift_allocObject();
    *(void *)(v60 + 16) = v51;
    (*(void (**)(unint64_t, char *, uint64_t))(v57 + 32))(v60 + v59, v58, v56);
    uint64_t v61 = swift_allocObject();
    *(void *)(v61 + 16) = sub_10017E5F0;
    *(void *)(v61 + 24) = v60;
    uint64_t v123 = v60;
    CGRect v130 = sub_1000949B8;
    uint64_t v131 = v61;
    uint64_t v126 = COERCE_DOUBLE(_NSConcreteStackBlock);
    uint64_t v127 = 1107296256;
    CGRect v128 = sub_1000FA194;
    CGRect v129 = &unk_1004906A8;
    uint64_t v62 = _Block_copy(&v126);
    id v63 = v55;
    uint64_t v64 = v51;
    swift_release();
    uint64_t v65 = swift_allocObject();
    swift_unknownObjectWeakInit();
    CGRect v130 = sub_10017E664;
    uint64_t v131 = v65;
    uint64_t v126 = COERCE_DOUBLE(_NSConcreteStackBlock);
    uint64_t v127 = 1107296256;
    Class v67 = v121;
    uint64_t v66 = (uint64_t)v122;
    CGRect v128 = sub_100176FA8;
    CGRect v129 = &unk_1004906D0;
    double v68 = _Block_copy(&v126);
    swift_release();
    [v63 performBatchUpdates:v62 completion:v68];
    CGFloat v69 = v68;
    uint64_t v70 = v54;
    CGAffineTransform v71 = v115;
    _Block_release(v69);
    _Block_release(v62);

    v64[qword_1004CE0D0] = 1;
    double v72 = *(id *)(v71 + v70);
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    [v72 rectForRowAtIndexPath:isa];
    CGFloat v75 = v74;
    double v77 = v76;
    double v79 = v78;
    unint64_t v81 = v80;

    v132.origin.x = v75;
    v132.origin.y = v77;
    v132.size.width = v79;
    v132.size.height = v81;
    Height = CGRectGetHeight(v132);
    uint64_t v83 = (double *)&v64[qword_1004CE148];
    if (v64[qword_1004CE148 + 8] == 1)
    {
      sub_100026A04(v66 + *(int *)(v112 + 28), (uint64_t)v125);
      sub_100026A04((uint64_t)v125, (uint64_t)&v126);
      if (!sub_100026A60((uint64_t)&v126))
      {
        sub_100026A6C((uint64_t)&v126);
        *uint64_t v83 = Height;
        *((unsigned char *)v83 + 8) = 0;
      }
    }
    if (*(void *)(*(void *)v67 + 16) >= 2uLL)
    {
      char v84 = *(id *)(v71 + v70);
      uint64_t v85 = v117;
      IndexPath.init(row:section:)();
      uint64_t v86 = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v119 + 8))(v85, v120);
      [v84 scrollToRowAtIndexPath:v86 atScrollPosition:1 animated:1];
    }
    swift_retain();
    uint64_t v87 = sub_10016E3B4();
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v126 = v87;
    static Published.subscript.setter();
    unint64_t v88 = qword_1004CE140;
    if ((v64[qword_1004CE140] & 1) == 0)
    {
      sub_1001B7844();
      v64[v88] = 1;
      swift_retain();
      id v89 = sub_10016E3B4();
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v126 = v89;
      static Published.subscript.setter();
    }
    uint64_t v90 = qword_1004CE098;
    uint64_t v91 = *(double *)&v64[qword_1004CE098];
    id v92 = Height + v91;
    *(double *)&v64[qword_1004CE098] = v92;
    uint64_t v93 = *(void *)&v64[qword_1004CE018];
    sub_10001D4A4(v93);
    if (v92 <= v94 || (sub_10001D4A4(v93), v91 <= v95) && (CGRect v96 = *(double *)&v64[v90], sub_10001D4A4(v93), v97 < v96))
    {
      swift_retain();
      sub_10001D4A4(v93);
      if (*(double *)&v64[v90] < v98) {
        uint64_t v98 = *(double *)&v64[v90];
      }
      uint64_t v99 = v98 + -0.5;
      if (qword_1004C2820 != -1) {
        swift_once();
      }
      uint64_t v100 = *(double *)&qword_1004F7E38;
      sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
      if (static UIDevice.isIPhone()()) {
        char v101 = &OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView;
      }
      else {
        char v101 = &OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView;
      }
      [*(id *)(v93 + *v101) bounds];
      uint64_t v102 = v99 + v100 + CGRectGetHeight(v133);
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v126 = v102;
      static Published.subscript.setter();
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (LOBYTE(v126))
      {
        sub_1001B7844();
      }
      else
      {
        id v103 = self;
        uint64_t v104 = swift_allocObject();
        *(void *)(v104 + 16) = v64;
        CGRect v130 = sub_10017E66C;
        uint64_t v131 = v104;
        uint64_t v126 = COERCE_DOUBLE(_NSConcreteStackBlock);
        uint64_t v127 = 1107296256;
        CGRect v128 = sub_100049AB4;
        CGRect v129 = &unk_100490720;
        int v105 = _Block_copy(&v126);
        char v106 = v64;
        swift_release();
        [v103 animateWithDuration:0 delay:v105 options:0 animations:0.3 completion:0.0];
        _Block_release(v105);
      }
    }
    float v107 = *(void *)(*(void *)v67 + 16);
    double v108 = *(uint64_t (**)(double *))(**(void **)&v64[qword_1004CE028] + 400);
    swift_retain();
    objc_super v109 = (void (*)(double *, void))v108(&v126);
    *uint64_t v110 = v107;
    v109(&v126, 0);
    swift_release();
    (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v120);
    sub_10017E4C4(v66, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
    return (void *)swift_release();
  }
  return result;
}

void sub_1001755AC()
{
  void (*v3)(void ***__return_ptr, uint64_t);
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void (*v9)(void ***__return_ptr, uint64_t);
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *Strong;
  void *v19;
  void **v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  void *v23;
  void *v24;
  uint64_t v25;

  uint64_t isEscapingClosureAtFileLocation = v0;
  if (*(unsigned char *)(v0 + qword_1004CE118))
  {
    *(unsigned char *)(v0 + qword_1004CE118) = 0;
    return;
  }
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  uint64_t v2 = &qword_1004CE000;
  if (static UIDevice.isIPhone()())
  {
    uint64_t v3 = *(void (**)(void ***__return_ptr, uint64_t))(**(void **)(v0 + qword_1004CE038) + 144);
    uint64_t v4 = swift_retain();
    v3(&v20, v4);
    swift_release();
    if (BYTE3(v20) == 1)
    {
      uint64_t v5 = self;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = isEscapingClosureAtFileLocation;
      uint64_t v2 = (uint64_t *)swift_allocObject();
      v2[2] = (uint64_t)sub_10017E8F0;
      v2[3] = v6;
      uint64_t v24 = sub_1000949B8;
      uint64_t v25 = (uint64_t)v2;
      uint64_t v20 = _NSConcreteStackBlock;
      uint64_t v21 = 1107296256;
      uint64_t v22 = sub_1000FA194;
      uint64_t v23 = &unk_1004908B0;
      uint64_t v7 = _Block_copy(&v20);
      uint64_t v8 = (id)isEscapingClosureAtFileLocation;
      swift_retain();
      swift_release();
      [v5 performWithoutAnimation:v7];
      _Block_release(v7);
      uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0) {
        return;
      }
      __break(1u);
    }
  }
  uint64_t v9 = *(void (**)(void ***__return_ptr, uint64_t))(**(void **)(isEscapingClosureAtFileLocation + v2[7])
                                                            + 144);
  uint64_t v10 = swift_retain();
  v9(&v20, v10);
  swift_release();
  if (BYTE3(v20)) {
    uint64_t v11 = 0.0;
  }
  else {
    uint64_t v11 = 1.0;
  }
  [*(id *)(isEscapingClosureAtFileLocation + qword_1004CE010) alpha];
  if (v12 != v11)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v20 <= 1u)
    {
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = isEscapingClosureAtFileLocation;
      *(double *)(v13 + 24) = v11;
      uint64_t v14 = objc_allocWithZone((Class)UIViewPropertyAnimator);
      uint64_t v24 = sub_10017E8D0;
      uint64_t v25 = v13;
      uint64_t v20 = _NSConcreteStackBlock;
      uint64_t v21 = 1107296256;
      uint64_t v22 = sub_100049AB4;
      uint64_t v23 = &unk_100490838;
      uint64_t v15 = _Block_copy(&v20);
      uint64_t v16 = (id)isEscapingClosureAtFileLocation;
      swift_release();
      uint64_t v17 = [v14 initWithDuration:v15 dampingRatio:0.5 animations:0.6];
      _Block_release(v15);
      [v17 setInterruptible:0];
      [v17 startAnimation];
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v19 = Strong;
        [Strong dismissViewControllerAnimated:1 completion:0];
      }
      else
      {
      }
    }
  }
}

void sub_1001759AC()
{
  void (*v2)(void *__return_ptr, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unsigned char *v8;
  void (*v9)();
  void (*v10)(void *__return_ptr, uint64_t);
  uint64_t v11;
  uint64_t Strong;
  void *v13;
  void (*v14)(void *__return_ptr, uint64_t);
  uint64_t v15;
  void (*v16)(void *__return_ptr, uint64_t);
  uint64_t v17;
  void v18[6];

  if (v0[qword_1004CE120])
  {
    v0[qword_1004CE120] = 0;
    return;
  }
  uint64_t v1 = qword_1004CE038;
  uint64_t v2 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)&v0[qword_1004CE038] + 144);
  uint64_t v3 = swift_retain();
  v2(v18, v3);
  swift_release();
  if (LOBYTE(v18[0]))
  {
    uint64_t v4 = self;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v0;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_10017E8B8;
    *(void *)(v6 + 24) = v5;
    v18[4] = sub_1000949B8;
    v18[5] = v6;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 1107296256;
    v18[2] = sub_1000FA194;
    v18[3] = &unk_1004907E8;
    uint64_t v7 = _Block_copy(v18);
    uint64_t v8 = v0;
    swift_retain();
    swift_release();
    [(id)v4 performWithoutAnimation:v7];
    _Block_release(v7);
    LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v4)
    {
      __break(1u);
      return;
    }
    sub_100175FE8((uint64_t)v8);
    uint64_t v9 = sub_10017E8B8;
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)&v0[v1] + 144);
  uint64_t v11 = swift_retain();
  v10(v18, v11);
  swift_release();
  if (BYTE3(v18[0]) == 1) {
    sub_100175FE8((uint64_t)v0);
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = (void *)Strong;
    uint64_t v14 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)&v0[v1] + 144);
    uint64_t v15 = swift_retain();
    v14(v18, v15);
    swift_release();
    if (LOBYTE(v18[0]) == 2
      || (uint64_t v16 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)&v0[v1] + 144),
          uint64_t v17 = swift_retain(),
          v16(v18, v17),
          swift_release(),
          LOBYTE(v18[0]) == 1))
    {
      [v13 dismissViewControllerAnimated:0 completion:0];
    }
  }
  sub_100028914((uint64_t)v9);
}

void sub_100175CC0(unint64_t *a1, uint64_t a2)
{
  void (*v13)(uint64_t *__return_ptr, uint64_t);
  uint64_t v14;
  uint64_t v15;

  unint64_t v3 = *a1;
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  int v4 = static UIDevice.isIPhone()();
  uint64_t v5 = qword_1004CE110;
  if ((v4 & 1) == 0 || *(unsigned char *)(a2 + qword_1004CE110))
  {
    CGFloat v6 = *(double *)(a2 + qword_1004CE070);
    CGFloat v7 = *(double *)(a2 + qword_1004CE070 + 8);
    CGFloat v8 = *(double *)(a2 + qword_1004CE070 + 16);
    CGFloat v9 = *(double *)(a2 + qword_1004CE070 + 24);
    uint64_t v10 = *(void **)(a2 + qword_1004CE010);
    if ((v4 | *(unsigned __int8 *)(a2 + qword_1004CE110)))
    {
      char v11 = 0;
      char v12 = 1;
    }
    else
    {
      uint64_t v13 = *(void (**)(uint64_t *__return_ptr, uint64_t))(**(void **)(a2 + qword_1004CE038) + 144);
      uint64_t v14 = swift_retain();
      v13(&v15, v14);
      swift_release();
      char v11 = BYTE3(v15) ^ 1;
      char v12 = *(unsigned char *)(a2 + v5);
    }
    sub_10001CC9C(v3, v10, v11 & 1, *(void *)(a2 + qword_1004CE078), v12, v6, v7, v8, v9);
    if (*(unsigned char *)(a2 + v5) == 1) {
      *(unsigned char *)(a2 + v5) = 0;
    }
  }
}

void sub_100175E08(uint64_t a1)
{
  uint64_t v2 = sub_100012894((uint64_t *)&unk_1004CE5F0);
  __chkstk_darwin(v2 - 8);
  int v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = *(void **)(a1 + qword_1004CE068);
  if (v5)
  {
    id v6 = v5;
    sub_1001C14AC(0);
    CGFloat v7 = *(uint64_t (**)(unsigned char *))(**(void **)(a1 + qword_1004CE050) + 400);
    swift_retain();
    CGFloat v8 = (void (*)(unsigned char *, void))v7(v12);
    swift_unknownObjectWeakAssign();
    v8(v12, 0);
    swift_release();
    uint64_t v9 = type metadata accessor for IndexPath();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
    sub_100172CC0(0, (uint64_t)v4);

    sub_10002B9C0((uint64_t)v4, (uint64_t *)&unk_1004CE5F0);
  }
  sub_100171B4C(0, 1u, 0);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v11 = Strong;
    [Strong dismissViewControllerAnimated:1 completion:0];
  }
}

void sub_100175FE8(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + qword_1004CE0A0);
  id v2 = [v1 presentedViewController];
  if (v2)
  {
    id v3 = v2;
    sub_10001C99C(0, &qword_1004CE6A0);
    if (([v3 isKindOfClass:swift_getObjCClassFromMetadata()] & 1) != 0
      || (sub_10001C99C(0, &qword_1004CE6A8),
          [v3 isKindOfClass:swift_getObjCClassFromMetadata()]))
    {
      [v1 dismissViewControllerAnimated:0 completion:0];
    }
  }
}

void sub_1001760D8(uint64_t a1)
{
  uint64_t v2 = sub_100012894((uint64_t *)&unk_1004CE5F0);
  __chkstk_darwin(v2 - 8);
  int v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = *(void **)(a1 + qword_1004CE068);
  if (v5)
  {
    id v6 = v5;
    sub_1001C14AC(0);
    CGFloat v7 = *(uint64_t (**)(unsigned char *))(**(void **)(a1 + qword_1004CE050) + 400);
    swift_retain();
    CGFloat v8 = (void (*)(unsigned char *, void))v7(v10);
    swift_unknownObjectWeakAssign();
    v8(v10, 0);
    swift_release();
    uint64_t v9 = type metadata accessor for IndexPath();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
    sub_100172CC0(0, (uint64_t)v4);

    sub_10002B9C0((uint64_t)v4, (uint64_t *)&unk_1004CE5F0);
  }
  sub_100171B4C(0, 1u, 0);
}

void sub_100176288()
{
  uint64_t v1 = v0;
  id v2 = [v0 subviews];
  sub_10001C99C(0, (unint64_t *)&qword_1004CA030);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (!v4) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_16;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_28;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(v3 + 8 * i + 32);
    }
    CGFloat v7 = v6;
    type metadata accessor for SpatialGenericPlatter();
    if (swift_dynamicCastClass())
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
    }
  }
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v8 = [v1 subviews];
  unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_18;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_26;
  }
LABEL_18:
  if (v10 >= 1)
  {
    uint64_t v11 = 0;
    do
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v12 = *(id *)(v9 + 8 * v11 + 32);
      }
      uint64_t v13 = v12;
      ++v11;
      unint64_t v14 = sub_100176288();
      sub_100122718(v14);
    }
    while (v10 != v11);
    goto LABEL_26;
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_100176530()
{
  return sub_100176554();
}

uint64_t sub_100176554()
{
  uint64_t v1 = v0;
  id v2 = &v0[qword_1004CE058];
  swift_beginAccess();
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(*(void *)v2 + 16);
  if (v4)
  {
    uint64_t v25 = v2;
    uint64_t v5 = *(void *)(type metadata accessor for SpatialPlattersHistoryItem() - 8);
    unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v26 = qword_1004CE048;
    uint64_t v7 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    id v8 = (uint64_t *)(v6 + v3 + 8);
    do
    {
      uint64_t v9 = *(v8 - 1);
      uint64_t v10 = *v8;
      uint64_t v11 = v1;
      id v12 = *(uint64_t (**)(void ***))(**(void **)&v1[v26] + 400);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v13 = (void (*)(void ***, void))v12(&aBlock);
      uint64_t v15 = v14;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v33 = *v15;
      *uint64_t v15 = 0x8000000000000000;
      sub_10017D914(v9, v10, isUniquelyReferenced_nonNull_native);
      *uint64_t v15 = v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13(&aBlock, 0);
      uint64_t v1 = v11;
      swift_release();
      id v8 = (uint64_t *)((char *)v8 + v7);
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    id v2 = v25;
  }
  *(void *)id v2 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)&v1[qword_1004CE078];
  *(unsigned char *)(v17 + OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded) = sub_10016E14C() & 1;
  uint64_t v18 = *(void *)&v1[qword_1004CE028];
  CGAffineTransform aBlock = 0;
  LOWORD(v28) = 1;
  uint64_t v19 = *(void (**)(void ***))(*(void *)v18 + 392);
  swift_retain();
  v19(&aBlock);
  swift_release();
  *(void *)&v1[qword_1004CE098] = 0;
  uint64_t v20 = self;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v1;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_10017E908;
  *(void *)(v22 + 24) = v21;
  uint64_t v31 = sub_1000949B8;
  uint64_t v32 = v22;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v28 = 1107296256;
  uint64_t v29 = sub_1000FA194;
  unsigned int v30 = &unk_100490928;
  uint64_t v23 = _Block_copy(&aBlock);
  v1;
  swift_retain();
  swift_release();
  [(id)v20 performWithoutAnimation:v23];
  _Block_release(v23);
  LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v20)
  {
    __break(1u);
  }
  else
  {
    sub_100171B4C(0, 1u, 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_100176914(uint64_t result, uint64_t a2)
{
  if ((result & 1) == 0)
  {
    *(unsigned char *)(a2 + qword_1004CE130) = 0;
    id v2 = *(uint64_t (**)(unsigned char *))(**(void **)(a2 + qword_1004CE028) + 400);
    swift_retain();
    uint64_t v3 = (void (*)(unsigned char *, void))v2(v5);
    *(unsigned char *)(v4 + 9) = 0;
    v3(v5, 0);
    return swift_release();
  }
  return result;
}

void sub_1001769C0()
{
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  if (*((void *)&xmmword_1004F7FD0 + 1))
  {
    id v0 = [*((id *)&xmmword_1004F7FD0 + 1) tabBarController];
    if (v0)
    {
      id v8 = v0;
      id v1 = [v0 tabBar];
      [v1 alpha];
      double v3 = v2;

      if (v3 == 1.0)
      {
      }
      else
      {
        uint64_t v4 = self;
        uint64_t v5 = swift_allocObject();
        *(void *)(v5 + 16) = v8;
        *(void *)(v5 + 24) = 0x3FF0000000000000;
        aBlock[4] = sub_1000B9480;
        void aBlock[5] = v5;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100049AB4;
        aBlock[3] = &unk_100490540;
        unint64_t v6 = _Block_copy(aBlock);
        id v7 = v8;
        swift_release();
        [v4 animateWithDuration:0 delay:v6 options:0 animations:0.15 completion:0.0];

        _Block_release(v6);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100176B98(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  id v8 = *(char **)(a1 + qword_1004CE010);
  uint64_t v9 = OBJC_IVAR____TtC7Measure11HistoryView_tableView;
  [*(id *)&v8[OBJC_IVAR____TtC7Measure11HistoryView_tableView] reloadData];
  *(unsigned char *)(a1 + qword_1004CE090) = 0;
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  if (Strong)
  {
    uint64_t v11 = Strong;
    [Strong setEnabled:1];

    [v8 setHidden:1];
    uint64_t v12 = a1 + qword_1004CE058;
    swift_beginAccess();
    if (*(void *)(*(void *)v12 + 16) > 1uLL)
    {
      id v13 = *(id *)&v8[v9];
      IndexPath.init(row:section:)();
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
      [v13 scrollToRowAtIndexPath:isa atScrollPosition:1 animated:1];
    }
    if ((a2 & 1) == 0)
    {
      *(unsigned char *)(a1 + qword_1004CE130) = 0;
      uint64_t v15 = *(uint64_t (**)(unsigned char *))(**(void **)(a1 + qword_1004CE028) + 400);
      swift_retain();
      uint64_t v16 = (void (*)(unsigned char *, void))v15(v19);
      *(unsigned char *)(v17 + 9) = 0;
      v16(v19, 0);
      swift_release();
    }
    sub_1001737F4(2u, 1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100176DF8(uint64_t a1, char a2)
{
  double v2 = *(void **)(a1 + qword_1004CE078);
  sub_1001B91E0(a2, 0, 0, 0.4);
  swift_getKeyPath();
  swift_getKeyPath();
  double v3 = v2;
  static Published.subscript.setter();
  sub_1001B8090();
  uint64_t v4 = &v3[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
  *(void *)uint64_t v4 = 0;
  v4[8] = 1;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    [Strong setEnabled:1];
  }
  return swift_unknownObjectWeakAssign();
}

void sub_100176EE4(uint64_t a1, char a2, uint64_t a3, unsigned __int8 a4)
{
  if ((a2 & 1) == 0)
  {
    *(unsigned char *)(a3 + qword_1004CE130) = 0;
    uint64_t v5 = *(uint64_t (**)(unsigned char *))(**(void **)(a3 + qword_1004CE028) + 400);
    swift_retain();
    uint64_t v6 = (void (*)(unsigned char *, void))v5(v8);
    *(unsigned char *)(v7 + 9) = 0;
    v6(v8, 0);
    swift_release();
  }
  sub_100173C54(a4);
}

uint64_t sub_100176FA8(uint64_t a1, uint64_t a2)
{
  double v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_100176FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894((uint64_t *)&unk_1004CE5F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000735DC(a1, (uint64_t)v6, (uint64_t *)&unk_1004CE5F0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10002B9C0((uint64_t)v6, (uint64_t *)&unk_1004CE5F0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v10, v6, v7);
    id v11 = *(id *)(*(void *)(a2 + qword_1004CE010) + OBJC_IVAR____TtC7Measure11HistoryView_tableView);
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    [v11 deselectRowAtIndexPath:isa animated:0];

    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  }
  *(unsigned char *)(a2 + qword_1004CE130) = 0;
  id v13 = *(uint64_t (**)(unsigned char *))(**(void **)(a2 + qword_1004CE028) + 400);
  swift_retain();
  unint64_t v14 = (void (*)(unsigned char *, void))v13(v18);
  *(unsigned char *)(v15 + 9) = 0;
  v14(v18, 0);
  swift_release();
  uint64_t v16 = *(void **)(a2 + qword_1004CE068);
  if (v16)
  {
    id v17 = v16;
    sub_1001C16E0(v17);
  }
}

id sub_10017726C(void *a1, uint64_t a2)
{
  [a1 transform];
  CGAffineTransformTranslate(&v6, &v7, *(CGFloat *)(a2 + qword_1004CE0A8), 0.0);
  CGAffineTransform v7 = v6;
  [a1 setTransform:&v7];
  uint64_t v4 = *(void **)(*(void *)(a2 + qword_1004CE018) + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView);
  CGAffineTransformMakeScale(&v7, 0.9, 0.9);
  [v4 setTransform:&v7];
  return [v4 setAlpha:0.0];
}

void sub_100177364(uint64_t a1)
{
  id v1 = *(void **)(a1 + qword_1004D0BD0);
  if (v1)
  {
    id v2 = v1;
    sub_1001B91E0(2, 0, 0, 0.4);
    swift_getKeyPath();
    swift_getKeyPath();
    double v3 = (char *)v2;
    static Published.subscript.setter();
    sub_1001B8090();
    uint64_t v4 = &v3[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
    *(void *)uint64_t v4 = 0;
    v4[8] = 1;
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      CGAffineTransform v6 = Strong;
      [Strong setEnabled:1];
    }
    swift_unknownObjectWeakAssign();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100177468(uint64_t a1)
{
  *(unsigned char *)(a1 + qword_1004CE130) = 0;
  id v1 = *(uint64_t (**)(unsigned char *))(**(void **)(a1 + qword_1004CE028) + 400);
  swift_retain();
  id v2 = (void (*)(unsigned char *, void))v1(v5);
  *(unsigned char *)(v3 + 9) = 0;
  v2(v5, 0);
  return swift_release();
}

id sub_10017750C(void *a1, uint64_t a2)
{
  [a1 transform];
  CGAffineTransformTranslate(&v6, &v7, -*(double *)(a2 + qword_1004CE0A8), 0.0);
  CGAffineTransform v7 = v6;
  [a1 setTransform:&v7];
  uint64_t v4 = *(void **)(*(void *)(a2 + qword_1004CE018) + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView);
  v7.a = 1.0;
  v7.b = 0.0;
  v7.c = 0.0;
  v7.d = 1.0;
  v7.tx = 0.0;
  v7.ty = 0.0;
  [v4 setTransform:&v7];
  return [v4 setAlpha:1.0];
}

void sub_1001775F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = qword_1004CE130;
  *(unsigned char *)(a2 + qword_1004CE130) = 0;
  uint64_t v4 = *(uint64_t (**)(unsigned char *))(**(void **)(a2 + qword_1004CE028) + 400);
  swift_retain();
  uint64_t v5 = (void (*)(unsigned char *, void))v4(v10);
  *(unsigned char *)(v6 + 9) = 0;
  v5(v10, 0);
  swift_release();
  if ((*(unsigned char *)(a2 + v3) & 1) == 0)
  {
    uint64_t v7 = qword_1004CE068;
    uint64_t v8 = *(void **)(a2 + qword_1004CE068);
    if (v8)
    {
      id v9 = v8;
      sub_1001C16E0(v9);
      [v9 removeFromSuperview];

      uint64_t v8 = *(void **)(a2 + v7);
    }
    *(void *)(a2 + v7) = 0;
  }
}

void sub_1001776E8(uint64_t a1)
{
  uint64_t v2 = qword_1004CE130;
  *(unsigned char *)(a1 + qword_1004CE130) = 0;
  uint64_t v3 = *(uint64_t (**)(unsigned char *))(**(void **)(a1 + qword_1004CE028) + 400);
  swift_retain();
  uint64_t v4 = (void (*)(unsigned char *, void))v3(v9);
  *(unsigned char *)(v5 + 9) = 0;
  v4(v9, 0);
  swift_release();
  if ((*(unsigned char *)(a1 + v2) & 1) == 0)
  {
    uint64_t v6 = qword_1004CE068;
    uint64_t v7 = *(void **)(a1 + qword_1004CE068);
    if (v7)
    {
      id v8 = v7;
      sub_1001C16E0(v8);
      [v8 removeFromSuperview];

      uint64_t v7 = *(void **)(a1 + v6);
    }
    *(void *)(a1 + v6) = 0;
  }
}

void sub_1001777DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(*(void *)(a1 + qword_1004CE010) + OBJC_IVAR____TtC7Measure11HistoryView_tableView);
  sub_100012894(&qword_1004CE688);
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1003F87F0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16))(v7 + v6, a2, v4);
  id v8 = v3;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v8 insertRowsAtIndexPaths:isa withRowAnimation:0];
}

void sub_100177928(char a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (unsigned char *)Strong;
    if (a1)
    {
      *uint64_t v5 = Contexts.UIKit.init()();
      (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
      char v8 = _dispatchPreconditionTest(_:)();
      (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
      if ((v8 & 1) == 0)
      {
        __break(1u);
        return;
      }
      v7[qword_1004CE0D0] = 0;
      sub_100177A78();
    }
  }
}

uint64_t sub_100177A78()
{
  uint64_t v1 = type metadata accessor for MeasurementHistoryItem();
  __chkstk_darwin(v1 - 8);
  uint64_t v43 = (uint64_t)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for SpatialPlattersHistoryItem();
  uint64_t v46 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v9 = Contexts.UIKit.init()();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  char v10 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
LABEL_40:
    __break(1u);
    return result;
  }
  uint64_t v12 = (void *)(v0 + qword_1004CE0D8);
  uint64_t result = swift_beginAccess();
  double v42 = v12;
  uint64_t v13 = *v12;
  if (*(void *)(*v12 + 16))
  {
    uint64_t v14 = *(void *)(v13 + 56);
    uint64_t v47 = v13 + 56;
    uint64_t v15 = 1 << *(unsigned char *)(v13 + 32);
    uint64_t v16 = -1;
    if (v15 < 64) {
      uint64_t v16 = ~(-1 << v15);
    }
    unint64_t v17 = v16 & v14;
    uint64_t v18 = (uint64_t *)(v0 + qword_1004CE058);
    uint64_t v19 = (uint64_t *)(v0 + qword_1004CE0E0);
    swift_bridgeObjectRetain();
    double v51 = v18;
    swift_beginAccess();
    char v44 = v19;
    uint64_t result = swift_beginAccess();
    int64_t v20 = 0;
    int64_t v48 = (unint64_t)(v15 + 63) >> 6;
    uint64_t v45 = v13;
    do
    {
LABEL_7:
      if (v17)
      {
        unint64_t v21 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        unint64_t v22 = v21 | (v20 << 6);
      }
      else
      {
        int64_t v23 = v20 + 1;
        if (__OFADD__(v20, 1)) {
          goto LABEL_38;
        }
        if (v23 >= v48)
        {
LABEL_35:
          swift_release();
          *double v42 = &_swiftEmptySetSingleton;
          swift_bridgeObjectRelease();
          double v40 = v44;
          swift_beginAccess();
          *double v40 = (uint64_t)&_swiftEmptySetSingleton;
          return swift_bridgeObjectRelease();
        }
        unint64_t v24 = *(void *)(v47 + 8 * v23);
        ++v20;
        if (!v24)
        {
          int64_t v20 = v23 + 1;
          if (v23 + 1 >= v48) {
            goto LABEL_35;
          }
          unint64_t v24 = *(void *)(v47 + 8 * v20);
          if (!v24)
          {
            int64_t v20 = v23 + 2;
            if (v23 + 2 >= v48) {
              goto LABEL_35;
            }
            unint64_t v24 = *(void *)(v47 + 8 * v20);
            if (!v24)
            {
              int64_t v25 = v23 + 3;
              if (v25 >= v48) {
                goto LABEL_35;
              }
              unint64_t v24 = *(void *)(v47 + 8 * v25);
              if (!v24)
              {
                while (1)
                {
                  int64_t v20 = v25 + 1;
                  if (__OFADD__(v25, 1)) {
                    goto LABEL_39;
                  }
                  if (v20 >= v48) {
                    goto LABEL_35;
                  }
                  unint64_t v24 = *(void *)(v47 + 8 * v20);
                  ++v25;
                  if (v24) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v20 = v25;
            }
          }
        }
LABEL_22:
        unint64_t v17 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v20 << 6);
      }
      uint64_t v26 = *v51;
      uint64_t v27 = *(void *)(*v51 + 16);
    }
    while (!v27);
    unint64_t v49 = v17;
    int64_t v50 = v20;
    uint64_t v28 = (uint64_t *)(*(void *)(v13 + 48) + 16 * v22);
    uint64_t v30 = *v28;
    uint64_t v29 = v28[1];
    uint64_t v31 = v46;
    unint64_t v32 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v33 = 0;
    uint64_t v34 = *(void *)(v31 + 72);
    while (1)
    {
      sub_10017DBF8(v26 + v32, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
      if (*v5 == v30 && v5[1] == v29) {
        break;
      }
      char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_10017E4C4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
      if (v36) {
        goto LABEL_33;
      }
      ++v33;
      v32 += v34;
      if (v27 == v33)
      {
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
LABEL_6:
        uint64_t v13 = v45;
        unint64_t v17 = v49;
        int64_t v20 = v50;
        goto LABEL_7;
      }
    }
    sub_10017E4C4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
LABEL_33:
    uint64_t result = swift_bridgeObjectRelease();
    if (v33 < *(void *)(*v51 + 16))
    {
      uint64_t v37 = v43;
      sub_10017DBF8(*v51 + v32, v43, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
      uint64_t v38 = *v44;
      swift_bridgeObjectRetain();
      char v39 = sub_1001C183C(v30, v29, v38);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100170F48(v33, v37, (v39 & 1) == 0);
      uint64_t result = sub_10017E4C4(v37, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
      goto LABEL_6;
    }
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  return result;
}

void sub_100177FD4()
{
  sub_100178110();
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_retain(*(id *)(*(void *)(*(void *)(v0 + qword_1004CE018)
                                       + OBJC_IVAR____TtC7Measure17CardContainerView_titleView)
                           + OBJC_IVAR____TtC7Measure13CardTitleView_leftItem));
    [v3 frame];
    double Width = CGRectGetWidth(v11);
    [v3 frame];
    double Height = CGRectGetHeight(v12);
    id v6 = sub_100012EEC(v2, (uint64_t)v3, 0.0, 0.0, Width, Height);

    swift_unknownObjectWeakAssign();
    uint64_t v7 = *(void **)(v0 + qword_1004CE0A0);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v9 = (id)Strong;
      [v7 presentViewController:];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100178110()
{
  uint64_t v1 = type metadata accessor for MeasurementHistoryItem();
  __chkstk_darwin(v1);
  id v3 = (uint64_t *)((char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for SpatialPlattersHistoryItem();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4 - 8);
  Class v67 = (uint64_t *)((char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  id v9 = (char *)&v60 - v8;
  char v10 = (uint64_t *)(v0 + qword_1004CE058);
  swift_beginAccess();
  uint64_t v66 = v10;
  uint64_t v11 = *v10;
  uint64_t v12 = *(void *)(*v10 + 16);
  if (v12)
  {
    unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v14 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    sub_10017DBF8(v11 + v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
    id v15 = 0;
    NSAttributedStringKey v63 = NSFontAttributeName;
    uint64_t v60 = v11;
    uint64_t v69 = v14;
    unint64_t v65 = v13;
    uint64_t v16 = v11 + v14 + v13;
    uint64_t v17 = v12 - 1;
    long long v62 = xmmword_1003F87F0;
    uint64_t v61 = (char *)&type metadata for Any + 8;
    uint64_t v64 = v1;
    uint64_t v19 = v66;
    uint64_t v18 = v67;
    while (1)
    {
      sub_10017DBF8((uint64_t)v9, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
      sub_10017E4C4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
      sub_100026A04((uint64_t)v3 + *(int *)(v1 + 28), (uint64_t)v74);
      sub_100026A04((uint64_t)v74, (uint64_t)v75);
      int v20 = sub_100026A60((uint64_t)v75);
      if (v20)
      {
        if (v20 == 1)
        {
          sub_100026A6C((uint64_t)v75);
          id v21 = sub_100027270((uint64_t)v3);
          if (!v21) {
            goto LABEL_21;
          }
        }
        else
        {
          sub_100026A6C((uint64_t)v75);
          id v21 = sub_1001D0DA8((uint64_t)v3);
          if (!v21) {
            goto LABEL_21;
          }
        }
        uint64_t v70 = v17;
      }
      else
      {
        uint64_t v70 = v17;
        sub_100026A6C((uint64_t)v75);
        sub_100026A04((uint64_t)v74, (uint64_t)v73);
        uint64_t v22 = sub_100026A6C((uint64_t)v73);
        uint64_t v68 = v3[2];
        sub_100012894(&qword_1004CE700);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = v62;
        uint64_t v24 = v16;
        id v25 = v15;
        uint64_t v26 = v9;
        NSAttributedStringKey v27 = v63;
        *(void *)(v23 + 32) = v63;
        uint64_t v28 = self;
        uint64_t v29 = v27;
        id v9 = v26;
        id v15 = v25;
        uint64_t v16 = v24;
        [v28 systemFontSize:v60, v61];
        *(void *)(v23 + 40) = [v28 systemFontOfSize:];
        unint64_t v30 = sub_1000E1418(v23);
        swift_bridgeObjectRetain();
        sub_100026E9C(v30);
        swift_bridgeObjectRelease();
        id v31 = objc_allocWithZone((Class)NSAttributedString);
        NSString v32 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_10017E9EC((unint64_t *)&qword_1004C39E0, type metadata accessor for Key);
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        uint64_t v1 = v64;
        swift_bridgeObjectRelease();
        id v34 = [v31 initWithString:v32 attributes:isa];

        id v21 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v34];
        uint64_t v35 = *(void *)(v22 + 8);
        int v36 = *(_DWORD *)(v22 + 32);
        char v37 = *(unsigned char *)(v22 + 36);
        char v38 = *(unsigned char *)(v22 + 37);
        uint64_t v39 = *(void *)(v22 + 40);
        uint64_t v40 = *(void *)(v22 + 48);
        int v41 = *(_DWORD *)(v22 + 72);
        char v42 = *(unsigned char *)(v22 + 76);
        char v43 = *(unsigned char *)(v22 + 77);
        uint64_t v44 = *(void *)(v22 + 80);
        uint64_t v45 = *(void *)(v22 + 88);
        int v46 = *(_DWORD *)(v22 + 112);
        char v47 = *(unsigned char *)(v22 + 116);
        char v48 = *(unsigned char *)(v22 + 117);
        *(void *)&v76[0] = *(void *)v22;
        *((void *)&v76[0] + 1) = v35;
        v76[1] = *(_OWORD *)(v22 + 16);
        int v77 = v36;
        char v78 = v37;
        char v79 = v38;
        uint64_t v80 = v39;
        uint64_t v81 = v40;
        long long v82 = *(_OWORD *)(v22 + 56);
        int v83 = v41;
        char v84 = v42;
        char v85 = v43;
        uint64_t v86 = v44;
        uint64_t v87 = v45;
        long long v88 = *(_OWORD *)(v22 + 96);
        int v89 = v46;
        char v90 = v47;
        char v91 = v48;
        v49._uint64_t countAndFlagsBits = sub_10001D29C(v76);
        uint64_t v71 = 10;
        unint64_t v72 = 0xE100000000000000;
        String.append(_:)(v49);
        swift_bridgeObjectRelease();
        id v50 = objc_allocWithZone((Class)NSAttributedString);
        NSString v51 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        double v52 = v50;
        uint64_t v19 = v66;
        id v53 = [v52 initWithString:v51];

        [v21 appendAttributedString:v53];
        uint64_t v18 = v67;
      }
      id v54 = v21;
      if (v15) {
        [v15 appendAttributedString:v54];
      }
      else {
        id v15 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v54];
      }
      uint64_t v55 = *(void *)(*v19 + 16);
      if (v55)
      {
        sub_10017DBF8(*v19 + v65 + (v55 - 1) * v69, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
        if ((sub_1001E6630(v3, v18) & 1) != 0 || *(void *)(*v19 + 16) < 2uLL)
        {

          sub_10017E4C4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
        }
        else
        {
          if (!v15)
          {

            __break(1u);
            return;
          }
          id v56 = objc_allocWithZone((Class)NSAttributedString);
          id v57 = v15;
          NSString v58 = String._bridgeToObjectiveC()();
          id v59 = [v56 initWithString:v58];

          [v57 appendAttributedString:v59];
          uint64_t v18 = v67;
          sub_10017E4C4((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
          uint64_t v1 = v64;
          uint64_t v19 = v66;
        }
      }
      else
      {
      }
      uint64_t v17 = v70;
LABEL_21:
      sub_10017E4C4((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
      if (!v17)
      {
        swift_bridgeObjectRelease();
        return;
      }
      sub_10017DBF8(v16, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
      v16 += v69;
      --v17;
    }
  }
}

void sub_100178848(void *a1)
{
  id v1 = a1;
  sub_100177FD4();
}

uint64_t sub_100178890(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v18[0] - 8);
  __chkstk_darwin(v18[0]);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = a3;
  v14[3] = sub_10017E960;
  v14[4] = v13;
  aBlock[4] = sub_10017E9E0;
  void aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_1004909C8;
  id v15 = _Block_copy(aBlock);
  swift_retain();
  id v16 = a3;
  static DispatchQoS.unspecified.getter();
  v18[1] = _swiftEmptyArrayStorage;
  sub_10017E9EC((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, void))(v10 + 8))(v12, v18[0]);
  return swift_release();
}

unint64_t sub_100178B90(uint64_t a1, void (*a2)(uint64_t, void), uint64_t a3)
{
  v113[2] = a3;
  uint64_t v114 = a2;
  uint64_t v121 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v120 = (char *)v113 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = type metadata accessor for UTType();
  uint64_t v6 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v118 = (char *)v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100012894((uint64_t *)&unk_1004CE670);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = type metadata accessor for MeasurementCapture();
  uint64_t v11 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  uint64_t v130 = (uint64_t)v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = type metadata accessor for MeasurementHistoryItem();
  __chkstk_darwin(v139);
  uint64_t v14 = (char *)v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SpatialPlattersHistoryItem();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15 - 8);
  uint64_t v132 = (uint64_t)v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t *)(a1 + qword_1004CE058);
  swift_beginAccess();
  uint64_t v19 = *v18;
  uint64_t v20 = *(void *)(*v18 + 16);
  if (!v20)
  {
    uint64_t v111 = v114;
LABEL_45:
    uint64_t v112 = swift_bridgeObjectRetain();
    v111(v112, 0);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease_n();
  }
  CGRect v129 = v10;
  uint64_t v21 = v19 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  uint64_t v131 = *(void *)(v16 + 72);
  NSAttributedStringKey v124 = NSFontAttributeName;
  CGRect v128 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  uint64_t v116 = (void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v117 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v115 = (void (**)(uint64_t, uint64_t))(v4 + 8);
  v113[1] = v19;
  swift_bridgeObjectRetain();
  uint64_t v140 = _swiftEmptyArrayStorage;
  uint64_t v133 = _swiftEmptyDictionarySingleton;
  uint64_t v22 = v20 - 1;
  uint64_t v23 = v21;
  long long v135 = xmmword_1003F87F0;
  uint64_t v24 = &swift_getGenericMetadata_ptr;
  id v25 = &selRef_replaySensorDidFinishReplayingData;
  uint64_t v26 = &selRef_replaySensorDidFinishReplayingData;
  unint64_t v122 = (unint64_t)"Measure.HistoryViewCoordinator";
  uint64_t v123 = (char *)&type metadata for Any + 8;
  unint64_t v125 = 0x80000001004293C0;
  while (1)
  {
    uint64_t v27 = v132;
    sub_10017DBF8(v23, v132, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
    sub_10017DBF8(v27, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
    sub_10017E4C4(v27, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
    sub_100026A04((uint64_t)&v14[*(int *)(v139 + 28)], (uint64_t)v145);
    sub_100026A04((uint64_t)v145, (uint64_t)v146);
    int v28 = sub_100026A60((uint64_t)v146);
    if (v28)
    {
      if (v28 == 1)
      {
        sub_100026A6C((uint64_t)v146);
        id v29 = sub_100027270((uint64_t)v14);
        if (!v29) {
          goto LABEL_38;
        }
      }
      else
      {
        sub_100026A6C((uint64_t)v146);
        id v29 = sub_1001D0DA8((uint64_t)v14);
        if (!v29) {
          goto LABEL_38;
        }
      }
      uint64_t v136 = v22;
      uint64_t v137 = v23;
      id v62 = v29;
      NSString v32 = v25;
      uint64_t v61 = &swift_getGenericMetadata_ptr;
      int v41 = v26;
    }
    else
    {
      uint64_t v137 = v23;
      sub_100026A6C((uint64_t)v146);
      sub_100026A04((uint64_t)v145, (uint64_t)&v143);
      uint64_t v30 = sub_100026A6C((uint64_t)&v143);
      id v138 = (id)*((void *)v14 + 2);
      sub_100012894(&qword_1004CE700);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = v135;
      uint64_t v136 = v22;
      NSString v32 = v25;
      NSAttributedStringKey v33 = v124;
      *(void *)(v31 + 32) = v124;
      id v34 = self;
      uint64_t v35 = v33;
      [v34 systemFontSize];
      *(void *)(v31 + 40) = [v34 systemFontOfSize:];
      unint64_t v36 = sub_1000E1418(v31);
      swift_bridgeObjectRetain();
      sub_100026E9C(v36);
      swift_bridgeObjectRelease();
      id v37 = objc_allocWithZone((Class)NSAttributedString);
      NSString v38 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_10017E9EC((unint64_t *)&qword_1004C39E0, type metadata accessor for Key);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v40 = [v37 initWithString:v38 attributes:isa];

      int v41 = v26;
      id v29 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v40];

      uint64_t v42 = *(void *)(v30 + 8);
      int v43 = *(_DWORD *)(v30 + 32);
      char v44 = *(unsigned char *)(v30 + 36);
      char v45 = *(unsigned char *)(v30 + 37);
      uint64_t v46 = *(void *)(v30 + 40);
      uint64_t v47 = *(void *)(v30 + 48);
      int v48 = *(_DWORD *)(v30 + 72);
      char v49 = *(unsigned char *)(v30 + 76);
      char v50 = *(unsigned char *)(v30 + 77);
      uint64_t v51 = *(void *)(v30 + 80);
      uint64_t v52 = *(void *)(v30 + 88);
      int v53 = *(_DWORD *)(v30 + 112);
      char v54 = *(unsigned char *)(v30 + 116);
      char v55 = *(unsigned char *)(v30 + 117);
      *(void *)&v147[0] = *(void *)v30;
      *((void *)&v147[0] + 1) = v42;
      v147[1] = *(_OWORD *)(v30 + 16);
      int v148 = v43;
      char v149 = v44;
      char v150 = v45;
      uint64_t v151 = v46;
      uint64_t v152 = v47;
      long long v153 = *(_OWORD *)(v30 + 56);
      int v154 = v48;
      char v155 = v49;
      char v156 = v50;
      uint64_t v157 = v51;
      uint64_t v158 = v52;
      long long v159 = *(_OWORD *)(v30 + 96);
      int v160 = v53;
      char v161 = v54;
      char v162 = v55;
      v56._uint64_t countAndFlagsBits = sub_10001D29C(v147);
      uint64_t v141 = 10;
      unint64_t v142 = 0xE100000000000000;
      String.append(_:)(v56);
      swift_bridgeObjectRelease();
      id v57 = objc_allocWithZone((Class)NSAttributedString);
      NSString v58 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v59 = v57;
      uint64_t v24 = &swift_getGenericMetadata_ptr;
      id v60 = [v59 v32[128] v58];

      [v29 v26[129] v60];
      uint64_t v61 = &swift_getGenericMetadata_ptr;
      id v62 = v29;
    }
    id v63 = objc_allocWithZone((Class)v61[340]);
    id v138 = v62;
    id v64 = [v63 initWithAttributedString:v62];
    unint64_t v65 = v24;
    id v66 = objc_allocWithZone((Class)v24[329]);
    NSString v67 = String._bridgeToObjectiveC()();
    id v68 = [v66 v32[128] v67];

    [v64 v41[129] v68];
    uint64_t v69 = (uint64_t)v129;
    sub_1000735DC((uint64_t)&v14[*(int *)(v139 + 24)], (uint64_t)v129, (uint64_t *)&unk_1004CE670);
    id v25 = v32;
    uint64_t v70 = v41;
    if ((*v128)(v69, 1, v134) == 1)
    {
      sub_10002B9C0(v69, (uint64_t *)&unk_1004CE670);
      sub_100012894((uint64_t *)&unk_1004CE6E0);
      uint64_t v71 = swift_allocObject();
      *(_OWORD *)(v71 + 16) = v135;
      *(void *)(v71 + 32) = 0xD00000000000001ALL;
      *(void *)(v71 + 40) = v125;
      *(void *)(v71 + 72) = sub_10001C99C(0, &qword_1004CE6C8);
      *(void *)(v71 + 48) = v64;
      id v72 = v64;
      unint64_t v73 = sub_1000E1948(v71);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        double v74 = v140;
      }
      else {
        double v74 = sub_10006F524(0, *((void *)v140 + 2) + 1, 1, v140);
      }
      uint64_t v26 = v41;
      unint64_t v76 = *((void *)v74 + 2);
      unint64_t v75 = *((void *)v74 + 3);
      if (v76 >= v75 >> 1) {
        double v74 = sub_10006F524((double *)(v75 > 1), v76 + 1, 1, v74);
      }
      *((void *)v74 + 2) = v76 + 1;
      uint64_t v140 = v74;
      *(void *)&v74[v76 + 4] = v73;

LABEL_37:
      uint64_t v22 = v136;
      uint64_t v23 = v137;
      uint64_t v24 = &swift_getGenericMetadata_ptr;
      goto LABEL_38;
    }
    uint64_t v77 = v130;
    sub_10017DC60(v69, v130, (uint64_t (*)(void))type metadata accessor for MeasurementCapture);
    uint64_t v78 = v77 + *(int *)(v134 + 20);
    if (!v133[2]) {
      goto LABEL_29;
    }
    unint64_t result = sub_1000E25CC(v78);
    if ((v80 & 1) == 0) {
      goto LABEL_29;
    }
    unint64_t v81 = *(void *)(v133[7] + 8 * result);
    if ((v81 & 0x8000000000000000) != 0) {
      break;
    }
    if (v81 >= *((void *)v140 + 2)) {
      goto LABEL_47;
    }
    double v82 = v140[v81 + 4];
    if (*(void *)(*(void *)&v82 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v83 = sub_1000E20D4(0xD00000000000001ALL, v122 | 0x8000000000000000);
      if (v84)
      {
        sub_10005C070(*(void *)(*(void *)&v82 + 56) + 32 * v83, (uint64_t)&v143);
      }
      else
      {
        long long v143 = 0u;
        long long v144 = 0u;
      }
      uint64_t v24 = v65;
      swift_bridgeObjectRelease();
      if (*((void *)&v144 + 1))
      {
        sub_10001C99C(0, &qword_1004CE6C8);
        if (swift_dynamicCast())
        {
          id v85 = (id)v141;
          uint64_t v26 = v70;
          [v141 v70[129] v64];

          sub_10017E4C4(v130, (uint64_t (*)(void))type metadata accessor for MeasurementCapture);
          uint64_t v22 = v136;
          uint64_t v23 = v137;
          goto LABEL_38;
        }
        goto LABEL_29;
      }
    }
    else
    {
      long long v143 = 0u;
      long long v144 = 0u;
    }
    sub_10002B9C0((uint64_t)&v143, (uint64_t *)&unk_1004C7180);
LABEL_29:
    uint64_t v127 = v78;
    URL.path.getter();
    id v86 = objc_allocWithZone((Class)UIImage);
    NSString v87 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v88 = [v86 initWithContentsOfFile:v87];

    if (v88)
    {
      sub_100012894((uint64_t *)&unk_1004CE6E0);
      uint64_t v89 = swift_allocObject();
      *(_OWORD *)(v89 + 16) = v135;
      char v90 = v118;
      static UTType.png.getter();
      uint64_t v91 = UTType.identifier.getter();
      uint64_t v93 = v92;
      (*v117)(v90, v119);
      *(void *)(v89 + 32) = v91;
      *(void *)(v89 + 40) = v93;
      *(void *)(v89 + 72) = sub_10001C99C(0, (unint64_t *)&unk_1004CE6F0);
      *(void *)(v89 + 48) = v88;
      id v126 = v88;
      unint64_t v94 = sub_1000E1948(v89);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        id v95 = v140;
      }
      else {
        id v95 = sub_10006F524(0, *((void *)v140 + 2) + 1, 1, v140);
      }
      unint64_t v97 = *((void *)v95 + 2);
      unint64_t v96 = *((void *)v95 + 3);
      id v25 = &selRef_replaySensorDidFinishReplayingData;
      uint64_t v26 = &selRef_replaySensorDidFinishReplayingData;
      if (v97 >= v96 >> 1) {
        id v95 = sub_10006F524((double *)(v96 > 1), v97 + 1, 1, v95);
      }
      *((void *)v95 + 2) = v97 + 1;
      *(void *)&v95[v97 + 4] = v94;
      uint64_t v98 = v95;
      uint64_t v99 = swift_allocObject();
      *(_OWORD *)(v99 + 16) = v135;
      unint64_t v100 = v122 | 0x8000000000000000;
      *(void *)(v99 + 32) = 0xD00000000000001ALL;
      *(void *)(v99 + 40) = v100;
      *(void *)(v99 + 72) = sub_10001C99C(0, &qword_1004CE6C8);
      *(void *)(v99 + 48) = v64;
      id v101 = v64;
      unint64_t v102 = sub_1000E1948(v99);
      id v103 = v98;
      unint64_t v104 = v102;
      unint64_t v105 = *((void *)v98 + 2);
      unint64_t v106 = *((void *)v103 + 3);
      if (v105 >= v106 >> 1) {
        id v103 = sub_10006F524((double *)(v106 > 1), v105 + 1, 1, v103);
      }
      *((void *)v103 + 2) = v105 + 1;
      uint64_t v140 = v103;
      *(void *)&v103[v105 + 4] = v104;
      uint64_t v108 = (uint64_t)v120;
      uint64_t v107 = v121;
      (*v116)(v120, v127, v121);
      objc_super v109 = v133;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v143 = v109;
      sub_1000D6038(v105, v108, isUniquelyReferenced_nonNull_native);
      uint64_t v133 = (void *)v143;
      swift_bridgeObjectRelease();
      (*v115)(v108, v107);

      sub_10017E4C4(v130, (uint64_t (*)(void))type metadata accessor for MeasurementCapture);
      goto LABEL_37;
    }

    sub_10017E4C4(v130, (uint64_t (*)(void))type metadata accessor for MeasurementCapture);
    uint64_t v22 = v136;
    uint64_t v23 = v137;
    uint64_t v24 = &swift_getGenericMetadata_ptr;
    uint64_t v26 = v70;
LABEL_38:
    sub_10017E4C4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for MeasurementHistoryItem);
    if (!v22)
    {
      swift_bridgeObjectRelease();
      uint64_t v111 = v114;
      goto LABEL_45;
    }
    --v22;
    v23 += v131;
  }
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

void sub_10017998C()
{
  if ((*((unsigned char *)v0 + qword_1004CE130) & 1) == 0)
  {
    *(void *)(swift_allocObject() + 16) = v0;
    sub_100012894(&qword_1004CE6B0);
    swift_allocObject();
    id v1 = v0;
    Future.init(_:)();
    sub_10002179C((unint64_t *)&unk_1004CE6B8, &qword_1004CE6B0);
    uint64_t v2 = Publisher.sink(receiveCompletion:receiveValue:)();
    swift_release();
    *(void *)&v1[qword_1004CE160] = v2;
    swift_release();
    sub_100171B4C(0, 1u, 0);
  }
}

void sub_100179AD8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  id v2 = [self generalPasteboard];
  if (qword_1004C2C10 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1004F8458 + OBJC_IVAR____TtC7Measure14MetricsManager_measurementState;
  swift_beginAccess();
  *(double *)(v3 + 56) = *(double *)(v3 + 56) + 1.0;
  id v4 = v2;
  sub_10017DEB8(v1);

  sub_100012894(&qword_1004C69D0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 setItems:isa];
}

void sub_100179BF0(void *a1)
{
  id v1 = a1;
  sub_10017998C();
}

void sub_100179C38(void *a1)
{
  id v1 = a1;
  sub_100171B4C(0, 1u, 0);
}

uint64_t sub_100179C90(uint64_t a1)
{
  uint64_t v2 = sub_100012894((uint64_t *)&unk_1004CE5F0);
  uint64_t result = __chkstk_darwin(v2 - 8);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = *(void **)(a1 + qword_1004CE068);
  if (v6)
  {
    id v7 = v6;
    sub_1001C14AC(0);
    uint64_t v8 = *(uint64_t (**)(unsigned char *))(**(void **)(a1 + qword_1004CE050) + 400);
    swift_retain();
    uint64_t v9 = (void (*)(unsigned char *, void))v8(v11);
    swift_unknownObjectWeakAssign();
    v9(v11, 0);
    swift_release();
    uint64_t v10 = type metadata accessor for IndexPath();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
    sub_100172CC0(0, (uint64_t)v5);

    return sub_10002B9C0((uint64_t)v5, (uint64_t *)&unk_1004CE5F0);
  }
  return result;
}

void sub_100179E2C(void *a1)
{
  id v1 = a1;
  sub_100176554();
}

void sub_100179E74()
{
}

uint64_t sub_100179EA4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectWeakDestroy();

  return swift_release();
}

uint64_t sub_10017A0A4(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectWeakDestroy();

  return swift_release();
}

uint64_t type metadata accessor for HistoryViewCoordinator()
{
  uint64_t result = qword_1004CE198;
  if (!qword_1004CE198) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10017A2FC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10017A3F8()
{
  return type metadata accessor for HistoryViewCoordinator();
}

void *sub_10017A458(id a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for SpatialPlattersHistoryItem();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v2 + qword_1004CE058;
  swift_beginAccess();
  uint64_t v11 = *(void *)(*(void *)v10 + 16);
  if (!v11) {
    goto LABEL_9;
  }
  id v12 = a2;
  unint64_t v13 = IndexPath.item.getter();
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v13 >= *(void *)(*(void *)v10 + 16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_10017DBF8(*(void *)v10+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
  uint64_t v14 = type metadata accessor for MeasurementHistoryItem();
  sub_100026A04((uint64_t)&v9[*(int *)(v14 + 28)], (uint64_t)v43);
  sub_100026A04((uint64_t)v43, (uint64_t)v44);
  int v15 = sub_100026A60((uint64_t)v44);
  if (v15)
  {
    if (v15 == 1)
    {
      sub_100026A6C((uint64_t)v44);
      if (*(void *)&v9[*(int *)(v6 + 20)])
      {
        NSString v16 = String._bridgeToObjectiveC()();
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        id v18 = [a1 dequeueReusableCellWithIdentifier:v16 forIndexPath:isa];

        swift_getObjectType();
        uint64_t result = (void *)swift_conformsToProtocol2();
        if (!result)
        {
          __break(1u);
LABEL_9:
          type metadata accessor for LineHistoryCell();
          return [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
        }
LABEL_18:
        id v29 = result;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v31 = (void (*)(char *, uint64_t, void *))v29[2];
        id v32 = v18;
        v31(v9, ObjectType, v29);

        [v32 setSelectionStyle:2];
        NSAttributedStringKey v33 = self;
        a1 = v32;
        id v34 = [v33 clearColor];
        [a1 setBackgroundColor:v34];

        if (IndexPath.row.getter() == v11 - 1)
        {
          uint64_t v35 = *(void **)(v3 + qword_1004CE010);
          id v36 = a1;
          [v35 bounds];
          [v36 setSeparatorInset:CGRectMake(0.0, CGRectGetWidth(v45), 0.0, 0.0)];
LABEL_22:

          swift_getObjectType();
          id v20 = a1;
          v42[2] = _typeName(_:qualified:)();
          v42[3] = v38;
          v39._uint64_t countAndFlagsBits = 45;
          v39._object = (void *)0xE100000000000000;
          String.append(_:)(v39);
          v42[1] = IndexPath.row.getter();
          v40._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
          String.append(_:)(v40);
          swift_bridgeObjectRelease();
          NSString v41 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v20 setAccessibilityIdentifier:v41];

          sub_10017E4C4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
          return v20;
        }
        uint64_t v37 = qword_1004C2828;
        id v12 = a1;
        if (v37 == -1)
        {
LABEL_21:
          [v12 setSeparatorInset:xmmword_1004F7E40, *(double *)&qword_1004F7E50, *(double *)&qword_1004F7E58];
          goto LABEL_22;
        }
LABEL_26:
        swift_once();
        goto LABEL_21;
      }
      goto LABEL_15;
    }
  }
  else
  {
    sub_100026A6C((uint64_t)v44);
    if (!*(void *)&v9[*(int *)(v6 + 20)]) {
      goto LABEL_17;
    }
    NSString v21 = String._bridgeToObjectiveC()();
    Class v22 = IndexPath._bridgeToObjectiveC()().super.isa;
    id v18 = [a1 dequeueReusableCellWithIdentifier:v21 forIndexPath:v22];

    swift_getObjectType();
    uint64_t result = (void *)swift_conformsToProtocol2();
    if (result) {
      goto LABEL_18;
    }
    __break(1u);
  }
  sub_100026A6C((uint64_t)v44);
  NSString v23 = String._bridgeToObjectiveC()();
  Class v24 = IndexPath._bridgeToObjectiveC()().super.isa;
  id v18 = [a1 dequeueReusableCellWithIdentifier:v23 forIndexPath:v24];

  swift_getObjectType();
  uint64_t result = (void *)swift_conformsToProtocol2();
  if (result) {
    goto LABEL_18;
  }
  __break(1u);
LABEL_15:
  NSString v25 = String._bridgeToObjectiveC()();
  Class v26 = IndexPath._bridgeToObjectiveC()().super.isa;
  id v18 = [a1 dequeueReusableCellWithIdentifier:v25 forIndexPath:v26];

  swift_getObjectType();
  uint64_t result = (void *)swift_conformsToProtocol2();
  if (result) {
    goto LABEL_18;
  }
  __break(1u);
LABEL_17:
  NSString v27 = String._bridgeToObjectiveC()();
  Class v28 = IndexPath._bridgeToObjectiveC()().super.isa;
  id v18 = [a1 dequeueReusableCellWithIdentifier:v27 forIndexPath:v28];

  swift_getObjectType();
  uint64_t result = (void *)swift_conformsToProtocol2();
  if (result) {
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

void sub_10017ABEC(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100012894((uint64_t *)&unk_1004CE5F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SpatialPlattersHistoryItem();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  id v12 = (uint64_t *)((char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((*(unsigned char *)(v2 + qword_1004CE130) & 1) == 0)
  {
    uint64_t v13 = v2 + qword_1004CE058;
    swift_beginAccess();
    if (*(void *)(*(void *)v13 + 16))
    {
      id v59 = [*(id *)(v2 + qword_1004CE010) superview];
      if (v59)
      {
        unint64_t v14 = IndexPath.item.getter();
        if ((v14 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v14 < *(void *)(*(void *)v13 + 16))
        {
          sub_10017DBF8(*(void *)v13+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
          Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
          id v16 = [a1 cellForRowAtIndexPath:isa];

          if (v16)
          {
            swift_getObjectType();
            uint64_t v17 = swift_conformsToProtocol2();
            if (v17) {
              uint64_t v18 = v17;
            }
            else {
              uint64_t v18 = 0;
            }
            if (v17) {
              id v19 = v16;
            }
            else {
              id v19 = 0;
            }
            if (v19)
            {
              uint64_t ObjectType = swift_getObjectType();
              (*(void (**)(uint64_t, uint64_t))(v18 + 24))(ObjectType, v18);
            }
          }
          uint64_t v56 = a2;
          id v21 = sub_1001C88C8(v12);
          NSString v23 = v22;
          uint64_t v25 = v24;
          uint64_t v26 = v12[1];
          uint64_t v57 = *v12;
          id v58 = v21;
          double v27 = *(double *)(v3 + qword_1004CE070);
          double v28 = *(double *)(v3 + qword_1004CE070 + 8);
          double v29 = *(double *)(v3 + qword_1004CE070 + 16);
          double v30 = *(double *)(v3 + qword_1004CE070 + 24);
          uint64_t v31 = swift_getObjectType();
          id v32 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 72);
          swift_bridgeObjectRetain();
          uint64_t v33 = v32(v31, v25);
          if (v33)
          {
            id v34 = (void *)v33;
            self;
            uint64_t v35 = (void *)swift_dynamicCastObjCClass();
            if (!v35) {
          }
            }
          else
          {
            uint64_t v35 = 0;
          }
          id v36 = *(void **)(v3 + qword_1004CE0A0);
          id v37 = objc_allocWithZone((Class)type metadata accessor for SpatialGenericPlatter());
          id v38 = v36;
          id v39 = v23;
          Swift::String v40 = (char *)v58;
          sub_1001C1984(v57, v26, 1, v40, v39, v25, v35, v38, v27, v28, v29, v30);
          uint64_t v41 = qword_1004CE068;
          uint64_t v42 = *(void **)(v3 + qword_1004CE068);
          *(void *)(v3 + qword_1004CE068) = v43;

          if (*(void *)(v3 + v41))
          {
            id v58 = v39;
            [v59 addSubview:];
            char v44 = *(void **)(v3 + v41);
            if (v44)
            {
              [v44 layoutIfNeeded];
              CGRect v45 = *(void **)(v3 + v41);
              if (v45)
              {
                swift_getKeyPath();
                swift_getKeyPath();
                id v46 = v45;
                static Published.subscript.getter();
                swift_release();
                swift_release();
                sub_1001C1274(v61);

                uint64_t v47 = *(void **)(v3 + v41);
                if (v47)
                {
                  [v47 setNeedsLayout];
                  int v48 = *(void **)(v3 + v41);
                  if (v48)
                  {
                    [v48 layoutIfNeeded];
                    uint64_t v49 = type metadata accessor for IndexPath();
                    uint64_t v50 = *(void *)(v49 - 8);
                    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v8, v56, v49);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v8, 0, 1, v49);
                    sub_100172CC0(1, (uint64_t)v8);
                    sub_10002B9C0((uint64_t)v8, (uint64_t *)&unk_1004CE5F0);
                    uint64_t v61 = 0;
                    unint64_t v62 = 0xE000000000000000;
                    swift_getObjectType();
                    uint64_t v51 = v40;
                    uint64_t v61 = _typeName(_:qualified:)();
                    unint64_t v62 = v52;
                    v53._uint64_t countAndFlagsBits = 45;
                    v53._object = (void *)0xE100000000000000;
                    String.append(_:)(v53);
                    uint64_t v60 = IndexPath.row.getter();
                    v54._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
                    String.append(_:)(v54);
                    swift_bridgeObjectRelease();
                    NSString v55 = String._bridgeToObjectiveC()();
                    swift_bridgeObjectRelease();
                    [v51 setAccessibilityIdentifier:v55];

                    sub_10017E4C4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
                    return;
                  }
LABEL_33:
                  __break(1u);
                  return;
                }
LABEL_32:
                __break(1u);
                goto LABEL_33;
              }
LABEL_31:
              __break(1u);
              goto LABEL_32;
            }
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
        __break(1u);
        goto LABEL_29;
      }
    }
  }
}

void *sub_10017B3A4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v84 = a1;
  uint64_t v82 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SpatialPlattersHistoryItem();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10 - 8);
  unint64_t v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (void *)__chkstk_darwin(v12);
  uint64_t v17 = (uint64_t *)((char *)&v78 - v16);
  if (a2 != 1) {
    return result;
  }
  uint64_t v81 = v7;
  v4[qword_1004CE090] = 0;
  uint64_t v18 = *(void **)&v4[qword_1004CE078];
  uint64_t result = (void *)swift_unknownObjectUnownedLoadStrong();
  if (!result)
  {
    __break(1u);
    return result;
  }
  id v19 = result;
  [result setEnabled:1];

  unint64_t v20 = IndexPath.item.getter();
  id v21 = &v4[qword_1004CE058];
  swift_beginAccess();
  if ((v20 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v20 >= *(void *)(*(void *)v21 + 16))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    swift_once();
    goto LABEL_24;
  }
  sub_10017DBF8(*(void *)v21+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v20, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
  uint64_t v22 = *v17;
  uint64_t v23 = v17[1];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1001C84FC(v22, v23);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v24 = IndexPath.item.getter();
  swift_beginAccess();
  unint64_t v83 = v21;
  sub_100030760(v24, (uint64_t)v14);
  sub_10017E4C4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
  swift_endAccess();
  char v25 = sub_10016E14C();
  id v79 = v18;
  *((unsigned char *)v18 + OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded) = v25 & 1;
  uint64_t v26 = *v17;
  uint64_t v27 = v17[1];
  double v28 = *(uint64_t (**)(void *))(**(void **)&v4[qword_1004CE048] + 400);
  swift_bridgeObjectRetain();
  swift_retain();
  double v29 = (void (*)(void *, void))v28(aBlock);
  uint64_t v31 = v30;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v86 = *v31;
  *uint64_t v31 = 0x8000000000000000;
  sub_10017D914(v26, v27, isUniquelyReferenced_nonNull_native);
  *uint64_t v31 = v86;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29(aBlock, 0);
  swift_release();
  swift_retain();
  double v33 = sub_10016E3B4();
  swift_getKeyPath();
  swift_getKeyPath();
  *(double *)CGAffineTransform aBlock = v33;
  static Published.subscript.setter();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v35 = v84;
  [v84 rectForRowAtIndexPath:isa];
  CGFloat v37 = v36;
  CGFloat v39 = v38;
  CGFloat v41 = v40;
  CGFloat v43 = v42;

  v87.origin.x = v37;
  v87.origin.y = v39;
  v87.size.width = v41;
  v87.size.height = v43;
  CGFloat Height = CGRectGetHeight(v87);
  uint64_t v45 = qword_1004CE098;
  double v46 = *(double *)&v4[qword_1004CE098] - Height;
  *(double *)&v4[qword_1004CE098] = v46;
  uint64_t v47 = *(void *)&v4[qword_1004CE018];
  sub_10001D4A4(v47);
  char v80 = v9;
  if (v46 >= v48)
  {
    sub_100012894(&qword_1004CE688);
    uint64_t v69 = v81;
    unint64_t v70 = (*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
    uint64_t v71 = swift_allocObject();
    *(_OWORD *)(v71 + 16) = xmmword_1003F87F0;
    uint64_t v61 = v82;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v69 + 16))(v71 + v70, a3, v82);
    Class v65 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v35 deleteRowsAtIndexPaths:v65 withRowAnimation:100];
    Swift::String v54 = v83;
  }
  else
  {
    swift_retain();
    sub_10001D4A4(v47);
    if (*(double *)&v4[v45] < v49) {
      double v49 = *(double *)&v4[v45];
    }
    double v50 = v49 + -0.5;
    if (qword_1004C2820 != -1) {
      swift_once();
    }
    double v51 = *(double *)&qword_1004F7E38;
    sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
    if (static UIDevice.isIPhone()()) {
      unint64_t v52 = &OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView;
    }
    else {
      unint64_t v52 = &OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView;
    }
    [*(id *)(v47 + *v52) bounds];
    double v53 = v50 + v51 + CGRectGetHeight(v88);
    swift_getKeyPath();
    swift_getKeyPath();
    *(double *)CGAffineTransform aBlock = v53;
    static Published.subscript.setter();
    Swift::String v54 = v83;
    if (*(void *)(*(void *)v83 + 16) == 1 && (sub_10016E14C() & 1) == 0)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(aBlock[0]) = 1;
      NSString v55 = (char *)v79;
      static Published.subscript.setter();
      sub_1001B8090();
      uint64_t v56 = &v55[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
      *(void *)uint64_t v56 = 0;
      v56[8] = 1;
      Swift::String v54 = v83;
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      [Strong setEnabled:1];

      swift_unknownObjectWeakAssign();
    }
    sub_100012894(&qword_1004CE688);
    uint64_t v58 = v81;
    unint64_t v59 = (*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
    uint64_t v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = xmmword_1003F87F0;
    uint64_t v61 = v82;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v58 + 16))(v60 + v59, a3, v82);
    Class v62 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v35 = v84;
    [v84 deleteRowsAtIndexPaths:v62 withRowAnimation:100];

    if (qword_1004C2C58 != -1) {
      swift_once();
    }
    double v63 = *(double *)&qword_1004CDFF0;
    if (qword_1004C2C50 != -1) {
      swift_once();
    }
    id v64 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithDampingRatio:v63 initialVelocity:*(double *)&qword_1004CDFE0 *(double *)algn_1004CDFE8];
    Class v65 = (Class)[objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v64 timingParameters:0.4];
    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = v4;
    aBlock[4] = sub_10017EB68;
    void aBlock[5] = v66;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100049AB4;
    aBlock[3] = &unk_100490770;
    NSString v67 = _Block_copy(aBlock);
    id v68 = v4;
    swift_release();
    [(objc_class *)v65 addAnimations:v67];
    _Block_release(v67);
    [(objc_class *)v65 startAnimation];

    uint64_t v69 = v81;
  }

  uint64_t v72 = *(void *)(*(void *)v54 + 16);
  unint64_t v73 = *(uint64_t (**)(void *))(**(void **)&v4[qword_1004CE028] + 400);
  swift_retain();
  double v74 = (void (*)(void *, void))v73(aBlock);
  id v21 = v83;
  *unint64_t v75 = v72;
  v74(aBlock, 0);
  swift_release();
  unint64_t v76 = v80;
  IndexPath.init(row:section:)();
  Class v77 = IndexPath._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v69 + 8))(v76, v61);
  unint64_t v20 = (unint64_t)[v35 cellForRowAtIndexPath:v77];

  if (!v20) {
    goto LABEL_25;
  }
  if (qword_1004C27E0 != -1) {
    goto LABEL_31;
  }
LABEL_24:
  [v20 setSeparatorInset:0.0, *(double *)&qword_1004F7DF8, 0.0, 0.0];

LABEL_25:
  if (!*(void *)(*(void *)v21 + 16)) {
    sub_100171B4C(0, 1u, 0);
  }
  return (void *)sub_10017E4C4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for SpatialPlattersHistoryItem);
}

void sub_10017C254()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100012894((uint64_t *)&unk_1004CE5F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v5 = [self sharedMenuController];
  [v5 hideMenu];

  uint64_t v6 = *(void **)(v1 + qword_1004CE068);
  if (v6)
  {
    id v7 = v6;
    sub_1001C14AC(0);
    uint64_t v8 = *(uint64_t (**)(unsigned char *))(**(void **)(v1 + qword_1004CE050) + 400);
    swift_retain();
    uint64_t v9 = (void (*)(unsigned char *, void))v8(v11);
    swift_unknownObjectWeakAssign();
    v9(v11, 0);
    swift_release();
    uint64_t v10 = type metadata accessor for IndexPath();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
    sub_100172CC0(0, (uint64_t)v4);

    sub_10002B9C0((uint64_t)v4, (uint64_t *)&unk_1004CE5F0);
  }
}

uint64_t sub_10017C424()
{
  uint64_t v1 = sub_100012894((uint64_t *)&unk_1004CE5F0);
  uint64_t result = __chkstk_darwin(v1 - 8);
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v5 = *(void **)(v0 + qword_1004CE068);
  if (v5)
  {
    id v6 = v5;
    sub_1001C14AC(0);
    id v7 = *(uint64_t (**)(unsigned char *))(**(void **)(v0 + qword_1004CE050) + 400);
    swift_retain();
    uint64_t v8 = (void (*)(unsigned char *, void))v7(v10);
    swift_unknownObjectWeakAssign();
    v8(v10, 0);
    swift_release();
    uint64_t v9 = type metadata accessor for IndexPath();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
    sub_100172CC0(0, (uint64_t)v4);

    return sub_10002B9C0((uint64_t)v4, (uint64_t *)&unk_1004CE5F0);
  }
  return result;
}

void sub_10017C5C0()
{
  uint64_t v1 = *(void **)&v0[qword_1004CE068];
  if (v1)
  {
    uint64_t v2 = v0;
    id v3 = v1;
    sub_1001C14AC(0);
    uint64_t v4 = *(uint64_t (**)(void ***))(**(void **)&v0[qword_1004CE050] + 400);
    swift_retain();
    id v5 = (void (*)(void ***, void))v4(&v13);
    swift_unknownObjectWeakAssign();
    v5(&v13, 0);
    swift_release();
    id v6 = self;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v2;
    uint64_t v17 = sub_10017CC38;
    uint64_t v18 = v7;
    uint64_t v13 = _NSConcreteStackBlock;
    uint64_t v14 = 1107296256;
    int v15 = sub_100049AB4;
    uint64_t v16 = &unk_10048FED8;
    uint64_t v8 = _Block_copy(&v13);
    id v9 = v2;
    swift_release();
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v9;
    uint64_t v17 = sub_10017CC58;
    uint64_t v18 = v10;
    uint64_t v13 = _NSConcreteStackBlock;
    uint64_t v14 = 1107296256;
    int v15 = sub_100176FA8;
    uint64_t v16 = &unk_10048FF28;
    uint64_t v11 = _Block_copy(&v13);
    id v12 = v9;
    swift_release();
    [v6 animateWithDuration:0 delay:v8 options:v11 animations:0.2 completion:0.0];
    _Block_release(v11);
    _Block_release(v8);
  }
}

id sub_10017C80C(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + qword_1004CE018) + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView);
  v4[0] = 0x3FF0000000000000;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = 0x3FF0000000000000;
  v4[4] = 0;
  v4[5] = 0;
  [v2 setTransform:v4];
  [v2 setAlpha:1.0];
  return [*(id *)(a1 + qword_1004CE010) layoutIfNeeded];
}

void sub_10017C8A0(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a2 + qword_1004CE130) & 1) == 0)
  {
    uint64_t v3 = qword_1004CE068;
    uint64_t v4 = *(void **)(a2 + qword_1004CE068);
    if (v4)
    {
      id v5 = v4;
      sub_1001C16E0(v5);
      [v5 removeFromSuperview];

      id v6 = *(void **)(a2 + v3);
    }
    else
    {
      id v6 = 0;
    }
    *(void *)(a2 + v3) = 0;
  }
}

uint64_t sub_10017C944@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  double v5 = *(double *)(v1 + qword_1004CE070);
  double v6 = *(double *)(v1 + qword_1004CE070 + 8);
  double v7 = *(double *)(v1 + qword_1004CE070 + 16);
  double v8 = *(double *)(v1 + qword_1004CE070 + 24);
  id v9 = *(void **)(v1 + qword_1004CE0A0);
  uint64_t v10 = *(void ***)(v1 + qword_1004CE100);
  id v11 = objc_allocWithZone(ObjectType);
  id v12 = v9;
  swift_retain();
  uint64_t result = sub_10016EA14(v12, v10, 1, v5, v6, v7, v8);
  uint64_t v14 = result;
  if (*(void *)(v2 + qword_1004CE0B8))
  {
    swift_retain();
    AnyCancellable.cancel()();
    uint64_t result = swift_release();
  }
  if (*(void *)(v2 + qword_1004CE0B0))
  {
    swift_retain();
    AnyCancellable.cancel()();
    uint64_t result = swift_release();
  }
  if (*(void *)(v2 + qword_1004CE0C0))
  {
    swift_retain();
    AnyCancellable.cancel()();
    uint64_t result = swift_release();
  }
  a1[3] = (uint64_t)ObjectType;
  *a1 = v14;
  return result;
}

uint64_t sub_10017CAD4(void *a1, id a2)
{
  id v5 = [a2 view];
  id v6 = [a1 view];
  id v7 = v6;
  if (v5)
  {

    if (v7)
    {

      if (v5 == v7) {
        return 1;
      }
    }
  }
  else
  {
    if (!v6) {
      return 1;
    }
  }
  uint64_t result = (uint64_t)[a2 view];
  if (result)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(v2 + qword_1004CE018);

    return v9 == v10;
  }
  return result;
}

uint64_t sub_10017CC00()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_10017CC38()
{
  return sub_10017C80C(*(void *)(v0 + 16));
}

uint64_t sub_10017CC40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10017CC50()
{
  return swift_release();
}

void sub_10017CC58(uint64_t a1)
{
  sub_10017C8A0(a1, *(void *)(v1 + 16));
}

id sub_10017CC60()
{
  return sub_10017750C(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

void sub_10017CC68(uint64_t a1)
{
  sub_1001775F4(a1, *(void *)(v1 + 16));
}

void sub_10017CC70()
{
  sub_1001776E8(*(void *)(v0 + 16));
}

uint64_t sub_10017CC78@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

void sub_10017CCF8(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v2;
  static Published.subscript.setter();
  sub_1001B8090();
}

uint64_t sub_10017CD7C()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_10017CDBC()
{
  return sub_10017726C(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

void sub_10017CDC8()
{
  uint64_t v1 = *(void *)(sub_100012894((uint64_t *)&unk_1004CE5F0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_100176FFC(v0 + v2, v3);
}

void sub_10017CE58()
{
  sub_100177364(*(void *)(v0 + 16));
}

uint64_t sub_10017CE60()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10017CE74()
{
  uint64_t v1 = *(void *)(sub_100012894((uint64_t *)&unk_1004CE5F0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 8;

  return _swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_10017CFB0()
{
  return sub_100177468(*(void *)(v0 + 16));
}

uint64_t sub_10017CFBC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 256);
  return swift_retain();
}

uint64_t sub_10017CFCC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 256);
  return swift_retain();
}

uint64_t sub_10017CFE8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 264);
  return swift_retain();
}

uint64_t sub_10017CFF8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 264);
  return swift_retain();
}

uint64_t sub_10017D00C()
{
  return sub_10016FFBC(*(void *)(v0 + 16));
}

uint64_t sub_10017D014()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10017D024(__int16 a1)
{
}

uint64_t sub_10017D054(unsigned __int8 *a1)
{
  if (a1[2]) {
    int v2 = 0x10000;
  }
  else {
    int v2 = 0;
  }
  if (a1[1]) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  return (*(uint64_t (**)(void))(v1 + 16))(v3 | *a1 | v2);
}

uint64_t sub_10017D0A8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10017D0E0(uint64_t a1)
{
  return sub_100170588(a1);
}

void sub_10017D0E8()
{
}

uint64_t sub_10017D0F0()
{
  return sub_10016FECC(*(void *)(v0 + 16));
}

uint64_t sub_10017D0F8()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_10017D108()
{
  return [*(id *)(*(void *)(v0 + 16) + qword_1004CE010) layoutIfNeeded];
}

uint64_t sub_10017D124()
{
  return _swift_deallocObject(v0, 33, 7);
}

void sub_10017D15C(uint64_t a1)
{
  sub_100176EE4(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_10017D16C()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_10017D1A4()
{
  return sub_100176DF8(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_10017D1B0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10017D1C0()
{
  sub_100176B98(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_10017D1CC()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_10017D204()
{
  return sub_10019AD68(*(void *)(v0 + 16));
}

uint64_t sub_10017D210()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10017D248()
{
  return sub_100176914(*(unsigned __int8 *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10017D254()
{
  uint64_t v1 = type metadata accessor for MeasurementsHistory();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v31 = v0;
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 20);
  uint64_t v7 = type metadata accessor for MeasurementHistoryItem();
  unint64_t v8 = *(unsigned int (**)(void, void, void))(*(void *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    uint64_t v29 = v4;
    uint64_t v28 = (v2 + 16) & ~v2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + *(int *)(v7 + 24);
    uint64_t v10 = type metadata accessor for MeasurementCapture();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
    {
      uint64_t v27 = v2;
      uint64_t v11 = type metadata accessor for URL();
      uint64_t v26 = v8;
      id v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
      v12(v9, v11);
      uint64_t v13 = v11;
      uint64_t v2 = v27;
      v12(v9 + *(int *)(v10 + 20), v13);
      unint64_t v8 = v26;
    }
    uint64_t v14 = (uint64_t *)(v6 + *(int *)(v7 + 28));
    sub_100027F20(*v14, v14[1], v14[2], v14[3], v14[4], v14[5], v14[6], v14[7], v14[8], v14[9], v14[10], v14[11], v14[12], v14[13], v14[14], v14[15], v14[16], v14[17], v14[18],
      v14[19]);
    uint64_t v3 = v28;
    uint64_t v4 = v29;
  }
  uint64_t v15 = v5 + *(int *)(v1 + 24);
  if (!v8(v15, 1, v7))
  {
    uint64_t v30 = v4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v15 + *(int *)(v7 + 24);
    uint64_t v17 = type metadata accessor for MeasurementCapture();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17))
    {
      uint64_t v18 = v3;
      uint64_t v19 = type metadata accessor for URL();
      unint64_t v20 = *(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8);
      v20(v16, v19);
      uint64_t v21 = v19;
      uint64_t v3 = v18;
      v20(v16 + *(int *)(v17 + 20), v21);
    }
    uint64_t v22 = (uint64_t *)(v15 + *(int *)(v7 + 28));
    sub_100027F20(*v22, v22[1], v22[2], v22[3], v22[4], v22[5], v22[6], v22[7], v22[8], v22[9], v22[10], v22[11], v22[12], v22[13], v22[14], v22[15], v22[16], v22[17], v22[18],
      v22[19]);
    uint64_t v4 = v30;
  }
  unint64_t v23 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = v23 + 8;

  return _swift_deallocObject(v31, v24, v2 | 7);
}

size_t sub_10017D888()
{
  uint64_t v1 = *(void *)(type metadata accessor for MeasurementsHistory() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10017095C(v0 + v2, v3);
}

uint64_t sub_10017D914(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v9 = Hasher._finalize()();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  uint64_t v12 = v8 + 56;
  if ((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v13 = *(void *)(v8 + 48);
    uint64_t v14 = (void *)(v13 + 16 * v11);
    BOOL v15 = *v14 == a1 && v14[1] == a2;
    if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_7:
      uint64_t v16 = 0;
      int v17 = 1;
      goto LABEL_18;
    }
    uint64_t v18 = ~v10;
    unint64_t v11 = (v11 + 1) & ~v10;
    if ((*(void *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
    {
      uint64_t v16 = 1;
      while (1)
      {
        uint64_t v19 = (void *)(v13 + 16 * v11);
        BOOL v20 = *v19 == a1 && v19[1] == a2;
        if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_7;
        }
        unint64_t v11 = (v11 + 1) & v18;
        if (((*(void *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        {
          int v17 = 0;
          goto LABEL_18;
        }
      }
    }
  }
  int v17 = 0;
  uint64_t v16 = 1;
LABEL_18:
  uint64_t v21 = *(void *)(v8 + 16);
  uint64_t v22 = v21 + v16;
  if (__OFADD__(v21, v16))
  {
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v23 = *(void *)(v8 + 24);
  if (v23 >= v22 && (a3 & 1) != 0)
  {
    if (!v17) {
      goto LABEL_46;
    }
    goto LABEL_36;
  }
  if (a3)
  {
    sub_1001C7C1C();
  }
  else
  {
    if (v23 >= v22)
    {
      sub_1001C8098();
      if (!v17)
      {
LABEL_46:
        uint64_t v36 = *v4;
        *(void *)(*v4 + 8 * (v11 >> 6) + 56) |= 1 << v11;
        CGFloat v37 = (uint64_t *)(*(void *)(v36 + 48) + 16 * v11);
        uint64_t *v37 = a1;
        v37[1] = a2;
        uint64_t v38 = *(void *)(v36 + 16);
        BOOL v39 = __OFADD__(v38, 1);
        uint64_t v40 = v38 + 1;
        if (!v39)
        {
          uint64_t result = 0;
          *(void *)(v36 + 16) = v40;
          return result;
        }
        goto LABEL_49;
      }
LABEL_36:
      uint64_t v31 = (uint64_t *)(*(void *)(*v4 + 48) + 16 * v11);
      uint64_t result = *v31;
      *uint64_t v31 = a1;
      v31[1] = a2;
      return result;
    }
    sub_1001C824C();
  }
  uint64_t v24 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v25 = Hasher._finalize()();
  uint64_t v26 = -1 << *(unsigned char *)(v24 + 32);
  unint64_t v11 = v25 & ~v26;
  uint64_t v27 = v24 + 56;
  if (((*(void *)(v24 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_45;
  }
  uint64_t v28 = *(void *)(v24 + 48);
  uint64_t v29 = (void *)(v28 + 16 * v11);
  BOOL v30 = *v29 == a1 && v29[1] == a2;
  if (!v30 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v33 = ~v26;
    while (1)
    {
      unint64_t v11 = (v11 + 1) & v33;
      if (((*(void *)(v27 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        break;
      }
      id v34 = (void *)(v28 + 16 * v11);
      BOOL v35 = *v34 == a1 && v34[1] == a2;
      if (v35 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_35;
      }
    }
LABEL_45:
    if ((v17 & 1) == 0) {
      goto LABEL_46;
    }
    goto LABEL_50;
  }
LABEL_35:
  if (v17) {
    goto LABEL_36;
  }
LABEL_50:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10017DBF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10017DC60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

#error "10017DE90: call analysis failed (funcsize=120)"

double *sub_10017DEB8(uint64_t a1)
{
  uint64_t v53 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v53);
  unint64_t v52 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = a1;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v46 = v1;
  NSAttributedStringDocumentAttributeKey v57 = NSDocumentTypeDocumentAttribute;
  NSAttributedStringDocumentType v56 = NSRTFTextDocumentType;
  CFStringRef v51 = kUTTypeRTF;
  double v50 = (void (**)(char *, uint64_t))(v3 + 8);
  CFStringRef v47 = kUTTypeUTF8PlainText;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  uint64_t v7 = _swiftEmptyArrayStorage;
  uint64_t v8 = 0x80000001004293C0;
  uint64_t v61 = (char *)&type metadata for Any + 8;
  long long v55 = xmmword_1003F87F0;
  long long v49 = xmmword_1003F8B80;
  uint64_t v48 = v5;
  unint64_t v54 = 0x80000001004293C0;
  do
  {
    unint64_t v9 = *(void *)(v62 + 8 * v6 + 32);
    uint64_t v10 = *(void *)(v9 + 16);
    swift_bridgeObjectRetain();
    if (v10)
    {
      unint64_t v11 = sub_1000E20D4(0xD00000000000001ALL, v8);
      if (v12)
      {
        sub_10005C070(*(void *)(v9 + 56) + 32 * v11, (uint64_t)&v64);
        sub_10001C99C(0, &qword_1004CE6C8);
        if (swift_dynamicCast())
        {
          id v13 = v63;
          id v14 = [v63 length];
          sub_100012894((uint64_t *)&unk_1004CE6D0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v55;
          NSAttributedStringDocumentAttributeKey v16 = v57;
          *(void *)(inited + 32) = v57;
          type metadata accessor for DocumentType(0);
          *(void *)(inited + 64) = v17;
          NSAttributedStringDocumentType v18 = v56;
          *(void *)(inited + 40) = v56;
          uint64_t v19 = v16;
          BOOL v20 = v18;
          sub_1000E1920(inited);
          type metadata accessor for DocumentAttributeKey(0);
          sub_10017E9EC((unint64_t *)&qword_1004C3928, type metadata accessor for DocumentAttributeKey);
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v64 = 0;
          id v22 = [v13 dataFromRange:0 documentAttributes:v14 error:&v64];

          id v23 = v64;
          if (!v22)
          {
            CGFloat v43 = v23;
            _convertNSErrorToError(_:)();

            swift_willThrow();
            swift_errorRelease();
            swift_bridgeObjectRelease();

            uint64_t v46 = 0;
            uint64_t v8 = v54;
            goto LABEL_14;
          }
          id v58 = v13;
          uint64_t v24 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v26 = v25;

          sub_100012894((uint64_t *)&unk_1004CE6E0);
          uint64_t v27 = swift_initStackObject();
          *(_OWORD *)(v27 + 16) = v49;
          *(void *)(v27 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
          *(void *)(v27 + 40) = v28;
          uint64_t v29 = v52;
          static String.Encoding.utf8.getter();
          uint64_t v30 = String.Encoding.rawValue.getter();
          (*v50)(v29, v53);
          id v31 = objc_allocWithZone((Class)NSString);
          uint64_t v59 = v24;
          unint64_t v60 = v26;
          Class v32 = Data._bridgeToObjectiveC()().super.isa;
          id v33 = [v31 initWithData:v32 encoding:v30];

          if (!v33) {
            __break(1u);
          }
          *(void *)(v27 + 72) = sub_10001C99C(0, &qword_1004CA050);
          *(void *)(v27 + 48) = v33;
          *(void *)(v27 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
          *(void *)(v27 + 88) = v34;
          id v35 = v58;
          id v36 = [v58 string];
          uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v39 = v38;

          *(void *)(v27 + 120) = &type metadata for String;
          *(void *)(v27 + 96) = v37;
          *(void *)(v27 + 104) = v39;
          unint64_t v40 = sub_1000E1948(v27);
          sub_10004007C(v59, v60);
          swift_bridgeObjectRelease();

          unint64_t v9 = v40;
          uint64_t v5 = v48;
          uint64_t v8 = v54;
        }
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v7 = sub_10006F524(0, *((void *)v7 + 2) + 1, 1, v7);
    }
    unint64_t v42 = *((void *)v7 + 2);
    unint64_t v41 = *((void *)v7 + 3);
    if (v42 >= v41 >> 1) {
      uint64_t v7 = sub_10006F524((double *)(v41 > 1), v42 + 1, 1, v7);
    }
    *((void *)v7 + 2) = v42 + 1;
    *(void *)&v7[v42 + 4] = v9;
LABEL_14:
    ++v6;
  }
  while (v5 != v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_10017E4C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10017E524()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_10017E5F0()
{
  uint64_t v1 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_1001777DC(v2, v3);
}

uint64_t sub_10017E654()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10017E664(char a1)
{
}

void sub_10017E66C()
{
}

uint64_t sub_10017E69C()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + qword_1004CE010);
  uint64_t v6 = OBJC_IVAR____TtC7Measure11HistoryView_tableView;
  uint64_t result = (uint64_t)[*(id *)(v5 + OBJC_IVAR____TtC7Measure11HistoryView_tableView) numberOfRowsInSection:0];
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = result;
    uint64_t v9 = 0;
    uint64_t v10 = (uint64_t (**)(char *, uint64_t))(v2 + 8);
    while (1)
    {
      IndexPath.init(row:section:)();
      id v11 = *(id *)(v5 + v6);
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v13 = [v11 cellForRowAtIndexPath:isa];

      if (!v13) {
        return (*v10)(v4, v1);
      }
      swift_getObjectType();
      uint64_t v14 = swift_conformsToProtocol2();
      if (v14) {
        uint64_t v15 = v14;
      }
      else {
        uint64_t v15 = 0;
      }
      if (v14) {
        id v16 = v13;
      }
      else {
        id v16 = 0;
      }
      if (!v16) {
        goto LABEL_15;
      }
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v15 + 24))(ObjectType, v15);

      uint64_t result = (*v10)(v4, v1);
      if (v8 == v9) {
        return result;
      }
      if (__OFADD__(v9++, 1))
      {
        __break(1u);
LABEL_15:

        return (*v10)(v4, v1);
      }
    }
  }
  return result;
}

void sub_10017E888()
{
}

void sub_10017E8B0(unint64_t *a1)
{
  sub_100175CC0(a1, *(void *)(v1 + 16));
}

void sub_10017E8B8()
{
  sub_1001760D8(*(void *)(v0 + 16));
}

uint64_t sub_10017E8C0()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_10017E8D0()
{
  return [*(id *)(*(void *)(v0 + 16) + qword_1004CE010) setAlpha:*(double *)(v0 + 24)];
}

void sub_10017E8F0()
{
  sub_100175E08(*(void *)(v0 + 16));
}

uint64_t sub_10017E8F8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10017E908()
{
  return sub_100179C90(*(void *)(v0 + 16));
}

uint64_t sub_10017E910()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10017E920(uint64_t a1, uint64_t a2)
{
  return sub_100178890(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10017E928()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10017E960(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_10017E9A0()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

unint64_t sub_10017E9E0()
{
  return sub_100178B90(*(void *)(v0 + 16), *(void (**)(uint64_t, void))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10017E9EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10017EB70()
{
  _StringGuts.grow(_:)(27);
  v0._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = 592172;
  v1._object = (void *)0xE300000000000000;
  String.append(_:)(v1);
  v2._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 592172;
  v3._object = (void *)0xE300000000000000;
  String.append(_:)(v3);
  _print_unlocked<A, B>(_:_:)();
  v4._uint64_t countAndFlagsBits = 592172;
  v4._object = (void *)0xE300000000000000;
  String.append(_:)(v4);
  v5._uint64_t countAndFlagsBits = Double.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 592172;
  v6._object = (void *)0xE300000000000000;
  String.append(_:)(v6);
  v7._uint64_t countAndFlagsBits = Double.description.getter();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 592172;
  v8._object = (void *)0xE300000000000000;
  String.append(_:)(v8);
  Double.write<A>(to:)();
  return 0;
}

void sub_10017EDB0(void *a1)
{
  Swift::String v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v5 = v2;
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [a1 decodeIntegerForKey:v6];

  char v8 = sub_10007CE24((uint64_t)v7);
  if (v8 == 10)
  {

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return;
  }
  char v9 = v8;
  NSString v10 = String._bridgeToObjectiveC()();
  unint64_t v11 = (unint64_t)[a1 decodeIntegerForKey:v10];

  if ((v11 & 0x8000000000000000) == 0)
  {
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [a1 decodeObjectForKey:v12];

    if (v13)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v24, 0, sizeof(v24));
    }
    sub_10007CF44((uint64_t)v24, (uint64_t)v25);
    if (v26)
    {
      if (swift_dynamicCast())
      {
        uint64_t v14 = (NSString *)String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        CGPoint v15 = CGPointFromString(v14);
        CGFloat x = v15.x;
        CGFloat y = v15.y;

LABEL_12:
        NSString v18 = String._bridgeToObjectiveC()();
        [a1 decodeDoubleForKey:v18];
        uint64_t v20 = v19;

        uint64_t v21 = objc_allocWithZone(ObjectType);
        v21[OBJC_IVAR____TtC7Measure10FrameEvent_replayed] = 0;
        *(void *)&v21[OBJC_IVAR____TtC7Measure10FrameEvent_index] = v11;
        v21[OBJC_IVAR____TtC7Measure10FrameEvent_button] = v9;
        id v22 = (CGFloat *)&v21[OBJC_IVAR____TtC7Measure10FrameEvent_position];
        *id v22 = x;
        v22[1] = y;
        *(void *)&v21[OBJC_IVAR____TtC7Measure10FrameEvent_timestamp] = v20;
        v23.receiver = v21;
        v23.super_class = ObjectType;
        [super init];

        swift_getObjectType();
        swift_deallocPartialClassInstance();
        return;
      }
    }
    else
    {
      sub_10001C9D8((uint64_t)v25);
    }
    CGFloat y = 0.0;
    CGFloat x = 0.0;
    goto LABEL_12;
  }
  __break(1u);
}

void sub_10017F094(void *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC7Measure10FrameEvent_index);
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    NSString v4 = String._bridgeToObjectiveC()();
    [a1 encodeInteger:v2 forKey:v4];

    uint64_t v5 = qword_100401208[*(char *)(v1 + OBJC_IVAR____TtC7Measure10FrameEvent_button)];
    NSString v6 = String._bridgeToObjectiveC()();
    [a1 encodeInteger:v5 forKey:v6];

    id v7 = objc_retainAutoreleasedReturnValue(NSStringFromPoint(*(NSPoint *)(v1
                                                                         + OBJC_IVAR____TtC7Measure10FrameEvent_position)));
    if (!v7)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v7 = (NSString *)String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    NSString v8 = String._bridgeToObjectiveC()();
    [a1 encodeObject:v7 forKey:v8];

    double v9 = *(double *)(v1 + OBJC_IVAR____TtC7Measure10FrameEvent_timestamp);
    id v10 = String._bridgeToObjectiveC()();
    [a1 encodeDouble:v10 forKey:v9];
  }
}

uint64_t sub_10017F29C(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        NSString v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        NSString v6 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
      }
      uint64_t v7 = (uint64_t)sub_10017F650(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        CGPoint v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              unint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = sub_10017F558(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_10017F650);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t type metadata accessor for FrameEvent()
{
  return self;
}

uint64_t sub_10017F558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = String.init<A>(_:)();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    char v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_10017FB48();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    char v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    char v9 = (void *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  uint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_10017F650(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_10017F8CC(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v13 = v9 * a3;
              unsigned __int8 v14 = v11 + v12;
              BOOL v15 = v13 >= v14;
              unint64_t v9 = v13 - v14;
              if (!v15) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v25 = a3 + 48;
      unsigned __int8 v26 = a3 + 55;
      unsigned __int8 v27 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v25 = 58;
      }
      else
      {
        unsigned __int8 v27 = 97;
        unsigned __int8 v26 = 65;
      }
      if (result)
      {
        unint64_t v28 = 0;
        do
        {
          unsigned int v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27) {
                return 0;
              }
              char v30 = -87;
            }
            else
            {
              char v30 = -55;
            }
          }
          else
          {
            char v30 = -48;
          }
          if (!is_mul_ok(v28, a3)) {
            return 0;
          }
          unint64_t v31 = v28 * a3;
          unsigned __int8 v32 = v29 + v30;
          BOOL v15 = __CFADD__(v31, v32);
          unint64_t v28 = v31 + v32;
          if (v15) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v16 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v17 = a3 + 48;
  unsigned __int8 v18 = a3 + 55;
  unsigned __int8 v19 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v17 = 58;
  }
  else
  {
    unsigned __int8 v19 = 97;
    unsigned __int8 v18 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  char v20 = result + 1;
  do
  {
    unsigned int v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19) {
          return 0;
        }
        char v22 = -87;
      }
      else
      {
        char v22 = -55;
      }
    }
    else
    {
      char v22 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v23 = v9 * a3;
    unsigned __int8 v24 = v21 + v22;
    BOOL v15 = __CFADD__(v23, v24);
    unint64_t v9 = v23 + v24;
    if (v15) {
      return 0;
    }
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

uint64_t sub_10017FB48()
{
  unint64_t v0 = String.subscript.getter();
  uint64_t v4 = sub_10017FBC8(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10017FBC8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_10017FD20(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_10017FE20(v9, 0),
          unint64_t v12 = sub_10017FE88((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:

  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_10017FD20(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_10018009C(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_10018009C(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

void *sub_10017FE20(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_100012894(&qword_1004CE758);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unint64_t sub_10017FE88(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_10018009C(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_10018009C(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_10018009C(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = String.UTF16View.index(_:offsetBy:)();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = String.UTF8View._foreignIndex(_:offsetBy:)();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_100180118(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

id sub_100180178(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for CharacterSet();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v8) {
    goto LABEL_46;
  }
  uint64_t v63 = a1;
  uint64_t v64 = a2;
  v62[0] = 44;
  v62[1] = 0xE100000000000000;
  sub_10007CEE0();
  uint64_t v9 = (void *)StringProtocol.components<A>(separatedBy:)();
  swift_bridgeObjectRelease();
  if (v9[2] < 6uLL) {
    goto LABEL_46;
  }
  uint64_t v10 = v9[5];
  uint64_t v63 = v9[4];
  uint64_t v64 = v10;
  swift_bridgeObjectRetain();
  static CharacterSet.whitespaces.getter();
  uint64_t v11 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v13 = v12;
  uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v7, v4);
  swift_bridgeObjectRelease();
  uint64_t v15 = HIBYTE(v13) & 0xF;
  uint64_t v16 = v11 & 0xFFFFFFFFFFFFLL;
  if ((v13 & 0x2000000000000000) != 0) {
    uint64_t v17 = HIBYTE(v13) & 0xF;
  }
  else {
    uint64_t v17 = v11 & 0xFFFFFFFFFFFFLL;
  }
  if (!v17)
  {
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  if ((v13 & 0x1000000000000000) != 0)
  {
    a2 = sub_10017F558(v11, v13, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_10017F8CC);
    LOBYTE(v11) = v57;
    goto LABEL_42;
  }
  if ((v13 & 0x2000000000000000) != 0)
  {
    uint64_t v63 = v11;
    uint64_t v64 = v13 & 0xFFFFFFFFFFFFFFLL;
    if (v11 == 43)
    {
      if (v15)
      {
        if (v15 != 1 && (BYTE1(v11) - 48) <= 9u)
        {
          a2 = (BYTE1(v11) - 48);
          if (v15 == 2) {
            goto LABEL_41;
          }
          if ((BYTE2(v11) - 48) <= 9u)
          {
            a2 = 10 * (BYTE1(v11) - 48) + (BYTE2(v11) - 48);
            uint64_t v23 = v15 - 3;
            if (v23)
            {
              unsigned __int8 v24 = (unsigned __int8 *)&v63 + 3;
              while (1)
              {
                unsigned int v25 = *v24 - 48;
                if (v25 > 9) {
                  goto LABEL_38;
                }
                if (!is_mul_ok(a2, 0xAuLL)) {
                  goto LABEL_38;
                }
                BOOL v21 = __CFADD__(10 * a2, v25);
                a2 = 10 * a2 + v25;
                if (v21) {
                  goto LABEL_38;
                }
                LOBYTE(v11) = 0;
                ++v24;
                if (!--v23) {
                  goto LABEL_42;
                }
              }
            }
            goto LABEL_41;
          }
        }
        goto LABEL_38;
      }
    }
    else
    {
      if (v11 != 45)
      {
        if (v15 && (v11 - 48) <= 9u)
        {
          a2 = (v11 - 48);
          if (v15 == 1) {
            goto LABEL_41;
          }
          if ((BYTE1(v11) - 48) <= 9u)
          {
            a2 = 10 * (v11 - 48) + (BYTE1(v11) - 48);
            uint64_t v45 = v15 - 2;
            if (v45)
            {
              uint64_t v46 = (unsigned __int8 *)&v63 + 2;
              while (1)
              {
                unsigned int v47 = *v46 - 48;
                if (v47 > 9) {
                  goto LABEL_38;
                }
                if (!is_mul_ok(a2, 0xAuLL)) {
                  goto LABEL_38;
                }
                BOOL v21 = __CFADD__(10 * a2, v47);
                a2 = 10 * a2 + v47;
                if (v21) {
                  goto LABEL_38;
                }
                LOBYTE(v11) = 0;
                ++v46;
                if (!--v45) {
                  goto LABEL_42;
                }
              }
            }
            goto LABEL_41;
          }
        }
LABEL_38:
        a2 = 0;
LABEL_39:
        LOBYTE(v11) = 1;
        goto LABEL_42;
      }
      if (v15)
      {
        if (v15 != 1)
        {
          unsigned __int8 v20 = BYTE1(v11) - 48;
          if ((BYTE1(v11) - 48) <= 9u)
          {
            a2 = 0;
            BOOL v21 = v20 == 0;
            unint64_t v22 = -(uint64_t)v20;
            if (!v21) {
              goto LABEL_39;
            }
            if (v15 == 2)
            {
              LOBYTE(v11) = 0;
              a2 = v22;
              goto LABEL_42;
            }
            unsigned __int8 v48 = BYTE2(v11) - 48;
            if ((BYTE2(v11) - 48) <= 9u && is_mul_ok(v22, 0xAuLL))
            {
              unint64_t v49 = 10 * v22;
              a2 = v49 - v48;
              if (v49 >= v48)
              {
                uint64_t v50 = v15 - 3;
                if (v50)
                {
                  CFStringRef v51 = (unsigned __int8 *)&v63 + 3;
                  while (1)
                  {
                    unsigned int v52 = *v51 - 48;
                    if (v52 > 9) {
                      goto LABEL_38;
                    }
                    if (!is_mul_ok(a2, 0xAuLL)) {
                      goto LABEL_38;
                    }
                    BOOL v21 = 10 * a2 >= v52;
                    a2 = 10 * a2 - v52;
                    if (!v21) {
                      goto LABEL_38;
                    }
                    LOBYTE(v11) = 0;
                    ++v51;
                    if (!--v50) {
                      goto LABEL_42;
                    }
                  }
                }
LABEL_41:
                LOBYTE(v11) = 0;
                goto LABEL_42;
              }
            }
          }
        }
        goto LABEL_38;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_89;
  }
  if ((v11 & 0x1000000000000000) != 0) {
    unint64_t v18 = (unsigned __int8 *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else {
    unint64_t v18 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
  a2 = (unint64_t)sub_10017F8CC(v18, v16, 10);
  LOBYTE(v11) = v19 & 1;
LABEL_42:
  swift_bridgeObjectRelease();
  if (v11)
  {
LABEL_46:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v9[2] < 2uLL)
  {
    __break(1u);
LABEL_86:
    _StringGuts._slowWithCString<A>(_:)();
    swift_bridgeObjectRelease();
    a2 = v59;
    goto LABEL_80;
  }
  uint64_t v26 = v9[7];
  uint64_t v63 = v9[6];
  uint64_t v64 = v26;
  swift_bridgeObjectRetain();
  static CharacterSet.whitespaces.getter();
  uint64_t v27 = StringProtocol.trimmingCharacters(in:)();
  uint64_t v11 = v28;
  v14(v7, v4);
  swift_bridgeObjectRelease();
  uint64_t v29 = sub_10017F29C(v27, v11);
  if (v30) {
    goto LABEL_46;
  }
  char v31 = sub_10007CE24(v29);
  if (v31 == 10) {
    goto LABEL_46;
  }
  unint64_t v59 = a2;
  if (v9[2] < 6uLL)
  {
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  LOBYTE(v11) = v31;
  uint64_t v34 = v9[14];
  uint64_t v33 = v9[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v63 = v34;
  uint64_t v64 = v33;
  static CharacterSet.whitespaces.getter();
  uint64_t v35 = StringProtocol.trimmingCharacters(in:)();
  uint64_t v37 = v36;
  v14(v7, v4);
  uint64_t v38 = swift_bridgeObjectRelease();
  v62[0] = 0;
  uint64_t v39 = __chkstk_darwin(v38);
  *(&v58 - 2) = (uint64_t)v62;
  if ((v37 & 0x1000000000000000) != 0 || !(v37 & 0x2000000000000000 | v35 & 0x1000000000000000)) {
    goto LABEL_86;
  }
  __chkstk_darwin(v39);
  *(&v58 - 2) = (uint64_t)sub_1001808AC;
  *(&v58 - 1) = v40;
  a2 = v59;
  if ((v37 & 0x2000000000000000) == 0)
  {
    if ((v35 & 0x1000000000000000) != 0)
    {
      uint64_t v41 = (v37 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v42 = v35 & 0xFFFFFFFFFFFFLL;
LABEL_54:
      char v61 = sub_100180118(v41, v42, (void (*)(uint64_t *__return_ptr))sub_10018091C) & 1;
      swift_bridgeObjectRelease();
      goto LABEL_80;
    }
LABEL_90:
    uint64_t v41 = _StringObject.sharedUTF8.getter();
    goto LABEL_54;
  }
  uint64_t v63 = v35;
  uint64_t v64 = v37 & 0xFFFFFFFFFFFFFFLL;
  BOOL v44 = (v35 > 0x20u || ((0x100003E01uLL >> v35) & 1) == 0)
     && (CGFloat v43 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
     && *v43 == 0;
  char v61 = v44;
  swift_bridgeObjectRelease();
LABEL_80:
  if ((v61 & 1) == 0) {
    return 0;
  }
  uint64_t v53 = v62[0];
  unint64_t v54 = (objc_class *)type metadata accessor for FrameEvent();
  long long v55 = objc_allocWithZone(v54);
  v55[OBJC_IVAR____TtC7Measure10FrameEvent_replayed] = 0;
  *(void *)&v55[OBJC_IVAR____TtC7Measure10FrameEvent_index] = a2;
  v55[OBJC_IVAR____TtC7Measure10FrameEvent_button] = v11;
  NSAttributedStringDocumentType v56 = &v55[OBJC_IVAR____TtC7Measure10FrameEvent_position];
  *NSAttributedStringDocumentType v56 = 0;
  v56[1] = 0;
  *(void *)&v55[OBJC_IVAR____TtC7Measure10FrameEvent_timestamp] = v53;
  v60.receiver = v55;
  v60.super_class = v54;
  return [super init];
}

unsigned char *sub_1001808AC@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  v7 = v6 && (uint64_t result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_10018091C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

double *sub_100180960(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1;
    sub_1000BC040(0, v1, 0);
    uint64_t v4 = sub_100186EEC(v2);
    uint64_t v5 = 0;
    uint64_t v6 = v2 + 64;
    char v7 = *(unsigned char *)(v2 + 32);
    uint64_t v28 = v2 + 80;
    int64_t v29 = v1;
    uint64_t v31 = v2 + 64;
    uint64_t v32 = v2;
    int v30 = v3;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << v7)
    {
      unint64_t v10 = (unint64_t)v4 >> 6;
      if ((*(void *)(v6 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
        goto LABEL_30;
      }
      if (*(_DWORD *)(v2 + 36) != v3) {
        goto LABEL_31;
      }
      uint64_t v33 = v5 + 1;
      uint64_t v11 = *(void *)(*(void *)(v2 + 48) + 8 * v4);
      swift_retain();
      _StringGuts.grow(_:)(18);
      char v12 = (*(uint64_t (**)(void))(*(void *)v11 + 248))();
      unint64_t v13 = 0xE500000000000000;
      uint64_t v14 = 0x74694B7261;
      switch(v12)
      {
        case 1:
          unint64_t v13 = 0xE800000000000000;
          uint64_t v14 = 0x6465727265666E69;
          break;
        case 2:
          unint64_t v13 = 0xE800000000000000;
          uint64_t v14 = 0x6B6361626C6C6166;
          break;
        case 3:
          uint64_t v14 = 0x6C61636F6CLL;
          break;
        case 4:
          unint64_t v13 = 0xE800000000000000;
          uint64_t v14 = 0x73756F6976657270;
          break;
        case 5:
          uint64_t v14 = 0x6863746170;
          break;
        case 6:
          unint64_t v13 = 0xEA00000000006874;
          uint64_t v14 = 0x706544656C707061;
          break;
        default:
          break;
      }
      unint64_t v15 = v13;
      String.append(_:)(*(Swift::String *)&v14);
      swift_bridgeObjectRelease();
      v16._uint64_t countAndFlagsBits = 0x6823206874697720;
      v16._object = (void *)0xED0000203A737469;
      String.append(_:)(v16);
      v17._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v17);
      swift_bridgeObjectRelease();
      v18._uint64_t countAndFlagsBits = 124;
      v18._object = (void *)0xE100000000000000;
      String.append(_:)(v18);
      swift_release();
      double v20 = _swiftEmptyArrayStorage[2];
      double v19 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v20 >= *(void *)&v19 >> 1) {
        sub_1000BC040((double *)(*(void *)&v19 > 1uLL), *(void *)&v20 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v20 + 1;
      BOOL v21 = &_swiftEmptyArrayStorage[2 * *(void *)&v20];
      v21[4] = 0.0;
      uint64_t v21[5] = -2.68156159e154;
      uint64_t v2 = v32;
      char v7 = *(unsigned char *)(v32 + 32);
      unint64_t v8 = 1 << v7;
      if (v4 >= 1 << v7) {
        goto LABEL_32;
      }
      uint64_t v6 = v31;
      uint64_t v22 = *(void *)(v31 + 8 * v10);
      if ((v22 & (1 << v4)) == 0) {
        goto LABEL_33;
      }
      int v3 = v30;
      if (*(_DWORD *)(v32 + 36) != v30) {
        goto LABEL_34;
      }
      unint64_t v23 = v22 & (-2 << (v4 & 0x3F));
      if (v23)
      {
        unint64_t v8 = __clz(__rbit64(v23)) | v4 & 0xFFFFFFFFFFFFFFC0;
        int64_t v9 = v29;
      }
      else
      {
        unint64_t v24 = v10 + 1;
        unint64_t v25 = (v8 + 63) >> 6;
        int64_t v9 = v29;
        if (v10 + 1 < v25)
        {
          unint64_t v26 = *(void *)(v31 + 8 * v24);
          if (v26)
          {
LABEL_27:
            unint64_t v8 = __clz(__rbit64(v26)) + (v24 << 6);
          }
          else
          {
            while (v25 - 2 != v10)
            {
              unint64_t v26 = *(void *)(v28 + 8 * v10++);
              if (v26)
              {
                unint64_t v24 = v10 + 1;
                goto LABEL_27;
              }
            }
          }
        }
      }
      uint64_t v5 = v33;
      uint64_t v4 = v8;
      if (v33 == v9) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    JUMPOUT(0x100180D00);
  }
  return _swiftEmptyArrayStorage;
}

double *sub_100180D1C(unint64_t a1)
{
  return sub_100180D28(a1);
}

double *sub_100180D28(unint64_t a1)
{
  uint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v4 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        unint64_t v8 = *(void **)(v6 + 8 * v5);
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        ++v5;
        if (v7 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    specialized ContiguousArray.reserveCapacity(_:)();
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100180F0C(double a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v16[0] - 8);
  uint64_t result = __chkstk_darwin(v16[0]);
  id v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1004C29D8 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v11 = (void *)*((void *)&xmmword_1004F8000 + 1);
  if (*((void *)&xmmword_1004F8000 + 1))
  {
    char v12 = (void *)Contexts.PrivateQueue.init(_:)();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v1;
    *(double *)(v13 + 24) = a1;
    aBlock[4] = sub_10018379C;
    void aBlock[5] = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100049AB4;
    aBlock[3] = &unk_100490AA8;
    uint64_t v14 = _Block_copy(aBlock);
    id v15 = v11;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v16[1] = _swiftEmptyArrayStorage;
    sub_100188CEC((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100012894((uint64_t *)&unk_1004C68E0);
    sub_10003FD50((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v14);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, void))(v7 + 8))(v10, v16[0]);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100181210()
{
  return sub_100182810((uint64_t)sub_100188CAC, (uint64_t)&unk_100490D50);
}

uint64_t sub_100181230()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_1001812F8()
{
  uint64_t v1 = v0;
  uint64_t v17 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v4 = (uint64_t *)((char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  OS_dispatch_source.cancel()();
  static DispatchQoS.unspecified.getter();
  sub_100181230();
  OS_dispatch_source.setEventHandler(qos:flags:handler:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v16);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  char v12 = *(void **)(v0 + 24);
  *uint64_t v4 = v12;
  uint64_t v13 = v17;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v17);
  id v14 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v4, v13);
  if (v12)
  {
    if ((*(unsigned char *)(v1 + 32) & 1) == 0)
    {
      *(unsigned char *)(v1 + 32) = 1;
      swift_getObjectType();
      OS_dispatch_source.resume()();
    }

    swift_unknownObjectRelease();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001815B0()
{
  sub_1001812F8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RepeatingTimer()
{
  return self;
}

uint64_t sub_100181604()
{
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  uint64_t result = static UIDevice.isIPhone()();
  if ((result & 1) == 0
    || (uint64_t result = (uint64_t)[self jasperAvailable], v1 = 0.25, (result & 1) == 0))
  {
    double v1 = 0.15;
  }
  qword_1004CE760 = *(void *)&v1;
  return result;
}

void sub_100181678()
{
  qword_1004CE768 = (uint64_t)&off_100485410;
}

void sub_10018168C()
{
}

void sub_1001816B4()
{
  double v1 = v0;
  sub_100012894(&qword_1004CDF58);
  swift_allocObject();
  v0[8] = CurrentValueSubject.init(_:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_100012894((uint64_t *)&unk_1004CEA40);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1004F8630;
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 272);
  swift_retain();
  v1[9] = v5(KeyPath, v4);
  uint64_t v6 = swift_getKeyPath();
  uint64_t v7 = sub_100012894(&qword_1004CA010);
  uint64_t v8 = qword_1004F8630;
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 272);
  swift_retain();
  v1[10] = v9(v6, v8);
  uint64_t v10 = swift_getKeyPath();
  uint64_t v11 = sub_100012894((uint64_t *)&unk_1004C4710);
  uint64_t v12 = qword_1004F8630;
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 272);
  swift_retain();
  v1[11] = v13(v10, v12);
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = sub_100012894((uint64_t *)&unk_1004C6A90);
  uint64_t v16 = qword_1004F8630;
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 272);
  swift_retain();
  v1[12] = v17(v14, v16);
  uint64_t v18 = swift_getKeyPath();
  uint64_t v19 = sub_100012894((uint64_t *)&unk_1004CEA50);
  uint64_t v20 = qword_1004F8630;
  BOOL v21 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 272);
  swift_retain();
  v1[13] = v21(v18, v20);
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = sub_100012894(&qword_1004C6AD0);
  uint64_t v24 = qword_1004F8630;
  unint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 272);
  swift_retain();
  v1[14] = v25(v22, v24);
  v1[16] = 0;
  sub_100012894(&qword_1004CEA60);
  swift_allocObject();
  v1[18] = Synchronized.init(wrappedValue:)();
  v1[19] = _swiftEmptyArrayStorage;
  sub_100012894(&qword_1004CEA68);
  swift_allocObject();
  v1[20] = Synchronized.init(wrappedValue:)();
  v1[23] = 0x3FF0000000000000;
  swift_release();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1001819D4(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = __chkstk_darwin(v4);
  uint64_t v8 = (void *)((char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(double *)(v2 + 184) = a1;
  if (qword_1004C29D8 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v9 = (void *)*((void *)&xmmword_1004F8000 + 1);
  if (!*((void *)&xmmword_1004F8000 + 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  *uint64_t v8 = Contexts.PrivateQueue.init(_:)();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4);
  id v10 = v9;
  char v11 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v8, v4);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (*(void *)(v2 + 128)) {
    return result;
  }
  uint64_t v12 = (void *)*((void *)&xmmword_1004F8000 + 1);
  if (!*((void *)&xmmword_1004F8000 + 1))
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v13 = (void *)Contexts.PrivateQueue.init(_:)();
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for RepeatingTimer();
  swift_allocObject();
  id v15 = v12;
  uint64_t v16 = sub_100187A0C(v13, (uint64_t)sub_100183818, v14);

  swift_release();
  *(void *)(v2 + 128) = v16;
  swift_release();
  if (qword_1004C2AD0 != -1) {
LABEL_11:
  }
    swift_once();
  v22._uint64_t countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(114);
  v17._uint64_t countAndFlagsBits = 0xD000000000000021;
  v17._object = (void *)0x80000001004295E0;
  String.append(_:)(v17);
  Double.write<A>(to:)();
  v18._object = (void *)0x8000000100429610;
  v18._uint64_t countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v18);
  v21[1] = *(void *)(v2 + 176);
  v19._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = 0xD000000000000036;
  v20._object = (void *)0x8000000100429630;
  String.append(_:)(v20);
  Log.default(_:isPrivate:)(v22, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100181D08()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100181D60();
    return swift_release();
  }
  return result;
}

void sub_100181D60()
{
  void (*v11)(Swift::String *__return_ptr, uint64_t);
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  Swift::String v18;
  Swift::String v19;
  void (*v20)(Swift::String *__return_ptr, uint64_t);
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  Class isa;
  uint64_t v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  double *v48;
  Swift::String aBlock;
  void *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  char v54;

  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  uint64_t countAndFlagsBits = aBlock._countAndFlagsBits;

  if (!countAndFlagsBits)
  {
    unsigned int v47 = v7;
    char v11 = *(void (**)(Swift::String *__return_ptr, uint64_t))(**(void **)(v1 + 72) + 144);
    uint64_t v12 = swift_retain();
    v11(&aBlock, v12);
    swift_release();
    uint64_t v13 = aBlock._countAndFlagsBits;
    uint64_t v14 = sub_100182F94(aBlock._countAndFlagsBits, (void **)v1);
    if (v15)
    {
      uint64_t v16 = v14;
      Swift::String v17 = v15;
      if (qword_1004C2AD0 != -1) {
        swift_once();
      }
      aBlock._uint64_t countAndFlagsBits = 0;
      aBlock._object = (void *)0xE000000000000000;
      _StringGuts.grow(_:)(52);
      v18._object = (void *)0x8000000100429670;
      v18._uint64_t countAndFlagsBits = 0xD000000000000032;
      String.append(_:)(v18);
      v19._uint64_t countAndFlagsBits = v16;
      v19._object = v17;
      String.append(_:)(v19);
      swift_bridgeObjectRelease();
      Log.debug(_:isPrivate:)(aBlock, 0);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    Swift::String v20 = *(void (**)(Swift::String *__return_ptr, uint64_t))(**(void **)(v1 + 96) + 144);
    BOOL v21 = swift_retain();
    v20(&aBlock, v21);
    swift_release();
    if ((v54 & 1) != 0
      || (Swift::String v22 = [*(id *)(v1 + 120) session],
          uint64_t v23 = [v22 currentFrame],
          v22,
          !v23))
    {
LABEL_11:
      sub_10001F780(v13);
      return;
    }
    uint64_t v46 = v3;
    ariadne_trace(_:_:_:_:_:)();
    sub_100182810((uint64_t)sub_100188CA4, (uint64_t)&unk_100490D28);
    uint64_t v24 = objc_allocWithZone((Class)VNDetectRectanglesRequest);
    unsigned int v52 = sub_100188098;
    uint64_t v53 = v1;
    aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
    aBlock._object = (void *)1107296256;
    uint64_t v50 = sub_100186E60;
    CFStringRef v51 = &unk_100490B20;
    unint64_t v25 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    unint64_t v26 = [v24 initWithCompletionHandler:v25];
    _Block_release(v25);
    LODWORD(v27) = 981668463;
    [v26 setMinimumAspectRatio:v27];
    LODWORD(v28) = 1.0;
    [v26 setMaximumAspectRatio:v28];
    LODWORD(v29) = 30.0;
    [v26 setQuadratureTolerance:v29];
    LODWORD(v30) = 1036831949;
    [v26 setMinimumSize:v30];
    LODWORD(v31) = 1061997773;
    [v26 setMinimumConfidence:v31];
    [v26 setMaximumObservations:1000];
    uint64_t v32 = [v23 capturedImage];
    sub_1000E1704((uint64_t)_swiftEmptyArrayStorage);
    BOOL v44 = objc_allocWithZone((Class)VNImageRequestHandler);
    type metadata accessor for VNImageOption(0);
    uint64_t v45 = v23;
    sub_100188CEC((unint64_t *)&unk_1004C6A50, type metadata accessor for VNImageOption);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    BOOL v44 = [v44 initWithCVPixelBuffer:v32 options:isa];

    uint64_t v34 = qword_1004C29D8;
    uint64_t v35 = v45;
    if (v34 != -1) {
      swift_once();
    }
    uint64_t v36 = (void *)ARKeyFrame.init(arFrame:interfaceOrientation:)();
    uint64_t v45 = v35;
    aBlock._uint64_t countAndFlagsBits = (uint64_t)v36;
    aBlock._object = v37;
    swift_retain();
    uint64_t v38 = v36;
    Synchronized.wrappedValue.setter();
    swift_release();

    CGFloat v43 = *(void *)(v1 + 136);
    uint64_t v39 = swift_allocObject();
    uint64_t v40 = v44;
    *(void *)(v39 + 16) = v44;
    *(void *)(v39 + 24) = v26;
    unsigned int v52 = sub_1001880E0;
    uint64_t v53 = v39;
    aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
    aBlock._object = (void *)1107296256;
    uint64_t v50 = sub_100049AB4;
    CFStringRef v51 = &unk_100490B70;
    uint64_t v41 = _Block_copy(&aBlock);
    BOOL v44 = v40;
    uint64_t v42 = v26;
    static DispatchQoS.unspecified.getter();
    unsigned __int8 v48 = _swiftEmptyArrayStorage;
    sub_100188CEC((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100012894((uint64_t *)&unk_1004C68E0);
    sub_10003FD50((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    sub_10001F780(v13);
    _Block_release(v41);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v9, v6);
    swift_release();
  }
}

uint64_t sub_1001824EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = __chkstk_darwin(v2);
  uint64_t v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1004C29D8 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v7 = (void *)*((void *)&xmmword_1004F8000 + 1);
  if (!*((void *)&xmmword_1004F8000 + 1))
  {
    __break(1u);
    return result;
  }
  *uint64_t v6 = Contexts.PrivateQueue.init(_:)();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v2);
  id v8 = v7;
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v6, v2);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_7;
  }
  uint64_t result = v1[16];
  if (!result) {
    return result;
  }
  v1[16] = 0;
  swift_release();
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_bridgeObjectRelease();
  uint64_t v16 = _swiftEmptyArrayStorage;
  Synchronized.wrappedValue.setter();
  swift_release();
  v15._uint64_t countAndFlagsBits = 0;
  v15._object = 0;
  swift_retain();
  Synchronized.wrappedValue.setter();
  swift_release();
  if (qword_1004C2C70 != -1) {
    goto LABEL_12;
  }
LABEL_7:
  v1[21] = qword_1004CE760;
  v1[22] = 1;
  if (qword_1004C2AD0 != -1) {
    swift_once();
  }
  v15._uint64_t countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(141);
  v10._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
  v10._object = (void *)0x8000000100429BA0;
  String.append(_:)(v10);
  Double.write<A>(to:)();
  v11._object = (void *)0x8000000100429610;
  v11._uint64_t countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v11);
  uint64_t v16 = (double *)v1[22];
  v12._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 0xD000000000000036;
  v13._object = (void *)0x8000000100429630;
  String.append(_:)(v13);
  Log.default(_:isPrivate:)(v15, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100182810(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v17[0] - 8);
  uint64_t result = __chkstk_darwin(v17[0]);
  Swift::String v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1004C29D8 != -1) {
    uint64_t result = swift_once();
  }
  Swift::String v13 = (void *)*((void *)&xmmword_1004F8000 + 1);
  if (*((void *)&xmmword_1004F8000 + 1))
  {
    uint64_t v14 = (void *)Contexts.PrivateQueue.init(_:)();
    aBlock[4] = a1;
    void aBlock[5] = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100049AB4;
    aBlock[3] = a2;
    Swift::String v15 = _Block_copy(aBlock);
    id v16 = v13;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v17[1] = _swiftEmptyArrayStorage;
    sub_100188CEC((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100012894((uint64_t *)&unk_1004C68E0);
    sub_10003FD50((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, void))(v9 + 8))(v12, v17[0]);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100182ADC(uint64_t a1)
{
  void (*v10)(unint64_t *__return_ptr, uint64_t);
  uint64_t v11;
  unint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)*((void *)&xmmword_1004F8000 + 1);
  if (!*((void *)&xmmword_1004F8000 + 1))
  {
    __break(1u);
    return;
  }
  *uint64_t v6 = Contexts.PrivateQueue.init(_:)();
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  id v8 = v7;
  char v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_once();
    goto LABEL_12;
  }
  if (!*(void *)(a1 + 128)) {
    return;
  }
  Swift::String v10 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(a1 + 72) + 144);
  uint64_t v11 = swift_retain();
  v10(&v16, v11);
  swift_release();
  Swift::String v12 = v16;
  sub_10001F780(v16);
  double v1 = *(double *)(a1 + 168);
  if (!(v12 >> 62))
  {
    if (v1 == 0.3) {
      return;
    }
    sub_1001824EC();
    *(void *)(a1 + 168) = 0x3FD3333333333333;
    *(void *)(a1 + 176) = 4;
    if (qword_1004C2AD0 != -1) {
      swift_once();
    }
    v13._object = (void *)0x8000000100429B70;
    v13._uint64_t countAndFlagsBits = 0xD000000000000021;
    Log.default(_:isPrivate:)(v13, 0);
    goto LABEL_14;
  }
  if (qword_1004C2C70 != -1) {
    goto LABEL_17;
  }
LABEL_12:
  if (v1 == *(double *)&qword_1004CE760) {
    return;
  }
  uint64_t v14 = sub_1001824EC();
LABEL_14:
  sub_1001819D4(v14, *(double *)(a1 + 184));
}

uint64_t sub_100182D70()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_100182DF8()
{
  uint64_t v0 = StateObserver.deinit();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_100182E88()
{
  sub_100182DF8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RectangleDetector()
{
  uint64_t result = qword_1004CE848;
  if (!qword_1004CE848) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100182F04()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100182F94(unint64_t a1, void **a2)
{
  void (*v5)(long long *__return_ptr, uint64_t);
  uint64_t v6;
  void (*v7)(long long *__return_ptr, uint64_t);
  uint64_t v8;
  void (*v9)(long long *__return_ptr, uint64_t);
  uint64_t v10;
  void (*v11)(_OWORD *__return_ptr, uint64_t);
  uint64_t v12;
  _OWORD v14[9];
  uint64_t v15;
  long long v16;
  long long v17;
  long long v18;
  long long v19;
  long long v20;
  long long v21;
  long long v22;
  long long v23;
  long long v24;
  uint64_t v25;
  uint64_t v26[18];
  long long v27;
  long long v28;
  long long v29;
  long long v30;
  long long v31;
  long long v32;
  long long v33;
  char v34;

  unint64_t v3 = 0xD000000000000012;
  if ((a1 >> 62) - 1 < 2)
  {
    if ([self jasperAvailable]) {
      return v3;
    }
    goto LABEL_8;
  }
  if (a1 >> 62 == 3)
  {
    if (a1 == 0xC000000000000010)
    {
      unsigned int v4 = 1768186945;
      return v4 | 0x6120676E00000000;
    }
    if (a1 == 0xC000000000000018)
    {
      unsigned int v4 = 1769369421;
      return v4 | 0x6120676E00000000;
    }
  }
LABEL_8:
  uint64_t v5 = *(void (**)(long long *__return_ptr, uint64_t))(*a2[11] + 144);
  uint64_t v6 = swift_retain();
  v5(&v16, v6);
  swift_release();
  if (BYTE3(v16)) {
    return 0xD00000000000001BLL;
  }
  uint64_t v7 = *(void (**)(long long *__return_ptr, uint64_t))(*a2[12] + 144);
  id v8 = swift_retain();
  v7(&v16, v8);
  swift_release();
  uint64_t v31 = v20;
  uint64_t v32 = v21;
  uint64_t v33 = v22;
  uint64_t v34 = v23;
  uint64_t v27 = v16;
  uint64_t v28 = v17;
  int64_t v29 = v18;
  int v30 = v19;
  if (sub_100081594()) {
    return 0x7420676E69766F4DLL;
  }
  char v9 = *(void (**)(long long *__return_ptr, uint64_t))(*a2[13] + 144);
  Swift::String v10 = swift_retain();
  v9(&v16, v10);
  swift_release();
  if v16 == 1 && ([self jasperAvailable]) {
    return 0xD000000000000018;
  }
  uint64_t v11 = *(void (**)(_OWORD *__return_ptr, uint64_t))(*a2[14] + 144);
  Swift::String v12 = swift_retain();
  v11(v14, v12);
  swift_release();
  Swift::String v22 = v14[6];
  uint64_t v23 = v14[7];
  uint64_t v24 = v14[8];
  unint64_t v25 = v15;
  Swift::String v18 = v14[2];
  Swift::String v19 = v14[3];
  Swift::String v20 = v14[4];
  BOOL v21 = v14[5];
  id v16 = v14[0];
  Swift::String v17 = v14[1];
  sub_100016B40((id *)&v16);
  sub_100016F3C((uint64_t)&v16);
  sub_100016FEC((uint64_t)&v16, (uint64_t)v26, (uint64_t *)&unk_1004CEA30);
  if (sub_100016B28(v26) == 1) {
    return 0;
  }
  sub_100016B6C((id *)&v16);
  return v3;
}

uint64_t sub_100183298(uint64_t result, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = (void *)result;
  if (qword_1004C29D8 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v5 = (void *)*((void *)&xmmword_1004F8000 + 1);
  if (*((void *)&xmmword_1004F8000 + 1))
  {
    uint64_t v6 = Contexts.PrivateQueue.init(_:)();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v4;
    *(void *)(v7 + 24) = a3;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_100188128;
    *(void *)(v8 + 24) = v7;
    v13[4] = sub_100039980;
    v13[5] = v8;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_1000FA194;
    v13[3] = &unk_100490BE8;
    char v9 = _Block_copy(v13);
    id v10 = v5;
    id v11 = v4;
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v6, v9);

    _Block_release(v9);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_10018344C(void *a1, void *a2)
{
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1003F8B20;
  *(void *)(v4 + 32) = a2;
  specialized Array._endMutation()();
  sub_10001C99C(0, &qword_1004C6A60);
  id v5 = a2;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v10 = 0;
  LODWORD(a1) = [a1 performRequests:isa error:&v10];

  id v7 = v10;
  if (a1)
  {
    return v7;
  }
  else
  {
    id v9 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    ariadne_trace(_:_:_:_:_:)();
    return (id)swift_errorRelease();
  }
}

unsigned char *storeEnumTagSinglePayload for RepeatingTimer.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001836D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RepeatingTimer.State()
{
  return &type metadata for RepeatingTimer.State;
}

unint64_t sub_100183710()
{
  unint64_t result = qword_1004CE9C8;
  if (!qword_1004CE9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CE9C8);
  }
  return result;
}

uint64_t sub_100183764()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10018379C()
{
  return sub_1001819D4(*(double *)(v0 + 24));
}

uint64_t sub_1001837C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001837D8()
{
  return swift_release();
}

uint64_t sub_1001837E0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100183818()
{
  return sub_100181D08();
}

uint64_t sub_100183820(void *a1, uint64_t a2)
{
  ariadne_trace(_:_:_:_:_:)();
  id v4 = [a1 results];
  if (v4)
  {
    uint64_t v5 = v4;
    sub_10001C99C(0, (unint64_t *)&unk_1004CEA10);
    unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (!v7) {
      ariadne_trace(_:_:_:_:_:)();
    }
  }
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  if (!_[0]._countAndFlagsBits) {
    goto LABEL_16;
  }
  uint64_t countAndFlagsBits = (void *)_[0]._countAndFlagsBits;
  object = _[0]._object;
  id v8 = [a1 results];
  if (!v8
    || (id v9 = v8,
        sub_10001C99C(0, (unint64_t *)&unk_1004CEA10),
        unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(),
        v9,
        id v11 = sub_100180D28(v10),
        swift_bridgeObjectRelease(),
        !v11))
  {

LABEL_16:
    ariadne_trace(_:_:_:_:_:)();
    _[0]._object = 0;
    _[0]._uint64_t countAndFlagsBits = 0;
    swift_retain();
    goto LABEL_17;
  }
  if (!((unint64_t)v11 >> 62))
  {
    uint64_t v12 = *(void *)(((unint64_t)v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v12 >= 1) {
      goto LABEL_11;
    }
    goto LABEL_43;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v12 < 1)
  {
LABEL_43:

    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
LABEL_11:
  if (qword_1004C2AD0 != -1) {
    swift_once();
  }
  _StringGuts.grow(_:)(38);
  swift_bridgeObjectRelease();
  _[0]._uint64_t countAndFlagsBits = 0x6465766965636552;
  _[0]._object = (void *)0xE900000000000020;
  __src[0] = v12;
  v13._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v14._object = (void *)0x80000001004296B0;
  String.append(_:)(v14);
  v15._uint64_t countAndFlagsBits = 0x6465766965636552;
  v15._object = (void *)0xE900000000000020;
  Log.debug(_:isPrivate:)(v15, 0);
  swift_bridgeObjectRelease();
  if ((unint64_t)v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v16 = result;
  }
  else
  {
    uint64_t v16 = *(void *)(((unint64_t)v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v19 = (uint64_t)object;
  Swift::String v18 = countAndFlagsBits;
  Swift::String v20 = (char *)_swiftEmptyArrayStorage;
  uint64_t v44 = a2;
  if (!v16) {
    goto LABEL_35;
  }
  if (v16 >= 1)
  {
    uint64_t v21 = 0;
    uint64_t v43 = *(void *)(a2 + 120);
    unint64_t v22 = (unint64_t)v11 & 0xC000000000000001;
    uint64_t v23 = v11;
    do
    {
      uint64_t v24 = v16;
      if (v22) {
        unint64_t v25 = (float32x2_t *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        unint64_t v25 = (float32x2_t *)*(id *)&v11[v21 + 4];
      }
      unint64_t v26 = v25;
      if (!sub_1001840C4(v25, v43, (uint64_t)v18, v19)
        || (VNRectangleObservation.quad.getter(),
            id v27 = v18,
            WorldRectangleData.init(_:screenCoordinates:keyFrame:)(),
            sub_100016FEC((uint64_t)v46, (uint64_t)__src, &qword_1004CCE98),
            sub_10014CD80(__src) == 1))
      {
        id v11 = v23;
      }
      else
      {
        memcpy(_, __src, sizeof(_));
        id v11 = v23;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          Swift::String v20 = sub_10006F3E4(0, *((void *)v20 + 2) + 1, 1, v20);
        }
        unint64_t v29 = *((void *)v20 + 2);
        unint64_t v28 = *((void *)v20 + 3);
        if (v29 >= v28 >> 1) {
          Swift::String v20 = sub_10006F3E4((char *)(v28 > 1), v29 + 1, 1, v20);
        }
        *((void *)v20 + 2) = v29 + 1;
        memcpy(&v20[304 * v29 + 32], _, 0x130uLL);
        uint64_t v19 = (uint64_t)object;
        Swift::String v18 = countAndFlagsBits;
      }
      ++v21;

      uint64_t v16 = v24;
    }
    while (v24 != v21);
LABEL_35:
    swift_bridgeObjectRelease();
    if (!*((void *)v20 + 2))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ariadne_trace(_:_:_:_:_:)();

      swift_retain();
      Synchronized.wrappedValue.setter();
      swift_release();
      return ariadne_trace(_:_:_:_:_:)();
    }
    swift_retain();
    Synchronized.wrappedValue.getter();
    swift_release();
    uint64_t v30 = *(void *)(v45 + 16);
    swift_bridgeObjectRelease();
    if (v30 >= *(void *)(v44 + 176))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_retain();
      swift_retain();
      Synchronized.wrappedValue.getter();
      swift_release();
      CurrentValueSubject.send(_:)();
      swift_bridgeObjectRelease();
      swift_release();
      swift_retain();
      Synchronized.wrappedValue.getter();
      swift_bridgeObjectRelease();
      Synchronized.wrappedValue.setter();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_retain();
      Synchronized.wrappedValue.getter();
      sub_100122628((uint64_t)v20);
      Synchronized.wrappedValue.setter();
      swift_release();
      _StringGuts.grow(_:)(116);
      v31._object = (void *)0x80000001004296D0;
      v31._uint64_t countAndFlagsBits = 0xD000000000000017;
      String.append(_:)(v31);
      swift_bridgeObjectRelease();
      v32._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v32);
      swift_bridgeObjectRelease();
      v33._uint64_t countAndFlagsBits = 0xD000000000000018;
      v33._object = (void *)0x80000001004296F0;
      String.append(_:)(v33);
      swift_bridgeObjectRelease();
      v34._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v34);
      swift_bridgeObjectRelease();
      v35._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
      v35._object = (void *)0x8000000100429710;
      String.append(_:)(v35);
      swift_retain();
      Synchronized.wrappedValue.getter();
      swift_release();
      swift_bridgeObjectRelease();
      v36._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v36);
      swift_bridgeObjectRelease();
      v37._uint64_t countAndFlagsBits = 47;
      v37._object = (void *)0xE100000000000000;
      String.append(_:)(v37);
      v38._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v38);
      swift_bridgeObjectRelease();
      v39._uint64_t countAndFlagsBits = 41;
      v39._object = (void *)0xE100000000000000;
      String.append(_:)(v39);
      v40._uint64_t countAndFlagsBits = 0;
      v40._object = (void *)0xE000000000000000;
      Log.debug(_:isPrivate:)(v40, 0);
      swift_bridgeObjectRelease();
    }
    ariadne_trace(_:_:_:_:_:)();

    swift_retain();
LABEL_17:
    Synchronized.wrappedValue.setter();
    swift_release();
    return ariadne_trace(_:_:_:_:_:)();
  }
  __break(1u);
  return result;
}

uint64_t sub_1001840C4(float32x2_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v230)(Swift::String *__return_ptr, void (**)(double *, uint64_t), uint64_t, double);
  __int32 v231;
  Swift::String v232;
  Swift::String v233;
  Swift::String v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  Swift::String v241;
  uint64_t v242;
  void *v243;
  void *v244;
  id v245;
  id v246;
  uint64_t v247;
  void *v248;
  const void *v249;
  char *v250;
  uint64_t v251;
  void *v252;
  const void *v253;
  void (*v254)(uint64_t);
  uint64_t v255;
  Swift::String v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  void *v261;
  float32x4_t v262;
  Swift::String v263;
  Swift::String v264;
  long long v265;
  float32x4_t v266;
  float32x4_t v267;
  float32x4_t v268;
  float32x4_t v269;
  void *v270;
  void *v271;
  id v272;
  id v273;
  Swift::String v274;
  Swift::String v275;
  uint64_t v276;
  double *v277;
  long long v278;
  long long v279;
  long long v280;
  long long v281;
  void (**v282)(double *, uint64_t);
  uint64_t v283;
  double *v284;
  long long v285;
  Swift::String v286;
  Swift::String v287;
  Swift::String v288;
  Swift::String v289;
  uint64_t v290;
  long long v291;
  double *v292;
  uint64_t v293;
  char *v294;
  long long v295;
  Swift::String v296;
  Swift::String v297;
  float32x4_t v298;
  Swift::String v299;
  void v300[4];
  uint64_t v301;
  Swift::String v302[7];
  __int32 v303;
  unsigned char v304[128];
  uint64_t v305;
  unsigned char v306[48];
  void v307[16];
  long long v308;
  long long v309;
  long long v310;
  long long v311;
  char v312;
  long long v313;
  long long v314;
  long long v315;
  long long v316;
  char v317;
  unint64_t v318[20];
  CGRect v319;
  CGRect v320;
  CGRect v321;
  CGRect v322;

  v298.i64[0] = a4;
  v297._uint64_t countAndFlagsBits = a2;
  *(void *)&char v295 = type metadata accessor for DispatchWorkItemFlags();
  *(void *)&char v291 = *(void *)(v295 - 8);
  __chkstk_darwin(v295);
  char v294 = (char *)&v276 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v293 = type metadata accessor for DispatchQoS();
  Swift::String v290 = *(void *)(v293 - 8);
  __chkstk_darwin(v293);
  __int16 v292 = (double *)((char *)&v276 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  v296._uint64_t countAndFlagsBits = v4;
  unint64_t v9 = *(void *)(v4 + 152);
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    if (v10) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10)
    {
LABEL_3:
      if (v10 < 1) {
        goto LABEL_161;
      }
      for (uint64_t i = 0; i != v10; ++i)
      {
        if ((v9 & 0xC000000000000001) != 0) {
          id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v12 = *(id *)(v9 + 8 * i + 32);
        }
        Swift::String v13 = v12;
        [v12 removeFromSuperlayer];
      }
    }
  }
  swift_bridgeObjectRelease();
  *(void *)(v4 + 152) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  [(float32x2_t *)a1 boundingBox];
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  if (qword_1004C3238 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits;
  if ((*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80) & 1) == 0)
  {
    double v24 = *(double *)(v22 + 64);
    double v23 = *(double *)(v22 + 72);
    sub_100012894((uint64_t *)&unk_1004C71E0);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1003F8720;
    [(float32x2_t *)a1 topLeft];
    *(void *)(v25 + 32) = v26;
    *(void *)(v25 + 40) = v27;
    [(float32x2_t *)a1 topRight];
    *(void *)(v25 + 48) = v28;
    *(void *)(v25 + 56) = v29;
    [(float32x2_t *)a1 bottomRight];
    *(void *)(v25 + 64) = v30;
    *(void *)(v25 + 72) = v31;
    [(float32x2_t *)a1 bottomLeft];
    *(void *)(v25 + 80) = v32;
    *(void *)(v25 + 88) = v33;
    id v34 = (id)a3;
    uint64_t v35 = v298.i64[0];
    a1 = (float32x2_t *)sub_100186F74(v25);

    swift_setDeallocating();
    swift_deallocClassInstance();
    id v36 = v34;
    swift_bridgeObjectRetain();
    id v37 = (id)v297._countAndFlagsBits;
    Swift::String v38 = sub_100187074(0, 4, (uint64_t)v36, v35, (uint64_t)a1);

    swift_bridgeObjectRelease();
    unint64_t v39 = (unint64_t)a1[2];
    if (v39 < 3)
    {
      __break(1u);
    }
    else if (v39 != 3)
    {
      BOOL v40 = 0;
      float v41 = v24;
      float v42 = v23;
      float v43 = v41 * 0.5;
      float v44 = v42 * 0.5;
      float32x2_t v45 = a1[7];
      float32x2_t v46 = vsub_f32(a1[6], v45);
      float32x2_t v47 = vmul_f32(v46, v46);
      float32x2_t v48 = vsub_f32(a1[4], v45);
      unsigned __int32 v49 = vadd_f32(v47, (float32x2_t)vdup_lane_s32((int32x2_t)v47, 1)).u32[0];
      float32x2_t v50 = vrsqrte_f32((float32x2_t)v49);
      float32x2_t v51 = vmul_f32(v50, vrsqrts_f32((float32x2_t)v49, vmul_f32(v50, v50)));
      float32x2_t v52 = vmul_n_f32(v46, vmul_f32(v51, vrsqrts_f32((float32x2_t)v49, vmul_f32(v51, v51))).f32[0]);
      v53.f32[0] = v43 - v45.f32[0];
      v53.f32[1] = v44 - v45.f32[1];
      float32x2_t v54 = vmul_f32(v53, v52);
      float32x2_t v55 = vmul_f32(v48, v48);
      LODWORD(v56) = vadd_f32(v55, (float32x2_t)vdup_lane_s32((int32x2_t)v55, 1)).u32[0];
      if (vaddv_f32(v54) > 0.0)
      {
        float32x2_t v57 = vadd_f32(v54, (float32x2_t)vdup_lane_s32((int32x2_t)v54, 1));
        float32x2_t v58 = vmul_f32(v52, v57);
        float v59 = vmul_lane_f32(v57, v52, 1).f32[0];
        v57.f32[0] = v43 - vadd_f32(v45, v58).f32[0];
        v57.f32[1] = v44 - (float)(v45.f32[1] + v59);
        float v60 = sqrtf(vaddv_f32(vmul_f32(v57, v57)));
        if (v60 > 0.0) {
          BOOL v40 = v60 < sqrtf(v56);
        }
      }
      float32x2_t v61 = vrsqrte_f32((float32x2_t)LODWORD(v56));
      float32x2_t v62 = vmul_f32(v61, vrsqrts_f32((float32x2_t)LODWORD(v56), vmul_f32(v61, v61)));
      float32x2_t v63 = vmul_n_f32(v48, vmul_f32(v62, vrsqrts_f32((float32x2_t)LODWORD(v56), vmul_f32(v62, v62))).f32[0]);
      float32x2_t v64 = vmul_f32(v53, v63);
      if (vaddv_f32(v64) > 0.0)
      {
        float32x2_t v65 = vadd_f32(v64, (float32x2_t)vdup_lane_s32((int32x2_t)v64, 1));
        v66.f32[0] = v43 - vadd_f32(v45, vmul_f32(v63, v65)).f32[0];
        v66.f32[1] = v44 - (float)(v45.f32[1] + vmul_lane_f32(v65, v63, 1).f32[0]);
        float v67 = sqrtf(vaddv_f32(vmul_f32(v66, v66)));
        if (v67 > 0.0 && v40 && v67 < sqrtf(vaddv_f32(v47)))
        {
          v319.origin.CGFloat x = v15;
          v319.origin.CGFloat y = v17;
          v319.size.width = v19;
          v319.size.height = v21;
          float MinX = CGRectGetMinX(v319);
          if (MinX >= 0.01)
          {
            v320.origin.CGFloat x = v15;
            v320.origin.CGFloat y = v17;
            v320.size.width = v19;
            v320.size.height = v21;
            float MinY = CGRectGetMinY(v320);
            if (MinY >= 0.01)
            {
              v321.origin.CGFloat x = v15;
              v321.origin.CGFloat y = v17;
              v321.size.width = v19;
              v321.size.height = v21;
              float MaxX = CGRectGetMaxX(v321);
              if (MaxX <= 0.99)
              {
                v322.origin.CGFloat x = v15;
                v322.origin.CGFloat y = v17;
                v322.size.width = v19;
                v322.size.height = v21;
                float MaxY = CGRectGetMaxY(v322);
                if (MaxY <= 0.99)
                {
                  uint64_t v284 = v38;
                  id v80 = v36;
                  swift_bridgeObjectRetain();
                  uint64_t v81 = sub_1001871D4(0, 4, (uint64_t)a1);
                  char v276 = 0;
                  swift_bridgeObjectRelease();

                  uint64_t v282 = (void (**)(double *, uint64_t))v80;
                  id v82 = [v80 camera];
                  [v82 transform];
                  int v280 = v84;
                  char v281 = v83;
                  uint64_t v278 = v86;
                  char v279 = v85;

                  uint64_t v87 = *(void *)(v81 + 16);
                  a3 = (uint64_t)_swiftEmptyArrayStorage;
                  uint64_t v283 = v81;
                  if (v87)
                  {
                    swift_bridgeObjectRetain();
                    CGRect v88 = (_DWORD *)(v81 + 144);
                    do
                    {
                      uint64_t v95 = *((void *)v88 - 1);
                      if (v95)
                      {
                        char v297 = (Swift::String)*((_OWORD *)v88 - 7);
                        Swift::String v96 = (Swift::String)*((_OWORD *)v88 - 6);
                        uint64_t v288 = (Swift::String)*((_OWORD *)v88 - 5);
                        uint64_t v289 = v96;
                        Swift::String v97 = (Swift::String)*((_OWORD *)v88 - 4);
                        uint64_t v286 = (Swift::String)*((_OWORD *)v88 - 3);
                        uint64_t v287 = v97;
                        uint64_t v285 = *((_OWORD *)v88 - 2);
                        uint64_t v98 = *((void *)v88 - 2);
                        int v99 = *v88;
                        swift_retain();
                        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                        v318[0] = a3;
                        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                        {
                          sub_1000BC060(0, *(void *)(a3 + 16) + 1, 1);
                          a3 = v318[0];
                        }
                        unint64_t v90 = *(void *)(a3 + 16);
                        unint64_t v89 = *(void *)(a3 + 24);
                        if (v90 >= v89 >> 1)
                        {
                          sub_1000BC060((double *)(v89 > 1), v90 + 1, 1);
                          a3 = v318[0];
                        }
                        *(void *)(a3 + 16) = v90 + 1;
                        uint64_t v91 = a3 + (v90 << 7);
                        Swift::String v92 = v289;
                        *(Swift::String *)(v91 + 32) = v297;
                        *(Swift::String *)(v91 + 48) = v92;
                        Swift::String v93 = v287;
                        *(Swift::String *)(v91 + 64) = v288;
                        *(Swift::String *)(v91 + 80) = v93;
                        long long v94 = v285;
                        *(Swift::String *)(v91 + 96) = v286;
                        *(_OWORD *)(v91 + 112) = v94;
                        *(void *)(v91 + 128) = v98;
                        *(void *)(v91 + 136) = v95;
                        *(_DWORD *)(v91 + 144) = v99;
                      }
                      v88 += 32;
                      --v87;
                    }
                    while (v87);
                    uint64_t v81 = v283;
                    swift_bridgeObjectRelease();
                  }
                  id v101 = v284;
                  if (*(void *)(a3 + 16))
                  {
                    *(void *)&char v313 = _swiftEmptyDictionarySingleton;
                    if (qword_1004C2AD0 == -1) {
                      goto LABEL_50;
                    }
                    goto LABEL_169;
                  }
                  swift_release();
                  uint64_t v123 = sub_1001881B4((uint64_t)a1, (uint64_t)v282, v298.i64[0]);
                  if (v123)
                  {
                    NSAttributedStringKey v124 = (unsigned char *)v123;
                    if (qword_1004C2AD0 != -1) {
                      swift_once();
                    }
                    v125._uint64_t countAndFlagsBits = 0xD000000000000057;
                    v125._object = (void *)0x8000000100429920;
                    Log.debug(_:isPrivate:)(v125, 0);
                    goto LABEL_220;
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (qword_1004C2AD0 != -1) {
                    swift_once();
                  }
                  unint64_t v76 = 0xD000000000000057;
                  Class v77 = "Projecting rectangle corners failed -> searching for plane inside rectangle... FAILURE!";
                  goto LABEL_33;
                }
              }
            }
          }
          swift_bridgeObjectRelease();
          if (qword_1004C29D8 == -1)
          {
LABEL_27:
            if (!qword_1004F7FE0) {
              goto LABEL_275;
            }
            uint64_t v72 = *(void **)(qword_1004F7FE0 + 80);
            if (v72)
            {
              unint64_t v73 = self;
              id v74 = v72;
              id v75 = [v73 redColor];
              sub_100055570((uint64_t)a1, v75, 0xD000000000000014, 0x8000000100429A20);
            }
            swift_bridgeObjectRelease();
            if (qword_1004C2AD0 != -1) {
              swift_once();
            }
            unint64_t v76 = 0xD000000000000039;
            Class v77 = "Ignored 2D rectangle for being too close to display edge.";
LABEL_33:
            unint64_t v78 = (unint64_t)(v77 - 32) | 0x8000000000000000;
            Log.debug(_:isPrivate:)(*(Swift::String *)&v76, 0);
            return 0;
          }
LABEL_163:
          swift_once();
          goto LABEL_27;
        }
      }
      swift_bridgeObjectRelease();
LABEL_35:
      swift_bridgeObjectRelease();
      return 0;
    }
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    __break(1u);
    goto LABEL_163;
  }
  __break(1u);
LABEL_171:
  swift_bridgeObjectRetain_n();
  uint64_t v141 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v141)
  {
LABEL_172:
    swift_bridgeObjectRelease();
    uint64_t v144 = v313;
    goto LABEL_173;
  }
LABEL_100:
  unint64_t v142 = 0;
  v297._uint64_t countAndFlagsBits = a3 & 0xC000000000000001;
  v286._uint64_t countAndFlagsBits = a3 & 0xFFFFFFFFFFFFFF8;
  *(void *)&uint64_t v285 = a3 + 32;
  v287._uint64_t countAndFlagsBits = 0x80000001004297B0;
  v288._uint64_t countAndFlagsBits = a3;
  v289._uint64_t countAndFlagsBits = v141;
  while (1)
  {
    if (v297._countAndFlagsBits)
    {
      a3 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v142 >= *(void *)(v286._countAndFlagsBits + 16)) {
        goto LABEL_165;
      }
      a3 = *(void *)(v285 + 8 * v142);
      swift_retain();
    }
    v298.i64[0] = v142 + 1;
    if (__OFADD__(v142, 1))
    {
      __break(1u);
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
LABEL_167:
      __break(1u);
LABEL_168:
      __break(1u);
LABEL_169:
      swift_once();
LABEL_50:
      v102._uint64_t countAndFlagsBits = 0xD000000000000056;
      v102._object = (void *)0x8000000100429750;
      Log.debug(_:isPrivate:)(v102, 0);
      v318[0] = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v103 = *(void *)(a3 + 16);
      if (v103)
      {
        swift_retain();
        uint64_t v104 = 136;
        uint64_t v105 = v103;
        do
        {
          if (*(void *)(a3 + v104))
          {
            swift_retain();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v318[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v318[0] & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          v104 += 128;
          --v105;
        }
        while (v105);
        swift_release();
        *(void *)&__int16 v308 = v318[0];
        uint64_t v106 = a3 + 80;
        uint64_t v107 = _swiftEmptyArrayStorage;
        do
        {
          uint64_t v115 = *(void *)(v106 + 56);
          if (!v115) {
            goto LABEL_276;
          }
          int v116 = *(unsigned __int8 *)(v115 + 48);
          if (v116 == 5 || v116 == 3)
          {
            char v297 = *(Swift::String *)(v106 - 48);
            Swift::String v118 = *(Swift::String *)(v106 - 32);
            uint64_t v288 = *(Swift::String *)(v106 - 16);
            uint64_t v289 = v118;
            Swift::String v119 = *(Swift::String *)v106;
            uint64_t v286 = *(Swift::String *)(v106 + 16);
            uint64_t v287 = v119;
            uint64_t v285 = *(_OWORD *)(v106 + 32);
            uint64_t v120 = *(void *)(v106 + 48);
            int v122 = *(_DWORD *)(v106 + 64);
            swift_retain();
            char v121 = swift_isUniquelyReferenced_nonNull_native();
            v318[0] = (unint64_t)v107;
            if ((v121 & 1) == 0)
            {
              sub_1000BC060(0, *((void *)v107 + 2) + 1, 1);
              uint64_t v107 = (double *)v318[0];
            }
            unint64_t v109 = *((void *)v107 + 2);
            unint64_t v108 = *((void *)v107 + 3);
            uint64_t v110 = v107;
            if (v109 >= v108 >> 1)
            {
              LODWORD(v277) = v122;
              sub_1000BC060((double *)(v108 > 1), v109 + 1, 1);
              int v122 = (int)v277;
              uint64_t v110 = (double *)v318[0];
            }
            *((void *)v110 + 2) = v109 + 1;
            uint64_t v111 = &v110[16 * v109];
            Swift::String v112 = v289;
            *((Swift::String *)v111 + 2) = v297;
            *((Swift::String *)v111 + 3) = v112;
            Swift::String v113 = v287;
            *((Swift::String *)v111 + 4) = v288;
            *((Swift::String *)v111 + 5) = v113;
            long long v114 = v285;
            *((Swift::String *)v111 + 6) = v286;
            *((_OWORD *)v111 + 7) = v114;
            *((void *)v111 + 16) = v120;
            *((void *)v111 + 17) = v115;
            *((_DWORD *)v111 + 36) = v122;
            uint64_t v107 = v110;
          }
          v106 += 128;
          --v103;
        }
        while (v103);
      }
      else
      {
        *(void *)&__int16 v308 = _swiftEmptyArrayStorage;
        uint64_t v107 = _swiftEmptyArrayStorage;
      }
      swift_release();
      if (*((void *)v107 + 2) >= 2uLL)
      {
        MeasureCore.shared.unsafeMutableAddressor();
        swift_retain();
        static SIMD2<>.average(_:)();
        sub_100188140((uint64_t)v302);
        sub_100016FEC((uint64_t)v302, (uint64_t)v318, &qword_1004CC350);
        if (qword_1004C2C78 != -1) {
          swift_once();
        }
        MeasureCore.hitTest(screenPoint:frame:orientation:context:planeTypes:)();
        swift_release();
        sub_100016FEC((uint64_t)v304, (uint64_t)v307, &qword_1004CEA20);
        if (v307[13])
        {
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v107 = sub_10006F744(0, *((void *)v107 + 2) + 1, 1, v107);
          }
          unint64_t v127 = *((void *)v107 + 2);
          unint64_t v126 = *((void *)v107 + 3);
          if (v127 >= v126 >> 1) {
            uint64_t v107 = sub_10006F744((double *)(v126 > 1), v127 + 1, 1, v107);
          }
          *((void *)v107 + 2) = v127 + 1;
          sub_100016FEC((uint64_t)v304, (uint64_t)&v107[16 * v127 + 4], &qword_1004CEA20);
          sub_10005302C((uint64_t)v304);
        }
      }
      unint64_t v128 = *((void *)v107 + 2);
      uint64_t v277 = v107;
      if (v128 >= 3)
      {
        swift_bridgeObjectRetain();
        CGRect v129 = v107 + 9;
        uint64_t v130 = _swiftEmptyArrayStorage;
        do
        {
          if (*((void *)v129 + 8))
          {
            simd_float4x4.position.getter();
            char v298 = v131;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v130 = sub_10006F868(0, *((void *)v130 + 2) + 1, 1, (uint64_t)v130);
            }
            unint64_t v133 = *((void *)v130 + 2);
            unint64_t v132 = *((void *)v130 + 3);
            if (v133 >= v132 >> 1) {
              uint64_t v130 = sub_10006F868((double *)(v132 > 1), v133 + 1, 1, (uint64_t)v130);
            }
            *((void *)v130 + 2) = v133 + 1;
            *(float32x4_t *)&v130[2 * v133 + 4] = v298;
          }
          v129 += 16;
          --v128;
        }
        while (v128);
        swift_bridgeObjectRelease();
        type metadata accessor for PlaneUtil();
        static PlaneUtil.findBestPlane(points:facing:)();
        swift_bridgeObjectRelease();
        sub_100016FEC((uint64_t)&v305, (uint64_t)v306, &qword_1004CEA28);
        if (v306[32])
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_35;
        }
        static simd_float4x4.make(position:normalizedForward:)();
        sceneKitToARKit(_:)();
        char v297 = v135;
        char v298 = v134;
        uint64_t v288 = v137;
        uint64_t v289 = v136;
        id v138 = objc_allocWithZone((Class)ARAnchor);
        id v139 = [v138 initWithTransform:*(double *)v298.i64, *(double *)&v297._countAndFlagsBits, *(double *)&v289._countAndFlagsBits, *(double *)&v288._countAndFlagsBits];
        type metadata accessor for WorldPlane();
        swift_allocObject();
        id v140 = v139;
        WorldPlane.init(anchor:type:uncertainty:confidenceMultiplier:)();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v308 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v308 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      a3 = v308;
      if ((unint64_t)v308 >> 62) {
        goto LABEL_171;
      }
      uint64_t v141 = *(void *)((v308 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v141) {
        goto LABEL_172;
      }
      goto LABEL_100;
    }
    uint64_t v144 = v313;
    uint64_t v145 = v313 + 64;
    uint64_t v146 = 1 << *(unsigned char *)(v313 + 32);
    if (v146 < 64) {
      uint64_t v147 = ~(-1 << v146);
    }
    else {
      uint64_t v147 = -1;
    }
    unint64_t v148 = v147 & *(void *)(v313 + 64);
    int64_t v149 = (unint64_t)(v146 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v150 = 0;
    if (v148)
    {
LABEL_112:
      unint64_t v151 = __clz(__rbit64(v148));
      v148 &= v148 - 1;
      unint64_t v152 = v151 | (v150 << 6);
      goto LABEL_131;
    }
    while (1)
    {
      int64_t v153 = v150 + 1;
      if (__OFADD__(v150, 1)) {
        goto LABEL_162;
      }
      if (v153 >= v149) {
        goto LABEL_137;
      }
      unint64_t v154 = *(void *)(v145 + 8 * v153);
      ++v150;
      if (!v154)
      {
        int64_t v150 = v153 + 1;
        if (v153 + 1 >= v149) {
          goto LABEL_137;
        }
        unint64_t v154 = *(void *)(v145 + 8 * v150);
        if (!v154)
        {
          int64_t v150 = v153 + 2;
          if (v153 + 2 >= v149) {
            goto LABEL_137;
          }
          unint64_t v154 = *(void *)(v145 + 8 * v150);
          if (!v154)
          {
            int64_t v150 = v153 + 3;
            if (v153 + 3 >= v149) {
              goto LABEL_137;
            }
            unint64_t v154 = *(void *)(v145 + 8 * v150);
            if (!v154)
            {
              int64_t v150 = v153 + 4;
              if (v153 + 4 >= v149) {
                goto LABEL_137;
              }
              unint64_t v154 = *(void *)(v145 + 8 * v150);
              if (!v154)
              {
                int64_t v155 = v153 + 5;
                if (v155 >= v149)
                {
LABEL_137:
                  swift_release();
                  uint64_t countAndFlagsBits = v289._countAndFlagsBits;
                  unint64_t v142 = v298.i64[0];
                  goto LABEL_142;
                }
                unint64_t v154 = *(void *)(v145 + 8 * v155);
                if (!v154)
                {
                  while (1)
                  {
                    int64_t v150 = v155 + 1;
                    if (__OFADD__(v155, 1)) {
                      goto LABEL_168;
                    }
                    if (v150 >= v149) {
                      goto LABEL_137;
                    }
                    unint64_t v154 = *(void *)(v145 + 8 * v150);
                    ++v155;
                    if (v154) {
                      goto LABEL_130;
                    }
                  }
                }
                int64_t v150 = v155;
              }
            }
          }
        }
      }
LABEL_130:
      unint64_t v148 = (v154 - 1) & v154;
      unint64_t v152 = __clz(__rbit64(v154)) + (v150 << 6);
LABEL_131:
      char v156 = *(unsigned char **)(*(void *)(v144 + 48) + 8 * v152);
      swift_retain();
      if (sub_1001863B4((unsigned char *)a3, v156, 0)) {
        break;
      }
      swift_release();
      if (v148) {
        goto LABEL_112;
      }
    }
    v157._uint64_t countAndFlagsBits = 0xD00000000000004ALL;
    v157._object = (void *)v287._countAndFlagsBits;
    Log.debug(_:isPrivate:)(v157, 0);
    if (*(void *)(v144 + 16))
    {
      swift_retain();
      swift_retain();
      unint64_t v158 = sub_1000E26A0((uint64_t)v156);
      uint64_t countAndFlagsBits = v289._countAndFlagsBits;
      unint64_t v142 = v298.i64[0];
      if (v160)
      {
        uint64_t v161 = *(void *)(*(void *)(v144 + 56) + 8 * v158);
        swift_release();
        char v162 = swift_isUniquelyReferenced_nonNull_native();
        v302[0]._uint64_t countAndFlagsBits = v144;
        sub_1000D61D4(v161, a3, v162);
        *(void *)&char v313 = v302[0]._countAndFlagsBits;
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_141;
      }
      swift_release();
    }
    else
    {
      swift_retain();
      uint64_t countAndFlagsBits = v289._countAndFlagsBits;
      unint64_t v142 = v298.i64[0];
    }
    sub_1000A8B7C(a3);
    swift_release();
LABEL_141:
    sub_1000A8B7C((uint64_t)v156);
    swift_release();
    swift_release();
    uint64_t v144 = v313;
LABEL_142:
    if (!*(void *)(v144 + 16)
      || (swift_bridgeObjectRetain(), sub_1000E26A0(a3), char v164 = v163, swift_bridgeObjectRelease(), (v164 & 1) == 0))
    {
      char v143 = swift_isUniquelyReferenced_nonNull_native();
      v302[0]._uint64_t countAndFlagsBits = v144;
      sub_1000D61D4(1, a3, v143);
      uint64_t v144 = v302[0]._countAndFlagsBits;
      *(void *)&char v313 = v302[0]._countAndFlagsBits;
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_102;
    }
    swift_retain();
    char v165 = swift_isUniquelyReferenced_nonNull_native();
    v302[0]._uint64_t countAndFlagsBits = v144;
    *(void *)&char v313 = 0x8000000000000000;
    uint64_t v166 = swift_retain();
    unint64_t v168 = sub_1000E26A0(v166);
    uint64_t v169 = *(void *)(v144 + 16);
    BOOL v170 = (v167 & 1) == 0;
    uint64_t v171 = v169 + v170;
    if (__OFADD__(v169, v170)) {
      goto LABEL_166;
    }
    char v172 = v167;
    if (*(void *)(v144 + 24) >= v171)
    {
      if (v165)
      {
        if ((v167 & 1) == 0) {
          break;
        }
      }
      else
      {
        sub_1000D9370();
        if ((v172 & 1) == 0) {
          break;
        }
      }
      goto LABEL_151;
    }
    sub_1000D3624(v171, v165);
    unint64_t v173 = sub_1000E26A0(a3);
    if ((v172 & 1) != (v174 & 1)) {
      goto LABEL_282;
    }
    unint64_t v168 = v173;
    if ((v172 & 1) == 0) {
      break;
    }
LABEL_151:
    uint64_t v144 = v302[0]._countAndFlagsBits;
    uint64_t v175 = *(void *)(v302[0]._countAndFlagsBits + 56);
    uint64_t v176 = *(void *)(v175 + 8 * v168);
    BOOL v177 = __OFADD__(v176, 1);
    uint64_t v178 = v176 + 1;
    if (v177) {
      goto LABEL_167;
    }
    *(void *)(v175 + 8 * v168) = v178;
    swift_release();
    *(void *)&char v313 = v144;
    swift_release_n();
LABEL_102:
    a3 = v288._countAndFlagsBits;
    if (v142 == countAndFlagsBits) {
      goto LABEL_155;
    }
  }
  __break(1u);
LABEL_155:
  swift_bridgeObjectRelease();
LABEL_173:
  uint64_t v179 = *(void *)(v144 + 64);
  v298.i64[0] = v144 + 64;
  uint64_t v180 = 1 << *(unsigned char *)(v144 + 32);
  uint64_t v181 = -1;
  if (v180 < 64) {
    uint64_t v181 = ~(-1 << v180);
  }
  unint64_t v182 = v181 & v179;
  int64_t v183 = (unint64_t)(v180 + 63) >> 6;
  swift_bridgeObjectRetain();
  NSAttributedStringKey v124 = 0;
  int64_t v184 = 0;
  v297._uint64_t countAndFlagsBits = v183;
  while (v182)
  {
    unint64_t v185 = __clz(__rbit64(v182));
    v182 &= v182 - 1;
    unint64_t v186 = v185 | (v184 << 6);
LABEL_194:
    uint64_t v190 = 8 * v186;
    a3 = *(void *)(*(void *)(v144 + 48) + v190);
    if (v124)
    {
      uint64_t v191 = *(void *)(*(void *)(v144 + 56) + v190);
      uint64_t v192 = *(void *)(v144 + 16);
      swift_retain();
      if (!v192) {
        goto LABEL_272;
      }
      uint64_t v193 = swift_retain();
      unint64_t v194 = sub_1000E26A0(v193);
      if ((v195 & 1) == 0)
      {
        swift_release();
LABEL_272:
        swift_release();
        __break(1u);
LABEL_273:
        swift_release();
LABEL_274:
        swift_release();
        __break(1u);
LABEL_275:
        __break(1u);
LABEL_276:
        __break(1u);
LABEL_277:
        __break(1u);
LABEL_278:
        __break(1u);
LABEL_279:
        swift_release();
LABEL_280:
        swift_release();
        __break(1u);
        goto LABEL_281;
      }
      uint64_t v196 = *(void *)(*(void *)(v144 + 56) + 8 * v194);
      swift_release();
      if (v196 < v191) {
        goto LABEL_205;
      }
      if (!*(void *)(v144 + 16)) {
        goto LABEL_274;
      }
      uint64_t v197 = swift_retain();
      unint64_t v198 = sub_1000E26A0(v197);
      if ((v199 & 1) == 0) {
        goto LABEL_273;
      }
      uint64_t v200 = *(void *)(*(void *)(v144 + 56) + 8 * v198);
      swift_release();
      if (v191 != v200)
      {
LABEL_177:
        swift_release();
        continue;
      }
      swift_retain();
      char v201 = sub_1001863B4((unsigned char *)a3, v124, 1);
      swift_release();
      if (v201 != 2)
      {
        if ((v201 & 1) == 0) {
          goto LABEL_177;
        }
LABEL_205:
        swift_release();
        NSAttributedStringKey v124 = (unsigned char *)a3;
        continue;
      }
      long long v202 = *(float (**)(uint64_t))(*(void *)a3 + 232);
      uint64_t v203 = swift_retain();
      float v204 = v202(v203);
      swift_release();
      long long v205 = *(float (**)(uint64_t))(*(void *)v124 + 232);
      uint64_t v206 = swift_retain();
      float v207 = v205(v206);
      swift_release();
      swift_release();
      if (v207 < v204) {
        NSAttributedStringKey v124 = (unsigned char *)a3;
      }
      int64_t v183 = v297._countAndFlagsBits;
    }
    else
    {
      swift_retain();
      NSAttributedStringKey v124 = (unsigned char *)a3;
    }
  }
  int64_t v187 = v184 + 1;
  if (__OFADD__(v184, 1)) {
    goto LABEL_266;
  }
  uint64_t v81 = v283;
  if (v187 >= v183) {
    goto LABEL_207;
  }
  unint64_t v188 = *(void *)(v298.i64[0] + 8 * v187);
  ++v184;
  if (v188) {
    goto LABEL_193;
  }
  int64_t v184 = v187 + 1;
  if (v187 + 1 >= v183) {
    goto LABEL_207;
  }
  unint64_t v188 = *(void *)(v298.i64[0] + 8 * v184);
  if (v188) {
    goto LABEL_193;
  }
  int64_t v184 = v187 + 2;
  if (v187 + 2 >= v183) {
    goto LABEL_207;
  }
  unint64_t v188 = *(void *)(v298.i64[0] + 8 * v184);
  if (v188)
  {
LABEL_193:
    unint64_t v182 = (v188 - 1) & v188;
    unint64_t v186 = __clz(__rbit64(v188)) + (v184 << 6);
    goto LABEL_194;
  }
  int64_t v189 = v187 + 3;
  if (v189 >= v183) {
    goto LABEL_207;
  }
  unint64_t v188 = *(void *)(v298.i64[0] + 8 * v189);
  if (v188)
  {
    int64_t v184 = v189;
    goto LABEL_193;
  }
  while (1)
  {
    int64_t v184 = v189 + 1;
    if (__OFADD__(v189, 1)) {
      goto LABEL_267;
    }
    if (v184 >= v183) {
      break;
    }
    unint64_t v188 = *(void *)(v298.i64[0] + 8 * v184);
    ++v189;
    if (v188) {
      goto LABEL_193;
    }
  }
LABEL_207:
  swift_release();
  if (v124)
  {
    v298.i64[0] = qword_1004F81F0;
    v297._uint64_t countAndFlagsBits = qword_1004F81F8;
    v302[0]._uint64_t countAndFlagsBits = 0;
    v302[0]._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(86);
    v208._uint64_t countAndFlagsBits = 0xD000000000000034;
    v208._object = (void *)0x80000001004298E0;
    String.append(_:)(v208);
    int v209 = *(uint64_t (**)(uint64_t))(*(void *)v124 + 248);
    uint64_t v210 = swift_retain();
    char v211 = v209(v210);
    swift_release();
    unint64_t v212 = 0xE500000000000000;
    uint64_t v213 = 0x74694B7261;
    switch(v211)
    {
      case 1:
        unint64_t v212 = 0xE800000000000000;
        uint64_t v213 = 0x6465727265666E69;
        break;
      case 2:
        unint64_t v212 = 0xE800000000000000;
        uint64_t v213 = 0x6B6361626C6C6166;
        break;
      case 3:
        uint64_t v213 = 0x6C61636F6CLL;
        break;
      case 4:
        unint64_t v212 = 0xE800000000000000;
        uint64_t v213 = 0x73756F6976657270;
        break;
      case 5:
        uint64_t v213 = 0x6863746170;
        break;
      case 6:
        unint64_t v212 = 0xEA00000000006874;
        uint64_t v213 = 0x706544656C707061;
        break;
      default:
        break;
    }
    unint64_t v214 = v212;
    String.append(_:)(*(Swift::String *)&v213);
    swift_bridgeObjectRelease();
    v215._uint64_t countAndFlagsBits = 0x6823206874697720;
    v215._object = (void *)0xED0000203A737469;
    String.append(_:)(v215);
    if (!*(void *)(v144 + 16)) {
      goto LABEL_280;
    }
    uint64_t v216 = swift_retain();
    unint64_t v217 = sub_1000E26A0(v216);
    if ((v218 & 1) == 0) {
      goto LABEL_279;
    }
    uint64_t v219 = *(void *)(*(void *)(v144 + 56) + 8 * v217);
    swift_release();
    v299._uint64_t countAndFlagsBits = v219;
    v220._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v220);
    swift_bridgeObjectRelease();
    v221._uint64_t countAndFlagsBits = 0x6469646E6143202ELL;
    v221._object = (void *)0xEE00203A73657461;
    String.append(_:)(v221);
    uint64_t v222 = swift_bridgeObjectRetain();
    sub_100180960(v222);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v223._uint64_t countAndFlagsBits = Array.description.getter();
    String.append(_:)(v223);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v224._uint64_t countAndFlagsBits = 32;
    v224._object = (void *)0xE100000000000000;
    String.append(_:)(v224);
    Log.debug(_:isPrivate:)(v302[0], 0);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v101 = v284;
LABEL_220:
  a3 = *(void *)(v81 + 16);
  *(void *)&uint64_t v285 = v124;
  if (a3)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_270;
    }
    goto LABEL_222;
  }
LABEL_229:
  swift_bridgeObjectRelease();
  long long v235 = *(void *)(v81 + 16);
  if (!v235)
  {
    char v301 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_248;
  }
  long long v236 = 136;
  long long v237 = *(void *)(v81 + 16);
  do
  {
    if (!*(void *)(v81 + v236))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1004C2AD0 != -1) {
        swift_once();
      }
      v256._object = (void *)0x8000000100429800;
      v256._uint64_t countAndFlagsBits = 0xD000000000000051;
      Log.debug(_:isPrivate:)(v256, 0);
LABEL_261:
      swift_release();
      return 0;
    }
    v236 += 128;
    --v237;
  }
  while (v237);
  char v301 = (uint64_t)_swiftEmptyArrayStorage;
  v286._uint64_t countAndFlagsBits = (uint64_t)v300;
  uint64_t v284 = (double *)(v291 + 8);
  uint64_t v282 = (void (**)(double *, uint64_t))(v290 + 8);
  swift_bridgeObjectRetain();
  uint64_t v283 = v81;
  long long v238 = v81 + 72;
  id v101 = v292;
  do
  {
    long long v239 = *(void *)(v238 + 64);
    long long v240 = *(void *)(v238 - 8);
    char v298 = *(float32x4_t *)(v238 - 24);
    v241._uint64_t countAndFlagsBits = v240;
    v241._object = *(void **)v238;
    char v297 = v241;
    __int16 v296 = *(Swift::String *)(v238 + 8);
    char v291 = *(_OWORD *)(v238 + 24);
    uint64_t v242 = qword_1004C29D8;
    swift_retain();
    if (v242 != -1) {
      swift_once();
    }
    if (!qword_1004F7FE0) {
      goto LABEL_277;
    }
    long long v243 = *(void **)(qword_1004F7FE0 + 80);
    if (v243)
    {
      long long v244 = self;
      uint64_t v245 = v243;
      long long v246 = [v244 redColor];
      sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
      v289._uint64_t countAndFlagsBits = static OS_dispatch_queue.main.getter();
      long long v247 = swift_allocObject();
      *(void *)(v247 + 16) = v245;
      *(void *)(v247 + 24) = a1;
      *(void *)(v247 + 32) = v246;
      strcpy((char *)(v247 + 40), "No plane found");
      *(unsigned char *)(v247 + 55) = -18;
      v300[2] = sub_10005586C;
      v300[3] = v247;
      v299._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
      v299._object = (void *)1107296256;
      v300[0] = sub_100049AB4;
      v300[1] = &unk_100490C38;
      uint64_t v248 = _Block_copy(&v299);
      Swift::String v290 = v235;
      uint64_t v249 = v248;
      swift_bridgeObjectRetain();
      v288._uint64_t countAndFlagsBits = (uint64_t)v245;
      v287._uint64_t countAndFlagsBits = (uint64_t)v246;
      swift_release();
      static DispatchQoS.unspecified.getter();
      v299._uint64_t countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
      sub_100188CEC((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100012894((uint64_t *)&unk_1004C68E0);
      sub_10003FD50((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
      long long v250 = v294;
      uint64_t v251 = v295;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v252 = (void *)v289._countAndFlagsBits;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      uint64_t v253 = v249;
      long long v235 = v290;
      _Block_release(v253);

      (*(void (**)(char *, uint64_t))v284)(v250, v251);
      (*v282)(v101, v293);
    }
    if (!v239) {
      goto LABEL_278;
    }
    __int16 v308 = v281;
    char v309 = v280;
    char v310 = v279;
    __int16 v311 = v278;
    char v312 = 0;
    uint64_t v254 = *(void (**)(uint64_t))(*(void *)v239 + 232);
    char v255 = swift_retain();
    v254(v255);
    char v313 = 0u;
    __int16 v314 = 0u;
    char v315 = 0u;
    char v316 = 0u;
    char v317 = 1;
    type metadata accessor for WorldAnchor();
    swift_allocObject();
    WorldAnchor.init(transform:viewTransform:plane:confidence:shouldAutoUpdate:viewTarget:)();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v301 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v301 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    v238 += 128;
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_release();
    --v235;
  }
  while (v235);
  uint64_t v81 = v283;
  swift_bridgeObjectRelease();
LABEL_248:
  swift_bridgeObjectRelease();
  a3 = v301;
  if ((v301 & 0xC000000000000001) == 0)
  {
    if (*(void *)((v301 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      long long v257 = *(void *)(v301 + 32);
      long long v258 = swift_retain();
      goto LABEL_251;
    }
    __break(1u);
LABEL_270:
    uint64_t v81 = (uint64_t)sub_100030CA4(v81);
LABEL_222:
    unint64_t v225 = 0;
    char v226 = v101 + 4;
    char v227 = (float32x4_t *)(v81 + 144);
    uint64_t v228 = v285;
    while (1)
    {
      if ((void)v285)
      {
        if (v225 >= *((void *)v101 + 2)) {
          goto LABEL_265;
        }
        double v229 = v226[v225];
        int v230 = *(void (**)(Swift::String *__return_ptr, void (**)(double *, uint64_t), uint64_t, double))(*(void *)v228 + 312);
        swift_retain();
        v230(v302, v282, 7, v229);
        char v297 = v302[1];
        char v298 = (float32x4_t)v302[0];
        __int16 v296 = v302[2];
        uint64_t v288 = v302[4];
        uint64_t v289 = v302[3];
        uint64_t v286 = v302[6];
        uint64_t v287 = v302[5];
        uint64_t v231 = v303;
        swift_release();
      }
      else
      {
        uint64_t v231 = 0;
        char v297 = (Swift::String)0;
        char v298 = 0u;
        __int16 v296 = (Swift::String)0;
        uint64_t v288 = (Swift::String)0;
        uint64_t v289 = (Swift::String)0;
        uint64_t v286 = (Swift::String)0;
        uint64_t v287 = (Swift::String)0;
      }
      if (v225 >= *(void *)(v81 + 16)) {
        break;
      }
      ++v225;
      int v232 = v297;
      v227[-7] = v298;
      v227[-6] = (float32x4_t)v232;
      long long v233 = v289;
      v227[-5] = (float32x4_t)v296;
      v227[-4] = (float32x4_t)v233;
      long long v234 = v287;
      v227[-3] = (float32x4_t)v288;
      v227[-2] = (float32x4_t)v234;
      v227[-1] = (float32x4_t)v286;
      v227->i32[0] = v231;
      v227 += 8;
      swift_release();
      id v101 = v284;
      if (a3 == v225) {
        goto LABEL_229;
      }
    }
    __break(1u);
LABEL_265:
    __break(1u);
LABEL_266:
    __break(1u);
LABEL_267:
    __break(1u);
  }
  long long v258 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  long long v257 = v258;
LABEL_251:
  uint64_t v259 = (*(uint64_t (**)(uint64_t))(*(void *)v257 + 216))(v258);
  uint64_t v260 = swift_release();
  if (v259)
  {
    char v261 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v259 + 160))(v260);
    [v261 transform];
    char v297 = v263;
    char v298 = v262;
    char v295 = v265;
    __int16 v296 = v264;

    simd_float4x4.position.getter();
    char v298 = v266;
    simd_float4x4.position.getter();
    uint64_t v268 = vsubq_f32(v298, v267);
    char v269 = vmulq_f32(v268, v268);
    if (sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v269, 2), vaddq_f32(v269, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v269.f32, 1))).f32[0]) < 0.01)
    {
      if (qword_1004C29D8 != -1) {
        swift_once();
      }
      if (qword_1004F7FE0)
      {
        int v270 = *(void **)(qword_1004F7FE0 + 80);
        if (v270)
        {
          char v271 = self;
          int v272 = v270;
          char v273 = [v271 redColor];
          sub_100055570((uint64_t)a1, v273, 0xD000000000000012, 0x80000001004298C0);
        }
        swift_bridgeObjectRelease();
        if (qword_1004C2AD0 != -1) {
          swift_once();
        }
        v299._uint64_t countAndFlagsBits = 0;
        v299._object = (void *)0xE000000000000000;
        _StringGuts.grow(_:)(84);
        v274._object = (void *)0x8000000100429860;
        v274._uint64_t countAndFlagsBits = 0xD000000000000051;
        String.append(_:)(v274);
        Float.write<A>(to:)();
        v275._uint64_t countAndFlagsBits = 109;
        v275._object = (void *)0xE100000000000000;
        String.append(_:)(v275);
        Log.debug(_:isPrivate:)(v299, 0);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_261;
      }
LABEL_281:
      __break(1u);
LABEL_282:
      type metadata accessor for WorldPlane();
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      JUMPOUT(0x100186398);
    }
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  return a3;
}

uint64_t sub_1001863B4(unsigned char *a1, unsigned char *a2, char a3)
{
  if (qword_1004C2AD0 != -1) {
    swift_once();
  }
  uint64_t v5 = 0x74694B7261;
  _StringGuts.grow(_:)(84);
  v6._object = (void *)0x8000000100429A40;
  v6._uint64_t countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v6);
  unint64_t v7 = 0xE500000000000000;
  uint64_t v8 = 0x74694B7261;
  char v39 = a1[48];
  switch(v39)
  {
    case 1:
      unint64_t v7 = 0xE800000000000000;
      uint64_t v8 = 0x6465727265666E69;
      break;
    case 2:
      unint64_t v7 = 0xE800000000000000;
      uint64_t v8 = 0x6B6361626C6C6166;
      break;
    case 3:
      uint64_t v8 = 0x6C61636F6CLL;
      break;
    case 4:
      unint64_t v7 = 0xE800000000000000;
      uint64_t v8 = 0x73756F6976657270;
      break;
    case 5:
      uint64_t v8 = 0x6863746170;
      break;
    case 6:
      uint64_t v8 = 0x706544656C707061;
      unint64_t v7 = 0xEA00000000006874;
      break;
    default:
      break;
  }
  unint64_t v9 = v7;
  String.append(_:)(*(Swift::String *)&v8);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 0x797465736162202CLL;
  v10._object = (void *)0xEC000000203A6570;
  String.append(_:)(v10);
  Swift::String v38 = *(unsigned __int8 (**)(void))(*(void *)a1 + 248);
  unint64_t v11 = 0xE500000000000000;
  uint64_t v12 = v38();
  uint64_t v13 = 0x74694B7261;
  switch(v12)
  {
    case 1:
      unint64_t v11 = 0xE800000000000000;
      uint64_t v13 = 0x6465727265666E69;
      break;
    case 2:
      unint64_t v11 = 0xE800000000000000;
      uint64_t v13 = 0x6B6361626C6C6166;
      break;
    case 3:
      uint64_t v13 = 0x6C61636F6CLL;
      break;
    case 4:
      unint64_t v11 = 0xE800000000000000;
      uint64_t v13 = 0x73756F6976657270;
      break;
    case 5:
      uint64_t v13 = 0x6863746170;
      break;
    case 6:
      uint64_t v13 = 0x706544656C707061;
      unint64_t v11 = 0xEA00000000006874;
      break;
    default:
      break;
  }
  unint64_t v14 = v11;
  String.append(_:)(*(Swift::String *)&v13);
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v15._object = (void *)0x8000000100429A60;
  String.append(_:)(v15);
  char v16 = a2[48];
  unint64_t v17 = 0xE500000000000000;
  uint64_t v18 = 0x74694B7261;
  switch(v16)
  {
    case 1:
      unint64_t v17 = 0xE800000000000000;
      uint64_t v18 = 0x6465727265666E69;
      break;
    case 2:
      unint64_t v17 = 0xE800000000000000;
      uint64_t v18 = 0x6B6361626C6C6166;
      break;
    case 3:
      uint64_t v18 = 0x6C61636F6CLL;
      break;
    case 4:
      unint64_t v17 = 0xE800000000000000;
      uint64_t v18 = 0x73756F6976657270;
      break;
    case 5:
      uint64_t v18 = 0x6863746170;
      break;
    case 6:
      uint64_t v18 = 0x706544656C707061;
      unint64_t v17 = 0xEA00000000006874;
      break;
    default:
      break;
  }
  unint64_t v19 = v17;
  String.append(_:)(*(Swift::String *)&v18);
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = 0x797465736162202CLL;
  v20._object = (void *)0xEC000000203A6570;
  String.append(_:)(v20);
  CGFloat v21 = *(unsigned __int8 (**)(void))(*(void *)a2 + 248);
  uint64_t v22 = (void *)0xE500000000000000;
  switch(v21())
  {
    case 1u:
      uint64_t v22 = (void *)0xE800000000000000;
      uint64_t v5 = 0x6465727265666E69;
      break;
    case 2u:
      uint64_t v22 = (void *)0xE800000000000000;
      uint64_t v5 = 0x6B6361626C6C6166;
      break;
    case 3u:
      uint64_t v5 = 0x6C61636F6CLL;
      break;
    case 4u:
      uint64_t v22 = (void *)0xE800000000000000;
      uint64_t v5 = 0x73756F6976657270;
      break;
    case 5u:
      uint64_t v5 = 0x6863746170;
      break;
    case 6u:
      uint64_t v5 = 0x706544656C707061;
      uint64_t v22 = (void *)0xEA00000000006874;
      break;
    default:
      break;
  }
  v23._uint64_t countAndFlagsBits = v5;
  v23._object = v22;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24._uint64_t countAndFlagsBits = 2113321;
  v24._object = (void *)0xE300000000000000;
  String.append(_:)(v24);
  if (a3) {
    unint64_t v25 = 0xD000000000000027;
  }
  else {
    unint64_t v25 = 0xD000000000000022;
  }
  if (a3) {
    unint64_t v26 = 0x8000000100429B40;
  }
  else {
    unint64_t v26 = 0x8000000100429A80;
  }
  unint64_t v27 = v26;
  String.append(_:)(*(Swift::String *)&v25);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  Log.debug(_:isPrivate:)(v28, 0);
  uint64_t v29 = swift_bridgeObjectRelease();
  if (a3 & 1) != 0 || (uint64_t v29 = (*(uint64_t (**)(unsigned char *))(*(void *)a1 + 280))(a2), (v29))
  {
    char v30 = ((uint64_t (*)(uint64_t))v38)(v29);
    v21();
    unint64_t v31 = sub_100186AE8(v39, v30, v16);
    if (v31 == 2)
    {
      v32._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
      v32._object = (void *)0x8000000100429AE0;
      Log.debug(_:isPrivate:)(v32, 0);
      float v33 = (*(float (**)(void))(*(void *)a1 + 232))();
      return (*(float (**)(void))(*(void *)a2 + 232))() < v33;
    }
    else
    {
      unint64_t v34 = v31;
      v35._uint64_t countAndFlagsBits = 0xD000000000000025;
      v35._object = (void *)0x8000000100429B10;
      Log.debug(_:isPrivate:)(v35, 0);
    }
  }
  else
  {
    v36._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
    v36._object = (void *)0x8000000100429AB0;
    Log.debug(_:isPrivate:)(v36, 0);
    return 2;
  }
  return v34;
}

unint64_t sub_100186AE8(char a1, char a2, char a3)
{
  unint64_t v3 = 0x1010101010102;
  switch(a1)
  {
    case 1:
    case 2:
    case 4:
      while (2)
      {
        switch(a2)
        {
          case 0:
            return v3 >> (8 * a3);
          case 1:
          case 2:
          case 4:
            continue;
          case 3:
            goto LABEL_3;
          case 5:
            goto LABEL_4;
          case 6:
            goto LABEL_5;
          default:
            JUMPOUT(0);
        }
      }
    case 3:
LABEL_3:
      unint64_t v3 = 0x10102010100;
      break;
    case 5:
LABEL_4:
      unint64_t v3 = 0x20100010100;
      break;
    case 6:
LABEL_5:
      unint64_t v3 = 0x2010101010100;
      break;
    default:
      return v3 >> (8 * a3);
  }
  return v3 >> (8 * a3);
}

uint64_t sub_100186BB4(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  if ((a4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a3 + 16);
  if (v4 <= a4)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_7;
  }
  double v7 = *(double *)(a3 + 32 + 8 * a4);
  if (a4 + 1 == v4) {
    unint64_t v8 = 0;
  }
  else {
    unint64_t v8 = a4 + 1;
  }
  double v9 = *(double *)(a3 + 32 + 8 * v8);
  id v10 = [self yellowColor];
  id v11 = sub_1000551EC(v10, v7, v9, 1.0);
  id v12 = [a2 layer];
  [v12 addSublayer:v11];

  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a1 + 152) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a1 + 152) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    goto LABEL_10;
LABEL_7:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

uint64_t sub_100186CEC(uint64_t a1, void *a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v7 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v8 = v6 + 8 * v7;
  double v10 = *(double *)(v8 + 16);
  double v9 = *(double *)(v8 + 24);
  id v11 = [self yellowColor];
  id v12 = sub_1000551EC(v11, v9, v10, 1.0);
  id v13 = [a2 layer];
  [v13 addSublayer:v12];

  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a1 + 152) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a1 + 152) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
LABEL_7:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

uint64_t sub_100186E30@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 24);
  return swift_retain();
}

uint64_t sub_100186E40@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 208);
  return swift_retain();
}

uint64_t sub_100186E50@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 272);
  return swift_retain();
}

void sub_100186E60(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

uint64_t sub_100186EEC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  double v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

double *sub_100186F74(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000BBF44(0, v1, 0);
    uint64_t v3 = a1 + 40;
    do
    {
      convertToDisplayCoordinates(_:forKeyFrame:viewSize:)();
      double v5 = v4;
      double v7 = _swiftEmptyArrayStorage[2];
      double v6 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v7 >= *(void *)&v6 >> 1) {
        sub_1000BBF44((char *)(*(void *)&v6 > 1uLL), *(void *)&v7 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v7 + 1;
      _swiftEmptyArrayStorage[*(void *)&v7 + 4] = v5;
      v3 += 16;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

double *sub_100187074(double *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a2 - (void)result;
  if (__OFSUB__(a2, result))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!v5) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v8 = (uint64_t)result;
  uint64_t result = (double *)sub_1000BBF44(0, v5 & ~(v5 >> 63), 0);
  if (a2 >= v8 && (v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5 + 16);
    if (v9 <= v8) {
      uint64_t v9 = v8;
    }
    uint64_t v10 = v9 - v8;
    uint64_t v11 = a5 + 8 * v8 + 32;
    while ((v8 & 0x8000000000000000) == 0)
    {
      if (!v10) {
        goto LABEL_15;
      }
      CGPoint.init(_:)();
      ARFrame.viewToCamera(screenPoint:sceneView:orientation:)();
      uint64_t result = (double *)SIMD2<>.init(_:)();
      double v13 = v12;
      double v15 = _swiftEmptyArrayStorage[2];
      double v14 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v15 >= *(void *)&v14 >> 1) {
        uint64_t result = (double *)sub_1000BBF44((char *)(*(void *)&v14 > 1uLL), *(void *)&v15 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v15 + 1;
      _swiftEmptyArrayStorage[*(void *)&v15 + 4] = v13;
      --v10;
      v11 += 8;
      if (!--v5) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1001871D4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  double v4 = _swiftEmptyArrayStorage;
  if (!v3) {
    return (uint64_t)v4;
  }
  uint64_t v7 = result;
  uint64_t v18 = _swiftEmptyArrayStorage;
  uint64_t result = (uint64_t)sub_1000BC060(0, v3 & ~(v3 >> 63), 0);
  if (v3 < 0) {
    goto LABEL_18;
  }
  double v4 = v18;
  MeasureCore.shared.unsafeMutableAddressor();
  sub_100188140((uint64_t)v17);
  uint64_t result = sub_100016FEC((uint64_t)v17, (uint64_t)v20, &qword_1004CC350);
  if (a2 >= v7)
  {
    unint64_t v8 = *(void *)(a3 + 16);
    BOOL v9 = v8 >= v7;
    unint64_t v10 = v8 - v7;
    uint64_t v11 = a3;
    if (v9) {
      unint64_t v12 = v10;
    }
    else {
      unint64_t v12 = 0;
    }
    uint64_t v13 = v11 + 8 * v7 + 32;
    while (v12)
    {
      uint64_t v14 = qword_1004C2C78;
      swift_retain();
      if (v14 != -1) {
        swift_once();
      }
      MeasureCore.hitTest(screenPoint:frame:orientation:context:planeTypes:)();
      swift_release();
      uint64_t v18 = v4;
      unint64_t v16 = *((void *)v4 + 2);
      unint64_t v15 = *((void *)v4 + 3);
      if (v16 >= v15 >> 1)
      {
        sub_1000BC060((double *)(v15 > 1), v16 + 1, 1);
        double v4 = v18;
      }
      *((void *)v4 + 2) = v16 + 1;
      uint64_t result = sub_100016FEC((uint64_t)v19, (uint64_t)&v4[16 * v16 + 4], &qword_1004CEA20);
      --v12;
      v13 += 8;
      if (!--v3) {
        return (uint64_t)v4;
      }
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1001873A8(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v50 = a2;
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v48 = *(void *)(v5 - 8);
  uint64_t v49 = v5;
  __chkstk_darwin(v5);
  float32x2_t v47 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v46);
  float32x2_t v45 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  float v44 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  float32x2_t v51 = _swiftEmptyArrayStorage;
  sub_100012894(&qword_1004CDF58);
  swift_allocObject();
  swift_retain();
  v2[8] = CurrentValueSubject.init(_:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = sub_100012894((uint64_t *)&unk_1004CEA40);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v43 = v8;
  uint64_t v13 = qword_1004F8630;
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 272);
  swift_retain();
  v3[9] = v14(KeyPath, v13);
  uint64_t v15 = swift_getKeyPath();
  uint64_t v16 = sub_100012894(&qword_1004CA010);
  uint64_t v17 = qword_1004F8630;
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 272);
  swift_retain();
  v3[10] = v18(v15, v17);
  uint64_t v19 = swift_getKeyPath();
  uint64_t v20 = sub_100012894((uint64_t *)&unk_1004C4710);
  uint64_t v21 = qword_1004F8630;
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 272);
  swift_retain();
  v3[11] = v22(v19, v21);
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = sub_100012894((uint64_t *)&unk_1004C6A90);
  uint64_t v25 = qword_1004F8630;
  unint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 272);
  swift_retain();
  v3[12] = v26(v23, v25);
  uint64_t v27 = swift_getKeyPath();
  uint64_t v28 = sub_100012894((uint64_t *)&unk_1004CEA50);
  uint64_t v29 = qword_1004F8630;
  char v30 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 272);
  swift_retain();
  v3[13] = v30(v27, v29);
  uint64_t v31 = swift_getKeyPath();
  uint64_t v32 = sub_100012894(&qword_1004C6AD0);
  uint64_t v33 = qword_1004F8630;
  unint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 272);
  swift_retain();
  v3[14] = v34(v31, v33);
  v3[16] = 0;
  float32x2_t v51 = 0;
  unint64_t v52 = 0;
  sub_100012894(&qword_1004CEA60);
  swift_allocObject();
  v3[18] = Synchronized.init(wrappedValue:)();
  v3[19] = _swiftEmptyArrayStorage;
  float32x2_t v51 = _swiftEmptyArrayStorage;
  sub_100012894(&qword_1004CEA68);
  swift_allocObject();
  v3[20] = Synchronized.init(wrappedValue:)();
  v3[23] = 0x3FF0000000000000;
  v3[15] = a1;
  uint64_t v42 = sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  float32x2_t v51 = 0;
  unint64_t v52 = 0xE000000000000000;
  id v35 = a1;
  _StringGuts.grow(_:)(19);
  if (qword_1004C2A18 != -1) {
    swift_once();
  }
  uint64_t v36 = qword_1004F8070;
  unint64_t v37 = *(void *)algn_1004F8078;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  float32x2_t v51 = (void *)v36;
  unint64_t v52 = v37;
  v38._object = (void *)0x8000000100429C60;
  v38._uint64_t countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v38);
  uint64_t v39 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v44, v50, v43);
  float32x2_t v51 = _swiftEmptyArrayStorage;
  sub_100188CEC((unint64_t *)&qword_1004C6B50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100012894(&qword_1004CF220);
  sub_10003FD50((unint64_t *)&qword_1004C6B60, &qword_1004CF220);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v48 + 104))(v47, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v49);
  v3[17] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  if (qword_1004C2C70 != -1) {
    swift_once();
  }
  v3[21] = qword_1004CE760;
  v3[22] = 1;
  swift_release();
  float32x2_t v53 = &type metadata for Configurations.Default;
  float32x2_t v54 = &protocol witness table for Configurations.Default;
  uint64_t v40 = StateObserver.init(configuration:)();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v50, v39);
  return v40;
}

uint64_t sub_100187A0C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  unint64_t v52 = a1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  __chkstk_darwin(v4);
  uint64_t v49 = (uint64_t *)((char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v47 = *(void *)(v6 - 8);
  uint64_t v48 = v6;
  __chkstk_darwin(v6);
  uint64_t v42 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for DispatchQoS();
  uint64_t v43 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  float v41 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for DispatchTimeInterval();
  uint64_t v39 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v10 = (uint64_t *)((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = type metadata accessor for DispatchTime();
  uint64_t v37 = *(void *)(v38 - 8);
  uint64_t v11 = __chkstk_darwin(v38);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v16 = type metadata accessor for OS_dispatch_source.TimerFlags();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v3 + 32) = 0;
  sub_10001C99C(0, &qword_1004CE9D8);
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100188CEC(&qword_1004CE9E0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
  sub_100012894(&qword_1004CE9E8);
  sub_10003FD50((unint64_t *)&unk_1004CE9F0, &qword_1004CE9E8);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v20 = static OS_dispatch_source.makeTimerSource(flags:queue:)();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v21 = v36;
  *(void *)(v36 + 16) = v20;
  swift_getObjectType();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v37 + 8);
  uint64_t v23 = v38;
  v22(v13, v38);
  *uint64_t v10 = 0;
  uint64_t v24 = v39;
  uint64_t v25 = v40;
  (*(void (**)(void *, void, uint64_t))(v39 + 104))(v10, enum case for DispatchTimeInterval.nanoseconds(_:), v40);
  OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
  (*(void (**)(void *, uint64_t))(v24 + 8))(v10, v25);
  v22(v15, v23);
  swift_getObjectType();
  aBlock[4] = v44;
  void aBlock[5] = v45;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_100490AF8;
  unint64_t v26 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v27 = v41;
  static DispatchQoS.unspecified.getter();
  uint64_t v28 = v42;
  sub_100181230();
  OS_dispatch_source.setEventHandler(qos:flags:handler:)();
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v28, v48);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v46);
  swift_release();
  uint64_t v30 = v51;
  uint64_t v29 = v52;
  *(void *)(v21 + 24) = v52;
  uint64_t v32 = v49;
  uint64_t v31 = v50;
  *uint64_t v49 = v29;
  uint64_t v33 = v29;
  (*(void (**)(void *, void, uint64_t))(v31 + 104))(v32, enum case for DispatchPredicate.onQueue(_:), v30);
  id v34 = v33;
  LOBYTE(v33) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v31 + 8))(v32, v30);
  if (v33)
  {
    if ((*(unsigned char *)(v21 + 32) & 1) == 0)
    {
      *(unsigned char *)(v21 + 32) = 1;
      swift_getObjectType();
      OS_dispatch_source.resume()();
    }
    return v21;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100188098(uint64_t a1, uint64_t a2)
{
  return sub_100183298(a1, a2, v2);
}

uint64_t sub_1001880A0()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1001880E0()
{
  return sub_10018344C(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1001880E8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100188128()
{
  return sub_100183820(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100188130()
{
  return _swift_deallocObject(v0, 32, 7);
}

double sub_100188140(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 1;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  return result;
}

uint64_t sub_100188164()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001881B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v81 = a2;
  uint64_t v82 = a3;
  uint64_t v77 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  unint64_t v76 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v75);
  id v74 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  p_name = &PlaneSelectionStatsView.name;
  uint64_t v9 = *(void **)(a1 + 16);
  uint64_t v65 = v6;
  uint64_t v66 = v4;
  if (v9)
  {
    uint64_t v10 = 0;
    id v68 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v69 = (void (**)(char *, uint64_t))v93;
    float v67 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v71 = (uint64_t)v9 - 1;
    uint64_t v72 = (void *)(a1 + 32);
    uint64_t v11 = _swiftEmptyArrayStorage;
    unint64_t v70 = v9;
    while (1)
    {
      float32x2_t v12 = *(float32x2_t *)(a1 + 8 * v10 + 32);
      if (v71 == v10) {
        uint64_t v13 = 0;
      }
      else {
        uint64_t v13 = v10 + 1;
      }
      float32x2_t v14 = (float32x2_t)v72[v13];
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_10006F648(0, *((void *)v11 + 2) + 1, 1, (uint64_t)v11);
        uint64_t v11 = (double *)result;
      }
      unint64_t v17 = *((void *)v11 + 2);
      unint64_t v16 = *((void *)v11 + 3);
      if (v17 >= v16 >> 1)
      {
        uint64_t result = (uint64_t)sub_10006F648((double *)(v16 > 1), v17 + 1, 1, (uint64_t)v11);
        uint64_t v11 = (double *)result;
      }
      *((void *)v11 + 2) = v17 + 1;
      *(float32x2_t *)&v11[v17 + 4] = vsub_f32(vadd_f32(v12, v14), v12);
      if (p_name[315] != (char *)-1) {
        uint64_t result = swift_once();
      }
      if (!qword_1004F7FE0) {
        break;
      }
      uint64_t v18 = *(void **)(qword_1004F7FE0 + 80);
      if (v18)
      {
        sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
        id v19 = v18;
        uint64_t v79 = static OS_dispatch_queue.main.getter();
        uint64_t v20 = (void *)swift_allocObject();
        v20[2] = v78;
        v20[3] = v19;
        v20[4] = a1;
        v20[5] = v10;
        v93[2] = sub_100188C98;
        v93[3] = v20;
        v92[0] = _NSConcreteStackBlock;
        v92[1] = 1107296256;
        v93[0] = sub_100049AB4;
        v93[1] = &unk_100490D00;
        uint64_t v21 = _Block_copy(v92);
        *(void *)&long long v80 = v11 + 4;
        uint64_t v22 = a1;
        uint64_t v23 = v21;
        id v73 = v19;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_release();
        uint64_t v24 = v74;
        static DispatchQoS.unspecified.getter();
        v92[0] = _swiftEmptyArrayStorage;
        sub_100188CEC((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100012894((uint64_t *)&unk_1004C68E0);
        sub_10003FD50((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
        uint64_t v25 = v76;
        unint64_t v26 = v11;
        uint64_t v27 = v77;
        p_name = (char **)(&PlaneSelectionStatsView + 24);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v28 = (void *)v79;
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        uint64_t v29 = v23;
        a1 = v22;
        _Block_release(v29);

        uint64_t v30 = v27;
        uint64_t v11 = v26;
        (*v68)(v25, v30);
        uint64_t v31 = v24;
        uint64_t v9 = v70;
        (*v67)(v31, v75);
      }
      MeasureCore.shared.unsafeMutableAddressor();
      if (!*((void *)v11 + 2)) {
        goto LABEL_48;
      }
      sub_100188140((uint64_t)v92);
      sub_100016FEC((uint64_t)v92, (uint64_t)&v94, &qword_1004CC350);
      uint64_t v32 = qword_1004C2C78;
      swift_retain();
      if (v32 != -1) {
        swift_once();
      }
      MeasureCore.hitTest(screenPoint:frame:orientation:context:planeTypes:)();
      swift_release();
      sub_100016FEC((uint64_t)&v86, (uint64_t)&v90, &qword_1004CEA20);
      uint64_t v33 = v91;
      if (v91)
      {
LABEL_44:
        swift_bridgeObjectRelease();
        return v33;
      }
      if (v9 == (void *)++v10) {
        goto LABEL_22;
      }
    }
  }
  else
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
LABEL_22:
    static SIMD2<>.average(_:)();
    float32x2_t v35 = v34;
    long long v85 = _swiftEmptyArrayStorage;
    uint64_t v36 = swift_bridgeObjectRetain();
    sub_100122978(v36);
    uint64_t v37 = swift_bridgeObjectRetain();
    float32x2_t v64 = v11;
    sub_100122978(v37);
    int v38 = 0;
    uint64_t v69 = (void (**)(char *, uint64_t))(v66 + 8);
    unint64_t v70 = v84;
    id v68 = (void (**)(char *, uint64_t))(v65 + 8);
    float32x2_t v39 = (float32x2_t)vdup_n_s32(0x3E19999Au);
    uint64_t v40 = &qword_1004CEA20;
    LODWORD(v41) = 1.0;
    long long v80 = v41;
    while (1)
    {
      LODWORD(v67) = v38;
      uint64_t v43 = swift_allocObject();
      uint64_t v71 = v43;
      *(void *)(v43 + 16) = _swiftEmptyArrayStorage;
      uint64_t v44 = (double **)(v43 + 16);
      uint64_t v79 = *((void *)v85 + 2);
      if (v79) {
        break;
      }
LABEL_23:
      swift_release();
      LODWORD(v42) = 2.0;
      long long v80 = v42;
      int v38 = 1;
      if (v67)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    swift_beginAccess();
    unint64_t v45 = 0;
    while (v45 < *((void *)v85 + 2))
    {
      float32x2_t v46 = *(float32x2_t *)&v85[v45 + 4];
      uint64_t v47 = *v44;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v44 = v47;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v47 = sub_10006F648(0, *((void *)v47 + 2) + 1, 1, (uint64_t)v47);
        *uint64_t v44 = v47;
      }
      unint64_t v50 = *((void *)v47 + 2);
      unint64_t v49 = *((void *)v47 + 3);
      if (v50 >= v49 >> 1)
      {
        uint64_t v47 = sub_10006F648((double *)(v49 > 1), v50 + 1, 1, (uint64_t)v47);
        *uint64_t v44 = v47;
      }
      float32x2_t v51 = vadd_f32(v46, vmul_n_f32(vmul_f32(vsub_f32(v35, v46), v39), *(float *)&v80));
      *((void *)v47 + 2) = v50 + 1;
      v47[v50 + 4] = *(double *)&v51;
      if (p_name[315] != (char *)-1) {
        swift_once();
      }
      if (!qword_1004F7FE0) {
        goto LABEL_49;
      }
      unint64_t v52 = *(void **)(qword_1004F7FE0 + 80);
      if (v52 && *((void *)*v44 + 2) >= 2uLL)
      {
        sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
        id v53 = v52;
        id v73 = (id)static OS_dispatch_queue.main.getter();
        float32x2_t v54 = (void *)swift_allocObject();
        v54[2] = v78;
        v54[3] = v53;
        v54[4] = v71;
        v84[2] = sub_100188C0C;
        v84[3] = v54;
        v83[0] = _NSConcreteStackBlock;
        v83[1] = 1107296256;
        v84[0] = sub_100049AB4;
        v84[1] = &unk_100490CB0;
        float32x2_t v55 = _Block_copy(v83);
        swift_retain();
        uint64_t v72 = v53;
        swift_retain();
        swift_release();
        float v56 = v74;
        static DispatchQoS.unspecified.getter();
        v83[0] = _swiftEmptyArrayStorage;
        sub_100188CEC((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100012894((uint64_t *)&unk_1004C68E0);
        sub_10003FD50((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
        float32x2_t v57 = v76;
        float32x2_t v58 = v40;
        uint64_t v59 = v77;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v60 = v73;
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v55);

        uint64_t v61 = v59;
        uint64_t v40 = v58;
        (*v69)(v57, v61);
        float32x2_t v62 = v56;
        p_name = (char **)(&PlaneSelectionStatsView + 24);
        (*v68)(v62, v75);
      }
      MeasureCore.shared.unsafeMutableAddressor();
      if (!*((void *)*v44 + 2)) {
        goto LABEL_50;
      }
      sub_100188140((uint64_t)v83);
      sub_100016FEC((uint64_t)v83, (uint64_t)v92, &qword_1004CC350);
      uint64_t v63 = qword_1004C2C78;
      swift_retain();
      if (v63 != -1) {
        swift_once();
      }
      MeasureCore.hitTest(screenPoint:frame:orientation:context:planeTypes:)();
      swift_release();
      sub_100016FEC((uint64_t)&v87, (uint64_t)&v88, v40);
      uint64_t v33 = v89;
      if (v89)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_44;
      }
      if (v79 == ++v45) {
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    uint64_t result = swift_retain();
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100188BB8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100188BF0()
{
  return sub_100188C34((void (*)(void))&_swift_release, 40);
}

uint64_t sub_100188C0C()
{
  return sub_100186CEC(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100188C18()
{
  return sub_100188C34((void (*)(void))&_swift_bridgeObjectRelease, 48);
}

uint64_t sub_100188C34(void (*a1)(void), uint64_t a2)
{
  swift_release();

  a1(*(void *)(v2 + 32));

  return _swift_deallocObject(v2, a2, 7);
}

uint64_t sub_100188C98()
{
  return sub_100186BB4(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_100188CA4()
{
  sub_100182ADC(v0);
}

uint64_t sub_100188CB4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 24);
  return swift_retain();
}

uint64_t sub_100188CCC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 272);
  return swift_retain();
}

uint64_t sub_100188CDC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 208);
  return swift_retain();
}

uint64_t sub_100188CEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_100188E08(uint64_t a1)
{
  uint64_t v3 = self;
  [v3 begin];
  double v4 = 0.0;
  [v3 setAnimationDuration:0.0];
  uint64_t v5 = OBJC_IVAR____TtC7Measure13RectangleFill_rectangleFill;
  id v6 = [*(id *)(v1 + OBJC_IVAR____TtC7Measure13RectangleFill_rectangleFill) geometry];
  if (v6)
  {
    uint64_t v33 = v5;
    uint64_t v34 = v1;
    float32x2_t v35 = v3;
    uint64_t v36 = a1;
    uint64_t v32 = v6;
    id v7 = [v6 materials];
    sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
    unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v9) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v9)
      {
LABEL_4:
        if (v9 < 1)
        {
          __break(1u);
          JUMPOUT(0x100189214);
        }
        uint64_t v10 = 0;
        unint64_t v11 = v8 & 0xC000000000000001;
        float32x2_t v12 = &selRef_replaySensorDidFinishReplayingData;
        uint64_t v13 = a1 - 1;
        float32x2_t v14 = &selRef_replaySensorDidFinishReplayingData;
        uint64_t v37 = v9;
        do
        {
          if (v11) {
            id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v17 = *(id *)(v8 + 8 * v10 + 32);
          }
          uint64_t v18 = v17;
          id v19 = [v17 v12[50]];
          switch(v13)
          {
            case 4:
              if (qword_1004C31A8 != -1) {
                swift_once();
              }
              uint64_t v20 = (void *)qword_1004F89A0;
              uint64_t v21 = *(void **)algn_1004F89A8;
              if ((byte_1004F89B0 & 1) == 0) {
                goto LABEL_27;
              }
              char v22 = byte_1004F89C0;
              uint64_t v23 = qword_1004F89B8;
              char v24 = byte_1004D2600;
              (id)qword_1004F89A0;
              char v25 = v24;
              uint64_t v26 = v23;
              char v27 = v22;
              unint64_t v11 = v8 & 0xC000000000000001;
              uint64_t v9 = v37;
              goto LABEL_23;
            case 5:
              if (qword_1004C31A8 != -1) {
                swift_once();
              }
              uint64_t v20 = (void *)qword_1004F89A0;
              uint64_t v21 = *(void **)algn_1004F89A8;
              if (byte_1004F89B0)
              {
                char v28 = byte_1004F89C0;
                uint64_t v29 = qword_1004F89B8;
                char v30 = byte_1004D2600;
                (id)qword_1004F89A0;
                char v25 = v30;
                uint64_t v26 = v29;
                unint64_t v11 = v8 & 0xC000000000000001;
                uint64_t v9 = v37;
                char v27 = v28;
LABEL_23:
                id v16 = sub_100081B28(v25, v26, v27);
                sub_1000286C0(v20, v21, 1);
              }
              else
              {
LABEL_27:
                if (byte_1004D2600) {
                  id v15 = v21;
                }
                else {
                  id v15 = v20;
                }
                id v16 = v15;
              }
              float32x2_t v12 = &selRef_replaySensorDidFinishReplayingData;
              float32x2_t v14 = &selRef_replaySensorDidFinishReplayingData;
              break;
            case 8:
              if (qword_1004C2F58 != -1) {
                swift_once();
              }
              id v16 = (id)qword_1004F8748;
              break;
            default:
              id v16 = [self clearColor];
              break;
          }
          ++v10;
          [v19 v14[51]:v16];
        }
        while (v9 != v10);
      }
    }

    swift_bridgeObjectRelease();
    uint64_t v3 = v35;
    a1 = v36;
    uint64_t v5 = v33;
    uint64_t v1 = v34;
  }
  if ((unint64_t)(a1 - 1) <= 8) {
    double v4 = dbl_1004014C0[a1 - 1];
  }
  [*(id *)(v1 + v5) setOpacity:v4];

  return [v3 commit];
}

void sub_100189238(uint64_t a1)
{
  uint64_t v2 = v1;
  static SIMD3<>.average(_:)();
  unint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    goto LABEL_15;
  }
  sub_1000BBFC4(0, v4, 0);
  uint64_t v5 = a1 + 40;
  unint64_t v6 = v4;
  do
  {
    SCNVector3.init(_:)();
    int v8 = v7;
    int v10 = v9;
    int v12 = v11;
    unint64_t v14 = _swiftEmptyArrayStorage[2];
    unint64_t v13 = _swiftEmptyArrayStorage[3];
    if (v14 >= v13 >> 1) {
      sub_1000BBFC4((char *)(v13 > 1), v14 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v14 + 1;
    id v15 = (_DWORD *)_swiftEmptyArrayStorage + 3 * v14;
    v15[8] = v8;
    v15[9] = v10;
    v15[10] = v12;
    v5 += 16;
    --v6;
  }
  while (v6);
  if (v4 < 2) {
    goto LABEL_15;
  }
  if (v4 == 2)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  sub_100012894(&qword_1004C96B0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1003F8B80;
  SCNVector3.init(_:)();
  *(_DWORD *)(v16 + 32) = v17;
  *(_DWORD *)(v16 + 36) = v18;
  *(_DWORD *)(v16 + 40) = v19;
  SCNVector3.init(_:)();
  *(_DWORD *)(v16 + 44) = v20;
  *(_DWORD *)(v16 + 48) = v21;
  *(_DWORD *)(v16 + 52) = v22;
  sub_10001C99C(0, &qword_1004CC9B0);
  Class isa = SCNGeometrySource.init(vertices:)((Swift::OpaquePointer)_swiftEmptyArrayStorage).super.isa;
  Class v24 = SCNGeometrySource.init(normals:)((Swift::OpaquePointer)v16).super.isa;
  uint64_t v25 = sub_10018998C(byte_100485938, 24);
  unint64_t v27 = v26;
  uint64_t v46 = v25;
  Class v28 = Data._bridgeToObjectiveC()().super.isa;
  id v29 = [self geometryElementWithData:v28 primitiveType:0 primitiveCount:2 bytesPerIndex:4];

  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1003F94A0;
  *(void *)(v30 + 32) = isa;
  *(void *)(v30 + 40) = v24;
  specialized Array._endMutation()();
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1003F8B20;
  *(void *)(v31 + 32) = v29;
  specialized Array._endMutation()();
  uint64_t v32 = isa;
  uint64_t v33 = v24;
  id v34 = v29;
  Class v35 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_10001C99C(0, &qword_1004CC9B8);
  Class v36 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v37 = [self geometryWithSources:v35 elements:v36];

  id v38 = sub_1001B4A50(3);
  [v38 copy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
  if (swift_dynamicCast()) {
    id v39 = v48;
  }
  else {
    id v39 = [objc_allocWithZone((Class)SCNMaterial) init:v46];
  }
  [v37 setFirstMaterial:v39, v46];

  uint64_t v40 = OBJC_IVAR____TtC7Measure13RectangleFill_rectangleFill;
  [*(id *)&v2[OBJC_IVAR____TtC7Measure13RectangleFill_rectangleFill] removeFromParentNode];
  id v41 = [self nodeWithGeometry:v37];
  long long v42 = *(void **)&v2[v40];
  *(void *)&v2[v40] = v41;

  [*(id *)&v2[v40] setRenderingOrder:-1];
  id v43 = *(id *)&v2[v40];
  uint64_t v44 = (char *)[v2 state];
  double v45 = 0.0;
  if ((unint64_t)(v44 - 1) <= 8) {
    double v45 = dbl_1004014C0[(void)(v44 - 1)];
  }
  [v43 setOpacity:v45];

  [v2 addChildNode:*(void *)&v2[v40]];
  SCNVector3.init(_:)();
  [v2 setPosition:];

  sub_10004007C(v47, v27);
}

uint64_t type metadata accessor for RectangleFill()
{
  return self;
}

uint64_t sub_1001898C8(unsigned char *__src, unsigned char *a2)
{
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_10018998C(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_1001898C8(__src, &__src[a2]);
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  __DataStorage.init(bytes:length:)();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  type metadata accessor for Data.RangeReference();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t sub_100189A40()
{
  if (*(unsigned char *)(v0 + 216))
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v1 = (char *)(v0 + 256);
  if (*(unsigned char *)(v0 + 520))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  unint64_t v2 = (uint64_t *)(v0 + 532);
  float v3 = *(float *)(v0 + 212);
  float v4 = *(float *)(v0 + 516);
  float v5 = v4;
  if (v4 >= v3)
  {
    char v56 = *(unsigned char *)(v0 + 432);
    long long v57 = *(_OWORD *)(v0 + 448);
    long long v58 = *(_OWORD *)(v0 + 464);
    char v59 = *(unsigned char *)(v0 + 512);
    int v60 = *(_DWORD *)(v0 + 524);
    char v61 = *(unsigned char *)(v0 + 528);
    uint64_t v62 = *v2;
    char v63 = *(unsigned char *)(v0 + 540);
    uint64_t v64 = *(void *)(v0 + 544);
    char v65 = *(unsigned char *)(v0 + 552);
    int v66 = *(_DWORD *)(v0 + 556);
    char v67 = *(unsigned char *)(v0 + 560);
    int v68 = *(_DWORD *)(v0 + 564);
    char v69 = *(unsigned char *)(v0 + 568);
    int v70 = *(_DWORD *)(v0 + 572);
    char v71 = *(unsigned char *)(v0 + 576);
    char v72 = *(unsigned char *)(v0 + 577);
    char v73 = *(unsigned char *)(v0 + 608);
    int v74 = *(_DWORD *)(v0 + 612);
    char v75 = *(unsigned char *)(v0 + 616);
    long long v76 = *(_OWORD *)(v0 + 400);
    v105[0] = *(_OWORD *)(v0 + 384);
    v105[1] = v76;
    v105[2] = *(_OWORD *)(v0 + 416);
    LOBYTE(v105[3]) = v56;
    v105[4] = v57;
    v105[5] = v58;
    long long v77 = *(_OWORD *)(v0 + 496);
    v105[6] = *(_OWORD *)(v0 + 480);
    v105[7] = v77;
    LOBYTE(v105[8]) = v59;
    *((float *)&v105[8] + 1) = v4;
    BYTE8(v105[8]) = 0;
    HIDWORD(v105[8]) = v60;
    LOBYTE(v105[9]) = v61;
    *(void *)((char *)&v105[9] + 4) = v62;
    BYTE12(v105[9]) = v63;
    *(void *)&v105[10] = v64;
    BYTE8(v105[10]) = v65;
    HIDWORD(v105[10]) = v66;
    LOBYTE(v105[11]) = v67;
    DWORD1(v105[11]) = v68;
    BYTE8(v105[11]) = v69;
    HIDWORD(v105[11]) = v70;
    LOBYTE(v105[12]) = v71;
    BYTE1(v105[12]) = v72;
    v105[13] = *(_OWORD *)(v0 + 592);
    LOBYTE(v105[14]) = v73;
    DWORD1(v105[14]) = v74;
    BYTE8(v105[14]) = v75;
    long long v78 = *(_OWORD *)(v0 + 640);
    v105[15] = *(_OWORD *)(v0 + 624);
    v105[16] = v78;
    long long v79 = *(_OWORD *)(v0 + 672);
    v105[17] = *(_OWORD *)(v0 + 656);
    v105[18] = v79;
    memcpy(__dst, v105, sizeof(__dst));
    nullsub_1(__dst);
    sub_100016FEC(v0 + 704, (uint64_t)v107, &qword_1004CCE98);
    sub_1000DBFA4((uint64_t)v105);
    sub_10018AF2C((uint64_t)v107, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10014CE28);
    sub_100016FEC((uint64_t)__dst, v0 + 704, &qword_1004CCE98);
    char v80 = *(unsigned char *)(v0 + 128);
    long long v81 = *(_OWORD *)(v0 + 144);
    long long v82 = *(_OWORD *)(v0 + 160);
    char v83 = *(unsigned char *)(v0 + 208);
    int v84 = *(_DWORD *)(v0 + 220);
    char v85 = *(unsigned char *)(v0 + 224);
    uint64_t v86 = *(void *)(v0 + 228);
    char v87 = *(unsigned char *)(v0 + 236);
    uint64_t v88 = *(void *)(v0 + 240);
    char v89 = *(unsigned char *)(v0 + 248);
    int v90 = *(_DWORD *)(v0 + 252);
    char v91 = *v1;
    int v92 = *(_DWORD *)(v0 + 260);
    char v93 = *(unsigned char *)(v0 + 264);
    int v94 = *(_DWORD *)(v0 + 268);
    char v95 = *(unsigned char *)(v0 + 272);
    char v96 = *(unsigned char *)(v0 + 273);
    char v97 = *(unsigned char *)(v0 + 304);
    int v98 = *(_DWORD *)(v0 + 308);
    char v99 = *(unsigned char *)(v0 + 312);
    long long v100 = *(_OWORD *)(v0 + 96);
    __src[0] = *(_OWORD *)(v0 + 80);
    __src[1] = v100;
    __src[2] = *(_OWORD *)(v0 + 112);
    LOBYTE(__src[3]) = v80;
    __src[4] = v81;
    __src[5] = v82;
    long long v101 = *(_OWORD *)(v0 + 192);
    __src[6] = *(_OWORD *)(v0 + 176);
    __src[7] = v101;
    LOBYTE(__src[8]) = v83;
    *((float *)&__src[8] + 1) = v3;
    BYTE8(__src[8]) = 0;
    HIDWORD(__src[8]) = v84;
    LOBYTE(__src[9]) = v85;
    *(void *)((char *)&__src[9] + 4) = v86;
    BYTE12(__src[9]) = v87;
    *(void *)&__src[10] = v88;
    BYTE8(__src[10]) = v89;
    HIDWORD(__src[10]) = v90;
    LOBYTE(__src[11]) = v91;
    DWORD1(__src[11]) = v92;
    BYTE8(__src[11]) = v93;
    HIDWORD(__src[11]) = v94;
    LOBYTE(__src[12]) = v95;
    BYTE1(__src[12]) = v96;
    __src[13] = *(_OWORD *)(v0 + 288);
    LOBYTE(__src[14]) = v97;
    DWORD1(__src[14]) = v98;
    BYTE8(__src[14]) = v99;
    long long v102 = *(_OWORD *)(v0 + 336);
    __src[15] = *(_OWORD *)(v0 + 320);
    __src[16] = v102;
    long long v103 = *(_OWORD *)(v0 + 368);
    __src[17] = *(_OWORD *)(v0 + 352);
    __src[18] = v103;
    memcpy(v109, __src, sizeof(v109));
    nullsub_1(v109);
    sub_100016FEC(v0 + 1008, (uint64_t)v110, &qword_1004CCE98);
    sub_1000DBFA4((uint64_t)__src);
    sub_10018AF2C((uint64_t)v110, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10014CE28);
    uint64_t result = sub_100016FEC((uint64_t)v109, v0 + 1008, &qword_1004CCE98);
    float v55 = v4;
    float v5 = v3;
  }
  else
  {
    char v6 = *(unsigned char *)(v0 + 128);
    long long v7 = *(_OWORD *)(v0 + 144);
    long long v8 = *(_OWORD *)(v0 + 160);
    char v9 = *(unsigned char *)(v0 + 208);
    int v10 = *(_DWORD *)(v0 + 220);
    char v11 = *(unsigned char *)(v0 + 224);
    uint64_t v12 = *(void *)(v0 + 228);
    char v13 = *(unsigned char *)(v0 + 236);
    uint64_t v14 = *(void *)(v0 + 240);
    char v15 = *(unsigned char *)(v0 + 248);
    int v16 = *(_DWORD *)(v0 + 252);
    char v17 = *v1;
    int v18 = *(_DWORD *)(v0 + 260);
    char v19 = *(unsigned char *)(v0 + 264);
    int v20 = *(_DWORD *)(v0 + 268);
    char v21 = *(unsigned char *)(v0 + 272);
    char v22 = *(unsigned char *)(v0 + 273);
    char v23 = *(unsigned char *)(v0 + 304);
    int v24 = *(_DWORD *)(v0 + 308);
    char v25 = *(unsigned char *)(v0 + 312);
    long long v26 = *(_OWORD *)(v0 + 96);
    v105[0] = *(_OWORD *)(v0 + 80);
    v105[1] = v26;
    v105[2] = *(_OWORD *)(v0 + 112);
    LOBYTE(v105[3]) = v6;
    v105[4] = v7;
    v105[5] = v8;
    long long v27 = *(_OWORD *)(v0 + 192);
    v105[6] = *(_OWORD *)(v0 + 176);
    v105[7] = v27;
    LOBYTE(v105[8]) = v9;
    *((float *)&v105[8] + 1) = v3;
    BYTE8(v105[8]) = 0;
    HIDWORD(v105[8]) = v10;
    LOBYTE(v105[9]) = v11;
    *(void *)((char *)&v105[9] + 4) = v12;
    BYTE12(v105[9]) = v13;
    *(void *)&v105[10] = v14;
    BYTE8(v105[10]) = v15;
    HIDWORD(v105[10]) = v16;
    LOBYTE(v105[11]) = v17;
    DWORD1(v105[11]) = v18;
    BYTE8(v105[11]) = v19;
    HIDWORD(v105[11]) = v20;
    LOBYTE(v105[12]) = v21;
    BYTE1(v105[12]) = v22;
    v105[13] = *(_OWORD *)(v0 + 288);
    LOBYTE(v105[14]) = v23;
    DWORD1(v105[14]) = v24;
    BYTE8(v105[14]) = v25;
    long long v28 = *(_OWORD *)(v0 + 336);
    v105[15] = *(_OWORD *)(v0 + 320);
    v105[16] = v28;
    long long v29 = *(_OWORD *)(v0 + 368);
    v105[17] = *(_OWORD *)(v0 + 352);
    v105[18] = v29;
    memcpy(__dst, v105, sizeof(__dst));
    nullsub_1(__dst);
    sub_100016FEC(v0 + 704, (uint64_t)v107, &qword_1004CCE98);
    sub_1000DBFA4((uint64_t)v105);
    sub_10018AF2C((uint64_t)v107, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10014CE28);
    sub_100016FEC((uint64_t)__dst, v0 + 704, &qword_1004CCE98);
    char v30 = *(unsigned char *)(v0 + 432);
    long long v31 = *(_OWORD *)(v0 + 448);
    long long v32 = *(_OWORD *)(v0 + 464);
    char v33 = *(unsigned char *)(v0 + 512);
    int v34 = *(_DWORD *)(v0 + 524);
    char v35 = *(unsigned char *)(v0 + 528);
    uint64_t v36 = *v2;
    char v37 = *(unsigned char *)(v0 + 540);
    uint64_t v38 = *(void *)(v0 + 544);
    char v39 = *(unsigned char *)(v0 + 552);
    int v40 = *(_DWORD *)(v0 + 556);
    char v41 = *(unsigned char *)(v0 + 560);
    int v42 = *(_DWORD *)(v0 + 564);
    char v43 = *(unsigned char *)(v0 + 568);
    int v44 = *(_DWORD *)(v0 + 572);
    char v45 = *(unsigned char *)(v0 + 576);
    char v46 = *(unsigned char *)(v0 + 577);
    char v47 = *(unsigned char *)(v0 + 608);
    int v48 = *(_DWORD *)(v0 + 612);
    char v49 = *(unsigned char *)(v0 + 616);
    long long v50 = *(_OWORD *)(v0 + 400);
    __src[0] = *(_OWORD *)(v0 + 384);
    __src[1] = v50;
    __src[2] = *(_OWORD *)(v0 + 416);
    LOBYTE(__src[3]) = v30;
    __src[4] = v31;
    __src[5] = v32;
    long long v51 = *(_OWORD *)(v0 + 496);
    __src[6] = *(_OWORD *)(v0 + 480);
    __src[7] = v51;
    LOBYTE(__src[8]) = v33;
    *((float *)&__src[8] + 1) = v4;
    BYTE8(__src[8]) = 0;
    HIDWORD(__src[8]) = v34;
    LOBYTE(__src[9]) = v35;
    *(void *)((char *)&__src[9] + 4) = v36;
    BYTE12(__src[9]) = v37;
    *(void *)&__src[10] = v38;
    BYTE8(__src[10]) = v39;
    HIDWORD(__src[10]) = v40;
    LOBYTE(__src[11]) = v41;
    DWORD1(__src[11]) = v42;
    BYTE8(__src[11]) = v43;
    HIDWORD(__src[11]) = v44;
    LOBYTE(__src[12]) = v45;
    BYTE1(__src[12]) = v46;
    __src[13] = *(_OWORD *)(v0 + 592);
    LOBYTE(__src[14]) = v47;
    DWORD1(__src[14]) = v48;
    BYTE8(__src[14]) = v49;
    long long v52 = *(_OWORD *)(v0 + 640);
    __src[15] = *(_OWORD *)(v0 + 624);
    __src[16] = v52;
    long long v53 = *(_OWORD *)(v0 + 672);
    __src[17] = *(_OWORD *)(v0 + 656);
    __src[18] = v53;
    memcpy(v109, __src, sizeof(v109));
    nullsub_1(v109);
    sub_100016FEC(v0 + 1008, (uint64_t)v110, &qword_1004CCE98);
    sub_1000DBFA4((uint64_t)__src);
    sub_10018AF2C((uint64_t)v110, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10014CE28);
    uint64_t result = sub_100016FEC((uint64_t)v109, v0 + 1008, &qword_1004CCE98);
    float v55 = v3;
  }
  float v104 = v5 / v55;
  *(float *)(v0 + 1316) = v104;
  *(unsigned char *)(v0 + 1313) = v104 >= 0.7;
  return result;
}

void sub_100189FC4()
{
  uint64_t v1 = (float32x4_t *)v0[6].i64[1];
  if ((v0[17].i8[1] & 1) == 0 && !v0[36].i8[1])
  {
    if ((v0[8].i8[0] & 1) == 0)
    {
      if ((v0[27].i8[0] & 1) == 0)
      {
        float32x4_t v2 = vmulq_f32(v0[7], v0[26]);
        v2.i32[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v2, 2), vaddq_f32(v2, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v2.f32, 1))).u32[0];
LABEL_12:
        v0[82].i8[8] = v2.f32[0] >= 0.8;
        return;
      }
      goto LABEL_16;
    }
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!v1)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v3 = v1[1].u64[0];
  if (!v3)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if ((v0[27].i8[0] & 1) == 0)
  {
    if (v3 >= 2)
    {
      float32x4_t v4 = v1[2];
      float32x4_t v5 = v1[3];
      int32x4_t v6 = (int32x4_t)vmulq_f32(v4, v4);
      v6.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v6, 2), vadd_f32(*(float32x2_t *)v6.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v6.i8, 1))).u32[0];
      float32x2_t v7 = vrsqrte_f32((float32x2_t)v6.u32[0]);
      float32x2_t v8 = vmul_f32(v7, vrsqrts_f32((float32x2_t)v6.u32[0], vmul_f32(v7, v7)));
      float32x4_t v9 = vmulq_n_f32(v4, vmul_f32(v8, vrsqrts_f32((float32x2_t)v6.u32[0], vmul_f32(v8, v8))).f32[0]);
      float32x4_t v10 = v0[26];
      float32x4_t v11 = vmulq_f32(v9, v10);
      float32x4_t v2 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v11, 2), vaddq_f32(v11, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v11.f32, 1)));
      int32x4_t v12 = (int32x4_t)vmulq_f32(v5, v5);
      v12.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v12, 2), vadd_f32(*(float32x2_t *)v12.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v12.i8, 1))).u32[0];
      float32x2_t v13 = vrsqrte_f32((float32x2_t)v12.u32[0]);
      float32x2_t v14 = vmul_f32(v13, vrsqrts_f32((float32x2_t)v12.u32[0], vmul_f32(v13, v13)));
      float32x4_t v15 = vmulq_f32(vmulq_n_f32(v5, vmul_f32(v14, vrsqrts_f32((float32x2_t)v12.u32[0], vmul_f32(v14, v14))).f32[0]), v10);
      float32x4_t v16 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v15, 2), vaddq_f32(v15, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v15.f32, 1)));
      if (vmovn_s32(vcgeq_f32(v16, v2)).u8[0]) {
        v2.f32[0] = v16.f32[0];
      }
      goto LABEL_12;
    }
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_10018A120(uint64_t a1)
{
  __chkstk_darwin(a1);
  uint64_t v2 = v1;
  unint64_t v3 = 0;
  unint64_t v87 = 0;
  if ((*(unsigned char *)(v1 + 40) & 1) == 0)
  {
    unint64_t v3 = (float32x2_t *)[objc_allocWithZone((Class)UIView) initWithFrame:*(double *)(v1 + 8), *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32)];
    unint64_t v87 = (unint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)(v1 + 688);
    float32x4_t v5 = (char *)self;
    id v6 = [v5 redColor];
    sub_10005587C(v4, v6);

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_70;
    }
    goto LABEL_3;
  }
  while (2)
  {
    sub_100016FEC(v2 + 704, (uint64_t)v82, &qword_1004CCE98);
    sub_100016FEC((uint64_t)v82, (uint64_t)v83, &qword_1004CCE98);
    if (sub_10014CD80(v83) == 1
      || (sub_100016FEC(v2 + 1008, (uint64_t)v80, &qword_1004CCE98),
          sub_100016FEC((uint64_t)v80, (uint64_t)v81, &qword_1004CCE98),
          sub_10014CD80(v81) == 1))
    {

      *(void *)(v2 + 1328) = 0;
      *(unsigned char *)(v2 + 1336) = 1;
LABEL_78:
      swift_bridgeObjectRelease();
      return;
    }
    char v9 = *(unsigned char *)(v2 + 248);
    if (v86)
    {
      if (!*(unsigned char *)(v2 + 248))
      {
LABEL_12:
        float32x4_t v10 = (unint64_t *)(v2 + 696);
        float32x4_t v11 = (float32x2_t **)(v2 + 688);
        goto LABEL_17;
      }
    }
    else
    {
      if (v85 != *(double *)(v2 + 240)) {
        char v9 = 1;
      }
      if (v9) {
        goto LABEL_12;
      }
    }
    float32x4_t v10 = (unint64_t *)(v2 + 688);
    float32x4_t v11 = (float32x2_t **)(v2 + 696);
LABEL_17:
    unint64_t v12 = *v10;
    float32x2_t v13 = *v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    float32x2_t v14 = v84;
    if (!v84) {
      goto LABEL_81;
    }
    char v71 = v3;
    int64_t v15 = v84[1].i64[0];
    if (v15)
    {
      sub_10018AF2C((uint64_t)v82, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10018AC50);
      v88[0] = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_1000BBE34(0, v15, 0);
      uint64_t v17 = 0;
      int v18 = (float32x4_t *)v88[0];
      unint64_t v19 = *(void *)(v88[0] + 16);
      do
      {
        float32x4_t v20 = v14[v17 + 2];
        v88[0] = v18;
        unint64_t v21 = v18[1].u64[1];
        if (v19 >= v21 >> 1)
        {
          float32x4_t v77 = v20;
          __int32 v79 = v16;
          sub_1000BBE34((char *)(v21 > 1), v19 + 1, 1);
          float32x4_t v20 = v77;
          __int32 v16 = v79;
          int v18 = (float32x4_t *)v88[0];
        }
        ++v17;
        int32x4_t v22 = (int32x4_t)vmulq_f32(v20, v20);
        v22.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v22, 2), vadd_f32(*(float32x2_t *)v22.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v22.i8, 1))).u32[0];
        float32x2_t v23 = vrsqrte_f32((float32x2_t)v22.u32[0]);
        float32x2_t v24 = vmul_f32(v23, vrsqrts_f32((float32x2_t)v22.u32[0], vmul_f32(v23, v23)));
        float32x4_t v25 = vmulq_n_f32(v20, vmul_f32(v24, vrsqrts_f32((float32x2_t)v22.u32[0], vmul_f32(v24, v24))).f32[0]);
        v25.i32[3] = v16;
        v18[1].i64[0] = v19 + 1;
        v18[v19++ + 2] = v25;
      }
      while (v15 != v17);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100016FEC((uint64_t)v82, (uint64_t)v88, &qword_1004CCE98);
      sub_1000DBFA4((uint64_t)v88);
      int v18 = (float32x4_t *)_swiftEmptyArrayStorage;
    }
    unint64_t v3 = v13;
    if (!*(void *)(v12 + 16))
    {
      __break(1u);
      goto LABEL_72;
    }
    unint64_t v70 = v12;
    unint64_t v12 = (unint64_t)v13[2];
    if (!v12)
    {
      swift_bridgeObjectRelease();
      float32x4_t v5 = 0;
LABEL_55:
      swift_bridgeObjectRelease();
      sub_10018AF2C((uint64_t)v82, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10014CE28);
      *(void *)(v2 + 1328) = v5;
      *(unsigned char *)(v2 + 1336) = 0;
      unint64_t v12 = v87;
      unint64_t v3 = v71;
      if (!v71)
      {
        swift_bridgeObjectRelease();
        goto LABEL_78;
      }
      if (!v87)
      {
        swift_bridgeObjectRelease();
LABEL_77:

        goto LABEL_78;
      }
      if (!(v87 >> 62))
      {
        uint64_t v60 = *(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        char v61 = v71;
        if (!v60)
        {
LABEL_74:
          swift_bridgeObjectRelease();
          unint64_t v3 = v71;
          sub_100076128(v71);
          int v68 = v67;
          swift_bridgeObjectRelease();

          id v69 = v68;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*(void *)(v2 + 48) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v2 + 48) & 0xFFFFFFFFFFFFFF8)
                                                                                             + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_bridgeObjectRelease();

          goto LABEL_77;
        }
LABEL_59:
        if (v60 < 1)
        {
          __break(1u);
          break;
        }
        uint64_t v62 = 0;
        do
        {
          if ((v12 & 0xC000000000000001) != 0) {
            id v63 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v63 = *(id *)(v12 + 8 * v62 + 32);
          }
          uint64_t v64 = v63;
          ++v62;
          id v65 = [(float32x2_t *)v71 layer];
          [v65 addSublayer:v64];
        }
        while (v60 != v62);
        goto LABEL_74;
      }
LABEL_73:
      swift_bridgeObjectRetain_n();
      int v66 = v3;
      uint64_t v60 = _CocoaArrayWrapper.endIndex.getter();
      if (!v60) {
        goto LABEL_74;
      }
      goto LABEL_59;
    }
    if (v18[1].i64[0] < 2uLL)
    {
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    float32x4_t v5 = 0;
    long long v29 = *(_OWORD *)(v70 + 32);
    unint64_t v3 = v13 + 4;
    LODWORD(v30) = *(void *)(v70 + 40);
    uint64_t v72 = v29;
    while (1)
    {
      BOOL v31 = 0;
      long long v32 = *(_OWORD *)v3->f32;
      *(float32x2_t *)v34.f32 = vsub_f32(*v3, *(float32x2_t *)&v29);
      float v33 = COERCE_FLOAT(*(void *)&v3[1]);
      v34.f32[2] = v33 - v30;
      v34.i32[3] = 0;
      float32x4_t v35 = v18[2];
      float32x4_t v36 = vmulq_f32(v35, v34);
      float32x4_t v37 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v36, 2), vaddq_f32(v36, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v36.f32, 1)));
      *(float *)&long long v28 = v30 + vmulq_laneq_f32(v37, v35, 2).f32[0];
      float32x2_t v38 = vadd_f32(*(float32x2_t *)&v29, vmul_n_f32(*(float32x2_t *)v35.f32, v37.f32[0]));
      if (v37.f32[0] <= 0.0) {
        goto LABEL_36;
      }
      *(float32x2_t *)v35.f32 = vsub_f32(*(float32x2_t *)&v32, v38);
      v35.f32[2] = v33 - *(float *)&v28;
      float32x4_t v39 = vmulq_f32(v35, v35);
      float v40 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v39, 2), vaddq_f32(v39, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v39.f32, 1))).f32[0]);
      if (v40 <= 0.0) {
        goto LABEL_36;
      }
      if (v14[1].i64[0] < 2uLL) {
        break;
      }
      float32x4_t v41 = vmulq_f32(v14[3], v14[3]);
      BOOL v31 = v40 < sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v41, 2), vaddq_f32(v41, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v41.f32, 1))).f32[0]);
LABEL_36:
      float32x4_t v42 = v18[3];
      float32x4_t v43 = vmulq_f32(v34, v42);
      float32x4_t v44 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v43, 2), vaddq_f32(v43, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v43.f32, 1)));
      *(float *)&long long v26 = v30 + vmulq_laneq_f32(v44, v42, 2).f32[0];
      float32x2_t v45 = vadd_f32(*(float32x2_t *)&v29, vmul_n_f32(*(float32x2_t *)v42.f32, v44.f32[0]));
      if (v44.f32[0] <= 0.0) {
        goto LABEL_47;
      }
      *(float32x2_t *)v44.f32 = vsub_f32(*(float32x2_t *)&v32, v45);
      v44.f32[2] = v33 - *(float *)&v26;
      float32x4_t v46 = vmulq_f32(v44, v44);
      float v47 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v46, 2), vaddq_f32(v46, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v46.f32, 1))).f32[0]);
      if (v47 <= 0.0) {
        goto LABEL_47;
      }
      if (!v14[1].i64[0]) {
        goto LABEL_68;
      }
      float32x4_t v48 = vmulq_f32(v14[2], v14[2]);
      if (v47 >= sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v48, 2), vaddq_f32(v48, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v48.f32, 1))).f32[0]))BOOL v31 = 0; {
      if (!v31)
      }
        goto LABEL_47;
      if (__OFADD__(v5++, 1)) {
        goto LABEL_69;
      }
      if (v87)
      {
        long long v73 = v28;
        long long v75 = v26;
        uint64_t v76 = v27;
        long long v50 = self;
        id v51 = [v50 whiteColor];
        id v52 = [v50 clearColor];
        type metadata accessor for MeasureCamera();
        static ComputedCameraProperties.shared.getter();
        static ComputedCameraProperties.shared.getter();
        static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
        sub_100055404(v51, v52, v53, 4.0);

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        *(void *)&long long v29 = v72;
        long long v26 = v75;
        uint64_t v27 = v76;
        long long v28 = v73;
LABEL_47:
        if (v87)
        {
          id v54 = [self purpleColor];
          type metadata accessor for MeasureCamera();
          static ComputedCameraProperties.shared.getter();
          static ComputedCameraProperties.shared.getter();
          static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
          double v74 = v55;
          static ComputedCameraProperties.shared.getter();
          static ComputedCameraProperties.shared.getter();
          static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
          sub_1000551EC(v54, v74, v56, 1.0);

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          if (v87)
          {
            id v57 = [self magentaColor];
            static ComputedCameraProperties.shared.getter();
            static ComputedCameraProperties.shared.getter();
            static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
            double v78 = v58;
            static ComputedCameraProperties.shared.getter();
            static ComputedCameraProperties.shared.getter();
            static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
            sub_1000551EC(v57, v78, v59, 1.0);

            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          *(void *)&long long v29 = v72;
        }
      }
      v3 += 2;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_55;
      }
    }
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_3:
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t v7 = *(void *)(v2 + 696);
    id v8 = [v5 greenColor];
    sub_10005587C(v7, v8);

    if (v87)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      continue;
    }
    break;
  }

  __break(1u);
LABEL_81:
  sub_100016FEC((uint64_t)v82, (uint64_t)v88, &qword_1004CCE98);
  sub_1000DBFA4((uint64_t)v88);
  swift_bridgeObjectRelease();

  __break(1u);
}

uint64_t sub_10018AC50(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10018ACB8(uint64_t a1)
{
  sub_100016FEC(a1, (uint64_t)v3, &qword_1004CDF88);
  uint64_t result = sub_100016FEC((uint64_t)v3, (uint64_t)&v4, &qword_1004CDF88);
  if (!v4) {
    goto LABEL_6;
  }
  if (!*(void *)(v4 + 16))
  {
    __break(1u);
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (*(unsigned char *)(a1 + 224)) {
LABEL_7:
  }
    __break(1u);
  return result;
}

void *sub_10018AD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000BBE34(0, v3, 0);
  id v6 = (long long *)(a1 + 32);
  sub_100016FEC(a3, (uint64_t)v20, &qword_1004CDF88);
  while (1)
  {
    long long v19 = *v6;
    uint64_t result = (void *)sub_100016FEC((uint64_t)v20, (uint64_t)&v21, &qword_1004CDF88);
    if (!v21) {
      break;
    }
    if (!*(void *)&v21[2])
    {
      __break(1u);
      break;
    }
    if (*(unsigned char *)(a3 + 224)) {
      goto LABEL_12;
    }
    uint64_t v9 = *(void *)(a3 + 208);
    v10.i64[0] = v9;
    v10.i64[1] = *(void *)(a3 + 216);
    float32x2_t v11 = v21[4];
    float v12 = v21[5].f32[0];
    unint64_t v14 = _swiftEmptyArrayStorage[2];
    unint64_t v13 = _swiftEmptyArrayStorage[3];
    if (v14 >= v13 >> 1)
    {
      float32x4_t v18 = v10;
      sub_1000BBE34((char *)(v13 > 1), v14 + 1, 1);
      float32x4_t v10 = v18;
    }
    *(float32x2_t *)v8.f32 = vsub_f32(*(float32x2_t *)&v19, v11);
    v8.f32[2] = *((float *)&v19 + 2) - v12;
    float32x4_t v15 = vmulq_f32(v8, v10);
    float32x4_t v16 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v15, 2), vaddq_f32(v15, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v15.f32, 1)));
    float v17 = vmulq_laneq_f32(v16, v10, 2).f32[0];
    v10.i32[0] = v9;
    *(float32x2_t *)v16.f32 = vsub_f32(*(float32x2_t *)&v19, vmul_n_f32(*(float32x2_t *)v10.f32, v16.f32[0]));
    v16.f32[2] = *((float *)&v19 + 2) - v17;
    v16.i32[3] = 0;
    _swiftEmptyArrayStorage[2] = v14 + 1;
    *(float32x4_t *)&_swiftEmptyArrayStorage[2 * v14 + 4] = v16;
    ++v6;
    if (!--v3) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_10018AF2C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v7 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 224);
  long long v5 = *(_OWORD *)(a1 + 240);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    *(void *)(a1 + 288),
    *(void *)(a1 + 296));
  return a1;
}

uint64_t sub_10018AFB8(uint64_t a1)
{
  uint64_t v1 = __chkstk_darwin(a1);
  int64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = v1;
  uint64_t v8 = v7;
  memset(&v66[8], 0, 32);
  char v67 = 1;
  *(void *)&long long v68 = _swiftEmptyArrayStorage;
  *((void *)&v68 + 1) = _swiftEmptyArrayStorage;
  id v69 = _swiftEmptyArrayStorage;
  sub_10016B270((uint64_t)v103);
  sub_100016FEC((uint64_t)v103, (uint64_t)v73, &qword_1004CCE98);
  uint64_t result = sub_100016FEC((uint64_t)v103, (uint64_t)v74, &qword_1004CCE98);
  __int16 v75 = 0;
  uint64_t v77 = 0;
  uint64_t v76 = 0;
  char v78 = 1;
  long long v79 = 0u;
  long long v80 = 0u;
  long long v81 = 0u;
  memset(v82, 0, sizeof(v82));
  char v83 = 1;
  uint64_t v84 = 0;
  char v85 = 0;
  char v10 = *(unsigned char *)(v5 + 168);
  if (*(unsigned char *)(v6 + 168))
  {
    if (!*(unsigned char *)(v5 + 168)) {
      goto LABEL_3;
    }
LABEL_12:

    sub_10016B21C(v5);
    sub_10016B21C(v6);
    goto LABEL_13;
  }
  if (*(double *)(v6 + 160) != *(double *)(v5 + 160)) {
    char v10 = 1;
  }
  if ((v10 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_3:
  if (*(unsigned char *)(v6 + 128))
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v57 = v8;
  if (*(unsigned char *)(v5 + 128))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v12 = *(void *)(v6 + 112);
  uint64_t v11 = *(void *)(v6 + 120);
  float32x4_t v58 = *(float32x4_t *)(v5 + 112);
  sub_100016FEC(v6 + 228, (uint64_t)&v91, &qword_1004C74C8);
  uint64_t result = sub_100016FEC((uint64_t)&v91, (uint64_t)&v92, &qword_1004C74C8);
  if (v93)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  float v13 = v92;
  sub_100016FEC(v5 + 228, (uint64_t)&v90, &qword_1004C74C8);
  uint64_t result = sub_100016FEC((uint64_t)&v90, (uint64_t)&v94, &qword_1004C74C8);
  if (v95)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v14.i64[0] = v12;
  v14.i64[1] = v11;
  float32x4_t v15 = vsubq_f32(v14, v58);
  float32x4_t v16 = vmulq_f32(v15, v15);
  if ((float)(v13 + v94) < sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v16, 2), vaddq_f32(v16, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v16.f32, 1))).f32[0]))
  {

    sub_10016B21C(v5);
    sub_10016B21C(v6);
    uint64_t v8 = v57;
    goto LABEL_13;
  }
  float32x4_t v55 = v14;
  *(void *)int v66 = v3;
  if (v3)
  {
    id v17 = v3;
    [v17 frame];
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    [v17 frame];
    static CGSize.* infix(_:_:)();
    *(void *)&v66[8] = v19;
    *(void *)&v66[16] = v21;
    *(void *)&v66[24] = v22;
    *(void *)&v66[32] = v23;
    char v67 = 0;
  }
  sub_100016FEC(v6, (uint64_t)&v89, &qword_1004CDF88);
  memcpy(v70, (const void *)v6, sizeof(v70));
  memcpy(v71, (const void *)v5, sizeof(v71));
  uint64_t result = sub_100016FEC((uint64_t)&v89, (uint64_t)&v96, &qword_1004CDF88);
  uint64_t v24 = v96;
  if (!v96) {
    goto LABEL_30;
  }
  sub_100016FEC(v5, (uint64_t)&v88, &qword_1004CDF88);
  sub_1000DBFA4(v6);
  sub_1000DBFA4(v6);
  sub_10016D4F0((uint64_t)&v89);
  float32x4_t v25 = sub_10018AD90(v24, (uint64_t)v66, v6);
  sub_10016B21C(v6);
  sub_10008D0F0((uint64_t)&v89);
  *(void *)&long long v72 = v25;
  uint64_t result = sub_100016FEC((uint64_t)&v88, (uint64_t)&v97, &qword_1004CDF88);
  uint64_t v26 = v97;
  if (!v97)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  sub_100016FEC(v6 + 208, (uint64_t)v87, &qword_1004CCEA0);
  sub_1000DBFA4(v6);
  sub_10016D4F0((uint64_t)&v88);
  uint64_t v27 = sub_10018AD90(v26, (uint64_t)v66, v6);
  sub_10016B21C(v6);
  sub_10016B21C(v6);
  sub_10008D0F0((uint64_t)&v88);
  *((void *)&v72 + 1) = v27;
  uint64_t result = sub_100016FEC((uint64_t)v87, (uint64_t)&v98, &qword_1004CCEA0);
  if (v99)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  float32x4_t v56 = v98;
  sub_100016FEC(v5 + 208, (uint64_t)v86, &qword_1004CCEA0);
  uint64_t result = sub_100016FEC((uint64_t)v86, (uint64_t)&v100, &qword_1004CCEA0);
  uint64_t v8 = v57;
  if ((v101 & 1) == 0)
  {
    float32x4_t v28 = vmulq_f32(v56, v100);
    v28.f32[0] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v28, 2), vaddq_f32(v28, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v28.f32, 1))).f32[0];
    BYTE5(v76) = v28.f32[0] >= 0.8;
    if (v28.f32[0] >= 0.8)
    {
      sub_10018ACB8(v6);
      float32x4_t v30 = vsubq_f32(v55, v29);
      float32x4_t v31 = vmulq_f32(v30, v30);
      LOBYTE(v75) = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v31, 2), vaddq_f32(v31, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v31.f32, 1))).f32[0]) < 0.05;
      sub_100189A40();
      sub_100189FC4();

      char v32 = HIBYTE(v75);
      char v33 = v75;
      char v34 = BYTE4(v76);
      int v59 = (BYTE4(v76) & ~HIBYTE(v75) & v75);
      if (v59 == 1)
      {
        uint64_t v77 = 4;
        char v78 = 0;
      }
      long long v50 = *(_OWORD *)&v66[16];
      long long v51 = *(_OWORD *)v66;
      char v49 = v67;
      uint64_t v48 = *(void *)&v66[32];
      id v52 = v69;
      memcpy(__dst, v70, sizeof(__dst));
      memcpy(v61, v71, sizeof(v61));
      long long v39 = v68;
      long long v40 = v72;
      sub_100016FEC((uint64_t)v73, (uint64_t)v62, &qword_1004CCE98);
      sub_100016FEC((uint64_t)v74, (uint64_t)v63, &qword_1004CCE98);
      int v35 = v76;
      char v36 = BYTE5(v76);
      char v37 = BYTE6(v76);
      id v54 = (void *)v77;
      char __src = v78;
      long long v46 = v80;
      long long v47 = v79;
      long long v44 = *(_OWORD *)v82;
      long long v45 = v81;
      uint64_t v43 = *(void *)&v82[16];
      int v42 = *(_DWORD *)&v82[24];
      char v38 = v83;
      uint64_t v41 = v84;
      v64[0] = v51;
      v64[1] = v50;
      *(void *)&v64[2] = v48;
      BYTE8(v64[2]) = v49;
      v64[3] = v39;
      *(void *)&v64[4] = v52;
      memcpy(&v64[5], __dst, 0x130uLL);
      memcpy(&v64[24], v61, 0x130uLL);
      v64[43] = v40;
      sub_100016FEC((uint64_t)v62, (uint64_t)&v64[44], &qword_1004CCE98);
      sub_100016FEC((uint64_t)v63, (uint64_t)&v64[63], &qword_1004CCE98);
      LOBYTE(v64[82]) = v33;
      BYTE1(v64[82]) = v32;
      DWORD1(v64[82]) = v35;
      BYTE8(v64[82]) = v34;
      BYTE9(v64[82]) = v36;
      BYTE10(v64[82]) = v37;
      BYTE11(v64[82]) = v59;
      *(void *)&v64[83] = v54;
      BYTE8(v64[83]) = __src;
      v64[84] = v47;
      v64[85] = v46;
      v64[86] = v45;
      v64[87] = v44;
      *(void *)&v64[88] = v43;
      DWORD2(v64[88]) = v42;
      BYTE12(v64[88]) = v38;
      *(void *)&v64[89] = v41;
      BYTE8(v64[89]) = v33 & v32 & v34;
      memcpy(v65, v64, 0x599uLL);
      nullsub_1(v65);
      sub_100016FEC((uint64_t)v65, (uint64_t)v102, &qword_1004CDF80);
      uint64_t v8 = v57;
      return sub_100016FEC((uint64_t)v102, v8, &qword_1004CDF80);
    }

    sub_10016B21C(v6);
    sub_10016B21C(v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_13:
    sub_10018B79C(v65);
    sub_100016FEC((uint64_t)v65, (uint64_t)v102, &qword_1004CDF80);
    return sub_100016FEC((uint64_t)v102, v8, &qword_1004CDF80);
  }
LABEL_33:
  __break(1u);
  return result;
}

void sub_10018B79C(void *a1)
{
}

uint64_t destroy for RectangleSimilarity(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 704) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 1008) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RectangleSimilarity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  long long v8 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v8;
  long long v9 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v9;
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  LODWORD(v7) = *(_DWORD *)(a2 + 212);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(_DWORD *)(a1 + 212) = v7;
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(_DWORD *)(a1 + 220) = *(_DWORD *)(a2 + 220);
  *(unsigned char *)(a1 + 236) = *(unsigned char *)(a2 + 236);
  *(void *)(a1 + 228) = *(void *)(a2 + 228);
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  *(_DWORD *)(a1 + 252) = *(_DWORD *)(a2 + 252);
  LODWORD(v7) = *(_DWORD *)(a2 + 260);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(_DWORD *)(a1 + 260) = v7;
  LODWORD(v7) = *(_DWORD *)(a2 + 268);
  *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
  *(_DWORD *)(a1 + 268) = v7;
  *(unsigned char *)(a1 + 273) = *(unsigned char *)(a2 + 273);
  long long v10 = *(_OWORD *)(a2 + 288);
  *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = v10;
  LODWORD(v7) = *(_DWORD *)(a2 + 308);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(_DWORD *)(a1 + 308) = v7;
  long long v11 = *(_OWORD *)(a2 + 320);
  long long v12 = *(_OWORD *)(a2 + 336);
  long long v13 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v13;
  *(_OWORD *)(a1 + 320) = v11;
  *(_OWORD *)(a1 + 336) = v12;
  uint64_t v14 = *(void *)(a2 + 392);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = v14;
  uint64_t v15 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = v15;
  long long v16 = *(_OWORD *)(a2 + 416);
  *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = v16;
  long long v17 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v17;
  long long v18 = *(_OWORD *)(a2 + 480);
  long long v19 = *(_OWORD *)(a2 + 496);
  *(unsigned char *)(a1 + 512) = *(unsigned char *)(a2 + 512);
  *(_OWORD *)(a1 + 480) = v18;
  *(_OWORD *)(a1 + 496) = v19;
  int v20 = *(_DWORD *)(a2 + 516);
  *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
  *(_DWORD *)(a1 + 516) = v20;
  int v21 = *(_DWORD *)(a2 + 524);
  *(unsigned char *)(a1 + 528) = *(unsigned char *)(a2 + 528);
  *(_DWORD *)(a1 + 524) = v21;
  uint64_t v22 = *(void *)(a2 + 532);
  *(unsigned char *)(a1 + 540) = *(unsigned char *)(a2 + 540);
  *(void *)(a1 + 532) = v22;
  uint64_t v23 = *(void *)(a2 + 544);
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  *(void *)(a1 + 544) = v23;
  LODWORD(v23) = *(_DWORD *)(a2 + 556);
  *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
  *(_DWORD *)(a1 + 556) = v23;
  LODWORD(v23) = *(_DWORD *)(a2 + 564);
  *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
  *(_DWORD *)(a1 + 564) = v23;
  LODWORD(v23) = *(_DWORD *)(a2 + 572);
  *(unsigned char *)(a1 + 576) = *(unsigned char *)(a2 + 576);
  *(_DWORD *)(a1 + 572) = v23;
  *(unsigned char *)(a1 + 577) = *(unsigned char *)(a2 + 577);
  long long v24 = *(_OWORD *)(a2 + 592);
  *(unsigned char *)(a1 + 608) = *(unsigned char *)(a2 + 608);
  *(_OWORD *)(a1 + 592) = v24;
  LODWORD(v23) = *(_DWORD *)(a2 + 612);
  *(unsigned char *)(a1 + 616) = *(unsigned char *)(a2 + 616);
  *(_DWORD *)(a1 + 612) = v23;
  long long v25 = *(_OWORD *)(a2 + 624);
  long long v26 = *(_OWORD *)(a2 + 640);
  long long v27 = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 672) = v27;
  *(_OWORD *)(a1 + 624) = v25;
  *(_OWORD *)(a1 + 640) = v26;
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  __dst = (char *)(a1 + 704);
  uint64_t v28 = *(void *)(a2 + 704);
  id v29 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28 == 1)
  {
    memcpy(__dst, (const void *)(a2 + 704), 0x130uLL);
  }
  else
  {
    *(void *)(a1 + 704) = v28;
    *(void *)(a1 + 712) = *(void *)(a2 + 712);
    *(void *)(a1 + 720) = *(void *)(a2 + 720);
    *(void *)(a1 + 728) = *(void *)(a2 + 728);
    *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
    *(unsigned char *)(a1 + 752) = *(unsigned char *)(a2 + 752);
    long long v30 = *(_OWORD *)(a2 + 784);
    *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
    *(_OWORD *)(a1 + 784) = v30;
    long long v31 = *(_OWORD *)(a2 + 800);
    long long v32 = *(_OWORD *)(a2 + 816);
    *(unsigned char *)(a1 + 832) = *(unsigned char *)(a2 + 832);
    *(_OWORD *)(a1 + 800) = v31;
    *(_OWORD *)(a1 + 816) = v32;
    *(_DWORD *)(a1 + 836) = *(_DWORD *)(a2 + 836);
    *(unsigned char *)(a1 + 840) = *(unsigned char *)(a2 + 840);
    *(_DWORD *)(a1 + 844) = *(_DWORD *)(a2 + 844);
    *(unsigned char *)(a1 + 848) = *(unsigned char *)(a2 + 848);
    *(void *)(__dst + 148) = *(void *)(a2 + 852);
    *(unsigned char *)(a1 + 860) = *(unsigned char *)(a2 + 860);
    *(unsigned char *)(a1 + 872) = *(unsigned char *)(a2 + 872);
    *(void *)(a1 + 864) = *(void *)(a2 + 864);
    *(unsigned char *)(a1 + 880) = *(unsigned char *)(a2 + 880);
    *(_DWORD *)(a1 + 876) = *(_DWORD *)(a2 + 876);
    *(unsigned char *)(a1 + 888) = *(unsigned char *)(a2 + 888);
    *(_DWORD *)(a1 + 884) = *(_DWORD *)(a2 + 884);
    *(_DWORD *)(a1 + 892) = *(_DWORD *)(a2 + 892);
    *(_WORD *)(a1 + 896) = *(_WORD *)(a2 + 896);
    *(_OWORD *)(a1 + 912) = *(_OWORD *)(a2 + 912);
    *(unsigned char *)(a1 + 928) = *(unsigned char *)(a2 + 928);
    int v33 = *(_DWORD *)(a2 + 932);
    *(unsigned char *)(a1 + 936) = *(unsigned char *)(a2 + 936);
    *(_DWORD *)(a1 + 932) = v33;
    long long v34 = *(_OWORD *)(a2 + 944);
    long long v35 = *(_OWORD *)(a2 + 960);
    long long v36 = *(_OWORD *)(a2 + 992);
    *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
    *(_OWORD *)(a1 + 992) = v36;
    *(_OWORD *)(a1 + 944) = v34;
    *(_OWORD *)(a1 + 960) = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v37 = *(void *)(a2 + 1008);
  if (v37 == 1)
  {
    memcpy((void *)(a1 + 1008), (const void *)(a2 + 1008), 0x130uLL);
  }
  else
  {
    *(void *)(a1 + 1008) = v37;
    *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
    *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
    *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
    *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
    *(unsigned char *)(a1 + 1056) = *(unsigned char *)(a2 + 1056);
    *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
    *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
    *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
    long long v38 = *(_OWORD *)(a2 + 1120);
    *(unsigned char *)(a1 + 1136) = *(unsigned char *)(a2 + 1136);
    *(_OWORD *)(a1 + 1120) = v38;
    *(_DWORD *)(a1 + 1140) = *(_DWORD *)(a2 + 1140);
    *(unsigned char *)(a1 + 1144) = *(unsigned char *)(a2 + 1144);
    *(_DWORD *)(a1 + 1148) = *(_DWORD *)(a2 + 1148);
    *(unsigned char *)(a1 + 1152) = *(unsigned char *)(a2 + 1152);
    *(void *)(a1 + 1156) = *(void *)(a2 + 1156);
    *(unsigned char *)(a1 + 1164) = *(unsigned char *)(a2 + 1164);
    *(unsigned char *)(a1 + 1176) = *(unsigned char *)(a2 + 1176);
    *(void *)(a1 + 1168) = *(void *)(a2 + 1168);
    *(unsigned char *)(a1 + 1184) = *(unsigned char *)(a2 + 1184);
    *(_DWORD *)(a1 + 1180) = *(_DWORD *)(a2 + 1180);
    *(unsigned char *)(a1 + 1192) = *(unsigned char *)(a2 + 1192);
    *(_DWORD *)(a1 + 1188) = *(_DWORD *)(a2 + 1188);
    *(_DWORD *)(a1 + 1196) = *(_DWORD *)(a2 + 1196);
    *(_WORD *)(a1 + 1200) = *(_WORD *)(a2 + 1200);
    *(_OWORD *)(a1 + 1216) = *(_OWORD *)(a2 + 1216);
    *(unsigned char *)(a1 + 1232) = *(unsigned char *)(a2 + 1232);
    int v39 = *(_DWORD *)(a2 + 1236);
    *(unsigned char *)(a1 + 1240) = *(unsigned char *)(a2 + 1240);
    *(_DWORD *)(a1 + 1236) = v39;
    long long v40 = *(_OWORD *)(a2 + 1248);
    long long v41 = *(_OWORD *)(a2 + 1264);
    long long v42 = *(_OWORD *)(a2 + 1280);
    *(_OWORD *)(a1 + 1296) = *(_OWORD *)(a2 + 1296);
    *(_OWORD *)(a1 + 1280) = v42;
    *(_OWORD *)(a1 + 1264) = v41;
    *(_OWORD *)(a1 + 1248) = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_WORD *)(a1 + 1312) = *(_WORD *)(a2 + 1312);
  *(_DWORD *)(a1 + 1316) = *(_DWORD *)(a2 + 1316);
  *(_DWORD *)(a1 + 1320) = *(_DWORD *)(a2 + 1320);
  *(void *)(a1 + 1328) = *(void *)(a2 + 1328);
  *(unsigned char *)(a1 + 1336) = *(unsigned char *)(a2 + 1336);
  *(_OWORD *)(a1 + 1360) = *(_OWORD *)(a2 + 1360);
  *(_OWORD *)(a1 + 1376) = *(_OWORD *)(a2 + 1376);
  *(_OWORD *)(a1 + 1392) = *(_OWORD *)(a2 + 1392);
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  *(_OWORD *)(a1 + 1405) = *(_OWORD *)(a2 + 1405);
  *(void *)(a1 + 1424) = *(void *)(a2 + 1424);
  *(unsigned char *)(a1 + 1432) = *(unsigned char *)(a2 + 1432);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RectangleSimilarity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned char *)(a2 + 273);
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v7 = v6;

  long long v8 = *(_OWORD *)(a2 + 8);
  long long v9 = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v9;
  *(_OWORD *)(a1 + 8) = v8;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v10 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = v11;
  int v12 = *(_DWORD *)(a2 + 212);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(_DWORD *)(a1 + 212) = v12;
  int v13 = *(_DWORD *)(a2 + 220);
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(_DWORD *)(a1 + 220) = v13;
  uint64_t v14 = *(void *)(a2 + 228);
  *(unsigned char *)(a1 + 236) = *(unsigned char *)(a2 + 236);
  *(void *)(a1 + 228) = v14;
  uint64_t v15 = *(void *)(a2 + 240);
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(void *)(a1 + 240) = v15;
  LODWORD(v15) = *(_DWORD *)(a2 + 252);
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  *(_DWORD *)(a1 + 252) = v15;
  LODWORD(v15) = *(_DWORD *)(a2 + 260);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(_DWORD *)(a1 + 260) = v15;
  LODWORD(v15) = *(_DWORD *)(a2 + 268);
  *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
  *(_DWORD *)(a1 + 268) = v15;
  *(unsigned char *)(a1 + 273) = *(unsigned char *)(a2 + 273);
  long long v16 = *(_OWORD *)(a2 + 288);
  *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = v16;
  LODWORD(v15) = *(_DWORD *)(a2 + 308);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(_DWORD *)(a1 + 308) = v15;
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v17 = *(_OWORD *)(a2 + 416);
  *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = v17;
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  long long v18 = *(_OWORD *)(a2 + 496);
  *(unsigned char *)(a1 + 512) = *(unsigned char *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = v18;
  int v19 = *(_DWORD *)(a2 + 516);
  *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
  *(_DWORD *)(a1 + 516) = v19;
  int v20 = *(_DWORD *)(a2 + 524);
  *(unsigned char *)(a1 + 528) = *(unsigned char *)(a2 + 528);
  *(_DWORD *)(a1 + 524) = v20;
  uint64_t v21 = *(void *)(a2 + 532);
  *(unsigned char *)(a1 + 540) = *(unsigned char *)(a2 + 540);
  *(void *)(a1 + 532) = v21;
  uint64_t v22 = *(void *)(a2 + 544);
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  *(void *)(a1 + 544) = v22;
  LODWORD(v22) = *(_DWORD *)(a2 + 556);
  *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
  *(_DWORD *)(a1 + 556) = v22;
  LODWORD(v22) = *(_DWORD *)(a2 + 564);
  *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
  *(_DWORD *)(a1 + 564) = v22;
  LODWORD(v22) = *(_DWORD *)(a2 + 572);
  *(unsigned char *)(a1 + 576) = *(unsigned char *)(a2 + 576);
  *(_DWORD *)(a1 + 572) = v22;
  *(unsigned char *)(a1 + 577) = *(unsigned char *)(a2 + 577);
  long long v23 = *(_OWORD *)(a2 + 592);
  *(unsigned char *)(a1 + 608) = *(unsigned char *)(a2 + 608);
  *(_OWORD *)(a1 + 592) = v23;
  LODWORD(v22) = *(_DWORD *)(a2 + 612);
  *(unsigned char *)(a1 + 616) = *(unsigned char *)(a2 + 616);
  *(_DWORD *)(a1 + 612) = v22;
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(a2 + 704);
  if (*(void *)(a1 + 704) == 1)
  {
    if (v24 != 1)
    {
      *(void *)(a1 + 704) = v24;
      *(void *)(a1 + 712) = *(void *)(a2 + 712);
      *(void *)(a1 + 720) = *(void *)(a2 + 720);
      *(void *)(a1 + 728) = *(void *)(a2 + 728);
      long long v25 = *(_OWORD *)(a2 + 736);
      *(unsigned char *)(a1 + 752) = *(unsigned char *)(a2 + 752);
      *(_OWORD *)(a1 + 736) = v25;
      long long v26 = *(_OWORD *)(a2 + 768);
      long long v27 = *(_OWORD *)(a2 + 800);
      *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
      *(_OWORD *)(a1 + 800) = v27;
      *(_OWORD *)(a1 + 768) = v26;
      long long v28 = *(_OWORD *)(a2 + 816);
      *(unsigned char *)(a1 + 832) = *(unsigned char *)(a2 + 832);
      *(_OWORD *)(a1 + 816) = v28;
      int v29 = *(_DWORD *)(a2 + 836);
      *(unsigned char *)(a1 + 840) = *(unsigned char *)(a2 + 840);
      *(_DWORD *)(a1 + 836) = v29;
      int v30 = *(_DWORD *)(a2 + 844);
      *(unsigned char *)(a1 + 848) = *(unsigned char *)(a2 + 848);
      *(_DWORD *)(a1 + 844) = v30;
      uint64_t v31 = *(void *)(a2 + 852);
      *(unsigned char *)(a1 + 860) = *(unsigned char *)(a2 + 860);
      *(void *)(a1 + 852) = v31;
      uint64_t v32 = *(void *)(a2 + 864);
      *(unsigned char *)(a1 + 872) = *(unsigned char *)(a2 + 872);
      *(void *)(a1 + 864) = v32;
      LODWORD(v32) = *(_DWORD *)(a2 + 876);
      *(unsigned char *)(a1 + 880) = *(unsigned char *)(a2 + 880);
      *(_DWORD *)(a1 + 876) = v32;
      LODWORD(v32) = *(_DWORD *)(a2 + 884);
      *(unsigned char *)(a1 + 888) = *(unsigned char *)(a2 + 888);
      *(_DWORD *)(a1 + 884) = v32;
      LODWORD(v32) = *(_DWORD *)(a2 + 892);
      *(unsigned char *)(a1 + 896) = *(unsigned char *)(a2 + 896);
      *(_DWORD *)(a1 + 892) = v32;
      *(unsigned char *)(a1 + 897) = *(unsigned char *)(a2 + 897);
      long long v33 = *(_OWORD *)(a2 + 912);
      *(unsigned char *)(a1 + 928) = *(unsigned char *)(a2 + 928);
      *(_OWORD *)(a1 + 912) = v33;
      LODWORD(v32) = *(_DWORD *)(a2 + 932);
      *(unsigned char *)(a1 + 936) = *(unsigned char *)(a2 + 936);
      *(_DWORD *)(a1 + 932) = v32;
      long long v34 = *(_OWORD *)(a2 + 944);
      long long v35 = *(_OWORD *)(a2 + 960);
      long long v36 = *(_OWORD *)(a2 + 992);
      *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
      *(_OWORD *)(a1 + 992) = v36;
      *(_OWORD *)(a1 + 944) = v34;
      *(_OWORD *)(a1 + 960) = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v24 == 1)
  {
    sub_10018C874(a1 + 704);
LABEL_6:
    memcpy((void *)(a1 + 704), (const void *)(a2 + 704), 0x130uLL);
    goto LABEL_8;
  }
  *(void *)(a1 + 704) = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v37 = *(_OWORD *)(a2 + 736);
  *(unsigned char *)(a1 + 752) = *(unsigned char *)(a2 + 752);
  *(_OWORD *)(a1 + 736) = v37;
  *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  long long v38 = *(_OWORD *)(a2 + 816);
  *(unsigned char *)(a1 + 832) = *(unsigned char *)(a2 + 832);
  *(_OWORD *)(a1 + 816) = v38;
  int v39 = *(_DWORD *)(a2 + 836);
  *(unsigned char *)(a1 + 840) = *(unsigned char *)(a2 + 840);
  *(_DWORD *)(a1 + 836) = v39;
  int v40 = *(_DWORD *)(a2 + 844);
  *(unsigned char *)(a1 + 848) = *(unsigned char *)(a2 + 848);
  *(_DWORD *)(a1 + 844) = v40;
  uint64_t v41 = *(void *)(a2 + 852);
  *(unsigned char *)(a1 + 860) = *(unsigned char *)(a2 + 860);
  *(void *)(a1 + 852) = v41;
  uint64_t v42 = *(void *)(a2 + 864);
  *(unsigned char *)(a1 + 872) = *(unsigned char *)(a2 + 872);
  *(void *)(a1 + 864) = v42;
  LODWORD(v42) = *(_DWORD *)(a2 + 876);
  *(unsigned char *)(a1 + 880) = *(unsigned char *)(a2 + 880);
  *(_DWORD *)(a1 + 876) = v42;
  LODWORD(v42) = *(_DWORD *)(a2 + 884);
  *(unsigned char *)(a1 + 888) = *(unsigned char *)(a2 + 888);
  *(_DWORD *)(a1 + 884) = v42;
  LODWORD(v42) = *(_DWORD *)(a2 + 892);
  *(unsigned char *)(a1 + 896) = *(unsigned char *)(a2 + 896);
  *(_DWORD *)(a1 + 892) = v42;
  *(unsigned char *)(a1 + 897) = v4[624];
  long long v43 = *(_OWORD *)(a2 + 912);
  *(unsigned char *)(a1 + 928) = *(unsigned char *)(a2 + 928);
  *(_OWORD *)(a1 + 912) = v43;
  LODWORD(v42) = *(_DWORD *)(a2 + 932);
  *(unsigned char *)(a1 + 936) = *(unsigned char *)(a2 + 936);
  *(_DWORD *)(a1 + 932) = v42;
  *(void *)(a1 + 944) = *(void *)(a2 + 944);
  *(void *)(a1 + 952) = *(void *)(a2 + 952);
  *(void *)(a1 + 960) = *(void *)(a2 + 960);
  *(void *)(a1 + 968) = *(void *)(a2 + 968);
  *(void *)(a1 + 976) = *(void *)(a2 + 976);
  *(void *)(a1 + 984) = *(void *)(a2 + 984);
  *(void *)(a1 + 992) = *(void *)(a2 + 992);
  *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
LABEL_8:
  uint64_t v44 = *(void *)(a2 + 1008);
  if (*(void *)(a1 + 1008) != 1)
  {
    if (v44 != 1)
    {
      *(void *)(a1 + 1008) = v44;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      long long v57 = *(_OWORD *)(a2 + 1040);
      *(unsigned char *)(a1 + 1056) = *(unsigned char *)(a2 + 1056);
      *(_OWORD *)(a1 + 1040) = v57;
      *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
      *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
      *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
      long long v58 = *(_OWORD *)(a2 + 1120);
      *(unsigned char *)(a1 + 1136) = *(unsigned char *)(a2 + 1136);
      *(_OWORD *)(a1 + 1120) = v58;
      int v59 = *(_DWORD *)(a2 + 1140);
      *(unsigned char *)(a1 + 1144) = *(unsigned char *)(a2 + 1144);
      *(_DWORD *)(a1 + 1140) = v59;
      int v60 = *(_DWORD *)(a2 + 1148);
      *(unsigned char *)(a1 + 1152) = *(unsigned char *)(a2 + 1152);
      *(_DWORD *)(a1 + 1148) = v60;
      uint64_t v61 = *(void *)(a2 + 1156);
      *(unsigned char *)(a1 + 1164) = *(unsigned char *)(a2 + 1164);
      *(void *)(a1 + 1156) = v61;
      uint64_t v62 = *(void *)(a2 + 1168);
      *(unsigned char *)(a1 + 1176) = *(unsigned char *)(a2 + 1176);
      *(void *)(a1 + 1168) = v62;
      LODWORD(v62) = *(_DWORD *)(a2 + 1180);
      *(unsigned char *)(a1 + 1184) = *(unsigned char *)(a2 + 1184);
      *(_DWORD *)(a1 + 1180) = v62;
      LODWORD(v62) = *(_DWORD *)(a2 + 1188);
      *(unsigned char *)(a1 + 1192) = *(unsigned char *)(a2 + 1192);
      *(_DWORD *)(a1 + 1188) = v62;
      LODWORD(v62) = *(_DWORD *)(a2 + 1196);
      *(unsigned char *)(a1 + 1200) = *(unsigned char *)(a2 + 1200);
      *(_DWORD *)(a1 + 1196) = v62;
      *(unsigned char *)(a1 + 1201) = v4[928];
      long long v63 = *(_OWORD *)(a2 + 1216);
      *(unsigned char *)(a1 + 1232) = *(unsigned char *)(a2 + 1232);
      *(_OWORD *)(a1 + 1216) = v63;
      LODWORD(v62) = *(_DWORD *)(a2 + 1236);
      *(unsigned char *)(a1 + 1240) = *(unsigned char *)(a2 + 1240);
      *(_DWORD *)(a1 + 1236) = v62;
      *(void *)(a1 + 1248) = *(void *)(a2 + 1248);
      *(void *)(a1 + 1256) = *(void *)(a2 + 1256);
      *(void *)(a1 + 1264) = *(void *)(a2 + 1264);
      *(void *)(a1 + 1272) = *(void *)(a2 + 1272);
      *(void *)(a1 + 1280) = *(void *)(a2 + 1280);
      *(void *)(a1 + 1288) = *(void *)(a2 + 1288);
      *(void *)(a1 + 1296) = *(void *)(a2 + 1296);
      *(void *)(a1 + 1304) = *(void *)(a2 + 1304);
      goto LABEL_15;
    }
    sub_10018C874(a1 + 1008);
    goto LABEL_13;
  }
  if (v44 == 1)
  {
LABEL_13:
    memcpy((void *)(a1 + 1008), (const void *)(a2 + 1008), 0x130uLL);
    goto LABEL_15;
  }
  *(void *)(a1 + 1008) = v44;
  *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
  *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
  *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
  long long v45 = *(_OWORD *)(a2 + 1040);
  *(unsigned char *)(a1 + 1056) = *(unsigned char *)(a2 + 1056);
  *(_OWORD *)(a1 + 1040) = v45;
  long long v46 = *(_OWORD *)(a2 + 1072);
  long long v47 = *(_OWORD *)(a2 + 1088);
  *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
  *(_OWORD *)(a1 + 1088) = v47;
  *(_OWORD *)(a1 + 1072) = v46;
  long long v48 = *(_OWORD *)(a2 + 1120);
  *(unsigned char *)(a1 + 1136) = *(unsigned char *)(a2 + 1136);
  *(_OWORD *)(a1 + 1120) = v48;
  int v49 = *(_DWORD *)(a2 + 1140);
  *(unsigned char *)(a1 + 1144) = *(unsigned char *)(a2 + 1144);
  *(_DWORD *)(a1 + 1140) = v49;
  int v50 = *(_DWORD *)(a2 + 1148);
  *(unsigned char *)(a1 + 1152) = *(unsigned char *)(a2 + 1152);
  *(_DWORD *)(a1 + 1148) = v50;
  uint64_t v51 = *(void *)(a2 + 1156);
  *(unsigned char *)(a1 + 1164) = *(unsigned char *)(a2 + 1164);
  *(void *)(a1 + 1156) = v51;
  uint64_t v52 = *(void *)(a2 + 1168);
  *(unsigned char *)(a1 + 1176) = *(unsigned char *)(a2 + 1176);
  *(void *)(a1 + 1168) = v52;
  LODWORD(v52) = *(_DWORD *)(a2 + 1180);
  *(unsigned char *)(a1 + 1184) = *(unsigned char *)(a2 + 1184);
  *(_DWORD *)(a1 + 1180) = v52;
  LODWORD(v52) = *(_DWORD *)(a2 + 1188);
  *(unsigned char *)(a1 + 1192) = *(unsigned char *)(a2 + 1192);
  *(_DWORD *)(a1 + 1188) = v52;
  LODWORD(v52) = *(_DWORD *)(a2 + 1196);
  *(unsigned char *)(a1 + 1200) = *(unsigned char *)(a2 + 1200);
  *(_DWORD *)(a1 + 1196) = v52;
  *(unsigned char *)(a1 + 1201) = *(unsigned char *)(a2 + 1201);
  long long v53 = *(_OWORD *)(a2 + 1216);
  *(unsigned char *)(a1 + 1232) = *(unsigned char *)(a2 + 1232);
  *(_OWORD *)(a1 + 1216) = v53;
  LODWORD(v52) = *(_DWORD *)(a2 + 1236);
  *(unsigned char *)(a1 + 1240) = *(unsigned char *)(a2 + 1240);
  *(_DWORD *)(a1 + 1236) = v52;
  long long v54 = *(_OWORD *)(a2 + 1248);
  long long v55 = *(_OWORD *)(a2 + 1264);
  long long v56 = *(_OWORD *)(a2 + 1280);
  *(_OWORD *)(a1 + 1296) = *(_OWORD *)(a2 + 1296);
  *(_OWORD *)(a1 + 1280) = v56;
  *(_OWORD *)(a1 + 1264) = v55;
  *(_OWORD *)(a1 + 1248) = v54;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_15:
  *(unsigned char *)(a1 + 1312) = v4[1039];
  *(unsigned char *)(a1 + 1313) = v4[1040];
  *(_DWORD *)(a1 + 1316) = *(_DWORD *)(a2 + 1316);
  *(unsigned char *)(a1 + 1320) = v4[1047];
  *(unsigned char *)(a1 + 1321) = v4[1048];
  *(unsigned char *)(a1 + 1322) = v4[1049];
  *(unsigned char *)(a1 + 1323) = v4[1050];
  uint64_t v64 = *(void *)(a2 + 1328);
  *(unsigned char *)(a1 + 1336) = *(unsigned char *)(a2 + 1336);
  *(void *)(a1 + 1328) = v64;
  long long v65 = *(_OWORD *)(a2 + 1376);
  long long v66 = *(_OWORD *)(a2 + 1392);
  long long v67 = *(_OWORD *)(a2 + 1405);
  *(_OWORD *)(a1 + 1360) = *(_OWORD *)(a2 + 1360);
  *(_OWORD *)(a1 + 1405) = v67;
  *(_OWORD *)(a1 + 1392) = v66;
  *(_OWORD *)(a1 + 1376) = v65;
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  *(void *)(a1 + 1424) = *(void *)(a2 + 1424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 1432) = v4[1159];
  return a1;
}

uint64_t sub_10018C874(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for RectangleSimilarity(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x599uLL);
}

uint64_t assignWithTake for RectangleSimilarity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned char *)(a2 + 273);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  long long v6 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v6;
  long long v7 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v7;
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(_DWORD *)(a1 + 212) = *(_DWORD *)(a2 + 212);
  *(_DWORD *)(a1 + 220) = *(_DWORD *)(a2 + 220);
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(void *)(a1 + 228) = *(void *)(a2 + 228);
  *(unsigned char *)(a1 + 236) = *(unsigned char *)(a2 + 236);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  *(_DWORD *)(a1 + 252) = *(_DWORD *)(a2 + 252);
  int v8 = *(_DWORD *)(a2 + 260);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(_DWORD *)(a1 + 260) = v8;
  *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
  *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
  *(unsigned char *)(a1 + 273) = *(unsigned char *)(a2 + 273);
  *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_DWORD *)(a1 + 308) = *(_DWORD *)(a2 + 308);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  long long v9 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v9;
  long long v10 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v10;
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
  long long v11 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v11;
  long long v12 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v12;
  *(unsigned char *)(a1 + 512) = *(unsigned char *)(a2 + 512);
  *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
  *(_DWORD *)(a1 + 516) = *(_DWORD *)(a2 + 516);
  *(_DWORD *)(a1 + 524) = *(_DWORD *)(a2 + 524);
  *(unsigned char *)(a1 + 528) = *(unsigned char *)(a2 + 528);
  *(void *)(a1 + 532) = *(void *)(a2 + 532);
  *(unsigned char *)(a1 + 540) = *(unsigned char *)(a2 + 540);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
  *(_DWORD *)(a1 + 556) = *(_DWORD *)(a2 + 556);
  int v13 = *(_DWORD *)(a2 + 564);
  *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
  *(_DWORD *)(a1 + 564) = v13;
  *(unsigned char *)(a1 + 576) = *(unsigned char *)(a2 + 576);
  *(_DWORD *)(a1 + 572) = *(_DWORD *)(a2 + 572);
  *(unsigned char *)(a1 + 577) = *(unsigned char *)(a2 + 577);
  *(unsigned char *)(a1 + 608) = *(unsigned char *)(a2 + 608);
  *(_OWORD *)(a1 + 592) = *(_OWORD *)(a2 + 592);
  *(_DWORD *)(a1 + 612) = *(_DWORD *)(a2 + 612);
  *(unsigned char *)(a1 + 616) = *(unsigned char *)(a2 + 616);
  long long v14 = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 640) = v14;
  long long v15 = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 672) = v15;
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 704) == 1) {
    goto LABEL_4;
  }
  uint64_t v16 = *(void *)(a2 + 704);
  if (v16 == 1)
  {
    sub_10018C874(a1 + 704);
LABEL_4:
    memcpy((void *)(a1 + 704), (const void *)(a2 + 704), 0x130uLL);
    goto LABEL_6;
  }
  *(void *)(a1 + 704) = v16;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
  *(unsigned char *)(a1 + 752) = *(unsigned char *)(a2 + 752);
  long long v17 = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 784) = v17;
  long long v18 = *(_OWORD *)(a2 + 816);
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 816) = v18;
  *(unsigned char *)(a1 + 832) = *(unsigned char *)(a2 + 832);
  *(unsigned char *)(a1 + 840) = *(unsigned char *)(a2 + 840);
  *(_DWORD *)(a1 + 836) = *(_DWORD *)(a2 + 836);
  *(_DWORD *)(a1 + 844) = *(_DWORD *)(a2 + 844);
  *(unsigned char *)(a1 + 848) = *(unsigned char *)(a2 + 848);
  *(void *)(a1 + 852) = *(void *)(a2 + 852);
  *(unsigned char *)(a1 + 860) = *(unsigned char *)(a2 + 860);
  *(void *)(a1 + 864) = *(void *)(a2 + 864);
  *(unsigned char *)(a1 + 872) = *(unsigned char *)(a2 + 872);
  *(unsigned char *)(a1 + 880) = *(unsigned char *)(a2 + 880);
  *(_DWORD *)(a1 + 876) = *(_DWORD *)(a2 + 876);
  int v19 = *(_DWORD *)(a2 + 884);
  *(unsigned char *)(a1 + 888) = *(unsigned char *)(a2 + 888);
  *(_DWORD *)(a1 + 884) = v19;
  *(unsigned char *)(a1 + 896) = *(unsigned char *)(a2 + 896);
  *(_DWORD *)(a1 + 892) = *(_DWORD *)(a2 + 892);
  *(unsigned char *)(a1 + 897) = v4[624];
  *(unsigned char *)(a1 + 928) = *(unsigned char *)(a2 + 928);
  *(_OWORD *)(a1 + 912) = *(_OWORD *)(a2 + 912);
  *(_DWORD *)(a1 + 932) = *(_DWORD *)(a2 + 932);
  *(unsigned char *)(a1 + 936) = *(unsigned char *)(a2 + 936);
  long long v20 = *(_OWORD *)(a2 + 960);
  *(_OWORD *)(a1 + 944) = *(_OWORD *)(a2 + 944);
  *(_OWORD *)(a1 + 960) = v20;
  long long v21 = *(_OWORD *)(a2 + 992);
  *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
  *(_OWORD *)(a1 + 992) = v21;
LABEL_6:
  if (*(void *)(a1 + 1008) != 1)
  {
    uint64_t v22 = *(void *)(a2 + 1008);
    if (v22 != 1)
    {
      *(void *)(a1 + 1008) = v22;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
      *(unsigned char *)(a1 + 1056) = *(unsigned char *)(a2 + 1056);
      *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
      *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
      *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
      *(_OWORD *)(a1 + 1120) = *(_OWORD *)(a2 + 1120);
      *(unsigned char *)(a1 + 1136) = *(unsigned char *)(a2 + 1136);
      *(unsigned char *)(a1 + 1144) = *(unsigned char *)(a2 + 1144);
      *(_DWORD *)(a1 + 1140) = *(_DWORD *)(a2 + 1140);
      *(_DWORD *)(a1 + 1148) = *(_DWORD *)(a2 + 1148);
      *(unsigned char *)(a1 + 1152) = *(unsigned char *)(a2 + 1152);
      *(void *)(a1 + 1156) = *(void *)(a2 + 1156);
      *(unsigned char *)(a1 + 1164) = *(unsigned char *)(a2 + 1164);
      *(void *)(a1 + 1168) = *(void *)(a2 + 1168);
      *(unsigned char *)(a1 + 1176) = *(unsigned char *)(a2 + 1176);
      *(unsigned char *)(a1 + 1184) = *(unsigned char *)(a2 + 1184);
      *(_DWORD *)(a1 + 1180) = *(_DWORD *)(a2 + 1180);
      int v23 = *(_DWORD *)(a2 + 1188);
      *(unsigned char *)(a1 + 1192) = *(unsigned char *)(a2 + 1192);
      *(_DWORD *)(a1 + 1188) = v23;
      *(unsigned char *)(a1 + 1200) = *(unsigned char *)(a2 + 1200);
      *(_DWORD *)(a1 + 1196) = *(_DWORD *)(a2 + 1196);
      *(unsigned char *)(a1 + 1201) = v4[928];
      *(unsigned char *)(a1 + 1232) = *(unsigned char *)(a2 + 1232);
      *(_OWORD *)(a1 + 1216) = *(_OWORD *)(a2 + 1216);
      *(_DWORD *)(a1 + 1236) = *(_DWORD *)(a2 + 1236);
      *(unsigned char *)(a1 + 1240) = *(unsigned char *)(a2 + 1240);
      *(_OWORD *)(a1 + 1248) = *(_OWORD *)(a2 + 1248);
      *(_OWORD *)(a1 + 1264) = *(_OWORD *)(a2 + 1264);
      *(_OWORD *)(a1 + 1280) = *(_OWORD *)(a2 + 1280);
      *(_OWORD *)(a1 + 1296) = *(_OWORD *)(a2 + 1296);
      goto LABEL_11;
    }
    sub_10018C874(a1 + 1008);
  }
  memcpy((void *)(a1 + 1008), (const void *)(a2 + 1008), 0x130uLL);
LABEL_11:
  *(unsigned char *)(a1 + 1312) = v4[1039];
  *(unsigned char *)(a1 + 1313) = v4[1040];
  *(_DWORD *)(a1 + 1316) = *(_DWORD *)(a2 + 1316);
  *(unsigned char *)(a1 + 1320) = v4[1047];
  *(unsigned char *)(a1 + 1321) = v4[1048];
  *(unsigned char *)(a1 + 1322) = v4[1049];
  *(unsigned char *)(a1 + 1323) = v4[1050];
  *(void *)(a1 + 1328) = *(void *)(a2 + 1328);
  *(unsigned char *)(a1 + 1336) = *(unsigned char *)(a2 + 1336);
  *(_OWORD *)(a1 + 1360) = *(_OWORD *)(a2 + 1360);
  *(_OWORD *)(a1 + 1376) = *(_OWORD *)(a2 + 1376);
  *(_OWORD *)(a1 + 1392) = *(_OWORD *)(a2 + 1392);
  *(_OWORD *)(a1 + 1405) = *(_OWORD *)(a2 + 1405);
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  *(void *)(a1 + 1424) = *(void *)(a2 + 1424);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 1432) = v4[1159];
  return a1;
}

uint64_t getEnumTagSinglePayload for RectangleSimilarity(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 1433)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RectangleSimilarity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 1432) = 0;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 1433) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 1433) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RectangleSimilarity()
{
  return &type metadata for RectangleSimilarity;
}

void destroy for RectangleRenderComponents(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void **)(a1 + 40);
}

void *initializeWithCopy for RectangleRenderComponents(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

void *assignWithCopy for RectangleRenderComponents(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[5];
  uint64_t v5 = (void *)a1[5];
  a1[5] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for RectangleRenderComponents(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for RectangleRenderComponents(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RectangleRenderComponents(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RectangleRenderComponents()
{
  return &type metadata for RectangleRenderComponents;
}

void sub_10018D388(uint64_t a1)
{
  uint64_t v2 = v1;
  [*(id *)(v1 + 40) setState:a1];
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v63 = v4;
  uint64_t v5 = v4 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(v4 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v10 = 0;
  unint64_t v11 = a1 - 1;
  while (1)
  {
    if (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      if (v11 > 8) {
        goto LABEL_25;
      }
      goto LABEL_6;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
      goto LABEL_98;
    }
    if (v15 >= v9) {
      goto LABEL_28;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v9) {
        goto LABEL_28;
      }
      unint64_t v16 = *(void *)(v5 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v9) {
          goto LABEL_28;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v10);
        if (!v16)
        {
          int64_t v10 = v15 + 3;
          if (v15 + 3 >= v9) {
            goto LABEL_28;
          }
          unint64_t v16 = *(void *)(v5 + 8 * v10);
          if (!v16)
          {
            int64_t v10 = v15 + 4;
            if (v15 + 4 >= v9) {
              goto LABEL_28;
            }
            unint64_t v16 = *(void *)(v5 + 8 * v10);
            if (!v16) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v10 << 6);
    if (v11 > 8)
    {
LABEL_25:
      uint64_t v14 = 1;
      goto LABEL_26;
    }
LABEL_6:
    uint64_t v14 = qword_100401550[v11];
LABEL_26:
    uint64_t v18 = *(void *)(*(void *)(v4 + 56) + 8 * v13);
    uint64_t v19 = *(void *)(v18 + OBJC_IVAR____TtC7Measure11PointRender_state);
    *(void *)(v18 + OBJC_IVAR____TtC7Measure11PointRender_state) = v14;
    if (v14 != v19) {
      sub_100155B14(v14);
    }
  }
  int64_t v17 = v15 + 5;
  if (v17 < v9)
  {
    unint64_t v16 = *(void *)(v5 + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        int64_t v10 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          break;
        }
        if (v10 >= v9) {
          goto LABEL_28;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v10);
        ++v17;
        if (v16) {
          goto LABEL_24;
        }
      }
LABEL_98:
      __break(1u);
      goto LABEL_99;
    }
    int64_t v10 = v17;
    goto LABEL_24;
  }
LABEL_28:
  swift_release();
  sub_10008D0F0((uint64_t)&v63);
  uint64_t v60 = v2;
  uint64_t v20 = *(void *)(v2 + 8);
  uint64_t v62 = v20;
  uint64_t v21 = v20 + 64;
  uint64_t v22 = 1 << *(unsigned char *)(v20 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & *(void *)(v20 + 64);
  int64_t v25 = (unint64_t)(v22 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v26 = 0;
  if (!v24) {
    goto LABEL_35;
  }
LABEL_33:
  unint64_t v27 = __clz(__rbit64(v24));
  v24 &= v24 - 1;
  unint64_t v28 = v27 | (v26 << 6);
  if (v11 <= 8)
  {
LABEL_34:
    uint64_t v29 = qword_100401550[v11];
    goto LABEL_54;
  }
  while (1)
  {
    uint64_t v29 = 1;
LABEL_54:
    uint64_t v33 = *(void *)(*(void *)(v20 + 56) + 8 * v28);
    uint64_t v34 = OBJC_IVAR____TtC7Measure10LineRender_state;
    uint64_t v35 = *(void *)(v33 + OBJC_IVAR____TtC7Measure10LineRender_state);
    *(void *)(v33 + OBJC_IVAR____TtC7Measure10LineRender_state) = v29;
    if (v35 != v29)
    {
      uint64_t v36 = OBJC_IVAR____TtC7Measure10LineRender__needsRendering;
      if (*(unsigned char *)(v33 + OBJC_IVAR____TtC7Measure10LineRender__needsRendering) != 1)
      {
        long long v37 = (os_unfair_lock_s *)sub_1000EED80();
        os_unfair_lock_lock(v37);
        *(unsigned char *)(v33 + v36) = 1;
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + OBJC_IVAR____TtC7Measure10LineRender____lazy_storage___lock));
        uint64_t v29 = *(void *)(v33 + v34);
      }
    }
    *(void *)(v33 + v34) = a1;
    if (v29 == a1
      || (uint64_t v38 = OBJC_IVAR____TtC7Measure10LineRender__needsRendering,
          *(unsigned char *)(v33 + OBJC_IVAR____TtC7Measure10LineRender__needsRendering) == 1))
    {
      sub_1000F02B4();
      if (v24) {
        goto LABEL_33;
      }
    }
    else
    {
      int v39 = (os_unfair_lock_s *)sub_1000EED80();
      os_unfair_lock_lock(v39);
      *(unsigned char *)(v33 + v38) = 1;
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + OBJC_IVAR____TtC7Measure10LineRender____lazy_storage___lock));
      sub_1000F02B4();
      if (v24) {
        goto LABEL_33;
      }
    }
LABEL_35:
    int64_t v30 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      goto LABEL_96;
    }
    if (v30 >= v25)
    {
LABEL_61:
      swift_release();
      sub_10008D0F0((uint64_t)&v62);
      uint64_t v40 = *(void *)(v60 + 16);
      uint64_t v61 = v40;
      uint64_t v41 = v40 + 64;
      uint64_t v42 = 1 << *(unsigned char *)(v40 + 32);
      uint64_t v43 = -1;
      if (v42 < 64) {
        uint64_t v43 = ~(-1 << v42);
      }
      unint64_t v44 = v43 & *(void *)(v40 + 64);
      int64_t v45 = (unint64_t)(v42 + 63) >> 6;
      swift_bridgeObjectRetain_n();
      int64_t v46 = 0;
      if (!v44) {
        goto LABEL_68;
      }
LABEL_66:
      unint64_t v47 = __clz(__rbit64(v44));
      v44 &= v44 - 1;
      unint64_t v48 = v47 | (v46 << 6);
      if (v11 <= 8)
      {
LABEL_67:
        uint64_t v49 = qword_100401550[v11];
        goto LABEL_87;
      }
      while (1)
      {
        uint64_t v49 = 1;
LABEL_87:
        uint64_t v53 = *(void *)(*(void *)(v40 + 56) + 8 * v48);
        uint64_t v54 = OBJC_IVAR____TtC7Measure10LineRender_state;
        uint64_t v55 = *(void *)(v53 + OBJC_IVAR____TtC7Measure10LineRender_state);
        *(void *)(v53 + OBJC_IVAR____TtC7Measure10LineRender_state) = v49;
        if (v55 != v49)
        {
          uint64_t v56 = OBJC_IVAR____TtC7Measure10LineRender__needsRendering;
          if (*(unsigned char *)(v53 + OBJC_IVAR____TtC7Measure10LineRender__needsRendering) != 1)
          {
            long long v57 = (os_unfair_lock_s *)sub_1000EED80();
            os_unfair_lock_lock(v57);
            *(unsigned char *)(v53 + v56) = 1;
            os_unfair_lock_unlock(*(os_unfair_lock_t *)(v53 + OBJC_IVAR____TtC7Measure10LineRender____lazy_storage___lock));
            uint64_t v49 = *(void *)(v53 + v54);
          }
        }
        *(void *)(v53 + v54) = a1;
        if (v49 == a1
          || (uint64_t v58 = OBJC_IVAR____TtC7Measure10LineRender__needsRendering,
              *(unsigned char *)(v53 + OBJC_IVAR____TtC7Measure10LineRender__needsRendering) == 1))
        {
          sub_1000F02B4();
          if (v44) {
            goto LABEL_66;
          }
        }
        else
        {
          int v59 = (os_unfair_lock_s *)sub_1000EED80();
          os_unfair_lock_lock(v59);
          *(unsigned char *)(v53 + v58) = 1;
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v53 + OBJC_IVAR____TtC7Measure10LineRender____lazy_storage___lock));
          sub_1000F02B4();
          if (v44) {
            goto LABEL_66;
          }
        }
LABEL_68:
        int64_t v50 = v46 + 1;
        if (__OFADD__(v46, 1)) {
          goto LABEL_97;
        }
        if (v50 >= v45)
        {
LABEL_94:
          swift_release();
          sub_10008D0F0((uint64_t)&v61);
          return;
        }
        unint64_t v51 = *(void *)(v41 + 8 * v50);
        ++v46;
        if (!v51)
        {
          int64_t v46 = v50 + 1;
          if (v50 + 1 >= v45) {
            goto LABEL_94;
          }
          unint64_t v51 = *(void *)(v41 + 8 * v46);
          if (!v51)
          {
            int64_t v46 = v50 + 2;
            if (v50 + 2 >= v45) {
              goto LABEL_94;
            }
            unint64_t v51 = *(void *)(v41 + 8 * v46);
            if (!v51)
            {
              int64_t v46 = v50 + 3;
              if (v50 + 3 >= v45) {
                goto LABEL_94;
              }
              unint64_t v51 = *(void *)(v41 + 8 * v46);
              if (!v51)
              {
                int64_t v46 = v50 + 4;
                if (v50 + 4 >= v45) {
                  goto LABEL_94;
                }
                unint64_t v51 = *(void *)(v41 + 8 * v46);
                if (!v51)
                {
                  int64_t v52 = v50 + 5;
                  if (v52 >= v45) {
                    goto LABEL_94;
                  }
                  unint64_t v51 = *(void *)(v41 + 8 * v52);
                  if (!v51)
                  {
                    while (1)
                    {
                      int64_t v46 = v52 + 1;
                      if (__OFADD__(v52, 1)) {
                        goto LABEL_100;
                      }
                      if (v46 >= v45) {
                        goto LABEL_94;
                      }
                      unint64_t v51 = *(void *)(v41 + 8 * v46);
                      ++v52;
                      if (v51) {
                        goto LABEL_85;
                      }
                    }
                  }
                  int64_t v46 = v52;
                }
              }
            }
          }
        }
LABEL_85:
        unint64_t v44 = (v51 - 1) & v51;
        unint64_t v48 = __clz(__rbit64(v51)) + (v46 << 6);
        if (v11 <= 8) {
          goto LABEL_67;
        }
      }
    }
    unint64_t v31 = *(void *)(v21 + 8 * v30);
    ++v26;
    if (!v31)
    {
      int64_t v26 = v30 + 1;
      if (v30 + 1 >= v25) {
        goto LABEL_61;
      }
      unint64_t v31 = *(void *)(v21 + 8 * v26);
      if (!v31)
      {
        int64_t v26 = v30 + 2;
        if (v30 + 2 >= v25) {
          goto LABEL_61;
        }
        unint64_t v31 = *(void *)(v21 + 8 * v26);
        if (!v31)
        {
          int64_t v26 = v30 + 3;
          if (v30 + 3 >= v25) {
            goto LABEL_61;
          }
          unint64_t v31 = *(void *)(v21 + 8 * v26);
          if (!v31)
          {
            int64_t v26 = v30 + 4;
            if (v30 + 4 >= v25) {
              goto LABEL_61;
            }
            unint64_t v31 = *(void *)(v21 + 8 * v26);
            if (!v31) {
              break;
            }
          }
        }
      }
    }
LABEL_52:
    unint64_t v24 = (v31 - 1) & v31;
    unint64_t v28 = __clz(__rbit64(v31)) + (v26 << 6);
    if (v11 <= 8) {
      goto LABEL_34;
    }
  }
  int64_t v32 = v30 + 5;
  if (v32 >= v25) {
    goto LABEL_61;
  }
  unint64_t v31 = *(void *)(v21 + 8 * v32);
  if (v31)
  {
    int64_t v26 = v32;
    goto LABEL_52;
  }
  while (1)
  {
    int64_t v26 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v26 >= v25) {
      goto LABEL_61;
    }
    unint64_t v31 = *(void *)(v21 + 8 * v26);
    ++v32;
    if (v31) {
      goto LABEL_52;
    }
  }
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
}

uint64_t sub_10018D984(void *a1)
{
  uint64_t v3 = (void *)v1[5];
  [v3 worldTransform];
  long long v16 = v19;
  long long v17 = v18;
  long long v14 = v21;
  long long v15 = v20;
  [v3 removeFromParentNode];
  [a1 addChildNode:v3];
  long long v18 = v17;
  long long v19 = v16;
  long long v20 = v15;
  long long v21 = v14;
  [v3 setTransform:&v18];
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[4];
  *(void *)&long long v18 = v1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10016D4F0((uint64_t)&v18);
  swift_bridgeObjectRetain();
  id v7 = v3;
  id v8 = a1;
  sub_10018E03C(v6, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_10008D0F0((uint64_t)&v18);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10016D4F0((uint64_t)&v18);
  swift_bridgeObjectRetain();
  id v9 = v7;
  id v10 = v8;
  sub_10018E03C(v4, v10);
  swift_bridgeObjectRelease();

  sub_10008D0F0((uint64_t)&v18);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10016D4F0((uint64_t)&v18);
  swift_bridgeObjectRetain();
  id v11 = v9;
  id v12 = v10;
  sub_10018E03C(v5, v12);
  swift_bridgeObjectRelease();

  sub_10008D0F0((uint64_t)&v18);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_10018DB80()
{
  uint64_t v1 = v0;
  uint64_t v2 = (char *)v0[5];
  id v3 = [v2 parentNode];
  if (v3)
  {
    uint64_t v4 = v3;
    SCNNode.removeAllChildren()();
  }
  [*(id *)&v2[OBJC_IVAR____TtC7Measure13RectangleFill_rectangleFill] removeFromParentNode];
  [v2 removeFromParentNode];
  uint64_t v5 = v1[4];
  uint64_t v6 = v5 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(v5 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  id result = (id)swift_bridgeObjectRetain_n();
  int64_t v12 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_7;
    }
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
      goto LABEL_79;
    }
    if (v15 >= v10) {
      goto LABEL_27;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_27;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_27;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v12);
        if (!v16)
        {
          int64_t v12 = v15 + 3;
          if (v15 + 3 >= v10) {
            goto LABEL_27;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v12);
          if (!v16)
          {
            int64_t v12 = v15 + 4;
            if (v15 + 4 >= v10) {
              goto LABEL_27;
            }
            unint64_t v16 = *(void *)(v6 + 8 * v12);
            if (!v16) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_7:
    id result = [*(id *)(*(void *)(v5 + 56) + 8 * v14) removeFromParentNode];
  }
  int64_t v17 = v15 + 5;
  if (v17 < v10)
  {
    unint64_t v16 = *(void *)(v6 + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        int64_t v12 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          break;
        }
        if (v12 >= v10) {
          goto LABEL_27;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v12);
        ++v17;
        if (v16) {
          goto LABEL_26;
        }
      }
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }
    int64_t v12 = v17;
    goto LABEL_26;
  }
LABEL_27:
  swift_release();
  swift_bridgeObjectRelease_n();
  v1[4] = _swiftEmptyDictionarySingleton;
  uint64_t v18 = v1[1];
  uint64_t v19 = v18 + 64;
  uint64_t v20 = 1 << *(unsigned char *)(v18 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & *(void *)(v18 + 64);
  int64_t v23 = (unint64_t)(v20 + 63) >> 6;
  id result = (id)swift_bridgeObjectRetain_n();
  int64_t v24 = 0;
  while (2)
  {
    if (v22)
    {
      unint64_t v25 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v26 = v25 | (v24 << 6);
LABEL_31:
      id result = [*(id *)(*(void *)(v18 + 56) + 8 * v26) removeFromParentNode];
      continue;
    }
    break;
  }
  int64_t v27 = v24 + 1;
  if (__OFADD__(v24, 1)) {
    goto LABEL_77;
  }
  if (v27 >= v23)
  {
LABEL_51:
    swift_release();
    swift_bridgeObjectRelease_n();
    v1[1] = _swiftEmptyDictionarySingleton;
    uint64_t v30 = v1[2];
    uint64_t v31 = v30 + 64;
    uint64_t v32 = 1 << *(unsigned char *)(v30 + 32);
    uint64_t v33 = -1;
    if (v32 < 64) {
      uint64_t v33 = ~(-1 << v32);
    }
    unint64_t v34 = v33 & *(void *)(v30 + 64);
    int64_t v35 = (unint64_t)(v32 + 63) >> 6;
    id result = (id)swift_bridgeObjectRetain_n();
    int64_t v36 = 0;
    while (1)
    {
      if (v34)
      {
        unint64_t v37 = __clz(__rbit64(v34));
        v34 &= v34 - 1;
        unint64_t v38 = v37 | (v36 << 6);
      }
      else
      {
        int64_t v39 = v36 + 1;
        if (__OFADD__(v36, 1)) {
          goto LABEL_78;
        }
        if (v39 >= v35)
        {
LABEL_75:
          swift_release();
          id result = (id)swift_bridgeObjectRelease_n();
          v1[2] = _swiftEmptyDictionarySingleton;
          return result;
        }
        unint64_t v40 = *(void *)(v31 + 8 * v39);
        ++v36;
        if (!v40)
        {
          int64_t v36 = v39 + 1;
          if (v39 + 1 >= v35) {
            goto LABEL_75;
          }
          unint64_t v40 = *(void *)(v31 + 8 * v36);
          if (!v40)
          {
            int64_t v36 = v39 + 2;
            if (v39 + 2 >= v35) {
              goto LABEL_75;
            }
            unint64_t v40 = *(void *)(v31 + 8 * v36);
            if (!v40)
            {
              int64_t v36 = v39 + 3;
              if (v39 + 3 >= v35) {
                goto LABEL_75;
              }
              unint64_t v40 = *(void *)(v31 + 8 * v36);
              if (!v40)
              {
                int64_t v36 = v39 + 4;
                if (v39 + 4 >= v35) {
                  goto LABEL_75;
                }
                unint64_t v40 = *(void *)(v31 + 8 * v36);
                if (!v40)
                {
                  int64_t v41 = v39 + 5;
                  if (v41 >= v35) {
                    goto LABEL_75;
                  }
                  unint64_t v40 = *(void *)(v31 + 8 * v41);
                  if (!v40)
                  {
                    while (1)
                    {
                      int64_t v36 = v41 + 1;
                      if (__OFADD__(v41, 1)) {
                        goto LABEL_81;
                      }
                      if (v36 >= v35) {
                        goto LABEL_75;
                      }
                      unint64_t v40 = *(void *)(v31 + 8 * v36);
                      ++v41;
                      if (v40) {
                        goto LABEL_74;
                      }
                    }
                  }
                  int64_t v36 = v41;
                }
              }
            }
          }
        }
LABEL_74:
        unint64_t v34 = (v40 - 1) & v40;
        unint64_t v38 = __clz(__rbit64(v40)) + (v36 << 6);
      }
      id result = [*(id *)(*(void *)(v30 + 56) + 8 * v38) removeFromParentNode];
    }
  }
  unint64_t v28 = *(void *)(v19 + 8 * v27);
  ++v24;
  if (v28) {
    goto LABEL_50;
  }
  int64_t v24 = v27 + 1;
  if (v27 + 1 >= v23) {
    goto LABEL_51;
  }
  unint64_t v28 = *(void *)(v19 + 8 * v24);
  if (v28) {
    goto LABEL_50;
  }
  int64_t v24 = v27 + 2;
  if (v27 + 2 >= v23) {
    goto LABEL_51;
  }
  unint64_t v28 = *(void *)(v19 + 8 * v24);
  if (v28) {
    goto LABEL_50;
  }
  int64_t v24 = v27 + 3;
  if (v27 + 3 >= v23) {
    goto LABEL_51;
  }
  unint64_t v28 = *(void *)(v19 + 8 * v24);
  if (v28) {
    goto LABEL_50;
  }
  int64_t v24 = v27 + 4;
  if (v27 + 4 >= v23) {
    goto LABEL_51;
  }
  unint64_t v28 = *(void *)(v19 + 8 * v24);
  if (v28)
  {
LABEL_50:
    unint64_t v22 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v24 << 6);
    goto LABEL_31;
  }
  int64_t v29 = v27 + 5;
  if (v29 >= v23) {
    goto LABEL_51;
  }
  unint64_t v28 = *(void *)(v19 + 8 * v29);
  if (v28)
  {
    int64_t v24 = v29;
    goto LABEL_50;
  }
  while (1)
  {
    int64_t v24 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v24 >= v23) {
      goto LABEL_51;
    }
    unint64_t v28 = *(void *)(v19 + 8 * v24);
    ++v29;
    if (v28) {
      goto LABEL_50;
    }
  }
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
  return result;
}

uint64_t sub_10018DFF8()
{
  return static NSObject.== infix(_:_:)() & 1;
}

uint64_t sub_10018E03C(uint64_t a1, void *a2)
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v8) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v4 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v16 = *(void *)(v4 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v16 = *(void *)(v4 + 8 * v10);
        if (!v16)
        {
          int64_t v10 = v15 + 3;
          if (v15 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v16 = *(void *)(v4 + 8 * v10);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_5:
    unint64_t v13 = *(void **)(*(void *)(a1 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    id v14 = v13;
    [v14 worldTransform];
    long long v20 = v23;
    long long v21 = v22;
    long long v18 = v25;
    long long v19 = v24;
    [v14 removeFromParentNode];
    [a2 addChildNode:v14];
    long long v22 = v21;
    long long v23 = v20;
    long long v24 = v19;
    long long v25 = v18;
    [v14 setTransform:&v22];

    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v8) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v4 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v4 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_10018E240()
{
  unint64_t result = qword_1004C4568;
  if (!qword_1004C4568)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1004C4568);
  }
  return result;
}

uint64_t sub_10018E280(uint64_t a1, void *a2)
{
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v44 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v46)
  {
    if (v5)
    {
      unint64_t v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      int64_t v46 = i;
      unint64_t v9 = v8 | (i << 6);
    }
    else
    {
      int64_t v10 = i + 1;
      if (__OFADD__(i, 1)) {
        goto LABEL_38;
      }
      if (v10 >= v44) {
        return swift_release();
      }
      unint64_t v11 = *(void *)(v43 + 8 * v10);
      int64_t v12 = i + 1;
      if (!v11)
      {
        int64_t v12 = i + 2;
        if (i + 2 >= v44) {
          return swift_release();
        }
        unint64_t v11 = *(void *)(v43 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = i + 3;
          if (i + 3 >= v44) {
            return swift_release();
          }
          unint64_t v11 = *(void *)(v43 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = i + 4;
            if (i + 4 >= v44) {
              return swift_release();
            }
            unint64_t v11 = *(void *)(v43 + 8 * v12);
            if (!v11)
            {
              uint64_t v13 = i + 5;
              if (i + 5 >= v44) {
                return swift_release();
              }
              unint64_t v11 = *(void *)(v43 + 8 * v13);
              if (!v11)
              {
                while (1)
                {
                  int64_t v12 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v44) {
                    return swift_release();
                  }
                  unint64_t v11 = *(void *)(v43 + 8 * v12);
                  ++v13;
                  if (v11) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = i + 5;
            }
          }
        }
      }
LABEL_23:
      unint64_t v5 = (v11 - 1) & v11;
      int64_t v46 = v12;
      unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    }
    id v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v9);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    int64_t v17 = *(char **)(*(void *)(a1 + 56) + 8 * v9);
    long long v18 = *(void **)&v17[OBJC_IVAR____TtC7Measure11PointRender_point];
    swift_bridgeObjectRetain_n();
    long long v19 = v17;
    [v18 position];
    int v21 = v20;
    int v23 = v22;
    int v25 = v24;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v27 = (void *)*a2;
    unint64_t v47 = (void *)*a2;
    *a2 = 0x8000000000000000;
    unint64_t v29 = sub_1000E20D4(v16, v15);
    uint64_t v30 = v27[2];
    BOOL v31 = (v28 & 1) == 0;
    uint64_t v32 = v30 + v31;
    if (__OFADD__(v30, v31)) {
      break;
    }
    char v33 = v28;
    if (v27[3] >= v32)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        int64_t v36 = v47;
        if (v28) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1000D8B94();
        int64_t v36 = v47;
        if (v33) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1000D2698(v32, isUniquelyReferenced_nonNull_native);
      unint64_t v34 = sub_1000E20D4(v16, v15);
      if ((v33 & 1) != (v35 & 1)) {
        goto LABEL_40;
      }
      unint64_t v29 = v34;
      int64_t v36 = v47;
      if (v33)
      {
LABEL_4:
        unint64_t v7 = (_DWORD *)(v36[7] + 12 * v29);
        *unint64_t v7 = v21;
        v7[1] = v23;
        v7[2] = v25;
        goto LABEL_5;
      }
    }
    v36[(v29 >> 6) + 8] |= 1 << v29;
    unint64_t v37 = (uint64_t *)(v36[6] + 16 * v29);
    uint64_t *v37 = v16;
    v37[1] = v15;
    unint64_t v38 = (_DWORD *)(v36[7] + 12 * v29);
    _DWORD *v38 = v21;
    v38[1] = v23;
    v38[2] = v25;
    uint64_t v39 = v36[2];
    BOOL v40 = __OFADD__(v39, 1);
    uint64_t v41 = v39 + 1;
    if (v40) {
      goto LABEL_37;
    }
    v36[2] = v41;
    swift_bridgeObjectRetain();
LABEL_5:
    *a2 = v36;

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10018E5CC(uint64_t a1, void *a2)
{
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v49 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v51)
  {
    if (v5)
    {
      unint64_t v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      int64_t v51 = i;
      unint64_t v9 = v8 | (i << 6);
    }
    else
    {
      int64_t v10 = i + 1;
      if (__OFADD__(i, 1)) {
        goto LABEL_38;
      }
      if (v10 >= v49) {
        return swift_release();
      }
      unint64_t v11 = *(void *)(v48 + 8 * v10);
      int64_t v12 = i + 1;
      if (!v11)
      {
        int64_t v12 = i + 2;
        if (i + 2 >= v49) {
          return swift_release();
        }
        unint64_t v11 = *(void *)(v48 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = i + 3;
          if (i + 3 >= v49) {
            return swift_release();
          }
          unint64_t v11 = *(void *)(v48 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = i + 4;
            if (i + 4 >= v49) {
              return swift_release();
            }
            unint64_t v11 = *(void *)(v48 + 8 * v12);
            if (!v11)
            {
              uint64_t v13 = i + 5;
              if (i + 5 >= v49) {
                return swift_release();
              }
              unint64_t v11 = *(void *)(v48 + 8 * v13);
              if (!v11)
              {
                while (1)
                {
                  int64_t v12 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v49) {
                    return swift_release();
                  }
                  unint64_t v11 = *(void *)(v48 + 8 * v12);
                  ++v13;
                  if (v11) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = i + 5;
            }
          }
        }
      }
LABEL_23:
      unint64_t v5 = (v11 - 1) & v11;
      int64_t v51 = v12;
      unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    }
    id v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v9);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    int64_t v17 = *(void **)(*(void *)(a1 + 56) + 8 * v9);
    swift_bridgeObjectRetain_n();
    id v18 = v17;
    SCNVector3.init(_:)();
    int v20 = v19;
    int v22 = v21;
    int v24 = v23;
    SCNVector3.init(_:)();
    int v26 = v25;
    int v28 = v27;
    int v30 = v29;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v32 = (void *)*a2;
    int64_t v52 = (void *)*a2;
    *a2 = 0x8000000000000000;
    unint64_t v34 = sub_1000E20D4(v16, v15);
    uint64_t v35 = v32[2];
    BOOL v36 = (v33 & 1) == 0;
    uint64_t v37 = v35 + v36;
    if (__OFADD__(v35, v36)) {
      break;
    }
    char v38 = v33;
    if (v32[3] >= v37)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v41 = v52;
        if (v33) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1000D89D0();
        uint64_t v41 = v52;
        if (v38) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1000D237C(v37, isUniquelyReferenced_nonNull_native);
      unint64_t v39 = sub_1000E20D4(v16, v15);
      if ((v38 & 1) != (v40 & 1)) {
        goto LABEL_40;
      }
      unint64_t v34 = v39;
      uint64_t v41 = v52;
      if (v38)
      {
LABEL_4:
        unint64_t v7 = (_DWORD *)(v41[7] + 24 * v34);
        *unint64_t v7 = v20;
        v7[1] = v22;
        v7[2] = v24;
        v7[3] = v26;
        _OWORD v7[4] = v28;
        v7[5] = v30;
        goto LABEL_5;
      }
    }
    v41[(v34 >> 6) + 8] |= 1 << v34;
    uint64_t v42 = (uint64_t *)(v41[6] + 16 * v34);
    *uint64_t v42 = v16;
    v42[1] = v15;
    uint64_t v43 = (_DWORD *)(v41[7] + 24 * v34);
    *uint64_t v43 = v20;
    v43[1] = v22;
    v43[2] = v24;
    v43[3] = v26;
    v43[4] = v28;
    v43[5] = v30;
    uint64_t v44 = v41[2];
    BOOL v45 = __OFADD__(v44, 1);
    uint64_t v46 = v44 + 1;
    if (v45) {
      goto LABEL_37;
    }
    v41[2] = v46;
    swift_bridgeObjectRetain();
LABEL_5:
    *a2 = v41;

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_10018E940()
{
  sub_100012894((uint64_t *)&unk_1004CE6E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003F8B80;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v2;
  *(void *)(inited + 72) = &type metadata for Bool;
  *(unsigned char *)(inited + 48) = 0;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v3;
  *(void *)(inited + 120) = &type metadata for Bool;
  *(unsigned char *)(inited + 96) = 0;
  sub_1000E1948(inited);
  uint64_t v4 = (void *)v0[7];
  SCNVector3.init(_:)();
  int v6 = v5;
  int v8 = v7;
  int v10 = v9;
  SCNVector3.init(_:)();
  int v12 = v11;
  int v14 = v13;
  int v16 = v15;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  LODWORD(v18) = v6;
  LODWORD(v19) = v8;
  LODWORD(v20) = v10;
  LODWORD(v21) = v12;
  LODWORD(v22) = v14;
  LODWORD(v23) = v16;
  id v24 = [v4 hitTestWithSegmentFromPoint:isa toPoint:v18 options:v19 v20 v21 v22 v23];

  sub_10001C99C(0, &qword_1004CDFA0);
  unint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v25 >> 62) {
    goto LABEL_49;
  }
  uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v26)
  {
    while (1)
    {
      uint64_t v65 = v26;
      long long v67 = v0 + 3;
      swift_beginAccess();
      unint64_t v27 = v25 & 0xC000000000000001;
      unint64_t v28 = 0;
      unint64_t v29 = v25;
      unint64_t v25 = 0;
      uint64_t v30 = v29 & 0xFFFFFFFFFFFFFF8;
      unint64_t v31 = v29 + 32;
      uint64_t v63 = v29 & 0xFFFFFFFFFFFFFF8;
      unint64_t v64 = v27;
      unint64_t v62 = v29 + 32;
LABEL_4:
      if (v27)
      {
        id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v28 >= *(void *)(v30 + 16)) {
          goto LABEL_53;
        }
        id v32 = *(id *)(v31 + 8 * v28);
      }
      id v71 = v32;
      BOOL v33 = __OFADD__(v28, 1);
      unint64_t v34 = v28 + 1;
      if (v33) {
        break;
      }
      unint64_t v66 = v34;
      uint64_t v68 = *v67 + 64;
      uint64_t v35 = 1 << *(unsigned char *)(*v67 + 32);
      if (v35 < 64) {
        uint64_t v36 = ~(-1 << v35);
      }
      else {
        uint64_t v36 = -1;
      }
      unint64_t v37 = v36 & *(void *)(*v67 + 64);
      int64_t v69 = (unint64_t)(v35 + 63) >> 6;
      uint64_t v70 = *v67;
      swift_bridgeObjectRetain();
      int64_t v38 = 0;
      if (v37)
      {
LABEL_13:
        unint64_t v39 = __clz(__rbit64(v37));
        uint64_t v40 = (v37 - 1) & v37;
        unint64_t v41 = v39 | (v38 << 6);
        goto LABEL_25;
      }
      while (1)
      {
        BOOL v33 = __OFADD__(v38++, 1);
        if (v33) {
          goto LABEL_48;
        }
        if (v38 >= v69) {
          goto LABEL_40;
        }
        unint64_t v42 = *(void *)(v68 + 8 * v38);
        if (!v42)
        {
          int64_t v43 = v38 + 1;
          if (v38 + 1 >= v69) {
            goto LABEL_40;
          }
          unint64_t v42 = *(void *)(v68 + 8 * v43);
          if (!v42)
          {
            int64_t v43 = v38 + 2;
            if (v38 + 2 >= v69) {
              goto LABEL_40;
            }
            unint64_t v42 = *(void *)(v68 + 8 * v43);
            if (!v42)
            {
              int64_t v43 = v38 + 3;
              if (v38 + 3 >= v69)
              {
LABEL_40:

                swift_release();
                unint64_t v28 = v66;
                uint64_t v30 = v63;
                unint64_t v27 = v64;
                unint64_t v31 = v62;
                if (v66 != v65) {
                  goto LABEL_4;
                }
                goto LABEL_50;
              }
              unint64_t v42 = *(void *)(v68 + 8 * v43);
              if (!v42)
              {
                while (1)
                {
                  int64_t v38 = v43 + 1;
                  if (__OFADD__(v43, 1)) {
                    goto LABEL_52;
                  }
                  if (v38 >= v69) {
                    goto LABEL_40;
                  }
                  unint64_t v42 = *(void *)(v68 + 8 * v38);
                  ++v43;
                  if (v42) {
                    goto LABEL_24;
                  }
                }
              }
            }
          }
          int64_t v38 = v43;
        }
LABEL_24:
        uint64_t v40 = (v42 - 1) & v42;
        unint64_t v41 = __clz(__rbit64(v42)) + (v38 << 6);
LABEL_25:
        uint64_t v44 = (void *)(*(void *)(v70 + 56) + 48 * v41);
        uint64_t v46 = v44[1];
        uint64_t v45 = v44[2];
        uint64_t v47 = v44[4];
        uint64_t v48 = (void *)v44[5];
        swift_bridgeObjectRetain();
        uint64_t v74 = v46;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v49 = v48;
        id v50 = [v71 node];
        sub_10001C99C(0, (unint64_t *)&qword_1004C4568);
        if (static NSObject.== infix(_:_:)())
        {

          uint64_t v53 = v49;
LABEL_46:

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        unint64_t v72 = v40;
        int64_t v73 = v38;
        uint64_t v0 = (void *)swift_allocObject();
        v0[2] = v50;
        uint64_t v51 = swift_allocObject();
        *(void *)(v51 + 16) = sub_1001949C0;
        *(void *)(v51 + 24) = v0;
        aBlock[4] = sub_1001949D8;
        void aBlock[5] = v51;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100190FE4;
        aBlock[3] = &unk_100491040;
        int64_t v52 = _Block_copy(aBlock);
        id v50 = v50;
        swift_retain();
        swift_release();
        uint64_t v53 = v49;
        id v54 = [v49 childNodesPassingTest:v52];
        _Block_release(v52);
        LOBYTE(v52) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if (v52) {
          break;
        }
        sub_10001C99C(0, &qword_1004C4028);
        unint64_t v55 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v55 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v56 = _CocoaArrayWrapper.endIndex.getter();
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v56 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_release();
        }
        swift_bridgeObjectRelease();
        if (v56 == 1) {
          goto LABEL_44;
        }
        swift_bridgeObjectRetain();
        id v50 = v50;
        sub_10019319C(v45, v50);
        uint64_t v58 = v57;
        swift_bridgeObjectRelease();

        if (v58
          || (swift_bridgeObjectRetain(),
              id v50 = v50,
              sub_100193538(v74, v50),
              uint64_t v60 = v59,
              swift_bridgeObjectRelease(),
              v50,
              v60,
              v60))
        {
LABEL_44:

          goto LABEL_46;
        }
        swift_bridgeObjectRetain();
        uint64_t v0 = v50;
        sub_1001938D4(v47, v0);
        id v50 = v61;
        swift_bridgeObjectRelease();

        if (v50)
        {

          goto LABEL_46;
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        unint64_t v37 = v72;
        int64_t v38 = v73;
        if (v72) {
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v26) {
        goto LABEL_50;
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
  }
  else
  {
LABEL_50:
    swift_bridgeObjectRelease();
  }
}

void sub_10018F118(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v3 + 24);
  if (!*(void *)(v8 + 16)) {
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_1000E20D4(a2, (uint64_t)a3);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    swift_endAccess();
    return;
  }
  int v11 = (long long *)(*(void *)(v8 + 56) + 48 * v9);
  long long v12 = v11[1];
  long long v32 = *v11;
  long long v33 = v12;
  long long v34 = v11[2];
  uint64_t v39 = *((void *)&v32 + 1);
  long long v40 = v12;
  v41[0] = v34;
  swift_endAccess();
  sub_10016D4F0((uint64_t)&v39);
  sub_10016D4F0((uint64_t)&v40);
  sub_10016D4F0((uint64_t)&v40 + 8);
  sub_10016D4F0((uint64_t)v41);
  id v13 = *((id *)&v34 + 1);
  swift_bridgeObjectRelease();
  if ((void)v32 != a1)
  {
    if (qword_1004C2AD0 != -1) {
      swift_once();
    }
    _StringGuts.grow(_:)(45);
    swift_bridgeObjectRelease();
    uint64_t v35 = 0x636552646C726F57;
    *(void *)&long long v36 = 0xEF20656C676E6174;
    v14._uint64_t countAndFlagsBits = a2;
    v14._object = a3;
    String.append(_:)(v14);
    v15._object = (void *)0x8000000100429E10;
    v15._uint64_t countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v15);
    v16._uint64_t countAndFlagsBits = MeasureObjectState.description.getter();
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    v17._uint64_t countAndFlagsBits = 544175136;
    v17._object = (void *)0xE400000000000000;
    String.append(_:)(v17);
    v18._uint64_t countAndFlagsBits = MeasureObjectState.description.getter();
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    v19._uint64_t countAndFlagsBits = 0x636552646C726F57;
    v19._object = (void *)0xEF20656C676E6174;
    Log.default(_:isPrivate:)(v19, 0);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  double v21 = sub_100190D64(v31, a2, (uint64_t)a3);
  if (*(void *)(v20 + 8))
  {
    double v22 = (uint64_t *)v20;
    if (*(void *)v20 != a1)
    {
      uint64_t v23 = *(void *)(v20 + 40);
      uint64_t v35 = *(void *)v20;
      long long v24 = *(_OWORD *)(v20 + 24);
      long long v36 = *(_OWORD *)(v20 + 8);
      long long v37 = v24;
      uint64_t v38 = v23;
      sub_10018D388(a1);
    }
    *double v22 = a1;
    ((void (*)(void *, void))v21)(v31, 0);
  }
  else
  {
    ((void (*)(void *, void))v21)(v31, 0);
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  id v25 = [v13 state];
  if (v25 == (id)6)
  {
    uint64_t v26 = *(void **)(v4 + 56);
    id v27 = [v13 parentNode];
    if (!v27)
    {
LABEL_20:
      sub_10018D984(v26);
      goto LABEL_21;
    }
  }
  else
  {
    if (v25 != (id)5) {
      goto LABEL_21;
    }
    uint64_t v26 = *(void **)(v4 + 64);
    id v27 = [v13 parentNode];
    if (!v27) {
      goto LABEL_20;
    }
  }
  unint64_t v28 = v27;
  sub_10001C99C(0, &qword_1004C4028);
  id v29 = v26;
  char v30 = static NSObject.== infix(_:_:)();

  if ((v30 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_21:
  sub_10008D0F0((uint64_t)&v39);
  sub_10008D0F0((uint64_t)&v40);
  sub_10008D0F0((uint64_t)&v40 + 8);
  sub_10008D0F0((uint64_t)v41);
}

uint64_t sub_10018F4EC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v8 = (unint64_t)&swift_isaMask;
  unint64_t v9 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8))();
  uint64_t v11 = v10;
  swift_beginAccess();
  uint64_t v150 = v4;
  sub_1001606BC(v9, v11, *(void *)(v4 + 24), v170);
  swift_bridgeObjectRelease();
  sub_100016FEC((uint64_t)v170, (uint64_t)&v171, &qword_1004CDF20);
  uint64_t v152 = v172;
  if (!v172) {
    return swift_endAccess();
  }
  uint64_t v140 = a3;
  uint64_t v141 = v171;
  uint64_t v12 = v174;
  uint64_t v151 = v173;
  uint64_t v13 = v175;
  Swift::String v14 = v176;
  swift_endAccess();
  Swift::String v15 = self;
  [v15 begin];
  [v15 setAnimationDuration:0.0];
  uint64_t v148 = swift_allocObject();
  *(void *)(v148 + 16) = _swiftEmptyDictionarySingleton;
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_10018E280(v16, (void *)(v148 + 16));
  uint64_t v149 = v13;
  swift_bridgeObjectRelease();
  uint64_t v161 = swift_allocObject();
  *(void *)(v161 + 16) = _swiftEmptyDictionarySingleton;
  uint64_t v145 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x230);
  unint64_t v17 = v145();
  unint64_t v18 = v17;
  uint64_t v138 = a2;
  char v143 = v14;
  id v144 = v15;
  int64_t v153 = a1;
  uint64_t v142 = v12;
  if (v17 >> 62) {
    goto LABEL_35;
  }
  uint64_t v19 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v19)
  {
LABEL_36:
    swift_bridgeObjectRelease_n();
    uint64_t v147 = swift_allocObject();
    *(void *)(v147 + 16) = _swiftEmptyDictionarySingleton;
    uint64_t v57 = swift_bridgeObjectRetain();
    sub_10018E5CC(v57, (void *)(v147 + 16));
    swift_bridgeObjectRelease();
    uint64_t v58 = swift_allocObject();
    *(void *)(v58 + 16) = _swiftEmptyDictionarySingleton;
    unint64_t v59 = v145();
    unint64_t v60 = v59;
    if (v59 >> 62) {
      goto LABEL_55;
    }
    uint64_t v61 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v156 = v61;
    if (!v61)
    {
LABEL_56:
      swift_bridgeObjectRelease_n();
      uint64_t v146 = swift_allocObject();
      *(void *)(v146 + 16) = _swiftEmptyDictionarySingleton;
      uint64_t v92 = swift_bridgeObjectRetain();
      sub_10018E5CC(v92, (void *)(v146 + 16));
      swift_bridgeObjectRelease();
      uint64_t v93 = swift_allocObject();
      *(void *)(v93 + 16) = _swiftEmptyDictionarySingleton;
      float v94 = (uint64_t (*)(void))&swift_isaMask;
      unint64_t v95 = (*(uint64_t (**)(void))((swift_isaMask & *v153) + 0x248))();
      uint64_t v96 = v95;
      if (v95 >> 62) {
        goto LABEL_75;
      }
      uint64_t v97 = *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v157 = v97;
      if (!v97)
      {
LABEL_76:
        swift_bridgeObjectRelease_n();
        char v160 = self;
        v177[0] = v142;
        unint64_t v126 = (void *)swift_allocObject();
        v126[2] = v148;
        v126[3] = v147;
        v126[4] = v146;
        v126[5] = 0x3FE0000000000000;
        v126[6] = v153;
        v126[7] = v161;
        v126[8] = v141;
        v126[9] = v152;
        v126[10] = v151;
        v126[11] = v142;
        v126[12] = v149;
        v126[13] = v143;
        v126[14] = v58;
        v126[15] = v93;
        uint64_t v166 = sub_1001929BC;
        char v167 = v126;
        CGAffineTransform aBlock = _NSConcreteStackBlock;
        uint64_t v163 = 1107296256;
        char v164 = sub_1000EE160;
        char v165 = &unk_100490F78;
        unint64_t v158 = _Block_copy(&aBlock);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        unint64_t v127 = v153;
        swift_retain();
        sub_10016D4F0((uint64_t)v177);
        id v128 = v143;
        swift_retain();
        swift_retain();
        swift_release();
        id v129 = [v160 customActionWithDuration:v158 actionBlock:0.5];
        _Block_release(v158);
        uint64_t v130 = (*(uint64_t (**)(void))((swift_isaMask & *v127) + 0xD0))();
        double v131 = 1.0;
        if (v130 == 5) {
          double v131 = 3.0;
        }
        [v129 setSpeed:v131, v138];
        [v129 setTimingMode:1];
        unint64_t v132 = *(void **)(v150 + 56);
        NSString v133 = String._bridgeToObjectiveC()();
        id v134 = [v132 actionForKey:v133];

        if (!v134 || v130 == 5)
        {
          NSString v159 = String._bridgeToObjectiveC()();
          uint64_t v135 = swift_allocObject();
          *(void *)(v135 + 16) = v139;
          *(void *)(v135 + 24) = v140;
          *(unsigned char *)(v135 + 32) = v130 == 5;
          *(void *)(v135 + 40) = v127;
          *(void *)(v135 + 48) = v150;
          uint64_t v166 = sub_100192A60;
          char v167 = (void *)v135;
          CGAffineTransform aBlock = _NSConcreteStackBlock;
          uint64_t v163 = 1107296256;
          char v164 = sub_100049AB4;
          char v165 = &unk_100490FC8;
          Swift::String v136 = _Block_copy(&aBlock);
          Swift::String v137 = v127;
          sub_10003FFC4(v139);
          swift_retain();
          swift_release();
          [v132 runAction:v129 forKey:v159 completionHandler:v136];
          _Block_release(v136);
        }
        [v144 commit];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        sub_10008D0F0((uint64_t)v177);
        return swift_bridgeObjectRelease();
      }
LABEL_58:
      if (v157 < 1) {
        goto LABEL_84;
      }
      uint64_t v98 = 0;
      uint64_t v154 = v96;
      unint64_t v155 = v96 & 0xC000000000000001;
      while (1)
      {
        if (v155) {
          char v99 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          char v99 = *(id *)(v96 + 8 * v98 + 32);
        }
        float32x4_t v100 = v99;
        uint64_t v101 = (*(uint64_t (**)(void))((*(void *)v94 & *v99) + 0xB8))();
        uint64_t v96 = v102;
        float v94 = *(uint64_t (**)(void))((*(void *)v94 & *v100) + 0x250);
        uint64_t v103 = v94();
        if ((v103 & 0xC000000000000001) != 0)
        {
          float v104 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v103 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_74:
            __break(1u);
LABEL_75:
            swift_bridgeObjectRetain();
            uint64_t v157 = _CocoaArrayWrapper.endIndex.getter();
            if (!v157) {
              goto LABEL_76;
            }
            goto LABEL_58;
          }
          float v104 = *(id *)(v103 + 32);
        }
        uint64_t v105 = v104;
        uint64_t v106 = swift_bridgeObjectRelease();
        (*(void (**)(uint64_t))((swift_isaMask & *v105) + 0x2B0))(v106);

        simd_float4x4.position.getter();
        uint64_t v107 = SCNVector3.init(_:)();
        int v109 = v108;
        int v111 = v110;
        int v113 = v112;
        uint64_t v114 = ((uint64_t (*)(uint64_t))v94)(v107);
        if ((v114 & 0xC000000000000001) != 0)
        {
          uint64_t v115 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (*(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
            goto LABEL_74;
          }
          uint64_t v115 = *(id *)(v114 + 40);
        }
        int v116 = v115;
        uint64_t v117 = swift_bridgeObjectRelease();
        ++v98;
        float v94 = (uint64_t (*)(void))&swift_isaMask;
        (*(void (**)(uint64_t))((swift_isaMask & *v116) + 0x2B0))(v117);

        simd_float4x4.position.getter();
        SCNVector3.init(_:)();
        int v119 = v118;
        int v121 = v120;
        int v123 = v122;
        NSAttributedStringKey v124 = *(void ***)(v93 + 16);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        CGAffineTransform aBlock = v124;
        *(void *)(v93 + 16) = 0x8000000000000000;
        v168[0] = v109;
        v168[1] = v111;
        v168[2] = v113;
        v168[3] = v119;
        v168[4] = v121;
        v168[5] = v123;
        sub_1000D5A5C(v168, v101, v96, isUniquelyReferenced_nonNull_native);
        *(void *)(v93 + 16) = aBlock;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v96 = v154;
        if (v157 == v98) {
          goto LABEL_76;
        }
      }
    }
LABEL_38:
    if (v156 < 1) {
      goto LABEL_83;
    }
    uint64_t v62 = 0;
    while (1)
    {
      if ((v60 & 0xC000000000000001) != 0) {
        uint64_t v63 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v63 = *(id *)(v60 + 8 * v62 + 32);
      }
      unint64_t v64 = v63;
      uint64_t v65 = (*(uint64_t (**)(void))((swift_isaMask & *v63) + 0xB8))();
      uint64_t v67 = v66;
      uint64_t v68 = *(uint64_t (**)(void))((swift_isaMask & *v64) + 0x250);
      uint64_t v69 = v68();
      if ((v69 & 0xC000000000000001) != 0)
      {
        uint64_t v70 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          swift_bridgeObjectRetain();
          uint64_t v156 = _CocoaArrayWrapper.endIndex.getter();
          if (!v156) {
            goto LABEL_56;
          }
          goto LABEL_38;
        }
        uint64_t v70 = *(id *)(v69 + 32);
      }
      id v71 = v70;
      uint64_t v72 = swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))((swift_isaMask & *v71) + 0x2B0))(v72);

      simd_float4x4.position.getter();
      uint64_t v73 = SCNVector3.init(_:)();
      int v75 = v74;
      int v77 = v76;
      int v79 = v78;
      uint64_t v80 = ((uint64_t (*)(uint64_t))v68)(v73);
      if ((v80 & 0xC000000000000001) != 0)
      {
        long long v81 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (*(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
          goto LABEL_54;
        }
        long long v81 = *(id *)(v80 + 40);
      }
      long long v82 = v81;
      uint64_t v83 = swift_bridgeObjectRelease();
      ++v62;
      (*(void (**)(uint64_t))((swift_isaMask & *v82) + 0x2B0))(v83);

      simd_float4x4.position.getter();
      SCNVector3.init(_:)();
      int v85 = v84;
      int v87 = v86;
      int v89 = v88;
      uint64_t v90 = *(void ***)(v58 + 16);
      char v91 = swift_isUniquelyReferenced_nonNull_native();
      CGAffineTransform aBlock = v90;
      *(void *)(v58 + 16) = 0x8000000000000000;
      v169[0] = v75;
      v169[1] = v77;
      v169[2] = v79;
      v169[3] = v85;
      v169[4] = v87;
      v169[5] = v89;
      sub_1000D5A5C(v169, v65, v67, v91);
      *(void *)(v58 + 16) = aBlock;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v156 == v62) {
        goto LABEL_56;
      }
    }
  }
LABEL_4:
  if (v19 >= 1)
  {
    uint64_t v20 = 0;
    while (1)
    {
      if ((v18 & 0xC000000000000001) != 0) {
        double v22 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        double v22 = *(id *)(v18 + 8 * v20 + 32);
      }
      uint64_t v23 = v22;
      unint64_t v8 = *(void *)((*(void *)v8 & *v22) + 0x250);
      uint64_t v24 = ((uint64_t (*)(void))v8)();
      if ((v24 & 0xC000000000000001) != 0)
      {
        id v25 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          swift_bridgeObjectRetain();
          uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
          if (!v19) {
            goto LABEL_36;
          }
          goto LABEL_4;
        }
        id v25 = *(id *)(v24 + 32);
      }
      uint64_t v26 = v25;
      uint64_t v27 = swift_bridgeObjectRelease();
      uint64_t v28 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v26) + 0xB8))(v27);
      uint64_t v30 = v29;

      uint64_t v31 = ((uint64_t (*)(void))v8)();
      if ((v31 & 0xC000000000000001) != 0)
      {
        long long v32 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_33;
        }
        long long v32 = *(id *)(v31 + 32);
      }
      long long v33 = v32;
      uint64_t v34 = swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))((swift_isaMask & *v33) + 0x2B0))(v34);

      simd_float4x4.position.getter();
      SCNVector3.init(_:)();
      int v36 = v35;
      int v38 = v37;
      int v40 = v39;
      uint64_t v41 = *(void *)(v161 + 16);
      char v42 = swift_isUniquelyReferenced_nonNull_native();
      CGAffineTransform aBlock = (void **)v41;
      *(void *)(v161 + 16) = 0x8000000000000000;
      unint64_t v8 = sub_1000E20D4(v28, v30);
      uint64_t v44 = *(void *)(v41 + 16);
      BOOL v45 = (v43 & 1) == 0;
      uint64_t v46 = v44 + v45;
      if (__OFADD__(v44, v45)) {
        goto LABEL_32;
      }
      char v47 = v43;
      if (*(void *)(v41 + 24) >= v46)
      {
        if (v42)
        {
          id v50 = aBlock;
          if (v43) {
            goto LABEL_6;
          }
        }
        else
        {
          sub_1000D8B94();
          id v50 = aBlock;
          if (v47) {
            goto LABEL_6;
          }
        }
      }
      else
      {
        sub_1000D2698(v46, v42);
        unint64_t v48 = sub_1000E20D4(v28, v30);
        if ((v47 & 1) != (v49 & 1)) {
          goto LABEL_85;
        }
        unint64_t v8 = v48;
        id v50 = aBlock;
        if (v47)
        {
LABEL_6:
          double v21 = (char *)v50[7] + 12 * v8;
          _DWORD *v21 = v36;
          v21[1] = v38;
          void v21[2] = v40;
          goto LABEL_7;
        }
      }
      v50[(v8 >> 6) + 8] = (void *)((unint64_t)v50[(v8 >> 6) + 8] | (1 << v8));
      uint64_t v51 = (uint64_t *)((char *)v50[6] + 16 * v8);
      *uint64_t v51 = v28;
      v51[1] = v30;
      int64_t v52 = (char *)v50[7] + 12 * v8;
      *int64_t v52 = v36;
      v52[1] = v38;
      v52[2] = v40;
      uint64_t v53 = (char *)v50[2];
      BOOL v54 = __OFADD__(v53, 1);
      unint64_t v55 = v53 + 1;
      if (v54) {
        goto LABEL_34;
      }
      v50[2] = v55;
      swift_bridgeObjectRetain();
LABEL_7:
      ++v20;
      *(void *)(v161 + 16) = v50;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v8 = (unint64_t)&swift_isaMask;
      if (v19 == v20) {
        goto LABEL_36;
      }
    }
  }
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

unint64_t sub_100190524(void *a1)
{
  void (*v22)(uint64_t *__return_ptr, uint64_t);
  uint64_t v23;
  uint64_t v24;
  objc_class *v25;
  char *v26;
  uint64_t v27;
  id v28;
  char *v29;
  char *v30;
  char *v31;
  void *v32;
  void *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v56;
  uint64_t (*v57)(void);
  uint64_t v58;
  id v60;
  uint64_t v61;
  void *v62;
  void *v63;
  void *v64;
  objc_super v65;
  uint64_t v66[38];
  uint64_t v67[38];
  uint64_t v68[38];
  unsigned char v69[304];
  uint64_t __src[38];
  unsigned char __dst[312];
  char v72[8];
  unsigned char v73[32];
  long long v74;
  void *v75;
  char *v76;
  void *v77;
  char *v78;
  long long v79;
  char v80;
  uint64_t v81;

  unint64_t v2 = v1;
  uint64_t v3 = (uint64_t (*)(void))&swift_isaMask;
  uint64_t v4 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x230);
  unint64_t result = v4();
  unint64_t v6 = result;
  if (result >> 62)
  {
LABEL_33:
    unint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v7 = result;
  }
  else
  {
    uint64_t v7 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v58 = v2;
  uint64_t v57 = v4;
  if (v7)
  {
    if (v7 >= 1)
    {
      uint64_t v8 = 0;
      unint64_t v9 = (char *)_swiftEmptyArrayStorage;
      while (1)
      {
        if ((v6 & 0xC000000000000001) != 0) {
          uint64_t v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v10 = *(id *)(v6 + 8 * v8 + 32);
        }
        uint64_t v11 = v10;
        uint64_t v12 = (*(uint64_t (**)(void))((*(void *)v3 & *v10) + 0x250))();
        if ((v12 & 0xC000000000000001) != 0)
        {
          uint64_t v13 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_33;
          }
          uint64_t v13 = *(id *)(v12 + 32);
        }
        Swift::String v14 = v13;
        uint64_t v15 = swift_bridgeObjectRelease();
        uint64_t v4 = v3;
        uint64_t v16 = (*(uint64_t (**)(uint64_t))((*(void *)v3 & *v14) + 0xB8))(v15);
        uint64_t v18 = v17;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v9 = sub_10006E930(0, *((void *)v9 + 2) + 1, 1, v9);
        }
        unint64_t v2 = *((void *)v9 + 2);
        unint64_t v19 = *((void *)v9 + 3);
        if (v2 >= v19 >> 1) {
          unint64_t v9 = sub_10006E930((char *)(v19 > 1), v2 + 1, 1, v9);
        }
        ++v8;
        *((void *)v9 + 2) = v2 + 1;
        uint64_t v20 = &v9[16 * v2];
        *((void *)v20 + 4) = v16;
        *((void *)v20 + 5) = v18;

        uint64_t v3 = v4;
        if (v7 == v8) {
          goto LABEL_20;
        }
      }
    }
    __break(1u);
    goto LABEL_48;
  }
  unint64_t v9 = (char *)_swiftEmptyArrayStorage;
LABEL_20:
  uint64_t v21 = swift_bridgeObjectRelease();
  double v22 = *(void (**)(uint64_t *__return_ptr, uint64_t))((*(void *)v3 & *a1) + 0x260);
  uint64_t v23 = (*(void *)v3 & *a1) + 608;
  v22(v66, v21);
  sub_100016FEC((uint64_t)v66, (uint64_t)__src, &qword_1004CCE98);
  unint64_t result = sub_10014CD80(__src);
  if (result == 1) {
    goto LABEL_50;
  }
  uint64_t v56 = v23;
  memcpy(__dst, __src, 0x130uLL);
  sub_100016FEC((uint64_t)__dst, (uint64_t)v72, &qword_1004CDF88);
  sub_10016D4F0((uint64_t)v72);
  sub_10014CDA4(v66);
  unint64_t result = sub_100016FEC((uint64_t)v72, (uint64_t)&v81, &qword_1004CDF88);
  uint64_t v24 = v81;
  if (!v81)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  id v25 = (objc_class *)type metadata accessor for RectangleFill();
  uint64_t v26 = (char *)objc_allocWithZone(v25);
  *(void *)&v26[OBJC_IVAR____TtC7Measure13RectangleFill_state] = 1;
  *(void *)&v26[OBJC_IVAR____TtC7Measure13RectangleFill_currentPoints] = 0;
  uint64_t v27 = OBJC_IVAR____TtC7Measure13RectangleFill_rectangleFill;
  uint64_t v28 = objc_allocWithZone((Class)SCNNode);
  uint64_t v29 = v26;
  *(void *)&v26[v27] = [v28 init];

  v65.receiver = v29;
  v65.super_class = v25;
  uint64_t v30 = (char *)[super init];
  *(void *)&v30[OBJC_IVAR____TtC7Measure13RectangleFill_state] = 1;
  sub_100189238(v24);
  sub_10008D0F0((uint64_t)v72);
  uint64_t v31 = v30;
  ((void (*)(uint64_t *__return_ptr))v22)(v67);
  sub_100016FEC((uint64_t)v67, (uint64_t)v68, &qword_1004CCE98);
  unint64_t result = sub_10014CD80(v68);
  if (result == 1)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  memcpy(v69, v68, sizeof(v69));
  sub_10014CDA4(v67);
  sub_100016FEC((uint64_t)&v69[112], (uint64_t)v73, &qword_1004CCEA0);
  unint64_t result = sub_100016FEC((uint64_t)v73, (uint64_t)&v79, &qword_1004CCEA0);
  if ((v80 & 1) == 0)
  {
    SCNVector3.init(_:)();
    [v31 setPosition:];

    long long v32 = self;
    [v32 begin];
    [v32 setAnimationDuration:0.0];
    long long v33 = *(void **)(v58 + 56);
    SCNNode.removeAllChildren()();
    uint64_t v63 = _swiftEmptyDictionarySingleton;
    unint64_t v64 = _swiftEmptyDictionarySingleton;
    uint64_t v62 = _swiftEmptyDictionarySingleton;
    uint64_t v34 = v57();
    int v35 = v34;
    if (v34 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t result = _CocoaArrayWrapper.endIndex.getter();
      int v36 = result;
      unint64_t v60 = v33;
      if (!result) {
        goto LABEL_35;
      }
    }
    else
    {
      int v36 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t result = swift_bridgeObjectRetain();
      unint64_t v60 = v33;
      if (!v36) {
        goto LABEL_35;
      }
    }
    if (v36 < 1)
    {
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    int v37 = 0;
    do
    {
      if ((v35 & 0xC000000000000001) != 0) {
        int v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        int v38 = *(id *)(v35 + 8 * v37 + 32);
      }
      int v39 = v38;
      ++v37;
      *(void *)&int v74 = v38;
      sub_100191030((void **)&v74, v58, (uint64_t *)&v64, (uint64_t *)&v63);
    }
    while (v36 != v37);
LABEL_35:
    int v40 = swift_bridgeObjectRelease_n();
    uint64_t v41 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x248))(v40);
    char v42 = v41;
    if (v41 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t result = _CocoaArrayWrapper.endIndex.getter();
      char v43 = result;
      if (result) {
        goto LABEL_37;
      }
    }
    else
    {
      char v43 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t result = swift_bridgeObjectRetain();
      if (v43)
      {
LABEL_37:
        if (v43 < 1)
        {
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
        uint64_t v44 = 0;
        do
        {
          if ((v42 & 0xC000000000000001) != 0) {
            BOOL v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            BOOL v45 = *(id *)(v42 + 8 * v44 + 32);
          }
          uint64_t v46 = v45;
          ++v44;
          *(void *)&int v74 = v45;
          sub_100191518((void **)&v74, v58, (uint64_t *)&v62);
        }
        while (v43 != v44);
        swift_bridgeObjectRelease_n();
        char v47 = v62;
LABEL_46:
        [v60 addChildNode:v31, v56];
        [v32 commit];
        unint64_t v48 = [v31 state];
        *(void *)&int v74 = v48;
        *((void *)&v74 + 1) = v63;
        int v75 = v47;
        int v76 = v9;
        int v77 = v64;
        int v78 = v31;
        char v49 = v31;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10018D388((uint64_t)v48);

        id v50 = swift_bridgeObjectRelease();
        uint64_t v51 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0xB8))(v50);
        uint64_t v53 = v52;
        swift_beginAccess();
        BOOL v54 = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v61 = *(void *)(v58 + 24);
        *(void *)(v58 + 24) = 0x8000000000000000;
        sub_1000D5D44(&v74, v51, v53, isUniquelyReferenced_nonNull_native);
        *(void *)(v58 + 24) = v61;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease_n();
    char v47 = _swiftEmptyDictionarySingleton;
    goto LABEL_46;
  }
LABEL_53:
  __break(1u);
  return result;
}

void (*sub_100190D64(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_100192A70(v6, a2, a3);
  return sub_100190DE4;
}

void sub_100190DE4(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();

  free(v1);
}

void (*sub_100190E38(double ****a1, double a2))(void *a1)
{
  uint64_t v4 = (double ***)malloc(0x28uLL);
  *a1 = v4;
  v4[4] = (double **)sub_100192B90(v4, a2);
  return sub_1000202F4;
}

uint64_t sub_100190EA0(void *a1)
{
  unint64_t v1 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xB8);
  uint64_t v2 = v1();
  uint64_t v4 = v3;
  swift_beginAccess();
  int v5 = sub_100190D64(v12, v2, v4);
  if (*(void *)(v6 + 8)) {
    sub_10018DB80();
  }
  ((void (*)(void *, void))v5)(v12, 0);
  swift_endAccess();
  uint64_t v7 = swift_bridgeObjectRelease();
  uint64_t v8 = ((uint64_t (*)(uint64_t))v1)(v7);
  uint64_t v10 = v9;
  swift_beginAccess();
  sub_1000A8A6C(v8, v10, (uint64_t)v12);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return sub_10016B140((uint64_t)v12);
}

uint64_t sub_100190FE4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(uint64_t (**)(void))(a1 + 32);
  id v3 = a2;
  char v4 = v2();

  return v4 & 1;
}

uint64_t sub_100191030(void **a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v7 = *a1;
  id v8 = objc_allocWithZone((Class)type metadata accessor for PointRender());
  uint64_t v9 = sub_100156A48(0, 1);
  uint64_t v10 = *(uint64_t (**)(void))((swift_isaMask & *v7) + 0x250);
  uint64_t v11 = v10();
  if ((v11 & 0xC000000000000001) != 0)
  {
    uint64_t v12 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_16;
    }
    uint64_t v12 = *(id *)(v11 + 32);
  }
  uint64_t v13 = v12;
  uint64_t v14 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))((swift_isaMask & *v13) + 0x2B0))(v14);
  __n128 v68 = v16;
  __n128 v69 = v15;
  __n128 v67 = v17;

  simd_float4x4.position.getter();
  SCNVector3.init(_:)();
  int v19 = v18;
  int v21 = v20;
  int v23 = v22;
  [*(id *)&v9[OBJC_IVAR____TtC7Measure11PointRender_point] setWorldPosition:];
  LODWORD(v24) = v19;
  LODWORD(v25) = v21;
  LODWORD(v26) = v23;
  [*(id *)&v9[OBJC_IVAR____TtC7Measure11PointRender_pointPrime] setWorldPosition:v24, v25, v26];
  uint64_t v27 = *(void **)(a2 + 56);
  uint64_t v28 = ((uint64_t (*)(id))v10)([v27 addChildNode:v9]);
  uint64_t v70 = (uint64_t (*)(void))v27;
  if ((v28 & 0xC000000000000001) != 0)
  {
LABEL_16:
    uint64_t v29 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if (!*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v29 = *(id *)(v28 + 32);
LABEL_7:
  uint64_t v30 = v29;
  uint64_t v31 = swift_bridgeObjectRelease();
  uint64_t v32 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v30) + 0xB8))(v31);
  uint64_t v34 = v33;

  uint64_t v9 = v9;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v71 = *a3;
  *a3 = 0x8000000000000000;
  sub_1000D554C((uint64_t)v9, v32, v34, isUniquelyReferenced_nonNull_native);
  *a3 = v71;
  swift_bridgeObjectRelease();
  uint64_t v36 = swift_bridgeObjectRelease();
  uint64_t v37 = ((uint64_t (*)(uint64_t))v10)(v36);
  if ((v37 & 0xC000000000000001) != 0)
  {
LABEL_18:
    int v38 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_10;
  }
  if (!*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_20;
  }
  int v38 = *(id *)(v37 + 32);
LABEL_10:
  int v39 = v38;
  uint64_t v40 = swift_bridgeObjectRelease();
  v41.n128_f64[0] = (*(double (**)(uint64_t))((swift_isaMask & *v39) + 0x2B0))(v40);
  __n128 v68 = v42;
  __n128 v69 = v41;
  __n128 v67 = v43;
  __n128 v66 = v44;

  uint64_t result = v10();
  uint64_t v10 = v70;
  if ((result & 0xC000000000000001) != 0)
  {
LABEL_20:
    uint64_t v46 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_13;
  }
  if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    uint64_t v46 = *(id *)(result + 40);
LABEL_13:
    char v47 = v46;
    uint64_t v48 = swift_bridgeObjectRelease();
    v49.n128_f64[0] = (*(double (**)(uint64_t))((swift_isaMask & *v47) + 0x2B0))(v48);
    __n128 v64 = v50;
    __n128 v65 = v49;
    __n128 v62 = v52;
    __n128 v63 = v51;

    id v53 = objc_allocWithZone((Class)type metadata accessor for LineRender());
    sub_1000EEDC0(1, 0, 0, 0, 0, v69, v68, v67, v66, v65, v64, v63, v62);
    unint64_t v55 = v54;
    id v56 = [v10 addChildNode:v54];
    uint64_t v57 = (*(uint64_t (**)(id))((swift_isaMask & *v7) + 0xB8))(v56);
    uint64_t v59 = v58;
    id v60 = v55;
    char v61 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v72 = *a4;
    *a4 = 0x8000000000000000;
    sub_1000D56E0((uint64_t)v60, v57, v59, v61);
    *a4 = v72;

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_100191518(void **a1, uint64_t a2, uint64_t *a3)
{
  int v5 = *a1;
  uint64_t v6 = *(uint64_t (**)(void))((swift_isaMask & **a1) + 0x250);
  uint64_t v7 = v6();
  if ((v7 & 0xC000000000000001) != 0)
  {
    id v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_10;
    }
    id v8 = *(id *)(v7 + 32);
  }
  uint64_t v9 = v8;
  uint64_t v10 = swift_bridgeObjectRelease();
  v11.n128_f64[0] = (*(double (**)(uint64_t))((swift_isaMask & *v9) + 0x2B0))(v10);
  __n128 v39 = v11;
  __n128 v37 = v13;
  __n128 v38 = v12;
  __n128 v36 = v14;

  uint64_t result = v6();
  if ((result & 0xC000000000000001) != 0)
  {
LABEL_10:
    __n128 v16 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    __n128 v16 = *(id *)(result + 40);
LABEL_7:
    __n128 v17 = v16;
    uint64_t v18 = swift_bridgeObjectRelease();
    v19.n128_f64[0] = (*(double (**)(uint64_t))((swift_isaMask & *v17) + 0x2B0))(v18);
    __n128 v34 = v20;
    __n128 v35 = v19;
    __n128 v32 = v22;
    __n128 v33 = v21;

    id v23 = objc_allocWithZone((Class)type metadata accessor for LineRender());
    sub_1000EEDC0(1, 1, 0, 0, 0, v39, v38, v37, v36, v35, v34, v33, v32);
    double v25 = v24;
    id v26 = [*(id *)(a2 + 56) addChildNode:v24];
    uint64_t v27 = (*(uint64_t (**)(id))((swift_isaMask & *v5) + 0xB8))(v26);
    uint64_t v29 = v28;
    id v30 = v25;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v40 = *a3;
    *a3 = 0x8000000000000000;
    sub_1000D56E0((uint64_t)v30, v27, v29, isUniquelyReferenced_nonNull_native);
    *a3 = v40;

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1001917B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = a2 + 16;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)(a2 + 16) + 16) == 4)
  {
    uint64_t v18 = a3 + 16;
    uint64_t result = swift_beginAccess();
    if (*(void *)(*(void *)(a3 + 16) + 16) == 4)
    {
      uint64_t v19 = a4 + 16;
      uint64_t result = swift_beginAccess();
      if (*(void *)(*(void *)v19 + 16) == 2)
      {
        uint64_t v68 = v19;
        uint64_t v71 = _swiftEmptyDictionarySingleton;
        __n128 v20 = *(uint64_t (**)(uint64_t))((swift_isaMask & *a5) + 0x230);
        __n128 v69 = a5;
        unint64_t v21 = v20(result);
        unint64_t v22 = v21;
        if (v21 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        }
        else
        {
          uint64_t v23 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
        }
        if (v23)
        {
          if (v23 < 1)
          {
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
          uint64_t v24 = 0;
          uint64_t v25 = a6 + 16;
          do
          {
            if ((v22 & 0xC000000000000001) != 0) {
              id v26 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v26 = *(id *)(v22 + 8 * v24 + 32);
            }
            uint64_t v27 = v26;
            ++v24;
            uint64_t v70 = v26;
            sub_100191DF4(&v70, (uint64_t *)&v71, v16, v25);
          }
          while (v23 != v24);
        }
        uint64_t v28 = swift_bridgeObjectRelease_n();
        unint64_t v29 = v20(v28);
        unint64_t v30 = v29;
        if (v29 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
          if (!v31) {
            goto LABEL_23;
          }
        }
        else
        {
          uint64_t v31 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v31) {
            goto LABEL_23;
          }
        }
        if (v31 < 1)
        {
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
        uint64_t v32 = 0;
        uint64_t v33 = a8 + 16;
        __n128 v34 = (void *)a7[4];
        uint64_t v35 = a7[1];
        do
        {
          if ((v30 & 0xC000000000000001) != 0) {
            __n128 v36 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            __n128 v36 = *(id *)(v30 + 8 * v32 + 32);
          }
          __n128 v37 = v36;
          ++v32;
          uint64_t v70 = v36;
          sub_100193E0C(&v70, v35, v34, (uint64_t *)&v71, v18, v33);
        }
        while (v31 != v32);
LABEL_23:
        uint64_t v38 = swift_bridgeObjectRelease_n();
        unint64_t v39 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v69) + 0x248))(v38);
        unint64_t v40 = v39;
        if (v39 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
          uint64_t v42 = v68;
          if (!v41) {
            goto LABEL_32;
          }
        }
        else
        {
          uint64_t v41 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          uint64_t v42 = v68;
          if (!v41) {
            goto LABEL_32;
          }
        }
        if (v41 < 1)
        {
LABEL_56:
          __break(1u);
          goto LABEL_57;
        }
        uint64_t v43 = 0;
        uint64_t v44 = a7[2];
        do
        {
          if ((v40 & 0xC000000000000001) != 0) {
            BOOL v45 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            BOOL v45 = *(id *)(v40 + 8 * v43 + 32);
          }
          uint64_t v46 = v45;
          ++v43;
          uint64_t v70 = v45;
          sub_1001944C4(&v70, v44, v42, a9 + 16);
        }
        while (v41 != v43);
LABEL_32:
        swift_bridgeObjectRelease_n();
        sub_100012894(&qword_1004C6980);
        uint64_t v47 = swift_allocObject();
        *(_OWORD *)(v47 + 16) = xmmword_1003F8720;
        uint64_t v48 = (void *)a7[3];
        unint64_t v49 = v48[2];
        if (v49)
        {
          __n128 v50 = v71;
          if (v71[2])
          {
            __n128 v51 = (_OWORD *)v47;
            uint64_t v53 = v48[4];
            uint64_t v52 = v48[5];
            swift_bridgeObjectRetain();
            sub_1000E20D4(v53, v52);
            if ((v54 & 1) == 0)
            {
LABEL_57:
              swift_bridgeObjectRelease();
              __break(1u);
              goto LABEL_58;
            }
            swift_bridgeObjectRelease();
            SIMD3<>.init(_:)();
            _OWORD v51[2] = v55;
            if (v49 >= 2)
            {
              if (v50[2])
              {
                uint64_t v57 = v48[6];
                uint64_t v56 = v48[7];
                swift_bridgeObjectRetain();
                sub_1000E20D4(v57, v56);
                if ((v58 & 1) == 0)
                {
LABEL_58:
                  swift_bridgeObjectRelease();
                  __break(1u);
                  goto LABEL_59;
                }
                swift_bridgeObjectRelease();
                SIMD3<>.init(_:)();
                v51[3] = v59;
                if (v49 >= 3)
                {
                  if (v50[2])
                  {
                    uint64_t v61 = v48[8];
                    uint64_t v60 = v48[9];
                    swift_bridgeObjectRetain();
                    sub_1000E20D4(v61, v60);
                    if ((v62 & 1) == 0)
                    {
LABEL_59:
                      swift_bridgeObjectRelease();
                      __break(1u);
                      goto LABEL_60;
                    }
                    swift_bridgeObjectRelease();
                    SIMD3<>.init(_:)();
                    v51[4] = v63;
                    if (v49 >= 4)
                    {
                      if (v50[2])
                      {
                        uint64_t v65 = v48[10];
                        uint64_t v64 = v48[11];
                        swift_bridgeObjectRetain();
                        sub_1000E20D4(v65, v64);
                        if (v66)
                        {
                          swift_bridgeObjectRelease();
                          SIMD3<>.init(_:)();
                          v51[5] = v67;
                          sub_100189238((uint64_t)v51);
                          swift_setDeallocating();
                          swift_deallocClassInstance();
                          return swift_bridgeObjectRelease();
                        }
LABEL_60:
                        uint64_t result = swift_bridgeObjectRelease();
                        __break(1u);
                        return result;
                      }
                      goto LABEL_53;
                    }
LABEL_52:
                    __break(1u);
LABEL_53:
                    __break(1u);
                    goto LABEL_54;
                  }
LABEL_51:
                  __break(1u);
                  goto LABEL_52;
                }
LABEL_50:
                __break(1u);
                goto LABEL_51;
              }
LABEL_49:
              __break(1u);
              goto LABEL_50;
            }
LABEL_48:
            __break(1u);
            goto LABEL_49;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_48;
      }
    }
  }
  return result;
}

uint64_t sub_100191DF4(void **a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(uint64_t (**)(void))((swift_isaMask & **a1) + 0x250);
  uint64_t v8 = v7();
  uint64_t v9 = v8;
  uint64_t v50 = a4;
  if ((v8 & 0xC000000000000001) != 0)
  {
    uint64_t v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_22;
    }
    uint64_t v10 = *(id *)(v8 + 32);
  }
  __n128 v11 = v10;
  uint64_t v12 = swift_bridgeObjectRelease();
  uint64_t v48 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v11) + 0xB8))(v12);
  uint64_t v9 = v13;

  uint64_t v14 = v7();
  if ((v14 & 0xC000000000000001) != 0)
  {
LABEL_22:
    __n128 v15 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_24:
    uint64_t v24 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_12;
  }
  __n128 v15 = *(id *)(v14 + 32);
LABEL_7:
  uint64_t v16 = v15;
  uint64_t v17 = swift_bridgeObjectRelease();
  uint64_t v18 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v16) + 0xB8))(v17);
  uint64_t v20 = v19;

  swift_beginAccess();
  if (!*(void *)(*(void *)a3 + 16)) {
    goto LABEL_28;
  }
  sub_1000E20D4(v18, v20);
  if ((v21 & 1) == 0) {
    goto LABEL_28;
  }
  swift_endAccess();
  uint64_t v22 = swift_bridgeObjectRelease();
  uint64_t v23 = ((uint64_t (*)(uint64_t))v7)(v22);
  if ((v23 & 0xC000000000000001) != 0) {
    goto LABEL_24;
  }
  if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v24 = *(id *)(v23 + 32);
LABEL_12:
  uint64_t v25 = v24;
  uint64_t v26 = swift_bridgeObjectRelease();
  uint64_t v27 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v25) + 0xB8))(v26);
  uint64_t v29 = v28;

  swift_beginAccess();
  if (!*(void *)(*(void *)v50 + 16)) {
    goto LABEL_29;
  }
  sub_1000E20D4(v27, v29);
  if ((v30 & 1) == 0) {
    goto LABEL_29;
  }
  swift_endAccess();
  uint64_t v31 = swift_bridgeObjectRelease();
  uint64_t v32 = ((uint64_t (*)(uint64_t))v7)(v31);
  if ((v32 & 0xC000000000000001) != 0)
  {
LABEL_26:
    uint64_t v33 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_17;
  }
  if (!*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_28:
    swift_bridgeObjectRelease();
    swift_endAccess();
    __break(1u);
LABEL_29:
    swift_bridgeObjectRelease();
    swift_endAccess();
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v33 = *(id *)(v32 + 32);
LABEL_17:
  __n128 v34 = v33;
  uint64_t v35 = swift_bridgeObjectRelease();
  uint64_t v36 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v34) + 0xB8))(v35);
  uint64_t v38 = v37;

  swift_beginAccess();
  if (*(void *)(*(void *)a3 + 16))
  {
    sub_1000E20D4(v36, v38);
    if (v39)
    {
      swift_endAccess();
      swift_bridgeObjectRelease();
      - infix(_:_:)();
      * infix(_:_:)();
      + infix(_:_:)();
      float v41 = v40;
      float v43 = v42;
      float v45 = v44;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v49 = *a2;
      *a2 = 0x8000000000000000;
      sub_1000D5BE4(v48, v9, isUniquelyReferenced_nonNull_native, v41, v43, v45);
      *a2 = v49;
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
LABEL_30:
  swift_bridgeObjectRelease();
  uint64_t result = swift_endAccess();
  __break(1u);
  return result;
}

uint64_t sub_1001922CC(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  if (a1 && (a3 & 1) != 0)
  {
    int v5 = (void (*)(void *))a1;
    swift_retain();
    v5(a4);
    a1 = sub_100028914((uint64_t)v5);
  }
  uint64_t v6 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a4) + 0xD0))(a1);
  uint64_t v7 = (*(uint64_t (**)(void))((swift_isaMask & *a4) + 0xB8))();
  sub_10018F118(v6, v7, v8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001923C8()
{
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void **)(v0 + 48);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RectangleRenderer()
{
  return self;
}

uint64_t sub_100192458()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v15 = v1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(v1 + 64);
  int64_t v16 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (v4)
  {
    unint64_t v7 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v8 = v7 | (v6 << 6);
LABEL_20:
    uint64_t v12 = *(void *)(v1 + 56);
    if (*(void *)(v12 + 48 * v8) != 5)
    {
      uint64_t v13 = *(void **)(v12 + 48 * v8 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v14 = v13;
      [v14 removeFromParentNode];

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v9 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v9 >= v16) {
    return swift_release();
  }
  unint64_t v10 = *(void *)(v15 + 8 * v9);
  ++v6;
  if (v10) {
    goto LABEL_19;
  }
  int64_t v6 = v9 + 1;
  if (v9 + 1 >= v16) {
    return swift_release();
  }
  unint64_t v10 = *(void *)(v15 + 8 * v6);
  if (v10) {
    goto LABEL_19;
  }
  int64_t v6 = v9 + 2;
  if (v9 + 2 >= v16) {
    return swift_release();
  }
  unint64_t v10 = *(void *)(v15 + 8 * v6);
  if (v10)
  {
LABEL_19:
    unint64_t v4 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v6 << 6);
    goto LABEL_20;
  }
  int64_t v11 = v9 + 3;
  if (v11 >= v16) {
    return swift_release();
  }
  unint64_t v10 = *(void *)(v15 + 8 * v11);
  if (v10)
  {
    int64_t v6 = v11;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v6 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v6 >= v16) {
      return swift_release();
    }
    unint64_t v10 = *(void *)(v15 + 8 * v6);
    ++v11;
    if (v10) {
      goto LABEL_19;
    }
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_100192684()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v19 = v0;
  uint64_t v20 = v1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(v1 + 64);
  int64_t v21 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v22)
  {
    if (v4)
    {
      unint64_t v7 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      int64_t v22 = i;
      unint64_t v8 = v7 | (i << 6);
      goto LABEL_21;
    }
    int64_t v9 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v21) {
      return swift_release();
    }
    unint64_t v10 = *(void *)(v20 + 8 * v9);
    int64_t v11 = i + 1;
    if (!v10)
    {
      int64_t v11 = i + 2;
      if (i + 2 >= v21) {
        return swift_release();
      }
      unint64_t v10 = *(void *)(v20 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = i + 3;
        if (i + 3 >= v21) {
          return swift_release();
        }
        unint64_t v10 = *(void *)(v20 + 8 * v11);
        if (!v10) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v4 = (v10 - 1) & v10;
    int64_t v22 = v11;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_21:
    uint64_t v13 = *(void **)(*(void *)(v1 + 56) + 48 * v8 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v13;
    id v15 = [v14 parentNode];

    if (!v15)
    {
      int64_t v16 = *(void **)(v19 + 56);
      uint64_t v17 = v1;
      id v18 = v14;
      [v16 addChildNode:v18];

      uint64_t v1 = v17;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  uint64_t v12 = i + 4;
  if (i + 4 >= v21) {
    return swift_release();
  }
  unint64_t v10 = *(void *)(v20 + 8 * v12);
  if (v10)
  {
    int64_t v11 = i + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v11 >= v21) {
      return swift_release();
    }
    unint64_t v10 = *(void *)(v20 + 8 * v11);
    ++v12;
    if (v10) {
      goto LABEL_20;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1001928F4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10019292C()
{
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_1001929BC(uint64_t a1)
{
  return sub_1001917B0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 48), *(void *)(v1 + 56), (void *)(v1 + 64), *(void *)(v1 + 112), *(void *)(v1 + 120));
}

uint64_t sub_1001929F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100192A08()
{
  return swift_release();
}

uint64_t sub_100192A10()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100192A60()
{
  return sub_1001922CC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void **)(v0 + 40));
}

void (*sub_100192A70(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  int64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_100193024(v6);
  v6[10] = sub_100192C88(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_100192B1C;
}

void sub_100192B1C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);

  free(v1);
}

void (*sub_100192B90(double ***a1, double a2))(uint64_t a1)
{
  unint64_t v4 = (double **)malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = (double *)sub_100193060(v4);
  v4[9] = (double *)sub_100192E54(v4 + 4, isUniquelyReferenced_nonNull_native, a2);
  return sub_100192C28;
}

void sub_100192C28(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);

  free(v1);
}

void (*sub_100192C88(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  int v5 = v4;
  unint64_t v10 = (char *)malloc(0x58uLL);
  *a1 = v10;
  *((void *)v10 + 7) = a3;
  *((void *)v10 + 8) = v4;
  *((void *)v10 + 6) = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_1000E20D4(a2, a3);
  v10[80] = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      *((void *)v10 + 9) = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*v5 + 56) + 48 * v13;
        uint64_t v20 = *(void *)v19;
        long long v21 = *(_OWORD *)(v19 + 8);
        long long v22 = *(_OWORD *)(v19 + 24);
        uint64_t v23 = *(void *)(v19 + 40);
LABEL_12:
        *(void *)unint64_t v10 = v20;
        *(_OWORD *)(v10 + 8) = v21;
        *(_OWORD *)(v10 + 24) = v22;
        *((void *)v10 + 5) = v23;
        return sub_100192DFC;
      }
LABEL_11:
      uint64_t v20 = 0;
      uint64_t v23 = 0;
      long long v21 = 0uLL;
      long long v22 = 0uLL;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1000D87BC();
      goto LABEL_7;
    }
    sub_1000D2004(v16, a4 & 1);
    unint64_t v24 = sub_1000E20D4(a2, a3);
    if ((v17 & 1) == (v25 & 1))
    {
      unint64_t v13 = v24;
      *((void *)v10 + 9) = v24;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_100192DFC(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_100193090(*a1, *((unsigned char *)*a1 + 80), (uint64_t *)(*a1)[8], (*a1)[9], (*a1)[6], (*a1)[7]);
  sub_10016B178(*v1, v1[1], v1[2], v1[3], v1[4], (void *)v1[5]);

  free(v1);
}

void (*sub_100192E54(double **a1, char a2, double a3))(uint64_t **a1)
{
  unint64_t v4 = v3;
  unint64_t v8 = (double *)malloc(0x28uLL);
  *a1 = v8;
  *((void *)v8 + 2) = v3;
  v8[1] = a3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_1000E237C(a3);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a2 & 1) != 0)
    {
LABEL_7:
      *((void *)v8 + 3) = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *(void *)unint64_t v8 = v17;
        return sub_100192F90;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a2 & 1) == 0)
    {
      sub_1000D8F38();
      goto LABEL_7;
    }
    sub_1000D2F44(v14, a2 & 1);
    unint64_t v18 = sub_1000E237C(a3);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      *((void *)v8 + 3) = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_100192F90(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  char v3 = *((unsigned char *)*a1 + 32);
  if (v2)
  {
    unint64_t v4 = v1[3];
    int v5 = *(void **)v1[2];
    if (v3) {
      *(void *)(v5[7] + 8 * v4) = v2;
    }
    else {
      sub_1000D707C(v4, v2, v5, *((double *)v1 + 1));
    }
  }
  else if ((*a1)[4])
  {
    sub_1000A9AEC(v1[3], *(void *)v1[2]);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();

  free(v1);
}

uint64_t (*sub_100193024(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_100193054;
}

uint64_t sub_100193054(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t (*sub_100193060(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_100194A34;
}

void sub_100193090(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  BOOL v13 = (void *)a1[5];
  if (v8)
  {
    *(void *)&long long v16 = *a1;
    *((void *)&v16 + 1) = v8;
    *(void *)&long long v17 = v10;
    *((void *)&v17 + 1) = v11;
    *(void *)&long long v18 = v12;
    *((void *)&v18 + 1) = v13;
    if (a2)
    {
      uint64_t v14 = (_OWORD *)(*(void *)(*a3 + 56) + 48 * a4);
      long long v15 = v17;
      *uint64_t v14 = v16;
      v14[1] = v15;
      void v14[2] = v18;
    }
    else
    {
      sub_1000D6F70(a4, a5, a6, &v16, (void *)*a3);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_1000A9754(a4, *a3);
  }

  sub_100194910(v9, v8, v10, v11, v12, v13);
}

void sub_10019319C(uint64_t a1, void *a2)
{
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v23 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v8 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v7 << 6))
  {
    BOOL v13 = *(void **)(*(void *)(a1 + 56) + 8 * i);
    sub_10001C99C(0, (unint64_t *)&qword_1004C4568);
    id v14 = v13;
    if (static NSObject.== infix(_:_:)())
    {
LABEL_28:
      swift_release();
      return;
    }
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a2;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_1001949C0;
    *(void *)(v16 + 24) = v15;
    aBlock[4] = sub_100194A70;
    void aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100190FE4;
    aBlock[3] = &unk_1004911A8;
    long long v17 = _Block_copy(aBlock);
    id v18 = a2;
    swift_retain();
    swift_release();
    id v19 = [v14 childNodesPassingTest:v17];
    _Block_release(v17);
    LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v17)
    {
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    sub_10001C99C(0, &qword_1004C4028);
    unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_release();
    }
    swift_bridgeObjectRelease();
    if (v21 == 1) {
      goto LABEL_28;
    }

    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_31;
    }
    if (v10 >= v23) {
      goto LABEL_28;
    }
    unint64_t v11 = *(void *)(v22 + 8 * v10);
    ++v7;
    if (!v11)
    {
      int64_t v7 = v10 + 1;
      if (v10 + 1 >= v23) {
        goto LABEL_28;
      }
      unint64_t v11 = *(void *)(v22 + 8 * v7);
      if (!v11)
      {
        int64_t v7 = v10 + 2;
        if (v10 + 2 >= v23) {
          goto LABEL_28;
        }
        unint64_t v11 = *(void *)(v22 + 8 * v7);
        if (!v11)
        {
          int64_t v7 = v10 + 3;
          if (v10 + 3 >= v23) {
            goto LABEL_28;
          }
          unint64_t v11 = *(void *)(v22 + 8 * v7);
          if (!v11)
          {
            int64_t v12 = v10 + 4;
            if (v12 >= v23) {
              goto LABEL_28;
            }
            unint64_t v11 = *(void *)(v22 + 8 * v12);
            int64_t v7 = v12;
            if (!v11) {
              break;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v6 = (v11 - 1) & v11;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v23) {
      goto LABEL_28;
    }
    unint64_t v11 = *(void *)(v22 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_19;
    }
  }
LABEL_32:
  __break(1u);
}

void sub_100193538(uint64_t a1, void *a2)
{
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v23 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v8 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v7 << 6))
  {
    BOOL v13 = *(void **)(*(void *)(a1 + 56) + 8 * i);
    sub_10001C99C(0, (unint64_t *)&qword_1004C4568);
    id v14 = v13;
    if (static NSObject.== infix(_:_:)())
    {
LABEL_28:
      swift_release();
      return;
    }
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a2;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_1001949C0;
    *(void *)(v16 + 24) = v15;
    aBlock[4] = sub_100194A70;
    void aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100190FE4;
    aBlock[3] = &unk_100491130;
    long long v17 = _Block_copy(aBlock);
    id v18 = a2;
    swift_retain();
    swift_release();
    id v19 = [v14 childNodesPassingTest:v17];
    _Block_release(v17);
    LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v17)
    {
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    sub_10001C99C(0, &qword_1004C4028);
    unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_release();
    }
    swift_bridgeObjectRelease();
    if (v21 == 1) {
      goto LABEL_28;
    }

    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_31;
    }
    if (v10 >= v23) {
      goto LABEL_28;
    }
    unint64_t v11 = *(void *)(v22 + 8 * v10);
    ++v7;
    if (!v11)
    {
      int64_t v7 = v10 + 1;
      if (v10 + 1 >= v23) {
        goto LABEL_28;
      }
      unint64_t v11 = *(void *)(v22 + 8 * v7);
      if (!v11)
      {
        int64_t v7 = v10 + 2;
        if (v10 + 2 >= v23) {
          goto LABEL_28;
        }
        unint64_t v11 = *(void *)(v22 + 8 * v7);
        if (!v11)
        {
          int64_t v7 = v10 + 3;
          if (v10 + 3 >= v23) {
            goto LABEL_28;
          }
          unint64_t v11 = *(void *)(v22 + 8 * v7);
          if (!v11)
          {
            int64_t v12 = v10 + 4;
            if (v12 >= v23) {
              goto LABEL_28;
            }
            unint64_t v11 = *(void *)(v22 + 8 * v12);
            int64_t v7 = v12;
            if (!v11) {
              break;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v6 = (v11 - 1) & v11;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v23) {
      goto LABEL_28;
    }
    unint64_t v11 = *(void *)(v22 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_19;
    }
  }
LABEL_32:
  __break(1u);
}

void sub_1001938D4(uint64_t a1, void *a2)
{
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v23 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v8 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v7 << 6))
  {
    BOOL v13 = *(void **)(*(void *)(a1 + 56) + 8 * i);
    sub_10001C99C(0, (unint64_t *)&qword_1004C4568);
    id v14 = v13;
    if (static NSObject.== infix(_:_:)())
    {
LABEL_28:
      swift_release();
      return;
    }
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a2;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_1001949C0;
    *(void *)(v16 + 24) = v15;
    aBlock[4] = sub_100194A70;
    void aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100190FE4;
    aBlock[3] = &unk_1004910B8;
    long long v17 = _Block_copy(aBlock);
    id v18 = a2;
    swift_retain();
    swift_release();
    id v19 = [v14 childNodesPassingTest:v17];
    _Block_release(v17);
    LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v17)
    {
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    sub_10001C99C(0, &qword_1004C4028);
    unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_release();
    }
    swift_bridgeObjectRelease();
    if (v21 == 1) {
      goto LABEL_28;
    }

    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_31;
    }
    if (v10 >= v23) {
      goto LABEL_28;
    }
    unint64_t v11 = *(void *)(v22 + 8 * v10);
    ++v7;
    if (!v11)
    {
      int64_t v7 = v10 + 1;
      if (v10 + 1 >= v23) {
        goto LABEL_28;
      }
      unint64_t v11 = *(void *)(v22 + 8 * v7);
      if (!v11)
      {
        int64_t v7 = v10 + 2;
        if (v10 + 2 >= v23) {
          goto LABEL_28;
        }
        unint64_t v11 = *(void *)(v22 + 8 * v7);
        if (!v11)
        {
          int64_t v7 = v10 + 3;
          if (v10 + 3 >= v23) {
            goto LABEL_28;
          }
          unint64_t v11 = *(void *)(v22 + 8 * v7);
          if (!v11)
          {
            int64_t v12 = v10 + 4;
            if (v12 >= v23) {
              goto LABEL_28;
            }
            unint64_t v11 = *(void *)(v22 + 8 * v12);
            int64_t v7 = v12;
            if (!v11) {
              break;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v6 = (v11 - 1) & v11;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v23) {
      goto LABEL_28;
    }
    unint64_t v11 = *(void *)(v22 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_19;
    }
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_100193C70(void *a1)
{
  id v3 = [self standardUserDefaults];
  Defaults.hideRectangleSuggestions.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v5 = [v3 BOOLForKey:v4];

  *(unsigned char *)(v1 + 16) = v5;
  *(void *)(v1 + 24) = sub_1000E1424((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0;
  *(void *)(v1 + 48) = 0;
  id v6 = [objc_allocWithZone((Class)SCNNode) init];
  *(void *)(v1 + 56) = v6;
  id v7 = [objc_allocWithZone((Class)SCNNode) init];
  *(void *)(v1 + 64) = v7;
  id v8 = [objc_allocWithZone((Class)SCNNode) init];
  *(void *)(v1 + 72) = v8;
  *(void *)(v1 + 80) = a1;
  uint64_t v9 = self;
  id v10 = a1;
  [v9 begin];
  if ((v5 & 1) == 0) {
    [v8 addChildNode:v6];
  }
  [v8 addChildNode:v7];
  id v11 = [v10 rootNode];
  [v11 addChildNode:v8];

  [v9 commit];
  return v1;
}

void sub_100193E0C(void **a1, uint64_t a2, void *a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *a1;
  id v10 = *(uint64_t (**)(void))((swift_isaMask & **a1) + 0x250);
  uint64_t v11 = v10();
  if ((v11 & 0xC000000000000001) != 0)
  {
    int64_t v12 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_29;
    }
    int64_t v12 = *(id *)(v11 + 32);
  }
  BOOL v13 = v12;
  uint64_t v14 = swift_bridgeObjectRelease();
  uint64_t v15 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v13) + 0xB8))(v14);
  uint64_t v17 = v16;

  if (!a3[2]) {
    goto LABEL_31;
  }
  unint64_t v18 = sub_1000E20D4(v15, v17);
  if ((v19 & 1) == 0) {
    goto LABEL_31;
  }
  a3 = *(id *)(a3[7] + 8 * v18);
  uint64_t v20 = swift_bridgeObjectRelease();
  uint64_t v21 = ((uint64_t (*)(uint64_t))v10)(v20);
  if ((v21 & 0xC000000000000001) != 0)
  {
LABEL_29:
    int64_t v23 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    uint64_t v22 = a5;
    goto LABEL_9;
  }
  if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_31:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_32:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_33:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_34:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_35:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_36:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v22 = a5;
  int64_t v23 = *(id *)(v21 + 32);
LABEL_9:
  uint64_t v24 = swift_bridgeObjectRelease();
  uint64_t v25 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v23) + 0xB8))(v24);
  uint64_t v27 = v26;

  uint64_t v28 = *a4;
  if (!*(void *)(*a4 + 16)) {
    goto LABEL_32;
  }
  unint64_t v29 = sub_1000E20D4(v25, v27);
  if ((v30 & 1) == 0) {
    goto LABEL_32;
  }
  uint64_t v31 = (int *)(*(void *)(v28 + 56) + 12 * v29);
  int v32 = *v31;
  int v33 = v31[1];
  int v34 = v31[2];
  swift_bridgeObjectRelease();
  LODWORD(v35) = v32;
  LODWORD(v36) = v33;
  LODWORD(v37) = v34;
  [*(id *)((char *)a3 + OBJC_IVAR____TtC7Measure11PointRender_point) setWorldPosition:v35, v36, v37];
  LODWORD(v38) = v32;
  LODWORD(v39) = v33;
  LODWORD(v40) = v34;
  [*(id *)((char *)a3 + OBJC_IVAR____TtC7Measure11PointRender_pointPrime) setWorldPosition:v38, v39, v40];

  float v41 = *(uint64_t (**)(void))((swift_isaMask & *v9) + 0xB8);
  uint64_t v42 = v41();
  if (!*(void *)(a2 + 16) || (unint64_t v44 = sub_1000E20D4(v42, v43), (v45 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    return;
  }
  id v46 = *(id *)(*(void *)(a2 + 56) + 8 * v44);
  uint64_t v47 = swift_bridgeObjectRelease();
  uint64_t v48 = ((uint64_t (*)(uint64_t))v41)(v47);
  uint64_t v50 = v49;
  swift_beginAccess();
  if (!*(void *)(*(void *)v22 + 16)) {
    goto LABEL_33;
  }
  sub_1000E20D4(v48, v50);
  if ((v51 & 1) == 0) {
    goto LABEL_33;
  }
  swift_endAccess();
  uint64_t v52 = swift_bridgeObjectRelease();
  uint64_t v53 = ((uint64_t (*)(uint64_t))v41)(v52);
  uint64_t v55 = v54;
  swift_beginAccess();
  if (!*(void *)(*(void *)a6 + 16)) {
    goto LABEL_34;
  }
  sub_1000E20D4(v53, v55);
  if ((v56 & 1) == 0) {
    goto LABEL_34;
  }
  swift_endAccess();
  uint64_t v57 = swift_bridgeObjectRelease();
  uint64_t v58 = ((uint64_t (*)(uint64_t))v41)(v57);
  uint64_t v60 = v59;
  swift_beginAccess();
  if (!*(void *)(*(void *)v22 + 16)) {
    goto LABEL_35;
  }
  sub_1000E20D4(v58, v60);
  if ((v61 & 1) == 0) {
    goto LABEL_35;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  - infix(_:_:)();
  * infix(_:_:)();
  + infix(_:_:)();
  uint64_t v62 = SIMD3<>.init(_:)();
  float32x4_t v81 = v63;
  uint64_t v64 = ((uint64_t (*)(uint64_t))v41)(v62);
  uint64_t v66 = v65;
  swift_beginAccess();
  if (!*(void *)(*(void *)v22 + 16)) {
    goto LABEL_36;
  }
  sub_1000E20D4(v64, v66);
  if ((v67 & 1) == 0) {
    goto LABEL_36;
  }
  swift_endAccess();
  uint64_t v68 = swift_bridgeObjectRelease();
  uint64_t v69 = ((uint64_t (*)(uint64_t))v41)(v68);
  uint64_t v71 = v70;
  swift_beginAccess();
  if (*(void *)(*(void *)a6 + 16))
  {
    sub_1000E20D4(v69, v71);
    if (v72)
    {
      swift_endAccess();
      uint64_t v73 = swift_bridgeObjectRelease();
      uint64_t v74 = ((uint64_t (*)(uint64_t))v41)(v73);
      uint64_t v76 = v75;
      swift_beginAccess();
      if (*(void *)(*(void *)v22 + 16))
      {
        sub_1000E20D4(v74, v76);
        if (v77)
        {
          swift_endAccess();
          swift_bridgeObjectRelease();
          - infix(_:_:)();
          * infix(_:_:)();
          + infix(_:_:)();
          SIMD3<>.init(_:)();
          sub_1000F3860(v81, v78);

          return;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_37:
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_38:
  swift_bridgeObjectRelease();
  __break(1u);
}

void sub_1001944C4(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xB8))();
  uint64_t v9 = v8;
  if (!*(void *)(a2 + 16))
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v10 = v7;
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_1000E20D4(v10, v9);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    return;
  }
  id v13 = *(id *)(*(void *)(a2 + 56) + 8 * v11);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (!*(void *)(*(void *)a3 + 16))
  {
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  sub_1000E20D4(v10, v9);
  if ((v14 & 1) == 0)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_25;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (!*(void *)(*(void *)a4 + 16)) {
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  sub_1000E20D4(v10, v9);
  if ((v15 & 1) == 0)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_26;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (!*(void *)(*(void *)a3 + 16)) {
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  sub_1000E20D4(v10, v9);
  if ((v16 & 1) == 0)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_27;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  - infix(_:_:)();
  * infix(_:_:)();
  + infix(_:_:)();
  SIMD3<>.init(_:)();
  float32x4_t v22 = v17;
  swift_beginAccess();
  if (!*(void *)(*(void *)a3 + 16)) {
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  sub_1000E20D4(v10, v9);
  if ((v18 & 1) == 0)
  {
LABEL_27:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_28;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (!*(void *)(*(void *)a4 + 16)) {
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  sub_1000E20D4(v10, v9);
  if (v19)
  {
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    if (*(void *)(*(void *)a3 + 16))
    {
      swift_bridgeObjectRetain();
      sub_1000E20D4(v10, v9);
      if (v20)
      {
        swift_endAccess();
        swift_bridgeObjectRelease_n();
        - infix(_:_:)();
        * infix(_:_:)();
        + infix(_:_:)();
        SIMD3<>.init(_:)();
        sub_1000F3860(v22, v21);

        return;
      }
      goto LABEL_29;
    }
    goto LABEL_23;
  }
LABEL_28:
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_29:
  swift_bridgeObjectRelease();
  __break(1u);
}

void sub_100194910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v6 = a6;
  }
}

uint64_t sub_100194988()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001949C0(uint64_t a1, uint64_t a2)
{
  return sub_10018DFF4(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1001949C8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001949D8()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_100194A04()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100194A14()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100194A24()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t (*sub_100194A74())(const void *a1)
{
  uint64_t v1 = (uint64_t *)(v0 + qword_1004CEB90);
  uint64_t v2 = *(void *)(v0 + qword_1004CEB90);
  if (v2)
  {
    id v3 = *(uint64_t (**)(const void *))(v0 + qword_1004CEB90);
  }
  else
  {
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v5 = *v1;
    id v3 = sub_100197110;
    *uint64_t v1 = (uint64_t)sub_100197110;
    v1[1] = v4;
    swift_retain();
    sub_100028914(v5);
  }
  sub_10003FFC4(v2);
  return v3;
}

uint64_t sub_100194B30(const void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v3 = (void *)result;
    swift_retain();
    Synchronized.wrappedValue.getter();
    swift_release();
    swift_retain();
    swift_retain();
    Synchronized.wrappedValue.setter();
    swift_release();
    swift_release();
    type metadata accessor for RetainedFrame();
    uint64_t v4 = swift_allocObject();
    sub_100053000((uint64_t)a1);
    *(void *)(v4 + 16) = sub_1000A3850();
    memcpy((void *)(v4 + 32), a1, 0x200uLL);
    swift_retain();
    swift_retain();
    Synchronized.wrappedValue.setter();

    swift_release();
    return swift_release();
  }
  return result;
}

id sub_100194C60(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = &v3[qword_1004CEB90];
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  uint64_t v8 = qword_1004CEB98;
  sub_100012894(&qword_1004CEE60);
  swift_allocObject();
  uint64_t v9 = v3;
  *(void *)&v3[v8] = Synchronized.init(wrappedValue:)();
  uint64_t v10 = qword_1004CEBA0;
  ComputedCameraProperties.init()();
  memcpy(&v28[8], __src, 0x1E0uLL);
  v26[0] = 0;
  v26[1] = 0xBFF0000000000000;
  v26[2] = 0;
  memcpy(&v26[3], v28, 0x1E8uLL);
  type metadata accessor for RetainedFrame();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1000A3850();
  memcpy((void *)(v11 + 32), v26, 0x200uLL);
  uint64_t v25 = v11;
  sub_100012894(&qword_1004CEE68);
  swift_allocObject();
  *(void *)&v9[v10] = Synchronized.init(wrappedValue:)();
  uint64_t v12 = qword_1004CEBB8;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = sub_100012894(&qword_1004CEE70);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_1004F8630;
  char v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 272);
  swift_retain();
  *(void *)&v9[v12] = v16(KeyPath, v15);
  uint64_t v17 = qword_1004CEBC0;
  sub_100012894(&qword_1004CEE78);
  swift_getKeyPath();
  *(void *)&v9[v17] = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v18 = qword_1004CEBC8;
  sub_100012894((uint64_t *)&unk_1004CEE80);
  swift_getKeyPath();
  *(void *)&v9[v18] = MutableStateValue.__allocating_init(_:_:)();
  char v19 = &v9[qword_1004CEBD0];
  *(void *)char v19 = 0;
  *((void *)v19 + 1) = 0;
  v19[16] = 1;
  *(void *)&v9[qword_1004CEBD8] = 0;
  *(void *)&v9[qword_1004CEBA8] = a2;
  *(void *)&v9[qword_1004CEBB0] = a3;
  *(void *)&v9[qword_1004CEBE0] = a1;
  swift_retain();
  swift_retain();
  id v20 = a1;

  v24.receiver = v9;
  v24.super_class = ObjectType;
  id v21 = [super init];
  [v20 setDelegate:v21];

  swift_release();
  swift_release();
  return v21;
}

void sub_100194F50()
{
  id v1 = objc_allocWithZone(v0);
  sub_100194F70();
}

void sub_100194F70()
{
  id v1 = v0;
  swift_getObjectType();
  uint64_t v2 = &v0[qword_1004CEB90];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  uint64_t v3 = qword_1004CEB98;
  sub_100012894(&qword_1004CEE60);
  swift_allocObject();
  *(void *)&v0[v3] = Synchronized.init(wrappedValue:)();
  uint64_t v4 = qword_1004CEBA0;
  ComputedCameraProperties.init()();
  memcpy(&v16[8], __src, 0x1E0uLL);
  v14[0] = 0;
  v14[1] = 0xBFF0000000000000;
  void v14[2] = 0;
  memcpy(&v14[3], v16, 0x1E8uLL);
  type metadata accessor for RetainedFrame();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1000A3850();
  memcpy((void *)(v5 + 32), v14, 0x200uLL);
  sub_100012894(&qword_1004CEE68);
  swift_allocObject();
  *(void *)&v0[v4] = Synchronized.init(wrappedValue:)();
  uint64_t v6 = qword_1004CEBB8;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = sub_100012894(&qword_1004CEE70);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1004F8630;
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 272);
  swift_retain();
  *(void *)&v1[v6] = v10(KeyPath, v9);
  uint64_t v11 = qword_1004CEBC0;
  sub_100012894(&qword_1004CEE78);
  swift_getKeyPath();
  *(void *)&v1[v11] = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v12 = qword_1004CEBC8;
  sub_100012894((uint64_t *)&unk_1004CEE80);
  swift_getKeyPath();
  *(void *)&v1[v12] = MutableStateValue.__allocating_init(_:_:)();
  id v13 = &v1[qword_1004CEBD0];
  *(void *)id v13 = 0;
  *((void *)v13 + 1) = 0;
  unsigned char v13[16] = 1;
  *(void *)&v1[qword_1004CEBD8] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_1001951E8@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  uint64_t v5 = v31[0];
  id v6 = [*(id *)(v2 + qword_1004CEBE0) session];
  id v7 = [v6 currentFrame];

  sub_1000FFDC4(&v27);
  sub_100016F7C((uint64_t)&v27);
  double v8 = v28;
  if (v28 == a2)
  {
    sub_1000FFDC4(__src);
    swift_release();

    swift_release();
    uint64_t v9 = __src;
LABEL_3:
    memcpy(__dst, v9, sizeof(__dst));
    nullsub_1(__dst);
LABEL_4:
    uint64_t v10 = __dst;
LABEL_5:
    sub_100196F74((uint64_t)v10, (uint64_t)v31);
    return (id)sub_100196F74((uint64_t)v31, a1);
  }
  if (v5)
  {
    swift_retain();
    sub_1000FFDC4(__src);
    sub_100016F7C((uint64_t)__src);
    if (*(double *)&__src[1] == a2)
    {
      sub_1000FFDC4(v25);
      swift_release();

      swift_release_n();
      uint64_t v9 = v25;
      goto LABEL_3;
    }
    swift_release();
  }
  if (!v7)
  {
LABEL_18:
    swift_release();
    swift_release();
    sub_100197058((uint64_t)__dst);
    goto LABEL_4;
  }
  [v7 timestamp:v8];
  if (v12 != a2)
  {

    goto LABEL_18;
  }
  uint64_t v13 = qword_1004C3238;
  id result = v7;
  uint64_t v14 = result;
  if (v13 != -1) {
    id result = (id)swift_once();
  }
  if ((*(unsigned char *)(qword_1004F8AA8 + OBJC_IVAR____TtC7Measure12UIKitContext_sceneViewTraits + 80) & 1) == 0)
  {
    SIMD2<>.init(_:)();
    static ComputedCameraProperties.updateShared(_:viewportSize:)();

    sub_1000FFDC4(__dst);
    uint64_t v15 = __dst[0];
    id v16 = v14;
    [v16 timestamp];
    uint64_t v18 = v17;
    sub_100012894(&qword_1004C6288);
    uint64_t v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_beginAccess();
    swift_unknownObjectWeakAssign();
    id v20 = v16;
    uint64_t v21 = NSObject.hashValue.getter();

    *(void *)(v19 + 24) = v21;
    swift_release();
    id v22 = v20;
    static ComputedCameraProperties.shared(for:)();
    swift_release();

    id result = (id)swift_release();
    if (v15 != -1)
    {
      memcpy(&v24[8], v23, 0x1E0uLL);
      v25[0] = v15 + 1;
      v25[1] = v18;
      void v25[2] = v19;
      memcpy(v26, v24, sizeof(v26));
      nullsub_1(v25);
      uint64_t v10 = v25;
      goto LABEL_5;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10019555C()
{
}

void sub_10019558C()
{
  sub_100028914(*(void *)(v0 + qword_1004CEB90));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  id v1 = *(void **)(v0 + qword_1004CEBE0);
}

void sub_100195640(uint64_t a1)
{
  sub_100028914(*(void *)(a1 + qword_1004CEB90));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = *(void **)(a1 + qword_1004CEBE0);
}

uint64_t type metadata accessor for RenderLoop()
{
  uint64_t result = qword_1004CEC10;
  if (!qword_1004CEC10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10019574C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1001957D0()
{
  return type metadata accessor for RenderLoop();
}

void sub_1001957D8(uint64_t a1, double a2)
{
  uint64_t v5 = v2;
  ariadne_trace(_:_:_:_:_:)();
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  if (!qword_1004F7FE0)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (*(void *)(qword_1004F7FE0 + 32))
  {
    swift_retain();
    sub_100058F2C();
    swift_release();
  }
  [*(id *)(v2 + qword_1004CEBE0) lastFrameTimestamp];
  sub_1001951E8((uint64_t)v27, v8);
  sub_100196F74((uint64_t)v27, (uint64_t)v26);
  sub_100196F74((uint64_t)v27, (uint64_t)v29);
  if (sub_100196FDC((uint64_t)v29) == 1)
  {
    swift_retain();
    Synchronized.wrappedValue.getter();
    swift_release();
    sub_1000FFDC4(__src);
    swift_release();
    memcpy(__dst, __src, sizeof(__dst));
  }
  else
  {
    sub_100196F74((uint64_t)v26, (uint64_t)__dst);
  }
  memcpy(__src, __dst, sizeof(__src));
  uint64_t v9 = sub_1000A3850();
  if (!v9) {
    goto LABEL_15;
  }
  uint64_t v3 = (void *)v9;
  swift_retain();
  Synchronized.wrappedValue.getter();
  swift_release();
  if (!v28[0])
  {
LABEL_19:
    uint64_t v4 = 0;
    goto LABEL_20;
  }
  sub_1000FFDC4(v28);
  swift_release();
  uint64_t v4 = (void *)sub_1000A3850();
  sub_100016F7C((uint64_t)v28);
  if (!v4
    || (sub_10001C99C(0, (unint64_t *)&unk_1004CEE50),
        id v10 = v3,
        id v11 = v4,
        char v12 = static NSObject.== infix(_:_:)(),
        v10,
        v11,
        (v12 & 1) == 0))
  {
LABEL_20:
    if (qword_1004F7FE0)
    {
      if (*(void *)(qword_1004F7FE0 + 56))
      {
        type metadata accessor for WorldAnchor();
        swift_retain();
        static WorldAnchor.forEachAnchor(_:)();
        swift_release();
      }
      MeasureCore.shared.unsafeMutableAddressor();
      swift_retain();
      MeasureCore.updatePlanes(with:)((ARFrame)v3);
      swift_release();
      sub_100195DC4(v3, v4, (uint64_t)v24);
      uint64_t v15 = *(void (**)(unsigned char *))(**(void **)(v5 + qword_1004CEBC0) + 392);
      swift_retain();
      v15(v24);
      swift_release();
      if ([self jasperAvailable])
      {
        if (qword_1004C2D00 != -1) {
          swift_once();
        }
        if (byte_1004F8530 == 1) {
          sub_1001291A0((uint64_t)__src);
        }
      }
      uint64_t v16 = *(void *)(v5 + qword_1004CEBA8);
      uint64_t v17 = (uint64_t *)SnapType.standard.unsafeMutableAddressor();
      if (*(unsigned char *)(v16 + 544) == 3)
      {
        sub_1001160F0(*v17, __src);
        v24[0] = v18 & 1;
        swift_retain();
        Synchronized.wrappedValue.setter();
        swift_release();
      }
      sub_100119100();
      sub_10011A118();
      sub_100128D14();
      uint64_t v19 = *(uint64_t (**)(uint64_t))(**(void **)(v5 + qword_1004CEBC8) + 200);
      uint64_t v20 = swift_retain();
      uint64_t v21 = v19(v20);
      swift_release();
      uint64_t v22 = swift_allocObject();
      *(double *)(v22 + 16) = a2;
      *(void *)(v22 + 24) = a1;
      memcpy((void *)(v22 + 32), __src, 0x200uLL);
      int64_t v23 = *(void (**)(id *(*)(id *), uint64_t))(*(void *)v21 + 416);
      swift_unknownObjectRetain();
      sub_100053000((uint64_t)__dst);
      v23(sub_100197040, v22);

      swift_release();
      swift_release();

      sub_100016F7C((uint64_t)__dst);
      uint64_t v13 = qword_1004F7FE0;
      if (qword_1004F7FE0) {
        goto LABEL_31;
      }
LABEL_36:
      __break(1u);
      return;
    }
LABEL_35:

    __break(1u);
    goto LABEL_36;
  }
  ariadne_trace(_:_:_:_:_:)();

  sub_100016F7C((uint64_t)__dst);
  uint64_t v13 = qword_1004F7FE0;
  if (!qword_1004F7FE0)
  {
    __break(1u);
LABEL_15:
    ariadne_trace(_:_:_:_:_:)();
    if (qword_1004C2B50 != -1) {
      swift_once();
    }
    v14._object = (void *)0x8000000100429F70;
    v14._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
    Log.default(_:isPrivate:)(v14, 0);
    sub_100016F7C((uint64_t)__dst);
    uint64_t v13 = qword_1004F7FE0;
    if (qword_1004F7FE0) {
      goto LABEL_31;
    }
    __break(1u);
    goto LABEL_19;
  }
LABEL_31:
  if (*(void *)(v13 + 32))
  {
    swift_retain();
    sub_100058F54();
    swift_release();
  }
  ariadne_trace(_:_:_:_:_:)();
}

__n128 sub_100195DC4@<Q0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  void (*v8)(id *__return_ptr, uint64_t);
  uint64_t v9;
  float v10;
  char v11;
  float v12;
  BOOL v13;
  float v14;
  BOOL v15;
  id v16;
  long long v17;
  long long v18;
  long long v19;
  long long v20;
  id v21;
  __n128 v22;
  double v23;
  double v24;
  double v25;
  double v26;
  id v27;
  long long v28;
  float32x4_t v29;
  float32x4_t v30;
  float32x4_t *v31;
  float32x4_t v32;
  float32x4_t v33;
  float v34;
  void (*v35)(id *__return_ptr, uint64_t);
  uint64_t v36;
  id v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  __n128 result;
  long long v50;
  float32x4_t v51;
  __n128 v52;
  long long v53;
  long long v54;
  long long v55;
  long long v56;
  id v57[8];
  float v58;
  char v59;
  float v60;
  BOOL v61;
  float v62;
  BOOL v63;

  uint64_t v4 = v3;
  double v8 = *(void (**)(id *__return_ptr, uint64_t))(**(void **)(v3 + qword_1004CEBC0) + 144);
  uint64_t v9 = swift_retain();
  v8(v57, v9);
  swift_release();
  id v10 = v58;
  id v11 = v59;
  char v12 = v60;
  uint64_t v13 = v61;
  Swift::String v14 = v62;
  uint64_t v15 = v63;
  uint64_t v16 = [a1 camera];
  [v16 transform];
  uint64_t v55 = v18;
  char v56 = v17;
  uint64_t v53 = v20;
  uint64_t v54 = v19;

  uint64_t v21 = [a1 camera];
  [v21 eulerAngles];
  uint64_t v52 = v22;

  [a1 timestamp];
  if (a2)
  {
    objc_super v24 = v23;
    [a2 timestamp];
    uint64_t v26 = v25;
    if (vabdd_f64(v24, v25) > 2.22044605e-16)
    {
      uint64_t v27 = [a1 camera];
      [v27 transform];

      simd_float4x4.position.getter();
      uint64_t v50 = v28;
      simd_float4x4.forward.getter();
      *(float32x2_t *)v30.f32 = vadd_f32(*(float32x2_t *)&v50, vmul_f32(*(float32x2_t *)v29.f32, (float32x2_t)vdup_n_s32(0xBE4CCCCD)));
      v30.f32[2] = *((float *)&v50 + 2) + vmuls_lane_f32(-0.2, v29, 2);
      v30.i32[3] = 0;
      uint64_t v31 = (float32x4_t *)(v4 + qword_1004CEBD0);
      id v11 = *(unsigned char *)(v4 + qword_1004CEBD0 + 16);
      Swift::String v14 = 0.0;
      id v10 = 0.0;
      if ((v11 & 1) == 0)
      {
        int v32 = vsubq_f32(*v31, v30);
        int v33 = vmulq_f32(v32, v32);
        int v34 = v24 - v26;
        id v10 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v33, 2), vaddq_f32(v33, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v33.f32, 1))).f32[0])/ v34;
      }
      char v51 = v30;
      double v35 = *(void (**)(id *__return_ptr, uint64_t))(**(void **)(v4 + qword_1004CEBB8) + 144);
      double v36 = swift_retain();
      v35(v57, v36);
      swift_release();
      double v37 = v57[0];
      uint64_t v13 = v57[0] == 0;
      char v12 = 0.0;
      if (v57[0])
      {
        [v57[0] userAcceleration];
        double v39 = v38;
        [v37 userAcceleration];
        float v41 = v40;
        [v37 userAcceleration];
        char v12 = sqrt(v39 * v39 + v41 * v41 + v42 * v42);
        [v37 rotationRate];
        unint64_t v44 = v43;
        [v37 rotationRate];
        id v46 = v45;
        [v37 rotationRate];
        uint64_t v48 = v47;

        Swift::String v14 = sqrt(v44 * v44 + v46 * v46 + v48 * v48);
      }
      *uint64_t v31 = v51;
      v31[1].i8[0] = 0;
      uint64_t v15 = v13;
    }
  }
  *(_OWORD *)a3 = v56;
  *(_OWORD *)(a3 + 16) = v55;
  *(_OWORD *)(a3 + 32) = v54;
  *(_OWORD *)(a3 + 48) = v53;
  *(unsigned char *)(a3 + 64) = 0;
  *(float *)(a3 + 68) = v10;
  *(unsigned char *)(a3 + 72) = v11;
  uint64_t result = v52;
  *(__n128 *)(a3 + 80) = v52;
  *(unsigned char *)(a3 + 96) = 0;
  *(float *)(a3 + 100) = v12;
  *(unsigned char *)(a3 + 104) = v13;
  *(float *)(a3 + 108) = v14;
  *(unsigned char *)(a3 + 112) = v15;
  return result;
}

id *sub_10019613C(id *result, id a2, uint64_t a3, double a4)
{
  *(double *)uint64_t result = a4;
  uint64_t v4 = (char *)result[62];
  BOOL v5 = __CFADD__(v4, 1);
  id v6 = v4 + 1;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    double v8 = result;
    result[62] = v6;
    id v9 = [a2 pointOfView];
    id v10 = [v9 camera];

    v8[1] = v10;
    return (id *)memcpy(v8 + 2, (const void *)(a3 + 32), 0x1E0uLL);
  }
  return result;
}

void sub_100196498(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void (*a6)(id, id))
{
  swift_unknownObjectRetain();
  id v10 = a4;
  id v11 = a5;
  id v12 = a1;
  a6(v10, v11);
  swift_unknownObjectRelease();
}

void sub_1001965C4(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v10 = swift_dynamicCastObjCClass();
  if (v10)
  {
    id v11 = (void *)v10;
    uint64_t v12 = qword_1004C29D8;
    id v28 = a2;
    if (v12 != -1) {
      swift_once();
    }
    if (qword_1004F7FE0 && *(void *)(qword_1004F7FE0 + 48))
    {
      swift_retain();
      sub_1000583CC((uint64_t)v11, a1);
      swift_release();
    }
    if (qword_1004C2AF0 != -1) {
      swift_once();
    }
    v27[0] = qword_1004F8258;
    v27[1] = qword_1004F8250;
    v30._uint64_t countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(32);
    swift_bridgeObjectRelease();
    v30._uint64_t countAndFlagsBits = 0xD000000000000016;
    v30._object = (void *)0x8000000100429F50;
    uint64_t v13 = qword_1004CEBD8;
    uint64_t v29 = *(void *)(v3 + qword_1004CEBD8);
    v14._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    v15._uint64_t countAndFlagsBits = 8236;
    v15._object = (void *)0xE200000000000000;
    String.append(_:)(v15);
    id v16 = [v11 identifier];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v17 = UUID.uuidString.getter();
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v20._uint64_t countAndFlagsBits = v17;
    v20._object = v19;
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    v21._uint64_t countAndFlagsBits = 8236;
    v21._object = (void *)0xE200000000000000;
    String.append(_:)(v21);
    id v22 = [v11 geometry];
    ARPlaneGeometry.vertices.getter();

    sub_100012894((uint64_t *)&unk_1004CEDE0);
    v23._uint64_t countAndFlagsBits = Array.description.getter();
    String.append(_:)(v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Log.debug(_:isPrivate:)(v30, 0);
    swift_bridgeObjectRelease();

    uint64_t v24 = *(void *)(v3 + v13);
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      __break(1u);
    }
    else {
      *(void *)(v3 + v13) = v26;
    }
  }
}

uint64_t sub_1001968E8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (!result) {
    return result;
  }
  id v11 = (void *)result;
  id v36 = a2;
  id v12 = [a1 childNodes];
  sub_10001C99C(0, &qword_1004C4028);
  unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    Swift::String v14 = (void *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    Swift::String v14 = *(void **)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v35 = v6;
  if (!v14)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  if ((v13 & 0xC000000000000001) != 0)
  {
    id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_25;
    }
    id v15 = *(id *)(v13 + 32);
  }
  Swift::String v14 = v15;
  uint64_t result = swift_bridgeObjectRelease();
  if (qword_1004C29D8 != -1) {
LABEL_25:
  }
    uint64_t result = swift_once();
  if (!qword_1004F7FE0)
  {
    __break(1u);
    return result;
  }
  if (*(void *)(qword_1004F7FE0 + 48))
  {
    swift_retain();
    id v16 = [v14 geometry];
    if (v16)
    {
      uint64_t v17 = v16;
      self;
      uint64_t v18 = swift_dynamicCastObjCClass();
      if (v18)
      {
        uint64_t v19 = (void *)v18;
        Swift::String v20 = self;
        uint64_t v34 = v3;
        Swift::String v21 = v20;
        [v20 begin];
        id v22 = [v11 geometry];
        [v19 updateFromPlaneGeometry:v22];

        Swift::String v23 = v21;
        uint64_t v3 = v34;
        [v23 commit];
      }
      swift_release();

      goto LABEL_18;
    }
    swift_release();
  }

LABEL_18:
  if (qword_1004C2AF0 != -1) {
    swift_once();
  }
  v38._uint64_t countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease();
  v38._uint64_t countAndFlagsBits = 0xD000000000000018;
  v38._object = (void *)0x8000000100429F30;
  uint64_t v37 = *(void *)(v3 + qword_1004CEBD8);
  v24._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  v25._uint64_t countAndFlagsBits = 8236;
  v25._object = (void *)0xE200000000000000;
  String.append(_:)(v25);
  id v26 = [v11 identifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v27 = UUID.uuidString.getter();
  uint64_t v29 = v28;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v35);
  v30._uint64_t countAndFlagsBits = v27;
  v30._object = v29;
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  v31._uint64_t countAndFlagsBits = 8236;
  v31._object = (void *)0xE200000000000000;
  String.append(_:)(v31);
  id v32 = [v11 geometry];
  ARPlaneGeometry.vertices.getter();

  sub_100012894((uint64_t *)&unk_1004CEDE0);
  v33._uint64_t countAndFlagsBits = Array.description.getter();
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Log.debug(_:isPrivate:)(v38, 0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100196D84(void *a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  BOOL v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (result)
  {
    uint64_t v7 = (void *)result;
    uint64_t v8 = qword_1004C2AF0;
    id v9 = a1;
    if (v8 != -1) {
      swift_once();
    }
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease();
    v15._uint64_t countAndFlagsBits = 0xD000000000000017;
    v15._object = (void *)0x8000000100429F10;
    id v10 = [v7 identifier];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v11 = UUID.uuidString.getter();
    unint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v14._uint64_t countAndFlagsBits = v11;
    v14._object = v13;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    Log.debug(_:isPrivate:)(v15, 0);

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100196F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012894(&qword_1004CCA30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100196FDC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100197000()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 544, 15);
}

id *sub_100197040(id *a1)
{
  return sub_10019613C(a1, *(id *)(v1 + 24), v1 + 32, *(double *)(v1 + 16));
}

uint64_t sub_100197050(uint64_t a1)
{
  return sub_10020C770(a1);
}

_OWORD *sub_100197058(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 1;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(void *)(a1 + 504) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  uint64_t result = (_OWORD *)(a1 + 24);
  result[15] = 0u;
  result[16] = 0u;
  result[17] = 0u;
  result[18] = 0u;
  result[19] = 0u;
  result[20] = 0u;
  result[21] = 0u;
  result[22] = 0u;
  result[23] = 0u;
  result[24] = 0u;
  result[25] = 0u;
  result[26] = 0u;
  result[27] = 0u;
  result[28] = 0u;
  result[29] = 0u;
  return result;
}

uint64_t sub_1001970D8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100197110(const void *a1)
{
  return sub_100194B30(a1);
}

uint64_t sub_100197118(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MeasurementHistoryItem();
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000297B8(a1, (uint64_t)v6);
  sub_100026A04((uint64_t)&v6[*(int *)(v4 + 36)], (uint64_t)v43);
  sub_100026A04((uint64_t)v43, (uint64_t)v44);
  if (sub_100026A60((uint64_t)v44))
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v7 = sub_100026A6C((uint64_t)v44);
    id v8 = [self currentTraitCollection];
    id v9 = [v8 preferredContentSizeCategory];

    LOBYTE(v8) = UIContentSizeCategory.isAccessibilityCategory.getter();
    if (v8)
    {
      id v10 = *(void **)(v1 + OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_accessibleMeasureContent);
      uint64_t v11 = *((void *)v6 + 2);
      id v12 = (void *)*((void *)v6 + 3);
      uint64_t v13 = *(void *)(v7 + 48);
      uint64_t v42 = *(void *)(v7 + 40);
      uint64_t v14 = *(void *)(v7 + 56);
      uint64_t v15 = *(void *)(v7 + 64);
      long long v41 = *(_OWORD *)(v7 + 80);
      uint64_t v17 = *(void *)(v7 + 96);
      uint64_t v16 = *(void *)(v7 + 104);
      id v18 = v10;
      sub_10014DA7C(v11, (uint64_t)v12, v11, v12, v42, v13, v14, v15, v41, *((uint64_t *)&v41 + 1), v17, v16);
    }
    else
    {
      uint64_t v19 = *(void *)(v1 + OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_measureContent);
      uint64_t v20 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_measureContent;
      uint64_t v37 = OBJC_IVAR____TtC7Measure19BaseLineHistoryCell_measureContent;
      id v21 = *(id *)(v19 + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_title);
      NSString v22 = String._bridgeToObjectiveC()();
      [v21 setText:v22];

      Swift::String v23 = *(void **)(*(void *)(v1 + v20) + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_mainUnits);
      uint64_t v24 = *(void *)v7;
      uint64_t v25 = *(void *)(v7 + 8);
      uint64_t v26 = *(void *)(v7 + 40);
      uint64_t v27 = *(void *)(v7 + 48);
      uint64_t v42 = *(void *)(v7 + 56);
      uint64_t v28 = *(void *)(v7 + 64);
      uint64_t v40 = *(void *)(v7 + 80);
      *(void *)&long long v41 = v28;
      uint64_t v29 = *(void *)(v7 + 88);
      uint64_t v30 = *(void *)(v7 + 96);
      uint64_t v31 = *(void *)(v7 + 104);
      uint64_t v38 = v30;
      uint64_t v39 = v29;
      id v32 = v23;
      NSString v33 = String._bridgeToObjectiveC()();
      [v32 setText:v33];

      uint64_t v34 = *(void **)(*(void *)(v1 + v37)
                     + OBJC_IVAR____TtC7Measure37MeasureTableViewCellCommonContentView_secondaryLabels);
      if (v24 == v26 && v25 == v27) {
        char v35 = 1;
      }
      else {
        char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      id v18 = v34;
      sub_10015E68C(v26, v27, v42, (NSString)v41, v40, v39, v38, v31, v35 & 1);
    }

    return sub_10002981C((uint64_t)v6);
  }
  return result;
}

id sub_10019752C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LineHistoryCell();
  return [super dealloc];
}

uint64_t type metadata accessor for LineHistoryCell()
{
  return self;
}

void sub_10019758C()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure14ClearAllButton_separator;
  type metadata accessor for SeparatorView();
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 init];

  if (qword_1004C27D8 != -1) {
    swift_once();
  }
  double v4 = *(double *)&qword_1004F7DF0;
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  char v5 = static UIDevice.isIPhone()();
  uint64_t v6 = self;
  uint64_t v7 = &selRef_systemBackgroundColor;
  if ((v5 & 1) == 0) {
    uint64_t v7 = &selRef_clearColor;
  }
  id v8 = [v6 *v7];
  if (qword_1004C2ED0 != -1) {
    swift_once();
  }
  id v9 = (id)qword_1004F86B0;
  char v10 = static UIDevice.isIPhone()();
  double v11 = 0.0;
  if (v10)
  {
    if (qword_1004C2840 != -1) {
      swift_once();
    }
    double v11 = *(double *)&qword_1004F7E70;
  }
  id v12 = sub_100043284(v8, v9, 0.0, 0.0, 375.0, v4, v11);
  aBlock[4] = sub_100197A88;
  void aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001CEF98;
  aBlock[3] = &unk_100491240;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v12;
  [v14 setPointerStyleProvider:v13];
  _Block_release(v13);

  uint64_t v15 = self;
  id v16 = v14;
  id v17 = [v15 mainBundle];
  v36._object = (void *)0xE000000000000000;
  v18._uint64_t countAndFlagsBits = 0x4C415F5241454C43;
  v18._object = (void *)0xE90000000000004CLL;
  v19._uint64_t countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v36._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v36);

  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v16 setTitle:v20 forState:0];

  id v21 = self;
  id v22 = v16;
  id v23 = [v21 systemRedColor];
  [v22 setTitleColor:v23 forState:0];

  uint64_t v24 = (char *)v22;
  id v25 = [v21 systemRedColor];
  [v24 setTitleColor:v25 forState:1];

  id v26 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleHeadline];
  id v27 = [v24 titleLabel];
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = self;
    id v30 = [v29 preferredFontForTextStyle:UIFontTextStyleHeadline];
    id v31 = [v30 fontDescriptor];

    id v32 = [v31 fontDescriptorWithSymbolicTraits:2];
    if (!v32)
    {
      __break(1u);
      return;
    }
    id v33 = [v29 fontWithDescriptor:v32 size:0.0];

    id v34 = [v26 scaledFontForFont:v33 maximumPointSize:28.0];
    [v28 setFont:v34];
  }
  if ((static UIDevice.isIPhone()() & 1) == 0)
  {
    [v24 addSubview:*(void *)&v24[OBJC_IVAR____TtC7Measure14ClearAllButton_separator]];
    sub_100197D0C();
  }
}

uint64_t sub_100197A88(uint64_t a1)
{
  uint64_t v2 = sub_100012894(&qword_1004C78A0);
  __chkstk_darwin(v2 - 8);
  double v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UIPointerEffect();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  double v11 = (uint64_t *)((char *)&v21 - v10);
  id v12 = (int *)sub_100012894(&qword_1004CEF48);
  uint64_t v13 = (char *)v11 + v12[12];
  uint64_t v14 = v12[16];
  uint64_t v15 = v12[20];
  void *v11 = [objc_allocWithZone((Class)UITargetedPreview) initWithView:a1];
  uint64_t v16 = enum case for UIPointerEffect.TintMode.overlay(_:);
  uint64_t v17 = type metadata accessor for UIPointerEffect.TintMode();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v13, v16, v17);
  *((unsigned char *)v11 + v14) = 0;
  *((unsigned char *)v11 + v15) = 0;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v11, enum case for UIPointerEffect.hover(_:), v5);
  sub_10001C99C(0, (unint64_t *)&qword_1004C78A8);
  (*(void (**)(char *, void *, uint64_t))(v6 + 16))(v9, v11, v5);
  uint64_t v18 = type metadata accessor for UIPointerShape();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
  uint64_t v19 = UIPointerStyle.init(effect:shape:)();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v11, v5);
  return v19;
}

void sub_100197D0C()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC7Measure14ClearAllButton_separator];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v2 = self;
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1003F9450;
  id v4 = [v1 topAnchor];
  id v5 = [v0 topAnchor];
  id v6 = [v4 constraintEqualToAnchor:v5 constant:-0.25];

  *(void *)(v3 + 32) = v6;
  id v7 = [v1 widthAnchor];
  id v8 = [v0 widthAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8];

  *(void *)(v3 + 40) = v9;
  id v10 = [v1 heightAnchor];
  id v11 = [v10 constraintEqualToConstant:0.5];

  *(void *)(v3 + 48) = v11;
  id v12 = [v1 centerXAnchor];
  id v13 = [v0 centerXAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13];

  *(void *)(v3 + 56) = v14;
  specialized Array._endMutation()();
  sub_10001C99C(0, (unint64_t *)&qword_1004CE690);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

void sub_1001980CC()
{
}

uint64_t type metadata accessor for ClearAllButton()
{
  return self;
}

uint64_t sub_100198110(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100198120()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for PillToPlatterAnimationState()
{
  return &type metadata for PillToPlatterAnimationState;
}

uint64_t sub_100198138()
{
  uint64_t result = Contexts.UIKit.init()();
  qword_1004F8490 = result;
  return result;
}

id sub_100198158@<X0>(void *a1@<X8>)
{
  if (qword_1004C2C80 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1004F8490;
  *a1 = qword_1004F8490;

  return v2;
}

unint64_t sub_1001981C4(uint64_t a1)
{
  unint64_t result = sub_1001981EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001981EC()
{
  unint64_t result = qword_1004CEF78;
  if (!qword_1004CEF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CEF78);
  }
  return result;
}

void destroy for RenderState(uint64_t a1)
{
}

void *initializeWithCopy for RenderState(void *a1, void *a2)
{
  id v4 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v4;
  memcpy(a1 + 2, a2 + 2, 0x1E0uLL);
  a1[62] = a2[62];
  id v5 = v4;
  return a1;
}

uint64_t assignWithCopy for RenderState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  id v4 = *(void **)(a1 + 8);
  id v5 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v5;
  id v6 = v5;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_DWORD *)(a1 + 384) = *(_DWORD *)(a2 + 384);
  *(_DWORD *)(a1 + 388) = *(_DWORD *)(a2 + 388);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  return a1;
}

void *initializeWithTake for RenderState(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1F8uLL);
}

uint64_t assignWithTake for RenderState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  id v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  long long v9 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v9;
  long long v10 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v10;
  long long v11 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v11;
  long long v12 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v12;
  long long v13 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v13;
  long long v14 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v14;
  long long v15 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v15;
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  long long v16 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v16;
  long long v17 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v17;
  long long v18 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v18;
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  return a1;
}

uint64_t getEnumTagSinglePayload for RenderState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 504)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RenderState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 504) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 504) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RenderState()
{
  return &type metadata for RenderState;
}

id sub_100198600()
{
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  id result = (id)*((void *)&xmmword_1004F8000 + 1);
  if (*((void *)&xmmword_1004F8000 + 1))
  {
    id v1 = (id)*((void *)&xmmword_1004F8000 + 1);
    qword_1004F8498 = Contexts.PrivateQueue.init(_:)();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100198680@<X0>(void *a1@<X8>)
{
  if (qword_1004C2C88 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1004F8498;
  *a1 = qword_1004F8498;

  return v2;
}

BOOL sub_1001986EC(void *__src, const void *a2)
{
  memcpy(v4, __src, 0x1F8uLL);
  memcpy(__dst, a2, 0x1F8uLL);
  return sub_1001987C0((uint64_t)v4, (uint64_t)__dst);
}

unint64_t sub_100198744(uint64_t a1)
{
  unint64_t result = sub_10019876C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10019876C()
{
  unint64_t result = qword_1004CEFA8;
  if (!qword_1004CEFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CEFA8);
  }
  return result;
}

BOOL sub_1001987C0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    return 0;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (!v4) {
      return 0;
    }
    sub_1001988F0();
    sub_1001988C4(a2);
    sub_1001988C4(a1);
    char v5 = static NSObject.== infix(_:_:)();
    sub_10003FFD4(a2);
    sub_10003FFD4(a1);
    if ((v5 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (v4)
    {
      sub_10003FFD4(a1);
      return 0;
    }
    sub_1001988C4(a2);
  }
  memcpy(__dst, (const void *)(a1 + 16), sizeof(__dst));
  memcpy(v7, (const void *)(a2 + 16), sizeof(v7));
  if (static ComputedCameraProperties.__derived_struct_equals(_:_:)()) {
    return *(void *)(a1 + 496) == *(void *)(a2 + 496);
  }
  return 0;
}

uint64_t sub_1001988C4(uint64_t a1)
{
  id v2 = *(id *)(a1 + 8);
  return a1;
}

unint64_t sub_1001988F0()
{
  unint64_t result = qword_1004CEFB0;
  if (!qword_1004CEFB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1004CEFB0);
  }
  return result;
}

uint64_t sub_100198930()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  *char v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    id v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                               + OBJC_IVAR____TtC7Measure17CardContainerView_backgroundBlur), "contentView"));
    id v9 = [v8 layer];
    [v8 bounds];
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    id v14 = [self mainScreen];
    [v14 scale];
    uint64_t v16 = v15;

    long long v17 = (void *)swift_allocObject();
    void v17[2] = v11;
    v17[3] = v13;
    v17[4] = v16;
    v17[5] = v9;
    sub_100012894(&qword_1004C9500);
    swift_allocObject();
    uint64_t v18 = Future.init(_:)();

    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100198B58(void *a1)
{
  id v3 = [objc_allocWithZone((Class)UIView) init];
  uint64_t v4 = OBJC_IVAR____TtC7Measure17CardContainerView_darkeningView;
  char v5 = *(void **)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_darkeningView];
  *(void *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_darkeningView] = v3;

  char v6 = *(void **)&v1[v4];
  if (!v6)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v7 = qword_1004C2ED8;
  id v8 = v6;
  if (v7 != -1) {
    swift_once();
  }
  [v8 setBackgroundColor:qword_1004F86B8];

  id v9 = *(void **)&v1[v4];
  if (!v9) {
    goto LABEL_21;
  }
  [v9 setUserInteractionEnabled:0];
  uint64_t v10 = *(void **)&v1[v4];
  if (!v10)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  [v10 setAlpha:0.0];
  uint64_t v11 = *(void **)&v1[v4];
  if (!v11)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v12 = *(void *)&v1[v4];
  if (!v12)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  [v1 insertSubview:v12 belowSubview:*(void *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_backdropView]];
  uint64_t v13 = *(void **)&v1[v4];
  if (v13)
  {
    double left = UIEdgeInsetsZero.left;
    double bottom = UIEdgeInsetsZero.bottom;
    double right = UIEdgeInsetsZero.right;
    id v17 = v13;
    unint64_t v18 = sub_10014CEBC(a1, UIEdgeInsetsZero.top, left, bottom, right);
    unint64_t v19 = v18;
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      if (v20) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v20 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v20)
      {
LABEL_11:
        if (v20 >= 1)
        {
          for (uint64_t i = 0; i != v20; ++i)
          {
            if ((v19 & 0xC000000000000001) != 0) {
              id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v22 = *(id *)(v19 + 8 * i + 32);
            }
            id v23 = v22;
            [v22 setActive:1];
          }
          goto LABEL_18;
        }
        __break(1u);
        goto LABEL_20;
      }
    }
LABEL_18:

    swift_bridgeObjectRelease_n();
    return;
  }
LABEL_25:
  __break(1u);
}

double sub_100198D94()
{
  return sub_100198DBC();
}

double sub_100198DA8()
{
  return sub_100198DBC();
}

double sub_100198DBC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100198E28()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration__maxHeight;
  uint64_t v2 = sub_100012894(&qword_1004CF228);
  id v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration__minHeight, v2);

  return swift_deallocClassInstance();
}

void sub_100198EFC()
{
  qword_1004CEFC0 = 0x404A000000000000;
}

double sub_100198F0C()
{
  if (qword_1004C2C90 != -1) {
    swift_once();
  }
  double result = -*(double *)&qword_1004CEFC0;
  __asm { FMOV            V1.2D, #16.0 }
  xmmword_1004CEFC8 = _Q1;
  *(double *)&qword_1004CEFD8 = -*(double *)&qword_1004CEFC0;
  qword_1004CEFE0 = 0xC030000000000000;
  return result;
}

void sub_100198F78()
{
  qword_1004CEFE8 = 0x4030000000000000;
}

id sub_100198F88(void *a1, void *a2, uint64_t a3)
{
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  uint64_t v42 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  __chkstk_darwin(v4);
  char v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = OBJC_IVAR____TtC7Measure17CardContainerView_draggableView;
  id v10 = objc_allocWithZone((Class)UIView);
  uint64_t v11 = v3;
  *(void *)&v3[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC7Measure17CardContainerView_titleView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)type metadata accessor for CardTitleView()) init];
  uint64_t v13 = OBJC_IVAR____TtC7Measure17CardContainerView_copyCustomButton;
  id v14 = objc_allocWithZone((Class)type metadata accessor for PlatterCopyButton());
  sub_1001CF038();
  *(void *)&v11[v13] = v15;
  swift_unknownObjectUnownedInit();
  *(void *)&v11[OBJC_IVAR____TtC7Measure17CardContainerView_internalSpatialPlatter + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v11[OBJC_IVAR____TtC7Measure17CardContainerView_clearButton] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Measure17CardContainerView_darkeningView] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketTopConstraint] = 0;
  uint64_t v16 = OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackTopSeparatorView;
  type metadata accessor for SeparatorView();
  *(void *)&v11[v16] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  v11[OBJC_IVAR____TtC7Measure17CardContainerView_shouldScrollviewBeAccountedByCardController] = 0;
  uint64_t v17 = OBJC_IVAR____TtC7Measure17CardContainerView_scrollViewFooterView;
  *(void *)&v11[v17] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v18 = OBJC_IVAR____TtC7Measure17CardContainerView_contentView;
  *(void *)&v11[v18] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v19 = OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView;
  *(void *)&v11[v19] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v20 = OBJC_IVAR____TtC7Measure17CardContainerView_grabberView;
  *(void *)&v11[v20] = [objc_allocWithZone((Class)type metadata accessor for GrabberView()) init];
  uint64_t v21 = OBJC_IVAR____TtC7Measure17CardContainerView_contentScrollView;
  *(void *)&v11[v21] = [objc_allocWithZone((Class)UIScrollView) init];
  uint64_t v22 = OBJC_IVAR____TtC7Measure17CardContainerView_backgroundBlur;
  id v23 = [self effectWithStyle:9];
  id v24 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v23];

  *(void *)&v11[v22] = v24;
  uint64_t v25 = OBJC_IVAR____TtC7Measure17CardContainerView_internalDraggableView;
  *(void *)&v11[v25] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v26 = OBJC_IVAR____TtC7Measure17CardContainerView_shadowView;
  type metadata accessor for PlatterShadowView();
  *(void *)&v11[v26] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v27 = OBJC_IVAR____TtC7Measure17CardContainerView_backdropView;
  *(void *)&v11[v27] = [objc_allocWithZone((Class)_UIVisualEffectBackdropView) init];
  uint64_t v28 = OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView;
  *(void *)&v11[v28] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v11[OBJC_IVAR____TtC7Measure17CardContainerView_scrollViewFooterViewHeightConstraint] = 0;
  uint64_t v29 = OBJC_IVAR____TtC7Measure17CardContainerView_workQ;
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  static DispatchQoS.userInitiated.getter();
  char v45 = _swiftEmptyArrayStorage;
  sub_10019B6E0((unint64_t *)&qword_1004C6B50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100012894(&qword_1004CF220);
  sub_10003FD50((unint64_t *)&qword_1004C6B60, &qword_1004CF220);
  id v30 = v40;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v38 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v39);
  *(void *)&v11[v29] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v32 = v41;
  id v31 = v42;
  v11[OBJC_IVAR____TtC7Measure17CardContainerView_didSetupScrollViewFooterHeight] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Measure17CardContainerView_actualContentView] = v31;
  *(void *)&v11[OBJC_IVAR____TtC7Measure17CardContainerView_configuration] = v32;
  id v33 = v31;
  swift_retain();

  v44.receiver = v11;
  v44.super_class = ObjectType;
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  swift_unknownObjectUnownedAssign();
  id v35 = v34;
  sub_100199538();
  sub_100199B54();

  swift_release();
  return v35;
}

void sub_100199538()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  id v3 = [v2 clearColor];
  [v1 setBackgroundColor:v3];

  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_backdropView];
  [v1 addSubview:v4];
  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_draggableView];
  id v6 = [v2 clearColor];
  [v5 setBackgroundColor:v6];

  [v1 addSubview:v5];
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_internalDraggableView];
  id v8 = [v2 clearColor];
  [v7 setBackgroundColor:v8];

  [v7 setClipsToBounds:1];
  id v9 = [v7 layer];
  if (qword_1004C27F8 != -1) {
    swift_once();
  }
  [v9 setCornerRadius:*(double *)&qword_1004F7E10];

  id v10 = [v7 layer];
  [v10 setCornerCurve:kCACornerCurveContinuous];

  [v4 setRenderMode:1];
  [v5 addSubview:*(void *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_shadowView]];
  [v5 addSubview:v7];
  uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_backgroundBlur];
  NSString v12 = String._bridgeToObjectiveC()();
  [v11 _setGroupName:v12];

  [v11 _setCaptureView:v4];
  [v7 addSubview:v11];
  uint64_t v13 = OBJC_IVAR____TtC7Measure17CardContainerView_scrollViewFooterView;
  id v14 = *(id *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_scrollViewFooterView];
  id v15 = [v2 clearColor];
  [v14 setBackgroundColor:v15];

  uint64_t v16 = *(void **)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_contentView];
  [v16 addSubview:*(void *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_actualContentView]];
  [v16 addSubview:*(void *)&v1[v13]];
  uint64_t v17 = *(void *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_titleView];
  [*(id *)(v17 + OBJC_IVAR____TtC7Measure13CardTitleView_title) setUserInteractionEnabled:1];
  id v18 = [v11 contentView];
  [v18 addSubview:v17];

  id v19 = [v11 contentView];
  uint64_t v20 = *(void **)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_contentScrollView];
  [v19 addSubview:v20];

  [v20 addSubview:v16];
  [v20 setScrollEnabled:0];
  uint64_t v21 = *(void **)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView];
  [v21 setAxis:1];
  [v21 addArrangedSubview:*(void *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_copyCustomButton]];
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if (static UIDevice.isIPhone()())
  {
    uint64_t v22 = *(void **)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView];
    id v23 = [v2 clearColor];
    [v22 setBackgroundColor:v23];

    id v24 = [v11 contentView];
    [v24 addSubview:v22];

    [v22 addSubview:v21];
    uint64_t v25 = self;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v1;
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = sub_10019B760;
    *(void *)(v27 + 24) = v26;
    aBlock[4] = sub_100039980;
    void aBlock[5] = v27;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000FA194;
    aBlock[3] = &unk_100491418;
    uint64_t v28 = _Block_copy(aBlock);
    uint64_t v29 = v1;
    swift_retain();
    swift_release();
    [(id)v25 performWithoutAnimation:v28];
    _Block_release(v28);
    LOBYTE(v25) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v25)
    {
      __break(1u);
    }
    else
    {
      [v22 addSubview:*(void *)&v29[OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackTopSeparatorView]];
      swift_release();
    }
  }
  else
  {
    id v30 = [v11 contentView];
    [v30 addSubview:v21];
  }
}

void sub_100199B54()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_titleView];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_grabberView] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = *(void **)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_contentScrollView];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v124 = *(id *)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_contentView];
  [v124 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v121 = *(id *)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView];
  [v121 setTranslatesAutoresizingMaskIntoConstraints:0];
  int v118 = *(void **)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_internalDraggableView];
  [v118 setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_actualContentView] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_backgroundBlur];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_shadowView] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_backdropView] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_draggableView];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v116 = *(id *)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView];
  [v116 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v115 = OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackTopSeparatorView;
  [*(id *)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackTopSeparatorView] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v0[OBJC_IVAR____TtC7Measure17CardContainerView_scrollViewFooterView] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v6 = [v4 contentView];
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1003FAEA0;
  id v8 = [v2 topAnchor];
  id v9 = [v6 topAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  *(void *)(v7 + 32) = v10;
  id v11 = [v2 leadingAnchor];
  id v12 = [v6 leadingAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  *(void *)(v7 + 40) = v13;
  id v14 = [v2 trailingAnchor];
  id v15 = [v6 trailingAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  *(void *)(v7 + 48) = v16;
  id v17 = [v3 topAnchor];
  id v18 = [v2 bottomAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  *(void *)(v7 + 56) = v19;
  id v20 = [v3 leadingAnchor];
  id v21 = [v6 leadingAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(v7 + 64) = v22;
  id v23 = [v3 trailingAnchor];
  id v122 = v6;
  id v24 = [v6 trailingAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  *(void *)(v7 + 72) = v25;
  id v26 = [v5 bottomAnchor];
  id v27 = [v1 bottomAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  *(void *)(v7 + 80) = v28;
  id v29 = [v5 leadingAnchor];
  id v30 = [v1 leadingAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  *(void *)(v7 + 88) = v31;
  uint64_t v117 = v5;
  id v32 = [v5 trailingAnchor];
  id v33 = [v1 trailingAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  *(void *)(v7 + 96) = v34;
  unint64_t v126 = v7;
  specialized Array._endMutation()();
  unint64_t v123 = v7;
  id v35 = [v124 centerYAnchor];
  id v36 = [v3 centerYAnchor];
  id v37 = [v35 constraintEqualToAnchor:v36];

  LODWORD(v38) = 1132068864;
  [v37 setPriority:v38];
  id v39 = [v124 bottomAnchor];
  id v40 = [v3 bottomAnchor];
  id v41 = [v39 constraintEqualToAnchor:v40];

  LODWORD(v42) = 1132068864;
  [v41 setPriority:v42];
  id v43 = [v124 topAnchor];
  id v44 = [v3 topAnchor];
  id v45 = [v43 constraintEqualToAnchor:v44];

  id v46 = v41;
  id v47 = [v124 leadingAnchor];
  id v48 = [v3 leadingAnchor];
  id v119 = [v47 constraintEqualToAnchor:v48];

  id v49 = [v124 trailingAnchor];
  id v50 = [v3 trailingAnchor];
  id v51 = [v49 constraintEqualToAnchor:v50];

  id v52 = [v124 centerXAnchor];
  id v53 = [v3 centerXAnchor];
  id v54 = [v52 constraintEqualToAnchor:v53];

  if (v123 >> 62)
  {
    id v114 = v37;
    swift_bridgeObjectRetain();
    uint64_t v55 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v55 = *(void *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v56 = v37;
  }
  if (__OFADD__(v55, 6))
  {
    __break(1u);
  }
  else
  {
    sub_100089F90(v55 + 6);
    specialized Array._endMutation()();
    id v45 = v45;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_5;
    }
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_5:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v57 = v46;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v58 = v119;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v59 = v51;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v60 = v54;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v61 = v37;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  int v120 = v57;
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  unint64_t v65 = sub_10014CEBC(v124, UIEdgeInsetsZero.top, left, bottom, right);
  sub_100122408(v65);
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if (static UIDevice.isIPhone()())
  {
    unint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1003FAEB0;
    id v67 = [v116 bottomAnchor];
    uint64_t v68 = v122;
    id v69 = [v122 bottomAnchor];
    id v70 = [v67 constraintEqualToAnchor:v69];

    *(void *)(inited + 32) = v70;
    id v71 = [v116 leadingAnchor];
    id v72 = [v122 leadingAnchor];
    id v73 = [v71 constraintEqualToAnchor:v72];

    *(void *)(inited + 40) = v73;
    id v74 = [v116 trailingAnchor];
    id v75 = [v122 trailingAnchor];
    id v76 = [v74 constraintEqualToAnchor:v75];

    *(void *)(inited + 48) = v76;
    id v77 = [v3 bottomAnchor];
    id v78 = [v116 topAnchor];
    id v79 = [v77 constraintEqualToAnchor:v78];

    *(void *)(inited + 56) = v79;
    id v80 = [*(id *)&v1[v115] topAnchor];
    id v81 = [v116 topAnchor];
    id v82 = [v80 constraintEqualToAnchor:v81 constant:-0.25];

    *(void *)(inited + 64) = v82;
    id v83 = [*(id *)&v1[v115] widthAnchor];
    id v84 = [v1 widthAnchor];
    id v85 = [v83 constraintEqualToAnchor:v84];

    *(void *)(inited + 72) = v85;
    id v86 = [*(id *)&v1[v115] heightAnchor];
    id v87 = [v86 constraintEqualToConstant:0.33];

    *(void *)(inited + 80) = v87;
    id v88 = [*(id *)&v1[v115] centerXAnchor];
    id v89 = [v1 centerXAnchor];
    id v90 = [v88 constraintEqualToAnchor:v89];

    *(void *)(inited + 88) = v90;
    specialized Array._endMutation()();
    sub_100122408(inited);
    if (qword_1004C2C98 != -1) {
      swift_once();
    }
    unint64_t v91 = sub_10014CEBC(v116, *(double *)&xmmword_1004CEFC8, *((double *)&xmmword_1004CEFC8 + 1), *(double *)&qword_1004CEFD8, *(double *)&qword_1004CEFE0);
    sub_100122408(v91);
    goto LABEL_30;
  }
  uint64_t v92 = &selRef_replaySensorDidFinishReplayingData;
  id v93 = [v121 bottomAnchor];
  uint64_t v68 = v122;
  id v94 = [v122 bottomAnchor];
  id v125 = [v93 constraintEqualToAnchor:v94];

  id v95 = [v121 leadingAnchor];
  id v96 = [v122 leadingAnchor];
  id v97 = [v95 constraintEqualToAnchor:v96];

  id v98 = [v121 trailingAnchor];
  id v99 = [v122 trailingAnchor];
  id v100 = [v98 constraintEqualToAnchor:v99];

  id v101 = [v3 bottomAnchor];
  id v102 = [v121 topAnchor];
  id v103 = [v101 constraintEqualToAnchor:v102];

  if (v126 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v104 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v104 = *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v104, 4))
  {
    __break(1u);
    goto LABEL_36;
  }
  sub_100089F90(v104 + 4);
  specialized Array._endMutation()();
  uint64_t v92 = (char **)v125;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_36:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v105 = v97;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v106 = v100;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v107 = v103;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

LABEL_30:
  unint64_t v108 = sub_10014CEBC(v117, UIEdgeInsetsZero.top, left, bottom, right);
  sub_100122408(v108);
  unint64_t v109 = sub_10014CEBC(v1, UIEdgeInsetsZero.top, left, bottom, right);
  sub_100122408(v109);
  unint64_t v110 = sub_10014CEBC(v117, UIEdgeInsetsZero.top, left, bottom, right);
  sub_100122408(v110);
  unint64_t v111 = sub_10014CEBC(v118, UIEdgeInsetsZero.top, left, bottom, right);
  sub_100122408(v111);
  int v112 = self;
  sub_10001C99C(0, (unint64_t *)&qword_1004CE690);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v112 activateConstraints:isa];
}

id sub_10019AD68(uint64_t a1)
{
  id result = *(id *)(a1 + OBJC_IVAR____TtC7Measure17CardContainerView_darkeningView);
  if (result) {
    return [result setAlpha:];
  }
  __break(1u);
  return result;
}

void sub_10019AD88(uint64_t a1)
{
  id v1 = *(id *)(a1 + OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackTopSeparatorView);
  sub_10005C2F8(0);
}

uint64_t sub_10019ADE4(uint64_t a1, uint64_t a2, void *a3, double a4, double a5, double a6)
{
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for DispatchQoS();
  uint64_t v16 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  id v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = a2;
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  swift_retain();
  id v20 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v21 = swift_allocObject();
  *(double *)(v21 + 16) = a4;
  *(double *)(v21 + 24) = a5;
  *(double *)(v21 + 32) = a6;
  *(void *)(v21 + 40) = sub_10017E960;
  *(void *)(v21 + 48) = v19;
  *(void *)(v21 + 56) = a3;
  aBlock[4] = sub_10019B6A4;
  void aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_1004913A0;
  id v22 = _Block_copy(aBlock);
  id v23 = a3;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10019B6E0((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_10003FD50((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v26);
}

void sub_10019B118(void (*a1)(UIImage *, uint64_t), double a2, double a3, CGFloat a4, uint64_t a5, void *a6)
{
  UIGraphicsBeginImageContextWithOptions(*(CGSize *)&a2, 0, a4);
  id v8 = UIGraphicsGetCurrentContext();
  if (v8)
  {
    uint64_t v13 = v8;
    [a6 renderInContext:];
    id v9 = UIGraphicsGetImageFromCurrentImageContext();
    if (v9)
    {
      id v10 = v9;
      uint64_t v12 = v9;
      a1(v10, 0);

      id v11 = v12;
    }
    else
    {
      a1((UIImage *)1, 1);
      id v11 = v13;
    }
  }
  else
  {
    a1(0, 1);
  }
}

id sub_10019B208(double a1, double a2)
{
  id v3 = v2;
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if (static UIDevice.isIPhone()()) {
    id v6 = &OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView;
  }
  else {
    id v6 = &OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView;
  }
  uint64_t v7 = *(void **)&v2[*v6];
  [v3 convertPoint:*(void *)&v3[*v6] toCoordinateSpace:a1, a2];
  return [v7 pointInside:0];
}

uint64_t type metadata accessor for CardContainerView()
{
  return self;
}

uint64_t sub_10019B498()
{
  return type metadata accessor for CardContainerView.Configuration();
}

uint64_t type metadata accessor for CardContainerView.Configuration()
{
  uint64_t result = qword_1004CF178;
  if (!qword_1004CF178) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10019B4EC()
{
  sub_10019B58C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10019B58C()
{
  if (!qword_1004CF188)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1004CF188);
    }
  }
}

uint64_t sub_10019B5E4()
{
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10019B61C(uint64_t a1, uint64_t a2)
{
  return sub_10019ADE4(a1, a2, *(void **)(v2 + 40), *(double *)(v2 + 16), *(double *)(v2 + 24), *(double *)(v2 + 32));
}

uint64_t sub_10019B62C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10019B664()
{
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_10019B6A4()
{
  sub_10019B118(*(void (**)(UIImage *, uint64_t))(v0 + 40), *(double *)(v0 + 16), *(double *)(v0 + 24), *(CGFloat *)(v0 + 32), *(void *)(v0 + 48), *(void **)(v0 + 56));
}

uint64_t sub_10019B6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10019B6C8()
{
  return swift_release();
}

uint64_t sub_10019B6E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10019B728()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10019B760()
{
  sub_10019AD88(*(void *)(v0 + 16));
}

uint64_t sub_10019B768()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10019B778(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = OBJC_IVAR____TtC7Measure17CardContainerView_clearButton;
  if (*(void *)(a1 + OBJC_IVAR____TtC7Measure17CardContainerView_clearButton)) {
    return;
  }
  id v5 = objc_allocWithZone((Class)type metadata accessor for ClearAllButton());
  sub_10019758C();
  id v6 = *(void **)(a1 + v2);
  *(void *)(a1 + v2) = v7;

  if (!*(void *)(a1 + v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  id v8 = *(void **)(a1 + OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView);
  [v8 addArrangedSubview:];
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if (static UIDevice.isIPhone()())
  {
    if (qword_1004C2CA0 != -1) {
      swift_once();
    }
    [v8 setCustomSpacing:*(void *)(a1 + OBJC_IVAR____TtC7Measure17CardContainerView_copyCustomButton) afterView:*(double *)&qword_1004CEFE8];
    id v9 = *(char **)(a1 + OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView);
  }
  else
  {
    id v9 = *(char **)(a1 + OBJC_IVAR____TtC7Measure17CardContainerView_copyCustomButton);
    *(void *)&v9[OBJC_IVAR____TtC7Measure31ButtonWithCustomBackgroundColor_radius] = 0;
  }
  [v9 setNeedsLayout];
  id v10 = *(void **)(a1 + v2);
  if (!v10) {
    goto LABEL_13;
  }
  swift_unknownObjectWeakAssign();

  [v10 addTarget:a2 action:"clearAll" forControlEvents:64];
}

void sub_10019B914()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = OBJC_IVAR____TtC7Measure17CardContainerView_draggableView;
  *(void *)&v1[v7] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v8 = OBJC_IVAR____TtC7Measure17CardContainerView_titleView;
  *(void *)&v1[v8] = [objc_allocWithZone((Class)type metadata accessor for CardTitleView()) init];
  uint64_t v9 = OBJC_IVAR____TtC7Measure17CardContainerView_copyCustomButton;
  id v10 = objc_allocWithZone((Class)type metadata accessor for PlatterCopyButton());
  sub_1001CF038();
  *(void *)&v1[v9] = v11;
  swift_unknownObjectUnownedInit();
  *(void *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_internalSpatialPlatter + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_clearButton] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_darkeningView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketTopConstraint] = 0;
  uint64_t v12 = OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackTopSeparatorView;
  type metadata accessor for SeparatorView();
  *(void *)&v1[v12] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  v1[OBJC_IVAR____TtC7Measure17CardContainerView_shouldScrollviewBeAccountedByCardController] = 0;
  uint64_t v13 = OBJC_IVAR____TtC7Measure17CardContainerView_scrollViewFooterView;
  *(void *)&v1[v13] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v14 = OBJC_IVAR____TtC7Measure17CardContainerView_contentView;
  *(void *)&v1[v14] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v15 = OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackView;
  *(void *)&v1[v15] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v16 = OBJC_IVAR____TtC7Measure17CardContainerView_grabberView;
  *(void *)&v1[v16] = [objc_allocWithZone((Class)type metadata accessor for GrabberView()) init];
  uint64_t v17 = OBJC_IVAR____TtC7Measure17CardContainerView_contentScrollView;
  *(void *)&v1[v17] = [objc_allocWithZone((Class)UIScrollView) init];
  uint64_t v18 = OBJC_IVAR____TtC7Measure17CardContainerView_backgroundBlur;
  id v19 = [self effectWithStyle:9];
  id v20 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v19];

  *(void *)&v1[v18] = v20;
  uint64_t v21 = OBJC_IVAR____TtC7Measure17CardContainerView_internalDraggableView;
  *(void *)&v1[v21] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v22 = OBJC_IVAR____TtC7Measure17CardContainerView_shadowView;
  type metadata accessor for PlatterShadowView();
  *(void *)&v1[v22] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v23 = OBJC_IVAR____TtC7Measure17CardContainerView_backdropView;
  *(void *)&v1[v23] = [objc_allocWithZone((Class)_UIVisualEffectBackdropView) init];
  uint64_t v24 = OBJC_IVAR____TtC7Measure17CardContainerView_magicPocketView;
  *(void *)&v1[v24] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v1[OBJC_IVAR____TtC7Measure17CardContainerView_scrollViewFooterViewHeightConstraint] = 0;
  uint64_t v25 = OBJC_IVAR____TtC7Measure17CardContainerView_workQ;
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  static DispatchQoS.userInitiated.getter();
  id v29 = _swiftEmptyArrayStorage;
  sub_10019B6E0((unint64_t *)&qword_1004C6B50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100012894(&qword_1004CF220);
  sub_10003FD50((unint64_t *)&qword_1004C6B60, &qword_1004CF220);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v28);
  *(void *)&v1[v25] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v1[OBJC_IVAR____TtC7Measure17CardContainerView_didSetupScrollViewFooterHeight] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

unsigned char *storeEnumTagSinglePayload for CardContainerView.BackgroundAsUIImageError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10019BEF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardContainerView.BackgroundAsUIImageError()
{
  return &type metadata for CardContainerView.BackgroundAsUIImageError;
}

unint64_t sub_10019BF2C()
{
  unint64_t result = qword_1004CF230;
  if (!qword_1004CF230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CF230);
  }
  return result;
}

double *sub_10019BF88(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  int v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return v3;
  }
  uint64_t v13 = _swiftEmptyArrayStorage;
  unint64_t result = sub_1000BBE54(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        type metadata accessor for MeasureObject();
        swift_dynamicCast();
        int v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000BBE54(0, *((void *)v3 + 2) + 1, 1);
          int v3 = v13;
        }
        unint64_t v7 = *((void *)v3 + 2);
        unint64_t v6 = *((void *)v3 + 3);
        if (v7 >= v6 >> 1)
        {
          sub_1000BBE54((double *)(v6 > 1), v7 + 1, 1);
          int v3 = v13;
        }
        *((void *)v3 + 2) = v7 + 1;
        sub_100027938(v12, &v3[4 * v7 + 4]);
      }
    }
    else
    {
      uint64_t v8 = (id *)(a1 + 32);
      type metadata accessor for MeasureObject();
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        int v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000BBE54(0, *((void *)v3 + 2) + 1, 1);
          int v3 = v13;
        }
        unint64_t v11 = *((void *)v3 + 2);
        unint64_t v10 = *((void *)v3 + 3);
        if (v11 >= v10 >> 1)
        {
          sub_1000BBE54((double *)(v10 > 1), v11 + 1, 1);
          int v3 = v13;
        }
        *((void *)v3 + 2) = v11 + 1;
        sub_100027938(v12, &v3[4 * v11 + 4]);
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

void *sub_10019C1BC(uint64_t a1)
{
  return sub_10019C1FC(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_1000BBE74, &qword_1004CF350);
}

void *sub_10019C1DC(uint64_t a1)
{
  return sub_10019C1FC(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_1000BBE9C, &qword_1004CF358);
}

void *sub_10019C1FC(uint64_t a1, void (*a2)(BOOL, uint64_t, uint64_t), uint64_t *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    a2(0, v3, 0);
    uint64_t v7 = a1 + 48;
    do
    {
      sub_100012894(&qword_1004CF348);
      sub_100012894(a3);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a2(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1) {
        a2(v8 > 1, v9 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v9 + 1;
      unint64_t v10 = &_swiftEmptyArrayStorage[4 * v9];
      v10[4] = v12;
      *(_OWORD *)(v10 + 5) = v13;
      v10[7] = v14;
      v7 += 32;
      --v3;
    }
    while (v3);
  }
  return _swiftEmptyArrayStorage;
}

double *sub_10019C358(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 8;
      Double._bridgeToObjectiveC()();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

double *sub_10019C400(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    unint64_t v9 = _swiftEmptyArrayStorage;
    sub_1000BBE54(0, v1, 0);
    uint64_t v4 = a1 + 32;
    type metadata accessor for CATransform3D(0);
    do
    {
      swift_dynamicCast();
      uint64_t v2 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000BBE54(0, *((void *)v2 + 2) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *((void *)v2 + 2);
      unint64_t v5 = *((void *)v2 + 3);
      if (v6 >= v5 >> 1)
      {
        sub_1000BBE54((double *)(v5 > 1), v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *((void *)v2 + 2) = v6 + 1;
      sub_100027938(&v8, &v2[4 * v6 + 4]);
      v4 += 128;
      --v1;
    }
    while (v1);
  }
  return v2;
}

id sub_10019C550(void *a1, void *a2, void *a3, void *a4)
{
  unint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = OBJC_IVAR____TtC7Measure15ReticleAnimator__reticlePulseState;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v11 = sub_100012894((uint64_t *)&unk_1004CF330);
  uint64_t v12 = qword_1004C2E30;
  long long v13 = v5;
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_1004F8630;
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 272);
  swift_retain();
  *(void *)&v13[v9] = v15(KeyPath, v14);
  uint64_t v16 = &v13[OBJC_IVAR____TtC7Measure15ReticleAnimator_snapAnimationKey];
  *(void *)uint64_t v16 = 0xD000000000000015;
  *((void *)v16 + 1) = 0x800000010042A510;
  uint64_t v17 = &v13[OBJC_IVAR____TtC7Measure15ReticleAnimator_unsnapAnimationKey];
  *(void *)uint64_t v17 = 0xD000000000000017;
  *((void *)v17 + 1) = 0x800000010042A530;
  uint64_t v18 = &v13[OBJC_IVAR____TtC7Measure15ReticleAnimator_goodStateAnimationKey];
  *(void *)uint64_t v18 = 0xD000000000000013;
  *((void *)v18 + 1) = 0x800000010042A550;
  uint64_t v19 = OBJC_IVAR____TtC7Measure15ReticleAnimator_continueAnimation;
  NSString v20 = String._bridgeToObjectiveC()();
  uint64_t v21 = self;
  id v22 = [v21 animationWithKeyPath:v20];

  *(void *)&v13[v19] = v22;
  uint64_t v23 = OBJC_IVAR____TtC7Measure15ReticleAnimator_snapPointAnimation;
  NSString v24 = String._bridgeToObjectiveC()();
  uint64_t v25 = self;
  id v26 = [v25 animationWithKeyPath:v24];

  *(void *)&v13[v23] = v26;
  uint64_t v27 = OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation;
  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = [v25 animationWithKeyPath:v28];

  *(void *)&v13[v27] = v29;
  uint64_t v30 = OBJC_IVAR____TtC7Measure15ReticleAnimator_idlePulsateAnimation;
  NSString v31 = String._bridgeToObjectiveC()();
  id v32 = [v21 animationWithKeyPath:v31];

  *(void *)&v13[v30] = v32;
  uint64_t v33 = OBJC_IVAR____TtC7Measure15ReticleAnimator_scaleOutAnimation;
  NSString v34 = String._bridgeToObjectiveC()();
  id v35 = [v25 animationWithKeyPath:v34];

  *(void *)&v13[v33] = v35;
  *(void *)&v13[OBJC_IVAR____TtC7Measure15ReticleAnimator_reticleShapeLayer] = a1;
  *(void *)&v13[OBJC_IVAR____TtC7Measure15ReticleAnimator_snapPointLayer] = a4;
  *(void *)&v13[OBJC_IVAR____TtC7Measure15ReticleAnimator_pulsateLayer] = a2;
  *(void *)&v13[OBJC_IVAR____TtC7Measure15ReticleAnimator_dropLayer] = a3;
  id v36 = a1;
  id v37 = a4;
  id v38 = a2;
  id v39 = a3;

  v44.receiver = v13;
  v44.super_class = ObjectType;
  [super init];
  sub_10019C8F4();

  return v40;
}

id sub_10019C8F4()
{
  if (qword_1004C3118 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1004F8920;
  uint64_t v2 = *(void *)(qword_1004F8920 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v4 = _swiftEmptyArrayStorage;
    do
    {
      CATransform3DMakeScale(&v59, *(CGFloat *)(v1 + 8 * v3 + 32), *(CGFloat *)(v1 + 8 * v3 + 32), 1.0);
      CGFloat m11 = v59.m11;
      CGFloat m12 = v59.m12;
      CGFloat m13 = v59.m13;
      CGFloat m14 = v59.m14;
      CGFloat m21 = v59.m21;
      CGFloat m22 = v59.m22;
      CGFloat m23 = v59.m23;
      CGFloat m24 = v59.m24;
      CGFloat m32 = v59.m32;
      CGFloat m31 = v59.m31;
      CGFloat m34 = v59.m34;
      CGFloat m33 = v59.m33;
      CGFloat m42 = v59.m42;
      CGFloat m41 = v59.m41;
      CGFloat m44 = v59.m44;
      CGFloat m43 = v59.m43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_10006F964(0, *((void *)v4 + 2) + 1, 1, (uint64_t)v4);
      }
      unint64_t v14 = *((void *)v4 + 2);
      unint64_t v13 = *((void *)v4 + 3);
      if (v14 >= v13 >> 1) {
        uint64_t v4 = sub_10006F964((double *)(v13 > 1), v14 + 1, 1, (uint64_t)v4);
      }
      ++v3;
      *((void *)v4 + 2) = v14 + 1;
      uint64_t v15 = &v4[16 * v14];
      v15[4] = m11;
      v15[5] = m12;
      v15[6] = m13;
      v15[7] = m14;
      v15[8] = m21;
      v15[9] = m22;
      v15[10] = m23;
      v15[11] = m24;
      v15[12] = m31;
      v15[13] = m32;
      v15[14] = m33;
      v15[15] = m34;
      v15[16] = m41;
      v15[17] = m42;
      v15[18] = m43;
      v15[19] = m44;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = _swiftEmptyArrayStorage;
  }
  uint64_t v16 = *(void **)(v0 + OBJC_IVAR____TtC7Measure15ReticleAnimator_continueAnimation);
  if (qword_1004C3110 != -1) {
    swift_once();
  }
  sub_10019C358(qword_1004F8918);
  sub_10001C99C(0, (unint64_t *)&qword_1004D0F00);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v18 = &selRef_labelNodeWithText_;
  [v16 setKeyTimes:isa];

  sub_10019C400((uint64_t)v4);
  swift_bridgeObjectRelease();
  Class v19 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v16 setValues:v19];

  [v16 setDuration:1.0];
  uint64_t v20 = qword_1004F8920;
  uint64_t v21 = *(void *)(qword_1004F8920 + 16);
  if (v21)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    uint64_t v23 = _swiftEmptyArrayStorage;
    do
    {
      CATransform3DMakeScale(&v59, *(CGFloat *)(v20 + 8 * v22 + 32), *(CGFloat *)(v20 + 8 * v22 + 32), 1.0);
      CGFloat v24 = v59.m11;
      CGFloat v25 = v59.m12;
      CGFloat v26 = v59.m13;
      CGFloat v27 = v59.m14;
      CGFloat v28 = v59.m21;
      CGFloat v29 = v59.m22;
      CGFloat v30 = v59.m23;
      CGFloat v31 = v59.m24;
      CGFloat v56 = v59.m32;
      CGFloat v58 = v59.m31;
      CGFloat v52 = v59.m34;
      CGFloat v54 = v59.m33;
      CGFloat v48 = v59.m42;
      CGFloat v50 = v59.m41;
      CGFloat v44 = v59.m44;
      CGFloat v46 = v59.m43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v23 = sub_10006F964(0, *((void *)v23 + 2) + 1, 1, (uint64_t)v23);
      }
      unint64_t v33 = *((void *)v23 + 2);
      unint64_t v32 = *((void *)v23 + 3);
      if (v33 >= v32 >> 1) {
        uint64_t v23 = sub_10006F964((double *)(v32 > 1), v33 + 1, 1, (uint64_t)v23);
      }
      ++v22;
      *((void *)v23 + 2) = v33 + 1;
      NSString v34 = &v23[16 * v33];
      v34[4] = v24;
      v34[5] = v25;
      v34[6] = v26;
      v34[7] = v27;
      v34[8] = v28;
      v34[9] = v29;
      v34[10] = v30;
      v34[11] = v31;
      v34[12] = v58;
      v34[13] = v56;
      v34[14] = v54;
      v34[15] = v52;
      v34[16] = v50;
      v34[17] = v48;
      v34[18] = v46;
      v34[19] = v44;
    }
    while (v21 != v22);
    swift_bridgeObjectRelease();
    uint64_t v18 = &selRef_labelNodeWithText_;
  }
  else
  {
    uint64_t v23 = _swiftEmptyArrayStorage;
  }
  id v35 = *(void **)(v0 + OBJC_IVAR____TtC7Measure15ReticleAnimator_idlePulsateAnimation);
  if (qword_1004C3120 != -1) {
    swift_once();
  }
  sub_10019C358(qword_1004F8928);
  Class v36 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v35 v18[235] v36];

  sub_10019C400((uint64_t)v23);
  swift_bridgeObjectRelease();
  Class v37 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v35 setValues:v37];

  [v35 setDuration:1.0];
  id v38 = [self functionWithName:kCAMediaTimingFunctionEaseInEaseOut];
  [v35 setTimingFunction:v38];

  id v39 = *(void **)(v0 + OBJC_IVAR____TtC7Measure15ReticleAnimator_snapPointAnimation);
  [v39 setDamping:40.0];
  [v39 setStiffness:400.0];
  [v39 setDuration:0.5];
  [v39 setDelegate:v0];
  [v39 setRemovedOnCompletion:0];
  id v40 = *(void **)(v0 + OBJC_IVAR____TtC7Measure15ReticleAnimator_scaleOutAnimation);
  [v40 setDamping:30.0];
  [v40 setStiffness:180.0];
  [v40 settlingDuration];
  [v40 setDuration:];
  [v40 setDelegate:v0];
  [v40 setRemovedOnCompletion:0];
  id v41 = *(void **)(v0 + OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation);
  [v41 setDamping:24.0];
  [v41 setStiffness:300.0];
  [v41 settlingDuration];
  [v41 setDuration:];
  [v41 setDelegate:v0];

  return [v41 setRemovedOnCompletion:0];
}

void sub_10019CF7C()
{
}

void sub_10019CF90()
{
}

void sub_10019CFA4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Measure15ReticleAnimator_snapPointAnimation);
  Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  [v1 setFromValue:isa];

  Class v3 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  [v1 setToValue:v3];

  if ([v1 toValue])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_100027938(&v7, &v8);
    swift_dynamicCast();
    uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC7Measure15ReticleAnimator_snapPointLayer);
    CATransform3DMakeScale(&sx, sx.m11, sx.m11, 1.0);
    [v4 setTransform:&sx];
    NSString v5 = String._bridgeToObjectiveC()();
    [v4 addAnimation:v1 forKey:v5];
  }
  else
  {
    __break(1u);
  }
}

id sub_10019D120()
{
  void (*v3)(void *__return_ptr, uint64_t);
  uint64_t v4;
  id result;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  uint64_t v14;
  NSString v15;
  void v16[6];

  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Measure15ReticleAnimator__reticlePulseState;
  Class v3 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)&v0[OBJC_IVAR____TtC7Measure15ReticleAnimator__reticlePulseState]
                                                            + 144);
  uint64_t v4 = swift_retain();
  v3(v16, v4);
  unint64_t result = (id)swift_release();
  if (LOBYTE(v16[0]) != 1)
  {
    unint64_t v6 = *(uint64_t (**)(uint64_t))(**(void **)&v0[v2] + 200);
    long long v7 = swift_retain();
    long long v8 = v6(v7);
    swift_release();
    (*(void (**)(unsigned char *(*)(unsigned char *), void))(*(void *)v8 + 280))(sub_100029FAC, 0);
    swift_release();
    uint64_t v9 = self;
    [v9 begin];
    unint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v1;
    v16[4] = sub_10019F77C;
    v16[5] = v10;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    void v16[2] = sub_100049AB4;
    v16[3] = &unk_1004914F8;
    uint64_t v11 = _Block_copy(v16);
    uint64_t v12 = v1;
    swift_release();
    [v9 setCompletionBlock:v11];
    _Block_release(v11);
    unint64_t v13 = *(void **)&v12[OBJC_IVAR____TtC7Measure15ReticleAnimator_dropLayer];
    unint64_t v14 = *(void *)&v12[OBJC_IVAR____TtC7Measure15ReticleAnimator_continueAnimation];
    uint64_t v15 = String._bridgeToObjectiveC()();
    [v13 addAnimation:v14 forKey:v15];

    return [v9 commit];
  }
  return result;
}

uint64_t sub_10019D36C(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(**(void **)(a1
                                                       + OBJC_IVAR____TtC7Measure15ReticleAnimator__reticlePulseState)
                                         + 200);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  (*(void (**)(unsigned char *(*)(unsigned char *), void))(*(void *)v3 + 280))(sub_10002A018, 0);

  return swift_release();
}

void sub_10019D43C(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_reticleShapeLayer);
  [v3 removeAllAnimations];
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_snapPointLayer);
  [v4 removeAllAnimations];
  [*(id *)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_pulsateLayer) removeAllAnimations];
  [*(id *)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_dropLayer) removeAllAnimations];
  CATransform3DMakeScale(&v45, 1.0, 1.0, 1.0);
  [v4 setTransform:&v45];
  switch(a1)
  {
    case 1:
      NSString v5 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation);
      if (qword_1004C30B0 != -1) {
        swift_once();
      }
      id v22 = [(id)qword_1004F88C0 CGColor];
      [v5 setFromValue:v22];

      if (qword_1004C30A8 != -1) {
        swift_once();
      }
      id v23 = [(id)qword_1004F88B8 CGColor];
      if (qword_1004C30B8 != -1) {
        swift_once();
      }

      [v3 setStrokeColor:v23];
      id v24 = [v3 strokeColor];
      [v5 setToValue:v24];

      id v25 = sub_10019DD70();
      uint64_t v26 = qword_1004C30C0;
      id v27 = v25;
      if (v26 != -1) {
        swift_once();
      }
      id v28 = [(id)qword_1004F88D0 CGColor];
      [v27 setFromValue:v28];

      id v29 = [(id)qword_1004F88B8 CGColor];
      id v30 = [(id)qword_1004F88C8 CGColor];

      [v4 setFillColor:v30];
      id v15 = v27;
      id v31 = [v4 fillColor];
      [v15 setToValue:v31];

      uint64_t v17 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_scaleOutAnimation);
      CATransform3DMakeScale(&v45, 1.0, 1.0, 1.0);
      Class isa = CATransform3D._bridgeToObjectiveC()().super.isa;
      [v17 setFromValue:isa];

      CGFloat v19 = 1.5;
      CGFloat v20 = 1.5;
      CGFloat v21 = 1.5;
      break;
    case 3:
      id v37 = sub_10019DD70();
      uint64_t v38 = qword_1004C30C0;
      id v39 = v37;
      if (v38 != -1) {
        swift_once();
      }
      id v40 = [(id)qword_1004F88D0 CGColor];
      [v39 setFromValue:v40];

      if (qword_1004C30A8 != -1) {
        swift_once();
      }
      id v41 = [(id)qword_1004F88B8 CGColor];
      if (qword_1004C30B8 != -1) {
        swift_once();
      }
      id v42 = [(id)qword_1004F88C8 CGColor];

      [v4 setFillColor:v42];
      id v15 = v39;
      id v43 = [v4 fillColor];
      [v15 setToValue:v43];

      NSString v36 = String._bridgeToObjectiveC()();
      [v4 addAnimation:v15 forKey:v36];
      goto LABEL_30;
    case 2:
      NSString v5 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation);
      if (qword_1004C30B0 != -1) {
        swift_once();
      }
      id v6 = [(id)qword_1004F88C0 CGColor];
      [v5 setFromValue:v6];

      if (qword_1004C30A8 != -1) {
        swift_once();
      }
      id v7 = [(id)qword_1004F88B8 CGColor];
      if (qword_1004C30B8 != -1) {
        swift_once();
      }

      [v3 setStrokeColor:v7];
      id v8 = [v3 strokeColor];
      [v5 setToValue:v8];

      id v9 = sub_10019DD70();
      uint64_t v10 = qword_1004C30C8;
      id v11 = v9;
      if (v10 != -1) {
        swift_once();
      }
      id v12 = [(id)qword_1004F88D8 CGColor];
      [v11 setFromValue:v12];

      id v13 = [(id)qword_1004F88B8 CGColor];
      id v14 = [(id)qword_1004F88C8 CGColor];

      [v4 setFillColor:v14];
      id v15 = v11;
      id v16 = [v4 fillColor];
      [v15 setToValue:v16];

      uint64_t v17 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_scaleOutAnimation);
      CATransform3DMakeScale(&v45, 1.0, 1.0, 1.0);
      Class v18 = CATransform3D._bridgeToObjectiveC()().super.isa;
      [v17 setFromValue:v18];

      CGFloat v19 = 1.5;
      CGFloat v20 = 1.5;
      CGFloat v21 = 1.0;
      break;
    default:
      return;
  }
  CATransform3DMakeScale(&v44, v19, v20, v21);
  [v3 setTransform:&v44];
  CATransform3DMakeScale(&v44, 1.5, 1.5, 1.0);
  Class v33 = CATransform3D._bridgeToObjectiveC()().super.isa;
  [v17 setToValue:v33];

  NSString v34 = String._bridgeToObjectiveC()();
  [v3 addAnimation:v5 forKey:v34];

  NSString v35 = String._bridgeToObjectiveC()();
  [v4 addAnimation:v15 forKey:v35];

  NSString v36 = String._bridgeToObjectiveC()();
  [v3 addAnimation:v17 forKey:v36];
LABEL_30:
}

id sub_10019DD70()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self animationWithKeyPath:v1];

  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation);
  [v3 damping];
  [v2 setDamping:];
  [v3 stiffness];
  [v2 setStiffness:];
  id v4 = v2;
  [v4 settlingDuration];
  [v4 setDuration:];

  return v4;
}

void sub_10019DE60(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = *(void **)(v2 + OBJC_IVAR____TtC7Measure15ReticleAnimator_reticleShapeLayer);
  [v4 removeAllAnimations];
  NSString v5 = *(void **)(v2 + OBJC_IVAR____TtC7Measure15ReticleAnimator_snapPointLayer);
  [v5 removeAllAnimations];
  id v6 = *(void **)(v2 + OBJC_IVAR____TtC7Measure15ReticleAnimator_pulsateLayer);
  [v6 removeAllAnimations];
  [*(id *)(v2 + OBJC_IVAR____TtC7Measure15ReticleAnimator_dropLayer) removeAllAnimations];
  if (!a1 || a1 == 3)
  {
    id v23 = *(void **)(v2 + OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation);
    if (qword_1004C30A8 != -1) {
      swift_once();
    }
    id v24 = [(id)qword_1004F88B8 CGColor];
    [v23 setFromValue:v24];

    if (qword_1004C30B0 != -1) {
      swift_once();
    }
    id v25 = [(id)qword_1004F88C0 CGColor];
    if (qword_1004C30C8 != -1) {
      swift_once();
    }

    [v4 setStrokeColor:v25];
    id v26 = [v4 strokeColor];
    [v23 setToValue:v26];

    id v27 = sub_10019DD70();
    uint64_t v28 = qword_1004C30B8;
    id v29 = v27;
    if (v28 != -1) {
      swift_once();
    }
    id v30 = [(id)qword_1004F88C8 CGColor];
    [v29 setFromValue:v30];

    id v31 = [(id)qword_1004F88C0 CGColor];
    id v32 = [(id)qword_1004F88D8 CGColor];

    [v5 setFillColor:v32];
    id v33 = v29;
    id v34 = [v5 fillColor];
    [v33 setToValue:v34];

    NSString v35 = String._bridgeToObjectiveC()();
    [v4 addAnimation:v23 forKey:v35];

    NSString v36 = String._bridgeToObjectiveC()();
    [v5 addAnimation:v33 forKey:v36];

    id v37 = *(void **)(v2 + OBJC_IVAR____TtC7Measure15ReticleAnimator_scaleOutAnimation);
    CATransform3DMakeScale(&v46, 1.5, 1.5, 1.0);
    Class isa = CATransform3D._bridgeToObjectiveC()().super.isa;
    [v37 setFromValue:isa];

    CATransform3DMakeScale(&v45, 1.0, 1.0, 1.0);
    [v4 setTransform:&v45];
    CATransform3DMakeScale(&v45, 1.0, 1.0, 1.0);
    Class v39 = CATransform3D._bridgeToObjectiveC()().super.isa;
    [v37 setToValue:v39];

    NSString v40 = String._bridgeToObjectiveC()();
    [v4 addAnimation:v37 forKey:v40];

    id v41 = *(void **)(v2 + OBJC_IVAR____TtC7Measure15ReticleAnimator_idlePulsateAnimation);
    LODWORD(v42) = 2139095039;
    [v41 setRepeatCount:v42];
    NSString v43 = String._bridgeToObjectiveC()();
    [v6 addAnimation:v41 forKey:v43];
  }
  else if (a1 == 1)
  {
    id v7 = *(void **)(v2 + OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation);
    if (qword_1004C30B0 != -1) {
      swift_once();
    }
    id v8 = [(id)qword_1004F88C0 CGColor];
    [v7 setFromValue:v8];

    id v9 = [(id)qword_1004F88C0 CGColor];
    if (qword_1004C30C8 != -1) {
      swift_once();
    }

    [v4 setStrokeColor:v9];
    id v10 = [v4 strokeColor];
    [v7 setToValue:v10];

    id v11 = sub_10019DD70();
    uint64_t v12 = qword_1004C30C0;
    id v13 = v11;
    if (v12 != -1) {
      swift_once();
    }
    id v14 = [(id)qword_1004F88D0 CGColor];
    [v13 setFromValue:v14];

    id v15 = [(id)qword_1004F88C0 CGColor];
    id v16 = [(id)qword_1004F88D8 CGColor];

    [v5 setFillColor:v16];
    id v17 = v13;
    id v18 = [v5 fillColor];
    [v17 setToValue:v18];

    NSString v19 = String._bridgeToObjectiveC()();
    [v4 addAnimation:v7 forKey:v19];

    NSString v20 = String._bridgeToObjectiveC()();
    [v5 addAnimation:v17 forKey:v20];

    CGFloat v21 = *(void **)(v2 + OBJC_IVAR____TtC7Measure15ReticleAnimator_idlePulsateAnimation);
    LODWORD(v22) = 2139095039;
    [v21 setRepeatCount:v22];
    id v44 = String._bridgeToObjectiveC()();
    [v6 addAnimation:v21 forKey:v44];
  }
}

void sub_10019E644(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_reticleShapeLayer);
  [v3 removeAllAnimations];
  id v4 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_snapPointLayer);
  [v4 removeAllAnimations];
  [*(id *)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_pulsateLayer) removeAllAnimations];
  [*(id *)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_dropLayer) removeAllAnimations];
  CATransform3DMakeScale(&v24, 1.0, 1.0, 1.0);
  [v4 setTransform:&v24];
  switch(a1)
  {
    case 0:
      id v8 = sub_10019DD70();
      uint64_t v9 = qword_1004C30B8;
      id v10 = v8;
      if (v9 != -1) {
        swift_once();
      }
      id v11 = [(id)qword_1004F88C8 CGColor];
      [v10 setFromValue:v11];

      if (qword_1004C30A8 != -1) {
        swift_once();
      }
      id v12 = [(id)qword_1004F88B8 CGColor];
      if (qword_1004C30C0 != -1) {
        swift_once();
      }
      id v13 = [(id)qword_1004F88D0 CGColor];

      [v4 setFillColor:v13];
      id v14 = v10;
      id v15 = [v4 fillColor];
      [v14 setToValue:v15];

      NSString v16 = String._bridgeToObjectiveC()();
      [v4 addAnimation:v14 forKey:v16];

      goto LABEL_23;
    case 1:
      NSString v5 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation);
      if (qword_1004C30B0 != -1) {
        swift_once();
      }
      id v17 = [(id)qword_1004F88C0 CGColor];
      [v5 setFromValue:v17];

      if (qword_1004C30A8 != -1) {
        swift_once();
      }
      id v7 = [(id)qword_1004F88B8 CGColor];
      if (qword_1004C30C0 == -1) {
        goto LABEL_22;
      }
      break;
    case 2:
      NSString v5 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation);
      if (qword_1004C30B0 != -1) {
        swift_once();
      }
      id v6 = [(id)qword_1004F88C0 CGColor];
      [v5 setFromValue:v6];

      if (qword_1004C30A8 != -1) {
        swift_once();
      }
      id v7 = [(id)qword_1004F88B8 CGColor];
      if (qword_1004C30C0 == -1) {
        goto LABEL_22;
      }
      break;
    default:
      return;
  }
  swift_once();
LABEL_22:

  [v3 setStrokeColor:v7];
  id v18 = [v3 strokeColor];
  [v5 setToValue:v18];

  NSString v19 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_scaleOutAnimation);
  CATransform3DMakeScale(&v24, 1.0, 1.0, 1.0);
  Class isa = CATransform3D._bridgeToObjectiveC()().super.isa;
  [v19 setFromValue:isa];

  CATransform3DMakeScale(&v23, 1.5, 1.5, 1.5);
  [v3 setTransform:&v23];
  CATransform3DMakeScale(&v23, 1.5, 1.5, 1.0);
  Class v21 = CATransform3D._bridgeToObjectiveC()().super.isa;
  [v19 setToValue:v21];

  NSString v22 = String._bridgeToObjectiveC()();
  [v3 addAnimation:v5 forKey:v22];

  NSString v16 = String._bridgeToObjectiveC()();
  [v3 addAnimation:v19 forKey:v16];
LABEL_23:
}

void sub_10019ECB8(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_reticleShapeLayer);
  [v3 removeAllAnimations];
  id v4 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_snapPointLayer);
  [v4 removeAllAnimations];
  [*(id *)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_pulsateLayer) removeAllAnimations];
  [*(id *)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_dropLayer) removeAllAnimations];
  if (!a1 || a1 == 3)
  {
    id v18 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation);
    if (qword_1004C30A8 != -1) {
      swift_once();
    }
    id v19 = [(id)qword_1004F88B8 CGColor];
    [v18 setFromValue:v19];

    if (qword_1004C30B0 != -1) {
      swift_once();
    }
    id v20 = [(id)qword_1004F88C0 CGColor];
    if (qword_1004C30C0 != -1) {
      swift_once();
    }

    [v3 setStrokeColor:v20];
    id v21 = [v3 strokeColor];
    [v18 setToValue:v21];

    id v22 = sub_10019DD70();
    uint64_t v23 = qword_1004C30B8;
    id v24 = v22;
    if (v23 != -1) {
      swift_once();
    }
    id v25 = [(id)qword_1004F88C8 CGColor];
    [v24 setFromValue:v25];

    id v26 = [(id)qword_1004F88C0 CGColor];
    id v27 = [(id)qword_1004F88D0 CGColor];

    [v4 setFillColor:v27];
    id v28 = v24;
    id v29 = [v4 fillColor];
    [v28 setToValue:v29];

    NSString v30 = String._bridgeToObjectiveC()();
    [v3 addAnimation:v18 forKey:v30];

    NSString v31 = String._bridgeToObjectiveC()();
    [v4 addAnimation:v28 forKey:v31];

    id v32 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_scaleOutAnimation);
    CATransform3DMakeScale(&v38, 1.5, 1.5, 1.0);
    Class isa = CATransform3D._bridgeToObjectiveC()().super.isa;
    [v32 setFromValue:isa];

    CATransform3DMakeScale(&v37, 1.0, 1.0, 1.0);
    [v3 setTransform:&v37];
    CATransform3DMakeScale(&v37, 1.0, 1.0, 1.0);
    Class v34 = CATransform3D._bridgeToObjectiveC()().super.isa;
    [v32 setToValue:v34];

    NSString v35 = String._bridgeToObjectiveC()();
    [v3 addAnimation:v32 forKey:v35];
  }
  else if (a1 == 2)
  {
    NSString v5 = *(void **)(v1 + OBJC_IVAR____TtC7Measure15ReticleAnimator_colorChangeAnimation);
    if (qword_1004C30B0 != -1) {
      swift_once();
    }
    id v6 = [(id)qword_1004F88C0 CGColor];
    [v5 setFromValue:v6];

    id v7 = [(id)qword_1004F88C0 CGColor];
    if (qword_1004C30C0 != -1) {
      swift_once();
    }

    [v3 setStrokeColor:v7];
    id v8 = [v3 strokeColor];
    [v5 setToValue:v8];

    id v9 = sub_10019DD70();
    uint64_t v10 = qword_1004C30C8;
    id v11 = v9;
    if (v10 != -1) {
      swift_once();
    }
    id v12 = [(id)qword_1004F88D8 CGColor];
    [v11 setFromValue:v12];

    id v13 = [(id)qword_1004F88C0 CGColor];
    id v14 = [(id)qword_1004F88D0 CGColor];

    [v4 setFillColor:v14];
    id v15 = v11;
    id v16 = [v4 fillColor];
    [v15 setToValue:v16];

    NSString v17 = String._bridgeToObjectiveC()();
    [v3 addAnimation:v5 forKey:v17];

    id v36 = String._bridgeToObjectiveC()();
    [v4 addAnimation:v15 forKey:v36];
  }
}

uint64_t type metadata accessor for ReticleAnimator()
{
  return self;
}

void sub_10019F54C(void *a1, char a2)
{
  if (a2)
  {
    id v4 = *(void **)(v2 + OBJC_IVAR____TtC7Measure15ReticleAnimator_snapPointLayer);
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [v4 animationForKey:v5];

    if (v6)
    {
      sub_10001C99C(0, &qword_1004CF340);
      id v7 = a1;
      char v8 = static NSObject.== infix(_:_:)();

      if (v8) {
        goto LABEL_6;
      }
    }
    NSString v9 = String._bridgeToObjectiveC()();
    id v10 = [v4 animationForKey:v9];

    if (v10)
    {
      sub_10001C99C(0, &qword_1004CF340);
      id v11 = a1;
      char v12 = static NSObject.== infix(_:_:)();

      if (v12)
      {
LABEL_6:
        [v4 removeAllAnimations];
      }
    }
  }
}

uint64_t sub_10019F744()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10019F77C()
{
  return sub_10019D36C(*(void *)(v0 + 16));
}

uint64_t sub_10019F784(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10019F794()
{
  return swift_release();
}

uint64_t sub_10019F79C(void *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

void sub_10019F7C8()
{
}

void sub_10019F7F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = (unsigned char *)(v0 + 288);
  uint64_t v3 = sub_100012894(&qword_1004C6AA0);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1004F8630;
  id v6 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 272);
  swift_retain();
  *(void *)(v1 + 64) = v6(KeyPath, v5);
  uint64_t v7 = sub_100012894(&qword_1004C3EE8);
  uint64_t v8 = swift_getKeyPath();
  uint64_t v9 = qword_1004F8630;
  id v10 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 272);
  swift_retain();
  *(void *)(v1 + 72) = v10(v8, v9);
  uint64_t v11 = swift_getKeyPath();
  uint64_t v12 = sub_100012894(&qword_1004C3EE0);
  uint64_t v13 = qword_1004F8630;
  id v14 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 272);
  swift_retain();
  *(void *)(v1 + 80) = v14(v11, v13);
  uint64_t v15 = swift_getKeyPath();
  uint64_t v16 = sub_100012894(&qword_1004C3F10);
  uint64_t v17 = qword_1004F8630;
  id v18 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 272);
  swift_retain();
  *(void *)(v1 + 88) = v18(v15, v17);
  uint64_t v19 = swift_getKeyPath();
  uint64_t v20 = sub_100012894(&qword_1004C9E10);
  uint64_t v21 = qword_1004F8630;
  id v22 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 272);
  swift_retain();
  *(void *)(v1 + 96) = v22(v19, v21);
  uint64_t v23 = sub_100012894(&qword_1004C54B8);
  uint64_t v24 = swift_getKeyPath();
  uint64_t v25 = qword_1004F8630;
  id v26 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 272);
  swift_retain();
  *(void *)(v1 + 104) = v26(v24, v25);
  sub_100012894(&qword_1004CF528);
  swift_getKeyPath();
  *(void *)(v1 + 112) = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v27 = sub_100012894(&qword_1004CF530);
  uint64_t v28 = swift_getKeyPath();
  uint64_t v29 = qword_1004F8630;
  NSString v30 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 272);
  swift_retain();
  *(void *)(v1 + 120) = v30(v28, v29);
  *(_WORD *)(v1 + 136) = 2;
  *(unsigned char *)(v1 + 138) = 0;
  *(_OWORD *)(v1 + 144) = 0u;
  *(_OWORD *)(v1 + 160) = 0u;
  *(_OWORD *)(v1 + 176) = 0u;
  *(_OWORD *)(v1 + 192) = 0u;
  *(unsigned char *)(v1 + 208) = 1;
  *(_OWORD *)(v1 + 224) = 0u;
  *(_OWORD *)(v1 + 240) = 0u;
  *(_OWORD *)(v1 + 256) = 0u;
  *(_OWORD *)(v1 + 272) = 0u;
  *uint64_t v2 = 1;
  v2[88] = 1;
  uint64_t v31 = v1 + qword_1004CF360;
  *(void *)(v1 + 368) = 0;
  uint64_t v32 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 1, 1, v32);
  swift_release();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10019FB90()
{
  return swift_release();
}

void sub_10019FCF4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xC000000000000018 && *(unsigned __int8 *)(a2 + 136) <= 1u)
  {
    *(unsigned char *)(a2 + 136) = 2;
    uint64_t v2 = *(void **)(*(void *)(a2 + 128) + OBJC_IVAR____TtC7Measure11ReticleView_animator);
    if (v2)
    {
      id v3 = v2;
      sub_10019CF90();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10019FD88(uint64_t a1)
{
  uint64_t v2 = v1;
  if ((_BYTE)a1)
  {
    id v3 = *(void **)(v1 + 128);
    [v3 setState:0];
  }
  else
  {
    uint64_t v4 = a1 & 0x101000000;
    if (qword_1004C2B18 != -1) {
      swift_once();
    }
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease();
    v14._uint64_t countAndFlagsBits = 0xD000000000000011;
    v14._object = (void *)0x800000010042A680;
    if (v4) {
      double v5 = 0.0;
    }
    else {
      double v5 = 1.0;
    }
    if (v4) {
      uint64_t v6 = 0x65736C6166;
    }
    else {
      uint64_t v6 = 1702195828;
    }
    if (v4) {
      unint64_t v7 = 0xE500000000000000;
    }
    else {
      unint64_t v7 = 0xE400000000000000;
    }
    unint64_t v8 = v7;
    String.append(_:)(*(Swift::String *)&v6);
    swift_bridgeObjectRelease();
    Log.debug(_:isPrivate:)(v14, 0);
    swift_bridgeObjectRelease();
    [*(id *)(v1 + 128) alpha];
    if (v9 != v5)
    {
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = v2;
      *(double *)(v10 + 24) = v5;
      id v11 = objc_allocWithZone((Class)UIViewPropertyAnimator);
      uint64_t v17 = sub_1001A2404;
      uint64_t v18 = v10;
      v14._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
      v14._object = (void *)1107296256;
      uint64_t v15 = sub_100049AB4;
      uint64_t v16 = &unk_100491750;
      uint64_t v12 = _Block_copy(&v14);
      swift_retain();
      swift_release();
      id v13 = [v11 initWithDuration:v12 dampingRatio:0.5 animations:0.6];
      _Block_release(v12);
      [v13 setInterruptible:0];
      [v13 startAnimation];
    }
  }
}

void sub_1001A001C()
{
  void (*v1)(void **__return_ptr, uint64_t);
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = *(void (**)(void **__return_ptr, uint64_t))(**(void **)(Strong + 80) + 144);
    uint64_t v2 = swift_retain();
    v1(&v7, v2);
    swift_release();
    id v3 = v7;
    uint64_t v4 = v8;
    double v5 = v9;
    uint64_t v6 = v10;
    sub_1001A1914(v7, v8);
    swift_release();
  }
}

uint64_t sub_1001A00E4()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005536C();
  double v9 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_1001A18F4;
  uint64_t v13 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_100491700;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_100039BEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1001A034C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  uint64_t v1 = v0 + qword_1004CF360;

  return sub_1000DB3D4(v1);
}

uint64_t sub_1001A03C4()
{
  uint64_t v0 = StateObserver.deinit();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_1000DB3D4(v0 + qword_1004CF360);
  return v0;
}

uint64_t sub_1001A0444()
{
  sub_1001A03C4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ReticleController()
{
  uint64_t result = qword_1004CF390;
  if (!qword_1004CF390) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001A04E4()
{
  sub_10006B9DC();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

ValueMetadata *type metadata accessor for ReticleController.ReticleConditions()
{
  return &type metadata for ReticleController.ReticleConditions;
}

unsigned char *_s7Measure17ReticleControllerC12ReticleStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A06B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReticleController.ReticleState()
{
  return &type metadata for ReticleController.ReticleState;
}

unint64_t sub_1001A06F0()
{
  unint64_t result = qword_1004CF518;
  if (!qword_1004CF518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CF518);
  }
  return result;
}

unint64_t sub_1001A0748()
{
  unint64_t result = qword_1004CF520;
  if (!qword_1004CF520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CF520);
  }
  return result;
}

void sub_1001A079C()
{
  swift_retain();
  StateValue.wrappedValue.getter();
  swift_release();
  if (v1 >> 62 == 2 || v1 >> 62 == 1)
  {
    sub_10001F780(v1);
  }
  else
  {
    sub_10001F780(v1);
    *(unsigned char *)(v0 + 138) = 0;
  }
}

void sub_1001A0808()
{
  *(unsigned char *)(v0 + 138) = 1;
}

void sub_1001A0814()
{
  *(unsigned char *)(v0 + 138) = 2;
}

void sub_1001A0820()
{
  *(unsigned char *)(v0 + 138) = 0;
}

void sub_1001A082C()
{
  *(unsigned char *)(v0 + 138) = 3;
}

void sub_1001A0838(uint64_t a1)
{
  unint64_t v1 = *(void **)(*(void *)(a1 + 128) + OBJC_IVAR____TtC7Measure11ReticleView_animator);
  if (v1)
  {
    id v2 = v1;
    sub_10019D120();
  }
  else
  {
    __break(1u);
  }
}

void sub_1001A0898(void *a1, void *a2, uint64_t a3, int a4)
{
  void (*v52)(_OWORD *__return_ptr, uint64_t);
  uint64_t v53;
  char v54;
  void *v55;
  id v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  int v58;
  uint64_t v59;
  uint64_t (*v60)(void);
  long long v61;
  long long v62;
  long long v63;
  long long v64;
  uint64_t v65;
  long long v66;
  long long v67;
  long long v68;
  long long v69;
  double v70;
  double v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  void (*v79)(void *__return_ptr, uint64_t);
  uint64_t v80;
  char v81;
  int v82;
  char v83;
  long long v84;
  long long v85;
  long long v86;
  long long v87;
  long long v88;
  void (*v89)(void *__return_ptr, uint64_t);
  uint64_t v90;
  void (*v91)(void *__return_ptr, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  double (*v95)(void);
  long long v96;
  long long v97;
  long long v98;
  long long v99;
  double v100;
  double v101;
  double v102;
  double v103;
  uint64_t v104;
  void *v105;
  double *v106;
  void *v107;
  void *v108;
  long long v109;
  long long v110;
  long long v111;
  long long v112;
  long long v113;
  uint64_t v114;
  void v115[64];
  _OWORD v116[32];
  void v117[64];

  LODWORD(v112) = a4;
  id v107 = a2;
  unint64_t v108 = a1;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&unint64_t v111 = type metadata accessor for DispatchPredicate();
  *(void *)&unint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  *(void *)&unint64_t v109 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100012894((uint64_t *)&unk_1004C68F0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v107 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v107 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  *(void *)&int v113 = (char *)&v107 - v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v107 - v24;
  id v114 = v4;
  uint64_t v26 = v4 + qword_1004CF360;
  if (a3)
  {
    swift_beginAccess();
    uint64_t v27 = v26;
    sub_1000DB36C(v26, (uint64_t)v25);
    int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v25, 1, v7);
    sub_1000DB3D4((uint64_t)v25);
    BOOL v29 = v28 == 1;
    uint64_t v30 = v114;
    if (!v29)
    {
      long long v31 = *(_OWORD *)(v114 + 320);
      long long v32 = *(_OWORD *)(v114 + 336);
      uint64_t v34 = *(void *)(v114 + 352);
      uint64_t v33 = *(void *)(v114 + 360);
      *(_OWORD *)(v114 + 144) = *(_OWORD *)(v114 + 304);
      *(_OWORD *)(v30 + 160) = v31;
      *(_OWORD *)(v30 + 176) = v32;
      *(void *)(v30 + 192) = v34;
      *(void *)(v30 + 200) = v33;
      *(unsigned char *)(v30 + 208) = 0;
    }
    uint64_t v35 = v113;
    Date.init()();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v35, 0, 1, v7);
    swift_beginAccess();
    sub_1000DB434(v35, v27);
    swift_endAccess();
    *(unsigned char *)(v30 + 137) = 0;
    id v36 = *(void **)(*(void *)(v30 + 128) + OBJC_IVAR____TtC7Measure11ReticleView_animator);
    if (v36)
    {
      id v37 = v36;
      sub_10019CF7C();

      return;
    }
    goto LABEL_42;
  }
  CATransform3D v38 = (uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v112)
  {
    swift_beginAccess();
    uint64_t v39 = v26;
    sub_1000DB36C(v26, (uint64_t)v21);
    int v40 = (*v38)(v21, 1, v7);
    sub_1000DB3D4((uint64_t)v21);
    uint64_t v41 = v114;
    if (v40 != 1)
    {
      long long v42 = *(_OWORD *)(v114 + 320);
      long long v43 = *(_OWORD *)(v114 + 336);
      uint64_t v45 = *(void *)(v114 + 352);
      uint64_t v44 = *(void *)(v114 + 360);
      *(_OWORD *)(v114 + 144) = *(_OWORD *)(v114 + 304);
      *(_OWORD *)(v41 + 160) = v42;
      *(_OWORD *)(v41 + 176) = v43;
      *(void *)(v41 + 192) = v45;
      *(void *)(v41 + 200) = v44;
      *(unsigned char *)(v41 + 208) = 0;
    }
    uint64_t v46 = v113;
    Date.init()();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v46, 0, 1, v7);
    swift_beginAccess();
    sub_1000DB434(v46, v39);
    swift_endAccess();
    if (qword_1004C29E0 != -1) {
      swift_once();
    }
    uint64_t v47 = qword_1004F8038;
    sub_10005536C();
    uint64_t v48 = static OS_dispatch_queue.main.getter();
    uint64_t v49 = v109;
    *(void *)unint64_t v109 = v48;
    uint64_t v50 = v110;
    uint64_t v8 = v111;
    (*(void (**)(uint64_t, void, void))(v110 + 104))(v49, enum case for DispatchPredicate.onQueue(_:), v111);
    char v51 = _dispatchPreconditionTest(_:)();
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v8);
    if (v51)
    {
      CGFloat v52 = *(void (**)(_OWORD *__return_ptr, uint64_t))(**(void **)(v47 + 56) + 144);
      id v53 = swift_retain();
      v52(v116, v53);
      swift_release();
      CGFloat v54 = BYTE3(v116[0]) | BYTE4(v116[0]);
      if (((BYTE3(v116[0]) | BYTE4(v116[0])) & 1) == 0) {
        sub_100096348(2);
      }
      *(unsigned char *)(v41 + 137) = (v54 & 1) == 0;
      uint64_t v55 = *(void **)(*(void *)(v41 + 128) + OBJC_IVAR____TtC7Measure11ReticleView_animator);
      if (v55)
      {
        CGFloat v56 = v55;
        sub_10019CF90();

        return;
      }
      goto LABEL_43;
    }
    __break(1u);
    goto LABEL_40;
  }
  swift_beginAccess();
  sub_1000DB36C(v26, (uint64_t)v18);
  id v57 = *v38;
  a3 = v7;
  CGFloat v58 = (*v38)(v18, 1, v7);
  CATransform3D v59 = sub_1000DB3D4((uint64_t)v18);
  if (v58 == 1)
  {
    id v60 = *(uint64_t (**)(void))((swift_isaMask & *v108) + 0x2B0);
    *(double *)&id v61 = ((double (*)(uint64_t))v60)(v59);
    uint64_t v41 = v114;
    *(_OWORD *)(v114 + 144) = v61;
    *(_OWORD *)(v41 + 160) = v62;
    *(_OWORD *)(v41 + 176) = v63;
    *(_OWORD *)(v41 + 192) = v64;
    *(unsigned char *)(v41 + 208) = 0;
    unint64_t v65 = v60();
LABEL_36:
    *(_OWORD *)(v41 + 304) = v66;
    *(_OWORD *)(v41 + 320) = v67;
    *(_OWORD *)(v41 + 336) = v68;
    *(_OWORD *)(v41 + 352) = v69;
    (*(void (**)(uint64_t))((swift_isaMask & *v107) + 0x200))(v65);
    goto LABEL_37;
  }
  Date.init()();
  uint64_t v18 = (char *)v26;
  sub_1000DB36C(v26, (uint64_t)v15);
  if (v57(v15, 1, a3) == 1)
  {
LABEL_44:
    __break(1u);
    return;
  }
  Date.timeIntervalSince(_:)();
  id v71 = v70;
  id v72 = *(void (**)(char *, uint64_t))(v8 + 8);
  v72(v10, a3);
  v72(v15, a3);
  double v5 = fabs(v71);
  uint64_t v41 = v114;
  if (v5 > 0.1 && (*(unsigned char *)(v114 + 137) & 1) == 0 && *(unsigned char *)(v114 + 136) == 1)
  {
    if (qword_1004C29E0 == -1)
    {
LABEL_23:
      id v73 = qword_1004F8038;
      sub_10005536C();
      id v74 = static OS_dispatch_queue.main.getter();
      id v75 = v109;
      *(void *)unint64_t v109 = v74;
      id v76 = v110;
      id v77 = v111;
      (*(void (**)(uint64_t, void, void))(v110 + 104))(v75, enum case for DispatchPredicate.onQueue(_:), v111);
      id v78 = _dispatchPreconditionTest(_:)();
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v77);
      if ((v78 & 1) == 0)
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      id v79 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v73 + 56) + 144);
      id v80 = swift_retain();
      v79(v117, v80);
      swift_release();
      id v81 = BYTE3(v117[0]) | BYTE4(v117[0]);
      if (((BYTE3(v117[0]) | BYTE4(v117[0])) & 1) == 0) {
        sub_100096348(1);
      }
      *(unsigned char *)(v41 + 137) = (v81 & 1) == 0;
      goto LABEL_27;
    }
LABEL_40:
    swift_once();
    goto LABEL_23;
  }
LABEL_27:
  if (v5 > 0.5)
  {
    id v82 = *(unsigned __int8 *)(v41 + 136);
    if (v82 == 3)
    {
      id v83 = 2;
    }
    else
    {
      if (v82 != 1)
      {
LABEL_35:
        id v93 = v113;
        (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v8 + 56))(v113, 1, 1, a3);
        swift_beginAccess();
        sub_1000DB434(v93, (uint64_t)v18);
        id v94 = swift_endAccess();
        *(unsigned char *)(v41 + 137) = 0;
        id v95 = *(double (**)(void))((swift_isaMask & *v108) + 0x2B0);
        *(double *)&id v96 = ((double (*)(uint64_t))v95)(v94);
        *(_OWORD *)(v41 + 144) = v96;
        *(_OWORD *)(v41 + 160) = v97;
        *(_OWORD *)(v41 + 176) = v98;
        *(_OWORD *)(v41 + 192) = v99;
        *(unsigned char *)(v41 + 208) = 0;
        *(double *)&uint64_t v66 = v95();
        goto LABEL_36;
      }
      id v83 = 0;
    }
    *(unsigned char *)(v41 + 136) = v83;
    goto LABEL_35;
  }
  if (*(unsigned char *)(v41 + 208)) {
    return;
  }
  int v113 = *(_OWORD *)(v41 + 144);
  int v112 = *(_OWORD *)(v41 + 160);
  unint64_t v111 = *(_OWORD *)(v41 + 176);
  unint64_t v110 = *(_OWORD *)(v41 + 192);
  spring(tension:friction:velocity:elapsed:)(400.0, 40.0, 0.0, v5);
  (*(void (**)(void))((swift_isaMask & *v108) + 0x2B0))();
  slerp(transform1:transform2:percent:)();
  int v112 = v85;
  int v113 = v84;
  unint64_t v110 = v87;
  unint64_t v111 = v86;
  *(_OWORD *)(v41 + 304) = v84;
  *(_OWORD *)(v41 + 320) = v85;
  *(_OWORD *)(v41 + 336) = v86;
  *(_OWORD *)(v41 + 352) = v87;
  type metadata accessor for MeasureCamera();
  simd_float4x4.position.getter();
  int v113 = v88;
  id v89 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v41 + 88) + 144);
  id v90 = swift_retain();
  v89(v117, v90);
  swift_release();
  memcpy(v116, v117, sizeof(v116));
  sub_100016F7C((uint64_t)v116);
  int v112 = v116[11];
  unint64_t v111 = v116[12];
  unint64_t v110 = v116[13];
  unint64_t v109 = v116[14];
  unint64_t v91 = *(void (**)(void *__return_ptr, uint64_t))(**(void **)(v41 + 88) + 144);
  uint64_t v92 = swift_retain();
  v91(v115, v92);
  swift_release();
  memcpy(v117, v115, sizeof(v117));
  sub_100016F7C((uint64_t)v117);
  static MeasureCamera.projectPoint(_:viewProjection:viewportSize:)();
LABEL_37:
  CGPoint.init(_:)();
  id v101 = v100;
  id v103 = v102;
  uint64_t v104 = *(void *)(v41 + 128);
  id v105 = self;
  [v105 begin];
  [v105 setAnimationDuration:0.0];
  [*(id *)(v104 + OBJC_IVAR____TtC7Measure11ReticleView_snapPointContainer) setPosition:v101, v103];
  id v106 = (double *)(v104 + OBJC_IVAR____TtC7Measure11ReticleView_targetOffset);
  *id v106 = v101;
  v106[1] = v103;
  [v105 commit];
}

uint64_t sub_1001A13EC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 152);
  return swift_retain();
}

uint64_t sub_1001A13FC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (unsigned char *)(v1 + 288);
  uint64_t v5 = sub_100012894(&qword_1004C6AA0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v7 = qword_1004C2E30;
  swift_retain();
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1004F8630;
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 272);
  swift_retain();
  *(void *)(v2 + 64) = v9(KeyPath, v8);
  uint64_t v10 = sub_100012894(&qword_1004C3EE8);
  uint64_t v11 = swift_getKeyPath();
  uint64_t v12 = qword_1004F8630;
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 272);
  swift_retain();
  *(void *)(v2 + 72) = v13(v11, v12);
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = sub_100012894(&qword_1004C3EE0);
  uint64_t v16 = qword_1004F8630;
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 272);
  swift_retain();
  *(void *)(v2 + 80) = v17(v14, v16);
  uint64_t v18 = swift_getKeyPath();
  uint64_t v19 = sub_100012894(&qword_1004C3F10);
  uint64_t v20 = qword_1004F8630;
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 272);
  swift_retain();
  *(void *)(v2 + 88) = v21(v18, v20);
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = sub_100012894(&qword_1004C9E10);
  uint64_t v24 = qword_1004F8630;
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 272);
  swift_retain();
  *(void *)(v2 + 96) = v25(v22, v24);
  uint64_t v26 = sub_100012894(&qword_1004C54B8);
  uint64_t v27 = swift_getKeyPath();
  uint64_t v28 = qword_1004F8630;
  BOOL v29 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 272);
  swift_retain();
  *(void *)(v2 + 104) = v29(v27, v28);
  sub_100012894(&qword_1004CF528);
  swift_getKeyPath();
  *(void *)(v2 + 112) = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v30 = sub_100012894(&qword_1004CF530);
  uint64_t v31 = swift_getKeyPath();
  uint64_t v32 = qword_1004F8630;
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 272);
  swift_retain();
  *(void *)(v2 + 120) = v33(v31, v32);
  *(_WORD *)(v2 + 136) = 2;
  *(unsigned char *)(v2 + 138) = 0;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(unsigned char *)(v2 + 208) = 1;
  *(_OWORD *)(v2 + 224) = 0u;
  *(_OWORD *)(v2 + 240) = 0u;
  *(_OWORD *)(v2 + 256) = 0u;
  *(_OWORD *)(v2 + 272) = 0u;
  *uint64_t v4 = 1;
  v4[88] = 1;
  uint64_t v34 = v2 + qword_1004CF360;
  *(void *)(v2 + 368) = 0;
  uint64_t v35 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 1, 1, v35);
  *(void *)(v2 + 128) = a1;
  *(_OWORD *)(v2 + 304) = 0u;
  *(_OWORD *)(v2 + 320) = 0u;
  *(_OWORD *)(v2 + 336) = 0u;
  *(_OWORD *)(v2 + 352) = 0u;
  id v36 = a1;
  swift_release();
  return StateObserver.init(configuration:)();
}

uint64_t sub_1001A17D0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)a1 + 152);
  return swift_retain();
}

void sub_1001A17E0(uint64_t a1)
{
  sub_10019FCF4(a1, v1);
}

uint64_t sub_1001A17E8(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

void sub_1001A1814(uint64_t a1)
{
}

uint64_t sub_1001A1828(unsigned __int8 *a1)
{
  uint64_t v2 = &_mh_execute_header;
  if (!a1[4]) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = 0x1000000;
  if (!a1[3]) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 0x10000;
  if (!a1[2]) {
    uint64_t v4 = 0;
  }
  uint64_t v5 = 256;
  if (!a1[1]) {
    uint64_t v5 = 0;
  }
  return (*(uint64_t (**)(unint64_t))(v1 + 16))(v5 | *a1 | v4 | v3 | (unint64_t)v2);
}

uint64_t sub_1001A18A4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001A18DC()
{
}

unsigned char *sub_1001A18E4(unsigned char *result)
{
  if (!*result) {
    return (unsigned char *)sub_1001A00E4();
  }
  return result;
}

void sub_1001A18F4()
{
  sub_1001A0838(v0);
}

uint64_t sub_1001A18FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001A190C()
{
  return swift_release();
}

void sub_1001A1914(void *a1, void *a2)
{
  void (*v9)(unint64_t *__return_ptr, uint64_t);
  uint64_t v10;
  id v11;
  uint64_t v12;
  char v13;
  uint64_t (*v14)(void);
  void *v15;
  uint64_t v16;
  double (*v17)(void);
  void *v18;
  long long v19;
  long long v20;
  long long v21;
  long long v22;
  long long v23;
  long long v24;
  long long v25;
  long long v26;
  unsigned int v27;
  unsigned int v28;
  char v29;
  void *v30;
  void *v31;
  double (*v32)(void);
  void *v33;
  long long v34;
  long long v35;
  long long v36;
  long long v37;
  float32x2_t v38;
  uint64_t v39;
  void *v40;
  unsigned char *v41;
  char v42;
  float32x2_t v43;
  uint64_t v44;
  char v45;
  float32x4_t v46;
  float32x4_t v47;
  float32x4_t v48;
  float32x2_t v49;
  long long v50;
  long long v51;
  long long v52;
  long long v53;
  void (*v54)(unint64_t *__return_ptr, uint64_t);
  void *v55;
  void *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  long long v60;
  long long v61;
  long long v62;
  long long v63;
  id v64;
  float32x4_t v65;
  long long v66;
  long long v67;
  long long v68;
  float32x4_t v69;
  uint64_t v70;
  float32x4_t v71;
  float32x4_t v72;
  float32x4_t v73;
  float v74;
  char *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t (*v84)(unint64_t *);
  void (*v85)(unint64_t *, void);
  _DWORD *v86;
  uint64_t v87;
  BOOL *v88;
  double v89;
  uint64_t v90;
  uint64_t v91;
  double v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int v105;
  void *v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  void *v113;
  long long v114;
  long long v115;
  long long v116;
  float32x4_t v117;
  id v118;
  unsigned int v119;
  long long v120;
  long long v121;
  long long v122;
  long long v123;
  char *v124;
  id v125;
  void *v126;
  void *v127;
  long long v128;
  long long v129;
  long long v130;
  long long v131;
  double *v132;
  void *v133;
  unsigned char *v134;
  unint64_t v135[64];
  unint64_t v136[64];
  unsigned char v137[80];
  _OWORD v138[4];
  BOOL v139;

  uint64_t v3 = v2;
  uint64_t v6 = sub_100012894((uint64_t *)&unk_1004C68F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v2 + 96) + 144);
  uint64_t v10 = swift_retain();
  v9(v136, v10);
  swift_release();
  if (LOBYTE(v136[0]) != 1)
  {
    uint64_t v11 = a1;
    swift_retain();
    NSString v133 = a2;
    StateValue.wrappedValue.getter();
    swift_release();
    id v124 = v8;
    if ((v136[0] >> 62) - 1 >= 2)
    {
      if (v136[0] >> 62 != 3 || v136[0] != 0xC000000000000018)
      {
        sub_10001F780(v136[0]);
LABEL_8:
        *(void *)&unint64_t v123 = a1;
        uint64_t v12 = *(void *)(v2 + 368);
        id v134 = (unsigned char *)(v2 + 288);
        uint64_t v13 = *(unsigned char *)(v2 + 376);
        if (a2)
        {
          uint64_t v14 = *(uint64_t (**)(void))((swift_isaMask & *v133) + 0x2F0);
          uint64_t v15 = v133;
          uint64_t v16 = v14();

          unint64_t v132 = (double *)(v3 + 224);
          sub_100113308(v3 + 224, (uint64_t)v137);
          uint64_t v17 = *(double (**)(void))((swift_isaMask & *v15) + 0x2B0);
          uint64_t v18 = v15;
          *(double *)&uint64_t v19 = v17();
          uint64_t v130 = v20;
          double v131 = v19;
          id v128 = v22;
          id v129 = v21;

          uint64_t v24 = v128;
          uint64_t v23 = v129;
          uint64_t v26 = v130;
          uint64_t v25 = v131;
        }
        else
        {
          unint64_t v132 = (double *)(v2 + 224);
          sub_100113308(v2 + 224, (uint64_t)v137);
          uint64_t v16 = 0;
          uint64_t v25 = 0uLL;
          uint64_t v26 = 0uLL;
          uint64_t v23 = 0uLL;
          uint64_t v24 = 0uLL;
        }
        v138[0] = v25;
        v138[1] = v26;
        v138[2] = v23;
        v138[3] = v24;
        uint64_t v139 = a2 == 0;
        uint64_t v27 = sub_1001B5AE8(v12, v13, v16, a2 == 0, (uint64_t)v137, (uint64_t)v138);
        uint64_t v28 = v27;
        if ((v27 & 0x101) != 0)
        {
          if ((v27 & 0x100) != 0) {
            BOOL v29 = 3;
          }
          else {
            BOOL v29 = 1;
          }
          *(unsigned char *)(v3 + 136) = v29;
        }
        uint64_t v30 = v11;
        id v125 = v11;
        if (a2)
        {
          uint64_t v31 = v133;
          uint64_t v32 = *(double (**)(void))((swift_isaMask & *v133) + 0x2B0);
          uint64_t v33 = v133;
          *(double *)&uint64_t v34 = v32();
          uint64_t v130 = v35;
          double v131 = v34;
          id v128 = v37;
          id v129 = v36;

          simd_float4x4.position.getter();
          int v40 = (void *)(v3 + 232);
          *(void *)&double v131 = v3 + 240;
          *(void *)&uint64_t v130 = v3 + 248;
          *(void *)&id v129 = v3 + 256;
          unint64_t v127 = (void *)(v3 + 272);
          *(void *)&id v128 = v3 + 264;
          uint64_t v41 = v134;
          long long v42 = *v134;
          unint64_t v126 = (void *)(v3 + 280);
          if (v42)
          {
LABEL_25:
            if ((void)v123)
            {
              id v119 = v28;
              CGFloat v54 = *(void (**)(unint64_t *__return_ptr, uint64_t))(**(void **)(v3 + 88) + 144);
              uint64_t v55 = v31;
              CGFloat v56 = v30;
              id v57 = swift_retain();
              v54(v135, v57);
              swift_release();
              memcpy(v136, v135, sizeof(v136));
              CGFloat v58 = (void *)sub_1000A3850();
              CATransform3D v59 = sub_100016F7C((uint64_t)v136);
              if (v58)
              {
                int v113 = v56;
                *(double *)&id v60 = (*(double (**)(uint64_t))((swift_isaMask & *v55) + 0x2B0))(v59);
                id v122 = v61;
                unint64_t v123 = v60;
                int v120 = v63;
                id v121 = v62;
                int v118 = v58;
                uint64_t v64 = [v58 camera];
                [v64 transform];
                id v116 = v66;
                uint64_t v117 = v65;
                id v114 = v68;
                uint64_t v115 = v67;

                simd_float4x4.position.getter();
                uint64_t v117 = v69;
                id v70 = simd_float4x4.position.getter();
                id v72 = vsubq_f32(v117, v71);
                id v73 = vmulq_f32(v72, v72);
                id v74 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v73, 2), vaddq_f32(v73, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v73.f32, 1))).f32[0]);
                id v75 = *(char **)(v3 + 128);
                id v76 = v55;
                id v77 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v55) + 0x2C0))(v70);
                id v78 = (*(uint64_t (**)(uint64_t))(*(void *)v77 + 216))(v77);
                swift_release();
                if (v78)
                {
                  id v79 = *(unsigned char *)(v78 + 48);
                  swift_release();
                }
                else
                {
                  id v79 = 7;
                }
                id v105 = v119;
                sub_1001A3708(v79, *(double *)&v123, *(double *)&v122, *(double *)&v121, *(double *)&v120, v74);
                id v106 = v76;
                if (*(unsigned char *)(v3 + 138))
                {
                  swift_retain();
                  StateValue.wrappedValue.getter();
                  swift_release();
                  id v107 = v135[0];
                  sub_10001F780(v135[0]);
                  if (v107 != 0xC000000000000010)
                  {
                    [v75 setState:0];
                    *(unsigned char *)(v3 + 137) = 0;
                    unint64_t v108 = type metadata accessor for Date();
                    unint64_t v109 = (uint64_t)v124;
                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v124, 1, 1, v108);
                    unint64_t v110 = v3 + qword_1004CF360;
                    swift_beginAccess();
                    sub_1000DB434(v109, v110);
                    swift_endAccess();
LABEL_43:
                    unint64_t v111 = v113;
LABEL_44:
                    sub_1001A0898(v106, v111, v105 & 1, (v105 >> 8) & 1);

                    uint64_t v31 = v133;
                    goto LABEL_31;
                  }
                }
                else if ((*(uint64_t (**)(void))((swift_isaMask & *v76) + 0xD0))() != 4)
                {
                  swift_retain();
                  StateValue.wrappedValue.getter();
                  swift_release();
                  unint64_t v111 = v113;
                  if (!LOBYTE(v135[0])) {
                    [v75 setState:1];
                  }
                  goto LABEL_44;
                }
                [v75 setState:3];
                goto LABEL_43;
              }

              uint64_t v31 = v133;
            }
LABEL_30:
            id v80 = (uint64_t)v124;
            id v75 = *(char **)(v3 + 128);
            [v75 setState:0];
            *(unsigned char *)(v3 + 137) = 0;
            id v81 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v80, 1, 1, v81);
            id v82 = v3 + qword_1004CF360;
            swift_beginAccess();
            sub_1000DB434(v80, v82);
            swift_endAccess();
LABEL_31:
            id v83 = *(_DWORD *)&v75[OBJC_IVAR____TtC7Measure11ReticleView_currentDiameter];
            id v84 = *(uint64_t (**)(unint64_t *))(**(void **)(v3 + 112) + 400);
            swift_retain();
            id v85 = (void (*)(unint64_t *, void))v84(v135);
            *id v86 = v83;
            v85(v135, 0);
            id v87 = swift_release();
            if (a2)
            {
              *(void *)(v3 + 368) = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v31) + 0x2F0))(v87);
              id v88 = v134;
              v134[88] = 0;
              id v89 = (*(double (**)(void))((swift_isaMask & *v31) + 0x2B0))();
              unint64_t v91 = v90;
              uint64_t v92 = v89;
              id v94 = v93;
              id v96 = v95;
              id v98 = v97;
              id v100 = v99;
              id v102 = v101;
              uint64_t v104 = v103;
            }
            else
            {
              uint64_t v92 = 0.0;
              unint64_t v91 = 0;
              id v96 = 0;
              id v94 = 0;
              id v100 = 0;
              id v98 = 0;
              uint64_t v104 = 0;
              id v102 = 0;
              *(void *)(v3 + 368) = 0;
              id v88 = v134;
              v134[88] = 1;
            }
            *unint64_t v132 = v92;
            *int v40 = v91;
            *(void *)double v131 = v96;
            *(void *)uint64_t v130 = v94;
            *(void *)id v129 = v100;
            *(void *)id v128 = v98;
            *unint64_t v127 = v104;
            uint64_t v30 = v125;
            *unint64_t v126 = v102;
            *id v88 = a2 == 0;
            goto LABEL_35;
          }
          long long v43 = v38;
          uint64_t v44 = v39;
        }
        else
        {
          int v40 = (void *)(v3 + 232);
          *(void *)&double v131 = v3 + 240;
          *(void *)&uint64_t v130 = v3 + 248;
          *(void *)&id v129 = v3 + 256;
          unint64_t v127 = (void *)(v3 + 272);
          *(void *)&id v128 = v3 + 264;
          uint64_t v31 = v133;
          uint64_t v41 = v134;
          uint64_t v45 = *v134;
          unint64_t v126 = (void *)(v3 + 280);
          if (v45) {
            goto LABEL_30;
          }
          uint64_t v44 = 0;
          long long v43 = 0;
        }
        simd_float4x4.position.getter();
        if (!a2) {
          goto LABEL_30;
        }
        if (*(unsigned char *)(v3 + 136) == 2)
        {
          *(float32x2_t *)v47.f32 = v43;
          v47.i64[1] = v44;
          uint64_t v48 = vsubq_f32(v47, v46);
          uint64_t v49 = vsub_f32(v43, *(float32x2_t *)v46.f32);
          if ((float)(COERCE_FLOAT(vmulq_f32(v48, v48).i32[2]) + vaddv_f32(vmul_f32(v49, v49))) < 0.00000011921)
          {
            *(void *)(v3 + 368) = (*(uint64_t (**)(void))((swift_isaMask & *v31) + 0x2F0))();
            v41[88] = 0;
            *(double *)&uint64_t v50 = (*(double (**)(void))((swift_isaMask & *v31) + 0x2B0))();
            *(_OWORD *)(v3 + 224) = v50;
            *(_OWORD *)(v3 + 240) = v51;
            *(_OWORD *)(v3 + 256) = v52;
            *(_OWORD *)(v3 + 272) = v53;
            *uint64_t v41 = 0;
LABEL_35:

            return;
          }
        }
        goto LABEL_25;
      }
    }
    else
    {
      sub_10001F780(v136[0]);
    }
    *(unsigned char *)(v2 + 138) = 1;
    goto LABEL_8;
  }
}

uint64_t sub_1001A23CC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_1001A2404()
{
  return [*(id *)(*(void *)(v0 + 16) + 128) setAlpha:*(double *)(v0 + 24)];
}

uint64_t *sub_1001A242C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_1001A2514(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);

  return v7(v5, v4);
}

uint64_t sub_1001A25B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1001A264C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1001A26E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1001A277C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1001A2814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A2828);
}

uint64_t sub_1001A2828(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1001A2894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A28A8);
}

uint64_t sub_1001A28A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MeasurementCapture()
{
  uint64_t result = qword_1004CF590;
  if (!qword_1004CF590) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001A2964()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double sub_1001A29F0(CGImage *a1)
{
  int64_t Width = CGImageGetWidth(a1);
  if (Width >= (uint64_t)CGImageGetHeight(a1))
  {
    CGImageGetHeight(a1);
    CGImageGetHeight(a1);
    CGImageGetHeight(a1);
    CGSize.init(_:_:)();
    CGRect.init(centerPoint:size:)();
    double v4 = v19;
    CGFloat v21 = v20;
    CGFloat v23 = v22;
    CGFloat v25 = v24;
    CGImageGetWidth(a1);
    CGImageGetHeight(a1);
    CGSize.init(_:_:)();
    CGFloat v27 = v26;
    CGFloat v29 = v28;
    v40.origin.CGFloat x = 0.0;
    v40.origin.CGFloat y = 0.0;
    v40.size.width = v27;
    v40.size.height = v29;
    double MinX = CGRectGetMinX(v40);
    v41.origin.CGFloat x = v4;
    v41.origin.CGFloat y = v21;
    v41.size.width = v23;
    v41.size.height = v25;
    double v31 = MinX - CGRectGetMinX(v41);
    v42.origin.CGFloat x = 0.0;
    v42.origin.CGFloat y = 0.0;
    v42.size.width = v27;
    v42.size.height = v29;
    double MaxX = CGRectGetMaxX(v42);
    v43.origin.CGFloat x = v4;
    v43.origin.CGFloat y = v21;
    v43.size.width = v23;
    v43.size.height = v25;
    double v33 = CGRectGetMaxX(v43);
    if (v31 > 0.0 || MaxX - v33 < 0.0) {
      goto LABEL_9;
    }
  }
  else
  {
    CGImageGetWidth(a1);
    CGImageGetWidth(a1);
    CGImageGetWidth(a1);
    CGSize.init(_:_:)();
    CGRect.init(centerPoint:size:)();
    double v4 = v3;
    CGFloat v6 = v5;
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    CGImageGetWidth(a1);
    CGImageGetHeight(a1);
    CGSize.init(_:_:)();
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    v36.origin.CGFloat x = 0.0;
    v36.origin.CGFloat y = 0.0;
    v36.size.width = v12;
    v36.size.height = v14;
    double MinY = CGRectGetMinY(v36);
    v37.origin.CGFloat x = v4;
    v37.origin.CGFloat y = v6;
    v37.size.width = v8;
    v37.size.height = v10;
    double v16 = MinY - CGRectGetMinY(v37);
    v38.origin.CGFloat x = 0.0;
    v38.origin.CGFloat y = 0.0;
    v38.size.width = v12;
    v38.size.height = v14;
    double MaxY = CGRectGetMaxY(v38);
    v39.origin.CGFloat x = v4;
    v39.origin.CGFloat y = v6;
    v39.size.width = v8;
    v39.size.height = v10;
    double v18 = CGRectGetMaxY(v39);
    if (v16 > 0.0 || MaxY - v18 < 0.0)
    {
LABEL_9:
      CGRect.centerPoint.getter();
      CGRect.init(centerPoint:size:)();
      return v34;
    }
  }
  return v4;
}

uint64_t sub_1001A2CD8(uint64_t a1, uint64_t a2, char a3)
{
  sub_100012894(&qword_1004CF5C8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003F8B70;
  *(void *)(inited + 32) = kCGImageSourceCreateThumbnailWithTransform;
  *(unsigned char *)(inited + 40) = 1;
  *(void *)(inited + 64) = &type metadata for Bool;
  *(void *)(inited + 72) = kCGImageSourceCreateThumbnailFromImageAlways;
  *(unsigned char *)(inited + 80) = 1;
  *(void *)(inited + 104) = &type metadata for Bool;
  *(void *)(inited + 112) = kCGImageSourceThumbnailMaxPixelSize;
  *(void *)(inited + 144) = &type metadata for Int;
  *(void *)(inited + 120) = 800;
  CFStringRef v5 = (id)kCGImageSourceCreateThumbnailWithTransform;
  CFStringRef v6 = (id)kCGImageSourceCreateThumbnailFromImageAlways;
  CFStringRef v7 = (id)kCGImageSourceThumbnailMaxPixelSize;
  sub_1000E15D4(inited);
  type metadata accessor for CFString(0);
  sub_1001A3640();
  v8.super.CFDataRef isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  CFDataRef isa = Data._bridgeToObjectiveC()().super.isa;
  CGFloat v10 = CGImageSourceCreateWithData(isa, 0);

  if (!v10)
  {
    if ((a3 & 1) == 0) {
      goto LABEL_8;
    }
LABEL_7:
    sub_1001A3328();
    goto LABEL_8;
  }
  CFDictionaryRef v11 = CGImageSourceCopyPropertiesAtIndex(v10, 0, 0);
  if (v11)
  {
    CFDictionaryRef v12 = v11;
    uint64_t v14 = 0;
    static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();
  }
  if (a3) {
    goto LABEL_7;
  }
LABEL_8:

  return 0;
}

void sub_1001A3328()
{
  id v0 = [self defaultManager];
  uint64_t v1 = type metadata accessor for MeasurementCapture();
  URL._bridgeToObjectiveC()((NSURL *)*(int *)(v1 + 20));
  double v3 = v2;
  id v13 = 0;
  unsigned int v4 = [v0 removeItemAtURL:v2 error:&v13];

  if (v4)
  {
    id v5 = v13;
  }
  else
  {
    id v7 = v13;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
  URL._bridgeToObjectiveC()(v6);
  double v9 = v8;
  id v13 = 0;
  unsigned int v10 = [v0 removeItemAtURL:v8 error:&v13];

  if (v10)
  {
    id v11 = v13;
  }
  else
  {
    id v12 = v13;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
}

uint64_t sub_1001A3490(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __chkstk_darwin(a1);
  CFStringRef v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  NSDictionary v8 = (char *)&v12 - v7;
  char v9 = static URL.== infix(_:_:)();
  sub_1001A3580(a1, (uint64_t)v8);
  sub_1001A3580(a2, (uint64_t)v6);
  if (v9) {
    char v10 = static URL.== infix(_:_:)();
  }
  else {
    char v10 = 0;
  }
  sub_1001A35E4((uint64_t)v6);
  sub_1001A35E4((uint64_t)v8);
  return v10 & 1;
}

uint64_t sub_1001A3580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MeasurementCapture();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A35E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MeasurementCapture();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1001A3640()
{
  unint64_t result = qword_1004C3858;
  if (!qword_1004C3858)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004C3858);
  }
  return result;
}

ValueMetadata *type metadata accessor for RubberBand()
{
  return &type metadata for RubberBand;
}

double sub_1001A36A8(double result, double a2, double a3, double a4, double a5)
{
  if (a3 < result) {
    return (1.0 - 1.0 / ((result - a3) / a4 * a5 + 1.0)) * a4 + a3;
  }
  if (result < a2) {
    return a2 - (1.0 - 1.0 / ((a2 - result) / a4 * a5 + 1.0)) * a4;
  }
  return result;
}

void sub_1001A3708(char a1, double a2, double a3, double a4, double a5, float a6)
{
  void (*v28)(CATransform3D *__return_ptr, uint64_t);
  uint64_t v29;
  void *v30;
  uint64_t v31;
  long long v32;
  long long v33;
  long long v34;
  long long v35;
  void *v36;
  char *v37;
  long long v38;
  long long v39;
  long long v40;
  long long v41;
  CATransform3D aBlock;
  CATransform3D __src[4];
  CATransform3D __dst[5];

  uint64_t v7 = v6;
  float v10 = (float)(1.0 / (float)(a6 + 0.3)) + 0.5;
  if (qword_1004C30F0 != -1) {
    swift_once();
  }
  double v11 = v10;
  float v12 = qword_1004F88F0(a6);
  if (qword_1004C30F8 != -1) {
    swift_once();
  }
  *(float *)&v6[OBJC_IVAR____TtC7Measure11ReticleView_currentDiameter] = (float)(v12 * *(float *)&dword_1004F8900)
                                                                       + (float)(v12 * *(float *)&dword_1004F8900);
  id v13 = self;
  [v13 begin];
  [v13 setAnimationDuration:0.0];
  uint64_t v14 = OBJC_IVAR____TtC7Measure11ReticleView_snapPointContainer;
  id v15 = *(id *)&v7[OBJC_IVAR____TtC7Measure11ReticleView_snapPointContainer];
  CATransform3DMakeScale(__dst, v11, v11, 1.0);
  [v15 setTransform:__dst];

  [v13 commit];
  simd_float4x4.up.getter();
  simd_float4x4.position.getter();
  createTransform(normal:forward:position:)();
  simd_float4x4.up.getter();
  HIDWORD(v16) = 0;
  CGRect v41 = v16;
  simd_float4x4.forward.getter();
  HIDWORD(v17) = 0;
  CGRect v40 = v17;
  simd_float4x4.right.getter();
  *(float32x2_t *)&long long v19 = vsub_f32(0, v18);
  *((float *)&v19 + 2) = 0.0 - v20;
  HIDWORD(v19) = 0;
  CGRect v39 = v19;
  simd_float4x4.position.getter();
  HIDWORD(v21) = 1.0;
  CGRect v38 = v21;
  unsigned int v22 = [self jasperAvailable];
  CGFloat v23 = &v7[OBJC_IVAR____TtC7Measure11ReticleView_currentReticleTransform];
  if (v22)
  {
    sub_1001A5BCC(a1);
    slerp(transform1:transform2:percent:)();
  }
  else
  {
    long long v25 = v40;
    long long v26 = v41;
    long long v27 = v38;
    long long v24 = v39;
  }
  *(_OWORD *)CGFloat v23 = v24;
  *((_OWORD *)v23 + 1) = v25;
  *((_OWORD *)v23 + 2) = v26;
  *((_OWORD *)v23 + 3) = v27;
  type metadata accessor for MeasureCamera();
  double v28 = *(void (**)(CATransform3D *__return_ptr, uint64_t))(**(void **)&v7[OBJC_IVAR____TtC7Measure11ReticleView__frameState]
                                                                    + 144);
  CGFloat v29 = swift_retain();
  v28(__src, v29);
  swift_release();
  memcpy(__dst, __src, 0x200uLL);
  sub_100016F7C((uint64_t)__dst);
  static MeasureCamera.getLayerTransform(for:view:)();
  __src[0] = __dst[4];
  CATransform3DScale(&aBlock, __src, v12, v12, 1.0);
  __src[0] = aBlock;
  if (![v7 state])
  {
    [*(id *)&v7[OBJC_IVAR____TtC7Measure11ReticleView_reticleParentLayer] removeAllAnimations];
    [*(id *)&v7[OBJC_IVAR____TtC7Measure11ReticleView_reticleBackingView] _removeAllRetargetableAnimations:1];
    [*(id *)&v7[v14] removeAllAnimations];
    sub_1001A5C88(&__src[0].m11);
  }
  uint64_t v30 = self;
  double v31 = swift_allocObject();
  uint64_t v32 = *(_OWORD *)&__src[0].m33;
  *(_OWORD *)(v31 + 88) = *(_OWORD *)&__src[0].m31;
  *(_OWORD *)(v31 + 104) = v32;
  double v33 = *(_OWORD *)&__src[0].m43;
  *(_OWORD *)(v31 + 120) = *(_OWORD *)&__src[0].m41;
  *(_OWORD *)(v31 + 136) = v33;
  double v34 = *(_OWORD *)&__src[0].m13;
  *(_OWORD *)(v31 + 24) = *(_OWORD *)&__src[0].m11;
  *(_OWORD *)(v31 + 40) = v34;
  uint64_t v35 = *(_OWORD *)&__src[0].m23;
  *(_OWORD *)(v31 + 56) = *(_OWORD *)&__src[0].m21;
  *(void *)(v31 + 16) = v7;
  *(_OWORD *)(v31 + 72) = v35;
  *(void *)&aBlock.CGFloat m21 = sub_1001A7514;
  *(void *)&aBlock.CGFloat m22 = v31;
  *(void *)&aBlock.CGFloat m11 = _NSConcreteStackBlock;
  *(void *)&aBlock.CGFloat m12 = 1107296256;
  *(void *)&aBlock.CGFloat m13 = sub_100049AB4;
  *(void *)&aBlock.CGFloat m14 = &unk_100491A90;
  CGRect v36 = _Block_copy(&aBlock);
  CGRect v37 = v7;
  swift_release();
  [v30 _animateUsingSpringInteractive:0 animations:v36 completion:0];
  _Block_release(v36);
}

unint64_t sub_1001A3C28@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1001A6F54(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_1001A3CC0(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC7Measure11ReticleView__state;
  if (*(void *)&v1[OBJC_IVAR____TtC7Measure11ReticleView__state] != a1)
  {
    char v4 = v1;
    switch(a1)
    {
      case 0:
        [v1 frame];
        CGFloat v5 = CGRectGetWidth(v11) * 0.5;
        [v1 frame];
        [*(id *)&v1[OBJC_IVAR____TtC7Measure11ReticleView_snapPointContainer] setPosition:v5, CGRectGetHeight(v12) * 0.5];
        CFStringRef v6 = *(void **)&v1[OBJC_IVAR____TtC7Measure11ReticleView_animator];
        if (!v6)
        {
          __break(1u);
LABEL_14:
          __break(1u);
LABEL_15:
          __break(1u);
LABEL_16:
          __break(1u);
LABEL_17:
          _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
          __break(1u);
          JUMPOUT(0x1001A3E80);
        }
        id v7 = v6;
        sub_10019D43C((uint64_t)[v4 state]);
        break;
      case 1:
        float v10 = *(void **)&v1[OBJC_IVAR____TtC7Measure11ReticleView_animator];
        if (!v10) {
          goto LABEL_16;
        }
        id v7 = v10;
        sub_10019ECB8((uint64_t)[v4 state]);
        break;
      case 2:
        NSDictionary v8 = *(void **)&v1[OBJC_IVAR____TtC7Measure11ReticleView_animator];
        if (!v8) {
          goto LABEL_14;
        }
        id v7 = v8;
        sub_10019DE60((uint64_t)[v4 state]);
        break;
      case 3:
        char v9 = *(void **)&v1[OBJC_IVAR____TtC7Measure11ReticleView_animator];
        if (!v9) {
          goto LABEL_15;
        }
        id v7 = v9;
        sub_10019E644((uint64_t)[v4 state]);
        break;
      default:
        goto LABEL_17;
    }

    *(void *)&v4[v2] = a1;
  }
}

uint64_t sub_1001A3EB0(unint64_t a1)
{
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  uint64_t result = static UIDevice.isIPad()();
  if (result)
  {
    if (a1 - 1 >= 4) {
      return result;
    }
    goto LABEL_6;
  }
  if (a1 <= 4 && ((1 << a1) & 0x1A) != 0)
  {
LABEL_6:
    uint64_t v4 = OBJC_IVAR____TtC7Measure11ReticleView__orientation;
    if (*(void *)&v1[OBJC_IVAR____TtC7Measure11ReticleView__orientation] != a1)
    {
      [v1 frame];
      CGFloat v5 = CGRectGetWidth(v14) * 0.5;
      [v1 frame];
      CGFloat v6 = CGRectGetHeight(v15) * 0.5;
      [*(id *)&v1[OBJC_IVAR____TtC7Measure11ReticleView_reticleParentLayer] setPosition:v5, v6];
      [*(id *)&v1[OBJC_IVAR____TtC7Measure11ReticleView_snapPointContainer] setPosition:v5 v6];
      SIMD2<>.init(_:)();
      *(void *)&v1[OBJC_IVAR____TtC7Measure11ReticleView_searchArea] = v7;
      NSDictionary v8 = *(uint64_t (**)(uint64_t))(**(void **)&v1[OBJC_IVAR____TtC7Measure11ReticleView__input] + 200);
      uint64_t v9 = swift_retain();
      uint64_t v10 = v8(v9);
      swift_release();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v1;
      CGRect v12 = *(void (**)(double (*)(uint64_t), uint64_t))(*(void *)v10 + 280);
      id v13 = v1;
      v12(sub_1001A6F9C, v11);
      swift_release();
      uint64_t result = swift_release();
      *(void *)&v1[v4] = a1;
    }
  }
  return result;
}

uint64_t sub_1001A4100(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC7Measure11ReticleView__state] = 0;
  uint64_t v10 = OBJC_IVAR____TtC7Measure11ReticleView_currentDiameter;
  uint64_t v11 = qword_1004C30F8;
  CGRect v12 = v4;
  if (v11 != -1) {
    swift_once();
  }
  *(float *)&v4[v10] = *(float *)&dword_1004F8900 + *(float *)&dword_1004F8900;
  id v13 = &v12[OBJC_IVAR____TtC7Measure11ReticleView_targetOffset];
  *(void *)id v13 = 0;
  *((void *)v13 + 1) = 0;
  *(void *)&v12[OBJC_IVAR____TtC7Measure11ReticleView_snapTimer] = 0;
  CGRect v14 = &v12[OBJC_IVAR____TtC7Measure11ReticleView_snapTimestamp];
  uint64_t v15 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v16 = OBJC_IVAR____TtC7Measure11ReticleView__frameState;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v18 = sub_100012894(&qword_1004C3F10);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_1004F8630;
  float v20 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 272);
  swift_retain();
  *(void *)&v12[v16] = v20(KeyPath, v19);
  uint64_t v21 = OBJC_IVAR____TtC7Measure11ReticleView__input;
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = sub_100012894((uint64_t *)&unk_1004CF6F0);
  uint64_t v24 = qword_1004F8630;
  long long v25 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 272);
  swift_retain();
  *(void *)&v12[v21] = v25(v22, v24);
  long long v26 = &v12[OBJC_IVAR____TtC7Measure11ReticleView_currentReticleTransform];
  *((_OWORD *)v26 + 2) = 0u;
  *((_OWORD *)v26 + 3) = 0u;
  *(_OWORD *)long long v26 = 0u;
  *((_OWORD *)v26 + 1) = 0u;
  *(void *)&v12[OBJC_IVAR____TtC7Measure11ReticleView__orientation] = 0;
  uint64_t v27 = OBJC_IVAR____TtC7Measure11ReticleView_reticleBoundsLayer;
  *(void *)&v12[v27] = [objc_allocWithZone((Class)CATransformLayer) init];
  uint64_t v28 = OBJC_IVAR____TtC7Measure11ReticleView_reticleParentLayer;
  *(void *)&v12[v28] = [objc_allocWithZone((Class)CATransformLayer) init];
  uint64_t v29 = OBJC_IVAR____TtC7Measure11ReticleView_reticleShapeLayer;
  *(void *)&v12[v29] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v30 = OBJC_IVAR____TtC7Measure11ReticleView_snapPointLayer;
  *(void *)&v12[v30] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v31 = OBJC_IVAR____TtC7Measure11ReticleView_snapPointContainer;
  *(void *)&v12[v31] = [objc_allocWithZone((Class)CALayer) init];
  v12[OBJC_IVAR____TtC7Measure11ReticleView_isGoingActive] = 0;
  *(void *)&v12[OBJC_IVAR____TtC7Measure11ReticleView_transformChangeDuration] = 0x3FB999999999999ALL;
  *(void *)&v12[OBJC_IVAR____TtC7Measure11ReticleView_transformChangeDurationAfterIdle] = 0x3FC999999999999ALL;
  uint64_t v32 = &v12[OBJC_IVAR____TtC7Measure11ReticleView_searchArea];
  *(void *)uint64_t v32 = 0;
  *((_DWORD *)v32 + 2) = 1106247680;
  uint64_t v33 = OBJC_IVAR____TtC7Measure11ReticleView_reticleBackingView;
  *(void *)&v12[v33] = [objc_allocWithZone((Class)type metadata accessor for TransformLayerView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v12[OBJC_IVAR____TtC7Measure11ReticleView_animatingProperties] = 0;
  *(void *)&v12[OBJC_IVAR____TtC7Measure11ReticleView_animator] = 0;

  v123.receiver = v12;
  v123.super_class = ObjectType;
  CGFloat v118 = a3;
  double v34 = (char *)objc_msgSendSuper2(&v123, "initWithFrame:", a1, a2, a3, a4);
  [v34 setAutoresizingMask:18];
  [v34 setUserInteractionEnabled:0];
  uint64_t v35 = OBJC_IVAR____TtC7Measure11ReticleView_reticleBackingView;
  id v36 = *(id *)&v34[OBJC_IVAR____TtC7Measure11ReticleView_reticleBackingView];
  [v34 bounds];
  [v36 setFrame:];

  CGRect v37 = *(void **)&v34[v35];
  [v34 addSubview:v37];
  id v38 = [v37 layer];
  self;
  uint64_t v39 = swift_dynamicCastObjCClassUnconditional();
  uint64_t v40 = OBJC_IVAR____TtC7Measure11ReticleView_reticleParentLayer;
  CGRect v41 = *(void **)&v34[OBJC_IVAR____TtC7Measure11ReticleView_reticleParentLayer];
  *(void *)&v34[OBJC_IVAR____TtC7Measure11ReticleView_reticleParentLayer] = v39;

  uint64_t v121 = v40;
  [*(id *)&v34[v40] setAnchorPoint:0.0, 0.0];
  float v42 = *(float *)&dword_1004F8900;
  if (qword_1004C3100 != -1) {
    swift_once();
  }
  CGFloat v43 = a4;
  double v44 = v42;
  float v45 = *(double *)&qword_1004F8908;
  id v46 = [objc_allocWithZone((Class)UIBezierPath) init];
  uint64_t v47 = self;
  unsigned int v48 = [v47 jasperAvailable];
  uint64_t v49 = (float *)Float.degreesToRadians.unsafeMutableAddressor();
  float v50 = *v49;
  double v51 = (float)((float)(v45 + 0.0) * *v49);
  CGFloat v52 = self;
  id v53 = v52;
  if (v48)
  {
    float v54 = 180.0;
    id v55 = [v52 bezierPathWithArcCenter:1 radius:0.0 startAngle:0.0 endAngle:v44 clockwise:v51];
  }
  else
  {
    id v56 = [v52 bezierPathWithArcCenter:1 radius:0.0 startAngle:0.0 endAngle:v44 clockwise:v51];
    [v46 appendPath:v56];

    id v57 = [v53 bezierPathWithArcCenter:1 radius:0.0 startAngle:0.0 endAngle:v44 clockwise:(float)((float)(v45 + 90.0) * *v49) counterclockwise:(float)((float)(180.0 - v45) * *v49)];
    [v46 appendPath:v57];

    float v54 = 270.0;
    id v55 = [v53 bezierPathWithArcCenter:1 radius:0.0 startAngle:0.0 endAngle:v44 clockwise:(float)((float)(v45 + 180.0) * *v49) (float)((float)(270.0 - v45) * *v49)];
  }
  id v58 = v55;
  [v46 appendPath:v58];

  id v59 = [v53 bezierPathWithArcCenter:1 radius:0.0 startAngle:0.0 endAngle:v44 clockwise:((float)((float)(v45 + v54) * *v49))];
  [v46 appendPath:v59];

  id v60 = [objc_allocWithZone((Class)CALayer) init];
  id v120 = [objc_allocWithZone((Class)CALayer) init];
  uint64_t v61 = OBJC_IVAR____TtC7Measure11ReticleView_reticleShapeLayer;
  id v62 = *(id *)&v34[OBJC_IVAR____TtC7Measure11ReticleView_reticleShapeLayer];
  id v63 = [v46 CGPath];
  [v62 setPath:v63];

  if ([v47 jasperAvailable]) {
    [*(id *)&v34[v61] setLineCap:kCALineCapRound];
  }
  uint64_t v64 = qword_1004C30E8;
  id v65 = *(id *)&v34[v61];
  if (v64 != -1) {
    swift_once();
  }
  [v65 setLineWidth:*(float *)&dword_1004F88EC];

  uint64_t v66 = qword_1004C30A0;
  id v67 = *(id *)&v34[v61];
  if (v66 != -1) {
    swift_once();
  }
  uint64_t v117 = v46;
  id v68 = [(id)qword_1004F88B0 CGColor];
  [v67 setFillColor:v68];

  uint64_t v69 = qword_1004C30A8;
  id v70 = *(id *)&v34[v61];
  if (v69 != -1) {
    swift_once();
  }
  id v71 = [(id)qword_1004F88B8 CGColor];
  [v70 setStrokeColor:v71];

  [*(id *)&v34[v61] setCompositingFilter:kCAFilterPlusL];
  uint64_t v72 = OBJC_IVAR____TtC7Measure11ReticleView_reticleBoundsLayer;
  id v73 = *(void **)&v34[OBJC_IVAR____TtC7Measure11ReticleView_reticleBoundsLayer];
  CGPoint.init(_:)();
  id v74 = v73;
  * infix(_:_:)();
  static CGPoint.- infix(_:_:)();
  [v74 setBounds:];

  [*(id *)&v34[v121] addSublayer:*(void *)&v34[v72]];
  [*(id *)&v34[v121] addSublayer:v60];
  [v60 addSublayer:v120];
  id v75 = *(void **)&v34[v61];
  [v120 addSublayer:v75];
  v124.origin.CGFloat x = a1;
  v124.origin.CGFloat y = a2;
  v124.size.width = v118;
  v124.size.height = v43;
  CGFloat v76 = CGRectGetWidth(v124) * 0.5;
  v125.origin.CGFloat x = a1;
  v125.origin.CGFloat y = a2;
  v125.size.width = v118;
  v125.size.height = v43;
  [*(id *)&v34[v121] setPosition:v76, CGRectGetHeight(v125) * 0.5];
  [v75 setPosition:0.0, 0.0];
  id v119 = v60;
  [v60 setPosition:0.0, 0.0];
  [v120 setPosition:0.0, 0.0];
  SIMD2<>.init(_:)();
  *(void *)&v34[OBJC_IVAR____TtC7Measure11ReticleView_searchArea] = v77;
  id v78 = *(uint64_t (**)(uint64_t))(**(void **)&v34[OBJC_IVAR____TtC7Measure11ReticleView__input] + 200);
  uint64_t v79 = swift_retain();
  uint64_t v80 = v78(v79);
  swift_release();
  uint64_t v81 = swift_allocObject();
  *(void *)(v81 + 16) = v34;
  id v82 = *(void (**)(double (*)(uint64_t), uint64_t))(*(void *)v80 + 280);
  id v83 = v34;
  v82(sub_1001A7564, v81);
  swift_release();
  swift_release();
  if (qword_1004C3108 != -1) {
    swift_once();
  }
  id v84 = [self bezierPathWithArcCenter:1 radius:0.0 startAngle:0.0 endAngle:*(float *)&dword_1004F8910 clockwise:0.0];
  uint64_t v85 = OBJC_IVAR____TtC7Measure11ReticleView_snapPointLayer;
  id v86 = *(id *)&v83[OBJC_IVAR____TtC7Measure11ReticleView_snapPointLayer];
  id v116 = v84;
  id v87 = [v84 CGPath];
  [v86 setPath:v87];

  uint64_t v88 = qword_1004C30B8;
  id v89 = *(id *)&v83[v85];
  if (v88 != -1) {
    swift_once();
  }
  id v90 = [(id)qword_1004F88C8 CGColor];
  [v89 setFillColor:v90];

  unint64_t v91 = *(void **)&v83[v85];
  uint64_t v92 = self;
  id v93 = v91;
  id v94 = [v92 clearColor];
  id v95 = [v94 CGColor];

  [v93 setStrokeColor:v95];
  id v96 = [objc_allocWithZone((Class)CALayer) init];
  uint64_t v97 = OBJC_IVAR____TtC7Measure11ReticleView_snapPointContainer;
  id v98 = *(void **)&v83[OBJC_IVAR____TtC7Measure11ReticleView_snapPointContainer];
  *(void *)&v83[OBJC_IVAR____TtC7Measure11ReticleView_snapPointContainer] = v96;

  [*(id *)&v83[v97] addSublayer:*(void *)&v83[v85]];
  [*(id *)&v83[v97] setPosition:0.0, 0.0];
  id v99 = [v83 layer];
  [v99 addSublayer:*(void *)&v83[v97]];

  id v100 = *(void **)&v34[v61];
  id v101 = *(void **)&v83[v85];
  id v102 = objc_allocWithZone((Class)type metadata accessor for ReticleAnimator());
  id v103 = v100;
  id v104 = v119;
  id v105 = v120;
  id v106 = sub_10019C550(v103, v104, v105, v101);
  id v107 = *(void **)&v83[OBJC_IVAR____TtC7Measure11ReticleView_animator];
  *(void *)&v83[OBJC_IVAR____TtC7Measure11ReticleView_animator] = v106;

  [v83 setState:0];
  id v108 = *(id *)&v34[v121];
  [v108 transform];
  aBlock[11] = 0xBF647AE147AE147BLL;
  [v108 setTransform:aBlock];

  sub_1001A50F4();
  unint64_t v109 = self;
  uint64_t v110 = swift_allocObject();
  *(void *)(v110 + 16) = v83;
  uint64_t v111 = swift_allocObject();
  *(void *)(v111 + 16) = sub_1001A7334;
  *(void *)(v111 + 24) = v110;
  aBlock[4] = sub_100039980;
  void aBlock[5] = v111;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000FA194;
  aBlock[3] = &unk_100491950;
  int v112 = _Block_copy(aBlock);
  int v113 = v83;
  swift_retain();
  swift_release();
  [v109 performWithoutAnimation:v112];
  _Block_release(v112);
  LOBYTE(v100) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v100)
  {
    __break(1u);
  }
  else
  {
    id v115 = [self defaultCenter];
    [v115 addObserver:v113 selector:"updateForCurrentOrientation" name:UIDeviceOrientationDidChangeNotification object:0];
    swift_release();

    return (uint64_t)v113;
  }
  return result;
}

uint64_t sub_1001A50F4()
{
  id v29 = [objc_allocWithZone((Class)UIViewFloatAnimatableProperty) init];
  uint64_t v52 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v0 = [objc_allocWithZone((Class)UIViewFloatAnimatableProperty) init];
  uint64_t v55 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v1 = [objc_allocWithZone((Class)UIViewFloatAnimatableProperty) init];
  uint64_t v54 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v2 = [objc_allocWithZone((Class)UIViewFloatAnimatableProperty) init];
  uint64_t v53 = swift_allocObject();
  double v3 = v2;
  swift_unknownObjectWeakInit();
  id v4 = [objc_allocWithZone((Class)UIViewFloatAnimatableProperty) init];
  uint64_t v51 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v5 = [objc_allocWithZone((Class)UIViewFloatAnimatableProperty) init];
  uint64_t v60 = swift_allocObject();
  CGFloat v6 = v5;
  swift_unknownObjectWeakInit();
  id v22 = [objc_allocWithZone((Class)UIViewFloatAnimatableProperty) init];
  uint64_t v59 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v35 = [objc_allocWithZone((Class)UIViewFloatAnimatableProperty) init];
  uint64_t v57 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v33 = [objc_allocWithZone((Class)UIViewFloatAnimatableProperty) init];
  uint64_t v56 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v42 = [objc_allocWithZone((Class)UIViewFloatAnimatableProperty) init];
  uint64_t v58 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v39 = [objc_allocWithZone((Class)UIViewFloatAnimatableProperty) init];
  uint64_t v45 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v37 = [objc_allocWithZone((Class)UIViewFloatAnimatableProperty) init];
  uint64_t v50 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v31 = [objc_allocWithZone((Class)UIViewFloatAnimatableProperty) init];
  uint64_t v47 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v7 = [objc_allocWithZone((Class)UIViewFloatAnimatableProperty) init];
  uint64_t v46 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v8 = [objc_allocWithZone((Class)UIViewFloatAnimatableProperty) init];
  uint64_t v44 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v9 = [objc_allocWithZone((Class)UIViewFloatAnimatableProperty) init];
  uint64_t v41 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100012894((uint64_t *)&unk_1004CEA00);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100401D90;
  *(void *)(v10 + 32) = v29;
  *(void *)(v10 + 40) = v0;
  *(void *)(v10 + 48) = v1;
  *(void *)(v10 + 56) = v3;
  *(void *)(v10 + 64) = v4;
  *(void *)(v10 + 72) = v6;
  *(void *)(v10 + 80) = v22;
  *(void *)(v10 + 88) = v35;
  *(void *)(v10 + 96) = v33;
  *(void *)(v10 + 104) = v42;
  *(void *)(v10 + 112) = v39;
  *(void *)(v10 + 120) = v37;
  *(void *)(v10 + 128) = v31;
  *(void *)(v10 + 136) = v7;
  *(void *)(v10 + 144) = v8;
  *(void *)(v10 + 152) = v9;
  CGAffineTransform aBlock = (void **)v10;
  specialized Array._endMutation()();
  float v20 = aBlock;
  uint64_t v49 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v21 = self;
  sub_10001C99C(0, &qword_1004CF700);
  id v30 = v29;
  id v28 = v0;
  id v27 = v1;
  id v26 = v3;
  id v25 = v4;
  id v24 = v6;
  id v23 = v22;
  id v36 = v35;
  id v34 = v33;
  id v43 = v42;
  id v40 = v39;
  id v38 = v37;
  id v32 = v31;
  id v19 = v7;
  id v18 = v8;
  id v17 = v9;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v52;
  v11[3] = v55;
  v11[4] = v54;
  uint64_t v11[5] = v53;
  v11[6] = v51;
  v11[7] = v60;
  v11[8] = v59;
  v11[9] = v57;
  v11[10] = v56;
  v11[11] = v58;
  v11[12] = v45;
  v11[13] = v50;
  v11[14] = v47;
  v11[15] = v46;
  unsigned char v11[16] = v44;
  v11[17] = v41;
  v11[18] = v49;
  id v65 = sub_1001A73A0;
  uint64_t v66 = v11;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v62 = 1107296256;
  id v63 = sub_100049AB4;
  uint64_t v64 = &unk_1004919F0;
  uint64_t v15 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  CGRect v12 = (void *)swift_allocObject();
  _OWORD v12[2] = v52;
  v12[3] = v55;
  v12[4] = v54;
  v12[5] = v53;
  void v12[6] = v51;
  v12[7] = v60;
  v12[8] = v59;
  v12[9] = v57;
  v12[10] = v56;
  v12[11] = v58;
  v12[12] = v45;
  v12[13] = v50;
  v12[14] = v47;
  v12[15] = v46;
  unsigned char v12[16] = v44;
  v12[17] = v41;
  v12[18] = v49;
  id v65 = sub_1001A7474;
  uint64_t v66 = v12;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v62 = 1107296256;
  id v63 = sub_100049AB4;
  uint64_t v64 = &unk_100491A40;
  CGRect v14 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  [v21 _createTransformerWithInputAnimatableProperties:isa modelValueSetter:v15 presentationValueSetter:v14];

  _Block_release(v14);
  _Block_release(v15);

  *(void *)(v48 + OBJC_IVAR____TtC7Measure11ReticleView_animatingProperties) = v20;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001A5A88()
{
  id v0 = [self currentDevice];
  id v1 = [v0 orientation];

  return sub_1001A3EB0((unint64_t)v1);
}

void sub_1001A5BCC(char a1)
{
  if (a1 == 6)
  {
    id v1 = self;
    id v2 = [v1 standardUserDefaults];
    [v2 kReticleADSlerpFactor];
    float v4 = v3;

    if (v4 > 0.0)
    {
      id v5 = [v1 standardUserDefaults];
      [v5 kReticleADSlerpFactor];
    }
  }
}

void sub_1001A5C88(double *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC7Measure11ReticleView_animatingProperties);
  if (!v2) {
    return;
  }
  unint64_t v4 = v2 & 0xC000000000000001;
  if ((v2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_71;
    }
    id v5 = *(void **)(v2 + 32);
    swift_bridgeObjectRetain();
    id v6 = v5;
  }
  id v7 = v6;
  [v6 setValue:*a1];

  if (v4)
  {
    id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_10;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  id v8 = *(id *)(v2 + 40);
LABEL_10:
  id v9 = v8;
  [v8 setValue:a1[1]];

  if (v4)
  {
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_14;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  id v10 = *(id *)(v2 + 48);
LABEL_14:
  uint64_t v11 = v10;
  [v10 setValue:a1[2]];

  if (v4)
  {
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_18;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 4uLL)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  id v12 = *(id *)(v2 + 56);
LABEL_18:
  id v13 = v12;
  [v12 setValue:a1[3]];

  if (v4)
  {
    id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_22;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 5uLL)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  id v14 = *(id *)(v2 + 64);
LABEL_22:
  uint64_t v15 = v14;
  [v14 setValue:a1[4]];

  if (v4)
  {
    id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_26;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 6uLL)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  id v16 = *(id *)(v2 + 72);
LABEL_26:
  id v17 = v16;
  [v16 setValue:a1[5]];

  if (v4)
  {
    id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_30;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 7uLL)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  id v18 = *(id *)(v2 + 80);
LABEL_30:
  id v19 = v18;
  [v18 setValue:a1[6]];

  if (v4)
  {
    id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_34;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 8uLL)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  id v20 = *(id *)(v2 + 88);
LABEL_34:
  id v21 = v20;
  [v20 setValue:a1[7]];

  if (v4)
  {
    id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_38;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 9uLL)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  id v22 = *(id *)(v2 + 96);
LABEL_38:
  id v23 = v22;
  [v22 setValue:a1[8]];

  if (v4)
  {
    id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_42;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 0xAuLL)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  id v24 = *(id *)(v2 + 104);
LABEL_42:
  id v25 = v24;
  [v24 setValue:a1[9]];

  if (v4)
  {
    id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_46;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 0xBuLL)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  id v26 = *(id *)(v2 + 112);
LABEL_46:
  id v27 = v26;
  [v26 setValue:a1[10]];

  if (v4)
  {
    id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_50;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 0xCuLL)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  id v28 = *(id *)(v2 + 120);
LABEL_50:
  id v29 = v28;
  [v28 setValue:a1[11]];

  if (v4)
  {
    id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_54;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 0xDuLL)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  id v30 = *(id *)(v2 + 128);
LABEL_54:
  id v31 = v30;
  [v30 setValue:a1[12]];

  if (v4)
  {
    id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_58;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 0xEuLL)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  id v32 = *(id *)(v2 + 136);
LABEL_58:
  id v33 = v32;
  [v32 setValue:a1[13]];

  if (v4)
  {
    id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_62;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 0xFuLL)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  id v34 = *(id *)(v2 + 144);
LABEL_62:
  id v35 = v34;
  [v34 setValue:a1[14]];

  if (!v4)
  {
    if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 0x10uLL)
    {
      id v36 = *(id *)(v2 + 152);
      goto LABEL_66;
    }
LABEL_85:
    __break(1u);
    return;
  }
  id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_66:
  id v37 = v36;
  swift_bridgeObjectRelease();
  [v37 setValue:a1[15]];
}

uint64_t sub_1001A6244()
{
  return type metadata accessor for ReticleView();
}

uint64_t type metadata accessor for ReticleView()
{
  uint64_t result = qword_1004CF698;
  if (!qword_1004CF698) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001A6298()
{
  sub_10006B9DC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

ValueMetadata *type metadata accessor for ReticleState()
{
  return &type metadata for ReticleState;
}

unsigned char *storeEnumTagSinglePayload for ReticlePulseState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A6488);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReticlePulseState()
{
  return &type metadata for ReticlePulseState;
}

unint64_t sub_1001A64C0(uint64_t a1)
{
  unint64_t result = sub_1001A64E8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001A64E8()
{
  unint64_t result = qword_1004CF6E0;
  if (!qword_1004CF6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CF6E0);
  }
  return result;
}

unint64_t sub_1001A6544()
{
  unint64_t result = qword_1004CF6E8;
  if (!qword_1004CF6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CF6E8);
  }
  return result;
}

void sub_1001A6598()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong value];
    uint64_t v3 = v2;

    swift_beginAccess();
    unsigned int v4 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v4)
    {
      uint64_t v5 = v4;
      [v4 value];
      uint64_t v7 = v6;

      swift_beginAccess();
      id v8 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v8)
      {
        id v9 = v8;
        [v8 value];
        uint64_t v11 = v10;

        swift_beginAccess();
        id v12 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v12)
        {
          id v13 = v12;
          [v12 value];
          uint64_t v15 = v14;

          swift_beginAccess();
          id v16 = (void *)swift_unknownObjectWeakLoadStrong();
          if (v16)
          {
            id v17 = v16;
            [v16 value];
            uint64_t v19 = v18;

            swift_beginAccess();
            id v20 = (void *)swift_unknownObjectWeakLoadStrong();
            if (v20)
            {
              id v21 = v20;
              [v20 value];
              uint64_t v23 = v22;

              swift_beginAccess();
              id v24 = (void *)swift_unknownObjectWeakLoadStrong();
              if (v24)
              {
                id v25 = v24;
                [v24 value];
                uint64_t v27 = v26;

                swift_beginAccess();
                id v28 = (void *)swift_unknownObjectWeakLoadStrong();
                if (v28)
                {
                  id v29 = v28;
                  [v28 value];
                  uint64_t v31 = v30;

                  swift_beginAccess();
                  id v32 = (void *)swift_unknownObjectWeakLoadStrong();
                  if (v32)
                  {
                    id v33 = v32;
                    [v32 value];
                    uint64_t v66 = v34;

                    swift_beginAccess();
                    id v35 = (void *)swift_unknownObjectWeakLoadStrong();
                    if (v35)
                    {
                      id v36 = v35;
                      [v35 value];
                      uint64_t v65 = v37;

                      swift_beginAccess();
                      id v38 = (void *)swift_unknownObjectWeakLoadStrong();
                      if (v38)
                      {
                        id v39 = v38;
                        [v38 value];
                        uint64_t v64 = v40;

                        swift_beginAccess();
                        uint64_t v41 = (void *)swift_unknownObjectWeakLoadStrong();
                        if (v41)
                        {
                          id v42 = v41;
                          [v41 value];
                          uint64_t v63 = v43;

                          swift_beginAccess();
                          uint64_t v44 = (void *)swift_unknownObjectWeakLoadStrong();
                          if (v44)
                          {
                            uint64_t v45 = v44;
                            [v44 value];
                            uint64_t v62 = v46;

                            swift_beginAccess();
                            uint64_t v47 = (void *)swift_unknownObjectWeakLoadStrong();
                            if (v47)
                            {
                              uint64_t v48 = v47;
                              [v47 value];
                              uint64_t v61 = v49;

                              swift_beginAccess();
                              uint64_t v50 = (void *)swift_unknownObjectWeakLoadStrong();
                              if (v50)
                              {
                                uint64_t v51 = v50;
                                [v50 value];
                                uint64_t v60 = v52;

                                swift_beginAccess();
                                uint64_t v53 = (void *)swift_unknownObjectWeakLoadStrong();
                                if (v53)
                                {
                                  uint64_t v54 = v53;
                                  [v53 value];
                                  uint64_t v59 = v55;

                                  swift_beginAccess();
                                  uint64_t v56 = (void *)swift_unknownObjectWeakLoadStrong();
                                  if (v56)
                                  {
                                    uint64_t v57 = v56;
                                    id v58 = [v56 layer];

                                    v67[0] = v3;
                                    v67[1] = v7;
                                    v67[2] = v11;
                                    v67[3] = v15;
                                    v67[4] = v19;
                                    v67[5] = v23;
                                    v67[6] = v27;
                                    v67[7] = v31;
                                    v67[8] = v66;
                                    v67[9] = v65;
                                    v67[10] = v64;
                                    v67[11] = v63;
                                    v67[12] = v62;
                                    v67[13] = v61;
                                    v67[14] = v60;
                                    v67[15] = v59;
                                    [v58 setSublayerTransform:v67];
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1001A6A5C()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong presentationValue];
    uint64_t v3 = v2;

    swift_beginAccess();
    unsigned int v4 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v4)
    {
      uint64_t v5 = v4;
      [v4 presentationValue];
      uint64_t v7 = v6;

      swift_beginAccess();
      id v8 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v8)
      {
        id v9 = v8;
        [v8 presentationValue];
        uint64_t v11 = v10;

        swift_beginAccess();
        id v12 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v12)
        {
          id v13 = v12;
          [v12 presentationValue];
          uint64_t v15 = v14;

          swift_beginAccess();
          id v16 = (void *)swift_unknownObjectWeakLoadStrong();
          if (v16)
          {
            id v17 = v16;
            [v16 presentationValue];
            uint64_t v19 = v18;

            swift_beginAccess();
            id v20 = (void *)swift_unknownObjectWeakLoadStrong();
            if (v20)
            {
              id v21 = v20;
              [v20 presentationValue];
              uint64_t v23 = v22;

              swift_beginAccess();
              id v24 = (void *)swift_unknownObjectWeakLoadStrong();
              if (v24)
              {
                id v25 = v24;
                [v24 presentationValue];
                uint64_t v27 = v26;

                swift_beginAccess();
                id v28 = (void *)swift_unknownObjectWeakLoadStrong();
                if (v28)
                {
                  id v29 = v28;
                  [v28 presentationValue];
                  uint64_t v31 = v30;

                  swift_beginAccess();
                  id v32 = (void *)swift_unknownObjectWeakLoadStrong();
                  if (v32)
                  {
                    id v33 = v32;
                    [v32 presentationValue];
                    uint64_t v67 = v34;

                    swift_beginAccess();
                    id v35 = (void *)swift_unknownObjectWeakLoadStrong();
                    if (v35)
                    {
                      id v36 = v35;
                      [v35 presentationValue];
                      uint64_t v66 = v37;

                      swift_beginAccess();
                      id v38 = (void *)swift_unknownObjectWeakLoadStrong();
                      if (v38)
                      {
                        id v39 = v38;
                        [v38 presentationValue];
                        uint64_t v65 = v40;

                        swift_beginAccess();
                        uint64_t v41 = (void *)swift_unknownObjectWeakLoadStrong();
                        if (v41)
                        {
                          id v42 = v41;
                          [v41 presentationValue];
                          uint64_t v64 = v43;

                          swift_beginAccess();
                          uint64_t v44 = (void *)swift_unknownObjectWeakLoadStrong();
                          if (v44)
                          {
                            uint64_t v45 = v44;
                            [v44 presentationValue];
                            uint64_t v63 = v46;

                            swift_beginAccess();
                            uint64_t v47 = (void *)swift_unknownObjectWeakLoadStrong();
                            if (v47)
                            {
                              uint64_t v48 = v47;
                              [v47 presentationValue];
                              uint64_t v62 = v49;

                              swift_beginAccess();
                              uint64_t v50 = (void *)swift_unknownObjectWeakLoadStrong();
                              if (v50)
                              {
                                uint64_t v51 = v50;
                                [v50 presentationValue];
                                uint64_t v61 = v52;

                                swift_beginAccess();
                                uint64_t v53 = (void *)swift_unknownObjectWeakLoadStrong();
                                if (v53)
                                {
                                  uint64_t v54 = v53;
                                  [v53 presentationValue];
                                  uint64_t v60 = v55;

                                  swift_beginAccess();
                                  uint64_t v56 = swift_unknownObjectWeakLoadStrong();
                                  if (v56)
                                  {
                                    uint64_t v57 = (void *)v56;
                                    v68[0] = v3;
                                    v68[1] = v7;
                                    v68[2] = v11;
                                    v68[3] = v15;
                                    v68[4] = v19;
                                    v68[5] = v23;
                                    v68[6] = v27;
                                    v68[7] = v31;
                                    v68[8] = v67;
                                    v68[9] = v66;
                                    v68[10] = v65;
                                    v68[11] = v64;
                                    v68[12] = v63;
                                    v68[13] = v62;
                                    v68[14] = v61;
                                    v68[15] = v60;
                                    id v58 = [self valueWithCATransform3D:v68];
                                    NSString v59 = String._bridgeToObjectiveC()();
                                    [v57 _setPresentationValue:v58 forKey:v59];
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_1001A6F54(unint64_t result)
{
  if (result > 3) {
    return 0;
  }
  return result;
}

uint64_t sub_1001A6F64()
{
  return _swift_deallocObject(v0, 24, 7);
}

double sub_1001A6F9C(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16) + OBJC_IVAR____TtC7Measure11ReticleView_searchArea;
  double result = *(double *)v2;
  int v4 = *(_DWORD *)(v2 + 8);
  *(void *)(a1 + 24) = *(void *)v2;
  *(_DWORD *)(a1 + 32) = v4;
  return result;
}

void sub_1001A6FC0()
{
  uint64_t v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure11ReticleView__state] = 0;
  uint64_t v2 = OBJC_IVAR____TtC7Measure11ReticleView_currentDiameter;
  if (qword_1004C30F8 != -1) {
    swift_once();
  }
  *(float *)&v1[v2] = *(float *)&dword_1004F8900 + *(float *)&dword_1004F8900;
  uint64_t v3 = &v1[OBJC_IVAR____TtC7Measure11ReticleView_targetOffset];
  *uint64_t v3 = 0;
  v3[1] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Measure11ReticleView_snapTimer] = 0;
  int v4 = &v1[OBJC_IVAR____TtC7Measure11ReticleView_snapTimestamp];
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = OBJC_IVAR____TtC7Measure11ReticleView__frameState;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v8 = sub_100012894(&qword_1004C3F10);
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1004F8630;
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 272);
  swift_retain();
  *(void *)&v1[v6] = v10(KeyPath, v9);
  uint64_t v11 = OBJC_IVAR____TtC7Measure11ReticleView__input;
  uint64_t v12 = swift_getKeyPath();
  uint64_t v13 = sub_100012894((uint64_t *)&unk_1004CF6F0);
  uint64_t v14 = qword_1004F8630;
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 272);
  swift_retain();
  *(void *)&v1[v11] = v15(v12, v14);
  id v16 = &v1[OBJC_IVAR____TtC7Measure11ReticleView_currentReticleTransform];
  void v16[2] = 0u;
  v16[3] = 0u;
  *id v16 = 0u;
  v16[1] = 0u;
  *(void *)&v1[OBJC_IVAR____TtC7Measure11ReticleView__orientation] = 0;
  uint64_t v17 = OBJC_IVAR____TtC7Measure11ReticleView_reticleBoundsLayer;
  *(void *)&v1[v17] = [objc_allocWithZone((Class)CATransformLayer) init];
  uint64_t v18 = OBJC_IVAR____TtC7Measure11ReticleView_reticleParentLayer;
  *(void *)&v1[v18] = [objc_allocWithZone((Class)CATransformLayer) init];
  uint64_t v19 = OBJC_IVAR____TtC7Measure11ReticleView_reticleShapeLayer;
  *(void *)&v1[v19] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v20 = OBJC_IVAR____TtC7Measure11ReticleView_snapPointLayer;
  *(void *)&v1[v20] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v21 = OBJC_IVAR____TtC7Measure11ReticleView_snapPointContainer;
  *(void *)&v1[v21] = [objc_allocWithZone((Class)CALayer) init];
  v1[OBJC_IVAR____TtC7Measure11ReticleView_isGoingActive] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Measure11ReticleView_transformChangeDuration] = 0x3FB999999999999ALL;
  *(void *)&v1[OBJC_IVAR____TtC7Measure11ReticleView_transformChangeDurationAfterIdle] = 0x3FC999999999999ALL;
  uint64_t v22 = &v1[OBJC_IVAR____TtC7Measure11ReticleView_searchArea];
  *(void *)uint64_t v22 = 0;
  *((_DWORD *)v22 + 2) = 1106247680;
  uint64_t v23 = OBJC_IVAR____TtC7Measure11ReticleView_reticleBackingView;
  *(void *)&v1[v23] = [objc_allocWithZone((Class)type metadata accessor for TransformLayerView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v1[OBJC_IVAR____TtC7Measure11ReticleView_animatingProperties] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Measure11ReticleView_animator] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1001A7334()
{
  return sub_1001A5A88();
}

uint64_t sub_1001A733C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001A734C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001A735C()
{
  return swift_release();
}

uint64_t sub_1001A7364()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001A73A0()
{
  return sub_1001A748C((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1001A6598);
}

uint64_t sub_1001A73BC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 152, 7);
}

uint64_t sub_1001A7474()
{
  return sub_1001A748C((uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1001A6A5C);
}

uint64_t sub_1001A748C(uint64_t (*a1)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12], v1[13], v1[14], v1[15], v1[16], v1[17], v1[18]);
}

uint64_t sub_1001A74DC()
{
  return _swift_deallocObject(v0, 152, 7);
}

void sub_1001A7514()
{
  sub_1001A5C88((double *)(v0 + 24));
}

void sub_1001A7568(id a1)
{
  uint64_t v49 = type metadata accessor for UUID();
  uint64_t v3 = *(void (***)(char *, uint64_t))(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v48 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v50 = *(id *)(v1 + OBJC_IVAR____TtC7Measure18SceneDebugObserver_sceneView);
  id v5 = [v50 session];
  uint64_t v6 = (uint64_t)[v5 currentFrame];

  if (!v6) {
    return;
  }
  uint64_t v7 = self;
  [v7 lock];
  unint64_t v8 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v53 = (unint64_t)_swiftEmptyArrayStorage;
  id v9 = [self standardUserDefaults];
  Defaults.drawDebugPlanes.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v11 = [v9 BOOLForKey:v10];

  uint64_t v12 = (SEL *)&selRef_replaySensorDidFinishReplayingData;
  if ((v11 & 1) == 0)
  {
    id v13 = [(id)v6 anchors];
    sub_10001C99C(0, &qword_1004CB290);
    unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v14 >> 62) {
      goto LABEL_40;
    }
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v15)
    {
      id v43 = a1;
      uint64_t v44 = v7;
      uint64_t v45 = v6;
      if (v15 < 1) {
        goto LABEL_54;
      }
      uint64_t v6 = 0;
      uint64_t v16 = 0;
      unint64_t v51 = v14 & 0xC000000000000001;
      uint64_t v46 = v15;
      uint64_t v47 = v3 + 1;
      while (1)
      {
        if (v51) {
          uint64_t v17 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v17 = *(id *)(v14 + 8 * v16 + 32);
        }
        unint64_t v8 = (unint64_t)v17;
        self;
        uint64_t v18 = swift_dynamicCastObjCClass();
        if (!v18) {
          goto LABEL_9;
        }
        uint64_t v3 = (void (**)(char *, uint64_t))v18;
        uint64_t v12 = (SEL *)(id)v8;
        id v19 = [v50 scene];
        id v20 = [v19 rootNode];

        strcpy((char *)v52, "arkit_plane_");
        HIBYTE(v52[6]) = 0;
        v52[7] = -5120;
        id v21 = [v3 identifier];
        uint64_t v22 = v48;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v23 = UUID.uuidString.getter();
        id v25 = v24;
        (*v47)(v22, v49);
        v26._uint64_t countAndFlagsBits = v23;
        v26._object = v25;
        String.append(_:)(v26);
        swift_bridgeObjectRelease();
        uint64_t v7 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        a1 = [v20 childNodeWithName:v7 recursively:0];

        if (!a1) {
          goto LABEL_8;
        }
        if (qword_1004C2950 != -1) {
          swift_once();
        }
        uint64_t v27 = qword_1004F7F98;
        if ((unint64_t)qword_1004F7F98 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v28) {
            goto LABEL_37;
          }
        }
        else
        {
          uint64_t v28 = *(void *)((qword_1004F7F98 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v28) {
            goto LABEL_37;
          }
        }
        if (v6 == 0x8000000000000000 && v28 == -1) {
          goto LABEL_39;
        }
        unint64_t v29 = v6 % v28;
        if ((v27 & 0xC000000000000001) != 0)
        {
          id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_26;
        }
        if ((v29 & 0x8000000000000000) != 0) {
          break;
        }
        if (v29 >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_36;
        }
        id v30 = *(id *)(v27 + 8 * v29 + 32);
LABEL_26:
        uint64_t v31 = v30;
        sub_100058550((uint64_t)v30);
        id v33 = v32;

        if (!v33)
        {

LABEL_8:
          uint64_t v15 = v46;
LABEL_9:

          goto LABEL_10;
        }
        [a1 addChildNode:v33];
        uint64_t v3 = v33;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        unint64_t v8 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v8 >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        if (__OFADD__(v6++, 1)) {
          goto LABEL_38;
        }
        uint64_t v15 = v46;
LABEL_10:
        if (v15 == ++v16)
        {
          swift_bridgeObjectRelease();
          unint64_t v8 = v53;
          uint64_t v7 = v44;
          uint64_t v6 = v45;
          uint64_t v12 = (SEL *)&selRef_replaySensorDidFinishReplayingData;
          goto LABEL_42;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
LABEL_42:
  id v35 = [v50 v12[42] v43 v44 v45];
  URL._bridgeToObjectiveC()(v36);
  id v38 = v37;
  [v35 writeToURL:v37 options:0 delegate:0 progressHandler:0];

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v39) {
      goto LABEL_44;
    }
LABEL_51:
    swift_bridgeObjectRelease();
    [v7 unlock];

    return;
  }
  uint64_t v39 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v39) {
    goto LABEL_51;
  }
LABEL_44:
  if (v39 >= 1)
  {
    for (uint64_t i = 0; i != v39; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0) {
        id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v41 = *(id *)(v8 + 8 * i + 32);
      }
      id v42 = v41;
      [v41 removeFromParentNode];
    }
    goto LABEL_51;
  }
  __break(1u);
LABEL_54:
  __break(1u);
}

id sub_1001A7BE0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = OBJC_IVAR____TtC7Measure18SceneDebugObserver_keys;
  sub_100012894(&qword_1004C6918);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1003F8B70;
  uint64_t v7 = v2;
  unint64_t v8 = (uint64_t *)Defaults.showStatistics.unsafeMutableAddressor();
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  *(void *)(v6 + 32) = v10;
  *(void *)(v6 + 40) = v9;
  swift_bridgeObjectRetain();
  unsigned __int8 v11 = (uint64_t *)Defaults.showFeaturePoints.unsafeMutableAddressor();
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *(void *)(v6 + 48) = v13;
  *(void *)(v6 + 56) = v12;
  swift_bridgeObjectRetain();
  unint64_t v14 = (uint64_t *)Defaults.exportSceneFilePath.unsafeMutableAddressor();
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *(void *)(v6 + 64) = v16;
  *(void *)(v6 + 72) = v15;
  *(void *)&v2[v5] = v6;
  *(void *)&v7[OBJC_IVAR____TtC7Measure18SceneDebugObserver_sceneView] = a1;
  swift_bridgeObjectRetain();
  id v17 = a1;

  v21.receiver = v7;
  v21.super_class = ObjectType;
  [super init];
  sub_10001C99C(0, (unint64_t *)&unk_1004CA020);
  id v19 = v18;
  swift_bridgeObjectRetain();
  static NSUserDefaults.observe(observer:keys:)();

  swift_bridgeObjectRelease();
  return v19;
}

uint64_t type metadata accessor for SceneDebugObserver()
{
  return self;
}

void sub_1001A7EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v9 = (void *)Defaults.showStatistics.unsafeMutableAddressor();
    BOOL v10 = *v9 == a1 && v9[1] == a2;
    if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      unsigned __int8 v11 = *(void **)(v2 + OBJC_IVAR____TtC7Measure18SceneDebugObserver_sceneView);
      id v12 = [self standardUserDefaults];
      NSString v13 = String._bridgeToObjectiveC()();
      id v14 = [v12 BOOLForKey:v13];

      [v11 setShowsStatistics:v14];
    }
    else
    {
      uint64_t v15 = (void *)Defaults.showFeaturePoints.unsafeMutableAddressor();
      if (*v15 == a1 && v15[1] == a2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        sub_10001C99C(0, (unint64_t *)&unk_1004CA020);
        uint64_t v16 = *(void **)(v2 + OBJC_IVAR____TtC7Measure18SceneDebugObserver_sceneView);
        v24[1] = ARSCNDebugOptionShowFeaturePoints;
        v24[0] = [v16 debugOptions];
        type metadata accessor for SCNDebugOptions(0);
        sub_1001A82DC(&qword_1004CF740, type metadata accessor for SCNDebugOptions);
        static NSUserDefaults.update<A>(_:key:feature:)();
        [v16 setDebugOptions:v24[0]];
      }
      else
      {
        id v17 = (void *)Defaults.exportSceneFilePath.unsafeMutableAddressor();
        if (*v17 == a1 && v17[1] == a2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          id v18 = self;
          id v19 = [v18 standardUserDefaults];
          swift_bridgeObjectRetain();
          NSString v20 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v21 = [v19 stringForKey:v20];

          if (v21)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            URL.init(fileURLWithPath:)();
            swift_bridgeObjectRelease();
            sub_1001A7568(v8);
            (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            id v22 = [v18 standardUserDefaults];
            swift_bridgeObjectRetain();
            NSString v23 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v22 removeObjectForKey:v23];
          }
        }
      }
    }
  }
}

uint64_t sub_1001A82DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *_s8SceneKitVMa()
{
  return &_s8SceneKitVN;
}

uint64_t sub_1001A8334(uint64_t a1)
{
  unint64_t v2 = sub_100030ADC();

  return Context.description.getter(a1, v2);
}

unint64_t sub_1001A8370(uint64_t a1)
{
  unint64_t result = sub_1001A8398();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001A8398()
{
  unint64_t result = qword_1004CF748;
  if (!qword_1004CF748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CF748);
  }
  return result;
}

uint64_t sub_1001A83EC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1001A8460()
{
  uint64_t v1 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (id *)((char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = (uint64_t)v0 + qword_1004CF758;
  swift_beginAccess();
  sub_100090C7C(v4, (uint64_t)v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:

      goto LABEL_4;
    case 3u:

      swift_getKeyPath();
      swift_getKeyPath();
      char v7 = 1;
      goto LABEL_7;
    case 4u:
      swift_getKeyPath();
      swift_getKeyPath();
      char v7 = 2;
LABEL_7:
      HIBYTE(v10) = v7;
      break;
    default:
      uint64_t v5 = sub_100012894(&qword_1004CBE90);
      sub_100028914(*(uint64_t *)((char *)v3 + *(int *)(v5 + 64)));
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(id *, uint64_t))(*(void *)(v6 - 8) + 8))(v3, v6);
LABEL_4:
      swift_getKeyPath();
      swift_getKeyPath();
      HIBYTE(v10) = 0;
      break;
  }
  id v8 = v0;
  return static Published.subscript.setter();
}

char *sub_1001A8640(void *a1, char *a2, void *a3, uint64_t a4)
{
  id v51 = a3;
  uint64_t v8 = type metadata accessor for URL();
  __chkstk_darwin(v8 - 8);
  v50[0] = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100012894(&qword_1004CFB78);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  NSString v13 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = &v4[qword_1004CF750];
  char v53 = 2;
  uint64_t v15 = v4;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v13, v10);
  type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = qword_1004CF760;
  sub_100012894(&qword_1004CFB80);
  swift_getKeyPath();
  id v17 = (objc_class *)type metadata accessor for DebugSessionCoordinator(0);
  *(void *)&v15[v16] = MutableStateValue.__allocating_init(_:_:)();
  uint64_t v18 = qword_1004CF768;
  *(void *)&v15[qword_1004CF768] = 0;
  uint64_t v19 = qword_1004CF770;
  *(void *)&v15[qword_1004CF770] = 0;
  uint64_t v20 = qword_1004CF778;
  *(void *)&v15[qword_1004CF778] = 0;
  *(void *)&v15[qword_1004CF780] = 0;
  *(void *)&v15[qword_1004F84C0] = 0;
  v15[qword_1004F84C8] = 0;
  v15[qword_1004F84D0] = 0;
  id v21 = &v15[qword_1004CF788];
  *(void *)id v21 = v51;
  *((void *)v21 + 1) = a4;
  v50[1] = a4;
  swift_retain();
  id v51 = a1;
  [a1 frame];
  id v26 = [objc_allocWithZone((Class)type metadata accessor for RecordingView()) initWithFrame:v22, v23, v24, v25];
  uint64_t v27 = *(void **)&v15[v20];
  *(void *)&v15[v20] = v26;

  unint64_t result = *(char **)&v15[v20];
  if (!result)
  {
    __break(1u);
    goto LABEL_20;
  }
  [result setHidden:1];
  unint64_t result = (char *)[a2 view];
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (!*(void *)&v15[v20])
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v29 = result;
  [result addSubview:];

  if (![self internalInstall]) {
    goto LABEL_14;
  }
  id v30 = [self standardUserDefaults];
  unsigned __int8 v31 = [v30 kHideTapToRadar];

  if (v31) {
    goto LABEL_14;
  }
  [v51 frame];
  id v36 = [objc_allocWithZone((Class)type metadata accessor for TapToRadarView()) initWithFrame:v32, v33, v34, v35];
  uint64_t v37 = *(void **)&v15[v19];
  *(void *)&v15[v19] = v36;

  unint64_t result = *(char **)&a2[qword_1004D26F8];
  if (!result) {
    goto LABEL_22;
  }
  if (!*(void *)&v15[v19])
  {
LABEL_23:
    __break(1u);
    return result;
  }
  [result addSubview:];
  id v38 = *(void **)&v15[v19];
  type metadata accessor for TapToRadarController();
  swift_allocObject();
  id v39 = v38;
  *(void *)&v15[v18] = sub_1001DED70(v38);
  swift_release();
  uint64_t v40 = *(void **)&v15[v19];
  if (v40)
  {
    uint64_t v41 = *(void *)&v15[v18];
    swift_retain();
    id v42 = v40;

    id v43 = &off_100492D20;
    if (!v41) {
      id v43 = 0;
    }
    *(void *)&v42[OBJC_IVAR____TtC7Measure14TapToRadarView_delegate + 8] = v43;
    swift_unknownObjectWeakAssign();

    swift_release();
    goto LABEL_15;
  }
LABEL_14:

LABEL_15:
  v52.receiver = v15;
  v52.super_class = v17;
  [super init];
  uint64_t v45 = self;
  uint64_t v46 = (char *)v44;
  id v47 = [v45 standardUserDefaults];
  LODWORD(v45) = [v47 kShouldReportMeasurements];

  if (v45)
  {
    type metadata accessor for ResultsReporter(0);
    uint64_t v48 = v50[0];
    sub_1000E9CF4();
    swift_allocObject();
    uint64_t v49 = sub_1000E8FE0(v48);

    swift_release();
    *(void *)&v46[qword_1004F84C0] = v49;
  }
  else
  {
  }
  swift_release();
  return v46;
}

void sub_1001A8BC0()
{
  id v1 = objc_allocWithZone(v0);
  sub_1001A8BE0();
}

void sub_1001A8BE0()
{
  id v1 = v0;
  uint64_t v2 = sub_100012894(&qword_1004CFB78);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = &v1[qword_1004CF750];
  v8[15] = 2;
  Published.init(initialValue:)();
  (*(void (**)(char *, unsigned char *, uint64_t))(v3 + 32))(v6, v5, v2);
  type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = qword_1004CF760;
  sub_100012894(&qword_1004CFB80);
  swift_getKeyPath();
  type metadata accessor for DebugSessionCoordinator(0);
  *(void *)&v1[v7] = MutableStateValue.__allocating_init(_:_:)();
  *(void *)&v1[qword_1004CF768] = 0;
  *(void *)&v1[qword_1004CF770] = 0;
  *(void *)&v1[qword_1004CF778] = 0;
  *(void *)&v1[qword_1004CF780] = 0;
  *(void *)&v1[qword_1004F84C0] = 0;
  v1[qword_1004F84C8] = 0;
  v1[qword_1004F84D0] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_1001A8DD0(void *a1)
{
  double v25 = a1;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (void **)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = v1 + qword_1004CF758;
  swift_beginAccess();
  sub_100090C7C(v9, (uint64_t)v8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v16 = *v8;
      if (!*(void *)((char *)*v8 + OBJC_IVAR____TtC7Measure15SessionRecorder_state)) {
        goto LABEL_10;
      }
      uint64_t v15 = sub_1000FEFF8(v25);

      return (id)v15;
    case 2u:
      uint64_t v16 = *v8;
      goto LABEL_10;
    case 3u:
      uint64_t v16 = *v8;
      uint64_t v18 = (uint64_t)*v8 + qword_1004C9758;
      if (*(void *)v18)
      {
        uint64_t v19 = *(void **)(v18 + 8);
        id v20 = objc_allocWithZone((Class)ARReplayConfiguration);
        swift_unknownObjectRetain();
        id v21 = [v20 initWithBaseConfiguration:v25 replaySensor:v19 replayingResultDataClasses:0];
        [v19 setReplaySensorDelegate:v16];
        double v22 = *(void **)v18;
        *(void *)uint64_t v18 = v21;
        *(void *)(v18 + 8) = v19;
        id v23 = v21;
        sub_1000C0A18(v22);

        return v23;
      }
      else
      {
LABEL_10:

LABEL_11:
        double v24 = v25;
        return v24;
      }
    case 4u:
      goto LABEL_11;
    default:
      uint64_t v10 = sub_100012894(&qword_1004CBE90);
      uint64_t v11 = (uint64_t *)((char *)v8 + *(int *)(v10 + 64));
      uint64_t v12 = *v11;
      uint64_t v13 = v11[1];
      int v14 = *((unsigned __int8 *)v8 + *(int *)(v10 + 48));
      (*(void (**)(char *, void **, uint64_t))(v3 + 32))(v5, v8, v2);
      uint64_t v15 = (uint64_t)sub_1001A9520(v25, (uint64_t)v5, v14, v12, v13);
      sub_100028914(v12);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return (id)v15;
  }
}

id sub_1001A90C4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v31 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  __chkstk_darwin(v31);
  uint64_t v5 = (void **)((char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v29 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v29 - v14;
  id v16 = [self standardUserDefaults];
  unsigned int v17 = [v16 kShouldReportMeasurements];

  if (v17)
  {
    NSUserDefaults.recordReplayOption.unsafeMutableAddressor();
    RecordReplayOption.replayFile.getter();
    URL.path.getter();
    unint64_t v29 = a1;
    uint64_t v30 = v2;
    uint64_t v18 = v15;
    uint64_t v19 = v6;
    uint64_t v20 = v7;
    id v21 = *(void (**)(char *, uint64_t))(v7 + 8);
    v21(v13, v19);
    URL.init(fileURLWithPath:isDirectory:)();
    URL.appendingPathExtension(_:)();
    v21(v10, v19);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v13, v18, v19);
    type metadata accessor for ResultsReporter(0);
    swift_allocObject();
    uint64_t v22 = sub_1000E8FE0((uint64_t)v13);
    *(void *)(v30 + qword_1004F84C0) = v22;
    swift_release();
    v21(v18, v19);
    a1 = v29;
    uint64_t v2 = v30;
  }
  id v23 = [objc_allocWithZone((Class)type metadata accessor for SessionSimulator()) init];
  *uint64_t v5 = v23;
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = v2 + qword_1004CF758;
  swift_beginAccess();
  id v25 = v23;
  sub_1001AB5B4((uint64_t)v5, v24);
  swift_endAccess();
  sub_1001A8460();
  sub_100090CE0((uint64_t)v5);
  uint64_t v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  id v27 = sub_1000BF98C(a1, (uint64_t)sub_1001AB6EC, v26);

  swift_release_n();
  return v27;
}

void sub_1001A944C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (unsigned char *)Strong;
    id v2 = [self defaultCenter];
    if (qword_1004C2CA8 != -1) {
      swift_once();
    }
    [v2 postNotificationName:qword_1004F84B8 object:0];

    v1[qword_1004F84D0] = 1;
  }
}

id sub_1001A9520(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v69 = a4;
  int v68 = a3;
  uint64_t v67 = a1;
  uint64_t v7 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  __chkstk_darwin(v7);
  uint64_t v66 = (char **)((char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v71 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v63 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v63 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v63 - v19;
  sub_1001AA2B0(1);
  uint64_t v72 = v5;
  sub_1001AA2D8(0);
  static RecordReplayOption.insertTimestamp(to:)();
  id v21 = [self defaultManager];
  URL.deletingLastPathComponent()();
  URL.path.getter();
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v23 = [v21 fileExistsAtPath:v22];

  id v70 = v21;
  if ((v23 & 1) == 0)
  {
    URL._bridgeToObjectiveC()(v24);
    uint64_t v26 = v25;
    aBlock._uint64_t countAndFlagsBits = 0;
    unsigned int v27 = [v21 createDirectoryAtURL:v25 withIntermediateDirectories:1 attributes:0 error:&aBlock];

    if (v27)
    {
      id v28 = (id)aBlock._countAndFlagsBits;
    }
    else
    {
      uint64_t v63 = v15;
      uint64_t v64 = v7;
      uint64_t v65 = (char *)a5;
      id v29 = (id)aBlock._countAndFlagsBits;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_1004C2B08 != -1) {
        swift_once();
      }
      aBlock._uint64_t countAndFlagsBits = 0;
      aBlock._object = (void *)0xE000000000000000;
      _StringGuts.grow(_:)(44);
      swift_bridgeObjectRelease();
      aBlock._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      aBlock._object = (void *)0x800000010042AA90;
      sub_1001AB6A4(&qword_1004CFB88, (void (*)(uint64_t))&type metadata accessor for URL);
      v30._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v30);
      swift_bridgeObjectRelease();
      v31._uint64_t countAndFlagsBits = 0x63657220726F6620;
      v31._object = (void *)0xEF2E676E6964726FLL;
      String.append(_:)(v31);
      Log.error(_:isPrivate:)(aBlock, 0);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      uint64_t v7 = v64;
      a5 = (uint64_t)v65;
      id v21 = v70;
      uint64_t v15 = v63;
    }
  }
  URL.path.getter();
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v33 = [v21 isWritableFileAtPath:v32];

  if ((v33 & 1) == 0)
  {
    uint64_t v63 = v15;
    uint64_t v64 = v7;
    uint64_t v65 = (char *)a5;
    if (qword_1004C2B08 != -1) {
      swift_once();
    }
    aBlock._uint64_t countAndFlagsBits = 0;
    aBlock._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(51);
    v34._uint64_t countAndFlagsBits = 0x6620746567726154;
    v34._object = (void *)0xEE00207265646C6FLL;
    String.append(_:)(v34);
    v35._uint64_t countAndFlagsBits = URL.path.getter();
    String.append(_:)(v35);
    swift_bridgeObjectRelease();
    v36._uint64_t countAndFlagsBits = 0xD000000000000021;
    v36._object = (void *)0x800000010042AAB0;
    String.append(_:)(v36);
    if (qword_1004C2A30 != -1) {
      swift_once();
    }
    sub_1000217E0(v9, (uint64_t)qword_1004F80A0);
    v37._uint64_t countAndFlagsBits = URL.path.getter();
    String.append(_:)(v37);
    swift_bridgeObjectRelease();
    Log.error(_:isPrivate:)(aBlock, 0);
    swift_bridgeObjectRelease();
    URL.lastPathComponent.getter();
    uint64_t v15 = v63;
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    uint64_t v38 = v71;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v20, v9);
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v20, v15, v9);
    [self removeCachedObjectForKey:ARSessionRecordingFilePathDefaultsKey];
    aBlock._uint64_t countAndFlagsBits = 0;
    aBlock._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(63);
    v39._object = (void *)0x800000010042AAE0;
    v39._uint64_t countAndFlagsBits = 0xD000000000000015;
    String.append(_:)(v39);
    v40._uint64_t countAndFlagsBits = URL.path.getter();
    String.append(_:)(v40);
    swift_bridgeObjectRelease();
    v41._uint64_t countAndFlagsBits = 0xD000000000000026;
    v41._object = (void *)0x800000010042AB00;
    String.append(_:)(v41);
    v42._uint64_t countAndFlagsBits = URL.path.getter();
    String.append(_:)(v42);
    swift_bridgeObjectRelease();
    NSString v43 = String._bridgeToObjectiveC()();
    NSString v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v45 = [self alertControllerWithTitle:v43 message:v44 preferredStyle:1];

    NSString v46 = String._bridgeToObjectiveC()();
    CGFloat v76 = nullsub_1;
    uint64_t v77 = 0;
    aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
    aBlock._object = (void *)1107296256;
    id v74 = sub_100058CEC;
    id v75 = &unk_100491C78;
    id v47 = _Block_copy(&aBlock);
    swift_release();
    id v48 = [self actionWithTitle:v46 style:0 handler:v47];
    _Block_release(v47);

    [v45 addAction:v48];
    if (qword_1004C29D8 != -1) {
      swift_once();
    }
    id result = (id)*((void *)&xmmword_1004F7FD0 + 1);
    a5 = (uint64_t)v65;
    if (!*((void *)&xmmword_1004F7FD0 + 1))
    {
      __break(1u);
      return result;
    }
    [*((id *)&xmmword_1004F7FD0 + 1) presentViewController:v45 animated:1 completion:0];
  }
  uint64_t v65 = v18;
  uint64_t v50 = a5;
  URL.path.getter();
  URL.init(fileURLWithPath:isDirectory:)();
  URL.appendingPathExtension(_:)();
  uint64_t v51 = v71;
  objc_super v52 = *(void (**)(char *, uint64_t))(v71 + 8);
  v52(v12, v9);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v12, v15, v9);
  type metadata accessor for ResultsReporter(0);
  swift_allocObject();
  uint64_t v53 = sub_1000E8FE0((uint64_t)v12);
  *(void *)(v72 + qword_1004F84C0) = v53;
  swift_release();
  v52(v15, v9);
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  uint64_t v54 = (void *)*((void *)&xmmword_1004F7FD0 + 1);
  if (!*((void *)&xmmword_1004F7FD0 + 1)) {
    __break(1u);
  }
  id v55 = objc_allocWithZone((Class)type metadata accessor for SessionRecorder());
  id v56 = sub_1000FEA34((uint64_t)v54);
  uint64_t v57 = (uint64_t)v66;
  *uint64_t v66 = v56;
  swift_storeEnumTagMultiPayload();
  uint64_t v58 = v72 + qword_1004CF758;
  swift_beginAccess();
  id v59 = v56;
  sub_1001AB5B4(v57, v58);
  swift_endAccess();
  sub_1001A8460();
  sub_100090CE0(v57);
  uint64_t v60 = URL.path.getter();
  id v62 = sub_1000FEAF0(v67, v60, v61, v68, v69, v50);

  swift_bridgeObjectRelease();
  v52(v65, v9);
  v52(v20, v9);
  return v62;
}

uint64_t sub_1001A9F64(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = (void **)&v17[-v9];
  uint64_t v11 = v2 + qword_1004CF758;
  swift_beginAccess();
  sub_100090C7C(v11, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return sub_100090CE0((uint64_t)v10);
  }
  uint64_t v12 = *v10;
  *uint64_t v8 = v12;
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  id v13 = v12;
  sub_1001AB5B4((uint64_t)v8, v11);
  swift_endAccess();
  sub_1001A8460();
  sub_100090CE0((uint64_t)v8);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = a1;
  *(void *)(v15 + 32) = a2;
  swift_retain();
  sub_10003FFC4(a1);
  sub_1000FF2D8(sub_1001AB698, (void (*)(void))v15);

  swift_release();
  return swift_release();
}

void sub_1001AA140(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  __chkstk_darwin(v3);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (unsigned char *)Strong;
    swift_storeEnumTagMultiPayload();
    uint64_t v8 = (uint64_t)&v7[qword_1004CF758];
    swift_beginAccess();
    sub_1001AB5B4((uint64_t)v5, v8);
    swift_endAccess();
    sub_1001A8460();
    sub_100090CE0((uint64_t)v5);
    uint64_t v9 = qword_1004F84C8;
    v7[qword_1004F84C8] = 1;
    sub_1001AA2B0(0);
    sub_1001AA2D8(1);
    uint64_t v10 = *(void (**)(uint64_t))&v7[qword_1004CF788];
    uint64_t v11 = swift_retain();
    v10(v11);
    uint64_t v12 = swift_release();
    v7[v9] = 1;
    if (a2) {
      a2(v12);
    }
  }
}

uint64_t sub_1001AA2B0(char a1)
{
  return sub_1001AA300(a1, (uint64_t)&unk_100491BE8, (uint64_t)sub_1001AB57C, (uint64_t)&unk_100491C00);
}

uint64_t sub_1001AA2D8(char a1)
{
  return sub_1001AA300(a1, (uint64_t)&unk_100491B98, (uint64_t)sub_1001AB558, (uint64_t)&unk_100491BB0);
}

uint64_t sub_1001AA300(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005536C();
  id v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v4;
  *(unsigned char *)(v14 + 24) = a1;
  aBlock[4] = v19;
  void aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = v20;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v4;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001AB6A4((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_100039BEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v21);
}

void sub_1001AA5A8()
{
}

uint64_t sub_1001AA5D8()
{
  uint64_t v1 = v0 + qword_1004CF750;
  uint64_t v2 = sub_100012894(&qword_1004CFB78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100090CE0(v0 + qword_1004CF758);
  swift_release();
  swift_release();

  swift_release();

  return swift_release();
}

id sub_1001AA6CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugSessionCoordinator(0);
  return [super dealloc];
}

uint64_t sub_1001AA704(uint64_t a1)
{
  uint64_t v2 = a1 + qword_1004CF750;
  uint64_t v3 = sub_100012894(&qword_1004CFB78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  sub_100090CE0(a1 + qword_1004CF758);
  swift_release();
  swift_release();

  swift_release();

  return swift_release();
}

uint64_t type metadata accessor for DebugSessionCoordinator(uint64_t a1)
{
  return sub_1000E9730(a1, (uint64_t *)&unk_1004CF7B8);
}

void sub_1001AA81C()
{
  sub_1001AA91C();
  if (v0 <= 0x3F)
  {
    type metadata accessor for DebugSessionCoordinator.RecordReplayState(319);
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

void sub_1001AA91C()
{
  if (!qword_1004CF7C8)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1004CF7C8);
    }
  }
}

uint64_t type metadata accessor for DebugSessionCoordinator.RecordReplayState(uint64_t a1)
{
  return sub_1000E9730(a1, qword_1004CFB38);
}

uint64_t sub_1001AA994()
{
  return type metadata accessor for DebugSessionCoordinator(0);
}

void *sub_1001AA99C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for URL();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = sub_100012894(&qword_1004CBE90);
        *((unsigned char *)a1 + *(int *)(v8 + 48)) = *((unsigned char *)a2 + *(int *)(v8 + 48));
        uint64_t v9 = *(int *)(v8 + 64);
        uint64_t v10 = (void *)((char *)a1 + v9);
        uint64_t v11 = (void *)((char *)a2 + v9);
        if (*v11)
        {
          uint64_t v12 = v11[1];
          *uint64_t v10 = *v11;
          v10[1] = v12;
          swift_retain();
        }
        else
        {
          *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
      case 2u:
      case 3u:
        uint64_t v15 = (void *)*a2;
        *a1 = *a2;
        id v16 = v15;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void sub_1001AAB70(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v3 = type metadata accessor for URL();
      (*(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      if (*(void **)((char *)a1 + *(int *)(sub_100012894(&qword_1004CBE90) + 64)))
      {
        swift_release();
      }
      break;
    case 1u:
    case 2u:
    case 3u:
      uint64_t v2 = *a1;

      break;
    default:
      return;
  }
}

void **sub_1001AAC64(void **a1, void **a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = sub_100012894(&qword_1004CBE90);
      *((unsigned char *)a1 + *(int *)(v7 + 48)) = *((unsigned char *)a2 + *(int *)(v7 + 48));
      uint64_t v8 = *(int *)(v7 + 64);
      uint64_t v9 = (void **)((char *)a1 + v8);
      uint64_t v10 = (void **)((char *)a2 + v8);
      if (*v10)
      {
        uint64_t v11 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v11;
        swift_retain();
      }
      else
      {
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      }
      goto LABEL_7;
    case 1u:
    case 2u:
    case 3u:
      uint64_t v12 = *a2;
      *a1 = *a2;
      id v13 = v12;
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void **sub_1001AADE8(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100090CE0((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for URL();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = sub_100012894(&qword_1004CBE90);
        *((unsigned char *)a1 + *(int *)(v7 + 48)) = *((unsigned char *)a2 + *(int *)(v7 + 48));
        uint64_t v8 = *(int *)(v7 + 64);
        uint64_t v9 = (void **)((char *)a1 + v8);
        uint64_t v10 = (void **)((char *)a2 + v8);
        if (*v10)
        {
          uint64_t v11 = v10[1];
          *uint64_t v9 = *v10;
          v9[1] = v11;
          swift_retain();
        }
        else
        {
          *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
        }
        goto LABEL_8;
      case 1u:
      case 2u:
      case 3u:
        uint64_t v12 = *a2;
        *a1 = *a2;
        id v13 = v12;
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *sub_1001AAF7C(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = sub_100012894(&qword_1004CBE90);
    a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
    uint64_t v8 = *(int *)(v7 + 64);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = *(void *)v10;
    if (*(void *)v10)
    {
      uint64_t v12 = *((void *)v10 + 1);
      *(void *)uint64_t v9 = v11;
      *((void *)v9 + 1) = v12;
    }
    else
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1001AB070(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100090CE0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = sub_100012894(&qword_1004CBE90);
      a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
      uint64_t v8 = *(int *)(v7 + 64);
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = *(void *)v10;
      if (*(void *)v10)
      {
        uint64_t v12 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = v11;
        *((void *)v9 + 1) = v12;
      }
      else
      {
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1001AB174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_1001AB19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1001AB1C8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1001AB1D8()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v2[4] = v2;
    v2[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v2[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v2[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugSessionCoordinator.DebuggerState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001AB358);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugSessionCoordinator.DebuggerState()
{
  return &type metadata for DebugSessionCoordinator.DebuggerState;
}

unint64_t sub_1001AB394()
{
  unint64_t result = qword_1004CFB70;
  if (!qword_1004CFB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CFB70);
  }
  return result;
}

NSString sub_1001AB3E8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1004F84B8 = (uint64_t)result;
  return result;
}

uint64_t sub_1001AB424@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1001AB4A8(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_1001AB520()
{
  return _swift_deallocObject(v0, 25, 7);
}

id sub_1001AB558()
{
  return sub_1001AB588(&qword_1004CF770);
}

uint64_t sub_1001AB564(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001AB574()
{
  return swift_release();
}

id sub_1001AB57C()
{
  return sub_1001AB588(&qword_1004CF778);
}

id sub_1001AB588(void *a1)
{
  id result = *(id *)(*(void *)(v1 + 16) + *a1);
  if (result) {
    return [result setHidden:(*(unsigned char *)(v1 + 24) & 1) == 0];
  }
  return result;
}

uint64_t sub_1001AB5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AB618()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001AB650()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1001AB698()
{
  sub_1001AA140(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1001AB6A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1001AB6EC()
{
}

id sub_1001AB708()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___rayNode;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___rayNode);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___rayNode);
  }
  else
  {
    sub_1001AB768();
    uint64_t v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1001AB768()
{
  uint64_t v1 = v0;
  id v2 = [self boxWithWidth:0.0003 height:0.0003 length:3.0 chamferRadius:0.0];
  id v3 = [v2 materials];
  sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v4 >> 62))
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_6;
  }
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v4 + 32);
LABEL_6:
    id v6 = v5;
    swift_bridgeObjectRelease();
    id v7 = [v6 diffuse];

    sub_10001C99C(0, &qword_1004C5548);
    Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(1.0, 0.14913, 0.0, 1.0).super.isa;
    [v7 setContents:isa];

LABEL_9:
    id v10 = [self nodeWithGeometry:v2];
    NSString v11 = String._bridgeToObjectiveC()();
    [v10 setName:v11];

    [v10 position];
    [v10 setPosition:];
    [v10 setHidden:1];
    id v12 = [objc_allocWithZone((Class)SCNNode) init];
    NSString v13 = String._bridgeToObjectiveC()();
    [v12 setName:v13];

    [v12 addChildNode:v10];
    uint64_t v14 = self;
    [v14 begin];
    [v1 addChildNode:v12];
    [v14 commit];

    return;
  }
  __break(1u);
}

void sub_1001ABA48(uint64_t a1)
{
  id v3 = self;
  id v4 = [v3 boxWithWidth:0.001 height:0.2 length:0.001 chamferRadius:0.0];
  id v5 = [v4 materials];
  sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    id v7 = (void *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v7 = *(void **)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = &selRef_replaySensorDidFinishReplayingData;
  uint64_t v30 = a1;
  if (v7)
  {
    if ((v6 & 0xC000000000000001) != 0)
    {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_29;
      }
      id v9 = *(id *)(v6 + 32);
    }
    id v10 = v9;
    swift_bridgeObjectRelease();
    id v11 = [v10 diffuse];
    [v11 setContents:a1];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v7 = self;
  unint64_t v6 = (unint64_t)[v7 nodeWithGeometry:v4];
  NSString v12 = String._bridgeToObjectiveC()();
  [(id)v6 setName:v12];

  [(id)v6 position];
  [v6 setPosition:];
  uint64_t v8 = (char **)[self sphereWithRadius:0.01];
  id v13 = [v8 materials];
  unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    id v28 = v1;
    if (v18)
    {
LABEL_11:
      if ((v14 & 0xC000000000000001) == 0)
      {
        if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_31;
        }
        id v15 = *(id *)(v14 + 32);
        goto LABEL_14;
      }
LABEL_29:
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_14:
      id v16 = v15;
      swift_bridgeObjectRelease();
      id v17 = [v16 diffuse];

      [v17 setContents:v30];
      goto LABEL_18;
    }
  }
  else
  {
    id v28 = v1;
    if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
LABEL_18:
  unint64_t v14 = [v7 nodeWithGeometry:v8, v28];
  NSString v19 = String._bridgeToObjectiveC()();
  [(id)v14 setName:v19];

  uint64_t v1 = &off_1004B7000;
  [(id)v14 setHidden:1];
  [(id)v14 setOpacity:0.75];
  id v3 = [v3 boxWithWidth:0.1 height:0.001 length:0.1 chamferRadius:0.0];
  id v20 = [v3 materials];
  unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v21 >> 62))
  {
    if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_20;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v25) {
    goto LABEL_25;
  }
LABEL_20:
  if ((v21 & 0xC000000000000001) != 0)
  {
LABEL_31:
    id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_23;
  }
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v22 = *(id *)(v21 + 32);
LABEL_23:
    unsigned __int8 v23 = v22;
    swift_bridgeObjectRelease();
    id v24 = [v23 diffuse];
    [v24 setContents:v30];

    [v23 setBlendMode:4];
LABEL_26:
    id v26 = [v7 nodeWithGeometry:v3, v28];
    NSString v27 = String._bridgeToObjectiveC()();
    [v26 setName:v27];

    [v26 v1[340]:1];
    [v26 addChildNode:v6];
    [v26 addChildNode:v14];
    [v26 setOpacity:0.75];
    [v29 addChildNode:v26];

    return;
  }
  __break(1u);
}

id sub_1001ABFF0(uint64_t *a1, Swift::Float a2, Swift::Float a3, Swift::Float a4)
{
  uint64_t v5 = *a1;
  unint64_t v6 = *(void **)(v4 + *a1);
  if (v6)
  {
    id v7 = *(id *)(v4 + *a1);
  }
  else
  {
    uint64_t v11 = v4;
    sub_10001C99C(0, &qword_1004C5548);
    Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(a2, a3, a4, 1.0).super.isa;
    sub_1001ABA48((uint64_t)isa);
    unint64_t v14 = v13;

    id v15 = *(void **)(v11 + v5);
    *(void *)(v11 + v5) = v14;
    id v7 = v14;

    unint64_t v6 = 0;
  }
  id v16 = v6;
  return v7;
}

id sub_1001AC0D4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___rayNode;
  *(void *)&v3[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___rayNode] = 0;
  uint64_t v7 = OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___arKitNode;
  *(void *)&v4[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___arKitNode] = 0;
  uint64_t v8 = OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___mlNode;
  *(void *)&v4[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___mlNode] = 0;
  uint64_t v9 = OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___lpNode;
  *(void *)&v4[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___lpNode] = 0;
  uint64_t v10 = OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___fallbackNode;
  *(void *)&v4[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___fallbackNode] = 0;
  uint64_t v11 = OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___previousNode;
  *(void *)&v4[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___previousNode] = 0;
  uint64_t v12 = OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___patchNode;
  *(void *)&v4[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___patchNode] = 0;
  uint64_t v13 = OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___adNode;
  *(void *)&v4[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___adNode] = 0;
  self;
  uint64_t v14 = swift_dynamicCastObjCClass();
  if (v14)
  {
    *(void *)&v4[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger_sceneView] = v14;
    *(void *)&v4[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger_planeSelector] = a3;
    v30.receiver = v4;
    v30.super_class = ObjectType;
    id v15 = (void *)v14;
    id v16 = a1;
    swift_retain();
    id v17 = [super init];
    NSString v18 = String._bridgeToObjectiveC()();
    [v17 setName:v18];

    id v19 = v17;
    uint64_t v20 = PlaneSelector.debugOptions.getter();
    [v19 setHidden:(*(void *)PlaneSelector.DebugOptions.showHitPoints.unsafeMutableAddressor() & ~v20) != 0];

    unint64_t v21 = self;
    [v21 begin];
    id v22 = [v15 scene];
    id v23 = [v22 rootNode];

    [v23 addChildNode:v19];
    [v21 commit];
    sub_10001C99C(0, (unint64_t *)&unk_1004CA020);
    id v24 = v19;
    PlaneSelector.DebugOptions.keys.unsafeMutableAddressor();
    swift_bridgeObjectRetain();
    static NSUserDefaults.observe(observer:keys:)();
    swift_bridgeObjectRelease();

    swift_release();
  }
  else
  {
    NSString v27 = v4;

    swift_release();
    uint64_t v25 = *(void **)&v4[v13];

    swift_deallocPartialClassInstance();
    return 0;
  }
  return v24;
}

void sub_1001AC4DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_10004FB7C(a5, (uint64_t)v54);
  sub_10004FB7C(a4, (uint64_t)v53);
  uint64_t v43 = a3;
  sub_10004FB7C(a3, (uint64_t)v52);
  sub_10004FB7C(a2, (uint64_t)v51);
  sub_10004FB7C(a1, (uint64_t)v50);
  id v9 = sub_1001ABFF0(&OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___lpNode, 0.21961, 0.0078431, 0.8549);
  sub_10004FB7C(a1, (uint64_t)v79);
  if (v84)
  {
    double v32 = *(double *)&v82;
    double v35 = v83[0];
    double v28 = *(double *)&v80;
    double v30 = *(double *)&v81;
    swift_retain();
    [v9 setSimdWorldTransform:v28, v30, v32, v35];
    [v9 setHidden:0];
    [v9 setRenderingOrder:1];
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [v9 childNodeWithName:v10 recursively:0];

    if (v11)
    {
      [v11 setHidden:1];
      sub_10005302C(a1);

      id v9 = v11;
    }
    else
    {
      sub_10005302C(a1);
    }
  }
  else
  {
    [v9 setHidden:1];
    [v9 setRenderingOrder:1];
  }

  id v12 = sub_1001ABFF0(&OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___arKitNode, 0.80784, 0.027451, 0.33333);
  sub_10004FB7C(a2, (uint64_t)v73);
  if (v78)
  {
    double v33 = *(double *)&v76;
    double v36 = v77[0];
    double v29 = *(double *)&v74;
    double v31 = *(double *)&v75;
    swift_retain();
    [v12 setSimdWorldTransform:v29, v31, v33, v36];
    [v12 setHidden:0];
    [v12 setRenderingOrder:1];
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v12 childNodeWithName:v13 recursively:0];

    if (v14)
    {
      [v14 setHidden:1];
      sub_10005302C(a2);

      id v12 = v14;
    }
    else
    {
      sub_10005302C(a2);
    }
  }
  else
  {
    [v12 setHidden:1];
    [v12 setRenderingOrder:1];
  }
  uint64_t v15 = v43;

  id v16 = sub_1001ABFF0(&OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___mlNode, 0.46667, 0.76471, 0.26667);
  sub_10004FB7C(v43, (uint64_t)v67);
  if (v72)
  {
    double v44 = v71[0];
    double v37 = *(double *)&v69;
    double v39 = *(double *)&v70;
    double v34 = *(double *)&v68;
    swift_retain();
    [v16 setSimdWorldTransform:v34, v37, v39, v44];
    [v16 setHidden:0];
    [v16 setRenderingOrder:1];
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [v16 childNodeWithName:v17 recursively:0];

    if (v18)
    {
      [v18 setHidden:1];
      sub_10005302C(v15);

      id v16 = v18;
    }
    else
    {
      sub_10005302C(v15);
    }
  }
  else
  {
    [v16 setHidden:1];
    [v16 setRenderingOrder:1];
  }

  id v19 = sub_1001ABFF0(&OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___fallbackNode, 1.0, 1.0, 1.0);
  [v19 setHidden:1];
  [v19 setRenderingOrder:1];

  id v20 = sub_1001ABFF0(&OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___previousNode, 0.0, 0.0, 0.0);
  [v20 setHidden:1];
  [v20 setRenderingOrder:1];

  id v21 = sub_1001ABFF0(&OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___patchNode, 1.0, 0.25279, 1.0);
  sub_10004FB7C(a4, (uint64_t)v61);
  if (v66)
  {
    double v45 = v65[0];
    double v40 = *(double *)&v63;
    double v41 = *(double *)&v64;
    double v38 = *(double *)&v62;
    swift_retain();
    [v21 setSimdWorldTransform:v38, v40, v41, v45];
    [v21 setHidden:0];
    [v21 setRenderingOrder:1];
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = [v21 childNodeWithName:v22 recursively:0];

    [v23 setHidden:1];
    sub_10005302C(a4);

    id v21 = v23;
  }
  else
  {
    [v21 setHidden:1];
    [v21 setRenderingOrder:1];
  }
  uint64_t v24 = a5;

  id v25 = sub_1001ABFF0(&OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___adNode, 0.0, 0.99144, 1.0);
  sub_10004FB7C(a5, (uint64_t)v55);
  if (v60)
  {
    double v47 = *(double *)&v58;
    double v49 = v59[0];
    double v46 = *(double *)&v57;
    double v42 = *(double *)&v56;
    swift_retain();
    [v25 setSimdWorldTransform:v42, v46, v47, v49];
    [v25 setHidden:0];
    [v25 setRenderingOrder:1];
    NSString v26 = String._bridgeToObjectiveC()();
    id v27 = [v25 childNodeWithName:v26 recursively:0];

    [v27 setHidden:1];
    sub_10005302C(v24);

    id v25 = v27;
  }
  else
  {
    [v25 setHidden:1];
    [v25 setRenderingOrder:1];
  }
}

void sub_1001ACC40(uint64_t a1)
{
  sub_10004FB7C(a1, (uint64_t)v14);
  sub_10004FB7C(a1, (uint64_t)v15);
  if (v20)
  {
    double v12 = *(double *)&v17;
    double v13 = *(double *)&v16;
    double v10 = v19[0];
    double v11 = *(double *)&v18;
    switch(*(unsigned char *)(v20 + 48))
    {
      case 1:
        swift_retain();
        id v2 = &OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___mlNode;
        Swift::Float v3 = 0.46667;
        Swift::Float v4 = 0.76471;
        Swift::Float v5 = 0.26667;
        break;
      case 2:
        swift_retain();
        id v2 = &OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___fallbackNode;
        Swift::Float v3 = 1.0;
        Swift::Float v4 = 1.0;
        goto LABEL_10;
      case 3:
        swift_retain();
        id v2 = &OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___lpNode;
        Swift::Float v3 = 0.21961;
        Swift::Float v4 = 0.0078431;
        Swift::Float v5 = 0.8549;
        break;
      case 4:
        swift_retain();
        id v2 = &OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___previousNode;
        Swift::Float v3 = 0.0;
        Swift::Float v4 = 0.0;
        Swift::Float v5 = 0.0;
        break;
      case 5:
        swift_retain();
        id v2 = &OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___patchNode;
        Swift::Float v4 = 0.25279;
        Swift::Float v3 = 1.0;
        goto LABEL_10;
      case 6:
        swift_retain();
        id v2 = &OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___adNode;
        Swift::Float v4 = 0.99144;
        Swift::Float v3 = 0.0;
LABEL_10:
        Swift::Float v5 = 1.0;
        break;
      default:
        swift_retain();
        id v2 = &OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___arKitNode;
        Swift::Float v3 = 0.80784;
        Swift::Float v4 = 0.027451;
        Swift::Float v5 = 0.33333;
        break;
    }
    id v6 = sub_1001ABFF0(v2, v3, v4, v5);
    sub_1001AD144(a1);
    sub_1001AD144(a1);
    id v7 = v6;
    [v7 setSimdWorldTransform:v13, v12, v11, v10];
    [v7 setHidden:0];
    [v7 setRenderingOrder:-1];
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [v7 childNodeWithName:v8 recursively:0];

    [v9 setHidden:0];
    sub_10005302C(a1);

    sub_10005302C(a1);
    sub_10005302C(a1);
  }
}

uint64_t type metadata accessor for SCNPlaneSelectionDebugger()
{
  return self;
}

id sub_1001AD010@<X0>(void *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  id v7 = objc_allocWithZone(v3);
  id result = sub_1001AC0D4(a1, v8, a2);
  *a3 = result;
  return result;
}

void sub_1001AD05C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_1001AD080(uint64_t a1)
{
}

void sub_1001AD0A4()
{
  ARFrame.getHitRay(cameraPoint:)();
  double v3 = v0;
  id v1 = sub_1001AB708();
  [v1 setHidden:0];

  id v2 = sub_1001AB708();
  [v2 setSimdWorldPosition:v3];

  id v4 = sub_1001AB708();
  SCNNode.setForwardDirection(direction:)();
}

uint64_t sub_1001AD144(uint64_t a1)
{
  return a1;
}

void sub_1001AD170()
{
  *(void *)&v0[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___rayNode] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___arKitNode] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___mlNode] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___lpNode] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___fallbackNode] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___previousNode] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___patchNode] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure25SCNPlaneSelectionDebugger____lazy_storage___adNode] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1001AD230(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    double v3 = v2;
    uint64_t v6 = PlaneSelector.DebugOptions.keyForFeature.unsafeMutableAddressor();
    uint64_t v7 = *(void *)v6;
    if (*(void *)(*(void *)v6 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v8 = sub_1000E20D4(a1, a2);
      if (v9)
      {
        uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10001C99C(0, (unint64_t *)&unk_1004CA020);
        uint64_t v13 = PlaneSelector.debugOptions.getter();
        sub_1001AD3CC();
        char v11 = static NSUserDefaults.update<A>(_:key:feature:)();
        PlaneSelector.debugOptions.setter();
        if (*(void *)PlaneSelector.DebugOptions.showHitPoints.unsafeMutableAddressor() == v10)
        {
          [v3 setHidden:(v11 & 1) == 0, v13, v10];
        }
        else if (*(void *)PlaneSelector.DebugOptions.showHitRay.unsafeMutableAddressor() == v10)
        {
          id v12 = sub_1001AB708();
          [v12 setHidden:(v11 & 1) == 0, v13, v10];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
}

unint64_t sub_1001AD3CC()
{
  unint64_t result = qword_1004CFC08;
  if (!qword_1004CFC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CFC08);
  }
  return result;
}

void sub_1001AD420(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  *uint64_t v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_8:
    swift_once();
    goto LABEL_5;
  }
  if (a1) {
    [*(id *)(v2 + 16) pause];
  }
  id v9 = [*(id *)(v2 + 32) layer];
  CALayer.pauseAnimations()();

  if (qword_1004C29D8 != -1) {
    goto LABEL_8;
  }
LABEL_5:
  if (qword_1004F7FE8)
  {
    id v10 = (id)qword_1004F7FE8;
    sub_1001A9F64(0, 0);
  }
  else
  {
    __break(1u);
  }
}

void sub_1001AD5D8(__int16 a1)
{
  sub_1001ADEBC();
  double v3 = v2;
  if ([self jasperAvailable])
  {
    id v4 = [self standardUserDefaults];
    unsigned __int8 v5 = [v4 kPersonSegmentationAlwaysOn];

    if ((v5 & 1) != 0
      || *(unsigned __int8 *)NSUserDefaults.recordReplayOption.unsafeMutableAddressor() - 1 <= 3)
    {
      unint64_t v6 = (unint64_t)[v3 frameSemantics] | 1;
    }
    else
    {
      unint64_t v7 = (unint64_t)[v3 frameSemantics];
      if ((a1 & 0x100) != 0) {
        unint64_t v6 = v7 | 1;
      }
      else {
        unint64_t v6 = v7 & 0xFFFFFFFFFFFFFFFELL;
      }
    }
    [v3 setFrameSemantics:v6];
  }
  id v8 = v3;
  sub_1001AD708(a1 & 1, v8);
}

void sub_1001AD708(int a1, void *a2)
{
  uint64_t v3 = v2;
  int v40 = a1;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (id *)((char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v13 = (id *)((char *)&v37 - v12);
  uint64_t v14 = type metadata accessor for DispatchPredicate();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  long long v17 = (uint64_t *)((char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
  *long long v17 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  char v18 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v14);
  if (v18)
  {
    uint64_t v39 = v3;
    if (qword_1004C2AF8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v41._uint64_t countAndFlagsBits = 0;
  v41._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  v41._uint64_t countAndFlagsBits = 0xD000000000000014;
  v41._object = (void *)0x800000010042AD50;
  if (v40) {
    uint64_t v19 = 1702195828;
  }
  else {
    uint64_t v19 = 0x65736C6166;
  }
  if (v40) {
    unint64_t v20 = 0xE400000000000000;
  }
  else {
    unint64_t v20 = 0xE500000000000000;
  }
  unint64_t v21 = v20;
  String.append(_:)(*(Swift::String *)&v19);
  swift_bridgeObjectRelease();
  Log.default(_:isPrivate:)(v41, 0);
  swift_bridgeObjectRelease();
  id v22 = a2;
  id v23 = (unsigned __int8 *)NSUserDefaults.recordReplayOption.unsafeMutableAddressor();
  if (*v23 - 1 > 1) {
    goto LABEL_15;
  }
  if (qword_1004C29D8 != -1) {
    goto LABEL_37;
  }
  uint64_t v24 = qword_1004F7FE8;
  if (!qword_1004F7FE8) {
    goto LABEL_38;
  }
LABEL_12:
  if ((*(unsigned char *)(v24 + qword_1004F84C8) & 1) == 0)
  {
    uint64_t v25 = v24 + qword_1004CF758;
    swift_beginAccess();
    sub_100090C7C(v25, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload() - 1 >= 2)
    {
      sub_100090CE0((uint64_t)v13);
      if (qword_1004F7FE8)
      {
        int v36 = *v23;
        id v30 = (id)qword_1004F7FE8;
        RecordReplayOption.recordFile.getter();
        id v32 = sub_1001A9520(v22, (uint64_t)v7, v36, 0, 0);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v38);
        goto LABEL_25;
      }
      goto LABEL_41;
    }
  }
LABEL_15:
  uint64_t v26 = qword_1004C29D8;
  if (*v23 - 3 <= 1)
  {
    if (qword_1004C29D8 != -1) {
      goto LABEL_39;
    }
    uint64_t v27 = qword_1004F7FE8;
    if (qword_1004F7FE8) {
      goto LABEL_18;
    }
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  while (1)
  {
    if (v26 != -1)
    {
      swift_once();
      double v29 = (void *)qword_1004F7FE8;
      if (qword_1004F7FE8) {
        goto LABEL_23;
      }
      goto LABEL_36;
    }
    do
    {
      double v29 = (void *)qword_1004F7FE8;
      if (qword_1004F7FE8)
      {
LABEL_23:
        id v30 = v29;
        id v31 = sub_1001A8DD0(v22);
        goto LABEL_24;
      }
LABEL_36:
      __break(1u);
LABEL_37:
      swift_once();
      uint64_t v24 = qword_1004F7FE8;
      if (qword_1004F7FE8) {
        goto LABEL_12;
      }
LABEL_38:
      __break(1u);
LABEL_39:
      swift_once();
      uint64_t v27 = qword_1004F7FE8;
      if (!qword_1004F7FE8) {
        goto LABEL_40;
      }
LABEL_18:
      ;
    }
    while ((*(unsigned char *)(v27 + qword_1004F84D0) & 1) != 0);
    uint64_t v28 = v27 + qword_1004CF758;
    swift_beginAccess();
    sub_100090C7C(v28, (uint64_t)v11);
    if (swift_getEnumCaseMultiPayload() != 3) {
      break;
    }

    uint64_t v26 = qword_1004C29D8;
  }
  sub_100090CE0((uint64_t)v11);
  if (!qword_1004F7FE8)
  {
LABEL_42:
    __break(1u);
    return;
  }
  id v30 = (id)qword_1004F7FE8;
  id v31 = sub_1001A90C4(v22);
LABEL_24:
  id v32 = v31;
LABEL_25:
  uint64_t v33 = v39;

  id v34 = [*(id *)(v33 + 32) layer];
  CALayer.resumeAnimations()();

  if (v40)
  {
    *(unsigned char *)(v33 + 24) = 1;
    uint64_t v35 = 3;
  }
  else
  {
    uint64_t v35 = 0;
  }
  [*(id *)(v33 + 16) runWithConfiguration:v32 options:v35, v37, v38];
}

uint64_t sub_1001ADCB0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Session()
{
  return self;
}

uint64_t getEnumTagSinglePayload for Session.Configuration(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Session.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001ADE84);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Session.Configuration()
{
  return &type metadata for Session.Configuration;
}

void sub_1001ADEBC()
{
  id v0 = [objc_allocWithZone((Class)ARWorldTrackingConfiguration) init];
  [v0 setPlaneDetection:3];
  [v0 setLightEstimationEnabled:1];
  [v0 setMinVergenceAngle:1.5];
  [v0 setDisableOcclusionForPersonSegmentation:1];
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if ((static UIDevice.hasHWAcceleratedFeatureDetection()() & 1) == 0
    && *(unsigned char *)MeasureCore.isTrackingVGAEnabled.unsafeMutableAddressor() == 1)
  {
    NSString v1 = String._bridgeToObjectiveC()();
    [v0 setSlamConfiguration:v1];
  }
  int v2 = self;
  [v0 setMlModelEnabled:[v2 hasAppleNeuralEngine]];
  if ([v2 jasperAvailable])
  {
    [v0 setFrameSemantics:8];
    [v0 setAllowCameraInMultipleForegroundAppLayout:1];
    if (static UIDevice.isIPhone()()) {
      [v0 setLowQosSchedulingEnabled:1];
    }
  }
  if ((static UIDevice.shouldLockFramerate()() & 1) == 0) {
    return;
  }
  sub_10001C99C(0, &qword_1004CBEE0);
  id v3 = [(id)swift_getObjCClassFromMetadata() supportedVideoFormats];
  sub_10001C99C(0, &qword_1004CFCC0);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9 >= 2) {
      goto LABEL_10;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return;
  }
  if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2) {
    goto LABEL_15;
  }
LABEL_10:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v10 = v0;
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_13;
  }
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    uint64_t v5 = *(void **)(v4 + 40);
    id v6 = v0;
    id v7 = v5;
LABEL_13:
    int v8 = v7;
    swift_bridgeObjectRelease();
    [v0 setVideoFormat:v8];

    return;
  }
  __break(1u);
}

uint64_t sub_1001AE160(uint64_t a1)
{
  return *(void *)(a1 + qword_1004CFCC8);
}

id sub_1001AE170(char *a1, uint64_t a2, uint64_t a3)
{
  *(void *)&a1[qword_1004CFCC8] = a3;
  return [a1 updateHighlightState];
}

Class sub_1001AE188()
{
  swift_beginAccess();
  sub_10001C99C(0, &qword_1004CFE80);
  swift_bridgeObjectRetain();
  v0.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v0.super.isa;
}

uint64_t sub_1001AE21C(uint64_t a1)
{
  sub_10001C99C(0, &qword_1004CFE80);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v3 = (uint64_t *)(a1 + qword_1004CFCD0);
  swift_beginAccess();
  *id v3 = v2;
  return swift_bridgeObjectRelease();
}

id sub_1001AE29C(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[qword_1004CFCC8] = 0;
  *(void *)&v4[qword_1004CFCD0] = _swiftEmptyArrayStorage;
  uint64_t v10 = qword_1004CFCD8;
  uint64_t v11 = self;
  uint64_t v12 = v4;
  *(void *)&v4[v10] = [v11 whiteColor];
  uint64_t v13 = qword_1004CFCE0;
  *(void *)&v12[v13] = [v11 systemYellowColor];
  *(void *)&v12[qword_1004CFCE8] = 0x4042000000000000;
  *(void *)&v12[qword_1004CFCF0] = 0x4024000000000000;
  uint64_t v14 = qword_1004CFCF8;
  uint64_t v15 = sub_100012894(&qword_1004C6F48);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_1004F8630;
  char v18 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 272);
  swift_retain();
  *(void *)&v12[v14] = v18(KeyPath, v17);
  uint64_t v19 = qword_1004CFD00;
  sub_100012894(&qword_1004CFE68);
  swift_getKeyPath();
  *(void *)&v12[v19] = MutableStateValue.__allocating_init(_:_:)();

  v28.receiver = v12;
  v28.super_class = ObjectType;
  [super initWithFrame:a1, a2, a3, a4];
  id v21 = [v11 clearColor];
  [v20 setBackgroundColor:v21];

  id v22 = [v20 layer];
  [v22 setCornerRadius:20.0];

  id v23 = [v20 layer];
  [v23 setMasksToBounds:1];

  id v24 = [v20 layer];
  [v24 setCornerCurve:kCACornerCurveContinuous];

  [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_1001AEB04();
  sub_1001AE750();
  id v25 = [self effectWithStyle:17];
  id v26 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v25];
  [v20 bounds];
  [v26 setFrame:];
  [v26 setAutoresizingMask:18];
  [v20 insertSubview:v26 atIndex:0];

  [v20 layoutIfNeeded];
  [v20 setTranslatesAutoresizingMaskIntoConstraints:1];

  return v20;
}

id sub_1001AE640(double a1, double a2, double a3, double a4)
{
  return sub_1001AE29C(a1, a2, a3, a4);
}

void sub_1001AE664(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1001B01A8();
}

uint64_t sub_1001AE68C()
{
  return swift_release();
}

id sub_1001AE6F0(unsigned __int8 *a1, char *a2)
{
  id result = (id)sub_1002050FC(*a1, (uint64_t)&off_100485CC0);
  if (v4)
  {
    __break(1u);
  }
  else
  {
    *(void *)&a2[qword_1004CFCC8] = result;
    return [a2 updateHighlightState];
  }
  return result;
}

void sub_1001AE750()
{
  NSString v1 = v0;
  uint64_t v2 = &v0[qword_1004CFCD0];
  swift_beginAccess();
  if (*(void *)v2 >> 62)
  {
    sub_10001C99C(0, (unint64_t *)&qword_1004CA030);
    swift_bridgeObjectRetain();
    _bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10001C99C(0, (unint64_t *)&qword_1004CA030);
  }
  swift_bridgeObjectRelease();
  id v3 = objc_allocWithZone((Class)UIStackView);
  sub_10001C99C(0, (unint64_t *)&qword_1004CA030);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithArrangedSubviews:isa];

  [v5 setAxis:1];
  [v5 setAlignment:0];
  [v5 setDistribution:1];
  double v6 = *(double *)&v1[qword_1004CFCF0];
  [v5 setSpacing:20.0 - (v6 + v6)];
  [v1 addSubview:v5];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v7 = [v5 topAnchor];
  id v8 = [v1 topAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8 constant:16.0 - v6];

  [v9 setActive:1];
  id v10 = [v5 bottomAnchor];
  id v11 = [v1 bottomAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11 constant:v6 + -16.0];

  [v12 setActive:1];
  id v13 = [v5 leftAnchor];
  id v14 = [v1 leftAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14 constant:20.0 - v6];

  [v15 setActive:1];
  id v16 = [v5 rightAnchor];
  id v17 = [v1 rightAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17 constant:v6 + -20.0];

  [v18 setActive:1];
}

void sub_1001AEB04()
{
  char v4 = v0;
  id v5 = &v0[qword_1004CFCD0];
  swift_beginAccess();
  *(void *)id v5 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  *(void *)id v5 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  id v30 = v0;
  id v6 = [v0 subviews];
  sub_10001C99C(0, (unint64_t *)&qword_1004CA030);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    if (!v8) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v8) {
      goto LABEL_10;
    }
  }
  if (v8 >= 1)
  {
    uint64_t v9 = 0;
    uint64_t v2 = &selRef_replaySensorDidFinishReplayingData;
    do
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = (char *)*(id *)(v7 + 8 * v9 + 32);
      }
      NSString v1 = v10;
      ++v9;
      [v10 removeFromSuperview];
    }
    while (v8 != v9);
LABEL_10:
    swift_bridgeObjectRelease_n();
    if (qword_1004C2CD8 != -1) {
      goto LABEL_41;
    }
    goto LABEL_11;
  }
  while (2)
  {
    __break(1u);
    while (2)
    {
      swift_once();
LABEL_13:
      id v12 = 0;
      while (1)
      {
        unint64_t v13 = v12[v8 + 32];
        if (byte_1004F84F8 != 1)
        {
          if (qword_1004C2CB0 != -1) {
            swift_once();
          }
          unint64_t v7 = qword_1004F84D8;
          if (!*(void *)(qword_1004F84D8 + 16)) {
            goto LABEL_39;
          }
          sub_1000E21E0(v13);
          if ((v15 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_24;
        }
        if (qword_1004C2CC0 != -1) {
          swift_once();
        }
        unint64_t v7 = qword_1004F84E8;
        if (!*(void *)(qword_1004F84E8 + 16)) {
          break;
        }
        sub_1000E21E0(v13);
        if ((v14 & 1) == 0) {
          goto LABEL_38;
        }
LABEL_24:
        swift_bridgeObjectRetain();
        sub_1001AF0C8((id)v13);
        id v17 = v16;
        id v18 = [v29 buttonWithType:1];
        [v18 setImage:v17 forState:0];
        NSString v19 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v18 setTitle:v19 forState:0];

        [v18 addTarget:v30 action:v1 forControlEvents:64];
        [v18 setTitleColor:v2 forState:0];
        [v18 setTintColor:v2];
        id v20 = [v18 titleLabel];
        if (v20)
        {
          id v21 = v20;
          id v22 = [self _preferredFontForTextStyle:UIFontTextStyleCaption2 maximumContentSizeCategory:UIContentSizeCategoryExtraExtraExtraLarge];
          [v21 setFont:v22];
        }
        sub_1001AF29C(2.0, v3);
        swift_beginAccess();
        id v23 = v18;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*(void *)v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v5 & 0xFFFFFFFFFFFFFF8)
                                                                                    + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        ++v12;
        unint64_t v7 = (unint64_t)v5;
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_endAccess();

        if (v4 == v12)
        {
          swift_bridgeObjectRelease();
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      swift_once();
LABEL_11:
      uint64_t v8 = qword_1004F8500;
      char v4 = *(char **)(qword_1004F8500 + 16);
      if (v4)
      {
        id v29 = self;
        NSString v1 = "changeSelectionWithSender:";
        uint64_t v2 = *(char ***)&v30[qword_1004CFCD8];
        double v3 = *(double *)&v30[qword_1004CFCF0];
        uint64_t v11 = qword_1004C2CD0;
        swift_bridgeObjectRetain();
        if (v11 != -1) {
          continue;
        }
        goto LABEL_13;
      }
      break;
    }
LABEL_30:
    swift_beginAccess();
    uint64_t v24 = *(void *)v5;
    if ((*(void *)v5 & 0xC000000000000001) != 0)
    {
      id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_33:
      uint64_t v8 = (uint64_t)v25;
      swift_endAccess();
      unint64_t v7 = *(void *)&v30[qword_1004CFCE0];
      [(id)v8 setTitleColor:v7 forState:0];

      swift_beginAccess();
      uint64_t v26 = *(void *)v5;
      if ((*(void *)v5 & 0xC000000000000001) != 0) {
        goto LABEL_44;
      }
      if (!*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        continue;
      }
      id v27 = *(id *)(v26 + 32);
    }
    else
    {
      if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v25 = *(id *)(v24 + 32);
        goto LABEL_33;
      }
      __break(1u);
LABEL_44:
      id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    break;
  }
  objc_super v28 = v27;
  swift_endAccess();
  [v28 setTintColor:v7];
}

void sub_1001AF0C8(id a1)
{
  if (qword_1004C2CD0 != -1) {
    swift_once();
  }
  if (byte_1004F84F8 != 1) {
    goto LABEL_10;
  }
  if (qword_1004C2CC8 != -1) {
    swift_once();
  }
  if (*(void *)(qword_1004F84F0 + 16))
  {
    sub_1000E21E0(a1);
    if ((v2 & 1) == 0)
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    swift_bridgeObjectRetain();
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    a1 = [self imageNamed:v3];

    if (a1) {
      return;
    }
    __break(1u);
LABEL_10:
    if (qword_1004C2CB8 == -1) {
      goto LABEL_11;
    }
    goto LABEL_16;
  }
  __break(1u);
LABEL_16:
  swift_once();
LABEL_11:
  if (!*(void *)(qword_1004F84E0 + 16))
  {
    __break(1u);
    goto LABEL_18;
  }
  sub_1000E21E0(a1);
  if ((v4 & 1) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [self imageNamed:v5];

  if (!v6) {
LABEL_20:
  }
    __break(1u);
}

void sub_1001AF29C(double a1, double a2)
{
  id v5 = [v2 imageView];
  if (v5)
  {
    id v6 = v5;
    id v7 = [v5 image];

    if (v7)
    {
      [v7 size];
      double v9 = v8;
      double v11 = v10;

      id v12 = [v2 titleLabel];
      if (v12)
      {
        unint64_t v13 = v12;
        id v14 = [v12 text];

        if (v14)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          id v15 = [v2 titleLabel];
          if (v15
            && (id v16 = v15, v17 = [v15 font], v16, v17))
          {
            id v18 = [v2 effectiveUserInterfaceLayoutDirection];
            double v19 = -v9;
            if (v18 == (id)1) {
              double v20 = -v9;
            }
            else {
              double v20 = 0.0;
            }
            if (v18 == (id)1) {
              double v19 = 0.0;
            }
            id v21 = v18;
            [v2 setTitleEdgeInsets:0.0, v19, -(v11 + a1), v20];
            NSString v22 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            sub_100012894(&qword_1004C9DF0);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_1003F87F0;
            *(void *)(inited + 32) = NSFontAttributeName;
            *(void *)(inited + 64) = sub_10001C99C(0, &qword_1004C4550);
            *(void *)(inited + 40) = v17;
            uint64_t v24 = NSFontAttributeName;
            id v25 = v17;
            sub_1000E0F80(inited);
            type metadata accessor for Key(0);
            sub_1000278E0();
            Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            [v22 sizeWithAttributes:isa];
            double v28 = v27;
            double v30 = v29;

            if (v21 == (id)1) {
              double v31 = 0.0;
            }
            else {
              double v31 = -v28;
            }
            if (v21 == (id)1) {
              double v32 = -v28;
            }
            else {
              double v32 = 0.0;
            }
            double v33 = v30 + a1;
            [v2 setImageEdgeInsets:-v33, v32, 0.0, v31];
            if (v28 >= v9) {
              double v34 = v9;
            }
            else {
              double v34 = v28;
            }
            [v2 setContentEdgeInsets:v33 * 0.5 + a2, a2 - v34 * 0.5, v33 * 0.5 + a2, a2 - v34 * 0.5];
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
      }
    }
  }
}

uint64_t sub_1001AF5A0(unint64_t a1)
{
  char v4 = v1;
  uint64_t i = type metadata accessor for DebugSessionCoordinator.RecordReplayState(0);
  __chkstk_darwin(i);
  double v8 = (void **)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v9 = &v1[qword_1004CFCD0];
  swift_beginAccess();
  uint64_t v10 = *(void *)v9;
  if (*(void *)v9 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (!v11) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v11) {
      return swift_bridgeObjectRelease();
    }
  }
  if ((v10 & 0xC000000000000001) != 0) {
    goto LABEL_32;
  }
  if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_34:
    uint64_t result = swift_once();
    goto LABEL_23;
  }
  id v12 = *(id *)(v10 + 32);
LABEL_6:
  char v2 = v12;
  sub_10001C99C(0, (unint64_t *)&qword_1004C4568);
  if ((static NSObject.== infix(_:_:)() & 1) == 0)
  {
    NSString v22 = v8;
    uint64_t v23 = i;
    uint64_t v24 = v4;

    if (v11 == 1) {
      return swift_bridgeObjectRelease();
    }
    char v4 = (char *)(v10 & 0xFFFFFFFFFFFFFF8);
    for (uint64_t i = 5; ; ++i)
    {
      unint64_t v3 = i - 4;
      if ((v10 & 0xC000000000000001) != 0)
      {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v3 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_32:
          id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_6;
        }
        id v13 = *(id *)(v10 + 8 * i);
      }
      char v2 = v13;
      double v8 = (void **)(i - 3);
      if (__OFADD__(v3, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (static NSObject.== infix(_:_:)())
      {
        char v4 = v24;
        double v8 = v22;
        goto LABEL_19;
      }

      if (v8 == (void **)v11) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  unint64_t v3 = 0;
LABEL_19:
  uint64_t result = sub_1001B0370(v3);
  if (result == 3)
  {

    return swift_bridgeObjectRelease();
  }
  a1 = result;
  if (qword_1004C29D8 != -1) {
    goto LABEL_34;
  }
LABEL_23:
  if (qword_1004F7FE8)
  {
    id v15 = (id)qword_1004F7FE8;
    swift_bridgeObjectRelease();
    uint64_t v16 = (uint64_t)v15 + qword_1004CF758;
    swift_beginAccess();
    sub_100090C7C(v16, (uint64_t)v8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      id v17 = *v8;
      id v18 = sub_1000FE9C0();

      sub_100079908(a1 + 7, 0, 0, 1);
      id v15 = v18;
    }
    else
    {
      sub_100090CE0((uint64_t)v8);
    }

    *(unsigned char *)(swift_allocObject() + 16) = a1;
    swift_retain();
    StateValue.mutateImmediatelyNotifyAsync(_:)();
    swift_release();
    swift_release();
    *(void *)&v4[qword_1004CFCC8] = v3;
    [v4 updateHighlightState];
    double v19 = *(uint64_t (**)(unsigned char *))(**(void **)&v4[qword_1004CFD00] + 400);
    swift_retain();
    double v20 = (void (*)(unsigned char *, void))v19(v25);
    sub_1000A4FD8(a1);
    v20(v25, 0);

    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1001AF988(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1001AF5A0((unint64_t)v4);
}

uint64_t sub_1001AF9F0()
{
  NSString v1 = (unint64_t *)(v0 + qword_1004CFCD0);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    uint64_t v6 = qword_1004CFCC8;
    uint64_t v7 = qword_1004CFCD8;
    uint64_t v8 = qword_1004CFCE0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *(id *)(v2 + 8 * v5 + 32);
      }
      uint64_t v10 = v9;
      uint64_t v11 = v5 + 1;
      if (v5 == *(void *)(v0 + v6)) {
        uint64_t v12 = v8;
      }
      else {
        uint64_t v12 = v7;
      }
      uint64_t v13 = *(void *)(v0 + v12);
      [v9 setTitleColor:v13 forState:0];
      [v10 setTintColor:v13];

      uint64_t v5 = v11;
    }
    while (v3 != v11);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1001AFB40(void *a1)
{
  id v1 = a1;
  sub_1001AF9F0();
}

uint64_t sub_1001AFB88()
{
  swift_bridgeObjectRelease();

  swift_release();

  return swift_release();
}

uint64_t sub_1001AFBF8(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_release();

  return swift_release();
}

uint64_t type metadata accessor for ModeControl()
{
  uint64_t result = qword_1004CFD30;
  if (!qword_1004CFD30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001AFCC0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1001AFD38()
{
  return type metadata accessor for ModeControl();
}

id sub_1001AFD40(unsigned __int8 *a1)
{
  return sub_1001AE6F0(a1, *(char **)(v1 + 16));
}

unint64_t sub_1001AFD48()
{
  unint64_t result = sub_1001AFD68();
  qword_1004F84D8 = result;
  return result;
}

unint64_t sub_1001AFD68()
{
  sub_100012894(&qword_1004CFE70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003F8B70;
  *(unsigned char *)(inited + 32) = 0;
  uint64_t v1 = self;
  id v2 = [v1 mainBundle];
  v16._object = (void *)0x800000010042AE80;
  v3._uint64_t countAndFlagsBits = 0x5455415F45444F4DLL;
  v3._object = (void *)0xE90000000000004FLL;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v16._uint64_t countAndFlagsBits = 0xD000000000000020;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v16);

  *(Swift::String *)(inited + 40) = v5;
  *(unsigned char *)(inited + 56) = 1;
  id v6 = [v1 mainBundle];
  v17._uint64_t countAndFlagsBits = 0xD000000000000022;
  v17._object = (void *)0x800000010042AEB0;
  v7._uint64_t countAndFlagsBits = 0x4E454C5F45444F4DLL;
  v7._object = (void *)0xEB00000000485447;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v17);

  *(Swift::String *)(inited + 64) = v9;
  *(unsigned char *)(inited + 80) = 2;
  id v10 = [v1 mainBundle];
  v18._uint64_t countAndFlagsBits = 0xD000000000000023;
  v18._object = (void *)0x800000010042AEE0;
  v11._uint64_t countAndFlagsBits = 0x5255535F45444F4DLL;
  v11._object = (void *)0xEC00000045434146;
  v12._uint64_t countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  Swift::String v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v18);

  *(Swift::String *)(inited + 88) = v13;
  unint64_t v14 = sub_1000E3924(inited);
  swift_setDeallocating();
  sub_100012894(&qword_1004CFE78);
  swift_arrayDestroy();
  return v14;
}

uint64_t sub_1001AFF88(uint64_t a1)
{
  return sub_1001B00DC(a1, (uint64_t)&off_100485C58, (uint64_t)&unk_100485C78, 3, (unint64_t *)&qword_1004F84E0);
}

uint64_t sub_1001AFFA4()
{
  sub_100012894(&qword_1004CFE70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003F87F0;
  *(unsigned char *)(inited + 32) = 0;
  id v1 = [self mainBundle];
  v7._object = (void *)0x800000010042AE50;
  v2._uint64_t countAndFlagsBits = 0x41454D5F45444F4DLL;
  v2._object = (void *)0xEC00000045525553;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v7._uint64_t countAndFlagsBits = 0xD000000000000023;
  Swift::String v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v7);

  *(Swift::String *)(inited + 40) = v4;
  unint64_t v5 = sub_1000E3924(inited);
  swift_setDeallocating();
  sub_100012894(&qword_1004CFE78);
  uint64_t result = swift_arrayDestroy();
  qword_1004F84E8 = v5;
  return result;
}

uint64_t sub_1001B00C0(uint64_t a1)
{
  return sub_1001B00DC(a1, (uint64_t)&off_100485C20, (uint64_t)&unk_100485C40, 1, (unint64_t *)&qword_1004F84F0);
}

uint64_t sub_1001B00DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v6 = sub_1000E3924(a2);
  sub_100012894(&qword_1004CFE78);
  uint64_t result = swift_arrayDestroy();
  *a5 = v6;
  return result;
}

void sub_1001B0138()
{
  id v0 = [self standardUserDefaults];
  unsigned __int8 v1 = [v0 showsOnlyYukonEModes];

  byte_1004F84F8 = v1;
}

void sub_1001B0194()
{
  qword_1004F8500 = (uint64_t)&off_100485BF8;
}

void sub_1001B01A8()
{
  unsigned __int8 v1 = v0;
  swift_getObjectType();
  *(void *)&v0[qword_1004CFCC8] = 0;
  *(void *)&v0[qword_1004CFCD0] = _swiftEmptyArrayStorage;
  uint64_t v2 = qword_1004CFCD8;
  Swift::String v3 = self;
  *(void *)&v1[v2] = [v3 whiteColor];
  uint64_t v4 = qword_1004CFCE0;
  *(void *)&v1[v4] = [v3 systemYellowColor];
  *(void *)&v1[qword_1004CFCE8] = 0x4042000000000000;
  *(void *)&v1[qword_1004CFCF0] = 0x4024000000000000;
  uint64_t v5 = qword_1004CFCF8;
  uint64_t v6 = sub_100012894(&qword_1004C6F48);
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1004F8630;
  Swift::String v9 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 272);
  swift_retain();
  *(void *)&v1[v5] = v9(KeyPath, v8);
  uint64_t v10 = qword_1004CFD00;
  sub_100012894(&qword_1004CFE68);
  swift_getKeyPath();
  *(void *)&v1[v10] = MutableStateValue.__allocating_init(_:_:)();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1001B0370(uint64_t a1)
{
  if (qword_1004C2CD8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(qword_1004F8500 + 16);
  if (v2)
  {
    uint64_t result = *(unsigned __int8 *)(qword_1004F8500 + 32);
    if (!a1) {
      return result;
    }
    unint64_t v4 = v2 - 1;
    uint64_t v5 = a1;
    while (v4 > a1 - 1)
    {
      if (!--v5) {
        return *(unsigned __int8 *)(qword_1004F8500 + 32 + a1);
      }
    }
  }
  return 3;
}

uint64_t sub_1001B0400()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_1001B0410(unsigned char *result)
{
  *uint64_t result = *(unsigned char *)(v1 + 16);
  return result;
}

uint64_t *sub_1001B0424(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    if ((unint64_t)*a2 >= 4) {
      swift_errorRetain();
    }
    *a1 = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    Swift::String v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for ARCamera.TrackingState.Reason();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 2, v11))
    {
      uint64_t v13 = type metadata accessor for ARCamera.TrackingState();
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 2, v11);
    }
  }
  return a1;
}

uint64_t sub_1001B059C(void *a1, uint64_t a2)
{
  if (*a1 >= 4uLL) {
    swift_errorRelease();
  }
  unint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ARCamera.TrackingState.Reason();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 2, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_1001B0688(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  if ((unint64_t)*a2 >= 4) {
    swift_errorRetain();
  }
  *a1 = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  Swift::String v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ARCamera.TrackingState.Reason();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 2, v10))
  {
    uint64_t v12 = type metadata accessor for ARCamera.TrackingState();
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 2, v10);
  }
  return a1;
}

unint64_t *sub_1001B07B0(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6 = *a2;
  if (*a1 >= 4)
  {
    if (v6 >= 4)
    {
      swift_errorRetain();
      *a1 = v6;
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      *a1 = *a2;
    }
  }
  else
  {
    if (v6 >= 4) {
      swift_errorRetain();
    }
    *a1 = v6;
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  Swift::String v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ARCamera.TrackingState.Reason();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 2, v10);
  int v14 = v12(v9, 2, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_13;
  }
  if (v14)
  {
LABEL_13:
    uint64_t v15 = type metadata accessor for ARCamera.TrackingState();
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 2, v10);
  return a1;
}

void *sub_1001B098C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  unint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for ARCamera.TrackingState.Reason();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 2, v7))
  {
    uint64_t v9 = type metadata accessor for ARCamera.TrackingState();
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 2, v7);
  }
  return a1;
}

unint64_t *sub_1001B0A9C(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6 = *a2;
  if (*a1 < 4) {
    goto LABEL_4;
  }
  if (v6 < 4)
  {
    swift_errorRelease();
LABEL_4:
    *a1 = v6;
    goto LABEL_6;
  }
  *a1 = v6;
  swift_errorRelease();
LABEL_6:
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ARCamera.TrackingState.Reason();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 2, v10);
  int v14 = v12(v9, 2, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_11;
  }
  if (v14)
  {
LABEL_11:
    uint64_t v15 = type metadata accessor for ARCamera.TrackingState();
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 2, v10);
  return a1;
}

uint64_t sub_1001B0C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B0C6C);
}

uint64_t sub_1001B0C6C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483643)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 4;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for ARCamera.TrackingState();
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1001B0D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B0D40);
}

void *sub_1001B0D40(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483643)
  {
    *uint64_t result = (a2 + 3);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ARCamera.TrackingState();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SessionState()
{
  uint64_t result = qword_1004CFEE0;
  if (!qword_1004CFEE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001B0E38()
{
  uint64_t result = type metadata accessor for ARCamera.TrackingState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1001B0ED0()
{
  uint64_t result = Contexts.UIKit.init()();
  qword_1004F8508 = result;
  return result;
}

id sub_1001B0EF0@<X0>(void *a1@<X8>)
{
  if (qword_1004C2CE0 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1004F8508;
  *a1 = qword_1004F8508;

  return v2;
}

uint64_t sub_1001B0F5C(void *a1, unint64_t *a2)
{
  unint64_t v2 = *a2;
  switch(*a1)
  {
    case 0:
      if (!v2) {
        return static ARCamera.TrackingState.== infix(_:_:)();
      }
      return 0;
    case 1:
      if (v2 == 1) {
        return static ARCamera.TrackingState.== infix(_:_:)();
      }
      return 0;
    case 2:
      if (v2 == 2) {
        return static ARCamera.TrackingState.== infix(_:_:)();
      }
      return 0;
    case 3:
      if (v2 == 3) {
        return static ARCamera.TrackingState.== infix(_:_:)();
      }
      return 0;
    default:
      if (v2 < 4) {
        return 0;
      }
      else {
        return static ARCamera.TrackingState.== infix(_:_:)();
      }
  }
}

unint64_t sub_1001B0FE4(uint64_t a1)
{
  unint64_t result = sub_1001B100C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001B100C()
{
  unint64_t result = qword_1004CFF40;
  if (!qword_1004CFF40)
  {
    type metadata accessor for SessionState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004CFF40);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for SessionState.State(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    swift_errorRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for SessionState.State(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_errorRelease();
  }
  return result;
}

unint64_t *assignWithCopy for SessionState.State(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v3 >= 0xFFFFFFFF) {
      swift_errorRetain();
    }
    *a1 = v3;
  }
  else if (v3 < 0xFFFFFFFF)
  {
    swift_errorRelease();
    *a1 = *a2;
  }
  else
  {
    swift_errorRetain();
    *a1 = v3;
    swift_errorRelease();
  }
  return a1;
}

unint64_t *assignWithTake for SessionState.State(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_errorRelease();
LABEL_6:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_errorRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionState.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SessionState.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 3;
    }
  }
  return result;
}

void *sub_1001B1260(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for SessionState.State()
{
  return &type metadata for SessionState.State;
}

BOOL sub_1001B1290(void *a1, unint64_t *a2)
{
  unint64_t v2 = *a2;
  switch(*a1)
  {
    case 0:
      return !v2;
    case 1:
      return v2 == 1;
    case 2:
      return v2 == 2;
    case 3:
      return v2 == 3;
    default:
      return v2 >= 4;
  }
}

uint64_t initializeWithCopy for DoThisLater(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DoThisLater(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

__n128 initializeWithTake for DoThisLater(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DoThisLater(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for DoThisLater(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 26)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DoThisLater(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 26) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DoThisLater()
{
  return &type metadata for DoThisLater;
}

unint64_t sub_1001B14B4@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001B50EC(*a1);
  *a2 = result;
  return result;
}

void sub_1001B14E0(void *a1@<X8>)
{
  *a1 = &off_100485CE8;
}

void sub_1001B14F0()
{
  off_1004CFF48 = &_swiftEmptyDictionarySingleton;
}

void sub_1001B1504()
{
  off_1004CFF50 = &_swiftEmptyDictionarySingleton;
}

void sub_1001B1518(void *a1)
{
  uint64_t v241 = a1;
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v202 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v228 = *(void *)(v5 - 8);
  uint64_t v229 = v5;
  __chkstk_darwin(v5);
  char v227 = (char *)&v202 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v225 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v225);
  char v226 = (char *)&v202 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v232 = *(void *)(v8 - 8);
  uint64_t v233 = v8;
  __chkstk_darwin(v8);
  uint64_t v231 = (char *)&v202 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [self shaderWithFileNamed:v10];

  uint64_t v12 = (void *)qword_1004F8510;
  qword_1004F8510 = (uint64_t)v11;

  int v13 = (void *)qword_1004F8510;
  if (qword_1004F8510)
  {
    sub_100012894((uint64_t *)&unk_1004CEA00);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1003F8B20;
    id v15 = objc_allocWithZone((Class)SKAttribute);
    id v16 = v13;
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [v15 initWithName:v17 type:2];

    *(void *)(v14 + 32) = v18;
    v251[0] = v14;
    specialized Array._endMutation()();
    sub_10001C99C(0, (unint64_t *)&qword_1004CFFF0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v16 setAttributes:isa];

    double v20 = (void *)sub_1001B50FC();
    NSString v22 = v21;
    id v244 = (id)sub_1001B50FC();
    uint64_t v24 = v23;
    id v25 = (void *)sub_1001B50FC();
    id v237 = v26;
    id v238 = v25;
    double v27 = (void *)sub_1001B50FC();
    long long v235 = v28;
    id v236 = v27;
    id v29 = [objc_allocWithZone((Class)SCNMaterial) init];
    uint64_t v248 = sub_100012894((uint64_t *)&qword_1004CFFF8);
    uint64_t inited = swift_initStackObject();
    long long v250 = xmmword_1003F87F0;
    *(_OWORD *)(inited + 16) = xmmword_1003F87F0;
    *(void *)(inited + 32) = SCNShaderModifierEntryPointGeometry;
    *(void *)(inited + 40) = v20;
    id v242 = v20;
    *(void *)(inited + 48) = v22;
    double v31 = SCNShaderModifierEntryPointGeometry;
    id v243 = v22;
    swift_bridgeObjectRetain();
    sub_1000E1BD8(inited);
    type metadata accessor for SCNShaderModifierEntryPoint(0);
    uint64_t v33 = v32;
    uint64_t v34 = sub_1001B5460(&qword_1004C3968, type metadata accessor for SCNShaderModifierEntryPoint);
    uint64_t v249 = v33;
    uint64_t v247 = v34;
    Class v35 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v29 setShaderModifiers:v35];

    id v36 = [v29 diffuse];
    if (qword_1004C2FD0 != -1) {
      swift_once();
    }
    [v36 setContents:qword_1004F87C0];

    id v37 = [v29 emission];
    if (qword_1004C2FF8 != -1) {
      swift_once();
    }
    uint64_t v245 = v24;
    uint64_t v222 = v4;
    uint64_t v223 = v2;
    uint64_t v224 = v1;
    [v37 setContents:qword_1004F87E8];

    if (qword_1004C2CE8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v38 = v29;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v258 = (double *)off_1004CFF48;
    off_1004CFF48 = (_UNKNOWN *)0x8000000000000000;
    id v240 = v38;
    sub_1000D632C((uint64_t)v38, 0, isUniquelyReferenced_nonNull_native);
    off_1004CFF48 = v258;
    swift_bridgeObjectRelease();
    swift_endAccess();
    id v40 = [objc_allocWithZone((Class)SCNMaterial) init];
    uint64_t v41 = swift_initStackObject();
    *(_OWORD *)(v41 + 16) = v250;
    id v42 = v242;
    *(void *)(v41 + 32) = v31;
    *(void *)(v41 + 40) = v42;
    *(void *)(v41 + 48) = v243;
    swift_bridgeObjectRetain();
    uint64_t v43 = v31;
    sub_1000E1BD8(v41);
    Class v44 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v40 setShaderModifiers:v44];

    id v234 = self;
    char v45 = [v234 jasperAvailable];
    id v221 = v40;
    sub_1001B5274(4, v40, v45);
    id v46 = [objc_allocWithZone((Class)SCNMaterial) init];
    uint64_t v47 = swift_initStackObject();
    *(_OWORD *)(v47 + 16) = v250;
    id v48 = v244;
    double v49 = v245;
    *(void *)(v47 + 32) = v43;
    *(void *)(v47 + 40) = v48;
    *(void *)(v47 + 48) = v49;
    uint64_t v50 = v43;
    swift_bridgeObjectRetain();
    sub_1000E1BD8(v47);
    Class v51 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v46 setShaderModifiers:v51];

    [v46 setLocksAmbientWithDiffuse:1];
    swift_beginAccess();
    id v52 = v46;
    char v53 = swift_isUniquelyReferenced_nonNull_native();
    long long v258 = (double *)off_1004CFF48;
    off_1004CFF48 = (_UNKNOWN *)0x8000000000000000;
    id v239 = v52;
    sub_1000D632C((uint64_t)v52, 1, v53);
    off_1004CFF48 = v258;
    swift_bridgeObjectRelease();
    swift_endAccess();
    id v54 = [objc_allocWithZone((Class)SCNMaterial) init];
    uint64_t v55 = swift_initStackObject();
    *(_OWORD *)(v55 + 16) = v250;
    *(void *)(v55 + 32) = v50;
    *(void *)(v55 + 40) = v48;
    *(void *)(v55 + 48) = v49;
    swift_bridgeObjectRetain();
    long long v56 = v50;
    sub_1000E1BD8(v55);
    Class v57 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v54 setShaderModifiers:v57];

    [v54 setLocksAmbientWithDiffuse:1];
    id v58 = v234;
    char v59 = [v234 jasperAvailable];
    id v220 = v54;
    sub_1001B5274(5, v54, v59);
    id v60 = [objc_allocWithZone((Class)SCNMaterial) init];
    uint64_t v61 = swift_initStackObject();
    long long v246 = xmmword_1003F8B80;
    *(_OWORD *)(v61 + 16) = xmmword_1003F8B80;
    id v62 = v238;
    *(void *)(v61 + 32) = v56;
    *(void *)(v61 + 40) = v62;
    *(void *)(v61 + 48) = v237;
    *(void *)(v61 + 56) = SCNShaderModifierEntryPointFragment;
    long long v63 = v235;
    *(void *)(v61 + 64) = v236;
    *(void *)(v61 + 72) = v63;
    long long v235 = v56;
    long long v64 = SCNShaderModifierEntryPointFragment;
    sub_1000E1BD8(v61);
    Class v65 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v60 setShaderModifiers:v65];

    [v60 setLocksAmbientWithDiffuse:1];
    swift_beginAccess();
    id v66 = v60;
    char v67 = swift_isUniquelyReferenced_nonNull_native();
    long long v258 = (double *)off_1004CFF48;
    off_1004CFF48 = (_UNKNOWN *)0x8000000000000000;
    id v238 = v66;
    sub_1000D632C((uint64_t)v66, 2, v67);
    off_1004CFF48 = v258;
    swift_bridgeObjectRelease();
    swift_endAccess();
    id v68 = [objc_allocWithZone((Class)SCNMaterial) init];
    [v68 setDoubleSided:1];
    [v68 setWritesToDepthBuffer:0];
    swift_beginAccess();
    id v69 = v68;
    char v70 = swift_isUniquelyReferenced_nonNull_native();
    long long v258 = (double *)off_1004CFF48;
    off_1004CFF48 = (_UNKNOWN *)0x8000000000000000;
    id v237 = v69;
    sub_1000D632C((uint64_t)v69, 3, v70);
    off_1004CFF48 = v258;
    swift_bridgeObjectRelease();
    swift_endAccess();
    if (![v58 jasperAvailable])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_25:
      id v188 = [objc_allocWithZone((Class)SCNScene) init];
      *(void *)&long long v250 = v188;
      int64_t v189 = v241;
      id v190 = [self rendererWithDevice:[v241 device] options:0];
      swift_unknownObjectRelease();
      [v190 setScene:v188];
      [v190 setAutoenablesDefaultLighting:[v189 autoenablesDefaultLighting]];
      sub_10001C99C(0, (unint64_t *)&qword_1004C7F10);
      uint64_t v191 = v231;
      static DispatchQoS.unspecified.getter();
      v251[0] = _swiftEmptyArrayStorage;
      sub_1001B5460((unint64_t *)&qword_1004C6B50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
      sub_100012894(&qword_1004CF220);
      sub_10002179C((unint64_t *)&qword_1004C6B60, &qword_1004CF220);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      (*(void (**)(char *, void, uint64_t))(v228 + 104))(v227, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v229);
      uint64_t v192 = (char *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
      uint64_t v193 = (char **)swift_allocObject();
      unint64_t v194 = v230;
      v193[2] = (char *)v189;
      v193[3] = v194;
      char v195 = (void *)v250;
      v193[4] = (char *)v250;
      v193[5] = (char *)v190;
      v193[6] = v192;
      uint64_t v253 = sub_1001B5438;
      uint64_t v254 = v193;
      v251[0] = _NSConcreteStackBlock;
      v251[1] = 1107296256;
      v251[2] = sub_100049AB4;
      uint64_t v252 = &unk_100491EB0;
      uint64_t v196 = _Block_copy(v251);
      id v197 = v189;
      *(void *)&long long v250 = v195;
      id v198 = v190;
      char v199 = v192;
      static DispatchQoS.unspecified.getter();
      long long v258 = _swiftEmptyArrayStorage;
      sub_1001B5460((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100012894((uint64_t *)&unk_1004C68E0);
      sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
      uint64_t v200 = v222;
      uint64_t v201 = v224;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v196);

      (*(void (**)(char *, uint64_t))(v223 + 8))(v200, v201);
      (*(void (**)(char *, uint64_t))(v232 + 8))(v191, v233);
      swift_release();
      return;
    }
    id v219 = v64;
    uint64_t v206 = sub_1001B50FC();
    id v234 = v71;
    uint64_t v72 = sub_1001B50FC();
    uint64_t v211 = v73;
    uint64_t v212 = v72;
    uint64_t v74 = sub_1001B50FC();
    uint64_t v204 = v75;
    uint64_t v205 = v74;
    uint64_t v76 = sub_1001B50FC();
    uint64_t v207 = v77;
    uint64_t v208 = v76;
    uint64_t v78 = sub_1001B50FC();
    uint64_t v209 = v79;
    uint64_t v210 = v78;
    uint64_t v80 = sub_1001B50FC();
    uint64_t v213 = v81;
    uint64_t v82 = sub_1001B50FC();
    uint64_t v84 = v83;
    uint64_t v85 = sub_1001B50FC();
    uint64_t v202 = v86;
    uint64_t v203 = v85;
    uint64_t v87 = sub_1001B50FC();
    uint64_t v214 = v88;
    uint64_t v215 = v87;
    uint64_t v89 = sub_1001B50FC();
    uint64_t v216 = v90;
    uint64_t v217 = v89;
    id v236 = (id)sub_1001B50FC();
    char v218 = v91;
    uint64_t v92 = self;
    id v93 = [v92 standardUserDefaults];
    unsigned int v94 = [v93 isLineOcclusionEnabled];

    if (v94)
    {
      uint64_t v95 = swift_allocObject();
      *(_OWORD *)(v95 + 16) = v246;
      id v96 = v235;
      id v97 = v244;
      *(void *)(v95 + 32) = v235;
      *(void *)(v95 + 40) = v97;
      id v98 = v219;
      *(void *)(v95 + 48) = v245;
      *(void *)(v95 + 56) = v98;
      *(void *)(v95 + 64) = v82;
      *(void *)(v95 + 72) = v84;
      swift_bridgeObjectRetain();
      id v99 = v96;
      id v100 = v98;
      id v101 = v96;
      uint64_t v102 = v95;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v103 = swift_initStackObject();
      *(_OWORD *)(v103 + 16) = v250;
      id v101 = v235;
      id v104 = v244;
      *(void *)(v103 + 32) = v235;
      *(void *)(v103 + 40) = v104;
      *(void *)(v103 + 48) = v245;
      swift_bridgeObjectRetain();
      id v105 = v101;
      uint64_t v102 = v103;
    }
    sub_1000E1BD8(v102);
    Class v106 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v107 = v239;
    [v239 setShaderModifiers:v106];

    sub_1001B5274(1, v107, 1);
    id v108 = [v92 standardUserDefaults];
    LODWORD(v106) = [v108 isPointOcclusionEnabled];

    id v109 = v243;
    if (v106)
    {
      uint64_t v110 = swift_allocObject();
      *(_OWORD *)(v110 + 16) = v246;
      id v111 = v242;
      *(void *)(v110 + 32) = v101;
      *(void *)(v110 + 40) = v111;
      *(void *)(v110 + 48) = v109;
      id v112 = v219;
      *(void *)(v110 + 56) = v219;
      *(void *)(v110 + 64) = v80;
      *(void *)(v110 + 72) = v213;
      int v113 = v101;
      id v114 = v112;
      sub_1000E1BD8(v110);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v115 = swift_initStackObject();
      *(_OWORD *)(v115 + 16) = v250;
      id v116 = v242;
      *(void *)(v115 + 32) = v101;
      *(void *)(v115 + 40) = v116;
      *(void *)(v115 + 48) = v109;
      uint64_t v117 = v101;
      sub_1000E1BD8(v115);
      id v112 = v219;
    }
    Class v118 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v119 = v240;
    [v240 setShaderModifiers:v118];

    sub_1001B5274(0, v119, 1);
    id v120 = [objc_allocWithZone((Class)SCNMaterial) init];
    uint64_t v121 = swift_initStackObject();
    *(_OWORD *)(v121 + 16) = v250;
    id v122 = v244;
    *(void *)(v121 + 32) = v101;
    *(void *)(v121 + 40) = v122;
    *(void *)(v121 + 48) = v245;
    uint64_t v245 = v101;
    sub_1000E1BD8(v121);
    Class v123 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v120 setShaderModifiers:v123];

    id v244 = v120;
    sub_1001B5274(6, v120, 1);
    id v124 = [objc_allocWithZone((Class)SCNMaterial) init];
    uint64_t v125 = swift_initStackObject();
    *(_OWORD *)(v125 + 16) = v250;
    uint64_t v126 = v215;
    *(void *)(v125 + 32) = v112;
    *(void *)(v125 + 40) = v126;
    *(void *)(v125 + 48) = v214;
    id v127 = v112;
    sub_1000E1BD8(v125);
    Class v128 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v124 setShaderModifiers:v128];

    id v243 = v124;
    sub_1001B5274(7, v124, 1);
    id v129 = [objc_allocWithZone((Class)SCNMaterial) init];
    uint64_t v130 = swift_initStackObject();
    *(_OWORD *)(v130 + 16) = v246;
    double v131 = v245;
    uint64_t v132 = v217;
    NSString v133 = v218;
    *(void *)(v130 + 32) = v245;
    *(void *)(v130 + 40) = v132;
    *(void *)(v130 + 48) = v216;
    *(void *)(v130 + 56) = v127;
    *(void *)(v130 + 64) = v236;
    *(void *)(v130 + 72) = v133;
    long long v235 = v131;
    uint64_t v245 = (char **)v127;
    swift_bridgeObjectRetain();
    sub_1000E1BD8(v130);
    Class v134 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v135 = &selRef_labelNodeWithText_;
    [v129 setShaderModifiers:v134];

    id v136 = [v129 diffuse];
    [v136 setContents:sub_1001BF48C(v241)];

    swift_unknownObjectRelease();
    id v137 = [v129 emission];
    id v219 = self;
    id v138 = [v219 clearColor];
    [v137 setContents:v138];

    id v242 = v129;
    sub_1001B5274(8, v129, 1);
    id v139 = [objc_allocWithZone((Class)SCNMaterial) init];
    uint64_t v140 = swift_initStackObject();
    *(_OWORD *)(v140 + 16) = v250;
    uint64_t v141 = v245;
    id v142 = v236;
    *(void *)(v140 + 32) = v245;
    *(void *)(v140 + 40) = v142;
    *(void *)(v140 + 48) = v133;
    char v143 = v141;
    sub_1000E1BD8(v140);
    Class v144 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v139 setShaderModifiers:v144];

    if (qword_1004C2E40 != -1) {
      swift_once();
    }
    uint64_t v145 = (void *)qword_1004D0740;
    uint64_t v146 = swift_allocObject();
    *(void *)(v146 + 16) = 0;
    *(void *)(v146 + 24) = 0xE000000000000000;
    uint64_t v147 = (char **)swift_allocObject();
    long long v147[2] = (char *)sub_1001B54E0;
    v147[3] = (char *)v146;
    uint64_t v253 = sub_10003FE6C;
    uint64_t v254 = v147;
    v251[0] = _NSConcreteStackBlock;
    v251[1] = 1107296256;
    v251[2] = sub_1001FD168;
    uint64_t v252 = &unk_100491F28;
    uint64_t v148 = _Block_copy(v251);
    uint64_t v149 = v254;
    swift_retain();
    swift_release();
    id v150 = [v145 imageWithActions:v148];
    _Block_release(v148);
    LOBYTE(v148) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (v148)
    {
      __break(1u);
    }
    else
    {
      id v151 = [v150 CGImage];

      uint64_t v147 = &selRef_replaySensorDidFinishReplayingData;
      if (v151)
      {
        id v152 = [v139 diffuse];
        [v152 setContents:v151];

        id v153 = [v139 diffuse];
        LODWORD(v251[0]) = 1065353216;
        *(void *)((char *)&v251[1] + 4) = 0;
        *(void *)((char *)v251 + 4) = 0;
        HIDWORD(v251[2]) = 1056964608;
        uint64_t v253 = 0;
        uint64_t v254 = 0;
        uint64_t v252 = 0;
        int v255 = 0;
        uint64_t v256 = 1056964608;
        int v257 = 1065353216;
        [v153 setContentsTransform:v251];
      }
      uint64_t v149 = &selRef_replaySensorDidFinishReplayingData;
      id v154 = [v139 emission];
      id v155 = [v219 clearColor];
      [v154 setContents:v155];

      *(void *)&long long v250 = v139;
      sub_1001B5274(9, v139, 1);
      uint64_t v135 = (char **)[objc_allocWithZone((Class)SCNMaterial) init];
      uint64_t v156 = swift_initStackObject();
      *(_OWORD *)(v156 + 16) = v246;
      id v158 = v234;
      uint64_t v157 = v235;
      uint64_t v146 = v206;
      *(void *)(v156 + 32) = v235;
      *(void *)(v156 + 40) = v146;
      *(void *)(v156 + 48) = v158;
      *(void *)(v156 + 56) = v143;
      uint64_t v159 = v202;
      *(void *)(v156 + 64) = v203;
      *(void *)(v156 + 72) = v159;
      NSString v133 = v157;
      swift_bridgeObjectRetain();
      char v143 = v143;
      sub_1000E1BD8(v156);
      Class v160 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v135 setShaderModifiers:v160];

      id v139 = [v135 diffuse];
      if (qword_1004C2F68 == -1) {
        goto LABEL_22;
      }
    }
    swift_once();
LABEL_22:
    [v139 v147[51] qword_1004F8758];

    id v161 = [v135 v149[197]];
    if (qword_1004C2FA0 != -1) {
      swift_once();
    }
    [v161 v147[51] qword_1004F8790];

    sub_1001B5274(10, v135, 1);
    uint64_t v245 = v135;
    id v162 = [objc_allocWithZone((Class)SCNMaterial) init];
    uint64_t v163 = swift_allocObject();
    *(_OWORD *)(v163 + 16) = v246;
    *(void *)(v163 + 32) = v133;
    *(void *)(v163 + 40) = v146;
    *(void *)(v163 + 48) = v234;
    *(void *)(v163 + 56) = v143;
    uint64_t v164 = v204;
    *(void *)(v163 + 64) = v205;
    *(void *)(v163 + 72) = v164;
    char v165 = v133;
    uint64_t v166 = v143;
    sub_1000E1BD8(v163);
    Class v167 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v162 setShaderModifiers:v167];

    id v168 = [v162 diffuse];
    [v168 v147[51] qword_1004F8758];

    id v236 = v162;
    id v169 = [v162 emission];
    [v169 v147[51] qword_1004F8790];

    sub_1001B5274(11, v162, 1);
    id v170 = [objc_allocWithZone((Class)SCNMaterial) init];
    uint64_t v171 = swift_allocObject();
    *(_OWORD *)(v171 + 16) = v246;
    uint64_t v172 = v209;
    uint64_t v173 = v210;
    *(void *)(v171 + 32) = v165;
    *(void *)(v171 + 40) = v173;
    *(void *)(v171 + 48) = v172;
    *(void *)(v171 + 56) = v166;
    uint64_t v174 = v207;
    *(void *)(v171 + 64) = v208;
    *(void *)(v171 + 72) = v174;
    uint64_t v175 = v165;
    swift_bridgeObjectRetain();
    uint64_t v176 = v166;
    sub_1000E1BD8(v171);
    Class v177 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v170 setShaderModifiers:v177];

    id v178 = [v170 diffuse];
    [v178 setContents:qword_1004F8758];

    id v179 = [v170 emission];
    [v179 setContents:qword_1004F8790];

    sub_1001B5274(12, v170, 1);
    id v180 = [objc_allocWithZone((Class)SCNMaterial) init];
    uint64_t v181 = swift_allocObject();
    *(_OWORD *)(v181 + 16) = v246;
    *(void *)(v181 + 32) = v175;
    *(void *)(v181 + 40) = v173;
    *(void *)(v181 + 48) = v172;
    *(void *)(v181 + 56) = v176;
    uint64_t v182 = v211;
    *(void *)(v181 + 64) = v212;
    *(void *)(v181 + 72) = v182;
    int64_t v183 = v175;
    int64_t v184 = v176;
    sub_1000E1BD8(v181);
    Class v185 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v180 setShaderModifiers:v185];

    id v186 = [v180 diffuse];
    [v186 setContents:qword_1004F8758];

    id v187 = [v180 emission];
    [v187 setContents:qword_1004F8790];

    sub_1001B5274(13, v180, 1);
    goto LABEL_25;
  }
  __break(1u);
}

id sub_1001B3368(void *a1, uint64_t a2, void (*a3)(char *, uint64_t), void *a4, void *a5)
{
  ariadne_trace(_:_:_:_:_:)();
  id v10 = [objc_allocWithZone((Class)MTLTextureDescriptor) init];
  [v10 setPixelFormat:55];
  [v10 setWidth:1];
  [v10 setHeight:1];
  id result = [a1 device];
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v12 = [result newTextureWithDescriptor:v10];
  id result = (id)swift_unknownObjectRelease();
  if (!v12)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  if (qword_1004C2CE8 != -1) {
    swift_once();
  }
  uint64_t v23 = a4;
  swift_beginAccess();
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_1001B3F0C(v13);
  swift_bridgeObjectRelease();
  v25[0] = _swiftEmptyArrayStorage;
  uint64_t v14 = swift_retain();
  sub_1001B4F60(v14, 0, v25, 1.0);
  swift_release();
  unint64_t v15 = v25[0];
  v25[0] = _swiftEmptyArrayStorage;
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_1001B4F60(v16, 0, v25, 0.5);
  swift_release_n();
  unint64_t v17 = v25[0];
  if (qword_1004C2CF0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v24 = _swiftEmptyArrayStorage;
  swift_unknownObjectRetain();
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_1001B4F60(v18, (uint64_t)v12, &v24, 1.0);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  unint64_t v19 = (unint64_t)v24;
  uint64_t v24 = _swiftEmptyArrayStorage;
  swift_unknownObjectRetain();
  uint64_t v20 = swift_bridgeObjectRetain();
  sub_1001B4F60(v20, (uint64_t)v12, &v24, 0.5);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_100122A5C(v19);
  sub_100122A5C(v17);
  sub_100122A5C(v15);
  unint64_t v21 = sub_1001B54F8((unint64_t)v24);
  swift_bridgeObjectRelease();
  ariadne_trace(_:_:_:_:_:)();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 0;
  sub_1001B36E0(v22, v21, a3, v23, a5, a2);

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return (id)ariadne_trace(_:_:_:_:_:)();
}

uint64_t sub_1001B36E0(uint64_t a1, unint64_t a2, void (*a3)(char *, uint64_t), void *a4, id a5, uint64_t a6)
{
  uint64_t v47 = a6;
  id v48 = a4;
  double v49 = a3;
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v45 - v14;
  uint64_t v16 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v54 = *(void *)(v16 - 8);
  uint64_t v55 = v16;
  __chkstk_darwin(v16);
  Class v51 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v52 = *(void *)(v18 - 8);
  uint64_t v53 = v18;
  __chkstk_darwin(v18);
  uint64_t v50 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (unint64_t *)(a1 + 16);
  swift_beginAccess();
  uint64_t v21 = *(void *)(a1 + 16);
  if (!(a2 >> 62))
  {
    uint64_t v22 = *(void **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v21 < (uint64_t)v22) {
      goto LABEL_3;
    }
LABEL_17:
    ariadne_trace(_:_:_:_:_:)();
    static DispatchTime.now()();
    + infix(_:_:)();
    double v49 = *(void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v46 = v9;
    v49(v13, v9);
    id v62 = sub_1001B4A40;
    long long v63 = 0;
    Swift::String aBlock = _NSConcreteStackBlock;
    uint64_t v59 = 1107296256;
    id v60 = sub_100049AB4;
    uint64_t v61 = &unk_100491F78;
    id v40 = _Block_copy(&aBlock);
    uint64_t v41 = v50;
    static DispatchQoS.unspecified.getter();
    Class v57 = _swiftEmptyArrayStorage;
    sub_1001B5460((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100012894((uint64_t *)&unk_1004C68E0);
    sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
    id v42 = v51;
    uint64_t v43 = v55;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v40);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v42, v43);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v41, v53);
    v49(v15, v46);
    return swift_release();
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = (void *)_CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v21 >= (uint64_t)v22) {
    goto LABEL_17;
  }
LABEL_3:
  swift_beginAccess();
  unint64_t v23 = *v20;
  if ((a2 & 0xC000000000000001) == 0)
  {
    uint64_t v24 = v48;
    if ((v23 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v23 < *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v22 = a5;
      a5 = *(id *)(a2 + 8 * v23 + 32);
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v22 = a5;
  a5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  uint64_t v24 = v48;
LABEL_7:
  id v25 = [a5 childNodes];
  sub_10001C99C(0, &qword_1004C4028);
  unint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v26 >> 62))
  {
    uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_9;
  }
LABEL_22:
  swift_bridgeObjectRetain();
  uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_9:
  swift_bridgeObjectRelease();
  if (v27 < 1) {
    goto LABEL_14;
  }
  double v28 = v49;
  id v29 = [v49 rootNode];
  [v29 addChildNode:a5];

  if ([v24 prepareObject:v28 shouldAbortBlock:0]) {
    goto LABEL_13;
  }
  if (qword_1004C2B58 != -1) {
    goto LABEL_24;
  }
  while (1)
  {
    v30._object = (void *)0x800000010042B080;
    v30._uint64_t countAndFlagsBits = 0xD000000000000031;
    Log.error(_:isPrivate:)(v30, 0);
LABEL_13:
    [a5 removeFromParentNode];
LABEL_14:
    swift_beginAccess();
    if (!__OFADD__(*v20, 1)) {
      break;
    }
    __break(1u);
LABEL_24:
    swift_once();
  }
  *(void *)(a1 + 16) = *v20 + 1;
  double v31 = (void *)swift_allocObject();
  v31[2] = a1;
  v31[3] = a2;
  uint64_t v32 = v49;
  void v31[4] = v49;
  v31[5] = v24;
  uint64_t v33 = v47;
  v31[6] = v22;
  v31[7] = v33;
  id v62 = sub_1001B5874;
  long long v63 = v31;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v59 = 1107296256;
  id v60 = sub_100049AB4;
  uint64_t v61 = &unk_100491FC8;
  uint64_t v34 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  Class v35 = v32;
  id v36 = v24;
  v22;
  id v37 = v50;
  static DispatchQoS.unspecified.getter();
  long long v56 = _swiftEmptyArrayStorage;
  sub_1001B5460((unint64_t *)&qword_1004C5CA0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_10002179C((unint64_t *)&qword_1004C5CB0, (uint64_t *)&unk_1004C68E0);
  id v38 = v51;
  uint64_t v39 = v55;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v34);

  (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v53);
  return swift_release();
}

uint64_t type metadata accessor for ShaderCache()
{
  return self;
}

uint64_t sub_1001B3F0C(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v10 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    sub_1001B4064((unint64_t *)((char *)&v10 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    sub_1001B4064((unint64_t *)v7, v4, v2);
    uint64_t v2 = v8;
    swift_slowDealloc();
  }
  return v2;
}

void sub_1001B4064(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v25 = (unint64_t)(v6 + 63) >> 6;
  if (v8) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v12 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v12 < v25)
    {
      unint64_t v13 = *(void *)(v5 + 8 * v12);
      ++v4;
      if (v13) {
        goto LABEL_21;
      }
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v25) {
        goto LABEL_28;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (v13) {
        goto LABEL_21;
      }
      int64_t v4 = v12 + 2;
      if (v12 + 2 >= v25) {
        goto LABEL_28;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (v13)
      {
LABEL_21:
        unint64_t v8 = (v13 - 1) & v13;
        for (unint64_t i = __clz(__rbit64(v13)) + (v4 << 6); ; unint64_t i = v10 | (v4 << 6))
        {
          uint64_t v15 = *(unsigned __int8 *)(*(void *)(a3 + 48) + i);
          uint64_t v16 = qword_1004C2CF0;
          id v17 = *(id *)(*(void *)(a3 + 56) + 8 * i);
          if (v16 != -1) {
            swift_once();
          }
          swift_beginAccess();
          uint64_t v18 = off_1004CFF50;
          if (*((void *)off_1004CFF50 + 2) && (uint64_t v19 = sub_1000E21E0(v15), (v20 & 1) != 0))
          {
            id v21 = *(id *)(v18[7] + 8 * v19);
            swift_endAccess();

            if (!v8) {
              goto LABEL_8;
            }
          }
          else
          {
            swift_endAccess();

            *(unint64_t *)((char *)a1 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
            if (__OFADD__(v24++, 1)) {
              goto LABEL_31;
            }
            if (!v8) {
              goto LABEL_8;
            }
          }
LABEL_7:
          unint64_t v10 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
        }
      }
      int64_t v14 = v12 + 3;
      if (v14 < v25)
      {
        unint64_t v13 = *(void *)(v5 + 8 * v14);
        if (v13)
        {
          int64_t v4 = v14;
          goto LABEL_21;
        }
        while (1)
        {
          int64_t v4 = v14 + 1;
          if (__OFADD__(v14, 1)) {
            goto LABEL_30;
          }
          if (v4 >= v25) {
            break;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          ++v14;
          if (v13) {
            goto LABEL_21;
          }
        }
      }
    }
LABEL_28:
    sub_1001B47BC(a1, a2, v24, a3);
    return;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
}

uint64_t sub_1001B42B0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_100012894(&qword_1004C9EF8);
  uint64_t result = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v9 = result;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= a2) {
        return v9;
      }
      unint64_t v16 = a1[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= a2) {
          return v9;
        }
        unint64_t v16 = a1[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= a2) {
            return v9;
          }
          unint64_t v16 = a1[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= a2) {
              return v9;
            }
            unint64_t v16 = a1[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= a2) {
                  return v9;
                }
                unint64_t v16 = a1[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    memcpy(v28, (const void *)(*(void *)(v4 + 56) + 304 * v14), 0x130uLL);
    uint64_t result = static Hasher._hash(seed:_:)();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    uint64_t result = (uint64_t)memcpy((void *)(*(void *)(v9 + 56) + 304 * v22), v28, 0x130uLL);
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t result = sub_1000DBFA4((uint64_t)v28);
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1001B4544(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_100012894(&qword_1004C9F18);
  uint64_t result = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v9 = result;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= a2) {
        return v9;
      }
      unint64_t v16 = a1[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= a2) {
          return v9;
        }
        unint64_t v16 = a1[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= a2) {
            return v9;
          }
          unint64_t v16 = a1[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= a2) {
              return v9;
            }
            unint64_t v16 = a1[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= a2) {
                  return v9;
                }
                unint64_t v16 = a1[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = 8 * v14;
    uint64_t v19 = *(void *)(*(void *)(v4 + 48) + v18);
    uint64_t v20 = *(void *)(*(void *)(v4 + 56) + v18);
    uint64_t result = static Hasher._hash(seed:_:)();
    uint64_t v21 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t v29 = 8 * v24;
    *(void *)(*(void *)(v9 + 48) + v29) = v19;
    *(void *)(*(void *)(v9 + 56) + v29) = v20;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t result = swift_bridgeObjectRetain();
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1001B47BC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_100012894(&qword_1004C9EA8);
  uint64_t result = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v9 = result;
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v30) {
        return v9;
      }
      unint64_t v16 = v29[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v30) {
          return v9;
        }
        unint64_t v16 = v29[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v30) {
            return v9;
          }
          unint64_t v16 = v29[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v30) {
              return v9;
            }
            unint64_t v16 = v29[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v30) {
                  return v9;
                }
                unint64_t v16 = v29[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v14);
    uint64_t v19 = *(void **)(*(void *)(v4 + 56) + 8 * v14);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v18);
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(unsigned char *)(*(void *)(v9 + 48) + v23) = v18;
    *(void *)(*(void *)(v9 + 56) + 8 * v23) = v19;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t result = v19;
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_1001B4A40()
{
  byte_1004F8518 = 1;
}

id sub_1001B4A50(uint64_t a1)
{
  if (qword_1004C2CE8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = off_1004CFF48;
  if (*((void *)off_1004CFF48 + 2) && (uint64_t v3 = sub_1000E21E0(a1), (v4 & 1) != 0))
  {
    uint64_t v5 = *(void **)(v2[7] + 8 * v3);
    swift_endAccess();
    id v6 = v5;
    static ComputedCameraProperties.shared.getter();
    Class isa = Float._bridgeToObjectiveC()().super.super.isa;
    NSString v8 = String._bridgeToObjectiveC()();
    [v6 setValue:isa forKeyPath:v8];
  }
  else
  {
    swift_endAccess();
    return [objc_allocWithZone((Class)SCNMaterial) init];
  }
  return v6;
}

id sub_1001B4B8C(uint64_t a1)
{
  id v2 = [self planeWithWidth:0.01 height:0.01];
  id v3 = sub_1001B4A50(a1);
  [v3 copy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10001C99C(0, (unint64_t *)&qword_1004D2470);
  if (swift_dynamicCast()) {
    id v4 = v7;
  }
  else {
    id v4 = [objc_allocWithZone((Class)SCNMaterial) init];
  }
  [v2 setFirstMaterial:v4];

  id v5 = [self nodeWithGeometry:v2];
  return v5;
}

void sub_1001B4CD0(unsigned __int8 *a1, uint64_t a2, void *a3, double a4)
{
  uint64_t v7 = *a1;
  if (qword_1004C2CF0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*((void *)off_1004CFF50 + 2))
  {
    sub_1000E21E0(v7);
    if (v8)
    {
      swift_endAccess();
      if (a2) {
        goto LABEL_8;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_endAccess();
LABEL_8:
  id v9 = sub_1001B4B8C(v7);
  [v9 setOpacity:a4];
  if (a2)
  {
    swift_unknownObjectRetain();
    id v10 = [v9 geometry];
    if (v10)
    {
      uint64_t v11 = v10;
      id v12 = [v10 firstMaterial];

      if (v12)
      {
        v17[3] = swift_getObjectType();
        v17[0] = a2;
        swift_unknownObjectRetain();
        uint64_t v13 = _bridgeAnythingToObjectiveC<A>(_:)();
        id v14 = [self materialPropertyWithContents:v13];
        swift_unknownObjectRelease();
        sub_100013218((uint64_t)v17);
        NSString v15 = String._bridgeToObjectiveC()();
        [v12 setValue:v14 forKey:v15];
      }
    }
    swift_unknownObjectRelease();
  }
  id v16 = v9;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
}

void sub_1001B4F60(uint64_t a1, uint64_t a2, void *a3, double a4)
{
  uint64_t v9 = a1 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a1 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (v12)
  {
    unint64_t v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v16 = v15 | (v14 << 6);
LABEL_5:
    unsigned __int8 v21 = *(unsigned char *)(*(void *)(a1 + 48) + v16);
    sub_1001B4CD0(&v21, a2, a3, a4);
    if (v4) {
      goto LABEL_24;
    }
  }
  if (__OFADD__(v14++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v14 >= v13) {
    goto LABEL_24;
  }
  unint64_t v18 = *(void *)(v9 + 8 * v14);
  if (v18)
  {
LABEL_17:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
    goto LABEL_5;
  }
  int64_t v19 = v14 + 1;
  if (v14 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v18 = *(void *)(v9 + 8 * v19);
  if (v18) {
    goto LABEL_16;
  }
  int64_t v19 = v14 + 2;
  if (v14 + 2 >= v13) {
    goto LABEL_24;
  }
  unint64_t v18 = *(void *)(v9 + 8 * v19);
  if (v18) {
    goto LABEL_16;
  }
  int64_t v19 = v14 + 3;
  if (v14 + 3 >= v13) {
    goto LABEL_24;
  }
  unint64_t v18 = *(void *)(v9 + 8 * v19);
  if (v18)
  {
LABEL_16:
    int64_t v14 = v19;
    goto LABEL_17;
  }
  int64_t v20 = v14 + 4;
  if (v14 + 4 >= v13)
  {
LABEL_24:
    swift_release();
    return;
  }
  unint64_t v18 = *(void *)(v9 + 8 * v20);
  v14 += 4;
  if (v18) {
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v13) {
      goto LABEL_24;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v14);
    ++v20;
    if (v18) {
      goto LABEL_17;
    }
  }
LABEL_26:
  __break(1u);
}

unint64_t sub_1001B50EC(unint64_t result)
{
  if (result >= 0xE) {
    return 14;
  }
  return result;
}

uint64_t sub_1001B50FC()
{
  uint64_t v0 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v0 - 8);
  id v1 = [self mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 pathForResource:v2 ofType:v3];

  if (v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    static String.Encoding.utf8.getter();
    uint64_t v5 = String.init(contentsOfFile:encoding:)();
    swift_bridgeObjectRelease();
    return v5;
  }
  else
  {
    __break(1u);
    swift_bridgeObjectRelease();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001B5274(uint64_t a1, void *a2, char a3)
{
  if (qword_1004C2CE8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v6 = a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = off_1004CFF48;
  off_1004CFF48 = (_UNKNOWN *)0x8000000000000000;
  sub_1000D632C((uint64_t)v6, a1, isUniquelyReferenced_nonNull_native);
  off_1004CFF48 = v11;
  swift_bridgeObjectRelease();
  uint64_t result = swift_endAccess();
  if (a3)
  {
    if (qword_1004C2CF0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v9 = v6;
    char v10 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v12 = off_1004CFF50;
    off_1004CFF50 = (_UNKNOWN *)0x8000000000000000;
    sub_1000D632C((uint64_t)v9, a1, v10);
    off_1004CFF50 = v12;
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1001B53E8()
{
  return _swift_deallocObject(v0, 56, 7);
}

id sub_1001B5438()
{
  return sub_1001B3368(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void (**)(char *, uint64_t))(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1001B5448(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001B5458()
{
  return swift_release();
}

uint64_t sub_1001B5460(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001B54A8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001B54E0()
{
}

uint64_t sub_1001B54E8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B54F8(unint64_t a1)
{
  unint64_t v3 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  float v5 = roundf((float)v4 / 3.0);
  if ((~LODWORD(v5) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v5 <= -9.2234e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v5 < 9.2234e18)
  {
    unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
    id v1 = [objc_allocWithZone((Class)SCNNode) init];
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_7:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v6 = result;
    if (!result)
    {
LABEL_24:
      swift_bridgeObjectRelease();

      return v15;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v6) {
      goto LABEL_24;
    }
  }
  if (v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *(id *)(a1 + 8 * i + 32);
      }
      char v10 = v9;
      id v11 = [v1 childNodes];
      sub_10001C99C(0, &qword_1004C4028);
      unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v13 == (uint64_t)v5)
      {
        id v14 = [objc_allocWithZone((Class)SCNNode) init];

        id v1 = v14;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      [v1 addChildNode:v10];
    }
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B580C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001B581C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001B5874()
{
  return sub_1001B36E0(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t getEnumTagSinglePayload for ShaderCache.Material(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ShaderCache.Material(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001B59E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShaderCache.Material()
{
  return &type metadata for ShaderCache.Material;
}

uint64_t sub_1001B5A18()
{
  return sub_10002179C(&qword_1004D0000, &qword_1004D0008);
}

unint64_t sub_1001B5A58()
{
  unint64_t result = qword_1004D0010;
  if (!qword_1004D0010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004D0010);
  }
  return result;
}

uint64_t type metadata accessor for SnappingStateUtil()
{
  return self;
}

uint64_t sub_1001B5AE8(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  sub_100113308(a5, (uint64_t)v39);
  uint64_t v11 = v39[0];
  uint64_t v12 = v39[1];
  uint64_t v13 = v39[2];
  uint64_t v14 = v39[3];
  uint64_t v34 = v39[4];
  uint64_t v35 = v39[6];
  uint64_t v36 = v39[5];
  uint64_t v37 = v39[7];
  sub_100113308(a6, (uint64_t)v38);
  if (a4)
  {
    if (a2)
    {
LABEL_23:
      int v18 = 0;
      char v17 = 0;
      return v18 | v17 & 1u;
    }
    char v17 = 0;
    if (WorldPointType.isSnappable.getter()) {
      int v18 = 256;
    }
    else {
      int v18 = 0;
    }
  }
  else
  {
    if (a2) {
      goto LABEL_13;
    }
    uint64_t v15 = v38[0];
    uint64_t v16 = v38[2];
    uint64_t v28 = v38[1];
    uint64_t v29 = v38[4];
    uint64_t v30 = v38[3];
    uint64_t v31 = v38[6];
    uint64_t v32 = v38[5];
    uint64_t v33 = v38[7];
    if ((WorldPointType.isSnappable.getter() & 1) == 0)
    {
LABEL_13:
      char v17 = WorldPointType.isSnappable.getter();
    }
    else
    {
      if ([self jasperAvailable])
      {
        if (unint64_t)(a3 - 3) < 6 && ((0x2Du >> (a3 - 3)))
        {
          char v17 = 0;
        }
        else
        {
          char v17 = 1;
          if (!a3) {
            goto LABEL_16;
          }
        }
      }
      else
      {
        char v17 = a3 != 3;
        if (!a3)
        {
LABEL_16:
          char v17 = 0;
          int v18 = 256;
          return v18 | v17 & 1u;
        }
      }
      sub_100113308(a5, (uint64_t)v42);
      if (v42[64])
      {
        sub_100113308(a6, (uint64_t)v40);
        if (v41) {
          goto LABEL_23;
        }
      }
      else
      {
        sub_100113308(a6, (uint64_t)v40);
        if ((v41 & 1) == 0)
        {
          v19.i64[0] = v15;
          v19.i64[1] = v28;
          v20.i64[0] = v16;
          v20.i64[1] = v30;
          v21.i64[0] = v29;
          v21.i64[1] = v32;
          v22.i64[0] = v31;
          v22.i64[1] = v33;
          v23.i64[0] = v11;
          v23.i64[1] = v12;
          v24.i64[0] = v13;
          v24.i64[1] = v14;
          v25.i64[0] = v34;
          v26.i64[0] = v35;
          v25.i64[1] = v36;
          v26.i64[1] = v37;
          if ((vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vceqq_f32(v24, v20), (int8x16_t)vceqq_f32(v23, v19)), vandq_s8((int8x16_t)vceqq_f32(v25, v21), (int8x16_t)vceqq_f32(v26, v22)))) & 0x80000000) != 0)goto LABEL_23; {
        }
          }
      }
    }
    int v18 = 0;
  }
  return v18 | v17 & 1u;
}

void destroy for SnapPointsState(uint64_t a1)
{
  int v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for SnapPointsState(void *a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  unsigned int v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  id v10 = v6;
  return a1;
}

uint64_t assignWithCopy for SnapPointsState(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  id v7 = *(void **)(a1 + 8);
  id v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  id v10 = *(void **)(a1 + 16);
  uint64_t v11 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v11;
  id v12 = v11;

  uint64_t v13 = *(void **)(a1 + 24);
  uint64_t v14 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v14;
  id v15 = v14;

  return a1;
}

uint64_t assignWithTake for SnapPointsState(uint64_t a1, _OWORD *a2)
{
  unsigned int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

uint64_t getEnumTagSinglePayload for SnapPointsState(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SnapPointsState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SnapPointsState()
{
  return &type metadata for SnapPointsState;
}

ValueMetadata *type metadata accessor for SnapPoint()
{
  return &type metadata for SnapPoint;
}

id sub_1001B5F50()
{
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  id result = (id)*((void *)&xmmword_1004F8000 + 1);
  if (*((void *)&xmmword_1004F8000 + 1))
  {
    id v1 = (id)*((void *)&xmmword_1004F8000 + 1);
    qword_1004F8520 = Contexts.PrivateQueue.init(_:)();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1001B5FD0@<X0>(void *a1@<X8>)
{
  if (qword_1004C2CF8 != -1) {
    swift_once();
  }
  int v2 = (void *)qword_1004F8520;
  *a1 = qword_1004F8520;

  return v2;
}

uint64_t sub_1001B603C(void **a1, void **a2)
{
  return sub_1001B60E8(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_1001B6058(void **a1, void **a2)
{
  return sub_1001B6260(*a1, a1[1], *a2, a2[1]);
}

unint64_t sub_1001B606C(uint64_t a1)
{
  unint64_t result = sub_1001B6094();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001B6094()
{
  unint64_t result = qword_1004D00D8;
  if (!qword_1004D00D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004D00D8);
  }
  return result;
}

uint64_t sub_1001B60E8(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  if (a1)
  {
    if (!a5) {
      return 0;
    }
    type metadata accessor for ScreenPoint();
    id v16 = a5;
    id v17 = a1;
    char v18 = static NSObject.== infix(_:_:)();

    if ((v18 & 1) == 0) {
      return 0;
    }
  }
  else if (a5)
  {
    return 0;
  }
  if (a2)
  {
    if (!a6) {
      return 0;
    }
    type metadata accessor for WorldPoint();
    id v19 = a6;
    id v20 = a2;
    char v21 = static NSObject.== infix(_:_:)();

    if ((v21 & 1) == 0) {
      return 0;
    }
  }
  else if (a6)
  {
    return 0;
  }
  if (a3)
  {
    if (!a7) {
      return 0;
    }
    type metadata accessor for ScreenPoint();
    id v22 = a7;
    id v23 = a3;
    char v24 = static NSObject.== infix(_:_:)();

    if ((v24 & 1) == 0) {
      return 0;
    }
  }
  else if (a7)
  {
    return 0;
  }
  if (a4)
  {
    if (a8)
    {
      type metadata accessor for WorldPoint();
      id v25 = a8;
      id v26 = a4;
      char v27 = static NSObject.== infix(_:_:)();

      if (v27) {
        return 1;
      }
    }
  }
  else if (!a8)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1001B6260(void *a1, void *a2, void *a3, void *a4)
{
  if (a1)
  {
    if (!a3) {
      return 0;
    }
    id v7 = a1;
    type metadata accessor for ScreenPoint();
    id v8 = a3;
    id v9 = v7;
    LOBYTE(v7) = static NSObject.== infix(_:_:)();

    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  else if (a3)
  {
    return 0;
  }
  if (a2)
  {
    if (a4)
    {
      type metadata accessor for WorldPoint();
      id v10 = a4;
      id v11 = a2;
      char v12 = static NSObject.== infix(_:_:)();

      if (v12) {
        return 1;
      }
    }
  }
  else if (!a4)
  {
    return 1;
  }
  return 0;
}

ValueMetadata *type metadata accessor for LineDivisions()
{
  return &type metadata for LineDivisions;
}

ValueMetadata *type metadata accessor for LineDivisions.Numbers()
{
  return &type metadata for LineDivisions.Numbers;
}

unsigned char *storeEnumTagSinglePayload for LineDivisions.Numbers.Orientation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001B641CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LineDivisions.Numbers.Orientation()
{
  return &type metadata for LineDivisions.Numbers.Orientation;
}

unint64_t sub_1001B6458()
{
  unint64_t result = qword_1004D00E0;
  if (!qword_1004D00E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004D00E0);
  }
  return result;
}

void sub_1001B64AC(char a1)
{
  switch(a1)
  {
    case 1:
      vmulq_f32(*(float32x4_t *)SIMD3<>.up.unsafeMutableAddressor(), (float32x4_t)0);
      break;
    case 2:
      float v1 = *(float *)Float.piDiv2.unsafeMutableAddressor();
      SIMD3<>.up.unsafeMutableAddressor();
      float v2 = 0.5;
      goto LABEL_5;
    case 3:
      float v1 = *(float *)Float.piDiv2.unsafeMutableAddressor();
      SIMD3<>.up.unsafeMutableAddressor();
      float v2 = -0.5;
LABEL_5:
      __sincosf_stret(v1 * v2);
      break;
    default:
      SIMD3<>.up.unsafeMutableAddressor();
      break;
  }
}

void sub_1001B657C()
{
  if ([self jasperAvailable])
  {
    id v0 = [self standardUserDefaults];
    Defaults.divisionsEnabled.unsafeMutableAddressor();
    swift_bridgeObjectRetain();
    NSString v1 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned __int8 v2 = [v0 BOOLForKey:v1];
  }
  else
  {
    unsigned __int8 v2 = 0;
  }
  byte_1004F8530 = v2;
}

id sub_1001B6638()
{
  if (qword_1004C2E30 != -1) {
    swift_once();
  }
  swift_retain();
  PublishedValue.wrappedValue.getter();
  swift_release();
  id result = sub_1000B1320();
  byte_1004F8531 = result == (id)1;
  return result;
}

uint64_t sub_1001B66B8()
{
  if (qword_1004C2D08 != -1) {
    uint64_t result = swift_once();
  }
  float v0 = 0.0127;
  if (byte_1004F8531) {
    float v0 = 0.01;
  }
  dword_1004F8534 = LODWORD(v0);
  return result;
}

float sub_1001B672C()
{
  if (qword_1004C2D10 != -1) {
    swift_once();
  }
  float result = *(float *)&dword_1004F8534 * 0.25;
  *(float *)&dword_1004F8538 = *(float *)&dword_1004F8534 * 0.25;
  return result;
}

uint64_t sub_1001B6788(uint64_t a1)
{
  return sub_1001B6874(a1, (float *)&dword_1004F853C);
}

uint64_t sub_1001B6794()
{
  if (qword_1004C2D08 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v0 = 10;
  if (!byte_1004F8531) {
    uint64_t v0 = 1;
  }
  qword_1004F8540 = v0;
  return result;
}

uint64_t sub_1001B67F4()
{
  if (qword_1004C2D08 != -1) {
    uint64_t result = swift_once();
  }
  float v0 = 0.35;
  if (byte_1004F8531) {
    float v0 = 0.6;
  }
  dword_1004F8548 = LODWORD(v0);
  return result;
}

uint64_t sub_1001B6868(uint64_t a1)
{
  return sub_1001B6874(a1, (float *)&dword_1004F854C);
}

uint64_t sub_1001B6874(uint64_t a1, float *a2)
{
  if (qword_1004C2D08 != -1) {
    uint64_t result = swift_once();
  }
  float v3 = 0.3048;
  if (byte_1004F8531) {
    float v3 = 0.1;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_1001B68F0()
{
  if (qword_1004C2D08 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v0 = 12;
  if (byte_1004F8531) {
    uint64_t v0 = 5;
  }
  qword_1004F8550 = v0;
  return result;
}

uint64_t sub_1001B6954()
{
  if (qword_1004C2D08 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v0 = 24;
  if (byte_1004F8531) {
    uint64_t v0 = 10;
  }
  qword_1004F8558 = v0;
  return result;
}

id sub_1001B69B8()
{
  id result = [self systemFontOfSize:100.0 weight:UIFontWeightSemibold];
  qword_1004F8560 = (uint64_t)result;
  return result;
}

id sub_1001B6A08()
{
  id result = [self whiteColor];
  qword_1004F8568 = (uint64_t)result;
  return result;
}

uint64_t sub_1001B6A44()
{
  SCNVector3.init(_:_:_:)(0.0001, 0.0001, 0.0001);
  * infix(_:_:)();
  if (qword_1004C2D08 != -1) {
    swift_once();
  }
  uint64_t result = * infix(_:_:)();
  dword_1004F8570 = v1;
  *(_DWORD *)algn_1004F8574 = v2;
  dword_1004F8578 = v3;
  return result;
}

double sub_1001B6B08()
{
  double result = 200.0;
  xmmword_1004F8580 = xmmword_1004024D0;
  return result;
}

int64x2_t sub_1001B6B1C()
{
  int64x2_t result = vdupq_n_s64(0x409F400000000000uLL);
  xmmword_1004F8590 = (__int128)result;
  return result;
}

double sub_1001B6B34()
{
  double result = 400.0;
  xmmword_1004F85A0 = xmmword_1004024E0;
  return result;
}

void sub_1001B6B48()
{
  qword_1004F85B0 = 0x402E000000000000;
}

uint64_t sub_1001B6B58()
{
  if (qword_1004C2D08 != -1) {
    uint64_t result = swift_once();
  }
  float v0 = 0.1;
  if (byte_1004F8531) {
    float v0 = 0.5;
  }
  dword_1004F85B8 = LODWORD(v0);
  return result;
}

uint64_t sub_1001B6BC4(uint64_t a1)
{
  return sub_1001B6D48(0.0, a1, (float *)&dword_1004F85BC);
}

uint64_t sub_1001B6BD4(uint64_t a1)
{
  return sub_1001B6D48(0.0, a1, (float *)&dword_1004F85C0);
}

uint64_t sub_1001B6BE4()
{
  if (qword_1004C2D08 != -1) {
    uint64_t result = swift_once();
  }
  float v0 = 0.2;
  if (!byte_1004F8531) {
    float v0 = 0.25;
  }
  dword_1004F85C4 = LODWORD(v0);
  return result;
}

uint64_t sub_1001B6C50()
{
  if (qword_1004C2D08 != -1) {
    uint64_t result = swift_once();
  }
  float v0 = 0.07;
  if (byte_1004F8531) {
    float v0 = 0.2;
  }
  dword_1004F85C8 = LODWORD(v0);
  return result;
}

uint64_t sub_1001B6CC4()
{
  if (qword_1004C2D08 != -1) {
    uint64_t result = swift_once();
  }
  float v0 = 0.37;
  if (byte_1004F8531) {
    float v0 = 0.55;
  }
  dword_1004F85CC = LODWORD(v0);
  return result;
}

uint64_t sub_1001B6D38(uint64_t a1)
{
  return sub_1001B6D48(1.0, a1, (float *)&dword_1004F85D0);
}

uint64_t sub_1001B6D48(float a1, uint64_t a2, float *a3)
{
  if (qword_1004C2D08 != -1) {
    uint64_t result = swift_once();
  }
  *a3 = a1;
  return result;
}

uint64_t sub_1001B6DA8()
{
  if (qword_1004C2D08 != -1) {
    uint64_t result = swift_once();
  }
  float v0 = 0.3;
  if (byte_1004F8531) {
    float v0 = 0.55;
  }
  dword_1004F85D4 = LODWORD(v0);
  return result;
}

uint64_t sub_1001B6E1C()
{
  if (qword_1004C2D08 != -1) {
    uint64_t result = swift_once();
  }
  float v0 = 0.2;
  if (byte_1004F8531) {
    float v0 = 0.3;
  }
  dword_1004F85D8 = LODWORD(v0);
  return result;
}

uint64_t sub_1001B6E90()
{
  if (qword_1004C2D08 != -1) {
    uint64_t result = swift_once();
  }
  float v0 = 0.85;
  if (byte_1004F8531) {
    float v0 = 0.55;
  }
  dword_1004F85DC = LODWORD(v0);
  return result;
}

uint64_t sub_1001B6F04(uint64_t a1)
{
  return sub_1001B6F1C(a1, (float *)&dword_1004F85E0);
}

uint64_t sub_1001B6F10(uint64_t a1)
{
  return sub_1001B6F1C(a1, (float *)&dword_1004F85E4);
}

uint64_t sub_1001B6F1C(uint64_t a1, float *a2)
{
  if (qword_1004C2D08 != -1) {
    uint64_t result = swift_once();
  }
  float v3 = 0.85;
  if (byte_1004F8531) {
    float v3 = 0.95;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_1001B6F98()
{
  if (qword_1004C2D08 != -1) {
    uint64_t result = swift_once();
  }
  float v0 = 1.2;
  if (byte_1004F8531) {
    float v0 = 1.3;
  }
  dword_1004F85E8 = LODWORD(v0);
  return result;
}

float sub_1001B700C()
{
  if (qword_1004C2DE8 != -1) {
    swift_once();
  }
  float result = *(float *)&dword_1004F85E8 * 0.5;
  *(float *)&dword_1004F85EC = *(float *)&dword_1004F85E8 * 0.5;
  return result;
}

void *sub_1001B706C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Measurements(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Measurements(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for GuidesState()
{
  return &type metadata for GuidesState;
}

id sub_1001B7194()
{
  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  id result = (id)*((void *)&xmmword_1004F8000 + 1);
  if (*((void *)&xmmword_1004F8000 + 1))
  {
    id v1 = (id)*((void *)&xmmword_1004F8000 + 1);
    qword_1004F85F0 = Contexts.PrivateQueue.init(_:)();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1001B7214@<X0>(void *a1@<X8>)
{
  if (qword_1004C2DF8 != -1) {
    swift_once();
  }
  int v2 = (void *)qword_1004F85F0;
  *a1 = qword_1004F85F0;

  return v2;
}

uint64_t sub_1001B7280(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  if ((sub_1000858F0(*a1, *a2) & 1) == 0 || (sub_1000858F0(v2, v4) & 1) == 0) {
    return 0;
  }

  return sub_1000858F0(v3, v5);
}

unint64_t sub_1001B7300(uint64_t a1)
{
  unint64_t result = sub_1001B7328();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001B7328()
{
  unint64_t result = qword_1004D0110;
  if (!qword_1004D0110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004D0110);
  }
  return result;
}

id sub_1001B737C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  [*(id *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView) setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v5 = OBJC_IVAR____TtC7Measure23CardContainerController_containerHeightConstraint;
  unsigned int v6 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerHeightConstraint);
  if (v6)
  {
    id v7 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerTopConstraint);
    if (v7)
    {
      id v8 = self;
      sub_100012894((uint64_t *)&unk_1004CEA00);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1003F94A0;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v7;
      double v26 = *(double *)&v9;
      specialized Array._endMutation()();
      sub_10001C99C(0, (unint64_t *)&qword_1004CE690);
      id v10 = v6;
      id v11 = v7;
      id v12 = v10;
      id v13 = v11;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v8 deactivateConstraints:isa];
    }
  }
  id v15 = [*(id *)(v1 + v4) heightAnchor];
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  id v16 = [v15 constraintEqualToConstant:v26];

  id v17 = *(void **)(v2 + v5);
  *(void *)(v2 + v5) = v16;

  id result = *(id *)(v2 + v5);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  LODWORD(v18) = 1148682240;
  [result setPriority:v18];
  id result = *(id *)(v2 + v5);
  if (!result)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  [result setActive:1];
  id v20 = [*(id *)(v2 + v4) topAnchor];
  id v21 = [a1 topAnchor];
  if (qword_1004C2800 != -1) {
    swift_once();
  }
  id v22 = [v20 constraintGreaterThanOrEqualToAnchor:v21 constant:*(double *)&qword_1004F7E18];

  uint64_t v23 = OBJC_IVAR____TtC7Measure23CardContainerController_containerTopConstraint;
  char v24 = *(void **)(v2 + OBJC_IVAR____TtC7Measure23CardContainerController_containerTopConstraint);
  *(void *)(v2 + OBJC_IVAR____TtC7Measure23CardContainerController_containerTopConstraint) = v22;

  id result = *(id *)(v2 + v23);
  if (!result) {
    goto LABEL_13;
  }
  LODWORD(v25) = 1148846080;
  [result setPriority:v25];
  id result = *(id *)(v2 + v23);
  if (result) {
    return [result setActive:1];
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1001B7688()
{
  return sub_1001B8200();
}

uint64_t sub_1001B769C(char a1, uint64_t a2, char a3)
{
  if (a3)
  {
    double v5 = dbl_100402788[a1];
    [*(id *)&v3[OBJC_IVAR____TtC7Measure23CardContainerController_containerView] frame];
    double v7 = v6;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    *(double *)&a2 = fabs(v5) * (v7 - v13);
  }
  [*(id *)&v3[OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint] setConstant:*(double *)&a2];
  swift_getKeyPath();
  swift_getKeyPath();
  id v8 = v3;
  static Published.subscript.setter();
  sub_1001B8090();
  uint64_t v9 = &v8[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
  *(void *)uint64_t v9 = 0;
  v9[8] = 1;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v11 = Strong;
    [Strong setEnabled:1];
  }
  uint64_t result = swift_unknownObjectWeakAssign();
  v8[OBJC_IVAR____TtC7Measure23CardContainerController_isPanningCard] = 0;
  return result;
}

void sub_1001B7844()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  id v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC7Measure23CardContainerController_containerView), "superview"));
  if (v2)
  {
    uint64_t v3 = v2;
    [v2 setNeedsLayout];
    [v3 layoutIfNeeded];
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v10)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      double v4 = dbl_100402788[v9];
      [*(id *)(v0 + v1) frame];
      double v6 = v5;
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      [*(id *)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint) setConstant:fabs(v4) * (v6 - v8)];
      [*(id *)(v0 + v1) setNeedsLayout];
      id v7 = *(id *)(v0 + v1);
      [v7 layoutIfNeeded];
    }
  }
}

double sub_1001B7A34@<D0>(double *a1@<X8>)
{
  return sub_1001B7A70(a1);
}

uint64_t sub_1001B7A48()
{
  return sub_1001B7B00();
}

double sub_1001B7A5C@<D0>(double *a1@<X8>)
{
  return sub_1001B7A70(a1);
}

double sub_1001B7A70@<D0>(double *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1001B7AEC()
{
  return sub_1001B7B00();
}

uint64_t sub_1001B7B00()
{
  return static Published.subscript.setter();
}

void sub_1001B7B78()
{
  qword_1004F85F8 = 0x3FF0000000000000;
}

void sub_1001B7B88()
{
  qword_1004F8600 = 0xC028000000000000;
}

void sub_1001B7B98()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  double v3 = *(void **)(*(void *)(*(void *)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                            + OBJC_IVAR____TtC7Measure17CardContainerView_titleView)
                + OBJC_IVAR____TtC7Measure13CardTitleView_separator);
  uint64_t Strong = swift_unknownObjectUnownedLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_21;
  }
  double v5 = (void *)Strong;
  id v6 = v3;
  [v5 contentOffset];
  double v8 = v7;
  [v5 contentInset];
  double v10 = v9;

  sub_10005C2F8(v8 - v10 > 1.0);
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  if (static UIDevice.isIPhone()())
  {
    id v11 = [*(id *)(*(void *)(v1 + v2) + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView) layer];
    id v12 = [v11 presentationLayer];

    if (v12)
    {
      [v12 frame];
      double MinY = CGRectGetMinY(v31);
      [*(id *)(v1 + v2) frame];
      double v15 = v14;
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      if (qword_1004C2E00 != -1) {
        swift_once();
      }
      if (MinY > *(double *)&qword_1004F85F8)
      {
        double v16 = v15 - v30 - MinY;
        if (v16 > *(double *)&qword_1004F85F8) {
          goto LABEL_11;
        }
        if (qword_1004C2E08 != -1) {
          swift_once();
        }
        if (*(double *)&qword_1004F8600 > v16)
        {
LABEL_11:
          id v17 = objc_retain(*(id *)(*(void *)(v1 + v2)
                                  + OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackTopSeparatorView));
LABEL_15:
          char v29 = 1;
LABEL_18:
          sub_10005C2F8(v29);

          return;
        }
      }
      uint64_t v18 = *(void *)(v1 + v2);
      if (*(unsigned char *)(v18 + OBJC_IVAR____TtC7Measure17CardContainerView_shouldScrollviewBeAccountedByCardController) != 1)
      {
        id v17 = *(id *)(v18 + OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackTopSeparatorView);
        goto LABEL_17;
      }
      id v19 = (void *)swift_unknownObjectUnownedLoadStrong();
      if (v19)
      {
        id v20 = v19;
        [v19 contentSize];
        double v22 = v21;
        [v20 contentInset];
        double v24 = v22 + v23;
        [v20 bounds];
        double v26 = v24 - v25;
        [v20 contentOffset];
        double v28 = v27;

        id v17 = objc_retain(*(id *)(*(void *)(v1 + v2)
                                + OBJC_IVAR____TtC7Measure17CardContainerView_bottomStackTopSeparatorView));
        if (v26 - v28 > 1.0) {
          goto LABEL_15;
        }
LABEL_17:
        char v29 = 0;
        goto LABEL_18;
      }
LABEL_21:
      __break(1u);
    }
  }
}

void sub_1001B7F5C(char a1)
{
  double v2 = 0.4;
  if ((a1 & 1) == 0) {
    double v2 = 0.0;
  }
  *(double *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_rubberbandConfiguration + 24) = v2;
  uint64_t v3 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  [*(id *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView) frame];
  double v5 = v4;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v6 = v1 + OBJC_IVAR____TtC7Measure23CardContainerController_rubberbandConfiguration;
  *(double *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_rubberbandConfiguration + 8) = v5 - v11;
  id v7 = [*(id *)(v1 + v3) superview];
  if (v7)
  {
    double v8 = v7;
    [v7 bounds];
    double v10 = v9;

    *(double *)(v6 + 16) = v10 * 0.5;
  }
}

void sub_1001B8090()
{
  if (*(unsigned char *)(*(void *)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                + OBJC_IVAR____TtC7Measure17CardContainerView_shouldScrollviewBeAccountedByCardController) == 1)
  {
    uint64_t Strong = swift_unknownObjectUnownedLoadStrong();
    if (Strong)
    {
      double v2 = (void *)Strong;
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      [v2 setScrollEnabled:(v6 & 7) == 0];

      uint64_t v3 = swift_unknownObjectUnownedLoadStrong();
      if (v3)
      {
        double v4 = (void *)v3;
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        [v4 setBounces:(v5 & 7) == 0];

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_1001B81EC()
{
  return sub_1001B8200();
}

uint64_t sub_1001B8200()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1001B826C()
{
  uint64_t v1 = v0;
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  char v2 = static UIDevice.isIPhone()();
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint);
  if (v2)
  {
    if (v3) {
      [v3 constant];
    }
    uint64_t v4 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
    [*(id *)(*(void *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_draggableView) transform];
    [*(id *)(v1 + v4) frame];
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    if (v3) {
      [v3 constant];
    }
    [*(id *)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView) frame];
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    return swift_release();
  }
}

char *sub_1001B8458(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = sub_100012894(&qword_1004D01E8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded] = 1;
  v1[OBJC_IVAR____TtC7Measure23CardContainerController_isPanningCard] = 0;
  v1[OBJC_IVAR____TtC7Measure23CardContainerController_isDraggingEnabled] = 1;
  v1[OBJC_IVAR____TtC7Measure23CardContainerController_isDraggableFromBottomStack] = 1;
  *(void *)&v1[OBJC_IVAR____TtC7Measure23CardContainerController_containerHeightConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Measure23CardContainerController_containerTopConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Measure23CardContainerController_draggingAnimator] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC7Measure23CardContainerController_displayLink] = 0;
  double v8 = &v1[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
  *(void *)double v8 = 0;
  v8[8] = 1;
  double v9 = &v1[OBJC_IVAR____TtC7Measure23CardContainerController__lockingState];
  LOBYTE(v34) = 1;
  double v10 = v1;
  Published.init(initialValue:)();
  double v11 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v11(v9, v7, v4);
  id v12 = &v10[OBJC_IVAR____TtC7Measure23CardContainerController__animationLockingState];
  LOBYTE(v34) = 1;
  Published.init(initialValue:)();
  v11(v12, v7, v4);
  *(void *)&v10[OBJC_IVAR____TtC7Measure23CardContainerController_maxHeightSubscription] = 0;
  swift_unknownObjectUnownedInit();
  uint64_t v13 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  *(void *)&v10[OBJC_IVAR____TtC7Measure23CardContainerController_containerView] = a1;
  id v14 = a1;
  [v14 frame];
  double v16 = v15;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  double v17 = v34;
  id v18 = [*(id *)&v10[v13] superview];
  if (v18)
  {
    id v19 = v18;
    [v18 bounds];
    double v21 = v20;
  }
  else
  {
    [v14 frame];
    double v21 = v22;
  }
  double v23 = (double *)&v10[OBJC_IVAR____TtC7Measure23CardContainerController_rubberbandConfiguration];
  *double v23 = 0.0;
  v23[1] = v16 - v17;
  v23[2] = v21 * 0.5;
  void v23[3] = 0.4;

  v33.receiver = v10;
  v33.super_class = ObjectType;
  double v24 = (char *)[super init];
  sub_1001B8848();
  uint64_t v25 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  id v26 = [*(id *)(*(void *)&v24[OBJC_IVAR____TtC7Measure23CardContainerController_containerView]+ OBJC_IVAR____TtC7Measure17CardContainerView_draggableView) topAnchor];
  id v27 = [*(id *)&v24[v25] topAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  uint64_t v29 = OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint;
  double v30 = *(void **)&v24[OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint];
  *(void *)&v24[OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint] = v28;

  double result = *(char **)&v24[v29];
  if (result)
  {
    [result setActive:1];

    return v24;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1001B8848()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100012894((uint64_t *)&unk_1004D01F0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [objc_allocWithZone((Class)type metadata accessor for PanRecognizerWithInitialTouch()) initWithTarget:v0 action:"handlePanGestureWithSender:"];
  [v6 setMaximumNumberOfTouches:1];
  [v6 setDelegate:v0];
  [*(id *)(*(void *)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_draggableView) addGestureRecognizer:v6];
  swift_unknownObjectUnownedAssign();
  swift_beginAccess();
  swift_retain();
  sub_100012894(&qword_1004CF228);
  Published.projectedValue.getter();
  swift_endAccess();
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1001BAE1C();
  uint64_t v7 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(void *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_maxHeightSubscription) = v7;
  swift_release();
  id v8 = [self displayLinkWithTarget:v1 selector:"caDisplayLinkCallback"];
  uint64_t v9 = OBJC_IVAR____TtC7Measure23CardContainerController_displayLink;
  double v10 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_displayLink);
  *(void *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_displayLink) = v8;

  double v11 = *(void **)(v1 + v9);
  if (v11)
  {
    id v12 = self;
    id v13 = v11;
    id v14 = [v12 mainRunLoop];
    [v13 addToRunLoop:v14 forMode:NSRunLoopCommonModes];
  }
  else
  {
    __break(1u);
  }
}

id sub_1001B8B2C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1001B8B74();
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return [super dealloc];
}

void sub_1001B8B74()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure23CardContainerController_draggingAnimator;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_draggingAnimator);
  if (v2)
  {
    [v2 stopAnimation:1];
    objc_super v3 = *(void **)(v0 + v1);
  }
  else
  {
    objc_super v3 = 0;
  }
  *(void *)(v0 + v1) = 0;

  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = Strong;
  [Strong removeTarget:v0 action:"handlePanGestureWithSender:"];

  id v6 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView);
  id v8 = (id)swift_unknownObjectUnownedLoadStrong();
  if (!v8)
  {
LABEL_10:
    __break(1u);
    return;
  }
  id v7 = v6;
  [v7 removeGestureRecognizer:v8];
}

uint64_t sub_1001B8DFC()
{
  return type metadata accessor for CardContainerController();
}

uint64_t type metadata accessor for CardContainerController()
{
  uint64_t result = qword_1004D01C8;
  if (!qword_1004D01C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001B8E50(double *a1)
{
  double v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    objc_super v3 = (void *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC7Measure23CardContainerController_containerHeightConstraint) setConstant:v1];
  }
}

id sub_1001B8EC8()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint;
  id result = *(id *)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint);
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  [result setActive:0];
  uint64_t v3 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  id v4 = [*(id *)(*(void *)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_draggableView) topAnchor];
  id v5 = [*(id *)(v0 + v3) topAnchor];
  id v6 = [v4 constraintGreaterThanOrEqualToAnchor:v5];

  id v7 = *(void **)(v0 + v1);
  *(void *)(v0 + v1) = v6;

  id result = *(id *)(v0 + v1);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  LODWORD(v8) = 1148846080;
  [result setPriority:v8];
  id result = *(id *)(v0 + v1);
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }

  return [result setActive:1];
}

void sub_1001B8FDC()
{
  uint64_t v1 = OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint);
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  [v2 setActive:0];
  uint64_t v3 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  id v4 = [*(id *)(*(void *)(v0 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_draggableView) topAnchor];
  id v5 = [*(id *)(v0 + v3) topAnchor];
  id v6 = [v4 constraintEqualToAnchor:v5];

  id v7 = *(void **)(v0 + v1);
  *(void *)(v0 + v1) = v6;

  double v8 = *(void **)(v0 + v1);
  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v9 = v8;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double v10 = dbl_100402788[v15];
  [*(id *)(v0 + v3) frame];
  double v12 = v11;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  [v9 setConstant:fabs(v10) * (v12 - v14)];

  id v13 = *(void **)(v0 + v1);
  if (v13)
  {
    [v13 setActive:1];
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1001B91E0(char a1, uint64_t a2, uint64_t a3, double a4)
{
  double v9 = dbl_100402788[a1];
  uint64_t v10 = OBJC_IVAR____TtC7Measure23CardContainerController_draggingAnimator;
  double v11 = *(void **)&v4[OBJC_IVAR____TtC7Measure23CardContainerController_draggingAnimator];
  *(void *)&v4[OBJC_IVAR____TtC7Measure23CardContainerController_draggingAnimator] = 0;

  id v12 = [objc_allocWithZone((Class)CASpringAnimation) init];
  [v12 setStiffness:240.0];
  [v12 setDamping:30.0];
  [v12 setInitialVelocity:a4];
  [v12 damping];
  double v14 = v13;
  [v12 stiffness];
  double v16 = sqrt(v15);
  id v41 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithDampingRatio:v14 / (v16 + v16) initialVelocity:a4, a4];
  [v12 settlingDuration];
  id v18 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v41 timingParameters:v17];
  id v19 = *(void **)&v4[v10];
  *(void *)&v4[v10] = v18;

  double v20 = *(void **)&v4[v10];
  if (v20)
  {
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v4;
    *(void *)&long long v59 = sub_1001BAB2C;
    *((void *)&v59 + 1) = v21;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v58 = sub_100049AB4;
    *((void *)&v58 + 1) = &unk_100492300;
    double v22 = _Block_copy(&aBlock);
    id v23 = v20;
    double v24 = v4;
    swift_release();
    [v23 addAnimations:v22];
    _Block_release(v22);
    if (a1 == 2) {
      goto LABEL_5;
    }
    [*(id *)(*(void *)&v24[OBJC_IVAR____TtC7Measure23CardContainerController_containerView]+ OBJC_IVAR____TtC7Measure17CardContainerView_draggableView) transform];
    long long v54 = aBlock;
    long long v55 = v58;
    long long v56 = v59;
    long long aBlock = 0x3FF0000000000000uLL;
    *(void *)&long long v58 = 0;
    *((void *)&v58 + 1) = 0x3FF0000000000000;
    long long v59 = 0uLL;
    if ((static CGAffineTransform.== infix(_:_:)() & 1) == 0)
    {
LABEL_5:
      uint64_t v28 = swift_allocObject();
      swift_unknownObjectWeakInit();
      *(void *)&long long v53 = sub_1001BAB98;
      *((void *)&v53 + 1) = v28;
      *(void *)&long long v51 = _NSConcreteStackBlock;
      *((void *)&v51 + 1) = 1107296256;
      *(void *)&long long v52 = sub_100036C40;
      *((void *)&v52 + 1) = &unk_100492350;
      id v27 = _Block_copy(&v51);
    }
    else
    {
      uint64_t v25 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v25;
      *(unsigned char *)(v26 + 24) = a1;
      *(void *)(v26 + 32) = a2;
      *(void *)(v26 + 40) = a3;
      *(void *)&long long v53 = sub_1001BACBC;
      *((void *)&v53 + 1) = v26;
      *(void *)&long long v51 = _NSConcreteStackBlock;
      *((void *)&v51 + 1) = 1107296256;
      *(void *)&long long v52 = sub_100036C40;
      *((void *)&v52 + 1) = &unk_100492490;
      id v27 = _Block_copy(&v51);
      sub_10003FFC4(a2);
    }
    swift_release();
    [v23 addCompletion:v27];
    _Block_release(v27);
    sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
    if ((static UIDevice.isIPhone()() & 1) == 0) {
      goto LABEL_15;
    }
    if (a1 == 2)
    {
      uint64_t v29 = self;
      uint64_t v30 = swift_allocObject();
      swift_unknownObjectWeakInit();
      *(void *)&long long v53 = sub_1001BABFC;
      *((void *)&v53 + 1) = v30;
      *(void *)&long long v51 = _NSConcreteStackBlock;
      *((void *)&v51 + 1) = 1107296256;
      *(void *)&long long v52 = sub_100049AB4;
      *((void *)&v52 + 1) = &unk_1004923F0;
      CGRect v31 = _Block_copy(&v51);
      swift_release();
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v24;
      *(unsigned char *)(v32 + 24) = a1;
      *(void *)(v32 + 32) = a2;
      *(void *)(v32 + 40) = a3;
      *(void *)&long long v53 = sub_1001BAC50;
      *((void *)&v53 + 1) = v32;
      *(void *)&long long v51 = _NSConcreteStackBlock;
      *((void *)&v51 + 1) = 1107296256;
      *(void *)&long long v52 = sub_100176FA8;
      *((void *)&v52 + 1) = &unk_100492440;
      objc_super v33 = _Block_copy(&v51);
      double v34 = v24;
      sub_10003FFC4(a2);
      swift_release();
      [v29 animateWithDuration:0x10000 delay:v31 usingSpringWithDamping:v33 initialSpringVelocity:0.4 options:0.0 animations:1.0 completion:fabs(a4)];
    }
    else
    {
      [*(id *)(*(void *)&v24[OBJC_IVAR____TtC7Measure23CardContainerController_containerView]+ OBJC_IVAR____TtC7Measure17CardContainerView_draggableView) transform];
      long long v48 = v51;
      long long v49 = v52;
      long long v50 = v53;
      long long v51 = 0x3FF0000000000000uLL;
      *(void *)&long long v52 = 0;
      *((void *)&v52 + 1) = 0x3FF0000000000000;
      long long v53 = 0uLL;
      if (static CGAffineTransform.== infix(_:_:)())
      {
LABEL_15:
        [*(id *)&v24[OBJC_IVAR____TtC7Measure23CardContainerController_containerView] frame];
        double v40 = v39;
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        swift_release();
        [*(id *)&v24[OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint] setConstant:fabs(v9) * (v40 - v42)];
        [v23 startAnimation];

        return;
      }
      uint64_t v35 = self;
      uint64_t v36 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v46 = sub_1001BABF0;
      uint64_t v47 = v36;
      double v42 = COERCE_DOUBLE(_NSConcreteStackBlock);
      uint64_t v43 = 1107296256;
      Class v44 = sub_100049AB4;
      uint64_t v45 = &unk_100492378;
      CGRect v31 = _Block_copy(&v42);
      swift_release();
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = v24;
      *(unsigned char *)(v37 + 24) = a1;
      *(void *)(v37 + 32) = a2;
      *(void *)(v37 + 40) = a3;
      uint64_t v46 = sub_1001BB2C8;
      uint64_t v47 = v37;
      double v42 = COERCE_DOUBLE(_NSConcreteStackBlock);
      uint64_t v43 = 1107296256;
      Class v44 = sub_100176FA8;
      uint64_t v45 = &unk_1004923C8;
      objc_super v33 = _Block_copy(&v42);
      id v38 = v24;
      sub_10003FFC4(a2);
      swift_release();
      [v35 animateWithDuration:0x20000 delay:v31 usingSpringWithDamping:v33 initialSpringVelocity:0.4 options:0.0 animations:1.0 completion:fabs(a4)];
    }
    _Block_release(v33);
    _Block_release(v31);
    goto LABEL_15;
  }
}

void sub_1001B9A28(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = (void *)Strong;
    *(unsigned char *)(Strong + OBJC_IVAR____TtC7Measure23CardContainerController_isPanningCard) = 0;
    swift_getKeyPath();
    swift_getKeyPath();
    id v7 = v6;
    static Published.subscript.setter();
    if (a4)
    {
      uint64_t v8 = swift_retain();
      a4(v8);
      sub_100028914((uint64_t)a4);
    }
  }
}

void sub_1001B9B00()
{
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC7Measure23CardContainerController_isPanningCard] = 0;
  }
}

void sub_1001B9B58()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(*(void *)(Strong + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                  + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView);
    swift_getKeyPath();
    swift_getKeyPath();
    id v3 = v2;
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    CGAffineTransformMakeTranslation(&ty, 0.0, ty.a);
    [v3 setTransform:&ty];
  }
}

void sub_1001B9C74()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(*(void *)(Strong + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                  + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView);
    v3[0] = 0x3FF0000000000000;
    v3[1] = 0;
    v3[2] = 0;
    v3[3] = 0x3FF0000000000000;
    v3[4] = 0;
    v3[5] = 0;
    [v2 setTransform:v3];
  }
}

uint64_t sub_1001B9D00(uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v6 = a2;
  uint64_t result = static Published.subscript.setter();
  if (a4)
  {
    uint64_t v8 = swift_retain();
    a4(v8);
    return sub_100028914((uint64_t)a4);
  }
  return result;
}

char *sub_1001B9DA0(char *result)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_isDraggingEnabled) == 1)
  {
    uint64_t v2 = result;
    if ([result state] == (id)1) {
      sub_1001B9E64(v2);
    }
    if ([v2 state] == (id)2) {
      sub_1001BA370(v2);
    }
    if ([v2 state] == (id)3) {
      sub_1001BA458(v2);
    }
    uint64_t result = (char *)[v2 state];
    if (result == (char *)4)
    {
      return (char *)sub_1001BAE78();
    }
  }
  return result;
}

void sub_1001B9E64(char *a1)
{
  uint64_t v2 = v1;
  id v4 = *(void **)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_draggingAnimator);
  *(void *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_draggingAnimator) = 0;

  uint64_t v5 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  [*(id *)(*(void *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)+ OBJC_IVAR____TtC7Measure17CardContainerView_draggableView) frame];
  uint64_t v6 = v1 + OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos;
  *(void *)uint64_t v6 = v7;
  *(unsigned char *)(v6 + 8) = 0;
  sub_1001B7F5C(1);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_isPanningCard) = 1;
  uint64_t v8 = *(char **)(v1 + v5);
  double v9 = &v8[OBJC_IVAR____TtC7Measure17CardContainerView_internalSpatialPlatter];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v11 = (void *)Strong;
    uint64_t v12 = *((void *)v9 + 1);
    uint64_t ObjectType = swift_getObjectType();
    double v14 = a1;
    double v15 = *(void (**)(uint64_t, uint64_t))(v12 + 112);
    double v16 = v8;
    v15(ObjectType, v12);
    a1 = v14;
  }
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC7Measure23CardContainerController_isDraggableFromBottomStack) & 1) != 0
    || (a1[OBJC_IVAR____TtC7Measure29PanRecognizerWithInitialTouch_initialTouchLocation + 16] & 1) != 0
    || (objc_msgSend(*(id *)(v2 + v5), "convertPoint:fromCoordinateSpace:", *(void *)(*(void *)(v2 + v5) + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView), *(double *)&a1[OBJC_IVAR____TtC7Measure29PanRecognizerWithInitialTouch_initialTouchLocation], *(double *)&a1[OBJC_IVAR____TtC7Measure29PanRecognizerWithInitialTouch_initialTouchLocation + 8]), v18 = v17, v20 = v19, v21 = *(id *)(v2 + v5), unsigned __int8 v22 = sub_10019B208(v18, v20), v21, (v22 & 1) == 0))
  {
    if (*(unsigned char *)(*(void *)(v2 + v5)
                  + OBJC_IVAR____TtC7Measure17CardContainerView_shouldScrollviewBeAccountedByCardController) != 1)
      return;
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v59) {
      return;
    }
    uint64_t v27 = swift_unknownObjectUnownedLoadStrong();
    if (!v27)
    {
      __break(1u);
      goto LABEL_34;
    }
    uint64_t v28 = (void *)v27;
    [a1 locationInView:v27];
    CGFloat v30 = v29;
    CGFloat v32 = v31;

    if (*(unsigned char *)(*(void *)(v2 + v5)
                  + OBJC_IVAR____TtC7Measure17CardContainerView_shouldScrollviewBeAccountedByCardController) != 1)
      return;
    objc_super v33 = (void *)swift_unknownObjectUnownedLoadStrong();
    if (!v33) {
      goto LABEL_36;
    }
    double v34 = v33;
    [v33 frame];
    CGFloat v36 = v35;
    CGFloat v38 = v37;
    CGFloat v40 = v39;
    CGFloat v42 = v41;

    v62.origin.CGFloat x = v36;
    v62.origin.CGFloat y = v38;
    v62.size.width = v40;
    v62.size.height = v42;
    v61.CGFloat x = v30;
    v61.CGFloat y = v32;
    if (!CGRectContainsPoint(v62, v61)) {
      return;
    }
    [a1 velocityInView:*(void *)(*(void *)(v2 + v5) + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView)];
    double v44 = v43;
    uint64_t v45 = (void *)swift_unknownObjectUnownedLoadStrong();
    if (!v45) {
      goto LABEL_37;
    }
    uint64_t v46 = v45;
    [v45 contentOffset];
    double v48 = v47;

    if (v48 >= 0.0 && v44 > 0.0)
    {
      long long v49 = (void *)swift_unknownObjectUnownedLoadStrong();
      if (v49)
      {
        long long v50 = v49;
        [v49 setBounces:0];

        long long v51 = (void *)swift_unknownObjectUnownedLoadStrong();
        if (v51)
        {
          long long v52 = v51;
          [v51 setScrollEnabled:0];

          return;
        }
        goto LABEL_39;
      }
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v48 < 0.0 && v44 > 0.0)
    {
      long long v53 = (void *)swift_unknownObjectUnownedLoadStrong();
      if (!v53)
      {
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      long long v54 = v53;
      [v53 setBounces:1];

      long long v55 = (void *)swift_unknownObjectUnownedLoadStrong();
      if (v55)
      {
LABEL_31:
        long long v58 = v55;
        [v55 setScrollEnabled:1];

        [a1 setState:4];
        return;
      }
      __break(1u);
    }
    if (v44 >= 0.0) {
      return;
    }
    long long v56 = (void *)swift_unknownObjectUnownedLoadStrong();
    if (!v56) {
      goto LABEL_41;
    }
    Class v57 = v56;
    [v56 setBounces:1];

    long long v55 = (void *)swift_unknownObjectUnownedLoadStrong();
    if (!v55)
    {
LABEL_42:
      __break(1u);
      return;
    }
    goto LABEL_31;
  }
  id v23 = (void *)swift_unknownObjectUnownedLoadStrong();
  if (!v23)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  double v24 = v23;
  [v23 setBounces:1];

  uint64_t v25 = (void *)swift_unknownObjectUnownedLoadStrong();
  if (!v25)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v26 = v25;
  [v25 setScrollEnabled:1];

  [a1 setState:4];
}

id sub_1001BA370(id result)
{
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos + 8) & 1) == 0)
  {
    double v2 = *(double *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos);
    uint64_t v3 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
    [result translationInView:*(void *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)];
    double v5 = v2 + v4;
    uint64_t v6 = *(void **)(*(void *)(v1 + v3) + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView);
    v7[0] = 0x3FF0000000000000;
    v7[1] = 0;
    v7[2] = 0;
    v7[3] = 0x3FF0000000000000;
    _OWORD v7[4] = 0;
    v7[5] = 0;
    [v6 setTransform:v7];
    [*(id *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint) setConstant:sub_1001A36A8(v5, *(double *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_rubberbandConfiguration), *(double *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_rubberbandConfiguration + 8), *(double *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_rubberbandConfiguration + 16), *(double *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_rubberbandConfiguration + 24))];
    [*(id *)(v1 + v3) setNeedsLayout];
    return [*(id *)(v1 + v3) layoutIfNeeded];
  }
  return result;
}

uint64_t sub_1001BA458(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC7Measure23CardContainerController_containerView;
  [a1 velocityInView:*(void *)(*(void *)&v1[OBJC_IVAR____TtC7Measure23CardContainerController_containerView]+ OBJC_IVAR____TtC7Measure17CardContainerView_draggableView)];
  double v4 = v3;
  sub_1001B826C();
  BOOL v6 = v5 > 0.5 || v5 < -100.0;
  uint64_t v7 = *(void *)(*(void *)&v1[v2] + OBJC_IVAR____TtC7Measure17CardContainerView_configuration);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (LOBYTE(v31))
  {
    if (LOBYTE(v31) != 1) {
      goto LABEL_16;
    }
    if (!v6)
    {
      BOOL v6 = 0;
      goto LABEL_16;
    }
  }
  else if (v6)
  {
    BOOL v6 = 1;
    goto LABEL_16;
  }
  double v8 = *(double *)(v7 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration_velocityThreshold);
  BOOL v9 = v4 >= -v8 && v6;
  BOOL v6 = v8 < v4 || v9;
LABEL_16:
  double v10 = *(double *)(v7 + OBJC_IVAR____TtCC7Measure17CardContainerView13Configuration_velocityUpperThreshold);
  char v11 = v4 >= -v10 && v6;
  if (v10 < v4) {
    char v12 = 1;
  }
  else {
    char v12 = v11;
  }
  sub_10001C99C(0, (unint64_t *)&qword_1004C6A10);
  unsigned __int8 v13 = static UIDevice.isIPhone()();
  char v14 = v12 | ~((v13 ^ 1 | v1[OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded] | v12) & v1[OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded]);
  char v15 = v12 & 1 | (((v13 ^ 1 | v1[OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded] | v12) & v1[OBJC_IVAR____TtC7Measure23CardContainerController_canBeExpanded] & 1) == 0);
  double v16 = 0.0;
  if (v14) {
    double v17 = 1.0;
  }
  else {
    double v17 = 0.0;
  }
  [*(id *)&v1[v2] frame];
  double v19 = v18;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  double v20 = v17 * (v19 - v31);
  char v21 = static UIDevice.isIPhone()();
  unsigned __int8 v22 = *(void **)&v1[OBJC_IVAR____TtC7Measure23CardContainerController_cardTopConstraint];
  if (v21)
  {
    if (v22)
    {
      [v22 constant];
      double v16 = v23;
    }
    [*(id *)(*(void *)&v1[v2] + OBJC_IVAR____TtC7Measure17CardContainerView_draggableView) transform];
    double v16 = v16 + v32;
  }
  else if (v22)
  {
    [v22 constant];
    double v16 = v24;
  }
  double v25 = 0.0;
  if (v20 - v16 != 0.0) {
    double v25 = v4 / (v20 - v16);
  }
  sub_1001B91E0(v15, 0, 0, v25);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v26 = v1;
  static Published.subscript.setter();
  sub_1001B8090();
  uint64_t v27 = &v26[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
  *(void *)uint64_t v27 = 0;
  v27[8] = 1;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v29 = Strong;
    [Strong setEnabled:1];
  }
  swift_unknownObjectWeakAssign();
  return swift_release();
}

void sub_1001BA9AC()
{
  sub_1001BAA94();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1001BAA94()
{
  if (!qword_1004D01D8)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1004D01D8);
    }
  }
}

uint64_t sub_1001BAAF4()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1001BAB2C()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Measure23CardContainerController_containerView) layoutIfNeeded];
}

uint64_t sub_1001BAB48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001BAB58()
{
  return swift_release();
}

uint64_t sub_1001BAB60()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001BAB98()
{
}

double sub_1001BABA0@<D0>(double *a1@<X8>)
{
  return sub_1001B7A70(a1);
}

uint64_t sub_1001BABC8()
{
  return sub_1001B7B00();
}

void sub_1001BABF0()
{
}

void sub_1001BABFC()
{
}

uint64_t sub_1001BAC08()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001BAC50(uint64_t a1)
{
  return sub_1001B9D00(a1, *(void **)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32));
}

uint64_t sub_1001BAC74()
{
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1001BACBC(uint64_t a1)
{
  sub_1001B9A28(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32));
}

uint64_t sub_1001BACCC@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1001BAD50(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

double sub_1001BADC4@<D0>(double *a1@<X8>)
{
  return sub_1001B7A70(a1);
}

uint64_t sub_1001BADEC()
{
  return sub_1001B7B00();
}

void sub_1001BAE14(double *a1)
{
}

unint64_t sub_1001BAE1C()
{
  unint64_t result = qword_1004D0200;
  if (!qword_1004D0200)
  {
    sub_100016EF4((uint64_t *)&unk_1004D01F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004D0200);
  }
  return result;
}

uint64_t sub_1001BAE78()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v1 = v0;
  static Published.subscript.setter();
  sub_1001B8090();
  uint64_t v2 = &v1[OBJC_IVAR____TtC7Measure23CardContainerController_startingYPos];
  *(void *)uint64_t v2 = 0;
  void v2[8] = 1;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v4 = Strong;
    [Strong setEnabled:1];
  }
  uint64_t result = swift_unknownObjectWeakAssign();
  v1[OBJC_IVAR____TtC7Measure23CardContainerController_isPanningCard] = 0;
  return result;
}

id sub_1001BAF98(void *a1)
{
  swift_getObjectType();
  sub_100012894(&qword_1004D0208);
  if (String.init<A>(describing:)() == 0xD000000000000020 && v3 == 0x800000010042B360)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    id result = 0;
    if ((v4 & 1) == 0) {
      return result;
    }
  }
  id result = [a1 view];
  if (result)
  {
    BOOL v6 = result;
    self;
    uint64_t v7 = swift_dynamicCastObjCClass();
    if (!v7
      || *(unsigned char *)(*(void *)(v1 + OBJC_IVAR____TtC7Measure23CardContainerController_containerView)
                  + OBJC_IVAR____TtC7Measure17CardContainerView_shouldScrollviewBeAccountedByCardController) != 1)
    {
      goto LABEL_10;
    }
    uint64_t v8 = v7;
    id result = (id)swift_unknownObjectUnownedLoadStrong();
    if (result)
    {
      id v9 = result;

      if ((id)v8 != v9)
      {
LABEL_10:

        return 0;
      }
      id result = (id)swift_unknownObjectUnownedLoadStrong();
      if (result)
      {
        double v10 = result;
        [result contentOffset];
        double v12 = v11;

        return (id)(v12 <= 0.0);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001BB138(void *a1)
{
  swift_getObjectType();
  sub_100012894(&qword_1004D0208);
  if (String.init<A>(describing:)() == 0xD000000000000022 && v2 == 0x800000010042B330)
  {
    swift_bridgeObjectRelease();
    char v3 = 1;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
  }
  uint64_t result = (uint64_t)[a1 view];
  if (result)
  {
    double v5 = (void *)result;
    self;
    uint64_t v6 = swift_dynamicCastObjCClass();
    if (v6 && (v3 & 1) == 0)
    {
      uint64_t v7 = (void *)v6;
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (v10)
      {

        return 1;
      }
      else
      {
        [v7 contentOffset];
        double v9 = v8;

        return v9 < 0.0;
      }
    }
    else
    {

      return 0;
    }
  }
  return result;
}

double sub_1001BB2FC()
{
  if (qword_1004C2810 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1004F7E28;
  qword_1004F8610 = 0x4051000000000000;
  qword_1004F8618 = qword_1004F7E28;
  return result;
}

__n128 sub_1001BB35C()
{
  __asm { FMOV            V0.2D, #30.0 }
  xmmword_1004F8620 = (__int128)result;
  return result;
}

id sub_1001BB36C()
{
  id result = [self systemBlueColor];
  qword_1004D0210 = (uint64_t)result;
  return result;
}

id sub_1001BB3A8()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.1875 blue:0.55859375 alpha:1.0];
  qword_1004D0218 = (uint64_t)result;
  return result;
}

void sub_1001BB3F4()
{
  if (qword_1004C2E10 != -1) {
    swift_once();
  }
  double v1 = *(double *)&qword_1004F8610;
  double v2 = *(double *)&qword_1004F8618;
  char v3 = &v0[OBJC_IVAR____TtC7Measure25SpatialPlatterTitleButton_touchDownCallback];
  *(void *)char v3 = 0;
  *((void *)v3 + 1) = 0;
  char v4 = &v0[OBJC_IVAR____TtC7Measure25SpatialPlatterTitleButton_touchUpCallback];
  *(void *)char v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Measure25SpatialPlatterTitleButton_fadeOutAnimator] = 0;
  double v5 = (double *)&v0[OBJC_IVAR____TtC7Measure25SpatialPlatterTitleButton_size];
  *double v5 = v1;
  v5[1] = v2;
  v28.receiver = v0;
  v28.super_class = (Class)type metadata accessor for SpatialPlatterTitleButton();
  [super initWithFrame:0.0, 0.0, v1, v2];
  [v6 addTarget:v6 action:"onButtonTouchDown" forControlEvents:1];
  [v6 addTarget:v6 action:"onButtonTouchUp" forControlEvents:360];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  v27[4] = sub_1001BBA88;
  void v27[5] = v7;
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 1107296256;
  void v27[2] = sub_1001CEF98;
  v27[3] = &unk_1004924E0;
  double v8 = _Block_copy(v27);
  double v9 = (char *)v6;
  swift_release();
  [v9 setPointerStyleProvider:v8];
  _Block_release(v8);

  uint64_t v10 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  double v11 = (void (**)())&v9[OBJC_IVAR____TtC7Measure25SpatialPlatterTitleButton_touchDownCallback];
  uint64_t v12 = *(void *)&v9[OBJC_IVAR____TtC7Measure25SpatialPlatterTitleButton_touchDownCallback];
  void *v11 = sub_1001BBAE0;
  v11[1] = (void (*)())v10;
  sub_100028914(v12);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  char v14 = (void (**)())&v9[OBJC_IVAR____TtC7Measure25SpatialPlatterTitleButton_touchUpCallback];
  uint64_t v15 = *(void *)&v9[OBJC_IVAR____TtC7Measure25SpatialPlatterTitleButton_touchUpCallback];
  *char v14 = sub_1001BBB1C;
  v14[1] = (void (*)())v13;
  sub_100028914(v15);
  id v16 = [self configurationWithPointSize:4 weight:3 scale:17.0];
  double v17 = v9;
  id v18 = v16;
  NSString v19 = String._bridgeToObjectiveC()();
  double v20 = self;
  id v21 = [v20 systemImageNamed:v19 withConfiguration:v18];

  if (v21)
  {
    if (qword_1004C2E20 != -1) {
      swift_once();
    }
    id v22 = [v21 imageWithTintColor:qword_1004D0210];

    [v17 setImage:v22 forState:0];
    id v23 = v18;
    NSString v24 = String._bridgeToObjectiveC()();
    id v25 = [v20 systemImageNamed:v24 withConfiguration:v23];

    if (v25)
    {
      id v26 = [v25 imageWithTintColor:qword_1004D0210];

      [v17 setImage:v26 forState:1];
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1001BB818(uint64_t a1, int a2, int a3, id a4)
{
  [a4 center];
  CGRect.init(centerPoint:size:)();
  [self shapeWithRoundedRect:v5, v6, v7, v8];
  id v10 = [objc_allocWithZone((Class)UITargetedPreview) initWithView:a1];
  id v11 = [self effectWithPreview:v10];

  id v12 = [self styleWithEffect:v11 shape:v9];
  return v12;
}

void sub_1001BB944(uint64_t a1, void *a2, void *a3)
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v6 = Strong;
  if (*a2 != -1)
  {
    swift_once();
    uint64_t Strong = v6;
  }
  [Strong setTintColor:*a3];
}

uint64_t type metadata accessor for ShareButton()
{
  return self;
}

uint64_t sub_1001BBA50()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1001BBA88(uint64_t a1, int a2, int a3)
{
  return sub_1001BB818(a1, a2, a3, *(id *)(v3 + 16));
}

uint64_t sub_1001BBA90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001BBAA0()
{
  return swift_release();
}

uint64_t sub_1001BBAA8()
{
  swift_unknownObjectUnownedDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001BBAE0()
{
  sub_1001BB944(v0, &qword_1004C2E28, &qword_1004D0218);
}

void sub_1001BBB1C()
{
  sub_1001BB944(v0, &qword_1004C2E20, &qword_1004D0210);
}

void *sub_1001BBB58()
{
  type metadata accessor for State();
  swift_allocObject();
  id result = sub_1001BBCB4();
  qword_1004F8630 = (uint64_t)result;
  return result;
}

uint64_t sub_1001BBB94()
{
  return swift_retain();
}

uint64_t sub_1001BBB9C()
{
  return swift_retain();
}

uint64_t sub_1001BBBA4()
{
  return swift_retain();
}

uint64_t sub_1001BBBAC()
{
  return swift_retain();
}

uint64_t sub_1001BBBB4()
{
  return swift_retain();
}

uint64_t sub_1001BBBBC()
{
  return swift_retain();
}

uint64_t sub_1001BBBC4()
{
  return swift_retain();
}

uint64_t sub_1001BBBCC()
{
  return swift_retain();
}

uint64_t sub_1001BBBD4()
{
  return swift_retain();
}

uint64_t sub_1001BBBDC()
{
  return swift_retain();
}

uint64_t sub_1001BBBE4()
{
  return swift_retain();
}

uint64_t sub_1001BBBEC()
{
  return swift_retain();
}

uint64_t sub_1001BBBF4()
{
  return swift_retain();
}

uint64_t sub_1001BBBFC()
{
  return swift_retain();
}

uint64_t sub_1001BBC04()
{
  return swift_retain();
}

uint64_t sub_1001BBC0C()
{
  return swift_retain();
}

uint64_t sub_1001BBC14()
{
  return swift_retain();
}

uint64_t sub_1001BBC1C()
{
  return swift_retain();
}

uint64_t sub_1001BBC24()
{
  return swift_retain();
}

uint64_t sub_1001BBC2C()
{
  return swift_retain();
}

uint64_t sub_1001BBC34()
{
  return swift_retain();
}

uint64_t sub_1001BBC3C()
{
  return swift_retain();
}

uint64_t sub_1001BBC44()
{
  return swift_retain();
}

uint64_t sub_1001BBC4C()
{
  return swift_retain();
}

uint64_t sub_1001BBC54()
{
  return swift_retain();
}

uint64_t sub_1001BBC5C()
{
  return swift_retain();
}

uint64_t sub_1001BBC64()
{
  return swift_retain();
}

uint64_t sub_1001BBC6C()
{
  return swift_retain();
}

uint64_t sub_1001BBC74()
{
  return swift_retain();
}

uint64_t sub_1001BBC7C()
{
  return swift_retain();
}

uint64_t sub_1001BBC84()
{
  return swift_retain();
}

uint64_t sub_1001BBC8C()
{
  return swift_retain();
}

uint64_t sub_1001BBC94()
{
  return swift_retain();
}

uint64_t sub_1001BBC9C()
{
  return swift_retain();
}

uint64_t sub_1001BBCA4()
{
  return swift_retain();
}

uint64_t sub_1001BBCAC()
{
  return swift_retain();
}

void *sub_1001BBCB4()
{
  double v1 = v0;
  uint64_t v28 = type metadata accessor for MeasurementsHistory() - 8;
  uint64_t v2 = __chkstk_darwin(v28);
  uint64_t v29 = (uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v27 = (void **)((char *)&v27 - v4);
  uint64_t v5 = type metadata accessor for SessionState();
  uint64_t v6 = v5 - 8;
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (void **)((char *)&v27 - v10);
  sub_1000A5868();
  *(void *)&v31[0] = OrderedDictionary.init()();
  *((void *)&v31[0] + 1) = v12;
  v31[1] = v13;
  LODWORD(v31[2]) = 1106247680;
  *(_OWORD *)((char *)&v31[2] + 8) = 0u;
  sub_100012894(&qword_1004D0400);
  swift_allocObject();
  v0[2] = PublishedValue.init(wrappedValue:)();
  *(void *)&v31[0] = sub_100201C94();
  *((void *)&v31[0] + 1) = v14;
  *(void *)&v31[1] = v15;
  sub_100012894(&qword_1004D0408);
  swift_allocObject();
  v0[3] = PublishedValue.init(wrappedValue:)();
  *(void *)&v31[0] = 0xC000000000000000;
  sub_100012894(&qword_1004D0410);
  swift_allocObject();
  v0[4] = PublishedValue.init(wrappedValue:)();
  *(void *)&v31[0] = &_swiftEmptyArrayStorage;
  sub_100012894(&qword_1004D0418);
  swift_allocObject();
  v0[5] = PublishedValue.init(wrappedValue:)();
  LOBYTE(v31[0]) = 0;
  sub_100012894(&qword_1004D0420);
  swift_allocObject();
  v0[6] = PublishedValue.init(wrappedValue:)();
  LOBYTE(v31[0]) = 2;
  *(_DWORD *)((char *)v31 + 1) = 0;
  sub_100012894(&qword_1004D0428);
  swift_allocObject();
  v0[7] = PublishedValue.init(wrappedValue:)();
  void *v11 = 0;
  id v16 = (char *)v11 + *(int *)(v6 + 28);
  uint64_t v17 = type metadata accessor for ARCamera.TrackingState.Reason();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 2, v17);
  sub_1001BCB3C((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SessionState);
  sub_100012894(&qword_1004D0430);
  swift_allocObject();
  uint64_t v18 = PublishedValue.init(wrappedValue:)();
  sub_1001BCBA4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SessionState);
  v1[8] = v18;
  memset(v31, 0, 32);
  sub_100012894(&qword_1004D0438);
  swift_allocObject();
  v1[9] = PublishedValue.init(wrappedValue:)();
  ComputedCameraProperties.init()();
  memcpy(&v35[8], v34, 0x1E0uLL);
  *(void *)&v31[0] = 0;
  *((void *)&v31[0] + 1) = 0xBFF0000000000000;
  *(void *)&v31[1] = 0;
  memcpy((char *)&v31[1] + 8, v35, 0x1E8uLL);
  sub_100012894(&qword_1004D0440);
  swift_allocObject();
  v1[10] = PublishedValue.init(wrappedValue:)();
  ComputedCameraProperties.init()();
  v31[0] = 0u;
  *(void *)&v31[31] = 0;
  sub_100012894(&qword_1004D0448);
  swift_allocObject();
  v1[11] = PublishedValue.init(wrappedValue:)();
  memset(v31, 0, 64);
  LOBYTE(v31[4]) = 1;
  DWORD1(v31[4]) = 0;
  BYTE8(v31[4]) = 1;
  v31[5] = 0u;
  LOBYTE(v31[6]) = 1;
  DWORD1(v31[6]) = 0;
  BYTE8(v31[6]) = 1;
  HIDWORD(v31[6]) = 0;
  LOBYTE(v31[7]) = 1;
  sub_100012894(&qword_1004D0450);
  swift_allocObject();
  v1[12] = PublishedValue.init(wrappedValue:)();
  *(void *)&v31[0] = 0;
  sub_100012894(&qword_1004D0458);
  swift_allocObject();
  v1[13] = PublishedValue.init(wrappedValue:)();
  v31[0] = xmmword_1004027B0;
  memset(&v31[1], 0, 32);
  sub_100012894(&qword_1004D0460);
  swift_allocObject();
  v1[14] = PublishedValue.init(wrappedValue:)();
  LOBYTE(v31[0]) = 0;
  sub_100012894(&qword_1004D0468);
  swift_allocObject();
  v1[15] = PublishedValue.init(wrappedValue:)();
  LOBYTE(v31[0]) = 5;
  sub_100012894(&qword_1004D0470);
  swift_allocObject();
  v1[16] = PublishedValue.init(wrappedValue:)();
  LOBYTE(v31[0]) = 0;
  sub_100012894(&qword_1004D0478);
  swift_allocObject();
  v1[17] = PublishedValue.init(wrappedValue:)();
  LODWORD(v31[0]) = 0;
  sub_100012894(&qword_1004D0480);
  swift_allocObject();
  v1[18] = PublishedValue.init(wrappedValue:)();
  LOBYTE(v31[0]) = 2;
  sub_100012894(&qword_1004D0488);
  swift_allocObject();
  v1[19] = PublishedValue.init(wrappedValue:)();
  sub_100012894(&qword_1004D0490);
  swift_allocObject();
  v1[20] = PublishedValue.init(wrappedValue:)();
  *(void *)&v31[0] = 0;
  sub_100012894(&qword_1004D0498);
  swift_allocObject();
  v1[21] = PublishedValue.init(wrappedValue:)();
  LOBYTE(v31[0]) = 0;
  *(_OWORD *)((char *)v31 + 8) = 0u;
  *(_OWORD *)((char *)&v31[1] + 8) = 0u;
  BYTE8(v31[2]) = 1;
  sub_100012894(&qword_1004D04A0);
  swift_allocObject();
  v1[22] = PublishedValue.init(wrappedValue:)();
  char v40 = 1;
  char v38 = 1;
  v35[488] = 1;
  memset(v31, 0, 64);
  LOBYTE(v31[4]) = 1;
  *(void *)((char *)&v31[4] + 1) = *(void *)v39;
  *((void *)&v31[4] + 1) = *(void *)&v39[7];
  memset(&v31[5], 0, 64);
  LOBYTE(v31[9]) = 1;
  BYTE3(v31[9]) = v37;
  *(_WORD *)((char *)&v31[9] + 1) = v36;
  DWORD1(v31[9]) = 0;
  BYTE8(v31[9]) = 1;
  sub_100012894(&qword_1004D04A8);
  swift_allocObject();
  v1[23] = PublishedValue.init(wrappedValue:)();
  v31[0] = 0u;
  sub_100012894(&qword_1004D04B0);
  swift_allocObject();
  v1[24] = PublishedValue.init(wrappedValue:)();
  *(void *)&v31[0] = &_swiftEmptyArrayStorage;
  *((void *)&v31[0] + 1) = &_swiftEmptyArrayStorage;
  *(void *)&v31[1] = &_swiftEmptyArrayStorage;
  sub_100012894(&qword_1004D04B8);
  swift_allocObject();
  v1[25] = PublishedValue.init(wrappedValue:)();
  sub_100053058((uint64_t)v41);
  sub_10003AD94((uint64_t)v41, (uint64_t)v42);
  uint64_t v44 = 0;
  uint64_t v45 = &_swiftEmptyArrayStorage;
  v31[6] = v42[6];
  v31[7] = v42[7];
  v31[8] = v43;
  *(void *)&v31[9] = &_swiftEmptyArrayStorage;
  v31[2] = v42[2];
  v31[3] = v42[3];
  void v31[4] = v42[4];
  v31[5] = v42[5];
  v31[0] = v42[0];
  v31[1] = v42[1];
  sub_100012894(&qword_1004D04C0);
  swift_allocObject();
  v1[26] = PublishedValue.init(wrappedValue:)();
  char v77 = 1;
  char v75 = 1;
  char v73 = 1;
  char v71 = 1;
  char v69 = 1;
  char v67 = 1;
  char v65 = 1;
  char v63 = 1;
  char v61 = 1;
  char v59 = 1;
  char v56 = 1;
  char v53 = 1;
  char v50 = 1;
  char v48 = 1;
  char v46 = 1;
  LOWORD(v31[0]) = 1;
  BYTE2(v31[0]) = 0;
  *(_DWORD *)((char *)v31 + 3) = v78;
  BYTE7(v31[0]) = v79;
  *((void *)&v31[0] + 1) = 0;
  *(void *)&v31[1] = 0;
  BYTE8(v31[1]) = 1;
  *(_DWORD *)((char *)&v31[1] + 9) = *(_DWORD *)v76;
  HIDWORD(v31[1]) = *(_DWORD *)&v76[3];
  v31[2] = 0u;
  LOBYTE(v31[3]) = 1;
  DWORD1(v31[3]) = *(_DWORD *)&v74[3];
  *(_DWORD *)((char *)&v31[3] + 1) = *(_DWORD *)v74;
  *(_OWORD *)((char *)&v31[3] + 8) = 0u;
  BYTE8(v31[4]) = 1;
  HIDWORD(v31[4]) = *(_DWORD *)&v72[3];
  *(_DWORD *)((char *)&v31[4] + 9) = *(_DWORD *)v72;
  v31[5] = 0u;
  LOBYTE(v31[6]) = 1;
  DWORD1(v31[6]) = *(_DWORD *)&v70[3];
  *(_DWORD *)((char *)&v31[6] + 1) = *(_DWORD *)v70;
  *(_OWORD *)((char *)&v31[6] + 8) = 0u;
  BYTE8(v31[7]) = 1;
  HIDWORD(v31[7]) = *(_DWORD *)&v68[3];
  *(_DWORD *)((char *)&v31[7] + 9) = *(_DWORD *)v68;
  memset(&v31[8], 0, 64);
  LOBYTE(v31[12]) = 1;
  *((void *)&v31[12] + 1) = *(void *)&v66[7];
  *(void *)((char *)&v31[12] + 1) = *(void *)v66;
  memset(&v31[13], 0, 64);
  LOBYTE(v31[17]) = 1;
  *(void *)((char *)&v31[17] + 1) = *(void *)v64;
  *((void *)&v31[17] + 1) = *(void *)&v64[7];
  memset(&v31[18], 0, 64);
  LOBYTE(v31[22]) = 1;
  *(_DWORD *)((char *)&v31[22] + 1) = *(_DWORD *)v62;
  DWORD1(v31[22]) = *(_DWORD *)&v62[3];
  *(_OWORD *)((char *)&v31[22] + 8) = 0u;
  *(_OWORD *)((char *)&v31[23] + 8) = 0u;
  BYTE8(v31[24]) = 1;
  *(_DWORD *)((char *)&v31[24] + 9) = *(_DWORD *)v60;
  HIDWORD(v31[24]) = *(_DWORD *)&v60[3];
  memset(&v31[25], 0, 32);
  LOBYTE(v31[27]) = 1;
  *(_WORD *)((char *)&v31[27] + 1) = v57;
  BYTE3(v31[27]) = v58;
  DWORD1(v31[27]) = 0;
  BYTE8(v31[27]) = 1;
  *(_WORD *)((char *)&v31[27] + 9) = v54;
  BYTE11(v31[27]) = v55;
  HIDWORD(v31[27]) = 0;
  LOBYTE(v31[28]) = 1;
  *(_WORD *)((char *)&v31[28] + 1) = v51;
  BYTE3(v31[28]) = v52;
  DWORD1(v31[28]) = 0;
  BYTE8(v31[28]) = 1;
  *(_DWORD *)((char *)&v31[28] + 9) = *(_DWORD *)v49;
  HIDWORD(v31[28]) = *(_DWORD *)&v49[3];
  v31[29] = 0u;
  LOBYTE(v31[30]) = 1;
  *(_DWORD *)((char *)&v31[30] + 1) = *(_DWORD *)v47;
  DWORD1(v31[30]) = *(_DWORD *)&v47[3];
  *(_OWORD *)((char *)&v31[30] + 8) = 0u;
  _OWORD v31[32] = 0u;
  char v32 = 1;
  __int16 v33 = 2;
  sub_100012894(&qword_1004D04C8);
  swift_allocObject();
  v1[27] = PublishedValue.init(wrappedValue:)();
  LOBYTE(v31[0]) = 0;
  sub_100012894(&qword_1004D04D0);
  swift_allocObject();
  v1[28] = PublishedValue.init(wrappedValue:)();
  sub_100056598((uint64_t)v31);
  sub_100012894(&qword_1004D04D8);
  swift_allocObject();
  v1[29] = PublishedValue.init(wrappedValue:)();
  uint64_t v19 = (uint64_t)v27;
  void *v27 = &_swiftEmptyArrayStorage;
  uint64_t v20 = v28;
  uint64_t v21 = v19 + *(int *)(v28 + 28);
  uint64_t v22 = type metadata accessor for MeasurementHistoryItem();
  id v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v21, 1, 1, v22);
  v23(v19 + *(int *)(v20 + 32), 1, 1, v22);
  sub_1001BCB3C(v19, v29, (uint64_t (*)(void))type metadata accessor for MeasurementsHistory);
  sub_100012894(&qword_1004D04E0);
  swift_allocObject();
  uint64_t v24 = PublishedValue.init(wrappedValue:)();
  sub_1001BCBA4(v19, (uint64_t (*)(void))type metadata accessor for MeasurementsHistory);
  v1[30] = v24;
  *(void *)&v31[0] = 0;
  sub_100012894(&qword_1004D04E8);
  swift_allocObject();
  v1[31] = PublishedValue.init(wrappedValue:)();
  *(void *)&v31[0] = 0;
  WORD4(v31[0]) = 0;
  sub_100012894(&qword_1004D04F0);
  swift_allocObject();
  v1[32] = PublishedValue.init(wrappedValue:)();
  *(void *)&v31[0] = &_swiftEmptySetSingleton;
  sub_100012894(&qword_1004D04F8);
  swift_allocObject();
  v1[33] = PublishedValue.init(wrappedValue:)();
  LOWORD(v31[0]) = 0;
  BYTE2(v31[0]) = 0;
  sub_100012894(&qword_1004D0500);
  swift_allocObject();
  v1[34] = PublishedValue.init(wrappedValue:)();
  memset(v31, 0, 32);
  LOBYTE(v31[2]) = 1;
  sub_100012894(&qword_1004D0508);
  swift_allocObject();
  v1[35] = PublishedValue.init(wrappedValue:)();
  *(void *)&v31[0] = &_swiftEmptySetSingleton;
  sub_100012894(&qword_1004D0510);
  swift_allocObject();
  v1[36] = PublishedValue.init(wrappedValue:)();
  swift_unknownObjectWeakInit();
  sub_1001BCC04((uint64_t)&v30, (uint64_t)v31);
  sub_1001BCC60((uint64_t)v31, (uint64_t)&v30);
  sub_100012894(&qword_1004D0518);
  swift_allocObject();
  uint64_t v25 = PublishedValue.init(wrappedValue:)();
  sub_1001BCCBC((uint64_t)v31);
  v1[37] = v25;
  return v1;
}

uint64_t sub_1001BC950()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1001BCA88()
{
  sub_1001BC950();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for State()
{
  return self;
}

uint64_t sub_1001BCAE0()
{
  if (qword_1004C2E30 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_1001BCB3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001BCBA4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001BCC04(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001BCC60(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001BCCBC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001BCD10()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1001BCD60(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + qword_1004D0520);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1001BCDB4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1001BCE10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_1004D0528;
  swift_beginAccess();
  return sub_10002EFD0(v3, a1);
}

uint64_t sub_1001BCE64(uint64_t a1)
{
  uint64_t v3 = v1 + qword_1004D0528;
  swift_beginAccess();
  sub_10002EF68(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1001BCEC0())()
{
  return j__swift_endAccess;
}

void sub_1001BCF1C()
{
}

id sub_1001BCF78(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[qword_1004D0520] = _swiftEmptyArrayStorage;
  id v9 = &v4[qword_1004D0528];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for StateObservingView();
  id v10 = [super initWithFrame:a1, a2, a3, a4];
  swift_getWitnessTable();
  StateObserving.setup()();

  return v10;
}

id sub_1001BD08C(double a1, double a2, double a3, double a4)
{
  return sub_1001BCF78(a1, a2, a3, a4);
}

void sub_1001BD0B0()
{
  *(void *)&v0[qword_1004D0520] = _swiftEmptyArrayStorage;
  uint64_t v1 = &v0[qword_1004D0528];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1001BD13C()
{
}

void sub_1001BD160(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1001BD3C0();
}

id sub_1001BD188()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateObservingView();
  return [super dealloc];
}

uint64_t sub_1001BD1FC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + qword_1004D0528;

  return sub_10002F0C4(v2);
}

uint64_t type metadata accessor for StateObservingView()
{
  return sub_10002F124();
}

uint64_t (*sub_1001BD268(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1001BCEC0();
  return sub_10002EDF4;
}

uint64_t sub_1001BD2C0()
{
  sub_1001BD378();

  return swift_bridgeObjectRetain();
}

uint64_t (*sub_1001BD2EC(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1001BCDB4();
  return sub_10002EDF4;
}

uint64_t sub_1001BD344()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB0))();
}

uint64_t sub_1001BD378()
{
  uint64_t v1 = v0 + qword_1004D0520;
  swift_beginAccess();
  return *(void *)v1;
}

void sub_1001BD3C0()
{
  *(void *)&v0[qword_1004D0520] = _swiftEmptyArrayStorage;
  uint64_t v1 = &v0[qword_1004D0528];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void *sub_1001BD44C(double a1, double a2, double a3, double a4)
{
  v23.receiver = v4;
  v23.super_class = (Class)swift_getObjectType();
  id v9 = [super initWithFrame:a1, a2, a3, a4];
  NSString v10 = String._bridgeToObjectiveC()();
  [v9 setTitle:v10 forState:0];

  NSString v11 = String._bridgeToObjectiveC()();
  [v9 setTitle:v11 forState:1];

  objc_super v12 = [v9 titleLabel];
  if (!v12) {
    goto LABEL_4;
  }
  unint64_t v13 = v12;
  if (qword_1004C3080 != -1) {
    goto LABEL_9;
  }
  while (1)
  {
    [v13 setFont:qword_1004F8890];

LABEL_4:
    uint64_t v14 = qword_1004C3088;
    uint64_t v15 = v9;
    if (v14 != -1) {
      swift_once();
    }
    [v15 setTitleColor:qword_1004F8898 forState:0];

    [v15 addTarget:v15 action:"stopRecording" forControlEvents:64];
    [v15 sizeToFit];
    id v16 = v15;
    [v16 bounds];
    CGRect v25 = CGRectInset(v24, -20.0, -20.0);
    [v16 setBounds:v25.origin.x, v25.origin.y, v25.size.width, v25.size.height];

    uint64_t v17 = self;
    id v9 = (void *)swift_allocObject();
    v9[2] = v16;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_1001BE06C;
    *(void *)(v18 + 24) = v9;
    v22[4] = sub_100039980;
    v22[5] = v18;
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 1107296256;
    v22[2] = sub_1000FA194;
    v22[3] = &unk_100492698;
    uint64_t v19 = _Block_copy(v22);
    unint64_t v13 = v16;
    swift_retain();
    swift_release();
    [(id)v17 performWithoutAnimation:v19];
    _Block_release(v19);
    LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v17 & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_9:
    swift_once();
  }
  id v20 = [self defaultCenter];
  [v20 addObserver:v13 selector:"updateForCurrentOrientation" name:UIDeviceOrientationDidChangeNotification object:0];
  swift_release();

  return v13;
}

void sub_1001BD7E8(void *a1)
{
  id v2 = [a1 superview];
  if (v2)
  {
    id v9 = v2;
    [v2 bounds];
    double Width = CGRectGetWidth(v11);
    [a1 bounds];
    double v4 = Width - CGRectGetWidth(v12);
    if (qword_1004C3090 != -1) {
      swift_once();
    }
    double v5 = v4 - (double)qword_1004F88A0;
    [v9 bounds];
    double Height = CGRectGetHeight(v13);
    [a1 bounds];
    double v7 = Height - CGRectGetHeight(v14);
    if (qword_1004C3098 != -1) {
      swift_once();
    }
    double v8 = v7 - (double)qword_1004F88A8;
    [a1 frame];
    [a1 setFrame:v5, v8];
  }
}

void sub_1001BD954()
{
  id v1 = [v0 superview];
  if (v1)
  {
    id v8 = v1;
    [v1 bounds];
    double Width = CGRectGetWidth(v10);
    [v0 bounds];
    double v3 = Width - CGRectGetWidth(v11);
    if (qword_1004C3090 != -1) {
      swift_once();
    }
    double v4 = v3 - (double)qword_1004F88A0;
    [v8 bounds];
    double Height = CGRectGetHeight(v12);
    [v0 bounds];
    double v6 = Height - CGRectGetHeight(v13);
    if (qword_1004C3098 != -1) {
      swift_once();
    }
    double v7 = v6 - (double)qword_1004F88A8;
    [v0 frame];
    [v0 setFrame:v4, v7];
  }
}

void sub_1001BDB88()
{
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setTitle:v1 forState:2];

  if (qword_1004C29D8 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1004F7FE8;
  if (qword_1004F7FE8)
  {
    uint64_t v3 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v4 = v2;
    swift_retain();
    sub_1001A9F64((uint64_t)sub_1001BE00C, v3);

    swift_release_n();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1001BDC7C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  double v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005536C();
  CGRect v10 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_1001BE014;
  void aBlock[5] = a1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100049AB4;
  aBlock[3] = &unk_100492620;
  CGRect v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100039B94();
  sub_100012894((uint64_t *)&unk_1004C68E0);
  sub_100039BEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1001BDEE4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    NSString v2 = String._bridgeToObjectiveC()();
    [v1 setTitle:v2 forState:2];
  }
}

uint64_t type metadata accessor for RecordingView()
{
  return self;
}

uint64_t sub_1001BDFD4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001BE00C()
{
  return sub_1001BDC7C(v0);
}

void sub_1001BE014()
{
}

uint64_t sub_1001BE01C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001BE02C()
{
  return swift_release();
}

uint64_t sub_1001BE034()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001BE06C()
{
  sub_1001BD7E8(*(void **)(v0 + 16));
}

uint64_t sub_1001BE074()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001BE08C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1001BE0DC(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + qword_1004D0640);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1001BE130())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1001BE18C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_1004D0648;
  swift_beginAccess();
  return sub_10002EFD0(v3, a1);
}

uint64_t sub_1001BE1E0(uint64_t a1)
{
  uint64_t v3 = v1 + qword_1004D0648;
  swift_beginAccess();
  sub_10002EF68(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1001BE23C())()
{
  return j__swift_endAccess;
}

id sub_1001BE298(void *a1)
{
  *(void *)&v1[qword_1004D0640] = _swiftEmptyArrayStorage;
  uint64_t v3 = &v1[qword_1004D0648];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for StateObservingViewController();
  [super initWithCoder:a1];
  id v5 = v4;
  if (v4)
  {
    id v6 = v4;
    swift_getWitnessTable();
    StateObserving.setup()();
  }
  return v5;
}

id sub_1001BE398(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1001BE298(a3);
}

void sub_1001BE3C0()
{
  *(void *)&v0[qword_1004D0640] = _swiftEmptyArrayStorage;
  uint64_t v1 = &v0[qword_1004D0648];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1001BE44C()
{
}

void sub_1001BE470()
{
}

void sub_1001BE4CC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = a4;

  sub_1001BE7B0();
}

id sub_1001BE540()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateObservingViewController();
  return [super dealloc];
}

uint64_t sub_1001BE5B4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + qword_1004D0648;

  return sub_10002F0C4(v2);
}

uint64_t type metadata accessor for StateObservingViewController()
{
  return sub_10002F124();
}

uint64_t sub_1001BE618@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 112))();
  *a1 = result;
  return result;
}

uint64_t (*sub_1001BE658(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1001BE23C();
  return sub_10002EDF4;
}

uint64_t sub_1001BE6B0()
{
  sub_1001BE768();

  return swift_bridgeObjectRetain();
}

uint64_t (*sub_1001BE6DC(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1001BE130();
  return sub_10002EDF4;
}

uint64_t sub_1001BE734()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB0))();
}

uint64_t sub_1001BE768()
{
  uint64_t v1 = v0 + qword_1004D0640;
  swift_beginAccess();
  return *(void *)v1;
}

void sub_1001BE7B0()
{
}

id sub_1001BE7E4()
{
  if (qword_1004C2D70 != -1) {
    swift_once();
  }
  id result = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:xmmword_1004F8590];
  qword_1004D0738 = (uint64_t)result;
  return result;
}

id sub_1001BE864()
{
  if (qword_1004C2D78 != -1) {
    swift_once();
  }
  id result = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:xmmword_1004F85A0];
  qword_1004D0740 = (uint64_t)result;
  return result;
}

uint64_t sub_1001BE8E4()
{
  if (qword_1004C2E38 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1004D0738;
  v4[4] = sub_1001BE7E0;
  v4[5] = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_1001FD168;
  v4[3] = &unk_100492778;
  uint64_t v1 = _Block_copy(v4);
  swift_release();
  id v2 = [v0 imageWithActions:v1];
  _Block_release(v1);
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result) {
    __break(1u);
  }
  else {
    qword_1004D0748 = (uint64_t)v2;
  }
  return result;
}

void sub_1001BEA04(void *a1)
{
  id v27 = a1;
  uint64_t v1 = type metadata accessor for Locale();
  __chkstk_darwin(v1 - 8);
  double v31 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v3 - 8);
  uint64_t v30 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v33 = sub_1001BF0AC(0, 0);
  unint64_t v32 = sub_1001BF0AC(2, 0);
  uint64_t v8 = 1;
  uint64_t v28 = v7;
  uint64_t v29 = (char *)&type metadata for Any + 8;
  while (1)
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v9._uint64_t countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v9);
    if (qword_1004C2D28 != -1) {
      swift_once();
    }
    if ((unsigned __int128)(v8 * (__int128)qword_1004F8540) >> 64 != (v8 * qword_1004F8540) >> 63) {
      break;
    }
    uint64_t v34 = v8 * qword_1004F8540;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    v10._uint64_t countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v10);
    String.LocalizationValue.init(stringInterpolation:)();
    static Locale.current.getter();
    String.init(localized:table:bundle:locale:comment:)();
    sub_1001BF2B4(v8 - 1, 1);
    double v12 = v11;
    double v14 = v13;
    sub_1001BF2B4(v8 - 1, 0);
    double v16 = v15;
    double v18 = v17;
    NSString v19 = String._bridgeToObjectiveC()();
    if (qword_1004C2D68 != -1) {
      swift_once();
    }
    long long v20 = xmmword_1004F8580;
    sub_100026EB0(v33);
    type metadata accessor for Key(0);
    sub_1001BF75C((unint64_t *)&qword_1004C39E0, type metadata accessor for Key);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v19 drawWithRect:0 options:isa attributes:0 context:v12 v14 v20];

    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    long long v23 = xmmword_1004F8580;
    sub_100026EB0(v32);
    Class v24 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v22 drawWithRect:0 options:v24 context:v16];

    if (++v8 == 101)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v25 = [self redColor];
      [v25 setStroke];

      [v27 strokeRect:0.0, 0.0, 1.0, 1.0];
      return;
    }
  }
  __break(1u);
}

void sub_1001BEE60()
{
  if (qword_1004C2D78 != -1) {
    swift_once();
  }
  long long v0 = xmmword_1004F85A0;
  NSString v1 = String._bridgeToObjectiveC()();
  if (qword_1004C2D80 != -1) {
    swift_once();
  }
  double v2 = *((double *)&v0 + 1) * 0.5 - *(double *)&qword_1004F85B0;
  unint64_t v3 = sub_1001BF0AC(0, 1);
  sub_100026EB0(v3);
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1001BF75C((unint64_t *)&qword_1004C39E0, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 drawWithRect:0 options:isa attributes:0 context:0.0 v2 *(double *)&v0 *((double *)&v0 + 1) * 0.5];

  id v8 = String._bridgeToObjectiveC()();
  double v5 = *((double *)&v0 + 1) * 0.5 + *((double *)&v0 + 1) * 0.5 - *(double *)&qword_1004F85B0;
  unint64_t v6 = sub_1001BF0AC(2, 1);
  sub_100026EB0(v6);
  swift_bridgeObjectRelease();
  Class v7 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v8 drawWithRect:0 options:v7 attributes:0 context:0.0 v5 * *(double *)&v0 * *((double *)&v0 + 1) * 0.5];
}

unint64_t sub_1001BF0AC(uint64_t a1, char a2)
{
  id v4 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  [v4 setAlignment:a1];
  sub_100012894(&qword_1004D0750);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1003F8B70;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v6 = qword_1004C2D50;
  Class v7 = NSFontAttributeName;
  if (v6 != -1) {
    swift_once();
  }
  id v8 = (void *)qword_1004F8560;
  *(void *)(inited + 40) = qword_1004F8560;
  *(void *)(inited + 48) = NSParagraphStyleAttributeName;
  *(void *)(inited + 56) = v4;
  *(void *)(inited + 64) = NSForegroundColorAttributeName;
  uint64_t v9 = qword_1004C2D58;
  id v10 = v8;
  double v11 = NSParagraphStyleAttributeName;
  id v12 = v4;
  double v13 = NSForegroundColorAttributeName;
  if (v9 != -1) {
    swift_once();
  }
  double v14 = (void *)qword_1004F8568;
  *(void *)(inited + 72) = qword_1004F8568;
  id v15 = v14;
  unint64_t v16 = sub_1000E1CF0(inited);
  if (a2)
  {
    sub_1001BF274();
    double v17 = NSBaselineOffsetAttributeName;
    Class isa = NSNumber.init(floatLiteral:)(12.5).super.super.isa;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1000D6464((uint64_t)isa, v17, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
  }
  else
  {
  }
  return v16;
}

unint64_t sub_1001BF274()
{
  unint64_t result = qword_1004D0F00;
  if (!qword_1004D0F00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1004D0F00);
  }
  return result;
}

uint64_t sub_1001BF2B4(uint64_t result, char a2)
{
  if (result > 99) {
    goto LABEL_29;
  }
  uint64_t v3 = result % 10;
  uint64_t v4 = result - result % 10;
  if (__OFSUB__(result, result % 10))
  {
    __break(1u);
  }
  else
  {
    char v2 = a2;
    if (qword_1004C2D68 == -1) {
      goto LABEL_4;
    }
  }
  unint64_t result = swift_once();
LABEL_4:
  if ((~*((void *)&xmmword_1004F8580 + 1) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (*((double *)&xmmword_1004F8580 + 1) <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (*((double *)&xmmword_1004F8580 + 1) >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if ((~(void)xmmword_1004F8580 & 0x7FF0000000000000) == 0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (*(double *)&xmmword_1004F8580 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (*(double *)&xmmword_1004F8580 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = (uint64_t)*((double *)&xmmword_1004F8580 + 1);
  uint64_t v6 = 73;
  if (v2) {
    uint64_t v6 = -3;
  }
  BOOL v7 = __OFADD__(v5, v6);
  uint64_t v8 = v5 + v6;
  if (v7) {
    goto LABEL_25;
  }
  if ((unsigned __int128)(v3 * (__int128)(uint64_t)*(double *)&xmmword_1004F8580) >> 64 != (v3
                                                                                          * (uint64_t)*(double *)&xmmword_1004F8580) >> 63)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v9 = 2 * (v4 / 10);
  if ((unsigned __int128)(v9 * (__int128)v5) >> 64 != (v9 * v5) >> 63)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (__OFADD__(v9 * v5, v8))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    unint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001BF48C(void *a1)
{
  if (qword_1004C2E48 != -1) {
    swift_once();
  }
  char v2 = (CGImage *)[(id)qword_1004D0748 CGImage];
  if (!v2) {
    goto LABEL_17;
  }
  uint64_t v3 = v2;
  uint64_t v4 = CGImageGetColorSpace(v2);
  CGColorSpaceRef v5 = CGColorSpaceCreateWithName(kCGColorSpaceSRGB);
  CGColorSpaceRef v6 = v5;
  if (v4)
  {
    if (!v5)
    {
LABEL_14:
      CGColorSpaceRef v6 = v4;
      goto LABEL_15;
    }
    type metadata accessor for CGColorSpace(0);
    sub_1001BF75C(&qword_1004D0758, type metadata accessor for CGColorSpace);
    BOOL v7 = v4;
    char v8 = static _CFObject.== infix(_:_:)();

    if ((v8 & 1) == 0) {
      goto LABEL_16;
    }
LABEL_9:
    id v9 = [a1 device];
    if (!v9) {
      goto LABEL_17;
    }
    id v10 = [objc_allocWithZone((Class)MTKTextureLoader) initWithDevice:v9];
    id v15 = 0;
    id v11 = [v10 newTextureWithCGImage:v3 options:0 error:&v15];
    if (v11)
    {
      id v12 = v11;
      id v13 = v15;

      swift_unknownObjectRelease();
      return (uint64_t)v12;
    }
    uint64_t v4 = (CGColorSpace *)v15;
    uint64_t v3 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
    goto LABEL_14;
  }
  if (!v5) {
    goto LABEL_9;
  }
LABEL_15:

  uint64_t v3 = v6;
LABEL_16:

LABEL_17:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001BF75C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001BF7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001BF7B4()
{
  return swift_release();
}

BOOL AppDependencyType.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100485D18, v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

unint64_t AppDependencyType.rawValue.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1001BF824()
{
  unint64_t result = qword_1004D0760;
  if (!qword_1004D0760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004D0760);
  }
  return result;
}

Swift::Int sub_1001BF878()
{
  return Hasher._finalize()();
}

uint64_t sub_1001BF8D0()
{
  return String.hash(into:)();
}

Swift::Int sub_1001BF8EC()
{
  return Hasher._finalize()();
}

uint64_t sub_1001BF940@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100485D50, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3 != 0;
  return result;
}

void sub_1001BF994(void *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x800000010041DA90;
}

uint64_t getEnumTagSinglePayload for AppDependencyType(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for AppDependencyType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001BFAA4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppDependencyType()
{
  return &type metadata for AppDependencyType;
}

uint64_t sub_1001BFADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10002B918(a1, a2);
}

void sub_1001BFAE4(uint64_t a1)
{
  switch(a1)
  {
    case 2:
      double v2 = 3.14159265;
      break;
    case 4:
      double v2 = -*(double *)CGFloat.piDiv2.unsafeMutableAddressor();
      break;
    case 3:
      double v2 = *(double *)CGFloat.piDiv2.unsafeMutableAddressor();
      break;
    default:
      double v2 = 0.0;
      break;
  }
  CGAffineTransformMakeRotation((CGAffineTransform *)&aBlock, v2);
  *(_OWORD *)&m.a = *(_OWORD *)&aBlock.m11;
  *(_OWORD *)&m.c = *(_OWORD *)&aBlock.m13;
  *(_OWORD *)&m.tCGFloat x = *(_OWORD *)&aBlock.m21;
  CATransform3DMakeAffineTransform(&aBlock, &m);
  long long v23 = *(_OWORD *)&aBlock.m13;
  long long v24 = *(_OWORD *)&aBlock.m11;
  long long v21 = *(_OWORD *)&aBlock.m23;
  long long v22 = *(_OWORD *)&aBlock.m21;
  long long v19 = *(_OWORD *)&aBlock.m33;
  long long v20 = *(_OWORD *)&aBlock.m31;
  long long v18 = *(_OWORD *)&aBlock.m41;
  CGFloat m43 = aBlock.m43;
  CGFloat m44 = aBlock.m44;
  double v5 = sub_1001BFCFC();
  uint64_t v7 = v6;
  double v8 = sub_10002F55C();
  uint64_t v10 = v9;
  double v11 = sub_10002F358();
  uint64_t v13 = v12;
  double v14 = self;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v1;
  *(_OWORD *)(v15 + 24) = v24;
  *(_OWORD *)(v15 + 40) = v23;
  *(_OWORD *)(v15 + 56) = v22;
  *(_OWORD *)(v15 + 72) = v21;
  *(_OWORD *)(v15 + 88) = v20;
  *(_OWORD *)(v15 + 104) = v19;
  *(_OWORD *)(v15 + 120) = v18;
  *(CGFloat *)(v15 + 136) = m43;
  *(CGFloat *)(v15 + 144) = m44;
  *(double *)(v15 + 152) = v5;
  *(void *)(v15 + 160) = v7;
  *(double *)(v15 + 168) = v8;
  *(void *)(v15 + 176) = v10;
  *(double *)(v15 + 184) = v11;
  *(void *)(v15 + 192) = v13;
  *(void *)&aBlock.CGFloat m21 = sub_1001C1230;
  *(void *)&aBlock.CGFloat m22 = v15;
  *(void *)&aBlock.CGFloat m11 = _NSConcreteStackBlock;
  *(void *)&aBlock.CGFloat m12 = 1107296256;
  *(void *)&aBlock.CGFloat m13 = sub_100049AB4;
  *(void *)&aBlock.CGFloat m14 = &unk_100492880;
  unint64_t v16 = _Block_copy(&aBlock);
  id v17 = v1;
  swift_release();
  [v14 animateWithDuration:0 delay:v16 options:0 animations:0.25 completion:0.25];
  _Block_release(v16);
}

double sub_1001BFCFC()
{
  NSString v1 = *(void **)&v0[qword_1004C7A50];
  if (!v1) {
    return 0.0;
  }
  double v2 = self;
  id v3 = v1;
  id v4 = [v2 sharedApplication];
  id v5 = [v4 userInterfaceLayoutDirection];

  if (v5 == (id)1)
  {
    [v0 frame];
    double v7 = v6;
    [v3 frame];
    double v8 = v7 - CGRectGetWidth(v11);
    if (qword_1004C2E80 != -1) {
      swift_once();
    }
    double v9 = v8 - *(double *)&qword_1004F8660;
  }
  else
  {
    if (qword_1004C2E80 != -1) {
      swift_once();
    }
    double v9 = *(double *)&qword_1004F8660;
  }
  [v0 frame];
  CGRectGetHeight(v12);
  if (qword_1004C2E70 != -1) {
    swift_once();
  }
  [v3 frame];
  CGRectGetHeight(v13);

  return v9;
}

void sub_1001BFEB8(uint64_t a1, uint64_t *a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v45 = a2[2];
  uint64_t v43 = *a2;
  uint64_t v44 = a2[3];
  uint64_t v41 = a2[1];
  uint64_t v42 = a2[4];
  uint64_t v39 = a2[6];
  uint64_t v40 = a2[5];
  uint64_t v9 = a2[8];
  uint64_t v38 = a2[7];
  uint64_t v11 = a2[9];
  uint64_t v10 = a2[10];
  uint64_t v12 = a2[11];
  uint64_t v13 = a2[12];
  uint64_t v14 = a2[13];
  uint64_t v15 = a2[14];
  uint64_t v16 = a2[15];
  uint64_t v17 = qword_1004C7A50;
  long long v18 = *(void **)(a1 + qword_1004C7A50);
  if (v18)
  {
    id v19 = [v18 layer];
    uint64_t v46 = v43;
    uint64_t v47 = v41;
    uint64_t v48 = v45;
    uint64_t v49 = v44;
    uint64_t v50 = v42;
    uint64_t v51 = v40;
    uint64_t v52 = v39;
    uint64_t v53 = v38;
    uint64_t v54 = v9;
    uint64_t v55 = v11;
    uint64_t v56 = v10;
    uint64_t v57 = v12;
    uint64_t v58 = v13;
    uint64_t v59 = v14;
    uint64_t v60 = v15;
    uint64_t v61 = v16;
    [v19 setTransform:&v46];
  }
  uint64_t v20 = qword_1004C7A58;
  long long v21 = *(void **)(a1 + qword_1004C7A58);
  if (v21)
  {
    id v22 = [v21 layer];
    uint64_t v46 = v43;
    uint64_t v47 = v41;
    uint64_t v48 = v45;
    uint64_t v49 = v44;
    uint64_t v50 = v42;
    uint64_t v51 = v40;
    uint64_t v52 = v39;
    uint64_t v53 = v38;
    uint64_t v54 = v9;
    uint64_t v55 = v11;
    uint64_t v56 = v10;
    uint64_t v57 = v12;
    uint64_t v58 = v13;
    uint64_t v59 = v14;
    uint64_t v60 = v15;
    uint64_t v61 = v16;
    [v22 setTransform:&v46];
  }
  uint64_t v23 = qword_1004C7A60;
  long long v24 = *(void **)(a1 + qword_1004C7A60);
  if (v24)
  {
    id v25 = [v24 layer];
    uint64_t v46 = v43;
    uint64_t v47 = v41;
    uint64_t v48 = v45;
    uint64_t v49 = v44;
    uint64_t v50 = v42;
    uint64_t v51 = v40;
    uint64_t v52 = v39;
    uint64_t v53 = v38;
    uint64_t v54 = v9;
    uint64_t v55 = v11;
    uint64_t v56 = v10;
    uint64_t v57 = v12;
    uint64_t v58 = v13;
    uint64_t v59 = v14;
    uint64_t v60 = v15;
    uint64_t v61 = v16;
    [v25 setTransform:&v46];
  }
  uint64_t v26 = *(void **)(a1 + v17);
  if (v26)
  {
    id v27 = v26;
    [v27 frame];
    [v27 setFrame:a3, a4];
  }
  uint64_t v28 = *(void **)(a1 + v20);
  if (v28)
  {
    id v29 = v28;
    [v29 frame];
    [v29 setFrame:a5, a6];
  }
  uint64_t v30 = *(void **)(a1 + v23);
  if (v30)
  {
    id v31 = v30;
    [v31 frame];
    [v31 setFrame:a7, a8];
  }
}